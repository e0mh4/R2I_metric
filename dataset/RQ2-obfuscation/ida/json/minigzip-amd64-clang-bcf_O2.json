{
    "binaryInfo": {
        "binaryName": "minigzip-amd64-clang-bcf_O2",
        "isStripped": "True"
    },
    "buildInfo": {
        "decompilerName": "IDA Pro",
        "compilerName": "gcc",
        "compilerVersion": "9.4.0",
        "Optlevel": "-O"
    },
    "funcInfo": [
        {
            "funcName": "_dl_relocate_static_pie",
            "funcStartAddr": "0x4011a0",
            "funcEndAddr": "0x4011a5",
            "decompiledFuncCode": "void dl_relocate_static_pie()\n{\n  ;\n}\n"
        },
        {
            "funcName": "error",
            "funcStartAddr": "0x401260",
            "funcEndAddr": "0x401288",
            "decompiledFuncCode": "void __fastcall __noreturn error(const char *msg)\n{\n  fprintf(stderr, \"%s: %s\\n\", prog, msg);\n  exit(1);\n}\n"
        },
        {
            "funcName": "gz_compress",
            "funcStartAddr": "0x401290",
            "funcEndAddr": "0x40139b",
            "decompiledFuncCode": "void __fastcall gz_compress(FILE *in, gzFile out)\n{\n  unsigned int v2; // ebx\n  const char *v3; // rax\n  char v4[4]; // [rsp+Ch] [rbp-402Ch] BYREF\n  char ptr[16424]; // [rsp+10h] [rbp-4028h] BYREF\n\n  while ( 1 )\n  {\n    if ( y_23 >= 10 && (((_BYTE)x_22 * ((_BYTE)x_22 - 1)) & 1) != 0 )\nLABEL_5:\n      fread(ptr, 1uLL, 0x4000uLL, in);\n    v2 = fread(ptr, 1uLL, 0x4000uLL, in);\n    if ( y_23 >= 10 && (((_BYTE)x_22 * ((_BYTE)x_22 - 1)) & 1) != 0 )\n      goto LABEL_5;\n    if ( ferror(in) )\n    {\n      perror(\"fread\");\n      exit(1);\n    }\n    if ( !v2 )\n      break;\n    if ( (unsigned int)gzwrite(out, ptr, v2) != v2 )\n    {\n      v3 = (const char *)gzerror(out, v4);\n      error(v3);\n    }\n  }\n  fclose(in);\n  if ( (unsigned int)gzclose(out) )\n    error(\"failed gzclose\");\n}\n"
        },
        {
            "funcName": "gz_uncompress",
            "funcStartAddr": "0x4013a0",
            "funcEndAddr": "0x4014d8",
            "decompiledFuncCode": "void __fastcall gz_uncompress(gzFile in, FILE *out)\n{\n  __int64 v2; // rax\n  int v3; // r13d\n  const char *v4; // rax\n  _QWORD v5[6]; // [rsp-8h] [rbp-30h] BYREF\n\n  v5[0] = v2;\n  while ( (((_BYTE)x_24 * ((_BYTE)x_24 - 1)) & 1) != 0 && y_25 >= 10 )\n    ;\n  while ( 1 )\n  {\n    v3 = gzread(in, &v5[-2048], 0x4000LL);\n    if ( v3 < 0 )\n    {\n      v4 = (const char *)gzerror(in, &v5[-2]);\n      error(v4);\n    }\n    if ( y_25 >= 10 && (((_BYTE)x_24 * ((_BYTE)x_24 - 1)) & 1) != 0 )\n    {\n      while ( 1 )\n        ;\n    }\n    if ( !v3 )\n      break;\n    if ( (unsigned int)fwrite(&v5[-2048], 1uLL, (unsigned int)v3, out) != v3 )\n      error(\"failed fwrite\");\n  }\n  if ( fclose(out) )\n    error(\"failed fclose\");\n  if ( (unsigned int)gzclose(in) )\n    error(\"failed gzclose\");\n  if ( y_25 >= 10 && (((_BYTE)x_24 * ((_BYTE)x_24 - 1)) & 1) != 0 )\n  {\n    while ( 1 )\n      ;\n  }\n}\n"
        },
        {
            "funcName": "file_compress",
            "funcStartAddr": "0x4014e0",
            "funcEndAddr": "0x401614",
            "decompiledFuncCode": "void __fastcall file_compress(char *file, char *mode)\n{\n  FILE *v2; // r15\n  gzFile_s *v3; // rbx\n  char v4[1048]; // [rsp+0h] [rbp-418h] BYREF\n\n  if ( strlen(file) + 3 >= 0x400 )\n  {\n    fprintf(stderr, \"%s: filename too long\\n\", prog);\n    exit(1);\n  }\n  snprintf(v4, 0x400uLL, \"%s%s\", file, \".gz\");\n  v2 = fopen(file, \"rb\");\n  if ( !v2 )\n  {\n    perror(file);\n    exit(1);\n  }\n  v3 = (gzFile_s *)gzopen(v4, mode);\n  if ( !v3 )\n  {\n    fprintf(stderr, \"%s: can't gzopen %s\\n\", prog, v4);\n    exit(1);\n  }\n  if ( (((_BYTE)x_26 * ((_BYTE)x_26 - 1)) & 1) != 0 && y_27 > 9 )\n    goto LABEL_12;\n  while ( 1 )\n  {\n    gz_compress(v2, v3);\n    unlink(file);\n    if ( y_27 < 10 || (((_BYTE)x_26 * ((_BYTE)x_26 - 1)) & 1) == 0 )\n      break;\nLABEL_12:\n    gz_compress(v2, v3);\n    unlink(file);\n  }\n}\n"
        },
        {
            "funcName": "file_uncompress",
            "funcStartAddr": "0x401620",
            "funcEndAddr": "0x4017cc",
            "decompiledFuncCode": "void __fastcall file_uncompress(char *file)\n{\n  size_t v1; // rbx\n  char *v2; // r15\n  char *v3; // r13\n  gzFile_s *v4; // r12\n  FILE *v5; // rbx\n  char v6[3]; // [rsp+1h] [rbp-42Bh]\n  char s[1064]; // [rsp+4h] [rbp-428h] BYREF\n\n  v1 = strlen(file);\n  if ( v1 + 3 >= 0x400 )\n  {\n    fprintf(stderr, \"%s: filename too long\\n\", prog);\n    exit(1);\n  }\n  v2 = s;\n  snprintf(s, 0x400uLL, \"%s\", file);\n  if ( v1 < 4 )\n    goto LABEL_7;\n  if ( y_29 >= 10 && (((_BYTE)x_28 * ((_BYTE)x_28 - 1)) & 1) != 0 )\n  {\n    while ( 1 )\n      ;\n  }\n  if ( !strcmp(&file[v1 - 3], \".gz\") )\n  {\n    v3 = s;\n    v6[v1] = 0;\n    v2 = file;\n  }\n  else\n  {\nLABEL_7:\n    snprintf(&s[v1], 1024 - v1, \"%s\", \".gz\");\n    v3 = file;\n  }\n  v4 = (gzFile_s *)gzopen(v2, \"rb\");\n  if ( !v4 )\n  {\n    fprintf(stderr, \"%s: can't gzopen %s\\n\", prog, v2);\n    exit(1);\n  }\n  v5 = fopen(v3, \"wb\");\n  if ( !v5 )\n  {\n    perror(file);\n    exit(1);\n  }\n  if ( (((_BYTE)x_28 * ((_BYTE)x_28 - 1)) & 1) != 0 && y_29 > 9 )\n    goto LABEL_19;\n  while ( 1 )\n  {\n    gz_uncompress(v4, v5);\n    unlink(v2);\n    if ( y_29 < 10 || (((_BYTE)x_28 * ((_BYTE)x_28 - 1)) & 1) == 0 )\n      break;\nLABEL_19:\n    gz_uncompress(v4, v5);\n    unlink(v2);\n  }\n}\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x4017d0",
            "funcEndAddr": "0x401e1d",
            "decompiledFuncCode": "// local variable allocation has failed, the output may be wrong!\nint __cdecl main(int argc, const char **argv, const char **envp)\n{\n  char *v3; // r12\n  const char *v4; // rbx\n  char *v5; // rax\n  __int64 v6; // r15\n  const char *v7; // r13\n  int v8; // r13d\n  const char **v9; // r14\n  const char **v10; // r12\n  int v11; // r15d\n  const char *v12; // rbx\n  int v13; // ecx\n  char *v14; // rbx\n  gzFile_s *v15; // rax\n  char *v16; // rdi\n  FILE *v17; // r15\n  unsigned int v18; // eax\n  gzFile_s *v19; // rbx\n  unsigned int v20; // eax\n  unsigned int v21; // eax\n  gzFile_s *v22; // rax\n  unsigned int v23; // eax\n  unsigned int v24; // eax\n  gzFile_s *v25; // rbx\n  __int64 v27; // [rsp+0h] [rbp-50h] BYREF\n  int v28; // [rsp+8h] [rbp-48h]\n  int v29; // [rsp+Ch] [rbp-44h]\n  __int64 v30; // [rsp+10h] [rbp-40h]\n  _BOOL4 v31; // [rsp+18h] [rbp-38h]\n  _BOOL4 v32; // [rsp+1Ch] [rbp-34h]\n  __int64 *argca; // [rsp+20h] [rbp-30h]\n\n  argca = *(__int64 **)&argc;\n  if ( y_31 >= 10 && (((_BYTE)x_30 * ((_BYTE)x_30 - 1)) & 1) != 0 )\n    goto LABEL_5;\n  while ( 1 )\n  {\n    v3 = (char *)(&v27 - 4);\n    v31 = 0;\n    snprintf((char *)&v27 - 32, 0x14uLL, \"%s\", \"wb6 \");\n    prog = (char *)*argv;\n    v4 = *argv;\n    v5 = strrchr(*argv, 47);\n    v6 = (unsigned int)x_30;\n    v29 = y_31;\n    if ( y_31 < 10 || (((_BYTE)x_30 * ((_BYTE)x_30 - 1)) & 1) == 0 )\n      break;\nLABEL_5:\n    snprintf((char *)&v27 - 32, 0x14uLL, \"%s\", \"wb6 \");\n    prog = (char *)*argv;\n  }\n  v28 = x_30 * (x_30 - 1);\n  v7 = v5 + 1;\n  if ( !v5 )\n    v7 = v4;\n  if ( !strcmp(v7, \"gunzip\") )\n  {\n    v32 = 1;\n  }\n  else\n  {\n    v31 = strcmp(v7, \"zcat\") == 0;\n    v32 = v31;\n  }\n  v8 = (_DWORD)argca - 1;\n  v9 = argv + 1;\n  if ( (int)argca >= 2 )\n  {\n    v30 = v6;\n    argca = &v27 - 4;\nLABEL_13:\n    while ( 2 )\n    {\n      v10 = v9;\n      while ( 1 )\n      {\n        v11 = v8;\n        v12 = *v10;\n        if ( !strcmp(*v10, \"-c\") )\n        {\n          --v8;\n          v9 = v10 + 1;\n          v31 = 1;\n          if ( v11 >= 2 )\n            goto LABEL_13;\n          ++v10;\n          --v11;\n          v31 = 1;\n          goto LABEL_32;\n        }\n        if ( !strcmp(v12, \"-d\") )\n          break;\n        if ( !strcmp(v12, \"-f\") )\n        {\n          *((_BYTE *)argca + 3) = 102;\n        }\n        else if ( !strcmp(v12, \"-h\") )\n        {\n          *((_BYTE *)argca + 3) = 104;\n        }\n        else if ( !strcmp(v12, \"-r\") )\n        {\n          *((_BYTE *)argca + 3) = 82;\n        }\n        else\n        {\n          if ( *v12 != 45 || (unsigned __int8)(v12[1] - 49) > 8u || v12[2] )\n            goto LABEL_32;\n          *((_BYTE *)argca + 2) = v12[1];\n        }\n        --v8;\n        ++v10;\n        if ( v11 <= 1 )\n          goto LABEL_33;\n      }\n      --v8;\n      v9 = v10 + 1;\n      v32 = 1;\n      if ( v11 >= 2 )\n        continue;\n      break;\n    }\n    ++v10;\n    --v11;\n    v32 = 1;\nLABEL_32:\n    v8 = v11;\nLABEL_33:\n    v9 = v10;\n    v3 = (char *)argca;\n    LOBYTE(v6) = v30;\n  }\n  if ( v3[3] == 32 )\n  {\n    while ( (v28 & 1) != 0 && v29 >= 10 )\n      ;\n    v3[3] = 0;\n  }\n  if ( v8 )\n  {\n    v13 = v29;\n    while ( 1 )\n    {\n      if ( v32 )\n      {\n        v14 = (char *)*v9;\n        if ( !v31 )\n        {\n          if ( v13 >= 10 && (((_BYTE)v6 * ((_BYTE)v6 - 1)) & 1) != 0 )\n            goto LABEL_67;\n          while ( 1 )\n          {\n            file_uncompress(v14);\n            if ( y_31 < 10 || (((_BYTE)x_30 * ((_BYTE)x_30 - 1)) & 1) == 0 )\n              goto LABEL_71;\nLABEL_67:\n            file_uncompress(v14);\n          }\n        }\n        v15 = (gzFile_s *)gzopen(*v9, \"rb\");\n        if ( v15 )\n          gz_uncompress(v15, stdout);\n        else\n          fprintf(stderr, \"%s: can't gzopen %s\\n\", prog, *v9);\n      }\n      else\n      {\n        if ( v13 >= 10 && (((_BYTE)v6 * ((_BYTE)v6 - 1)) & 1) != 0 )\n        {\n          while ( 1 )\n            ;\n        }\n        v16 = (char *)*v9;\n        if ( v31 )\n        {\n          v17 = fopen(v16, \"rb\");\n          if ( !v17 )\n          {\n            if ( y_31 >= 10 && (((_BYTE)x_30 * ((_BYTE)x_30 - 1)) & 1) != 0 )\n              goto LABEL_61;\n            while ( 1 )\n            {\n              perror(*v9);\n              if ( y_31 < 10 || (((_BYTE)x_30 * ((_BYTE)x_30 - 1)) & 1) == 0 )\n                goto LABEL_71;\nLABEL_61:\n              perror(*v9);\n            }\n          }\n          v18 = fileno(stdout);\n          v19 = (gzFile_s *)gzdopen(v18, v3);\n          if ( !v19 )\n            error(\"can't gzdopen stdout\");\n          if ( y_31 < 10 || (((_BYTE)x_30 * ((_BYTE)x_30 - 1)) & 1) == 0 )\n            goto LABEL_68;\n          while ( 1 )\n          {\n            gz_compress(v17, v19);\nLABEL_68:\n            gz_compress(v17, v19);\n            if ( y_31 < 10 || (((_BYTE)x_30 * ((_BYTE)x_30 - 1)) & 1) == 0 )\n              goto LABEL_71;\n          }\n        }\n        while ( 1 )\n        {\n          file_compress(v16, v3);\n          if ( y_31 < 10 || (((_BYTE)x_30 * ((_BYTE)x_30 - 1)) & 1) == 0 )\n            break;\n          file_compress((char *)*v9, v3);\n          v16 = (char *)*v9;\n        }\n      }\nLABEL_71:\n      LOBYTE(v6) = x_30;\n      v13 = y_31;\n      if ( y_31 >= 10 && (((_BYTE)x_30 * ((_BYTE)x_30 - 1)) & 1) != 0 )\n      {\n        while ( 1 )\n          ;\n      }\n      ++v9;\n      if ( !--v8 )\n        return 0;\n    }\n  }\n  if ( v32 )\n  {\n    while ( 1 )\n    {\n      v21 = fileno(stdin);\n      v22 = (gzFile_s *)gzdopen(v21, \"rb\");\n      if ( y_31 < 10 || (((_BYTE)x_30 * ((_BYTE)x_30 - 1)) & 1) == 0 )\n        break;\n      v20 = fileno(stdin);\n      gzdopen(v20, \"rb\");\n    }\n    if ( !v22 )\n      error(\"can't gzdopen stdin\");\n    gz_uncompress(v22, stdout);\n  }\n  else\n  {\n    while ( 1 )\n    {\n      v24 = fileno(stdout);\n      v25 = (gzFile_s *)gzdopen(v24, v3);\n      if ( y_31 < 10 || (((_BYTE)x_30 * ((_BYTE)x_30 - 1)) & 1) == 0 )\n        break;\n      v23 = fileno(stdout);\n      gzdopen(v23, v3);\n    }\n    if ( !v25 )\n      error(\"can't gzdopen stdout\");\n    while ( 1 )\n    {\n      gz_compress(stdin, v25);\n      if ( y_31 < 10 || (((_BYTE)x_30 * ((_BYTE)x_30 - 1)) & 1) == 0 )\n        break;\n      gz_compress(stdin, v25);\n    }\n  }\n  return 0;\n}\n"
        }
    ],
    "funcCount": 7
}