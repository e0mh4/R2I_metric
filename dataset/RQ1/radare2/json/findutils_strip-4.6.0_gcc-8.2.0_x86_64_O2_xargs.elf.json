{
    "binaryInfo": {
        "isStripped": true,
        "binaryName": "findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf"
    },
    "buildInfo": {
        "decompilerName": "radare2",
        "compilerName": "gcc",
        "compilerVersion": "9.4.0",
        "optLevel": "O"
    },
    "funcInfo": [
        {
            "funcName": "main",
            "funcStartAddr": "0x402030",
            "funcEndAddr": "0x402dd4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x402030 */\n#include <stdint.h>\n \nint32_t main (char ** format, int64_t arg_18h, int64_t arg_2ch, int32_t argc, char ** argv) {\n    uint32_t var_8h;\n    uint32_t var_ch;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_2ch;\n    char ** var_33h;\n    int64_t var_37h;\n    int64_t var_38h;\n    char * * endptr;\n    int64_t var_48h;\n    int64_t var_c8h;\n    rdi = argc;\n    rsi = argv;\n    rbx = rsi;\n    rdi = *(rsi);\n    *((rsp + 0x33)) = 0x6f686365;\n    *((rsp + 0x37)) = 0;\n    if (rdi == 0) {\n        goto label_22;\n    }\nlabel_4:\n    fcn_004075c0 (rdi);\n    fcn_004053a0 ();\n    eax = getpid ();\n    *(0x006123c4) = 0;\n    *(0x006123d0) = eax;\n    setlocale (6, 0x40f2d5);\n    bindtextdomain (0x40d94f, \"/home/dongkwan/data/scripts/gnu_packages/findutils/findutils-4.6.0_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\");\n    textdomain (0x40d94f, rsi);\n    edi = 0x4058e0;\n    eax = fcn_0040bc80 ();\n    while (eax != 0) {\n        edx = 5;\n        rax = dcgettext (0, \"The atexit library function failed\");\n        r12 = rax;\n        rax = errno_location ();\n        eax = 0;\n        error (1, *(rax), r12);\nlabel_0:\n        r14d = 0x402f00;\n        eax = fcn_00404ea0 (0x612420, 0x800);\n        r13d = eax;\n        eax = rax - 1;\n        if (eax > 1) {\n            goto label_23;\n        }\nlabel_3:\n        *((rsp + 0xc)) = 1;\n        r12d = 0x4038b0;\n        r15d = 0x40f292;\n        *((rsp + 8)) = 0;\nlabel_1:\n        r8 = rsp + 0x2c;\n        ecx = 0x40d6e0;\n        rsi = rbx;\n        edi = ebp;\n        edx = \"+0a:E:e::i::I:l::L:n:prs:txP:d:\";\n        eax = fcn_0040b0f0 ();\n        if (eax == 0xffffffff) {\n            goto label_24;\n        }\n        eax -= 0x30;\n        if (eax > 0x50) {\n            goto label_25;\n        }\n        /* switch table (81 cases) at 0x40d340 */\n        edi = 0x403ec0;\n        eax = fcn_0040bc80 ();\n    }\n    goto label_0;\n    *(0x006123c1) = 1;\n    *(0x006123c2) = 1;\n    goto label_1;\n    *((rsp + 8)) = 1;\n    goto label_1;\n    eax = fcn_00403570 (*(0x00612ec8), 0x50, 0, 0x7fffffff, 1);\n    *(0x006122b0) = eax;\n    goto label_1;\n    r8d = 1;\n    rcx |= 0xffffffffffffffff;\n    rax = fcn_00403570 (*(0x00612ec8), 0x4c, 1, rcx, r8d);\n    *(0x00612470) = 0;\n    *(0x00612468) = rax;\n    *(0x00612450) = 0;\n    goto label_1;\n    rax = imp.__libc_start_main;\n    if (rax == 0) {\n        goto label_26;\n    }\nlabel_8:\n    *(0x00612450) = rax;\n    *(0x00612470) = 0;\n    *(0x00612468) = 0;\n    goto label_1;\n    rax = imp.__libc_start_main;\n    if (rax == 0) {\n        goto label_27;\n    }\n    if (*(rax) == 0) {\n        goto label_27;\n    }\n    *(0x006123f8) = rax;\n    goto label_1;\n    *(0x006123c0) = 0;\n    r12d = 0x403790;\n    goto label_1;\n    rax = strchr (*(0x00612ec8), 0x3d);\n    if (rax != 0) {\n        rax = *((rsp + 0x2c));\n        edx = 5;\n        rax <<= 5;\n        rcx = *((rax + 0x40d6e0));\n        *((rsp + 0x10)) = rcx;\n        rax = dcgettext (0, \"option --%s may not be set to a value which includes `=');\n        rcx = *((rsp + 0x10));\n        eax = 0;\n        error (1, 0, rax);\n    }\n    rcx = imp.__libc_start_main;\n    rdi = imp.__libc_start_main;\n    *(0x006123b8) = rcx;\n    *((rsp + 0x10)) = rcx;\n    eax = unsetenv ();\n    rcx = *((rsp + 0x10));\n    if (eax == 0) {\n        goto label_1;\n    }\n    edx = 5;\n    *((rsp + 0x18)) = rcx;\n    rax = dcgettext (0, \"failed to unset environment variable %s\");\n    *((rsp + 0x10)) = rax;\n    rax = errno_location ();\n    rcx = *((rsp + 0x18));\n    eax = 0;\n    error (1, *(rax), *((rsp + 0x10)));\n    goto label_1;\n    *(0x00612420) = 1;\n    goto label_1;\n    eax = fcn_00404580 (\"xargs\");\n    eax = 0;\n    do {\nlabel_2:\n        return rax;\n        void (*r14)() ();\n        rax = fcn_00403570 (*(0x00612ec8), 0x73, 1, *(0x00612428), 0);\n        r8 = imp.__libc_start_main;\n        rcx = rax;\n        if (r8 < rax) {\n            goto label_28;\n        }\nlabel_7:\n        *(0x00612438) = rcx;\n        goto label_1;\n        *((rsp + 0xc)) = 0;\n        goto label_1;\n        rcx |= 0xffffffffffffffff;\n        r8d = 1;\n        rax = fcn_00403570 (*(0x00612ec8), 0x6e, 1, rcx, r8d);\n        *(0x00612468) = 0;\n        *(0x00612470) = rax;\n        rax--;\n        if (rax == 0) {\n            goto label_29;\n        }\nlabel_6:\n        *(0x00612450) = 0;\n        goto label_1;\n        rdi = imp.__libc_start_main;\n        if (rdi == 0) {\n            goto label_30;\n        }\n        r8d = 1;\n        rcx |= 0xffffffffffffffff;\n        rax = fcn_00403570 (rdi, 0x6c, 1, rcx, r8d);\n        *(0x00612468) = rax;\nlabel_5:\n        *(0x00612470) = 0;\n        *(0x00612450) = 0;\n        goto label_1;\n        r9 = imp.__libc_start_main;\n        rcx |= 0xffffffffffffffff;\n        eax = 0;\n        rdi = r9;\n        r12d = *(r9);\n        __asm (\"repne scasb al, byte [rdi]\");\n        if (rcx == 0xfffffffffffffffd) {\n            goto label_9;\n        }\n        if (r12b != 0x5c) {\n            goto label_31;\n        }\n        r12d = *((r9 + 1));\n        eax = r12 - 0x5c;\n        if (al > 0x1a) {\n            goto label_32;\n        }\n        eax = (int32_t) al;\n        /* switch table (27 cases) at 0x40d5c8 */\n        r15 = imp.__libc_start_main;\n        goto label_1;\n        eax = fcn_004032b0 (*(obj.stdout));\n        eax = 0;\n    } while (1);\nlabel_25:\n    fcn_004032b0 (*(obj.stderr));\n    eax = 1;\n    goto label_2;\nlabel_23:\n    edi = 0;\n    rax = sysconf ();\n    if (rax > 0) {\n        if (rax <= 0x800) {\n            goto label_33;\n        }\n        rdx = imp.__libc_start_main;\n        rax -= 0x800;\n        if (rax > rdx) {\n            rax = rdx;\n        }\n        *(0x00612438) = rax;\n    }\n    if (*(0x00612438) <= 0x7ff) {\n        goto label_34;\n    }\n    r14d = 0x402ec0;\n    *(0x00612460) = 0x404120;\n    fcn_00404f80 (0x612420);\n    goto label_3;\nlabel_22:\n    edi = \"xargs\";\n    goto label_4;\nlabel_32:\n    *((rsp + 0x10)) = r9;\n    rax = errno_location ();\n    r9 = *((rsp + 0x10));\n    if (r12b == 0x78) {\n        goto label_35;\n    }\n    *((rsp + 0x10)) = r9;\n    *((rsp + 0x18)) = rax;\n    rax = ctype_b_loc ();\n    r9 = *((rsp + 0x10));\n    r8 = *((rsp + 0x18));\n    rax = *(rax);\n    if ((*((rax + r12*2 + 1)) & 8) == 0) {\n        goto label_36;\n    }\nlabel_21:\n    *((rsp + 0x10)) = r9;\n    *(r8) = 0;\n    *((rsp + 0x40)) = 0;\n    rax = strtoul (r9 + 1, rsp + 0x40, 8);\n    r9 = *((rsp + 0x10));\n    r12 = rax;\n    if (rax > 0xff) {\n        *((rsp + 0x10)) = r9;\n        edx = 5;\nlabel_20:\n        rax = dcgettext (0, \"Invalid escape sequence %s in input delimiter specification; character values must not exceed %lo.\");\n        r9 = *((rsp + 0x10));\n        r8d = 0xff;\n        eax = 0;\n        rcx = r9;\n        error (1, 0, rax);\n        r9 = *((rsp + 0x10));\n    }\nlabel_19:\n    r8 = *((rsp + 0x40));\n    if (*(r8) != 0) {\n        edx = 5;\n        *((rsp + 0x18)) = r8;\n        *((rsp + 0x10)) = r9;\n        rax = dcgettext (0, \"Invalid escape sequence %s in input delimiter specification; trailing characters %s not recognised.\");\n        r9 = *((rsp + 0x10));\n        r8 = *((rsp + 0x18));\n        eax = 0;\n        rcx = r9;\n        rax = error (1, 0, rax);\n    }\nlabel_9:\n    *(0x006123c0) = r12b;\n    r12d = 0x403790;\n    goto label_1;\nlabel_30:\n    *(0x00612468) = 1;\n    goto label_5;\nlabel_29:\n    if (*(0x00612450) == 0) {\n        goto label_6;\n    }\n    *(0x00612470) = 0;\n    goto label_1;\nlabel_28:\n    edx = 5;\n    *((rsp + 0x10)) = r8;\n    *((rsp + 0x18)) = rax;\n    rax = dcgettext (0, \"warning: value %ld for -s option is too large, using %ld instead\");\n    rcx = *((rsp + 0x18));\n    r8 = *((rsp + 0x10));\n    eax = 0;\n    error (0, 0, rax);\n    rcx = imp.__libc_start_main;\n    goto label_7;\nlabel_27:\n    *(0x006123f8) = 0;\n    goto label_1;\nlabel_26:\n    eax = 0x40d232;\n    goto label_8;\nlabel_31:\n    edx = 5;\n    r12d = 0;\n    *((rsp + 0x10)) = r9;\n    rax = dcgettext (0, \"Invalid input delimiter specification %s: the delimiter must be either a single character or an escape sequence starting with \\\\.\");\n    r9 = *((rsp + 0x10));\n    eax = 0;\n    rcx = r9;\n    error (1, 0, rax);\n    goto label_9;\nlabel_24:\n    if (*(0x006123f8) != 0) {\n        if (r12 == 0x403790) {\n            goto label_37;\n        }\n    }\nlabel_18:\n    void (*r14)() ();\n    if (r13d != 0) {\n        goto label_38;\n    }\n    *((rsp + 0x40)) = 0x402ed0;\n    rdi = rsp + 0x48;\n    sigemptyset ();\n    *((rsp + 0xc8)) = 0;\n    eax = sigaction (0xa, rsp + 0x40, 0);\n    if (eax != 0) {\n        goto label_39;\n    }\nlabel_15:\n    *((rsp + 0x40)) = 0x403720;\n    rdi = rsp + 0x48;\n    sigemptyset ();\n    *((rsp + 0xc8)) = 0;\n    eax = sigaction (0xc, rsp + 0x40, 0);\n    if (eax != 0) {\n        goto label_40;\n    }\nlabel_14:\n    eax = strcmp (r15, 0x40f292);\n    if (eax != 0) {\n        goto label_41;\n    }\n    rax = stdin;\n    *(0x006124e8) = rax;\nlabel_13:\n    if (*(0x00612450) == 0) {\n        goto label_42;\n    }\nlabel_17:\n    *(0x00612420) = 1;\nlabel_16:\n    if (*(0x0061233c) == ebp) {\n        rax = rsp + 0x33;\n        rbx = rsp + 0x38;\n        *(0x0061233c) = 0;\n        *((rsp + 0x38)) = rax;\n    }\n    if (*((rsp + 8)) != 0) {\n        goto label_43;\n    }\nlabel_12:\n    rax = imp.__libc_start_main;\n    r13 |= 0xffffffffffffffff;\n    rax = fcn_00409680 (rax + 1);\n    *(0x006124e0) = rax;\n    rax = imp.__libc_start_main;\n    rax = fcn_00409680 (rax + 1);\n    esi = 0;\n    *(0x00612498) = rax;\n    signal (0x11);\n    if (*(0x00612450) == 0) {\n        goto label_44;\n    }\n    rdi = (int64_t) ebp;\n    rdi <<= 3;\n    rax = fcn_00409680 (rdi);\n    rdx = *(0x0061233c);\n    rsi |= 0xffffffffffffffff;\n    r15 = rax;\n    eax = 0;\n    if (ebp <= edx) {\n        goto label_45;\n    }\n    do {\n        rdi = *((rbx + rdx*8));\n        rcx = rsi;\n        __asm (\"repne scasb al, byte [rdi]\");\n        rcx = ~rcx;\n        rcx--;\n        *((r15 + rdx*8)) = rcx;\n        rdx++;\n    } while (ebp > edx);\nlabel_45:\n    rdi = imp.__libc_start_main;\n    eax = 0;\n    rcx |= 0xffffffffffffffff;\n    __asm (\"repne scasb al, byte [rdi]\");\n    rax = rcx;\n    rax = ~rax;\n    rax--;\n    *(0x00612448) = rax;\nlabel_10:\n    eax = void (*r12)() ();\n    if (eax == 0xffffffff) {\n        goto label_46;\n    }\n    r14 = (int64_t) eax;\n    fcn_00405050 (0x612420, 0x612480);\n    rax = *(0x0061233c);\n    r14--;\n    *(0x006124a0) = 0;\n    rsi = *((r15 + rax*8));\n    eax = *(0x006122b4);\n    fcn_004047a0 (0x612420, 0x612480, *((rbx + rax*8)), rsi + 1, 0, 0);\n    eax = *(0x0061233c);\n    *(0x006122b4) = 0;\n    eax++;\n    r13 = (int64_t) eax;\n    if (ebp <= eax) {\n        goto label_47;\n    }\n    do {\n        eax = *(0x006122b4);\n        r13++;\n        fcn_00404a40 (0x612420, 0x612480, *((rbx + r13*8)), *((r15 + r13*8)), 0, 0);\n    } while (ebp > r13d);\nlabel_47:\n    eax = fcn_00404c00 (0x612420, 0x612480);\n    goto label_10;\n    do {\n        eax = 0;\n        rdi = rdx;\n        __asm (\"repne scasb al, byte [rdi]\");\n        eax = *(0x006122b4);\n        rcx = ~rcx;\n        fcn_004047a0 (0x612420, 0x612480, *((rbx + rax*8)), r13, 0, 0);\n        *(0x0061233c)++;\nlabel_44:\n        rax = *(0x0061233c);\n    } while (eax < ebp);\n    rax = imp.__libc_start_main;\n    *(0x006122b4) = 0;\n    *(0x00612458) = rax;\n    rax = imp.__libc_start_main;\n    *(0x006124a8) = rax;\n    do {\nlabel_11:\n        eax = void (*r12)() ();\n        eax++;\n        if (eax == 0) {\n            goto label_48;\n        }\n        rax = imp.__libc_start_main;\n    } while (rax == 0);\n    if (rax > *(0x006124d0)) {\n        goto label_11;\n    }\n    fcn_00404c00 (0x612420, 0x612480);\n    *(0x006124d0) = 0;\n    goto label_11;\nlabel_48:\n    rax = imp.__libc_start_main;\n    if (*(0x00612480) == rax) {\n        if (*((rsp + 0xc)) == 0) {\n            goto label_46;\n        }\n        if (*(0x006123f0) != 0) {\n            goto label_46;\n        }\n    }\n    fcn_00404c00 (0x612420, 0x612480);\nlabel_46:\n    eax = imp.__libc_start_main;\n    *(0x006123c4) = eax;\n    eax = imp.__libc_start_main;\n    goto label_2;\n    r12d = 7;\n    goto label_9;\n    r12d = 0xd;\n    goto label_9;\n    r12d = 0xa;\n    goto label_9;\n    r12d = 0xc;\n    goto label_9;\n    r12d = 8;\n    goto label_9;\n    r12d = 0xb;\n    goto label_9;\n    r12d = 9;\n    goto label_9;\nlabel_43:\n    rax = fcn_00404e60 ();\n    edx = 5;\n    r13 = rax;\n    rax = dcgettext (0, \"Your environment variables take up %lu bytes\\n\");\n    rdx = r13;\n    eax = 0;\n    fprintf (*(obj.stderr), rax);\n    r13 = imp.__libc_start_main;\n    edx = 5;\n    rax = dcgettext (0, \"POSIX upper limit on argument length (this system): %lu\\n\");\n    rdx = r13;\n    eax = 0;\n    fprintf (*(obj.stderr), rax);\n    r13 = imp.__libc_start_main;\n    edx = 5;\n    rax = dcgettext (0, \"POSIX smallest allowable upper limit on argument length (all systems): %lu\\n\");\n    rdx = r13;\n    eax = 0;\n    fprintf (*(obj.stderr), rax);\n    r13 = imp.__libc_start_main;\n    rax = fcn_00404e60 ();\n    edx = 5;\n    r14 = rax;\n    rax = dcgettext (0, \"Maximum length of command we could actually use: %lu\\n\");\n    rdx = r13;\n    rdx -= r14;\n    eax = 0;\n    fprintf (*(obj.stderr), rax);\n    edx = 5;\n    r13 = imp.__libc_start_main;\n    rax = dcgettext (0, \"Size of command buffer we are actually using: %lu\\n\");\n    rdx = r13;\n    eax = 0;\n    fprintf (*(obj.stderr), rax);\n    edx = 5;\n    rax = dcgettext (0, \"Maximum parallelism (--max-procs must be no greater): %lu\\n\");\n    edx = 0x7fffffff;\n    eax = 0;\n    fprintf (*(obj.stderr), rax);\n    eax = isatty (0);\n    if (eax == 0) {\n        goto label_12;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"\\nExecution of xargs will continue now, and it will try to read its input and run commands; if this is not what you wanted to happen, please type the end-of-file keystroke.\\n\");\n    eax = 0;\n    fprintf (*(obj.stderr), rax);\n    if (*((rsp + 0xc)) == 0) {\n        goto label_12;\n    }\n    rax = *(0x0061233c);\n    edx = 5;\n    r13 = *((rbx + rax*8));\n    rax = dcgettext (0, \"Warning: %s will be run at least once.  If you do not want that to happen, then press the interrupt keystroke.\\n\");\n    rdx = r13;\n    eax = 0;\n    fprintf (*(obj.stderr), rax);\n    goto label_12;\nlabel_41:\n    *(0x006124d8) = 1;\n    rdi = r15;\n    rax = fcn_004036c0 ();\n    *(0x006124e8) = rax;\n    if (rax != 0) {\n        goto label_13;\n    }\n    rdx = r15;\n    rax = fcn_00408c90 (0, 8);\n    edx = 5;\n    r14 = rax;\n    rax = dcgettext (0, \"Cannot open input file %s\");\n    r13 = rax;\n    rax = errno_location ();\n    rcx = r14;\n    eax = 0;\n    error (1, *(rax), r13);\n    goto label_13;\nlabel_40:\n    edx = 5;\n    rax = dcgettext (0, \"Cannot set SIGUSR2 signal handler\");\n    r13 = rax;\n    rax = errno_location ();\n    eax = 0;\n    error (0, *(rax), r13);\n    goto label_14;\nlabel_39:\n    edx = 5;\n    rax = dcgettext (0, \"Cannot set SIGUSR1 signal handler\");\n    r13 = rax;\n    rax = errno_location ();\n    eax = 0;\n    error (0, *(rax), r13);\n    goto label_15;\nlabel_42:\n    if (*(0x00612468) == 0) {\n        goto label_16;\n    }\n    goto label_17;\nlabel_37:\n    edx = 5;\n    rax = dcgettext (0, \"warning: the -E option has no effect if -0 or -d is used.\\n\");\n    eax = 0;\n    error (0, 0, rax);\n    goto label_18;\nlabel_35:\n    *(rax) = 0;\n    *((rsp + 0x40)) = 0;\n    rax = strtoul (r9 + 2, rsp + 0x40, 0x10);\n    r9 = *((rsp + 0x10));\n    r12 = rax;\n    if (rax <= 0xff) {\n        goto label_19;\n    }\n    *((rsp + 0x10)) = r9;\n    edx = 5;\n    esi = \"Invalid escape sequence %s in input delimiter specification; character values must not exceed %lx.\";\n    goto label_20;\nlabel_36:\n    edx = 5;\n    *((rsp + 0x18)) = r8;\n    *((rsp + 0x10)) = r9;\n    rax = dcgettext (0, \"Invalid escape sequence %s in input delimiter specification.\");\n    r9 = *((rsp + 0x10));\n    eax = 0;\n    rcx = r9;\n    error (1, 0, rax);\n    edi = 0;\n    r9 = *((rsp + 0x10));\n    r8 = *((rsp + 0x18));\n    goto label_21;\nlabel_38:\n    assert_fail (\"BC_INIT_OK == bcstatus\", \"xargs.c\", 0x2a2, \"main\");\nlabel_33:\n    assert_fail (\"val > XARGS_POSIX_HEADROOM\", \"xargs.c\", 0x1d8, \"main\");\nlabel_34:\n    return assert_fail (\"bc_ctl.arg_max >= LINE_MAX\", \"xargs.c\", 0x1f4, \"main\");\n}\n"
        },
        {
            "funcName": "fcn_00402e0b",
            "funcStartAddr": "0x402e0b",
            "funcEndAddr": "0x402e2a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x402e0b */\n#include <stdint.h>\n \nint32_t fcn_00402e0b (void) {\n    eax = __progname;\n    if (rax != obj.__progname) {\n        eax = 0;\n        if (rax == 0) {\n            goto label_0;\n        }\n        edi = __progname;\n        void (*rax)() ();\n    }\nlabel_0:\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00402e61",
            "funcStartAddr": "0x402e61",
            "funcEndAddr": "0x402eb8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x402e61 */\n#include <stdint.h>\n \nint64_t fcn_00402e61 (int32_t argc, func fini, func init, func main, func rtld_fini, void * stack_end, char ** ubp_av) {\n    rsi = argc;\n    r8 = fini;\n    rcx = init;\n    rdi = main;\n    r9 = rtld_fini;\n    xmm0 = stack_end;\n    rdx = ubp_av;\n    if (*(0x00612388) != 0) {\n        goto label_0;\n    }\n    r12d = section..dtors;\n    ebx = 0x611e48;\n    rbx -= section..dtors;\n    rbx >>= 3;\n    rbx--;\n    do {\n        rax = imp.__libc_start_main;\n        if (rax >= rbx) {\n            goto label_1;\n        }\n        rax++;\n        *(0x00612390) = rax;\n        uint64_t (*r12 + rax*8)() ();\n    } while (1);\nlabel_1:\n    fcn_00402e0b ();\n    *(0x00612388) = 1;\n    return rax;\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00402eb8",
            "funcStartAddr": "0x402eb8",
            "funcEndAddr": "0x402f4b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x402eb8 */\n#include <stdint.h>\n \nint64_t fcn_00402eb8 (void) {\n    do {\n        esi = __progname;\n        ecx = 2;\n        rsi -= obj.__progname;\n        rsi >>= 3;\n        rax = rsi;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rsi = rax;\n        if (rax != 0) {\n            eax = 0;\n            if (rax == 0) {\n                goto label_0;\n            }\n            edi = __progname;\n            void (*rax)() ();\n        }\nlabel_0:\n        return rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00402f30",
            "funcStartAddr": "0x402f30",
            "funcEndAddr": "0x40319f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x402f30 */\n#include <stdint.h>\n \nuint64_t fcn_00402f30 (int64_t arg1, int64_t arg2) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t wstatus;\n    rdi = arg1;\n    rsi = arg2;\n    if (*(0x006123e8) == 0) {\n        goto label_5;\n    }\n    eax = edi;\n    r15d = esi;\n    eax ^= 1;\n    r13d = 0;\n    r12d = edi;\n    *((rsp + 4)) = al;\nlabel_1:\n    *(0x006123cc) = 0;\n    ebx = 0;\n    bl = (r15d <= r13d) ? 1 : 0;\n    ebx &= *((rsp + 4));\n    do {\nlabel_0:\n        eax = waitpid (0xffffffff, rsp + 0x1c, ebx);\n        if (eax != 0xffffffff) {\n            if (eax != 0) {\n                goto label_6;\n            }\n            if (ebx == 0) {\n                goto label_7;\n            }\n            return eax;\n        }\n        rax = errno_location ();\n        r14 = rax;\n        if (*(rax) != 4) {\n            edx = 5;\n            rax = dcgettext (0, \"error waiting for child process\");\n            eax = 0;\n            error (1, *(r14), rax);\n        }\n        eax = imp.__libc_start_main;\n    } while (eax == 0);\n    if (r12b == 0) {\n        ebx = ebp;\n    }\n    goto label_0;\nlabel_6:\n    rsi = imp.__libc_start_main;\n    if (rsi == 0) {\n        goto label_0;\n    }\n    rdi = imp.__libc_start_main;\n    if (eax == *(rdi)) {\n        goto label_8;\n    }\n    edx = 0;\n    while (rcx < rsi) {\n        if (*((rdi + rcx*4)) == eax) {\n            goto label_4;\n        }\n        ecx = rdx + 1;\n        rdx = rcx;\n    }\n    if (rcx == rsi) {\n        goto label_0;\n    }\nlabel_4:\n    *((rdi + rcx*4)) = 0;\n    ebx = *((rsp + 0x1c));\n    r13d++;\n    *(0x006123e8)--;\n    eax = (int32_t) bh;\n    if (eax == 0xff) {\n        goto label_9;\n    }\nlabel_3:\n    if (bl == 0x7f) {\n        goto label_10;\n    }\nlabel_2:\n    eax = ebx;\n    eax &= 0x7f;\n    eax++;\n    if (al > 1) {\n        edx = 5;\n        ebx &= 0x7f;\n        rax = imp.__libc_start_main;\n        rcx = *(rax);\n        *((rsp + 8)) = rcx;\n        rax = dcgettext (0, \"%s: terminated by signal %d\");\n        rcx = *((rsp + 8));\n        r8d = ebx;\n        eax = 0;\n        error (0x7d, 0, rax);\n        ebx = *((rsp + 0x1c));\n    }\n    bh &= 0xff;\n    if (bh != 0) {\n        *(0x006123c8) = 0x7b;\n    }\n    if (*(0x006123e8) != 0) {\n        goto label_1;\n    }\n    return rax;\nlabel_10:\n    edx = 5;\n    ebx = (int32_t) bh;\n    rax = imp.__libc_start_main;\n    rcx = *(rax);\n    *((rsp + 8)) = rcx;\n    rax = dcgettext (0, \"%s: stopped by signal %d\");\n    rcx = *((rsp + 8));\n    r8d = ebx;\n    eax = 0;\n    error (0x7d, 0, rax);\n    ebx = *((rsp + 0x1c));\n    goto label_2;\nlabel_9:\n    rax = imp.__libc_start_main;\n    edx = 5;\n    rbx = *(rax);\n    rax = dcgettext (0, \"%s: exited with status 255; aborting\");\n    rcx = rbx;\n    eax = 0;\n    error (0x7c, 0, rax);\n    ebx = *((rsp + 0x1c));\n    goto label_3;\nlabel_8:\n    ecx = 0;\n    goto label_4;\nlabel_7:\n    rbx = imp.__libc_start_main;\n    edx = 5;\n    rax = dcgettext (0, \"WARNING: Lost track of %lu child processes\");\n    rcx = rbx;\n    eax = 0;\n    error (0, 0, rax);\n    return rax;\nlabel_5:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004031a0",
            "funcStartAddr": "0x4031a0",
            "funcEndAddr": "0x4032a8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x4031a0 */\n#include <stdint.h>\n \nint64_t fcn_004031a0 (int64_t arg1) {\n    rdi = arg1;\n    r13d = edi;\n    r12 = imp.__libc_start_main;\n    rax = imp.__libc_start_main;\n    if (r12 == 0) {\n        goto label_3;\n    }\n    esi = *(rax);\n    if (esi == 0) {\n        goto label_4;\n    }\n    ebp = 0;\n    while (rdx < r12) {\n        rdx = rax + rbx;\n        ecx = *(rdx);\n        if (ecx == 0) {\n            goto label_1;\n        }\n        edx = rbp + 1;\n        rbx = rdx*4;\n    }\n    while (r12 >= rcx) {\nlabel_0:\n        rdx = rax + rbx;\n        eax = *(rdx);\n        if (eax != 0) {\n            goto label_5;\n        }\nlabel_1:\n        *(rdx) = r13d;\n        eax = ebp;\n        *(0x006123e8)++;\n        *(0x006123f0) = 1;\n        return rax;\nlabel_3:\n        ebx = 0;\n        ebp = 0;\n        if (rax == 0) {\n            goto label_6;\n        }\n        rdx = r12;\n        rdx >>= 1;\n        rdx = r12 + rdx + 1;\nlabel_2:\n        *(0x006123d8) = rdx;\n        rax = fcn_004096d0 (rax, rdx*4);\n        rcx = imp.__libc_start_main;\n        *(0x006123e0) = rax;\n    }\n    edx = ebp;\n    do {\n        *((rax + r12*4)) = 0;\n        r12d = rdx + 1;\n        rdx = r12;\n    } while (r12 < rcx);\n    goto label_0;\nlabel_4:\n    rdx = rax;\n    ebp = 0;\n    goto label_1;\nlabel_6:\n    esi = 0x80;\n    edx = 0x20;\n    goto label_2;\nlabel_5:\n    return assert_fail (\"0 == pids[i]\", \"xargs.c\", 0x58c, \"add_proc\");\n}\n"
        },
        {
            "funcName": "fcn_004032b0",
            "funcStartAddr": "0x4032b0",
            "funcEndAddr": "0x40356b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x4032b0 */\n#include <stdint.h>\n \nuint64_t fcn_004032b0 (int64_t arg1) {\n    rdi = arg1;\n    edx = 5;\n    rbx = rdi;\n    rbp = imp.__libc_start_main;\n    rax = dcgettext (0, \"Usage: %s [OPTION]... COMMAND [INITIAL-ARGS]...\\n\");\n    rdx = rbp;\n    eax = 0;\n    fprintf (rbx, rax);\n    edx = 5;\n    rax = dcgettext (0, \"Run COMMAND with arguments INITIAL-ARGS and more arguments read from input.\\n\\n\");\n    fputs (rax, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"Mandatory and optional arguments to long options are also\\nmandatory or optional for the corresponding short option.\\n\");\n    fputs (rax, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"  -0, --null                   items are separated by a null, not whitespace;\\n                                 disables quote and backslash processing and\\n                                 logical EOF processing\\n\");\n    fputs (rax, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"  -a, --arg-file=FILE          read arguments from FILE, not standard input\\n\");\n    fputs (rax, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"  -d, --delimiter=CHARACTER    items in input stream are separated by CHARACTER,\\n                                 not by whitespace; disables quote and backslash\\n                                 processing and logical EOF processing\\n\");\n    fputs (rax, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"  -E END                       set logical EOF string; if END occurs as a line\\n                                 of input, the rest of the input is ignored\\n                                 (ignored if -0 or -d was specified)\\n\");\n    fputs (rax, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"  -e, --eof[=END]              equivalent to -E END if END is specified;\\n                                 otherwise, there is no end-of-file string\\n\");\n    fputs (rax, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"  -I R                         same as --replace=R\\n\");\n    fputs (rax, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"  -i, --replace[=R]            replace R in INITIAL-ARGS with names read\\n                                 from standard input; if R is unspecified,\\n                                 assume {}\\n\");\n    fputs (rax, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"  -L, --max-lines=MAX-LINES    use at most MAX-LINES non-blank input lines per\\n                                 command line\\n\");\n    fputs (rax, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"  -l[MAX-LINES]                similar to -L but defaults to at most one non-\\n                                 blank input line if MAX-LINES is not specified\\n\");\n    fputs (rax, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"  -n, --max-args=MAX-ARGS      use at most MAX-ARGS arguments per command line\\n\");\n    fputs (rax, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"  -P, --max-procs=MAX-PROCS    run at most MAX-PROCS processes at a time\\n\");\n    fputs (rax, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"  -p, --interactive            prompt before running commands\\n\");\n    fputs (rax, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"      --process-slot-var=VAR   set environment variable VAR in child processes\\n\");\n    fputs (rax, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"  -r, --no-run-if-empty        if there are no arguments, then do not run COMMAND;\\n                                 if this option is not given, COMMAND will be\\n                                 run at least once\\n\");\n    fputs (rax, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"  -s, --max-chars=MAX-CHARS    limit length of command line to MAX-CHARS\\n\");\n    fputs (rax, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"      --show-limits            show limits on command-line length\\n\");\n    fputs (rax, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"  -t, --verbose                print commands before executing them\\n\");\n    fputs (rax, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"  -x, --exit                   exit if the size (see -s) is exceeded\\n\");\n    fputs (rax, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"      --help                   display this help and exit\\n\");\n    fputs (rax, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"      --version                output version information and exit\\n\");\n    fputs (rax, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"\\nReport bugs to <bug-findutils@gnu.org>.\\n\");\n    rsi = rbx;\n    rdi = rax;\n    return fputs ();\n}\n"
        },
        {
            "funcName": "fcn_00403570",
            "funcStartAddr": "0x403570",
            "funcEndAddr": "0x4036b2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x403570 */\n#include <stdint.h>\n \nuint64_t fcn_00403570 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    char * * endptr;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r14d = r8d;\n    r13d = esi;\n    r12 = rcx;\n    rbx = rdi;\n    rax = strtol (rdi, rsp + 8, 0xa);\n    rdx = *((rsp + 8));\n    if (rdx != rbx) {\n        if (*(rdx) != 0) {\n            goto label_0;\n        }\n        if (rax >= rbp) {\n            if (r12 >= 0) {\n                if (rax <= r12) {\n                    goto label_1;\n                }\n                edx = 5;\n                rbx = imp.__libc_start_main;\n                rax = dcgettext (0, \"%s: value for -%c option should be <= %ld\\n\");\n                r8 = r12;\n                ecx = r13d;\n                rdx = rbx;\n                eax = 0;\n                fprintf (*(obj.stderr), rax);\n                if (r14d != 0) {\n                    goto label_2;\n                }\n                rax = r12;\n            }\nlabel_1:\n            return rax;\n        }\n        edx = 5;\n        rbx = imp.__libc_start_main;\n        rax = dcgettext (0, \"%s: value for -%c option should be >= %ld\\n\");\n        r8 = rbp;\n        ecx = r13d;\n        rdx = rbx;\n        eax = 0;\n        fprintf (*(obj.stderr), rax);\n        if (r14d != 0) {\n            goto label_2;\n        }\n        rax = rbp;\n        return rax;\n    }\nlabel_0:\n    rbx = imp.__libc_start_main;\n    edx = 5;\n    rax = dcgettext (0, \"%s: invalid number for -%c option\\n\");\n    ecx = r13d;\n    rdx = rbx;\n    eax = 0;\n    fprintf (*(obj.stderr), rax);\n    fcn_004032b0 (*(obj.stderr));\n    exit (1);\nlabel_2:\n    fcn_004032b0 (*(obj.stderr));\n    return exit (1);\n}\n"
        },
        {
            "funcName": "fcn_004036c0",
            "funcStartAddr": "0x4036c0",
            "funcEndAddr": "0x403718",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x4036c0 */\n#include <stdint.h>\n \nuint64_t fcn_004036c0 (void) {\n    eax = 0;\n    ebx = 0;\n    eax = fcn_00405410 (rdi, 0, rdx, rcx);\n    if (eax < 0) {\n        goto label_0;\n    }\n    esi = 0x40d331;\n    edi = eax;\n    rax = fdopen ();\n    rbx = rax;\n    while (1) {\nlabel_0:\n        rax = rbx;\n        return rax;\n        rax = errno_location ();\n        r13d = *(rax);\n        r12 = rax;\n        close (ebp);\n        *(r12) = r13d;\n    }\n}\n"
        },
        {
            "funcName": "fcn_00403740",
            "funcStartAddr": "0x403740",
            "funcEndAddr": "0x403782",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x403740 */\n#include <stdint.h>\n \nint64_t fcn_00403740 (void) {\n    while (*(0x006122b4) != 0) {\nlabel_0:\n        return;\n    }\n    rax = imp.__libc_start_main;\n    if (*(0x00612480) == rax) {\n        goto label_0;\n    }\n    eax = imp.__libc_start_main;\n    if (eax != 0) {\n        goto label_0;\n    }\n    esi = 0x612480;\n    edi = 0x612420;\n    return void (*0x404c00)() ();\n}\n"
        },
        {
            "funcName": "fcn_00403f30",
            "funcStartAddr": "0x403f30",
            "funcEndAddr": "0x404120",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x403f30 */\n#include <stdint.h>\n \nint64_t fcn_00403f30 (int64_t arg1) {\n    rdi = arg1;\n    if (*(0x00612480) == 1) {\n        goto label_4;\n    }\n    ebx = 0;\n    while (eax >= 0) {\nlabel_0:\n        rax = imp.__libc_start_main;\n        rbx++;\n        rax--;\n        if (rax <= rbx) {\n            goto label_4;\n        }\n        rax = imp.__libc_start_main;\n        rdx = *((rax + rbx*8));\n        eax = 0;\n        eax = fprintf (*(obj.stderr), 0x40d1c3);\n    }\n    edx = 5;\n    rax = dcgettext (0, \"Failed to write to stderr\");\n    r12 = rax;\n    rax = errno_location ();\n    eax = 0;\n    error (1, *(rax), r12);\n    goto label_0;\nlabel_4:\n    if (bpl == 0) {\n        goto label_5;\n    }\n    if (*(0x006123a8) == 0) {\n        goto label_6;\n    }\nlabel_2:\n    fwrite (\"?...\", 1, 4, *(obj.stderr));\n    eax = fcn_00409e80 (*(obj.stderr));\n    if (eax != 0) {\n        goto label_7;\n    }\nlabel_1:\n    rdi = imp.__libc_start_main;\n    eax = IO_getc ();\n    ebx = eax;\n    if (eax == 0xa) {\n        goto label_8;\n    }\n    if (eax == 0xffffffff) {\n        goto label_8;\n    }\n    do {\n        rdi = imp.__libc_start_main;\n        eax = IO_getc ();\n        if (eax == 0xffffffff) {\n            goto label_3;\n        }\n    } while (eax != 0xa);\nlabel_3:\n    while (1) {\n        ebx &= 0xffffffdf;\n        al = (ebx == 0x59) ? 1 : 0;\n        return rax;\nlabel_7:\n        edx = 5;\n        rax = dcgettext (0, \"Failed to write to stderr\");\n        rbx = rax;\n        rax = errno_location ();\n        eax = 0;\n        error (1, *(rax), rbx);\n        goto label_1;\nlabel_5:\n        rsi = stderr;\n        edi = 0xa;\n        eax = IO_putc ();\n        eax = 0;\n        return rax;\n        edx = 5;\n        rax = dcgettext (0, \"Failed to read from stdin\");\n        rax = errno_location ();\n        eax = 0;\n        error (1, *(rax), rbp);\n    }\nlabel_6:\n    edi = \"/dev/tty\";\n    rax = fcn_004036c0 ();\n    *(0x006123a8) = rax;\n    if (rax != 0) {\n        goto label_2;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"failed to open /dev/tty for reading\");\n    rbx = rax;\n    rax = errno_location ();\n    eax = 0;\n    error (1, *(rax), rbx);\n    goto label_2;\nlabel_8:\n    eax = ebx;\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_00404580",
            "funcStartAddr": "0x404580",
            "funcEndAddr": "0x4045fa",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x404580 */\n#include <stdint.h>\n \nvoid fcn_00404580 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    fcn_00409e80 (*(obj.stderr));\n    edx = 5;\n    rax = dcgettext (0, \"Kevin Dalley\");\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"James Youngman\");\n    edx = 5;\n    rax = dcgettext (0, \"Eric B. Decker\");\n    r9 = rbp;\n    rcx = *(str.4.6.0);\n    r8 = rax;\n    eax = 0;\n    fcn_00409550 (*(obj.stdout), rbx, \"GNU findutils\");\n}\n"
        },
        {
            "funcName": "fcn_00404600",
            "funcStartAddr": "0x404600",
            "funcEndAddr": "0x404700",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x404600 */\n#include <stdint.h>\n \nint64_t fcn_00404600 (int64_t arg1, int64_t arg2, uint32_t arg4) {\n    rdi = arg1;\n    rsi = arg2;\n    rcx = arg4;\n    rax = *((rsi + 0x40));\n    if (dl == 0) {\n        goto label_2;\n    }\n    while (1) {\n        if (rax != 0) {\n            rdx = *((rsi + 0x48));\n            if (rax < rdx) {\n                goto label_3;\n            }\n        }\n        rdx = *((rdi + 0x38));\n        rax = rcx + 1;\n        rcx = 0xffffffffffffffff;\n        if (rcx == -1) {\n            rax = rcx;\n        }\n        if (rdx == 0) {\n            goto label_4;\n        }\nlabel_0:\n        rdx++;\n        if (rdx < rax) {\n            goto label_5;\n        }\n        rax = rdx;\n        edx = 1;\n        if (rax == 0) {\n            rax = rdx;\n        }\n        return rax;\n        *((rsi + 0x40)) = rcx;\n        rax = rcx;\n    }\nlabel_5:\n    return rax;\nlabel_2:\n    rdx = *((rsi + 0x48));\n    if (rdx <= rcx) {\n        if (rdx != 0) {\n            goto label_6;\n        }\n    }\n    *((rsi + 0x48)) = rcx;\nlabel_6:\n    if (rax != 0) {\n        rdx = *((rsi + 0x48));\n        if (rdx > rax) {\n            goto label_7;\n        }\n    }\n    rax = rcx;\n    rax >>= 1;\nlabel_1:\n    rdx = *((rdi + 0x38));\n    if (rdx != 0) {\n        goto label_0;\n    }\n    edx = 1;\n    if (rax == 0) {\n        rax = rdx;\n    }\n    return rax;\nlabel_4:\n    return rax;\nlabel_3:\n    rsi = rdx;\n    r8 = rcx + 1;\n    rsi -= rax;\n    rdx = rsi;\n    rdx >>= 1;\n    rax = rdx + rcx;\n    if (rsi == 1) {\n        rax = r8;\n    }\n    goto label_1;\nlabel_7:\n    rdx -= rax;\n    rsi = rcx;\n    rcx--;\n    rax = rdx;\n    rax >>= 1;\n    rsi -= rax;\n    rax = rsi;\n    if (rdx == 1) {\n        rax = rcx;\n    }\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00404710",
            "funcStartAddr": "0x404710",
            "funcEndAddr": "0x404798",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x404710 */\n#include <stdint.h>\n \nuint64_t fcn_00404710 (int64_t arg1, int64_t arg2) {\n    uint32_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    r12 = rsi;\n    ebx = 0;\n    rax = getenv (rdi);\n    if (rax != 0) {\n        eax = fcn_004098e0 (rax, rsp, 0xa, rsp + 8, 0);\n        if (eax != 0) {\n            goto label_0;\n        }\n        ebx = 0;\n        bl = (*((rsp + 8)) < r12) ? 1 : 0;\n    }\n    eax = ebx;\n    return rax;\nlabel_0:\n    edx = 5;\n    rax = dcgettext (0, \"Environment variable %s is not set to a valid decimal number\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    error (1, *(rax), r12);\n    eax = ebx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004047a0",
            "funcStartAddr": "0x4047a0",
            "funcEndAddr": "0x404a34",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x4047a0 */\n#include <stdint.h>\n \nuint64_t fcn_004047a0 (int64_t arg_50h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    *((rsp + 8)) = r8;\n    r12d = *((rsp + 0x50));\n    if (rdx == 0) {\n        goto label_8;\n    }\n    r14 = rdi;\n    rbx = rsi;\n    r13 = rdx;\n    r15 = r9;\n    if (r12d == 0) {\n        goto label_9;\n    }\n    if (r13 == str.do_not_care) {\n        goto label_10;\n    }\n    do {\n        rax = rbp + r15;\n        rax += *((rbx + 0x20));\n        if (rax > *((r14 + 0x18))) {\n            if (r12d != 0) {\n                goto label_11;\n            }\n            rax = *((r14 + 0x38));\n            if (*(rbx) == rax) {\n                goto label_11;\n            }\n            if (*((r14 + 0x30)) == 0) {\n                goto label_6;\n            }\nlabel_5:\n            edx = 5;\n            rax = dcgettext (0, \"argument list too long\");\n            eax = 0;\n            error (1, 0, rax);\nlabel_4:\n            fcn_00404c00 (r14, rbx);\n        }\n        rdx = *(rbx);\n        if (r12d == 0) {\n            rax = *((r14 + 0x50));\n            if (rax == 0) {\n                goto label_12;\n            }\n            rcx = rdx;\n            rcx -= *((r14 + 0x38));\n            if (rax == rcx) {\n                goto label_13;\n            }\n        }\nlabel_12:\n        if (rdx == *((r14 + 0x20))) {\nlabel_13:\n            fcn_00404c00 (r14, rbx);\n            rdx = *(rbx);\n        }\n        rsi = *((rbx + 0x10));\n        rax = *((rbx + 8));\n        if (rdx >= rsi) {\nlabel_0:\n            if (rax == 0) {\n                goto label_14;\n            }\n            rdx = rsi + rsi;\n            rsi <<= 4;\n            *((rbx + 0x10)) = rdx;\n            rax = fcn_004096d0 (rax, rsi);\n            *((rbx + 8)) = rax;\nlabel_7:\n            rdx = *(rbx);\n            if (r13 == str.do_not_care) {\n                goto label_15;\n            }\n        }\n        rsi = rdx + 1;\n        rcx = *((rbx + 0x20));\n        *(rbx) = rsi;\n        rsi = *((rbx + 0x18));\n        rsi += rcx;\n        *((rax + rdx*8)) = rsi;\n        rsi = *((rsp + 8));\n        if (rsi != 0) {\n            rdi += rcx;\n            strcpy (*((rbx + 0x18)), rsi);\n            rcx = *((rbx + 0x20));\n            rcx += r15;\n            *((rbx + 0x20)) = rcx;\n        }\n        rcx += *((rbx + 0x18));\n        strcpy (rcx, r13);\n        rbp += *((rbx + 0x20));\n        rax = *(rbx);\n        *((rbx + 0x20)) = rbp;\n        if (r12d != 0) {\n            goto label_16;\n        }\n        rdx = *((r14 + 0x50));\n        if (rdx != 0) {\n            rcx = rax;\n            rcx -= *((r14 + 0x38));\n            if (rdx == rcx) {\n                goto label_2;\n            }\n        }\n        if (rax == *((r14 + 0x20))) {\nlabel_2:\n            fcn_00404c00 (r14, rbx);\nlabel_1:\n            if (r12d == 0) {\n                goto label_17;\n            }\n            rbp = *((rbx + 0x20));\nlabel_3:\n            *((rbx + 0x28)) = rbp;\n        }\nlabel_17:\n        return rax;\nlabel_9:\n        *((rsi + 0x38)) = 1;\n    } while (r13 != str.do_not_care);\nlabel_10:\n    rdx = *(rbx);\n    rsi = *((rbx + 0x10));\n    rax = *((rbx + 8));\n    if (rdx >= rsi) {\n        goto label_0;\n    }\nlabel_15:\n    rcx = rdx + 1;\n    *(rbx) = rcx;\n    *((rax + rdx*8)) = 0;\n    goto label_1;\nlabel_16:\n    if (rax == *((r14 + 0x20))) {\n        goto label_2;\n    }\n    goto label_3;\nlabel_6:\n    eax = *(r14);\n    if (eax == 0) {\n        goto label_4;\n    }\n    if (*((r14 + 0x48)) != 0) {\n        goto label_5;\n    }\n    if (*((r14 + 0x50)) == 0) {\n        goto label_4;\n    }\n    goto label_5;\nlabel_11:\n    edx = 5;\n    rax = dcgettext (0, \"cannot fit single argument within argument list size limit\");\n    eax = 0;\n    error (1, 0, rax);\n    if (*((r14 + 0x30)) != 0) {\n        goto label_5;\n    }\n    goto label_6;\nlabel_14:\n    *((rbx + 0x10)) = 0x40;\n    rax = fcn_00409680 (0x200);\n    *((rbx + 8)) = rax;\n    goto label_7;\nlabel_8:\n    return assert_fail (\"arg != NULL\", \"buildcmd.c\", 0x165, \"bc_push_arg\");\n}\n"
        },
        {
            "funcName": "fcn_00404a40",
            "funcStartAddr": "0x404a40",
            "funcEndAddr": "0x404bf8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x404a40 */\n#include <stdint.h>\n \nint64_t fcn_00404a40 (int64_t arg_80h, int64_t arg_88h, int64_t arg_90h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    char * src;\n    int64_t var_30h;\n    int64_t var_3ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r15 = rdx;\n    r14 = rdi;\n    r12 = rcx;\n    rdi = *((rdi + 0x18));\n    rbx = imp.__libc_start_main;\n    rax = *((rsp + 0x80));\n    *((rsp + 0x30)) = rsi;\n    *((rsp + 0x20)) = r8;\n    rbp = rdi - 1;\n    *((rsp + 0x28)) = rax;\n    rax = *((rsp + 0x88));\n    *((rsp + 0x18)) = r9;\n    *((rsp + 0x10)) = rax;\n    eax = *((rsp + 0x90));\n    *((rsp + 0x3c)) = eax;\n    if (rbx != 0) {\n        goto label_0;\n    }\n    goto label_2;\n    do {\n        r13 = rax;\n        r13 -= r15;\n        if (rbp <= r13) {\n            goto label_3;\n        }\n        rbp -= r13;\n        strncpy (rbx, r15, r13);\n        rax = *((rsp + 0x10));\n        rax += *((rsp + 0x18));\n        rbx += r13;\n        if (rax >= rbp) {\n            goto label_4;\n        }\n        rbp -= rax;\n        rax = *((rsp + 0x20));\n        if (rax != 0) {\n            strcpy (rbx, rax);\n            rbx += *((rsp + 0x18));\n        }\n        strcpy (rbx, *((rsp + 0x28)));\n        rax = *((r14 + 0x28));\n        r15 = *((rsp + 8));\n        rbx += *((rsp + 0x10));\n        r12 -= rax;\n        r15 += rax;\n        r12 -= r13;\n        if (*(r15) == 0) {\n            goto label_1;\n        }\nlabel_0:\n        rax = fcn_004066f0 (r15, *((r14 + 0x30)));\n        *((rsp + 8)) = rax;\n    } while (rax != 0);\n    if (r12 >= rbp) {\n        goto label_3;\n    }\n    r15 += r12;\n    strncpy (rbx, r15, r12);\n    rbp -= r12;\n    rbx += r12;\n    r12d = 0;\n    if (*(r15) != 0) {\n        goto label_0;\n    }\n    do {\nlabel_1:\n        eax = *((rsp + 0x3c));\n        *(rbx) = 0;\n        rcx = rbx + 1;\n        rdi = r14;\n        rdx = imp.__libc_start_main;\n        rsi = *((rsp + 0x30));\n        r9d = 0;\n        r8d = 0;\n        *((rsp + 0x80)) = eax;\n        rcx -= rdx;\n        void (*0x4047a0)() ();\nlabel_4:\n        r15 = *((rsp + 8));\nlabel_3:\n    } while (*(r15) == 0);\n    edx = 5;\n    rax = dcgettext (0, \"command too long\");\n    eax = 0;\n    error (1, 0, rax);\n    goto label_1;\nlabel_2:\n    rdi++;\n    rax = fcn_00409680 (rdi);\n    rbx = rax;\n    *(0x006124f0) = rax;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00404c00",
            "funcStartAddr": "0x404c00",
            "funcEndAddr": "0x404e2d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x404c00 */\n#include <stdint.h>\n \nint64_t fcn_00404c00 (int64_t arg1, int64_t arg2) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    r14 = rdi;\n    r12 = rsi;\n    fcn_004047a0 (rdi, rsi, \"do_not_care\", 0, 0, 0);\n    rax = *(r12);\n    if (rax == 0) {\n        goto label_3;\n    }\n    rdx = *((r12 + 8));\n    if (*((rdx + rax*8 - 8)) != 0) {\n        goto label_4;\n    }\n    r13d = 0;\n    rax = fcn_00409680 (rax*8 + 8);\n    r8 = *(r12);\n    rbp = *((r14 + 0x38));\n    r15 = rax;\n    rdx = r8;\nlabel_0:\n    if (rbp == 0) {\n        goto label_5;\n    }\n    rsi = *((r12 + 8));\n    eax = 0;\n    do {\n        rax++;\n        rcx = *((rsi + rax*8 - 8));\n        *((r15 + rax*8 - 8)) = rcx;\n    } while (rax != rbp);\n    rax = r13 + rbp;\n    rbx = rbp;\nlabel_2:\n    if (r8 <= rbx) {\n        goto label_6;\n    }\n    if (rax >= rdx) {\n        goto label_6;\n    }\n    rsi = *((r12 + 8));\n    while (r8 > rbx) {\n        if (rax >= rdx) {\n            goto label_7;\n        }\n        rax++;\n        rbx++;\n        rcx = *((rsi + rax*8 - 8));\n        *((r15 + rbx*8 - 8)) = rcx;\n    }\nlabel_7:\n    if (rbx < rbp) {\n        goto label_8;\n    }\nlabel_6:\n    rsi = *((r12 + 0x30));\n    rcx = r15;\n    edx = ebx;\n    *((r15 + rbx*8)) = 0;\n    rdi = r14;\n    eax = uint64_t (*r14 + 0x40)(uint64_t) (r8);\n    r8 = *((rsp + 8));\n    if (eax != 0) {\n        goto label_9;\n    }\n    rax = *((r14 + 0x38));\n    rax++;\n    if (rax < r8) {\n        goto label_10;\n    }\n    edx = 5;\n    *((rsp + 8)) = r8;\n    rax = dcgettext (0, \"can't call exec() due to argument size restrictions\");\n    eax = 0;\n    error (1, 0, rax);\n    rbp = *((r14 + 0x38));\n    r8 = *((rsp + 8));\nlabel_1:\n    rdx = *(r12);\n    rcx = r13 + 1;\n    rax = rdx;\n    rax -= rbp;\n    if (rcx < rax) {\n        goto label_0;\n    }\n    free (r15);\n    rax = *((r12 + 0x28));\n    *(r12) = rbp;\n    *((r12 + 0x20)) = rax;\n    rax = 0xffffffff00000000;\n    *((r12 + 0x38)) = rax;\n    return rax;\nlabel_10:\n    rcx = r8;\n    rax = fcn_00404600 (r14, r12, 0);\n    rbp = *((r14 + 0x38));\n    r8 = rax;\n    goto label_1;\nlabel_9:\n    rcx = r8;\n    rax = fcn_00404600 (r14, r12, 1);\n    rbp = *((r14 + 0x38));\n    r8 = rax;\n    r13 -= rbp;\n    r13 += rbx;\n    goto label_1;\nlabel_5:\n    rax = r13;\n    ebx = 0;\n    goto label_2;\nlabel_8:\n    assert_fail (\"dst_pos >= ctl->initial_argc\", \"buildcmd.c\", 0x102, \"copy_args\");\nlabel_4:\n    assert_fail (\"state->cmd_argv[state->cmd_argc-1] == NULL\", \"buildcmd.c\", 0x116, \"bc_do_exec\");\nlabel_3:\n    return assert_fail (\"state->cmd_argc > 0\", \"buildcmd.c\", 0x115, \"bc_do_exec\");\n}\n"
        },
        {
            "funcName": "fcn_00404e60",
            "funcStartAddr": "0x404e60",
            "funcEndAddr": "0x404ea0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x404e60 */\n#include <stdint.h>\n \nint64_t fcn_00404e60 (void) {\n    ebp = 0;\n    rbx = _environ;\n    rdi = *(rbx);\n    if (rdi == 0) {\n        goto label_0;\n    }\n    do {\n        strlen (rdi);\n        rbx += 8;\n        rdi = *(rbx);\n        rbp = rbp + rax + 1;\n    } while (rdi != 0);\nlabel_0:\n    rax = rbp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00404ea0",
            "funcStartAddr": "0x404ea0",
            "funcEndAddr": "0x404f73",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x404ea0 */\n#include <stdint.h>\n \nuint64_t fcn_00404ea0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r12 = rsi;\n    rbx = rdi;\n    rax = fcn_00404e60 ();\n    *((rbx + 0x10)) = 0x1000;\n    edi = 0;\n    rax = sysconf ();\n    *(rbx) = 0;\n    rdx = 0x7fffffffffffffff;\n    if (rax <= 0) {\n        rax = rdx;\n    }\n    *((rbx + 8)) = rax;\n    if (rbp <= rax) {\n        rsi = rbp + r12;\n        if (rsi >= rax) {\n            goto label_0;\n        }\n        rax -= rsi;\n        rdx = rax;\n        *((rbx + 8)) = rax;\n        rdx >>= 3;\n        rdx -= 2;\n        *((rbx + 0x20)) = rdx;\n        if (rdx == 0) {\n            goto label_1;\n        }\n        *((rbx + 0x18)) = rax;\n        eax = 0;\n        *((rbx + 0x28)) = 0;\n        *((rbx + 0x30)) = 0;\n        *((rbx + 0x38)) = 0;\n        *((rbx + 0x40)) = 0x404700;\n        *((rbx + 0x48)) = 0;\n        *((rbx + 0x50)) = 0;\n        return rax;\n    }\n    eax = 1;\n    return rax;\nlabel_0:\n    eax = 2;\n    return rax;\nlabel_1:\n    return assert_fail (\"ctl->max_arg_count > 0\", \"buildcmd.c\", 0x216, \"bc_init_controlinfo\");\n}\n"
        },
        {
            "funcName": "fcn_00404f80",
            "funcStartAddr": "0x404f80",
            "funcEndAddr": "0x404fa4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x404f80 */\n#include <stdint.h>\n \nint64_t fcn_00404f80 (int64_t arg1) {\n    rdi = arg1;\n    rax = *((rdi + 8));\n    if (rax > 0x1ffff) {\n        rax = *((rdi + 0x10));\n        edx = 0x20000;\n        if (rax >= 0x20001) {\n            rax = rdx;\n            goto label_0;\n        }\n    }\nlabel_0:\n    *((rdi + 0x18)) = rax;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405050",
            "funcStartAddr": "0x405050",
            "funcEndAddr": "0x40506e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x405050 */\n#include <stdint.h>\n \nint64_t fcn_00405050 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rax = *((rdi + 0x38));\n    *(rsi) = rax;\n    rax = *((rsi + 0x28));\n    *((rsi + 0x20)) = rax;\n    rax = 0xffffffff00000000;\n    *((rsi + 0x38)) = rax;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405070",
            "funcStartAddr": "0x405070",
            "funcEndAddr": "0x4050d9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x405070 */\n#include <stdint.h>\n \nuint64_t fcn_00405070 (int64_t arg1) {\n    rdi = arg1;\n    r12 = rdi;\n    ebp = 0;\n    rdi = *(rdi);\n    ebx = 0;\n    if (rdi == 0) {\n        goto label_0;\n    }\n    do {\n        rax = strlen (rdi);\n        rbx++;\n        rdi = *((r12 + rbx*8));\n        rbp += rax;\n    } while (rdi != 0);\nlabel_0:\n    eax = fcn_00404710 (\"__GNU_FINDUTILS_EXEC_ARG_COUNT_LIMIT\", rbx);\n    edx = 1;\n    if (eax != 0) {\n        eax = edx;\n        return rax;\n    }\n    eax = fcn_00404710 (\"__GNU_FINDUTILS_EXEC_ARG_LENGTH_LIMIT\", rbp);\n    dl = (eax != 0) ? 1 : 0;\n    eax = edx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004050e0",
            "funcStartAddr": "0x4050e0",
            "funcEndAddr": "0x40515c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x4050e0 */\n#include <stdint.h>\n \nuint64_t fcn_004050e0 (void) {\n    edi = \"/proc/self/fd\";\n    rax = fcn_00405aa0 ();\n    if (rax == 0) {\n        goto label_2;\n    }\n    r12d = 0;\n    ebx = 0xffffffff;\n    do {\nlabel_0:\n        rdi = rbp;\n        rax = readdir ();\n        if (rax == 0) {\n            goto label_3;\n        }\nlabel_1:\n        if (*((rax + 0x13)) != 0x2e) {\n            goto label_4;\n        }\n        edx = *((rax + 0x14));\n    } while (dl == 0x2e);\n    if (dl == 0) {\n        goto label_0;\n    }\nlabel_4:\n    r12d = 1;\n    eax = fcn_004055f0 (rax + 0x13, 0);\n    rdi = rbp;\n    if (ebx < eax) {\n        ebx = eax;\n    }\n    rax = readdir ();\n    if (rax != 0) {\n        goto label_1;\n    }\nlabel_3:\n    rdi = rbp;\n    closedir ();\n    while (1) {\n        eax = ebx;\n        return rax;\nlabel_2:\n        ebx = 0xffffffff;\n    }\n}\n"
        },
        {
            "funcName": "fcn_00405260",
            "funcStartAddr": "0x405260",
            "funcEndAddr": "0x4052a5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x405260 */\n#include <stdint.h>\n \nuint64_t fcn_00405260 (void) {\n    edi = 4;\n    rax = sysconf ();\n    rsi = rsp;\n    edi = 7;\n    rbx = rax;\n    eax = 0x14;\n    if (rax == -1) {\n        rbx = rax;\n    }\n    eax = getrlimit ();\n    edx = ebx;\n    if (eax == 0) {\n        rdx = *(rsp);\n        if (rdx != -1) {\n            edx = ebx;\n            goto label_0;\n        }\n    }\nlabel_0:\n    eax = edx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004052b0",
            "funcStartAddr": "0x4052b0",
            "funcEndAddr": "0x405399",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x4052b0 */\n#include <stdint.h>\n \nint64_t fcn_004052b0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (edi <= 0) {\n        goto label_3;\n    }\n    r14d = edi;\n    r13 = rsi;\n    r12 = rdx;\n    ebp = 0;\nlabel_0:\n    eax = r14d;\n    r15d = 0x40;\n    eax -= ebp;\n    if (eax <= 0x40) {\n        r15d = eax;\n    }\n    rsi = (int64_t) r15d;\n    if (eax <= 0) {\n        goto label_4;\n    }\n    rax = rsp;\n    edx = 0;\n    do {\n        edi = 0;\n        ecx = 5;\n        rax += 8;\n        *((rax - 2)) = di;\n        edi = rbp + rdx;\n        edx++;\n        *((rax - 4)) = cx;\n        *((rax - 8)) = edi;\n    } while (edx < r15d);\n    edx = 0;\n    rdi = rsp;\n    eax = poll ();\n    if (eax == 0xffffffff) {\n        goto label_5;\n    }\n    ebx = 0;\n    do {\n        if (*((rsp + rbx*8 + 6)) != 0x20) {\n            edi = *((rsp + rbx*8));\n            rsi = r12;\n            eax = void (*r13)() ();\n            if (eax != 0) {\n                goto label_2;\n            }\n        }\n        rbx++;\n    } while (r15d > ebx);\nlabel_1:\n    ebp += r15d;\n    if (r14d > ebp) {\n        goto label_0;\n    }\n    eax = 0;\nlabel_2:\n    return rax;\nlabel_4:\n    edx = 0;\n    rdi = rsp;\n    eax = poll ();\n    if (eax != 0xffffffff) {\n        goto label_1;\n    }\nlabel_5:\n    eax = 0xffffffff;\n    goto label_2;\nlabel_3:\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004053a0",
            "funcStartAddr": "0x4053a0",
            "funcEndAddr": "0x405403",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x4053a0 */\n#include <stdint.h>\n \nuint64_t fcn_004053a0 (void) {\n    int64_t var_8h;\n    int64_t var_10h;\n    eax = fcn_004050e0 ();\n    if (eax < 0) {\n        eax = fcn_00405260 ();\n    }\n    edx = 0;\n    *(rsp) = 0;\n    *((rsp + 0x10)) = 0;\n    dl = (eax != 0x7fffffff) ? 1 : 0;\n    *((rsp + 8)) = 0;\n    eax += edx;\n    fcn_004052b0 (eax, 0x405160, rsp);\n    rax = *(rsp);\n    *(0x00612508) = rax;\n    rax = *((rsp + 8));\n    *(0x00612500) = rax;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405410",
            "funcStartAddr": "0x405410",
            "funcEndAddr": "0x40551e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x405410 */\n#include <stdint.h>\n \nuint64_t fcn_00405410 (int64_t arg_80h, int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13 = rdi;\n    ebx = esi;\n    esi &= 0x40;\n    *((rsp + 0x30)) = rdx;\n    if (esi != 0) {\n        goto label_2;\n    }\n    r12d = 0;\nlabel_0:\n    ebp = *(0x006124f9);\n    while (1) {\nlabel_1:\n        eax = 0;\n        esi |= 0x80000;\n        eax = fcn_00405b30 (r13, ebx, r12d, rcx);\n        ebx = eax;\n        if (eax >= 0) {\n            if (*(0x006124f8) == 0) {\n                goto label_3;\n            }\n        }\n        eax = ebx;\n        return eax;\n        eax = 0;\n        eax = fcn_00405b30 (0x40ddc6, 0x80000, rdx, rcx);\n        r14d = eax;\n        if (eax >= 0) {\n            goto label_4;\n        }\n        *(0x006124f8) = bpl;\n        *(0x006124f9) = 1;\n    }\nlabel_2:\n    rax = rsp + 0x80;\n    *((rsp + 8)) = 0x10;\n    r12d = *((rsp + 0x30));\n    *((rsp + 0x10)) = rax;\n    rax = rsp + 0x20;\n    *((rsp + 0x18)) = rax;\n    goto label_0;\nlabel_3:\n    fcn_00405860 (eax, 1, rdx);\n    eax = ebx;\n    return rax;\nlabel_4:\n    edi = eax;\n    eax = 0;\n    eax = fcn_00409d40 (edi, 1, rdx, rcx, r8);\n    close (r14d);\n    ebp &= 1;\n    *(0x006124f9) = 1;\n    *(0x006124f8) = bpl;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00405550",
            "funcStartAddr": "0x405550",
            "funcEndAddr": "0x4055f0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x405550 */\n#include <stdint.h>\n \nuint64_t fcn_00405550 (void) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    rbx = imp.__libc_start_main;\n    rbp = imp.__libc_start_main;\n    eax = fcn_004050e0 ();\n    if (eax < 0) {\n        eax = fcn_00405260 ();\n    }\n    edx = 0;\n    *((rsp + 8)) = rbx;\n    dl = (eax != 0x7fffffff) ? 1 : 0;\n    *(rsp) = rbp;\n    eax += edx;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0xffffffff;\n    fcn_004052b0 (eax, 0x4051d0, rsp);\n    ebx = *((rsp + 0x18));\n    if (ebx < 0) {\n        return eax;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"File descriptor %d will leak; please report this as a bug, remembering to include a detailed description of the simplest way to reproduce this problem.\");\n    ecx = ebx;\n    eax = 0;\n    error (0, 0, rax);\n    return assert_fail (\"no_leaks\", \"fdleak.c\", 0x17e, \"complain_about_leaky_fds\");\n}\n"
        },
        {
            "funcName": "fcn_004055f0",
            "funcStartAddr": "0x4055f0",
            "funcEndAddr": "0x40573e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x4055f0 */\n#include <stdint.h>\n \nint64_t fcn_004055f0 (int64_t arg1, int64_t arg2) {\n    char * * endptr;\n    rdi = arg1;\n    rsi = arg2;\n    r13d = esi;\n    errno_location ();\n    *(rax) = 0;\n    r12 = rax;\n    rax = strtol (rbp, rsp + 8, 0xa);\n    rbx = rax;\n    rax = 0x7fffffffffffffff;\n    rax += rbx;\n    if (rax <= 0xfffffffffffffffd) {\n        goto label_1;\n    }\n    rcx = rbp;\n    eax = 0;\n    eax = error (1, *(r12), 0x40dcb9);\n    do {\n        rcx = rbp;\n        esi = 0x22;\n        eax = 0;\n        *(r12) = 0x22;\n        error (1, esi, 0x40dcb9);\nlabel_0:\n        eax = ebx;\n        return rax;\nlabel_1:\n        eax = 0x80000000;\n        edx = 0xffffffff;\n        rax += rbx;\n    } while (rax > rdx);\n    rdx = *((rsp + 8));\n    if (*(rdx) != 0) {\n        goto label_2;\n    }\n    if (rdx != rbp) {\n        goto label_0;\n    }\n    rax = fcn_00408c90 (0, r13d);\n    edx = 5;\n    rax = dcgettext (0, \"Expected an integer: %s\");\n    rcx = rbp;\n    eax = 0;\n    error (1, *(r12), rax);\n    goto label_0;\nlabel_2:\n    rdx = rbp;\n    rax = fcn_00408c90 (1, r13d);\n    rdx = *((rsp + 8));\n    r14 = rax;\n    rax = fcn_00408c90 (0, r13d);\n    edx = 5;\n    rax = dcgettext (0, \"Unexpected suffix %s on %s\");\n    r8 = r14;\n    rcx = rbp;\n    eax = 0;\n    error (1, *(r12), rax);\n    eax = ebx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405740",
            "funcStartAddr": "0x405740",
            "funcEndAddr": "0x40583e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x405740 */\n#include <stdint.h>\n \nuint64_t fcn_00405740 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13 = rdi;\n    rbx = rsi;\n    rax = errno_location ();\n    r14d = *(rax);\n    if (rbx == 0) {\n        goto label_5;\n    }\n    rsi = *(rbp);\n    r12 = rax;\n    if (rsi == 0) {\n        goto label_6;\n    }\n    rax = r13;\n    if (rsi >= rbx) {\n        goto label_2;\n    }\n    rdi = rsi + rsi;\n    if (rsi <= rdi) {\n        goto label_0;\n    }\n    goto label_7;\n    do {\n        rax = rdi + rdi;\n        if (rdi > rax) {\n            goto label_8;\n        }\n        rdi = rax;\nlabel_0:\n    } while (rdi < rbx);\n    if (rsi != 0) {\n        goto label_9;\n    }\nlabel_1:\n    if (r13 != 0) {\n        goto label_10;\n    }\n    *(rbp) = rdi;\n    rax = malloc (rdi);\nlabel_2:\n    if (rax == 0) {\n        goto label_11;\n    }\nlabel_3:\n    *(r12) = r14d;\n    return rax;\nlabel_6:\n    edi = 0x20;\n    if (rbx > 0x10) {\n        goto label_0;\n    }\n    edi = 0x10;\n    goto label_1;\nlabel_8:\n    rdi = rbx;\n    if (rsi == 0) {\n        goto label_1;\n    }\nlabel_9:\n    rax = r13;\n    if (rsi == rdi) {\n        goto label_2;\n    }\nlabel_4:\n    *(rbp) = rdi;\n    rax = realloc (r13, rdi);\n    if (rax != 0) {\n        goto label_3;\n    }\nlabel_11:\n    eax = 0;\n    return rax;\nlabel_7:\n    rdi = rbx;\n    goto label_4;\nlabel_10:\n    assert_fail (\"NULL == existing\", \"extendbuf.c\", 0x4f, \"extendbuf\");\nlabel_5:\n    return assert_fail (\"wanted > 0u\", \"extendbuf.c\", 0x47, \"extendbuf\");\n}\n"
        },
        {
            "funcName": "fcn_00405860",
            "funcStartAddr": "0x405860",
            "funcEndAddr": "0x4058b7",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x405860 */\n#include <stdint.h>\n \nint32_t fcn_00405860 (int64_t arg1, int64_t arg2, int64_t arg4) {\n    rdi = arg1;\n    rsi = arg2;\n    rcx = arg4;\n    eax = 0;\n    ebx = edi;\n    eax = fcn_00409d40 (rdi, 1, 0, rcx, r8);\n    if (eax < 0) {\n        goto label_0;\n    }\n    ecx = eax;\n    eax |= 1;\n    edx = ecx;\n    edx &= 0xfffffffe;\n    if (bpl != 0) {\n        edx = eax;\n    }\n    eax = 0;\n    if (edx == ecx) {\n        goto label_1;\n    }\n    eax = fcn_00409d40 (ebx, 2, rdx, rcx, r8);\n    al = (eax == 0xffffffff) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = -eax;\n    do {\nlabel_1:\n        return eax;\nlabel_0:\n        eax = 0xffffffff;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00405a00",
            "funcStartAddr": "0x405a00",
            "funcEndAddr": "0x405a9e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x405a00 */\n#include <stdint.h>\n \nuint64_t fcn_00405a00 (void) {\n    eax = fcn_0040b2b0 (*(obj.stdout));\n    if (eax != 0) {\n        rax = errno_location ();\n        rbx = rax;\n        if (*(0x00612518) == 0) {\n            goto label_0;\n        }\n        if (*(rax) != 0x20) {\n            goto label_0;\n        }\n    }\n    eax = fcn_0040b2b0 (*(obj.stderr));\n    if (eax != 0) {\n        goto label_1;\n    }\n    return rax;\nlabel_0:\n    edx = 5;\n    rax = dcgettext (0, \"write error\");\n    rdi = imp.__libc_start_main;\n    if (rdi == 0) {\n        goto label_2;\n    }\n    rax = fcn_00408e10 (rdi, rsi, rdx, rcx);\n    r8 = rbp;\n    rcx = rax;\n    eax = 0;\n    error (0, *(rbx), \"%s: %s\");\n    do {\nlabel_1:\n        rax = exit (*(0x006122c0));\nlabel_2:\n        rcx = rax;\n        eax = 0;\n        error (0, *(rbx), 0x40dcb9);\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00405aa0",
            "funcStartAddr": "0x405aa0",
            "funcEndAddr": "0x405b2e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x405aa0 */\n#include <stdint.h>\n \nuint64_t fcn_00405aa0 (void) {\n    rax = opendir ();\n    rbx = rax;\n    if (rax != 0) {\n        rdi = rax;\n        eax = dirfd ();\n        if (eax <= 2) {\n            goto label_1;\n        }\n    }\n    rax = rbx;\n    return rax;\nlabel_1:\n    eax = fcn_00409080 (eax, rsi);\n    r12d = eax;\n    rax = errno_location ();\n    if (r12d >= 0) {\n        goto label_2;\n    }\n    r14d = *(rax);\n    r13d = 0;\n    do {\nlabel_0:\n        rdi = rbx;\n        rbx = r13;\n        closedir ();\n        *(rbp) = r14d;\n        rax = rbx;\n        return rax;\nlabel_2:\n        edi = r12d;\n        rax = fdopendir ();\n        r14d = *(rbp);\n        r13 = rax;\n    } while (rax != 0);\n    close (r12d);\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00405b30",
            "funcStartAddr": "0x405b30",
            "funcEndAddr": "0x405b7a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x405b30 */\n#include <stdint.h>\n \nuint64_t fcn_00405b30 (int64_t arg_60h, int64_t arg3, int32_t oflag, const char * path) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_30h;\n    rdx = arg3;\n    rsi = oflag;\n    rdi = path;\n    *((rsp + 0x30)) = rdx;\n    edx = 0;\n    while (1) {\n        eax = 0;\n        eax = open (rdi, rsi, rdx);\n        fcn_00409090 (eax, rsi);\n        return eax;\n        rax = rsp + 0x60;\n        *((rsp + 8)) = 0x10;\n        edx = *((rsp + 0x30));\n        *((rsp + 0x10)) = rax;\n        rax = rsp + 0x20;\n        *((rsp + 0x18)) = rax;\n    }\n}\n"
        },
        {
            "funcName": "fcn_00405b80",
            "funcStartAddr": "0x405b80",
            "funcEndAddr": "0x405cf6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x405b80 */\n#include <stdint.h>\n \nint64_t fcn_00405b80 (int64_t arg1, int64_t arg2, uint32_t arg3, int64_t arg4) {\n    int64_t var_28h;\n    uint32_t var_20h;\n    int64_t var_18h;\n    int64_t var_8h;\n    int64_t var_fh;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    rax = 0x1fffffffffffffff;\n    if (rdx > rax) {\n        goto label_5;\n    }\n    rbx = rdi;\n    rdi = rdx*8;\n    if (rdi > 0xfaf) {\n        goto label_6;\n    }\n    rdi += 0x27;\n    rdi &= 0xfffffffffffffff0;\n    rdi = rsp + 0xf;\n    rdi &= 0xfffffffffffffff0;\n    rdi += 0x10;\n    if (rdi == 0) {\n        goto label_7;\n    }\nlabel_1:\n    *((rdi + 8)) = 1;\n    r8d = 0;\n    r9d = 2;\n    if (rdx <= 2) {\n        goto label_8;\n    }\nlabel_0:\n    eax = *((rsi + r9 - 1));\n    if (al != *((rsi + r8))) {\n        goto label_9;\n    }\n    goto label_10;\n    do {\n        r8 -= *((rdi + r8*8));\n        if (*((rsi + r8)) == al) {\n            goto label_10;\n        }\nlabel_9:\n    } while (r8 != 0);\n    *((rdi + r9*8)) = r9;\n    r8d = 0;\nlabel_3:\n    r9++;\n    if (rdx != r9) {\n        goto label_0;\n    }\nlabel_8:\n    *(rcx) = 0;\n    r8d = *(rbx);\n    r9 = rbx;\n    eax = 0;\nlabel_2:\n    if (r8b == 0) {\n        goto label_4;\n    }\n    do {\n        if (*((rsi + rax)) == r8b) {\n            goto label_11;\n        }\n        if (rax == 0) {\n            goto label_12;\n        }\n        r10 = *((rdi + rax*8));\n        rbx += r10;\n        rax -= r10;\n    } while (r8b != 0);\nlabel_4:\n    fcn_0040b900 (rdi);\n    eax = 1;\n    rbx = *((rbp - 8));\n    return rax;\nlabel_6:\n    *((rbp - 0x28)) = rcx;\n    *((rbp - 0x20)) = rdx;\n    *((rbp - 0x18)) = rsi;\n    rax = fcn_0040b890 (rdi);\n    rcx = *((rbp - 0x28));\n    rdx = *((rbp - 0x20));\n    rdi = rax;\n    rsi = *((rbp - 0x18));\n    if (rdi != 0) {\n        goto label_1;\n    }\nlabel_7:\n    eax = 0;\n    rbx = *((rbp - 8));\n    return rax;\nlabel_11:\n    rax++;\n    r10 = r9 + 1;\n    if (rdx != rax) {\n        r8d = *((r9 + 1));\n        r9 = r10;\n        goto label_2;\nlabel_12:\n        r8d = *((r9 + 1));\n        rbx++;\n        r9++;\n        goto label_2;\nlabel_10:\n        r8++;\n        rax = r9;\n        rax -= r8;\n        *((rdi + r9*8)) = rax;\n        goto label_3;\nlabel_5:\n        eax = 0;\n        return rax;\n    }\n    *(rcx) = rbx;\n    goto label_4;\n}\n"
        },
        {
            "funcName": "fcn_00405d00",
            "funcStartAddr": "0x405d00",
            "funcEndAddr": "0x405d1d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x405d00 */\n#include <stdint.h>\n \nvoid fcn_00405d00 (void) {\n    return assert_fail (\"iter->cur.wc == 0\", \"mbuiter.h\", 0xb3, \"mbuiter_multi_next\");\n}\n"
        },
        {
            "funcName": "fcn_00405d20",
            "funcStartAddr": "0x405d20",
            "funcEndAddr": "0x40a406",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x405d20 */\n#include <stdint.h>\n \nuint64_t fcn_00405d20 (mbstate_t * arg1, int64_t arg2, uint32_t arg3) {\n    uint32_t var_110h;\n    mbstate_t * ps;\n    uint32_t var_100h;\n    mbstate_t * var_f8h;\n    uint32_t var_f0h;\n    int64_t var_ech;\n    int64_t var_e4h;\n    char * s;\n    size_t var_d8h;\n    int64_t var_d0h;\n    int64_t var_cch;\n    uint32_t var_b0h;\n    int64_t var_ach;\n    uint32_t var_a4h;\n    char * var_a0h;\n    size_t var_98h;\n    uint32_t var_90h;\n    int64_t var_8ch;\n    uint32_t var_70h;\n    int64_t var_6ch;\n    int64_t var_64h;\n    char * s2;\n    size_t var_58h;\n    uint32_t var_50h;\n    int64_t var_4ch;\n    int64_t var_28h;\n    int64_t var_fh;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    /* [13] -r-x section size 40120 named .text */\nlabel_3:\n    abort ();\n    rbx = rsi;\n    *((rbp - 0x108)) = rdi;\n    *((rbp - 0x110)) = rdx;\n    rax = fcn_0040ba40 (rsi);\n    rcx = rax;\n    *((rbp - 0x100)) = rax;\n    rax = 0x492492492492492;\n    if (rcx > rax) {\n        goto label_21;\n    }\n    rax = *((rbp - 0x100));\n    rdi = rax*8;\n    rdi -= rax;\n    rdi <<= 3;\n    if (rdi > 0xfaf) {\n        goto label_22;\n    }\n    rdi += 0x27;\n    rdi &= 0xfffffffffffffff0;\n    r12 = rsp + 0xf;\n    r12 &= 0xfffffffffffffff0;\n    r12 += 0x10;\nlabel_7:\n    if (r12 == 0) {\n        goto label_21;\n    }\n    rax = *((rbp - 0x100));\n    *((rbp - 0xe0)) = rbx;\n    rbx = r12;\n    *((rbp - 0xf0)) = 0;\n    r13 = rax * 3;\n    *((rbp - 0xe4)) = 0;\n    *((rbp - 0xec)) = 0;\n    r13 <<= 4;\n    r13 += r12;\n    while (*((rbp - 0xf0)) == 0) {\n        rdx = *((rbp - 0xe0));\n        ecx = *(rdx);\n        eax = ecx;\n        al >>= 5;\n        eax &= 7;\n        eax = *((rax*4 + 0x40f520));\n        eax >>= cl;\n        if ((al & 1) == 0) {\n            goto label_23;\n        }\n        *((rbp - 0xd8)) = 1;\n        eax = *(rdx);\n        *((rbp - 0xd0)) = 1;\n        *((rbp - 0xcc)) = eax;\n        r8d = *((rbp - 0xcc));\n        *((rbp - 0xe4)) = 1;\n        if (r8d == 0) {\n            goto label_24;\n        }\nlabel_0:\n        eax = 1;\nlabel_10:\n        rcx = rbp - 0xf0;\n        rsi = *((rbp - 0xe0));\n        rdx = *((rbp - 0xd8));\n        rcx += 0x28;\n        if (rsi == rcx) {\n            goto label_25;\n        }\n        *(rbx) = rsi;\nlabel_9:\n        *((rbx + 8)) = rdx;\n        *((rbx + 0x10)) = al;\n        if (al != 0) {\n            eax = *((rbp - 0xcc));\n            *((rbx + 0x14)) = eax;\n        }\n        *((rbp - 0xe0)) += rdx;\n        rbx += 0x30;\n        *((rbp - 0xe4)) = 0;\n    }\nlabel_8:\n    rax = ctype_get_mb_cur_max ();\n    r14 = *((rbp - 0xe0));\n    rax = fcn_00409040 (r14, rax);\n    rsi = rbp - 0xf0;\n    rcx = rsi + 4;\n    rdx = rax;\n    rax = fcn_0040b170 (rsi + 0x24, r14);\n    *((rbp - 0xd8)) = rax;\n    if (rax == -1) {\n        goto label_26;\n    }\n    if (rax == 0xfffffffffffffffe) {\n        goto label_27;\n    }\n    if (rax == 0) {\n        rax = *((rbp - 0xe0));\n        *((rbp - 0xd8)) = 1;\n        if (*(rax) != 0) {\n            goto label_28;\n        }\n        r9d = *((rbp - 0xcc));\n        if (r9d != 0) {\n            goto label_29;\n        }\n    }\n    rax = rbp - 0xf0;\n    *((rbp - 0xd0)) = 1;\n    eax = mbsinit (rax + 4);\n    if (eax != 0) {\n        *((rbp - 0xf0)) = 0;\n    }\n    r8d = *((rbp - 0xcc));\n    *((rbp - 0xe4)) = 1;\n    if (r8d != 0) {\n        goto label_0;\n    }\nlabel_24:\n    r15d = 0;\n    r14 = r12 + 0x30;\n    *((r13 + 8)) = 1;\n    *((rbp - 0xf8)) = 2;\n    if (*((rbp - 0x100)) <= 2) {\n        goto label_30;\n    }\nlabel_2:\n    ebx = *((r14 + 0x10));\n    while (bl != 0) {\n        if (*((rax + 0x10)) == 0) {\n            goto label_31;\n        }\n        eax = *((rax + 0x14));\n        if (*((r14 + 0x14)) == eax) {\n            goto label_32;\n        }\nlabel_1:\n        if (r15 == 0) {\n            goto label_33;\n        }\n        r15 -= *((r13 + r15*8));\n        rax = r15 * 3;\n        rax <<= 4;\n        rax += r12;\n    }\nlabel_31:\n    rdx = *((r14 + 8));\n    if (rdx != *((rax + 8))) {\n        goto label_1;\n    }\n    eax = memcmp (*(r14), *(rax), rdx);\n    if (eax != 0) {\n        goto label_1;\n    }\nlabel_32:\n    rbx = *((rbp - 0xf8));\n    r15++;\n    rax = rbx;\n    rax -= r15;\n    *((r13 + rbx*8)) = rax;\nlabel_19:\n    *((rbp - 0xf8))++;\n    r14 += 0x30;\n    rax = *((rbp - 0xf8));\n    if (*((rbp - 0x100)) != rax) {\n        goto label_2;\n    }\nlabel_30:\n    rax = *((rbp - 0x110));\n    rbx = rbp - 0x70;\n    *((rbp - 0xb0)) = 0;\n    r15d = 0;\n    rbx += 4;\n    *((rbp - 0xa4)) = 0;\n    *(rax) = 0;\n    rax = *((rbp - 0x108));\n    *((rbp - 0x108)) = rbx;\n    rbx = rbp - 0xb0;\n    rbx += 4;\n    *((rbp - 0x70)) = 0;\n    *((rbp - 0xac)) = 0;\n    *((rbp - 0x6c)) = 0;\n    *((rbp - 0x64)) = 0;\n    *((rbp - 0xf8)) = rbx;\n    *((rbp - 0xa0)) = rax;\n    *((rbp - 0x60)) = rax;\n    eax = 0;\nlabel_14:\n    if (al == 0) {\n        goto label_6;\n    }\n    if (*((rbp - 0x50)) != 0) {\n        goto label_11;\n    }\nlabel_17:\n    rax = r15 * 3;\n    rax <<= 4;\n    rax += r12;\nlabel_4:\n    rdx = *((rax + 8));\n    if (rdx == *((rbp - 0x58))) {\n        goto label_34;\n    }\nlabel_5:\n    if (r15 != 0) {\n        goto label_35;\n    }\nlabel_13:\n    if (*((rbp - 0xa4)) != 0) {\n        goto label_36;\n    }\n    if (*((rbp - 0xb0)) != 0) {\n        goto label_37;\n    }\n    rdx = *((rbp - 0xa0));\n    ecx = *(rdx);\n    eax = ecx;\n    al >>= 5;\n    eax &= 7;\n    eax = *((rax*4 + 0x40f520));\n    eax >>= cl;\n    if ((al & 1) == 0) {\n        goto label_38;\n    }\n    *((rbp - 0x98)) = 1;\n    eax = *(rdx);\n    *((rbp - 0x90)) = 1;\n    *((rbp - 0x8c)) = eax;\n    *((rbp - 0xa4)) = 1;\nlabel_18:\n    edx = *((rbp - 0x8c));\n    if (edx == 0) {\n        goto label_3;\n    }\nlabel_20:\n    rax = *((rbp - 0x98));\n    *((rbp - 0xa0)) += rax;\n    rax = *((rbp - 0x58));\n    *((rbp - 0x60)) += rax;\n    *((rbp - 0xa4)) = 0;\n    *((rbp - 0x64)) = 0;\nlabel_6:\n    if (*((rbp - 0x70)) != 0) {\n        goto label_39;\n    }\n    rdx = *((rbp - 0x60));\n    ecx = *(rdx);\n    eax = ecx;\n    al >>= 5;\n    eax &= 7;\n    eax = *((rax*4 + 0x40f520));\n    eax >>= cl;\n    if ((al & 1) == 0) {\n        goto label_40;\n    }\n    *((rbp - 0x58)) = 1;\n    eax = *(rdx);\n    *((rbp - 0x50)) = 1;\n    *((rbp - 0x4c)) = eax;\n    *((rbp - 0x64)) = 1;\nlabel_11:\n    edx = *((rbp - 0x4c));\n    if (edx == 0) {\n        goto label_41;\n    }\n    rax = r15 * 3;\n    rax <<= 4;\n    rax += r12;\n    if (*((rax + 0x10)) == 0) {\n        goto label_4;\n    }\n    if (*((rax + 0x14)) != edx) {\n        goto label_5;\n    }\nlabel_12:\n    rax = *((rbp - 0x58));\n    r15++;\n    *((rbp - 0x60)) += rax;\n    *((rbp - 0x64)) = 0;\n    if (*((rbp - 0x100)) != r15) {\n        goto label_6;\n    }\n    rax = *((rbp - 0xa0));\n    rbx = *((rbp - 0x110));\n    *(rbx) = rax;\nlabel_41:\n    fcn_0040b900 (r12);\n    rsp = rbp - 0x28;\n    eax = 1;\n    return rax;\nlabel_21:\n    rsp = rbp - 0x28;\n    eax = 0;\n    return rax;\nlabel_22:\n    rax = fcn_0040b890 (rdi);\n    r12 = rax;\n    goto label_7;\nlabel_23:\n    rax = rbp - 0xf0;\n    eax = mbsinit (rax + 4);\n    if (eax == 0) {\n        goto label_42;\n    }\n    *((rbp - 0xf0)) = 1;\n    goto label_8;\nlabel_25:\n    rcx = rbx + 0x18;\n    rax = memcpy (rcx, rsi, rdx);\n    rdx = *((rbp - 0xd8));\n    *(rbx) = rax;\n    eax = *((rbp - 0xd0));\n    goto label_9;\nlabel_26:\n    *((rbp - 0xd8)) = 1;\n    eax = 0;\n    *((rbp - 0xd0)) = 0;\n    *((rbp - 0xe4)) = 1;\n    goto label_10;\nlabel_27:\n    rax = strlen (*((rbp - 0xe0)));\n    *((rbp - 0xd0)) = 0;\n    *((rbp - 0xd8)) = rax;\n    eax = 0;\n    *((rbp - 0xe4)) = 1;\n    goto label_10;\nlabel_40:\n    eax = mbsinit (*((rbp - 0x108)));\n    if (eax == 0) {\n        goto label_42;\n    }\n    *((rbp - 0x70)) = 1;\nlabel_39:\n    rax = ctype_get_mb_cur_max ();\n    rbx = *((rbp - 0x60));\n    rax = fcn_00409040 (rbx, rax);\n    rsi = rbp - 0x70;\n    rcx = rsi + 4;\n    rdx = rax;\n    rax = fcn_0040b170 (rsi + 0x24, rbx);\n    *((rbp - 0x58)) = rax;\n    if (rax == -1) {\n        goto label_43;\n    }\n    if (rax == 0xfffffffffffffffe) {\n        goto label_44;\n    }\n    if (rax == 0) {\n        rax = *((rbp - 0x60));\n        *((rbp - 0x58)) = 1;\n        if (*(rax) != 0) {\n            goto label_28;\n        }\n        eax = *((rbp - 0x4c));\n        if (eax != 0) {\n            goto label_29;\n        }\n    }\n    rax = rbp - 0x70;\n    *((rbp - 0x50)) = 1;\n    eax = mbsinit (rax + 4);\n    if (eax != 0) {\n        *((rbp - 0x70)) = 0;\n    }\n    *((rbp - 0x64)) = 1;\n    goto label_11;\nlabel_34:\n    eax = memcmp (*(rax), *((rbp - 0x60)), rdx);\n    if (eax == 0) {\n        goto label_12;\n    }\n    if (r15 == 0) {\n        goto label_13;\n    }\nlabel_35:\n    rbx = *((r13 + r15*8));\n    r14 = r15;\n    eax = *((rbp - 0x64));\n    r14 -= rbx;\n    if (rbx == 0) {\n        goto label_14;\n    }\n    if (*((rbp - 0xa4)) == 0) {\n        goto label_45;\n    }\n    while (esi != 0) {\nlabel_16:\n        rax = *((rbp - 0x98));\n        *((rbp - 0xa4)) = 0;\n        *((rbp - 0xa0)) += rax;\n        rbx--;\n        if (rbx == 0) {\n            goto label_46;\n        }\nlabel_45:\n        if (*((rbp - 0xb0)) != 0) {\n            goto label_47;\n        }\n        rdx = *((rbp - 0xa0));\n        ecx = *(rdx);\n        eax = ecx;\n        al >>= 5;\n        eax &= 7;\n        eax = *((rax*4 + 0x40f520));\n        eax >>= cl;\n        if ((al & 1) == 0) {\n            goto label_48;\n        }\n        *((rbp - 0x98)) = 1;\n        eax = *(rdx);\n        *((rbp - 0x90)) = 1;\n        *((rbp - 0x8c)) = eax;\n        *((rbp - 0xa4)) = 1;\nlabel_15:\n        esi = *((rbp - 0x8c));\n    }\n    goto label_3;\nlabel_48:\n    eax = mbsinit (*((rbp - 0xf8)));\n    if (eax == 0) {\n        goto label_42;\n    }\n    *((rbp - 0xb0)) = 1;\nlabel_47:\n    rax = ctype_get_mb_cur_max ();\n    r15 = *((rbp - 0xa0));\n    rax = fcn_00409040 (r15, rax);\n    rsi = rbp - 0xb0;\n    rcx = rsi + 4;\n    rdx = rax;\n    rax = fcn_0040b170 (rsi + 0x24, r15);\n    *((rbp - 0x98)) = rax;\n    if (rax != -1) {\n        if (rax == 0xfffffffffffffffe) {\n            goto label_49;\n        }\n        if (rax == 0) {\n            rax = *((rbp - 0xa0));\n            *((rbp - 0x98)) = 1;\n            if (*(rax) != 0) {\n                goto label_28;\n            }\n            edi = *((rbp - 0x8c));\n            if (edi != 0) {\n                goto label_50;\n            }\n        }\n        rax = rbp - 0xb0;\n        *((rbp - 0x90)) = 1;\n        eax = mbsinit (rax + 4);\n        if (eax != 0) {\n            *((rbp - 0xb0)) = 0;\n        }\n        *((rbp - 0xa4)) = 1;\n        goto label_15;\n    }\n    *((rbp - 0x98)) = 1;\n    *((rbp - 0x90)) = 0;\n    goto label_16;\nlabel_49:\n    rax = strlen (*((rbp - 0xa0)));\n    *((rbp - 0x90)) = 0;\n    *((rbp - 0x98)) = rax;\n    goto label_16;\nlabel_46:\n    eax = *((rbp - 0x64));\n    r15 = r14;\n    goto label_14;\nlabel_43:\n    *((rbp - 0x58)) = 1;\n    *((rbp - 0x50)) = 0;\n    *((rbp - 0x64)) = 1;\n    goto label_17;\nlabel_38:\n    eax = mbsinit (*((rbp - 0xf8)));\n    if (eax == 0) {\n        goto label_42;\n    }\n    *((rbp - 0xb0)) = 1;\nlabel_37:\n    rax = ctype_get_mb_cur_max ();\n    rbx = *((rbp - 0xa0));\n    rax = fcn_00409040 (rbx, rax);\n    rsi = rbp - 0xb0;\n    rcx = rsi + 4;\n    rdx = rax;\n    rdi += 0x24;\n    rax = fcn_0040b170 (rsi, rbx);\n    *((rbp - 0x98)) = rax;\n    if (rax == -1) {\n        goto label_51;\n    }\n    if (rax == 0xfffffffffffffffe) {\n        goto label_52;\n    }\n    if (rax == 0) {\n        rax = *((rbp - 0xa0));\n        *((rbp - 0x98)) = 1;\n        if (*(rax) != 0) {\n            goto label_28;\n        }\n        ecx = *((rbp - 0x8c));\n        if (ecx != 0) {\n            goto label_29;\n        }\n    }\n    rax = rbp - 0xb0;\n    *((rbp - 0x90)) = 1;\n    eax = mbsinit (rax + 4);\n    if (eax != 0) {\n        *((rbp - 0xb0)) = 0;\n    }\n    *((rbp - 0xa4)) = 1;\n    goto label_18;\nlabel_33:\n    rax = *((rbp - 0xf8));\n    *((r13 + rax*8)) = rax;\n    goto label_19;\nlabel_44:\n    rax = strlen (*((rbp - 0x60)));\n    *((rbp - 0x50)) = 0;\n    *((rbp - 0x58)) = rax;\n    *((rbp - 0x64)) = 1;\n    goto label_17;\nlabel_36:\n    if (*((rbp - 0x90)) == 0) {\n        goto label_20;\n    }\n    goto label_18;\nlabel_51:\n    *((rbp - 0x98)) = 1;\n    *((rbp - 0x90)) = 0;\n    goto label_20;\nlabel_52:\n    rax = strlen (*((rbp - 0xa0)));\n    *((rbp - 0x90)) = 0;\n    *((rbp - 0x98)) = rax;\n    goto label_20;\nlabel_28:\n    assert_fail (\"*iter->cur.ptr == '\\\\0', \"mbuiter.h\", 0xb2, \"mbuiter_multi_next\");\nlabel_42:\n    assert_fail (\"mbsinit (&iter->state)\", \"mbuiter.h\", 0x96, \"mbuiter_multi_next\");\nlabel_29:\n    fcn_00405d00 ();\nlabel_50:\n    return assert_fail (\"iter->cur.wc == 0\", \"mbuiter.h\", 0xb3, \"mbuiter_multi_next\");\n}\n"
        },
        {
            "funcName": "fcn_004066f0",
            "funcStartAddr": "0x4066f0",
            "funcEndAddr": "0x40bca9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x4066f0 */\n#include <stdint.h>\n \nuint64_t fcn_004066f0 (int64_t arg1, int64_t arg2) {\n    int64_t var_8h;\n    int64_t var_10h;\n    mbstate_t * var_14h;\n    int64_t var_1ch;\n    char * var_20h;\n    size_t var_28h;\n    uint32_t var_30h;\n    int64_t var_34h;\n    uint32_t var_50h;\n    mbstate_t * var_54h;\n    uint32_t var_5ch;\n    char * s;\n    size_t var_68h;\n    uint32_t var_70h;\n    int64_t var_74h;\n    uint32_t var_90h;\n    int64_t var_94h;\n    int64_t var_9ch;\n    char * var_a0h;\n    size_t var_a8h;\n    int64_t var_b0h;\n    uint32_t var_b4h;\n    int64_t var_c0h;\n    uint32_t var_d0h;\n    mbstate_t * var_d4h;\n    uint32_t var_dch;\n    char * s1;\n    size_t var_e8h;\n    uint32_t var_f0h;\n    int64_t var_f4h;\n    int64_t var_100h;\n    uint32_t var_110h;\n    mbstate_t * ps;\n    uint32_t var_11ch;\n    char * s2;\n    size_t var_128h;\n    uint32_t var_130h;\n    uint32_t var_134h;\n    rdi = arg1;\n    rsi = arg2;\nlabel_5:\n    abort ();\n    r13 = rsi;\n    rax = ctype_get_mb_cur_max ();\n    if (rax > 1) {\n        goto label_31;\n    }\n    r15d = *(r13);\n    rax = rbp;\n    if (r15b == 0) {\n        goto label_7;\n    }\n    ecx = *(rbp);\n    if (cl == 0) {\n        goto label_32;\n    }\n    r9 = r13;\n    r12d = 0;\n    edx = 0;\n    r8d = 0;\n    eax = 1;\n    goto label_33;\nlabel_0:\n    if (r9 != 0) {\n        rsi = rbx;\n        rdi = r9;\n        *(rsp) = r9;\n        rsi -= r8;\n        rax = strnlen ();\n        r9 = *(rsp);\n        r8 = rbx;\n        r9 += rax;\n        if (*(r9) != 0) {\n            goto label_34;\n        }\n    }\n    *(rsp) = r8;\n    rax = strlen (r13);\n    al = fcn_00405b80 (r14, r13, rax, rsp + 0x110);\n    r8 = *(rsp);\n    if (al != 0) {\n        goto label_35;\n    }\n    r9d = 0;\n    do {\nlabel_1:\n        ecx = *(r14);\n        rdx = rbx;\nlabel_33:\n        r12++;\n        rbx = rdx + 1;\n        r14 = rbp + 1;\n        if (r15b == cl) {\n            goto label_36;\n        }\n        if (*((rbp + 1)) == 0) {\n            goto label_32;\n        }\nlabel_2:\n        dl = (r12 > 9) ? 1 : 0;\n        dl &= al;\n    } while (dl == 0);\n    rax = r12 * 5;\n    if (rbx >= rax) {\n        goto label_0;\n    }\nlabel_34:\n    eax = ebp;\n    goto label_1;\nlabel_31:\n    ecx = *(r13);\n    *((rsp + 0x20)) = r13;\n    rbx = rsp + 0x14;\n    *((rsp + 0x10)) = 0;\n    eax = ecx;\n    *((rsp + 0x1c)) = 0;\n    *((rsp + 0x14)) = 0;\n    al >>= 5;\n    eax &= 7;\n    eax = *((rax*4 + 0x40f520));\n    eax >>= cl;\n    if ((al & 1) == 0) {\n        goto label_37;\n    }\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x34)) = ecx;\n    *((rsp + 0x30)) = 1;\n    *((rsp + 0x1c)) = 1;\nlabel_26:\n    eax = *((rsp + 0x34));\n    if (eax != 0) {\n        goto label_29;\n    }\n    do {\nlabel_4:\n        rax = rbp;\nlabel_7:\n        return rax;\nlabel_36:\n        ecx = *((r13 + 1));\n    } while (cl == 0);\n    esi = *(r14);\n    if (sil == 0) {\n        goto label_32;\n    }\n    rbx = rdx + 2;\n    if (cl != sil) {\n        goto label_2;\n    }\n    rdx = -rdx;\n    rdi = r13 + rdx;\n    rdx += rbp;\n    goto label_38;\nlabel_3:\n    esi = *((rdx + rbx));\n    if (sil == 0) {\n        goto label_32;\n    }\n    rbx++;\n    if (cl != sil) {\n        goto label_2;\n    }\nlabel_38:\n    ecx = *((rdi + rbx));\n    if (cl != 0) {\n        goto label_3;\n    }\n    goto label_4;\nlabel_25:\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x30)) = 0;\n    *((rsp + 0x1c)) = 1;\nlabel_29:\n    *((rsp + 0x60)) = r13;\n    r12d = 0;\n    ebx = 0;\n    r14d = 1;\n    *((rsp + 0x50)) = 0;\n    *((rsp + 0x54)) = 0;\n    *((rsp + 0x5c)) = 0;\n    *((rsp + 0xa0)) = rbp;\n    *((rsp + 0x90)) = 0;\n    *((rsp + 0x94)) = 0;\n    *((rsp + 0x9c)) = 0;\n    *((rsp + 8)) = 0;\nlabel_8:\n    r15 = rsp + 0x90;\n    if (*((rsp + 0x90)) != 0) {\n        goto label_39;\n    }\n    rdx = *((rsp + 0xa0));\n    ecx = *(rdx);\n    eax = ecx;\n    al >>= 5;\n    eax &= 7;\n    eax = *((rax*4 + 0x40f520));\n    eax >>= cl;\n    if ((al & 1) == 0) {\n        goto label_40;\n    }\n    *((rsp + 0xa8)) = 1;\n    eax = *(rdx);\n    *((rsp + 0xb0)) = 1;\n    *((rsp + 0xb4)) = eax;\n    *((rsp + 0x9c)) = 1;\nlabel_17:\n    r15d = *((rsp + 0xb4));\n    if (r15d == 0) {\n        goto label_32;\n    }\n    al = (r12 > 9) ? 1 : 0;\n    al &= r14b;\n    if (al == 0) {\n        goto label_41;\n    }\n    rdx = r12 * 5;\n    if (rbx >= rdx) {\n        goto label_42;\n    }\n    rbx++;\n    r14d = eax;\nlabel_18:\n    if (*((rsp + 0x30)) == 0) {\n        goto label_19;\n    }\n    eax = *((rsp + 0x34));\n    if (*((rsp + 0xb4)) != eax) {\n        goto label_43;\n    }\nlabel_15:\n    ecx = *(r13);\n    __asm (\"movdqa xmm1, xmmword [rsp + 0xa0]\");\n    *((rsp + 0x120)) = r13;\n    r15 = rsp + 0x114;\n    __asm (\"movdqa xmm0, xmmword [rsp + 0x90]\");\n    *((rsp + 0x110)) = 0;\n    *((rsp + 0xe0)) = xmm1;\n    rax = *((rsp + 0xe8));\n    __asm (\"movdqa xmm2, xmmword [rsp + 0xb0]\");\n    eax = ecx;\n    __asm (\"movdqa xmm3, xmmword [rsp + 0xc0]\");\n    al >>= 5;\n    *((rsp + 0xd0)) = xmm0;\n    eax &= 7;\n    *((rsp + 0xf0)) = xmm2;\n    eax = *((rax*4 + 0x40f520));\n    *((rsp + 0x100)) = xmm3;\n    *((rsp + 0xdc)) = 0;\n    eax >>= cl;\n    *((rsp + 0x11c)) = 0;\n    *((rsp + 0x114)) = 0;\n    if ((al & 1) == 0) {\n        goto label_44;\n    }\n    *((rsp + 0x128)) = 1;\n    *((rsp + 0x134)) = ecx;\n    *((rsp + 0x130)) = 1;\n    *((rsp + 0x11c)) = 1;\nlabel_23:\n    esi = *((rsp + 0x134));\n    if (esi == 0) {\n        goto label_5;\n    }\nlabel_27:\n    rax = *((rsp + 0x128));\n    *((rsp + 0x11c)) = 0;\n    rbx++;\n    while (*((rsp + 0x110)) == 0) {\n        rdx = *((rsp + 0x120));\n        ecx = *(rdx);\n        eax = ecx;\n        al >>= 5;\n        eax &= 7;\n        eax = *((rax*4 + 0x40f520));\n        eax >>= cl;\n        if ((al & 1) == 0) {\n            goto label_45;\n        }\n        *((rsp + 0x128)) = 1;\n        eax = *(rdx);\n        *((rsp + 0x130)) = 1;\n        *((rsp + 0x134)) = eax;\n        edx = *((rsp + 0x134));\n        *((rsp + 0x11c)) = 1;\n        if (edx == 0) {\n            goto label_46;\n        }\nlabel_6:\n        if (*((rsp + 0xdc)) != 0) {\n            goto label_47;\n        }\n        if (*((rsp + 0xd0)) != 0) {\n            goto label_48;\n        }\n        rdx = *((rsp + 0xe0));\n        ecx = *(rdx);\n        eax = ecx;\n        al >>= 5;\n        eax &= 7;\n        eax = *((rax*4 + 0x40f520));\n        eax >>= cl;\n        if ((al & 1) == 0) {\n            goto label_49;\n        }\n        *((rsp + 0xe8)) = 1;\n        eax = *(rdx);\n        *((rsp + 0xf0)) = 1;\n        *((rsp + 0xf4)) = eax;\n        *((rsp + 0xdc)) = 1;\nlabel_11:\n        eax = *((rsp + 0xf4));\n        if (eax == 0) {\n            goto label_32;\n        }\nlabel_9:\n        if (*((rsp + 0x130)) == 0) {\n            goto label_10;\n        }\n        al = (*((rsp + 0x134)) != eax) ? 1 : 0;\nlabel_12:\n        rdx = rbx + 1;\n        if (al != 0) {\n            goto label_43;\n        }\n        rax = *((rsp + 0xe8));\n        rbx = rdx;\n        rax = *((rsp + 0x128));\n        *((rsp + 0xdc)) = 0;\n        *((rsp + 0x11c)) = 0;\n    }\nlabel_13:\n    rax = ctype_get_mb_cur_max ();\n    r15 = *((rsp + 0x120));\n    rax = fcn_00409040 (r15, rax);\n    rsi = rsp + 0x110;\n    rcx = rsp + 0x114;\n    rdx = rax;\n    rax = fcn_0040b170 (rsi + 0x24, r15);\n    *((rsp + 0x128)) = rax;\n    if (rax == -1) {\n        goto label_50;\n    }\n    if (rax == 0xfffffffffffffffe) {\n        goto label_51;\n    }\n    if (rax == 0) {\n        rax = *((rsp + 0x120));\n        *((rsp + 0x128)) = 1;\n        if (*(rax) != 0) {\n            goto label_52;\n        }\n        ecx = *((rsp + 0x134));\n        if (ecx != 0) {\n            goto label_53;\n        }\n    }\n    *((rsp + 0x130)) = 1;\n    eax = mbsinit (rsp + 0x114);\n    if (eax != 0) {\n        *((rsp + 0x110)) = 0;\n    }\n    edx = *((rsp + 0x134));\n    *((rsp + 0x11c)) = 1;\n    if (edx != 0) {\n        goto label_6;\n    }\nlabel_46:\n    rax = *((rsp + 0xa0));\n    goto label_7;\n    do {\n        *((rsp + 0xe8)) = 1;\n        *((rsp + 0xf0)) = 0;\n        *((rsp + 0xdc)) = 1;\nlabel_10:\n        rdx = *((rsp + 0xe8));\n        if (rdx == *((rsp + 0x128))) {\n            goto label_54;\n        }\nlabel_43:\n        r15 = *((rsp + 0xa8));\nlabel_14:\n        r12++;\n        *((rsp + 0x9c)) = 0;\n        goto label_8;\nlabel_49:\n        eax = mbsinit (rsp + 0xd4);\n        if (eax == 0) {\n            goto label_55;\n        }\n        *((rsp + 0xd0)) = 1;\nlabel_48:\n        rax = ctype_get_mb_cur_max ();\n        r15 = *((rsp + 0xe0));\n        rax = fcn_00409040 (r15, rax);\n        rsi = rsp + 0xd0;\n        rcx = rsp + 0xd4;\n        rdx = rax;\n        rax = fcn_0040b170 (rsi + 0x24, r15);\n        *((rsp + 0xe8)) = rax;\n    } while (rax == -1);\n    if (rax == 0xfffffffffffffffe) {\n        goto label_56;\n    }\n    if (rax == 0) {\n        rax = *((rsp + 0xe0));\n        *((rsp + 0xe8)) = 1;\n        if (*(rax) != 0) {\n            goto label_52;\n        }\n        eax = *((rsp + 0xf4));\n        if (eax != 0) {\n            goto label_53;\n        }\n    }\n    *((rsp + 0xf0)) = 1;\n    eax = mbsinit (rsp + 0xd4);\n    if (eax != 0) {\n        *((rsp + 0xd0)) = 0;\n    }\n    eax = *((rsp + 0xf4));\n    *((rsp + 0xdc)) = 1;\n    if (eax != 0) {\n        goto label_9;\n    }\nlabel_32:\n    eax = 0;\n    goto label_7;\nlabel_47:\n    if (*((rsp + 0xf0)) == 0) {\n        goto label_10;\n    }\n    goto label_11;\nlabel_54:\n    eax = memcmp (*((rsp + 0xe0)), *((rsp + 0x120)), rdx);\n    al = (eax != 0) ? 1 : 0;\n    goto label_12;\nlabel_45:\n    eax = mbsinit (rsp + 0x114);\n    if (eax == 0) {\n        goto label_55;\n    }\n    *((rsp + 0x110)) = 1;\n    goto label_13;\nlabel_16:\n    *((rsp + 0xa8)) = 1;\n    *((rsp + 0xb0)) = 0;\n    *((rsp + 0x9c)) = 1;\nlabel_22:\n    al = (r12 > 9) ? 1 : 0;\n    al &= r14b;\n    if (al == 0) {\n        goto label_57;\n    }\n    rdx = r12 * 5;\n    if (rbx >= rdx) {\n        goto label_42;\n    }\n    rbx++;\n    r14d = eax;\nlabel_19:\n    r15 = *((rsp + 0xa8));\n    if (r15 != *((rsp + 0x28))) {\n        goto label_14;\n    }\n    eax = memcmp (*((rsp + 0xa0)), *((rsp + 0x20)), r15);\n    if (eax != 0) {\n        goto label_14;\n    }\n    goto label_15;\nlabel_50:\n    *((rsp + 0x128)) = 1;\n    *((rsp + 0x130)) = 0;\n    *((rsp + 0x11c)) = 1;\n    goto label_6;\nlabel_40:\n    r15 = rsp + 0x90;\n    eax = mbsinit (r15 + 4);\n    if (eax == 0) {\n        goto label_55;\n    }\n    *((rsp + 0x90)) = 1;\nlabel_39:\n    rax = ctype_get_mb_cur_max ();\n    r8 = *((rsp + 0xa0));\n    rdi = r8;\n    *(rsp) = r8;\n    rax = fcn_00409040 (rdi, rax);\n    r8 = *(rsp);\n    rcx = r15 + 4;\n    rdx = rax;\n    rax = fcn_0040b170 (r15 + 0x24, r8);\n    *((rsp + 0xa8)) = rax;\n    if (rax == -1) {\n        goto label_16;\n    }\n    if (rax == 0xfffffffffffffffe) {\n        goto label_58;\n    }\n    if (rax == 0) {\n        rax = *((rsp + 0xa0));\n        *((rsp + 0xa8)) = 1;\n        if (*(rax) != 0) {\n            goto label_52;\n        }\n        eax = *((rsp + 0xb4));\n        if (eax != 0) {\n            goto label_53;\n        }\n    }\n    *((rsp + 0xb0)) = 1;\n    eax = mbsinit (r15 + 4);\n    if (eax != 0) {\n        *((rsp + 0x90)) = 0;\n    }\n    *((rsp + 0x9c)) = 1;\n    goto label_17;\nlabel_51:\n    rax = strlen (*((rsp + 0x120)));\n    *((rsp + 0x130)) = 0;\n    *((rsp + 0x128)) = rax;\n    *((rsp + 0x11c)) = 1;\n    goto label_6;\nlabel_56:\n    rax = strlen (*((rsp + 0xe0)));\n    *((rsp + 0xf0)) = 0;\n    *((rsp + 0xe8)) = rax;\n    *((rsp + 0xdc)) = 1;\n    goto label_10;\nlabel_41:\n    rbx++;\n    goto label_18;\nlabel_57:\n    rbx++;\n    goto label_19;\nlabel_42:\n    eax = *((rsp + 0x5c));\n    r14 = rbx;\n    r14 -= *((rsp + 8));\n    if (r14 == 0) {\n        goto label_59;\n    }\n    if (al == 0) {\n        goto label_60;\n    }\n    while (r10d != 0) {\nlabel_21:\n        rax = *((rsp + 0x68));\n        *((rsp + 0x5c)) = 0;\n        r14--;\n        if (r14 == 0) {\n            goto label_30;\n        }\nlabel_60:\n        if (*((rsp + 0x50)) != 0) {\n            goto label_61;\n        }\n        rdx = *((rsp + 0x60));\n        ecx = *(rdx);\n        eax = ecx;\n        al >>= 5;\n        eax &= 7;\n        eax = *((rax*4 + 0x40f520));\n        eax >>= cl;\n        if ((al & 1) == 0) {\n            goto label_62;\n        }\n        *((rsp + 0x68)) = 1;\n        eax = *(rdx);\n        *((rsp + 0x70)) = 1;\n        *((rsp + 0x74)) = eax;\n        *((rsp + 0x5c)) = 1;\nlabel_20:\n        r10d = *((rsp + 0x74));\n    }\n    while (r8d == 0) {\n        eax = fcn_00405d20 (rbp, r13, rsp + 0x110);\n        r14d = eax;\n        if (al != 0) {\n            goto label_35;\n        }\n        edx = *((rsp + 0xb0));\n        goto label_63;\nlabel_62:\n        eax = mbsinit (rsp + 0x54);\n        if (eax == 0) {\n            goto label_55;\n        }\n        *((rsp + 0x50)) = 1;\nlabel_61:\n        rax = ctype_get_mb_cur_max ();\n        r15 = *((rsp + 0x60));\n        rax = fcn_00409040 (r15, rax);\n        rsi = rsp + 0x50;\n        rcx = rsp + 0x54;\n        rdx = rax;\n        rax = fcn_0040b170 (rsi + 0x24, r15);\n        *((rsp + 0x68)) = rax;\n        if (rax != -1) {\n            if (rax == 0xfffffffffffffffe) {\n                goto label_64;\n            }\n            if (rax == 0) {\n                *((rsp + 0x68)) = 1;\n                rax = *((rsp + 0x60));\n                if (*(rax) != 0) {\n                    goto label_52;\n                }\n                r11d = *((rsp + 0x74));\n                if (r11d != 0) {\n                    goto label_53;\n                }\n            }\n            *((rsp + 0x70)) = 1;\n            eax = mbsinit (rsp + 0x54);\n            if (eax != 0) {\n                *((rsp + 0x50)) = 0;\n            }\n            *((rsp + 0x5c)) = 1;\n            goto label_20;\n        }\n        *((rsp + 0x68)) = 1;\n        *((rsp + 0x70)) = 0;\n        goto label_21;\nlabel_64:\n        rax = strlen (*((rsp + 0x60)));\n        *((rsp + 0x70)) = 0;\n        *((rsp + 0x68)) = rax;\n        goto label_21;\nlabel_58:\n        rax = strlen (*((rsp + 0xa0)));\n        *((rsp + 0xb0)) = 0;\n        *((rsp + 0xa8)) = rax;\n        *((rsp + 0x9c)) = 1;\n        goto label_22;\nlabel_30:\n        if (*((rsp + 0x50)) != 0) {\n            goto label_65;\n        }\n        rdx = *((rsp + 0x60));\n        ecx = *(rdx);\n        eax = ecx;\n        al >>= 5;\n        eax &= 7;\n        eax = *((rax*4 + 0x40f520));\n        eax >>= cl;\n        if ((al & 1) == 0) {\n            goto label_66;\n        }\n        *((rsp + 0x68)) = 1;\n        eax = *(rdx);\n        *((rsp + 0x70)) = 1;\n        *((rsp + 0x74)) = eax;\n        *((rsp + 0x5c)) = 1;\nlabel_24:\n        r8d = *((rsp + 0x74));\n    }\nlabel_28:\n    edx = *((rsp + 0xb0));\n    r14d = 1;\nlabel_63:\n    rax = rbx + 1;\n    *((rsp + 8)) = rbx;\n    rbx = rax;\n    if (dl != 0) {\n        goto label_18;\n    }\n    goto label_19;\nlabel_44:\n    eax = mbsinit (r15);\n    if (eax == 0) {\n        goto label_55;\n    }\n    *((rsp + 0x110)) = 1;\n    rax = ctype_get_mb_cur_max ();\n    r8 = *((rsp + 0x120));\n    rdi = r8;\n    *(rsp) = r8;\n    rax = fcn_00409040 (rdi, rax);\n    r8 = *(rsp);\n    rcx = r15;\n    rdx = rax;\n    rax = fcn_0040b170 (rsp + 0x134, r8);\n    *((rsp + 0x128)) = rax;\n    if (rax == -1) {\n        goto label_67;\n    }\n    if (rax == 0xfffffffffffffffe) {\n        goto label_68;\n    }\n    if (rax == 0) {\n        rax = *((rsp + 0x120));\n        *((rsp + 0x128)) = 1;\n        if (*(rax) != 0) {\n            goto label_52;\n        }\n        edi = *((rsp + 0x134));\n        if (edi != 0) {\n            goto label_53;\n        }\n    }\n    *((rsp + 0x130)) = 1;\n    eax = mbsinit (rsp + 0x114);\n    if (eax != 0) {\n        *((rsp + 0x110)) = 0;\n    }\n    *((rsp + 0x11c)) = 1;\n    goto label_23;\nlabel_66:\n    eax = mbsinit (rsp + 0x54);\n    if (eax == 0) {\n        goto label_55;\n    }\n    *((rsp + 0x50)) = 1;\nlabel_65:\n    rax = ctype_get_mb_cur_max ();\n    r14 = *((rsp + 0x60));\n    rax = fcn_00409040 (r14, rax);\n    rsi = rsp + 0x50;\n    rcx = rsp + 0x54;\n    rdx = rax;\n    rax = fcn_0040b170 (rsi + 0x24, r14);\n    *((rsp + 0x68)) = rax;\n    if (rax == -1) {\n        goto label_69;\n    }\n    if (rax == 0xfffffffffffffffe) {\n        goto label_70;\n    }\n    if (rax == 0) {\n        *((rsp + 0x68)) = 1;\n        rax = *((rsp + 0x60));\n        if (*(rax) != 0) {\n            goto label_52;\n        }\n        r9d = *((rsp + 0x74));\n        if (r9d != 0) {\n            goto label_53;\n        }\n    }\n    *((rsp + 0x70)) = 1;\n    eax = mbsinit (rsp + 0x54);\n    if (eax != 0) {\n        *((rsp + 0x50)) = 0;\n    }\n    *((rsp + 0x5c)) = 1;\n    goto label_24;\nlabel_37:\n    eax = mbsinit (rbx);\n    if (eax == 0) {\n        goto label_55;\n    }\n    *((rsp + 0x10)) = 1;\n    rax = ctype_get_mb_cur_max ();\n    r12 = *((rsp + 0x20));\n    rax = fcn_00409040 (r12, rax);\n    rcx = rbx;\n    rdx = rax;\n    rax = fcn_0040b170 (rsp + 0x34, r12);\n    *((rsp + 0x28)) = rax;\n    if (rax == -1) {\n        goto label_25;\n    }\n    if (rax != 0xfffffffffffffffe) {\n        if (rax == 0) {\n            *((rsp + 0x28)) = 1;\n            rax = *((rsp + 0x20));\n            if (*(rax) != 0) {\n                goto label_52;\n            }\n            eax = *((rsp + 0x34));\n            if (eax == 0) {\n                goto label_71;\n            }\nlabel_53:\n            fcn_00405d00 ();\n        }\nlabel_71:\n        *((rsp + 0x30)) = 1;\n        eax = mbsinit (rsp + 0x14);\n        if (eax != 0) {\n            *((rsp + 0x10)) = 0;\n        }\n        *((rsp + 0x1c)) = 1;\n        goto label_26;\nlabel_67:\n        *((rsp + 0x128)) = 1;\n        *((rsp + 0x130)) = 0;\n        goto label_27;\nlabel_68:\n        rax = strlen (*((rsp + 0x120)));\n        *((rsp + 0x130)) = 0;\n        *((rsp + 0x128)) = rax;\n        goto label_27;\nlabel_70:\n        rax = strlen (*((rsp + 0x60)));\n        *((rsp + 0x70)) = 0;\n        *((rsp + 0x68)) = rax;\n        *((rsp + 0x5c)) = 1;\n        goto label_28;\nlabel_35:\n        rax = *((rsp + 0x110));\n        goto label_7;\n    }\n    rax = strlen (*((rsp + 0x20)));\n    *((rsp + 0x30)) = 0;\n    *((rsp + 0x28)) = rax;\n    *((rsp + 0x1c)) = 1;\n    goto label_29;\nlabel_69:\n    *((rsp + 0x68)) = 1;\n    *((rsp + 0x70)) = 0;\n    *((rsp + 0x5c)) = 1;\n    goto label_28;\nlabel_59:\n    if (al == 0) {\n        goto label_30;\n    }\n    if (*((rsp + 0x70)) == 0) {\n        goto label_28;\n    }\n    goto label_24;\nlabel_55:\n    assert_fail (\"mbsinit (&iter->state)\", \"mbuiter.h\", 0x96, \"mbuiter_multi_next\");\nlabel_52:\n    return assert_fail (\"*iter->cur.ptr == '\\\\0', \"mbuiter.h\", 0xb2, \"mbuiter_multi_next\");\n}\n"
        },
        {
            "funcName": "fcn_004075c0",
            "funcStartAddr": "0x4075c0",
            "funcEndAddr": "0x407659",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x4075c0 */\n#include <stdint.h>\n \nuint64_t fcn_004075c0 (int64_t arg1) {\n    rdi = arg1;\n    if (rdi != 0) {\n        rbx = rdi;\n        rax = strrchr (rdi, 0x2f);\n        if (rax != 0) {\n            r8 = rax + 1;\n            rdx = r8;\n            rdx -= rbx;\n            if (rdx <= 6) {\n                goto label_0;\n            }\n            rsi = rax - 6;\n            edi = \"/.libs/\";\n            ecx = 7;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (rdx > 6) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            edi = 0x40ddc8;\n            ecx = 3;\n            rsi = r8;\n            rbx = r8;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (dl > 0) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            rbx = rax + 4;\n            *(obj.__progname) = rbx;\n        }\nlabel_0:\n        *(0x00612528) = rbx;\n        *(obj.program_invocation_name) = rbx;\n        return rax;\n    }\n    fwrite (\"A NULL argv[0] was passed through an exec system call.\\n\", 1, 0x37, *(obj.stderr));\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_00407660",
            "funcStartAddr": "0x407660",
            "funcEndAddr": "0x407752",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x407660 */\n#include <stdint.h>\n \nuint64_t fcn_00407660 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edx = 5;\n    r12d = esi;\n    rsi = rdi;\n    rax = dcgettext (0, rsi);\n    rbx = rax;\n    while (1) {\nlabel_0:\n        rax = rbx;\n        return rax;\n        rax = fcn_0040b320 ();\n        edx = *(rax);\n        edx &= 0xffffffdf;\n        if (dl != 0x55) {\n            goto label_1;\n        }\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x54) {\n            goto label_2;\n        }\n        edx = *((rax + 2));\n        edx &= 0xffffffdf;\n        if (dl != 0x46) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x2d) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0) {\n            goto label_2;\n        }\n        eax = 0x40ddce;\n        ebx = 0x40ddd9;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n    }\nlabel_1:\n    if (dl == 0x47) {\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x42) {\n            goto label_2;\n        }\n        if (*((rax + 2)) != 0x31) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0x33) {\n            goto label_2;\n        }\n        if (*((rax + 6)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 7)) != 0) {\n            goto label_2;\n        }\n        eax = 0x40ddd2;\n        ebx = 0x40ddd5;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n        goto label_0;\n    }\nlabel_2:\n    eax = 0x40dd60;\n    ebx = 0x40ddcc;\n    if (r12d != 9) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00407760",
            "funcStartAddr": "0x407760",
            "funcEndAddr": "0x40de79",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x407760 */\n#include <stdint.h>\n \nuint64_t fcn_00407760 (int64_t arg_c8h, char * s, int64_t arg1, int64_t arg2, int64_t arg3, size_t * arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_ch;\n    size_t * var_10h;\n    int64_t var_18h;\n    size_t var_20h;\n    char * var_28h;\n    int64_t var_48h;\n    int64_t var_50h;\n    int64_t var_58h;\n    int64_t var_5dh;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    do {\n        abort ();\n        r15 = rdi;\n        r14 = rsi;\n        ebp &= 2;\n        *((rsp + 0x18)) = rdx;\n        *((rsp + 0x10)) = rcx;\n        *((rsp + 0xc)) = r8d;\n        *((rsp + 0x58)) = r9d;\n        rax = ctype_get_mb_cur_max ();\n        r11d = *((rsp + 0xc));\n        *((rsp + 0x50)) = rax;\n    } while (r11d > 0xa);\n    eax = r11d;\n    r10 = *((rsp + 0x10));\n    /* switch table (11 cases) at 0x40de40 */\n    do {\n        *((rsp + 0x5d)) = 1;\n        ebx = 0;\n        r11d = 2;\n        *((rsp + 0xc)) = 0;\n        *((rsp + 0x20)) = 1;\n        *((rsp + 0x48)) = 0x40dd60;\n        if (ebp != 0) {\n            goto label_0;\n        }\n        eax |= *(rax);\n        *((rsp + 0xc)) = 0;\n    } while (ebp != 0);\n    *((rsp + 0xc)) = 1;\n    void (*0x4079b6)() ();\n    if (ebp != 0) {\n        goto label_1;\n    }\n    if (r14 != 0) {\n        *(r15) = 0x22;\n    }\n    *((rsp + 0x5d)) = 0;\n    ebx = 1;\n    *((rsp + 0xc)) = 1;\n    *((rsp + 0x20)) = 1;\n    *((rsp + 0x48)) = 0x40ddcc;\n    void (*0x4077e8)() ();\n    *((rsp + 0x5d)) = 1;\n    ebx = 0;\n    r11d = 5;\n    *((rsp + 0xc)) = 1;\n    *((rsp + 0x20)) = 1;\n    *((rsp + 0x48)) = 0x40ddcc;\n    void (*0x4077e8)() ();\n    *((rsp + 0x5d)) = 0;\n    ebx = 0;\n    *((rsp + 0xc)) = 1;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x48)) = 0;\n    void (*0x4077e8)() ();\n    if (r14 != 0) {\n        esi = r11d;\n        *((rsp + 0x10)) = r10;\n        *((rsp + 0xc)) = r11d;\n        rax = fcn_00407660 (0x40dddd, esi);\n        r11d = *((rsp + 0xc));\n        *((rsp + 0xc8)) = rax;\n        rax = fcn_00407660 (0x40dd60, r11d);\n        r10 = *((rsp + 0x10));\n        r11d = *((rsp + 0xc));\n        *((rsp + 0xd0)) = rax;\n    }\n    ebx = 0;\n    if (ebp != 0) {\n        goto label_2;\n    }\n    rax = *((rsp + 0xc8));\n    eax = *(rax);\n    if (al == 0) {\n        goto label_2;\n    }\n    rdx = *((rsp + 0xc8));\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = al;\n        }\n        rbx++;\n        eax = *((rdx + rbx));\n    } while (al != 0);\nlabel_2:\n    *((rsp + 0x28)) = r11d;\n    *((rsp + 0x10)) = r10;\n    rsp + 0x5d = (ebp != 0) ? 1 : 0;\n    rax = strlen (*((rsp + 0xd0)));\n    *((rsp + 0xc)) = 1;\n    r10 = *((rsp + 0x10));\n    *((rsp + 0x20)) = rax;\n    rax = *((rsp + 0xd0));\n    r11d = *((rsp + 0x28));\n    *((rsp + 0x48)) = rax;\n    void (*0x4077e8)() ();\n    *((rsp + 0x5d)) = 0;\n    ebx = 0;\n    *((rsp + 0xc)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x48)) = 0;\n    void (*0x4077e8)() ();\n    *((rsp + 0x5d)) = 1;\n    ebx = 0;\n    r11d = 2;\n    *((rsp + 0xc)) = 1;\n    *((rsp + 0x20)) = 1;\n    *((rsp + 0x48)) = 0x40dd60;\n    void (*0x4077e8)() ();\nlabel_0:\n    *((rsp + 0x5d)) = 1;\n    ebx = 0;\n    *((rsp + 0xc)) = 0;\n    *((rsp + 0x20)) = 1;\n    *((rsp + 0x48)) = 0x40dd60;\n    void (*0x4077e8)() ();\nlabel_1:\n    *((rsp + 0x5d)) = 1;\n    ebx = 0;\n    *((rsp + 0xc)) = 1;\n    *((rsp + 0x20)) = 1;\n    *((rsp + 0x48)) = 0x40ddcc;\n    return void (*0x4077e8)() ();\n}\n"
        },
        {
            "funcName": "fcn_004077e8",
            "funcStartAddr": "0x4077e8",
            "funcEndAddr": "0x408763",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x4077e8 */\n#include <stdint.h>\n \nint64_t fcn_004077e8 (size_t * arg_ch, uint32_t arg_10h, char * s, size_t n, size_t * arg_28h, size_t * arg_30h, size_t arg_38h_2, size_t arg_40h, void * s2, uint32_t arg_50h, int64_t arg_78h, uint32_t arg_5dh, size_t arg_5eh, size_t arg_5fh, size_t arg_60h, size_t arg_68h, wint_t wc, mbstate_t * ps, uint32_t arg_d8h_2, int64_t arg_d8h, int64_t arg3) {\n    rdx = arg3;\n    r13d = 0;\n    r8d = 0;\n    eax = r11d;\n    r11 = r10;\n    ecx = r13d;\n    r10d = eax;\n    r13 = r8;\n    r8d = ecx;\n    do {\nlabel_25:\n        bpl = (r11 != r13) ? 1 : 0;\n        if (r11 == -1) {\n            rax = *((rsp + 0x18));\n            bpl = (*((rax + r13)) != 0) ? 1 : 0;\n        }\n        if (bpl == 0) {\n            goto label_34;\n        }\n        rdi = *((rsp + 0x18));\n        al = (r10d != 2) ? 1 : 0;\n        al &= *((rsp + 0xc));\n        r9 = rdi + r13;\n        *((rsp + 0x10)) = al;\n        if (al == 0) {\n            goto label_35;\n        }\n        rax = *((rsp + 0x20));\n        if (rax == 0) {\n            goto label_36;\n        }\n        r12 = r13 + rax;\n        if (r11 == -1) {\n            if (rax <= 1) {\n                goto label_37;\n            }\n            *((rsp + 0x38)) = r10d;\n            *((rsp + 0x30)) = r8b;\n            *((rsp + 0x28)) = r9;\n            rax = strlen (rdi);\n            r10d = *((rsp + 0x38));\n            r8d = *((rsp + 0x30));\n            r9 = *((rsp + 0x28));\n            r11 = rax;\n        }\nlabel_37:\n        if (r12 > r11) {\n            goto label_36;\n        }\n        rdi = r9;\n        *((rsp + 0x40)) = r10d;\n        *((rsp + 0x38)) = r11;\n        *((rsp + 0x30)) = r8b;\n        *((rsp + 0x28)) = r9;\n        eax = memcmp (rdi, *((rsp + 0x48)), *((rsp + 0x20)));\n        r9 = *((rsp + 0x28));\n        r8d = *((rsp + 0x30));\n        r11 = *((rsp + 0x38));\n        r10d = *((rsp + 0x40));\n        if (eax != 0) {\n            goto label_36;\n        }\n        if (*((rsp + 0x5d)) != 0) {\n            goto label_38;\n        }\n        r12d = *(r9);\n        if (r12b > 0x7e) {\n            goto label_39;\n        }\n        eax = (int32_t) r12b;\n        /* switch table (127 cases) at 0x40de98 */\n        *((rsp + 0x10)) = 0;\nlabel_0:\n        ebp = 0;\n        if (*((rsp + 0xc0)) == 0) {\n            goto label_40;\n        }\nlabel_10:\n        eax = r12d;\n        rsi = *((rsp + 0xc0));\n        ecx = r12d;\n        al >>= 5;\n        eax = (int32_t) al;\n        eax = *((rsi + rax*4));\n        eax >>= cl;\n        if ((al & 1) == 0) {\n            goto label_40;\n        }\n        al = (r10d == 2) ? 1 : 0;\nlabel_5:\n        if (*((rsp + 0x5d)) != 0) {\n            goto label_41;\n        }\nlabel_6:\n        r13++;\nlabel_1:\n        edx = r8d;\n        edx ^= 1;\n        dl &= al;\n        if (dl != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rax = rbx + 1;\n            if (r14 > rax) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rax = rbx + 2;\n            if (r14 > rax) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r8d = edx;\n        }\n        if (rbx < r14) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\nlabel_4:\n        if (rbx < r14) {\n            *((r15 + rbx)) = r12b;\n        }\n        rbx++;\n    } while (1);\n    *((rsp + 0x10)) = 0;\n    al = (r11 != 1) ? 1 : 0;\n    if (r11 == -1) {\n        rax = *((rsp + 0x18));\n        al = (*((rax + 1)) != 0) ? 1 : 0;\n    }\n    dl = (r10d == 2) ? 1 : 0;\n    if (al == 0) {\nlabel_14:\n        if (r13 != 0) {\n            goto label_2;\n        }\nlabel_15:\n        eax = *((rsp + 0x5d));\n        al &= dl;\n        if (al != 0) {\n            goto label_42;\n        }\n    }\nlabel_2:\n    ebp = *((rsp + 0xc));\n    ebp ^= 1;\n    ebp |= edx;\n    ebp ^= 1;\n    bpl |= *((rsp + 0x5d));\n    if (bpl != 0) {\n        goto label_0;\n    }\nlabel_9:\n    r13++;\n    if (*((rsp + 0x10)) == 0) {\n        goto label_43;\n    }\nlabel_3:\n    al = (r10d == 2) ? 1 : 0;\n    goto label_1;\n    *((rsp + 0x10)) = 0;\n    if (r10d == 2) {\n        goto label_44;\n    }\n    if (r10d == 5) {\n        goto label_45;\n    }\n    r12d = 0x3f;\n    dl = (r10d == 2) ? 1 : 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\n    edx = 0;\n    r12d = 0x27;\n    if (r10d != 2) {\n        goto label_2;\n    }\n    if (*((rsp + 0x5d)) != 0) {\n        goto label_46;\n    }\n    if (rbx < r14) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x5c;\n    }\n    rax = rbx + 2;\n    if (r14 > rax) {\n        *((r15 + rbx + 2)) = 0x27;\n    }\n    rbx += 3;\n    r13++;\n    r8d = 0;\n    r12d = 0x27;\nlabel_28:\n    if (*((rsp + 0x10)) != 0) {\n        goto label_3;\n    }\n    goto label_4;\n    *((rsp + 0x10)) = 0;\n    edx = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\nlabel_13:\n    ebp = *((rsp + 0xc));\n    bpl &= *((rsp + 0x5d));\n    r12d = 0x5c;\n    ecx = 0x5c;\n    edx = ebp;\n    al = (*((rsp + 0x20)) != 0) ? 1 : 0;\n    dl &= al;\n    if (dl != 0) {\n        goto label_47;\n    }\nlabel_8:\n    if (*((rsp + 0xc)) == 0) {\n        goto label_2;\n    }\n    eax = edx;\n    r12d = ecx;\n    goto label_5;\n    r12d = 0x6e;\n    eax = 0;\nlabel_7:\n    if (*((rsp + 0x5d)) == 0) {\n        goto label_6;\n    }\nlabel_41:\n    esi = r10d;\n    r10 = r11;\n    r11d = esi;\n    goto label_19;\n    r12d = 0x62;\n    eax = 0;\n    goto label_7;\n    r12d = 0x61;\n    eax = 0;\n    goto label_7;\n    *((rsp + 0x10)) = 0;\n    r12d = 0xd;\n    ecx = 0x72;\n    dl = (r10d == 2) ? 1 : 0;\n    goto label_8;\n    *((rsp + 0x10)) = 0;\n    if (r13 != 0) {\n        goto label_0;\n    }\n    edx = 0;\n    goto label_2;\n    r12d = 0x66;\n    eax = 0;\n    goto label_7;\n    r12d = 0x76;\n    eax = 0;\n    goto label_7;\n    r12d = 0x74;\n    eax = 0;\n    goto label_7;\nlabel_12:\n    if (*((rsp + 0x5d)) != 0) {\n        goto label_48;\n    }\n    *((rsp + 0x10)) = 0;\n    eax = r8d;\n    dl = (r10d == 2) ? 1 : 0;\n    eax ^= 1;\n    al &= dl;\n    if (al == 0) {\n        goto label_49;\n    }\n    if (rbx < r14) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rcx = rbx + 1;\n    if (r14 > rcx) {\n        *((r15 + rbx + 1)) = 0x24;\n    }\n    rcx = rbx + 2;\n    if (r14 > rcx) {\n        *((r15 + rbx + 2)) = 0x27;\n    }\n    rcx = rbx + 3;\n    if (r14 <= rcx) {\n        goto label_50;\n    }\n    r8d = eax;\nlabel_23:\n    *((r15 + rcx)) = 0x5c;\nlabel_24:\n    rbx = rcx + 1;\n    rax = r13 + 1;\n    if (r10d == 2) {\n        goto label_51;\n    }\n    r12d = 0x30;\n    if (rax < r11) {\n        rsi = *((rsp + 0x18));\n        eax = *((rsi + rax));\n        eax -= 0x30;\n        if (al <= 9) {\n            goto label_52;\n        }\n    }\nlabel_18:\n    if (*((rsp + 0xc)) == 0) {\n        goto label_9;\n    }\n    if (dl != 0) {\n        goto label_9;\n    }\n    if (*((rsp + 0xc0)) != 0) {\n        goto label_10;\n    }\nlabel_40:\n    al = (r10d == 2) ? 1 : 0;\n    if (*((rsp + 0x10)) != 0) {\n        goto label_5;\n    }\nlabel_29:\n    ebp ^= 1;\n    r13++;\n    ebp &= r8d;\n    goto label_17;\nlabel_16:\n    *((rsp + 0x10)) = 0;\n    do {\nlabel_39:\n        if (*((rsp + 0x50)) != 1) {\n            goto label_53;\n        }\n        *((rsp + 0x38)) = r10d;\n        *((rsp + 0x30)) = r11;\n        *((rsp + 0x28)) = r8b;\n        rax = ctype_b_loc ();\n        edx = (int32_t) r12b;\n        r8d = *((rsp + 0x28));\n        r11 = *((rsp + 0x30));\n        rax = *(rax);\n        r10d = *((rsp + 0x38));\n        ecx = 1;\n        edx = *((rax + rdx*2));\n        dx >>= 0xe;\n        edx ^= 1;\n        dl &= *((rsp + 0xc));\nlabel_31:\n        if (dl != 0) {\n            goto label_54;\n        }\n        dl = (r10d == 2) ? 1 : 0;\n        goto label_2;\nlabel_35:\n        r12d = *(r9);\n    } while (r12b > 0x7e);\n    eax = (int32_t) r12b;\n    /* switch table (127 cases) at 0x40e290 */\n    r12d = 0xa;\n    ecx = 0x6e;\nlabel_11:\n    eax = *((rsp + 0x5d));\n    dl = (r10d == 2) ? 1 : 0;\n    al &= dl;\n    *((rsp + 0x10)) = al;\n    if (al == 0) {\n        goto label_8;\n    }\n    eax = r10d;\n    r10 = r11;\n    r11d = eax;\n    eax = *((rsp + 0x10));\nlabel_19:\n    if (*((rsp + 0xc)) != 0) {\n        eax = 4;\n        if (al == 0) {\n            r11d = eax;\n            goto label_33;\n        }\n    }\nlabel_33:\n    r9d &= 0xfffffffd;\n    rax = fcn_00407760 (r15, r14, *((rsp + 0x38)), r10, r11d, *((rsp + 0x78)));\n    rbx = rax;\nlabel_20:\n    rax = rbx;\n    return rax;\n    r12d = 9;\n    ecx = 0x74;\n    goto label_11;\n    r12d = 7;\n    ecx = 0x61;\n    dl = (r10d == 2) ? 1 : 0;\n    goto label_8;\n    if (*((rsp + 0xc)) != 0) {\n        goto label_12;\n    }\n    if ((*((rsp + 0x58)) & 1) != 0) {\n        goto label_55;\n    }\n    if (*((rsp + 0x5d)) == 0) {\n        goto label_56;\n    }\n    ebp = 0;\n    if (*((rsp + 0xc0)) == 0) {\n        goto label_57;\n    }\n    *((rsp + 0x10)) = 0;\n    r12d = 0;\n    goto label_10;\n    r12d = 8;\n    ecx = 0x62;\n    dl = (r10d == 2) ? 1 : 0;\n    goto label_8;\n    if (r10d != 2) {\n        goto label_13;\n    }\n    if (*((rsp + 0x5d)) != 0) {\n        goto label_46;\n    }\n    r13++;\n    r12d = 0x5c;\nlabel_17:\n    if (bpl == 0) {\n        goto label_4;\n    }\n    if (rbx < r14) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x27;\n    }\n    rbx += 2;\n    r8d = 0;\n    goto label_4;\n    dl = (r10d == 2) ? 1 : 0;\n    goto label_14;\n    dl = (r10d == 2) ? 1 : 0;\n    goto label_15;\n    r12d = 0xd;\n    ecx = 0x72;\n    goto label_11;\n    r12d = 0xc;\n    ecx = 0x66;\n    dl = (r10d == 2) ? 1 : 0;\n    goto label_8;\n    r12d = 0xb;\n    ecx = 0x76;\n    dl = (r10d == 2) ? 1 : 0;\n    goto label_8;\nlabel_36:\n    r12d = *(r9);\n    if (r12b > 0x7e) {\n        goto label_16;\n    }\n    eax = (int32_t) r12b;\n    /* switch table (127 cases) at 0x40e688 */\nlabel_43:\n    ebp ^= 1;\n    ebp &= r8d;\n    goto label_17;\nlabel_45:\n    if ((*((rsp + 0x58)) & 4) == 0) {\n        goto label_58;\n    }\n    rax = r13 + 2;\n    edx = 0;\n    r12d = 0x3f;\n    if (rax >= r11) {\n        goto label_2;\n    }\n    rsi = *((rsp + 0x18));\n    if (*((rsi + r13 + 1)) != 0x3f) {\n        goto label_2;\n    }\n    r12d = *((rsi + rax));\n    if (r12b > 0x3e) {\n        goto label_59;\n    }\n    rsi = 0x7000a38200000000;\n    if (((rsi >> r12) & 1) >= 0) {\n        goto label_59;\n    }\n    if (*((rsp + 0x5d)) != 0) {\n        goto label_38;\n    }\n    if (rbx < r14) {\n        *((r15 + rbx)) = 0x3f;\n    }\n    rdx = rbx + 1;\n    if (r14 > rdx) {\n        *((r15 + rbx + 1)) = 0x22;\n    }\n    rdx = rbx + 2;\n    if (r14 > rdx) {\n        *((r15 + rbx + 2)) = 0x22;\n    }\n    rdx = rbx + 3;\n    if (r14 > rdx) {\n        *((r15 + rbx + 3)) = 0x3f;\n    }\n    rbx += 4;\n    edx = 0;\n    ebp = 0;\n    r13 = rax;\n    goto label_18;\nlabel_44:\n    if (*((rsp + 0x5d)) != 0) {\n        goto label_46;\n    }\n    ebp = 0;\n    r12d = 0x3f;\n    goto label_9;\nlabel_34:\n    eax = r10d;\n    ecx = *((rsp + 0x5d));\n    r10 = r11;\n    r11d = eax;\n    al = (eax == 2) ? 1 : 0;\n    eax &= ecx;\n    dl = (rbx == 0) ? 1 : 0;\n    al &= dl;\n    if (al != 0) {\n        goto label_19;\n    }\n    rax = *((rsp + 0x48));\n    if (rax == 0) {\n        goto label_60;\n    }\n    if (cl != 0) {\n        goto label_60;\n    }\n    edx = *(rax);\n    if (dl == 0) {\n        goto label_60;\n    }\n    rax -= rbx;\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = dl;\n        }\n        rbx++;\n        edx = *((rax + rbx));\n    } while (dl != 0);\nlabel_60:\n    if (rbx >= r14) {\n        goto label_20;\n    }\n    *((r15 + rbx)) = 0;\n    goto label_20;\nlabel_53:\n    *((rsp + 0x78)) = 0;\n    if (r11 == -1) {\n        *((rsp + 0x38)) = r10d;\n        *((rsp + 0x30)) = r8b;\n        *((rsp + 0x28)) = r9;\n        rax = strlen (*((rsp + 0x18)));\n        r10d = *((rsp + 0x38));\n        r8d = *((rsp + 0x30));\n        r9 = *((rsp + 0x28));\n        r11 = rax;\n    }\n    eax = 0;\n    *((rsp + 0x60)) = rbx;\n    *((rsp + 0x5e)) = r8b;\n    rbx = rax;\n    *((rsp + 0x5f)) = r12b;\n    *((rsp + 0x68)) = r9;\n    *((rsp + 0x38)) = r15;\n    *((rsp + 0x40)) = r14;\n    *((rsp + 0x28)) = r11;\n    *((rsp + 0x30)) = r10d;\n    while (al == 0) {\nlabel_21:\n        eax = iswprint (*((rsp + 0x74)));\n        rdi = rsp + 0x78;\n        eax = 0;\n        if (eax == 0) {\n        }\n        rbx += r15;\n        eax = mbsinit (rdi);\n        if (eax != 0) {\n            goto label_61;\n        }\n        rax = *((rsp + 0x18));\n        r14 = r13 + rbx;\n        rdx = *((rsp + 0x28));\n        rcx = rsp + 0x78;\n        r12 = rax + r14;\n        rdx -= r14;\n        rax = fcn_0040b170 (rsp + 0x74, r12);\n        r15 = rax;\n        if (rax == 0) {\n            goto label_62;\n        }\n        if (rax == -1) {\n            goto label_63;\n        }\n        if (rax == 0xfffffffffffffffe) {\n            goto label_64;\n        }\n        al = (*((rsp + 0x30)) == 2) ? 1 : 0;\n        al &= *((rsp + 0x5d));\n    }\n    if (r15 == 1) {\n        goto label_21;\n    }\n    rsi = *((rsp + 0x18));\n    rcx = rsi + r15;\n    rdx = rsi + r14 + 1;\n    r8 = rcx + r14;\n    goto label_65;\nlabel_22:\n    rdx++;\n    if (r8 == rdx) {\n        goto label_21;\n    }\nlabel_65:\n    ecx = *(rdx);\n    ecx -= 0x5b;\n    if (cl > 0x21) {\n        goto label_22;\n    }\n    esi = 1;\n    rsi <<= cl;\n    rcx = rsi;\n    rsi = 0x20000002b;\n    if ((rcx & rsi) == 0) {\n        goto label_22;\n    }\n    r15 = *((rsp + 0x38));\n    r14 = *((rsp + 0x40));\n    r10 = *((rsp + 0x28));\n    r11d = *((rsp + 0x30));\n    goto label_19;\nlabel_49:\n    rcx = rbx;\n    if (rbx < r14) {\n        goto label_23;\n    }\n    goto label_24;\n    do {\nlabel_42:\n        edi = r10d;\n        r10 = r11;\n        r11d = edi;\n        goto label_19;\nlabel_58:\n        edx = 0;\n        r12d = 0x3f;\n        goto label_2;\nlabel_55:\n        r13++;\n        goto label_25;\nlabel_54:\n        edx = *((rsp + 0xc));\nlabel_30:\n        rcx += r13;\n        eax = 0;\n        r9d = *((rsp + 0x5d));\n        esi = *((rsp + 0x10));\n        rdi = *((rsp + 0x18));\n        goto label_66;\nlabel_26:\n        bpl = (r10d == 2) ? 1 : 0;\n        eax = ebp;\n    } while (r9b != 0);\n    eax = r8d;\n    eax ^= 1;\n    al &= bpl;\n    if (al != 0) {\n        if (rbx < r14) {\n            *((r15 + rbx)) = 0x27;\n        }\n        r8 = rbx + 1;\n        if (r14 > r8) {\n            *((r15 + rbx + 1)) = 0x24;\n        }\n        r8 = rbx + 2;\n        if (r14 > r8) {\n            *((r15 + rbx + 2)) = 0x27;\n        }\n        rbx += 3;\n        r8d = eax;\n    }\n    if (rbx < r14) {\n        *((r15 + rbx)) = 0x5c;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        eax = r12d;\n        al >>= 6;\n        eax += 0x30;\n        *((r15 + rbx + 1)) = al;\n    }\n    rax = rbx + 2;\n    if (r14 > rax) {\n        eax = r12d;\n        al >>= 3;\n        eax &= 7;\n        eax += 0x30;\n        *((r15 + rbx + 2)) = al;\n    }\n    r12d &= 7;\n    r13++;\n    rbx += 3;\n    r12d += 0x30;\n    if (rcx <= r13) {\n        goto label_4;\n    }\n    eax = edx;\nlabel_27:\n    if (rbx < r14) {\n        *((r15 + rbx)) = r12b;\n    }\n    r12d = *((rdi + r13));\n    rbx++;\nlabel_66:\n    if (dl != 0) {\n        goto label_26;\n    }\n    ebp ^= 1;\n    ebp &= r8d;\n    if (sil != 0) {\n        if (rbx < r14) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n    }\n    r13++;\n    if (r13 >= rcx) {\n        goto label_17;\n    }\n    if (bpl != 0) {\n        if (rbx < r14) {\n            *((r15 + rbx)) = 0x27;\n        }\n        rsi = rbx + 1;\n        if (r14 > rsi) {\n            *((r15 + rbx + 1)) = 0x27;\n        }\n        rbx += 2;\n        esi = 0;\n        r8d = 0;\n        goto label_27;\nlabel_50:\n        rbx += 4;\n        r13++;\n        r8d = eax;\n        r12d = 0x30;\n        goto label_28;\nlabel_47:\n        r13++;\n        goto label_17;\nlabel_57:\n        r12d = 0;\n        goto label_29;\n    }\n    esi = 0;\n    goto label_27;\nlabel_56:\n    r13++;\n    r12d = 0;\n    goto label_17;\nlabel_51:\n    r13 = rax;\n    r12d = 0x30;\n    goto label_28;\nlabel_52:\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x30;\n    }\n    rax = rcx + 2;\n    if (r14 > rax) {\n        *((r15 + rcx + 2)) = 0x30;\n    }\n    rbx = rcx + 3;\n    r12d = 0x30;\n    goto label_18;\nlabel_63:\n    rcx = rbx;\n    r8d = *((rsp + 0x5e));\n    r12d = *((rsp + 0x5f));\n    rbx = *((rsp + 0x60));\n    r15 = *((rsp + 0x38));\n    r14 = *((rsp + 0x40));\n    r11 = *((rsp + 0x28));\n    r10d = *((rsp + 0x30));\n    edx = *((rsp + 0xc));\nlabel_32:\n    if (rcx > 1) {\n        goto label_30;\n    }\n    goto label_31;\nlabel_62:\n    edx = *((rsp + 0xc));\n    ebp ^= 1;\n    rcx = rbx;\n    r15 = *((rsp + 0x38));\n    r8d = *((rsp + 0x5e));\n    r12d = *((rsp + 0x5f));\n    rbx = *((rsp + 0x60));\n    r14 = *((rsp + 0x40));\n    edx &= ebp;\n    r11 = *((rsp + 0x28));\n    r10d = *((rsp + 0x30));\n    goto label_32;\nlabel_64:\n    r11 = *((rsp + 0x28));\n    rsi = r14;\n    rdi = r12;\n    rax = rbx;\n    rcx = rbx;\n    r8d = *((rsp + 0x5e));\n    r12d = *((rsp + 0x5f));\n    r9 = *((rsp + 0x68));\n    rbx = *((rsp + 0x60));\n    r15 = *((rsp + 0x38));\n    r14 = *((rsp + 0x40));\n    r10d = *((rsp + 0x30));\n    if (rsi >= r11) {\n        goto label_67;\n    }\n    if (*(rdi) != 0) {\n        goto label_68;\n    }\n    goto label_67;\n    do {\n        if (*((r9 + rax)) == 0) {\n            goto label_69;\n        }\nlabel_68:\n        rax++;\n        rdx = r13 + rax;\n    } while (r11 > rdx);\nlabel_69:\n    rcx = rax;\nlabel_67:\n    edx = *((rsp + 0xc));\n    goto label_32;\nlabel_61:\n    edx = ebp;\n    rcx = rbx;\n    r8d = *((rsp + 0x5e));\n    rbx = *((rsp + 0x60));\n    edx ^= 1;\n    r12d = *((rsp + 0x5f));\n    r15 = *((rsp + 0x38));\n    r14 = *((rsp + 0x40));\n    r11 = *((rsp + 0x28));\n    r10d = *((rsp + 0x30));\n    dl &= *((rsp + 0xc));\n    goto label_32;\nlabel_59:\n    r12d = 0x3f;\n    goto label_2;\nlabel_38:\n    eax = r10d;\n    r10 = r11;\n    r11d = eax;\n    goto label_33;\nlabel_46:\n    eax = r10d;\n    r10 = r11;\n    r11d = eax;\n    eax = *((rsp + 0x5d));\n    goto label_19;\nlabel_48:\n    eax = r10d;\n    r10 = r11;\n    r11d = eax;\n    al = (eax == 2) ? 1 : 0;\n    goto label_19;\n}\n"
        },
        {
            "funcName": "fcn_004079ae",
            "funcStartAddr": "0x4079ae",
            "funcEndAddr": "0x4079bf",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x4079ae */\n#include <stdint.h>\n \nint32_t fcn_004079ae (int64_t arg1, int64_t arg3) {\n    int64_t var_7bh;\n    rdi = arg1;\n    rdx = arg3;\n    eax |= *(rax);\n    dh += al;\n    al &= 0xc;\n    *((rbp - 0x7b)) += cl;\n    if (r14 == 0) {\n        void (*0x4079bf)() ();\n    }\n    *(r15) = 0x27;\n}\n"
        },
        {
            "funcName": "fcn_004079b6",
            "funcStartAddr": "0x4079b6",
            "funcEndAddr": "0x4079e6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x4079b6 */\n#include <stdint.h>\n \nint32_t fcn_004079ae (int64_t arg1, int64_t arg3) {\n    int64_t var_7bh;\n    rdi = arg1;\n    rdx = arg3;\n    eax |= *(rax);\n    dh += al;\n    al &= 0xc;\n    *((rbp - 0x7b)) += cl;\n    if (r14 == 0) {\n        void (*0x4079bf)() ();\n    }\n    *(r15) = 0x27;\n}\n"
        },
        {
            "funcName": "fcn_00408770",
            "funcStartAddr": "0x408770",
            "funcEndAddr": "0x40f06c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x408770 */\n#include <stdint.h>\n \nuint64_t fcn_00408770 (int64_t arg1, char * * arg2, int64_t arg3, int64_t arg4) {\n    char * * var_8h;\n    int64_t var_30h;\n    int64_t var_18h;\n    int64_t var_24h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    do {\n        abort ();\n        r15 = (int64_t) edi;\n        r14 = rdx;\n        *((rsp + 8)) = rsi;\n        rax = errno_location ();\n        rbx = *(0x00612318);\n        r13 = rax;\n        eax = *(rax);\n        *((rsp + 0x18)) = eax;\n    } while (r15d < 0);\n    if (*(0x00612330) > r15d) {\n        goto label_0;\n    }\n    edx = r15 + 1;\n    rsi = rdx;\n    r12 = rdx;\n    rsi <<= 4;\n    if (rbx == 0x612320) {\n        goto label_1;\n    }\n    *((rsp + 0x10)) = rdx;\n    rax = fcn_004096d0 (rbx, rsi);\n    *(0x00612318) = rax;\n    rbx = rax;\n    do {\n        rdx -= rdi;\n        rdi <<= 4;\n        rdx <<= 4;\n        rdi += rbx;\n        memset (*(0x00612330), 0, *((rsp + 0x10)));\n        *(0x00612330) = r12d;\nlabel_0:\n        eax = *((rbp + 4));\n        r15 <<= 4;\n        rbx += r15;\n        r15 = rbp + 8;\n        eax |= 1;\n        r11 = *(rbx);\n        r12 = *((rbx + 8));\n        *((rsp + 0x24)) = eax;\n        rsi = r11;\n        *((rsp + 0x30)) = r11;\n        rax = fcn_00407760 (r12, rsi, *((rsp + 0x28)), r14, *(rbp), eax);\n        r11 = *((rsp + 0x10));\n        if (r11 <= rax) {\n            rsi = rax + 1;\n            *(rbx) = rsi;\n            if (r12 != 0x612540) {\n                *((rsp + 0x10)) = rsi;\n                free (r12);\n                rsi = *((rsp + 0x10));\n            }\n            *((rsp + 0x10)) = rsi;\n            rax = fcn_00409680 (*((rsp + 0x10)));\n            *((rbx + 8)) = rax;\n            rdi = rax;\n            r12 = rax;\n            fcn_00407760 (rdi, *((rsp + 0x30)), *((rsp + 0x28)), r14, *(rbp), *((rsp + 0x3c)));\n        }\n        eax = *((rsp + 0x18));\n        *(r13) = eax;\n        rax = r12;\n        return rax;\nlabel_1:\n        *((rsp + 0x10)) = rdx;\n        rax = fcn_004096d0 (0, rsi);\n        __asm (\"movdqa xmm0, xmmword [0x00612320]\");\n        rdx = *((rsp + 0x10));\n        rbx = rax;\n        *(0x00612318) = rax;\n        __asm (\"movups xmmword [rax], xmm0\");\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00408c90",
            "funcStartAddr": "0x408c90",
            "funcEndAddr": "0x40f974",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x408c90 */\n#include <stdint.h>\n \nint64_t fcn_00408c90 (uint32_t arg2, char * * arg3) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rsi = arg2;\n    rdx = arg3;\n    do {\n        abort ();\n    } while (esi == 0xa);\n    rax = rdx;\n    *(rsp) = esi;\n    *((rsp + 4)) = 0;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x30)) = 0;\n    fcn_00408770 (rdi, rax, 0xffffffffffffffff, rsp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00408e10",
            "funcStartAddr": "0x408e10",
            "funcEndAddr": "0x408ea1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x408e10 */\n#include <stdint.h>\n \nint64_t fcn_00408e10 (int64_t arg1, int64_t arg7, int64_t arg8, int64_t arg9) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_20h;\n    int64_t var_30h;\n    rdi = arg1;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    xmm2 = arg9;\n    do {\n        rax = imp.__libc_start_main;\n        ecx = edx;\n        __asm (\"movdqa xmm0, xmmword [0x00612640]\");\n        __asm (\"movdqa xmm1, xmmword [0x00612650]\");\n        __asm (\"movdqa xmm2, xmmword [0x00612660]\");\n        ecx &= 0x1f;\n        *((rsp + 0x30)) = rax;\n        eax = edx;\n        al >>= 5;\n        *(rsp) = xmm0;\n        eax = (int32_t) al;\n        *((rsp + 0x10)) = xmm1;\n        r8 = rsp + rax*4 + 8;\n        *((rsp + 0x20)) = xmm2;\n        edx = *(r8);\n        eax = *(r8);\n        eax >>= cl;\n        eax = ~eax;\n        eax &= 1;\n        eax <<= cl;\n        eax ^= edx;\n        *(r8) = eax;\n        fcn_00408770 (0, rdi, rsi, rsp);\n        return rax;\n        edx = 0x3a;\n        rsi = 0xffffffffffffffff;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00408fe0",
            "funcStartAddr": "0x408fe0",
            "funcEndAddr": "0x40903e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x408fe0 */\n#include <stdint.h>\n \nuint64_t fcn_00408fe0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13d = edi;\n    r12 = rsi;\n    rbx = rdx;\n    do {\nlabel_0:\n        rax = read (r13d, r12, rbx);\n        if (rax >= 0) {\n            goto label_1;\n        }\n        rax = errno_location ();\n        eax = *(rax);\n    } while (eax == 4);\n    if (eax == 0x16) {\n        if (rbx <= 0x7fffe000) {\n            goto label_1;\n        }\n        ebx = 0x7fffe000;\n        goto label_0;\n    }\nlabel_1:\n    rax = rbp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00409040",
            "funcStartAddr": "0x409040",
            "funcEndAddr": "0x409071",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x409040 */\n#include <stdint.h>\n \nuint64_t fcn_00409040 (char * arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = rsi;\n    rbx = rsi;\n    rax = fcn_0040b1a0 (rdi, 0, rdx);\n    rsi = rax;\n    rsi -= rbp;\n    rsi++;\n    rax = rbx;\n    if (rax != 0) {\n        rax = rsi;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00409080",
            "funcStartAddr": "0x409080",
            "funcEndAddr": "0x40908e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x409080 */\n#include <stdint.h>\n \nint32_t fcn_00409080 (int64_t arg1, int64_t arg4) {\n    rdi = arg1;\n    rcx = arg4;\n    edx = 3;\n    esi = 0;\n    eax = 0;\n    return void (*0x409d40)() ();\n}\n"
        },
        {
            "funcName": "fcn_00409090",
            "funcStartAddr": "0x409090",
            "funcEndAddr": "0x4090de",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x409090 */\n#include <stdint.h>\n \nuint64_t fcn_00409090 (uint32_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    ebx = edi;\n    if (edi > 2) {\n        eax = ebx;\n        return eax;\n    }\n    eax = fcn_00409080 (rdi, rsi);\n    r12d = eax;\n    rax = errno_location ();\n    ebx = r12d;\n    r13d = *(rax);\n    close (ebx);\n    eax = ebx;\n    *(rbp) = r13d;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004090e0",
            "funcStartAddr": "0x4090e0",
            "funcEndAddr": "0x410582",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x4090e0 */\n#include <stdint.h>\n \nvoid fcn_004090e0 (int64_t arg_20h, int64_t arg_8h, int64_t arg_10h, int64_t arg_20h_2, int64_t arg_8h_2, int64_t arg_10h_2, int64_t arg_30h, int64_t arg_8h_3, int64_t arg_10h_3, int64_t arg_18h, int64_t arg1, char * arg2, char * arg3, char * arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_30h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    eax = abort ();\n    r12 = r9;\n    rbx = r8;\n    if (rsi == 0) {\n        goto label_2;\n    }\n    r8 = rcx;\n    eax = 0;\n    rcx = rdx;\n    rdx = rsi;\n    fprintf (rdi, \"%s (%s) %s\\n\");\n    do {\n        edx = 5;\n        rax = dcgettext (0, 0x40eb2b);\n        ecx = 0x7df;\n        rdx = rax;\n        eax = 0;\n        fprintf (rbp, \"Copyright %s %d Free Software Foundation, Inc.\");\n        edx = 5;\n        rax = dcgettext (0, \"\\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\");\n        eax = fputs (rax, rbp);\n        if (r12 > 9) {\n            goto label_3;\n        }\n        /* switch table (10 cases) at 0x40ee38 */\nlabel_2:\n        eax = 0;\n        fprintf (rdi, \"%s %s\\n\");\n    } while (1);\n    r9 = *((rbx + 0x18));\n    r14 = *((rbx + 0x38));\n    edx = 5;\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    r15 = *((rbx + 0x20));\n    r8 = *((rbx + 0x10));\n    *((rsp + 0x10)) = r9;\n    rcx = *((rbx + 8));\n    rbx = *(rbx);\n    *((rsp + 8)) = r8;\n    *(rsp) = rcx;\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n    r9 = *((rsp + 0x30));\nlabel_0:\n    r8 = *((rsp + 0x28));\n    rcx = *((rsp + 0x20));\n    rdx = rbx;\n    eax = 0;\n    fprintf (rbp, rax);\n    return rax;\n    r10 = *((rbx + 0x40));\n    r9 = *((rbx + 0x18));\n    edx = 5;\n    r8 = *((rbx + 0x10));\n    rcx = *((rbx + 8));\n    r14 = *((rbx + 0x38));\n    r13 = *((rbx + 0x30));\n    *((rsp + 0x18)) = r10;\n    r12 = *((rbx + 0x28));\n    r15 = *((rbx + 0x20));\n    *((rsp + 0x10)) = r9;\n    *((rsp + 8)) = r8;\n    rbx = *(rbx);\n    *(rsp) = rcx;\nlabel_1:\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n    rdx = rbx;\n    r10 = *((rsp + 0x20));\n    eax = 0;\n    r9 = *((rsp + 0x40));\n    r8 = *((rsp + 0x38));\n    rcx = *((rsp + 0x30));\n    fprintf (rbp, rax);\n    return rax;\n    rbx = *(rbx);\n    edx = 5;\n    rax = dcgettext (0, \"Written by %s.\\n\");\n    rdi = rbp;\n    rdx = rbx;\n    rsi = rax;\n    eax = 0;\n    void (*0x401de0)() ();\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s and %s.\\n\");\n    rcx = r12;\n    rdx = rbx;\n    rsi = rax;\n    rdi = rbp;\n    eax = 0;\n    void (*0x401de0)() ();\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, and %s.\\n\");\n    r8 = r13;\n    rcx = r12;\n    rdx = rbx;\n    rsi = rax;\n    rdi = rbp;\n    eax = 0;\n    void (*0x401de0)() ();\n    r14 = *((rbx + 0x18));\n    r13 = *((rbx + 0x10));\n    edx = 5;\n    r12 = *((rbx + 8));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\nand %s.\\n\");\n    r9 = r14;\n    r8 = r13;\n    rcx = r12;\n    rdx = rbx;\n    rsi = rax;\n    rdi = rbp;\n    eax = 0;\n    void (*0x401de0)() ();\n    r15 = *((rbx + 0x20));\n    edx = 5;\n    r14 = *((rbx + 0x18));\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n    r9 = r14;\n    r8 = r13;\n    rcx = r12;\n    do {\n        rdx = rbx;\n        eax = 0;\n        fprintf (rbp, rax);\n        return;\n        rcx = *((rbx + 8));\n        r12 = *((rbx + 0x28));\n        edx = 5;\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        r13 = *((rbx + 0x10));\n        rbx = *(rbx);\n        *(rsp) = rcx;\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n        r9 = r14;\n        r8 = r13;\n        rcx = *((rsp + 0x10));\n    } while (1);\n    r8 = *((rbx + 0x10));\n    rcx = *((rbx + 8));\n    edx = 5;\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *((rsp + 8)) = r8;\n    *(rsp) = rcx;\n    rbx = *(rbx);\n    dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n    r9 = r14;\n    goto label_0;\nlabel_3:\n    r10 = *((rbx + 0x40));\n    r9 = *((rbx + 0x18));\n    edx = 5;\n    esi = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    r8 = *((rbx + 0x10));\n    rcx = *((rbx + 8));\n    r14 = *((rbx + 0x38));\n    r13 = *((rbx + 0x30));\n    *((rsp + 0x18)) = r10;\n    r12 = *((rbx + 0x28));\n    r15 = *((rbx + 0x20));\n    *((rsp + 0x10)) = r9;\n    *((rsp + 8)) = r8;\n    rbx = *(rbx);\n    *(rsp) = rcx;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00409550",
            "funcStartAddr": "0x409550",
            "funcEndAddr": "0x40960c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x409550 */\n#include <stdint.h>\n \nuint64_t fcn_00409550 (int64_t arg_b0h, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_70h;\n    int64_t var_90h;\n    int64_t var_98h;\n    r8 = arg5;\n    r9 = arg6;\n    r11d = 0;\n    rax = rsp + 0xb0;\n    *((rsp + 0x90)) = r8;\n    r10 = rsp + 0xb0;\n    r8d = 0x20;\n    *((rsp + 0x10)) = rax;\n    rax = rsp + 0x70;\n    *((rsp + 0x98)) = r9;\n    r9d = 0;\n    *((rsp + 8)) = 0x20;\n    *((rsp + 0x18)) = rax;\n    while (r8d <= 0x2f) {\n        eax = r8d;\n        r11 = rsp + 0x70;\n        r8d += 8;\n        rax += r11;\n        r11d = 1;\n        rax = *(rax);\n        *((rsp + r9*8 + 0x20)) = rax;\n        if (rax == 0) {\n            goto label_1;\n        }\nlabel_0:\n        r9++;\n        if (r9 == 0xa) {\n            goto label_1;\n        }\n    }\n    rax = r10;\n    r10 += 8;\n    rax = *(rax);\n    *((rsp + r9*8 + 0x20)) = rax;\n    if (rax != 0) {\n        goto label_0;\n    }\nlabel_1:\n    if (r11b != 0) {\n        *((rsp + 8)) = r8d;\n    }\n    fcn_004090e0 (rdi, rsi, rdx, rcx, rsp + 0x20, r9);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00409680",
            "funcStartAddr": "0x409680",
            "funcEndAddr": "0x40969a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x409680 */\n#include <stdint.h>\n \nuint64_t fcn_00409680 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = malloc (rdi);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    return fcn_004098a0 ();\n}\n"
        },
        {
            "funcName": "fcn_004096d0",
            "funcStartAddr": "0x4096d0",
            "funcEndAddr": "0x409706",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x4096d0 */\n#include <stdint.h>\n \nuint64_t fcn_004096d0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rsi;\n    if (rsi == 0) {\n        if (rdi != 0) {\n            goto label_0;\n        }\n    }\n    rax = realloc (rdi, rbx);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_1;\n        }\n    }\n    return rax;\nlabel_0:\n    eax = free (rdi);\n    eax = 0;\n    return rax;\nlabel_1:\n    return fcn_004098a0 ();\n}\n"
        },
        {
            "funcName": "fcn_00409840",
            "funcStartAddr": "0x409840",
            "funcEndAddr": "0x409868",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x409840 */\n#include <stdint.h>\n \nuint64_t fcn_00409840 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdi = rsi;\n    rbx = rsi;\n    rax = fcn_00409680 (rdi);\n    rdx = rbx;\n    rsi = rbp;\n    rdi = rax;\n    return memcpy ();\n}\n"
        },
        {
            "funcName": "fcn_004098a0",
            "funcStartAddr": "0x4098a0",
            "funcEndAddr": "0x4098d1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x4098a0 */\n#include <stdint.h>\n \nuint64_t fcn_004098a0 (void) {\n    edx = 5;\n    rax = dcgettext (0, \"memory exhausted\");\n    rcx = rax;\n    eax = 0;\n    error (*(0x006122c0), 0, 0x40dcb9);\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_004098e0",
            "funcStartAddr": "0x4098e0",
            "funcEndAddr": "0x409d3d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x4098e0 */\n#include <stdint.h>\n \nuint64_t fcn_004098e0 (int64_t arg1, int64_t arg2, uint32_t arg3, int64_t arg4, int64_t arg5) {\n    uint32_t var_8h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    if (edx > 0x24) {\n        goto label_23;\n    }\n    r15 = rsi;\n    rax = rsp + 0x18;\n    *((rsp + 8)) = edx;\n    r14 = rcx;\n    r13 = r8;\n    if (rsi == 0) {\n        r15 = rax;\n    }\n    errno_location ();\n    *(rax) = 0;\n    r12 = rax;\n    ebx = *(rbp);\n    rax = ctype_b_loc ();\n    edx = *((rsp + 8));\n    rsi = *(rax);\n    rax = rbp;\n    while ((*((rsi + rcx*2 + 1)) & 0x20) != 0) {\n        rax++;\n        ebx = *(rax);\n        ecx = (int32_t) bl;\n    }\n    if (bl == 0x2d) {\n        goto label_1;\n    }\n    rax = strtoul (rbp, r15, rdx);\n    r8 = *(r15);\n    rbx = rax;\n    if (r8 == rbp) {\n        goto label_24;\n    }\n    eax = *(r12);\n    if (eax != 0) {\n        goto label_25;\n    }\n    ebp = 0;\n    do {\n        if (r13 != 0) {\n            r12d = *(r8);\n            if (r12b != 0) {\n                goto label_26;\n            }\n        }\nlabel_3:\n        *(r14) = rbx;\nlabel_0:\n        eax = ebp;\n        return rax;\nlabel_25:\n    } while (eax == 0x22);\n    do {\nlabel_1:\n        goto label_0;\nlabel_24:\n        *((rsp + 8)) = r8;\n    } while (r13 == 0);\n    r12d = *(rbp);\n    if (r12b == 0) {\n        goto label_1;\n    }\n    esi = (int32_t) r12b;\n    ebp = 0;\n    ebx = 1;\n    rax = strchr (r13, rsi);\n    r8 = *((rsp + 8));\n    if (rax == 0) {\n        goto label_1;\n    }\n    do {\n        *((rsp + 8)) = r8;\n        rax = strchr (r13, 0x30);\n        r8 = *((rsp + 8));\n        if (rax == 0) {\n            goto label_27;\n        }\n        eax = *((r8 + 1));\n        if (al == 0x44) {\n            goto label_28;\n        }\n        if (al == 0x69) {\n            goto label_29;\n        }\n        if (al == 0x42) {\n            goto label_28;\n        }\n        r12d -= 0x42;\n        if (r12b > 0x35) {\n            goto label_30;\n        }\n        r12d = (int32_t) r12b;\n        /* switch table (54 cases) at 0x40ef18 */\nlabel_26:\n        esi = (int32_t) r12b;\n        *((rsp + 8)) = r8;\n        rax = strchr (r13, rsi);\n        r8 = *((rsp + 8));\n    } while (rax != 0);\n    do {\nlabel_30:\n        *(r14) = rbx;\n        ebp |= 2;\n        goto label_0;\nlabel_27:\n        esi = 1;\n        ecx = 0x400;\nlabel_2:\n        r12d -= 0x42;\n    } while (r12b > 0x35);\n    r12d = (int32_t) r12b;\n    /* switch table (54 cases) at 0x40f0c8 */\nlabel_28:\n    esi = 2;\n    ecx = 0x3e8;\n    goto label_2;\n    rsi = (int64_t) esi;\nlabel_7:\n    if (rbx < 0) {\n        goto label_6;\n    }\n    rbx += rbx;\n    do {\nlabel_4:\n        r8 += rsi;\n        eax = ebp;\n        eax |= 2;\n        *(r15) = r8;\n        if (*(r8) != 0) {\n        }\n        goto label_3;\n        rsi = (int64_t) esi;\n    } while (1);\n    rsi = (int64_t) esi;\nlabel_8:\n    rax = rbx;\n    rax >>= 0x37;\n    if (rax != 0) {\n        goto label_6;\n    }\n    rbx <<= 9;\n    goto label_4;\n    rsi = (int64_t) esi;\nlabel_9:\n    edi = 7;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (rbx overflow 0) {\n            goto label_31;\n        }\nlabel_18:\n        edi--;\n    } while (edi != 0);\nlabel_5:\n    ebp |= r9d;\n    goto label_4;\n    rsi = (int64_t) esi;\nlabel_10:\n    edi = 8;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (ebp overflow 0) {\n            goto label_32;\n        }\nlabel_19:\n        edi--;\n    } while (edi != 0);\n    goto label_5;\n    rsi = (int64_t) esi;\nlabel_11:\n    edi = 4;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_33;\n        }\nlabel_21:\n        edi--;\n    } while (edi != 0);\n    goto label_5;\n    rsi = (int64_t) esi;\nlabel_12:\n    edi = 5;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_34;\n        }\nlabel_22:\n        edi--;\n    } while (edi != 0);\n    goto label_5;\n    rsi = (int64_t) esi;\nlabel_13:\n    rax = rbx;\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_6;\n    }\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_6;\n    }\n    rbx = rax;\n    goto label_4;\n    rdx = (int64_t) ecx;\n    rsi = (int64_t) esi;\nlabel_14:\n    rax = rbx;\n    rdx:rax = rax * rdx;\n    rbx = rax;\n    if (edi !overflow 0) {\n        goto label_4;\n    }\nlabel_6:\n    rbx |= 0xffffffffffffffff;\n    goto label_4;\n    rsi = (int64_t) esi;\nlabel_15:\n    rax = rbx;\n    rdx:rax = rax * rcx;\n    if (rbx overflow 0) {\n        goto label_35;\n    }\n    rdx:rax = rax * rcx;\n    if (rbx overflow 0) {\n        goto label_35;\n    }\n    rdx:rax = rax * rcx;\n    if (rbx overflow 0) {\n        goto label_35;\n    }\n    rbx = rax;\n    eax = 0;\n    ebp |= eax;\n    goto label_4;\n    rsi = (int64_t) esi;\nlabel_16:\n    edi = 6;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (ebp overflow 0) {\n            goto label_36;\n        }\nlabel_20:\n        edi--;\n    } while (edi != 0);\n    goto label_5;\n    rsi = (int64_t) esi;\nlabel_17:\n    rax = rbx;\n    rax >>= 0x36;\n    if (rax != 0) {\n        goto label_6;\n    }\n    rbx <<= 0xa;\n    goto label_4;\n    esi = 1;\n    goto label_7;\n    esi = 1;\n    goto label_4;\n    esi = 1;\n    goto label_8;\n    esi = 1;\n    ecx = 0x400;\n    goto label_9;\n    esi = 1;\n    ecx = 0x400;\n    goto label_10;\n    esi = 1;\n    ecx = 0x400;\n    goto label_11;\n    esi = 1;\n    ecx = 0x400;\n    goto label_12;\n    esi = 1;\n    ecx = 0x400;\n    goto label_13;\n    esi = 1;\n    edx = 0x400;\n    goto label_14;\n    esi = 1;\n    ecx = 0x400;\n    goto label_15;\n    esi = 1;\n    ecx = 0x400;\n    goto label_16;\n    esi = 1;\n    goto label_17;\nlabel_29:\n    esi = 0;\n    ecx = 0x400;\n    sil = (*((r8 + 2)) == 0x42) ? 1 : 0;\n    esi = rsi + rsi + 1;\n    goto label_2;\nlabel_35:\n    eax = 1;\n    rbx |= 0xffffffffffffffff;\n    ebp |= eax;\n    goto label_4;\nlabel_31:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_18;\nlabel_23:\n    assert_fail (\"0 <= strtol_base && strtol_base <= 36\", \"xstrtol.c\", 0x60, \"xstrtoul\");\nlabel_32:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_19;\nlabel_36:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_20;\nlabel_33:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_21;\nlabel_34:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_22;\n}\n"
        },
        {
            "funcName": "fcn_00409d40",
            "funcStartAddr": "0x409d40",
            "funcEndAddr": "0x409e75",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x409d40 */\n#include <stdint.h>\n \nuint64_t fcn_00409d40 (int64_t arg_70h, int64_t arg1, uint32_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_30h;\n    int64_t var_38h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    do {\nlabel_2:\n        rax = rsp + 0x70;\n        *((rsp + 0x30)) = rdx;\n        *((rsp + 0x10)) = rax;\n        rax = rsp + 0x20;\n        *((rsp + 0x38)) = rcx;\n        *((rsp + 8)) = 0x10;\n        *((rsp + 0x18)) = rax;\n        if (esi != 0x406) {\n            goto label_4;\n        }\n        r12d = *((rax + 0x10));\n        eax = imp.__libc_start_main;\n        *((rsp + 8)) = 0x18;\n        edx = r12d;\n        if (eax >= 0) {\n            eax = 0;\n            eax = fcntl ();\n            ebx = eax;\n            if (eax < 0) {\n                goto label_5;\n            }\nlabel_1:\n            *(0x00612678) = 1;\nlabel_0:\n            eax = ebx;\n            return rax;\n        }\n        eax = 0;\n        eax = fcn_00409d40 (rdi, 0, rdx, rcx, r8);\n    } while (1);\n    ebx = eax;\n    if (eax < 0) {\n        goto label_0;\n    }\n    if (*(0x00612678) != 0xffffffff) {\n        goto label_0;\n    }\nlabel_3:\n    eax = 0;\n    esi = 1;\n    edi = ebx;\n    eax = fcntl ();\n    if (eax < 0) {\n        goto label_6;\n    }\n    eax |= 1;\n    esi = 2;\n    edi = ebx;\n    edx = eax;\n    eax = 0;\n    eax = fcntl ();\n    if (eax != 0xffffffff) {\n        goto label_0;\n    }\nlabel_6:\n    rax = errno_location ();\n    ebx = 0xffffffff;\n    r12d = *(rax);\n    close (ebx);\n    *(rbp) = r12d;\n    goto label_0;\nlabel_4:\n    rax = *((rsp + 0x18));\n    rdx = *((rax + 0x10));\n    eax = 0;\n    eax = fcntl ();\n    ebx = eax;\n    return rax;\nlabel_5:\n    rax = errno_location ();\n    if (*(rax) != 0x16) {\n        goto label_1;\n    }\n    eax = 0;\n    eax = fcn_00409d40 (ebp, 0, r12d, rcx, r8);\n    goto label_2;\n    ebx = eax;\n    if (eax < 0) {\n        goto label_0;\n    }\n    *(0x00612678) = 0xffffffff;\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_00409e80",
            "funcStartAddr": "0x409e80",
            "funcEndAddr": "0x409ec0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x409e80 */\n#include <stdint.h>\n \nuint32_t fcn_00409e80 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    if (rdi != 0) {\n        eax = freading ();\n        if (eax == 0) {\n            goto label_0;\n        }\n        if ((*(rbx) & 0x100) != 0) {\n            goto label_1;\n        }\n    }\nlabel_0:\n    rdi = rbx;\n    void (*0x401e60)() ();\nlabel_1:\n    fcn_00409ef0 (rbx, 0, 1);\n    rdi = rbx;\n    return fflush ();\n}\n"
        },
        {
            "funcName": "fcn_00409ec0",
            "funcStartAddr": "0x409ec0",
            "funcEndAddr": "0x409ee8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x409ec0 */\n#include <stdint.h>\n \nint64_t fcn_00409ec0 (uint32_t arg1) {\n    rdi = arg1;\n    eax = 0;\n    rcx = *((rdi + 0x20));\n    if (*((rdi + 0x28)) <= rcx) {\n        rax = *((rdi + 0x10));\n        rax -= *((rdi + 8));\n        if ((*(rdi) & 0x100) == 0) {\n            goto label_0;\n        }\n        rdx = *((rdi + 0x58));\n        rdx -= *((rdi + 0x48));\n        rax += rdx;\n    }\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00409ef0",
            "funcStartAddr": "0x409ef0",
            "funcEndAddr": "0x409f47",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x409ef0 */\n#include <stdint.h>\n \nint64_t fcn_00409ef0 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rax = *((rdi + 8));\n    while (*((rdi + 0x28)) != rax) {\nlabel_0:\n        void (*0x401f20)() ();\n        rax = *((rdi + 0x20));\n    }\n    if (*((rdi + 0x48)) != 0) {\n        goto label_0;\n    }\n    r12d = edx;\n    rbx = rdi;\n    eax = fileno (rdi);\n    edx = r12d;\n    rsi = rbp;\n    edi = eax;\n    rax = lseek ();\n    if (rax != -1) {\n        *(rbx) &= 0xffffffef;\n        *((rbx + 0x90)) = rax;\n        eax = 0;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00409f50",
            "funcStartAddr": "0x409f50",
            "funcEndAddr": "0x40a02f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x409f50 */\n#include <stdint.h>\n \nuint64_t fcn_00409f50 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r11 = rdi + 8;\n    r12d = *((rsi + 0x30));\n    ebp = *(rsi);\n    rbx = *((rsi + 0x34));\n    r9d = r12d;\n    r10d = ebp;\n    r8 = rbx;\nlabel_1:\n    if (r10d <= r8d) {\n        goto label_2;\n    }\nlabel_0:\n    if (r9d >= r8d) {\n        goto label_2;\n    }\n    r14d = r10d;\n    edx = r8d;\n    r14d -= r8d;\n    edx -= r9d;\n    if (r14d <= edx) {\n        goto label_3;\n    }\n    rcx = (int64_t) r9d;\n    r10d -= edx;\n    edx--;\n    rdx += rcx;\n    rax = rdi + rcx*8;\n    r13 = r11 + rdx*8;\n    rdx = (int64_t) r10d;\n    rdx -= rcx;\n    do {\n        rcx = *(rax);\n        r14 = *((rax + rdx*8));\n        *(rax) = r14;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (r13 != rax);\n    if (r10d > r8d) {\n        goto label_0;\n    }\nlabel_2:\n    eax = ebp;\n    *((rsi + 0x34)) = ebp;\n    eax -= r8d;\n    r12d += eax;\n    *((rsi + 0x30)) = r12d;\n    r12 = rbx;\n    r13 = rbx;\n    r14 = rbx;\n    r15 = rbx;\n    return rax;\nlabel_3:\n    rdx = (int64_t) r9d;\n    ecx = r14 - 1;\n    rcx += rdx;\n    rax = rdi + rdx*8;\n    r13 = r11 + rcx*8;\n    rcx = rbx;\n    rcx -= rdx;\n    rdx = rcx;\n    do {\n        rcx = *(rax);\n        r15 = *((rax + rdx*8));\n        *(rax) = r15;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (rax != r13);\n    r9d += r14d;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040a030",
            "funcStartAddr": "0x40a030",
            "funcEndAddr": "0x40b063",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x40a030 */\n#include <stdint.h>\n \nint64_t fcn_0040a030 (uint32_t arg_a0h, int64_t arg_a8h, int64_t arg1, int64_t arg2, int64_t arg3, uint32_t arg4, int64_t arg5, int64_t arg6) {\n    uint32_t var_ch;\n    int64_t var_10h;\n    uint32_t var_18h;\n    uint32_t var_20h;\n    int64_t var_28h;\n    uint32_t var_2ch;\n    int64_t var_30h;\n    uint32_t var_38h;\n    uint32_t var_40h;\n    uint32_t var_48h;\n    int64_t var_4ch;\n    int64_t var_50h;\n    int64_t var_58h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r12 = *((rsp + 0xa0));\n    *((rsp + 0x10)) = rsi;\n    *(rsp) = rdx;\n    eax = *((r12 + 4));\n    *((rsp + 0x20)) = rcx;\n    *((rsp + 0x30)) = r8;\n    *((rsp + 0x28)) = r9d;\n    *((rsp + 0xc)) = eax;\n    if (edi <= 0) {\n        goto label_47;\n    }\n    *((r12 + 0x10)) = 0;\n    eax = *(r12);\n    if (eax != 0) {\n        goto label_48;\n    }\n    *(r12) = 1;\n    eax = 1;\n    do {\n        r11d = *((rsp + 0xa8));\n        *((r12 + 0x34)) = eax;\n        *((r12 + 0x30)) = eax;\n        *((r12 + 0x20)) = 0;\n        if (r11d == 0) {\n            goto label_49;\n        }\n        *((r12 + 0x2c)) = 1;\n        rax = *(rsp);\n        r8d = 0;\n        eax = *(rax);\n        if (al == 0x2d) {\n            goto label_6;\n        }\n        if (al == 0x2b) {\n            goto label_29;\n        }\nlabel_7:\n        *((r12 + 0x28)) = 0;\nlabel_1:\n        *((r12 + 0x18)) = 1;\n        rax = *(rsp);\n        eax = *(rax);\nlabel_0:\n        eax = 0;\n        if (al != 0x3a) {\n            eax = *((rsp + 0xc));\n        }\n        *((rsp + 0xc)) = eax;\n        if (r8 == 0) {\n            goto label_50;\n        }\n        if (*(r8) == 0) {\n            goto label_50;\n        }\nlabel_5:\n        if (*((rsp + 0x20)) != 0) {\n            rax = *(r12);\n            rbx = *((rsp + 0x10));\n            rdx = rax;\n            rax = *((rbx + rax*8));\n            esi = *((rax + 1));\n            if (sil == 0x2d) {\n                goto label_51;\n            }\n            r9d = *((rsp + 0x28));\n            if (r9d == 0) {\n                goto label_22;\n            }\n            if (*((rax + 2)) != 0) {\n                goto label_51;\n            }\n            *((rsp + 0x2c)) = edx;\n            *((rsp + 0x18)) = r8;\n            rax = strchr (*(rsp), rsi);\n            r8 = *((rsp + 0x18));\n            rdx = *((rsp + 0x2c));\n            if (rax == 0) {\n                goto label_51;\n            }\n        }\nlabel_22:\n        rbx = r8 + 1;\n        *((rsp + 0x18)) = r8;\n        *((r12 + 0x20)) = rbx;\n        r13d = *(r8);\n        esi = r13d;\n        r14d = r13d;\n        rax = strchr (*(rsp), esi);\n        r8 = *((rsp + 0x18));\n        if (*((r8 + 1)) == 0) {\n            goto label_52;\n        }\nlabel_8:\n        r14d -= 0x3a;\n        if (r14b <= 1) {\n            goto label_53;\n        }\n        if (rax == 0) {\n            goto label_53;\n        }\n        edx = *((rax + 1));\n        if (*(rax) == 0x57) {\n            goto label_54;\n        }\nlabel_10:\n        if (dl != 0x3a) {\n            goto label_15;\n        }\n        edx = *((r8 + 1));\n        if (*((rax + 2)) == 0x3a) {\n            goto label_55;\n        }\n        rax = *(r12);\n        if (dl == 0) {\n            goto label_56;\n        }\n        eax++;\n        *((r12 + 0x10)) = rbx;\n        *(r12) = eax;\nlabel_25:\n        *((r12 + 0x20)) = 0;\n        goto label_15;\nlabel_48:\n        ebx = *((r12 + 0x18));\n    } while (ebx == 0);\n    rbx = *(rsp);\n    r8 = *((r12 + 0x20));\n    eax = *(rbx);\n    edx = rax - 0x2b;\n    edx &= 0xfd;\n    if (edx != 0) {\n        goto label_0;\n    }\n    eax = *((rbx + 1));\n    rbx++;\n    *(rsp) = rbx;\n    goto label_0;\nlabel_50:\n    eax = *(r12);\n    if (*((r12 + 0x34)) > eax) {\n        *((r12 + 0x34)) = eax;\n    }\n    if (eax < *((r12 + 0x30))) {\n        *((r12 + 0x30)) = eax;\n    }\n    if (*((r12 + 0x28)) == 1) {\n        goto label_57;\n    }\nlabel_3:\n    if (ebp == eax) {\n        goto label_58;\n    }\n    rbx = *((rsp + 0x10));\n    rdx = (int64_t) eax;\n    ecx = 3;\n    edi = 0x40f291;\n    rdx = *((rbx + rdx*8));\n    rsi = *((rbx + rdx*8));\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    cl = (ebp > eax) ? 1 : 0;\n    if (cl == 0) {\n        edx = *((r12 + 0x30));\n        ecx = *((r12 + 0x34));\n        eax++;\n        *(r12) = eax;\n        if (edx == ecx) {\n            goto label_59;\n        }\n        if (eax != ecx) {\n            eax = fcn_00409f50 (rbx, r12);\n            edx = *((r12 + 0x30));\n        }\nlabel_21:\n        *((r12 + 0x34)) = ebp;\n        *(r12) = ebp;\n        goto label_60;\n    }\n    if (*(rdx) == 0x2d) {\n        goto label_61;\n    }\nlabel_4:\n    r10d = *((r12 + 0x28));\n    if (r10d == 0) {\n        goto label_47;\n    }\n    eax++;\n    *((r12 + 0x10)) = rdx;\n    r13d = 1;\n    *(r12) = eax;\n    do {\nlabel_15:\n        eax = r13d;\n        return rax;\nlabel_49:\n        rax = getenv (\"POSIXLY_CORRECT\");\n        if (rax != 0) {\n            goto label_62;\n        }\n        *((r12 + 0x2c)) = 0;\n        rax = *(rsp);\n        eax = *(rax);\n        if (al != 0x2d) {\n            goto label_63;\n        }\n        r8 = *((r12 + 0x20));\nlabel_6:\n        *((r12 + 0x28)) = 2;\n        goto label_1;\nlabel_58:\n        ebp = *((r12 + 0x34));\n        edx = *((r12 + 0x30));\nlabel_60:\n        if (edx != ebp) {\n            *(r12) = edx;\n        }\nlabel_47:\n        r13d = 0xffffffff;\n    } while (1);\nlabel_57:\n    edx = *((r12 + 0x34));\n    if (*((r12 + 0x30)) == edx) {\n        goto label_64;\n    }\n    if (eax != edx) {\n        fcn_00409f50 (*((rsp + 0x10)), r12);\n        edx = *(r12);\n    }\nlabel_9:\n    if (ebp <= edx) {\n        goto label_65;\n    }\n    rax = (int64_t) edx;\n    rdi = *((rsp + 0x10));\n    while (*(rcx) != 0x2d) {\nlabel_2:\n        edx = rsi + 1;\n        rax++;\n        *(r12) = edx;\n        if (ebp <= eax) {\n            goto label_65;\n        }\n        rcx = *((rdi + rax*8));\n        esi = eax;\n        edx = eax;\n    }\n    if (*((rcx + 1)) == 0) {\n        goto label_2;\n    }\n    eax = *(r12);\nlabel_16:\n    *((r12 + 0x34)) = edx;\n    goto label_3;\nlabel_61:\n    ecx = *((rdx + 1));\n    if (cl == 0) {\n        goto label_4;\n    }\n    sil = (*((rsp + 0x20)) != 0) ? 1 : 0;\n    eax = 0;\n    al = (cl == 0x2d) ? 1 : 0;\n    rax &= rsi;\n    r8 = rdx + rax + 1;\n    *((r12 + 0x20)) = r8;\n    goto label_5;\nlabel_62:\n    rax = *(rsp);\n    r8 = *((r12 + 0x20));\n    *((r12 + 0x2c)) = 1;\n    eax = *(rax);\n    if (al == 0x2d) {\n        goto label_6;\n    }\n    if (al != 0x2b) {\n        goto label_7;\n    }\nlabel_29:\n    *((r12 + 0x28)) = 0;\n    goto label_1;\nlabel_52:\n    *(r12)++;\n    goto label_8;\nlabel_64:\n    if (eax == edx) {\n        goto label_9;\n    }\n    *((r12 + 0x30)) = eax;\n    edx = eax;\n    goto label_9;\nlabel_54:\n    if (dl != 0x3b) {\n        goto label_10;\n    }\n    if (*((rsp + 0x20)) == 0) {\n        goto label_66;\n    }\n    rax = *(r12);\n    if (*((r8 + 1)) == 0) {\n        goto label_67;\n    }\n    eax++;\n    *((r12 + 0x10)) = rbx;\n    *(r12) = eax;\nlabel_32:\n    *((r12 + 0x20)) = rbx;\n    r13d = *(rbx);\n    r14 = rbx;\n    if (r13b != 0) {\n        goto label_68;\n    }\n    goto label_69;\n    do {\n        r14++;\n        r13d = *(r14);\n        if (r13b == 0) {\n            goto label_69;\n        }\nlabel_68:\n    } while (r13b != 0x3d);\nlabel_69:\n    rcx = *((rsp + 0x20));\n    r15 = *(rcx);\n    if (r15 == 0) {\n        goto label_66;\n    }\n    rax = r14;\n    edx = 0;\n    edi = 0;\n    *((rsp + 0x48)) = r13b;\n    rax -= rbx;\n    *((rsp + 0x38)) = r14;\n    r13d = edx;\n    esi = eax;\n    *((rsp + 0x40)) = ebp;\n    r14 = rax;\n    *((rsp + 0xa0)) = r12;\n    r12 = r15;\n    r15 = rdi;\n    *((rsp + 0x2c)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x18)) = rsi;\n    goto label_70;\nlabel_11:\n    r11d = *((rsp + 0x28));\n    if (r11d == 0) {\n        eax = *((rbp + 8));\n        if (*((r15 + 8)) == eax) {\n            goto label_71;\n        }\n    }\nlabel_30:\n    *((rsp + 0x20)) = 1;\n    do {\nlabel_12:\n        rbp += 0x20;\n        r12 = *(rbp);\n        r13d++;\n        if (r12 == 0) {\n            goto label_72;\n        }\nlabel_70:\n        eax = strncmp (r12, rbx, r14);\n    } while (eax != 0);\n    rax = strlen (r12);\n    if (*((rsp + 0x18)) == rax) {\n        goto label_73;\n    }\n    if (r15 != 0) {\n        goto label_11;\n    }\n    *((rsp + 0x2c)) = r13d;\n    r15 = rbp;\n    goto label_12;\nlabel_51:\n    eax = *(r8);\n    r13 = r8;\n    if (al == 0) {\n        goto label_74;\n    }\n    if (al == 0x3d) {\n        goto label_74;\n    }\n    do {\n        r13++;\n        eax = *(r13);\n        if (al == 0) {\n            goto label_75;\n        }\n    } while (al != 0x3d);\nlabel_75:\n    rax = r13;\n    rax -= r8;\n    *((rsp + 0x2c)) = eax;\nlabel_27:\n    rbx = *((rsp + 0x20));\n    r15 = *(rbx);\n    if (r15 == 0) {\n        goto label_76;\n    }\n    ecx = 0;\n    *((rsp + 0x40)) = r13;\n    r14d = 0;\n    *((rsp + 0x4c)) = ebp;\n    rsi = r8;\n    r13 = rax;\n    *((rsp + 0x38)) = 0xffffffff;\n    *((rsp + 0x48)) = 0;\n    *((rsp + 0x18)) = 0;\n    goto label_77;\nlabel_13:\n    edi = *((rsp + 0x48));\n    if (edi != 0) {\n        goto label_18;\n    }\n    esi = *((rsp + 0x28));\n    if (esi == 0) {\n        ecx = *((rbx + 8));\n        if (*((rax + 8)) == ecx) {\n            goto label_78;\n        }\n    }\nlabel_17:\n    rax = malloc (0x10);\n    if (rax == 0) {\n        goto label_79;\n    }\n    *(rax) = rbx;\n    *((rax + 8)) = r14;\n    r14 = rax;\n    do {\nlabel_18:\n        rbx += 0x20;\n        r15 = *(rbx);\n        ebp++;\n        if (r15 == 0) {\n            goto label_80;\n        }\nlabel_14:\nlabel_77:\n        eax = strncmp (r15, *((r12 + 0x20)), r13);\n    } while (eax != 0);\n    eax = strlen (r15);\n    if (*((rsp + 0x2c)) == eax) {\n        goto label_81;\n    }\n    rax = *((rsp + 0x18));\n    if (rax != 0) {\n        goto label_13;\n    }\n    *((rsp + 0x18)) = rbx;\n    rbx += 0x20;\n    r15 = *(rbx);\n    *((rsp + 0x38)) = ebp;\n    ebp++;\n    if (r15 != 0) {\n        goto label_14;\n    }\nlabel_80:\n    eax = *((rsp + 0x48));\n    r13 = *((rsp + 0x40));\n    ebp = *((rsp + 0x4c));\n    sil = (r14 != 0) ? 1 : 0;\n    rdx = *(r12);\n    if (al != 0) {\n        goto label_82;\n    }\n    if (sil != 0) {\n        goto label_82;\n    }\n    if (*((rsp + 0x18)) == 0) {\n        goto label_76;\n    }\nlabel_19:\n    eax = rdx + 1;\n    rbx = *((rsp + 0x18));\n    *(r12) = eax;\n    ecx = *((rbx + 8));\n    if (*(r13) == 0) {\n        goto label_83;\n    }\n    if (ecx == 0) {\n        goto label_84;\n    }\n    r13++;\n    *((r12 + 0x10)) = r13;\nlabel_20:\n    rbx = *((r12 + 0x20));\n    rax = strlen (*((r12 + 0x20)));\n    rbx += rax;\n    rax = *((rsp + 0x30));\n    *((r12 + 0x20)) = rbx;\n    if (rax != 0) {\n        ebx = *((rsp + 0x38));\n        *(rax) = ebx;\n    }\n    rsi = *((rsp + 0x18));\n    rax = *((rsi + 0x10));\n    r13d = *((rsi + 0x18));\n    if (rax == 0) {\n        goto label_15;\n    }\nlabel_31:\n    *(rax) = r13d;\n    r13d = 0;\n    goto label_15;\nlabel_65:\n    eax = edx;\n    goto label_16;\nlabel_53:\n    ebp = *((rsp + 0xc));\n    if (ebp != 0) {\n        goto label_85;\n    }\nlabel_26:\n    *((r12 + 8)) = r13d;\n    r13d = 0x3f;\n    goto label_15;\nlabel_78:\n    rsi = *((rbx + 0x10));\n    if (*((rax + 0x10)) != rsi) {\n        goto label_17;\n    }\n    esi = *((rbx + 0x18));\n    if (*((rax + 0x18)) != esi) {\n        goto label_17;\n    }\n    eax = *((rsp + 0x28));\n    *((rsp + 0x48)) = eax;\n    goto label_18;\nlabel_81:\n    esi = *((rsp + 0x48));\n    r15d = ebp;\n    r13 = *((rsp + 0x40));\n    ebp = *((rsp + 0x4c));\n    if (esi == 0) {\n        goto label_86;\n    }\nlabel_23:\n    rdi = r14;\n    if (r14 == 0) {\n        goto label_24;\n    }\n    do {\n        r14 = *((rdi + 8));\n        eax = free (rdi);\n        rdi = r14;\n    } while (r14 != 0);\nlabel_24:\n    edx = *(r12);\n    *((rsp + 0x38)) = r15d;\n    *((rsp + 0x18)) = rbx;\n    goto label_19;\nlabel_83:\n    if (ecx != 1) {\n        goto label_20;\n    }\n    if (eax >= ebp) {\n        goto label_87;\n    }\n    rcx = *((rsp + 0x10));\n    rax = (int64_t) eax;\n    edx += 2;\n    *(r12) = edx;\n    rax = *((rcx + rax*8));\n    *((r12 + 0x10)) = rax;\n    goto label_20;\nlabel_59:\n    *((r12 + 0x30)) = eax;\n    edx = eax;\n    goto label_21;\nlabel_63:\n    if (al == 0x2b) {\n        goto label_88;\n    }\n    *((r12 + 0x28)) = 1;\n    r8 = *((r12 + 0x20));\n    goto label_1;\nlabel_76:\n    r14d = *((rsp + 0x28));\n    if (r14d == 0) {\n        goto label_89;\n    }\n    rsi = *((rsp + 0x10));\n    rax = (int64_t) edx;\n    rbx = *((rsi + rax*8));\n    if (*((rbx + 1)) == 0x2d) {\n        goto label_90;\n    }\n    r8 = *((r12 + 0x20));\n    *((rsp + 0x2c)) = edx;\n    esi = *(r8);\n    *((rsp + 0x18)) = r8;\n    rax = strchr (*(rsp), rsi);\n    r8 = *((rsp + 0x18));\n    edx = *((rsp + 0x2c));\n    if (rax != 0) {\n        goto label_22;\n    }\n    ecx = *((rsp + 0xc));\n    if (ecx != 0) {\nlabel_34:\n        rax = *((rsp + 0x10));\n        ebp = *(rbx);\n        edx = 5;\n        *(rsp) = r8;\n        rbx = *(rax);\n        rax = dcgettext (0, \"%s: unrecognized option '%c%s'\\n\");\n        r8 = *(rsp);\n        ecx = ebp;\n        rdx = rbx;\n        eax = 0;\n        fprintf (*(obj.stderr), rax);\n        edx = *(r12);\n    }\nlabel_33:\n    edx++;\n    r13d = 0x3f;\n    *((r12 + 0x20)) = 0x40f2d5;\n    *(r12) = edx;\n    *((r12 + 8)) = 0;\n    goto label_15;\nlabel_86:\n    if (r14 != 0) {\n        goto label_23;\n    }\n    goto label_24;\nlabel_55:\n    if (dl == 0) {\n        goto label_91;\n    }\n    *((r12 + 0x10)) = rbx;\n    *(r12)++;\n    goto label_25;\nlabel_84:\n    edx = *((rsp + 0xc));\n    if (edx != 0) {\n        rcx = *((rsp + 0x10));\n        rax = (int64_t) eax;\n        rsi = *((rsp + 0x18));\n        rax = *((rcx + rax*8 - 8));\n        rbp = *(rsi);\n        rbx = *(rcx);\n        if (*((rax + 1)) == 0x2d) {\n            goto label_92;\n        }\n        r13d = *(rax);\n        edx = 5;\n        rax = dcgettext (0, \"%s: option '%c%s' doesn't allow an argument\\n\");\n        r8 = rbp;\n        rdx = rbx;\n        ecx = r13d;\n        eax = 0;\n        fprintf (*(obj.stderr), rax);\n    }\nlabel_41:\n    rbx = *((r12 + 0x20));\n    r13d = 0x3f;\n    rax = strlen (rbx);\n    rbx += rax;\n    rax = *((rsp + 0x18));\n    *((r12 + 0x20)) = rbx;\n    eax = *((rax + 0x18));\n    *((r12 + 8)) = eax;\n    goto label_15;\nlabel_79:\n    if (r14 == 0) {\n        goto label_93;\n    }\n    do {\n        r14 = *((r14 + 8));\n        free (r14);\n        rdi = r14;\n    } while (r14 != 0);\nlabel_93:\n    *((rsp + 0x48)) = 1;\n    goto label_18;\nlabel_85:\n    rax = *((rsp + 0x10));\n    edx = 5;\n    rbx = *(rax);\n    rax = dcgettext (0, \"%s: invalid option -- '%c'\\n\");\n    ecx = r13d;\n    rdx = rbx;\n    eax = 0;\n    eax = fprintf (*(obj.stderr), rax);\n    goto label_26;\nlabel_56:\n    if (ebp == eax) {\n        goto label_94;\n    }\n    rsi = *((rsp + 0x10));\n    edx = rax + 1;\n    *(r12) = edx;\n    rax = *((rsi + rax*8));\n    *((r12 + 0x10)) = rax;\n    goto label_25;\nlabel_74:\n    *((rsp + 0x2c)) = 0;\n    eax = 0;\n    goto label_27;\nlabel_82:\n    ecx = *((rsp + 0xc));\n    if (ecx == 0) {\n        goto label_37;\n    }\n    if (sil == 0) {\n        goto label_95;\n    }\n    rax = *((rsp + 0x10));\n    *((rsp + 0x58)) = r14;\n    rbp = *((rax + rdx*8));\n    rbx = *(rax);\n    edx = 5;\n    rax = dcgettext (0, \"%s: option '%s' is ambiguous; possibilities:\");\n    rdx = rbx;\n    rcx = rbp;\n    eax = 0;\n    fprintf (*(obj.stderr), rax);\n    rbx = rsp + 0x50;\n    rax = *((rsp + 0x18));\n    while (rbx != 0) {\n        rax = *(rbx);\n        rdx = *(rax);\n        eax = 0;\n        fprintf (*(obj.stderr), \" '--%s');\n        rbx = *((rbx + 8));\n    }\n    fputc (0xa, *(obj.stderr));\nlabel_38:\n    rbx = *((r12 + 0x20));\n    rax = strlen (*((r12 + 0x20)));\n    *(r12)++;\n    *((r12 + 8)) = 0;\n    rbx += rax;\n    *((r12 + 0x20)) = rbx;\n    do {\nlabel_28:\n        r13d = 0x3f;\n        goto label_15;\nlabel_37:\n        rbx = *((r12 + 0x20));\n        *(rsp) = edx;\n        rax = strlen (rbx);\n        edx = *(rsp);\n        *((r12 + 8)) = 0;\n        rbx += rax;\n        edx++;\n        *((r12 + 0x20)) = rbx;\n        *(r12) = edx;\n    } while (r14 == 0);\n    do {\n        rbx = *((rdi + 8));\n        free (r14);\n        rdi = rbx;\n    } while (rbx != 0);\n    goto label_28;\nlabel_88:\n    r8 = *((r12 + 0x20));\n    goto label_29;\nlabel_71:\n    rax = *((rbp + 0x10));\n    if (*((r15 + 0x10)) != rax) {\n        goto label_30;\n    }\n    eax = *((rbp + 0x18));\n    eax = 1;\n    if (*((r15 + 0x18)) == eax) {\n        eax = *((rsp + 0x20));\n    }\n    *((rsp + 0x20)) = eax;\n    goto label_12;\nlabel_72:\n    r10d = *((rsp + 0x20));\n    r13d = *((rsp + 0x48));\n    r14 = *((rsp + 0x38));\n    ebp = *((rsp + 0x40));\n    r12 = *((rsp + 0xa0));\n    if (r10d != 0) {\n        goto label_96;\n    }\n    if (r15 == 0) {\n        goto label_66;\n    }\nlabel_36:\n    eax = *((r15 + 8));\n    if (r13b == 0) {\n        goto label_97;\n    }\n    if (eax == 0) {\n        goto label_98;\n    }\n    r14++;\n    *((r12 + 0x10)) = r14;\nlabel_35:\n    rax = strlen (rbx);\n    rbx += rax;\n    rax = *((rsp + 0x30));\n    *((r12 + 0x20)) = rbx;\n    if (rax != 0) {\n        ebx = *((rsp + 0x2c));\n        *(rax) = ebx;\n    }\n    rax = *((r15 + 0x10));\n    r13d = *((r15 + 0x18));\n    if (rax != 0) {\n        goto label_31;\n    }\n    goto label_15;\nlabel_67:\n    if (ebp == eax) {\n        goto label_99;\n    }\n    rbx = *((rsp + 0x10));\n    edx = rax + 1;\n    *(r12) = edx;\n    rbx = *((rbx + rax*8));\n    *((r12 + 0x10)) = rbx;\n    goto label_32;\nlabel_91:\n    *((r12 + 0x10)) = 0;\n    goto label_25;\nlabel_89:\n    r13d = *((rsp + 0xc));\n    if (r13d == 0) {\n        goto label_33;\n    }\n    rax = *((rsp + 0x10));\n    rbp = *((r12 + 0x20));\n    rbx = *((rax + rdx*8));\n    r8 = rbp;\n    if (*((rbx + 1)) != 0x2d) {\n        goto label_34;\n    }\nlabel_39:\n    rax = *((rsp + 0x10));\n    edx = 5;\n    rbx = *(rax);\n    rax = dcgettext (0, \"%s: unrecognized option '--%s'\\n\");\n    rcx = rbp;\n    rdx = rbx;\n    eax = 0;\n    fprintf (*(obj.stderr), rax);\n    edx = *(r12);\n    goto label_33;\nlabel_94:\n    edi = *((rsp + 0xc));\n    if (edi != 0) {\n        goto label_100;\n    }\nlabel_40:\n    rax = *(rsp);\n    *((r12 + 8)) = r13d;\n    r13d = 0;\n    r13b = (*(rax) != 0x3a) ? 1 : 0;\n    r13d = r13 * 5;\n    goto label_25;\nlabel_97:\n    if (eax == 1) {\n        goto label_101;\n    }\n    *((r12 + 0x10)) = 0;\n    goto label_35;\nlabel_73:\n    eax = r13d;\n    rsi = rbp;\n    r14 = *((rsp + 0x38));\n    r13d = *((rsp + 0x48));\n    ebp = *((rsp + 0x40));\n    r12 = *((rsp + 0xa0));\n    *((rsp + 0x2c)) = eax;\n    r15 = rsi;\n    goto label_36;\nlabel_95:\n    if (al == 0) {\n        goto label_37;\n    }\n    rax = *((rsp + 0x10));\n    rbp = *((rax + rdx*8));\n    rbx = *(rax);\n    edx = 5;\n    rax = dcgettext (0, \"%s: option '%s' is ambiguous\\n\");\n    rcx = rbp;\n    rdx = rbx;\n    eax = 0;\n    fprintf (*(obj.stderr), rax);\n    goto label_38;\nlabel_87:\n    r15d = *((rsp + 0xc));\n    if (r15d != 0) {\n        goto label_102;\n    }\nlabel_42:\n    rbx = *((r12 + 0x20));\n    rax = strlen (*((r12 + 0x20)));\n    rbx += rax;\n    rax = *((rsp + 0x18));\n    *((r12 + 0x20)) = rbx;\n    eax = *((rax + 0x18));\n    *((r12 + 8)) = eax;\n    rax = *(rsp);\n    if (*(rax) != 0x3a) {\n        goto label_28;\n    }\nlabel_43:\n    r13d = 0x3a;\n    goto label_15;\nlabel_90:\n    eax = *((rsp + 0xc));\n    if (eax == 0) {\n        goto label_33;\n    }\n    rbp = *((r12 + 0x20));\n    goto label_39;\nlabel_96:\n    r9d = *((rsp + 0xc));\n    while (1) {\n        r13d = 0x3f;\n        rax = strlen (rbx);\n        *(r12)++;\n        rbx += rax;\n        *((r12 + 0x20)) = rbx;\n        goto label_15;\nlabel_66:\n        *((r12 + 0x20)) = 0;\n        r13d = 0x57;\n        goto label_15;\nlabel_100:\n        rax = *((rsp + 0x10));\n        edx = 5;\n        rbx = *(rax);\n        rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n        ecx = r13d;\n        rdx = rbx;\n        eax = 0;\n        fprintf (*(obj.stderr), rax);\n        goto label_40;\nlabel_99:\n        ebx = *((rsp + 0xc));\n        if (ebx != 0) {\n            goto label_103;\n        }\nlabel_44:\n        rax = *(rsp);\n        *((r12 + 8)) = r13d;\n        r13d = 0;\n        r13b = (*(rax) != 0x3a) ? 1 : 0;\n        r13d = r13 * 5;\n        goto label_15;\nlabel_101:\n        rax = *(r12);\n        if (eax >= ebp) {\n            goto label_104;\n        }\n        rsi = *((rsp + 0x10));\n        edx = rax + 1;\n        *(r12) = edx;\n        rax = *((rsi + rax*8));\n        *((r12 + 0x10)) = rax;\n        goto label_35;\nlabel_92:\n        edx = 5;\n        rax = dcgettext (0, \"%s: option '--%s' doesn't allow an argument\\n\");\n        rcx = rbp;\n        rdx = rbx;\n        eax = 0;\n        fprintf (*(obj.stderr), rax);\n        goto label_41;\nlabel_102:\n        rax = *((rsp + 0x18));\n        edx = 5;\n        rbp = *(rax);\n        rax = *((rsp + 0x10));\n        rbx = *(rax);\n        rax = dcgettext (0, \"%s: option '--%s' requires an argument\\n\");\n        rcx = rbp;\n        rdx = rbx;\n        eax = 0;\n        fprintf (*(obj.stderr), rax);\n        goto label_42;\nlabel_98:\n        r8d = *((rsp + 0xc));\n        if (r8d != 0) {\n            goto label_105;\n        }\nlabel_45:\n        r13d = 0x3f;\n        rax = strlen (rbx);\n        rbx += rax;\n        *((r12 + 0x20)) = rbx;\n        goto label_15;\n        rax = *((rsp + 0x10));\n        edx = 5;\n        rbp = *(rax);\n        rax = dcgettext (0, \"%s: option '-W %s' is ambiguous\\n\");\n        rcx = rbx;\n        rdx = rbp;\n        eax = 0;\n        eax = fprintf (*(obj.stderr), rax);\n        rbx = *((r12 + 0x20));\n    }\nlabel_104:\n    if (*((rsp + 0xc)) != 0) {\n        goto label_106;\n    }\nlabel_46:\n    rdx = *((r12 + 0x20));\n    eax = 0;\n    rcx |= 0xffffffffffffffff;\n    rdi = rdx;\n    __asm (\"repne scasb al, byte [rdi]\");\n    rax = rcx;\n    rax = ~rax;\n    rax = rdx + rax - 1;\n    *((r12 + 0x20)) = rax;\n    rax = *(rsp);\n    if (*(rax) != 0x3a) {\n        goto label_28;\n    }\n    goto label_43;\nlabel_103:\n    rax = *((rsp + 0x10));\n    edx = 5;\n    rbx = *(rax);\n    rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n    ecx = r13d;\n    rdx = rbx;\n    eax = 0;\n    fprintf (*(obj.stderr), rax);\n    goto label_44;\nlabel_105:\n    rax = *((rsp + 0x10));\n    rbp = *(r15);\n    edx = 5;\n    rbx = *(rax);\n    rax = dcgettext (0, \"%s: option '-W %s' doesn't allow an argument\\n\");\n    rcx = rbp;\n    rdx = rbx;\n    eax = 0;\n    fprintf (*(obj.stderr), rax);\n    rbx = *((r12 + 0x20));\n    goto label_45;\nlabel_106:\n    rax = *((rsp + 0x10));\n    rbp = *(r15);\n    edx = 5;\n    rbx = *(rax);\n    rax = dcgettext (0, \"%s: option '-W %s' requires an argument\\n\");\n    rcx = rbp;\n    rdx = rbx;\n    eax = 0;\n    fprintf (*(obj.stderr), rax);\n    goto label_46;\n}\n"
        },
        {
            "funcName": "fcn_0040b070",
            "funcStartAddr": "0x40b070",
            "funcEndAddr": "0x40b0c6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x40b070 */\n#include <stdint.h>\n \nint32_t fcn_0040b070 (int64_t arg_10h) {\n    eax = *(0x0061233c);\n    *(0x00612680) = eax;\n    eax = *(0x00612338);\n    *(0x00612684) = eax;\n    eax = *((rsp + 0x10));\n    fcn_0040a030 (rdi, rsi, rdx, rcx, r8, r9);\n    edx = imp.__libc_start_main;\n    *(0x0061233c) = edx;\n    rdx = imp.__libc_start_main;\n    *(0x00612ec8) = rdx;\n    edx = imp.__libc_start_main;\n    *(0x00612334) = edx;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_0040b0f0",
            "funcStartAddr": "0x40b0f0",
            "funcEndAddr": "0x40b103",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x40b0f0 */\n#include <stdint.h>\n \nvoid fcn_0040b0f0 (void) {\n    r9d = 0;\n    fcn_0040b070 (rdi);\n}\n"
        },
        {
            "funcName": "fcn_0040b170",
            "funcStartAddr": "0x40b170",
            "funcEndAddr": "0x40b199",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x40b170 */\n#include <stdint.h>\n \nint64_t fcn_0040b170 (uint32_t arg2, size_t * arg3) {\n    rsi = arg2;\n    rdx = arg3;\n    if (rsi != 0) {\n        if (rdx != 0) {\n            goto label_0;\n        }\n        rax = 0xfffffffffffffffe;\n        return rax;\n    }\n    edx = 1;\n    esi = 0x40f2d5;\n    edi = 0;\nlabel_0:\n    return mbrtowc ();\n}\n"
        },
        {
            "funcName": "fcn_0040b1a0",
            "funcStartAddr": "0x40b1a0",
            "funcEndAddr": "0x40b2a4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x40b1a0 */\n#include <stdint.h>\n \nint64_t fcn_0040b1a0 (uint32_t arg1, int64_t arg2, uint32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r8d = esi;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    if ((dil & 7) == 0) {\n        goto label_1;\n    }\n    if (sil != *(rdi)) {\n        goto label_2;\n    }\n    goto label_3;\n    do {\n        if ((dil & 7) == 0) {\n            goto label_1;\n        }\n        if (*(rdi) == r8b) {\n            goto label_3;\n        }\nlabel_2:\n        rdi++;\n        rdx--;\n    } while (rdx != 0);\nlabel_0:\n    eax = 0;\n    return eax;\nlabel_1:\n    r9d = esi;\n    eax = (int32_t) sil;\n    r9d <<= 8;\n    r9d = (int32_t) r9w;\n    r9d |= eax;\n    r9 = (int64_t) r9d;\n    rax = r9;\n    rax <<= 0x10;\n    r9 |= rax;\n    rax = r9;\n    rax <<= 0x20;\n    r9 |= rax;\n    if (rdx <= 7) {\n        goto label_4;\n    }\n    r11 = 0xfefefefefefefeff;\n    rax = *(rdi);\n    r10 = 0x8080808080808080;\n    rax ^= r9;\n    rcx = rax + r11;\n    rax = ~rax;\n    rax &= rcx;\n    if ((rax & r10) == 0) {\n        goto label_5;\n    }\n    goto label_4;\n    do {\n        rax = *(rdi);\n        rax ^= r9;\n        rcx = rax + r11;\n        rax = ~rax;\n        rax &= rcx;\n        if ((rax & r10) != 0) {\n            goto label_4;\n        }\nlabel_5:\n        rdx -= 8;\n        rdi += 8;\n    } while (rdx > 7);\n    if (rdx == 0) {\n        goto label_0;\n    }\nlabel_4:\n    if (sil == *(rdi)) {\n        goto label_3;\n    }\n    rcx = rdi + 1;\n    rdi += rdx;\n    while (rcx != rdi) {\n        rcx++;\n        if (*((rcx - 1)) == r8b) {\n            goto label_6;\n        }\n        rax = rcx;\n    }\n    goto label_0;\nlabel_3:\n    rax = rdi;\nlabel_6:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040b2b0",
            "funcStartAddr": "0x40b2b0",
            "funcEndAddr": "0x40b315",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x40b2b0 */\n#include <stdint.h>\n \nuint64_t fcn_0040b2b0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = fpending ();\n    r12 = rax;\n    eax = ferror (rbx);\n    eax = fclose (rbx);\n    if (ebp != 0) {\n        goto label_1;\n    }\n    if (eax == 0) {\n        goto label_0;\n    }\n    if (r12 != 0) {\n        goto label_2;\n    }\n    rax = errno_location ();\n    al = (*(rax) != 9) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = -eax;\n    do {\nlabel_0:\n        return rax;\nlabel_1:\n        if (eax != 0) {\n            goto label_2;\n        }\n        errno_location ();\n        *(rax) = 0;\n        eax = 0xffffffff;\n    } while (1);\nlabel_2:\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040b320",
            "funcStartAddr": "0x40b320",
            "funcEndAddr": "0x40b882",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x40b320 */\n#include <stdint.h>\n \nuint64_t fcn_0040b320 (void) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_60h;\n    rax = nl_langinfo (0xe);\n    r15 = imp.__libc_start_main;\n    rbx = rax;\n    eax = 0x40f2d5;\n    if (rax == 0) {\n        rbx = rax;\n    }\n    if (r15 == 0) {\n        goto label_15;\n    }\nlabel_1:\n    ebp = *(r15);\n    if (bpl != 0) {\n        goto label_16;\n    }\n    goto label_17;\n    do {\nlabel_0:\n        strlen (r15);\n        rbp = r15 + rax + 1;\n        strlen (rbp);\n        r15 = rbp + rax + 1;\n        ebp = *(r15);\n        if (bpl == 0) {\n            goto label_17;\n        }\nlabel_16:\n        eax = strcmp (rbx, r15);\n        if (eax == 0) {\n            goto label_18;\n        }\n    } while (bpl != 0x2a);\n    if (*((r15 + 1)) != 0) {\n        goto label_0;\n    }\nlabel_18:\n    strlen (r15);\n    rbx = r15 + rax + 1;\nlabel_17:\n    eax = \"ASCII\";\n    if (*(rbx) == 0) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\nlabel_15:\n    rax = getenv (\"CHARSETALIASDIR\");\n    r13 = rax;\n    if (rax == 0) {\n        goto label_19;\n    }\n    if (*(rax) == 0) {\n        goto label_19;\n    }\n    rax = strlen (rax);\n    r12 = rax;\n    r14 = rax;\n    if (rax != 0) {\n        goto label_20;\n    }\nlabel_13:\n    rax = malloc (0xe);\n    if (rax != 0) {\n        goto label_21;\n    }\n    do {\n        r15d = 0x40f2d5;\nlabel_2:\n        *(0x006126b8) = r15;\n        goto label_1;\nlabel_19:\n        r12d = 0x66;\n        r14d = 0x65;\n        r13d = \"/home/dongkwan/data/scripts/gnu_packages/findutils/findutils-4.6.0_gcc-8.2.0_x86_64_O2_debug/gogo/lib\";\nlabel_14:\n        rax = malloc (0x74);\n    } while (rax == 0);\n    memcpy (rbp, r13, r14);\n    *((rbp + r14)) = 0x2f;\n    do {\n        r12 += rbp;\n        rax = 0x2e74657372616863;\n        *(r12) = rax;\n        eax = 0x73;\n        *((r12 + 0xc)) = ax;\n        eax = 0;\n        *((r12 + 8)) = 0x61696c61;\n        eax = open (rbp, 0, rdx);\n        r12d = eax;\n        if (eax >= 0) {\n            goto label_22;\n        }\nlabel_6:\n        r15d = 0x40f2d5;\nlabel_7:\n        free (rbp);\n        goto label_2;\nlabel_21:\n        eax = memcpy (rbp, r13, r14);\n    } while (1);\nlabel_22:\n    esi = 0x40d331;\n    edi = eax;\n    r15d = 0;\n    rax = fdopen ();\n    *((rsp + 8)) = 0;\n    r13 = rax;\n    if (rax == 0) {\n        goto label_23;\n    }\n    rax = rbx;\n    r12 = rsp + 0x60;\n    r14 = rsp + 0x20;\n    rbx = r13;\n    r13 = rax;\n    do {\nlabel_3:\n        rax = *((rbx + 8));\n        if (rax >= *((rbx + 0x10))) {\n            goto label_24;\n        }\nlabel_4:\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        edi = *(rax);\nlabel_5:\n        eax = rdi - 9;\n    } while (eax <= 1);\n    if (edi == 0x20) {\n        goto label_3;\n    }\n    if (edi == 0x23) {\n        goto label_25;\n    }\n    eax = ungetc (rdi, rbx);\n    eax = 0;\n    rcx = r12;\n    rdx = r14;\n    eax = fscanf (rbx, \"%50s %50s\");\n    if (eax <= 1) {\n        goto label_12;\n    }\n    rcx = r14;\n    do {\n        edx = *(rcx);\n        rcx += 4;\n        eax = rdx - 0x1010101;\n        edx = ~edx;\n        eax &= edx;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    edx = eax;\n    edx >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = edx;\n    }\n    rdx = rcx + 2;\n    if ((eax & 0x8080) == 0) {\n        rcx = rdx;\n    }\n    edx = eax;\n    dl += al;\n    rdx = r12;\n    rcx -= 3;\n    rcx -= r14;\n    do {\n        esi = *(rdx);\n        rdx += 4;\n        eax = rsi - 0x1010101;\n        esi = ~esi;\n        eax &= esi;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    esi = eax;\n    *((rsp + 0x10)) = rcx;\n    esi >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = esi;\n    }\n    rsi = rdx + 2;\n    if ((eax & 0x8080) == 0) {\n        rdx = rsi;\n    }\n    esi = eax;\n    sil += al;\n    rdx -= 3;\n    rdx -= r12;\n    rax = rcx + rdx;\n    *((rsp + 0x18)) = rdx;\n    if (*((rsp + 8)) != 0) {\n        goto label_26;\n    }\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    rax = malloc (rax + 3);\n    rcx = *((rsp + 0x10));\n    rdx = *((rsp + 0x18));\nlabel_9:\n    if (rax == 0) {\n        goto label_27;\n    }\n    rdi = *((rsp + 8));\n    rsi = 0xfffffffffffffffe;\n    rsi -= rcx;\n    rcx++;\n    rdi -= rdx;\n    rsi += rdi;\n    rsi += rax;\n    if (ecx >= 8) {\n        goto label_28;\n    }\n    if ((cl & 4) != 0) {\n        goto label_29;\n    }\n    if (ecx != 0) {\n        r9d = *(r14);\n        *(rsi) = r9b;\n        if ((cl & 2) != 0) {\n            goto label_30;\n        }\n    }\nlabel_10:\n    rdx++;\n    rcx = rax + rdi - 1;\n    if (edx >= 8) {\n        goto label_31;\n    }\n    if ((dl & 4) != 0) {\n        goto label_32;\n    }\n    if (edx != 0) {\n        esi = *(r12);\n        *(rcx) = sil;\n        if ((dl & 2) != 0) {\n            goto label_33;\n        }\n    }\nlabel_11:\n    r15 = rax;\n    rax = *((rbx + 8));\n    if (rax < *((rbx + 0x10))) {\n        goto label_4;\n    }\nlabel_24:\n    rdi = rbx;\n    eax = uflow ();\n    edi = eax;\n    if (eax != 0xffffffff) {\n        goto label_5;\n    }\nlabel_12:\n    rax = r13;\n    r13 = rbx;\n    rbx = rax;\n    fclose (rbx);\n    rax = *((rsp + 8));\n    if (rax == 0) {\n        goto label_6;\n    }\n    *((r15 + rax)) = 0;\n    goto label_7;\n    do {\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        eax = *(rax);\n        edx = 1;\nlabel_8:\n        if (eax == 0xa) {\n            goto label_34;\n        }\n        if (dl == 0) {\n            goto label_34;\n        }\nlabel_25:\n        rax = *((rbx + 8));\n    } while (rax < *((rbx + 0x10)));\n    rdi = rbx;\n    eax = uflow ();\n    dl = (eax != 0xffffffff) ? 1 : 0;\n    goto label_8;\nlabel_26:\n    rax += *((rsp + 8));\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    eax = realloc (r15, rax + 3);\n    rdx = *((rsp + 0x18));\n    rcx = *((rsp + 0x10));\n    goto label_9;\nlabel_28:\n    r9 = *(r14);\n    *(rsi) = r9;\n    r9d = ecx;\n    r10 = *((r14 + r9 - 8));\n    *((rsi + r9 - 8)) = r10;\n    r9 = rsi + 8;\n    r10 = r14;\n    r9 &= 0xfffffffffffffff8;\n    rsi -= r9;\n    ecx += esi;\n    r10 -= rsi;\n    ecx &= 0xfffffff8;\n    if (ecx < 8) {\n        goto label_10;\n    }\n    ecx &= 0xfffffff8;\n    esi = 0;\n    do {\n        r8d = esi;\n        esi += 8;\n        r11 = *((r10 + r8));\n        *((r9 + r8)) = r11;\n    } while (esi < ecx);\n    goto label_10;\nlabel_31:\n    rsi = *(r12);\n    r9 = r12;\n    *(rcx) = rsi;\n    esi = edx;\n    rdi = *((r12 + rsi - 8));\n    *((rcx + rsi - 8)) = rdi;\n    rdi = rcx + 8;\n    rdi &= 0xfffffffffffffff8;\n    rcx -= rdi;\n    edx += ecx;\n    r9 -= rcx;\n    edx &= 0xfffffff8;\n    if (edx < 8) {\n        goto label_11;\n    }\n    edx &= 0xfffffff8;\n    ecx = 0;\n    do {\n        esi = ecx;\n        ecx += 8;\n        r8 = *((r9 + rsi));\n        *((rdi + rsi)) = r8;\n    } while (ecx < edx);\n    goto label_11;\nlabel_34:\n    if (eax == 0xffffffff) {\n        goto label_12;\n    }\n    goto label_3;\nlabel_20:\n    if (*((r13 + rax - 1)) == 0x2f) {\n        rdi = rax + 0xe;\n        goto label_13;\nlabel_23:\n        close (r12d);\n        goto label_6;\nlabel_29:\n        r9d = *(r14);\n        *(rsi) = r9d;\n        r9d = *((r14 + rcx - 4));\n        *((rsi + rcx - 4)) = r9d;\n        goto label_10;\nlabel_32:\n        esi = *(r12);\n        *(rcx) = esi;\n        esi = *((r12 + rdx - 4));\n        *((rcx + rdx - 4)) = esi;\n        goto label_11;\nlabel_27:\n        rax = r13;\n        r13 = rbx;\n        r15d = 0x40f2d5;\n        rbx = rax;\n        free (r15);\n        fclose (r13);\n        goto label_7;\nlabel_30:\n        r9d = *((r14 + rcx - 2));\n        *((rsi + rcx - 2)) = r9w;\n        goto label_10;\nlabel_33:\n        esi = edx;\n        edx = *((r12 + rsi - 2));\n        *((rcx + rsi - 2)) = dx;\n        goto label_11;\n    }\n    rdi = rax + 0xf;\n    r12++;\n    goto label_14;\n}\n"
        },
        {
            "funcName": "fcn_0040b890",
            "funcStartAddr": "0x40b890",
            "funcEndAddr": "0x40b8fc",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x40b890 */\n#include <stdint.h>\n \nuint64_t fcn_0040b890 (int64_t arg1) {\n    rdi = arg1;\n    rdi += 0x10;\n    if (rdi >= 0) {\n        rax = malloc (rdi);\n        ecx = 0;\n        rsi = rax;\n        if (rax != 0) {\n            rcx = rax + 0x10;\n            *((rax + 0xc)) = 0x1415fb4a;\n            rdx = 0xff00ff00ff00ff01;\n            rax = rcx;\n            rdx:rax = rax * rdx;\n            rdx >>= 8;\n            rax = rdx;\n            rax <<= 8;\n            rdx += rax;\n            rax = rcx;\n            rax -= rdx;\n            rdx = rax;\n            rax = *((rax*8 + 0x6126c0));\n            *((rdx*8 + 0x6126c0)) = rcx;\n            *(rsi) = rax;\n        }\n        rax = rcx;\n        return rax;\n    }\n    ecx = 0;\n    rax = rcx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040b900",
            "funcStartAddr": "0x40b900",
            "funcEndAddr": "0x40b986",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x40b900 */\n#include <stdint.h>\n \nint64_t fcn_0040b900 (uint32_t arg1) {\n    rdi = arg1;\n    if (rdi == 0) {\n        goto label_0;\n    }\n    while (rcx == 0) {\nlabel_0:\n        return;\n        rdx = 0xff00ff00ff00ff01;\n        rax = rdi;\n        rdx:rax = rax * rdx;\n        rdx >>= 8;\n        rax = rdx;\n        rax <<= 8;\n        rdx += rax;\n        rax = rdi;\n        rax -= rdx;\n        rcx = *((rax*8 + 0x6126c0));\n    }\n    if (rcx != rdi) {\n        goto label_1;\n    }\n    goto label_2;\n    do {\n        if (rdi == rax) {\n            goto label_3;\n        }\n        rcx = rax;\nlabel_1:\n        rax = *((rcx - 0x10));\n    } while (rax != 0);\n    goto label_0;\nlabel_3:\n    rcx -= 0x10;\n    do {\n        rax = *((rdi - 0x10));\n        rdi -= 0x10;\n        *(rcx) = rax;\n        void (*0x401b10)() ();\nlabel_2:\n        rcx = rax*8 + 0x6126c0;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040ba40",
            "funcStartAddr": "0x40ba40",
            "funcEndAddr": "0x40bc0c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x40ba40 */\n#include <stdint.h>\n \nuint64_t fcn_0040ba40 (int64_t arg1) {\n    mbstate_t * ps;\n    int64_t var_ch;\n    char * s;\n    size_t var_18h;\n    int64_t var_20h;\n    int64_t var_24h;\n    rdi = arg1;\n    rbx = rdi;\n    rax = ctype_get_mb_cur_max ();\n    if (rax > 1) {\n        goto label_4;\n    }\n    rax = strlen (rbx);\n    rbx = rax;\n    do {\n        rax = rbx;\n        return rax;\nlabel_4:\n        *((rsp + 0x10)) = rbx;\n        ebx = 0;\n        *(rsp) = 0;\n        *((rsp + 4)) = 0;\n        *((rsp + 0xc)) = 0;\n        goto label_5;\nlabel_0:\n        rdx = *((rsp + 0x10));\n        ecx = *(rdx);\n        eax = ecx;\n        al >>= 5;\n        eax &= 7;\n        eax = *((rax*4 + 0x40f520));\n        eax >>= cl;\n        if ((al & 1) == 0) {\n            goto label_6;\n        }\n        *((rsp + 0x18)) = 1;\n        eax = *(rdx);\n        *((rsp + 0x20)) = 1;\n        *((rsp + 0x24)) = eax;\nlabel_1:\n        eax = *((rsp + 0x24));\n    } while (eax == 0);\nlabel_3:\n    rax = *((rsp + 0x18));\n    rbx++;\n    *((rsp + 0xc)) = 0;\nlabel_5:\n    if (*(rsp) == 0) {\n        goto label_0;\n    }\nlabel_2:\n    rax = ctype_get_mb_cur_max ();\n    rbp = *((rsp + 0x10));\n    rax = fcn_00409040 (rbp, rax);\n    rcx = rsp + 4;\n    rdx = rax;\n    rax = fcn_0040b170 (rsp + 0x24, rbp);\n    *((rsp + 0x18)) = rax;\n    if (rax == -1) {\n        goto label_7;\n    }\n    if (rax == 0xfffffffffffffffe) {\n        goto label_8;\n    }\n    if (rax == 0) {\n        *((rsp + 0x18)) = 1;\n        rax = *((rsp + 0x10));\n        if (*(rax) != 0) {\n            goto label_9;\n        }\n        edx = *((rsp + 0x24));\n        if (edx != 0) {\n            goto label_10;\n        }\n    }\n    *((rsp + 0x20)) = 1;\n    eax = mbsinit (rsp + 4);\n    if (eax == 0) {\n        goto label_1;\n    }\n    *(rsp) = 0;\n    goto label_1;\nlabel_6:\n    eax = mbsinit (rsp + 4);\n    if (eax != 0) {\n        *(rsp) = 1;\n        goto label_2;\nlabel_7:\n        *((rsp + 0x18)) = 1;\n        *((rsp + 0x20)) = 0;\n        goto label_3;\nlabel_8:\n        rax = strlen (*((rsp + 0x10)));\n        *((rsp + 0x20)) = 0;\n        *((rsp + 0x18)) = rax;\n        goto label_3;\n    }\n    assert_fail (\"mbsinit (&iter->state)\", \"mbuiter.h\", 0x96, \"mbuiter_multi_next\");\nlabel_9:\n    assert_fail (\"*iter->cur.ptr == '\\\\0', \"mbuiter.h\", 0xb2, \"mbuiter_multi_next\");\nlabel_10:\n    return assert_fail (\"iter->cur.wc == 0\", \"mbuiter.h\", 0xb3, \"mbuiter_multi_next\");\n}\n"
        },
        {
            "funcName": "fcn_0040bc80",
            "funcStartAddr": "0x40bc80",
            "funcEndAddr": "0x40bc98",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x40bc80 */\n#include <stdint.h>\n \nint64_t fcn_0040bc80 (void) {\n    rax = 0x6122a8;\n    edx = 0;\n    if (rax != 0) {\n        rdx = *(rax);\n    }\n    esi = 0;\n    return cxa_atexit ();\n}\n"
        },
        {
            "funcName": "fcn_0040bc98",
            "funcStartAddr": "0x40bc98",
            "funcEndAddr": "0x40bcb8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/findutils_strip_8.2/findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf @ 0x40bc98 */\n#include <stdint.h>\n \nvoid fcn_0040bc98 (int64_t arg3) {\n    rdx = arg3;\n    ebx = segment.GNU_RELRO;\n    do {\n        rax = *(rbx);\n        if (rax == -1) {\n            goto label_0;\n        }\n        void (*rax)() ();\n        rbx -= 8;\n    } while (1);\nlabel_0:\n}\n"
        }
    ],
    "funcCount": 75
}