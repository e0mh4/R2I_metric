{
    "binaryInfo": {
        "isStripped": true,
        "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf"
    },
    "buildInfo": {
        "decompilerName": "radare2",
        "compilerName": "gcc",
        "compilerVersion": "9.4.0",
        "optLevel": "O"
    },
    "funcInfo": [
        {
            "funcName": "main",
            "funcStartAddr": "0x401dd0",
            "funcEndAddr": "0x402540",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x401dd0 */\n#include <stdint.h>\n \nint32_t main (int32_t argc, char ** argv) {\n    file** var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_2ch;\n    void * ptr;\n    int64_t var_40h;\n    int64_t var_48h;\n    int64_t var_50h;\n    int64_t var_58h;\n    int64_t var_a8h;\n    int64_t var_b0h;\n    rdi = argc;\n    rsi = argv;\n    r15d = 0;\n    r14d = 0;\n    r13d = 0;\n    r12d = edi;\n    ebx = 0;\n    fcn_00409f40 (*(rsi));\n    setlocale (6, 0x4179a4);\n    bindtextdomain (0x412b56, \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\");\n    textdomain (0x412b56, rsi);\n    edi = 0x403120;\n    fcn_00412a60 ();\n    *((rsp + 8)) = 0;\n    *((rsp + 0x10)) = 0;\n    do {\nlabel_0:\n        r8d = 0;\n        ecx = 0x4141c0;\n        edx = \"d:f:I::r:Rs:u\";\n        rsi = rbp;\n        edi = r12d;\n        eax = fcn_0040d290 ();\n        if (eax == 0xffffffff) {\n            goto label_11;\n        }\n        if (eax == 0x66) {\n            goto label_12;\n        }\n        if (eax <= 0x66) {\n            goto label_13;\n        }\n        if (eax == 0x75) {\n            goto label_14;\n        }\n        if (eax > 0x75) {\n            goto label_15;\n        }\n        if (eax != 0x72) {\n            goto label_16;\n        }\n        rax = imp.__libc_start_main;\n        *((rsp + 8)) = rax;\n    } while (1);\nlabel_13:\n    if (eax == 0x49) {\n        goto label_17;\n    }\n    if (eax <= 0x49) {\n        goto label_18;\n    }\n    if (eax != 0x52) {\n        goto label_19;\n    }\n    eax = \"%a, %d %b %Y %H:%M:%S %z\";\n    do {\nlabel_1:\n        if (rbx != 0) {\n            goto label_20;\n        }\n        rbx = rax;\n        goto label_0;\nlabel_16:\n        if (eax != 0x73) {\n            goto label_10;\n        }\n        rax = imp.__libc_start_main;\n        r14d = 1;\n        *((rsp + 0x10)) = rax;\n        goto label_0;\nlabel_15:\n        if (eax != 0x80) {\n            goto label_21;\n        }\n        fcn_00403040 (\"--rfc-3339\", *(0x0061b4f0), 0x414430, 0x4143f8, 4, *(0x0061b278));\n        eax = *((rax*4 + 0x4143f8));\n        rax <<= 5;\n        rax += 0x414160;\n    } while (1);\nlabel_19:\n    if (eax != 0x64) {\n        goto label_10;\n    }\n    r15 = imp.__libc_start_main;\n    goto label_0;\nlabel_18:\n    if (eax == 0xffffff7d) {\n        r9d = 0;\n        r8d = \"David MacKenzie\";\n        eax = 0;\n        rcx = *(str.8.29);\n        fcn_0040c050 (*(obj.stdout), 0x412be8, \"GNU coreutils\");\n        eax = exit (0);\nlabel_21:\n        if (eax != 0x81) {\n            goto label_10;\n        }\n        *(0x0061b338) |= 1;\n        goto label_0;\n    }\n    if (eax != 0xffffff7e) {\n        goto label_10;\n    }\n    fcn_00402750 (0);\nlabel_12:\n    r13 = imp.__libc_start_main;\n    goto label_0;\nlabel_14:\n    edi = \"TZ=UTC0\";\n    eax = putenv ();\n    if (eax != 0) {\n        goto label_22;\n    }\n    eax = tzset ();\n    goto label_0;\nlabel_17:\n    rsi = imp.__libc_start_main;\n    eax = 0;\n    if (rsi != 0) {\n        fcn_00403040 (\"--iso-8601\", rsi, 0x414420, 0x4143f0, 4, *(0x0061b278));\n        eax = *((rax*4 + 0x4143f0));\n    }\n    rax <<= 5;\n    rax += 0x4140c0;\n    goto label_1;\nlabel_11:\n    edx = 0;\n    dl = (r15 != 0) ? 1 : 0;\n    eax = 0;\n    al = (r13 != 0) ? 1 : 0;\n    edx += eax;\n    eax = 0;\n    al = (*((rsp + 8)) != 0) ? 1 : 0;\n    edx += eax;\n    if (edx > 1) {\n        goto label_23;\n    }\n    ecx = edx;\n    ecx &= 1;\n    if ((cl & r14b) != 0) {\n        goto label_24;\n    }\n    rax = *(0x0061b2fc);\n    if (eax < r12d) {\n        esi = rax + 1;\n        if (esi < r12d) {\n            goto label_25;\n        }\n        rdi = *((rbp + rax*8));\n        if (*(rdi) == 0x2b) {\n            goto label_26;\n        }\n        if (cl != 0) {\n            goto label_27;\n        }\n        if (r14b != 0) {\n            goto label_27;\n        }\n    }\nlabel_7:\n    if (rbx == 0) {\n        goto label_28;\n    }\nlabel_6:\n    *((rsp + 0x2c)) = edx;\n    rax = getenv (0x412bbb);\n    rdi = rax;\n    *((rsp + 0x20)) = rax;\n    rax = fcn_0040db40 (rdi);\n    edx = *((rsp + 0x2c));\n    *((rsp + 0x18)) = rax;\n    if (r13 == 0) {\n        goto label_29;\n    }\n    eax = strcmp (r13, 0x414a3a);\n    if (eax == 0) {\n        goto label_30;\n    }\n    rax = fopen (r13, 0x414a2b);\n    r12 = rax;\n    if (rax == 0) {\n        goto label_31;\n    }\nlabel_2:\n    rax = rsp + 0x40;\n    *((rsp + 0x38)) = 0;\n    *((rsp + 0x40)) = 0;\n    *((rsp + 8)) = rax;\n    do {\nlabel_4:\n        rsi = *((rsp + 8));\n        rcx = r12;\n        edx = 0xa;\n        rdi = rsp + 0x38;\n        rax = getdelim ();\n        r14 = rax;\n        if (rax < 0) {\n            goto label_32;\n        }\n        al = fcn_00407bc0 (rsp + 0x50, *((rsp + 0x38)), 0, *(0x0061b338), *((rsp + 0x18)), *((rsp + 0x20)));\n        if (al != 0) {\n            goto label_33;\n        }\n        rdi = *((rsp + 0x38));\n        rax = rdi + r14 - 1;\n        if (*(rax) == 0xa) {\n            *(rax) = 0;\n        }\n        rax = fcn_0040bb60 (*((rsp + 0x38)));\n        edx = 5;\n        rax = dcgettext (0, \"invalid date %s\");\n        rcx = rbp;\n        eax = 0;\n        ebp = 0;\n        error (0, 0, rax);\n    } while (1);\nlabel_29:\n    eax = r14d;\n    edx ^= 1;\n    eax ^= 1;\n    al &= dl;\n    r13d = eax;\n    if (al != 0) {\n        goto label_34;\n    }\n    rsi = *((rsp + 8));\n    if (rsi == 0) {\n        goto label_35;\n    }\n    rdx = rsp + 0x50;\n    edi = 1;\n    eax = xstat ();\n    if (eax != 0) {\n        goto label_36;\n    }\n    rax = *((rsp + 0xa8));\n    *((rsp + 0x40)) = rax;\n    rax = *((rsp + 0xb0));\n    *((rsp + 0x48)) = rax;\nlabel_8:\n    if (r14b != 0) {\n        goto label_37;\n    }\n    do {\n        r13d = 1;\nlabel_3:\n        eax = fcn_00402620 (rbx, *((rsp + 0x40)), *((rsp + 0x48)), *((rsp + 0x18)));\n        ebp &= eax;\nlabel_5:\n        ebp ^= 1;\n        eax = (int32_t) bpl;\n        return rax;\nlabel_30:\n        edx = 5;\n        rax = dcgettext (0, \"standard input\");\n        r12 = stdin;\n        r13 = rax;\n        goto label_2;\nlabel_34:\n        rax = *(0x0061b2fc);\n        if (eax >= r12d) {\n            goto label_38;\n        }\n        r15 = *((rbp + rax*8));\n        rax = rsp + 0x40;\n        rdi = rax;\n        *((rsp + 8)) = rax;\n        al = fcn_00409c90 (rdi, r15, 7);\n        *((rsp + 0x48)) = 0;\n        if (al == 0) {\n            goto label_39;\n        }\nlabel_9:\n        eax = fcn_0040bb80 (*((rsp + 8)));\n    } while (eax == 0);\n    edx = 5;\n    r13d = 0;\n    rax = dcgettext (0, \"cannot set date\");\n    rax = errno_location ();\n    eax = 0;\n    error (0, *(rax), rbp);\n    goto label_3;\nlabel_33:\n    eax = fcn_00402620 (rbx, *((rsp + 0x50)), *((rsp + 0x58)), *((rsp + 0x18)));\n    ebp &= eax;\n    goto label_4;\nlabel_32:\n    eax = fcn_0040c420 (r12);\n    eax++;\n    if (eax == 0) {\n        goto label_40;\n    }\n    free (*((rsp + 0x38)));\n    goto label_5;\nlabel_28:\n    *((rsp + 0x18)) = edx;\n    rax = nl_langinfo (0x2006c);\n    edx = *((rsp + 0x18));\n    rbx = rax;\n    if (*(rax) != 0) {\n        goto label_6;\n    }\n    ebx = \"%a %b %e %H:%M:%S %Z %Y\";\n    goto label_6;\nlabel_26:\n    if (rbx != 0) {\n        goto label_41;\n    }\n    *(0x0061b2fc) = esi;\n    rbx = rdi + 1;\n    goto label_7;\nlabel_38:\n    fcn_00404bc0 (rsp + 0x40);\n    goto label_3;\nlabel_35:\n    rax = *((rsp + 0x10));\n    r9 = *((rsp + 0x20));\n    r8 = *((rsp + 0x18));\n    ecx = imp.__libc_start_main;\n    if (rax != 0) {\n        r15 = rax;\n    }\n    rax = rsp + 0x40;\n    al = fcn_00407bc0 (rax, r15, 0, rcx, r8, r9);\n    if (al != 0) {\n        goto label_8;\n    }\nlabel_39:\n    rax = fcn_0040bb60 (r15);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"invalid date %s\");\n    rcx = rbx;\n    eax = 0;\n    error (1, 0, rax);\nlabel_37:\n    rax = rsp + 0x40;\n    *((rsp + 8)) = rax;\n    goto label_9;\nlabel_27:\n    rax = fcn_0040bb60 (rdi);\n    edx = 5;\n    rbx = rax;\n    do {\n        rax = dcgettext (0, \"the argument %s lacks a leading '+';\\nwhen using an option to specify date(s), any non-option\\nargument must be a format string beginning with '+');\n        rcx = rbx;\n        eax = 0;\n        error (0, 0, rax);\nlabel_10:\n        fcn_00402750 (1);\nlabel_20:\n        edx = 5;\n        rax = dcgettext (0, \"multiple output formats specified\");\n        eax = 0;\n        error (1, 0, rax);\nlabel_40:\n        rdx = r13;\n        rax = fcn_0040b9e0 (0, 3);\n        rbx = rax;\n        rax = errno_location ();\n        rcx = rbx;\n        eax = 0;\n        error (1, *(rax), 0x4144ac);\nlabel_36:\n        rdx = *((rsp + 8));\n        rax = fcn_0040b9e0 (0, 3);\n        rbx = rax;\n        rax = errno_location ();\n        rcx = rbx;\n        eax = 0;\n        error (1, *(rax), 0x4144ac);\nlabel_41:\n        edx = 5;\n        rax = dcgettext (0, \"multiple output formats specified\");\n        eax = 0;\n        error (1, 0, rax);\nlabel_31:\n        rdx = r13;\n        rax = fcn_0040b9e0 (0, 3);\n        rbx = rax;\n        rax = errno_location ();\n        rcx = rbx;\n        eax = 0;\n        error (1, *(rax), 0x4144ac);\nlabel_25:\n        rax = fcn_0040bb60 (*((rbp + rax*8 + 8)));\n        edx = 5;\n        esi = \"extra operand %s\";\n        rbx = rax;\n    } while (1);\nlabel_24:\n    edx = 5;\n    do {\n        rax = dcgettext (0, \"the options to print and set the time may not be used together\");\n        eax = 0;\n        error (0, 0, rax);\n        goto label_10;\nlabel_23:\n        edx = 5;\n        esi = \"the options to specify dates for printing are mutually exclusive\";\n    } while (1);\nlabel_22:\n    return fcn_0040c3e0 ();\n}\n"
        },
        {
            "funcName": "fcn_0040256b",
            "funcStartAddr": "0x40256b",
            "funcEndAddr": "0x40258a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40256b */\n#include <stdint.h>\n \nint32_t fcn_0040256b (void) {\n    eax = __progname;\n    if (rax != obj.__progname) {\n        eax = 0;\n        if (rax == 0) {\n            goto label_0;\n        }\n        edi = __progname;\n        void (*rax)() ();\n    }\nlabel_0:\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_004025c1",
            "funcStartAddr": "0x4025c1",
            "funcEndAddr": "0x402618",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x4025c1 */\n#include <stdint.h>\n \nint64_t fcn_004025c1 (int32_t argc, func fini, func init, func main, func rtld_fini, void * stack_end, char ** ubp_av) {\n    rsi = argc;\n    r8 = fini;\n    rcx = init;\n    rdi = main;\n    r9 = rtld_fini;\n    xmm0 = stack_end;\n    rdx = ubp_av;\n    if (*(0x0061b328) != 0) {\n        goto label_0;\n    }\n    r12d = section..dtors;\n    ebx = 0x61ae48;\n    rbx -= section..dtors;\n    rbx >>= 3;\n    rbx--;\n    do {\n        rax = imp.__libc_start_main;\n        if (rax >= rbx) {\n            goto label_1;\n        }\n        rax++;\n        *(0x0061b330) = rax;\n        uint64_t (*r12 + rax*8)() ();\n    } while (1);\nlabel_1:\n    fcn_0040256b ();\n    *(0x0061b328) = 1;\n    return rax;\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00402618",
            "funcStartAddr": "0x402618",
            "funcEndAddr": "0x4026ab",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x402618 */\n#include <stdint.h>\n \nint64_t fcn_00402618 (void) {\n    do {\n        esi = __progname;\n        ecx = 2;\n        rsi -= obj.__progname;\n        rsi >>= 3;\n        rax = rsi;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rsi = rax;\n        if (rax != 0) {\n            eax = 0;\n            if (rax == 0) {\n                goto label_0;\n            }\n            edi = __progname;\n            void (*rax)() ();\n        }\nlabel_0:\n        return rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00402620",
            "funcStartAddr": "0x402620",
            "funcEndAddr": "0x402744",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x402620 */\n#include <stdint.h>\n \nuint64_t fcn_00402620 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    rdi = rcx;\n    rbx = rcx;\n    *(rsp) = rsi;\n    *((rsp + 8)) = rdx;\n    rax = fcn_0040de20 (rdi, rsp, rsp + 0x30);\n    if (rax == 0) {\n        goto label_1;\n    }\n    if (rbp == str._a___d__b__Y__H:_M:_S__z) {\n        goto label_2;\n    }\n    r8d = *((rsp + 8));\n    rcx = rbx;\n    rdx = rsp + 0x30;\n    fcn_00404ba0 (*(obj.stdout), rbp);\n    do {\n        rdi = stdout;\n        rax = *((rdi + 0x28));\n        if (rax >= *((rdi + 0x30))) {\n            goto label_3;\n        }\n        *((rdi + 0x28)) = rdx;\n        *(rax) = 0xa;\n        eax = 1;\nlabel_0:\n        return rax;\nlabel_1:\n        rax = fcn_00404c00 (*(rsp), rsp + 0x10, rax + 1);\n        rax = fcn_0040bb60 (rax);\n        edx = 5;\n        rbx = rax;\n        rax = dcgettext (0, \"time %s is out of range\");\n        rcx = rbx;\n        eax = 0;\n        eax = error (0, 0, rax);\n        eax = 0;\n        return rax;\nlabel_2:\n        setlocale (2, 0x414e36);\n        r8d = *((rsp + 8));\n        rcx = rbx;\n        rdx = rsp + 0x30;\n        fcn_00404ba0 (*(obj.stdout), \"%a, %d %b %Y %H:%M:%S %z\");\n        setlocale (2, 0x4179a4);\n    } while (1);\nlabel_3:\n    esi = 0xa;\n    overflow ();\n    eax = 1;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00402750",
            "funcStartAddr": "0x402750",
            "funcEndAddr": "0x402d65",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x402750 */\n#include <stdint.h>\n \nuint64_t fcn_00402750 (int64_t arg1) {\n    char * var_8h;\n    int64_t var_10h;\n    char * var_18h;\n    char * var_20h;\n    char * var_28h;\n    char * var_30h;\n    char * var_38h;\n    char * var_40h;\n    char * var_48h;\n    char * var_50h;\n    char * var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    rdi = arg1;\n    edx = 5;\n    ebx = edi;\n    rbp = imp.__libc_start_main;\n    if (edi != 0) {\n        rax = dcgettext (0, \"Try '%s --help' for more information.\\n\");\n        rdi = stderr;\n        rcx = rbp;\n        esi = 1;\n        rdx = rax;\n        eax = 0;\n        fprintf_chk ();\nlabel_0:\n        exit (ebx);\n    }\n    rax = dcgettext (0, \"Usage: %s [OPTION]... [+FORMAT]\\n  or:  %s [-u|--utc|--universal] [MMDDhhmm[[CC]YY][.ss]]\\n\");\n    rcx = rbp;\n    rdx = rbp;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"Display the current time in the given FORMAT, or set the system date.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nMandatory arguments to long options are mandatory for short options too.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -d, --date=STRING          display time described by STRING, not 'now'\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --debug                annotate the parsed date,\\n                              and warn about questionable usage to stderr\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -f, --file=DATEFILE        like --date; once for each line of DATEFILE\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -I[FMT], --iso-8601[=FMT]  output date/time in ISO 8601 format.\\n                               FMT='date' for date only (the default),\\n                               'hours', 'minutes', 'seconds', or 'ns'\\n                               for date and time to the indicated precision.\\n                               Example: 2006-08-14T02:34:56-06:00\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -R, --rfc-email            output date and time in RFC 5322 format.\\n                               Example: Mon, 14 Aug 2006 02:34:56 -0600\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --rfc-3339=FMT         output date/time in RFC 3339 format.\\n                               FMT='date', 'seconds', or 'ns'\\n                               for date and time to the indicated precision.\\n                               Example: 2006-08-14 02:34:56-06:00\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -r, --reference=FILE       display the last modification time of FILE\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -s, --set=STRING           set time described by STRING\\n  -u, --utc, --universal     print or set Coordinated Universal Time (UTC)\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --help     display this help and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --version  output version information and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nFORMAT controls the output.  Interpreted sequences are:\\n\\n  %%   a literal %\\n  %a   locale's abbreviated weekday name (e.g., Sun)\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  %A   locale's full weekday name (e.g., Sunday)\\n  %b   locale's abbreviated month name (e.g., Jan)\\n  %B   locale's full month name (e.g., January)\\n  %c   locale's date and time (e.g., Thu Mar  3 23:05:25 2005)\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  %C   century; like %Y, except omit last two digits (e.g., 20)\\n  %d   day of month (e.g., 01)\\n  %D   date; same as %m/%d/%y\\n  %e   day of month, space padded; same as %_d\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  %F   full date; same as %Y-%m-%d\\n  %g   last two digits of year of ISO week number (see %G)\\n  %G   year of ISO week number (see %V); normally useful only with %V\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  %h   same as %b\\n  %H   hour (00..23)\\n  %I   hour (01..12)\\n  %j   day of year (001..366)\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  %k   hour, space padded ( 0..23); same as %_H\\n  %l   hour, space padded ( 1..12); same as %_I\\n  %m   month (01..12)\\n  %M   minute (00..59)\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  %n   a newline\\n  %N   nanoseconds (000000000..999999999)\\n  %p   locale's equivalent of either AM or PM; blank if not known\\n  %P   like %p, but lower case\\n  %q   quarter of year (1..4)\\n  %r   locale's 12-hour clock time (e.g., 11:11:04 PM)\\n  %R   24-hour hour and minute; same as %H:%M\\n  %s   seconds since 1970-01-01 00:00:00 UTC\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  %S   second (00..60)\\n  %t   a tab\\n  %T   time; same as %H:%M:%S\\n  %u   day of week (1..7); 1 is Monday\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    edx = 5;\n    rbp = stdout;\n    rax = dcgettext (0, \"  %U   week number of year, with Sunday as first day of week (00..53)\\n  %V   ISO week number, with Monday as first day of week (01..53)\\n  %w   day of week (0..6); 0 is Sunday\\n  %W   week number of year, with Monday as first day of week (00..53)\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  %x   locale's date representation (e.g., 12/31/99)\\n  %X   locale's time representation (e.g., 23:13:48)\\n  %y   last two digits of year (00..99)\\n  %Y   year\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  %z   +hhmm numeric time zone (e.g., -0400)\\n  %:z  +hh:mm numeric time zone (e.g., -04:00)\\n  %::z  +hh:mm:ss numeric time zone (e.g., -04:00:00)\\n  %:::z  numeric time zone with : to necessary precision (e.g., -04, +05:30)\\n  %Z   alphabetic time zone abbreviation (e.g., EDT)\\n\\nBy default, date pads numeric fields with zeroes.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"The following optional flags may follow '%':\\n\\n  -  (hyphen) do not pad the field\\n  _  (underscore) pad with spaces\\n  0  (zero) pad with zeros\\n  ^  use upper case if possible\\n  #  use opposite case if possible\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nAfter any flags comes an optional field width, as a decimal number;\\nthen an optional modifier, which is either\\nE to use the locale's alternate representations if available, or\\nO to use the locale's alternate numeric symbols if available.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nExamples:\\nConvert seconds since the epoch (1970-01-01 UTC) to a date\\n  $ date --date='@2147483647'\\n\\nShow the time on the west coast of the US (use tzselect(1) to find TZ)\\n  $ TZ='America/Los_Angeles' date\\n\\nShow the local time for 9AM next Friday on the west coast of the US\\n  $ date --date='TZ=\\\"America/Los_Angeles\\\" 09:00 next Fri'\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    *(rsp) = 0x412adc;\n    rax = rsp;\n    *((rsp + 8)) = \"test invocation\";\n    *((rsp + 0x10)) = 0x412b56;\n    *((rsp + 0x18)) = \"Multi-call invocation\";\n    *((rsp + 0x20)) = \"sha224sum\";\n    *((rsp + 0x28)) = \"sha2 utilities\";\n    *((rsp + 0x30)) = \"sha256sum\";\n    *((rsp + 0x38)) = \"sha2 utilities\";\n    *((rsp + 0x40)) = \"sha384sum\";\n    *((rsp + 0x48)) = \"sha2 utilities\";\n    *((rsp + 0x50)) = \"sha512sum\";\n    *((rsp + 0x58)) = \"sha2 utilities\";\n    *((rsp + 0x60)) = 0;\n    *((rsp + 0x68)) = 0;\n    do {\n        rax += 0x10;\n        rdi = *(rax);\n        if (rdi == 0) {\n            goto label_2;\n        }\n        esi = 0x412be8;\n        ecx = 5;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        dl = (rdi > 0) ? 1 : 0;\n    } while (dl != 0);\nlabel_2:\n    rbp = *((rax + 8));\n    edx = 5;\n    esi = \"\\n%s online help: <%s>\\n\";\n    edi = 0;\n    if (rbp == 0) {\n        goto label_3;\n    }\n    rax = dcgettext (rdi, rsi);\n    edi = 1;\n    ecx = \"https://www.gnu.org/software/coreutils/\";\n    edx = \"GNU coreutils\";\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rax = setlocale (5, 0);\n    if (rax != 0) {\n        eax = strncmp (rax, 0x412b60, 3);\n        if (eax != 0) {\n            goto label_4;\n        }\n    }\nlabel_1:\n    edx = 5;\n    r12d = 0x412af8;\n    rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n    ecx = 0x412be8;\n    edx = \"https://www.gnu.org/software/coreutils/\";\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    ecx = 0x4179a4;\n    r12 = rcx;\n    while (1) {\n        edx = 5;\n        rax = dcgettext (0, \"or available locally via: info '(coreutils) %s%s'\\n\");\n        rcx = r12;\n        rdx = rbp;\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        goto label_0;\nlabel_3:\n        rax = dcgettext (rdi, rsi);\n        edi = 1;\n        ecx = \"https://www.gnu.org/software/coreutils/\";\n        edx = \"GNU coreutils\";\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        rax = setlocale (5, 0);\n        if (rax != 0) {\n            eax = strncmp (rax, 0x412b60, 3);\n            if (eax != 0) {\n                goto label_5;\n            }\n        }\n        edx = 5;\n        rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n        ecx = 0x412be8;\n        edx = \"https://www.gnu.org/software/coreutils/\";\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        r12d = 0x412af8;\n        printf_chk ();\n    }\nlabel_5:\nlabel_4:\n    edx = 5;\n    rax = dcgettext (0, \"Report %s translation bugs to <https://translationproject.org/team/>\\n\");\n    edx = 0x412be8;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00402d80",
            "funcStartAddr": "0x402d80",
            "funcEndAddr": "0x402e96",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x402d80 */\n#include <stdint.h>\n \nuint64_t fcn_00402d80 (char * arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    char * s2;\n    uint32_t var_17h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r15 = rsi;\n    r13 = rcx;\n    *((rsp + 8)) = rdi;\n    *((rsp + 0x18)) = rdx;\n    rax = strlen (rdi);\n    r14 = *(r15);\n    *(rsp) = 0xffffffffffffffff;\n    if (r14 == 0) {\n        goto label_3;\n    }\n    r12 = rax;\n    *((rsp + 0x17)) = 0;\n    ebx = 0;\n    goto label_1;\nlabel_0:\n    rax = *((rsp + 0x18));\n    if (rax == 0) {\n        goto label_4;\n    }\n    rdi *= r13;\n    rdi += rax;\n    eax = memcmp (*(rsp), rbp, r13);\n    ecx = 1;\n    eax = *((rsp + 0x17));\n    if (eax != 0) {\n        eax = ecx;\n    }\n    *((rsp + 0x17)) = al;\n    do {\nlabel_2:\n        rbx++;\n        rbp += r13;\n        r14 = *((r15 + rbx*8));\n        if (r14 == 0) {\n            goto label_5;\n        }\nlabel_1:\n        eax = strncmp (r14, *((rsp + 8)), r12);\n    } while (eax != 0);\n    rax = strlen (r14);\n    if (rax == r12) {\n        goto label_6;\n    }\n    if (*(rsp) != -1) {\n        goto label_0;\n    }\n    *(rsp) = rbx;\n    rbx++;\n    rbp += r13;\n    r14 = *((r15 + rbx*8));\n    if (r14 != 0) {\n        goto label_1;\n    }\nlabel_5:\n    rax = 0xfffffffffffffffe;\n    if (*((rsp + 0x17)) == 0) {\n        rax = *(rsp);\n    }\n    *(rsp) = rax;\n    do {\nlabel_3:\n        rax = *(rsp);\n        return rax;\nlabel_4:\n        *((rsp + 0x17)) = 1;\n        goto label_2;\nlabel_6:\n        *(rsp) = rbx;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00402ea0",
            "funcStartAddr": "0x402ea0",
            "funcEndAddr": "0x402f11",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x402ea0 */\n#include <stdint.h>\n \nuint64_t fcn_00402ea0 (int64_t arg1, int64_t arg2, uint32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    edx = 5;\n    r12 = rsi;\n    if (rdx == -1) {\n        goto label_0;\n    }\n    rax = dcgettext (0, \"ambiguous argument %s for %s\");\n    rbx = rax;\n    do {\n        rax = fcn_0040bb40 (1, rbp);\n        rax = fcn_0040b830 (0, 8, r12);\n        r8 = rbp;\n        rdx = rbx;\n        esi = 0;\n        rcx = rax;\n        edi = 0;\n        eax = 0;\n        void (*0x401cc0)() ();\nlabel_0:\n        rax = dcgettext (0, \"invalid argument %s for %s\");\n        rbx = rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00402f20",
            "funcStartAddr": "0x402f20",
            "funcEndAddr": "0x403038",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x402f20 */\n#include <stdint.h>\n \nuint64_t fcn_00402f20 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r15 = rdi;\n    r14d = 0;\n    r13 = rdx;\n    edx = 5;\n    rbx = stderr;\n    rax = dcgettext (0, \"Valid arguments are:\");\n    rdi = rax;\n    rsi = rbx;\n    ebx = 0;\n    fputs_unlocked ();\n    r12 = *(r15);\n    if (r12 != 0) {\n        goto label_1;\n    }\n    goto label_2;\n    do {\nlabel_0:\n        rbx++;\n        r14 = rbp;\n        rbp += r13;\n        rax = fcn_0040bb60 (r12);\n        edx = \"\\n  - %s\";\n        esi = 1;\n        rdi = stderr;\n        rcx = rax;\n        eax = 0;\n        fprintf_chk ();\n        r12 = *((r15 + rbx*8));\n        if (r12 == 0) {\n            goto label_2;\n        }\nlabel_1:\n    } while (rbx == 0);\n    eax = memcmp (r14, rbp, r13);\n    if (eax != 0) {\n        goto label_0;\n    }\n    rbx++;\n    rbp += r13;\n    rax = fcn_0040bb60 (r12);\n    edx = \", %s\";\n    esi = 1;\n    rdi = stderr;\n    rcx = rax;\n    eax = 0;\n    fprintf_chk ();\n    r12 = *((r15 + rbx*8));\n    if (r12 != 0) {\n        goto label_1;\n    }\nlabel_2:\n    rdi = stderr;\n    rax = *((rdi + 0x28));\n    if (rax < *((rdi + 0x30))) {\n        rdx = rax + 1;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = 0xa;\n        return rax;\n    }\n    esi = 0xa;\n    return overflow ();\n}\n"
        },
        {
            "funcName": "fcn_00403040",
            "funcStartAddr": "0x403040",
            "funcEndAddr": "0x4030b0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x403040 */\n#include <stdint.h>\n \nuint64_t fcn_00403040 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r15 = r8;\n    r14 = rdi;\n    r13 = r9;\n    r12 = rsi;\n    rbx = rdx;\n    rax = fcn_00402d80 (r12, rbx, rbp, r8);\n    while (1) {\n        return rax;\n        fcn_00402ea0 (r14, r12, rax);\n        fcn_00402f20 (rbx, rbp, r15);\n        void (*r13)() ();\n        rax = 0xffffffffffffffff;\n    }\n}\n"
        },
        {
            "funcName": "fcn_004031c0",
            "funcStartAddr": "0x4031c0",
            "funcEndAddr": "0x403211",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x4031c0 */\n#include <stdint.h>\n \nuint64_t fcn_004031c0 (int64_t arg1, char * arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r12 = rdi;\n    rbx = rsi;\n    rbp += rbx;\n    rax = ctype_tolower_loc ();\n    r13 = rax;\n    do {\n        ecx = *(rbx);\n        rax = *(r13);\n        rbx++;\n        fputc (*((rax + rcx*4)), r12);\n    } while (rbx != rbp);\n    return rax;\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00403220",
            "funcStartAddr": "0x403220",
            "funcEndAddr": "0x403271",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x403220 */\n#include <stdint.h>\n \nuint64_t fcn_00403220 (int64_t arg1, char * arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r12 = rdi;\n    rbx = rsi;\n    rbp += rbx;\n    rax = ctype_toupper_loc ();\n    r13 = rax;\n    do {\n        ecx = *(rbx);\n        rax = *(r13);\n        rbx++;\n        fputc (*((rax + rcx*4)), r12);\n    } while (rbx != rbp);\n    return rax;\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00403280",
            "funcStartAddr": "0x403280",
            "funcEndAddr": "0x404b9e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x403280 */\n#include <stdint.h>\n \nuint64_t fcn_00403280 (int64_t arg_4e8h, int64_t arg1, char * arg11, char * arg2, tm * arg3, int64_t arg5, tm * arg6, char * arg7, int64_t arg9) {\n    uint32_t var_4h;\n    tm * timeptr;\n    int64_t var_10h;\n    tm * var_18h;\n    int64_t var_20h;\n    char * var_28h;\n    char * var_30h;\n    int64_t var_43h;\n    int64_t var_44h;\n    uint32_t var_48h;\n    uint32_t c;\n    uint32_t var_58h;\n    uint32_t var_60h;\n    uint32_t var_68h;\n    int64_t var_70h;\n    int64_t var_78h;\n    char * format;\n    int64_t var_82h;\n    int64_t var_83h;\n    int64_t var_97h;\n    char * s;\n    void * ptr;\n    int64_t var_b0h;\n    int64_t var_c0h;\n    int64_t var_d0h;\n    rdi = arg1;\n    xmm4 = arg11;\n    rsi = arg2;\n    rdx = arg3;\n    r8 = arg5;\n    r9 = arg6;\n    xmm0 = arg7;\n    xmm2 = arg9;\nlabel_10:\n    eax = 0x4179a4;\n    r14 = rdi;\n    rbx = rsi;\n    r13 = *((rdx + 0x30));\n    ebp = *((rdx + 8));\n    *((rsp + 8)) = rdx;\n    *((rsp + 0x20)) = r8;\n    *((rsp + 0x18)) = r9;\n    if (r13 == 0) {\n        r13 = rax;\n    }\n    *((rsp + 0x43)) = cl;\n    if (ebp <= 0xc) {\n        goto label_53;\n    }\n    ebp -= 0xc;\nlabel_0:\n    edi = *(rbx);\n    r12d = 0;\n    if (dil == 0) {\n        goto label_54;\n    }\n    rax = rsp + 0x82;\n    *((rsp + 0x44)) = ebp;\n    *((rsp + 0x10)) = rax;\n    *((rsp + 0x28)) = r13;\n    do {\n        if (dil == 0x25) {\n            goto label_55;\n        }\n        if (r12 > 0xfffffffffffffffd) {\n            goto label_7;\n        }\n        if (r14 != 0) {\n            fputc (rdi, r14);\n        }\n        r12++;\nlabel_6:\n        edi = *((rbp + 1));\n        rbx = rbp + 1;\n    } while (dil != 0);\n    do {\nlabel_54:\n        rax = r12;\n        return rax;\nlabel_19:\n        if (r11d == 0x5f) {\n            goto label_56;\n        }\n        rdx = *((rsp + 0x30));\n        if (rdx < rax) {\n            goto label_57;\n        }\nlabel_7:\n        r12d = 0;\n    } while (1);\nlabel_53:\n    eax = 0xc;\n    if (ebp == 0) {\n    }\n    goto label_0;\nlabel_55:\n    eax = *((rsp + 0x43));\n    ebp = 0;\n    r11d = 0;\n    *((rsp + 4)) = al;\nlabel_1:\n    rbx++;\n    eax = *(rbx);\n    ecx = eax;\n    edi = eax;\n    if (al == 0x30) {\n        goto label_58;\n    }\n    do {\n        if (al > 0x30) {\n            goto label_59;\n        }\n        if (al != 0x23) {\n            goto label_60;\n        }\n        rbx++;\n        eax = *(rbx);\n        ecx = eax;\n        edi = eax;\n    } while (al != 0x30);\n    do {\nlabel_58:\n        r11d = eax;\n        goto label_1;\nlabel_60:\n    } while (al == 0x2d);\n    do {\n        esi = rax - 0x30;\n        r10d = 0xffffffff;\n        if (esi <= 9) {\n            goto label_61;\n        }\nlabel_3:\n        if (cl == 0x45) {\n            goto label_62;\n        }\n        r15d = 0;\n        if (cl == 0x4f) {\n            goto label_62;\n        }\nlabel_2:\n        if (cl > 0x7a) {\n            goto label_20;\n        }\n        eax = (int32_t) cl;\n        /* switch table (123 cases) at 0x4144e0 */\nlabel_59:\n        if (al == 0x5e) {\n            *((rsp + 4)) = 1;\n            goto label_1;\n        }\n    } while (al != 0x5f);\n    r11d = eax;\n    goto label_1;\nlabel_62:\n    edi = *((rbx + 1));\n    r15d = eax;\n    rbx++;\n    ecx = edi;\n    goto label_2;\nlabel_61:\n    r10d = 0;\n    do {\n        eax = *((rbx + 1));\n        r8 = rbx + 1;\n        ecx = eax;\n        edx = rax - 0x30;\n        if (r10d > 0xccccccc) {\n            goto label_63;\n        }\n        esi = *(rbx);\n        if (r10d == 0xccccccc) {\n            goto label_64;\n        }\nlabel_4:\n        edi = r10 * 5;\n        rbx = r8;\n        r10d = rsi + rdi*2 - 0x30;\nlabel_5:\n    } while (edx <= 9);\n    edi = eax;\n    goto label_3;\nlabel_64:\n    if (sil <= 0x37) {\n        goto label_4;\n    }\nlabel_63:\n    if (edx > 9) {\n        goto label_65;\n    }\n    eax = *((rbx + 2));\n    r10d = 0x7fffffff;\n    rbx += 2;\n    ecx = eax;\n    edx = rax - 0x30;\n    goto label_5;\n    if (r15d != 0) {\n        goto label_20;\n    }\n    eax = *((rsp + 4));\n    if (bpl != 0) {\n        eax = ebp;\n    }\n    *((rsp + 4)) = al;\nlabel_16:\n    eax = 0x2520;\n    *((rsp + 0x48)) = 0;\n    r15d = 0;\n    *((rsp + 0x80)) = ax;\n    rax = *((rsp + 0x10));\nlabel_8:\n    *(rax) = cl;\n    *((rax + 1)) = 0;\n    *((rsp + 0x30)) = r10d;\n    *((rsp + 0x50)) = r11d;\n    rax = strftime (rsp + 0xa0, 0x400, rsp + 0x80, *((rsp + 8)));\n    if (rax == 0) {\n        goto label_6;\n    }\n    r10 = *((rsp + 0x30));\n    rbx = rax - 1;\n    eax = 0;\n    rdx = r12;\n    rdx = ~rdx;\n    __asm (\"cmovns rax, r10\");\n    rsi = rax;\n    if (rbx >= rax) {\n        rsi = rbx;\n    }\n    *((rsp + 0x30)) = rsi;\n    if (rdx <= rsi) {\n        goto label_7;\n    }\n    if (r14 == 0) {\n        goto label_13;\n    }\n    if (r15d != 0) {\n        goto label_35;\n    }\n    r11d = *((rsp + 0x50));\n    if (rbx >= rax) {\n        goto label_35;\n    }\n    r15 = (int64_t) r10d;\n    r15 -= rbx;\n    if (r11d == 0x30) {\n        goto label_66;\n    }\n    r13d = 0;\n    if (r15 == 0) {\n        goto label_35;\n    }\n    do {\n        r13++;\n        fputc (0x20, r14);\n    } while (r15 != r13);\nlabel_35:\n    if (*((rsp + 0x48)) != 0) {\n        goto label_67;\n    }\n    if (*((rsp + 4)) == 0) {\n        goto label_68;\n    }\n    fcn_00403220 (r14, rsp + 0xa1, rbx);\nlabel_13:\n    r12 += *((rsp + 0x30));\n    goto label_6;\n    if (r15d == 0x4f) {\n        goto label_20;\n    }\n    *((rsp + 0x48)) = 0;\nlabel_22:\n    *((rsp + 0x80)) = bp;\n    if (r15d != 0) {\n        goto label_69;\n    }\n    rax = *((rsp + 0x10));\n    goto label_8;\n    if (r15d == 0x45) {\n        goto label_20;\n    }\n    rax = *((rsp + 8));\n    r9d = 2;\n    esi = *((rax + 8));\n    do {\nlabel_14:\n        eax = esi;\n        edi = 0;\n        ebp = 0;\n        eax >>= 0x1f;\n        r8d = eax;\nlabel_9:\n        if (r15d != 0x4f) {\n            goto label_70;\n        }\n        if (r8b != 0) {\n            goto label_71;\n        }\nlabel_24:\n        edx = 0x2520;\n        *((rsp + 0x48)) = 0;\n        *((rsp + 0x80)) = dx;\nlabel_52:\n        *((rsp + 0x82)) = r15b;\n        r15d = r9d;\n        rax = rsp + 0x83;\n        goto label_8;\n        if (r15d == 0x45) {\n            goto label_20;\n        }\n        esi = *((rsp + 0x44));\n        r9d = 2;\n    } while (1);\n    if (r15d == 0x45) {\n        goto label_72;\n    }\n    rax = *((rsp + 8));\n    edx = 0x51eb851f;\n    r9d = 2;\n    edi = *((rax + 0x14));\n    eax = *((rax + 0x14));\n    edx:eax = eax * edx;\n    eax = edx;\n    edx = edi;\n    edx >>= 0x1f;\n    eax >>= 5;\n    eax -= edx;\n    edx = edi;\n    esi = rax + 0x13;\n    eax *= 0x64;\n    edx -= eax;\n    eax = edx;\n    eax >>= 0x1f;\n    dl = (esi > 0) ? 1 : 0;\n    eax &= edx;\n    r8b = (edi < 0xfffff894) ? 1 : 0;\n    esi -= eax;\n    edi = 0;\n    ebp = 0;\n    goto label_9;\n    if (r15d != 0) {\n        goto label_20;\n    }\n    *((rsp + 0x30)) = \"%m/%d/%y\";\nlabel_21:\n    eax = *((rsp + 4));\n    *((rsp + 0x48)) = r10d;\n    *((rsp + 0x58)) = r11d;\n    *((rsp + 0xc)) = eax;\n    edx = *((rsp + 0x4e8));\n    rax = fcn_00403280 (0, *((rsp + 0x40)), *((rsp + 0x18)), eax, *((rsp + 0x30)), *((rsp + 0x28)));\n    goto label_10;\n    edx = 0;\n    r10 = *((rsp + 0x48));\n    rcx = r12;\n    rcx = ~rcx;\n    __asm (\"cmovns rdx, r10\");\n    if (rax >= rdx) {\n    }\n    if (rcx <= rbp) {\n        goto label_7;\n    }\n    if (r14 == 0) {\n        goto label_11;\n    }\n    r11d = *((rsp + 0x50));\n    if (rax >= rdx) {\n        goto label_43;\n    }\n    r13 = (int64_t) r10d;\n    r13 -= rax;\n    if (r11d == 0x30) {\n        goto label_73;\n    }\n    r15d = 0;\n    if (r13 == 0) {\n        goto label_43;\n    }\n    do {\n        r15++;\n        fputc (0x20, r14);\n    } while (r13 != r15);\nlabel_43:\n    eax = *((rsp + 0x4e8));\n    fcn_00403280 (r14, *((rsp + 0x40)), *((rsp + 0x18)), *((rsp + 0x14)), *((rsp + 0x30)), *((rsp + 0x28)));\n    goto label_10;\nlabel_11:\n    r12 += rbp;\n    goto label_6;\n    eax = 1;\n    __asm (\"cmovns ebp, r10d\");\n    rbp = (int64_t) ebp;\n    if (rbp == 0) {\n    }\n    rax = r12;\n    rax = ~rax;\n    if (rax <= rbp) {\n        goto label_7;\n    }\n    if (r14 == 0) {\n        goto label_11;\n    }\n    if (r10d <= 1) {\n        goto label_12;\n    }\n    r10 = (int64_t) r10d;\n    r15d = 0;\n    r13 = r10 - 1;\n    if (r11d == 0x30) {\n        goto label_74;\n    }\n    do {\n        r15++;\n        fputc (0x20, r14);\n    } while (r13 != r15);\nlabel_12:\n    fputc (9, r14);\n    goto label_11;\n    do {\nlabel_74:\n        r15++;\n        fputc (0x30, r14);\n    } while (r13 != r15);\n    goto label_12;\n    ecx = *((rbx - 1));\n    r15 = rbx - 1;\nlabel_18:\n    eax = 0;\n    rdx = r12;\n    __asm (\"cmovns eax, r10d\");\n    rdx = ~rdx;\n    rax = (int64_t) eax;\n    if (cl != 0x25) {\n        goto label_75;\n    }\n    r13d = 1;\n    if (rax != 0) {\n        r13 = rax;\n    }\n    *((rsp + 0x30)) = r13;\n    r13d = 1;\nlabel_17:\n    if (rdx <= *((rsp + 0x30))) {\n        goto label_7;\n    }\n    if (r14 == 0) {\n        goto label_13;\n    }\n    if (r13 >= rax) {\n        goto label_39;\n    }\n    rbx = (int64_t) r10d;\n    rax = rbx;\n    rax -= r13;\n    if (r11d == 0x30) {\n        goto label_76;\n    }\n    ebx = 0;\n    if (rax == 0) {\n        goto label_39;\n    }\n    *((rsp + 0x48)) = rbp;\n    rbx = rax;\n    do {\n        rbp++;\n        fputc (0x20, r14);\n    } while (rbx != rbp);\nlabel_40:\n    rbp = *((rsp + 0x48));\nlabel_39:\n    if (*((rsp + 4)) == 0) {\n        goto label_77;\n    }\n    fcn_00403220 (r14, r15, r13);\n    goto label_13;\n    eax = 0;\n    r13d = 1;\n    rdx = r12;\n    __asm (\"cmovns eax, r10d\");\n    rsi = r13;\n    rdx = ~rdx;\n    rax = (int64_t) eax;\n    if (rax != 0) {\n        rsi = rax;\n    }\n    *((rsp + 0x30)) = rsi;\n    if (r15d != 0) {\n        goto label_78;\n    }\n    if (rdx <= rsi) {\n        goto label_7;\n    }\n    if (r14 == 0) {\n        goto label_15;\n    }\n    if (r10d <= 1) {\n        goto label_79;\n    }\n    r10 = (int64_t) r10d;\n    r15d = 0;\n    rbp = r10 - 1;\n    if (r11d == 0x30) {\n        goto label_80;\n    }\n    do {\n        r15++;\n        fputc (0x20, r14);\n    } while (rbp != r15);\nlabel_29:\n    edi = *(rbx);\nlabel_79:\n    fputc (rdi, r14);\nlabel_15:\n    r12 += *((rsp + 0x30));\n    goto label_6;\n    if (r15d == 0x45) {\n        goto label_20;\n    }\n    rax = *((rsp + 8));\n    r9d = 2;\n    esi = *((rax + 4));\n    goto label_14;\n    if (r15d == 0x45) {\n        goto label_20;\n    }\n    rax = *((rsp + 8));\n    r9d = 2;\n    esi = *(rax);\n    goto label_14;\n    if (r15d == 0x45) {\n        goto label_20;\n    }\n    rax = *((rsp + 8));\n    edx = 0x92492493;\n    edi = *((rax + 0x1c));\n    edi -= *((rax + 0x18));\n    edi += 7;\n    eax = edi;\n    edx:eax = eax * edx;\n    do {\n        esi = rdx + rdi;\n        edi >>= 0x1f;\n        r9d = 2;\n        esi >>= 2;\n        esi -= edi;\n        goto label_14;\n        if (r15d == 0x45) {\n            goto label_20;\n        }\n        r9 = *((rsp + 8));\n        esi = 0x92492493;\n        eax = *((r9 + 0x18));\n        edi = rax + 6;\n        *((rsp + 0x30)) = eax;\n        eax = edi;\n        edx:eax = eax * esi;\n        eax = rdx + rdi;\n        edx = edi;\n        edx >>= 0x1f;\n        eax >>= 2;\n        eax -= edx;\n        edx = rax*8;\n        edx -= eax;\n        eax = edx;\n        edx = *((r9 + 0x1c));\n        eax -= edi;\n        edi = rax + rdx + 7;\n        eax = edi;\n        edx:eax = eax * esi;\n    } while (1);\n    if (r15d == 0x45) {\n        goto label_72;\n    }\n    if (r15d == 0x4f) {\n        goto label_20;\n    }\n    rax = *((rsp + 8));\n    r9d = 4;\n    esi = *((rax + 0x14));\n    r8b = (esi < 0xfffff894) ? 1 : 0;\n    esi += 0x76c;\n    edi = 0;\n    ebp = 0;\nlabel_70:\n    if (r8b != 0) {\nlabel_71:\n        esi = -esi;\n    }\nlabel_25:\n    *((rsp + 0x30)) = r8b;\n    rcx = rsp + 0x97;\n    r15d = 0xcccccccd;\n    do {\n        r13 = rcx - 1;\n        if ((dil & 1) != 0) {\n            rax = rcx - 2;\n            *((rcx - 1)) = 0x3a;\n            rcx = r13;\n            r13 = rax;\n        }\n        eax = esi;\n        r8d = esi;\n        edi >>= 1;\n        edx:eax = eax * r15d;\n        edx >>= 3;\n        eax = rdx * 5;\n        eax += eax;\n        r8d -= eax;\n        eax = r8d;\n        eax += 0x30;\n        *((rcx - 1)) = al;\n        rcx = r13;\n        if (esi <= 9) {\n            if (edi == 0) {\n                goto label_81;\n            }\n        }\n        esi = edx;\n    } while (1);\nlabel_81:\n    r8d = *((rsp + 0x30));\n    if (r9d < r10d) {\n        r9d = r10d;\n    }\n    *((rsp + 0x30)) = r9d;\n    if (r8b != 0) {\n        goto label_82;\n    }\n    if (bpl == 0) {\n        goto label_83;\n    }\n    if (r11d == 0x2d) {\n        goto label_84;\n    }\n    *((rsp + 0x50)) = 0x2b;\nlabel_32:\n    eax = *((rsp + 0x30));\n    r15 = rsp + 0x97;\n    r15 -= r13;\n    eax--;\n    eax -= r15d;\n    edx = eax;\n    *((rsp + 0x48)) = eax;\n    rax = r12;\n    rax = ~rax;\n    if (edx <= 0) {\n        goto label_85;\n    }\n    if (r11d == 0x5f) {\n        goto label_86;\n    }\n    rdx = *((rsp + 0x30));\n    rsi = rdx;\n    if (rdx >= rax) {\n        goto label_7;\n    }\n    edx = 0;\n    ecx = 1;\n    __asm (\"cmovns edx, r10d\");\n    rdx = (int64_t) edx;\n    if (rdx != 0) {\n        rcx = rdx;\n    }\n    *((rsp + 0x58)) = rcx;\n    if (rcx >= rax) {\n        goto label_7;\n    }\n    if (r14 == 0) {\n        goto label_87;\n    }\n    if (esi != 0) {\n        goto label_48;\n    }\n    if (rdx <= 1) {\n        goto label_48;\n    }\n    r10 = (int64_t) r10d;\n    rax = r10 - 1;\n    *((rsp + 0x60)) = rax;\n    if (r11d == 0x30) {\n        goto label_88;\n    }\n    ebp = 0;\n    if (rax == 0) {\n        goto label_48;\n    }\n    *((rsp + 0x68)) = r11d;\n    *((rsp + 0x70)) = rbx;\n    rbx = *((rsp + 0x60));\n    do {\n        rbp++;\n        fputc (0x20, r14);\n    } while (rbx != rbp);\n    r11d = *((rsp + 0x68));\n    rbx = *((rsp + 0x70));\nlabel_48:\n    edi = *((rsp + 0x50));\n    *((rsp + 0x60)) = r11d;\n    fputc (rdi, r14);\n    r11d = *((rsp + 0x60));\nlabel_87:\n    r12 += *((rsp + 0x58));\nlabel_57:\n    rax = *((rsp + 0x48));\n    *((rsp + 0x48)) = rax;\n    if (r14 != 0) {\n        goto label_89;\n    }\nlabel_36:\n    r12 += *((rsp + 0x48));\n    edx = 0;\n    r10d = 0;\n    rax = r12;\n    rax = ~rax;\n    goto label_33;\n    if (r15d == 0x45) {\n        goto label_20;\n    }\n    esi = *((rsp + 0x44));\nlabel_26:\n    r9d = 2;\n    if (r11d == 0x30) {\n        goto label_14;\n    }\n    if (r11d == 0x2d) {\n        goto label_14;\n    }\n    r11d = 0x5f;\n    goto label_14;\n    rax = *((rsp + 8));\n    edx = 0x92492493;\n    r9d = 1;\n    eax = *((rax + 0x18));\n    esi = rax + 6;\n    *((rsp + 0x30)) = eax;\n    eax = esi;\n    edx:eax = eax * edx;\n    eax = rdx + rsi;\n    edx = esi;\n    edx >>= 0x1f;\n    eax >>= 2;\n    eax -= edx;\n    edx = rax*8;\n    edx -= eax;\n    esi -= edx;\n    esi++;\n    goto label_14;\n    edx = *((rsp + 4));\n    eax = 0;\n    rdi = *((rsp + 0x28));\n    *((rsp + 0x30)) = r10d;\n    if (bpl != 0) {\n        edx = eax;\n    }\n    *((rsp + 0x48)) = r11d;\n    *((rsp + 4)) = dl;\n    rax = strlen (rdi);\n    r10 = *((rsp + 0x30));\n    rcx = r12;\n    r13 = rax;\n    eax = 0;\n    rcx = ~rcx;\n    __asm (\"cmovns rax, r10\");\n    rdx = rax;\n    if (r13 >= rax) {\n        rdx = r13;\n    }\n    *((rsp + 0x30)) = rdx;\n    if (rcx <= rdx) {\n        goto label_7;\n    }\n    if (r14 == 0) {\n        goto label_15;\n    }\n    r11d = *((rsp + 0x48));\n    if (r13 >= rax) {\n        goto label_50;\n    }\n    rax = r10;\n    rax -= r13;\n    *((rsp + 0x48)) = rax;\n    if (r11d == 0x30) {\n        goto label_90;\n    }\n    r15d = 0;\n    if (rax == 0) {\n        goto label_50;\n    }\n    *((rsp + 0x50)) = bpl;\n    r15 = r13;\n    r13 = rbx;\n    rbx = *((rsp + 0x48));\n    do {\n        rbp++;\n        fputc (0x20, r14);\n    } while (rbx != rbp);\n    ebp = *((rsp + 0x50));\n    rbx = r13;\n    r13 = r15;\nlabel_50:\n    if (bpl != 0) {\n        goto label_91;\n    }\n    if (*((rsp + 4)) == 0) {\n        goto label_92;\n    }\n    fcn_00403220 (r14, *((rsp + 0x28)), r13);\n    goto label_15;\n    if (r15d == 0x45) {\n        goto label_20;\n    }\n    rax = *((rsp + 8));\n    r9d = 1;\n    esi = *((rax + 0x18));\n    goto label_14;\n    eax = *((rsp + 4));\n    if (bpl != 0) {\n        eax = ebp;\n    }\n    *((rsp + 4)) = al;\n    if (r15d == 0) {\n        goto label_16;\n    }\nlabel_20:\n    rax = rbx - 1;\n    edx = rax + 2;\n    do {\n        r15 = rax;\n        ebp -= eax;\n        rax = rax - 1;\n    } while (*((rax + 1)) != 0x25);\n    eax = 0;\n    r13 = (int64_t) ebp;\n    rdx = r12;\n    __asm (\"cmovns eax, r10d\");\n    rdx = ~rdx;\n    rax = (int64_t) eax;\n    rsi = rax;\n    if (r13 >= rax) {\n        rsi = r13;\n    }\n    *((rsp + 0x30)) = rsi;\n    goto label_17;\n    r13d = 0;\nlabel_28:\n    rax = *((rsp + 8));\n    esi = *((rax + 0x20));\n    if (esi < 0) {\n        goto label_93;\n    }\n    rsi = *((rax + 0x28));\n    r8d = 1;\n    if (esi >= 0) {\n        r8d = 0;\n        if (esi != 0) {\n            goto label_94;\n        }\n        rax = *((rsp + 0x28));\n        r8b = (*(rax) == 0x2d) ? 1 : 0;\n    }\nlabel_94:\n    eax = esi;\n    edx = 0x91a2b3c5;\n    edi = 0x88888889;\n    edx:eax = eax * edx;\n    ebp >>= 0x1f;\n    eax = esi;\n    edx += esi;\n    edx >>= 0xb;\n    edx -= ebp;\n    *((rsp + 0x30)) = edx;\n    edx:eax = eax * edi;\n    r9d = rdx + rsi;\n    r9d >>= 5;\n    r9d -= ebp;\n    eax = r9d;\n    edx:eax = eax * edi;\n    eax = r9d;\n    eax >>= 0x1f;\n    edi = rdx + r9;\n    edi >>= 5;\n    edi -= eax;\n    eax = r9d;\n    edi *= 0x3c;\n    r9d *= 0x3c;\n    eax -= edi;\n    edi = eax;\n    esi -= r9d;\n    if (r13 == 1) {\n        goto label_46;\n    }\n    if (r13 == 0) {\n        goto label_95;\n    }\n    if (r13 == 2) {\n        goto label_96;\n    }\n    if (r13 == 3) {\n        goto label_97;\n    }\n    ecx = *(rbx);\n    r15 = rbx;\n    goto label_18;\n    rax = *((rsp + 8));\n    *((rsp + 0x50)) = r10d;\n    *((rsp + 0x48)) = r11d;\n    r13 = rsp + 0x97;\n    __asm (\"movdqu xmm4, xmmword [rax + 0x20]\");\n    __asm (\"movdqu xmm0, xmmword [rax]\");\n    __asm (\"movdqu xmm2, xmmword [rax + 0x10]\");\n    rax = *((rax + 0x30));\n    *((rsp + 0xa0)) = xmm0;\n    *((rsp + 0xb0)) = xmm2;\n    *((rsp + 0x30)) = xmm4;\n    *((rsp + 0xc0)) = xmm4;\n    *((rsp + 0xd0)) = rax;\n    rax = fcn_0040ded0 (*((rsp + 0x18)), rsp + 0xa0);\n    r11d = *((rsp + 0x48));\n    r10d = *((rsp + 0x50));\n    edi = 0x30;\n    rsi = rax;\n    rcx = rax;\n    do {\n        rax = 0x6666666666666667;\n        rdx:rax = rax * rcx;\n        rax = rcx;\n        rax >>= 0x3f;\n        rdx >>= 2;\n        rdx -= rax;\n        rax = rdx;\n        rdx *= 5;\n        rdx += rdx;\n        rcx -= rdx;\n        rdx = rcx;\n        rcx = rax;\n        eax = edi;\n        eax -= edx;\n        edx += 0x30;\n        __asm (\"cmovs edx, eax\");\n        r13--;\n        *(r13) = dl;\n    } while (rcx != 0);\n    r9d = 1;\n    if (r10d > 0) {\n        r9d = r10d;\n    }\n    *((rsp + 0x30)) = r9d;\n    if (rsi < 0) {\n        goto label_82;\n    }\nlabel_83:\n    r15 = rsp + 0x97;\n    rax = r12;\n    r15 -= r13;\n    rax = ~rax;\n    if (r11d == 0x2d) {\n        goto label_98;\n    }\n    edx = *((rsp + 0x30));\n    edx -= r15d;\n    *((rsp + 0x48)) = edx;\n    if (edx > 0) {\n        goto label_19;\n    }\nlabel_98:\n    edx = 0;\n    __asm (\"cmovns edx, r10d\");\n    rdx = (int64_t) edx;\nlabel_33:\n    rsi = rdx;\n    if (r15 >= rdx) {\n        rsi = r15;\n    }\n    *((rsp + 0x48)) = rsi;\n    if (rsi >= rax) {\n        goto label_7;\n    }\n    if (r14 == 0) {\n        goto label_34;\n    }\n    edi = *((rsp + 0x30));\n    if (edi != 0) {\n        goto label_37;\n    }\n    if (r15 >= rdx) {\n        goto label_37;\n    }\n    rax = (int64_t) r10d;\n    rax -= r15;\n    if (r11d == 0x30) {\n        goto label_99;\n    }\n    ebx = 0;\n    if (rax == 0) {\n        goto label_37;\n    }\n    *((rsp + 0x30)) = rbp;\n    rbx = rax;\n    do {\n        rbp++;\n        fputc (0x20, r14);\n    } while (rbx != rbp);\nlabel_38:\n    rbp = *((rsp + 0x30));\nlabel_37:\n    if (*((rsp + 4)) == 0) {\n        goto label_100;\n    }\n    fcn_00403220 (r14, r13, r15);\nlabel_34:\n    r12 += *((rsp + 0x48));\n    goto label_6;\n    if (r15d == 0x45) {\n        goto label_72;\n    }\n    rax = *((rsp + 8));\n    edx = 0x51eb851f;\n    r9d = 2;\n    edi = *((rax + 0x14));\n    eax = *((rax + 0x14));\n    edx:eax = eax * edx;\n    eax = edi;\n    eax >>= 0x1f;\n    esi = edx;\n    esi >>= 5;\n    esi -= eax;\n    eax = edi;\n    esi *= 0x64;\n    eax -= esi;\n    esi = eax;\n    if (eax >= 0) {\n        goto label_14;\n    }\n    eax = -eax;\n    esi += 0x64;\n    if (edi <= 0xfffff893) {\n        esi = eax;\n    }\n    goto label_14;\n    if (r15d != 0) {\n        goto label_20;\n    }\n    *((rsp + 0x30)) = \"%Y-%m-%d\";\n    goto label_21;\n    if (r15d == 0x45) {\n        goto label_20;\n    }\n    rdx = *((rsp + 8));\n    ebp = *((rdx + 0x14));\n    esi = *((rdx + 0x1c));\n    r13d = *((rdx + 0x18));\n    edx = 0x92492493;\n    eax = ebp;\n    edi = esi;\n    eax >>= 0x1f;\n    edi -= r13d;\n    edi += 0x17e;\n    eax &= 0x190;\n    r9d = rbp + rax - 0x64;\n    eax = edi;\n    edx:eax = eax * edx;\n    eax = rdx + rdi;\n    edx = edi;\n    edx >>= 0x1f;\n    eax >>= 2;\n    eax -= edx;\n    edx = rax*8;\n    edx -= eax;\n    eax = edx;\n    edx = esi;\n    edx -= edi;\n    r8d = rdx + rax + 3;\n    if (r8d < 0) {\n        goto label_101;\n    }\n    eax = 0x16d;\n    if ((r9b & 3) == 0) {\n        edi = 0x51eb851f;\n        eax = r9d;\n        edx:eax = eax * edi;\n        eax = r9d;\n        eax >>= 0x1f;\n        *((rsp + 0x30)) = eax;\n        edi = edx;\n        edx >>= 5;\n        edx -= eax;\n        eax = 0x16e;\n        edx *= 0x64;\n        if (r9d != edx) {\n            goto label_102;\n        }\n        edi >>= 7;\n        eax = edi;\n        eax -= *((rsp + 0x30));\n        eax *= 0x190;\n        al = (r9d == eax) ? 1 : 0;\n        eax = (int32_t) al;\n        eax += 0x16d;\n    }\nlabel_102:\n    esi -= eax;\n    edx = 0x92492493;\n    edi = esi;\n    edi -= r13d;\n    edi += 0x17e;\n    eax = edi;\n    esi -= edi;\n    edx:eax = eax * edx;\n    eax = rdx + rdi;\n    edx = edi;\n    edx >>= 0x1f;\n    eax >>= 2;\n    eax -= edx;\n    edx = rax*8;\n    edx -= eax;\n    r13d = rsi + rdx + 3;\n    __asm (\"cmovns r8d, r13d\");\n    r13d >>= 0x1f;\n    r13d++;\nlabel_44:\n    if (cl == 0x47) {\n        goto label_103;\n    }\n    if (cl != 0x67) {\n        goto label_104;\n    }\n    esi = 0x51eb851f;\n    eax = ebp;\n    edi = ebp;\n    r9d = 2;\n    edx:eax = eax * esi;\n    eax = edx;\n    edx = ebp;\n    edx >>= 0x1f;\n    eax >>= 5;\n    eax -= edx;\n    eax *= 0x64;\n    edi -= eax;\n    edi += r13d;\n    eax = edi;\n    edx:eax = eax * esi;\n    eax = edi;\n    eax >>= 0x1f;\n    esi = edx;\n    esi >>= 5;\n    esi -= eax;\n    esi *= 0x64;\n    edi -= esi;\n    esi = edi;\n    if (edi >= 0) {\n        goto label_14;\n    }\n    eax = 0xfffff894;\n    edx = edi;\n    esi += 0x64;\n    eax -= r13d;\n    edx = -edx;\n    if (ebp < eax) {\n        esi = edx;\n    }\n    goto label_14;\n    *((rsp + 0x48)) = 1;\nlabel_27:\n    eax = *((rsp + 0x48));\n    edx = *((rsp + 4));\n    ecx = 0x70;\n    if (bpl != 0) {\n        eax = ebp;\n    }\n    *((rsp + 0x48)) = al;\n    eax = 0;\n    if (bpl != 0) {\n        edx = eax;\n    }\n    *((rsp + 4)) = dl;\n    goto label_22;\n    *((rsp + 0x30)) = \"%H:%M\";\n    goto label_21;\n    eax = 1;\n    __asm (\"cmovns ebp, r10d\");\n    rbp = (int64_t) ebp;\n    if (rbp == 0) {\n    }\n    rax = r12;\n    rax = ~rax;\n    if (rax <= rbp) {\n        goto label_7;\n    }\n    if (r14 == 0) {\n        goto label_11;\n    }\n    if (r10d <= 1) {\n        goto label_23;\n    }\n    r10 = (int64_t) r10d;\n    r15d = 0;\n    r13 = r10 - 1;\n    if (r11d == 0x30) {\n        goto label_105;\n    }\n    do {\n        r15++;\n        fputc (0x20, r14);\n    } while (r13 != r15);\nlabel_23:\n    fputc (0xa, r14);\n    goto label_11;\n    do {\nlabel_105:\n        r15++;\n        fputc (0x30, r14);\n    } while (r13 != r15);\n    goto label_23;\n    rax = *((rsp + 8));\n    r9d = 1;\n    eax = *((rax + 0x10));\n    if (r15d == 0x4f) {\n        goto label_24;\n    }\n    edx = rax * 5;\n    ebp = 0;\n    r8d = 0;\n    edi = 0;\n    esi = rax + rdx*2;\n    esi >>= 5;\n    esi++;\n    goto label_25;\n    if (r15d == 0x45) {\n        goto label_20;\n    }\n    rax = *((rsp + 8));\n    r9d = 2;\n    esi = *((rax + 0x10));\n    r8b = (esi < 0xffffffff) ? 1 : 0;\n    esi++;\n    edi = 0;\n    ebp = 0;\n    goto label_9;\n    if (r15d == 0x45) {\n        goto label_20;\n    }\n    rax = *((rsp + 8));\n    r9d = 2;\n    esi = *((rax + 0xc));\n    goto label_14;\n    if (r15d == 0x45) {\n        goto label_20;\n    }\n    rax = *((rsp + 8));\n    esi = *((rax + 0xc));\n    goto label_26;\n    if (r15d == 0x45) {\n        goto label_20;\n    }\n    rax = *((rsp + 8));\n    r9d = 3;\n    esi = *((rax + 0x1c));\n    r8b = (esi < 0xffffffff) ? 1 : 0;\n    esi++;\n    edi = 0;\n    ebp = 0;\n    goto label_9;\n    if (r15d == 0x45) {\n        goto label_20;\n    }\n    rax = *((rsp + 8));\n    esi = *((rax + 8));\n    goto label_26;\n    if (r15d == 0x45) {\n        goto label_20;\n    }\n    if (r10d != 0xffffffff) {\n        goto label_106;\n    }\n    esi = *((rsp + 0x4e0));\n    r10d = 9;\n    r9d = 9;\n    goto label_14;\n    *((rsp + 0x30)) = 0x41493f;\n    goto label_21;\n    *((rsp + 0x48)) = 0;\n    goto label_27;\n    eax = *((rbx + 1));\n    rdx = rbx + 1;\n    r13d = 1;\n    if (al == 0x3a) {\n        goto label_31;\n    }\nlabel_30:\n    if (al != 0x7a) {\n        goto label_20;\n    }\n    rbx = rdx;\n    goto label_28;\n    do {\nlabel_80:\n        r15++;\n        fputc (0x30, r14);\n    } while (rbp != r15);\n    goto label_29;\nlabel_31:\n    r13++;\n    eax = *((rbx + r13));\n    rdx = rbx + r13;\n    if (al != 0x3a) {\n        goto label_30;\n    }\n    goto label_31;\nlabel_65:\n    edi = eax;\n    rbx = r8;\n    r10d = 0x7fffffff;\n    goto label_3;\nlabel_82:\n    *((rsp + 0x50)) = 0x2d;\n    if (r11d != 0x2d) {\n        goto label_32;\n    }\n    *((rsp + 0x48)) = 0x2d;\nlabel_41:\n    edx = 0;\n    r15d = 1;\n    rax = r12;\n    __asm (\"cmovns edx, r10d\");\n    rax = ~rax;\n    rdx = (int64_t) edx;\n    if (rdx != 0) {\n        r15 = rdx;\n    }\n    if (rax <= r15) {\n        goto label_7;\n    }\n    if (r14 != 0) {\n        r11d = *((rsp + 0x30));\n        if (r11d == 0) {\n            if (rdx > 1) {\n                goto label_107;\n            }\n        }\nlabel_45:\n        edi = *((rsp + 0x48));\n        *((rsp + 0x58)) = rdx;\n        *((rsp + 0x50)) = r10d;\n        fputc (rdi, r14);\n        r10d = *((rsp + 0x50));\n        rdx = *((rsp + 0x58));\n    }\n    r12 += r15;\n    r15 = rsp + 0x97;\n    r11d = 0x2d;\n    rax = r12;\n    r15 -= r13;\n    rax = ~rax;\n    goto label_33;\nlabel_100:\n    fwrite (r13, r15, 1, r14);\n    goto label_34;\nlabel_77:\n    fwrite (r15, r13, 1, r14);\n    goto label_13;\nlabel_68:\n    fwrite (rsp + 0xa1, rbx, 1, r14);\n    goto label_13;\nlabel_67:\n    fcn_004031c0 (r14, rsp + 0xa1, rbx);\n    goto label_13;\nlabel_66:\n    if (r15 == 0) {\n        goto label_35;\n    }\n    edx = 0;\n    r13 = rdx;\n    do {\n        r13++;\n        rax = fputc (0x30, r14);\n    } while (r15 != r13);\n    goto label_35;\nlabel_85:\n    edx = 0;\n    ecx = 1;\n    __asm (\"cmovns edx, r10d\");\n    rdx = (int64_t) edx;\n    if (rdx != 0) {\n        rcx = rdx;\n    }\n    *((rsp + 0x48)) = rcx;\n    if (rcx >= rax) {\n        goto label_7;\n    }\n    if (r14 == 0) {\n        goto label_108;\n    }\n    r8d = *((rsp + 0x30));\n    if (r8d != 0) {\n        goto label_47;\n    }\n    if (rdx <= 1) {\n        goto label_47;\n    }\n    rbp = (int64_t) r10d;\n    rax = rbp - 1;\n    *((rsp + 0x58)) = rax;\n    if (r11d == 0x30) {\n        goto label_109;\n    }\n    ebp = 0;\n    if (rax == 0) {\n        goto label_47;\n    }\n    *((rsp + 0x60)) = r11d;\n    *((rsp + 0x68)) = r10d;\n    *((rsp + 0x70)) = rdx;\n    *((rsp + 0x78)) = rbx;\n    rbx = *((rsp + 0x58));\n    do {\n        rbp++;\n        fputc (0x20, r14);\n    } while (rbx != rbp);\n    r11d = *((rsp + 0x60));\n    r10d = *((rsp + 0x68));\n    rdx = *((rsp + 0x70));\n    rbx = *((rsp + 0x78));\nlabel_47:\n    edi = *((rsp + 0x50));\n    *((rsp + 0x68)) = rdx;\n    *((rsp + 0x60)) = r10d;\n    *((rsp + 0x58)) = r11d;\n    fputc (rdi, r14);\n    r11d = *((rsp + 0x58));\n    r10d = *((rsp + 0x60));\n    rdx = *((rsp + 0x68));\nlabel_108:\n    r12 += *((rsp + 0x48));\n    rax = r12;\n    rax = ~rax;\n    goto label_33;\nlabel_56:\n    *((rsp + 0x50)) = 0;\nlabel_86:\n    rbp = *((rsp + 0x48));\n    if (rbp >= rax) {\n        goto label_7;\n    }\n    if (r14 != 0) {\n        goto label_110;\n    }\nlabel_42:\n    edx = *((rsp + 0x48));\n    eax = r10d;\n    r12 += rbp;\n    eax -= edx;\n    r10d = 0;\n    if (edx < r10d) {\n        r10d = eax;\n    }\n    rax = r12;\n    rax = ~rax;\n    if (*((rsp + 0x50)) == 0) {\n        goto label_111;\n    }\n    rdx = (int64_t) r10d;\n    if (rdx != 0) {\n    }\n    if (rbp >= rax) {\n        goto label_7;\n    }\n    if (r14 != 0) {\n        r9d = *((rsp + 0x30));\n        if (r9d == 0) {\n            if (r10d > 1) {\n                goto label_112;\n            }\n        }\nlabel_49:\n        edi = *((rsp + 0x50));\n        *((rsp + 0x58)) = rdx;\n        *((rsp + 0x48)) = r10d;\n        fputc (rdi, r14);\n        r10d = *((rsp + 0x48));\n        rdx = *((rsp + 0x58));\n    }\n    r12 += rbp;\n    r11d = 0x5f;\n    r15 = rsp + 0x97;\n    rax = r12;\n    r15 -= r13;\n    rax = ~rax;\n    goto label_33;\nlabel_89:\n    ebx = 0;\n    *((rsp + 0x58)) = r11d;\n    *((rsp + 0x50)) = rbp;\n    rbx = *((rsp + 0x48));\n    do {\n        rbp++;\n        rax = fputc (0x30, r14);\n    } while (rbp < rbx);\n    rbp = *((rsp + 0x50));\n    r11d = *((rsp + 0x58));\n    goto label_36;\nlabel_99:\n    rbx = rax;\n    if (rax == 0) {\n        goto label_37;\n    }\n    edx = 0;\n    *((rsp + 0x30)) = rbp;\n    do {\n        rbp++;\n        rax = fputc (0x30, r14);\n    } while (rbx != rbp);\n    goto label_38;\nlabel_72:\n    r9d = 0;\n    goto label_24;\nlabel_76:\n    rbx = rax;\n    if (rax == 0) {\n        goto label_39;\n    }\n    edx = 0;\n    *((rsp + 0x48)) = rbp;\n    do {\n        rbp++;\n        fputc (0x30, r14);\n    } while (rbx != rbp);\n    goto label_40;\nlabel_84:\n    *((rsp + 0x48)) = 0x2b;\n    goto label_41;\nlabel_93:\n    goto label_6;\nlabel_111:\n    r15 = rsp + 0x97;\n    rdx = (int64_t) r10d;\n    r11d = 0x5f;\n    r15 -= r13;\n    goto label_33;\nlabel_110:\n    *((rsp + 0x58)) = r10d;\n    r15d = 0;\n    rax = rbx;\n    rbx = r15;\n    r15 = rax;\n    do {\n        rbx++;\n        rax = fputc (0x20, r14);\n    } while (rbp > rbx);\n    r10d = *((rsp + 0x58));\n    rbx = r15;\n    goto label_42;\nlabel_73:\n    if (r13 == 0) {\n        goto label_43;\n    }\n    edx = 0;\n    r15 = rdx;\n    do {\n        r15++;\n        fputc (0x30, r14);\n    } while (r13 != r15);\n    goto label_43;\nlabel_101:\n    r9d--;\n    edx = 0x16d;\n    if ((r9b & 3) == 0) {\n        eax = r9d;\n        edx = 0x51eb851f;\n        edx:eax = eax * edx;\n        eax = edx;\n        edx = r9d;\n        edx >>= 0x1f;\n        eax >>= 5;\n        eax -= edx;\n        edx = 0x16e;\n        eax *= 0x64;\n        if (r9d != eax) {\n            goto label_113;\n        }\n        eax = r9d;\n        edi = 0x190;\n        edx:eax = (int64_t) eax;\n        eax = edx:eax / edi;\n        edx = edx:eax % edi;\n        edx -= edx;\n        edx = ~edx;\n        edx += 0x16e;\n    }\nlabel_113:\n    esi += edx;\n    edx = 0x92492493;\n    edi = esi;\n    edi -= r13d;\n    r13d = 0xffffffff;\n    edi += 0x17e;\n    eax = edi;\n    esi -= edi;\n    edx:eax = eax * edx;\n    eax = rdx + rdi;\n    edx = edi;\n    edx >>= 0x1f;\n    eax >>= 2;\n    eax -= edx;\n    edx = rax*8;\n    edx -= eax;\n    r8d = rsi + rdx + 3;\n    goto label_44;\nlabel_106:\n    if (r10d > 8) {\n        goto label_114;\n    }\n    esi = *((rsp + 0x4e0));\n    edi = r10d;\n    r8d = 0x66666667;\n    do {\n        eax = esi;\n        esi >>= 0x1f;\n        edi++;\n        edx:eax = eax * r8d;\n        edx >>= 2;\n        edx -= esi;\n        esi = edx;\n    } while (edi != 9);\nlabel_51:\n    r9d = r10d;\n    goto label_14;\nlabel_104:\n    eax = r8d;\n    edx = 0x92492493;\n    r9d = 2;\n    edx:eax = eax * edx;\n    esi = rdx + r8;\n    r8d >>= 0x1f;\n    esi >>= 2;\n    esi -= r8d;\n    esi++;\n    goto label_14;\nlabel_103:\n    eax = 0xfffff894;\n    esi = rbp + r13 + 0x76c;\n    r9d = 4;\n    eax -= r13d;\n    r8b = (ebp < eax) ? 1 : 0;\n    edi = 0;\n    ebp = 0;\n    goto label_9;\nlabel_107:\n    rax = (int64_t) r10d;\n    rax--;\n    if (rax == 0) {\n        goto label_45;\n    }\n    *((rsp + 0x50)) = r10d;\n    ebp = 0;\n    *((rsp + 0x58)) = rdx;\n    *((rsp + 0x60)) = rbx;\n    rbx = rax;\n    do {\n        rbp++;\n        fputc (0x20, r14);\n    } while (rbx != rbp);\n    r10d = *((rsp + 0x50));\n    rdx = *((rsp + 0x58));\n    rbx = *((rsp + 0x60));\n    goto label_45;\n    do {\nlabel_96:\n        edi *= 0x64;\n        r9d = 9;\n        eax = *((rsp + 0x30)) * 0x2710;\n        eax += edi;\n        edi = 0x14;\n        esi += eax;\n        goto label_9;\nlabel_46:\n        esi = *((rsp + 0x30)) * 0x64;\n        r9d = 6;\n        esi += edi;\n        edi = 4;\n        goto label_9;\nlabel_92:\n        fwrite (*((rsp + 0x28)), r13, 1, r14);\n        goto label_15;\nlabel_91:\n        fcn_004031c0 (r14, *((rsp + 0x28)), r13);\n        goto label_15;\nlabel_95:\n        esi = *((rsp + 0x30)) * 0x64;\n        edi = 0;\n        r9d = 5;\n        esi += eax;\n        goto label_9;\nlabel_97:\n    } while (esi != 0);\n    if (eax != 0) {\n        goto label_46;\n    }\n    esi = *((rsp + 0x30));\n    r9d = 3;\n    goto label_9;\nlabel_78:\n    r15 = rbx;\n    r13d = 1;\n    goto label_17;\nlabel_109:\n    if (*((rsp + 0x58)) == 0) {\n        goto label_47;\n    }\n    *((rsp + 0x60)) = r11d;\n    ecx = 0;\n    *((rsp + 0x68)) = r10d;\n    *((rsp + 0x70)) = rbx;\n    rbx = rcx;\n    do {\n        rbx++;\n        fputc (0x30, r14);\n    } while (*((rsp + 0x58)) != rbx);\n    r11d = *((rsp + 0x60));\n    r10d = *((rsp + 0x68));\n    rdx = rbp;\n    rbx = *((rsp + 0x70));\n    goto label_47;\nlabel_88:\n    if (*((rsp + 0x60)) == 0) {\n        goto label_48;\n    }\n    edx = 0;\n    *((rsp + 0x68)) = rbx;\n    rbx = rdx;\n    do {\n        rbx++;\n        fputc (0x30, r14);\n    } while (*((rsp + 0x60)) != rbx);\n    r11d = ebp;\n    rbx = *((rsp + 0x68));\n    goto label_48;\nlabel_112:\n    rax = rdx - 1;\n    *((rsp + 0x58)) = r10d;\n    r15d = 0;\n    *((rsp + 0x48)) = rax;\n    *((rsp + 0x60)) = rbx;\n    rbx = r15;\n    r15 = rdx;\n    do {\n        rbx++;\n        fputc (0x20, r14);\n    } while (*((rsp + 0x48)) != rbx);\n    r10d = *((rsp + 0x58));\n    rbx = *((rsp + 0x60));\n    rdx = r15;\n    goto label_49;\nlabel_90:\n    if (*((rsp + 0x48)) == 0) {\n        goto label_50;\n    }\n    ecx = 0;\n    r15 = rcx;\n    do {\n        r15++;\n        fputc (0x30, r14);\n    } while (*((rsp + 0x48)) != r15);\n    goto label_50;\nlabel_114:\n    esi = *((rsp + 0x4e0));\n    goto label_51;\nlabel_75:\n    rbx = r15;\n    goto label_20;\nlabel_69:\n    r9d = 0;\n    goto label_52;\n}\n"
        },
        {
            "funcName": "fcn_00404ba0",
            "funcStartAddr": "0x404ba0",
            "funcEndAddr": "0x404bbf",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x404ba0 */\n#include <stdint.h>\n \nvoid fcn_00404ba0 (int64_t arg4, int64_t arg5) {\n    int64_t var_17h;\n    rcx = arg4;\n    r8 = arg5;\n    *((rsp + 0x17)) = 0;\n    fcn_00403280 (rdi, rsi, rdx, 0, rsp + 0x1f, rcx);\n}\n"
        },
        {
            "funcName": "fcn_00404bc0",
            "funcStartAddr": "0x404bc0",
            "funcEndAddr": "0x404bfa",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x404bc0 */\n#include <stdint.h>\n \nuint64_t fcn_00404bc0 (int64_t arg1) {\n    signed int64_t var_8h;\n    rdi = arg1;\n    rsi = rdi;\n    rbx = rdi;\n    edi = 0;\n    eax = clock_gettime ();\n    if (eax != 0) {\n        esi = 0;\n        rdi = rsp;\n        gettimeofday ();\n        rax = *(rsp);\n        *(rbx) = rax;\n        rax = *((rsp + 8)) * 0x3e8;\n        *((rbx + 8)) = rax;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00404c00",
            "funcStartAddr": "0x404c00",
            "funcEndAddr": "0x404c9c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x404c00 */\n#include <stdint.h>\n \nint64_t fcn_00404c00 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = rsi + 0x14;\n    *((rsi + 0x14)) = 0;\n    r8d = 0x30;\n    rsi = 0xcccccccccccccccd;\n    r9 = 0x6666666666666667;\n    if (rdi < 0) {\n        goto label_0;\n    }\n    do {\n        rax = rdi;\n        rcx--;\n        rdx:rax = rax * rsi;\n        rdx >>= 3;\n        rax = rdx * 5;\n        rax += rax;\n        rdi -= rax;\n        edi += 0x30;\n        *(rcx) = dil;\n        rdi = rdx;\n    } while (rdx != 0);\n    rax = rcx;\n    return rax;\n    do {\n        rcx = rsi;\nlabel_0:\n        rax = rdi;\n        rsi = rcx - 1;\n        rdx:rax = rax * r9;\n        rax = rdi;\n        rax >>= 0x3f;\n        rdx >>= 2;\n        rdx -= rax;\n        rax = rdx * 5;\n        eax = r8 + rax*2;\n        eax -= edi;\n        rdi = rdx;\n        *((rcx - 1)) = al;\n    } while (rdx != 0);\n    rcx -= 2;\n    *((rsi - 1)) = 0x2d;\n    rax = rcx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00404ca0",
            "funcStartAddr": "0x404ca0",
            "funcEndAddr": "0x404e1e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x404ca0 */\n#include <stdint.h>\n \nint64_t fcn_00404ca0 (int64_t arg_8h, int64_t arg_10h, int64_t arg_18h, uint32_t arg1, int64_t arg3, int64_t arg7) {\n    rdi = arg1;\n    rdx = arg3;\n    xmm0 = arg7;\n    rax = *((rdi + 0xa8));\n    r8 = *((rsp + 0x10));\n    r9 = *((rsp + 0x18));\n    if (rax != 0) {\n        if (*((rdi + 0x30)) != 0) {\n            goto label_0;\n        }\n        if (*((rdi + 0xa1)) != 0) {\n            goto label_0;\n        }\n        if (*((rdi + 0xc8)) == 0) {\n            if (r9 <= 2) {\n                goto label_1;\n            }\n        }\n        __asm (\"movdqu xmm0, xmmword [rsp + 8]\");\n        rax = *((rsp + 0x18));\n        *((rdi + 0xd8)) = 1;\n        __asm (\"movups xmmword [rdi + 0x20], xmm0\");\n        *((rdi + 0x30)) = rax;\n        return rax;\n    }\nlabel_0:\n    if (r9 > 4) {\n        rax++;\n        r10 = r8;\n        r9 -= 4;\n        rsi = 0xa3d70a3d70a3d70b;\n        *((rdi + 0xa8)) = rax;\n        rax = r8;\n        r10 >>= 0x3f;\n        rdx:rax = rax * rsi;\n        *((rdi + 0x30)) = r9;\n        rcx = rdx + r8;\n        rdx = r8;\n        rcx >>= 6;\n        rcx -= r10;\n        rax = rcx * 5;\n        rax *= 5;\n        rax <<= 2;\n        rdx -= rax;\n        rax = rcx;\n        *((rdi + 0x40)) = rdx;\n        rdx:rax = rax * rsi;\n        rax = rcx;\n        rax >>= 0x3f;\n        rsi = rdx + rcx;\n        rdx = 0x346dc5d63886594b;\n        rsi >>= 6;\n        rsi -= rax;\n        rax = rsi * 5;\n        rax *= 5;\n        rax <<= 2;\n        rcx -= rax;\n        rax = r8;\n        rdx:rax = rax * rdx;\n        *((rdi + 0x38)) = rcx;\n        rdx >>= 0xb;\n        rdx -= r10;\n        *((rdi + 0x28)) = rdx;\n        return rax;\n    }\n    *((rdi + 0xc8))++;\n    if (r9 <= 2) {\n        goto label_2;\n    }\n    rdx = 0xa3d70a3d70a3d70b;\n    rax = r8;\n    rdx:rax = rax * rdx;\n    rax = r8;\n    rax >>= 0x3f;\n    rdx += r8;\n    rdx >>= 6;\n    rdx -= rax;\n    rax = rdx * 5;\n    *((rdi + 0x48)) = rdx;\n    rax *= 5;\n    rax <<= 2;\n    r8 -= rax;\n    *((rdi + 0x50)) = r8;\n    do {\n        *((rdi + 0x58)) = 0;\n        *((rdi + 0x60)) = 0;\n        *((rdi + 0x1c)) = 2;\n        return rax;\nlabel_1:\n        *((rdi + 0xc8)) = 1;\nlabel_2:\n        *((rdi + 0x48)) = r8;\n        *((rdi + 0x50)) = 0;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00404e20",
            "funcStartAddr": "0x404e20",
            "funcEndAddr": "0x404f19",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x404e20 */\n#include <stdint.h>\n \nint64_t fcn_00404e20 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    eax = edi;\n    edx = 0x91a2b3c5;\n    ecx = edi;\n    edx:eax = eax * edx;\n    eax = edi;\n    ecx >>= 0x1f;\n    eax >>= 0x1f;\n    r12 = rsi;\n    ecx &= 2;\n    r8d = rcx + 0x2b;\n    ecx = \"%c%02d\";\n    esi = 1;\n    ebx = rdx + rdi;\n    rdx = 0xffffffffffffffff;\n    rdi = r12;\n    ebx >>= 0xb;\n    ebx -= eax;\n    eax = ebx;\n    eax >>= 0x1f;\n    r9d = eax;\n    r9d ^= ebx;\n    ebx *= 0xe10;\n    r9d -= eax;\n    eax = 0;\n    sprintf_chk ();\n    ebp -= ebx;\n    if (ebp == 0) {\n        goto label_0;\n    }\n    rax = (int64_t) eax;\n    ecx = 0x88888889;\n    r8d = 0xcccccccd;\n    rsi = r12 + rax;\n    eax = ebp;\n    eax >>= 0x1f;\n    *(rsi) = 0x3a;\n    ebp ^= eax;\n    ebp -= eax;\n    eax = ebp;\n    edx:eax = eax * ecx;\n    eax = ebp;\n    ecx = edx;\n    edi = edx;\n    edx = 0x1b4e81b5;\n    edx:eax = eax * edx;\n    ecx >>= 5;\n    edi >>= 5;\n    eax = ecx;\n    edi *= 0x3c;\n    edx >>= 6;\n    edx += 0x30;\n    *((rsi + 1)) = dl;\n    edx:eax = eax * r8d;\n    edx >>= 3;\n    eax = rdx * 5;\n    eax += eax;\n    ecx -= eax;\n    rax = rsi + 3;\n    ecx += 0x30;\n    ebp -= edi;\n    *((rsi + 2)) = cl;\n    edi = ebp;\n    if (ebp != 0) {\n        goto label_1;\n    }\n    *(rax) = 0;\n    do {\nlabel_0:\n        rax = r12;\n        return rax;\nlabel_1:\n        eax = ebp;\n        *((rsi + 3)) = 0x3a;\n        edx:eax = eax * r8d;\n        edx >>= 3;\n        eax = rdx + 0x30;\n        edx = rdx * 5;\n        edx += edx;\n        *((rsi + 4)) = al;\n        rax = rsi + 6;\n        edi -= edx;\n        edi += 0x30;\n        *((rsi + 5)) = dil;\n        *(rax) = 0;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00404f20",
            "funcStartAddr": "0x404f20",
            "funcEndAddr": "0x404f8e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x404f20 */\n#include <stdint.h>\n \nint64_t fcn_00404f20 (uint32_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    eax = edi;\n    edx = 0x51eb851f;\n    r9d = edi;\n    edx:eax = eax * edx;\n    eax = edi;\n    ecx = 0;\n    rbx = rsi;\n    eax >>= 0x1f;\n    esi = 1;\n    edx >>= 5;\n    r8d = edx;\n    r8d -= eax;\n    eax = r8d * 0x64;\n    r8d += 0x13;\n    r9d -= eax;\n    eax = r8d;\n    edx = r9d;\n    eax >>= 0x1f;\n    edx >>= 0x1f;\n    r8d ^= eax;\n    r9d ^= edx;\n    rdi = rbx;\n    cl = (edi >= 0xfffff894) ? 1 : 0;\n    r9d -= edx;\n    r8d -= eax;\n    rdx = 0xffffffffffffffff;\n    rcx += str.__02d_02d;\n    eax = 0;\n    sprintf_chk ();\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00404f90",
            "funcStartAddr": "0x404f90",
            "funcEndAddr": "0x40504e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x404f90 */\n#include <stdint.h>\n \nuint64_t fcn_00404f90 (int64_t arg_e0h, int64_t arg1, int64_t arg10, int64_t arg11, size_t arg2, uint32_t arg3, int64_t arg4, int64_t arg5, int64_t arg6, int64_t arg7, int64_t arg8, int64_t arg9) {\n    int64_t var_8h;\n    int64_t var_ch;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    size_t var_28h;\n    uint32_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    int64_t var_50h;\n    int64_t var_60h;\n    int64_t var_70h;\n    int64_t var_80h;\n    int64_t var_90h;\n    int64_t var_a0h;\n    int64_t var_b0h;\n    int64_t var_c0h;\n    rdi = arg1;\n    xmm3 = arg10;\n    xmm4 = arg11;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    xmm2 = arg9;\n    rbx = rdi;\n    *((rsp + 0x28)) = rsi;\n    *((rsp + 0x30)) = rdx;\n    *((rsp + 0x38)) = rcx;\n    *((rsp + 0x40)) = r8;\n    *((rsp + 0x48)) = r9;\n    if (al != 0) {\n        *((rsp + 0x50)) = xmm0;\n        *((rsp + 0x60)) = xmm1;\n        *((rsp + 0x70)) = xmm2;\n        *((rsp + 0x80)) = xmm3;\n        *((rsp + 0x90)) = xmm4;\n        *((rsp + 0xa0)) = xmm5;\n        *((rsp + 0xb0)) = xmm6;\n        *((rsp + 0xc0)) = xmm7;\n    }\n    fwrite (\"date: \", 1, 6, *(obj.stderr));\n    rax = rsp + 0xe0;\n    *((rsp + 0x10)) = rax;\n    rax = rsp + 0x20;\n    *((rsp + 8)) = 8;\n    *((rsp + 0xc)) = 0x30;\n    *((rsp + 0x18)) = rax;\n    fcn_0040e010 (*(obj.stderr), rbx, rsp + 8);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405050",
            "funcStartAddr": "0x405050",
            "funcEndAddr": "0x4050bb",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x405050 */\n#include <stdint.h>\n \nuint64_t fcn_00405050 (int64_t arg2, uint32_t arg4) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    rsi = arg2;\n    rcx = arg4;\n    rbx = rsi;\n    *((rsp + 8)) = rcx;\n    while (rax != 0) {\n        ecx = *(rbx);\n        eax = *((rbx + 4));\n        ecx ^= *(rdx);\n        eax ^= *((rdx + 4));\n        ecx |= eax;\n        eax = *((rbx + 8));\n        eax ^= *((rdx + 8));\n        ecx |= eax;\n        eax = *((rbx + 0xc));\n        eax ^= *((rdx + 0xc));\n        ecx |= eax;\n        eax = *((rbx + 0x10));\n        eax ^= *((rdx + 0x10));\n        ecx |= eax;\n        eax = *((rbx + 0x14));\n        eax ^= *((rdx + 0x14));\n        ecx |= eax;\n        al = (ecx == 0) ? 1 : 0;\nlabel_0:\n        return eax;\n        rax = fcn_0040de20 (rdi, rsp + 8, rsp + 0x10);\n        rdx = rax;\n    }\n    eax = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_004050c0",
            "funcStartAddr": "0x4050c0",
            "funcEndAddr": "0x4050f5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x4050c0 */\n#include <stdint.h>\n \nint32_t fcn_004050c0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    edi ^= 1;\n    r8 = rdx;\n    rcx = rsi;\n    edi = (int32_t) dil;\n    esi = 1;\n    eax = 0;\n    rdx = rdi + str___ld__s;\n    rdi = stderr;\n    fprintf_chk ();\n    eax = 1;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00405100",
            "funcStartAddr": "0x405100",
            "funcEndAddr": "0x4051b5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x405100 */\n#include <stdint.h>\n \nint64_t fcn_00405100 (int64_t arg1, int64_t arg3, signed int64_t arg4, int64_t arg5) {\n    rdi = arg1;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = rdx;\n    if (rcx > 2) {\n        goto label_3;\n    }\n    if (r8 < 0) {\n        goto label_4;\n    }\nlabel_1:\n    ecx = 0;\n    r9 *= 0x3c;\n    __asm (\"seto cl\");\n    if (sil != 0) {\n        goto label_5;\n    }\n    edx = 0;\n    r9 += r8;\n    __asm (\"seto dl\");\n    do {\n        eax = 0;\n        ecx |= edx;\n        if (ecx == 0) {\nlabel_0:\n            rdx = r9 + 0x5a0;\n            eax = 0;\n            if (rdx > 0xb40) {\n                goto label_6;\n            }\n            r9d *= 0x3c;\n            eax = 1;\n            *(rdi) = r9d;\n        }\nlabel_6:\n        return eax;\nlabel_5:\n        edx = 0;\n        r9 -= r8;\n        __asm (\"seto dl\");\n    } while (1);\nlabel_4:\n    ecx = 0;\nlabel_2:\n    rax = r9;\n    rax <<= 4;\n    rax -= r9;\n    r9 = rcx + rax*4;\n    goto label_0;\nlabel_3:\n    if (r8 >= 0) {\n        goto label_1;\n    }\n    rdx = 0xa3d70a3d70a3d70b;\n    rax = r9;\n    rcx = r9;\n    rdx:rax = rax * rdx;\n    rax = r9;\n    rax >>= 0x3f;\n    rdx += r9;\n    rdx >>= 6;\n    rdx -= rax;\n    rax = rdx * 5;\n    r9 = rdx;\n    rax *= 5;\n    rax <<= 2;\n    rcx -= rax;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_004051c0",
            "funcStartAddr": "0x4051c0",
            "funcEndAddr": "0x40527a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x4051c0 */\n#include <stdint.h>\n \nuint64_t fcn_004051c0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r12 = rdi;\n    esi = 0x4148d9;\n    ebx = 0x415ee0;\n    while (eax != 0) {\n        rbx += 0x10;\n        rsi = *(rbx);\n        if (rsi == 0) {\n            goto label_3;\n        }\n        eax = strcmp (rbp, rsi);\n    }\nlabel_0:\n    rax = rbx;\n    return rax;\nlabel_3:\n    rsi = *((r12 + 0xe8));\n    rbx = r12 + 0xe8;\n    if (rsi != 0) {\n        goto label_4;\n    }\nlabel_1:\n    ebx = 0x415be0;\n    esi = 0x4148dd;\n    while (eax != 0) {\n        rbx += 0x10;\n        rsi = *(rbx);\n        if (rsi == 0) {\n            goto label_5;\n        }\n        eax = strcmp (rbp, rsi);\n    }\n    goto label_0;\nlabel_2:\n    rbx += 0x10;\n    rsi = *(rbx);\n    if (rsi == 0) {\n        goto label_1;\n    }\nlabel_4:\n    eax = strcmp (rbp, rsi);\n    if (eax != 0) {\n        goto label_2;\n    }\n    rax = rbx;\n    return rax;\nlabel_5:\n    ebx = 0;\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405280",
            "funcStartAddr": "0x405280",
            "funcEndAddr": "0x405405",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x405280 */\n#include <stdint.h>\n \nuint64_t fcn_00405280 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edx = 5;\n    rbx = rsi;\n    rax = dcgettext (0, \"parsed %s part: \");\n    eax = 0;\n    fcn_00404f90 (rax, rbp, rdx, rcx, r8, r9);\n    rsi = *((rbx + 0x68));\n    if (rsi != 0) {\n        goto label_3;\n    }\n    rsi = *((rbx + 0x70));\n    if (rsi == 0) {\n        goto label_4;\n    }\nlabel_1:\n    al = fcn_004050c0 (0, rsi, \"month(s)\");\n    rsi = *((rbx + 0x78));\n    edi = (int32_t) al;\nlabel_2:\n    while (rsi != 0) {\n        al = fcn_004050c0 (rdi, rsi, \"day(s)\");\n        edi = (int32_t) al;\nlabel_0:\n        rsi = *((rbx + 0x80));\n        if (rsi != 0) {\n            al = fcn_004050c0 (rdi, rsi, \"hour(s)\");\n            edi = (int32_t) al;\n        }\n        rsi = *((rbx + 0x88));\n        if (rsi != 0) {\n            al = fcn_004050c0 (rdi, rsi, \"minutes\");\n            edi = (int32_t) al;\n        }\n        rsi = *((rbx + 0x90));\n        if (rsi != 0) {\n            al = fcn_004050c0 (rdi, rsi, 0x4149fd);\n            edi = (int32_t) al;\n        }\n        rsi = *((rbx + 0x98));\n        if (rsi != 0) {\n            fcn_004050c0 (rdi, rsi, \"nanoseconds\");\n        }\n        rsi = stderr;\n        edi = 0xa;\n        void (*0x401b30)() ();\nlabel_4:\n        rsi = *((rbx + 0x78));\n        edi = 0;\n    }\n    if (*((rbx + 0x80)) != 0) {\n        goto label_0;\n    }\n    if (*((rbx + 0x88)) != 0) {\n        goto label_0;\n    }\n    if (*((rbx + 0x90)) != 0) {\n        goto label_0;\n    }\n    eax = *((rbx + 0x98));\n    if (eax != 0) {\n        goto label_0;\n    }\n    rbx = stderr;\n    edx = 5;\n    rax = dcgettext (0, \"today/this/now\\n\");\n    rsi = rbx;\n    rdi = rax;\n    void (*0x401ae0)() ();\nlabel_3:\n    al = fcn_004050c0 (0, rsi, \"year(s)\");\n    rsi = *((rbx + 0x70));\n    edi = (int32_t) al;\n    if (rsi != 0) {\n        goto label_1;\n    }\n    rsi = *((rbx + 0x78));\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_00405410",
            "funcStartAddr": "0x405410",
            "funcEndAddr": "0x4054a5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x405410 */\n#include <stdint.h>\n \nuint64_t fcn_00405410 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = rdi;\n    r12 = rsi;\n    r9d = 0;\n    r8d = 0;\n    rbx = rdx;\n    edx = \"(Y-M-D) %Y-%m-%d %H:%M:%S\";\n    rax = fcn_0040ff70 (rbx, 0x64);\n    if (r12 != 0) {\n        if (eax > 0x63) {\n            goto label_0;\n        }\n        if (*((r12 + 0xd0)) != 0) {\n            goto label_1;\n        }\n    }\nlabel_0:\n    rax = rbx;\n    return rax;\nlabel_1:\n    rax = fcn_00404e20 (*((r12 + 0x18)), rsp);\n    esi = 0x64;\n    rdi = (int64_t) ebp;\n    r8d = \" TZ=%s\";\n    esi -= ebp;\n    r9 = rax;\n    rdi += rbx;\n    rcx = 0xffffffffffffffff;\n    rsi = (int64_t) esi;\n    edx = 1;\n    eax = 0;\n    snprintf_chk ();\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004054b0",
            "funcStartAddr": "0x4054b0",
            "funcEndAddr": "0x40559d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x4054b0 */\n#include <stdint.h>\n \nuint64_t fcn_004054b0 (uint32_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rdi;\n    if (*((rdi + 0xe0)) == 0) {\n        goto label_0;\n    }\n    r9 = *((rdi + 8));\n    rax = r9 + 1;\n    if (rax > 0xd) {\n        goto label_1;\n    }\n    rdx = rax * 5;\n    eax = 0;\n    eax = snprintf (rbp, 0x64, 0x4144ac, rax + rdx*2 + str.last);\n    rdx = *((rbx + 0x10));\n    if (edx > 6) {\n        goto label_2;\n    }\n    if (eax > 0x63) {\n        goto label_2;\n    }\n    do {\n        ecx = 0;\n        esi = 0x64;\n        cl = (eax == 0) ? 1 : 0;\n        esi -= eax;\n        rax = (int64_t) eax;\n        rsi = (int64_t) esi;\n        rdi = rbp + rax;\n        goto label_3;\nlabel_1:\n        edx = 1;\n        r8d = 0x4149bc;\n        rdi = rbp;\n        eax = 0;\n        rcx = 0xffffffffffffffff;\n        esi = 0x64;\n        snprintf_chk ();\n        rdx = *((rbx + 0x10));\n    } while (edx <= 6);\n    do {\nlabel_2:\n        rax = rbp;\n        return rax;\nlabel_0:\n        *(rsi) = 0;\n        rdx = *((rdi + 0x10));\n    } while (edx > 6);\n    rdi = rsi;\n    ecx = 1;\n    esi = 0x64;\nlabel_3:\n    r9 = rdx*4 + 0x415980;\n    r8 = rcx + 0x4144ab;\n    edx = 1;\n    eax = 0;\n    rcx = 0xffffffffffffffff;\n    snprintf_chk ();\n    rax = rbp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004055a0",
            "funcStartAddr": "0x4055a0",
            "funcEndAddr": "0x405940",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x4055a0 */\n#include <stdint.h>\n \nuint64_t fcn_004055a0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edx = 5;\n    rbx = rsi;\n    rax = dcgettext (0, \"parsed %s part: \");\n    eax = 0;\n    fcn_00404f90 (rax, rbp, rdx, rcx, r8, r9);\n    if (*((rbx + 0xa8)) != 0) {\n        if (*((rbx + 0xda)) == 0) {\n            goto label_9;\n        }\n    }\n    eax = *((rbx + 0xdf));\n    edx = 0;\n    if (*((rbx + 0xd8)) != al) {\nlabel_1:\n        rbp = *((rbx + 0x28));\n        edx = 5;\n        rax = dcgettext (0, \"year: %04ld\");\n        rdi = stderr;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n        eax = *((rbx + 0xd8));\n        edx = 1;\n        *((rbx + 0xdf)) = al;\n    }\nlabel_0:\n    if (*((rbx + 0xc8)) != 0) {\n        if (*((rbx + 0xdd)) == 0) {\n            goto label_10;\n        }\n    }\n    if (*((rbx + 0xb0)) != 0) {\n        if (*((rbx + 0xdb)) != 0) {\n            goto label_2;\n        }\n        if (dl != 0) {\n            goto label_11;\n        }\nlabel_3:\n        r13d = *((rbx + 0x10));\n        r12 = *((rbx + 8));\n        rax = fcn_004054b0 (rbx, rsp);\n        edx = 5;\n        rax = dcgettext (0, \"%s (day ordinal=%ld number=%d)\");\n        r9d = r13d;\n        r8 = r12;\n        rcx = rbp;\n        rdi = stderr;\n        rdx = rax;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        *((rbx + 0xdb)) = 1;\n        edx = 1;\n    }\nlabel_2:\n    if (*((rbx + 0xb8)) == 0) {\n        goto label_12;\n    }\n    if (*((rbx + 0xdc)) != 0) {\n        goto label_12;\n    }\n    eax = 0x4179a4;\n    ecx = *((rbx + 0x14));\n    esi = 1;\n    r8d = \" DST\";\n    rdi = stderr;\n    if (*((rbx + 0xc0)) == 0) {\n        r8 = rax;\n    }\n    edx ^= 1;\n    eax = 0;\n    edx = (int32_t) dl;\n    rdx += str._isdst_d_s;\n    fprintf_chk ();\n    *((rbx + 0xdc)) = 1;\n    if (*((rbx + 0xd0)) != 0) {\n        if (*((rbx + 0xde)) == 0) {\n            goto label_13;\n        }\n    }\n    if (*((rbx + 0xa0)) == 0) {\n        goto label_4;\n    }\nlabel_5:\n    rbx = *((rbx + 0x58));\n    do {\n        fputc (0x20, *(obj.stderr));\n        goto label_14;\nlabel_12:\n        if (*((rbx + 0xd0)) != 0) {\n            if (*((rbx + 0xde)) == 0) {\n                goto label_15;\n            }\n        }\n        if (*((rbx + 0xa0)) == 0) {\n            goto label_4;\n        }\n        rbx = *((rbx + 0x58));\n    } while (dl != 0);\nlabel_14:\n    edx = 5;\n    rax = dcgettext (0, \"number of seconds: %ld\");\n    rdi = stderr;\n    rcx = rbx;\n    esi = 1;\n    rdx = rax;\n    eax = 0;\n    fprintf_chk ();\nlabel_4:\n    eax = fputc (0xa, *(obj.stderr));\n    return rax;\nlabel_9:\n    rcx = *((rbx + 0x28));\n    r9 = *((rbx + 0x40));\n    edx = \"(Y-M-D) %04ld-%02ld-%02ld\";\n    eax = 0;\n    r8 = *((rbx + 0x38));\n    rdi = stderr;\n    esi = 1;\n    fprintf_chk ();\n    *((rbx + 0xda)) = 1;\n    edx = 1;\n    eax = *((rbx + 0xdf));\n    if (*((rbx + 0xd8)) == al) {\n        goto label_0;\n    }\n    eax = fputc (0x20, *(obj.stderr));\n    goto label_1;\nlabel_10:\n    edx ^= 1;\n    rcx = *((rbx + 0x48));\n    r9 = *((rbx + 0x58));\n    esi = 1;\n    edx = (int32_t) dl;\n    r8 = *((rbx + 0x50));\n    rdi = stderr;\n    eax = 0;\n    rdx += str.__02ld:_02ld:_02ld;\n    fprintf_chk ();\n    rcx = *((rbx + 0x60));\n    if (rcx != 0) {\n        goto label_16;\n    }\nlabel_6:\n    if (*((rbx + 0x1c)) == 1) {\n        goto label_17;\n    }\nlabel_8:\n    *((rbx + 0xdd)) = 1;\n    edx = 1;\n    if (*((rbx + 0xb0)) == 0) {\n        goto label_2;\n    }\n    edx = *((rbx + 0xdb));\n    if (dl != 0) {\n        goto label_2;\n    }\nlabel_11:\n    fputc (0x20, *(obj.stderr));\n    goto label_3;\nlabel_15:\n    edx ^= 1;\n    ebp = (int32_t) dl;\n    rbp += str._UTC_s;\nlabel_7:\n    rax = fcn_00404e20 (*((rbx + 0x18)), rsp);\n    rdi = stderr;\n    rdx = rbp;\n    esi = 1;\n    rcx = rax;\n    eax = 0;\n    eax = fprintf_chk ();\n    *((rbx + 0xde)) = 1;\n    if (*((rbx + 0xa0)) == 0) {\n        goto label_4;\n    }\n    goto label_5;\nlabel_16:\n    rdi = stderr;\n    edx = \".%09d\";\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_6;\nlabel_13:\n    goto label_7;\nlabel_17:\n    fwrite (0x41499a, 1, 2, *(obj.stderr));\n    goto label_8;\n}\n"
        },
        {
            "funcName": "fcn_00405940",
            "funcStartAddr": "0x405940",
            "funcEndAddr": "0x407bb2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x405940 */\n#include <stdint.h>\n \nint64_t fcn_00405940 (int64_t arg1, int64_t arg10, int64_t arg11, int64_t arg7, int64_t arg8, int64_t arg9) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    uint32_t var_24h;\n    int64_t var_28h;\n    int64_t var_sp_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    int64_t var_50h;\n    int64_t var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    int64_t var_70h;\n    int64_t var_78h;\n    int64_t var_80h;\n    uint32_t var_83h;\n    int64_t var_a0h;\n    int64_t var_d0h;\n    int64_t var_d8h;\n    int64_t var_e0h;\n    int64_t var_f0h;\n    int64_t var_100h;\n    int64_t var_110h;\n    int64_t var_118h;\n    int64_t var_120h;\n    int64_t var_128h;\n    int64_t var_130h;\n    int64_t var_138h;\n    int64_t var_140h;\n    int64_t var_144h;\n    int64_t var_150h;\n    rdi = arg1;\n    xmm3 = arg10;\n    xmm4 = arg11;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    xmm2 = arg9;\n    r15d = 0;\n    ecx = 0;\n    r11d = 0xfffffffe;\n    r8 = (int64_t) r15d;\n    r9 = rdi;\n    r13d = 0x26;\n    r15d = (int32_t) r13b;\n    r12 = rsp + 0xa0;\n    *((rsp + 0xa0)) = cx;\n    rbx = rsp + 0x150;\n    r14 = r12;\n    *((rsp + 0x24)) = 0;\n    if (r15d == 0xffffffa3) {\n        goto label_52;\n    }\n    do {\n        if (ebp == 0xfffffffe) {\n            goto label_53;\n        }\nlabel_6:\n        if (ebp <= 0) {\n            goto label_8;\n        }\n        if (ebp <= 0x115) {\n            goto label_50;\n        }\n        r15d += 2;\n        eax = 2;\nlabel_2:\n        if (r15d > 0x70) {\n            goto label_52;\n        }\n        r10 = (int64_t) r15d;\n        edx = *((r10 + 0x416400));\n        if (edx != eax) {\n            goto label_52;\n        }\n        r8d = *((r10 + str.OCDEFGH:IdkJKenL12efqM_N___AB___ABeeoZ_jpXo));\n        if (r8d == 0) {\n            goto label_54;\n        }\n        eax = *((rsp + 0x24));\n        rcx = r14;\n        eax += 0xffffffff;\n        rbx += 0x38;\n        *((rsp + 0x24)) = eax;\n        rax = *((rsp + 0x28));\n        *((rsp + 0xd8)) = rax;\n        rax = *((rsp + 0x30));\n        __asm (\"movdqa xmm7, xmmword [rsp + 0xd0]\");\n        *((rsp + 0xe0)) = rax;\n        rax = *((rsp + 0x100));\n        __asm (\"movdqa xmm0, xmmword [rsp + 0xe0]\");\n        __asm (\"movups xmmword [rbx], xmm7\");\n        __asm (\"movdqa xmm7, xmmword [rsp + 0xf0]\");\n        *((rbx + 0x30)) = rax;\n        __asm (\"movups xmmword [rbx + 0x10], xmm0\");\n        __asm (\"movups xmmword [rbx + 0x20], xmm7\");\nlabel_15:\n        r14 = rcx + 2;\n        rax = r12 + 0x26;\n        *((rcx + 2)) = r8w;\n        if (r14 >= rax) {\n            goto label_55;\n        }\n        if (r8d == 0xc) {\n            goto label_56;\n        }\n        rax = (int64_t) r8d;\n        r13d = *((rax + 0x4165c0));\n        r15d = (int32_t) r13b;\n    } while (r15d != 0xffffffa3);\nlabel_52:\n    ecx = *((r8 + 0x416540));\n    edx = ecx;\n    if (ecx != 0) {\n        goto label_57;\n    }\n    if (*((rsp + 0x24)) != 3) {\n        goto label_3;\n    }\n    if (ebp > 0) {\n        goto label_58;\n    }\n    if (ebp != 0) {\n        goto label_3;\n    }\n    do {\nlabel_17:\n        eax = 1;\nlabel_38:\n        return rax;\nlabel_1:\n        r8d = *((rax + str.OCDEFGH:IdkJKenL12efqM_N___AB___ABeeoZ_jpXo));\n        if (r8d != 0) {\n            goto label_59;\n        }\nlabel_0:\n    } while (r14 == r12);\n    r14 -= 2;\n    r8 = *(r14);\n    rbx -= 0x38;\nlabel_3:\n    eax = *((r8 + 0x4165c0));\n    if (eax == 0xffffffa3) {\n        goto label_0;\n    }\n    eax++;\n    if (eax > 0x70) {\n        goto label_0;\n    }\n    rax = (int64_t) eax;\n    if (*((rax + 0x416400)) != 1) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_57:\n    rcx = (int64_t) ecx;\n    eax = 1;\n    edx -= 4;\n    edi = *((rcx + 0x416340));\n    eax -= edi;\n    rsi = rdi;\n    rax = (int64_t) eax;\n    rdi = rax*8;\n    rdi -= rax;\n    rax = rbx + rdi*8;\n    rdi = *((rax + 0x30));\n    __asm (\"movdqu xmm1, xmmword [rax]\");\n    __asm (\"movdqu xmm2, xmmword [rax + 0x10]\");\n    __asm (\"movdqu xmm3, xmmword [rax + 0x20]\");\n    r15 = *(rax);\n    r10 = *((rax + 8));\n    *((rsp + 0x140)) = rdi;\n    rdi = *((rax + 0x20));\n    r13 = *((rax + 0x10));\n    *((rsp + 0x110)) = xmm1;\n    r11 = *((rax + 0x18));\n    *((rsp + 0x120)) = xmm2;\n    *((rsp + 0x10)) = rdi;\n    rdi = *((rax + 0x28));\n    eax = *((rax + 0x30));\n    *((rsp + 0x130)) = xmm3;\n    *((rsp + 8)) = rdi;\n    *((rsp + 0x18)) = eax;\n    if (dl > 0x57) {\n        goto label_60;\n    }\n    edx = (int32_t) dl;\n    /* switch table (88 cases) at 0x4156c0 */\nlabel_4:\n    rdx = rax + 1;\n    *(r9) = rdx;\n    ebp = *(rax);\n    if (bpl != 0) {\n        goto label_50;\n    }\nlabel_8:\n    eax = 0;\n    ebp = 0;\n    goto label_2;\nlabel_58:\n    goto label_3;\nlabel_53:\n    rax = *(r9);\n    edi = 1;\n    r11 = 0x3ffffff03ffffff;\n    ebp = *(rax);\n    ecx = ebp;\nlabel_11:\n    edx = ebp;\n    if (cl > 0x20) {\n        goto label_61;\n    }\n    rsi = rdi;\n    rsi <<= cl;\n    rcx = rsi;\n    rsi = 0x100003e00;\n    if ((rcx & rsi) == 0) {\n        goto label_62;\n    }\n    rsi = rax + 1;\n    do {\n        *(r9) = rsi;\n        ebp = *(rsi);\n        rax = rsi;\n        edx = ebp;\n        if (bpl > 0x20) {\n            goto label_61;\n        }\n        ecx = edx;\n        r10 = rdi;\n        rsi++;\n        r10 <<= cl;\n        rcx = r10;\n        r10 = 0x100003e00;\n    } while ((rcx & r10) != 0);\nlabel_62:\n    ecx = rbp - 0x30;\n    if (ecx <= 9) {\n        goto label_63;\n    }\n    ecx = rbp - 0x41;\n    if (ecx > 0x39) {\n        goto label_4;\n    }\nlabel_7:\n    rsi = rdi;\n    rsi <<= cl;\n    if ((rsi & r11) == 0) {\n        goto label_64;\n    }\n    rax = *(r9);\n    r13 = rsp + 0x80;\n    r11 = 0x3ffffff03ffffff;\n    rsi = r13;\n    rdi = r13 + 0x13;\n    rax++;\n    while ((r10 & r11) != 0) {\nlabel_5:\n        rax++;\n        if (rsi < rdi) {\n            *(rsi) = dl;\n            rsi++;\n        }\n        *(r9) = rax;\n        ecx = *(rax);\n        edx = ecx;\n        ecx -= 0x41;\n        if (ecx > 0x39) {\n            goto label_65;\n        }\n        r10 = rbp;\n        r10 <<= cl;\n    }\nlabel_65:\n    if (dl == 0x2e) {\n        goto label_5;\n    }\n    *(rsi) = 0;\n    eax = *((rsp + 0x80));\n    rcx = r13;\n    if (al == 0) {\n        goto label_66;\n    }\n    do {\n        edx = (int32_t) al;\n        esi = rdx - 0x61;\n        edx -= 0x20;\n        if (esi < 0x1a) {\n            eax = edx;\n        }\n        rcx++;\n        *((rcx - 1)) = al;\n        eax = *(rcx);\n    } while (al != 0);\nlabel_66:\n    *((rsp + 0x10)) = rbx;\n    esi = 0x4149c0;\n    rbx = rbp;\n    *((rsp + 8)) = r8d;\n    while (eax != 0) {\n        rbx += 0x10;\n        rsi = *(rbx);\n        if (rsi == 0) {\n            goto label_67;\n        }\n        eax = strcmp (r13, rsi);\n    }\n    r9 = rbp;\n    r8 = *((rsp + 8));\n    rbx = *((rsp + 0x10));\n    rdx = *((rbp + 0xc));\n    ebp = *((rbp + 8));\nlabel_41:\n    *((rsp + 0xd0)) = rdx;\n    goto label_6;\nlabel_61:\n    ecx = rdx - 0x2b;\n    esi = rbp - 0x30;\n    ecx &= 0xfffffffd;\n    if (esi <= 9) {\n        goto label_68;\n    }\n    if (cl == 0) {\n        goto label_69;\n    }\n    ecx = rbp - 0x41;\n    if (ecx <= 0x39) {\n        goto label_7;\n    }\nlabel_64:\n    if (dl != 0x28) {\n        goto label_4;\n    }\n    rsi = *(r9);\n    ecx = 0;\n    goto label_70;\nlabel_9:\n    dl = (dl == 0x29) ? 1 : 0;\n    edx = (int32_t) dl;\n    rcx -= rdx;\nlabel_10:\n    if (rcx == 0) {\n        goto label_71;\n    }\n    rsi = rax;\nlabel_70:\n    rax = rsi + 1;\n    *(r9) = rax;\n    edx = *((rax - 1));\n    if (dl == 0) {\n        goto label_8;\n    }\n    if (dl != 0x28) {\n        goto label_9;\n    }\n    rcx++;\n    goto label_10;\nlabel_68:\n    al = (dl == 0x2d) ? 1 : 0;\n    if (cl != 0) {\n        goto label_63;\n    }\nlabel_14:\n    rax = *(r9);\n    esi -= esi;\n    esi &= 2;\n    rdx = rax + 1;\n    esi--;\n    do {\n        *(r9) = rdx;\n        ecx = *(rdx);\n        rax = rdx;\n        edx = ecx;\n        if (cl > 0x20) {\n            goto label_72;\n        }\n        r10 = rdi;\n        rdx = rax + 1;\n        r10 <<= cl;\n    } while ((r10 & rbp) != 0);\n    ebp = (int32_t) cl;\n    goto label_11;\nlabel_40:\n    *((rsp + 0xd0)) = 0;\nlabel_50:\n    rax = (int64_t) ebp;\n    eax = *((rax + 0x416640));\nlabel_12:\n    r15d += eax;\n    goto label_2;\nlabel_72:\n    ebp = (int32_t) cl;\n    r10d = rbp - 0x30;\n    if (r10d > 9) {\n        goto label_11;\n    }\nlabel_16:\n    r11 = rax;\n    ecx = 0;\n    edi = (int32_t) dl;\n    r10d = 0x30;\nlabel_13:\n    edx = 0x30;\n    ebp = rdi - 0x30;\n    edx -= edi;\n    if (esi == 0xffffffff) {\n    }\n    rdx = (int64_t) ebp;\n    rcx += rdx;\n    if (rcx overflow 0) {\n        goto label_47;\n    }\n    edi = *((r11 + 1));\n    rbp = r11 + 1;\n    r13d = rdi - 0x30;\n    edx = edi;\n    if (r13d <= 9) {\n        goto label_73;\n    }\n    edx &= 0xfffffffd;\n    if (dl != 0x2c) {\n        goto label_74;\n    }\n    edx = *((rbp + 1));\n    edx -= 0x30;\n    if (edx > 9) {\n        goto label_74;\n    }\n    rbp = r11 + 3;\n    r11d = *((r11 + 3));\n    eax = 8;\n    r13d = r11d;\n    do {\n        edx = rdx * 5;\n        edi = r11 - 0x30;\n        edx += edx;\n        if (edi <= 9) {\n            r11d = *((rbp + 1));\n            edx += edi;\n            rbp++;\n            r13d = r11d;\n            edi = r11 - 0x30;\n        }\n        eax--;\n    } while (eax != 0);\n    if (esi == 0xffffffff) {\n        goto label_75;\n    }\n    if (edi > 9) {\n        goto label_76;\n    }\n    do {\nlabel_19:\n        rbp++;\n        eax = *(rbp);\n        eax -= 0x30;\n    } while (eax <= 9);\n    if (esi >= 0) {\n        goto label_76;\n    }\n    if (edx == 0) {\n        goto label_76;\n    }\nlabel_20:\n    rax = 0x8000000000000000;\n    if (rcx == rax) {\n        goto label_47;\n    }\n    eax = 0x3b9aca00;\n    rcx--;\n    *(r9) = rbp;\n    eax -= edx;\n    *((rsp + 0xd0)) = rcx;\n    rax = (int64_t) eax;\n    *((rsp + 0x28)) = rax;\n    eax = 0x15;\n    goto label_12;\nlabel_73:\n    rdx = rcx * 0xa;\n    rcx = rdx;\n    if (eax overflow 0) {\n        goto label_47;\n    }\n    r11 = rbp;\n    goto label_13;\nlabel_69:\n    al = (dl == 0x2d) ? 1 : 0;\n    goto label_14;\nlabel_59:\n    rax = *((rsp + 0x28));\n    rbx += 0x38;\n    rcx = r14;\n    *((rsp + 0x24)) = 3;\n    *((rsp + 0xd8)) = rax;\n    rax = *((rsp + 0x30));\n    __asm (\"movdqa xmm0, xmmword [rsp + 0xd0]\");\n    *((rsp + 0xe0)) = rax;\n    rax = *((rsp + 0x100));\n    __asm (\"movups xmmword [rbx], xmm0\");\n    __asm (\"movdqa xmm0, xmmword [rsp + 0xe0]\");\n    *((rbx + 0x30)) = rax;\n    __asm (\"movups xmmword [rbx + 0x10], xmm0\");\n    __asm (\"movdqa xmm0, xmmword [rsp + 0xf0]\");\n    __asm (\"movups xmmword [rbx + 0x20], xmm0\");\n    goto label_15;\nlabel_74:\n    rdi = rbp;\n    edx = esi;\n    *(r9) = rbp;\n    rdi -= rax;\n    edx >>= 0x1f;\n    *((rsp + 0x28)) = rcx;\n    eax -= eax;\n    *((rsp + 0xd0)) = dl;\n    eax = ~eax;\n    *((rsp + 0x30)) = rdi;\n    eax += 0x14;\n    ebp -= ebp;\n    ebp = ~ebp;\n    ebp += 0x113;\n    goto label_12;\nlabel_71:\n    ebp = *((rsi + 1));\n    ecx = ebp;\n    goto label_11;\nlabel_54:\n    rax = *((rbx + 0x68));\n    __asm (\"movdqu xmm7, xmmword [rbx + 0x38]\");\n    rcx = r14;\n    rdx = rbx;\n    __asm (\"movdqu xmm0, xmmword [rbx + 0x48]\");\n    r15 = *((rbx + 0x38));\n    *((rsp + 0x110)) = xmm7;\n    __asm (\"movdqu xmm7, xmmword [rbx + 0x58]\");\n    r10 = *((rbx + 0x40));\n    r13 = *((rbx + 0x48));\n    *((rsp + 0x140)) = rax;\n    rax = *((rbx + 0x58));\n    r11 = *((rbx + 0x50));\n    *((rsp + 0x120)) = xmm0;\n    *((rsp + 0x130)) = xmm7;\n    *((rsp + 0x10)) = rax;\n    rax = *((rbx + 0x60));\n    *((rsp + 8)) = rax;\n    eax = *((rbx + 0x68));\n    *((rsp + 0x18)) = eax;\n    eax = 0xffffffe4;\nlabel_18:\n    rdi = *((rsp + 0x10));\n    esi = *((rsp + 0x18));\n    *((rsp + 0x110)) = r15;\n    rbx = rdx + 0x38;\n    *((rsp + 0x118)) = r10;\n    __asm (\"movdqa xmm4, xmmword [rsp + 0x110]\");\n    *((rsp + 0x130)) = rdi;\n    rdi = *((rsp + 8));\n    *((rsp + 0x120)) = r13;\n    *((rsp + 0x128)) = r11;\n    __asm (\"movdqa xmm5, xmmword [rsp + 0x120]\");\n    *((rsp + 0x138)) = rdi;\n    __asm (\"movdqa xmm6, xmmword [rsp + 0x130]\");\n    *((rsp + 0x140)) = esi;\n    rsi = *((rsp + 0x140));\n    __asm (\"movups xmmword [rdx + 0x38], xmm4\");\n    *((rdx + 0x68)) = rsi;\n    __asm (\"movups xmmword [rdx + 0x48], xmm5\");\n    __asm (\"movups xmmword [rdx + 0x58], xmm6\");\n    edx = *(rcx);\n    r8d += edx;\n    esi = edx;\n    if (r8d <= 0x70) {\n        r8 = (int64_t) r8d;\n        dx = *((r8 + 0x416400));\n        if (si == dx) {\n            goto label_77;\n        }\n    }\n    rax = (int64_t) eax;\n    r8 = *((rax + 0x416500));\n    goto label_15;\nlabel_63:\n    rax = *(r9);\n    esi = 0;\n    goto label_16;\n    eax = *((rbx + 0x30));\n    r8d = 0;\n    eax += *((r9 + 0x98));\n    __asm (\"seto r8b\");\n    *((r9 + 0x98)) = eax;\n    rax = *((r9 + 0x90));\n    rax += *((rbx + 0x28));\n    rdx = rax;\n    __asm (\"seto al\");\n    edi = 0;\n    *((r9 + 0x90)) = rdx;\n    rdx = *((r9 + 0x88));\n    eax = (int32_t) al;\n    rdx += *((rbx + 0x20));\n    __asm (\"seto dil\");\n    *((r9 + 0x88)) = rdx;\n    esi = 0;\n    rdx = *((r9 + 0x80));\n    rdx += *((rbx + 0x18));\n    __asm (\"seto sil\");\n    *((r9 + 0x80)) = rdx;\n    ecx = 0;\n    rdx = *((r9 + 0x78));\n    rdx += *((rbx + 0x10));\n    __asm (\"seto cl\");\n    *((r9 + 0x78)) = rdx;\n    rdx = *((r9 + 0x70));\n    *((rsp + 0x38)) = rcx;\n    ecx = 0;\n    rdx += *((rbx + 8));\n    __asm (\"seto cl\");\n    *((r9 + 0x70)) = rdx;\n    *((rsp + 0x40)) = rcx;\n    rdx = *((r9 + 0x68));\n    ecx = 0;\n    rdx += *(rbx);\n    __asm (\"seto cl\");\n    eax |= r8d;\n    *((r9 + 0x68)) = rdx;\n    eax |= edi;\n    edi = *((rsp + 0x40));\n    eax |= esi;\n    al |= *((rsp + 0x38));\n    dil |= al;\n    if (dil != 0) {\n        goto label_17;\n    }\n    if (rcx != 0) {\n        goto label_17;\n    }\n    *((r9 + 0xa1)) = 1;\n    rdx = rbx - 0x38;\n    rcx = r14 - 2;\n    r8d = 0xffffffa3;\n    eax = 0x10;\n    goto label_18;\n    rax = *((rbx - 0x38));\n    rdx = rbx - 0x70;\n    rcx = r14 - 4;\n    *((rsp + 0x144)) = 0;\n    r8d = 0xffffffa3;\n    *((rsp + 8)) = rax;\n    eax = *((rbx - 0x30));\n    *((rsp + 0x18)) = eax;\n    eax = 0x11;\nlabel_21:\n    r11d = 0;\n    r13d = 0;\n    r10d = 0;\n    r15d = 0;\n    *((rsp + 0x10)) = 0;\n    goto label_18;\nlabel_75:\n    if (edi > 9) {\n        goto label_78;\n    }\n    if (r13b != 0x30) {\n        goto label_79;\n    }\n    do {\n        rbp++;\n        eax = *(rbp);\n        edi = eax;\n        eax -= 0x30;\n        if (eax > 9) {\n            goto label_78;\n        }\n    } while (dil == 0x30);\nlabel_79:\n    eax = *(rbp);\n    edx++;\n    eax -= 0x30;\n    if (eax <= 9) {\n        goto label_19;\n    }\n    goto label_20;\nlabel_47:\n    eax = 2;\n    goto label_12;\n    *((rsp + 0x144)) = 0;\n    rax = *((rbx - 0x30));\nlabel_26:\n    *((rsp + 8)) = rax;\n    rdx = rbx - 0x70;\n    rcx = r14 - 4;\n    r8d = 0xffffffa3;\n    eax = 0x11;\nlabel_27:\n    *((rsp + 0x18)) = 0;\n    goto label_21;\n    *((r9 + 0x18)) = 0x6270;\n    rdx = rbx - 0x38;\n    rcx = r14 - 2;\n    r8d = 0xffffffa3;\n    eax = 0xc;\n    goto label_18;\n    rax = *(rbx);\nlabel_34:\n    *((r9 + 0x18)) = eax;\n    rdx = rbx - 0x38;\n    rcx = r14 - 2;\n    r8d = 0xffffffa3;\n    eax = 0xc;\n    goto label_18;\n    *((r9 + 0x14)) = 1;\n    rdx = rbx - 0x70;\n    rcx = r14 - 4;\n    r8d = 0xffffffa3;\n    *((r9 + 0xc0))++;\n    eax = 0xb;\n    goto label_18;\n    rax = *(rbx);\n    rdx = rbx - 0x38;\n    rcx = r14 - 2;\n    r8d = 0xffffffa3;\n    *((r9 + 0x14)) = eax;\n    eax = 0xb;\n    goto label_18;\n    r8 = *(rbx);\n    *((rsp + 0x48)) = r10;\n    esi = *((rbx - 0x38));\n    *((rsp + 0x40)) = r11;\n    *((r9 + 0xd0))++;\n    *((rsp + 0x38)) = r9;\n    al = fcn_00405100 (r9 + 0x18, rsi, *((rbx - 0x30)), *((rbx - 0x28)));\n    r9 = *((rsp + 0x38));\n    r11 = *((rsp + 0x40));\n    r10 = *((rsp + 0x48));\n    if (al == 0) {\n        goto label_17;\n    }\n    rdx = rbx - 0x70;\n    rcx = r14 - 4;\n    r8d = 0xffffffe5;\n    eax = 0xa;\n    goto label_18;\n    rax = *((rbx - 0x38));\n    rdx = *((rbx - 0xa0));\n    *((r9 + 0x1c)) = 2;\n    r8d = 0x14;\n    rcx = *((rbx - 0x110));\n    *((r9 + 0x58)) = rax;\n    rax = *((rbx - 0x30));\n    *((r9 + 0x48)) = rcx;\n    rcx = r14 - 0xc;\n    *((r9 + 0x50)) = rdx;\n    rdx = rbx - 0x150;\n    *((r9 + 0x60)) = rax;\n    eax = 8;\n    goto label_18;\n    r15 = *((rbx + 8));\n    rdx = rbx - 0x38;\n    rcx = r14 - 2;\n    r10d = 0;\n    r8d = 0xffffffa3;\n    eax = 0x15;\n    goto label_18;\n    rdx = rbx - 0x38;\n    rcx = r14 - 2;\n    eax = 0x11;\n    r11d = 0;\n    r8d = 0xffffffa3;\n    r13d = 0;\n    r10d = 0;\n    r15d = 0;\n    *((rsp + 0x144)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x10)) = 1;\n    goto label_18;\n    *((rsp + 0x144)) = 0;\n    rax = *((rbx - 0x30));\n    do {\n        *((rsp + 0x10)) = rax;\n        rdx = rbx - 0x70;\n        rcx = r14 - 4;\n        r8d = 0xffffffa3;\n        eax = 0x11;\nlabel_28:\n        r11d = 0;\n        r13d = 0;\n        r10d = 0;\n        r15d = 0;\n        *((rsp + 0x18)) = 0;\n        *((rsp + 8)) = 0;\n        goto label_18;\n        *((rsp + 0x144)) = 0;\n        rax = *((rbx - 0x38));\n    } while (1);\n    rdx = rbx - 0x38;\n    rcx = r14 - 2;\n    eax = 0x11;\n    r13d = 0;\n    r8d = 0xffffffa3;\n    r10d = 0;\n    r15d = 0;\n    *((rsp + 0x144)) = 0;\n    *((rsp + 0x18)) = 0;\n    r11d = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x10)) = 0;\n    goto label_18;\n    r11 = *((rbx - 0x30));\n    rdx = rbx - 0x70;\n    rcx = r14 - 4;\n    *((rsp + 0x144)) = 0;\n    r8d = 0xffffffa3;\n    eax = 0x11;\n    do {\nlabel_24:\n        *((rsp + 0x18)) = 0;\n        r13d = 0;\n        r10d = 0;\n        r15d = 0;\n        *((rsp + 8)) = 0;\n        *((rsp + 0x10)) = 0;\n        goto label_18;\n        r11 = *((rbx - 0x38));\n        rdx = rbx - 0x70;\n        rcx = r14 - 4;\n        *((rsp + 0x144)) = 0;\n        r8d = 0xffffffa3;\n        eax = 0x11;\n    } while (1);\n    r13 = *(rbx);\n    rdx = rbx - 0x38;\n    rcx = r14 - 2;\n    eax = 0x11;\n    *((rsp + 0x144)) = 0;\n    r8d = 0xffffffa3;\nlabel_22:\n    *((rsp + 0x18)) = 0;\n    r11d = 0;\n    r10d = 0;\n    r15d = 0;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x10)) = 0;\n    goto label_18;\n    rax = *((rbx - 0x30));\n    rax *= *(rbx);\n    xmm0 = 0;\n    *((rsp + 0x140)) = 0;\n    *((rsp + 0x110)) = xmm0;\n    *((rsp + 0x120)) = xmm0;\n    *((rsp + 0x130)) = xmm0;\n    r13 = rax;\n    if (al overflow 0) {\n        goto label_17;\n    }\n    do {\n        rdx = rbx - 0x70;\n        rcx = r14 - 4;\n        r8d = 0xffffffa3;\n        eax = 0x11;\n        goto label_22;\n        rax = *((rbx - 0x38));\n        rax *= *(rbx);\n        xmm0 = 0;\n        *((rsp + 0x140)) = 0;\n        *((rsp + 0x110)) = xmm0;\n        *((rsp + 0x120)) = xmm0;\n        *((rsp + 0x130)) = xmm0;\n        r13 = rax;\n    } while (al !overflow 0);\n    goto label_17;\n    rdx = rbx - 0x38;\n    rcx = r14 - 2;\n    eax = 0x11;\n    r11d = 0;\n    r8d = 0xffffffa3;\n    r13d = 0;\n    r15d = 0;\n    *((rsp + 0x144)) = 0;\n    *((rsp + 0x18)) = 0;\n    r10d = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x10)) = 0;\n    goto label_18;\n    r10 = *((rbx - 0x30));\n    rdx = rbx - 0x70;\n    rcx = r14 - 4;\n    *((rsp + 0x144)) = 0;\n    r8d = 0xffffffa3;\n    eax = 0x11;\n    do {\nlabel_25:\n        *((rsp + 0x18)) = 0;\n        r11d = 0;\n        r13d = 0;\n        r15d = 0;\n        *((rsp + 8)) = 0;\n        *((rsp + 0x10)) = 0;\n        goto label_18;\n        r10 = *((rbx - 0x38));\n        rdx = rbx - 0x70;\n        rcx = r14 - 4;\n        *((rsp + 0x144)) = 0;\n        r8d = 0xffffffa3;\n        eax = 0x11;\n    } while (1);\n    __asm (\"movdqu xmm0, xmmword [rbx]\");\n    edx = 5;\n    *((r9 + 0xa0)) = 1;\n    __asm (\"movups xmmword [r9 + 0x58], xmm0\");\n    *((rsp + 0x48)) = r10;\n    *((rsp + 0x40)) = r11;\n    *((rsp + 0x38)) = r9;\n    rax = dcgettext (0, \"number of seconds\");\n    rcx = r14 - 4;\n    rdx = rbx - 0x70;\n    r8d = 0xffffffa3;\n    rdi = rax;\n    eax = 2;\nlabel_23:\n    r9 = *((rsp + 0x38));\n    r11 = *((rsp + 0x40));\n    r10 = *((rsp + 0x48));\n    if (*((r9 + 0xd9)) == 0) {\n        goto label_18;\n    }\n    *((rsp + 0x68)) = r8d;\n    *((rsp + 0x60)) = rdx;\n    *((rsp + 0x58)) = eax;\n    *((rsp + 0x50)) = r10;\n    *((rsp + 0x48)) = rcx;\n    fcn_004055a0 (rdi, r9);\nlabel_29:\n    r9 = *((rsp + 0x38));\n    r11 = *((rsp + 0x40));\n    rcx = *((rsp + 0x48));\n    r10 = *((rsp + 0x50));\n    eax = *((rsp + 0x58));\n    rdx = *((rsp + 0x60));\n    r8d = *((rsp + 0x68));\n    goto label_18;\n    *((rsp + 0x48)) = r10;\n    edx = 5;\n    *((r9 + 0xd0))++;\n    *((rsp + 0x40)) = r11;\n    *((rsp + 0x38)) = r9;\n    do {\nlabel_31:\n        rax = dcgettext (0, 0x414a14);\n        rdx = rbx - 0x38;\n        rcx = r14 - 2;\n        r8d = 0xffffffa3;\n        rdi = rax;\n        eax = 4;\n        goto label_23;\n        *((rsp + 0x48)) = r10;\n        edx = 5;\n        esi = \"local_zone\";\n        *((rsp + 0x40)) = r11;\n        *((r9 + 0xb8))++;\n        *((rsp + 0x38)) = r9;\n    } while (1);\n    r11 = *((rbx - 0x30));\n    rdx = rbx - 0x70;\n    rcx = r14 - 4;\n    *((rsp + 0x144)) = 0;\n    r8d = 0x3c;\n    eax = 0x12;\n    goto label_24;\n    rax = *((rbx - 0x30));\n    rax *= *(rbx);\n    xmm0 = 0;\n    *((rsp + 0x140)) = 0;\n    *((rsp + 0x110)) = xmm0;\n    *((rsp + 0x120)) = xmm0;\n    *((rsp + 0x130)) = xmm0;\n    r13 = rax;\n    if (*((r9 + 0xb8)) overflow 0) {\n        goto label_17;\n    }\n    rdx = rbx - 0x70;\n    rcx = r14 - 4;\n    r8d = 0x3c;\n    eax = 0x12;\n    goto label_22;\n    r10 = *((rbx - 0x30));\n    rdx = rbx - 0x70;\n    rcx = r14 - 4;\n    *((rsp + 0x144)) = 0;\n    r8d = 0x3c;\n    eax = 0x12;\n    goto label_25;\n    r15 = *((rbx - 0x30));\n    rdx = rbx - 0x70;\n    rcx = r14 - 4;\n    *((rsp + 0x144)) = 0;\n    r8d = 0x3c;\n    eax = 0x12;\n    do {\n        *((rsp + 0x18)) = 0;\n        r11d = 0;\n        r13d = 0;\n        r10d = 0;\n        *((rsp + 8)) = 0;\n        *((rsp + 0x10)) = 0;\n        goto label_18;\n        rdx = rbx - 0x38;\n        rcx = r14 - 2;\n        *((rsp + 0x144)) = 0;\n        r8d = 0xffffffa3;\n        eax = 0x11;\n        *((rsp + 0x18)) = 0;\n        *((rsp + 8)) = 1;\n        goto label_21;\n        r15 = *((rbx + 8));\n        rdx = rbx - 0x70;\n        rcx = r14 - 4;\n        r8d = 0x2b;\n        eax = 0x19;\n        goto label_18;\n        *((rsp + 0x144)) = 0;\n        r15 = *((rbx - 0x38));\nlabel_35:\n        rdx = rbx - 0x70;\n        rcx = r14 - 4;\n        r8d = 0xffffffa3;\n        eax = 0x11;\n    } while (1);\n    rdx = rbx - 0x38;\n    rcx = r14 - 2;\n    eax = 0x11;\n    r11d = 0;\n    r8d = 0xffffffa3;\n    r13d = 0;\n    *((rsp + 0x144)) = 0;\n    r10d = 0;\n    *((rsp + 0x18)) = 0;\n    r15d = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x10)) = 0;\n    goto label_18;\n    *((rsp + 0x144)) = 0;\n    rax = *((rbx - 0x38));\n    goto label_26;\n    r13 = *(rbx);\n    rdx = rbx - 0x38;\n    rcx = r14 - 2;\n    eax = 0x13;\n    *((rsp + 0x144)) = 0;\n    r8d = 0xffffffa3;\n    goto label_22;\n    rax = *((rbx - 0x30));\n    rdx = rbx - 0x70;\n    rcx = r14 - 4;\n    *((rsp + 0x144)) = 0;\n    r8d = 0x3c;\n    *((rsp + 8)) = rax;\n    eax = 0x12;\n    goto label_27;\n    rax = *((rbx - 0x30));\n    rdx = rbx - 0x70;\n    rcx = r14 - 4;\n    *((rsp + 0x144)) = 0;\n    r8d = 0x3c;\n    *((rsp + 0x10)) = rax;\n    eax = 0x12;\n    goto label_28;\n    rax = *((rbx - 0x30));\n    rdx = *((rbx - 0xa0));\n    *((r9 + 0x58)) = 0;\n    rcx = r14 - 8;\n    *((r9 + 0x60)) = 0;\n    r8d = 0x14;\n    *((r9 + 0x48)) = rdx;\n    rdx = rbx - 0xe0;\n    *((r9 + 0x50)) = rax;\n    eax = 8;\n    *((r9 + 0x1c)) = 2;\n    goto label_18;\n    rax = *((rbx - 0x30));\n    *((r9 + 0x50)) = 0;\n    rdx = rbx - 0x70;\n    rcx = r14 - 4;\n    *((r9 + 0x58)) = 0;\n    r8d = 0x14;\n    *((r9 + 0x48)) = rax;\n    eax = 8;\n    *((r9 + 0x60)) = 0;\n    *((r9 + 0x1c)) = 2;\n    goto label_18;\n    *((rsp + 0x48)) = r10;\n    *((rsp + 0x40)) = r11;\n    *((r9 + 0x18)) = 0x6270;\nlabel_30:\n    eax = *((rbx + 0x30));\n    r8d = 0;\n    eax += *((r9 + 0x98));\n    __asm (\"seto r8b\");\n    *((r9 + 0x98)) = eax;\n    rax = *((r9 + 0x90));\n    rax += *((rbx + 0x28));\n    rdx = rax;\n    __asm (\"seto al\");\n    edi = 0;\n    *((r9 + 0x90)) = rdx;\n    rdx = *((r9 + 0x88));\n    eax = (int32_t) al;\n    rdx += *((rbx + 0x20));\n    __asm (\"seto dil\");\n    *((r9 + 0x88)) = rdx;\n    esi = 0;\n    rdx = *((r9 + 0x80));\n    rdx += *((rbx + 0x18));\n    __asm (\"seto sil\");\n    *((r9 + 0x80)) = rdx;\n    r11d = 0;\n    rdx = *((r9 + 0x78));\n    rdx += *((rbx + 0x10));\n    __asm (\"seto r11b\");\n    *((r9 + 0x78)) = rdx;\n    r10d = 0;\n    rdx = *((r9 + 0x70));\n    rdx += *((rbx + 8));\n    __asm (\"seto r10b\");\n    *((r9 + 0x70)) = rdx;\n    ecx = 0;\n    rdx = *((r9 + 0x68));\n    rdx += *(rbx);\n    __asm (\"seto cl\");\n    eax |= r8d;\n    *((r9 + 0x68)) = rdx;\n    eax |= edi;\n    edi = r10d;\n    eax |= esi;\n    eax |= r11d;\n    dil |= al;\n    if (dil != 0) {\n        goto label_17;\n    }\n    if (rcx != 0) {\n        goto label_17;\n    }\n    *((r9 + 0xa1)) = 1;\n    edx = 5;\n    *((rsp + 0x38)) = r9;\n    rax = dcgettext (0, \"relative\");\n    r9 = *((rsp + 0x38));\n    rcx = r14 - 4;\n    rdx = rbx - 0x70;\n    rdi = rax;\n    r8d = 0xffffffa3;\n    eax = 0xc;\n    r11 = *((rsp + 0x40));\n    r10 = *((rsp + 0x48));\n    if (*((r9 + 0xd9)) == 0) {\n        goto label_18;\n    }\n    *((rsp + 0x68)) = r8d;\n    *((rsp + 0x60)) = rdx;\n    *((rsp + 0x58)) = eax;\n    *((rsp + 0x50)) = r10;\n    *((rsp + 0x48)) = rcx;\nlabel_32:\n    fcn_00405280 (rdi, r9);\n    goto label_29;\n    rax = *((rbx - 0x38));\n    *((rsp + 0x48)) = r10;\n    *((rsp + 0x40)) = r11;\n    *((r9 + 0x18)) = eax;\n    goto label_30;\n    *((rsp + 0x48)) = r10;\n    edx = 5;\n    esi = 0x414a09;\n    *((rsp + 0x40)) = r11;\n    *((r9 + 0xc8))++;\n    *((rsp + 0x38)) = r9;\n    goto label_31;\n    *((rsp + 0x48)) = r10;\n    edx = 5;\n    esi = \"datetime\";\n    *((rsp + 0x40)) = r11;\n    *((r9 + 0xc8))++;\n    *((r9 + 0xa8))++;\n    *((rsp + 0x38)) = r9;\n    goto label_31;\n    rax = *((rbx - 0x38));\n    rdx = *((rbx - 0xa0));\n    r8d = 0xffffffa3;\n    rcx = *((rbx - 0x110));\n    *((r9 + 0x58)) = rax;\n    rax = *((rbx - 0x30));\n    *((r9 + 0x48)) = rcx;\n    rcx = r14 - 0xc;\n    *((r9 + 0x60)) = rax;\n    rax = *(rbx);\n    *((r9 + 0x50)) = rdx;\n    rdx = rbx - 0x150;\n    *((r9 + 0x1c)) = eax;\n    eax = 7;\n    goto label_18;\n    rax = *((rbx - 0x30));\n    rdx = *((rbx - 0xa0));\n    rcx = r14 - 8;\n    *((r9 + 0x58)) = 0;\n    *((r9 + 0x60)) = 0;\n    r8d = 0xffffffa3;\n    *((r9 + 0x50)) = rax;\n    rax = *(rbx);\n    *((r9 + 0x48)) = rdx;\n    rdx = rbx - 0xe0;\n    *((r9 + 0x1c)) = eax;\n    eax = 7;\n    goto label_18;\n    rax = *((rbx - 0x30));\n    rdx = rbx - 0x70;\n    rcx = r14 - 4;\n    *((r9 + 0x50)) = 0;\n    *((r9 + 0x58)) = 0;\n    r8d = 0xffffffa3;\n    *((r9 + 0x48)) = rax;\n    rax = *(rbx);\n    *((r9 + 0x60)) = 0;\n    *((r9 + 0x1c)) = eax;\n    eax = 7;\n    goto label_18;\n    *((rsp + 0x48)) = r9;\n    edx = 5;\n    *((rsp + 0x40)) = r10;\n    *((rsp + 0x38)) = r11;\nlabel_33:\n    rax = dcgettext (0, \"hybrid\");\n    r9 = *((rsp + 0x48));\n    rdx = rbx - 0x38;\n    rcx = r14 - 2;\n    rdi = rax;\n    r8d = 0xffffffa3;\n    eax = 4;\n    r11 = *((rsp + 0x38));\n    r10 = *((rsp + 0x40));\n    if (*((r9 + 0xd9)) == 0) {\n        goto label_18;\n    }\n    *((rsp + 0x68)) = r8d;\n    rsi = r9;\n    *((rsp + 0x60)) = rdx;\n    *((rsp + 0x58)) = eax;\n    *((rsp + 0x50)) = r10;\n    *((rsp + 0x48)) = rcx;\n    *((rsp + 0x40)) = r11;\n    *((rsp + 0x38)) = r9;\n    goto label_32;\n    edx = 5;\n    *((rsp + 0x48)) = r9;\n    *((rsp + 0x40)) = r10;\n    *((rsp + 0x38)) = r11;\n    rax = dcgettext (0, \"number\");\n    r9 = *((rsp + 0x48));\n    rdx = rbx - 0x38;\n    rcx = r14 - 2;\n    rdi = rax;\n    r8d = 0xffffffa3;\n    eax = 4;\n    r11 = *((rsp + 0x38));\n    r10 = *((rsp + 0x40));\n    if (*((r9 + 0xd9)) == 0) {\n        goto label_18;\n    }\n    rsi = r9;\n    *((rsp + 0x68)) = r8d;\n    *((rsp + 0x60)) = rdx;\n    *((rsp + 0x58)) = eax;\n    *((rsp + 0x50)) = r10;\n    *((rsp + 0x48)) = rcx;\n    *((rsp + 0x40)) = r11;\n    *((rsp + 0x38)) = r9;\n    fcn_004055a0 (rdi, rsi);\n    goto label_29;\n    *((rsp + 0x48)) = r9;\n    edx = 5;\n    esi = \"relative\";\n    *((rsp + 0x40)) = r10;\n    *((rsp + 0x38)) = r11;\n    goto label_33;\n    *((rsp + 0x48)) = r10;\n    edx = 5;\n    esi = 0x414a19;\n    *((rsp + 0x40)) = r11;\n    *((r9 + 0xb0))++;\n    *((rsp + 0x38)) = r9;\n    goto label_31;\n    *((rsp + 0x48)) = r10;\n    edx = 5;\n    esi = 0x412be8;\n    *((rsp + 0x40)) = r11;\n    *((r9 + 0xa8))++;\n    *((rsp + 0x38)) = r9;\n    goto label_31;\n    rax = *((rbx - 0x38));\nlabel_37:\n    *((r9 + 8)) = rax;\n    rax = *(rbx);\n    rdx = rbx - 0x70;\n    rcx = r14 - 4;\n    *((r9 + 0xe0)) = 1;\n    r8d = 0xffffffa3;\n    *((r9 + 0x10)) = eax;\n    eax = 0xd;\n    goto label_18;\n    rax = *((rbx - 0x38));\n    *((r9 + 8)) = 0;\n    rdx = rbx - 0x70;\n    rcx = r14 - 4;\n    r8d = 0xffffffa3;\n    *((r9 + 0x10)) = eax;\n    eax = 0xd;\n    goto label_18;\n    rax = *(rbx);\n    *((r9 + 8)) = 0;\n    rdx = rbx - 0x38;\n    rcx = r14 - 2;\n    r8d = 0xffffffa3;\n    *((r9 + 0x10)) = eax;\n    eax = 0xd;\n    goto label_18;\n    eax = *((rbx - 0x38));\n    rdx = rbx - 0x70;\n    rcx = r14 - 4;\n    r8d = 0xffffffa3;\n    eax += 0xe10;\n    *((r9 + 0x18)) = eax;\n    eax = 0xc;\n    goto label_18;\n    eax = *(rbx);\n    eax += 0xe10;\n    goto label_34;\n    r8 = *(rbx);\n    *((rsp + 0x48)) = r10;\n    esi = *((rbx - 0x38));\n    *((rsp + 0x40)) = r11;\n    *((rsp + 0x38)) = r9;\n    al = fcn_00405100 (r9 + 0x18, rsi, *((rbx - 0x30)), *((rbx - 0x28)));\n    if (al == 0) {\n        goto label_17;\n    }\n    r9 = *((rsp + 0x38));\n    edx = 0;\n    rax = *((r9 + 0x18));\n    rax += *((rbx - 0x70));\n    rcx = (int64_t) eax;\n    __asm (\"seto dl\");\n    *((r9 + 0x18)) = eax;\n    ecx = 1;\n    if (rax != rcx) {\n        edx = ecx;\n    }\n    if (edx != 0) {\n        goto label_17;\n    }\n    rdx = rbx - 0xa8;\n    rcx = r14 - 6;\n    r8d = 0xffffffa3;\n    eax = 0xc;\n    r11 = *((rsp + 0x40));\n    r10 = *((rsp + 0x48));\n    goto label_18;\n    *((rsp + 0x144)) = 0;\n    r15 = *((rbx - 0x30));\n    goto label_35;\n    rcx = r14;\n    rax = rsi*8;\n    r8d = 0x2b;\n    r15 = 0xffffffffffffffff;\n    rax -= rsi;\n    rsi += rsi;\n    rax <<= 3;\n    rcx -= rsi;\n    rbx -= rax;\n    eax = 0x19;\n    rdx = rbx;\n    goto label_18;\n    rdx = *((r9 + 0x90));\n    rax = *((rbx - 0x38));\n    rdi = *((rbx - 0x30));\n    rsi = *((rbx - 0x28));\n    rcx = *((rbx - 0x20));\n    r8d = *((rbx - 8));\n    *((rsp + 0x58)) = rdx;\n    rdx = *((r9 + 0x80));\n    *((rsp + 0x38)) = rax;\n    *((rsp + 0x40)) = rdi;\n    rax = *((r9 + 0x88));\n    *((rsp + 0x60)) = rdx;\n    rdx = *((r9 + 0x78));\n    *((rsp + 0x48)) = rsi;\n    rdi = *((rbx - 0x10));\n    *((rsp + 0x68)) = rdx;\n    rdx = *((r9 + 0x70));\n    *((rsp + 0x50)) = rcx;\n    rsi = *((rbx - 0x18));\n    *((rsp + 0x70)) = rdx;\n    rdx = *((r9 + 0x68));\n    ecx = *((r9 + 0x98));\n    *((rsp + 0x78)) = rdx;\n    edx = *(rbx);\n    if (edx < 0) {\n        goto label_80;\n    }\n    rdx = *((rsp + 0x58));\n    ecx += r8d;\n    __asm (\"seto r8b\");\n    *((r9 + 0x98)) = ecx;\n    ecx = 0;\n    rdx += rdi;\n    r8d = (int32_t) r8b;\n    __asm (\"seto cl\");\n    edi = 0;\n    rax += rsi;\n    *((r9 + 0x90)) = rdx;\n    __asm (\"seto dil\");\n    *((r9 + 0x88)) = rax;\n    esi = 0;\n    rax = *((rsp + 0x60));\n    rax += *((rsp + 0x50));\n    *((rsp + 0x58)) = rdi;\n    __asm (\"seto sil\");\n    *((r9 + 0x80)) = rax;\n    edi = 0;\n    rax = *((rsp + 0x68));\n    rax += *((rsp + 0x48));\n    __asm (\"seto dil\");\n    *((r9 + 0x78)) = rax;\n    edx = 0;\n    rax = *((rsp + 0x70));\n    rax += *((rsp + 0x40));\n    __asm (\"seto dl\");\n    *((r9 + 0x70)) = rax;\n    rax = *((rsp + 0x78));\n    *((rsp + 0x40)) = rdx;\n    edx = 0;\n    rax += *((rsp + 0x38));\n    *((r9 + 0x68)) = rax;\n    eax = ecx;\n    __asm (\"seto dl\");\n    eax |= r8d;\n    al |= *((rsp + 0x58));\n    eax |= esi;\n    eax |= edi;\n    al |= *((rsp + 0x40));\n    eax |= edx;\nlabel_43:\n    if (al != 0) {\n        goto label_17;\n    }\n    *((r9 + 0xa1)) = 1;\n    rdx = rbx - 0x70;\n    rcx = r14 - 4;\n    r8d = 0xffffffa3;\n    eax = 0x10;\n    goto label_18;\n    rax = *((rbx - 0x60));\n    __asm (\"movdqu xmm0, xmmword [rbx - 0x70]\");\n    rdi = 0x8000000000000000;\n    *((r9 + 0x30)) = rax;\n    rax = *((rbx - 0x30));\n    __asm (\"movups xmmword [r9 + 0x20], xmm0\");\n    rdx = rax;\n    rdx = -rdx;\n    *((r9 + 0x38)) = rdx;\n    if (rax == rdi) {\n        goto label_17;\n    }\n    rax = *((rbx + 8));\n    rdx = *((rbx + 8));\n    rdx = -rdx;\n    *((r9 + 0x40)) = rdx;\n    if (rax == rdi) {\n        goto label_17;\n    }\n    rdx = rbx - 0xa8;\n    rcx = r14 - 6;\n    r8d = 0xffffffa3;\n    eax = 0xf;\n    goto label_18;\n    rax = *((rbx - 0x68));\n    __asm (\"movdqu xmm7, xmmword [rbx]\");\n    *((r9 + 0x40)) = rax;\n    rax = *((rbx - 0x38));\n    __asm (\"movups xmmword [r9 + 0x20], xmm7\");\n    *((r9 + 0x38)) = rax;\nlabel_36:\n    rax = *((rbx + 0x10));\n    rcx = r14 - 6;\n    rdx = rbx - 0xa8;\n    r8d = 0xffffffa3;\n    *((r9 + 0x30)) = rax;\n    eax = 0xe;\n    goto label_18;\n    rax = *((rbx - 0x30));\n    rdx = rbx - 0x70;\n    rcx = r14 - 4;\n    r8d = 0xffffffa3;\n    *((r9 + 0x40)) = rax;\n    rax = *(rbx);\n    *((r9 + 0x38)) = rax;\n    eax = 0xe;\n    goto label_18;\n    rax = *((rbx - 0xa8));\n    __asm (\"movdqu xmm0, xmmword [rbx]\");\n    rcx = r14 - 8;\n    rdx = rbx - 0xe0;\n    r8d = 0xffffffa3;\n    *((r9 + 0x38)) = rax;\n    rax = *((rbx - 0x68));\n    __asm (\"movups xmmword [r9 + 0x20], xmm0\");\n    *((r9 + 0x40)) = rax;\n    rax = *((rbx + 0x10));\n    *((r9 + 0x30)) = rax;\n    eax = 0xe;\n    goto label_18;\n    rax = *((rbx - 0x38));\n    rdx = rbx - 0x70;\n    rcx = r14 - 4;\n    r8d = 0xffffffa3;\n    *((r9 + 0x38)) = rax;\n    rax = *((rbx + 8));\n    *((r9 + 0x40)) = rax;\n    eax = 0xe;\n    goto label_18;\n    rdi = 0x8000000000000000;\n    rax = *((rbx - 0x70));\n    *((r9 + 0x38)) = rax;\n    rax = *((rbx - 0x30));\n    rdx = *((rbx - 0x30));\n    rdx = -rdx;\n    *((r9 + 0x40)) = rdx;\n    if (rax == rdi) {\n        goto label_17;\n    }\n    rax = *((rbx + 8));\n    rdx = *((rbx + 8));\n    rdx = -rdx;\n    *((r9 + 0x28)) = rdx;\n    if (rax != rdi) {\n        goto label_36;\n    }\n    goto label_17;\n    rdi = 0x8000000000000000;\n    rax = *((rbx - 0x68));\n    *((r9 + 0x40)) = rax;\n    rax = *((rbx - 0x38));\n    *((r9 + 0x38)) = rax;\n    rax = *((rbx + 8));\n    rdx = *((rbx + 8));\n    rdx = -rdx;\n    *((r9 + 0x28)) = rdx;\n    if (rax != rdi) {\n        goto label_36;\n    }\n    goto label_17;\n    rcx = *((rbx - 0xd0));\n    eax = *((r9 + 0xd9));\n    if (rcx <= 3) {\n        goto label_81;\n    }\n    if (al != 0) {\n        goto label_82;\n    }\nlabel_44:\n    rax = *((rbx - 0xd0));\n    __asm (\"movdqu xmm0, xmmword [rbx - 0xe0]\");\n    rcx = r14 - 0xa;\n    rdx = rbx - 0x118;\n    r8d = 0xffffffa3;\n    *((r9 + 0x30)) = rax;\n    rax = *((rbx - 0x68));\n    __asm (\"movups xmmword [r9 + 0x20], xmm0\");\n    *((r9 + 0x38)) = rax;\n    rax = *((rbx + 8));\n    *((r9 + 0x40)) = rax;\n    eax = 0xe;\n    goto label_18;\n    rax = *((rbx - 0x68));\n    rcx = r14 - 6;\n    rdx = rbx - 0xa8;\n    r8d = 0xffffffa3;\n    *((r9 + 0x38)) = rax;\n    rax = *((rbx + 8));\n    *((r9 + 0x40)) = rax;\n    eax = 0xe;\n    goto label_18;\n    rax = *((rbx - 0x30));\n    goto label_37;\n    *((rsp + 0x48)) = r10;\n    rdi = r9;\n    *((rsp + 0x48)) = r11;\n    *((rsp + 0x58)) = r9;\n    fcn_00404ca0 (rdi, rsi, rdx, rcx, r8, r9);\n    eax = *((rbx + 0x30));\n    r8d = 0;\n    r9 = *((rsp + 0x38));\n    eax += *((r9 + 0x98));\n    __asm (\"seto r8b\");\n    *((r9 + 0x98)) = eax;\n    rax = *((r9 + 0x90));\n    rax += *((rbx + 0x28));\n    rdx = rax;\n    __asm (\"seto al\");\n    edi = 0;\n    *((r9 + 0x90)) = rdx;\n    rdx = *((r9 + 0x88));\n    eax = (int32_t) al;\n    rdx += *((rbx + 0x20));\n    __asm (\"seto dil\");\n    *((r9 + 0x88)) = rdx;\n    esi = 0;\n    rdx = *((r9 + 0x80));\n    rdx += *((rbx + 0x18));\n    __asm (\"seto sil\");\n    *((r9 + 0x80)) = rdx;\n    r11d = 0;\n    rdx = *((r9 + 0x78));\n    rdx += *((rbx + 0x10));\n    __asm (\"seto r11b\");\n    *((r9 + 0x78)) = rdx;\n    r10d = 0;\n    rdx = *((r9 + 0x70));\n    rdx += *((rbx + 8));\n    __asm (\"seto r10b\");\n    *((r9 + 0x70)) = rdx;\n    ecx = 0;\n    rdx = *((r9 + 0x68));\n    rdx += *(rbx);\n    __asm (\"seto cl\");\n    eax |= r8d;\n    *((r9 + 0x68)) = rdx;\n    eax |= edi;\n    edi = r10d;\n    eax |= esi;\n    eax |= r11d;\n    dil |= al;\n    if (dil != 0) {\n        goto label_17;\n    }\n    if (rcx != 0) {\n        goto label_17;\n    }\n    *((r9 + 0xa1)) = 1;\n    rdx = rbx - 0x70;\n    rcx = r14 - 4;\n    r8d = 0xffffffa3;\n    eax = 0x18;\n    r11 = *((rsp + 0x40));\n    r10 = *((rsp + 0x48));\n    goto label_18;\n    *((rsp + 0x48)) = r10;\n    rdi = r9;\n    *((rsp + 0x48)) = r11;\n    *((rsp + 0x58)) = r9;\n    fcn_00404ca0 (rdi, rsi, rdx, rcx, r8, r9);\n    rdx = rbx - 0x38;\n    rcx = r14 - 2;\n    r8d = 0xffffffa3;\n    eax = 0x17;\n    r9 = *((rsp + 0x38));\n    r11 = *((rsp + 0x40));\n    r10 = *((rsp + 0x48));\n    goto label_18;\n    r15 = *((rbx + 8));\n    rdx = rbx - 0x38;\n    rcx = r14 - 2;\n    r10d = 0;\n    r8d = 0xffffffa4;\n    eax = 0x16;\n    goto label_18;\nlabel_77:\n    r8d = *((r8 + str.OCDEFGH:IdkJKenL12efqM_N___AB___ABeeoZ_jpXo));\n    goto label_15;\nlabel_55:\n    eax = 2;\n    goto label_38;\nlabel_67:\n    r8d = *((rsp + 8));\n    rbx = *((rsp + 0x10));\n    r9 = rbp;\n    do {\n        edx = *(rbp);\n        rbp += 4;\n        eax = rdx - 0x1010101;\n        edx = ~edx;\n        eax &= edx;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    edx = eax;\n    edx >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = edx;\n    }\n    rdx = rbp + 2;\n    if ((eax & 0x8080) == 0) {\n    }\n    edi = eax;\n    dil += al;\n    eax = 1;\n    rbp -= 3;\n    rbp -= r13;\n    if (rbp != 3) {\n        eax = 0;\n        if (rbp != 4) {\n            goto label_83;\n        }\n        eax = 0;\n        al = (*((rsp + 0x83)) == 0x2e) ? 1 : 0;\n    }\nlabel_83:\n    ecx = 0x416140;\n    *((rsp + 0x10)) = rbx;\n    esi = \"JANUARY\";\n    *((rsp + 0x38)) = rbp;\n    rbx = rcx;\n    *((rsp + 8)) = r8d;\n    *((rsp + 0x18)) = r9;\n    while (ebp != 0) {\n        eax = strncmp (r13, rsi, 3);\n        dl = (eax == 0) ? 1 : 0;\nlabel_39:\n        if (dl != 0) {\n            goto label_84;\n        }\n        rbx += 0x10;\n        rsi = *(rbx);\n        if (rsi == 0) {\n            goto label_85;\n        }\n    }\n    eax = strcmp (r13, rsi);\n    dl = (eax == 0) ? 1 : 0;\n    goto label_39;\nlabel_56:\n    eax = 0;\n    goto label_38;\nlabel_76:\n    rax = (int64_t) edx;\n    *(r9) = rbp;\n    *((rsp + 0x28)) = rax;\n    eax -= eax;\n    eax = ~eax;\n    *((rsp + 0xd0)) = rcx;\n    eax += 0x16;\n    ebp -= ebp;\n    ebp = ~ebp;\n    ebp += 0x115;\n    goto label_12;\nlabel_78:\n    if (edx != 0) {\n        goto label_20;\n    }\n    *(r9) = rbp;\n    eax = 0x15;\n    *((rsp + 0xd0)) = rcx;\n    *((rsp + 0x28)) = 0;\n    goto label_12;\nlabel_42:\n    ecx = 4;\n    rsi = r13;\n    edi = 0x414950;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    ecx = 0x416080;\n    esi = \"YEAR\";\n    al = (edx > 0) ? 1 : 0;\n    if (al == 0) {\n        goto label_40;\n    }\n    *((rsp + 0x10)) = rbx;\n    rbx = rcx;\n    *((rsp + 8)) = r8d;\n    *((rsp + 0x38)) = dl;\n    *((rsp + 0x18)) = r9;\n    while (eax != 0) {\n        rbx += 0x10;\n        rsi = *(rbx);\n        if (rsi == 0) {\n            goto label_86;\n        }\n        eax = strcmp (r13, rsi);\n    }\nlabel_84:\n    rcx = rbx;\n    r8 = *((rsp + 8));\n    rbx = *((rsp + 0x10));\n    r9 = *((rsp + 0x18));\n    rdx = *((rcx + 0xc));\n    ebp = *((rcx + 8));\n    goto label_41;\nlabel_85:\n    r9 = *((rsp + 0x18));\n    r8d = *((rsp + 8));\n    rbx = *((rsp + 0x10));\n    rbp = *((rsp + 0x38));\n    *((rsp + 0x10)) = dl;\n    rdi = r9;\n    *((rsp + 0x40)) = r8d;\n    *((rsp + 8)) = r9;\n    rax = fcn_004051c0 (rdi, r13);\n    r9 = *((rsp + 8));\n    edx = *((rsp + 0x10));\n    r8 = *((rsp + 0x40));\n    if (rax == 0) {\n        goto label_42;\n    }\nlabel_46:\n    rdx = *((rax + 0xc));\n    ebp = *((rax + 8));\n    goto label_41;\nlabel_81:\n    rdi = *((rbx - 0xd8));\n    *((rsp + 0x38)) = rdi;\n    while (1) {\n        rax = *((rsp + 0x38));\n        __asm (\"movdqu xmm7, xmmword [rbx]\");\n        rcx = r14 - 0xa;\n        rdx = rbx - 0x118;\n        r8d = 0xffffffa3;\n        *((r9 + 0x38)) = rax;\n        rax = *((rbx - 0x68));\n        __asm (\"movups xmmword [r9 + 0x20], xmm7\");\n        *((r9 + 0x40)) = rax;\n        rax = *((rbx + 0x10));\n        *((r9 + 0x30)) = rax;\n        eax = 0xe;\n        goto label_18;\nlabel_80:\n        rdx = *((rsp + 0x58));\n        ecx -= r8d;\n        __asm (\"seto r8b\");\n        *((r9 + 0x98)) = ecx;\n        ecx = 0;\n        rdx -= rdi;\n        r8d = (int32_t) r8b;\n        __asm (\"seto cl\");\n        *((r9 + 0x90)) = rdx;\n        edx = 0;\n        rax -= rsi;\n        __asm (\"seto dl\");\n        *((r9 + 0x88)) = rax;\n        esi = 0;\n        rax = *((rsp + 0x60));\n        rax -= *((rsp + 0x50));\n        __asm (\"seto sil\");\n        *((r9 + 0x80)) = rax;\n        edi = 0;\n        rax = *((rsp + 0x68));\n        rax -= *((rsp + 0x48));\n        __asm (\"seto dil\");\n        *((r9 + 0x78)) = rax;\n        rax = *((rsp + 0x70));\n        *((rsp + 0x48)) = rdi;\n        edi = 0;\n        rax -= *((rsp + 0x40));\n        __asm (\"seto dil\");\n        *((r9 + 0x70)) = rax;\n        rax = *((rsp + 0x78));\n        *((rsp + 0x40)) = rdi;\n        edi = 0;\n        rax -= *((rsp + 0x38));\n        *((r9 + 0x68)) = rax;\n        eax = ecx;\n        __asm (\"seto dil\");\n        eax |= r8d;\n        eax |= edx;\n        eax |= esi;\n        al |= *((rsp + 0x48));\n        al |= *((rsp + 0x40));\n        eax |= edi;\n        goto label_43;\nlabel_82:\n        rax = *((rbx - 0xd8));\n        edx = 5;\n        *((rsp + 0x58)) = r9;\n        *((rsp + 0x50)) = r10;\n        *((rsp + 0x48)) = r11;\n        *((rsp + 0x40)) = rcx;\n        *((rsp + 0x38)) = rax;\n        rax = dcgettext (0, \"warning: value %ld has %ld digits. Assuming YYYY/MM/DD\\n\");\n        eax = 0;\n        fcn_00404f90 (rax, *((rsp + 0x38)), rcx, *((rsp + 0x40)), r8, r9);\n        r9 = *((rsp + 0x58));\n        r10 = *((rsp + 0x50));\n        r11 = *((rsp + 0x48));\n        goto label_44;\n        edx = 5;\n        *((rsp + 0x50)) = r9;\n        *((rsp + 0x48)) = r10;\n        *((rsp + 0x40)) = r11;\n        rax = dcgettext (0, \"warning: value %ld has less than 4 digits. Assuming MM/DD/YY[YY]\\n\");\n        eax = 0;\n        fcn_00404f90 (rax, *((rsp + 0x38)), rdx, rcx, r8, r9);\n        r9 = *((rsp + 0x50));\n        r10 = *((rsp + 0x48));\n        r11 = *((rsp + 0x40));\n    }\nlabel_86:\n    rcx = r13 + rbp - 1;\n    r8d = *((rsp + 8));\n    rbx = *((rsp + 0x10));\n    edx = *((rsp + 0x38));\n    r9 = *((rsp + 0x18));\n    if (*(rcx) == 0x53) {\n        goto label_87;\n    }\nlabel_51:\n    ecx = 0x415f20;\n    *((rsp + 8)) = r15d;\n    esi = \"TOMORROW\";\n    r15 = rbx;\n    *((rsp + 0x10)) = rbp;\n    rbx = rcx;\n    while (eax != 0) {\n        rbx += 0x10;\n        rsi = *(rbx);\n        if (rsi == 0) {\n            goto label_88;\n        }\n        *((rsp + 0x38)) = r9;\n        *((rsp + 0x18)) = dl;\n        eax = strcmp (r13, rsi);\n        edx = *((rsp + 0x18));\n        r9 = *((rsp + 0x38));\n    }\n    rcx = rbx;\n    r8 = (int64_t) ebp;\n    rbx = r15;\n    r15d = *((rsp + 8));\n    rdx = *((rcx + 0xc));\n    ebp = *((rcx + 8));\n    goto label_41;\nlabel_87:\n    r10d = 0x416080;\n    *((rsp + 8)) = r15d;\n    esi = \"YEAR\";\n    r15 = rbx;\n    *((rsp + 0x10)) = rbp;\n    rbx = r10;\n    *(rcx) = 0;\n    while (eax != 0) {\n        rbx += 0x10;\n        rsi = *(rbx);\n        if (rsi == 0) {\n            goto label_89;\n        }\n        *((rsp + 0x40)) = r9;\n        *((rsp + 0x38)) = rcx;\n        *((rsp + 0x18)) = dl;\n        eax = strcmp (r13, rsi);\n        edx = *((rsp + 0x18));\n        rcx = *((rsp + 0x38));\n        r9 = *((rsp + 0x40));\n    }\n    r10 = rbx;\n    r8 = (int64_t) ebp;\n    rbx = r15;\n    r15d = *((rsp + 8));\n    rdx = *((r10 + 0xc));\n    ebp = *((r10 + 8));\n    goto label_41;\nlabel_88:\n    r8 = (int64_t) ebp;\n    rbp = *((rsp + 0x10));\n    rbx = r15;\n    eax = *((rsp + 0x80));\n    r15d = *((rsp + 8));\n    if (rbp == 1) {\n        goto label_90;\n    }\nlabel_48:\n    rsi = r13;\n    rcx = r13;\n    if (al != 0) {\n        goto label_91;\n    }\n    goto label_92;\n    do {\n        rcx++;\nlabel_45:\n        rsi++;\n        eax = *(rsi);\n        *(rcx) = al;\n        if (al == 0) {\n            goto label_93;\n        }\nlabel_91:\n    } while (al != 0x2e);\n    edx = 1;\n    goto label_45;\nlabel_93:\n    if (dl == 0) {\n        goto label_92;\n    }\n    rdi = r9;\n    *((rsp + 0x10)) = r8d;\n    *((rsp + 8)) = r9;\n    rax = fcn_004051c0 (rdi, r13);\n    r9 = *((rsp + 8));\n    r8 = *((rsp + 0x10));\n    if (rax != 0) {\n        goto label_46;\n    }\nlabel_92:\n    if (*((r9 + 0xd9)) == 0) {\n        goto label_47;\n    }\n    edx = 5;\n    *((rsp + 0x10)) = r9;\n    *((rsp + 8)) = r8d;\n    rax = dcgettext (0, \"error: unknown word '%s'\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, r13, rdx, rcx, r8, r9);\n    eax = 2;\n    r8 = *((rsp + 8));\n    r9 = *((rsp + 0x10));\n    goto label_12;\nlabel_60:\n    eax = *((rcx + 0x4163a0));\n    rcx = r14;\n    eax -= 0x1c;\n    rdx = (int64_t) eax;\n    r8d = *((rdx + 0x416520));\n    rdx = rsi * 0x38;\n    rsi += rsi;\n    rcx -= rsi;\n    rbx -= rdx;\n    rdx = rbx;\n    goto label_18;\nlabel_90:\n    ecx = 0x415a40;\n    if (al == 0x41) {\n        goto label_94;\nlabel_49:\n        rcx = rdi;\n    }\n    rsi = *((rcx + 0x10));\n    rdi = rcx + 0x10;\n    if (rsi == 0) {\n        goto label_48;\n    }\n    if (*(rsi) != al) {\n        goto label_49;\n    }\n    rdx = *((rcx + 0x1c));\n    ebp = *((rcx + 0x18));\n    goto label_41;\nlabel_94:\n    *((rsp + 0xd0)) = 0xfffffffffffff1f0;\n    goto label_50;\nlabel_89:\n    r8d = ebp;\n    rbx = r15;\n    rbp = *((rsp + 0x10));\n    r15d = *((rsp + 8));\n    *(rcx) = 0x53;\n    goto label_51;\n}\n"
        },
        {
            "funcName": "fcn_00407bc0",
            "funcStartAddr": "0x407bc0",
            "funcEndAddr": "0x409b86",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x407bc0 */\n#include <stdint.h>\n \nvoid fcn_00407bc0 (uint32_t arg1, int64_t arg3, int64_t arg4, int64_t arg5, void * arg6, char * s) {\n    void * ptr;\n    void * var_10h;\n    int64_t var_18h;\n    uint32_t var_20h;\n    uint32_t var_28h;\n    size_t var_30h;\n    uint32_t var_38h;\n    int64_t var_44h;\n    uint32_t var_48h;\n    int64_t var_50h;\n    int64_t var_54h;\n    int64_t var_58h;\n    int64_t var_5ch;\n    int64_t var_60h;\n    int64_t var_70h;\n    int64_t var_90h;\n    int64_t var_94h;\n    uint32_t var_98h;\n    uint32_t var_9ch;\n    uint32_t var_a0h;\n    int64_t var_a4h;\n    uint32_t var_a8h;\n    uint32_t var_b0h;\n    int64_t var_b8h;\n    int64_t var_d0h;\n    int64_t var_d4h;\n    int64_t var_d8h;\n    int64_t var_dch;\n    int64_t var_e0h;\n    int64_t var_e4h;\n    int64_t var_f0h;\n    int64_t var_110h;\n    int64_t var_114h;\n    int64_t var_118h;\n    int64_t var_11ch;\n    int64_t var_120h;\n    int64_t var_124h;\n    int64_t var_130h;\n    int64_t var_140h;\n    int64_t var_150h;\n    int64_t var_170h;\n    int64_t var_190h;\n    int64_t var_200h;\n    int64_t var_270h;\n    int64_t var_272h;\n    int64_t var_273h;\n    int64_t var_290h;\n    int64_t var_298h;\n    int64_t var_2a0h;\n    uint32_t var_2a3h;\n    int64_t var_2e0h;\n    int64_t var_2e8h;\n    int64_t var_2f0h;\n    int64_t var_2f4h;\n    int64_t var_2f8h;\n    int64_t var_2fch;\n    int64_t var_308h;\n    uint32_t var_310h;\n    int64_t var_318h;\n    int64_t var_320h;\n    int64_t var_328h;\n    int64_t var_330h;\n    int64_t var_338h;\n    int64_t var_340h;\n    int64_t var_348h;\n    uint32_t var_350h;\n    uint32_t var_358h;\n    int64_t var_360h;\n    int64_t var_368h;\n    int64_t var_370h;\n    int64_t var_378h;\n    uint32_t var_380h;\n    uint32_t var_381h;\n    uint32_t var_388h;\n    int32_t var_390h;\n    uint32_t var_398h;\n    signed int64_t var_3a0h;\n    uint32_t var_3a8h;\n    uint32_t var_3b0h;\n    int64_t var_3b8h;\n    uint32_t var_3b9h;\n    int64_t var_3bah;\n    int64_t var_3bch;\n    int64_t var_3c0h;\n    int64_t var_3c8h;\n    int64_t var_3d0h;\n    uint32_t var_3d4h;\n    int64_t var_3d8h;\n    int64_t var_3e0h;\n    int64_t var_3e4h;\n    int64_t var_3e8h;\n    rdi = arg1;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rsi = s;\n    r14 = r8;\n    r13 = rdx;\n    *((rsp + 0x28)) = rdi;\n    *((rsp + 0x18)) = ecx;\n    *((rsp + 0x10)) = r9;\n    rax = strlen (rsi);\n    *((rsp + 0x30)) = rax;\n    if (r13 == 0) {\n        goto label_57;\n    }\nlabel_8:\n    rax = *((r13 + 8));\n    rbx = *(r13);\n    r12 = rbp;\n    *((rsp + 0x20)) = rax;\n    eax = *(rbp);\n    if (al <= 0x20) {\n        rdx = 0x100003e00;\n        if (((rdx >> rax) & 1) < 0) {\n            goto label_58;\n        }\n    }\nlabel_1:\n    edi = \"TZ=\\\";\n    ecx = 4;\n    rsi = r12;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (((rdx >> rax) & 1) > 0) ? 1 : 0;\n    if (al != 0) {\n        goto label_59;\n    }\n    r15d = *((r12 + 4));\n    rsi = r12 + 4;\n    if (r15b == 0) {\n        goto label_59;\n    }\n    rdx = rsi;\n    eax = r15d;\n    edi = 1;\n    while (al != 0x5c) {\n        if (al == 0x22) {\n            goto label_60;\n        }\n        rax = rdx;\nlabel_0:\n        rdx = rax + 1;\n        eax = *((rax + 1));\n        rdi++;\n        if (al == 0) {\n            goto label_59;\n        }\n    }\n    rax = rdx + 1;\n    edx = *((rdx + 1));\n    if (dl == 0x5c) {\n        goto label_0;\n    }\n    if (dl == 0x22) {\n        goto label_0;\n    }\nlabel_59:\n    rax = fcn_0040de20 (r14, r13, rsp + 0x110);\n    if (rax == 0) {\n        goto label_61;\n    }\n    *((rsp + 8)) = 0;\n    r15 = r14;\nlabel_4:\n    xmm0 = 0;\n    eax = 0x412b98;\n    *((rsp + 0x310)) = 0;\n    if (*(r12) == 0) {\n        r12 = rax;\n    }\n    eax = *((rsp + 0x18));\n    r10d = 0;\n    *((rsp + 0x2fc)) = 2;\n    __asm (\"movups xmmword [rsp + 0x348], xmm0\");\n    r11d = 0;\n    *((rsp + 0x3b9)) = al;\n    rax = *((rsp + 0x124));\n    *((rsp + 0x2e0)) = r12;\n    r12 = *((rsp + 0x20));\n    rax += 0x76c;\n    *((rsp + 0x308)) = rax;\n    eax = *((rsp + 0x120));\n    *((rsp + 0x340)) = r12;\n    r12d = 0x76a700;\n    eax++;\n    __asm (\"movups xmmword [rsp + 0x358], xmm0\");\n    rax = (int64_t) eax;\n    __asm (\"movups xmmword [rsp + 0x368], xmm0\");\n    *((rsp + 0x318)) = rax;\n    rax = *((rsp + 0x11c));\n    *((rsp + 0x378)) = 0;\n    *((rsp + 0x320)) = rax;\n    rax = *((rsp + 0x118));\n    *((rsp + 0x380)) = r10w;\n    *((rsp + 0x328)) = rax;\n    rax = *((rsp + 0x114));\n    *((rsp + 0x388)) = 0;\n    *((rsp + 0x330)) = rax;\n    rax = *((rsp + 0x110));\n    *((rsp + 0x390)) = 0;\n    *((rsp + 0x338)) = rax;\n    eax = *((rsp + 0x130));\n    *((rsp + 0x3a8)) = 0;\n    *((rsp + 0xb0)) = eax;\n    *((rsp + 0x398)) = 0;\n    rdx = *((rsp + 0x140));\n    *((rsp + 0x3a0)) = 0;\n    *((rsp + 0x3b0)) = 0;\n    *((rsp + 0x3b8)) = 0;\n    *((rsp + 0x3ba)) = r11w;\n    *((rsp + 0x3bc)) = 0;\n    *((rsp + 0x3c0)) = 0;\n    *((rsp + 0x3c8)) = rdx;\n    *((rsp + 0x3d0)) = 0x10d;\n    *((rsp + 0x3d4)) = eax;\n    *((rsp + 0x3d8)) = 0;\n    do {\n        rax = (int64_t) r12d;\n        rax += rbx;\n        if (rax overflow 0) {\n            goto label_25;\n        }\n        *((rsp + 0x190)) = rax;\n        rax = fcn_0040de20 (r15, rsp + 0x190, rsp + 0x270);\n        if (rax != 0) {\n            rax = *((rsp + 0x2a0));\n            if (rax == 0) {\n                goto label_62;\n            }\n            edx = *((rsp + 0x290));\n            if (edx != *((rsp + 0x3d4))) {\n                goto label_63;\n            }\n        }\nlabel_62:\n        r12d += 0x76a700;\n    } while (r12d != 0x1da9c00);\nlabel_25:\n    rdi = *((rsp + 0x3c8));\n    if (rdi != 0) {\n        rsi = *((rsp + 0x3d8));\n        if (rsi == 0) {\n            goto label_5;\n        }\n        eax = strcmp (rdi, rsi);\n        if (eax == 0) {\n            goto label_64;\n        }\n    }\nlabel_5:\n    eax = fcn_00405940 (rsp + 0x2e0, rsi, rdx, rcx, r8, r9);\n    if (eax != 0) {\n        goto label_65;\n    }\n    if (*((rsp + 0x3b9)) != 0) {\n        goto label_66;\n    }\n    ebx = *((rsp + 0x380));\n    if (bl != 0) {\n        goto label_67;\n    }\n    rax = *((rsp + 0x3a8));\n    rdx = *((rsp + 0x3b0));\n    rax |= *((rsp + 0x388));\n    rdx += *((rsp + 0x398));\n    rax |= *((rsp + 0x390));\n    rax |= *((rsp + 0x3a0));\n    rax |= rdx;\n    if (rax > 1) {\n        goto label_13;\n    }\nlabel_12:\n    r12 = *((rsp + 0x308));\n    if (r12 < 0) {\n        goto label_68;\n    }\n    if (*((rsp + 0x310)) == 2) {\n        goto label_69;\n    }\nlabel_23:\n    ebp = 0;\n    rax = r12 - 0x76c;\n    if (r12 >= 0x76c) {\n        goto label_70;\n    }\n    if (rax >= 0) {\n        goto label_71;\n    }\nlabel_20:\n    rdx = (int64_t) eax;\n    *((rsp + 0xa4)) = eax;\n    edx = 1;\n    if (rax != rdx) {\n    }\n    ebp &= 1;\nlabel_24:\n    if (bpl != 0) {\n        goto label_72;\n    }\n    rax = *((rsp + 0x318));\n    edx = 0;\n    rax += 0xffffffffffffffff;\n    rcx = (int64_t) eax;\n    __asm (\"seto dl\");\n    esi = eax;\n    *((rsp + 0xa0)) = eax;\n    ecx = 1;\n    if (rax != rcx) {\n        edx = ecx;\n    }\n    ecx = *((rsp + 0x3b9));\n    if (edx != 0) {\n        goto label_73;\n    }\n    rax = *((rsp + 0x320));\n    rdx = (int64_t) eax;\n    *((rsp + 0x9c)) = eax;\n    edx = eax;\n    al = (rax != rdx) ? 1 : 0;\n    eax = (int32_t) al;\n    *((rsp + 0x18)) = eax;\n    if (rax != rdx) {\n        goto label_73;\n    }\n    rax = *((rsp + 0x3a8));\n    if (rax != 0) {\n        goto label_74;\n    }\n    if (*((rsp + 0x381)) == 0) {\n        goto label_75;\n    }\n    if (*((rsp + 0x388)) != 0) {\n        goto label_75;\n    }\n    if (*((rsp + 0x390)) == 0) {\n        goto label_74;\n    }\n    *((rsp + 0x90)) = 0;\n    *((rsp + 0x98)) = 0;\n    *((rsp + 0x340)) = 0;\n    if (cl != 0) {\n        goto label_76;\n    }\n    r9d = 0;\n    r8d = 0;\n    edi = 0;\nlabel_29:\n    *((rsp + 0xb0)) = 0xffffffff;\nlabel_28:\n    if (*((rsp + 0x398)) != 0) {\n        goto label_77;\n    }\n    eax = *((rsp + 0xb0));\nlabel_30:\n    *((rsp + 0xdc)) = edx;\n    edx = *((rsp + 0xa4));\n    *((rsp + 0xd0)) = edi;\n    *((rsp + 0xe0)) = esi;\n    *((rsp + 0xe4)) = edx;\n    *((rsp + 0xd4)) = r8d;\n    *((rsp + 0xd8)) = r9d;\n    *((rsp + 0xf0)) = eax;\n    rax = fcn_0040ded0 (r15, rsp + 0x90);\n    rdx = rsp + 0x90;\n    rcx = rax;\n    rbx = rax;\n    al = fcn_00405050 (r15, rsp + 0xd0);\n    if (al != 0) {\n        goto label_78;\n    }\n    rax = *((rsp + 0x3b0));\n    *((rsp + 0x48)) = rax;\n    if (rax != 0) {\n        goto label_79;\n    }\nlabel_26:\n    eax = *((rsp + 0xd8));\n    r10d = *((rsp + 0xd0));\n    r9d = *((rsp + 0x90));\n    r8d = *((rsp + 0xd4));\n    *((rsp + 0x28)) = eax;\n    eax = *((rsp + 0x98));\n    ecx = *((rsp + 0x94));\n    r13d = *((rsp + 0xe0));\n    *((rsp + 0x30)) = eax;\n    eax = *((rsp + 0xdc));\n    r12d = *((rsp + 0xa0));\n    *((rsp + 0x10)) = eax;\n    eax = *((rsp + 0x9c));\n    *((rsp + 0x20)) = eax;\n    eax = *((rsp + 0xe4));\n    *((rsp + 0x38)) = eax;\n    eax = *((rsp + 0xa4));\n    *((rsp + 0x44)) = eax;\n    eax = *((rsp + 0x3b9));\n    if (r10d != r9d) {\n        goto label_80;\n    }\n    if (r8d != ecx) {\n        goto label_80;\n    }\n    ebx = *((rsp + 0x20));\n    if (*((rsp + 0x10)) != ebx) {\n        goto label_81;\n    }\n    ebx = *((rsp + 0x30));\n    if (*((rsp + 0x28)) == ebx) {\n        goto label_81;\n    }\n    if (r13d != r12d) {\n        goto label_81;\n    }\n    ebx = *((rsp + 0x44));\n    if (*((rsp + 0x38)) != ebx) {\n        goto label_81;\n    }\n    if (al == 0) {\n        goto label_13;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"error: invalid date/time value:\\n\");\n    rbx = rsp + 0x270;\n    eax = 0;\n    fcn_00404f90 (rax, rsi, rdx, rcx, r8, r9);\n    rax = fcn_00405410 (rsp + 0xd0, rsp + 0x2e0, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"    user provided time: '%s'\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, rbp, rdx, rcx, r8, r9);\n    rax = fcn_00405410 (rsp + 0x90, rsp + 0x2e0, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"       normalized time: '%s'\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, rbp, rdx, rcx, r8, r9);\n    eax = 0x4179a4;\n    ecx = 0x414a39;\n    *((rsp + 0x18)) = 1;\n    rdx = rax;\nlabel_51:\n    r8d = 0x4179a4;\nlabel_50:\n    esi = 0x4179a4;\n    edi = 0x414a39;\n    r10d = *((rsp + 0x44));\n    if (r13d == r12d) {\n        rdi = rsi;\n    }\n    r9d = \"----\";\n    if (*((rsp + 0x38)) == r10d) {\n        r9 = rsi;\n    }\n    esi = 0x64;\n    edx = 1;\n    eax = 0;\n    ecx = 0x64;\n    r8d = \"                                 %4s %2s %2s %2s %2s %2s\";\n    rdi = rbx;\n    snprintf_chk ();\n    eax = 0x33;\n    edx = 0x34;\n    if (*((rsp + 0x2a3)) == 0x20) {\n        goto label_82;\n    }\n    goto label_83;\n    do {\n        rax--;\n        if (*((rbx + rax)) != 0x20) {\n            goto label_83;\n        }\nlabel_82:\n        rdx = (int64_t) eax;\n    } while (eax != 0);\nlabel_83:\n    eax = 0;\n    *((rsp + rdx + 0x270)) = 0;\n    fcn_00404f90 (0x414bcb, rbx, rdx, rcx, r8, r9);\n    edx = 5;\n    rax = dcgettext (0, \"     possible reasons:\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, rsi, rdx, rcx, r8, r9);\n    ecx = *((rsp + 0x18));\n    if (ecx != 0) {\n        goto label_84;\n    }\nlabel_54:\n    ecx = *((rsp + 0x20));\n    if (*((rsp + 0x10)) != ecx) {\n        if (r13d == r12d) {\n            goto label_85;\n        }\n        edx = 5;\n        rax = dcgettext (0, \"       invalid day/month combination;\\n\");\n        eax = 0;\n        fcn_00404f90 (rax, rsi, rdx, rcx, r8, r9);\n    }\nlabel_85:\n    edx = 5;\n    rax = dcgettext (0, \"       numeric values overflow;\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, rsi, rdx, rcx, r8, r9);\n    edx = 5;\n    if (*((rsp + 0x48)) == 0) {\n        goto label_86;\n    }\n    rax = dcgettext (0, \"incorrect timezone\");\nlabel_53:\n    eax = 0;\n    fcn_00404f90 (\"       %s\\n\", rax, rdx, rcx, r8, r9);\nlabel_13:\n    ebx = 0;\nlabel_3:\n    if (r15 != r14) {\n        fcn_0040de00 (r15);\n    }\nlabel_7:\n    free (*((rsp + 8)));\n    eax = ebx;\n    return rax;\nlabel_58:\n    eax = 1;\nlabel_2:\n    r12++;\n    ecx = *(r12);\n    if (cl > 0x20) {\n        goto label_1;\n    }\n    rsi = rax;\n    rsi <<= cl;\n    if ((rsi & rdx) == 0) {\n        goto label_1;\n    }\n    goto label_2;\nlabel_65:\n    ebx = *((rsp + 0x3b9));\n    if (bl == 0) {\n        goto label_3;\n    }\n    rbx = *((rsp + 0x2e0));\n    rbp += *((rsp + 0x30));\n    edx = 5;\n    if (rbx < rbp) {\n        goto label_87;\n    }\n    rax = dcgettext (0, \"error: parsing failed\\n\");\nlabel_14:\n    eax = 0;\n    ebx = 0;\n    fcn_00404f90 (rax, rbx, rdx, rcx, r8, r9);\n    goto label_3;\nlabel_60:\n    if (rdi > 0x64) {\n        goto label_88;\n    }\n    rax = rsp + 0x200;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x10)) = rax;\nlabel_6:\n    rdx = *((rsp + 0x10));\n    if (r15b == 0x22) {\n        goto label_89;\n    }\n    do {\n        eax = 0;\n        al = (r15b == 0x5c) ? 1 : 0;\n        rdx++;\n        rax += rsi;\n        ecx = *(rax);\n        r15d = *((rax + 1));\n        rsi = rax + 1;\n        *((rdx - 1)) = cl;\n    } while (r15b != 0x22);\nlabel_89:\n    *(rdx) = 0;\n    *((rsp + 0x38)) = rsi;\n    rax = fcn_0040db40 (*((rsp + 0x10)));\n    r15 = rax;\n    if (rax == 0) {\n        goto label_90;\n    }\n    rsi = *((rsp + 0x38));\n    eax = *((rsi + 1));\n    r12 = rsi + 1;\n    if (al > 0x20) {\n        goto label_91;\n    }\n    rdx = 0x100003e00;\n    if (((rdx >> rax) & 1) >= 0) {\n        goto label_91;\n    }\n    eax = 1;\n    do {\n        r12++;\n        ecx = *(r12);\n        if (cl > 0x20) {\n            goto label_91;\n        }\n        rsi = rax;\n        rsi <<= cl;\n    } while ((rsi & rdx) != 0);\nlabel_91:\n    rax = fcn_0040de20 (r15, r13, rsp + 0x110);\n    if (rax != 0) {\n        goto label_4;\n    }\n    ebx = 0;\n    goto label_3;\nlabel_64:\n    *((rsp + 0x3d4)) = 0xffffffff;\n    *((rsp + 0x3d8)) = 0;\n    goto label_5;\nlabel_67:\n    __asm (\"movdqu xmm1, xmmword [rsp + 0x338]\");\n    rax = *((rsp + 0x28));\n    __asm (\"movups xmmword [rax], xmm1\");\n    goto label_3;\nlabel_66:\n    edx = 5;\n    rax = dcgettext (0, \"input timezone: \");\n    eax = 0;\n    fcn_00404f90 (rax, rsi, rdx, rcx, r8, r9);\n    edx = 5;\n    esi = '@timespec' - always UTC\";\n    if (*((rsp + 0x380)) != 0) {\n        goto label_21;\n    }\n    edx = 5;\n    esi = \"parsed date/time string\";\n    if (*((rsp + 0x3b0)) != 0) {\n        goto label_21;\n    }\n    rbx = *((rsp + 0x10));\n    if (rbx == 0) {\n        goto label_92;\n    }\n    if (r14 == r15) {\n        goto label_93;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"TZ=\\\"%s\\\" in date string\");\n    rcx = rbx;\nlabel_22:\n    rdi = stderr;\n    rdx = rax;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_94;\nlabel_88:\n    *((rsp + 0x38)) = rsi;\n    rax = malloc (rdi);\n    rsi = *((rsp + 0x38));\n    *((rsp + 0x10)) = rax;\n    *((rsp + 8)) = rax;\n    if (rax != 0) {\n        goto label_6;\n    }\nlabel_61:\n    *((rsp + 8)) = 0;\n    ebx = 0;\n    goto label_7;\nlabel_57:\n    rdi = rsp + 0x60;\n    r13 = rsp + 0x60;\n    fcn_00404bc0 (rdi);\n    goto label_8;\nlabel_92:\n    edx = 5;\nlabel_21:\n    rax = dcgettext (0, \"system default\");\n    rdi = stderr;\n    esi = 1;\n    rdx = rax;\n    eax = 0;\n    fprintf_chk ();\nlabel_94:\n    rax = *((rsp + 0x3b0));\n    if (*((rsp + 0x398)) == 0) {\n        goto label_95;\n    }\n    if (rax == 0) {\n        goto label_96;\n    }\nlabel_11:\n    rax = fcn_00404e20 (*((rsp + 0x2f8)), rsp + 0x70);\n    edx = \" (%s)\";\n    esi = 1;\n    rdi = stderr;\n    rcx = rax;\n    eax = 0;\n    fprintf_chk ();\nlabel_10:\nlabel_9:\n    fputc (0xa, *(obj.stderr));\n    ebx = *((rsp + 0x3b9));\n    if (*((rsp + 0x380)) == 0) {\n        goto label_97;\n    }\n    __asm (\"movdqu xmm2, xmmword [rsp + 0x338]\");\n    rax = *((rsp + 0x28));\n    __asm (\"movups xmmword [rax], xmm2\");\nlabel_27:\n    if (bl == 0) {\n        goto label_98;\n    }\n    edx = 5;\n    esi = \"timezone: system default\\n\";\n    if (*((rsp + 0x10)) != 0) {\n        rsi = *((rsp + 0x10));\n        edi = 0x412b95;\n        ecx = 5;\n        edx = 5;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        al = (*((rsp + 0x10)) > 0) ? 1 : 0;\n        if (al != 0) {\n            goto label_99;\n        }\n    }\n    rax = dcgettext (0, \"timezone: Universal Time\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, rsi, rdx, rcx, r8, r9);\nlabel_15:\n    r13 = *((rsp + 0x28));\n    edx = 5;\n    rbp = *(r13);\n    r12 = *((r13 + 8));\n    rax = dcgettext (0, \"final: %ld.%09d (epoch-seconds)\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, rbp, r12d, rcx, r8, r9);\n    rsi = rsp + 0x150;\n    rdi = r13;\n    rax = gmtime_r ();\n    if (rax != 0) {\n        rax = fcn_00405410 (rsp + 0x150, 0, rsp + 0x190);\n        edx = 5;\n        rax = dcgettext (0, \"final: %s (UTC)\\n\");\n        eax = 0;\n        fcn_00404f90 (rax, rbp, rdx, rcx, r8, r9);\n    }\n    rax = fcn_0040de20 (r15, *((rsp + 0x28)), rsp + 0x270);\n    if (rax == 0) {\n        goto label_3;\n    }\n    rax = fcn_00404e20 (*((rsp + 0x298)), rsp + 0x70);\n    r12 = rax;\n    rax = fcn_00405410 (rsp + 0x270, 0, rsp + 0x190);\n    edx = 5;\n    rax = dcgettext (0, \"final: %s (UTC%s)\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, rbp, r12, rcx, r8, r9);\n    goto label_3;\nlabel_96:\n    r9d = *((rsp + 0x2f4));\n    rsi = stderr;\n    if (r9d <= 0) {\n        goto label_9;\n    }\n    fwrite (\", dst\", 1, 5, rsi);\n    rax = *((rsp + 0x3b0));\nlabel_95:\n    if (rax == 0) {\n        goto label_10;\n    }\n    goto label_11;\nlabel_97:\n    rsi = *((rsp + 0x3a8));\n    rcx = *((rsp + 0x388));\n    rdx = *((rsp + 0x3b0));\n    rdx += *((rsp + 0x398));\n    rax = rsi;\n    rax |= rcx;\n    rax |= *((rsp + 0x390));\n    rax |= *((rsp + 0x3a0));\n    rax |= rdx;\n    if (rax <= 1) {\n        goto label_12;\n    }\n    if (bl == 0) {\n        goto label_13;\n    }\n    if (rsi > 1) {\n        goto label_100;\n    }\nlabel_19:\n    if (rcx > 1) {\n        goto label_101;\n    }\nlabel_18:\n    if (*((rsp + 0x390)) > 1) {\n        goto label_102;\n    }\nlabel_17:\n    if (*((rsp + 0x3a0)) > 1) {\n        goto label_103;\n    }\nlabel_16:\n    rax = *((rsp + 0x3b0));\n    rax += *((rsp + 0x398));\n    if (rax <= 1) {\n        goto label_13;\n    }\n    eax = 0;\n    ebx = 0;\n    fcn_00404f90 (\"error: seen multiple time-zone parts\\n\", rsi, rdx, rcx, r8, r9);\n    goto label_3;\nlabel_87:\n    dcgettext (0, \"error: parsing failed, stopped at '%s'\\n\");\n    goto label_14;\nlabel_99:\n    rax = dcgettext (0, \"timezone: TZ=\\\"%s\\\" environment value\\n\");\n    eax = 0;\n    eax = fcn_00404f90 (rax, *((rsp + 0x10)), rdx, rcx, r8, r9);\n    goto label_15;\nlabel_103:\n    eax = 0;\n    eax = fcn_00404f90 (\"error: seen multiple daylight-saving parts\\n\", rsi, rdx, rcx, r8, r9);\n    goto label_16;\nlabel_102:\n    eax = 0;\n    eax = fcn_00404f90 (\"error: seen multiple days parts\\n\", rsi, rdx, rcx, r8, r9);\n    goto label_17;\nlabel_101:\n    eax = 0;\n    eax = fcn_00404f90 (\"error: seen multiple date parts\\n\", rsi, rdx, rcx, r8, r9);\n    goto label_18;\nlabel_100:\n    eax = 0;\n    rax = fcn_00404f90 (\"error: seen multiple time parts\\n\", rsi, rdx, rcx, r8, r9);\n    rcx = *((rsp + 0x388));\n    goto label_19;\nlabel_70:\n    if (rax >= 0) {\n        goto label_20;\n    }\nlabel_71:\n    goto label_20;\nlabel_93:\n    rsi = *((rsp + 0x10));\n    edi = 0x412b95;\n    ecx = 5;\n    edx = 5;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    esi = \"TZ=\\\"UTC0\\\" environment value or -u\";\n    al = (rax > 0) ? 1 : 0;\n    if (al == 0) {\n        goto label_21;\n    }\n    dcgettext (0, \"TZ=\\\"%s\\\" environment value\");\n    rcx = *((rsp + 0x10));\n    goto label_22;\nlabel_69:\n    eax = 0x76c;\n    if (r12 >= 0x45) {\n    }\n    rbp += r12;\n    if (bl != 0) {\n        goto label_104;\n    }\n    r12 = rbp;\n    goto label_23;\nlabel_72:\n    if (bl != 0) {\n        goto label_105;\n    }\nlabel_31:\n    ecx = *((rsp + 0x3b9));\nlabel_73:\n    edx = 5;\n    esi = \"error: year, month, or day overflow\\n\";\n    if (cl == 0) {\n        goto label_13;\n    }\nlabel_42:\n    ebx = 0;\n    rax = dcgettext (0, rsi);\n    eax = 0;\n    fcn_00404f90 (rax, rsi, rdx, rcx, r8, r9);\n    goto label_3;\nlabel_68:\n    rax = 0xfffffffffffff894;\n    ebp = 0;\n    rax -= r12;\n    rdx = (int64_t) eax;\n    __asm (\"seto bpl\");\n    *((rsp + 0xa4)) = eax;\n    eax = 1;\n    if (rax != rdx) {\n    }\n    goto label_24;\nlabel_90:\n    ebx = 0;\n    goto label_7;\nlabel_63:\n    *((rsp + 0x3d8)) = rax;\n    *((rsp + 0x3e0)) = 0x10d;\n    *((rsp + 0x3e4)) = edx;\n    *((rsp + 0x3e8)) = 0;\n    goto label_25;\nlabel_79:\n    esi = 0x5858;\n    *((rsp + 0x272)) = 0x58;\n    *((rsp + 0x270)) = si;\n    fcn_00404e20 (*((rsp + 0x2f8)), rsp + 0x273);\n    rax = fcn_0040db40 (rsp + 0x270);\n    r12 = rax;\n    if (rax == 0) {\n        goto label_106;\n    }\n    rax = *((rsp + 0xd0));\n    *((rsp + 0x90)) = rax;\n    rax = *((rsp + 0xd8));\n    *((rsp + 0x98)) = rax;\n    rax = *((rsp + 0xe0));\n    *((rsp + 0xa0)) = rax;\n    eax = *((rsp + 0xf0));\n    *((rsp + 0xb0)) = eax;\n    rax = fcn_0040ded0 (r12, rsp + 0x90);\n    rdx = rsp + 0x90;\n    rcx = rax;\n    rbx = rax;\n    eax = fcn_00405050 (r12, rsp + 0xd0);\n    r13d = eax;\n    fcn_0040de00 (r12);\n    if (r13b == 0) {\n        goto label_26;\n    }\nlabel_78:\n    if (*((rsp + 0x390)) == 0) {\n        goto label_107;\n    }\n    if (*((rsp + 0x388)) != 0) {\n        goto label_108;\n    }\n    rax = *((rsp + 0x2e8));\n    if (rax > 0) {\n        ecx = *((rsp + 0x2f0));\n        if (*((rsp + 0xa8)) == ecx) {\n            goto label_109;\n        }\n        rax--;\n    }\nlabel_109:\n    rsi = rax * 7;\n    if (rax overflow 0) {\n        goto label_110;\n    }\n    ecx = *((rsp + 0x2f0));\n    ecx -= *((rsp + 0xa8));\n    edx = 0x92492493;\n    ecx += 7;\n    eax = ecx;\n    edx:eax = eax * edx;\n    eax = rdx + rcx;\n    edx = ecx;\n    edx >>= 0x1f;\n    eax >>= 2;\n    eax -= edx;\n    edx = rax*8;\n    edx -= eax;\n    ecx -= edx;\n    rax = (int64_t) ecx;\n    rax += rsi;\n    if (rax overflow 0) {\n        goto label_110;\n    }\n    rdx = *((rsp + 0x9c));\n    rax += rdx;\n    __asm (\"seto dl\");\n    rcx = (int64_t) eax;\n    *((rsp + 0x9c)) = eax;\n    edx = (int32_t) dl;\n    ecx = 1;\n    if (rax != rcx) {\n        edx = ecx;\n    }\n    if (edx != 0) {\n        goto label_110;\n    }\n    *((rsp + 0xb0)) = 0xffffffff;\n    rax = fcn_0040ded0 (r15, rsp + 0x90);\n    rbx = rax;\n    if (rax == -1) {\n        goto label_110;\n    }\n    if (*((rsp + 0x3b9)) != 0) {\n        goto label_111;\n    }\nlabel_33:\n    rdi = *((rsp + 0x350));\n    rdx = *((rsp + 0x348));\n    rax = rdi;\n    rax |= rdx;\n    rax |= *((rsp + 0x358));\n    if (rax != 0) {\n        goto label_112;\n    }\n    eax = 0;\nlabel_34:\n    if (*((rsp + 0x3b0)) != 0) {\n        rdx = *((rsp + 0x2f8));\n        ecx = 0;\n        r12 = rdx;\n        rdx -= *((rsp + 0xb8));\n        __asm (\"seto cl\");\n        rbx -= rdx;\n        __asm (\"seto dl\");\n        edx = (int32_t) dl;\n        rcx |= rdx;\n        if (rcx != 0) {\n            goto label_113;\n        }\n    }\nlabel_36:\n    if (al != 0) {\n        goto label_114;\n    }\nlabel_35:\n    rax = *((rsp + 0x360));\n    r11 = rax * 0xe10;\n    *((rsp + 0x18)) = rax;\n    if (al overflow 0) {\n        goto label_13;\n    }\n    rsi = *((rsp + 0x378));\n    r9 = *((rsp + 0x340));\n    rdi = 0x112e0be826d694b3;\n    r9 += rsi;\n    r8 = rsi;\n    rax = r9;\n    r10 = r9;\n    rdx:rax = rax * rdi;\n    rax = rdx;\n    rdx = r9;\n    rdx >>= 0x3f;\n    rax >>= 0x1a;\n    rax -= rdx;\n    rdx = 0x44b82fa09b5a53;\n    rax *= 0x3b9aca00;\n    r10 -= rax;\n    r10 += 0x3b9aca00;\n    rcx = r10;\n    rcx >>= 9;\n    rax = rcx;\n    rdx:rax = rax * rdx;\n    rcx = rdx;\n    rcx >>= 0xb;\n    rcx *= 0x3b9aca00;\n    r10 -= rcx;\n    r9 -= r10;\n    rcx = r10;\n    rax = r9;\n    r9 >>= 0x3f;\n    rdx:rax = rax * rdi;\n    rax = rdx;\n    rax >>= 0x1a;\n    eax -= r9d;\n    rbx += r11;\n    if (rbx overflow 0) {\n        goto label_13;\n    }\n    r12 = *((rsp + 0x368));\n    rdx = r12 * 0x3c;\n    if (rbx overflow 0) {\n        goto label_13;\n    }\nlabel_46:\n    rbx += rdx;\n    if (rbx overflow 0) {\n        goto label_45;\n    }\n    r13 = *((rsp + 0x370));\n    rbx += r13;\n    if (rbx overflow 0) {\n        goto label_45;\n    }\n    rax = (int64_t) eax;\n    rbx += rax;\n    if (rbx overflow 0) {\n        goto label_45;\n    }\n    rax = *((rsp + 0x28));\n    *(rax) = rbx;\n    *((rax + 8)) = rcx;\n    if (bpl != 0) {\n        rax = r13;\n        rax |= r12;\n        rsi |= rax;\n        rsi |= *((rsp + 0x18));\n        if (rsi != 0) {\n            goto label_115;\n        }\n    }\nlabel_56:\n    ebx = *((rsp + 0x3b9));\n    goto label_27;\nlabel_98:\n    ebx = 1;\n    goto label_3;\nlabel_74:\n    r9d = *((rsp + 0x2fc));\n    rbx = *((rsp + 0x328));\n    if (r9d == 0) {\n        goto label_116;\n    }\n    if (r9d == 1) {\n        goto label_117;\n    }\n    if (rbx > 0x17) {\n        goto label_118;\n    }\nlabel_40:\n    r9d = ebx;\nlabel_38:\n    *((rsp + 0x98)) = r9d;\nlabel_39:\n    r10 = *((rsp + 0x330));\n    r11 = *((rsp + 0x338));\n    r8d = r10d;\n    *((rsp + 0x94)) = r10d;\n    edi = r11d;\n    *((rsp + 0x90)) = r11d;\n    if (cl != 0) {\n        goto label_119;\n    }\n    r9d = *((rsp + 0x98));\nlabel_32:\n    rcx = *((rsp + 0x388));\n    rcx |= *((rsp + 0x390));\n    rcx |= rax;\n    if (rcx == 0) {\n        goto label_28;\n    }\n    goto label_29;\nlabel_77:\n    eax = *((rsp + 0x2f4));\n    *((rsp + 0xb0)) = eax;\n    goto label_30;\nlabel_105:\n    edx = 5;\n    rax = dcgettext (0, \"error: out-of-range year %ld\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, r12, rdx, rcx, r8, r9);\n    goto label_31;\nlabel_75:\n    *((rsp + 0x90)) = 0;\n    *((rsp + 0x98)) = 0;\n    *((rsp + 0x340)) = 0;\n    if (cl != 0) {\n        goto label_76;\n    }\n    r9d = 0;\n    r8d = 0;\n    edi = 0;\n    goto label_32;\nlabel_111:\n    r12 = rsp + 0x190;\n    rax = fcn_00405410 (rsp + 0x90, rsp + 0x2e0, r12);\n    r12 = rax;\n    rax = fcn_004054b0 (rsp + 0x2e0, rsp + 0x270);\n    edx = 5;\n    r13 = rax;\n    rax = dcgettext (0, \"new start date: '%s' is '%s'\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, r13, r12, rcx, r8, r9);\nlabel_107:\n    if (*((rsp + 0x3b9)) == 0) {\n        goto label_33;\n    }\n    rax = *((rsp + 0x390));\n    if (*((rsp + 0x388)) != 0) {\n        goto label_120;\n    }\n    r12 = rsp + 0x190;\n    if (rax == 0) {\n        goto label_121;\n    }\nlabel_37:\n    rax = fcn_00405410 (rsp + 0x90, rsp + 0x2e0, r12);\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"starting date/time: '%s'\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, r12, rdx, rcx, r8, r9);\n    rdx = *((rsp + 0x348));\n    rdi = *((rsp + 0x350));\n    rcx = *((rsp + 0x358));\n    eax = *((rsp + 0x3b9));\n    rsi = rdx;\n    rsi |= rdi;\n    r11 = rsi;\n    r11 |= rcx;\n    if (r11 == 0) {\n        goto label_34;\n    }\n    if (al == 0) {\n        goto label_112;\n    }\n    if (rsi == 0) {\n        goto label_122;\n    }\n    if (*((rsp + 0x9c)) != 0xf) {\n        edx = 5;\n        rax = dcgettext (0, \"warning: when adding relative months/years, it is recommended to specify the 15th of the months\\n\");\n        eax = 0;\n        fcn_00404f90 (rax, rsi, rdx, rcx, r8, r9);\n        rcx = *((rsp + 0x358));\n    }\n    if (rcx != 0) {\n        goto label_122;\n    }\nlabel_47:\n    edx = 0;\n    rax = *((rsp + 0xa4));\n    rax += *((rsp + 0x348));\n    rcx = (int64_t) eax;\n    __asm (\"seto dl\");\n    if (rax != rcx) {\n        goto label_123;\n    }\n    if (edx != 0) {\n        goto label_123;\n    }\n    *((rsp + 0x18)) = eax;\n    rdi = *((rsp + 0x350));\nlabel_41:\n    rax = *((rsp + 0xa0));\n    rax += rdi;\n    r13 = rax;\n    __asm (\"seto al\");\n    rdx = (int64_t) r13d;\n    eax = (int32_t) al;\n    if (r13 != rdx) {\n        goto label_123;\n    }\n    if (eax != 0) {\n        goto label_123;\n    }\n    eax = 0;\n    r12 = *((rsp + 0x9c));\n    r12 += *((rsp + 0x358));\n    rdx = (int64_t) r12d;\n    __asm (\"seto al\");\n    if (r12 != rdx) {\n        goto label_123;\n    }\n    if (eax != 0) {\n        goto label_123;\n    }\n    eax = *((rsp + 0x18));\n    *((rsp + 0xa0)) = r13d;\n    *((rsp + 0x9c)) = r12d;\n    *((rsp + 0xa4)) = eax;\n    rax = *((rsp + 0xd0));\n    *((rsp + 0x90)) = rax;\n    eax = *((rsp + 0xd8));\n    *((rsp + 0x98)) = eax;\n    eax = *((rsp + 0xf0));\n    *((rsp + 0xb0)) = eax;\n    rax = fcn_0040ded0 (r15, rsp + 0x90);\n    rbx = rax;\n    if (rax == -1) {\n        goto label_124;\n    }\n    eax = *((rsp + 0x3b9));\n    if (al != 0) {\n        goto label_125;\n    }\n    if (*((rsp + 0x3b0)) == 0) {\n        goto label_35;\n    }\n    ecx = 0;\n    rdx = *((rsp + 0x2f8));\n    rdx -= *((rsp + 0xb8));\n    __asm (\"seto cl\");\n    rbx -= rdx;\n    __asm (\"seto dl\");\n    edx = (int32_t) dl;\n    rcx |= rdx;\n    if (rcx == 0) {\n        goto label_36;\n    }\n    ebx = 0;\n    goto label_3;\nlabel_104:\n    edx = 5;\n    rax = dcgettext (0, \"warning: adjusting year value %ld to %ld\\n\");\n    rdx = rbp;\n    r12 = rbp;\n    eax = 0;\n    fcn_00404f90 (rax, r12, rdx, rcx, r8, r9);\n    goto label_23;\nlabel_123:\n    if (*((rsp + 0x3b9)) == 0) {\n        goto label_13;\n    }\n    edx = 5;\n    ebx = 0;\n    rax = dcgettext (0, \"error: %s:%d\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, \"parse-datetime.y\", 0x877, rcx, r8, r9);\n    goto label_3;\nlabel_108:\n    if (*((rsp + 0x3b9)) == 0) {\n        goto label_33;\n    }\nlabel_43:\n    r12 = rsp + 0x190;\nlabel_49:\n    rax = fcn_004054b0 (rsp + 0x2e0, rsp + 0x270);\n    edx = 5;\n    r13 = rax;\n    rax = dcgettext (0, \"warning: day (%s) ignored when explicit dates are given\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, r13, rdx, rcx, r8, r9);\n    goto label_37;\nlabel_117:\n    rdi = rbx - 1;\n    r9d = rbx + 0xc;\n    if (rdi <= 0xa) {\n        goto label_38;\n    }\n    if (rbx != 0xc) {\n        goto label_126;\n    }\n    *((rsp + 0x98)) = 0xc;\n    r9d = 0xc;\n    goto label_39;\nlabel_116:\n    rdi = rbx - 1;\n    if (rdi <= 0xa) {\n        goto label_40;\n    }\n    if (rbx != 0xc) {\n        goto label_127;\n    }\n    *((rsp + 0x98)) = 0;\n    goto label_39;\nlabel_110:\n    if (*((rsp + 0x3b9)) == 0) {\n        goto label_13;\n    }\n    rax = fcn_00405410 (rsp + 0x90, rsp + 0x2e0, rsp + 0x190);\n    r12d = *((rsp + 0x2f0));\n    r13 = rax;\n    rbp = *((rsp + 0x2e8));\n    rax = fcn_004054b0 (rsp + 0x2e0, rsp + 0x270);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"error: day '%s' (day ordinal=%ld number=%d) resulted in an invalid date: '%s'\\n\");\n    eax = 0;\n    ebx = 0;\n    fcn_00404f90 (rax, rbx, rbp, r12d, r13, r9);\n    goto label_3;\nlabel_112:\n    rax = *((rsp + 0xa4));\n    rax += rdx;\n    __asm (\"seto dl\");\n    rcx = (int64_t) eax;\n    edx = (int32_t) dl;\n    if (rax != rcx) {\n        goto label_13;\n    }\n    if (edx != 0) {\n        goto label_13;\n    }\n    *((rsp + 0x18)) = eax;\n    goto label_41;\nlabel_76:\n    eax = 0;\n    fcn_00404f90 (\"warning: using midnight as starting time: 00:00:00\\n\", rsi, rdx, rcx, r8, r9);\n    do {\n        rax = *((rsp + 0x3a8));\n        edi = *((rsp + 0x90));\n        r8d = *((rsp + 0x94));\n        r9d = *((rsp + 0x98));\n        edx = *((rsp + 0x9c));\n        esi = *((rsp + 0xa0));\n        goto label_32;\nlabel_119:\n        r12 = rsp + 0x190;\n        r8d = \"%02d:%02d:%02d\";\n        edx = 1;\n        rdi = r12;\n        eax = 0;\n        ecx = 0x64;\n        esi = 0x64;\n        snprintf_chk ();\n        edx = 5;\n        if (*((rsp + 0x3a8)) == 0) {\n            goto label_128;\n        }\n        rax = dcgettext (0, \"using specified time as starting value: '%s'\\n\");\nlabel_48:\n        eax = 0;\n        rax = fcn_00404f90 (rax, r12, rdx, rcx, r8, r9);\n    } while (1);\nlabel_44:\n    ebp = *((rsp + 0x3b9));\nlabel_45:\n    if (bpl == 0) {\n        goto label_13;\n    }\n    edx = 5;\n    esi = \"error: adding relative time caused an overflow\\n\";\n    goto label_42;\nlabel_120:\n    if (rax != 0) {\n        goto label_43;\n    }\n    r12 = rsp + 0x190;\n    goto label_37;\nlabel_114:\n    rax = fcn_00405410 (rsp + 0x90, rsp + 0x2e0, rsp + 0x190);\n    edx = 5;\n    rax = dcgettext (0, '%s' = %ld epoch-seconds\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, rbp, rbx, rcx, r8, r9);\n    rax = *((rsp + 0x360));\n    r9 = rax * 0xe10;\n    *((rsp + 0x18)) = rax;\n    if (rax overflow 0) {\n        goto label_44;\n    }\n    rsi = *((rsp + 0x378));\n    r10 = *((rsp + 0x340));\n    rdi = 0x112e0be826d694b3;\n    ebp = *((rsp + 0x3b9));\n    r10 += rsi;\n    r8 = rsi;\n    rax = r10;\n    r11 = r10;\n    rdx:rax = rax * rdi;\n    rax = rdx;\n    rdx = r10;\n    rdx >>= 0x3f;\n    rax >>= 0x1a;\n    rax -= rdx;\n    rdx = 0x44b82fa09b5a53;\n    rax *= 0x3b9aca00;\n    r11 -= rax;\n    r11 += 0x3b9aca00;\n    rcx = r11;\n    rcx >>= 9;\n    rax = rcx;\n    rdx:rax = rax * rdx;\n    rcx = rdx;\n    rcx >>= 0xb;\n    rcx *= 0x3b9aca00;\n    r11 -= rcx;\n    r10 -= r11;\n    rcx = r11;\n    rax = r10;\n    r10 >>= 0x3f;\n    rdx:rax = rax * rdi;\n    rax = rdx;\n    rax >>= 0x1a;\n    eax -= r10d;\n    rbx += r9;\n    if (rbx overflow 0) {\n        goto label_45;\n    }\n    r12 = *((rsp + 0x368));\n    rdx = r12 * 0x3c;\n    if (rbx !overflow 0) {\n        goto label_46;\n    }\n    goto label_45;\nlabel_122:\n    if (*((rsp + 0x98)) == 0xc) {\n        goto label_47;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"warning: when adding relative days, it is recommended to specify noon\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, rsi, rdx, rcx, r8, r9);\n    goto label_47;\nlabel_128:\n    dcgettext (0, \"using current time as starting value: '%s'\\n\");\n    goto label_48;\nlabel_118:\n    *((rsp + 0x98)) = 0xffffffff;\nlabel_55:\n    if (cl == 0) {\n        goto label_13;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"error: invalid hour %ld%s\\n\");\n    ebx = 0;\n    eax = 0;\n    al = fcn_00404f90 (rax, rbx, rbp, rcx, r8, r9);\n    goto label_3;\nlabel_113:\n    if (al == 0) {\n        goto label_13;\n    }\n    edx = 5;\n    ebx = 0;\n    rax = dcgettext (0, \"error: timezone %d caused time_t overflow\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, r12d, rdx, rcx, r8, r9);\n    goto label_3;\nlabel_121:\n    edx = *((rsp + 0x9c));\n    eax = *((rsp + 0xa0));\n    *((rsp + 0x18)) = edx;\n    r13d = rax + 1;\n    rax = fcn_00404f20 (*((rsp + 0xa4)), rsp + 0x150);\n    edx = *((rsp + 0x18));\n    r8d = \"(Y-M-D) %s-%02d-%02d\";\n    rdi = r12;\n    r9 = rax;\n    ecx = 0x64;\n    esi = 0x64;\n    eax = 0;\n    edx = 1;\n    snprintf_chk ();\n    edx = 5;\n    rax = dcgettext (0, \"using current date as starting value: '%s'\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, r12, rdx, rcx, r8, r9);\n    if (*((rsp + 0x390)) == 0) {\n        goto label_37;\n    }\n    if (*((rsp + 0x388)) != 0) {\n        goto label_49;\n    }\n    goto label_37;\nlabel_106:\n    if (*((rsp + 0x3b9)) == 0) {\n        goto label_13;\n    }\n    edx = 5;\n    ebx = 0;\n    rax = dcgettext (0, \"error: tzalloc (\\\"%s\\\") failed\\n\");\n    eax = 0;\n    al = fcn_00404f90 (rax, rsp + 0x270, rdx, rcx, r8, r9);\n    goto label_3;\nlabel_80:\n    *((rsp + 0x5c)) = ecx;\n    *((rsp + 0x58)) = r8d;\n    *((rsp + 0x54)) = r9d;\n    *((rsp + 0x50)) = r10d;\n    if (al == 0) {\n        goto label_13;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"error: invalid date/time value:\\n\");\n    rbx = rsp + 0x270;\n    eax = 0;\n    fcn_00404f90 (rax, rsi, rdx, rcx, r8, r9);\n    rax = fcn_00405410 (rsp + 0xd0, rsp + 0x2e0, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"    user provided time: '%s'\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, rbp, rdx, rcx, r8, r9);\n    rax = fcn_00405410 (rsp + 0x90, rsp + 0x2e0, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"       normalized time: '%s'\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, rbp, rdx, rcx, r8, r9);\n    r10d = *((rsp + 0x50));\n    r9d = *((rsp + 0x54));\n    if (r10d == r9d) {\n        goto label_129;\n    }\n    r8d = *((rsp + 0x58));\n    ecx = *((rsp + 0x5c));\n    edx = 0x414a39;\n    eax = 0x4179a4;\n    if (r8d != ecx) {\n        rax = rdx;\n    }\nlabel_52:\n    esi = *((rsp + 0x30));\n    ecx = 0x4179a4;\n    esi = 0x414a39;\n    if (*((rsp + 0x28)) != esi) {\n        rcx = rsi;\n    }\n    r8 = rsi;\n    edi = *((rsp + 0x20));\n    if (*((rsp + 0x10)) != edi) {\n        goto label_50;\n    }\n    goto label_51;\nlabel_125:\n    rcx = *((rsp + 0x358));\n    rax = *((rsp + 0x350));\n    edx = 5;\n    *((rsp + 0x38)) = rcx;\n    rcx = *((rsp + 0x348));\n    *((rsp + 0x20)) = rax;\n    *((rsp + 0x30)) = rcx;\n    rax = dcgettext (0, \"after date adjustment (%+ld years, %+ld months, %+ld days),\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, *((rsp + 0x30)), *((rsp + 0x20)), *((rsp + 0x38)), r8, r9);\n    rax = fcn_00405410 (rsp + 0x90, rsp + 0x2e0, rsp + 0x190);\n    edx = 5;\n    *((rsp + 0x20)) = rax;\n    rax = dcgettext (0, \"    new date/time = '%s'\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, *((rsp + 0x20)), rdx, rcx, r8, r9);\n    eax = *((rsp + 0xf0));\n    if (eax != 0xffffffff) {\n        if (eax == *((rsp + 0xb0))) {\n            goto label_130;\n        }\n        edx = 5;\n        rax = dcgettext (0, \"warning: daylight saving time changed after date adjustment\\n\");\n        eax = 0;\n        fcn_00404f90 (rax, rsi, rdx, rcx, r8, r9);\n    }\nlabel_130:\n    if (*((rsp + 0x358)) == 0) {\n        if (r12d == *((rsp + 0x9c))) {\n            if (*((rsp + 0x350)) != 0) {\n                goto label_131;\n            }\n            if (r13d == *((rsp + 0xa0))) {\n                goto label_131;\n            }\n        }\n        edx = 5;\n        rax = dcgettext (0, \"warning: month/year adjustment resulted in shifted dates:\\n\");\n        eax = 0;\n        fcn_00404f90 (rax, rsi, rdx, rcx, r8, r9);\n        rax = fcn_00404f20 (*((rsp + 0x18)), rsp + 0x150);\n        edx = 5;\n        *((rsp + 0x18)) = rax;\n        rax = dcgettext (0, \"     adjusted Y M D: %s %02d %02d\\n\");\n        eax = 0;\n        fcn_00404f90 (rax, *((rsp + 0x18)), r13 + 1, r12d, r8, r9);\n        ecx = *((rsp + 0x9c));\n        eax = *((rsp + 0xa0));\n        *((rsp + 0x18)) = ecx;\n        r12d = rax + 1;\n        rax = fcn_00404f20 (*((rsp + 0xa4)), rsp + 0x150);\n        edx = 5;\n        r13 = rax;\n        rax = dcgettext (0, \"   normalized Y M D: %s %02d %02d\\n\");\n        eax = 0;\n        fcn_00404f90 (rax, r13, r12d, *((rsp + 0x18)), r8, r9);\n    }\nlabel_131:\n    eax = *((rsp + 0x3b9));\n    goto label_34;\nlabel_81:\n    if (al == 0) {\n        goto label_13;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"error: invalid date/time value:\\n\");\n    rbx = rsp + 0x270;\n    eax = 0;\n    fcn_00404f90 (rax, rsi, rdx, rcx, r8, r9);\n    rax = fcn_00405410 (rsp + 0xd0, rsp + 0x2e0, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"    user provided time: '%s'\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, rbp, rdx, rcx, r8, r9);\n    rax = fcn_00405410 (rsp + 0x90, rsp + 0x2e0, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"       normalized time: '%s'\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, rbp, rdx, rcx, r8, r9);\n    edx = 0x4179a4;\n    rax = rdx;\n    goto label_52;\nlabel_86:\n    dcgettext (0, \"missing timezone\");\n    goto label_53;\nlabel_84:\n    edx = 5;\n    rax = dcgettext (0, \"       non-existing due to daylight-saving time;\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, rsi, rdx, rcx, r8, r9);\n    goto label_54;\nlabel_127:\n    *((rsp + 0x98)) = 0xffffffff;\n    goto label_55;\nlabel_126:\n    *((rsp + 0x98)) = 0xffffffff;\n    goto label_55;\nlabel_124:\n    if (*((rsp + 0x3b9)) == 0) {\n        goto label_13;\n    }\n    rax = fcn_00405410 (rsp + 0x90, rsp + 0x2e0, rsp + 0x190);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"error: adding relative date resulted in an invalid date: '%s'\\n\");\n    ebx = 0;\n    eax = 0;\n    fcn_00404f90 (rax, rbx, rdx, rcx, r8, r9);\n    goto label_3;\nlabel_115:\n    edx = 5;\n    *((rsp + 0x20)) = r8d;\n    rax = dcgettext (0, \"after time adjustment (%+ld hours, %+ld minutes, %+ld seconds, %+d ns),\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, *((rsp + 0x18)), r12, r13, *((rsp + 0x20)), r9);\n    edx = 5;\n    rax = dcgettext (0, \"    new time = %ld epoch-seconds\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, rbx, rdx, rcx, r8, r9);\n    if (*((rsp + 0xb0)) == 0xffffffff) {\n        goto label_56;\n    }\n    rax = fcn_0040de20 (r15, *((rsp + 0x28)), rsp + 0x150);\n    if (rax == 0) {\n        goto label_56;\n    }\n    eax = *((rsp + 0x170));\n    if (*((rsp + 0xb0)) == eax) {\n        goto label_56;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"warning: daylight saving time changed after time adjustment\\n\");\n    eax = 0;\n    fcn_00404f90 (rax, rsi, rdx, rcx, r8, r9);\n    goto label_56;\nlabel_129:\n    edx = 0x4179a4;\n    eax = 0x414a39;\n    goto label_52;\n}\n"
        },
        {
            "funcName": "fcn_00409c00",
            "funcStartAddr": "0x409c00",
            "funcEndAddr": "0x409c8b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x409c00 */\n#include <stdint.h>\n \nuint64_t fcn_00409c00 (int64_t arg1, signed int64_t arg2, uint32_t arg3, int64_t arg4) {\n    time_t * timer;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    if (rdx != 1) {\n        if (rdx == 2) {\n            ecx &= 2;\n            if (ecx == 0) {\n                goto label_0;\n            }\n            eax = *(rsi) * 0x64;\n            eax += *((rsi + 4));\n            eax -= 0x76c;\n            *(rdi) = eax;\n            eax = 1;\n            return eax;\n        }\n        rbx = rdi;\n        time (rsp + 8);\n        rax = localtime (rsp + 8);\n        if (rax != 0) {\n            eax = *((rax + 0x14));\n            *(rbx) = eax;\n            eax = 1;\n        }\n        return rax;\n    }\n    edx = *(rsi);\n    eax = 1;\n    *(rdi) = edx;\n    if (*(rsi) <= 0x44) {\n        ecx &= 8;\n        if (ecx != 0) {\n            goto label_0;\n        }\n        edx += 0x64;\n        *(rdi) = edx;\n        return rax;\n    }\n    return rax;\nlabel_0:\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00409c90",
            "funcStartAddr": "0x409c90",
            "funcEndAddr": "0x409f37",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x409c90 */\n#include <stdint.h>\n \nuint64_t fcn_00409c90 (int64_t arg1, int64_t arg3, char * s) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_20h;\n    int64_t var_24h;\n    int64_t var_28h;\n    int64_t var_2ch;\n    int64_t var_30h;\n    int64_t var_34h;\n    int64_t var_50h;\n    int64_t var_60h;\n    int64_t var_64h;\n    int64_t var_68h;\n    int64_t var_6ch;\n    int64_t var_70h;\n    int64_t var_80h;\n    rdi = arg1;\n    rdx = arg3;\n    rsi = s;\nlabel_2:\n    r12 = rdi;\n    rdi = rsi;\n    rbx = rsi;\n    rax = strlen (rdi);\n    r13 = rax;\n    if ((bpl & 4) == 0) {\n        goto label_8;\n    }\n    rax = strchr (rbx, 0x2e);\n    r14 = rax;\n    if (rax == 0) {\n        goto label_4;\n    }\n    rax -= rbx;\n    r13 -= rax;\n    if (r13 == 3) {\n        goto label_9;\n    }\n    do {\nlabel_0:\n        eax = 0;\nlabel_3:\n        return rax;\nlabel_9:\n        r13 = rax;\nlabel_4:\n        rax = r13 - 8;\n    } while (rax > 4);\n    if ((r13b & 1) != 0) {\n        goto label_0;\n    }\n    rax = rbx;\n    rcx = r13 + rbx;\nlabel_1:\n    edx = *(rax);\n    edx -= 0x30;\n    if (edx > 9) {\n        goto label_0;\n    }\n    rax++;\n    if (rcx != rax) {\n        goto label_1;\n    }\n    r13 >>= 1;\n    edx = 0;\n    do {\n        eax = *((rbx + rdx*2));\n        ecx = rax * 5;\n        eax = *((rbx + rdx*2 + 1));\n        eax = rax + rcx*2 - 0x30;\n        *((rsp + rdx*4 + 0x60)) = eax;\n        rdx++;\n    } while (r13 != rdx);\n    rdx = r13 - 4;\n    if ((bpl & 1) == 0) {\n        goto label_10;\n    }\n    eax = *((rsp + 0x60));\n    eax--;\n    *((rsp + 0x30)) = eax;\n    eax = *((rsp + 0x64));\n    *((rsp + 0x2c)) = eax;\n    eax = *((rsp + 0x68));\n    *((rsp + 0x28)) = eax;\n    eax = *((rsp + 0x6c));\n    *((rsp + 0x24)) = eax;\n    al = fcn_00409c00 (rsp + 0x34, rsp + 0x70, rdx, ebp);\n    if (al == 0) {\n        goto label_0;\n    }\nlabel_5:\n    if (r14 == 0) {\n        goto label_11;\n    }\n    eax = *((r14 + 1));\n    eax -= 0x30;\n    if (eax > 9) {\n        goto label_0;\n    }\n    edx = *((r14 + 2));\n    ecx = rdx - 0x30;\n    if (ecx > 9) {\n        goto label_0;\n    }\n    eax = rax * 5;\n    eax = rdx + rax*2 - 0x30;\n    *((rsp + 0x20)) = eax;\nlabel_7:\n    *((rsp + 0x60)) = eax;\n    eax = *((rsp + 0x24));\n    *((rsp + 0x80)) = 0xffffffff;\n    *((rsp + 0x64)) = eax;\n    rax = *((rsp + 0x28));\n    *((rsp + 0x68)) = rax;\n    rax = *((rsp + 0x30));\n    *((rsp + 0x70)) = rax;\n    rax = fcn_0040da50 (rsp + 0x60);\n    rdx = rsp + 0x60;\n    *(rsp) = rax;\n    if (rax == -1) {\n        goto label_12;\n    }\nlabel_6:\n    eax = *((rsp + 0x34));\n    ecx = *((rsp + 0x30));\n    eax ^= *((rdx + 0x14));\n    ecx ^= *((rdx + 0x10));\n    eax |= ecx;\n    ecx = *((rsp + 0x2c));\n    ecx ^= *((rdx + 0xc));\n    eax |= ecx;\n    esi = *((rsp + 0x20));\n    ecx = *((rsp + 0x28));\n    edi = *(rdx);\n    ecx ^= *((rdx + 8));\n    eax |= ecx;\n    ecx = *((rsp + 0x24));\n    ecx ^= *((rdx + 4));\n    eax |= ecx;\n    edi ^= esi;\n    eax |= edi;\n    if (eax == 0) {\n        goto label_13;\n    }\n    if (esi != 0x3c) {\n        goto label_0;\n    }\n    edx = 0x10;\n    rsi = rbx;\n    rdi = rsp + 0x10;\n    stpcpy_chk ();\n    edx = 0x3935;\n    *((rax - 2)) = dx;\n    *(rax) = 0;\n    al = fcn_00409c90 (rsp + 8, rsp + 0x10, ebp);\n    goto label_2;\n    if (al == 0) {\n        goto label_3;\n    }\nlabel_13:\n    rax = *(rsp);\n    *(r12) = rax;\n    eax = 1;\n    return rax;\nlabel_8:\n    r14d = 0;\n    goto label_4;\nlabel_10:\n    al = fcn_00409c00 (rsp + 0x34, rsp + 0x60, rdx, ebp);\n    if (al == 0) {\n        goto label_0;\n    }\n    rax = rsp + r13*4 + 0x50;\n    esi = *(rax);\n    edx = rsi - 1;\n    *((rsp + 0x30)) = edx;\n    edx = *((rax + 4));\n    *((rsp + 0x2c)) = edx;\n    edx = *((rax + 8));\n    eax = *((rax + 0xc));\n    *((rsp + 0x28)) = edx;\n    *((rsp + 0x24)) = eax;\n    goto label_5;\nlabel_12:\n    rax = localtime (rsp);\n    rdx = rax;\n    if (rax != 0) {\n        goto label_6;\n    }\n    goto label_0;\nlabel_11:\n    *((rsp + 0x20)) = 0;\n    eax = 0;\n    goto label_7;\n}\n"
        },
        {
            "funcName": "fcn_00409f40",
            "funcStartAddr": "0x409f40",
            "funcEndAddr": "0x409fd9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x409f40 */\n#include <stdint.h>\n \nuint64_t fcn_00409f40 (char ** arg1) {\n    rdi = arg1;\n    if (rdi != 0) {\n        rbx = rdi;\n        rax = strrchr (rdi, 0x2f);\n        if (rax != 0) {\n            r8 = rax + 1;\n            rdx = r8;\n            rdx -= rbx;\n            if (rdx <= 6) {\n                goto label_0;\n            }\n            rsi = rax - 6;\n            edi = \"/.libs/\";\n            ecx = 7;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (rdx > 6) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            edi = 0x416798;\n            ecx = 3;\n            rsi = r8;\n            rbx = r8;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (dl > 0) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            rbx = rax + 4;\n            *(obj.__progname) = rbx;\n        }\nlabel_0:\n        *(0x0061b350) = rbx;\n        *(obj.program_invocation_name) = rbx;\n        return rax;\n    }\n    fwrite (\"A NULL argv[0] was passed through an exec system call.\\n\", 1, 0x37, *(obj.stderr));\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_00409fe0",
            "funcStartAddr": "0x409fe0",
            "funcEndAddr": "0x40a0d2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x409fe0 */\n#include <stdint.h>\n \nuint64_t fcn_00409fe0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edx = 5;\n    r12d = esi;\n    rsi = rdi;\n    rax = dcgettext (0, rsi);\n    rbx = rax;\n    while (1) {\nlabel_0:\n        rax = rbx;\n        return rax;\n        rax = fcn_0040e190 ();\n        edx = *(rax);\n        edx &= 0xffffffdf;\n        if (dl != 0x55) {\n            goto label_1;\n        }\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x54) {\n            goto label_2;\n        }\n        edx = *((rax + 2));\n        edx &= 0xffffffdf;\n        if (dl != 0x46) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x2d) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0) {\n            goto label_2;\n        }\n        eax = 0x41679c;\n        ebx = 0x4167a7;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n    }\nlabel_1:\n    if (dl == 0x47) {\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x42) {\n            goto label_2;\n        }\n        if (*((rax + 2)) != 0x31) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0x33) {\n            goto label_2;\n        }\n        if (*((rax + 6)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 7)) != 0) {\n            goto label_2;\n        }\n        eax = 0x4167a0;\n        ebx = 0x4167a3;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n        goto label_0;\n    }\nlabel_2:\n    eax = 0x417977;\n    ebx = 0x414a3f;\n    if (r12d != 9) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040a0e0",
            "funcStartAddr": "0x40a0e0",
            "funcEndAddr": "0x413641",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40a0e0 */\n#include <stdint.h>\n \nuint64_t fcn_0040a0e0 (int64_t arg_e8h_3, uint32_t arg_e8h_2, int64_t arg_e8h, char * arg_e0h, int64_t arg1, char * arg2, char * arg3, size_t * arg4, int64_t arg5, int64_t arg6) {\n    size_t * var_8h;\n    size_t * var_10h;\n    uint32_t var_1fh;\n    char * s;\n    size_t n;\n    size_t * var_30h;\n    size_t * var_38h;\n    size_t var_40h;\n    size_t var_48h;\n    void * s2;\n    char * var_58h;\n    uint32_t var_60h;\n    int64_t var_68h;\n    uint32_t var_6ch;\n    char * var_6dh;\n    int64_t var_6eh;\n    int64_t var_6fh;\n    int64_t var_70h;\n    int64_t var_78h;\n    wint_t wc;\n    mbstate_t * ps;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    do {\n        /* [13] -r-x section size 68856 named .text */\n        abort ();\nlabel_5:\n        r15 = rdi;\n        r14 = rsi;\n        r13d = r8d;\n        *((rsp + 0x20)) = rdx;\n        *((rsp + 8)) = rcx;\n        *((rsp + 0x68)) = r9d;\n        rax = ctype_get_mb_cur_max ();\n        ebp &= 2;\n        *((rsp + 0x60)) = rax;\n        rsp + 0x6c = (ebp != 0) ? 1 : 0;\n    } while (r13d > 0xa);\n    eax = r13d;\n    r11 = *((rsp + 8));\n    /* switch table (11 cases) at 0x416800 */\nlabel_30:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    r13d = 2;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x417977;\nlabel_21:\n    r9 = r11;\n    r12d = 0;\n    r11d = r13d;\n    do {\nlabel_28:\n        r13b = (r9 != r12) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            r13b = (*((rax + r12)) != 0) ? 1 : 0;\n        }\n        if (r13b == 0) {\n            goto label_47;\n        }\n        rdi = *((rsp + 0x20));\n        al = (r11d != 2) ? 1 : 0;\n        al &= *((rsp + 8));\n        r8 = rdi + r12;\n        *((rsp + 0x10)) = al;\n        if (al == 0) {\n            goto label_48;\n        }\n        rax = *((rsp + 0x28));\n        if (rax == 0) {\n            goto label_49;\n        }\n        rbp = r12 + rax;\n        if (r9 == -1) {\n            if (rax <= 1) {\n                goto label_50;\n            }\n            *((rsp + 0x40)) = r11d;\n            *((rsp + 0x38)) = r10b;\n            *((rsp + 0x30)) = r8;\n            rax = strlen (rdi);\n            r11d = *((rsp + 0x40));\n            r10d = *((rsp + 0x38));\n            r8 = *((rsp + 0x30));\n            r9 = rax;\n        }\nlabel_50:\n        if (rbp > r9) {\n            goto label_49;\n        }\n        rdi = r8;\n        *((rsp + 0x48)) = r11d;\n        *((rsp + 0x40)) = r9;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        eax = memcmp (rdi, *((rsp + 0x50)), *((rsp + 0x28)));\n        r8 = *((rsp + 0x30));\n        r10d = *((rsp + 0x38));\n        r9 = *((rsp + 0x40));\n        r11d = *((rsp + 0x48));\n        if (eax != 0) {\n            goto label_49;\n        }\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_51;\n        }\n        ebp = *(r8);\n        if (bpl > 0x7e) {\n            goto label_52;\n        }\n        eax = (int32_t) bpl;\n        /* switch table (127 cases) at 0x416858 */\n        *((rsp + 0x10)) = 0;\n        al = (r9 != 1) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            al = (*((rax + 1)) != 0) ? 1 : 0;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        if (al != 0) {\n            goto label_7;\n        }\nlabel_17:\n        if (r12 != 0) {\n            goto label_7;\n        }\nlabel_18:\n        if (*((rsp + 0x6c)) != 0) {\n            if (dl != 0) {\n                goto label_53;\n            }\n        }\nlabel_2:\n        eax = *((rsp + 8));\n        eax ^= 1;\n        eax |= edx;\n        eax ^= 1;\n        al |= *((rsp + 0x6c));\n        if (al == 0) {\n            goto label_11;\n        }\nlabel_24:\n        eax = 0;\nlabel_10:\n        if (*((rsp + 0xd0)) == 0) {\n            goto label_11;\n        }\n        edx = ebp;\n        rcx = *((rsp + 0xd0));\n        dl >>= 5;\n        edx = (int32_t) dl;\n        edx = *((rcx + rdx*4));\n        ecx = ebp;\n        edx >>= cl;\n        edx &= 1;\n        if (edx == 0) {\n            goto label_11;\n        }\n        dl = (r11d == 2) ? 1 : 0;\nlabel_0:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_54;\n        }\nlabel_4:\n        eax = r10d;\n        eax ^= 1;\n        al &= dl;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rdx = rbx + 1;\n            if (rdx < r14) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rdx = rbx + 2;\n            if (rdx < r14) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\nlabel_9:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n        r12++;\nlabel_1:\n        if (rbx < r14) {\n            *((r15 + rbx)) = bpl;\n        }\n        edi = *((rsp + 0x1f));\n        rbx++;\n        eax = 0;\n        if (r13b == 0) {\n            edi = eax;\n        }\n        *((rsp + 0x1f)) = dil;\n    } while (1);\nlabel_3:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    if (r14 == 0) {\n        goto label_56;\n    }\n    edx = 0;\n    if (*((rsp + 0x58)) != 0) {\n        goto label_56;\n    }\nlabel_27:\n    *((rsp + 0x6d)) = r13b;\n    rbx += 3;\n    eax = 0;\n    r10d = 0;\n    *((rsp + 0x58)) = r14;\n    r14 = rdx;\nlabel_11:\n    dl = (r11d == 2) ? 1 : 0;\n    if (*((rsp + 0x10)) != 0) {\n        goto label_0;\n    }\n    eax ^= 1;\n    r12++;\n    eax &= r10d;\nlabel_16:\n    if (al == 0) {\n        goto label_1;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x27;\n    }\n    rbx += 2;\n    r10d = 0;\n    goto label_1;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_57;\n    }\n    if (r11d == 5) {\n        goto label_58;\n    }\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_3;\n    }\n    *((rsp + 0x6d)) = r13b;\n    edx = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\nlabel_15:\n    edx = *((rsp + 8));\n    dl &= *((rsp + 0x6c));\n    ecx = 0x5c;\n    al = (*((rsp + 0x28)) != 0) ? 1 : 0;\n    dl &= al;\n    if (dl != 0) {\n        goto label_59;\n    }\nlabel_8:\n    if (*((rsp + 8)) != 0) {\n        goto label_60;\n    }\nlabel_7:\n    r13d = 0;\n    goto label_2;\nlabel_6:\n    edx = 0;\n    r13d = 0;\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_4;\n    }\nlabel_54:\n    r13d = r11d;\n    eax = edx;\n    r11 = r9;\nlabel_42:\nlabel_12:\n    eax = 4;\n    if (*((rsp + 8)) != 0) {\n        r13d = eax;\n    }\nlabel_43:\n    r9d &= 0xfffffffd;\n    rax = fcn_0040a0e0 (r15, r14, *((rsp + 0x40)), r11, r13d, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\nlabel_44:\n    rax = rbx;\n    return rax;\n    goto label_6;\n    *((rsp + 0x10)) = 0;\n    edx = 0;\n    goto label_7;\n    *((rsp + 0x10)) = 0;\n    ecx = 0x72;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    do {\nlabel_20:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_61;\n        }\nlabel_34:\n        r13d = 0;\n        goto label_9;\n    } while (1);\nlabel_14:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_62;\n    }\n    *((rsp + 0x10)) = 0;\n    eax = r10d;\n    dl = (r11d == 2) ? 1 : 0;\n    eax ^= 1;\n    al &= dl;\n    if (al == 0) {\n        goto label_63;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rcx = rbx + 1;\n    if (r14 > rcx) {\n        *((r15 + rbx + 1)) = 0x24;\n    }\n    rcx = rbx + 2;\n    if (r14 > rcx) {\n        *((r15 + rbx + 2)) = 0x27;\n    }\n    rcx = rbx + 3;\n    if (r14 <= rcx) {\n        goto label_64;\n    }\nlabel_26:\n    *((r15 + rcx)) = 0x5c;\n    r10d = eax;\nlabel_25:\n    rbx = rcx + 1;\n    if (r11d == 2) {\n        goto label_65;\n    }\n    rax = r12 + 1;\n    if (rax < r9) {\n        rax = *((rsp + 0x20));\n        eax = *((rax + r12 + 1));\n        *((rsp + 0x30)) = al;\n        eax -= 0x30;\n        if (al <= 9) {\n            goto label_66;\n        }\n    }\nlabel_35:\n    eax = *((rsp + 8));\n    eax ^= 1;\n    al |= dl;\n    eax = r13d;\n    r13d = 0;\n    if (al == 0) {\n        goto label_10;\n    }\n    goto label_11;\nlabel_19:\n    *((rsp + 0x10)) = 0;\n    do {\nlabel_52:\n        if (*((rsp + 0x60)) != 1) {\n            goto label_67;\n        }\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r9;\n        *((rsp + 0x30)) = r10b;\n        rax = ctype_b_loc ();\n        edx = (int32_t) bpl;\n        r10d = *((rsp + 0x30));\n        r9 = *((rsp + 0x38));\n        rax = *(rax);\n        r11d = *((rsp + 0x40));\n        edi = 1;\n        eax = *((rax + rdx*2));\n        ax &= 0x4000;\n        r13b = (ax != 0) ? 1 : 0;\n        dl = (ax == 0) ? 1 : 0;\n        dl &= *((rsp + 8));\nlabel_37:\n        if (dl != 0) {\n            goto label_68;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        goto label_2;\nlabel_48:\n        ebp = *(r8);\n    } while (bpl > 0x7e);\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x416c50 */\n    ecx = 0x6e;\nlabel_13:\n    eax = *((rsp + 0x6c));\n    dl = (r11d == 2) ? 1 : 0;\n    al &= dl;\n    *((rsp + 0x10)) = al;\n    if (al == 0) {\n        goto label_8;\n    }\nlabel_53:\n    r11 = r9;\n    r13d = 2;\n    goto label_12;\n    ecx = 0x74;\n    goto label_13;\n    ecx = 0x62;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x61;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    if (*((rsp + 8)) != 0) {\n        goto label_14;\n    }\n    if ((*((rsp + 0x68)) & 1) != 0) {\n        goto label_69;\n    }\n    *((rsp + 0x10)) = 0;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    ebp = 0;\n    goto label_2;\n    if (r11d != 2) {\n        goto label_15;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_17;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_18;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_18;\n    ecx = 0x72;\n    goto label_13;\n    ecx = 0x66;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x76;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\nlabel_49:\n    ebp = *(r8);\n    if (bpl > 0x7e) {\n        goto label_19;\n    }\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x417048 */\n    eax = 0;\n    do {\nlabel_31:\n        r13d = *((rsp + 0x10));\n        *((rsp + 0x10)) = al;\n        eax = 0;\n        goto label_10;\n        eax = 0;\nlabel_32:\n        if (r12 != 0) {\n            goto label_70;\n        }\n        r13d = *((rsp + 0x10));\n        edx = 0;\n        *((rsp + 0x10)) = al;\n        goto label_2;\n        eax = 0;\nlabel_33:\n    } while (1);\n    goto label_6;\n    goto label_20;\nlabel_47:\n    r13d = r11d;\n    r11 = r9;\n    dl = (r13d == 2) ? 1 : 0;\n    if (rbx == 0) {\n        if ((*((rsp + 0x6c)) & dl) != 0) {\n            goto label_71;\n        }\n    }\n    eax = *((rsp + 0x6c));\n    eax ^= 1;\n    dl &= al;\n    if (dl == 0) {\n        goto label_72;\n    }\n    if (*((rsp + 0x6d)) == 0) {\n        goto label_45;\n    }\n    if (*((rsp + 0x1f)) != 0) {\n        goto label_73;\n    }\n    al = (r14 == 0) ? 1 : 0;\n    dl = (*((rsp + 0x58)) != 0) ? 1 : 0;\n    al &= dl;\n    if (al == 0) {\n        goto label_74;\n    }\n    r14 = *((rsp + 0x58));\nlabel_46:\n    *(r15) = 0x27;\n    r13d = 2;\n    ebx = 1;\n    *((rsp + 0x50)) = 0x417977;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x6c)) = 0;\n    *((rsp + 0x6d)) = al;\n    goto label_21;\nlabel_58:\n    if ((*((rsp + 0x68)) & 4) != 0) {\n        rax = r12 + 2;\n        if (rax >= r9) {\n            goto label_39;\n        }\n        rsi = *((rsp + 0x20));\n        if (*((rsi + r12 + 1)) == 0x3f) {\n            goto label_75;\n        }\n    }\nlabel_39:\n    edx = 0;\n    r13d = 0;\n    goto label_2;\nlabel_57:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r13d = 0;\n    eax = 0;\n    goto label_11;\nlabel_67:\n    *((rsp + 0x88)) = 0;\n    if (r9 == -1) {\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        rax = strlen (*((rsp + 0x20)));\n        r11d = *((rsp + 0x40));\n        r10d = *((rsp + 0x38));\n        r8 = *((rsp + 0x30));\n        r9 = rax;\n    }\n    eax = 0;\n    *((rsp + 0x70)) = rbx;\n    *((rsp + 0x78)) = r8;\n    rbx = rax;\n    *((rsp + 0x6e)) = r10b;\n    *((rsp + 0x6f)) = bpl;\n    *((rsp + 0x40)) = r15;\n    *((rsp + 0x48)) = r14;\n    *((rsp + 0x30)) = r9;\n    *((rsp + 0x38)) = r11d;\n    while (*((rsp + 0x38)) != 2) {\nlabel_22:\n        eax = iswprint (*((rsp + 0x84)));\n        rdi = rsp + 0x88;\n        eax = 0;\n        if (eax == 0) {\n            r13d = eax;\n        }\n        rbx += r14;\n        eax = mbsinit (rdi);\n        if (eax != 0) {\n            goto label_76;\n        }\n        rax = *((rsp + 0x20));\n        r15 = r12 + rbx;\n        rbp = rax + r15;\n        rdx -= r15;\n        rax = fcn_0040d310 (rsp + 0x84, rbp, *((rsp + 0x30)), rsp + 0x88);\n        r14 = rax;\n        if (rax == 0) {\n            goto label_76;\n        }\n        if (rax == -1) {\n            goto label_77;\n        }\n        if (rax == 0xfffffffffffffffe) {\n            goto label_78;\n        }\n    }\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_22;\n    }\n    if (rax == 1) {\n        goto label_22;\n    }\n    rsi = *((rsp + 0x20));\n    rax = rsi + r15 + 1;\n    rsi += r14;\n    rsi += r15;\n    goto label_79;\nlabel_23:\n    rax++;\n    if (rsi == rax) {\n        goto label_22;\n    }\nlabel_79:\n    ecx = *(rax);\n    ecx -= 0x5b;\n    if (cl > 0x21) {\n        goto label_23;\n    }\n    edx = 1;\n    rdx <<= cl;\n    rcx = 0x20000002b;\n    if ((rdx & rcx) == 0) {\n        goto label_23;\n    }\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r13d = 2;\n    r11 = *((rsp + 0x30));\n    goto label_12;\nlabel_70:\n    *((rsp + 0x10)) = al;\n    r13d = 0;\n    goto label_24;\nlabel_63:\n    rcx = rbx;\n    if (r14 <= rbx) {\n        goto label_25;\n    }\n    eax = r10d;\n    goto label_26;\nlabel_56:\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x5c;\n    }\n    rax = rbx + 2;\n    if (r14 <= rax) {\n        goto label_80;\n    }\n    rdx = r14;\n    *((r15 + rbx + 2)) = 0x27;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_69:\n    r12++;\n    goto label_28;\nlabel_68:\n    edx = *((rsp + 8));\n    r13d = 0;\nlabel_36:\n    rcx = rdi;\n    *((rsp + 0x30)) = r13b;\n    esi = 0;\n    r13d = *((rsp + 0x6c));\n    rcx += r12;\n    edi = *((rsp + 0x10));\n    r8 = *((rsp + 0x20));\n    while (dl != 0) {\n        al = (r11d == 2) ? 1 : 0;\n        if (r13b != 0) {\n            goto label_81;\n        }\n        esi = r10d;\n        esi ^= 1;\n        al &= sil;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rsi = rbx + 1;\n            if (r14 > rsi) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rsi = rbx + 2;\n            if (r14 > rsi) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 6;\n            eax += 0x30;\n            *((r15 + rbx + 1)) = al;\n        }\n        rax = rbx + 2;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 3;\n            eax &= 7;\n            eax += 0x30;\n            *((r15 + rbx + 2)) = al;\n        }\n        ebp &= 7;\n        r12++;\n        rbx += 3;\n        ebp += 0x30;\n        if (r12 >= rcx) {\n            goto label_82;\n        }\n        esi = edx;\nlabel_29:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = bpl;\n        }\n        ebp = *((r8 + r12));\n        rbx++;\n    }\n    eax = esi;\n    eax ^= 1;\n    eax &= r10d;\n    if (dil != 0) {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n    }\n    r12++;\n    if (r12 < rcx) {\n        if (al == 0) {\n            goto label_83;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x27;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            *((r15 + rbx + 1)) = 0x27;\n        }\n        rbx += 2;\n        edi = 0;\n        r10d = 0;\n        goto label_29;\n    }\n    r13d = *((rsp + 0x30));\n    goto label_16;\nlabel_81:\n    r13d = r11d;\n    *((rsp + 8)) = al;\n    r11 = r9;\n    goto label_12;\nlabel_64:\n    rbx += 4;\n    r10d = eax;\n    r13d = 0;\n    goto label_11;\n    if (ebp != 0) {\n        goto label_30;\n    }\n    *((rsp + 8)) = 1;\n    do {\n        if (r14 != 0) {\n            goto label_84;\n        }\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 1;\n        r13d = 2;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x417977;\n        goto label_21;\n        if (ebp != 0) {\n            goto label_85;\n        }\n        if (r14 == 0) {\n            goto label_86;\n        }\n        *(r15) = 0x22;\n        r10d = 0;\n        *((rsp + 0x1f)) = 1;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\nlabel_38:\n        *((rsp + 0x6c)) = 0;\n        ebx = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x414a3f;\n        goto label_21;\n        if (r14 != 0) {\n            *((rsp + 8)) = r11;\n            rax = fcn_00409fe0 (0x4167ab, r13d);\n            *((rsp + 0xd8)) = rax;\n            rax = fcn_00409fe0 (0x417977, r13d);\n            r11 = *((rsp + 8));\n            *((rsp + 0xe0)) = rax;\n        }\n        ebx = 0;\n        if (ebp == 0) {\n            goto label_87;\n        }\nlabel_41:\n        *((rsp + 0x10)) = r11;\n        rax = strlen (*((rsp + 0xe0)));\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        r11 = *((rsp + 0x10));\n        *((rsp + 0x28)) = rax;\n        rax = *((rsp + 0xe0));\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x50)) = rax;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 8)) = 1;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 0;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 5;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x414a3f;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 2;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x417977;\n        goto label_21;\n        eax = *((rsp + 0x10));\n        goto label_31;\n        eax = *((rsp + 0x10));\n        goto label_32;\n        eax = *((rsp + 0x10));\n        goto label_33;\n        edx = 0;\n        r13d = 0;\n        goto label_4;\n        goto label_34;\nlabel_66:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x30;\n        }\n        rax = rcx + 2;\n        if (r14 > rax) {\n            *((r15 + rcx + 2)) = 0x30;\n        }\n        rbx = rcx + 3;\n        goto label_35;\n        if (ebp != 0) {\n            goto label_88;\n        }\n        *((rsp + 8)) = 0;\n    } while (1);\nlabel_82:\n    r13d = *((rsp + 0x30));\n    goto label_1;\nlabel_59:\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\nlabel_83:\n    edi = 0;\n    goto label_29;\nlabel_76:\n    rdi = rbx;\n    edx = r13d;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    edx ^= 1;\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    dl &= *((rsp + 8));\nlabel_40:\n    if (rdi > 1) {\n        goto label_36;\n    }\n    goto label_37;\nlabel_86:\n    *((rsp + 0x58)) = 0;\n    r10d = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x6d)) = 0;\n    goto label_38;\nlabel_65:\n    eax = r13d;\n    r13d = 0;\n    goto label_11;\nlabel_75:\n    ebp = *((rsi + rax));\n    if (bpl > 0x3e) {\n        goto label_39;\n    }\n    rsi = 0x7000a38200000000;\n    if (((rsi >> rbp) & 1) >= 0) {\n        goto label_39;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_51;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x3f;\n    }\n    rdx = rbx + 1;\n    if (r14 > rdx) {\n        *((r15 + rbx + 1)) = 0x22;\n    }\n    rdx = rbx + 2;\n    if (r14 > rdx) {\n        *((r15 + rbx + 2)) = 0x22;\n    }\n    rdx = rbx + 3;\n    if (r14 > rdx) {\n        *((r15 + rbx + 3)) = 0x3f;\n    }\n    rbx += 4;\n    edx = 0;\n    r13d = 0;\n    r12 = rax;\n    goto label_35;\nlabel_77:\n    rdi = rbx;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r13d = 0;\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    edx = *((rsp + 8));\n    goto label_40;\nlabel_78:\n    r9 = *((rsp + 0x30));\n    rsi = r15;\n    rcx = rbp;\n    rax = rbx;\n    rdi = rbx;\n    r8 = *((rsp + 0x78));\n    r10d = *((rsp + 0x6e));\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r11d = *((rsp + 0x38));\n    if (rsi >= r9) {\n        goto label_89;\n    }\n    if (*(rcx) != 0) {\n        goto label_90;\n    }\n    goto label_89;\n    do {\n        if (*((r8 + rax)) == 0) {\n            goto label_91;\n        }\nlabel_90:\n        rax++;\n        rdx = r12 + rax;\n    } while (rdx < r9);\nlabel_91:\n    rdi = rax;\nlabel_89:\n    edx = *((rsp + 8));\n    r13d = 0;\n    goto label_40;\nlabel_87:\n    rax = *((rsp + 0xd8));\n    eax = *(rax);\n    if (al == 0) {\n        goto label_41;\n    }\n    rdx = *((rsp + 0xd8));\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = al;\n        }\n        rbx++;\n        eax = *((rdx + rbx));\n    } while (al != 0);\n    goto label_41;\nlabel_61:\n    r13d = r11d;\n    eax = 0;\n    r11 = r9;\n    goto label_42;\nlabel_85:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 1;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x414a3f;\n    goto label_21;\nlabel_51:\n    r13d = r11d;\n    r11 = r9;\n    goto label_43;\nlabel_72:\n    edx = eax;\nlabel_45:\n    rax = *((rsp + 0x50));\n    if (rax == 0) {\n        goto label_92;\n    }\n    if (dl == 0) {\n        goto label_92;\n    }\n    edx = *(rax);\n    if (dl == 0) {\n        goto label_92;\n    }\n    rax -= rbx;\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = dl;\n        }\n        rbx++;\n        edx = *((rax + rbx));\n    } while (dl != 0);\nlabel_92:\n    if (r14 <= rbx) {\n        goto label_44;\n    }\n    *((r15 + rbx)) = 0;\n    goto label_44;\nlabel_55:\n    r13d = r11d;\n    r11 = r9;\n    goto label_12;\nlabel_62:\n    r13d = r11d;\n    r11 = r9;\n    rsp + 8 = (r13d == 2) ? 1 : 0;\n    goto label_12;\nlabel_73:\n    rax = fcn_0040a0e0 (r15, *((rsp + 0x78)), *((rsp + 0x40)), r11, 5, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\n    goto label_44;\nlabel_74:\n    edx = *((rsp + 0x6d));\n    goto label_45;\nlabel_71:\n    r13d = 2;\n    goto label_12;\nlabel_84:\n    r10d = 0;\n    eax = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x58)) = 0;\n    goto label_46;\nlabel_80:\n    rdx = r14;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_88:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x417977;\n    goto label_21;\nlabel_60:\n    r13d = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040b310",
            "funcStartAddr": "0x40b310",
            "funcEndAddr": "0x414a19",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40b310 */\n#include <stdint.h>\n \nuint64_t fcn_0040b310 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_30h;\n    int64_t var_18h;\n    int64_t var_24h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    do {\n        abort ();\n        r15 = (int64_t) edi;\n        r14 = rdx;\n        *((rsp + 8)) = rsi;\n        rax = errno_location ();\n        rbx = *(0x0061b2d8);\n        r13 = rax;\n        eax = *(rax);\n        *((rsp + 0x18)) = eax;\n    } while (r15d < 0);\n    if (*(0x0061b2f0) > r15d) {\n        goto label_0;\n    }\n    if (r15d == 0x7fffffff) {\n        goto label_1;\n    }\n    r12d = r15 + 1;\n    rsi = (int64_t) r12d;\n    rsi <<= 4;\n    if (rbx == 0x61b2e0) {\n        goto label_2;\n    }\n    rax = fcn_0040c1f0 (rbx, rsi);\n    *(0x0061b2d8) = rax;\n    rbx = rax;\n    do {\n        rdi = *(0x0061b2f0);\n        edx -= edi;\n        rdi <<= 4;\n        rdx = (int64_t) edx;\n        rdi += rbx;\n        rdx <<= 4;\n        memset (rdi, 0, r12d);\n        *(0x0061b2f0) = r12d;\nlabel_0:\n        eax = *((rbp + 4));\n        r15 <<= 4;\n        rbx += r15;\n        r15 = rbp + 8;\n        eax |= 1;\n        r11 = *(rbx);\n        r12 = *((rbx + 8));\n        *((rsp + 0x24)) = eax;\n        rsi = r11;\n        *((rsp + 0x30)) = r11;\n        rax = fcn_0040a0e0 (r12, rsi, *((rsp + 0x28)), r14, *(rbp), eax);\n        r11 = *((rsp + 0x10));\n        if (r11 <= rax) {\n            rsi = rax + 1;\n            *(rbx) = rsi;\n            if (r12 != 0x61b360) {\n                *((rsp + 0x10)) = rsi;\n                free (r12);\n                rsi = *((rsp + 0x10));\n            }\n            *((rsp + 0x10)) = rsi;\n            rax = fcn_0040c190 (*((rsp + 0x10)));\n            *((rbx + 8)) = rax;\n            rdi = rax;\n            r12 = rax;\n            fcn_0040a0e0 (rdi, *((rsp + 0x30)), *((rsp + 0x28)), r14, *(rbp), *((rsp + 0x3c)));\n        }\n        eax = *((rsp + 0x18));\n        *(r13) = eax;\n        rax = r12;\n        return rax;\nlabel_2:\n        rax = fcn_0040c1f0 (0, rsi);\n        __asm (\"movdqa xmm0, xmmword [0x0061b2e0]\");\n        rbx = rax;\n        *(0x0061b2d8) = rax;\n        __asm (\"movups xmmword [rax], xmm0\");\n    } while (1);\nlabel_1:\n    return fcn_0040c3e0 ();\n}\n"
        },
        {
            "funcName": "fcn_0040b830",
            "funcStartAddr": "0x40b830",
            "funcEndAddr": "0x41531e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40b830 */\n#include <stdint.h>\n \nint64_t fcn_0040b830 (int64_t arg1, uint32_t arg2, int64_t arg3) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    do {\n        abort ();\n    } while (esi == 0xa);\n    rax = rdx;\n    *(rsp) = esi;\n    *((rsp + 4)) = 0;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x30)) = 0;\n    fcn_0040b310 (rdi, rax, 0xffffffffffffffff, rsp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040b9b0",
            "funcStartAddr": "0x40b9b0",
            "funcEndAddr": "0x40ba41",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40b9b0 */\n#include <stdint.h>\n \nint64_t fcn_0040b9b0 (int64_t arg1, int64_t arg7, int64_t arg8, int64_t arg9) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_20h;\n    int64_t var_30h;\n    rdi = arg1;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    xmm2 = arg9;\n    do {\n        rax = imp.__libc_start_main;\n        ecx = edx;\n        __asm (\"movdqa xmm0, xmmword [0x0061b460]\");\n        __asm (\"movdqa xmm1, xmmword [0x0061b470]\");\n        __asm (\"movdqa xmm2, xmmword [0x0061b480]\");\n        ecx &= 0x1f;\n        *((rsp + 0x30)) = rax;\n        eax = edx;\n        al >>= 5;\n        *(rsp) = xmm0;\n        eax = (int32_t) al;\n        *((rsp + 0x10)) = xmm1;\n        r8 = rsp + rax*4 + 8;\n        *((rsp + 0x20)) = xmm2;\n        edx = *(r8);\n        eax = *(r8);\n        eax >>= cl;\n        eax = ~eax;\n        eax &= 1;\n        eax <<= cl;\n        eax ^= edx;\n        *(r8) = eax;\n        fcn_0040b310 (0, rdi, rsi, rsp);\n        return rax;\n        edx = 0x3a;\n        rsi = 0xffffffffffffffff;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040b9e0",
            "funcStartAddr": "0x40b9e0",
            "funcEndAddr": "0x41567a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40b9e0 */\n#include <stdint.h>\n \nint64_t fcn_0040b9e0 (uint32_t arg2, int64_t arg3) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rsi = arg2;\n    rdx = arg3;\n    do {\n        abort ();\n    } while (esi == 0xa);\n    rcx = 0x400000000000000;\n    rax = rdx;\n    *(rsp) = esi;\n    *((rsp + 8)) = rcx;\n    *((rsp + 4)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x30)) = 0;\n    fcn_0040b310 (rdi, rax, 0xffffffffffffffff, rsp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040bb40",
            "funcStartAddr": "0x40bb40",
            "funcEndAddr": "0x40bb51",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40bb40 */\n#include <stdint.h>\n \nvoid fcn_0040bb40 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    ecx = 0x61b2a0;\n    rdx = 0xffffffffffffffff;\n    return void (*0x40b310)() ();\n}\n"
        },
        {
            "funcName": "fcn_0040bb60",
            "funcStartAddr": "0x40bb60",
            "funcEndAddr": "0x40bb76",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40bb60 */\n#include <stdint.h>\n \nvoid fcn_0040bb60 (int64_t arg1) {\n    rdi = arg1;\n    rsi = rdi;\n    ecx = 0x61b2a0;\n    rdx = 0xffffffffffffffff;\n    edi = 0;\n    return void (*0x40b310)() ();\n}\n"
        },
        {
            "funcName": "fcn_0040bb80",
            "funcStartAddr": "0x40bb80",
            "funcEndAddr": "0x40bbe4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40bb80 */\n#include <stdint.h>\n \nuint64_t fcn_0040bb80 (file** arg1) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = rdi;\n    edi = 0;\n    eax = clock_settime ();\n    ebx = eax;\n    if (eax != 0) {\n        rax = errno_location ();\n        if (*(rax) == 1) {\n            goto label_0;\n        }\n        rax = *(rbp);\n        rcx = *((rbp + 8));\n        esi = 0;\n        rdi = rsp;\n        rdx = 0x20c49ba5e353f7cf;\n        *(rsp) = rax;\n        rax = rcx;\n        rcx >>= 0x3f;\n        rdx:rax = rax * rdx;\n        rdx >>= 7;\n        rdx -= rcx;\n        *((rsp + 8)) = rdx;\n        eax = settimeofday ();\n        ebx = eax;\n    }\nlabel_0:\n    eax = ebx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040bbf0",
            "funcStartAddr": "0x40bbf0",
            "funcEndAddr": "0x415e04",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40bbf0 */\n#include <stdint.h>\n \nvoid fcn_0040bbf0 (int64_t arg_20h, int64_t arg_30h, int64_t arg_8h_2, int64_t arg_10h, int64_t arg_8h, int64_t arg_8h_3, int64_t arg_10h_2, int64_t arg_18h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_30h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    eax = abort ();\n    r12 = r9;\n    rbx = r8;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    r9 = rcx;\n    r8 = rdx;\n    rcx = rsi;\n    edx = \"%s (%s) %s\\n\";\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    do {\n        edx = 5;\n        rax = dcgettext (0, 0x4174eb);\n        r8d = 0x7e1;\n        edx = \"Copyright %s %d Free Software Foundation, Inc.\";\n        rdi = rbp;\n        rcx = rax;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        edx = 5;\n        rax = dcgettext (0, \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\");\n        rsi = rbp;\n        rdi = rax;\n        eax = fputs_unlocked ();\n        if (r12 > 9) {\n            goto label_2;\n        }\n        /* switch table (10 cases) at 0x4177d8 */\nlabel_1:\n        r8 = rcx;\n        esi = 1;\n        rcx = rdx;\n        eax = 0;\n        edx = \"%s %s\\n\";\n        fprintf_chk ();\n    } while (1);\n    r9 = *((rbx + 0x38));\n    rax = *((rbx + 0x10));\n    edx = 5;\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    r15 = *((rbx + 0x20));\n    *((rsp + 0x10)) = r9;\n    r14 = *((rbx + 0x18));\n    rbx = *(rbx);\n    *(rsp) = rax;\n    *((rsp + 8)) = r8;\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n    do {\n        r9 = *((rsp + 0x18));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        r9 = *((rsp + 0x30));\n        r8 = *((rsp + 0x38));\n        fprintf_chk ();\n        return rax;\n        r10 = *((rbx + 0x40));\n        r9 = *((rbx + 0x38));\n        edx = 5;\n        rax = *((rbx + 0x10));\n        r8 = *((rbx + 8));\n        r13 = *((rbx + 0x30));\n        r12 = *((rbx + 0x28));\n        *((rsp + 0x18)) = r10;\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        *((rsp + 0x10)) = r9;\n        *(rsp) = rax;\n        rbx = *(rbx);\n        *((rsp + 8)) = r8;\nlabel_0:\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        r10 = *((rsp + 0x18));\n    } while (1);\n    rbx = *(rbx);\n    edx = 5;\n    rax = dcgettext (0, \"Written by %s.\\n\");\n    rdi = rbp;\n    esi = 1;\n    rcx = rbx;\n    rdx = rax;\n    eax = 0;\n    void (*0x401d40)() ();\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s and %s.\\n\");\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x401d40)() ();\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, and %s.\\n\");\n    r9 = r13;\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x401d40)() ();\n    edx = 5;\n    r14 = *((rbx + 0x18));\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\nand %s.\\n\");\n    do {\n        rdx = rax;\n        r9 = r13;\n        r8 = r12;\n        rcx = rbx;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r15 = *((rbx + 0x20));\n        edx = 5;\n        r14 = *((rbx + 0x18));\n        r13 = *((rbx + 0x10));\n        r12 = *((rbx + 8));\n        rbx = *(rbx);\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n    } while (1);\n    r8 = *((rbx + 8));\n    r12 = *((rbx + 0x28));\n    edx = 5;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *(rsp) = r8;\n    r13 = *((rbx + 0x10));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n    r9 = r13;\n    do {\n        r8 = *((rsp + 0x20));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r9 = *((rbx + 0x10));\n        r13 = *((rbx + 0x30));\n        edx = 5;\n        r12 = *((rbx + 0x28));\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        r8 = *((rbx + 8));\n        *((rsp + 8)) = r9;\n        rbx = *(rbx);\n        *(rsp) = r8;\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n        r9 = *((rsp + 0x28));\n    } while (1);\nlabel_2:\n    r10 = *((rbx + 0x40));\n    r9 = *((rbx + 0x38));\n    edx = 5;\n    esi = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    rax = *((rbx + 0x10));\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    *((rsp + 0x18)) = r10;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *((rsp + 0x10)) = r9;\n    *(rsp) = rax;\n    rbx = *(rbx);\n    *((rsp + 8)) = r8;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040c050",
            "funcStartAddr": "0x40c050",
            "funcEndAddr": "0x40c10c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40c050 */\n#include <stdint.h>\n \nuint64_t fcn_0040c050 (int64_t arg_b0h, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_70h;\n    int64_t var_90h;\n    int64_t var_98h;\n    r8 = arg5;\n    r9 = arg6;\n    r11d = 0;\n    rax = rsp + 0xb0;\n    *((rsp + 0x90)) = r8;\n    r10 = rsp + 0xb0;\n    r8d = 0x20;\n    *((rsp + 0x10)) = rax;\n    rax = rsp + 0x70;\n    *((rsp + 0x98)) = r9;\n    r9d = 0;\n    *((rsp + 8)) = 0x20;\n    *((rsp + 0x18)) = rax;\n    while (r8d <= 0x2f) {\n        eax = r8d;\n        r11 = rsp + 0x70;\n        r8d += 8;\n        rax += r11;\n        r11d = 1;\n        rax = *(rax);\n        *((rsp + r9*8 + 0x20)) = rax;\n        if (rax == 0) {\n            goto label_1;\n        }\nlabel_0:\n        r9++;\n        if (r9 == 0xa) {\n            goto label_1;\n        }\n    }\n    rax = r10;\n    r10 += 8;\n    rax = *(rax);\n    *((rsp + r9*8 + 0x20)) = rax;\n    if (rax != 0) {\n        goto label_0;\n    }\nlabel_1:\n    if (r11b != 0) {\n        *((rsp + 8)) = r8d;\n    }\n    fcn_0040bbf0 (rdi, rsi, rdx, rcx, rsp + 0x20, r9);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040c190",
            "funcStartAddr": "0x40c190",
            "funcEndAddr": "0x40c1aa",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40c190 */\n#include <stdint.h>\n \nuint64_t fcn_0040c190 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = malloc (rdi);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    return fcn_0040c3e0 ();\n}\n"
        },
        {
            "funcName": "fcn_0040c1f0",
            "funcStartAddr": "0x40c1f0",
            "funcEndAddr": "0x40c226",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40c1f0 */\n#include <stdint.h>\n \nuint64_t fcn_0040c1f0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rsi;\n    if (rsi == 0) {\n        if (rdi != 0) {\n            goto label_0;\n        }\n    }\n    rax = realloc (rdi, rbx);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_1;\n        }\n    }\n    return rax;\nlabel_0:\n    eax = free (rdi);\n    eax = 0;\n    return rax;\nlabel_1:\n    return fcn_0040c3e0 ();\n}\n"
        },
        {
            "funcName": "fcn_0040c390",
            "funcStartAddr": "0x40c390",
            "funcEndAddr": "0x40c3b8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40c390 */\n#include <stdint.h>\n \nuint64_t fcn_0040c390 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdi = rsi;\n    rbx = rsi;\n    rax = fcn_0040c190 (rdi);\n    rdx = rbx;\n    rsi = rbp;\n    rdi = rax;\n    return memcpy ();\n}\n"
        },
        {
            "funcName": "fcn_0040c3e0",
            "funcStartAddr": "0x40c3e0",
            "funcEndAddr": "0x40c411",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40c3e0 */\n#include <stdint.h>\n \nuint64_t fcn_0040c3e0 (void) {\n    edx = 5;\n    rax = dcgettext (0, \"memory exhausted\");\n    rcx = rax;\n    eax = 0;\n    error (*(0x0061b280), 0, 0x4144ac);\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_0040c420",
            "funcStartAddr": "0x40c420",
            "funcEndAddr": "0x40c49b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40c420 */\n#include <stdint.h>\n \nuint64_t fcn_0040c420 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    eax = fileno (rdi);\n    rdi = rbx;\n    if (eax < 0) {\n        goto label_1;\n    }\n    eax = freading ();\n    while (rax != -1) {\n        eax = fcn_0040c4a0 (rbx);\n        if (eax == 0) {\n            goto label_2;\n        }\n        rax = errno_location ();\n        r12d = *(rax);\n        fclose (rbx);\n        if (r12d != 0) {\n            goto label_3;\n        }\nlabel_0:\n        return rax;\n        eax = fileno (rbx);\n        esi = 0;\n        edx = 1;\n        edi = eax;\n        rax = lseek ();\n    }\nlabel_2:\n    rdi = rbx;\nlabel_1:\n    void (*0x401a10)() ();\nlabel_3:\n    *(rbp) = r12d;\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040c4a0",
            "funcStartAddr": "0x40c4a0",
            "funcEndAddr": "0x40c4e0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40c4a0 */\n#include <stdint.h>\n \nuint32_t fcn_0040c4a0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    if (rdi != 0) {\n        eax = freading ();\n        if (eax == 0) {\n            goto label_0;\n        }\n        if ((*(rbx) & 0x100) != 0) {\n            goto label_1;\n        }\n    }\nlabel_0:\n    rdi = rbx;\n    void (*0x401c20)() ();\nlabel_1:\n    fcn_0040c4e0 (rbx, 0, 1);\n    rdi = rbx;\n    return fflush ();\n}\n"
        },
        {
            "funcName": "fcn_0040c4e0",
            "funcStartAddr": "0x40c4e0",
            "funcEndAddr": "0x40c537",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40c4e0 */\n#include <stdint.h>\n \nint64_t fcn_0040c4e0 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rax = *((rdi + 8));\n    while (*((rdi + 0x28)) != rax) {\nlabel_0:\n        void (*0x401ce0)() ();\n        rax = *((rdi + 0x20));\n    }\n    if (*((rdi + 0x48)) != 0) {\n        goto label_0;\n    }\n    r12d = edx;\n    rbx = rdi;\n    eax = fileno (rdi);\n    edx = r12d;\n    rsi = rbp;\n    edi = eax;\n    rax = lseek ();\n    if (rax != -1) {\n        *(rbx) &= 0xffffffef;\n        *((rbx + 0x90)) = rax;\n        eax = 0;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040c540",
            "funcStartAddr": "0x40c540",
            "funcEndAddr": "0x40c61f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40c540 */\n#include <stdint.h>\n \nuint64_t fcn_0040c540 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r11 = rdi + 8;\n    r12d = *((rsi + 0x2c));\n    ebp = *(rsi);\n    rbx = *((rsi + 0x30));\n    r9d = r12d;\n    r10d = ebp;\n    r8 = rbx;\nlabel_1:\n    if (r10d <= r8d) {\n        goto label_2;\n    }\nlabel_0:\n    if (r9d >= r8d) {\n        goto label_2;\n    }\n    r14d = r10d;\n    edx = r8d;\n    r14d -= r8d;\n    edx -= r9d;\n    if (r14d <= edx) {\n        goto label_3;\n    }\n    rcx = (int64_t) r9d;\n    r10d -= edx;\n    edx--;\n    rdx += rcx;\n    rax = rdi + rcx*8;\n    r13 = r11 + rdx*8;\n    rdx = (int64_t) r10d;\n    rdx -= rcx;\n    do {\n        rcx = *(rax);\n        r14 = *((rax + rdx*8));\n        *(rax) = r14;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (r13 != rax);\n    if (r10d > r8d) {\n        goto label_0;\n    }\nlabel_2:\n    eax = ebp;\n    *((rsi + 0x30)) = ebp;\n    eax -= r8d;\n    r12d += eax;\n    *((rsi + 0x2c)) = r12d;\n    r12 = rbx;\n    r13 = rbx;\n    r14 = rbx;\n    r15 = rbx;\n    return rax;\nlabel_3:\n    rdx = (int64_t) r9d;\n    ecx = r14 - 1;\n    rcx += rdx;\n    rax = rdi + rdx*8;\n    r13 = r11 + rcx*8;\n    rcx = rbx;\n    rcx -= rdx;\n    rdx = rcx;\n    do {\n        rcx = *(rax);\n        r15 = *((rax + rdx*8));\n        *(rax) = r15;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (rax != r13);\n    r9d += r14d;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040c620",
            "funcStartAddr": "0x40c620",
            "funcEndAddr": "0x40cc3c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40c620 */\n#include <stdint.h>\n \nint64_t fcn_0040c620 (int64_t arg_90h, int64_t arg_98h, int64_t arg_a0h, signed int64_t arg1, int64_t arg2, char * arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_ch;\n    int64_t var_10h;\n    void * ptr;\n    int64_t var_20h;\n    int64_t var_28h;\n    char * s;\n    int64_t var_38h;\n    int64_t c;\n    signed int64_t var_40h;\n    int64_t var_44h;\n    void * var_48h;\n    size_t nmeb;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rax = *((rsp + 0x90));\n    *((rsp + 0x40)) = edi;\n    *((rsp + 0x28)) = rsi;\n    r14 = *((rax + 0x20));\n    *((rsp + 0x30)) = rdx;\n    *(rsp) = rcx;\n    eax = *(r14);\n    *((rsp + 0x20)) = r8;\n    *((rsp + 0xc)) = r9d;\n    *((rsp + 0x3f)) = al;\n    if (al == 0x3d) {\n        goto label_11;\n    }\n    if (al == 0) {\n        goto label_11;\n    }\n    do {\n        rbp++;\n        eax = *(rbp);\n        if (al == 0) {\n            goto label_12;\n        }\n    } while (al != 0x3d);\nlabel_12:\n    r13 = rbp;\n    r13 -= r14;\nlabel_6:\n    rbx = *(rsp);\n    r12d = 0;\n    rax = *(rbx);\n    *((rsp + 0x10)) = rax;\n    r15 = rax;\n    if (rax != 0) {\n        goto label_13;\n    }\n    goto label_14;\n    do {\n        r12 = (int64_t) r8d;\nlabel_13:\n        eax = strncmp (r15, r14, r13);\n        if (eax == 0) {\n            rax = strlen (r15);\n            if (rax == r13) {\n                goto label_15;\n            }\n        }\n        rbx += 0x20;\n        r15 = *(rbx);\n        r8d = r12 + 1;\n    } while (r15 != 0);\n    rcx = *(rsp);\n    *((rsp + 0x4c)) = r8d;\n    r9d = 0;\n    ebx = 0;\n    *((rsp + 0x44)) = 0xffffffff;\n    r15 = r9;\n    *((rsp + 0x38)) = 0;\n    *((rsp + 0x48)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x10)) = rbp;\n    do {\n        eax = strncmp (*((rsp + 0x10)), r14, r13);\n        if (eax == 0) {\n            if (rbx == 0) {\n                goto label_16;\n            }\n            eax = *((rsp + 0xc));\n            if (eax == 0) {\n                goto label_17;\n            }\nlabel_0:\n            r11d = *((rsp + 0x38));\n            if (r11d != 0) {\n                goto label_1;\n            }\n            r10d = *((rsp + 0x98));\n            if (r10d == 0) {\n                goto label_18;\n            }\n            if (*((rsp + 0x18)) == 0) {\n                goto label_19;\n            }\nlabel_3:\n            rax = *((rsp + 0x18));\n            *((rax + r15)) = 1;\n        }\nlabel_1:\n        rbp += 0x20;\n        rdi = *(rbp);\n        r15++;\n    } while (rdi != 0);\n    rbp = *((rsp + 0x10));\n    if (*((rsp + 0x18)) != 0) {\n        goto label_20;\n    }\n    r9d = *((rsp + 0x38));\n    if (r9d != 0) {\n        goto label_20;\n    }\n    if (rbx == 0) {\nlabel_14:\n        eax = *((rsp + 0xc));\n        if (eax != 0) {\n            rax = *((rsp + 0x90));\n            rcx = *((rsp + 0x28));\n            rax = *(rax);\n            rax = *((rcx + rax*8));\n            if (*((rax + 1)) == 0x2d) {\n                goto label_21;\n            }\n            esi = *((rsp + 0x3f));\n            rax = strchr (*((rsp + 0x30)), rsi);\n            rdx = rax;\n            eax = 0xffffffff;\n            if (rdx != 0) {\n                goto label_5;\n            }\n        }\nlabel_21:\n        ecx = *((rsp + 0x98));\n        if (ecx != 0) {\n            goto label_22;\n        }\nlabel_4:\n        rax = *((rsp + 0x90));\n        *((rax + 0x20)) = 0;\n        *(rax)++;\n        *((rax + 8)) = 0;\n        eax = 0x3f;\n        return rax;\n    }\n    r12d = *((rsp + 0x44));\nlabel_15:\n    rax = *((rsp + 0x90));\n    rcx = *((rsp + 0x90));\n    edx = *(rax);\n    *((rcx + 0x20)) = 0;\n    eax = rdx + 1;\n    *(rcx) = eax;\n    ecx = *((rbx + 8));\n    if (*(rbp) != 0) {\n        goto label_23;\n    }\n    if (ecx == 1) {\n        goto label_24;\n    }\nlabel_2:\n    rax = *((rsp + 0x20));\n    if (rax != 0) {\n        *(rax) = r12d;\n    }\n    rdx = *((rbx + 0x10));\n    eax = *((rbx + 0x18));\n    if (rdx != 0) {\n        *(rdx) = eax;\n        eax = 0;\n    }\nlabel_5:\n    return rax;\nlabel_17:\n    eax = *((rbp + 8));\n    if (*((rbx + 8)) != eax) {\n        goto label_0;\n    }\n    rax = *((rbp + 0x10));\n    if (*((rbx + 0x10)) != rax) {\n        goto label_0;\n    }\n    eax = *((rbp + 0x18));\n    if (*((rbx + 0x18)) != eax) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_23:\n    if (ecx == 0) {\n        goto label_25;\n    }\n    rax = *((rsp + 0x90));\n    rbp++;\n    *((rax + 0x10)) = rbp;\n    goto label_2;\nlabel_16:\n    *((rsp + 0x44)) = r15d;\n    rbx = rbp;\n    goto label_1;\nlabel_18:\n    *((rsp + 0x38)) = 1;\n    if (*((rsp + 0x18)) == 0) {\n        goto label_1;\n    }\n    goto label_3;\nlabel_22:\n    rax = *((rsp + 0x28));\n    edx = 5;\n    rbx = *(rax);\n    rax = dcgettext (0, \"%s: unrecognized option '%s%s'\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r14;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbx;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_4;\nlabel_20:\n    r8d = *((rsp + 0x98));\n    if (r8d != 0) {\n        edi = *((rsp + 0x38));\n        if (edi == 0) {\n            goto label_26;\n        }\n        rax = *((rsp + 0x28));\n        edx = 5;\n        rbx = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' is ambiguous\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r14;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbx;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        rax = *((rsp + 0x90));\n        r14 = *((rax + 0x20));\n    }\nlabel_9:\n    esi = *((rsp + 0x48));\n    if (esi != 0) {\n        goto label_27;\n    }\nlabel_7:\n    rax = strlen (r14);\n    r14 += rax;\n    rax = *((rsp + 0x90));\n    *((rax + 0x20)) = r14;\n    *(rax)++;\n    *((rax + 8)) = 0;\n    eax = 0x3f;\n    goto label_5;\nlabel_24:\n    if (eax >= *((rsp + 0x40))) {\n        goto label_28;\n    }\n    rcx = *((rsp + 0x90));\n    edx += 2;\n    rax = (int64_t) eax;\n    *(rcx) = edx;\n    rcx = *((rsp + 0x28));\n    rax = *((rcx + rax*8));\n    rcx = *((rsp + 0x90));\n    *((rcx + 0x10)) = rax;\n    goto label_2;\nlabel_11:\n    r13d = 0;\n    goto label_6;\nlabel_25:\n    edx = *((rsp + 0x98));\n    while (1) {\n        eax = *((rbx + 0x18));\n        rcx = *((rsp + 0x90));\n        *((rcx + 8)) = eax;\n        eax = 0x3f;\n        goto label_5;\nlabel_19:\n        rdi = *((rsp + 0x4c));\n        rax = calloc (rdi, 1);\n        *((rsp + 0x18)) = rax;\n        if (rax == 0) {\n            goto label_29;\n        }\n        rax = *((rsp + 0x44));\n        rcx = *((rsp + 0x18));\n        *((rsp + 0x48)) = 1;\n        *((rcx + rax)) = 1;\n        goto label_3;\n        rax = *((rsp + 0x28));\n        r12 = *(rbx);\n        edx = 5;\n        rbp = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' doesn't allow an argument\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r12;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_27:\n    free (*((rsp + 0x18)));\n    goto label_7;\nlabel_28:\n    eax = *((rsp + 0x98));\n    if (eax != 0) {\n        goto label_30;\n    }\nlabel_10:\n    eax = *((rbx + 0x18));\n    rcx = *((rsp + 0x90));\n    *((rcx + 8)) = eax;\n    rax = *((rsp + 0x30));\n    al = (*(rax) != 0x3a) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = rax * 5;\n    goto label_5;\nlabel_26:\n    rdi = stderr;\n    flockfile ();\n    rax = *((rsp + 0x90));\n    edx = 5;\n    rbx = *((rax + 0x20));\n    rax = *((rsp + 0x28));\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' is ambiguous; possibilities:\");\n    rdi = stderr;\n    r9 = rbx;\n    r8 = *((rsp + 0xa0));\n    rcx = rbp;\n    rdx = rax;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    rax = *((rsp + 0x18));\n    rdi = stderr;\n    rbx = *(rsp);\n    r12 = rax + r12 + 1;\n    while (*(rbp) == 0) {\nlabel_8:\n        rbp++;\n        rbx += 0x20;\n        if (r12 == rbp) {\n            goto label_31;\n        }\n    }\n    r8 = *(rbx);\n    edx = \" '%s%s';\n    esi = 1;\n    eax = 0;\n    rcx = *((rsp + 0xa0));\n    fprintf_chk ();\n    rdi = stderr;\n    goto label_8;\nlabel_31:\n    fputc (0xa, rdi);\n    rdi = stderr;\n    funlockfile ();\n    rax = *((rsp + 0x90));\n    r14 = *((rax + 0x20));\n    goto label_9;\nlabel_30:\n    rax = *((rsp + 0x28));\n    r12 = *(rbx);\n    edx = 5;\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' requires an argument\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r12;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbp;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_10;\nlabel_29:\n    *((rsp + 0x38)) = 1;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040cc40",
            "funcStartAddr": "0x40cc40",
            "funcEndAddr": "0x40d206",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40cc40 */\n#include <stdint.h>\n \nuint64_t fcn_0040cc40 (int64_t arg_70h, int64_t arg_78h, int64_t arg1, int64_t arg2, int64_t arg3, uint32_t arg4, int64_t arg5, int64_t arg6) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_1ch;\n    int64_t var_20h;\n    int64_t var_28h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rbx = *((rsp + 0x70));\n    *((rsp + 8)) = rcx;\n    *((rsp + 0x10)) = r8;\n    r13d = *((rbx + 4));\n    if (edi <= 0) {\n        goto label_16;\n    }\n    eax = *(rbx);\n    r12 = rsi;\n    r15 = rdx;\n    *((rbx + 0x10)) = 0;\n    if (eax == 0) {\n        goto label_17;\n    }\n    esi = *((rbx + 0x18));\n    if (esi == 0) {\nlabel_1:\n        *((rbx + 0x30)) = eax;\n        *((rbx + 0x2c)) = eax;\n        *((rbx + 0x20)) = 0;\n        eax = *(r15);\n        if (al == 0x2d) {\n            goto label_18;\n        }\n        if (al == 0x2b) {\n            goto label_19;\n        }\n        ecx = *((rsp + 0x78));\n        edx = 0;\n        if (ecx == 0) {\n            goto label_20;\n        }\nlabel_8:\n        *((rbx + 0x28)) = 0;\n        goto label_11;\n    }\n    eax = *(rdx);\n    rdx = *((rbx + 0x20));\n    ecx = rax - 0x2b;\n    ecx &= 0xfd;\n    if (ecx != 0) {\n        goto label_21;\n    }\n    eax = *((r15 + 1));\n    r15++;\n    eax = 0;\n    if (al == 0x3a) {\n        r13d = eax;\n    }\n    if (rdx != 0) {\n        goto label_22;\n    }\n    do {\nlabel_0:\n        eax = *(rbx);\n        if (*((rbx + 0x30)) > eax) {\n            *((rbx + 0x30)) = eax;\n        }\n        if (eax < *((rbx + 0x2c))) {\n            *((rbx + 0x2c)) = eax;\n        }\n        if (*((rbx + 0x28)) == 1) {\n            goto label_23;\n        }\nlabel_4:\n        if (ebp == eax) {\n            goto label_24;\n        }\n        rdx = (int64_t) eax;\n        ecx = 3;\n        edi = 0x414a39;\n        r14 = *((r12 + rdx*8));\n        rsi = *((r12 + rdx*8));\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (ebp > eax) ? 1 : 0;\n        if (cl != 0) {\n            goto label_25;\n        }\n        edx = *((rbx + 0x2c));\n        ecx = *((rbx + 0x30));\n        eax++;\n        *(rbx) = eax;\n        if (edx == ecx) {\n            goto label_26;\n        }\n        if (eax != ecx) {\n            fcn_0040c540 (r12, rbx);\n            edx = *((rbx + 0x2c));\n        }\nlabel_12:\n        *((rbx + 0x30)) = ebp;\n        *(rbx) = ebp;\n        goto label_27;\nlabel_18:\n        *((rbx + 0x28)) = 2;\n        r15++;\n        edx = 0;\nlabel_11:\n        *((rbx + 0x18)) = 1;\n        eax = *(r15);\nlabel_21:\n        eax = 0;\n        if (al == 0x3a) {\n            r13d = eax;\n        }\n    } while (rdx == 0);\nlabel_22:\n    if (*(rdx) == 0) {\n        goto label_0;\n    }\nlabel_6:\n    r8 = rdx + 1;\n    *((rsp + 0x20)) = rdx;\n    *((rbx + 0x20)) = r8;\n    r14d = *(rdx);\n    *((rsp + 0x28)) = r8;\n    *((rsp + 0x1c)) = r14b;\n    rax = strchr (r15, r14d);\n    rdx = *((rsp + 0x20));\n    ecx = *((rsp + 0x1c));\n    r8 = *((rsp + 0x28));\n    if (*((rdx + 1)) == 0) {\n        *(rbx)++;\n    }\n    ecx -= 0x3a;\n    if (cl <= 1) {\n        goto label_28;\n    }\n    if (rax == 0) {\n        goto label_28;\n    }\n    ecx = *((rax + 1));\n    if (*(rax) == 0x57) {\n        goto label_29;\n    }\nlabel_7:\n    if (cl == 0x3a) {\n        goto label_30;\n    }\n    do {\nlabel_2:\n        eax = r14d;\n        return rax;\nlabel_25:\n        if (*(r14) == 0x2d) {\n            goto label_31;\n        }\nlabel_5:\n        edx = *((rbx + 0x28));\n        if (edx == 0) {\n            goto label_16;\n        }\n        eax++;\n        *((rbx + 0x10)) = r14;\n        r14d = 1;\n        *(rbx) = eax;\n    } while (1);\nlabel_17:\n    *(rbx) = 1;\n    eax = 1;\n    goto label_1;\nlabel_24:\n    ebp = *((rbx + 0x30));\n    edx = *((rbx + 0x2c));\nlabel_27:\n    if (edx != ebp) {\n        *(rbx) = edx;\n    }\nlabel_16:\n    r14d = 0xffffffff;\n    goto label_2;\nlabel_23:\n    edx = *((rbx + 0x30));\n    if (*((rbx + 0x2c)) == edx) {\n        goto label_32;\n    }\n    if (eax != edx) {\n        *((rsp + 0x1c)) = r9d;\n        fcn_0040c540 (r12, rbx);\n        edx = *(rbx);\n        r9d = *((rsp + 0x1c));\n    }\nlabel_9:\n    if (ebp <= edx) {\n        goto label_33;\n    }\n    rax = (int64_t) edx;\n    while (*(rcx) != 0x2d) {\nlabel_3:\n        edx = rsi + 1;\n        rax++;\n        *(rbx) = edx;\n        if (ebp <= eax) {\n            goto label_33;\n        }\n        rcx = *((r12 + rax*8));\n        esi = eax;\n        edx = eax;\n    }\n    if (*((rcx + 1)) == 0) {\n        goto label_3;\n    }\n    eax = *(rbx);\nlabel_10:\n    *((rbx + 0x30)) = edx;\n    goto label_4;\nlabel_31:\n    ecx = *((r14 + 1));\n    if (cl == 0) {\n        goto label_5;\n    }\n    if (*((rsp + 8)) == 0) {\n        goto label_34;\n    }\n    if (cl == 0x2d) {\n        goto label_35;\n    }\n    if (r9d == 0) {\n        goto label_34;\n    }\n    if (*((r14 + 2)) == 0) {\n        esi = (int32_t) cl;\n        *((rsp + 0x1c)) = r9d;\n        rax = strchr (r15, rsi);\n        r9d = *((rsp + 0x1c));\n        if (rax != 0) {\n            goto label_34;\n        }\n    }\n    rdx = r14 + 1;\n    *((rbx + 0x20)) = rdx;\n    eax = fcn_0040c620 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), r9);\n    r14d = eax;\n    if (eax != 0xffffffff) {\n        goto label_2;\n    }\n    rax = *(rbx);\n    r14 = *((r12 + rax*8));\nlabel_34:\n    rdx = r14 + 1;\n    goto label_6;\nlabel_29:\n    if (*((rsp + 8)) == 0) {\n        goto label_7;\n    }\n    if (cl != 0x3b) {\n        goto label_7;\n    }\n    if (*((rdx + 1)) == 0) {\n        rax = *(rbx);\n        if (eax == ebp) {\n            goto label_36;\n        }\n        r8 = *((r12 + rax*8));\n    }\n    *((rbx + 0x20)) = r8;\n    *((rbx + 0x10)) = 0;\nlabel_14:\n    eax = fcn_0040c620 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), 0);\n    r14d = eax;\n    goto label_2;\nlabel_20:\n    *((rsp + 0x1c)) = r9d;\n    rax = getenv (\"POSIXLY_CORRECT\");\n    r9d = *((rsp + 0x1c));\n    if (rax == 0) {\n        goto label_37;\n    }\n    rdx = *((rbx + 0x20));\n    goto label_8;\nlabel_30:\n    edx = *((rdx + 1));\n    if (*((rax + 2)) == 0x3a) {\n        goto label_38;\n    }\n    rax = *(rbx);\n    if (dl != 0) {\n        goto label_39;\n    }\n    if (ebp == eax) {\n        goto label_40;\n    }\n    edx = rax + 1;\n    rax = *((r12 + rax*8));\n    *(rbx) = edx;\n    *((rbx + 0x10)) = rax;\nlabel_13:\n    *((rbx + 0x20)) = 0;\n    goto label_2;\nlabel_32:\n    if (eax == edx) {\n        goto label_9;\n    }\n    *((rbx + 0x2c)) = eax;\n    edx = eax;\n    goto label_9;\nlabel_33:\n    eax = edx;\n    goto label_10;\nlabel_19:\n    *((rbx + 0x28)) = 0;\n    r15++;\n    edx = 0;\n    goto label_11;\nlabel_28:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0x3f;\n        goto label_2;\nlabel_26:\n        *((rbx + 0x2c)) = eax;\n        edx = eax;\n        goto label_12;\nlabel_39:\n        eax++;\n        *((rbx + 0x10)) = r8;\n        *(rbx) = eax;\n        goto label_13;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: invalid option -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_38:\n    if (dl != 0) {\n        *((rbx + 0x10)) = r8;\n        *(rbx)++;\n        goto label_13;\nlabel_37:\n        *((rbx + 0x28)) = 1;\n        rdx = *((rbx + 0x20));\n        goto label_11;\n    }\n    *((rbx + 0x10)) = 0;\n    goto label_13;\nlabel_40:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_13;\nlabel_35:\n        rdx = r14 + 2;\n        *((rbx + 0x20)) = rdx;\n        goto label_14;\nlabel_36:\n        if (r13d != 0) {\n            goto label_41;\n        }\nlabel_15:\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_2;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_41:\n    rbp = *(r12);\n    edx = 5;\n    rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n    rdi = stderr;\n    r8d = r14d;\n    esi = 1;\n    rdx = rax;\n    rcx = rbp;\n    eax = 0;\n    fprintf_chk ();\n    goto label_15;\n}\n"
        },
        {
            "funcName": "fcn_0040d210",
            "funcStartAddr": "0x40d210",
            "funcEndAddr": "0x40d266",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40d210 */\n#include <stdint.h>\n \nint32_t fcn_0040d210 (int64_t arg_10h) {\n    eax = *(0x0061b2fc);\n    *(0x0061b4a0) = eax;\n    eax = *(0x0061b2f8);\n    *(0x0061b4a4) = eax;\n    eax = *((rsp + 0x10));\n    fcn_0040cc40 (rdi, rsi, rdx, rcx, r8, r9);\n    edx = imp.__libc_start_main;\n    *(0x0061b2fc) = edx;\n    rdx = imp.__libc_start_main;\n    *(0x0061b4f0) = rdx;\n    edx = imp.__libc_start_main;\n    *(0x0061b2f4) = edx;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_0040d290",
            "funcStartAddr": "0x40d290",
            "funcEndAddr": "0x40d2a3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40d290 */\n#include <stdint.h>\n \nvoid fcn_0040d290 (void) {\n    r9d = 0;\n    fcn_0040d210 (rdi);\n}\n"
        },
        {
            "funcName": "fcn_0040d310",
            "funcStartAddr": "0x40d310",
            "funcEndAddr": "0x40d38a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40d310 */\n#include <stdint.h>\n \nuint64_t fcn_0040d310 (wint_t arg1, int64_t arg2, size_t * arg3, mbstate_t * ps) {\n    int64_t var_ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = ps;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    rbx = 0xfffffffffffffffe;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r12 = rdi;\n    while (1) {\n        rax = mbrtowc (r12, rbp, rdx, rcx);\n        rbx = rax;\n        if (rax > 0xfffffffffffffffd) {\n            goto label_2;\n        }\nlabel_0:\n        rax = rbx;\n        return rax;\nlabel_1:\n        edx = 1;\n        r12 = rsp + 0xc;\n    }\nlabel_2:\n    al = fcn_0040e130 (0);\n    if (al != 0) {\n        goto label_0;\n    }\n    eax = *(rbp);\n    ebx = 1;\n    *(r12) = eax;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040d390",
            "funcStartAddr": "0x40d390",
            "funcEndAddr": "0x40d4a7",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40d390 */\n#include <stdint.h>\n \nuint64_t fcn_0040d390 (int64_t arg_20h, int64_t arg_28h, int64_t arg_30h, int64_t arg_38h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r10 = rdi;\n    eax = 0;\n    r11 = (int64_t) edx;\n    r10 >>= 2;\n    rcx = (int64_t) ecx;\n    r8 = (int64_t) r8d;\n    rbx = (int64_t) r9d;\n    r10d += 0x1db;\n    r12 = rbx;\n    al = ((dil & 3) == 0) ? 1 : 0;\n    r12 >>= 2;\n    r10d -= eax;\n    eax = 0;\n    r12d += 0x1db;\n    r9d &= 3;\n    r9d = 0x51eb851f;\n    al = (r9d == 0) ? 1 : 0;\n    rdi -= rbx;\n    r12d -= eax;\n    eax = r10d;\n    edx:eax = eax * r9d;\n    eax = r10d;\n    eax >>= 0x1f;\n    edx >>= 3;\n    edx = r10d;\n    r10d -= r12d;\n    ebp -= eax;\n    eax = rbp + rbp*4;\n    eax = rax * 5;\n    edx -= eax;\n    eax = edx;\n    eax >>= 0x1f;\n    ebp -= eax;\n    eax = r12d;\n    edx:eax = eax * r9d;\n    eax = r12d;\n    r9d = r12d;\n    eax >>= 0x1f;\n    edx >>= 3;\n    edx -= eax;\n    eax = rdx * 5;\n    eax = rax * 5;\n    r9d -= eax;\n    eax = r9d;\n    eax >>= 0x1f;\n    edx -= eax;\n    eax = ebp;\n    eax -= edx;\n    rdx = (int64_t) edx;\n    r10d -= eax;\n    rdx >>= 2;\n    eax = r10d;\n    r10 = (int64_t) ebp;\n    r10 >>= 2;\n    r10d -= edx;\n    rdx = *((rsp + 0x28));\n    r10d += eax;\n    rax = rdi * 9;\n    rax = rdi + rax*8;\n    r10 = (int64_t) r10d;\n    rax *= 5;\n    rsi += rax;\n    rax = *((rsp + 0x20));\n    rsi -= rax;\n    rsi += r10;\n    rax = rsi * 3;\n    rax = r11 + rax*8;\n    rax -= rdx;\n    rdx = rax;\n    rdx <<= 4;\n    rdx -= rax;\n    rax = rcx + rdx*4;\n    rdx = *((rsp + 0x30));\n    rax -= rdx;\n    rdx = rax;\n    rdx <<= 4;\n    rdx -= rax;\n    rax = r8 + rdx*4;\n    rdx = *((rsp + 0x38));\n    r12 = rbx;\n    rax -= rdx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040d4b0",
            "funcStartAddr": "0x40d4b0",
            "funcEndAddr": "0x40d541",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40d4b0 */\n#include <stdint.h>\n \nint64_t fcn_0040d4b0 (int64_t arg_10h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rax = *((rsp + 0x10));\n    rbx = r9;\n    if (rax != 0) {\n        r9d = *(rax);\n        r9d = *((rax + 4));\n        r9d = *((rax + 8));\n        r9d = *((rax + 0x1c));\n        rax = fcn_0040d390 (rdi, rsi, rdx, rcx, r8, *((rax + 0x14)));\n        rax += rbx;\n        if (rax overflow 0) {\n            goto label_0;\n        }\n        return rax;\n    }\nlabel_0:\n    if (rbx >= 0) {\n        rcx = 0x7ffffffffffffffd;\n        rdx = rbx - 1;\n        rax = 0x7fffffffffffffff;\n        if (rbx > rcx) {\n            rax = rdx;\n        }\n        return rax;\n    }\n    rax = 0x8000000000000002;\n    if (rbx < rax) {\n        rax = rbx + 1;\n        return rax;\n    }\n    rax = 0x8000000000000000;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040d550",
            "funcStartAddr": "0x40d550",
            "funcEndAddr": "0x40d60f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40d550 */\n#include <stdint.h>\n \nint64_t fcn_0040d550 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13 = rdx;\n    r12 = rdi;\n    rbx = rsi;\n    rax = *(rsi);\n    rsi = rdx;\n    rdi = rsp + 8;\n    rax = void (*r12)(uint64_t, uint64_t, uint64_t, uint64_t) (rbx, rbp, r12, r13);\n    while (1) {\nlabel_1:\n        return rax;\n        r14 = *(rbx);\n        ebp = 0;\n        if (r14 != 0) {\n            goto label_2;\n        }\n    }\n    do {\nlabel_0:\nlabel_2:\n        rdx = r14;\n        rbx >>= 1;\n        rdx >>= 1;\n        rdx += rbx;\n        rbx = rbp;\n        rbx |= r14;\n        ebx &= 1;\n        rbx += rdx;\n        if (rbp != rbx) {\n            if (r14 != rbx) {\n                goto label_3;\n            }\n        }\n        rsi = r13;\n        rdi = rsp + 8;\n        rax = void (*r12)(uint64_t) (rbx);\n    } while (rax != 0);\n    r14 = rbx;\n    rbx = rbp;\n    goto label_0;\nlabel_3:\n    if (rax != 0) {\n        goto label_1;\n    }\n    if (rbp == 0) {\n        goto label_1;\n    }\n    rsi = r13;\n    rdi = rsp + 8;\n    void (*r12)(uint64_t) (rbp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040da50",
            "funcStartAddr": "0x40da50",
            "funcEndAddr": "0x40deac",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40da50 */\n#include <stdint.h>\n \nint64_t fcn_0040da50 (int64_t arg1) {\n    int64_t var_ch;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_1ch;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_44h;\n    int64_t var_48h;\n    int64_t var_50h;\n    int64_t var_58h;\n    int64_t var_60h;\n    int64_t var_70h;\n    int64_t var_80h;\n    int64_t var_90h;\n    int64_t var_a0h;\n    int64_t var_c0h;\n    rdi = arg1;\nlabel_6:\n    r14 = rdi;\n    eax = *(rdi);\n    *((rsp + 0x10)) = rsi;\n    rsi = *((rdi + 0xc));\n    *((rsp + 0x40)) = eax;\n    eax = *((rdi + 4));\n    *((rsp + 0x30)) = rdx;\n    edx = 0x2aaaaaab;\n    *((rsp + 0xc)) = eax;\n    eax = *((rdi + 8));\n    edi = *((rdi + 0x10));\n    *((rsp + 0x18)) = eax;\n    eax = *((r14 + 0x20));\n    *((rsp + 0x28)) = eax;\n    eax = edi;\n    edx:eax = eax * edx;\n    eax = edi;\n    eax >>= 0x1f;\n    edx >>= 1;\n    ecx = edx;\n    edx = 0;\n    ecx -= eax;\n    eax = rcx * 3;\n    ebx = ecx;\n    eax <<= 2;\n    edi -= eax;\n    eax = edi;\n    ecx = edi;\n    eax >>= 0x1f;\n    ebx -= eax;\n    rax = *((r14 + 0x14));\n    rbx = (int64_t) ebx;\n    rbx += rax;\n    if ((bl & 3) == 0) {\n        rdx = 0xa3d70a3d70a3d70b;\n        rax = rbx;\n        rdx:rax = rax * rdx;\n        rax = rdx + rbx;\n        rdx = rbx;\n        rdx >>= 0x3f;\n        rax >>= 6;\n        rax -= rdx;\n        rdx = rax * 5;\n        rdi = rdx * 5;\n        edx = 1;\n        rdi <<= 2;\n        if (rbx == rdi) {\n            goto label_7;\n        }\n    }\nlabel_1:\n    eax = ecx;\n    r12d = 0x3b;\n    rdi = rbx;\n    eax >>= 0x1f;\n    r9d = 0x46;\n    eax &= 0xc;\n    ecx += eax;\n    rax = (int64_t) edx;\n    rdx = rax + rax;\n    rcx = (int64_t) ecx;\n    rdx += rax;\n    rax = rax + rdx*4;\n    rcx += rax;\n    eax = *((rcx + rcx + 0x4179c0));\n    eax--;\n    rax = (int64_t) eax;\n    rsi += rax;\n    eax = *((rsp + 0x40));\n    *((rsp + 0x20)) = rsi;\n    if (eax <= 0x3b) {\n        r12d = eax;\n    }\n    eax = 0;\n    __asm (\"cmovns eax, r12d\");\n    *((rsp + 0x1c)) = eax;\n    r8d = eax;\n    rax = *((rsp + 0x30));\n    rax = *(rax);\n    *((rsp + 0x38)) = rax;\n    eax = *((rsp + 0x38));\n    eax = -eax;\n    *((rsp + 0x44)) = eax;\n    rax = fcn_0040d390 (rdi, rsi, *((rsp + 0x38)), *((rsp + 0x2c)), r8d, r9);\n    r13 = rax;\n    *((rsp + 0x38)) = rax;\n    *((rsp + 0x50)) = rax;\n    eax = 0;\n    *((rsp + 0x48)) = r14;\n    r12d = eax;\n    r14 = r13;\n    while (r15 != r13) {\nlabel_0:\n        ebp--;\n        if (ebp == 0) {\n            goto label_8;\n        }\n        r8d = *((rsp + 0x80));\n        *((rsp + 0x50)) = rax;\n        r12d = 0;\n        r13 = r14;\n        r14 = r15;\n        r12b = (r8d != 0) ? 1 : 0;\n        rax = fcn_0040d550 (*((rsp + 0x10)), rsp + 0x50, rsp + 0x60);\n        r15 = *((rsp + 0x50));\n        rax = fcn_0040d4b0 (rbx, *((rsp + 0x30)), *((rsp + 0x28)), *((rsp + 0x1c)), *((rsp + 0x2c)), r15);\n        if (r15 == rax) {\n            goto label_9;\n        }\n    }\n    if (r15 == r14) {\n        goto label_0;\n    }\n    r10d = *((rsp + 0x80));\n    if (r10d < 0) {\n        goto label_2;\n    }\n    r9d = *((rsp + 0x28));\n    dl = (r10d != 0) ? 1 : 0;\n    if (r9d < 0) {\n        goto label_10;\n    }\n    cl = (r9d != 0) ? 1 : 0;\n    if (cl == dl) {\n        goto label_0;\n    }\nlabel_2:\n    r14 = *((rsp + 0x48));\n    rax = r15;\nlabel_3:\n    rdx = *((rsp + 0x44));\n    rcx = rax;\n    rdx += *((rsp + 0x38));\n    rcx -= rdx;\n    esi = *((rsp + 0x60));\n    edi = *((rsp + 0x40));\n    rdx = rcx;\n    rcx = *((rsp + 0x30));\n    *(rcx) = rdx;\n    if (esi != edi) {\n        r12 = *((rsp + 0x1c));\n        cl = (edi <= 0) ? 1 : 0;\n        edx = 0;\n        dl = (esi == 0x3c) ? 1 : 0;\n        rdx &= rcx;\n        rcx = rdx;\n        rdx = (int64_t) edi;\n        rcx -= r12;\n        rdx += rcx;\n        rax += rdx;\n        *((rsp + 0x50)) = rax;\n        if (rax overflow 0) {\n            goto label_8;\n        }\n        rsi = rsp + 0x60;\n        rdi = rsp + 0xa0;\n        rax = *((rsp + 0x10));\n        rax = void (*rax)(uint64_t) (rax);\n        if (rax == 0) {\n            goto label_8;\n        }\n        rax = *((rsp + 0x50));\n    }\n    __asm (\"movdqa xmm0, xmmword [rsp + 0x60]\");\n    __asm (\"movdqa xmm1, xmmword [rsp + 0x70]\");\n    __asm (\"movdqa xmm2, xmmword [rsp + 0x80]\");\n    rdx = *((rsp + 0x90));\n    __asm (\"movups xmmword [r14], xmm0\");\n    __asm (\"movups xmmword [r14 + 0x10], xmm1\");\n    __asm (\"movups xmmword [r14 + 0x20], xmm2\");\n    *((r14 + 0x30)) = rdx;\n    goto label_11;\nlabel_8:\n    rax = 0xffffffffffffffff;\nlabel_11:\n    return rax;\nlabel_7:\n    eax &= 3;\n    edx = 0;\n    dl = (rax == 1) ? 1 : 0;\n    goto label_1;\nlabel_10:\n    edx = (int32_t) dl;\n    if (edx < r12d) {\n        goto label_0;\n    }\n    goto label_2;\nlabel_9:\n    esi = *((rsp + 0x28));\n    edx = *((rsp + 0x80));\n    r14 = *((rsp + 0x48));\n    rsp + 0x28 = (esi == 0) ? 1 : 0;\n    ebp = *((rsp + 0x28));\n    cl = (edx == 0) ? 1 : 0;\n    if (bpl == cl) {\n        goto label_3;\n    }\n    if (esi < 0) {\n        goto label_3;\n    }\n    if (edx < 0) {\n        goto label_3;\n    }\n    r13d = 0x92c70;\n    *((rsp + 0x28)) = rbx;\n    goto label_12;\nlabel_4:\n    r13d += 0x92c70;\n    if (r13d == 0x100dc400) {\n        goto label_3;\n    }\nlabel_12:\n    r15d = r13d;\n    ebx = r13 + r13;\n    r12d = 2;\n    r15d = -r15d;\n    rdx = (int64_t) r15d;\n    rdx += rax;\n    *((rsp + 0x58)) = rdx;\n    if (rdx !overflow 0) {\n        goto label_13;\n    }\nlabel_5:\n    r15d += ebx;\n    if (r12d == 1) {\n        goto label_4;\n    }\n    rdx = (int64_t) r15d;\n    r12d = 1;\n    rdx += rax;\n    *((rsp + 0x58)) = rdx;\n    if (rdx overflow 0) {\n        goto label_5;\n    }\nlabel_13:\n    fcn_0040d550 (*((rsp + 0x10)), rsp + 0x58, rsp + 0xa0);\n    eax = *((rsp + 0xc0));\n    dl = (eax == 0) ? 1 : 0;\n    if (bpl != dl) {\n        if (eax >= 0) {\n            goto label_14;\n        }\n    }\n    rbx = *((rsp + 0x28));\n    rax = rsp + 0xa8;\n    rax = fcn_0040d4b0 (rbx, *((rsp + 0x30)), *((rsp + 0x28)), *((rsp + 0x1c)), *((rsp + 0x2c)), *((rsp + 0x68)));\n    *((rsp + 0x50)) = rax;\n    fcn_0040d550 (*((rsp + 0x10)), rsp + 0x50, rsp + 0x60);\n    rax = *((rsp + 0x50));\n    goto label_3;\nlabel_14:\n    rax = *((rsp + 0x50));\n    goto label_5;\n    rbx = rdi;\n    tzset ();\n    rdi = rbx;\n    edx = 0x61b4d8;\n    esi = imp.localtime_r;\n    goto label_6;\n}\n"
        },
        {
            "funcName": "fcn_0040da70",
            "funcStartAddr": "0x40da70",
            "funcEndAddr": "0x40dab5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40da70 */\n#include <stdint.h>\n \nuint32_t fcn_0040da70 (char * value) {\n    rdi = value;\n    if (*((rdi + 8)) != 0) {\n        goto label_0;\n    }\n    edi = 0x412bbb;\n    eax = unsetenv ();\n    do {\n        edx = 0;\n        if (eax == 0) {\n            tzset ();\n            edx = 1;\n        }\n        eax = 1;\n        return eax;\nlabel_0:\n        setenv (0x412bbb, rdi + 9, 1);\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040dac0",
            "funcStartAddr": "0x40dac0",
            "funcEndAddr": "0x40dae9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40dac0 */\n#include <stdint.h>\n \nvoid fcn_0040dac0 (int64_t arg1) {\n    rdi = arg1;\n    if (rdi == 0) {\n        goto label_0;\n    }\n    do {\n        rbx = *(rdi);\n        free (rdi);\n        rdi = rbx;\n    } while (rbx != 0);\n    return;\nlabel_0:\n}\n"
        },
        {
            "funcName": "fcn_0040daf0",
            "funcStartAddr": "0x40daf0",
            "funcEndAddr": "0x40db31",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40daf0 */\n#include <stdint.h>\n \nuint64_t fcn_0040daf0 (int64_t arg1) {\n    rdi = arg1;\n    r12 = rdi;\n    rax = errno_location ();\n    rbx = rax;\n    r13d = *(rax);\n    eax = fcn_0040da70 (r12);\n    if (al == 0) {\n        r13d = *(rbx);\n    }\n    fcn_0040dac0 (r12);\n    *(rbx) = r13d;\n    eax = ebp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040db40",
            "funcStartAddr": "0x40db40",
            "funcEndAddr": "0x40dbcf",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40db40 */\n#include <stdint.h>\n \nuint64_t fcn_0040db40 (uint32_t arg1) {\n    rdi = arg1;\n    if (rdi == 0) {\n        goto label_0;\n    }\n    r12 = rdi;\n    strlen (rdi);\n    edi = 0x76;\n    rbp = rax + 1;\n    if (rbp >= 0x76) {\n        rdi = rbp;\n    }\n    rdi += 0x11;\n    rdi &= 0xfffffffffffffff8;\n    rax = malloc (rdi);\n    rbx = rax;\n    if (rax == 0) {\n        goto label_1;\n    }\n    *(rax) = 0;\n    eax = 1;\n    *((rbx + 8)) = ax;\n    memcpy (rbx + 9, r12, rbp);\n    *((rbx + rbp + 9)) = 0;\n    do {\nlabel_1:\n        rax = rbx;\n        return rax;\nlabel_0:\n        rax = malloc (0x80);\n        rbx = rax;\n    } while (rax == 0);\n    edx = 0;\n    *(rbx) = 0;\n    rax = rbx;\n    *((rbx + 8)) = dx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040dbd0",
            "funcStartAddr": "0x40dbd0",
            "funcEndAddr": "0x40dd45",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40dbd0 */\n#include <stdint.h>\n \nint64_t fcn_0040dbd0 (int64_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r12 = *((rsi + 0x30));\n    if (r12 == 0) {\n        goto label_4;\n    }\n    r13 = rsi;\n    if (rsi <= r12) {\n        rdx = rsi + 0x38;\n        eax = 1;\n        if (r12 < rdx) {\n            goto label_2;\n        }\n    }\n    rbx = rbp + 9;\n    if (*(r12) == 0) {\n        goto label_5;\n    }\n    do {\nlabel_0:\n        eax = strcmp (rbx, r12);\n        if (eax == 0) {\n            goto label_3;\n        }\nlabel_1:\n        if (*(rbx) == 0) {\n            r14 = rbp + 9;\n            if (r14 != rbx) {\n                goto label_6;\n            }\n            if (*((rbp + 8)) == 0) {\n                goto label_7;\n            }\n        }\n        strlen (rbx);\n        rbx = rbx + rax + 1;\n    } while (*(rbx) != 0);\n    rax = *(rbp);\n    if (rax == 0) {\n        goto label_0;\n    }\n    rbx = rax + 9;\n    eax = strcmp (rbx, r12);\n    if (eax != 0) {\n        goto label_1;\n    }\n    do {\nlabel_3:\n        *((r13 + 0x30)) = rbx;\n        eax = 1;\nlabel_2:\n        return rax;\nlabel_5:\n        ebx = 0x4179a4;\n    } while (1);\nlabel_4:\n    eax = 1;\n    return rax;\nlabel_6:\n    strlen (r12);\n    r15 = rax + 1;\n    rax = rbx;\n    rax -= r14;\n    rdx = rax;\n    rdx = ~rdx;\n    if (rdx < r15) {\n        errno_location ();\n        *(rax) = 0xc;\n        eax = 0;\n        goto label_2;\nlabel_7:\n        eax = strlen (r12);\n        r15 = rax + 1;\n        eax = 0;\n    }\n    rax += r15;\n    if (rax <= 0x76) {\n        memcpy (rbx, r12, r15);\n        *((rbx + r15)) = 0;\n        goto label_3;\n    }\n    rax = fcn_0040db40 (r12);\n    *(rbp) = rax;\n    if (rax != 0) {\n        *((rax + 8)) = 0;\n        rbx = rax + 9;\n        goto label_3;\n    }\n    eax = 0;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_0040dd50",
            "funcStartAddr": "0x40dd50",
            "funcEndAddr": "0x40ddff",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40dd50 */\n#include <stdint.h>\n \nuint64_t fcn_0040dd50 (int64_t arg1) {\n    rdi = arg1;\n    r12 = rdi;\n    rax = getenv (0x412bbb);\n    if (rax == 0) {\n        goto label_1;\n    }\n    while (eax != 0) {\nlabel_0:\n        rax = fcn_0040db40 (rbp);\n        rbx = rax;\n        if (rax != 0) {\n            al = fcn_0040da70 (r12);\n            if (al == 0) {\n                goto label_2;\n            }\n        }\n        rax = rbx;\n        return rax;\n        ebx = 1;\n        eax = strcmp (r12 + 9, rax);\n    }\n    rax = rbx;\n    return rax;\nlabel_1:\n    ebx = 1;\n    if (*((r12 + 8)) != 0) {\n        goto label_0;\n    }\n    rax = rbx;\n    return rax;\nlabel_2:\n    rax = errno_location ();\n    r12d = *(rax);\n    if (rbx != 1) {\n        fcn_0040dac0 (rbx);\n    }\n    ebx = 0;\n    *(rbp) = r12d;\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040de00",
            "funcStartAddr": "0x40de00",
            "funcEndAddr": "0x40de11",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40de00 */\n#include <stdint.h>\n \nvoid fcn_0040de00 (uint32_t arg1) {\n    rdi = arg1;\n    if (rdi != 1) {\n        void (*0x40dac0)() ();\n    }\n}\n"
        },
        {
            "funcName": "fcn_0040de20",
            "funcStartAddr": "0x40de20",
            "funcEndAddr": "0x40dec5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40de20 */\n#include <stdint.h>\n \nuint64_t fcn_0040de20 (int64_t arg1, uint32_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r12 = rsi;\n    if (rdi == 0) {\n        goto label_1;\n    }\n    rbx = rdx;\n    rax = fcn_0040dd50 (rdi);\n    r13 = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    rsi = rbx;\n    rdi = r12;\n    rax = localtime_r ();\n    if (rax == 0) {\n        goto label_2;\n    }\n    al = fcn_0040dbd0 (rbp, rbx);\n    if (al == 0) {\n        goto label_2;\n    }\n    while (al != 0) {\n        rax = rbx;\n        return rax;\nlabel_2:\n        if (r13 != 1) {\n            eax = fcn_0040daf0 (r13);\n        }\nlabel_0:\n        eax = 0;\n        return rax;\n        al = fcn_0040daf0 (r13);\n    }\n    goto label_0;\nlabel_1:\n    rdi = r12;\n    rsi = rdx;\n    return gmtime_r ();\n}\n"
        },
        {
            "funcName": "fcn_0040ded0",
            "funcStartAddr": "0x40ded0",
            "funcEndAddr": "0x40dfec",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40ded0 */\n#include <stdint.h>\n \nuint64_t fcn_0040ded0 (tm * arg1, char * arg2) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_14h;\n    int64_t var_18h;\n    int64_t var_1ch;\n    int64_t var_20h;\n    int64_t var_24h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rsi;\n    if (rdi == 0) {\n        goto label_3;\n    }\n    rax = fcn_0040dd50 (rdi);\n    r12 = rax;\n    if (rax == 0) {\n        goto label_4;\n    }\n    rax = fcn_0040da50 (rbx);\n    *((rsp + 8)) = rax;\n    if (rax == -1) {\n        goto label_5;\n    }\nlabel_1:\n    al = fcn_0040dbd0 (rbp, rbx);\n    if (al != 0) {\n        goto label_0;\n    }\n    *((rsp + 8)) = 0xffffffffffffffff;\n    do {\nlabel_0:\n        if (r12 != 1) {\n            al = fcn_0040daf0 (r12);\n            if (al == 0) {\n                goto label_4;\n            }\n        }\n        rax = *((rsp + 8));\nlabel_2:\n        return rax;\nlabel_5:\n        rsi = rsp + 0x10;\n        rdi = rsp + 8;\n        rax = localtime_r ();\n    } while (rax == 0);\n    eax = *((rbx + 0x20));\n    edx = *((rsp + 0x30));\n    sil = (eax == 0) ? 1 : 0;\n    cl = (edx == 0) ? 1 : 0;\n    if (sil == cl) {\n        goto label_6;\n    }\n    if (eax < 0) {\n        goto label_6;\n    }\n    if (edx >= 0) {\n        goto label_0;\n    }\nlabel_6:\n    eax = *((rbx + 0x10));\n    edx = *((rbx + 0x14));\n    eax ^= *((rsp + 0x20));\n    edx ^= *((rsp + 0x24));\n    eax |= edx;\n    edx = *((rbx + 0xc));\n    edx ^= *((rsp + 0x1c));\n    eax |= edx;\n    edx = *((rbx + 8));\n    edx ^= *((rsp + 0x18));\n    eax |= edx;\n    edx = *((rbx + 4));\n    edx ^= *((rsp + 0x14));\n    eax |= edx;\n    edx = *(rbx);\n    edx ^= *((rsp + 0x10));\n    eax |= edx;\n    if (eax == 0) {\n        goto label_1;\n    }\n    goto label_0;\nlabel_3:\n    fcn_0040dff0 (rsi);\n    return rax;\nlabel_4:\n    rax = 0xffffffffffffffff;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_0040dff0",
            "funcStartAddr": "0x40dff0",
            "funcEndAddr": "0x40e006",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40dff0 */\n#include <stdint.h>\n \nvoid fcn_0040dff0 (char * arg1) {\n    rdi = arg1;\n    *((rdi + 0x20)) = 0;\n    edx = 0x61b4e0;\n    esi = imp.gmtime_r;\n    return void (*0x40d610)() ();\n}\n"
        },
        {
            "funcName": "fcn_0040e010",
            "funcStartAddr": "0x40e010",
            "funcEndAddr": "0x40e0cd",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40e010 */\n#include <stdint.h>\n \nuint64_t fcn_0040e010 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    int64_t var_10h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13 = rdi;\n    r12 = rsp + 0x10;\n    *((rsp + 8)) = 0x7d0;\n    rax = fcn_0040ffa0 (r12, rsp + 8, rsi, rdx);\n    rbx = *((rsp + 8));\n    if (rax == 0) {\n        goto label_1;\n    }\n    rdi = rax;\n    rax = fwrite (rdi, 1, rbx, r13);\n    if (rax < rbx) {\n        goto label_2;\n    }\n    if (rbp != r12) {\n        free (rbp);\n    }\n    if (rbx > 0x7fffffff) {\n        goto label_3;\n    }\n    do {\nlabel_0:\n        eax = ebx;\n        return rax;\nlabel_2:\n        ebx = 0xffffffff;\n    } while (rbp == r12);\n    rax = errno_location ();\n    r13d = *(rax);\n    r12 = rax;\n    free (rbp);\n    *(r12) = r13d;\n    goto label_0;\nlabel_3:\n    errno_location ();\n    *(rax) = 0x4b;\nlabel_1:\n    ebx = 0xffffffff;\n    fcn_0040ff90 (r13);\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040e0d0",
            "funcStartAddr": "0x40e0d0",
            "funcEndAddr": "0x40e12d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40e0d0 */\n#include <stdint.h>\n \nuint64_t fcn_0040e0d0 (int64_t arg1) {\n    rdi = arg1;\n    rax = fpending ();\n    ebx = *(rbp);\n    r12 = rax;\n    ebx &= 0x20;\n    eax = fcn_0040c420 (rbp);\n    if (ebx != 0) {\n        goto label_1;\n    }\n    if (eax == 0) {\n        goto label_0;\n    }\n    if (r12 != 0) {\n        goto label_2;\n    }\n    rax = errno_location ();\n    al = (*(rax) != 9) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = -eax;\n    do {\nlabel_0:\n        return rax;\nlabel_1:\n        if (eax != 0) {\n            goto label_2;\n        }\n        errno_location ();\n        *(rax) = 0;\n        eax = 0xffffffff;\n    } while (1);\nlabel_2:\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040e130",
            "funcStartAddr": "0x40e130",
            "funcEndAddr": "0x40e18e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40e130 */\n#include <stdint.h>\n \nuint64_t fcn_0040e130 (int32_t category) {\n    rdi = category;\n    rax = setlocale (rdi, 0);\n    rdx = rax;\n    eax = 1;\n    if (rdx != 0) {\n        ecx = 2;\n        edi = 0x414e36;\n        rsi = rdx;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (rdx > 0) ? 1 : 0;\n        eax = 0;\n        if (cl != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    edi = \"POSIX\";\n    ecx = 6;\n    rsi = rdx;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (cl > 0) ? 1 : 0;\n    al = (al != 0) ? 1 : 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040e190",
            "funcStartAddr": "0x40e190",
            "funcEndAddr": "0x40e6f2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40e190 */\n#include <stdint.h>\n \nuint64_t fcn_0040e190 (void) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_60h;\n    rax = nl_langinfo (0xe);\n    r15 = imp.__libc_start_main;\n    rbx = rax;\n    eax = 0x4179a4;\n    if (rax == 0) {\n        rbx = rax;\n    }\n    if (r15 == 0) {\n        goto label_15;\n    }\nlabel_1:\n    ebp = *(r15);\n    if (bpl != 0) {\n        goto label_16;\n    }\n    goto label_17;\n    do {\nlabel_0:\n        strlen (r15);\n        rbp = r15 + rax + 1;\n        strlen (rbp);\n        r15 = rbp + rax + 1;\n        ebp = *(r15);\n        if (bpl == 0) {\n            goto label_17;\n        }\nlabel_16:\n        eax = strcmp (rbx, r15);\n        if (eax == 0) {\n            goto label_18;\n        }\n    } while (bpl != 0x2a);\n    if (*((r15 + 1)) != 0) {\n        goto label_0;\n    }\nlabel_18:\n    strlen (r15);\n    rbx = r15 + rax + 1;\nlabel_17:\n    eax = \"ASCII\";\n    if (*(rbx) == 0) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\nlabel_15:\n    rax = getenv (\"CHARSETALIASDIR\");\n    r13 = rax;\n    if (rax == 0) {\n        goto label_19;\n    }\n    if (*(rax) == 0) {\n        goto label_19;\n    }\n    rax = strlen (rax);\n    r12 = rax;\n    r14 = rax;\n    if (rax != 0) {\n        goto label_20;\n    }\nlabel_13:\n    rax = malloc (0xe);\n    if (rax != 0) {\n        goto label_21;\n    }\n    do {\n        r15d = 0x4179a4;\nlabel_2:\n        *(0x0061b4e8) = r15;\n        goto label_1;\nlabel_19:\n        r12d = 0x65;\n        r14d = 0x64;\n        r13d = \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\";\nlabel_14:\n        rax = malloc (0x73);\n    } while (rax == 0);\n    memcpy (rbp, r13, r14);\n    *((rbp + r14)) = 0x2f;\n    do {\n        r12 += rbp;\n        rax = 0x2e74657372616863;\n        *(r12) = rax;\n        eax = 0x73;\n        *((r12 + 0xc)) = ax;\n        eax = 0;\n        *((r12 + 8)) = 0x61696c61;\n        eax = open (rbp, 0, rdx);\n        r12d = eax;\n        if (eax >= 0) {\n            goto label_22;\n        }\nlabel_6:\n        r15d = 0x4179a4;\nlabel_7:\n        free (rbp);\n        goto label_2;\nlabel_21:\n        eax = memcpy (rbp, r13, r14);\n    } while (1);\nlabel_22:\n    esi = 0x414a2b;\n    edi = eax;\n    r15d = 0;\n    rax = fdopen ();\n    *((rsp + 8)) = 0;\n    r13 = rax;\n    if (rax == 0) {\n        goto label_23;\n    }\n    rax = rbx;\n    r12 = rsp + 0x60;\n    r14 = rsp + 0x20;\n    rbx = r13;\n    r13 = rax;\n    do {\nlabel_3:\n        rax = *((rbx + 8));\n        if (rax >= *((rbx + 0x10))) {\n            goto label_24;\n        }\nlabel_4:\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        edi = *(rax);\nlabel_5:\n        eax = rdi - 9;\n    } while (eax <= 1);\n    if (edi == 0x20) {\n        goto label_3;\n    }\n    if (edi == 0x23) {\n        goto label_25;\n    }\n    eax = ungetc (rdi, rbx);\n    eax = 0;\n    rcx = r12;\n    rdx = r14;\n    eax = fscanf (rbx, \"%50s %50s\");\n    if (eax <= 1) {\n        goto label_12;\n    }\n    rcx = r14;\n    do {\n        edx = *(rcx);\n        rcx += 4;\n        eax = rdx - 0x1010101;\n        edx = ~edx;\n        eax &= edx;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    edx = eax;\n    edx >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = edx;\n    }\n    rdx = rcx + 2;\n    if ((eax & 0x8080) == 0) {\n        rcx = rdx;\n    }\n    edx = eax;\n    dl += al;\n    rdx = r12;\n    rcx -= 3;\n    rcx -= r14;\n    do {\n        esi = *(rdx);\n        rdx += 4;\n        eax = rsi - 0x1010101;\n        esi = ~esi;\n        eax &= esi;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    esi = eax;\n    *((rsp + 0x10)) = rcx;\n    esi >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = esi;\n    }\n    rsi = rdx + 2;\n    if ((eax & 0x8080) == 0) {\n        rdx = rsi;\n    }\n    esi = eax;\n    sil += al;\n    rdx -= 3;\n    rdx -= r12;\n    rax = rcx + rdx;\n    *((rsp + 0x18)) = rdx;\n    if (*((rsp + 8)) != 0) {\n        goto label_26;\n    }\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    rax = malloc (rax + 3);\n    rcx = *((rsp + 0x10));\n    rdx = *((rsp + 0x18));\nlabel_9:\n    if (rax == 0) {\n        goto label_27;\n    }\n    rdi = *((rsp + 8));\n    rsi = 0xfffffffffffffffe;\n    rsi -= rcx;\n    rcx++;\n    rdi -= rdx;\n    rsi += rdi;\n    rsi += rax;\n    if (ecx >= 8) {\n        goto label_28;\n    }\n    if ((cl & 4) != 0) {\n        goto label_29;\n    }\n    if (ecx != 0) {\n        r9d = *(r14);\n        *(rsi) = r9b;\n        if ((cl & 2) != 0) {\n            goto label_30;\n        }\n    }\nlabel_10:\n    rdx++;\n    rcx = rax + rdi - 1;\n    if (edx >= 8) {\n        goto label_31;\n    }\n    if ((dl & 4) != 0) {\n        goto label_32;\n    }\n    if (edx != 0) {\n        esi = *(r12);\n        *(rcx) = sil;\n        if ((dl & 2) != 0) {\n            goto label_33;\n        }\n    }\nlabel_11:\n    r15 = rax;\n    rax = *((rbx + 8));\n    if (rax < *((rbx + 0x10))) {\n        goto label_4;\n    }\nlabel_24:\n    rdi = rbx;\n    eax = uflow ();\n    edi = eax;\n    if (eax != 0xffffffff) {\n        goto label_5;\n    }\nlabel_12:\n    rax = r13;\n    r13 = rbx;\n    rbx = rax;\n    fcn_0040c420 (rbx);\n    rax = *((rsp + 8));\n    if (rax == 0) {\n        goto label_6;\n    }\n    *((r15 + rax)) = 0;\n    goto label_7;\n    do {\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        eax = *(rax);\n        edx = 1;\nlabel_8:\n        if (eax == 0xa) {\n            goto label_34;\n        }\n        if (dl == 0) {\n            goto label_34;\n        }\nlabel_25:\n        rax = *((rbx + 8));\n    } while (rax < *((rbx + 0x10)));\n    rdi = rbx;\n    eax = uflow ();\n    dl = (eax != 0xffffffff) ? 1 : 0;\n    goto label_8;\nlabel_26:\n    rax += *((rsp + 8));\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    eax = realloc (r15, rax + 3);\n    rdx = *((rsp + 0x18));\n    rcx = *((rsp + 0x10));\n    goto label_9;\nlabel_28:\n    r9 = *(r14);\n    *(rsi) = r9;\n    r9d = ecx;\n    r10 = *((r14 + r9 - 8));\n    *((rsi + r9 - 8)) = r10;\n    r9 = rsi + 8;\n    r10 = r14;\n    r9 &= 0xfffffffffffffff8;\n    rsi -= r9;\n    ecx += esi;\n    r10 -= rsi;\n    ecx &= 0xfffffff8;\n    if (ecx < 8) {\n        goto label_10;\n    }\n    ecx &= 0xfffffff8;\n    esi = 0;\n    do {\n        r8d = esi;\n        esi += 8;\n        r11 = *((r10 + r8));\n        *((r9 + r8)) = r11;\n    } while (esi < ecx);\n    goto label_10;\nlabel_31:\n    rsi = *(r12);\n    r9 = r12;\n    *(rcx) = rsi;\n    esi = edx;\n    rdi = *((r12 + rsi - 8));\n    *((rcx + rsi - 8)) = rdi;\n    rdi = rcx + 8;\n    rdi &= 0xfffffffffffffff8;\n    rcx -= rdi;\n    edx += ecx;\n    r9 -= rcx;\n    edx &= 0xfffffff8;\n    if (edx < 8) {\n        goto label_11;\n    }\n    edx &= 0xfffffff8;\n    ecx = 0;\n    do {\n        esi = ecx;\n        ecx += 8;\n        r8 = *((r9 + rsi));\n        *((rdi + rsi)) = r8;\n    } while (ecx < edx);\n    goto label_11;\nlabel_34:\n    if (eax == 0xffffffff) {\n        goto label_12;\n    }\n    goto label_3;\nlabel_20:\n    if (*((r13 + rax - 1)) == 0x2f) {\n        rdi = rax + 0xe;\n        goto label_13;\nlabel_23:\n        close (r12d);\n        goto label_6;\nlabel_29:\n        r9d = *(r14);\n        *(rsi) = r9d;\n        r9d = *((r14 + rcx - 4));\n        *((rsi + rcx - 4)) = r9d;\n        goto label_10;\nlabel_32:\n        esi = *(r12);\n        *(rcx) = esi;\n        esi = *((r12 + rdx - 4));\n        *((rcx + rdx - 4)) = esi;\n        goto label_11;\nlabel_27:\n        rax = r13;\n        r13 = rbx;\n        r15d = 0x4179a4;\n        rbx = rax;\n        free (r15);\n        fcn_0040c420 (r13);\n        goto label_7;\nlabel_30:\n        r9d = *((r14 + rcx - 2));\n        *((rsi + rcx - 2)) = r9w;\n        goto label_10;\nlabel_33:\n        esi = edx;\n        edx = *((r12 + rsi - 2));\n        *((rcx + rsi - 2)) = dx;\n        goto label_11;\n    }\n    rdi = rax + 0xf;\n    r12++;\n    goto label_14;\n}\n"
        },
        {
            "funcName": "fcn_0040e700",
            "funcStartAddr": "0x40e700",
            "funcEndAddr": "0x40e741",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40e700 */\n#include <stdint.h>\n \nuint64_t fcn_0040e700 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r12 = rsi;\n    rbx = rdx - 1;\n    rax = ctype_tolower_loc ();\n    do {\n        ecx = *((r12 + rbx));\n        rdx = *(rax);\n        edx = *((rdx + rcx*4));\n        *((rbp + rbx)) = dl;\n        rbx--;\n    } while (rbx != -1);\nlabel_0:\n    rax = rbp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040e750",
            "funcStartAddr": "0x40e750",
            "funcEndAddr": "0x40e791",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40e750 */\n#include <stdint.h>\n \nuint64_t fcn_0040e750 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r12 = rsi;\n    rbx = rdx - 1;\n    rax = ctype_toupper_loc ();\n    do {\n        ecx = *((r12 + rbx));\n        rdx = *(rax);\n        edx = *((rdx + rcx*4));\n        *((rbp + rbx)) = dl;\n        rbx--;\n    } while (rbx != -1);\nlabel_0:\n    rax = rbp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040e7a0",
            "funcStartAddr": "0x40e7a0",
            "funcEndAddr": "0x40ff65",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40e7a0 */\n#include <stdint.h>\n \nvoid fcn_0040e7a0 (int64_t arg_4d8h_2, tm * arg_4d0h, int64_t arg_4d8h, int64_t arg1, char * arg11, int64_t arg2, char * arg3, tm * arg4, int64_t arg6, char * arg7, int64_t arg9) {\n    tm * timeptr;\n    int64_t var_10h;\n    int64_t var_18h;\n    char * var_20h;\n    int64_t var_2bh;\n    int64_t var_2ch;\n    char * var_30h;\n    char * var_40h;\n    char * var_48h;\n    char * var_50h;\n    char * var_58h;\n    char * var_60h;\n    char * var_68h;\n    char * format;\n    int64_t var_72h;\n    int64_t var_73h;\n    int64_t var_87h;\n    char * s;\n    int64_t var_91h;\n    int64_t var_a0h;\n    int64_t var_b0h;\n    int64_t var_c0h;\n    rdi = arg1;\n    xmm4 = arg11;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r9 = arg6;\n    xmm0 = arg7;\n    xmm2 = arg9;\nlabel_12:\n    eax = 0x4179a4;\n    r15 = rdi;\n    rbx = rdx;\n    r12 = *((rcx + 0x30));\n    r11d = *((rcx + 8));\n    *(rsp) = rsi;\n    *((rsp + 8)) = rcx;\n    *((rsp + 0x18)) = r9;\n    if (r12 == 0) {\n        r12 = rax;\n    }\n    *((rsp + 0x2b)) = r8b;\n    if (r11d <= 0xc) {\n        goto label_52;\n    }\n    r11d -= 0xc;\nlabel_0:\n    eax = *(rbx);\n    r14d = 0;\n    if (al == 0) {\n        goto label_53;\n    }\n    rdi = rsp + 0x72;\n    *((rsp + 0x2c)) = r11d;\n    *((rsp + 0x10)) = rdi;\n    *((rsp + 0x20)) = r12;\n    do {\n        if (al == 0x25) {\n            goto label_54;\n        }\n        rdx = *(rsp);\n        rdx -= r14;\n        if (rdx <= 1) {\n            goto label_8;\n        }\n        if (r15 != 0) {\n            *(r15) = al;\n            r15++;\n        }\n        r14++;\n        r8 = rbx;\nlabel_7:\n        eax = *((r8 + 1));\n        rbx = r8 + 1;\n    } while (al != 0);\nlabel_53:\n    if (r15 != 0) {\n        if (*(rsp) == 0) {\n            goto label_55;\n        }\n        *(r15) = 0;\n        goto label_55;\nlabel_8:\n        r14d = 0;\n    }\nlabel_55:\n    rax = r14;\n    return rax;\nlabel_52:\n    eax = 0xc;\n    if (r11d == 0) {\n        r11d = eax;\n    }\n    goto label_0;\nlabel_54:\n    r11d = *((rsp + 0x2b));\n    r8d = 0;\n    r12d = 0;\nlabel_1:\n    rbx++;\n    eax = *(rbx);\n    ecx = eax;\n    r9d = eax;\n    if (al == 0x30) {\n        goto label_2;\n    }\n    do {\n        if (al > 0x30) {\n            goto label_56;\n        }\n        if (al != 0x23) {\n            goto label_57;\n        }\n        rbx++;\n        eax = *(rbx);\n        r8d = 1;\n        ecx = eax;\n        r9d = eax;\n    } while (al != 0x30);\n    do {\nlabel_2:\n        r12d = eax;\n        goto label_1;\nlabel_57:\n    } while (al == 0x2d);\n    eax -= 0x30;\n    if (eax <= 9) {\n        goto label_58;\n    }\nlabel_3:\n    if (cl == 0x45) {\n        goto label_59;\n    }\n    if (cl == 0x4f) {\n        goto label_59;\n    }\n    r9d = 0;\nlabel_4:\n    if (cl > 0x7a) {\n        goto label_25;\n    }\n    eax = (int32_t) cl;\n    /* switch table (123 cases) at 0x417a88 */\nlabel_56:\n    if (al == 0x5e) {\n        r11d = 1;\n        goto label_1;\n    }\n    if (al == 0x5f) {\n        goto label_2;\n    }\n    eax -= 0x30;\n    if (eax > 9) {\n        goto label_3;\n    }\nlabel_58:\n    ebp = 0;\n    do {\n        eax = *((rbx + 1));\n        rsi = rbx + 1;\n        ecx = eax;\n        edx = rax - 0x30;\n        if (ebp > 0xccccccc) {\n            goto label_60;\n        }\n        edi = *(rbx);\n        if (ebp == 0xccccccc) {\n            goto label_61;\n        }\nlabel_5:\n        r9d = rbp + rbp*4;\n        rbx = rsi;\n        ebp = rdi + r9*2 - 0x30;\nlabel_6:\n    } while (edx <= 9);\n    r9d = eax;\n    goto label_3;\nlabel_59:\n    ecx = *((rbx + 1));\n    rbx++;\n    goto label_4;\nlabel_61:\n    if (dil <= 0x37) {\n        goto label_5;\n    }\nlabel_60:\n    if (edx <= 9) {\n        eax = *((rbx + 2));\n        rbx += 2;\n        ecx = eax;\n        edx = rax - 0x30;\n        goto label_6;\n    }\n    r9d = eax;\n    rbx = rsi;\n    goto label_3;\n    if (r9d != 0) {\n        goto label_25;\n    }\n    if (r8b != 0) {\n        r11d = r8d;\n    }\nlabel_23:\n    edx = 0x2520;\n    rax = *((rsp + 0x10));\n    r8 = rbx;\n    r13d = 0;\n    *((rsp + 0x70)) = dx;\n    r9d = 0;\nlabel_9:\n    *(rax) = cl;\n    *((rax + 1)) = 0;\n    *((rsp + 0x30)) = r8;\n    *((rsp + 0x48)) = r9d;\n    *((rsp + 0x40)) = r11b;\n    rax = strftime (rsp + 0x90, 0x400, rsp + 0x70, *((rsp + 8)));\n    r8 = *((rsp + 0x30));\n    if (rax == 0) {\n        goto label_7;\n    }\n    rcx = rax - 1;\n    eax = 0;\n    rdx = *(rsp);\n    __asm (\"cmovns eax, ebp\");\n    rax = (int64_t) eax;\n    rbx = rax;\n    if (rcx >= rax) {\n        rbx = rcx;\n    }\n    rdx -= r14;\n    if (rdx <= rbx) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        r9d = *((rsp + 0x48));\n        r11d = *((rsp + 0x40));\n        if (r9d == 0) {\n            if (rcx >= rax) {\n                goto label_34;\n            }\n            rdx = (int64_t) ebp;\n            *((rsp + 0x48)) = rcx;\n            rdx -= rcx;\n            *((rsp + 0x40)) = r8;\n            rbp = r15 + rdx;\n            *((rsp + 0x30)) = r11b;\n            if (r12d == 0x30) {\n                goto label_62;\n            }\n            r15 = rbp;\n            memset (r15, 0x20, rdx);\n            rcx = *((rsp + 0x48));\n            r8 = *((rsp + 0x40));\n            r11d = *((rsp + 0x30));\n        }\nlabel_34:\n        *((rsp + 0x40)) = r8;\n        rsi = rsp + 0x91;\n        rdx = rcx;\n        rdi = r15;\n        *((rsp + 0x30)) = rcx;\n        if (r13b != 0) {\n            goto label_63;\n        }\nlabel_11:\n        if (r11b == 0) {\n            goto label_64;\n        }\n        fcn_0040e750 (rdi, rsi, rdx);\n        rcx = *((rsp + 0x30));\n        r8 = *((rsp + 0x40));\nlabel_31:\n        r15 += rcx;\n    }\nlabel_10:\n    r14 += rbx;\n    goto label_7;\n    if (r9d == 0x4f) {\n        goto label_25;\n    }\n    r13d = 0;\nlabel_15:\n    edi = 0x2520;\n    *((rsp + 0x70)) = di;\n    if (r9d != 0) {\n        goto label_65;\n    }\n    r8 = rbx;\n    rax = *((rsp + 0x10));\n    goto label_9;\n    rax = *((rsp + 8));\n    *((rsp + 0x40)) = r11b;\n    r13 = rsp + 0x87;\n    __asm (\"movdqu xmm4, xmmword [rax + 0x20]\");\n    __asm (\"movdqu xmm0, xmmword [rax]\");\n    __asm (\"movdqu xmm2, xmmword [rax + 0x10]\");\n    rax = *((rax + 0x30));\n    *((rsp + 0x90)) = xmm0;\n    *((rsp + 0xa0)) = xmm2;\n    *((rsp + 0x30)) = xmm4;\n    *((rsp + 0xb0)) = xmm4;\n    *((rsp + 0xc0)) = rax;\n    rax = fcn_0040ded0 (*((rsp + 0x4d0)), rsp + 0x90);\n    r11d = *((rsp + 0x40));\n    edi = 0x30;\n    rsi = rax;\n    rcx = rax;\n    do {\n        rax = 0x6666666666666667;\n        rdx:rax = rax * rcx;\n        rax = rcx;\n        rax >>= 0x3f;\n        rdx >>= 2;\n        rdx -= rax;\n        rax = rdx;\n        rdx *= 5;\n        rdx += rdx;\n        rcx -= rdx;\n        rdx = rcx;\n        rcx = rax;\n        eax = edi;\n        eax -= edx;\n        edx += 0x30;\n        __asm (\"cmovs edx, eax\");\n        r13--;\n        *(r13) = dl;\n    } while (rcx != 0);\n    r10d = 1;\n    if (ebp > 0) {\n        r10d = ebp;\n    }\n    if (rsi < 0) {\n        goto label_66;\n    }\nlabel_19:\n    rax = *(rsp);\n    rcx = rsp + 0x87;\n    rcx -= r13;\n    rax -= r14;\n    if (r12d != 0x2d) {\n        r9d = r10d;\n        r9d -= ecx;\n        if (r9d > 0) {\n            goto label_67;\n        }\n    }\n    r9d = 0;\n    r8 = rbx;\n    __asm (\"cmovns r9d, ebp\");\n    r9 = (int64_t) r9d;\nlabel_20:\n    rbx = r9;\n    if (rcx >= r9) {\n        rbx = rcx;\n    }\n    if (rbx >= rax) {\n        goto label_8;\n    }\n    if (r15 == 0) {\n        goto label_10;\n    }\n    if (r10d == 0) {\n        if (rcx >= r9) {\n            goto label_35;\n        }\n        rdx = (int64_t) ebp;\n        *((rsp + 0x48)) = rcx;\n        rdx -= rcx;\n        *((rsp + 0x40)) = r8;\n        rbp = r15 + rdx;\n        *((rsp + 0x30)) = r11b;\n        if (r12d == 0x30) {\n            goto label_68;\n        }\n        r15 = rbp;\n        memset (r15, 0x20, rdx);\n        rcx = *((rsp + 0x48));\n        r8 = *((rsp + 0x40));\n        r11d = *((rsp + 0x30));\n    }\nlabel_35:\n    *((rsp + 0x40)) = r8;\n    rdx = rcx;\n    rsi = r13;\n    rdi = r15;\n    *((rsp + 0x30)) = rcx;\n    goto label_11;\n    if (r9d != 0) {\n        goto label_25;\n    }\n    *((rsp + 0x30)) = \"%m/%d/%y\";\nlabel_13:\n    eax = *((rsp + 0x4d8));\n    r13d = (int32_t) r11b;\n    rax = fcn_0040e7a0 (0, 0xffffffffffffffff, *((rsp + 0x40)), *((rsp + 0x18)), r13d, *((rsp + 0x28)));\n    goto label_12;\n    r10 = rax;\n    eax = 0;\n    r11 = *(rsp);\n    __asm (\"cmovns eax, ebp\");\n    rax = (int64_t) eax;\n    rsi = rax;\n    if (r10 >= rax) {\n        rsi = r10;\n    }\n    r11 -= r14;\n    *((rsp + 0x40)) = rsi;\n    if (r11 <= rsi) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        if (r10 < rax) {\n            rdx = (int64_t) ebp;\n            *((rsp + 0x50)) = r10;\n            rdx -= r10;\n            *((rsp + 0x48)) = r11;\n            rbp = r15 + rdx;\n            if (r12d == 0x30) {\n                goto label_69;\n            }\n            r15 = rbp;\n            memset (r15, 0x20, rdx);\n            r10 = *((rsp + 0x50));\n            r11 = *((rsp + 0x48));\n        }\nlabel_38:\n        eax = *((rsp + 0x4d8));\n        *((rsp + 0x48)) = r10;\n        fcn_0040e7a0 (r15, r11, *((rsp + 0x40)), *((rsp + 0x18)), r13d, *((rsp + 0x28)));\n        goto label_12;\n        r10 = *((rsp + 0x58));\n        r15 += r10;\n    }\n    r14 += *((rsp + 0x40));\n    r8 = rbx;\n    goto label_7;\n    if (r9d != 0) {\n        goto label_25;\n    }\n    *((rsp + 0x30)) = \"%Y-%m-%d\";\n    goto label_13;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rdx = *((rsp + 8));\n    esi = *((rdx + 0x14));\n    r10d = *((rdx + 0x1c));\n    r13d = *((rdx + 0x18));\n    edx = 0x92492493;\n    eax = esi;\n    *((rsp + 0x30)) = esi;\n    eax >>= 0x1f;\n    eax &= 0x190;\n    edi = rsi + rax - 0x64;\n    esi = r10d;\n    esi -= r13d;\n    esi += 0x17e;\n    eax = esi;\n    edx:eax = eax * edx;\n    eax = rdx + rsi;\n    edx = esi;\n    edx >>= 0x1f;\n    eax >>= 2;\n    eax -= edx;\n    edx = rax*8;\n    edx -= eax;\n    eax = edx;\n    edx = r10d;\n    edx -= esi;\n    r8d = rdx + rax + 3;\n    if (r8d < 0) {\n        goto label_70;\n    }\n    eax = 0x16d;\n    if ((dil & 3) == 0) {\n        esi = 0x51eb851f;\n        eax = edi;\n        edx:eax = eax * esi;\n        eax = edi;\n        eax >>= 0x1f;\n        *((rsp + 0x40)) = eax;\n        esi = edx;\n        edx >>= 5;\n        edx -= eax;\n        eax = 0x16e;\n        edx *= 0x64;\n        if (edi != edx) {\n            goto label_71;\n        }\n        esi >>= 7;\n        eax = esi;\n        eax -= *((rsp + 0x40));\n        eax *= 0x190;\n        al = (edi == eax) ? 1 : 0;\n        eax = (int32_t) al;\n        eax += 0x16d;\n    }\nlabel_71:\n    esi = r10d;\n    edx = 0x92492493;\n    esi -= eax;\n    edi = esi;\n    edi -= r13d;\n    edi += 0x17e;\n    eax = edi;\n    esi -= edi;\n    edx:eax = eax * edx;\n    eax = rdx + rdi;\n    edx = edi;\n    edx >>= 0x1f;\n    eax >>= 2;\n    eax -= edx;\n    edx = rax*8;\n    edx -= eax;\n    r13d = rsi + rdx + 3;\n    __asm (\"cmovns r8d, r13d\");\n    r13d >>= 0x1f;\n    r13d++;\nlabel_39:\n    if (cl == 0x47) {\n        goto label_72;\n    }\n    if (cl != 0x67) {\n        goto label_73;\n    }\n    eax = *((rsp + 0x30));\n    esi = 0x51eb851f;\n    r8d = *((rsp + 0x30));\n    r10d = 2;\n    edx:eax = eax * esi;\n    edi = r8d;\n    edx >>= 5;\n    eax = edx;\n    edx = r8d;\n    edx >>= 0x1f;\n    eax -= edx;\n    eax *= 0x64;\n    edi -= eax;\n    edi += r13d;\n    eax = edi;\n    edx:eax = eax * esi;\n    eax = edi;\n    eax >>= 0x1f;\n    esi = edx;\n    esi >>= 5;\n    esi -= eax;\n    esi *= 0x64;\n    edi -= esi;\n    esi = edi;\n    if (edi < 0) {\n        eax = 0xfffff894;\n        edx = edi;\n        esi += 0x64;\n        eax -= r13d;\n        edx = -edx;\n        if (r8d < eax) {\n            esi = edx;\n        }\n    }\nlabel_14:\n    eax = esi;\n    *((rsp + 0x30)) = 0;\n    edi = 0;\n    eax >>= 0x1f;\n    r8d = eax;\nlabel_17:\n    if (r9d != 0x4f) {\n        goto label_74;\n    }\n    if (r8b != 0) {\n        goto label_75;\n    }\nlabel_18:\n    eax = 0x2520;\n    r13d = 0;\n    *((rsp + 0x70)) = ax;\nlabel_51:\n    *((rsp + 0x72)) = r9b;\n    r8 = rbx;\n    r9d = r10d;\n    rax = rsp + 0x73;\n    goto label_9;\n    eax = 0;\n    rdi = *((rsp + 0x20));\n    *((rsp + 0x48)) = r8b;\n    if (r8b != 0) {\n        r11d = eax;\n    }\n    *((rsp + 0x40)) = r11b;\n    rax = strlen (rdi);\n    rdx = *(rsp);\n    r13 = rax;\n    eax = 0;\n    __asm (\"cmovns eax, ebp\");\n    rax = (int64_t) eax;\n    rsi = rax;\n    if (r13 >= rax) {\n        rsi = r13;\n    }\n    rdx -= r14;\n    *((rsp + 0x30)) = rsi;\n    if (rdx <= rsi) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        r11d = *((rsp + 0x40));\n        r8d = *((rsp + 0x48));\n        if (r13 < rax) {\n            rdx = (int64_t) ebp;\n            rdx -= r13;\n            rbp = r15 + rdx;\n            if (r12d == 0x30) {\n                goto label_76;\n            }\n            *((rsp + 0x48)) = r8b;\n            r15 = rbp;\n            *((rsp + 0x40)) = r11b;\n            memset (r15, 0x20, rdx);\n            r8d = *((rsp + 0x48));\n            r11d = *((rsp + 0x40));\n        }\nlabel_48:\n        rdx = r13;\n        rsi = *((rsp + 0x20));\n        rdi = r15;\n        if (r8b != 0) {\n            goto label_77;\n        }\n        if (r11b == 0) {\n            goto label_78;\n        }\n        fcn_0040e750 (rdi, rsi, rdx);\nlabel_42:\n        r15 += r13;\n    }\n    r14 += *((rsp + 0x30));\n    r8 = rbx;\n    goto label_7;\n    *((rsp + 0x30)) = \"%H:%M\";\n    goto label_13;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    r10d = 2;\n    esi = *((rax + 8));\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    esi = *((rsp + 0x2c));\n    r10d = 2;\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    r10d = 2;\n    esi = *((rax + 4));\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    if (ebp != 0xffffffff) {\n        goto label_79;\n    }\n    esi = *((rsp + 0x4d8));\n    r10d = 9;\n    goto label_14;\n    r13d = 1;\nlabel_28:\n    eax = 0;\n    ecx = 0x70;\n    if (r8b != 0) {\n        r13d = r8d;\n    }\n    if (r8b != 0) {\n        r11d = eax;\n    }\n    goto label_15;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    esi = *((rax + 8));\nlabel_16:\n    r10d = 2;\n    if (r12d == 0x30) {\n        goto label_14;\n    }\n    if (r12d == 0x2d) {\n        goto label_14;\n    }\n    r12d = 0x5f;\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    esi = *((rsp + 0x2c));\n    goto label_16;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    *((rsp + 0x30)) = 0;\n    r10d = 2;\n    esi = *((rax + 0x10));\n    r8b = (esi < 0xffffffff) ? 1 : 0;\n    esi++;\n    edi = 0;\n    goto label_17;\n    r13d = 0;\n    eax = 1;\n    __asm (\"cmovns r13d, ebp\");\n    r13 = (int64_t) r13d;\n    if (r13 == 0) {\n        r13 = rax;\n    }\n    rax = *(rsp);\n    rax -= r14;\n    if (rax <= r13) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        if (ebp > 1) {\n            rdx = (int64_t) ebp;\n            rdx--;\n            rbp = r15 + rdx;\n            if (r12d == 0x30) {\n                goto label_80;\n            }\n            r15 = rbp;\n            memset (r15, 0x20, rdx);\n        }\nlabel_44:\n        *(r15) = 0xa;\n        r15++;\n    }\nlabel_21:\n    r14 += r13;\n    r8 = rbx;\n    goto label_7;\n    rax = *((rsp + 8));\n    r10d = 1;\n    eax = *((rax + 0x10));\n    if (r9d == 0x4f) {\n        goto label_18;\n    }\n    edx = rax * 5;\n    *((rsp + 0x30)) = 0;\n    r8d = 0;\n    edi = 0;\n    esi = rax + rdx*2;\n    esi >>= 5;\n    esi++;\nlabel_22:\n    *((rsp + 0x40)) = r8b;\n    rcx = rsp + 0x87;\n    r9d = 0xcccccccd;\n    do {\n        r13 = rcx - 1;\n        if ((dil & 1) != 0) {\n            rax = rcx - 2;\n            *((rcx - 1)) = 0x3a;\n            rcx = r13;\n            r13 = rax;\n        }\n        eax = esi;\n        r8d = esi;\n        edi >>= 1;\n        edx:eax = eax * r9d;\n        edx >>= 3;\n        eax = rdx * 5;\n        eax += eax;\n        r8d -= eax;\n        eax = r8d;\n        eax += 0x30;\n        *((rcx - 1)) = al;\n        rcx = r13;\n        if (esi <= 9) {\n            if (edi == 0) {\n                goto label_81;\n            }\n        }\n        esi = edx;\n    } while (1);\nlabel_81:\n    r8d = *((rsp + 0x40));\n    if (r10d < ebp) {\n        r10d = ebp;\n    }\n    if (r8b != 0) {\n        goto label_66;\n    }\n    if (*((rsp + 0x30)) == 0) {\n        goto label_19;\n    }\n    if (r12d == 0x2d) {\n        goto label_82;\n    }\n    *((rsp + 0x30)) = 0x2b;\nlabel_32:\n    rcx = rsp + 0x87;\n    r9d = r10 - 1;\n    rax = *(rsp);\n    rcx -= r13;\n    r9d -= ecx;\n    rax -= r14;\n    if (r9d <= 0) {\n        goto label_83;\n    }\n    if (r12d == 0x5f) {\n        goto label_84;\n    }\n    rdx = (int64_t) r10d;\n    if (rdx >= rax) {\n        goto label_8;\n    }\n    edx = 0;\n    esi = 1;\n    __asm (\"cmovns edx, ebp\");\n    rdx = (int64_t) edx;\n    if (rdx != 0) {\n        rsi = rdx;\n    }\n    if (rsi >= rax) {\n        goto label_8;\n    }\n    r14 += rsi;\n    r9 = (int64_t) r9d;\n    r8 = rbx;\n    if (r15 != 0) {\n        if (r10d == 0) {\n            if (rdx <= 1) {\n                goto label_49;\n            }\n            rdx = (int64_t) ebp;\n            *((rsp + 0x58)) = r9;\n            rdx--;\n            *((rsp + 0x50)) = rcx;\n            rbp = r15 + rdx;\n            *((rsp + 0x48)) = r10d;\n            *((rsp + 0x40)) = r11b;\n            if (r12d == 0x30) {\n                goto label_85;\n            }\n            r15 = rbp;\n            memset (r15, 0x20, rdx);\n            r9 = *((rsp + 0x58));\n            rcx = *((rsp + 0x50));\n            r10d = *((rsp + 0x48));\n            r11d = *((rsp + 0x40));\n        }\nlabel_49:\n        eax = *((rsp + 0x30));\n        r15++;\n        r8 = rbx;\n        *((r15 - 1)) = al;\nlabel_41:\n        if (r15 == 0) {\n            goto label_86;\n        }\n        rdx = r9;\n        *((rsp + 0x58)) = rcx;\n        *((rsp + 0x50)) = r10d;\n        *((rsp + 0x48)) = r8;\n        *((rsp + 0x40)) = r11b;\n        *((rsp + 0x30)) = r9;\n        memset (r15, 0x30, rdx);\n        r9 = *((rsp + 0x30));\n        rcx = *((rsp + 0x58));\n        r10d = *((rsp + 0x50));\n        r8 = *((rsp + 0x48));\n        r11d = *((rsp + 0x40));\n        r15 += r9;\n    }\nlabel_86:\n    rax = *(rsp);\n    r14 += r9;\n    ebp = 0;\n    r9d = 0;\n    rax -= r14;\n    goto label_20;\n    r13d = 0;\n    eax = 1;\n    __asm (\"cmovns r13d, ebp\");\n    r13 = (int64_t) r13d;\n    if (r13 == 0) {\n        r13 = rax;\n    }\n    rax = *(rsp);\n    rax -= r14;\n    if (rax <= r13) {\n        goto label_8;\n    }\n    if (r15 == 0) {\n        goto label_21;\n    }\n    if (ebp > 1) {\n        rdx = (int64_t) ebp;\n        rdx--;\n        rbp = r15 + rdx;\n        if (r12d == 0x30) {\n            goto label_87;\n        }\n        r15 = rbp;\n        memset (r15, 0x20, rdx);\n    }\nlabel_45:\n    *(r15) = 9;\n    r15++;\n    goto label_21;\n    rax = *((rsp + 8));\n    edx = 0x92492493;\n    r10d = 1;\n    eax = *((rax + 0x18));\n    esi = rax + 6;\n    *((rsp + 0x30)) = eax;\n    eax = esi;\n    edx:eax = eax * edx;\n    eax = rdx + rsi;\n    edx = esi;\n    edx >>= 0x1f;\n    eax >>= 2;\n    eax -= edx;\n    edx = rax*8;\n    edx -= eax;\n    esi -= edx;\n    esi++;\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_88;\n    }\n    if (r9d == 0x4f) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    *((rsp + 0x30)) = 0;\n    r10d = 4;\n    esi = *((rax + 0x14));\n    r8b = (esi < 0xfffff894) ? 1 : 0;\n    esi += 0x76c;\n    edi = 0;\nlabel_74:\n    if (r8b == 0) {\n        goto label_22;\n    }\nlabel_75:\n    esi = -esi;\n    goto label_22;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    r10d = 2;\n    esi = *(rax);\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    edx = 0x92492493;\n    edi = *((rax + 0x1c));\n    edi -= *((rax + 0x18));\n    edi += 7;\n    eax = edi;\n    edx:eax = eax * edx;\n    do {\n        esi = rdx + rdi;\n        edi >>= 0x1f;\n        r10d = 2;\n        esi >>= 2;\n        esi -= edi;\n        goto label_14;\n        if (r9d == 0x45) {\n            goto label_88;\n        }\n        rax = *((rsp + 8));\n        edx = 0x51eb851f;\n        *((rsp + 0x30)) = 0;\n        r10d = 2;\n        edi = *((rax + 0x14));\n        eax = *((rax + 0x14));\n        edx:eax = eax * edx;\n        eax = edx;\n        edx = edi;\n        edx >>= 0x1f;\n        eax >>= 5;\n        eax -= edx;\n        edx = edi;\n        esi = rax + 0x13;\n        eax *= 0x64;\n        edx -= eax;\n        eax = edx;\n        eax >>= 0x1f;\n        dl = (esi > 0) ? 1 : 0;\n        eax &= edx;\n        r8b = (edi < 0xfffff894) ? 1 : 0;\n        esi -= eax;\n        edi = 0;\n        goto label_17;\n        if (r9d == 0x45) {\n            goto label_25;\n        }\n        r10 = *((rsp + 8));\n        esi = 0x92492493;\n        eax = *((r10 + 0x18));\n        edi = rax + 6;\n        *((rsp + 0x30)) = eax;\n        eax = edi;\n        edx:eax = eax * esi;\n        eax = rdx + rdi;\n        edx = edi;\n        edx >>= 0x1f;\n        eax >>= 2;\n        eax -= edx;\n        edx = rax*8;\n        edx -= eax;\n        eax = edx;\n        edx = *((r10 + 0x1c));\n        eax -= edi;\n        edi = rax + rdx + 7;\n        eax = edi;\n        edx:eax = eax * esi;\n    } while (1);\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    r10d = 1;\n    esi = *((rax + 0x18));\n    goto label_14;\n    if (r8b != 0) {\n        r11d = r8d;\n    }\n    if (r9d == 0) {\n        goto label_23;\n    }\nlabel_25:\n    rax = rbx - 1;\n    edx = rax + 2;\n    do {\n        ecx = edx;\n        r9 = rax;\n        ecx -= eax;\n        rax = rax - 1;\n    } while (*((rax + 1)) != 0x25);\n    rdx = *(rsp);\n    eax = 0;\n    rcx = (int64_t) ecx;\n    r8 = rbx;\n    rdx -= r14;\n    __asm (\"cmovns eax, ebp\");\n    rax = (int64_t) eax;\n    r13 = rax;\n    if (rcx >= rax) {\n        r13 = rcx;\n    }\nlabel_24:\n    if (rdx <= r13) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        if (rcx < rax) {\n            rdx = (int64_t) ebp;\n            *((rsp + 0x50)) = rcx;\n            rdx -= rcx;\n            *((rsp + 0x48)) = r8;\n            rbx = r15 + rdx;\n            *((rsp + 0x40)) = r9;\n            *((rsp + 0x30)) = r11b;\n            if (r12d == 0x30) {\n                goto label_89;\n            }\n            r15 = rbx;\n            memset (r15, 0x20, rdx);\n            rcx = *((rsp + 0x50));\n            r8 = *((rsp + 0x48));\n            r9 = *((rsp + 0x40));\n            r11d = *((rsp + 0x30));\n        }\nlabel_36:\n        *((rsp + 0x40)) = r8;\n        rdx = rcx;\n        rsi = r9;\n        rdi = r15;\n        *((rsp + 0x30)) = rcx;\n        if (r11b == 0) {\n            goto label_90;\n        }\n        fcn_0040e750 (rdi, rsi, rdx);\n        rcx = *((rsp + 0x30));\n        r8 = *((rsp + 0x40));\nlabel_33:\n        r15 += rcx;\n    }\n    r14 += r13;\n    goto label_7;\n    r13d = 0;\nlabel_27:\n    rax = *((rsp + 8));\n    esi = *((rax + 0x20));\n    if (esi < 0) {\n        goto label_91;\n    }\n    rsi = *((rax + 0x28));\n    r8d = 1;\n    if (esi >= 0) {\n        r8d = 0;\n        if (esi != 0) {\n            goto label_92;\n        }\n        rax = *((rsp + 0x20));\n        r8b = (*(rax) == 0x2d) ? 1 : 0;\n    }\nlabel_92:\n    eax = esi;\n    edx = 0x91a2b3c5;\n    edi = 0x88888889;\n    edx:eax = eax * edx;\n    eax = esi;\n    eax >>= 0x1f;\n    *((rsp + 0x40)) = eax;\n    edx += esi;\n    edx >>= 0xb;\n    edx -= eax;\n    eax = esi;\n    *((rsp + 0x30)) = edx;\n    edx:eax = eax * edi;\n    r10d = rdx + rsi;\n    r10d >>= 5;\n    r10d -= *((rsp + 0x40));\n    eax = r10d;\n    edx:eax = eax * edi;\n    eax = r10d;\n    eax >>= 0x1f;\n    edi = rdx + r10;\n    edi >>= 5;\n    edi -= eax;\n    eax = r10d;\n    edi *= 0x3c;\n    r10d *= 0x3c;\n    eax -= edi;\n    edi = eax;\n    esi -= r10d;\n    if (r13 == 1) {\n        goto label_43;\n    }\n    if (r13 == 0) {\n        goto label_93;\n    }\n    if (r13 == 2) {\n        goto label_94;\n    }\n    if (r13 == 3) {\n        goto label_95;\n    }\n    ecx = *(rbx);\n    r9 = rbx;\nlabel_26:\n    rdx = *(rsp);\n    eax = 0;\n    rdx -= r14;\n    __asm (\"cmovns eax, ebp\");\n    rax = (int64_t) eax;\n    if (cl != 0x25) {\n        goto label_96;\n    }\n    r13d = 1;\n    r8 = r9;\n    ecx = 1;\n    if (rax != 0) {\n        r13 = rax;\n    }\n    goto label_24;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    r10d = 2;\n    esi = *((rax + 0xc));\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    esi = *((rax + 0xc));\n    goto label_16;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    *((rsp + 0x30)) = 0;\n    r10d = 3;\n    esi = *((rax + 0x1c));\n    r8b = (esi < 0xffffffff) ? 1 : 0;\n    esi++;\n    edi = 0;\n    goto label_17;\n    rdx = *(rsp);\n    eax = 0;\n    r13d = 1;\n    rdx -= r14;\n    __asm (\"cmovns eax, ebp\");\n    rax = (int64_t) eax;\n    if (rax != 0) {\n        r13 = rax;\n    }\n    if (r9d != 0) {\n        goto label_97;\n    }\n    if (r13 >= rdx) {\n        goto label_8;\n    }\n    if (r15 == 0) {\n        goto label_21;\n    }\n    if (ebp > 1) {\n        rdx = (int64_t) ebp;\n        rdx--;\n        rbp = r15 + rdx;\n        if (r12d == 0x30) {\n            goto label_98;\n        }\n        r15 = rbp;\n        memset (r15, 0x20, rdx);\n        ecx = *(rbx);\n    }\nlabel_47:\n    *(r15) = cl;\n    r15++;\n    goto label_21;\n    r9 = rbx - 1;\n    ecx = *((rbx - 1));\n    goto label_26;\n    if (r9d == 0x45) {\n        goto label_88;\n    }\n    rax = *((rsp + 8));\n    edx = 0x51eb851f;\n    r10d = 2;\n    edi = *((rax + 0x14));\n    eax = *((rax + 0x14));\n    edx:eax = eax * edx;\n    eax = edi;\n    eax >>= 0x1f;\n    esi = edx;\n    esi >>= 5;\n    esi -= eax;\n    eax = edi;\n    esi *= 0x64;\n    eax -= esi;\n    esi = eax;\n    if (eax >= 0) {\n        goto label_14;\n    }\n    eax = -eax;\n    esi += 0x64;\n    if (edi <= 0xfffff893) {\n        esi = eax;\n    }\n    goto label_14;\n    eax = *((rbx + 1));\n    rdx = rbx + 1;\n    r13d = 1;\n    if (al == 0x3a) {\n        goto label_30;\n    }\nlabel_29:\n    if (al != 0x7a) {\n        goto label_25;\n    }\n    rbx = rdx;\n    goto label_27;\n    r13d = 0;\n    goto label_28;\n    *((rsp + 0x30)) = 0x41493f;\n    goto label_13;\nlabel_30:\n    r13++;\n    eax = *((rbx + r13));\n    rdx = rbx + r13;\n    if (al != 0x3a) {\n        goto label_29;\n    }\n    goto label_30;\nlabel_64:\n    memcpy (rdi, rsi, rdx);\n    r8 = *((rsp + 0x40));\n    rcx = *((rsp + 0x30));\n    goto label_31;\nlabel_66:\n    *((rsp + 0x30)) = 0x2d;\n    ecx = 0x2d;\n    if (r12d != 0x2d) {\n        goto label_32;\n    }\nlabel_37:\n    r9d = 0;\n    r12d = 1;\n    rax = *(rsp);\n    __asm (\"cmovns r9d, ebp\");\n    r9 = (int64_t) r9d;\n    if (r9 != 0) {\n        r12 = r9;\n    }\n    rax -= r14;\n    if (rax <= r12) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        if (r10d == 0) {\n            if (r9 <= 1) {\n                goto label_99;\n            }\n            r8 = (int64_t) ebp;\n            *((rsp + 0x58)) = cl;\n            r8--;\n            *((rsp + 0x50)) = r9;\n            rdx = r8;\n            *((rsp + 0x48)) = r10d;\n            *((rsp + 0x40)) = r11b;\n            *((rsp + 0x30)) = r8;\n            memset (r15, 0x20, rdx);\n            r8 = *((rsp + 0x30));\n            ecx = *((rsp + 0x58));\n            r9 = *((rsp + 0x50));\n            r10d = *((rsp + 0x48));\n            r11d = *((rsp + 0x40));\n            r15 += r8;\n        }\nlabel_99:\n        *(r15) = cl;\n        r15++;\n    }\n    rax = *(rsp);\n    r14 += r12;\n    r8 = rbx;\n    r12d = 0x2d;\n    rcx = rsp + 0x87;\n    rcx -= r13;\n    rax -= r14;\n    goto label_20;\nlabel_90:\n    memcpy (rdi, rsi, rdx);\n    r8 = *((rsp + 0x40));\n    rcx = *((rsp + 0x30));\n    goto label_33;\nlabel_63:\n    fcn_0040e700 (rdi, rsi, rdx);\n    rcx = *((rsp + 0x30));\n    r8 = *((rsp + 0x40));\n    goto label_31;\nlabel_62:\n    r15 = rbp;\n    rax = memset (r15, 0x30, rdx);\n    r11d = *((rsp + 0x30));\n    r8 = *((rsp + 0x40));\n    rcx = *((rsp + 0x48));\n    goto label_34;\nlabel_83:\n    r9d = 0;\n    r8d = 1;\n    __asm (\"cmovns r9d, ebp\");\n    r9 = (int64_t) r9d;\n    if (r9 != 0) {\n        r8 = r9;\n    }\n    if (r8 >= rax) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        if (r10d == 0) {\n            if (r9 <= 1) {\n                goto label_46;\n            }\n            rdx = (int64_t) ebp;\n            *((rsp + 0x68)) = rcx;\n            rdx--;\n            *((rsp + 0x60)) = r8;\n            rax = r15 + rdx;\n            *((rsp + 0x58)) = r9;\n            *((rsp + 0x40)) = rax;\n            *((rsp + 0x50)) = r10d;\n            *((rsp + 0x48)) = r11b;\n            if (r12d == 0x30) {\n                goto label_100;\n            }\n            memset (r15, 0x20, rdx);\n            r15 = *((rsp + 0x40));\n            rcx = *((rsp + 0x68));\n            r8 = *((rsp + 0x60));\n            r9 = *((rsp + 0x58));\n            r10d = *((rsp + 0x50));\n            r11d = *((rsp + 0x48));\n        }\nlabel_46:\n        eax = *((rsp + 0x30));\n        r15++;\n        *((r15 - 1)) = al;\n    }\n    rax = *(rsp);\n    r14 += r8;\n    r8 = rbx;\n    rax -= r14;\n    goto label_20;\nlabel_40:\n    *((rsp + 0x30)) = 0;\nlabel_84:\n    r12 = (int64_t) r9d;\n    if (r12 >= rax) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        *((rsp + 0x50)) = r9d;\n        *((rsp + 0x48)) = r10d;\n        r15 += r12;\n        *((rsp + 0x40)) = r11b;\n        memset (r15, 0x20, r12);\n        r9d = *((rsp + 0x50));\n        r10d = *((rsp + 0x48));\n        r11d = *((rsp + 0x40));\n    }\n    eax = ebp;\n    r14 += r12;\n    eax -= r9d;\n    if (r9d < ebp) {\n    }\n    rax = *(rsp);\n    rax -= r14;\n    if (*((rsp + 0x30)) == 0) {\n        rcx = rsp + 0x87;\n        r9 = (int64_t) ebp;\n        r8 = rbx;\n        r12d = 0x5f;\n        rcx -= r13;\n        goto label_20;\nlabel_68:\n        r15 = rbp;\n        memset (r15, 0x30, rdx);\n        r11d = *((rsp + 0x30));\n        r8 = *((rsp + 0x40));\n        rcx = *((rsp + 0x48));\n        goto label_35;\nlabel_88:\n        r10d = 0;\n        goto label_18;\nlabel_89:\n        r15 = rbx;\n        rax = memset (r15, 0x30, rdx);\n        r11d = *((rsp + 0x30));\n        r9 = *((rsp + 0x40));\n        r8 = *((rsp + 0x48));\n        rcx = *((rsp + 0x50));\n        goto label_36;\nlabel_82:\n        ecx = 0x2b;\n        goto label_37;\nlabel_91:\n        r8 = rbx;\n        goto label_7;\n    }\n    r9 = (int64_t) ebp;\n    ecx = 1;\n    if (r9 != 0) {\n        rcx = r9;\n    }\n    if (rcx >= rax) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        if (r10d == 0) {\n            if (r9 <= 1) {\n                goto label_101;\n            }\n            r12 = r9 - 1;\n            *((rsp + 0x58)) = rcx;\n            *((rsp + 0x50)) = r10d;\n            r15 += r12;\n            *((rsp + 0x48)) = r11b;\n            *((rsp + 0x40)) = r9;\n            memset (r15, 0x20, r12);\n            rcx = *((rsp + 0x58));\n            r10d = *((rsp + 0x50));\n            r11d = *((rsp + 0x48));\n            r9 = *((rsp + 0x40));\n        }\nlabel_101:\n        eax = *((rsp + 0x30));\n        r15++;\n        *((r15 - 1)) = al;\n    }\n    rax = *(rsp);\n    r14 += rcx;\n    r8 = rbx;\n    r12d = 0x5f;\n    rcx = rsp + 0x87;\n    rcx -= r13;\n    rax -= r14;\n    goto label_20;\nlabel_69:\n    r15 = rbp;\n    memset (r15, 0x30, rdx);\n    r11 = *((rsp + 0x48));\n    r10 = *((rsp + 0x50));\n    goto label_38;\nlabel_70:\n    esi = rdi - 1;\n    edx = 0x16d;\n    if ((sil & 3) == 0) {\n        eax = esi;\n        edx = 0x51eb851f;\n        edx:eax = eax * edx;\n        eax = edx;\n        edx = esi;\n        edx >>= 0x1f;\n        eax >>= 5;\n        eax -= edx;\n        edx = 0x16e;\n        eax *= 0x64;\n        if (esi != eax) {\n            goto label_102;\n        }\n        eax = esi;\n        edi = 0x190;\n        edx:eax = (int64_t) eax;\n        eax = edx:eax / edi;\n        edx = edx:eax % edi;\n        edx -= edx;\n        edx = ~edx;\n        edx += 0x16e;\n    }\nlabel_102:\n    r10d += edx;\n    edx = 0x92492493;\n    esi = r10d;\n    esi -= r13d;\n    r13d = 0xffffffff;\n    esi += 0x17e;\n    eax = esi;\n    r10d -= esi;\n    edx:eax = eax * edx;\n    eax = rdx + rsi;\n    edx = esi;\n    edx >>= 0x1f;\n    eax >>= 2;\n    eax -= edx;\n    edx = rax*8;\n    edx -= eax;\n    r8d = r10 + rdx + 3;\n    goto label_39;\nlabel_79:\n    if (ebp > 8) {\n        goto label_103;\n    }\n    esi = *((rsp + 0x4d8));\n    edi = ebp;\n    r8d = 0x66666667;\n    do {\n        eax = esi;\n        esi >>= 0x1f;\n        edi++;\n        edx:eax = eax * r8d;\n        edx >>= 2;\n        edx -= esi;\n        esi = edx;\n    } while (edi != 9);\nlabel_50:\n    r10d = ebp;\n    goto label_14;\nlabel_73:\n    eax = r8d;\n    edx = 0x92492493;\n    r10d = 2;\n    edx:eax = eax * edx;\n    esi = rdx + r8;\n    r8d >>= 0x1f;\n    esi >>= 2;\n    esi -= r8d;\n    esi++;\n    goto label_14;\nlabel_72:\n    esi = *((rsp + 0x30));\n    eax = 0xfffff894;\n    *((rsp + 0x30)) = 0;\n    r10d = 4;\n    eax -= r13d;\n    esi = rsi + r13 + 0x76c;\n    r8b = (esi < eax) ? 1 : 0;\n    edi = 0;\n    goto label_17;\nlabel_67:\n    if (r12d == 0x5f) {\n        goto label_40;\n    }\n    rdx = (int64_t) r10d;\n    if (rdx >= rax) {\n        goto label_8;\n    }\n    r9 = (int64_t) r9d;\n    r8 = rbx;\n    goto label_41;\n    do {\nlabel_94:\n        eax = *((rsp + 0x30)) * 0x2710;\n        r10d = 9;\n        *((rsp + 0x30)) = 1;\n        edi *= 0x64;\n        eax += edi;\n        edi = 0x14;\n        esi += eax;\n        goto label_17;\nlabel_43:\n        esi = *((rsp + 0x30)) * 0x64;\n        r10d = 6;\n        *((rsp + 0x30)) = 1;\n        esi += edi;\n        edi = 4;\n        goto label_17;\nlabel_78:\n        memcpy (rdi, rsi, rdx);\n        goto label_42;\nlabel_77:\n        fcn_0040e700 (rdi, rsi, rdx);\n        goto label_42;\nlabel_93:\n        esi = *((rsp + 0x30)) * 0x64;\n        edi = 0;\n        *((rsp + 0x30)) = 1;\n        r10d = 5;\n        esi += eax;\n        goto label_17;\nlabel_95:\n    } while (esi != 0);\n    if (eax != 0) {\n        goto label_43;\n    }\n    esi = *((rsp + 0x30));\n    r10d = 3;\n    *((rsp + 0x30)) = 1;\n    goto label_17;\nlabel_97:\n    r8 = rbx;\n    r9 = rbx;\n    ecx = 1;\n    goto label_24;\nlabel_80:\n    r15 = rbp;\n    memset (r15, 0x30, rdx);\n    goto label_44;\nlabel_87:\n    r15 = rbp;\n    memset (r15, 0x30, rdx);\n    goto label_45;\nlabel_100:\n    memset (r15, 0x30, rdx);\n    r15 = *((rsp + 0x40));\n    r11d = *((rsp + 0x48));\n    r10d = *((rsp + 0x50));\n    r9 = *((rsp + 0x58));\n    r8 = *((rsp + 0x60));\n    rcx = *((rsp + 0x68));\n    goto label_46;\nlabel_98:\n    r15 = rbp;\n    memset (r15, 0x30, rdx);\n    ecx = *(rbx);\n    goto label_47;\nlabel_76:\n    r15 = rbp;\n    memset (r15, 0x30, rdx);\n    r11d = *((rsp + 0x40));\n    r8d = *((rsp + 0x48));\n    goto label_48;\nlabel_85:\n    r15 = rbp;\n    memset (r15, 0x30, rdx);\n    r11d = *((rsp + 0x40));\n    r10d = *((rsp + 0x48));\n    rcx = *((rsp + 0x50));\n    r9 = *((rsp + 0x58));\n    goto label_49;\nlabel_103:\n    esi = *((rsp + 0x4d8));\n    goto label_50;\nlabel_65:\n    r10d = 0;\n    goto label_51;\nlabel_96:\n    rbx = r9;\n    goto label_25;\n}\n"
        },
        {
            "funcName": "fcn_0040ff70",
            "funcStartAddr": "0x40ff70",
            "funcEndAddr": "0x40ff8f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40ff70 */\n#include <stdint.h>\n \nvoid fcn_0040ff70 (int64_t arg5, int64_t arg6) {\n    int64_t var_fh;\n    r8 = arg5;\n    r9 = arg6;\n    *((rsp + 0xf)) = 0;\n    fcn_0040e7a0 (rdi, rsi, rdx, rcx, 0, rsp + 0x1f);\n}\n"
        },
        {
            "funcName": "fcn_0040ff90",
            "funcStartAddr": "0x40ff90",
            "funcEndAddr": "0x40ff94",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40ff90 */\n#include <stdint.h>\n \nvoid fcn_0040ff90 (int64_t arg1) {\n    rdi = arg1;\n    *(rdi) |= 0x20;\n}\n"
        },
        {
            "funcName": "fcn_0040ffa0",
            "funcStartAddr": "0x40ffa0",
            "funcEndAddr": "0x41fc9b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x40ffa0 */\n#include <stdint.h>\n \nuint64_t fcn_0040ffa0 (uint32_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_6ech;\n    char ** var_6e8h;\n    char ** var_6e0h;\n    int64_t var_6d8h;\n    int64_t var_6d0h;\n    char ** var_6c8h;\n    void * var_6c0h;\n    uint32_t var_6b8h;\n    char ** var_6b0h;\n    void * var_6a8h;\n    char ** var_6a0h;\n    uint32_t var_690h;\n    uint32_t var_688h;\n    int64_t var_67ch;\n    int64_t var_678h;\n    int64_t var_674h;\n    int64_t var_670h;\n    int64_t var_668h;\n    uint32_t var_580h;\n    int64_t var_578h;\n    int64_t var_570h;\n    int64_t var_568h;\n    int64_t var_2f0h;\n    int64_t var_28h;\n    int64_t var_fh;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\nlabel_1:\n    abort ();\n    r15 = rdx;\n    rbx = rcx;\n    *((rbp - 0x688)) = rdi;\n    *((rbp - 0x6d0)) = rsi;\n    eax = fcn_00411ce0 (r15, rbp - 0x580, rbp - 0x670);\n    if (eax < 0) {\n        goto label_58;\n    }\n    eax = fcn_00411ac0 (rbx, rbp - 0x670);\n    if (eax < 0) {\n        goto label_59;\n    }\n    rax = *((rbp - 0x570));\n    rdx = 0xffffffffffffffff;\n    rax += 7;\n    if (rax <= 6) {\n        rax = rdx;\n    }\n    rax += *((rbp - 0x568));\n    if (rax < 0) {\n        goto label_60;\n    }\n    rdi = rax;\n    rdi += 6;\n    if (rdi < 0) {\n        goto label_60;\n    }\n    if (rdi <= 0xf9f) {\n        goto label_61;\n    }\n    if (rdi == -1) {\n        goto label_60;\n    }\n    rax = malloc (rdi);\n    *((rbp - 0x6a8)) = rax;\n    if (rax == 0) {\n        goto label_60;\n    }\n    *((rbp - 0x6d8)) = rax;\n    do {\n        r12d = 0;\n        if (*((rbp - 0x688)) != 0) {\n            rax = *((rbp - 0x6d0));\n            r12 = *(rax);\n        }\n        r14 = *((rbp - 0x578));\n        r13d = 0;\n        r8 = r15;\n        rbx = *((rbp - 0x688));\n        *((rbp - 0x6b8)) = 0;\n        r15 = r13;\n        rcx = *(r14);\n        if (rcx == r8) {\n            goto label_62;\n        }\nlabel_2:\n        rcx -= r8;\n        rax = r15;\n        rax += rcx;\n        r13 = rax;\n        if (rax < 0) {\n            goto label_63;\n        }\n        if (r12 >= rax) {\n            goto label_6;\n        }\n        if (r12 != 0) {\n            goto label_64;\n        }\n        if (rax > 0xc) {\n            goto label_65;\n        }\n        r12d = 0xc;\n        dl = (rbx == *((rbp - 0x688))) ? 1 : 0;\n        if (rbx != 0) {\n            goto label_66;\n        }\nlabel_0:\n        *((rbp - 0x6b0)) = r8;\n        *((rbp - 0x6a0)) = dl;\n        *((rbp - 0x690)) = rcx;\n        rax = malloc (r12);\n        rcx = *((rbp - 0x690));\n        edx = *((rbp - 0x6a0));\n        r9 = rax;\n        r8 = *((rbp - 0x6b0));\n        if (rax == 0) {\n            goto label_5;\n        }\n        if (r15 == 0) {\n            goto label_67;\n        }\n        if (dl == 0) {\n            goto label_67;\n        }\n        *((rbp - 0x6a0)) = r8;\n        *((rbp - 0x690)) = rcx;\n        rax = memcpy (rax, rbx, r15);\n        rcx = *((rbp - 0x690));\n        r8 = *((rbp - 0x6a0));\n        rbx = rax;\n        goto label_6;\nlabel_61:\n        *((rbp - 0x6d8)) = 0;\n        rax += 0x1d;\n        rax &= 0xfffffffffffffff0;\n        rax = rsp + 0xf;\n        rax &= 0xfffffffffffffff0;\n        *((rbp - 0x6a8)) = rax;\n    } while (1);\n    if (rax < 0) {\nlabel_64:\n        goto label_5;\n    }\n    r12 += r12;\n    if (r12 < rax) {\nlabel_65:\n        if (rax == -1) {\n            goto label_5;\n        }\n        r12 = rax;\n    }\n    dl = (rbx == *((rbp - 0x688))) ? 1 : 0;\n    if (rbx == 0) {\n        goto label_0;\n    }\nlabel_66:\n    if (dl != 0) {\n        goto label_0;\n    }\n    *((rbp - 0x6a0)) = r8;\n    *((rbp - 0x690)) = rcx;\n    rax = realloc (rbx, r12);\n    if (rax == 0) {\n        goto label_37;\n    }\n    rcx = *((rbp - 0x690));\n    r8 = *((rbp - 0x6a0));\n    rbx = rax;\nlabel_6:\n    memcpy (rbx + r15, r8, rcx);\nlabel_3:\n    rax = *((rbp - 0x6b8));\n    if (*((rbp - 0x580)) == rax) {\n        goto label_68;\n    }\n    r15d = *((r14 + 0x48));\n    rax = *((r14 + 0x50));\n    if (r15b == 0x25) {\n        goto label_69;\n    }\n    if (rax == -1) {\n        goto label_34;\n    }\n    r8 = *((rbp - 0x668));\n    rax <<= 5;\n    rdx = r8 + rax;\n    eax = *(rdx);\n    *((rbp - 0x690)) = eax;\n    if (r15b == 0x6e) {\n        goto label_70;\n    }\n    eax = r15d;\n    eax &= 0xffffffdf;\n    ecx = rax - 0x45;\n    if (cl > 2) {\n        if (al != 0x41) {\n            goto label_71;\n        }\n    }\n    if (*((rbp - 0x690)) == 0xc) {\n        goto label_72;\n    }\n    goto label_71;\nlabel_8:\n    fp_stack++;\n    goto label_71;\nlabel_9:\n    fp_stack++;\nlabel_71:\n    rsi = *((rbp - 0x6a8));\n    eax = *((r14 + 0x10));\n    r15 = rsi + 1;\n    *(rsi) = 0x25;\n    if ((al & 1) != 0) {\n        rdi = *((rbp - 0x6a8));\n        *((rdi + 1)) = 0x27;\n        r15 = rdi + 2;\n    }\n    if ((al & 2) != 0) {\n        *(r15) = 0x2d;\n        r15++;\n    }\n    if ((al & 4) != 0) {\n        *(r15) = 0x2b;\n        r15++;\n    }\n    if ((al & 8) != 0) {\n        *(r15) = 0x20;\n        r15++;\n    }\n    if ((al & 0x10) != 0) {\n        *(r15) = 0x23;\n        r15++;\n    }\n    if ((al & 0x40) != 0) {\n        *(r15) = 0x49;\n        r15++;\n    }\n    if ((al & 0x20) != 0) {\n        *(r15) = 0x30;\n        r15++;\n    }\n    rsi = *((r14 + 0x18));\n    rdx = *((r14 + 0x20));\n    if (rsi != rdx) {\n        rcx = rdx;\n        *((rbp - 0x6b0)) = r8;\n        rcx -= rsi;\n        rdx = rcx;\n        *((rbp - 0x6a0)) = rcx;\n        memcpy (r15, rsi, rdx);\n        rcx = *((rbp - 0x6a0));\n        r8 = *((rbp - 0x6b0));\n        r15 += rcx;\n    }\n    rsi = *((r14 + 0x30));\n    rdx = *((r14 + 0x38));\n    if (rsi != rdx) {\n        rcx = rdx;\n        *((rbp - 0x6b0)) = r8;\n        rcx -= rsi;\n        rdx = rcx;\n        *((rbp - 0x6a0)) = rcx;\n        memcpy (r15, rsi, rdx);\n        rcx = *((rbp - 0x6a0));\n        r8 = *((rbp - 0x6b0));\n        r15 += rcx;\n    }\n    esi = *((rbp - 0x690));\n    if (esi <= 0x10) {\n        eax = 1;\n        ecx = esi;\n        rax <<= cl;\n        if ((eax & 0x14180) != 0) {\n            goto label_73;\n        }\n        if ((ah & 0x10) != 0) {\n            goto label_74;\n        }\n        if ((ah & 6) != 0) {\n            goto label_75;\n        }\n    }\nlabel_12:\n    eax = *((r14 + 0x48));\n    *((r15 + 1)) = 0;\n    *(r15) = al;\n    rax = *((r14 + 0x28));\n    if (rax == -1) {\n        goto label_76;\n    }\n    rax <<= 5;\n    rax += r8;\n    if (*(rax) != 5) {\n        goto label_34;\n    }\n    *((rbp - 0x6b0)) = 1;\n    eax = *((rax + 0x10));\n    *((rbp - 0x678)) = eax;\nlabel_28:\n    rax = *((r14 + 0x40));\n    if (rax != -1) {\n        rax <<= 5;\n        r8 += rax;\n        if (*(r8) != 5) {\n            goto label_34;\n        }\n        eax = *((rbp - 0x6b0));\n        edx = *((r8 + 0x10));\n        *((rbp + rax*4 - 0x678)) = edx;\n        eax = rax + 1;\n        *((rbp - 0x6b0)) = eax;\n    }\n    rax = r13;\n    rax += 2;\n    if (rax < 0) {\n        goto label_77;\n    }\n    if (r12 >= rax) {\n        goto label_78;\n    }\n    if (r12 != 0) {\n        goto label_79;\n    }\n    if (rax > 0xc) {\n        goto label_80;\n    }\n    r12d = 0xc;\nlabel_20:\n    dl = (rbx == *((rbp - 0x688))) ? 1 : 0;\n    if (rbx == 0) {\n        goto label_81;\n    }\n    if (dl != 0) {\n        goto label_81;\n    }\n    rax = realloc (rbx, r12);\n    r11 = rax;\n    if (rax == 0) {\n        goto label_5;\n    }\nlabel_30:\n    *((r11 + r13)) = 0;\n    *((rbp - 0x6c0)) = r11;\n    rax = errno_location ();\n    r11 = *((rbp - 0x6c0));\n    *((rbp - 0x6c0)) = r15;\n    *((rbp - 0x6a0)) = rax;\n    eax = *(rax);\n    *((rbp - 0x6e0)) = eax;\nlabel_14:\n    rax = *((rbp - 0x6a0));\n    r15 = r12;\n    ebx = 0x7fffffff;\n    *((rbp - 0x67c)) = 0xffffffff;\n    r15 -= r13;\n    *(rax) = 0;\n    eax = *((rbp - 0x690));\n    if (r15 <= 0x7fffffff) {\n        rbx = r15;\n    }\n    if (eax > 0x11) {\n        goto label_1;\n    }\n    /* switch table (18 cases) at 0x417e60 */\nlabel_43:\n    if (rdi != rdx) {\n        goto label_82;\n    }\nlabel_42:\n    r10 = rcx;\nlabel_10:\n    rdx = *((r14 + 0x30));\n    rcx = *((r14 + 0x38));\n    if (rdx == rcx) {\n        goto label_83;\n    }\n    rsi = *((r14 + 0x40));\n    if (rsi == -1) {\n        goto label_84;\n    }\n    rsi <<= 5;\n    r8 += rsi;\n    if (*(r8) != 5) {\n        goto label_85;\n    }\n    rdx = *((r8 + 0x10));\n    if (edx < 0) {\n        goto label_83;\n    }\nlabel_44:\n    if (rdx == 0) {\n        goto label_86;\n    }\n    rax = rdx;\n    rax += 0xc;\n    rcx = rax;\n    if (rax >= 0) {\n        goto label_51;\n    }\n    fp_stack++;\n    goto label_5;\nlabel_21:\n    fp_stack++;\n    goto label_5;\nlabel_22:\n    fp_stack++;\n    goto label_5;\nlabel_46:\n    fp_stack++;\n    goto label_5;\nlabel_47:\n    fp_stack++;\nlabel_5:\n    rax = errno_location ();\n    r15 = rbx;\n    *((rbp - 0x6a0)) = rax;\nlabel_23:\n    if (r15 != *((rbp - 0x688))) {\n        if (r15 != 0) {\n            goto label_87;\n        }\n    }\nlabel_13:\n    rax = *((rbp - 0x6d8));\n    if (rax == 0) {\n        goto label_60;\n    }\n    free (rax);\nlabel_4:\n    rax = rbp - 0x580;\n    rdi = *((rbp - 0x578));\n    rax += 0x20;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = rbp - 0x670;\n    rdi = *((rbp - 0x668));\n    rax += 0x10;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = *((rbp - 0x6a0));\n    ebx = 0;\n    *(rax) = 0xc;\nlabel_7:\n    rsp = rbp - 0x28;\n    rax = rbx;\n    return rax;\nlabel_69:\n    if (rax != -1) {\n        goto label_34;\n    }\n    rax = r13;\n    rax++;\n    r15 = rax;\n    if (rax < 0) {\n        goto label_88;\n    }\n    if (r12 < rax) {\n        if (r12 != 0) {\n            goto label_89;\n        }\n        if (rax > 0xc) {\n            goto label_90;\n        }\n        r12d = 0xc;\nlabel_31:\n        dl = (rbx == *((rbp - 0x688))) ? 1 : 0;\n        if (rbx == 0) {\n            goto label_91;\n        }\n        if (dl != 0) {\n            goto label_91;\n        }\n        rax = realloc (rbx, r12);\n        if (rax == 0) {\n            goto label_37;\n        }\n        rbx = rax;\n    }\nlabel_29:\n    *((rbx + r13)) = 0x25;\nlabel_11:\n    r8 = *((r14 + 8));\n    r14 += 0x58;\n    rcx = *(r14);\n    *((rbp - 0x6b8))++;\n    if (rcx != r8) {\n        goto label_2;\n    }\nlabel_62:\n    r13 = r15;\n    goto label_3;\nlabel_60:\n    rax = errno_location ();\n    *((rbp - 0x6a0)) = rax;\n    goto label_4;\nlabel_63:\n    if (r12 != -1) {\n        goto label_5;\n    }\n    r13 = 0xffffffffffffffff;\n    goto label_6;\nlabel_70:\n    eax -= 0x12;\n    if (eax > 4) {\n        goto label_1;\n    }\n    /* switch table (5 cases) at 0x417ef0 */\nlabel_58:\n    ebx = 0;\n    goto label_7;\nlabel_72:\n    *(fp_stack--) = fp_stack[?];\n    if (fp_stack[0] == fp_stack[0]) {\n        goto label_92;\n    }\n    *(fp_stack--) = fp_stack[0];\n    fp_stack[0] += fp_stack[1];\n    fp_tmp_0 = fp_stack[1];\n    fp_stack[1] = fp_stack[0];\n    fp_stack[0] = fp_tmp_0;\n    fp_stack[1] = fp_stack[0];\n    fp_stack--;\n    if (fp_stack[0] == fp_stack[1]) {\n        goto label_8;\n    }\n    if (fp_stack[0] != fp_stack[1]) {\n        goto label_9;\n    }\nlabel_92:\n    rdx = *((r14 + 0x18));\n    rdi = *((r14 + 0x20));\n    r11d = *((r14 + 0x10));\n    if (rdx == rdi) {\n        goto label_93;\n    }\n    rcx = *((r14 + 0x28));\n    if (rcx == -1) {\n        goto label_94;\n    }\n    rcx <<= 5;\n    rcx += r8;\n    if (*(rcx) != 5) {\n        goto label_95;\n    }\n    r10 = *((rcx + 0x10));\n    if (r10d >= 0) {\n        goto label_10;\n    }\n    r11d |= 2;\n    r10 = -r10;\n    goto label_10;\n    rax = *((rdx + 0x10));\n    r15 = r13;\n    *(rax) = r13;\n    goto label_11;\nlabel_75:\n    *(r15) = 0x6c;\n    r15++;\nlabel_73:\n    *(r15) = 0x6c;\n    r15++;\n    goto label_12;\nlabel_37:\n    rax = errno_location ();\n    r15 = rbx;\n    *((rbp - 0x6a0)) = rax;\nlabel_87:\n    free (r15);\n    goto label_13;\n    rax = *((r14 + 0x50));\n    rdi = r11 + r13;\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    r9 = *((rax + 0x10));\n    eax = *((rbp - 0x6b0));\n    *((rbp - 0x6c8)) = r11;\n    if (eax == 1) {\n        goto label_96;\n    }\n    if (eax == 2) {\n        goto label_97;\n    }\n    rax = rbp - 0x67c;\nlabel_17:\n    r8 = *((rbp - 0x6a8));\n    rsi = rbx;\n    edx = 1;\n    eax = 0;\n    rcx = 0xffffffffffffffff;\n    eax = snprintf_chk ();\n    r11 = *((rbp - 0x6c8));\nlabel_19:\n    edx = *((rbp - 0x67c));\n    if (edx < 0) {\n        goto label_98;\n    }\nlabel_15:\n    rcx = (int64_t) edx;\n    if (rcx < rbx) {\n        rcx += r11;\n        if (*((rcx + r13)) != 0) {\n            goto label_34;\n        }\n    }\n    if (edx < eax) {\nlabel_16:\n        *((rbp - 0x67c)) = eax;\n        edx = eax;\n    }\n    eax = rdx + 1;\n    if (rax < rbx) {\n        goto label_99;\n    }\n    if (r15 > 0x7ffffffe) {\n        goto label_100;\n    }\n    eax = rdx + 2;\n    ecx = 0;\n    rax += r13;\n    cl = (rax < 0) ? 1 : 0;\n    if (r12 < 0) {\n        goto label_101;\n    }\n    rdx = r12 + r12;\n    if (rcx != 0) {\n        goto label_24;\n    }\n    if (rdx >= rax) {\n        rax = rdx;\n    }\n    if (r12 >= rax) {\n        goto label_14;\n    }\n    r12 += r12;\n    if (r12 < rax) {\n        goto label_102;\n    }\nlabel_25:\n    bl = (r11 == *((rbp - 0x688))) ? 1 : 0;\n    if (r11 == 0) {\n        goto label_103;\n    }\n    if (bl != 0) {\n        goto label_103;\n    }\n    rdi = r11;\n    *((rbp - 0x6c8)) = r11;\n    rax = realloc (rdi, r12);\n    r11 = *((rbp - 0x6c8));\n    if (rax == 0) {\n        goto label_24;\n    }\n    r11 = rax;\n    goto label_14;\n    rax = *((r14 + 0x50));\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    r9d = *((rax + 0x10));\nlabel_18:\n    eax = *((rbp - 0x6b0));\n    rdi = r11 + r13;\n    *((rbp - 0x6c8)) = r11;\n    if (eax == 1) {\n        goto label_104;\n    }\n    if (eax == 2) {\n        goto label_105;\n    }\n    rax = rbp - 0x67c;\nlabel_26:\n    r8 = *((rbp - 0x6a8));\n    rcx = 0xffffffffffffffff;\n    rsi = rbx;\n    eax = 0;\n    edx = 1;\n    eax = snprintf_chk ();\n    edx = *((rbp - 0x67c));\n    r11 = *((rbp - 0x6c8));\n    if (edx >= 0) {\n        goto label_15;\n    }\nlabel_98:\n    rsi = *((rbp - 0x6c0));\n    if (*((rsi + 1)) != 0) {\n        goto label_106;\n    }\n    if (eax >= 0) {\n        goto label_16;\n    }\n    rax = *((rbp - 0x6a0));\n    r15 = r11;\n    ebx = *(rax);\n    if (ebx == 0) {\n        eax = *((r14 + 0x48));\n        ebx = 0x54;\n        eax &= 0xffffffef;\n        eax = 0x16;\n        if (al == 0x63) {\n            ebx = eax;\n            goto label_107;\n        }\n    }\nlabel_107:\n    if (r15 != *((rbp - 0x688))) {\n        if (r15 == 0) {\n            goto label_108;\n        }\n        free (r15);\n    }\nlabel_108:\n    rax = *((rbp - 0x6d8));\n    if (rax != 0) {\n        free (rax);\n    }\n    rax = rbp - 0x580;\n    rdi = *((rbp - 0x578));\n    rax += 0x20;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = rbp - 0x670;\n    rdi = *((rbp - 0x668));\n    rax += 0x10;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = *((rbp - 0x6a0));\n    *(rax) = ebx;\n    ebx = 0;\n    goto label_7;\n    rax = *((r14 + 0x50));\n    rdi = r11 + r13;\n    *((rbp - 0x6c8)) = r11;\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    *(fp_stack--) = fp_stack[?];\n    eax = *((rbp - 0x6b0));\n    if (eax == 1) {\n        goto label_109;\n    }\n    if (eax == 2) {\n        goto label_110;\n    }\n    r9 = rbp - 0x67c;\n    ? = fp_stack[0];\n    fp_stack--;\n    goto label_17;\n    rax = *((r14 + 0x50));\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    r9d = *((rax + 0x10));\n    goto label_18;\n    rax = *((r14 + 0x50));\n    rdi = r11 + r13;\n    *((rbp - 0x6c8)) = r11;\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    xmm0 = *((rax + 0x10));\n    eax = *((rbp - 0x6b0));\n    if (eax == 1) {\n        goto label_111;\n    }\n    if (eax == 2) {\n        goto label_112;\n    }\n    r8 = *((rbp - 0x6a8));\n    r9 = rbp - 0x67c;\n    edx = 1;\n    rsi = rbx;\n    rcx = 0xffffffffffffffff;\n    eax = 1;\n    snprintf_chk ();\n    r11 = *((rbp - 0x6c8));\n    goto label_19;\n    rax = *((r14 + 0x50));\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    r9d = *((rax + 0x10));\n    goto label_18;\n    rax = *((r14 + 0x50));\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    r9d = *((rax + 0x10));\n    goto label_18;\n    rax = *((r14 + 0x50));\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    r9d = *((rax + 0x10));\n    goto label_18;\n    if (rax < 0) {\nlabel_79:\n        goto label_5;\n    }\n    r12 += r12;\n    if (r12 >= rax) {\n        goto label_20;\n    }\nlabel_80:\n    if (rax == -1) {\n        goto label_5;\n    }\n    r12 = rax;\n    goto label_20;\n    rax = *((rdx + 0x10));\n    r15 = r13;\n    *(rax) = r13d;\n    goto label_11;\n    rax = *((rdx + 0x10));\n    r15 = r13;\n    *(rax) = r13w;\n    goto label_11;\n    rax = *((rdx + 0x10));\n    r15 = r13;\n    *(rax) = r13b;\n    goto label_11;\nlabel_83:\n    edx = 0x12;\n    ecx = 0xc;\n    eax = 6;\n    if (al != 0x41) {\n        rcx = rdx;\n    }\n    edx = 0;\n    if (al != 0x41) {\n        rdx = rax;\n    }\nlabel_51:\n    rax = rcx;\n    if (r10 >= rcx) {\n        rax = r10;\n    }\n    rax++;\n    *((rbp - 0x690)) = rax;\n    if (rax < 0) {\n        goto label_21;\n    }\n    if (rax <= 0x2bc) {\n        goto label_113;\n    }\n    *((rbp - 0x6c8)) = r10;\n    *((rbp - 0x6c0)) = rdx;\n    *((rbp - 0x6b0)) = r11d;\n    ? = fp_stack[0];\n    fp_stack--;\n    if (rax == -1) {\n        goto label_5;\n    }\n    rax = malloc (rax);\n    r11d = *((rbp - 0x6b0));\n    *(fp_stack--) = fp_stack[?];\n    rcx = rax;\n    rdx = *((rbp - 0x6c0));\n    r10 = *((rbp - 0x6c8));\n    if (rax == 0) {\n        goto label_22;\n    }\nlabel_33:\n    if (fp_stack[0] == fp_stack[0]) {\n        goto label_114;\n    }\n    r8d = *((rbp - 0x678));\n    eax = r8d;\n    ah |= 3;\n    *((rbp - 0x678)) = ax;\n    __asm (\"fxam\");\n    ax = fp_status;\n    if ((ah & 2) == 0) {\n        goto label_115;\n    }\n    *(rcx) = 0x2d;\n    fp_stack[0] = -fp_stack[0];\n    r15 = rcx + 1;\nlabel_35:\n    *(fp_stack--) = 0.0;\n    fp_tmp_1 = fp_stack[1];\n    fp_stack[1] = fp_stack[0];\n    fp_stack[0] = fp_tmp_1;\n    if (fp_stack[0] <= fp_stack[1]) {\n        goto label_116;\n    }\n    fp_stack[1] = fp_stack[0];\n    fp_stack--;\n    *(fp_stack--) = fp_stack[0];\n    fp_stack[0] += fp_stack[1];\n    __asm (\"fucompi st(1)\");\n    fp_stack++;\n    if (fp_stack[0] != fp_stack[1]) {\n        goto label_117;\n    }\n    goto label_34;\nlabel_85:\n    fp_stack++;\n    goto label_34;\nlabel_95:\n    fp_stack++;\nlabel_34:\n    abort ();\nlabel_101:\n    if (r12 == -1) {\n        goto label_14;\n    }\n    do {\nlabel_24:\n        r15 = r11;\n        goto label_23;\nlabel_103:\n        *((rbp - 0x6c8)) = r11;\n        rax = malloc (r12);\n        r11 = *((rbp - 0x6c8));\n        rcx = rax;\n    } while (rax == 0);\n    if (r13 == 0) {\n        goto label_118;\n    }\n    if (bl == 0) {\n        goto label_118;\n    }\n    rax = memcpy (rax, r11, r13);\n    r11 = rax;\n    goto label_14;\nlabel_102:\n    if (rax == -1) {\n        goto label_24;\n    }\n    r12 = rax;\n    goto label_25;\nlabel_105:\n    rax = rbp - 0x67c;\n    do {\n        eax = *((rbp - 0x674));\nlabel_32:\n        r9d = *((rbp - 0x678));\n        edx = 1;\n        rsi = rbx;\n        eax = 0;\n        r8 = *((rbp - 0x6a8));\n        rcx = 0xffffffffffffffff;\n        snprintf_chk ();\n        r11 = *((rbp - 0x6c8));\n        goto label_19;\nlabel_104:\n        rax = rbp - 0x67c;\nlabel_27:\n        r9d = *((rbp - 0x678));\n        goto label_26;\nlabel_97:\n        rax = rbp - 0x67c;\n    } while (1);\nlabel_96:\n    rax = rbp - 0x67c;\n    goto label_27;\nlabel_106:\n    *((rsi + 1)) = 0;\n    goto label_14;\nlabel_118:\n    r11 = rcx;\n    goto label_14;\nlabel_76:\n    *((rbp - 0x6b0)) = 0;\n    goto label_28;\nlabel_88:\n    if (r12 != -1) {\n        goto label_5;\n    }\n    r15 = 0xffffffffffffffff;\n    goto label_29;\nlabel_81:\n    *((rbp - 0x6a0)) = dl;\n    rax = malloc (r12);\n    edx = *((rbp - 0x6a0));\n    r11 = rax;\n    if (rax == 0) {\n        goto label_5;\n    }\n    if (r13 == 0) {\n        goto label_30;\n    }\n    if (dl == 0) {\n        goto label_30;\n    }\n    rax = memcpy (rax, rbx, r13);\n    r11 = rax;\n    goto label_30;\nlabel_77:\n    if (r12 != -1) {\n        goto label_5;\n    }\nlabel_78:\n    r11 = rbx;\n    goto label_30;\nlabel_91:\n    *((rbp - 0x690)) = dl;\n    rax = malloc (r12);\n    edx = *((rbp - 0x690));\n    rcx = rax;\n    if (rax == 0) {\n        goto label_5;\n    }\n    if (r13 == 0) {\n        goto label_119;\n    }\n    if (dl == 0) {\n        goto label_119;\n    }\n    rax = memcpy (rax, rbx, r13);\n    rbx = rax;\n    goto label_29;\nlabel_67:\n    rbx = r9;\n    goto label_6;\nlabel_59:\n    rax = rbp - 0x580;\n    rdi = *((rbp - 0x578));\n    rax += 0x20;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = rbp - 0x670;\n    rdi = *((rbp - 0x668));\n    rax += 0x10;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    errno_location ();\n    ebx = 0;\n    *(rax) = 0x16;\n    goto label_7;\n    if (rdi < rax) {\nlabel_89:\n        goto label_5;\n    }\n    r12 += r12;\n    if (r12 >= rax) {\n        goto label_31;\n    }\nlabel_90:\n    if (rax == -1) {\n        goto label_5;\n    }\n    r12 = rax;\n    goto label_31;\nlabel_74:\n    *(r15) = 0x4c;\n    r15++;\n    goto label_12;\nlabel_112:\n    rax = rbp - 0x67c;\n    eax = *((rbp - 0x674));\n    do {\n        r9d = *((rbp - 0x678));\n        r8 = *((rbp - 0x6a8));\n        edx = 1;\n        rsi = rbx;\n        rcx = 0xffffffffffffffff;\n        eax = 1;\n        snprintf_chk ();\n        r11 = *((rbp - 0x6c8));\n        goto label_19;\nlabel_111:\n        rax = rbp - 0x67c;\n    } while (1);\nlabel_110:\n    rax = rbp - 0x67c;\n    r9d = *((rbp - 0x678));\n    r8 = *((rbp - 0x6a8));\n    eax = *((rbp - 0x674));\n    edx = 1;\n    rsi = rbx;\n    rcx = 0xffffffffffffffff;\n    ? = fp_stack[0];\n    fp_stack--;\n    eax = 0;\n    snprintf_chk ();\n    r11 = *((rbp - 0x6c8));\n    goto label_19;\nlabel_109:\n    rax = rbp - 0x67c;\n    ? = fp_stack[0];\n    fp_stack--;\n    goto label_32;\nlabel_99:\n    rax = *((rbp - 0x6a0));\n    esi = *((rbp - 0x6e0));\n    r15 = (int64_t) edx;\n    rbx = r11;\n    r15 += r13;\n    *(rax) = esi;\n    goto label_11;\nlabel_100:\n    if (r11 != *((rbp - 0x688))) {\n        if (r11 == 0) {\n            goto label_120;\n        }\n        free (r11);\n    }\nlabel_120:\n    rax = *((rbp - 0x6d8));\n    if (rax != 0) {\n        free (rax);\n    }\n    rax = rbp - 0x580;\n    rdi = *((rbp - 0x578));\n    rax += 0x20;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = rbp - 0x670;\n    rdi = *((rbp - 0x668));\n    rax += 0x10;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = *((rbp - 0x6a0));\n    ebx = 0;\n    *(rax) = 0x4b;\n    goto label_7;\nlabel_113:\n    rcx = rbp - 0x2f0;\n    goto label_33;\nlabel_116:\n    __asm (\"fucompi st(1)\");\n    fp_stack++;\n    if (rdi == rax) {\n        goto label_34;\n    }\n    if (rdi != rax) {\n        goto label_34;\n    }\n    eax = *((r14 + 0x48));\n    eax &= 0xffffffdf;\n    if (al != 0x46) {\n        goto label_121;\n    }\n    *(r15) = 0x30;\n    if ((r11b & 0x10) != 0) {\n        goto label_122;\n    }\n    if (rdx != 0) {\n        goto label_122;\n    }\nlabel_40:\n    r9 = r15 + 1;\nlabel_36:\n    *((rbp - 0x678)) = r8w;\nlabel_50:\n    r8 = r9;\n    r8 -= rcx;\n    if (r10 <= r8) {\n        goto label_39;\n    }\n    r10 -= r8;\n    rdi = r9 + r10;\n    r8 = rdi;\n    r8 -= rcx;\n    if ((r11b & 2) != 0) {\n        goto label_123;\n    }\n    r11d &= 0x20;\n    if (r11d == 0) {\n        goto label_124;\n    }\n    if (r15 == 0) {\n        goto label_124;\n    }\n    if (r15 >= r9) {\n        goto label_125;\n    }\n    rdx = r15 - 1;\n    rax = 0xffffffffffffffff;\n    rdx -= r9;\n    do {\n        esi = *((r9 + rax));\n        *((rdi + rax)) = sil;\n        rax--;\n    } while (rax != rdx);\nlabel_56:\n    if (r10 == 0) {\n        goto label_39;\n    }\n    r10 += r15;\n    do {\n        r15++;\n        *((r15 - 1)) = 0x30;\n    } while (r15 != r10);\nlabel_39:\n    if (*((rbp - 0x690)) <= r8) {\n        goto label_34;\n    }\n    rdx = r12;\n    rax = r13;\n    esi = 0;\n    rdx -= r13;\n    rax += r8;\n    sil = (rax < 0) ? 1 : 0;\n    r15 = rax;\n    if (rdx > r8) {\n        goto label_38;\n    }\n    if (rsi != 0) {\n        goto label_126;\n    }\n    if (r12 >= rax) {\n        goto label_38;\n    }\n    if (r12 != 0) {\n        goto label_127;\n    }\n    if (rax > 0xc) {\n        goto label_128;\n    }\n    r12d = 0xc;\nlabel_49:\n    dl = (rbx == *((rbp - 0x688))) ? 1 : 0;\n    if (rbx == 0) {\n        goto label_129;\n    }\n    if (dl != 0) {\n        goto label_129;\n    }\n    *((rbp - 0x6a0)) = r8;\n    *((rbp - 0x690)) = rcx;\n    rax = realloc (rbx, r12);\n    if (rax == 0) {\n        goto label_5;\n    }\n    rcx = *((rbp - 0x690));\n    r8 = *((rbp - 0x6a0));\n    rbx = rax;\nlabel_38:\n    rsi = rcx;\n    *((rbp - 0x690)) = rcx;\n    memcpy (rbx + r13, rsi, r8);\n    rcx = *((rbp - 0x690));\n    rax = rbp - 0x2f0;\n    if (rcx == rax) {\n        goto label_11;\n    }\n    al = free (rcx);\n    goto label_11;\nlabel_115:\n    if ((r11b & 4) == 0) {\n        goto label_130;\n    }\n    r15 = rcx + 1;\n    *(rcx) = 0x2b;\n    goto label_35;\nlabel_119:\n    rbx = rcx;\n    goto label_29;\nlabel_121:\n    if (al != 0x45) {\n        goto label_131;\n    }\n    *(r15) = 0x30;\n    if ((r11b & 0x10) != 0) {\n        goto label_132;\n    }\n    rsi = r15 + 1;\n    al = (rdx != 0) ? 1 : 0;\n    if (al != 0) {\n        goto label_132;\n    }\nlabel_52:\n    eax = *((r14 + 0x48));\n    r9 = rsi + 4;\n    *((rsi + 3)) = 0x30;\n    *(rsi) = al;\n    eax = 0x302b;\n    *((rsi + 1)) = ax;\n    goto label_36;\nlabel_93:\n    r10d = 0;\n    goto label_10;\n    if (al != 0) {\nlabel_117:\n        goto label_34;\n    }\n    eax = *((r14 + 0x48));\n    r9 = r15 + 3;\n    eax -= 0x41;\n    if (al > 0x19) {\n        goto label_133;\n    }\n    eax = 0x4e49;\n    *((r15 + 2)) = 0x46;\n    *(r15) = ax;\n    r15d = 0;\n    goto label_36;\nlabel_68:\n    r14 = r13;\n    r15 = r13;\n    r14++;\n    if (r14 < 0) {\n        goto label_134;\n    }\n    if (r12 >= r14) {\n        goto label_53;\n    }\n    if (r12 != 0) {\n        goto label_135;\n    }\n    if (r14 > 0xc) {\n        goto label_136;\n    }\n    r12d = 0xc;\nlabel_54:\n    r13b = (rbx == *((rbp - 0x688))) ? 1 : 0;\n    if (rbx == 0) {\n        goto label_137;\n    }\n    if (r13b != 0) {\n        goto label_137;\n    }\n    rax = realloc (rbx, r12);\n    if (rax == 0) {\n        goto label_37;\n    }\n    rbx = rax;\nlabel_53:\n    *((rbx + r15)) = 0;\n    if (r12 > r14) {\n        if (rbx == *((rbp - 0x688))) {\n            goto label_138;\n        }\n        rax = realloc (rbx, r14);\n        if (rax == 0) {\n            rbx = rax;\n            goto label_138;\n        }\n    }\nlabel_138:\n    rax = *((rbp - 0x6d8));\n    if (rax != 0) {\n        free (rax);\n    }\n    rax = rbp - 0x580;\n    rdi = *((rbp - 0x578));\n    rax += 0x20;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = rbp - 0x670;\n    rdi = *((rbp - 0x668));\n    rax += 0x10;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = *((rbp - 0x6d0));\n    *(rax) = r15;\n    goto label_7;\nlabel_126:\n    if (r12 != -1) {\n        goto label_5;\n    }\n    goto label_38;\nlabel_130:\n    r15 = rcx;\n    if ((r11b & 8) == 0) {\n        goto label_35;\n    }\n    r15 = rcx + 1;\n    *(rcx) = 0x20;\n    goto label_35;\nlabel_124:\n    rdx = rcx - 1;\n    rax = 0xffffffffffffffff;\n    rdx -= r9;\n    if (rcx >= r9) {\n        goto label_139;\n    }\n    do {\n        esi = *((r9 + rax));\n        *((rdi + rax)) = sil;\n        rax--;\n    } while (rdx != rax);\n    r9 = rcx;\nlabel_139:\n    if (r10 == 0) {\n        goto label_39;\n    }\n    r10 += r9;\n    do {\n        r9++;\n        *((r9 - 1)) = 0x20;\n    } while (r9 != r10);\n    goto label_39;\nlabel_129:\n    *((rbp - 0x6b0)) = dl;\n    *((rbp - 0x6a0)) = r8;\n    *((rbp - 0x690)) = rcx;\n    rax = malloc (r12);\n    rcx = *((rbp - 0x690));\n    r8 = *((rbp - 0x6a0));\n    r9 = rax;\n    edx = *((rbp - 0x6b0));\n    if (rax == 0) {\n        goto label_5;\n    }\n    if (r13 == 0) {\n        goto label_140;\n    }\n    if (dl == 0) {\n        goto label_140;\n    }\n    *((rbp - 0x6a0)) = r8;\n    *((rbp - 0x690)) = rcx;\n    rax = memcpy (rax, rbx, r13);\n    rcx = *((rbp - 0x690));\n    r8 = *((rbp - 0x6a0));\n    rbx = rax;\n    goto label_38;\nlabel_131:\n    if (al != 0x47) {\n        goto label_141;\n    }\n    *(r15) = 0x30;\n    if ((r11b & 0x10) == 0) {\n        goto label_40;\n    }\n    r9 = r15 + 2;\n    if (rdx == 0) {\n        goto label_142;\n    }\n    rsi = rdx - 1;\n    *((rbp - 0x6ec)) = r8d;\n    *((rbp - 0x6e8)) = r10;\n    *((rbp - 0x6e0)) = r9;\n    *((rbp - 0x6c8)) = rcx;\n    *((rbp - 0x6c0)) = r11d;\n    *((rbp - 0x6b0)) = rdx;\n    *((rbp - 0x6a0)) = rsi;\n    rax = nl_langinfo (0x10000);\n    rsi = *((rbp - 0x6a0));\n    rdx = *((rbp - 0x6b0));\n    eax = *(rax);\n    r11d = *((rbp - 0x6c0));\n    rcx = *((rbp - 0x6c8));\n    r9 = *((rbp - 0x6e0));\n    r10 = *((rbp - 0x6e8));\n    r8d = *((rbp - 0x6ec));\n    if (al == 0) {\n        goto label_143;\n    }\nlabel_57:\n    *((r15 + 1)) = al;\n    if (rsi == 0) {\n        goto label_36;\n    }\n    rdx = r15 + rdx + 1;\n    rax = r9;\n    do {\n        rax++;\n        *((rax - 1)) = 0x30;\n    } while (rax != rdx);\n    r9 += rsi;\n    goto label_36;\nlabel_123:\n    if (r10 == 0) {\n        goto label_39;\n    }\n    do {\n        r9++;\n        *((r9 - 1)) = 0x20;\n    } while (rdi != r9);\n    goto label_39;\nlabel_133:\n    eax = 0x6e69;\n    *((r15 + 2)) = 0x66;\n    *(r15) = ax;\n    r15d = 0;\n    goto label_36;\nlabel_122:\n    r9 = r15 + 2;\n    *((rbp - 0x6e8)) = r8d;\n    *((rbp - 0x6e0)) = r10;\n    *((rbp - 0x6c8)) = rcx;\n    *((rbp - 0x6c0)) = rdx;\n    *((rbp - 0x6b0)) = r11d;\n    *((rbp - 0x6a0)) = r9;\n    rax = nl_langinfo (0x10000);\n    esi = 0x2e;\n    rdx = *((rbp - 0x6c0));\n    r9 = *((rbp - 0x6a0));\n    eax = *(rax);\n    r11d = *((rbp - 0x6b0));\n    rcx = *((rbp - 0x6c8));\n    r10 = *((rbp - 0x6e0));\n    r8d = *((rbp - 0x6e8));\n    if (al == 0) {\n        eax = esi;\n    }\n    *((r15 + 1)) = al;\n    if (rdx == 0) {\n        goto label_36;\n    }\n    rsi = r15 + rdx + 2;\n    rax = r9;\n    do {\n        rax++;\n        *((rax - 1)) = 0x30;\n    } while (rax != rsi);\n    r9 += rdx;\n    goto label_36;\nlabel_94:\n    r10d = 0;\n    *((rbp - 0x690)) = rcx;\n    goto label_144;\nlabel_41:\n    if (rdi == rdx) {\n        goto label_10;\n    }\nlabel_144:\n    rsi = rdx + 1;\n    edx = *(rdx);\n    rcx = 0x1999999999999999;\n    r9 = 0xffffffffffffffff;\n    edx -= 0x30;\n    rdx = (int64_t) edx;\n    if (r10 <= rcx) {\n        r9 = r10 * 5;\n        r9 += r9;\n    }\n    rdx += r9;\n    r10 = rdx;\n    rdx = rsi;\n    if (rdx >= 0) {\n        goto label_41;\n    }\n    rcx = *((rbp - 0x690));\n    if (rdi == rsi) {\n        goto label_42;\n    }\nlabel_82:\n    rdx++;\n    if (*((rdx - 1)) != 0x30) {\n        goto label_43;\n    }\n    *((rbp - 0x690)) = rcx;\n    r10 = 0xffffffffffffffff;\n    goto label_41;\nlabel_84:\n    rax = rdx + 1;\n    edx = 0;\n    if (rcx == rax) {\n        goto label_86;\n    }\n    rsi = rax;\n    goto label_145;\nlabel_45:\n    if (rcx == rsi) {\n        goto label_44;\n    }\nlabel_145:\n    r9 = 0x1999999999999999;\n    rdi = rsi + 1;\n    esi = *(rsi);\n    esi -= 0x30;\n    rax = (int64_t) esi;\n    rsi = 0xffffffffffffffff;\n    if (rdx <= r9) {\n        rsi = rdx * 5;\n        rsi += rsi;\n    }\n    rax += rsi;\n    rsi = rdi;\n    rdx = rax;\n    if (rax >= 0) {\n        goto label_45;\n    }\n    if (rcx == rdi) {\n        goto label_46;\n    }\nlabel_48:\n    rsi = rdi + 1;\n    if (*((rsi - 1)) == 0x30) {\n        rdx = 0xffffffffffffffff;\n        goto label_45;\n    }\n    if (rcx == rsi) {\n        goto label_47;\n    }\n    rdi = rsi;\n    goto label_48;\n    if (rcx < rsi) {\nlabel_127:\n        goto label_5;\n    }\n    r12 += r12;\n    if (r12 >= rax) {\n        goto label_49;\n    }\nlabel_128:\n    if (rax == -1) {\n        goto label_5;\n    }\n    r12 = rax;\n    goto label_49;\nlabel_114:\n    fp_stack++;\n    r15d -= 0x41;\n    r9 = rcx + 3;\n    if (r15b > 0x19) {\n        goto label_146;\n    }\n    eax = 0x414e;\n    *((rcx + 2)) = 0x4e;\n    r15d = 0;\n    *(rcx) = ax;\n    goto label_50;\nlabel_86:\n    ecx = 0xc;\n    goto label_51;\nlabel_141:\n    if (al != 0x41) {\n        goto label_34;\n    }\n    rax = r15 + 2;\n    *(r15) = 0x30;\n    *((rbp - 0x6a0)) = rax;\n    eax = *((r14 + 0x48));\n    *((r15 + 2)) = 0x30;\n    eax += 0x17;\n    *((r15 + 1)) = al;\n    if ((r11b & 0x10) != 0) {\n        goto label_147;\n    }\n    rsi = r15 + 3;\n    al = (rdx != 0) ? 1 : 0;\n    if (al != 0) {\n        goto label_147;\n    }\nlabel_55:\n    eax = *((r14 + 0x48));\n    r15d = 0x302b;\n    r9 = rsi + 3;\n    *((rsi + 1)) = r15w;\n    r15 = *((rbp - 0x6a0));\n    eax += 0xf;\n    *(rsi) = al;\n    goto label_36;\nlabel_132:\n    rsi = r15 + 2;\n    *((rbp - 0x6e8)) = r8d;\n    *((rbp - 0x6e0)) = r10;\n    *((rbp - 0x6c8)) = rcx;\n    *((rbp - 0x6c0)) = rdx;\n    *((rbp - 0x6b0)) = r11d;\n    *((rbp - 0x6a0)) = rsi;\n    rax = nl_langinfo (0x10000);\n    edi = 0x2e;\n    rdx = *((rbp - 0x6c0));\n    rsi = *((rbp - 0x6a0));\n    eax = *(rax);\n    r11d = *((rbp - 0x6b0));\n    rcx = *((rbp - 0x6c8));\n    r10 = *((rbp - 0x6e0));\n    r8d = *((rbp - 0x6e8));\n    if (al == 0) {\n        eax = edi;\n    }\n    *((r15 + 1)) = al;\n    if (rdx == 0) {\n        goto label_52;\n    }\n    rdi = r15 + rdx + 2;\n    rax = rsi;\n    do {\n        rax++;\n        *((rax - 1)) = 0x30;\n    } while (rax != rdi);\n    rsi += rdx;\n    goto label_52;\nlabel_140:\n    rbx = r9;\n    goto label_38;\nlabel_146:\n    eax = 0x616e;\n    *((rcx + 2)) = 0x6e;\n    r15d = 0;\n    *(rcx) = ax;\n    goto label_50;\nlabel_137:\n    rax = malloc (r12);\n    rcx = rax;\n    if (rax == 0) {\n        goto label_5;\n    }\n    rdx = r15;\n    if (r15 == 0) {\n        goto label_148;\n    }\n    if (r13b == 0) {\n        goto label_148;\n    }\n    rax = memcpy (rax, rbx, rdx);\n    rbx = rax;\n    goto label_53;\n    if (r13b < 0) {\nlabel_135:\n        goto label_5;\n    }\n    r12 += r12;\n    if (r12 >= r14) {\n        goto label_54;\n    }\nlabel_136:\n    if (r14 == -1) {\n        goto label_5;\n    }\n    r12 = r14;\n    goto label_54;\nlabel_147:\n    rsi = r15 + 4;\n    *((rbp - 0x6ec)) = r8d;\n    *((rbp - 0x6e8)) = r10;\n    *((rbp - 0x6e0)) = rcx;\n    *((rbp - 0x6c8)) = rdx;\n    *((rbp - 0x6c0)) = r11d;\n    *((rbp - 0x6b0)) = rsi;\n    rax = nl_langinfo (0x10000);\n    edi = 0x2e;\n    rdx = *((rbp - 0x6c8));\n    rsi = *((rbp - 0x6b0));\n    eax = *(rax);\n    r11d = *((rbp - 0x6c0));\n    rcx = *((rbp - 0x6e0));\n    r10 = *((rbp - 0x6e8));\n    r8d = *((rbp - 0x6ec));\n    if (al == 0) {\n        eax = edi;\n    }\n    *((r15 + 3)) = al;\n    if (rdx == 0) {\n        goto label_55;\n    }\n    rdi = r15 + rdx + 4;\n    rax = rsi;\n    do {\n        rax++;\n        *((rax - 1)) = 0x30;\n    } while (rax != rdi);\n    rsi += rdx;\n    goto label_55;\nlabel_125:\n    r15 = r9;\n    goto label_56;\nlabel_148:\n    rbx = rcx;\n    goto label_53;\nlabel_142:\n    *((rbp - 0x6e0)) = r8d;\n    *((rbp - 0x6c8)) = r10;\n    *((rbp - 0x6c0)) = r9;\n    *((rbp - 0x6b0)) = rcx;\n    *((rbp - 0x6a0)) = r11d;\n    rax = nl_langinfo (0x10000);\n    edx = 0x2e;\n    r11d = *((rbp - 0x6a0));\n    rcx = *((rbp - 0x6b0));\n    eax = *(rax);\n    r9 = *((rbp - 0x6c0));\n    r10 = *((rbp - 0x6c8));\n    r8d = *((rbp - 0x6e0));\n    if (al == 0) {\n        eax = edx;\n    }\n    *((r15 + 1)) = al;\n    goto label_36;\nlabel_143:\n    eax = 0x2e;\n    goto label_57;\nlabel_134:\n    if (r12 == -1) {\n        goto label_53;\n    }\n    goto label_5;\n}\n"
        },
        {
            "funcName": "fcn_00411ac0",
            "funcStartAddr": "0x411ac0",
            "funcEndAddr": "0x411cd9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x411ac0 */\n#include <stdint.h>\n \nint64_t fcn_00411ac0 (int64_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rax = *((rsi + 8));\n    if (*(rsi) == 0) {\n        goto label_6;\n    }\n    edx = 0;\n    r9d = \"(NULL)\";\n    r8d = \"(NULL)\";\n    do {\n        if (*(rax) > 0x16) {\n            goto label_7;\n        }\n        ecx = *(rax);\n        /* switch table (23 cases) at 0x417f20 */\n        ecx = *(rdi);\n        if (ecx > 0x2f) {\n            goto label_8;\n        }\n        r10d = ecx;\n        ecx += 8;\n        r10 += *((rdi + 0x10));\n        *(rdi) = ecx;\nlabel_1:\n        rcx = *(r10);\n        *((rax + 0x10)) = rcx;\nlabel_0:\n        rdx++;\n        rax += 0x20;\n    } while (*(rsi) > rdx);\nlabel_6:\n    eax = 0;\n    return rax;\n    ecx = *(rdi);\n    if (ecx > 0x2f) {\n        goto label_9;\n    }\n    r10d = ecx;\n    ecx += 8;\n    r10 += *((rdi + 0x10));\n    *(rdi) = ecx;\n    do {\n        ecx = *(r10);\n        *((rax + 0x10)) = ecx;\n        goto label_0;\n        ecx = *(rdi);\n        if (ecx > 0x2f) {\n            goto label_10;\n        }\n        r10d = ecx;\n        ecx += 8;\n        r10 += *((rdi + 0x10));\n        *(rdi) = ecx;\nlabel_3:\n        ecx = *(r10);\n        *((rax + 0x10)) = cx;\n        goto label_0;\n        ecx = *(rdi);\n        if (ecx > 0x2f) {\n            goto label_11;\n        }\n        r10d = ecx;\n        ecx += 8;\n        r10 += *((rdi + 0x10));\n        *(rdi) = ecx;\nlabel_2:\n        ecx = *(r10);\n        *((rax + 0x10)) = cl;\n        goto label_0;\nlabel_8:\n        r10 = *((rdi + 8));\n        rcx = r10 + 8;\n        *((rdi + 8)) = rcx;\n        goto label_1;\nlabel_9:\n        r10 = *((rdi + 8));\n        rcx = r10 + 8;\n        *((rdi + 8)) = rcx;\n    } while (1);\nlabel_11:\n    r10 = *((rdi + 8));\n    rcx = r10 + 8;\n    *((rdi + 8)) = rcx;\n    goto label_2;\nlabel_10:\n    r10 = *((rdi + 8));\n    rcx = r10 + 8;\n    *((rdi + 8)) = rcx;\n    goto label_3;\n    ecx = *((rdi + 4));\n    if (ecx > 0xaf) {\n        goto label_12;\n    }\n    r10d = ecx;\n    ecx += 0x10;\n    r10 += *((rdi + 0x10));\n    *((rdi + 4)) = ecx;\nlabel_4:\n    xmm0 = *(r10);\n    *((rax + 0x10)) = xmm0;\n    goto label_0;\n    rcx = *((rdi + 8));\n    rcx += 0xf;\n    rcx &= 0xfffffffffffffff0;\n    r10 = rcx + 0x10;\n    *((rdi + 8)) = r10;\n    *(fp_stack--) = fp_stack[?];\n    ? = fp_stack[0];\n    fp_stack--;\n    goto label_0;\n    ecx = *(rdi);\n    if (ecx > 0x2f) {\n        goto label_13;\n    }\n    r10d = ecx;\n    ecx += 8;\n    r10 += *((rdi + 0x10));\n    *(rdi) = ecx;\nlabel_5:\n    rcx = *(r10);\n    if (rcx == 0) {\n        rcx = r9;\n    }\n    *((rax + 0x10)) = rcx;\n    goto label_0;\n    ecx = *(rdi);\n    if (ecx > 0x2f) {\n        goto label_14;\n    }\n    r10d = ecx;\n    ecx += 8;\n    r10 += *((rdi + 0x10));\n    *(rdi) = ecx;\n    do {\n        rcx = *(r10);\n        if (rcx == 0) {\n            rcx = r8;\n        }\n        *((rax + 0x10)) = rcx;\n        goto label_0;\nlabel_7:\n        eax = 0xffffffff;\n        return rax;\nlabel_14:\n        r10 = *((rdi + 8));\n        rcx = r10 + 8;\n        *((rdi + 8)) = rcx;\n    } while (1);\nlabel_12:\n    r10 = *((rdi + 8));\n    rcx = r10 + 8;\n    *((rdi + 8)) = rcx;\n    goto label_4;\nlabel_13:\n    r10 = *((rdi + 8));\n    rcx = r10 + 8;\n    *((rdi + 8)) = rcx;\n    goto label_5;\n}\n"
        },
        {
            "funcName": "fcn_00411ce0",
            "funcStartAddr": "0x411ce0",
            "funcEndAddr": "0x4129e9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x411ce0 */\n#include <stdint.h>\n \nuint64_t fcn_00411ce0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    void ** var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    uint32_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = rsi + 0x20;\n    rax = rdx + 0x10;\n    r8 = rsi;\n    r15 = rdx;\n    r9d = 7;\n    r11d = 7;\n    r10 = 0xffffffffffffffff;\n    r13d = 0;\n    *(rsi) = 0;\n    *((rsi + 8)) = rcx;\n    *((rsp + 0x28)) = rcx;\n    *(rdx) = 0;\n    *((rsp + 8)) = rax;\n    *((rdx + 8)) = rax;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x20)) = 0;\n    while (al != 0) {\n        rbp = rdi + 1;\n        if (al == 0x25) {\n            goto label_32;\n        }\nlabel_3:\n        rdi = rbp;\n        eax = *(rdi);\n    }\n    rax = r13 * 5;\n    rax = r13 + rax*2;\n    *((rcx + rax*8)) = rdi;\n    rax = *((rsp + 0x10));\n    *((r8 + 0x10)) = rax;\n    rax = *((rsp + 0x18));\n    *((r8 + 0x18)) = rax;\n    eax = 0;\nlabel_11:\n    return rax;\nlabel_32:\n    rax = r13 * 5;\n    r14 = r10;\n    rax = r13 + rax*2;\n    r12 = rcx + rax*8;\n    *(r12) = rdi;\n    *((r12 + 0x10)) = 0;\n    *((r12 + 0x18)) = 0;\n    *((r12 + 0x20)) = 0;\n    *((r12 + 0x28)) = r10;\n    *((r12 + 0x30)) = 0;\n    *((r12 + 0x38)) = 0;\n    *((r12 + 0x40)) = r10;\n    *((r12 + 0x50)) = r10;\n    ebx = *((rdi + 1));\n    eax = rbx - 0x30;\n    if (al > 9) {\n        goto label_4;\n    }\n    goto label_33;\n    do {\n        if (bl == 0x2d) {\n            goto label_34;\n        }\n        if (bl == 0x2b) {\n            goto label_35;\n        }\n        if (bl == 0x20) {\n            goto label_36;\n        }\n        if (bl == 0x23) {\n            goto label_37;\n        }\n        if (bl == 0x30) {\n            goto label_38;\n        }\n        if (bl != 0x49) {\n            goto label_39;\n        }\n        *((r12 + 0x10)) |= 0x40;\nlabel_0:\n        ebx = *(rcx);\nlabel_4:\n        rcx = rbp + 1;\n    } while (bl != 0x27);\n    *((r12 + 0x10)) |= 1;\n    goto label_0;\nlabel_34:\n    *((r12 + 0x10)) |= 2;\n    goto label_0;\nlabel_35:\n    *((r12 + 0x10)) |= 4;\n    goto label_0;\nlabel_36:\n    *((r12 + 0x10)) |= 8;\n    goto label_0;\nlabel_37:\n    *((r12 + 0x10)) |= 0x10;\n    goto label_0;\nlabel_38:\n    *((r12 + 0x10)) |= 0x20;\n    goto label_0;\nlabel_39:\n    if (bl == 0x2a) {\n        goto label_40;\n    }\n    eax = rbx - 0x30;\n    if (al <= 9) {\n        goto label_41;\n    }\nlabel_17:\n    if (bl == 0x2e) {\n        goto label_42;\n    }\nlabel_2:\n    eax = 0;\n    esi = 1;\n    while (bl != 0x68) {\n        if (bl == 0x4c) {\n            goto label_43;\n        }\n        if (bl != 0x6c) {\n            if (bl == 0x6a) {\n                goto label_44;\n            }\n            edx = ebx;\n            edx &= 0xffffffdf;\n            if (dl == 0x5a) {\n                goto label_44;\n            }\n            if (bl != 0x74) {\n                goto label_45;\n            }\n        }\nlabel_44:\n        eax += 8;\nlabel_1:\n        ebx = *(rbp);\n        rbp++;\n    }\n    ecx = eax;\n    edx = esi;\n    ecx &= 1;\n    edx <<= cl;\n    eax |= edx;\n    goto label_1;\nlabel_40:\n    rsi = *((rsp + 0x10));\n    eax = 1;\n    *((r12 + 0x18)) = rbp;\n    *((r12 + 0x20)) = rcx;\n    if (rsi != 0) {\n        rax = rsi;\n    }\n    *((rsp + 0x10)) = rax;\n    eax = *((rbp + 1));\n    edx = rax - 0x30;\n    if (dl <= 9) {\n        goto label_46;\n    }\nlabel_8:\n    rbx = *((r12 + 0x28));\n    if (rbx == -1) {\n        goto label_47;\n    }\nlabel_7:\n    r13 = *((r15 + 8));\n    if (r9 <= rbx) {\n        goto label_48;\n    }\n    rdx = *(r15);\nlabel_5:\n    if (rdx > rbx) {\n        goto label_49;\n    }\n    do {\n        rdx++;\n        rax = rdx;\n        rax <<= 5;\n        *((r13 + rax - 0x20)) = 0;\n    } while (rdx <= rbx);\n    *(r15) = rdx;\nlabel_49:\n    rbx <<= 5;\n    rax = r13 + rbx;\n    edx = *(rax);\n    if (edx != 0) {\n        goto label_50;\n    }\n    *(rax) = 5;\n    ebx = *(rcx);\n    rcx++;\n    if (bl != 0x2e) {\n        goto label_2;\n    }\nlabel_42:\n    *((r12 + 0x30)) = rbp;\n    if (*((rbp + 1)) != 0x2a) {\n        goto label_51;\n    }\n    rsi = *((rsp + 0x18));\n    eax = 2;\n    rcx = rbp + 2;\n    *((r12 + 0x38)) = rcx;\n    if (rsi >= 2) {\n        rax = rsi;\n    }\n    *((rsp + 0x18)) = rax;\n    eax = *((rbp + 2));\n    edx = rax - 0x30;\n    if (dl <= 9) {\n        goto label_52;\n    }\nlabel_27:\n    rbx = *((r12 + 0x40));\n    if (rbx == -1) {\n        goto label_53;\n    }\nlabel_26:\n    r13 = *((r15 + 8));\n    if (r9 <= rbx) {\n        goto label_54;\n    }\n    rdx = *(r15);\nlabel_20:\n    if (rdx > rbx) {\n        goto label_55;\n    }\n    do {\n        rdx++;\n        rax = rdx;\n        rax <<= 5;\n        *((r13 + rax - 0x20)) = 0;\n    } while (rdx <= rbx);\n    *(r15) = rdx;\nlabel_55:\n    rax = rbx;\n    rax <<= 5;\n    rax += r13;\n    edx = *(rax);\n    if (edx != 0) {\n        goto label_56;\n    }\n    *(rax) = 5;\n    ebx = *(rcx);\n    goto label_2;\nlabel_43:\n    eax |= 4;\n    goto label_1;\nlabel_45:\n    edx = rbx - 0x25;\n    if (dl > 0x53) {\n        goto label_15;\n    }\n    edx = (int32_t) dl;\n    /* switch table (84 cases) at 0x418000 */\n    ecx = 0;\n    cl = (eax > 7) ? 1 : 0;\n    ecx += 0xf;\nlabel_10:\n    if (r14 == -1) {\n        goto label_57;\n    }\n    *((r12 + 0x50)) = r14;\nlabel_16:\n    r13 = *((r15 + 8));\n    if (r9 <= r14) {\n        goto label_58;\n    }\nlabel_14:\n    rax = *(r15);\n    if (rax > r14) {\n        goto label_59;\n    }\n    do {\n        rax++;\n        rdx = rax;\n        rdx <<= 5;\n        *((r13 + rdx - 0x20)) = 0;\n    } while (rax <= r14);\n    *(r15) = rax;\nlabel_59:\n    r14 <<= 5;\n    rax = r13 + r14;\n    edx = *(rax);\n    if (edx != 0) {\n        goto label_60;\n    }\n    *(rax) = ecx;\nlabel_12:\n    *((r12 + 0x48)) = bl;\n    rax = *(r8);\n    *((r12 + 8)) = rbp;\n    r13 = rax + 1;\n    *(r8) = r13;\n    if (r11 > r13) {\n        rcx = *((r8 + 8));\n        goto label_3;\n    }\n    if (r11 < 0) {\n        goto label_61;\n    }\n    rax = 0x2e8ba2e8ba2e8ba;\n    rbx = r11 + r11;\n    if (rbx > rax) {\n        goto label_61;\n    }\n    rax = r11 * 5;\n    r12 = *((r8 + 8));\n    *((rsp + 0x38)) = r8;\n    rsi = r11 + rax*2;\n    *((rsp + 0x30)) = r9;\n    rsi <<= 4;\n    if (*((rsp + 0x28)) == r12) {\n        goto label_62;\n    }\n    rax = realloc (r12, rsi);\n    r9 = *((rsp + 0x30));\n    r8 = *((rsp + 0x38));\n    r10 = 0xffffffffffffffff;\n    rcx = rax;\n    if (rax == 0) {\n        goto label_61;\n    }\n    r12 = *((r8 + 8));\n    r13 = *(r8);\n    if (*((rsp + 0x28)) == r12) {\n        goto label_63;\n    }\nlabel_6:\n    *((r8 + 8)) = rcx;\n    r11 = rbx;\n    goto label_3;\nlabel_33:\n    rax = rbp;\n    do {\n        rax++;\n        edx = *(rax);\n        ecx = rdx - 0x30;\n    } while (cl <= 9);\n    if (dl == 0x24) {\n        goto label_64;\n    }\n    r14 = r10;\n    goto label_4;\nlabel_51:\n    eax = *((rbp + 1));\n    eax -= 0x30;\n    if (al > 9) {\n        goto label_65;\n    }\n    do {\n        rcx++;\n        eax = *(rcx);\n        eax -= 0x30;\n    } while (al <= 9);\n    rax = rcx;\n    rax -= rbp;\nlabel_30:\n    rsi = *((rsp + 0x18));\n    *((r12 + 0x38)) = rcx;\n    ebx = *(rcx);\n    if (rsi >= rax) {\n        rax = rsi;\n    }\n    *((rsp + 0x18)) = rax;\n    goto label_2;\nlabel_48:\n    r9 += r9;\n    rax = rbx + 1;\n    if (r9 <= rbx) {\n        r9 = rax;\n    }\n    rax = 0x7ffffffffffffff;\n    if (r9 > rax) {\n        goto label_66;\n    }\n    rsi = r9;\n    *((rsp + 0x48)) = r8;\n    rsi <<= 5;\n    *((rsp + 0x40)) = r9;\n    *((rsp + 0x38)) = r11;\n    *((rsp + 0x30)) = rcx;\n    if (*((rsp + 8)) == r13) {\n        goto label_67;\n    }\n    rax = realloc (r13, rsi);\n    rsi = *((r15 + 8));\n    rcx = *((rsp + 0x30));\n    r10 = 0xffffffffffffffff;\n    r13 = rax;\n    r11 = *((rsp + 0x38));\n    r9 = *((rsp + 0x40));\n    r8 = *((rsp + 0x48));\n    if (rax == 0) {\n        goto label_19;\n    }\n    rdx = *(r15);\n    if (*((rsp + 8)) == rsi) {\n        goto label_68;\n    }\nlabel_22:\n    *((r15 + 8)) = r13;\n    goto label_5;\nlabel_62:\n    rax = malloc (rsi);\n    r9 = *((rsp + 0x30));\n    r8 = *((rsp + 0x38));\n    rcx = rax;\n    if (rax == 0) {\n        goto label_69;\n    }\nlabel_63:\n    rax = r13 * 5;\n    *((rsp + 0x38)) = r8;\n    *((rsp + 0x30)) = r9;\n    rdx <<= 3;\n    rax = memcpy (rcx, r12, r13 + rax*2);\n    r8 = *((rsp + 0x38));\n    r9 = *((rsp + 0x30));\n    r10 = 0xffffffffffffffff;\n    rcx = rax;\n    r13 = *(r8);\n    goto label_6;\nlabel_47:\n    rsi = *((rsp + 0x20));\n    rax = rsi + 1;\n    *((r12 + 0x28)) = rsi;\n    if (rsi == -1) {\n        goto label_15;\n    }\n    rbx = *((rsp + 0x20));\n    *((rsp + 0x20)) = rax;\n    goto label_7;\nlabel_46:\n    rdx = rcx;\n    do {\n        rdx++;\n        esi = *(rdx);\n        edi = rsi - 0x30;\n    } while (dil <= 9);\n    if (sil != 0x24) {\n        goto label_8;\n    }\n    esi = 0;\n    while (rbp == 0) {\n        if (bl > 9) {\n            goto label_70;\n        }\n        rdi = 0x1999999999999999;\n        eax -= 0x30;\n        rdx = r10;\n        rax = (int64_t) eax;\n        if (rsi <= rdi) {\n            rdx = rsi * 5;\n            rdx += rdx;\n        }\n        rdi = rcx;\nlabel_9:\n        ebp = 0;\n        rdx += rax;\n        eax = *((rcx + 1));\n        bpl = (rdx < 0) ? 1 : 0;\n        rsi = rdx;\n        rcx++;\n        ebx = rax - 0x30;\n    }\n    if (bl > 9) {\n        goto label_15;\n    }\n    eax -= 0x30;\n    rdx = r10;\n    rdi = rcx;\n    rax = (int64_t) eax;\n    goto label_9;\n    ecx = 0;\n    cl = (eax > 7) ? 1 : 0;\n    ecx += 0xd;\n    goto label_10;\n    ecx = 0x16;\n    if (eax > 0xf) {\n        goto label_10;\n    }\n    if ((al & 4) != 0) {\n        goto label_10;\n    }\n    ecx = 0x15;\n    if (eax > 7) {\n        goto label_10;\n    }\n    ecx = 0x12;\n    if ((al & 2) != 0) {\n        goto label_10;\n    }\n    ecx = 0;\n    cl = ((al & 1) == 0) ? 1 : 0;\n    ecx += 0x13;\n    goto label_10;\n    ecx = 9;\n    if (eax > 0xf) {\n        goto label_10;\n    }\n    if ((al & 4) != 0) {\n        goto label_10;\n    }\n    ecx = 7;\n    if (eax > 7) {\n        goto label_10;\n    }\n    ecx = 1;\n    if ((al & 2) != 0) {\n        goto label_10;\n    }\n    eax &= 1;\n    ecx -= ecx;\n    ecx &= 2;\n    ecx += 3;\n    goto label_10;\n    ecx = 0x11;\n    goto label_10;\n    ecx = 0xc;\n    if (eax > 0xf) {\n        goto label_10;\n    }\n    ecx = 0;\n    cl = ((al & 4) != 0) ? 1 : 0;\n    ecx += 0xb;\n    goto label_10;\n    ecx = 0x10;\n    ebx = 0x73;\n    goto label_10;\n    ecx = 0xe;\n    ebx = 0x63;\n    goto label_10;\n    ecx = 0xa;\n    if (eax > 0xf) {\n        goto label_10;\n    }\n    if ((al & 4) != 0) {\n        goto label_10;\n    }\n    ecx = 8;\n    if (eax > 7) {\n        goto label_10;\n    }\n    ecx = 2;\n    if ((al & 2) != 0) {\n        goto label_10;\n    }\n    eax &= 1;\n    ecx -= ecx;\n    ecx &= 2;\n    ecx += 4;\n    goto label_10;\nlabel_15:\n    r13 = *((r15 + 8));\nlabel_13:\n    if (*((rsp + 8)) != r13) {\n        *((rsp + 8)) = r8;\n        free (r13);\n        r8 = *((rsp + 8));\n    }\n    rdi = *((r8 + 8));\n    if (*((rsp + 0x28)) != rdi) {\n        free (rdi);\n    }\n    errno_location ();\n    *(rax) = 0x16;\n    eax = 0xffffffff;\n    goto label_11;\nlabel_60:\n    if (edx == ecx) {\n        goto label_12;\n    }\n    goto label_13;\nlabel_58:\n    r9 += r9;\n    rax = r14 + 1;\n    if (r9 <= r14) {\n        r9 = rax;\n    }\n    rax = 0x7ffffffffffffff;\n    if (r9 > rax) {\n        goto label_66;\n    }\n    rsi = r9;\n    *((rsp + 0x48)) = r8;\n    rsi <<= 5;\n    *((rsp + 0x40)) = r9;\n    *((rsp + 0x38)) = r11;\n    *((rsp + 0x30)) = ecx;\n    if (*((rsp + 8)) == r13) {\n        goto label_71;\n    }\n    rax = realloc (r13, rsi);\n    ecx = *((rsp + 0x30));\n    r11 = *((rsp + 0x38));\n    r10 = 0xffffffffffffffff;\n    r13 = rax;\n    r9 = *((rsp + 0x40));\n    r8 = *((rsp + 0x48));\n    if (rax == 0) {\n        goto label_61;\n    }\n    rax = *((rsp + 8));\n    if (rax == *((r15 + 8))) {\n        goto label_72;\n    }\nlabel_18:\n    *((r15 + 8)) = r13;\n    goto label_14;\nlabel_57:\n    rsi = *((rsp + 0x20));\n    rax = rsi + 1;\n    *((r12 + 0x50)) = rsi;\n    if (rsi == -1) {\n        goto label_15;\n    }\n    r14 = *((rsp + 0x20));\n    *((rsp + 0x20)) = rax;\n    goto label_16;\nlabel_41:\n    *((r12 + 0x18)) = rbp;\n    eax = *(rbp);\n    eax -= 0x30;\n    if (al > 9) {\n        goto label_73;\n    }\n    rcx = rbp;\n    while (al <= 9) {\n        rcx = rdx;\n        eax = *((rcx + 1));\n        rdx = rcx + 1;\n        eax -= 0x30;\n    }\n    rsi = *((rsp + 0x10));\n    rax = rdx;\n    rcx += 2;\n    rax -= rbp;\n    if (rsi >= rax) {\n        rax = rsi;\n    }\n    *((rsp + 0x10)) = rax;\nlabel_73:\n    *((r12 + 0x20)) = rbp;\n    ebx = *(rbp);\n    goto label_17;\nlabel_50:\n    if (edx != 5) {\n        goto label_13;\n    }\n    ebx = *(rcx);\n    rcx++;\n    goto label_17;\nlabel_71:\n    rax = malloc (rsi);\n    ecx = *((rsp + 0x30));\n    r11 = *((rsp + 0x38));\n    r9 = *((rsp + 0x40));\n    r8 = *((rsp + 0x48));\n    if (rax == 0) {\n        goto label_21;\n    }\nlabel_31:\n    rdi = rax;\n    *((rsp + 0x48)) = r8;\n    *((rsp + 0x40)) = r9;\n    r13 = rax;\n    rdx <<= 5;\n    *((rsp + 0x38)) = r11;\n    *((rsp + 0x30)) = ecx;\n    memcpy (rdi, r13, *(r15));\n    r8 = *((rsp + 0x48));\n    ecx = *((rsp + 0x30));\n    r10 = 0xffffffffffffffff;\n    r9 = *((rsp + 0x40));\n    r11 = *((rsp + 0x38));\n    goto label_18;\n    do {\nlabel_66:\n        rsi = r13;\nlabel_19:\n        if (*((rsp + 8)) != rsi) {\nlabel_23:\n            *((rsp + 8)) = r8;\n            free (rsi);\n            r8 = *((rsp + 8));\n        }\nlabel_21:\n        rdi = *((r8 + 8));\n        if (*((rsp + 0x28)) != rdi) {\n            free (rdi);\n        }\nlabel_24:\n        errno_location ();\n        *(rax) = 0xc;\n        eax = 0xffffffff;\n        return rax;\nlabel_54:\n        r9 += r9;\n        rax = rbx + 1;\n        if (r9 <= rbx) {\n            r9 = rax;\n        }\n        rax = 0x7ffffffffffffff;\n    } while (r9 > rax);\n    rsi = r9;\n    *((rsp + 0x48)) = r8;\n    rsi <<= 5;\n    *((rsp + 0x40)) = r9;\n    *((rsp + 0x38)) = r11;\n    *((rsp + 0x30)) = rcx;\n    if (*((rsp + 8)) == r13) {\n        goto label_74;\n    }\n    rax = realloc (r13, rsi);\n    rsi = *((r15 + 8));\n    rcx = *((rsp + 0x30));\n    r10 = 0xffffffffffffffff;\n    r13 = rax;\n    r11 = *((rsp + 0x38));\n    r9 = *((rsp + 0x40));\n    r8 = *((rsp + 0x48));\n    if (rax == 0) {\n        goto label_19;\n    }\n    rdx = *(r15);\n    if (*((rsp + 8)) == rsi) {\n        goto label_75;\n    }\nlabel_29:\n    *((r15 + 8)) = r13;\n    goto label_20;\nlabel_56:\n    if (edx != 5) {\n        goto label_13;\n    }\n    ebx = *(rcx);\n    goto label_2;\nlabel_67:\n    rax = malloc (rsi);\n    rcx = *((rsp + 0x30));\n    r11 = *((rsp + 0x38));\n    r9 = *((rsp + 0x40));\n    r8 = *((rsp + 0x48));\n    if (rax == 0) {\n        goto label_21;\n    }\n    r13 = rax;\nlabel_68:\n    rdx <<= 5;\n    *((rsp + 0x48)) = r8;\n    *((rsp + 0x40)) = r9;\n    *((rsp + 0x38)) = r11;\n    *((rsp + 0x30)) = rcx;\n    eax = memcpy (r13, *((rsp + 8)), *(r15));\n    rdx = *(r15);\n    r8 = *((rsp + 0x48));\n    r10 = 0xffffffffffffffff;\n    r9 = *((rsp + 0x40));\n    r11 = *((rsp + 0x38));\n    rcx = *((rsp + 0x30));\n    goto label_22;\nlabel_69:\n    rsi = *((r15 + 8));\n    if (*((rsp + 8)) != rsi) {\n        goto label_23;\n    }\n    goto label_24;\nlabel_64:\n    eax = 0;\n    while (rdi == 0) {\n        if (sil > 9) {\n            goto label_76;\n        }\n        rdi = 0x1999999999999999;\n        edx = (int32_t) bl;\n        rsi = r10;\n        edx -= 0x30;\n        rdx = (int64_t) edx;\n        if (rax <= rdi) {\n            rsi = rax * 5;\n            rsi += rsi;\n        }\n        rcx = rbp;\nlabel_25:\n        edi = 0;\n        ebx = *((rbp + 1));\n        rdx += rsi;\n        dil = (rdx < 0) ? 1 : 0;\n        rax = rdx;\n        rbp++;\n        esi = rbx - 0x30;\n    }\n    if (sil > 9) {\n        goto label_15;\n    }\n    edx = (int32_t) bl;\n    rsi = r10;\n    rcx = rbp;\n    edx -= 0x30;\n    rdx = (int64_t) edx;\n    goto label_25;\nlabel_53:\n    rsi = *((rsp + 0x20));\n    rax = rsi + 1;\n    *((r12 + 0x40)) = rsi;\n    if (rsi == -1) {\n        goto label_15;\n    }\n    rbx = *((rsp + 0x20));\n    *((rsp + 0x20)) = rax;\n    goto label_26;\nlabel_52:\n    rdx = rcx;\n    do {\n        rdx++;\n        esi = *(rdx);\n        edi = rsi - 0x30;\n    } while (dil <= 9);\n    if (sil != 0x24) {\n        goto label_27;\n    }\n    esi = 0;\n    while (rbp == 0) {\n        if (bl > 9) {\n            goto label_77;\n        }\n        rdi = 0x1999999999999999;\n        eax -= 0x30;\n        rdx = r10;\n        rax = (int64_t) eax;\n        if (rsi <= rdi) {\n            rdx = rsi * 5;\n            rdx += rdx;\n        }\n        rdi = rcx;\nlabel_28:\n        ebp = 0;\n        rdx += rax;\n        bpl = (rdx < 0) ? 1 : 0;\n        rcx++;\n        eax = *(rcx);\n        rsi = rdx;\n        ebx = rax - 0x30;\n    }\n    if (bl > 9) {\n        goto label_15;\n    }\n    eax -= 0x30;\n    rdx = r10;\n    rdi = rcx;\n    rax = (int64_t) eax;\n    goto label_28;\nlabel_76:\n    r14 = rdx;\n    r14--;\n    if (r14 > 0xfffffffffffffffd) {\n        goto label_15;\n    }\n    rbp = rcx + 2;\n    ebx = *((rcx + 2));\n    goto label_4;\nlabel_74:\n    rax = malloc (rsi);\n    rcx = *((rsp + 0x30));\n    r11 = *((rsp + 0x38));\n    r9 = *((rsp + 0x40));\n    r8 = *((rsp + 0x48));\n    if (rax == 0) {\n        goto label_21;\n    }\n    r13 = rax;\nlabel_75:\n    rdx <<= 5;\n    *((rsp + 0x48)) = r8;\n    *((rsp + 0x40)) = r9;\n    *((rsp + 0x38)) = r11;\n    *((rsp + 0x30)) = rcx;\n    memcpy (r13, *((rsp + 8)), *(r15));\n    rdx = *(r15);\n    r8 = *((rsp + 0x48));\n    r10 = 0xffffffffffffffff;\n    r9 = *((rsp + 0x40));\n    r11 = *((rsp + 0x38));\n    rcx = *((rsp + 0x30));\n    goto label_29;\nlabel_65:\n    eax = 1;\n    goto label_30;\nlabel_70:\n    rbx = rdx - 1;\n    if (rbx > 0xfffffffffffffffd) {\n        goto label_15;\n    }\n    *((r12 + 0x28)) = rbx;\n    rcx = rdi + 2;\n    goto label_7;\nlabel_77:\n    rbx = rdx - 1;\n    if (rbx > 0xfffffffffffffffd) {\n        goto label_15;\n    }\n    *((r12 + 0x40)) = rbx;\n    rcx = rdi + 2;\n    goto label_26;\nlabel_61:\n    rsi = *((r15 + 8));\n    goto label_19;\nlabel_72:\n    rax = r13;\n    r13 = *((rsp + 8));\n    goto label_31;\n}\n"
        },
        {
            "funcName": "fcn_00412a60",
            "funcStartAddr": "0x412a60",
            "funcEndAddr": "0x412a78",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x412a60 */\n#include <stdint.h>\n \nint64_t fcn_00412a60 (void) {\n    rax = 0x61b268;\n    edx = 0;\n    if (rax != 0) {\n        rdx = *(rax);\n    }\n    esi = 0;\n    return cxa_atexit ();\n}\n"
        },
        {
            "funcName": "fcn_00412a78",
            "funcStartAddr": "0x412a78",
            "funcEndAddr": "0x412a98",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_date.elf @ 0x412a78 */\n#include <stdint.h>\n \nvoid fcn_00412a78 (int64_t arg3) {\n    rdx = arg3;\n    ebx = segment.GNU_RELRO;\n    do {\n        rax = *(rbx);\n        if (rax == -1) {\n            goto label_0;\n        }\n        void (*rax)() ();\n        rbx -= 8;\n    } while (1);\nlabel_0:\n}\n"
        }
    ],
    "funcCount": 85
}