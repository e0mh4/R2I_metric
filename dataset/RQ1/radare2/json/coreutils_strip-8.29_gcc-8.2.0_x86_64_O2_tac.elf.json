{
    "binaryInfo": {
        "isStripped": true,
        "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf"
    },
    "buildInfo": {
        "decompilerName": "radare2",
        "compilerName": "gcc",
        "compilerVersion": "9.4.0",
        "optLevel": "O"
    },
    "funcInfo": [
        {
            "funcName": "main",
            "funcStartAddr": "0x401ce0",
            "funcEndAddr": "0x402426",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x401ce0 */\n#include <stdint.h>\n \nint32_t main (int32_t argc, char ** argv) {\n    int64_t var_fh;\n    int64_t var_10h;\n    char ** format;\n    rdi = argc;\n    rsi = argv;\n    rbx = rsi;\n    fcn_00403070 (*(rsi));\n    setlocale (6, 0x4164a7);\n    bindtextdomain (0x414c72, \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\");\n    textdomain (0x414c72, rsi);\n    edi = 0x402ef0;\n    fcn_00414b70 ();\n    *(0x0061d4c8) = 1;\n    *(0x0061d4d0) = 0x4164a6;\n    *(0x0061d4c0) = 1;\n    do {\nlabel_0:\n        r8d = 0;\n        ecx = 0x415180;\n        edx = \"brs:\";\n        rsi = rbx;\n        edi = ebp;\n        eax = fcn_00406380 ();\n        if (eax == 0xffffffff) {\n            goto label_12;\n        }\n        if (eax == 0x62) {\n            goto label_13;\n        }\n        if (eax <= 0x62) {\n            goto label_14;\n        }\n        if (eax != 0x72) {\n            goto label_15;\n        }\n        *(0x0061d4c0) = 0;\n    } while (1);\nlabel_14:\n    if (eax == 0xffffff7d) {\n        eax = 0;\n        rcx = *(str.8.29);\n        r9d = \"David MacKenzie\";\n        r8d = \"Jay Lepreau\";\n        fcn_00405200 (*(obj.stdout), 0x414bf4, \"GNU coreutils\");\n        eax = exit (0);\nlabel_15:\n        if (eax != 0x73) {\n            goto label_16;\n        }\n        rax = imp.__libc_start_main;\n        *(0x0061d4d0) = rax;\n        goto label_0;\n    }\n    if (eax != 0xffffff7e) {\n        goto label_16;\n    }\n    eax = fcn_00402b70 (0);\nlabel_13:\n    *(0x0061d4c8) = 0;\n    goto label_0;\nlabel_12:\n    r8 = imp.__libc_start_main;\n    edx = *(r8);\n    if (*(0x0061d4c0) != 0) {\n        goto label_17;\n    }\n    if (dl == 0) {\n        goto label_18;\n    }\n    *(0x0061d460) = 0;\n    eax = 0;\n    rcx |= 0xffffffffffffffff;\n    rdi = r8;\n    *(0x0061d468) = 0;\n    *(0x0061d480) = 0x61d360;\n    *(0x0061d488) = 0;\n    __asm (\"repne scasb al, byte [rdi]\");\n    rax = rcx;\n    rax = ~rax;\n    rax = fcn_004137a0 (r8, rax - 1, 0x61d460);\n    if (rax != 0) {\n        goto label_19;\n    }\nlabel_1:\n    rsi = imp.__libc_start_main;\n    edx = 0x32;\n    eax = 0x2000;\n    *(0x0061d4a8) = 0x2000;\n    if (rsi > 0xfff) {\n        goto label_20;\n    }\n    goto label_21;\n    do {\n        edx--;\n        if (edx == 0) {\n            goto label_22;\n        }\nlabel_20:\n        rax += rax;\n        rcx = rax;\n        rcx >>= 1;\n    } while (rcx <= rsi);\n    *(0x0061d4a8) = rax;\nlabel_21:\n    rdx = rax + rsi + 1;\n    rdi = rdx + rdx;\n    cl = (rdx <= rax) ? 1 : 0;\n    *(0x0061d4a0) = rdi;\n    al = (rdi <= rdx) ? 1 : 0;\n    cl |= al;\n    if (cl != 0) {\n        goto label_23;\n    }\n    rax = fcn_00405340 (rdi);\n    r12 = imp.__libc_start_main;\n    rcx = rax;\n    *(0x0061d4b0) = rax;\n    if (r12 != 0) {\n        goto label_24;\n    }\n    rcx++;\n    *(0x0061d4b0) = rcx;\nlabel_11:\n    rax = *(0x0061b2dc);\n    if (eax < ebp) {\n        r15 = rbx + rax*8;\n        r14 = *(r15);\n        if (r14 == 0) {\n            goto label_25;\n        }\n        *((rsp + 0x10)) = 0x41648a;\n        goto label_26;\nlabel_17:\n        eax = 1;\n        if (dl != 0) {\n            eax = 0;\n            rcx |= 0xffffffffffffffff;\n            rdi = r8;\n            __asm (\"repne scasb al, byte [rdi]\");\n            rax = rcx;\n            rax = ~rax;\n            rax--;\n        }\n        *(0x0061d4c0) = rax;\n        *(0x0061d4b8) = rax;\n        goto label_1;\n    }\n    *((rsp + 0x10)) = 0x41648a;\n    r15d = 0x415160;\n    r14d = 0x41648a;\nlabel_26:\n    rax = r15 + 8;\n    *((rsp + 0xf)) = 1;\n    *(rsp) = rax;\nlabel_2:\n    rdi = *((rsp + 0x10));\n    ecx = 2;\n    rsi = r14;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    r12b = (rax > 0) ? 1 : 0;\n    r12d = (int32_t) r12b;\n    if (r12d != 0) {\n        goto label_27;\n    }\n    edx = 5;\n    ebp = 0;\n    *(0x0061d4c9) = 1;\n    rax = dcgettext (0, \"standard input\");\n    r14 = rax;\nlabel_3:\n    edx = 2;\n    esi = 0;\n    edi = ebp;\n    rax = lseek ();\n    rbx = rax;\n    if (rax >= 0) {\n        eax = isatty (ebp);\n        if (eax == 0) {\n            goto label_28;\n        }\n    }\n    if (*(0x0061d330) == 0) {\n        goto label_29;\n    }\n    rbx = imp.__libc_start_main;\n    rdi = imp.__libc_start_main;\n    clearerr_unlocked ();\n    eax = fcn_004055d0 (rbx, 0, 0);\n    if (eax < 0) {\n        goto label_30;\n    }\n    eax = fileno (*(0x0061d328));\n    esi = 0;\n    edi = eax;\n    eax = ftruncate ();\n    if (eax < 0) {\n        goto label_30;\n    }\nlabel_8:\n    rax = imp.__libc_start_main;\n    r13 = imp.__libc_start_main;\n    ebx = 0;\n    *((rsp + 0x18)) = rax;\n    while (rax != 0) {\n        if (rax == -1) {\n            goto label_31;\n        }\n        rdi = imp.__libc_start_main;\n        rcx = r13;\n        rdx = rax;\n        esi = 1;\n        rax = fwrite_unlocked ();\n        if (r15 != rax) {\n            goto label_32;\n        }\n        rbx += r15;\n        rax = fcn_00404cb0 (ebp, *(0x0061d4b0), *(0x0061d4a8));\n        r15 = rax;\n    }\n    rdi = r13;\n    eax = fflush_unlocked ();\n    if (eax != 0) {\n        goto label_32;\n    }\n    if (rbx < 0) {\n        goto label_33;\n    }\n    eax = fileno (r13);\n    eax = fcn_004025f0 (eax, *((rsp + 0x18)), rbx);\n    ebx = eax;\nlabel_6:\n    if (r12d != 0) {\n        goto label_34;\n    }\nlabel_4:\n    rax = *(rsp);\n    r14 = *((rax - 8));\n    if (r14 != 0) {\n        goto label_2;\n    }\nlabel_9:\n    fcn_00402510 (0, 0);\n    if (*(0x0061d4c9) != 0) {\n        goto label_35;\n    }\nlabel_10:\n    eax = *((rsp + 0xf));\n    eax ^= 1;\n    eax = (int32_t) al;\n    return rax;\nlabel_27:\n    eax = 0;\n    eax = open (r14, 0, rdx);\n    if (eax >= 0) {\n        goto label_3;\n    }\n    rax = fcn_00404a40 (4, r14);\n    edx = 5;\nlabel_5:\n    rax = dcgettext (0, \"failed to open %s for reading\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    ebx = 0;\n    error (0, *(rax), rbx);\n    goto label_4;\nlabel_34:\n    eax = close (ebp);\n    if (eax == 0) {\n        goto label_4;\n    }\n    rax = fcn_00404b10 (0, 3, r14);\n    edx = 5;\n    esi = \"%s: read error\";\n    goto label_5;\nlabel_31:\n    rax = fcn_00404b10 (0, 3, r14);\n    edx = 5;\n    rbx = rax;\n    do {\nlabel_7:\n        rax = dcgettext (0, \"%s: read error\");\n        r13 = rax;\n        rax = errno_location ();\n        rcx = rbx;\n        eax = 0;\n        ebx = 0;\n        error (0, *(rax), r13);\n        goto label_6;\nlabel_30:\n        rax = fcn_00404a40 (4, *(0x0061d330));\n        edx = 5;\n        esi = \"failed to rewind stream for %s\";\n        rbx = rax;\n    } while (1);\nlabel_32:\n    rax = fcn_00404b10 (0, 3, *((rsp + 0x18)));\n    edx = 5;\n    esi = \"%s: write error\";\n    rbx = rax;\n    goto label_7;\nlabel_29:\n    rax = getenv (\"TMPDIR\");\n    rbx = rax;\n    while (1) {\n        rax = fcn_00402f90 (rbx, \"tacXXXXXX\", 0);\n        rdi = rax;\n        *(0x0061d330) = rax;\n        eax = fcn_00404d10 (rdi);\n        r13d = eax;\n        if (eax < 0) {\n            goto label_36;\n        }\n        edi = r13d;\n        esi = 0x414cf4;\n        rax = fdopen ();\n        rdi = imp.__libc_start_main;\n        *(0x0061d328) = rax;\n        if (rax == 0) {\n            goto label_37;\n        }\n        unlink (rdi);\n        goto label_8;\nlabel_28:\n        eax = fcn_004025f0 (ebp, r14, rbx);\n        ebx = eax;\n        goto label_6;\n        ebx = \"/tmp\";\n    }\nlabel_25:\n    *((rsp + 0xf)) = 1;\n    goto label_9;\nlabel_35:\n    eax = close (0);\n    if (eax >= 0) {\n        goto label_10;\n    }\n    rax = errno_location ();\n    eax = 0;\n    rax = error (0, *(rax), 0x41648a);\n    *((rsp + 0xf)) = 0;\n    goto label_10;\nlabel_24:\n    rax = memcpy (rax, *(0x0061d4d0), r12 + 1);\n    rcx = rax;\n    rcx += r12;\n    *(0x0061d4b0) = rcx;\n    goto label_11;\nlabel_36:\n    rax = fcn_00404a40 (4, rbx);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"failed to create temporary file in %s\");\n    r13 = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    error (0, *(rax), r13);\n    do {\n        ebx = 0;\n        free (*(0x0061d330));\n        *(0x0061d330) = 0;\n        goto label_6;\nlabel_37:\n        rax = fcn_00404a40 (4, rdi);\n        edx = 5;\n        rbx = rax;\n        rax = dcgettext (0, \"failed to open %s for writing\");\n        *((rsp + 0x18)) = rax;\n        rax = errno_location ();\n        rcx = rbx;\n        eax = 0;\n        error (0, *(rax), *((rsp + 0x18)));\n        close (r13d);\n        unlink (*(0x0061d330));\n    } while (1);\nlabel_16:\n    rax = fcn_00402b70 (1);\nlabel_22:\n    *(0x0061d4a8) = rax;\n    fcn_00405590 ();\nlabel_18:\n    edx = 5;\n    rax = dcgettext (0, \"separator cannot be empty\");\n    eax = 0;\n    rax = error (1, 0, rax);\nlabel_19:\n    rcx = rax;\n    eax = 0;\n    error (1, 0, 0x415249);\nlabel_33:\n    ebx = 0;\n    goto label_6;\nlabel_23:\n    return fcn_00405590 ();\n}\n"
        },
        {
            "funcName": "fcn_0040245b",
            "funcStartAddr": "0x40245b",
            "funcEndAddr": "0x40247a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x40245b */\n#include <stdint.h>\n \nint32_t fcn_0040245b (void) {\n    eax = __progname;\n    if (rax != obj.__progname) {\n        eax = 0;\n        if (rax == 0) {\n            goto label_0;\n        }\n        edi = __progname;\n        void (*rax)() ();\n    }\nlabel_0:\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_004024b1",
            "funcStartAddr": "0x4024b1",
            "funcEndAddr": "0x402508",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4024b1 */\n#include <stdint.h>\n \nint64_t fcn_004024b1 (int32_t argc, func fini, func init, func main, func rtld_fini, void * stack_end, char ** ubp_av) {\n    rsi = argc;\n    r8 = fini;\n    rcx = init;\n    rdi = main;\n    r9 = rtld_fini;\n    xmm0 = stack_end;\n    rdx = ubp_av;\n    if (*(0x0061b308) != 0) {\n        goto label_0;\n    }\n    r12d = section..dtors;\n    ebx = 0x61ae48;\n    rbx -= section..dtors;\n    rbx >>= 3;\n    rbx--;\n    do {\n        rax = imp.__libc_start_main;\n        if (rax >= rbx) {\n            goto label_1;\n        }\n        rax++;\n        *(0x0061b310) = rax;\n        uint64_t (*r12 + rax*8)() ();\n    } while (1);\nlabel_1:\n    fcn_0040245b ();\n    *(0x0061b308) = 1;\n    return rax;\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00402508",
            "funcStartAddr": "0x402508",
            "funcEndAddr": "0x40259b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x402508 */\n#include <stdint.h>\n \nint64_t fcn_00402508 (void) {\n    do {\n        esi = __progname;\n        ecx = 2;\n        rsi -= obj.__progname;\n        rsi >>= 3;\n        rax = rsi;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rsi = rax;\n        if (rax != 0) {\n            eax = 0;\n            if (rax == 0) {\n                goto label_0;\n            }\n            edi = __progname;\n            void (*rax)() ();\n        }\nlabel_0:\n        return rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00402510",
            "funcStartAddr": "0x402510",
            "funcEndAddr": "0x4025ed",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x402510 */\n#include <stdint.h>\n \nvoid fcn_00402510 (int64_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = imp.__libc_start_main;\n    rsi -= rdi;\n    ebx = 0x2000;\n    rbx -= rdx;\n    if (rdi == 0) {\n        goto label_0;\n    }\n    r12 = rdi;\n    if (rsi < rbx) {\n        goto label_1;\n    }\n    do {\n        rbp -= rbx;\n        memcpy (rdx + 0x61b320, r12, rbx);\n        rcx = stdout;\n        edx = 0x2000;\n        r12 += rbx;\n        esi = 1;\n        edi = 0x61b320;\n        ebx = 0x2000;\n        fwrite_unlocked ();\n        edx = 0;\n        *(0x0061d320) = 0;\n    } while (rbp > 0x1fff);\n    rbx = rbp;\n    do {\n        memcpy (0x61b320, r12, rbp);\n        *(0x0061d320) = rbx;\n        return;\nlabel_0:\n        rcx = stdout;\n        esi = 1;\n        edi = 0x61b320;\n        fwrite_unlocked ();\n        *(0x0061d320) = 0;\n        return;\nlabel_1:\n        rdi = rdx + 0x61b320;\n        rbx = rdx + rsi;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_004025f0",
            "funcStartAddr": "0x4025f0",
            "funcEndAddr": "0x402b70",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4025f0 */\n#include <stdint.h>\n \nuint64_t fcn_004025f0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    char * s2;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_1fh;\n    int64_t var_20h;\n    int64_t var_28h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r14 = rdx;\n    r15 = imp.__libc_start_main;\n    rbp = imp.__libc_start_main;\n    *((rsp + 0x18)) = edi;\n    rax = r15 + 1;\n    ebx = *(r15);\n    *((rsp + 0x28)) = rsi;\n    *((rsp + 8)) = rax;\n    rax = imp.__libc_start_main;\n    r15 = imp.__libc_start_main;\n    r13 = rax - 1;\n    rax = rdx;\n    edx = 0;\n    rax = rdx:rax / rbp;\n    rdx = rdx:rax % rbp;\n    if (rdx == 0) {\n        goto label_13;\n    }\n    goto label_14;\n    do {\nlabel_0:\n        r14 -= rbp;\nlabel_13:\n        rax = fcn_00404cb0 (*((rsp + 0x18)), *(0x0061d4b0), rbp);\n        rbp = imp.__libc_start_main;\n        if (rax != 0) {\n            goto label_15;\n        }\n        if (r14 == 0) {\n            goto label_16;\n        }\n        rsi = rbp;\n        edi = *((rsp + 0x18));\n        edx = 1;\n        rsi = -rsi;\n        rax = lseek ();\n    } while (rax >= 0);\n    rax = fcn_00404b10 (0, 3, *((rsp + 0x28)));\n    edx = 5;\n    rax = dcgettext (0, \"%s: seek failed\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    rax = error (0, *(rax), r12);\n    rbp = imp.__libc_start_main;\n    goto label_0;\nlabel_15:\n    if (rax == rbp) {\n        goto label_12;\n    }\nlabel_8:\n    if (rbp == -1) {\n        goto label_17;\n    }\nlabel_6:\n    r12 = imp.__libc_start_main;\n    rax = imp.__libc_start_main;\n    *((rsp + 0x1f)) = 1;\n    rbp += r12;\n    rcx = rbp;\n    rcx -= r15;\n    rcx++;\n    if (rax == 0) {\n        rcx = rbp;\n    }\nlabel_5:\n    if (rax != 0) {\n        goto label_18;\n    }\n    do {\nlabel_4:\n        rdx = rcx;\n        r8d = 1;\n        rdx -= r12;\n        r8 -= rdx;\n        if (r8 > 1) {\n            goto label_19;\n        }\n        if (r8 == 1) {\n            goto label_20;\n        }\n        rcx = rdx - 1;\n        r9d = 0x61d340;\n        rax = fcn_00414120 (0x61d460, r12);\n        if (rax == -1) {\n            goto label_21;\n        }\n        if (rax == 0xfffffffffffffffe) {\n            goto label_22;\n        }\n        rax = imp.__libc_start_main;\n        r12 = imp.__libc_start_main;\n        rdx = *(rax);\n        rax = imp.__libc_start_main;\n        rax = *(rax);\n        r15 = r12 + rdx;\n        rax -= rdx;\n        *(0x0061d4b8) = rax;\nlabel_1:\n        if (r15 >= r12) {\n            goto label_23;\n        }\nlabel_3:\n        if (r14 == 0) {\n            goto label_24;\n        }\n        rax = imp.__libc_start_main;\n        rbp -= r12;\n        if (rax < rbp) {\n            rdx = imp.__libc_start_main;\n            rsi = rax + rax;\n            rdi = imp.__libc_start_main;\n            r15d = 1;\n            *(0x0061d4a8) = rsi;\n            rsi = rdx + rax*4 + 2;\n            if (rdx != 0) {\n                r15 = rdx;\n            }\n            *(0x0061d4a0) = rsi;\n            if (rsi < rdi) {\n                goto label_25;\n            }\n            rdi -= r15;\n            rax = fcn_004053a0 (r12, rsi);\n            rax += r15;\n            *(0x0061d4b0) = rax;\n            rax = imp.__libc_start_main;\n        }\n        if (r14 < rax) {\n            goto label_26;\n        }\n        r14 -= rax;\nlabel_9:\n        edi = *((rsp + 0x18));\n        edx = 0;\n        rsi = r14;\n        rax = lseek ();\n        if (rax < 0) {\n            goto label_27;\n        }\nlabel_11:\n        r12 = imp.__libc_start_main;\n        r15 = imp.__libc_start_main;\n        rcx = r12 + r15;\n        rbp += r15;\n        rbp += r12;\n        rax = memmove (rcx, r12, rbp);\n        edi = *((rsp + 0x18));\n        rdx = r15;\n        rsi = r12;\n        rcx = rax;\n        if (*(0x0061d4c0) == 0) {\n            rcx = rbp;\n        }\n        *((rsp + 0x10)) = rcx;\n        *((rsp + 0x20)) = rcx;\n        rax = fcn_00404cb0 (rdi, rsi, rdx);\n        rcx = *((rsp + 0x10));\n        if (rax != *(0x0061d4a8)) {\n            goto label_17;\n        }\n        rax = imp.__libc_start_main;\n        r12 = imp.__libc_start_main;\n    } while (rax == 0);\n    r15 = rcx - 1;\n    if (*((rcx - 1)) == bl) {\n        goto label_28;\n    }\n    do {\nlabel_2:\n        rcx = r15;\nlabel_18:\n        r15 = rcx - 1;\n    } while (*((rcx - 1)) != bl);\nlabel_28:\n    if (r13 == 0) {\n        goto label_1;\n    }\n    eax = strncmp (rcx, *((rsp + 8)), r13);\n    if (eax != 0) {\n        goto label_2;\n    }\n    if (r15 < r12) {\n        goto label_3;\n    }\nlabel_23:\n    if (*(0x0061d4c8) == 0) {\n        goto label_29;\n    }\n    rax = imp.__libc_start_main;\n    ecx = *((rsp + 0x1f));\n    rax += r15;\n    ecx ^= 1;\n    dl = (rbp != rax) ? 1 : 0;\n    cl |= dl;\n    *((rsp + 0x1f)) = cl;\n    if (cl != 0) {\n        goto label_30;\n    }\nlabel_10:\n    rax = imp.__libc_start_main;\n    rcx = r15;\n    if (rax == 0) {\n        goto label_4;\n    }\n    edx = 1;\n    rdx -= *(0x0061d4b8);\n    rcx += rdx;\n    goto label_5;\nlabel_7:\n    if (rax == -1) {\n        goto label_17;\n    }\n    r14 += rax;\n    if (*(0x0061d4a8) != rax) {\n        goto label_6;\n    }\nlabel_12:\n    rax = fcn_00404cb0 (*((rsp + 0x18)), *(0x0061d4b0), rbp);\n    if (rax != 0) {\n        goto label_7;\n    }\n    goto label_8;\nlabel_21:\n    r12 = imp.__libc_start_main;\nlabel_20:\n    r15 = r12 - 1;\n    goto label_1;\nlabel_26:\n    *(0x0061d4a8) = r14;\n    r14d = 0;\n    goto label_9;\nlabel_29:\n    rdi = r15;\n    fcn_00402510 (rdi, rbp);\n    r12 = imp.__libc_start_main;\n    goto label_10;\nlabel_27:\n    rax = fcn_00404b10 (0, 3, *((rsp + 0x28)));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"%s: seek failed\");\n    r15 = rax;\n    rax = errno_location ();\n    rcx = r12;\n    eax = 0;\n    rax = error (0, *(rax), r15);\n    goto label_11;\nlabel_30:\n    rdi = rax;\n    *((rsp + 0x10)) = rax;\n    fcn_00402510 (rdi, rbp);\n    rax = *((rsp + 0x10));\n    *((rsp + 0x1f)) = 0;\n    r12 = imp.__libc_start_main;\n    goto label_10;\nlabel_17:\n    rax = fcn_00404b10 (0, 3, *((rsp + 0x28)));\n    edx = 5;\n    rax = dcgettext (0, \"%s: read error\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    eax = error (0, *(rax), rbx);\n    eax = 0;\n    return rax;\nlabel_16:\n    if (rbp == 0) {\n        goto label_12;\n    }\n    ebp = 0;\n    goto label_6;\nlabel_24:\n    fcn_00402510 (r12, rbp);\n    eax = 1;\n    return rax;\nlabel_14:\n    r14 -= rdx;\n    edx = 0;\n    rsi = r14;\n    rax = lseek ();\n    if (rax >= 0) {\n        goto label_13;\n    }\n    rax = fcn_00404b10 (0, 3, *((rsp + 0x28)));\n    edx = 5;\n    rax = dcgettext (0, \"%s: seek failed\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    error (0, *(rax), r12);\n    rbp = imp.__libc_start_main;\n    goto label_13;\nlabel_19:\n    edx = 5;\n    rax = dcgettext (0, \"record too large\");\n    eax = 0;\n    error (1, 0, rax);\nlabel_25:\n    fcn_00405590 ();\nlabel_22:\n    edx = 5;\n    rax = dcgettext (0, \"error in regular expression search\");\n    eax = 0;\n    error (1, 0, rax);\n}\n"
        },
        {
            "funcName": "fcn_00402b70",
            "funcStartAddr": "0x402b70",
            "funcEndAddr": "0x402ecd",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x402b70 */\n#include <stdint.h>\n \nuint64_t fcn_00402b70 (int64_t arg1) {\n    char * var_8h;\n    int64_t var_10h;\n    char * var_18h;\n    char * var_20h;\n    char * var_28h;\n    char * var_30h;\n    char * var_38h;\n    char * var_40h;\n    char * var_48h;\n    char * var_50h;\n    char * var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    rdi = arg1;\n    edx = 5;\n    ebx = edi;\n    rbp = imp.__libc_start_main;\n    if (edi != 0) {\n        rax = dcgettext (0, \"Try '%s --help' for more information.\\n\");\n        rdi = stderr;\n        rcx = rbp;\n        esi = 1;\n        rdx = rax;\n        eax = 0;\n        fprintf_chk ();\nlabel_0:\n        exit (ebx);\n    }\n    rax = dcgettext (0, \"Usage: %s [OPTION]... [FILE]...\\n\");\n    rdx = rbp;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"Write each FILE to standard output, last line first.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nWith no FILE, or when FILE is -, read standard input.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nMandatory arguments to long options are mandatory for short options too.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -b, --before             attach the separator before instead of after\\n  -r, --regex              interpret the separator as a regular expression\\n  -s, --separator=STRING   use STRING as the separator instead of newline\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --help     display this help and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --version  output version information and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    *(rsp) = 0x414bf8;\n    rax = rsp;\n    *((rsp + 8)) = \"test invocation\";\n    *((rsp + 0x10)) = 0x414c72;\n    *((rsp + 0x18)) = \"Multi-call invocation\";\n    *((rsp + 0x20)) = \"sha224sum\";\n    *((rsp + 0x28)) = \"sha2 utilities\";\n    *((rsp + 0x30)) = \"sha256sum\";\n    *((rsp + 0x38)) = \"sha2 utilities\";\n    *((rsp + 0x40)) = \"sha384sum\";\n    *((rsp + 0x48)) = \"sha2 utilities\";\n    *((rsp + 0x50)) = \"sha512sum\";\n    *((rsp + 0x58)) = \"sha2 utilities\";\n    *((rsp + 0x60)) = 0;\n    *((rsp + 0x68)) = 0;\n    do {\n        rax += 0x10;\n        rdi = *(rax);\n        if (rdi == 0) {\n            goto label_2;\n        }\n        esi = 0x414bf4;\n        ecx = 4;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        dl = (rdi > 0) ? 1 : 0;\n    } while (dl != 0);\nlabel_2:\n    rbp = *((rax + 8));\n    edx = 5;\n    esi = \"\\n%s online help: <%s>\\n\";\n    edi = 0;\n    if (rbp == 0) {\n        goto label_3;\n    }\n    rax = dcgettext (rdi, rsi);\n    edi = 1;\n    ecx = \"https://www.gnu.org/software/coreutils/\";\n    edx = \"GNU coreutils\";\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rax = setlocale (5, 0);\n    if (rax != 0) {\n        eax = strncmp (rax, 0x414c7c, 3);\n        if (eax != 0) {\n            goto label_4;\n        }\n    }\nlabel_1:\n    edx = 5;\n    r12d = 0x414c14;\n    rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n    ecx = 0x414bf4;\n    edx = \"https://www.gnu.org/software/coreutils/\";\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    ecx = 0x4164a7;\n    r12 = rcx;\n    while (1) {\n        edx = 5;\n        rax = dcgettext (0, \"or available locally via: info '(coreutils) %s%s'\\n\");\n        rcx = r12;\n        rdx = rbp;\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        goto label_0;\nlabel_3:\n        rax = dcgettext (rdi, rsi);\n        edi = 1;\n        ecx = \"https://www.gnu.org/software/coreutils/\";\n        edx = \"GNU coreutils\";\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        rax = setlocale (5, 0);\n        if (rax != 0) {\n            eax = strncmp (rax, 0x414c7c, 3);\n            if (eax != 0) {\n                goto label_5;\n            }\n        }\n        edx = 5;\n        rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n        ecx = 0x414bf4;\n        edx = \"https://www.gnu.org/software/coreutils/\";\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        r12d = 0x414c14;\n        printf_chk ();\n    }\nlabel_5:\nlabel_4:\n    edx = 5;\n    rax = dcgettext (0, \"Report %s translation bugs to <https://translationproject.org/team/>\\n\");\n    edx = 0x414bf4;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00402f90",
            "funcStartAddr": "0x402f90",
            "funcEndAddr": "0x403069",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x402f90 */\n#include <stdint.h>\n \nuint64_t fcn_00402f90 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    uint32_t var_fh;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13 = rdi;\n    r12 = rsi;\n    *(rsp) = rdx;\n    rax = fcn_00414220 (rdi);\n    r14 = rax;\n    rax = fcn_00414280 (rax);\n    rbp -= r13;\n    rbx = rax;\n    rbp += rax;\n    if (rax != 0) {\n        bl = (*((r14 + rax - 1)) != 0x2f) ? 1 : 0;\n        ebx = (int32_t) bl;\n    }\n    eax = *(r12);\n    *((rsp + 0xf)) = al;\n    while (*(r12) != 0x2f) {\n        rax = strlen (r12);\n        rdi += rax;\n        r14 = rax;\n        rax = malloc (rbx + rbp + 1);\n        r15 = rax;\n        if (rax != 0) {\n            rdi = rax;\n            rdx = rbp;\n            rsi = r13;\n            mempcpy ();\n            rcx = *(rsp);\n            *(rax) = 0x2f;\n            rdi = rax + rbx;\n            if (rcx != 0) {\n                eax = 0;\n                rdx = rdi;\n                al = (*((rsp + 0xf)) == 0x2f) ? 1 : 0;\n                rdx -= rax;\n                *(rcx) = rdx;\n            }\n            rdx = r14;\n            rsi = r12;\n            mempcpy ();\n            *(rax) = 0;\n        }\n        rax = r15;\n        return rax;\nlabel_0:\n        r12++;\n    }\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00403070",
            "funcStartAddr": "0x403070",
            "funcEndAddr": "0x403109",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x403070 */\n#include <stdint.h>\n \nuint64_t fcn_00403070 (char ** arg1) {\n    rdi = arg1;\n    if (rdi != 0) {\n        rbx = rdi;\n        rax = strrchr (rdi, 0x2f);\n        if (rax != 0) {\n            r8 = rax + 1;\n            rdx = r8;\n            rdx -= rbx;\n            if (rdx <= 6) {\n                goto label_0;\n            }\n            rsi = rax - 6;\n            edi = \"/.libs/\";\n            ecx = 7;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (rdx > 6) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            edi = 0x415290;\n            ecx = 3;\n            rsi = r8;\n            rbx = r8;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (dl > 0) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            rbx = rax + 4;\n            *(obj.__progname) = rbx;\n        }\nlabel_0:\n        *(0x0061d4e8) = rbx;\n        *(obj.program_invocation_name) = rbx;\n        return rax;\n    }\n    fwrite (\"A NULL argv[0] was passed through an exec system call.\\n\", 1, 0x37, *(obj.stderr));\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_00403110",
            "funcStartAddr": "0x403110",
            "funcEndAddr": "0x403202",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x403110 */\n#include <stdint.h>\n \nuint64_t fcn_00403110 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edx = 5;\n    r12d = esi;\n    rsi = rdi;\n    rax = dcgettext (0, rsi);\n    rbx = rax;\n    while (1) {\nlabel_0:\n        rax = rbx;\n        return rax;\n        rax = fcn_00414380 ();\n        edx = *(rax);\n        edx &= 0xffffffdf;\n        if (dl != 0x55) {\n            goto label_1;\n        }\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x54) {\n            goto label_2;\n        }\n        edx = *((rax + 2));\n        edx &= 0xffffffdf;\n        if (dl != 0x46) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x2d) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0) {\n            goto label_2;\n        }\n        eax = 0x415296;\n        ebx = 0x4152a1;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n    }\nlabel_1:\n    if (dl == 0x47) {\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x42) {\n            goto label_2;\n        }\n        if (*((rax + 2)) != 0x31) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0x33) {\n            goto label_2;\n        }\n        if (*((rax + 6)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 7)) != 0) {\n            goto label_2;\n        }\n        eax = 0x41529a;\n        ebx = 0x41529d;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n        goto label_0;\n    }\nlabel_2:\n    eax = 0x416477;\n    ebx = 0x415294;\n    if (r12d != 9) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00403210",
            "funcStartAddr": "0x403210",
            "funcEndAddr": "0x405991",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x403210 */\n#include <stdint.h>\n \nuint64_t fcn_00403210 (int64_t arg_e8h_3, uint32_t arg_e8h_2, int64_t arg_e8h, char * arg_e0h, int64_t arg1, char * arg2, char * arg3, size_t * arg4, int64_t arg5, int64_t arg6) {\n    size_t * var_8h;\n    size_t * var_10h;\n    uint32_t var_1fh;\n    char * s;\n    size_t n;\n    size_t * var_30h;\n    size_t * var_38h;\n    size_t var_40h;\n    size_t var_48h;\n    void * s2;\n    char * var_58h;\n    uint32_t var_60h;\n    int64_t var_68h;\n    uint32_t var_6ch;\n    char * var_6dh;\n    int64_t var_6eh;\n    int64_t var_6fh;\n    int64_t var_70h;\n    int64_t var_78h;\n    wint_t wc;\n    mbstate_t * ps;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    do {\n        /* [13] -r-x section size 77560 named .text */\n        abort ();\nlabel_5:\n        r15 = rdi;\n        r14 = rsi;\n        r13d = r8d;\n        *((rsp + 0x20)) = rdx;\n        *((rsp + 8)) = rcx;\n        *((rsp + 0x68)) = r9d;\n        rax = ctype_get_mb_cur_max ();\n        ebp &= 2;\n        *((rsp + 0x60)) = rax;\n        rsp + 0x6c = (ebp != 0) ? 1 : 0;\n    } while (r13d > 0xa);\n    eax = r13d;\n    r11 = *((rsp + 8));\n    /* switch table (11 cases) at 0x415300 */\nlabel_30:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    r13d = 2;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x416477;\nlabel_21:\n    r9 = r11;\n    r12d = 0;\n    r11d = r13d;\n    do {\nlabel_28:\n        r13b = (r9 != r12) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            r13b = (*((rax + r12)) != 0) ? 1 : 0;\n        }\n        if (r13b == 0) {\n            goto label_47;\n        }\n        rdi = *((rsp + 0x20));\n        al = (r11d != 2) ? 1 : 0;\n        al &= *((rsp + 8));\n        r8 = rdi + r12;\n        *((rsp + 0x10)) = al;\n        if (al == 0) {\n            goto label_48;\n        }\n        rax = *((rsp + 0x28));\n        if (rax == 0) {\n            goto label_49;\n        }\n        rbp = r12 + rax;\n        if (r9 == -1) {\n            if (rax <= 1) {\n                goto label_50;\n            }\n            *((rsp + 0x40)) = r11d;\n            *((rsp + 0x38)) = r10b;\n            *((rsp + 0x30)) = r8;\n            rax = strlen (rdi);\n            r11d = *((rsp + 0x40));\n            r10d = *((rsp + 0x38));\n            r8 = *((rsp + 0x30));\n            r9 = rax;\n        }\nlabel_50:\n        if (rbp > r9) {\n            goto label_49;\n        }\n        rdi = r8;\n        *((rsp + 0x48)) = r11d;\n        *((rsp + 0x40)) = r9;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        eax = memcmp (rdi, *((rsp + 0x50)), *((rsp + 0x28)));\n        r8 = *((rsp + 0x30));\n        r10d = *((rsp + 0x38));\n        r9 = *((rsp + 0x40));\n        r11d = *((rsp + 0x48));\n        if (eax != 0) {\n            goto label_49;\n        }\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_51;\n        }\n        ebp = *(r8);\n        if (bpl > 0x7e) {\n            goto label_52;\n        }\n        eax = (int32_t) bpl;\n        /* switch table (127 cases) at 0x415358 */\n        *((rsp + 0x10)) = 0;\n        al = (r9 != 1) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            al = (*((rax + 1)) != 0) ? 1 : 0;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        if (al != 0) {\n            goto label_7;\n        }\nlabel_17:\n        if (r12 != 0) {\n            goto label_7;\n        }\nlabel_18:\n        if (*((rsp + 0x6c)) != 0) {\n            if (dl != 0) {\n                goto label_53;\n            }\n        }\nlabel_2:\n        eax = *((rsp + 8));\n        eax ^= 1;\n        eax |= edx;\n        eax ^= 1;\n        al |= *((rsp + 0x6c));\n        if (al == 0) {\n            goto label_11;\n        }\nlabel_24:\n        eax = 0;\nlabel_10:\n        if (*((rsp + 0xd0)) == 0) {\n            goto label_11;\n        }\n        edx = ebp;\n        rcx = *((rsp + 0xd0));\n        dl >>= 5;\n        edx = (int32_t) dl;\n        edx = *((rcx + rdx*4));\n        ecx = ebp;\n        edx >>= cl;\n        edx &= 1;\n        if (edx == 0) {\n            goto label_11;\n        }\n        dl = (r11d == 2) ? 1 : 0;\nlabel_0:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_54;\n        }\nlabel_4:\n        eax = r10d;\n        eax ^= 1;\n        al &= dl;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rdx = rbx + 1;\n            if (rdx < r14) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rdx = rbx + 2;\n            if (rdx < r14) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\nlabel_9:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n        r12++;\nlabel_1:\n        if (rbx < r14) {\n            *((r15 + rbx)) = bpl;\n        }\n        edi = *((rsp + 0x1f));\n        rbx++;\n        eax = 0;\n        if (r13b == 0) {\n            edi = eax;\n        }\n        *((rsp + 0x1f)) = dil;\n    } while (1);\nlabel_3:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    if (r14 == 0) {\n        goto label_56;\n    }\n    edx = 0;\n    if (*((rsp + 0x58)) != 0) {\n        goto label_56;\n    }\nlabel_27:\n    *((rsp + 0x6d)) = r13b;\n    rbx += 3;\n    eax = 0;\n    r10d = 0;\n    *((rsp + 0x58)) = r14;\n    r14 = rdx;\nlabel_11:\n    dl = (r11d == 2) ? 1 : 0;\n    if (*((rsp + 0x10)) != 0) {\n        goto label_0;\n    }\n    eax ^= 1;\n    r12++;\n    eax &= r10d;\nlabel_16:\n    if (al == 0) {\n        goto label_1;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x27;\n    }\n    rbx += 2;\n    r10d = 0;\n    goto label_1;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_57;\n    }\n    if (r11d == 5) {\n        goto label_58;\n    }\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_3;\n    }\n    *((rsp + 0x6d)) = r13b;\n    edx = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\nlabel_15:\n    edx = *((rsp + 8));\n    dl &= *((rsp + 0x6c));\n    ecx = 0x5c;\n    al = (*((rsp + 0x28)) != 0) ? 1 : 0;\n    dl &= al;\n    if (dl != 0) {\n        goto label_59;\n    }\nlabel_8:\n    if (*((rsp + 8)) != 0) {\n        goto label_60;\n    }\nlabel_7:\n    r13d = 0;\n    goto label_2;\nlabel_6:\n    edx = 0;\n    r13d = 0;\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_4;\n    }\nlabel_54:\n    r13d = r11d;\n    eax = edx;\n    r11 = r9;\nlabel_42:\nlabel_12:\n    eax = 4;\n    if (*((rsp + 8)) != 0) {\n        r13d = eax;\n    }\nlabel_43:\n    r9d &= 0xfffffffd;\n    rax = fcn_00403210 (r15, r14, *((rsp + 0x40)), r11, r13d, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\nlabel_44:\n    rax = rbx;\n    return rax;\n    goto label_6;\n    *((rsp + 0x10)) = 0;\n    edx = 0;\n    goto label_7;\n    *((rsp + 0x10)) = 0;\n    ecx = 0x72;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    do {\nlabel_20:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_61;\n        }\nlabel_34:\n        r13d = 0;\n        goto label_9;\n    } while (1);\nlabel_14:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_62;\n    }\n    *((rsp + 0x10)) = 0;\n    eax = r10d;\n    dl = (r11d == 2) ? 1 : 0;\n    eax ^= 1;\n    al &= dl;\n    if (al == 0) {\n        goto label_63;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rcx = rbx + 1;\n    if (r14 > rcx) {\n        *((r15 + rbx + 1)) = 0x24;\n    }\n    rcx = rbx + 2;\n    if (r14 > rcx) {\n        *((r15 + rbx + 2)) = 0x27;\n    }\n    rcx = rbx + 3;\n    if (r14 <= rcx) {\n        goto label_64;\n    }\nlabel_26:\n    *((r15 + rcx)) = 0x5c;\n    r10d = eax;\nlabel_25:\n    rbx = rcx + 1;\n    if (r11d == 2) {\n        goto label_65;\n    }\n    rax = r12 + 1;\n    if (rax < r9) {\n        rax = *((rsp + 0x20));\n        eax = *((rax + r12 + 1));\n        *((rsp + 0x30)) = al;\n        eax -= 0x30;\n        if (al <= 9) {\n            goto label_66;\n        }\n    }\nlabel_35:\n    eax = *((rsp + 8));\n    eax ^= 1;\n    al |= dl;\n    eax = r13d;\n    r13d = 0;\n    if (al == 0) {\n        goto label_10;\n    }\n    goto label_11;\nlabel_19:\n    *((rsp + 0x10)) = 0;\n    do {\nlabel_52:\n        if (*((rsp + 0x60)) != 1) {\n            goto label_67;\n        }\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r9;\n        *((rsp + 0x30)) = r10b;\n        rax = ctype_b_loc ();\n        edx = (int32_t) bpl;\n        r10d = *((rsp + 0x30));\n        r9 = *((rsp + 0x38));\n        rax = *(rax);\n        r11d = *((rsp + 0x40));\n        edi = 1;\n        eax = *((rax + rdx*2));\n        ax &= 0x4000;\n        r13b = (ax != 0) ? 1 : 0;\n        dl = (ax == 0) ? 1 : 0;\n        dl &= *((rsp + 8));\nlabel_37:\n        if (dl != 0) {\n            goto label_68;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        goto label_2;\nlabel_48:\n        ebp = *(r8);\n    } while (bpl > 0x7e);\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x415750 */\n    ecx = 0x6e;\nlabel_13:\n    eax = *((rsp + 0x6c));\n    dl = (r11d == 2) ? 1 : 0;\n    al &= dl;\n    *((rsp + 0x10)) = al;\n    if (al == 0) {\n        goto label_8;\n    }\nlabel_53:\n    r11 = r9;\n    r13d = 2;\n    goto label_12;\n    ecx = 0x74;\n    goto label_13;\n    ecx = 0x62;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x61;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    if (*((rsp + 8)) != 0) {\n        goto label_14;\n    }\n    if ((*((rsp + 0x68)) & 1) != 0) {\n        goto label_69;\n    }\n    *((rsp + 0x10)) = 0;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    ebp = 0;\n    goto label_2;\n    if (r11d != 2) {\n        goto label_15;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_17;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_18;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_18;\n    ecx = 0x72;\n    goto label_13;\n    ecx = 0x66;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x76;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\nlabel_49:\n    ebp = *(r8);\n    if (bpl > 0x7e) {\n        goto label_19;\n    }\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x415b48 */\n    eax = 0;\n    do {\nlabel_31:\n        r13d = *((rsp + 0x10));\n        *((rsp + 0x10)) = al;\n        eax = 0;\n        goto label_10;\n        eax = 0;\nlabel_32:\n        if (r12 != 0) {\n            goto label_70;\n        }\n        r13d = *((rsp + 0x10));\n        edx = 0;\n        *((rsp + 0x10)) = al;\n        goto label_2;\n        eax = 0;\nlabel_33:\n    } while (1);\n    goto label_6;\n    goto label_20;\nlabel_47:\n    r13d = r11d;\n    r11 = r9;\n    dl = (r13d == 2) ? 1 : 0;\n    if (rbx == 0) {\n        if ((*((rsp + 0x6c)) & dl) != 0) {\n            goto label_71;\n        }\n    }\n    eax = *((rsp + 0x6c));\n    eax ^= 1;\n    dl &= al;\n    if (dl == 0) {\n        goto label_72;\n    }\n    if (*((rsp + 0x6d)) == 0) {\n        goto label_45;\n    }\n    if (*((rsp + 0x1f)) != 0) {\n        goto label_73;\n    }\n    al = (r14 == 0) ? 1 : 0;\n    dl = (*((rsp + 0x58)) != 0) ? 1 : 0;\n    al &= dl;\n    if (al == 0) {\n        goto label_74;\n    }\n    r14 = *((rsp + 0x58));\nlabel_46:\n    *(r15) = 0x27;\n    r13d = 2;\n    ebx = 1;\n    *((rsp + 0x50)) = 0x416477;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x6c)) = 0;\n    *((rsp + 0x6d)) = al;\n    goto label_21;\nlabel_58:\n    if ((*((rsp + 0x68)) & 4) != 0) {\n        rax = r12 + 2;\n        if (rax >= r9) {\n            goto label_39;\n        }\n        rsi = *((rsp + 0x20));\n        if (*((rsi + r12 + 1)) == 0x3f) {\n            goto label_75;\n        }\n    }\nlabel_39:\n    edx = 0;\n    r13d = 0;\n    goto label_2;\nlabel_57:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r13d = 0;\n    eax = 0;\n    goto label_11;\nlabel_67:\n    *((rsp + 0x88)) = 0;\n    if (r9 == -1) {\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        rax = strlen (*((rsp + 0x20)));\n        r11d = *((rsp + 0x40));\n        r10d = *((rsp + 0x38));\n        r8 = *((rsp + 0x30));\n        r9 = rax;\n    }\n    eax = 0;\n    *((rsp + 0x70)) = rbx;\n    *((rsp + 0x78)) = r8;\n    rbx = rax;\n    *((rsp + 0x6e)) = r10b;\n    *((rsp + 0x6f)) = bpl;\n    *((rsp + 0x40)) = r15;\n    *((rsp + 0x48)) = r14;\n    *((rsp + 0x30)) = r9;\n    *((rsp + 0x38)) = r11d;\n    while (*((rsp + 0x38)) != 2) {\nlabel_22:\n        eax = iswprint (*((rsp + 0x84)));\n        rdi = rsp + 0x88;\n        eax = 0;\n        if (eax == 0) {\n            r13d = eax;\n        }\n        rbx += r14;\n        eax = mbsinit (rdi);\n        if (eax != 0) {\n            goto label_76;\n        }\n        rax = *((rsp + 0x20));\n        r15 = r12 + rbx;\n        rbp = rax + r15;\n        rdx -= r15;\n        rax = fcn_00406400 (rsp + 0x84, rbp, *((rsp + 0x30)), rsp + 0x88);\n        r14 = rax;\n        if (rax == 0) {\n            goto label_76;\n        }\n        if (rax == -1) {\n            goto label_77;\n        }\n        if (rax == 0xfffffffffffffffe) {\n            goto label_78;\n        }\n    }\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_22;\n    }\n    if (rax == 1) {\n        goto label_22;\n    }\n    rsi = *((rsp + 0x20));\n    rax = rsi + r15 + 1;\n    rsi += r14;\n    rsi += r15;\n    goto label_79;\nlabel_23:\n    rax++;\n    if (rsi == rax) {\n        goto label_22;\n    }\nlabel_79:\n    ecx = *(rax);\n    ecx -= 0x5b;\n    if (cl > 0x21) {\n        goto label_23;\n    }\n    edx = 1;\n    rdx <<= cl;\n    rcx = 0x20000002b;\n    if ((rdx & rcx) == 0) {\n        goto label_23;\n    }\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r13d = 2;\n    r11 = *((rsp + 0x30));\n    goto label_12;\nlabel_70:\n    *((rsp + 0x10)) = al;\n    r13d = 0;\n    goto label_24;\nlabel_63:\n    rcx = rbx;\n    if (r14 <= rbx) {\n        goto label_25;\n    }\n    eax = r10d;\n    goto label_26;\nlabel_56:\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x5c;\n    }\n    rax = rbx + 2;\n    if (r14 <= rax) {\n        goto label_80;\n    }\n    rdx = r14;\n    *((r15 + rbx + 2)) = 0x27;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_69:\n    r12++;\n    goto label_28;\nlabel_68:\n    edx = *((rsp + 8));\n    r13d = 0;\nlabel_36:\n    rcx = rdi;\n    *((rsp + 0x30)) = r13b;\n    esi = 0;\n    r13d = *((rsp + 0x6c));\n    rcx += r12;\n    edi = *((rsp + 0x10));\n    r8 = *((rsp + 0x20));\n    while (dl != 0) {\n        al = (r11d == 2) ? 1 : 0;\n        if (r13b != 0) {\n            goto label_81;\n        }\n        esi = r10d;\n        esi ^= 1;\n        al &= sil;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rsi = rbx + 1;\n            if (r14 > rsi) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rsi = rbx + 2;\n            if (r14 > rsi) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 6;\n            eax += 0x30;\n            *((r15 + rbx + 1)) = al;\n        }\n        rax = rbx + 2;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 3;\n            eax &= 7;\n            eax += 0x30;\n            *((r15 + rbx + 2)) = al;\n        }\n        ebp &= 7;\n        r12++;\n        rbx += 3;\n        ebp += 0x30;\n        if (r12 >= rcx) {\n            goto label_82;\n        }\n        esi = edx;\nlabel_29:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = bpl;\n        }\n        ebp = *((r8 + r12));\n        rbx++;\n    }\n    eax = esi;\n    eax ^= 1;\n    eax &= r10d;\n    if (dil != 0) {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n    }\n    r12++;\n    if (r12 < rcx) {\n        if (al == 0) {\n            goto label_83;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x27;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            *((r15 + rbx + 1)) = 0x27;\n        }\n        rbx += 2;\n        edi = 0;\n        r10d = 0;\n        goto label_29;\n    }\n    r13d = *((rsp + 0x30));\n    goto label_16;\nlabel_81:\n    r13d = r11d;\n    *((rsp + 8)) = al;\n    r11 = r9;\n    goto label_12;\nlabel_64:\n    rbx += 4;\n    r10d = eax;\n    r13d = 0;\n    goto label_11;\n    if (ebp != 0) {\n        goto label_30;\n    }\n    *((rsp + 8)) = 1;\n    do {\n        if (r14 != 0) {\n            goto label_84;\n        }\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 1;\n        r13d = 2;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x416477;\n        goto label_21;\n        if (ebp != 0) {\n            goto label_85;\n        }\n        if (r14 == 0) {\n            goto label_86;\n        }\n        *(r15) = 0x22;\n        r10d = 0;\n        *((rsp + 0x1f)) = 1;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\nlabel_38:\n        *((rsp + 0x6c)) = 0;\n        ebx = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x415294;\n        goto label_21;\n        if (r14 != 0) {\n            *((rsp + 8)) = r11;\n            rax = fcn_00403110 (0x4152a5, r13d);\n            *((rsp + 0xd8)) = rax;\n            rax = fcn_00403110 (0x416477, r13d);\n            r11 = *((rsp + 8));\n            *((rsp + 0xe0)) = rax;\n        }\n        ebx = 0;\n        if (ebp == 0) {\n            goto label_87;\n        }\nlabel_41:\n        *((rsp + 0x10)) = r11;\n        rax = strlen (*((rsp + 0xe0)));\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        r11 = *((rsp + 0x10));\n        *((rsp + 0x28)) = rax;\n        rax = *((rsp + 0xe0));\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x50)) = rax;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 8)) = 1;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 0;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 5;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x415294;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 2;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x416477;\n        goto label_21;\n        eax = *((rsp + 0x10));\n        goto label_31;\n        eax = *((rsp + 0x10));\n        goto label_32;\n        eax = *((rsp + 0x10));\n        goto label_33;\n        edx = 0;\n        r13d = 0;\n        goto label_4;\n        goto label_34;\nlabel_66:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x30;\n        }\n        rax = rcx + 2;\n        if (r14 > rax) {\n            *((r15 + rcx + 2)) = 0x30;\n        }\n        rbx = rcx + 3;\n        goto label_35;\n        if (ebp != 0) {\n            goto label_88;\n        }\n        *((rsp + 8)) = 0;\n    } while (1);\nlabel_82:\n    r13d = *((rsp + 0x30));\n    goto label_1;\nlabel_59:\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\nlabel_83:\n    edi = 0;\n    goto label_29;\nlabel_76:\n    rdi = rbx;\n    edx = r13d;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    edx ^= 1;\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    dl &= *((rsp + 8));\nlabel_40:\n    if (rdi > 1) {\n        goto label_36;\n    }\n    goto label_37;\nlabel_86:\n    *((rsp + 0x58)) = 0;\n    r10d = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x6d)) = 0;\n    goto label_38;\nlabel_65:\n    eax = r13d;\n    r13d = 0;\n    goto label_11;\nlabel_75:\n    ebp = *((rsi + rax));\n    if (bpl > 0x3e) {\n        goto label_39;\n    }\n    rsi = 0x7000a38200000000;\n    if (((rsi >> rbp) & 1) >= 0) {\n        goto label_39;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_51;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x3f;\n    }\n    rdx = rbx + 1;\n    if (r14 > rdx) {\n        *((r15 + rbx + 1)) = 0x22;\n    }\n    rdx = rbx + 2;\n    if (r14 > rdx) {\n        *((r15 + rbx + 2)) = 0x22;\n    }\n    rdx = rbx + 3;\n    if (r14 > rdx) {\n        *((r15 + rbx + 3)) = 0x3f;\n    }\n    rbx += 4;\n    edx = 0;\n    r13d = 0;\n    r12 = rax;\n    goto label_35;\nlabel_77:\n    rdi = rbx;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r13d = 0;\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    edx = *((rsp + 8));\n    goto label_40;\nlabel_78:\n    r9 = *((rsp + 0x30));\n    rsi = r15;\n    rcx = rbp;\n    rax = rbx;\n    rdi = rbx;\n    r8 = *((rsp + 0x78));\n    r10d = *((rsp + 0x6e));\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r11d = *((rsp + 0x38));\n    if (rsi >= r9) {\n        goto label_89;\n    }\n    if (*(rcx) != 0) {\n        goto label_90;\n    }\n    goto label_89;\n    do {\n        if (*((r8 + rax)) == 0) {\n            goto label_91;\n        }\nlabel_90:\n        rax++;\n        rdx = r12 + rax;\n    } while (rdx < r9);\nlabel_91:\n    rdi = rax;\nlabel_89:\n    edx = *((rsp + 8));\n    r13d = 0;\n    goto label_40;\nlabel_87:\n    rax = *((rsp + 0xd8));\n    eax = *(rax);\n    if (al == 0) {\n        goto label_41;\n    }\n    rdx = *((rsp + 0xd8));\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = al;\n        }\n        rbx++;\n        eax = *((rdx + rbx));\n    } while (al != 0);\n    goto label_41;\nlabel_61:\n    r13d = r11d;\n    eax = 0;\n    r11 = r9;\n    goto label_42;\nlabel_85:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 1;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x415294;\n    goto label_21;\nlabel_51:\n    r13d = r11d;\n    r11 = r9;\n    goto label_43;\nlabel_72:\n    edx = eax;\nlabel_45:\n    rax = *((rsp + 0x50));\n    if (rax == 0) {\n        goto label_92;\n    }\n    if (dl == 0) {\n        goto label_92;\n    }\n    edx = *(rax);\n    if (dl == 0) {\n        goto label_92;\n    }\n    rax -= rbx;\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = dl;\n        }\n        rbx++;\n        edx = *((rax + rbx));\n    } while (dl != 0);\nlabel_92:\n    if (r14 <= rbx) {\n        goto label_44;\n    }\n    *((r15 + rbx)) = 0;\n    goto label_44;\nlabel_55:\n    r13d = r11d;\n    r11 = r9;\n    goto label_12;\nlabel_62:\n    r13d = r11d;\n    r11 = r9;\n    rsp + 8 = (r13d == 2) ? 1 : 0;\n    goto label_12;\nlabel_73:\n    rax = fcn_00403210 (r15, *((rsp + 0x78)), *((rsp + 0x40)), r11, 5, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\n    goto label_44;\nlabel_74:\n    edx = *((rsp + 0x6d));\n    goto label_45;\nlabel_71:\n    r13d = 2;\n    goto label_12;\nlabel_84:\n    r10d = 0;\n    eax = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x58)) = 0;\n    goto label_46;\nlabel_80:\n    rdx = r14;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_88:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x416477;\n    goto label_21;\nlabel_60:\n    r13d = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00404440",
            "funcStartAddr": "0x404440",
            "funcEndAddr": "0x406d69",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x404440 */\n#include <stdint.h>\n \nuint64_t fcn_00404440 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_30h;\n    int64_t var_18h;\n    int64_t var_24h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    do {\n        abort ();\n        r15 = (int64_t) edi;\n        r14 = rdx;\n        *((rsp + 8)) = rsi;\n        rax = errno_location ();\n        rbx = *(0x0061b2b8);\n        r13 = rax;\n        eax = *(rax);\n        *((rsp + 0x18)) = eax;\n    } while (r15d < 0);\n    if (*(0x0061b2d0) > r15d) {\n        goto label_0;\n    }\n    if (r15d == 0x7fffffff) {\n        goto label_1;\n    }\n    r12d = r15 + 1;\n    rsi = (int64_t) r12d;\n    rsi <<= 4;\n    if (rbx == 0x61b2c0) {\n        goto label_2;\n    }\n    rax = fcn_004053a0 (rbx, rsi);\n    *(0x0061b2b8) = rax;\n    rbx = rax;\n    do {\n        rdi = *(0x0061b2d0);\n        edx -= edi;\n        rdi <<= 4;\n        rdx = (int64_t) edx;\n        rdi += rbx;\n        rdx <<= 4;\n        memset (rdi, 0, r12d);\n        *(0x0061b2d0) = r12d;\nlabel_0:\n        eax = *((rbp + 4));\n        r15 <<= 4;\n        rbx += r15;\n        r15 = rbp + 8;\n        eax |= 1;\n        r11 = *(rbx);\n        r12 = *((rbx + 8));\n        *((rsp + 0x24)) = eax;\n        rsi = r11;\n        *((rsp + 0x30)) = r11;\n        rax = fcn_00403210 (r12, rsi, *((rsp + 0x28)), r14, *(rbp), eax);\n        r11 = *((rsp + 0x10));\n        if (r11 <= rax) {\n            rsi = rax + 1;\n            *(rbx) = rsi;\n            if (r12 != 0x61d500) {\n                *((rsp + 0x10)) = rsi;\n                free (r12);\n                rsi = *((rsp + 0x10));\n            }\n            *((rsp + 0x10)) = rsi;\n            rax = fcn_00405340 (*((rsp + 0x10)));\n            *((rbx + 8)) = rax;\n            rdi = rax;\n            r12 = rax;\n            fcn_00403210 (rdi, *((rsp + 0x30)), *((rsp + 0x28)), r14, *(rbp), *((rsp + 0x3c)));\n        }\n        eax = *((rsp + 0x18));\n        *(r13) = eax;\n        rax = r12;\n        return rax;\nlabel_2:\n        rax = fcn_004053a0 (0, rsi);\n        __asm (\"movdqa xmm0, xmmword [0x0061b2c0]\");\n        rbx = rax;\n        *(0x0061b2b8) = rax;\n        __asm (\"movups xmmword [rax], xmm0\");\n    } while (1);\nlabel_1:\n    return fcn_00405590 ();\n}\n"
        },
        {
            "funcName": "fcn_00404a40",
            "funcStartAddr": "0x404a40",
            "funcEndAddr": "0x4077d2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x404a40 */\n#include <stdint.h>\n \nint64_t fcn_00404a40 (int64_t arg1, int64_t arg2) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    do {\n        abort ();\nlabel_0:\n    } while (esi == 0xa);\n    rax = rdx;\n    *(rsp) = esi;\n    *((rsp + 4)) = 0;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x30)) = 0;\n    fcn_00404440 (rdi, rax, 0xffffffffffffffff, rsp);\n    return rax;\n    rdx = rsi;\n    esi = edi;\n    edi = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00404ae0",
            "funcStartAddr": "0x404ae0",
            "funcEndAddr": "0x404b71",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x404ae0 */\n#include <stdint.h>\n \nint64_t fcn_00404ae0 (int64_t arg1, int64_t arg7, int64_t arg8, int64_t arg9) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_20h;\n    int64_t var_30h;\n    rdi = arg1;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    xmm2 = arg9;\n    do {\n        rax = imp.__libc_start_main;\n        ecx = edx;\n        __asm (\"movdqa xmm0, xmmword [0x0061d600]\");\n        __asm (\"movdqa xmm1, xmmword [0x0061d610]\");\n        __asm (\"movdqa xmm2, xmmword [0x0061d620]\");\n        ecx &= 0x1f;\n        *((rsp + 0x30)) = rax;\n        eax = edx;\n        al >>= 5;\n        *(rsp) = xmm0;\n        eax = (int32_t) al;\n        *((rsp + 0x10)) = xmm1;\n        r8 = rsp + rax*4 + 8;\n        *((rsp + 0x20)) = xmm2;\n        edx = *(r8);\n        eax = *(r8);\n        eax >>= cl;\n        eax = ~eax;\n        eax &= 1;\n        eax <<= cl;\n        eax ^= edx;\n        *(r8) = eax;\n        fcn_00404440 (0, rdi, rsi, rsp);\n        return rax;\n        edx = 0x3a;\n        rsi = 0xffffffffffffffff;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00404b10",
            "funcStartAddr": "0x404b10",
            "funcEndAddr": "0x4079ca",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x404b10 */\n#include <stdint.h>\n \nint64_t fcn_00404b10 (int64_t arg1, uint32_t arg2, int64_t arg3) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    do {\n        abort ();\n    } while (esi == 0xa);\n    rcx = 0x400000000000000;\n    rax = rdx;\n    *(rsp) = esi;\n    *((rsp + 8)) = rcx;\n    *((rsp + 4)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x30)) = 0;\n    fcn_00404440 (rdi, rax, 0xffffffffffffffff, rsp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00404cb0",
            "funcStartAddr": "0x404cb0",
            "funcEndAddr": "0x404d0e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x404cb0 */\n#include <stdint.h>\n \nuint64_t fcn_00404cb0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13d = edi;\n    r12 = rsi;\n    rbx = rdx;\n    do {\nlabel_0:\n        rax = read (r13d, r12, rbx);\n        if (rax >= 0) {\n            goto label_1;\n        }\n        rax = errno_location ();\n        eax = *(rax);\n    } while (eax == 4);\n    if (rbx > 0x7fffe000) {\n        if (eax != 0x16) {\n            goto label_1;\n        }\n        ebx = 0x7fffe000;\n        goto label_0;\n    }\nlabel_1:\n    rax = rbp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00404d10",
            "funcStartAddr": "0x404d10",
            "funcEndAddr": "0x404d9e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x404d10 */\n#include <stdint.h>\n \nuint64_t fcn_00404d10 (char * template) {\n    rdi = template;\n    eax = mkstemp (rdi);\n    edi = eax;\n    ebx = edi;\n    if (edi > 2) {\n        eax = ebx;\n        return eax;\n    }\n    eax = fcn_004148f0 (rdi, rsi, rdx);\n    r12d = eax;\n    rax = errno_location ();\n    ebx = r12d;\n    r13d = *(rax);\n    close (ebx);\n    eax = ebx;\n    *(rbp) = r13d;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00404da0",
            "funcStartAddr": "0x404da0",
            "funcEndAddr": "0x408254",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x404da0 */\n#include <stdint.h>\n \nvoid fcn_00404da0 (int64_t arg_20h, int64_t arg_30h, int64_t arg_8h_2, int64_t arg_10h, int64_t arg_8h, int64_t arg_8h_3, int64_t arg_10h_2, int64_t arg_18h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_30h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    eax = abort ();\n    r12 = r9;\n    rbx = r8;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    r9 = rcx;\n    r8 = rdx;\n    rcx = rsi;\n    edx = \"%s (%s) %s\\n\";\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    do {\n        edx = 5;\n        rax = dcgettext (0, 0x415feb);\n        r8d = 0x7e1;\n        edx = \"Copyright %s %d Free Software Foundation, Inc.\";\n        rdi = rbp;\n        rcx = rax;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        edx = 5;\n        rax = dcgettext (0, \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\");\n        rsi = rbp;\n        rdi = rax;\n        eax = fputs_unlocked ();\n        if (r12 > 9) {\n            goto label_2;\n        }\n        /* switch table (10 cases) at 0x4162d8 */\nlabel_1:\n        r8 = rcx;\n        esi = 1;\n        rcx = rdx;\n        eax = 0;\n        edx = \"%s %s\\n\";\n        fprintf_chk ();\n    } while (1);\n    r9 = *((rbx + 0x38));\n    rax = *((rbx + 0x10));\n    edx = 5;\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    r15 = *((rbx + 0x20));\n    *((rsp + 0x10)) = r9;\n    r14 = *((rbx + 0x18));\n    rbx = *(rbx);\n    *(rsp) = rax;\n    *((rsp + 8)) = r8;\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n    do {\n        r9 = *((rsp + 0x18));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        r9 = *((rsp + 0x30));\n        r8 = *((rsp + 0x38));\n        fprintf_chk ();\n        return rax;\n        r10 = *((rbx + 0x40));\n        r9 = *((rbx + 0x38));\n        edx = 5;\n        rax = *((rbx + 0x10));\n        r8 = *((rbx + 8));\n        r13 = *((rbx + 0x30));\n        r12 = *((rbx + 0x28));\n        *((rsp + 0x18)) = r10;\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        *((rsp + 0x10)) = r9;\n        *(rsp) = rax;\n        rbx = *(rbx);\n        *((rsp + 8)) = r8;\nlabel_0:\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        r10 = *((rsp + 0x18));\n    } while (1);\n    rbx = *(rbx);\n    edx = 5;\n    rax = dcgettext (0, \"Written by %s.\\n\");\n    rdi = rbp;\n    esi = 1;\n    rcx = rbx;\n    rdx = rax;\n    eax = 0;\n    void (*0x401c50)() ();\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s and %s.\\n\");\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x401c50)() ();\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, and %s.\\n\");\n    r9 = r13;\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x401c50)() ();\n    edx = 5;\n    r14 = *((rbx + 0x18));\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\nand %s.\\n\");\n    do {\n        rdx = rax;\n        r9 = r13;\n        r8 = r12;\n        rcx = rbx;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r15 = *((rbx + 0x20));\n        edx = 5;\n        r14 = *((rbx + 0x18));\n        r13 = *((rbx + 0x10));\n        r12 = *((rbx + 8));\n        rbx = *(rbx);\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n    } while (1);\n    r8 = *((rbx + 8));\n    r12 = *((rbx + 0x28));\n    edx = 5;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *(rsp) = r8;\n    r13 = *((rbx + 0x10));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n    r9 = r13;\n    do {\n        r8 = *((rsp + 0x20));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r9 = *((rbx + 0x10));\n        r13 = *((rbx + 0x30));\n        edx = 5;\n        r12 = *((rbx + 0x28));\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        r8 = *((rbx + 8));\n        *((rsp + 8)) = r9;\n        rbx = *(rbx);\n        *(rsp) = r8;\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n        r9 = *((rsp + 0x28));\n    } while (1);\nlabel_2:\n    r10 = *((rbx + 0x40));\n    r9 = *((rbx + 0x38));\n    edx = 5;\n    esi = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    rax = *((rbx + 0x10));\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    *((rsp + 0x18)) = r10;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *((rsp + 0x10)) = r9;\n    *(rsp) = rax;\n    rbx = *(rbx);\n    *((rsp + 8)) = r8;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00405200",
            "funcStartAddr": "0x405200",
            "funcEndAddr": "0x4052bc",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x405200 */\n#include <stdint.h>\n \nuint64_t fcn_00405200 (int64_t arg_b0h, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_70h;\n    int64_t var_90h;\n    int64_t var_98h;\n    r8 = arg5;\n    r9 = arg6;\n    r11d = 0;\n    rax = rsp + 0xb0;\n    *((rsp + 0x90)) = r8;\n    r10 = rsp + 0xb0;\n    r8d = 0x20;\n    *((rsp + 0x10)) = rax;\n    rax = rsp + 0x70;\n    *((rsp + 0x98)) = r9;\n    r9d = 0;\n    *((rsp + 8)) = 0x20;\n    *((rsp + 0x18)) = rax;\n    while (r8d <= 0x2f) {\n        eax = r8d;\n        r11 = rsp + 0x70;\n        r8d += 8;\n        rax += r11;\n        r11d = 1;\n        rax = *(rax);\n        *((rsp + r9*8 + 0x20)) = rax;\n        if (rax == 0) {\n            goto label_1;\n        }\nlabel_0:\n        r9++;\n        if (r9 == 0xa) {\n            goto label_1;\n        }\n    }\n    rax = r10;\n    r10 += 8;\n    rax = *(rax);\n    *((rsp + r9*8 + 0x20)) = rax;\n    if (rax != 0) {\n        goto label_0;\n    }\nlabel_1:\n    if (r11b != 0) {\n        *((rsp + 8)) = r8d;\n    }\n    fcn_00404da0 (rdi, rsi, rdx, rcx, rsp + 0x20, r9);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405340",
            "funcStartAddr": "0x405340",
            "funcEndAddr": "0x40535a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x405340 */\n#include <stdint.h>\n \nuint64_t fcn_00405340 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = malloc (rdi);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    return fcn_00405590 ();\n}\n"
        },
        {
            "funcName": "fcn_004053a0",
            "funcStartAddr": "0x4053a0",
            "funcEndAddr": "0x4053d6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4053a0 */\n#include <stdint.h>\n \nuint64_t fcn_004053a0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rsi;\n    if (rsi == 0) {\n        if (rdi != 0) {\n            goto label_0;\n        }\n    }\n    rax = realloc (rdi, rbx);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_1;\n        }\n    }\n    return rax;\nlabel_0:\n    eax = free (rdi);\n    eax = 0;\n    return rax;\nlabel_1:\n    return fcn_00405590 ();\n}\n"
        },
        {
            "funcName": "fcn_00405540",
            "funcStartAddr": "0x405540",
            "funcEndAddr": "0x405568",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x405540 */\n#include <stdint.h>\n \nuint64_t fcn_00405540 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdi = rsi;\n    rbx = rsi;\n    rax = fcn_00405340 (rdi);\n    rdx = rbx;\n    rsi = rbp;\n    rdi = rax;\n    return memcpy ();\n}\n"
        },
        {
            "funcName": "fcn_00405590",
            "funcStartAddr": "0x405590",
            "funcEndAddr": "0x4055c1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x405590 */\n#include <stdint.h>\n \nuint64_t fcn_00405590 (void) {\n    edx = 5;\n    rax = dcgettext (0, \"memory exhausted\");\n    rcx = rax;\n    eax = 0;\n    error (*(0x0061b278), 0, 0x415249);\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_004055d0",
            "funcStartAddr": "0x4055d0",
            "funcEndAddr": "0x405627",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4055d0 */\n#include <stdint.h>\n \nint64_t fcn_004055d0 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rax = *((rdi + 8));\n    while (*((rdi + 0x28)) != rax) {\nlabel_0:\n        void (*0x401bf0)() ();\n        rax = *((rdi + 0x20));\n    }\n    if (*((rdi + 0x48)) != 0) {\n        goto label_0;\n    }\n    r12d = edx;\n    rbx = rdi;\n    eax = fileno (rdi);\n    edx = r12d;\n    rsi = rbp;\n    edi = eax;\n    rax = lseek ();\n    if (rax != -1) {\n        *(rbx) &= 0xffffffef;\n        *((rbx + 0x90)) = rax;\n        eax = 0;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405630",
            "funcStartAddr": "0x405630",
            "funcEndAddr": "0x40570f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x405630 */\n#include <stdint.h>\n \nuint64_t fcn_00405630 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r11 = rdi + 8;\n    r12d = *((rsi + 0x2c));\n    ebp = *(rsi);\n    rbx = *((rsi + 0x30));\n    r9d = r12d;\n    r10d = ebp;\n    r8 = rbx;\nlabel_1:\n    if (r10d <= r8d) {\n        goto label_2;\n    }\nlabel_0:\n    if (r9d >= r8d) {\n        goto label_2;\n    }\n    r14d = r10d;\n    edx = r8d;\n    r14d -= r8d;\n    edx -= r9d;\n    if (r14d <= edx) {\n        goto label_3;\n    }\n    rcx = (int64_t) r9d;\n    r10d -= edx;\n    edx--;\n    rdx += rcx;\n    rax = rdi + rcx*8;\n    r13 = r11 + rdx*8;\n    rdx = (int64_t) r10d;\n    rdx -= rcx;\n    do {\n        rcx = *(rax);\n        r14 = *((rax + rdx*8));\n        *(rax) = r14;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (r13 != rax);\n    if (r10d > r8d) {\n        goto label_0;\n    }\nlabel_2:\n    eax = ebp;\n    *((rsi + 0x30)) = ebp;\n    eax -= r8d;\n    r12d += eax;\n    *((rsi + 0x2c)) = r12d;\n    r12 = rbx;\n    r13 = rbx;\n    r14 = rbx;\n    r15 = rbx;\n    return rax;\nlabel_3:\n    rdx = (int64_t) r9d;\n    ecx = r14 - 1;\n    rcx += rdx;\n    rax = rdi + rdx*8;\n    r13 = r11 + rcx*8;\n    rcx = rbx;\n    rcx -= rdx;\n    rdx = rcx;\n    do {\n        rcx = *(rax);\n        r15 = *((rax + rdx*8));\n        *(rax) = r15;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (rax != r13);\n    r9d += r14d;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00405710",
            "funcStartAddr": "0x405710",
            "funcEndAddr": "0x405d2c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x405710 */\n#include <stdint.h>\n \nint64_t fcn_00405710 (int64_t arg_90h, int64_t arg_98h, int64_t arg_a0h, signed int64_t arg1, int64_t arg2, char * arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_ch;\n    int64_t var_10h;\n    void * ptr;\n    int64_t var_20h;\n    int64_t var_28h;\n    char * s;\n    int64_t var_38h;\n    int64_t c;\n    signed int64_t var_40h;\n    int64_t var_44h;\n    void * var_48h;\n    size_t nmeb;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rax = *((rsp + 0x90));\n    *((rsp + 0x40)) = edi;\n    *((rsp + 0x28)) = rsi;\n    r14 = *((rax + 0x20));\n    *((rsp + 0x30)) = rdx;\n    *(rsp) = rcx;\n    eax = *(r14);\n    *((rsp + 0x20)) = r8;\n    *((rsp + 0xc)) = r9d;\n    *((rsp + 0x3f)) = al;\n    if (al == 0x3d) {\n        goto label_11;\n    }\n    if (al == 0) {\n        goto label_11;\n    }\n    do {\n        rbp++;\n        eax = *(rbp);\n        if (al == 0) {\n            goto label_12;\n        }\n    } while (al != 0x3d);\nlabel_12:\n    r13 = rbp;\n    r13 -= r14;\nlabel_6:\n    rbx = *(rsp);\n    r12d = 0;\n    rax = *(rbx);\n    *((rsp + 0x10)) = rax;\n    r15 = rax;\n    if (rax != 0) {\n        goto label_13;\n    }\n    goto label_14;\n    do {\n        r12 = (int64_t) r8d;\nlabel_13:\n        eax = strncmp (r15, r14, r13);\n        if (eax == 0) {\n            rax = strlen (r15);\n            if (rax == r13) {\n                goto label_15;\n            }\n        }\n        rbx += 0x20;\n        r15 = *(rbx);\n        r8d = r12 + 1;\n    } while (r15 != 0);\n    rcx = *(rsp);\n    *((rsp + 0x4c)) = r8d;\n    r9d = 0;\n    ebx = 0;\n    *((rsp + 0x44)) = 0xffffffff;\n    r15 = r9;\n    *((rsp + 0x38)) = 0;\n    *((rsp + 0x48)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x10)) = rbp;\n    do {\n        eax = strncmp (*((rsp + 0x10)), r14, r13);\n        if (eax == 0) {\n            if (rbx == 0) {\n                goto label_16;\n            }\n            eax = *((rsp + 0xc));\n            if (eax == 0) {\n                goto label_17;\n            }\nlabel_0:\n            r11d = *((rsp + 0x38));\n            if (r11d != 0) {\n                goto label_1;\n            }\n            r10d = *((rsp + 0x98));\n            if (r10d == 0) {\n                goto label_18;\n            }\n            if (*((rsp + 0x18)) == 0) {\n                goto label_19;\n            }\nlabel_3:\n            rax = *((rsp + 0x18));\n            *((rax + r15)) = 1;\n        }\nlabel_1:\n        rbp += 0x20;\n        rdi = *(rbp);\n        r15++;\n    } while (rdi != 0);\n    rbp = *((rsp + 0x10));\n    if (*((rsp + 0x18)) != 0) {\n        goto label_20;\n    }\n    r9d = *((rsp + 0x38));\n    if (r9d != 0) {\n        goto label_20;\n    }\n    if (rbx == 0) {\nlabel_14:\n        eax = *((rsp + 0xc));\n        if (eax != 0) {\n            rax = *((rsp + 0x90));\n            rcx = *((rsp + 0x28));\n            rax = *(rax);\n            rax = *((rcx + rax*8));\n            if (*((rax + 1)) == 0x2d) {\n                goto label_21;\n            }\n            esi = *((rsp + 0x3f));\n            rax = strchr (*((rsp + 0x30)), rsi);\n            rdx = rax;\n            eax = 0xffffffff;\n            if (rdx != 0) {\n                goto label_5;\n            }\n        }\nlabel_21:\n        ecx = *((rsp + 0x98));\n        if (ecx != 0) {\n            goto label_22;\n        }\nlabel_4:\n        rax = *((rsp + 0x90));\n        *((rax + 0x20)) = 0;\n        *(rax)++;\n        *((rax + 8)) = 0;\n        eax = 0x3f;\n        return rax;\n    }\n    r12d = *((rsp + 0x44));\nlabel_15:\n    rax = *((rsp + 0x90));\n    rcx = *((rsp + 0x90));\n    edx = *(rax);\n    *((rcx + 0x20)) = 0;\n    eax = rdx + 1;\n    *(rcx) = eax;\n    ecx = *((rbx + 8));\n    if (*(rbp) != 0) {\n        goto label_23;\n    }\n    if (ecx == 1) {\n        goto label_24;\n    }\nlabel_2:\n    rax = *((rsp + 0x20));\n    if (rax != 0) {\n        *(rax) = r12d;\n    }\n    rdx = *((rbx + 0x10));\n    eax = *((rbx + 0x18));\n    if (rdx != 0) {\n        *(rdx) = eax;\n        eax = 0;\n    }\nlabel_5:\n    return rax;\nlabel_17:\n    eax = *((rbp + 8));\n    if (*((rbx + 8)) != eax) {\n        goto label_0;\n    }\n    rax = *((rbp + 0x10));\n    if (*((rbx + 0x10)) != rax) {\n        goto label_0;\n    }\n    eax = *((rbp + 0x18));\n    if (*((rbx + 0x18)) != eax) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_23:\n    if (ecx == 0) {\n        goto label_25;\n    }\n    rax = *((rsp + 0x90));\n    rbp++;\n    *((rax + 0x10)) = rbp;\n    goto label_2;\nlabel_16:\n    *((rsp + 0x44)) = r15d;\n    rbx = rbp;\n    goto label_1;\nlabel_18:\n    *((rsp + 0x38)) = 1;\n    if (*((rsp + 0x18)) == 0) {\n        goto label_1;\n    }\n    goto label_3;\nlabel_22:\n    rax = *((rsp + 0x28));\n    edx = 5;\n    rbx = *(rax);\n    rax = dcgettext (0, \"%s: unrecognized option '%s%s'\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r14;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbx;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_4;\nlabel_20:\n    r8d = *((rsp + 0x98));\n    if (r8d != 0) {\n        edi = *((rsp + 0x38));\n        if (edi == 0) {\n            goto label_26;\n        }\n        rax = *((rsp + 0x28));\n        edx = 5;\n        rbx = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' is ambiguous\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r14;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbx;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        rax = *((rsp + 0x90));\n        r14 = *((rax + 0x20));\n    }\nlabel_9:\n    esi = *((rsp + 0x48));\n    if (esi != 0) {\n        goto label_27;\n    }\nlabel_7:\n    rax = strlen (r14);\n    r14 += rax;\n    rax = *((rsp + 0x90));\n    *((rax + 0x20)) = r14;\n    *(rax)++;\n    *((rax + 8)) = 0;\n    eax = 0x3f;\n    goto label_5;\nlabel_24:\n    if (eax >= *((rsp + 0x40))) {\n        goto label_28;\n    }\n    rcx = *((rsp + 0x90));\n    edx += 2;\n    rax = (int64_t) eax;\n    *(rcx) = edx;\n    rcx = *((rsp + 0x28));\n    rax = *((rcx + rax*8));\n    rcx = *((rsp + 0x90));\n    *((rcx + 0x10)) = rax;\n    goto label_2;\nlabel_11:\n    r13d = 0;\n    goto label_6;\nlabel_25:\n    edx = *((rsp + 0x98));\n    while (1) {\n        eax = *((rbx + 0x18));\n        rcx = *((rsp + 0x90));\n        *((rcx + 8)) = eax;\n        eax = 0x3f;\n        goto label_5;\nlabel_19:\n        rdi = *((rsp + 0x4c));\n        rax = calloc (rdi, 1);\n        *((rsp + 0x18)) = rax;\n        if (rax == 0) {\n            goto label_29;\n        }\n        rax = *((rsp + 0x44));\n        rcx = *((rsp + 0x18));\n        *((rsp + 0x48)) = 1;\n        *((rcx + rax)) = 1;\n        goto label_3;\n        rax = *((rsp + 0x28));\n        r12 = *(rbx);\n        edx = 5;\n        rbp = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' doesn't allow an argument\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r12;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_27:\n    free (*((rsp + 0x18)));\n    goto label_7;\nlabel_28:\n    eax = *((rsp + 0x98));\n    if (eax != 0) {\n        goto label_30;\n    }\nlabel_10:\n    eax = *((rbx + 0x18));\n    rcx = *((rsp + 0x90));\n    *((rcx + 8)) = eax;\n    rax = *((rsp + 0x30));\n    al = (*(rax) != 0x3a) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = rax * 5;\n    goto label_5;\nlabel_26:\n    rdi = stderr;\n    flockfile ();\n    rax = *((rsp + 0x90));\n    edx = 5;\n    rbx = *((rax + 0x20));\n    rax = *((rsp + 0x28));\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' is ambiguous; possibilities:\");\n    rdi = stderr;\n    r9 = rbx;\n    r8 = *((rsp + 0xa0));\n    rcx = rbp;\n    rdx = rax;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    rax = *((rsp + 0x18));\n    rdi = stderr;\n    rbx = *(rsp);\n    r12 = rax + r12 + 1;\n    while (*(rbp) == 0) {\nlabel_8:\n        rbp++;\n        rbx += 0x20;\n        if (r12 == rbp) {\n            goto label_31;\n        }\n    }\n    r8 = *(rbx);\n    edx = \" '%s%s';\n    esi = 1;\n    eax = 0;\n    rcx = *((rsp + 0xa0));\n    fprintf_chk ();\n    rdi = stderr;\n    goto label_8;\nlabel_31:\n    fputc (0xa, rdi);\n    rdi = stderr;\n    funlockfile ();\n    rax = *((rsp + 0x90));\n    r14 = *((rax + 0x20));\n    goto label_9;\nlabel_30:\n    rax = *((rsp + 0x28));\n    r12 = *(rbx);\n    edx = 5;\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' requires an argument\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r12;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbp;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_10;\nlabel_29:\n    *((rsp + 0x38)) = 1;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00405d30",
            "funcStartAddr": "0x405d30",
            "funcEndAddr": "0x4062f6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x405d30 */\n#include <stdint.h>\n \nuint64_t fcn_00405d30 (int64_t arg_70h, int64_t arg_78h, int64_t arg1, int64_t arg2, int64_t arg3, uint32_t arg4, int64_t arg5, int64_t arg6) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_1ch;\n    int64_t var_20h;\n    int64_t var_28h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rbx = *((rsp + 0x70));\n    *((rsp + 8)) = rcx;\n    *((rsp + 0x10)) = r8;\n    r13d = *((rbx + 4));\n    if (edi <= 0) {\n        goto label_16;\n    }\n    eax = *(rbx);\n    r12 = rsi;\n    r15 = rdx;\n    *((rbx + 0x10)) = 0;\n    if (eax == 0) {\n        goto label_17;\n    }\n    esi = *((rbx + 0x18));\n    if (esi == 0) {\nlabel_1:\n        *((rbx + 0x30)) = eax;\n        *((rbx + 0x2c)) = eax;\n        *((rbx + 0x20)) = 0;\n        eax = *(r15);\n        if (al == 0x2d) {\n            goto label_18;\n        }\n        if (al == 0x2b) {\n            goto label_19;\n        }\n        ecx = *((rsp + 0x78));\n        edx = 0;\n        if (ecx == 0) {\n            goto label_20;\n        }\nlabel_8:\n        *((rbx + 0x28)) = 0;\n        goto label_11;\n    }\n    eax = *(rdx);\n    rdx = *((rbx + 0x20));\n    ecx = rax - 0x2b;\n    ecx &= 0xfd;\n    if (ecx != 0) {\n        goto label_21;\n    }\n    eax = *((r15 + 1));\n    r15++;\n    eax = 0;\n    if (al == 0x3a) {\n        r13d = eax;\n    }\n    if (rdx != 0) {\n        goto label_22;\n    }\n    do {\nlabel_0:\n        eax = *(rbx);\n        if (*((rbx + 0x30)) > eax) {\n            *((rbx + 0x30)) = eax;\n        }\n        if (eax < *((rbx + 0x2c))) {\n            *((rbx + 0x2c)) = eax;\n        }\n        if (*((rbx + 0x28)) == 1) {\n            goto label_23;\n        }\nlabel_4:\n        if (ebp == eax) {\n            goto label_24;\n        }\n        rdx = (int64_t) eax;\n        ecx = 3;\n        edi = 0x416489;\n        r14 = *((r12 + rdx*8));\n        rsi = *((r12 + rdx*8));\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (ebp > eax) ? 1 : 0;\n        if (cl != 0) {\n            goto label_25;\n        }\n        edx = *((rbx + 0x2c));\n        ecx = *((rbx + 0x30));\n        eax++;\n        *(rbx) = eax;\n        if (edx == ecx) {\n            goto label_26;\n        }\n        if (eax != ecx) {\n            fcn_00405630 (r12, rbx);\n            edx = *((rbx + 0x2c));\n        }\nlabel_12:\n        *((rbx + 0x30)) = ebp;\n        *(rbx) = ebp;\n        goto label_27;\nlabel_18:\n        *((rbx + 0x28)) = 2;\n        r15++;\n        edx = 0;\nlabel_11:\n        *((rbx + 0x18)) = 1;\n        eax = *(r15);\nlabel_21:\n        eax = 0;\n        if (al == 0x3a) {\n            r13d = eax;\n        }\n    } while (rdx == 0);\nlabel_22:\n    if (*(rdx) == 0) {\n        goto label_0;\n    }\nlabel_6:\n    r8 = rdx + 1;\n    *((rsp + 0x20)) = rdx;\n    *((rbx + 0x20)) = r8;\n    r14d = *(rdx);\n    *((rsp + 0x28)) = r8;\n    *((rsp + 0x1c)) = r14b;\n    rax = strchr (r15, r14d);\n    rdx = *((rsp + 0x20));\n    ecx = *((rsp + 0x1c));\n    r8 = *((rsp + 0x28));\n    if (*((rdx + 1)) == 0) {\n        *(rbx)++;\n    }\n    ecx -= 0x3a;\n    if (cl <= 1) {\n        goto label_28;\n    }\n    if (rax == 0) {\n        goto label_28;\n    }\n    ecx = *((rax + 1));\n    if (*(rax) == 0x57) {\n        goto label_29;\n    }\nlabel_7:\n    if (cl == 0x3a) {\n        goto label_30;\n    }\n    do {\nlabel_2:\n        eax = r14d;\n        return rax;\nlabel_25:\n        if (*(r14) == 0x2d) {\n            goto label_31;\n        }\nlabel_5:\n        edx = *((rbx + 0x28));\n        if (edx == 0) {\n            goto label_16;\n        }\n        eax++;\n        *((rbx + 0x10)) = r14;\n        r14d = 1;\n        *(rbx) = eax;\n    } while (1);\nlabel_17:\n    *(rbx) = 1;\n    eax = 1;\n    goto label_1;\nlabel_24:\n    ebp = *((rbx + 0x30));\n    edx = *((rbx + 0x2c));\nlabel_27:\n    if (edx != ebp) {\n        *(rbx) = edx;\n    }\nlabel_16:\n    r14d = 0xffffffff;\n    goto label_2;\nlabel_23:\n    edx = *((rbx + 0x30));\n    if (*((rbx + 0x2c)) == edx) {\n        goto label_32;\n    }\n    if (eax != edx) {\n        *((rsp + 0x1c)) = r9d;\n        fcn_00405630 (r12, rbx);\n        edx = *(rbx);\n        r9d = *((rsp + 0x1c));\n    }\nlabel_9:\n    if (ebp <= edx) {\n        goto label_33;\n    }\n    rax = (int64_t) edx;\n    while (*(rcx) != 0x2d) {\nlabel_3:\n        edx = rsi + 1;\n        rax++;\n        *(rbx) = edx;\n        if (ebp <= eax) {\n            goto label_33;\n        }\n        rcx = *((r12 + rax*8));\n        esi = eax;\n        edx = eax;\n    }\n    if (*((rcx + 1)) == 0) {\n        goto label_3;\n    }\n    eax = *(rbx);\nlabel_10:\n    *((rbx + 0x30)) = edx;\n    goto label_4;\nlabel_31:\n    ecx = *((r14 + 1));\n    if (cl == 0) {\n        goto label_5;\n    }\n    if (*((rsp + 8)) == 0) {\n        goto label_34;\n    }\n    if (cl == 0x2d) {\n        goto label_35;\n    }\n    if (r9d == 0) {\n        goto label_34;\n    }\n    if (*((r14 + 2)) == 0) {\n        esi = (int32_t) cl;\n        *((rsp + 0x1c)) = r9d;\n        rax = strchr (r15, rsi);\n        r9d = *((rsp + 0x1c));\n        if (rax != 0) {\n            goto label_34;\n        }\n    }\n    rdx = r14 + 1;\n    *((rbx + 0x20)) = rdx;\n    eax = fcn_00405710 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), r9);\n    r14d = eax;\n    if (eax != 0xffffffff) {\n        goto label_2;\n    }\n    rax = *(rbx);\n    r14 = *((r12 + rax*8));\nlabel_34:\n    rdx = r14 + 1;\n    goto label_6;\nlabel_29:\n    if (*((rsp + 8)) == 0) {\n        goto label_7;\n    }\n    if (cl != 0x3b) {\n        goto label_7;\n    }\n    if (*((rdx + 1)) == 0) {\n        rax = *(rbx);\n        if (eax == ebp) {\n            goto label_36;\n        }\n        r8 = *((r12 + rax*8));\n    }\n    *((rbx + 0x20)) = r8;\n    *((rbx + 0x10)) = 0;\nlabel_14:\n    eax = fcn_00405710 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), 0);\n    r14d = eax;\n    goto label_2;\nlabel_20:\n    *((rsp + 0x1c)) = r9d;\n    rax = getenv (\"POSIXLY_CORRECT\");\n    r9d = *((rsp + 0x1c));\n    if (rax == 0) {\n        goto label_37;\n    }\n    rdx = *((rbx + 0x20));\n    goto label_8;\nlabel_30:\n    edx = *((rdx + 1));\n    if (*((rax + 2)) == 0x3a) {\n        goto label_38;\n    }\n    rax = *(rbx);\n    if (dl != 0) {\n        goto label_39;\n    }\n    if (ebp == eax) {\n        goto label_40;\n    }\n    edx = rax + 1;\n    rax = *((r12 + rax*8));\n    *(rbx) = edx;\n    *((rbx + 0x10)) = rax;\nlabel_13:\n    *((rbx + 0x20)) = 0;\n    goto label_2;\nlabel_32:\n    if (eax == edx) {\n        goto label_9;\n    }\n    *((rbx + 0x2c)) = eax;\n    edx = eax;\n    goto label_9;\nlabel_33:\n    eax = edx;\n    goto label_10;\nlabel_19:\n    *((rbx + 0x28)) = 0;\n    r15++;\n    edx = 0;\n    goto label_11;\nlabel_28:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0x3f;\n        goto label_2;\nlabel_26:\n        *((rbx + 0x2c)) = eax;\n        edx = eax;\n        goto label_12;\nlabel_39:\n        eax++;\n        *((rbx + 0x10)) = r8;\n        *(rbx) = eax;\n        goto label_13;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: invalid option -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_38:\n    if (dl != 0) {\n        *((rbx + 0x10)) = r8;\n        *(rbx)++;\n        goto label_13;\nlabel_37:\n        *((rbx + 0x28)) = 1;\n        rdx = *((rbx + 0x20));\n        goto label_11;\n    }\n    *((rbx + 0x10)) = 0;\n    goto label_13;\nlabel_40:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_13;\nlabel_35:\n        rdx = r14 + 2;\n        *((rbx + 0x20)) = rdx;\n        goto label_14;\nlabel_36:\n        if (r13d != 0) {\n            goto label_41;\n        }\nlabel_15:\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_2;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_41:\n    rbp = *(r12);\n    edx = 5;\n    rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n    rdi = stderr;\n    r8d = r14d;\n    esi = 1;\n    rdx = rax;\n    rcx = rbp;\n    eax = 0;\n    fprintf_chk ();\n    goto label_15;\n}\n"
        },
        {
            "funcName": "fcn_00406300",
            "funcStartAddr": "0x406300",
            "funcEndAddr": "0x406356",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x406300 */\n#include <stdint.h>\n \nint32_t fcn_00406300 (int64_t arg_10h) {\n    eax = *(0x0061b2dc);\n    *(0x0061d640) = eax;\n    eax = *(0x0061b2d8);\n    *(0x0061d644) = eax;\n    eax = *((rsp + 0x10));\n    fcn_00405d30 (rdi, rsi, rdx, rcx, r8, r9);\n    edx = imp.__libc_start_main;\n    *(0x0061b2dc) = edx;\n    rdx = imp.__libc_start_main;\n    *(0x0061d688) = rdx;\n    edx = imp.__libc_start_main;\n    *(0x0061b2d4) = edx;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00406380",
            "funcStartAddr": "0x406380",
            "funcEndAddr": "0x406393",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x406380 */\n#include <stdint.h>\n \nvoid fcn_00406380 (void) {\n    r9d = 0;\n    fcn_00406300 (rdi);\n}\n"
        },
        {
            "funcName": "fcn_00406400",
            "funcStartAddr": "0x406400",
            "funcEndAddr": "0x40647a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x406400 */\n#include <stdint.h>\n \nuint64_t fcn_00406400 (wint_t arg1, mbstate_t * arg2, size_t * arg3, mbstate_t * ps) {\n    int64_t var_ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = ps;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    rbx = 0xfffffffffffffffe;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r12 = rdi;\n    while (1) {\n        rax = mbrtowc (r12, rbp, rdx, rcx);\n        rbx = rax;\n        if (rax > 0xfffffffffffffffd) {\n            goto label_2;\n        }\nlabel_0:\n        rax = rbx;\n        return rax;\nlabel_1:\n        edx = 1;\n        r12 = rsp + 0xc;\n    }\nlabel_2:\n    al = fcn_00414320 (0);\n    if (al != 0) {\n        goto label_0;\n    }\n    eax = *(rbp);\n    ebx = 1;\n    *(r12) = eax;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00406480",
            "funcStartAddr": "0x406480",
            "funcEndAddr": "0x4064c3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x406480 */\n#include <stdint.h>\n \nint32_t fcn_00406480 (uint32_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    al = (rdi == 0) ? 1 : 0;\n    dl = (rsi == 0) ? 1 : 0;\n    al |= dl;\n    if (al != 0) {\n        goto label_1;\n    }\n    rdx = *((rdi + 8));\n    if (rdx == *((rsi + 8))) {\n        goto label_2;\n    }\n    do {\n        return al;\nlabel_0:\n        rcx = *((rsi + 0x10));\n        r8 = *((rdi + 0x10));\n        rcx = *((rcx + rdx*8));\n    } while (*((r8 + rdx*8)) != rcx);\nlabel_2:\n    rdx--;\n    if (rdx >= 0) {\n        goto label_0;\n    }\n    eax = 1;\n    return eax;\nlabel_1:\n    eax = 0;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_004064d0",
            "funcStartAddr": "0x4064d0",
            "funcEndAddr": "0x40653b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4064d0 */\n#include <stdint.h>\n \nint64_t fcn_004064d0 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r12 = rsi;\n    rbx = rdi;\n    while (rax != 0) {\nlabel_0:\n        rbx = rax;\n        rax = *((rbx + 8));\n    }\n    rax = *((rbx + 0x10));\n    if (rax != 0) {\n        goto label_0;\n    }\n    rsi = rbx;\n    rdi = rbp;\n    eax = void (*r12)() ();\n    if (eax != 0) {\n        goto label_2;\n    }\nlabel_1:\n    rdx = *(rbx);\n    if (rdx == 0) {\n        goto label_2;\n    }\n    rax = *((rdx + 0x10));\n    sil = (rax == 0) ? 1 : 0;\n    rbx = rdx;\n    cl = (rax == rbx) ? 1 : 0;\n    sil |= cl;\n    if (sil == 0) {\n        goto label_0;\n    }\n    rsi = rbx;\n    rdi = rbp;\n    eax = void (*r12)() ();\n    if (eax == 0) {\n        goto label_1;\n    }\nlabel_2:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00406540",
            "funcStartAddr": "0x406540",
            "funcEndAddr": "0x40666f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x406540 */\n#include <stdint.h>\n \nint64_t fcn_00406540 (int64_t arg1, signed int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rax = *((rsi + 0x48));\n    if (*((rsi + 0x68)) <= rax) {\n        goto label_0;\n    }\n    r8 = *((rsi + 8));\n    ecx = *((r8 + rax));\n    *(rdi) = cl;\n    if (*((rsi + 0x90)) > 1) {\n        if (rax == *((rsi + 0x30))) {\n            goto label_1;\n        }\n        r9 = *((rsi + 0x10));\n        if (*((r9 + rax*4)) == 0xffffffff) {\n            goto label_2;\n        }\n    }\nlabel_1:\n    if (cl != 0x5c) {\n        if (cl == 0x5b) {\n            goto label_3;\n        }\n        if (cl == 0x5d) {\n            goto label_4;\n        }\n        if (cl != 0x5e) {\n            goto label_5;\n        }\n        *((rdi + 8)) = 0x19;\n        eax = 1;\n        return rax;\n    }\n    edx &= 1;\n    if (edx == 0) {\n        goto label_2;\n    }\n    rdx = rax + 1;\n    if (rdx < *((rsi + 0x58))) {\n        goto label_6;\n    }\n    do {\nlabel_2:\n        *((rdi + 8)) = 1;\n        eax = 1;\n        return rax;\nlabel_5:\n    } while (cl != 0x2d);\n    *((rdi + 8)) = 0x16;\n    eax = 1;\n    return rax;\nlabel_0:\n    *((rdi + 8)) = 2;\n    eax = 0;\n    return rax;\nlabel_3:\n    rcx = rax + 1;\n    if (rcx >= *((rsi + 0x58))) {\n        goto label_7;\n    }\n    eax = *((r8 + rax + 1));\n    *(rdi) = al;\n    if (al == 0x3a) {\n        goto label_8;\n    }\n    if (al == 0x3d) {\n        goto label_9;\n    }\n    while (edx == 0) {\nlabel_7:\n        *((rdi + 8)) = 1;\n        eax = 1;\n        *(rdi) = 0x5b;\n        return rax;\nlabel_4:\n        *((rdi + 8)) = 0x15;\n        eax = 1;\n        return rax;\nlabel_6:\n        *((rsi + 0x48)) = rdx;\n        eax = *((r8 + rax + 1));\n        *((rdi + 8)) = 1;\n        *(rdi) = al;\n        eax = 1;\n        return rax;\n        *((rdi + 8)) = 0x1a;\n        eax = 2;\n        return rax;\nlabel_9:\n        *((rdi + 8)) = 0x1c;\n        eax = 2;\n        return rax;\nlabel_8:\n        edx &= 4;\n    }\n    *((rdi + 8)) = 0x1e;\n    eax = 2;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00406690",
            "funcStartAddr": "0x406690",
            "funcEndAddr": "0x40689f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x406690 */\n#include <stdint.h>\n \nint64_t fcn_00406690 (int64_t arg1, int64_t arg2, int64_t arg3, uint32_t arg4, int64_t arg5) {\n    int64_t var_4h;\n    int64_t var_8h;\n    uint32_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_26h;\n    int64_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\nlabel_1:\n    r15 = rdx;\n    rdx = rcx * 3;\n    r9 = *((rdi + 0x98));\n    *((rsp + 8)) = rdi;\n    rax = *((r9 + 0x30));\n    *(rsp) = esi;\n    *((rsp + 0x10)) = rcx;\n    r13 = rax + rdx*8;\n    if (*((r13 + 8)) <= 0) {\n        goto label_6;\n    }\n    rax = r8 * 5;\n    ecx = r15d;\n    r14 = r15;\n    ebx = 0;\n    rax <<= 3;\n    r11 = r8;\n    r15 = r9;\n    *((rsp + 0x28)) = rax;\n    eax = 1;\n    rax <<= cl;\n    *((rsp + 0x18)) = rax;\n    eax = ~eax;\n    *((rsp + 0x26)) = ax;\n    eax = *(rsp);\n    esi = *(rsp);\n    eax &= 2;\n    esi &= 1;\n    *((rsp + 4)) = eax;\n    *((rsp + 0x20)) = esi;\n    while (dl != 9) {\n        if (dl == 4) {\n            goto label_7;\n        }\nlabel_0:\n        rbx++;\n        if (*((r13 + 8)) <= rbx) {\n            goto label_6;\n        }\nlabel_5:\n        rax = *((r13 + 0x10));\n        rbp = *((rax + rbx*8));\n        rax = *((rax + rbx*8));\n        rax <<= 4;\n        rax += *(r15);\n        edx = *((rax + 8));\n        if (dl == 8) {\n            goto label_8;\n        }\n    }\n    edx = *((rsp + 4));\n    if (edx == 0) {\n        goto label_0;\n    }\n    if (*(rax) != r14) {\n        goto label_0;\n    }\nlabel_3:\n    eax = 0;\n    return rax;\nlabel_8:\n    ecx = *((rsp + 0x20));\n    if (ecx == 0) {\n        goto label_0;\n    }\n    if (*(rax) != r14) {\n        goto label_0;\n    }\nlabel_2:\n    eax = 0xffffffff;\n    return rax;\nlabel_7:\n    if (r11 == -1) {\n        goto label_0;\n    }\n    rax = *((rsp + 8));\n    r12 = *((rsp + 0x28));\n    rsi = r14;\n    *((rsp + 0x30)) = r13;\n    *((rsp + 0x38)) = rbx;\n    r14 = r15;\n    r13 = r11;\n    r15 = rbp;\n    r12 += *((rax + 0xd8));\n    rax = rbp + rbp*2;\n    rax <<= 3;\n    rbx = rax;\nlabel_4:\n    if (*(r12) != r15) {\n        goto label_9;\n    }\n    if (rbp <= 0x3f) {\n        eax = *((r12 + 0x22));\n        if ((*((rsp + 0x18)) & rax) == 0) {\n            goto label_9;\n        }\n    }\n    rax = *((r14 + 0x28));\n    rax = *((rax + rbx + 0x10));\n    rcx = *(rax);\n    if (*((rsp + 0x10)) == rcx) {\n        goto label_10;\n    }\n    eax = fcn_00406690 (*((rsp + 8)), *(rsp), rbp, rcx, r13);\n    goto label_1;\n    if (eax == 0xffffffff) {\n        goto label_2;\n    }\n    if (eax != 0) {\n        goto label_11;\n    }\n    esi = *((rsp + 4));\n    if (esi != 0) {\n        goto label_3;\n    }\nlabel_11:\n    if (rbp <= 0x3f) {\n        eax = *((rsp + 0x26));\n        *((r12 + 0x22)) &= ax;\n    }\nlabel_9:\n    r12 += 0x28;\n    if (*((r12 - 8)) != 0) {\n        goto label_4;\n    }\n    rbx = *((rsp + 0x38));\n    r11 = r13;\n    r13 = *((rsp + 0x30));\n    r15 = r14;\n    r14 = rbp;\n    rbx++;\n    if (*((r13 + 8)) > rbx) {\n        goto label_5;\n    }\nlabel_6:\n    eax = *(rsp);\n    eax >>= 1;\n    return rax;\nlabel_10:\n    eax = *(rsp);\n    eax &= 1;\n    eax = -eax;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004068a0",
            "funcStartAddr": "0x4068a0",
            "funcEndAddr": "0x406906",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4068a0 */\n#include <stdint.h>\n \nint64_t fcn_004068a0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, signed int64_t arg5, int64_t arg6) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rax = *((rdi + 0xd8));\n    rsi *= 5;\n    rax = rax + rsi*8;\n    r10 = *((rax + 0x10));\n    if (r10 <= r8) {\n        rax = *((rax + 0x18));\n        if (rax >= r8) {\n            esi = 0;\n            sil = (r10 == r8) ? 1 : 0;\n            if (rax != r8) {\n                eax = 0;\n                if (r10 == r8) {\n                    goto label_0;\n                }\n                return rax;\n            }\n            esi |= 2;\nlabel_0:\n            r8 = r9;\n            void (*0x406690)() ();\n        }\n        eax = 1;\n        return rax;\n    }\n    eax = 0xffffffff;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00406910",
            "funcStartAddr": "0x406910",
            "funcEndAddr": "0x4069ac",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x406910 */\n#include <stdint.h>\n \nint64_t fcn_00406910 (size_t arg2, void ** ptr) {\n    rsi = arg2;\n    rdi = ptr;\n    rbx = rdi;\n    if (*((rdi + 0x90)) > 1) {\n        rax = 0x1fffffffffffffff;\n        if (rsi > rax) {\n            goto label_0;\n        }\n        rax = realloc (*((rdi + 0x10)), rsi*4);\n        if (rax == 0) {\n            goto label_0;\n        }\n        rdi = *((rbx + 0x18));\n        *((rbx + 0x10)) = rax;\n        if (rdi == 0) {\n            goto label_1;\n        }\n        rax = realloc (rdi, rbp*8);\n        if (rax == 0) {\n            goto label_0;\n        }\n        *((rbx + 0x18)) = rax;\n    }\nlabel_1:\n    while (1) {\n        *((rbx + 0x40)) = rbp;\n        eax = 0;\n        return rax;\n        rax = realloc (*((rbx + 8)), rbp);\n        if (rax == 0) {\n            goto label_0;\n        }\n        *((rbx + 8)) = rax;\n    }\nlabel_0:\n    eax = 0xc;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004069b0",
            "funcStartAddr": "0x4069b0",
            "funcEndAddr": "0x406a14",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4069b0 */\n#include <stdint.h>\n \nint64_t fcn_004069b0 (uint32_t arg1, size_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rdi;\n    rsi = *((rdi + 8));\n    rax = *((rdi + 0x10));\n    while (1) {\n        rdx = rsi + 1;\n        *((rbx + 8)) = rdx;\n        *((rax + rsi*8)) = rbp;\n        eax = 1;\nlabel_0:\n        return rax;\n        rsi++;\n        rdx = rsi + rsi;\n        rsi <<= 4;\n        *(rdi) = rdx;\n        rax = realloc (rax, rsi);\n        if (rax == 0) {\n            goto label_1;\n        }\n        *((rbx + 0x10)) = rax;\n        rsi = *((rbx + 8));\n    }\nlabel_1:\n    eax = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00406a20",
            "funcStartAddr": "0x406a20",
            "funcEndAddr": "0x406b4c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x406a20 */\n#include <stdint.h>\n \nint64_t fcn_00406a20 (void * arg1, void * arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rdi;\n    rdx = *(rdi);\n    if (rdx != 0) {\n        rsi = *((rdi + 8));\n        rax = *((rdi + 0x10));\n        if (rsi != 0) {\n            goto label_3;\n        }\n        *(rax) = rbp;\n        eax = 1;\n        *((rdi + 8))++;\nlabel_0:\n        return rax;\n    }\n    *(rdi) = 1;\n    *((rdi + 8)) = 1;\n    rax = malloc (8);\n    *((rbx + 0x10)) = rax;\n    if (rax == 0) {\n        goto label_4;\n    }\n    *(rax) = rbp;\n    eax = 1;\n    return rax;\nlabel_3:\n    if (rdx == rsi) {\n        goto label_5;\n    }\nlabel_2:\n    rdx = rsi*8;\n    if (*(rax) <= rbp) {\n        goto label_6;\n    }\n    if (rsi <= 0) {\n        goto label_1;\n    }\n    rdx += rax;\n    do {\n        rcx = *((rdx - 8));\n        rdx -= 8;\n        *((rdx + 8)) = rcx;\n    } while (rdx != rax);\n    edx = 0;\n    do {\nlabel_1:\n        *((rax + rdx)) = rbp;\n        eax = 1;\n        *((rbx + 8))++;\n        goto label_0;\nlabel_6:\n        rcx = *((rax + rdx - 8));\n    } while (rbp >= rcx);\n    do {\n        *((rax + rdx)) = rcx;\n        rdx -= 8;\n        rcx = *((rax + rdx - 8));\n    } while (rcx > rbp);\n    goto label_1;\nlabel_4:\n    *((rbx + 8)) = 0;\n    *(rbx) = 0;\n    goto label_0;\nlabel_5:\n    rdx = rsi + rsi;\n    rsi <<= 4;\n    *(rdi) = rdx;\n    rax = realloc (rax, rsi);\n    if (rax != 0) {\n        *((rbx + 0x10)) = rax;\n        rsi = *((rbx + 8));\n        goto label_2;\n    }\n    eax = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00406b50",
            "funcStartAddr": "0x406b50",
            "funcEndAddr": "0x406c4b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x406b50 */\n#include <stdint.h>\n \nuint64_t fcn_00406b50 (int64_t arg1, int64_t arg3, size_t * size) {\n    rdi = arg1;\n    rdx = arg3;\n    rsi = size;\n    r14 = rdi;\n    r13 = rdx;\n    r12 = rsi + 0x20;\n    r15 = *((rsi + 0x10));\n    *(rsi) = rdx;\n    *((rsi + 0x28)) = 0;\n    *((rsi + 0x20)) = r15;\n    rax = malloc (r15*8);\n    *((rbp + 0x30)) = rax;\n    if (rax == 0) {\n        goto label_2;\n    }\n    ebx = 0;\n    if (r15 > 0) {\n        goto label_3;\n    }\n    goto label_4;\n    do {\nlabel_0:\n        rbx++;\n        if (*((rbp + 0x10)) <= rbx) {\n            goto label_4;\n        }\nlabel_3:\n        rax = *((rbp + 0x18));\n        rsi = *((rax + rbx*8));\n        rax = *((rax + rbx*8));\n        rax <<= 4;\n        rax += *(r14);\n    } while ((*((rax + 8)) & 8) != 0);\n    al = fcn_004069b0 (r12, rsi);\n    if (al != 0) {\n        goto label_0;\n    }\n    do {\nlabel_2:\n        eax = 0xc;\n        return rax;\nlabel_4:\n        rax = *((r14 + 0x40));\n        r13 &= *((r14 + 0x88));\n        rdx = r13 * 3;\n        rbx = rax + rdx*8;\n        rdx = *(rbx);\n        rax = *((rbx + 0x10));\n        rsi = rdx + 1;\n        if (*((rbx + 8)) > rdx) {\nlabel_1:\n            *(rbx) = rsi;\n            *((rax + rdx*8)) = rbp;\n            eax = 0;\n            return rax;\n        }\n        r12 = rsi + rsi;\n        rsi <<= 4;\n        rax = realloc (rax, rsi);\n    } while (rax == 0);\n    rdx = *(rbx);\n    *((rbx + 0x10)) = rax;\n    *((rbx + 8)) = r12;\n    rsi = rdx + 1;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00406c50",
            "funcStartAddr": "0x406c50",
            "funcEndAddr": "0x406c76",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x406c50 */\n#include <stdint.h>\n \nuint32_t fcn_00406c50 (int64_t arg2) {\n    rsi = arg2;\n    ebx = (int32_t) dil;\n    eax = btowc (ebx);\n    if (eax == 0xffffffff) {\n        if (rbp != 0) {\n            eax = ebx;\n            goto label_0;\n        }\n    }\nlabel_0:\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00406c80",
            "funcStartAddr": "0x406c80",
            "funcEndAddr": "0x406d00",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x406c80 */\n#include <stdint.h>\n \nuint64_t fcn_00406c80 (uint32_t arg1) {\n    rdi = arg1;\n    r12 = *((rdi + 0x58));\n    if (*((rdi + 0x40)) <= r12) {\n        r12 = *((rdi + 0x40));\n    }\n    rbx = *((rdi + 0x30));\n    if (r12 <= rbx) {\n        goto label_1;\n    }\n    rax = ctype_toupper_loc ();\n    do {\n        rdx = *(rbp);\n        rcx = *((rbp + 0x78));\n        rdx += rbx;\n        rdx += *((rbp + 0x28));\n        edx = *(rdx);\n        if (rcx != 0) {\n            goto label_2;\n        }\nlabel_0:\n        rsi = *(rax);\n        rcx = *((rbp + 8));\n        edx = *((rsi + rdx*4));\n        *((rcx + rbx)) = dl;\n        rbx++;\n    } while (r12 != rbx);\n    *((rbp + 0x30)) = r12;\n    *((rbp + 0x38)) = r12;\n    return rax;\nlabel_2:\n    edx = *((rcx + rdx));\n    goto label_0;\nlabel_1:\n    r12 = rbx;\n    *((rbp + 0x30)) = r12;\n    *((rbp + 0x38)) = r12;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00406d00",
            "funcStartAddr": "0x406d00",
            "funcEndAddr": "0x406ea6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x406d00 */\n#include <stdint.h>\n \nuint64_t fcn_00406d00 (uint32_t arg1) {\n    int64_t var_ch;\n    int64_t var_10h;\n    rdi = arg1;\n    rbx = rdi;\n    r12 = *((rdi + 0x58));\n    rbp = *((rdi + 0x30));\n    if (*((rdi + 0x40)) <= r12) {\n        r12 = *((rdi + 0x40));\n    }\n    if (r12 <= rbp) {\n        goto label_2;\n    }\n    r13 = rdi + 0x20;\nlabel_0:\n    rdi = *((rbx + 0x78));\n    rdx = r12;\n    r14 = *((rbx + 0x20));\n    rdx -= rbp;\n    if (rdi != 0) {\n        goto label_7;\n    }\n    rsi += rbp;\n    rsi += *(rbx);\nlabel_3:\n    rax = fcn_00406400 (rsp + 0xc, *((rbx + 0x28)), rdx, r13);\n    rdx = rax - 1;\n    if (rdx > 0xfffffffffffffffd) {\n        goto label_5;\n    }\n    edx = *((rsp + 0xc));\n    if (rax == 0xfffffffffffffffe) {\n        goto label_8;\n    }\nlabel_1:\n    rcx = *((rbx + 0x10));\n    rsi = rbp + 1;\n    rdi = rbp*4;\n    *((rcx + rbp*4)) = edx;\n    rbp += rax;\n    if (rsi >= rbp) {\n        goto label_9;\n    }\n    rdx = rcx + rdi + 4;\n    rcx = rcx + rbp*4;\n    do {\n        *(rdx) = 0xffffffff;\n        rdx += 4;\n    } while (rcx != rdx);\n    if (rbp < r12) {\n        goto label_0;\n    }\nlabel_2:\n    *((rbx + 0x30)) = rbp;\n    *((rbx + 0x38)) = rbp;\n    rbx = rax;\n    r12 = rax;\n    r13 = rax;\n    r14 = rax;\n    return rax;\nlabel_5:\n    rax = *(rbx);\n    rcx = *((rbx + 0x78));\n    rax += rbp;\n    rax += *((rbx + 0x28));\n    edx = *(rax);\n    *((rsp + 0xc)) = edx;\n    if (rcx != 0) {\n        goto label_10;\n    }\nlabel_6:\n    *((rbx + 0x20)) = r14;\n    eax = 1;\n    goto label_1;\nlabel_9:\n    if (rbp < r12) {\n        goto label_0;\n    }\n    goto label_2;\nlabel_7:\n    eax = *((rbx + 0x90));\n    if (eax <= 0) {\n        goto label_11;\n    }\n    eax = 0;\n    rsi = rsp + 0x10;\n    if (rdx > 0) {\n        goto label_12;\n    }\n    goto label_11;\nlabel_4:\n    rax++;\n    if (rdx == rax) {\n        goto label_3;\n    }\n    rdi = *((rbx + 0x78));\nlabel_12:\n    rcx = *(rbx);\n    rcx += rbp;\n    rcx += rax;\n    rcx += *((rbx + 0x28));\n    ecx = *(rcx);\n    ecx = *((rdi + rcx));\n    rdi = *((rbx + 8));\n    rdi += rbp;\n    *((rdi + rax)) = cl;\n    *((rsi + rax)) = cl;\n    ecx = rax + 1;\n    if (*((rbx + 0x90)) > ecx) {\n        goto label_4;\n    }\n    goto label_3;\nlabel_8:\n    rax = *((rbx + 0x58));\n    if (*((rbx + 0x40)) >= rax) {\n        goto label_5;\n    }\n    *((rbx + 0x20)) = r14;\n    goto label_2;\nlabel_10:\n    edx = *((rcx + rdx));\n    *((rsp + 0xc)) = edx;\n    goto label_6;\nlabel_11:\n    rsi = rsp + 0x10;\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_00406dbf",
            "funcStartAddr": "0x406dbf",
            "funcEndAddr": "0x406dc2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x406dbf */\n#include <stdint.h>\n \nvoid fcn_00406dbf (void) {\n}\n"
        },
        {
            "funcName": "fcn_00406eb0",
            "funcStartAddr": "0x406eb0",
            "funcEndAddr": "0x4074ad",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x406eb0 */\n#include <stdint.h>\n \nuint64_t fcn_00406eb0 (uint32_t arg1) {\n    void * var_8h;\n    void * var_10h;\n    int64_t var_18h;\n    wint_t wc;\n    mbstate_t * ps;\n    char * s2;\n    rdi = arg1;\n    r14 = rdi;\n    rbx = *((rdi + 0x58));\n    if (*((rdi + 0x40)) <= rbx) {\n        rbx = *((rdi + 0x40));\n    }\n    r15 = *((rdi + 0x30));\n    if (*((rdi + 0x8a)) == 0) {\n        if (*((rdi + 0x78)) == 0) {\n            goto label_17;\n        }\n    }\nlabel_1:\n    r12 = *((r14 + 0x38));\n    do {\nlabel_0:\n        if (r15 >= rbx) {\n            goto label_18;\n        }\n        rax = r14 + 0x20;\n        *(rsp) = rax;\n        rax = rbx;\n        rax -= r15;\n        *((rsp + 0x10)) = rax;\n        rax = rsp + 0x24;\n        *((rsp + 0x18)) = rax;\nlabel_7:\n        rax = *((r14 + 0x20));\n        rdx = *((r14 + 0x78));\n        *((rsp + 0x28)) = rax;\n        if (rdx != 0) {\n            goto label_19;\n        }\n        rbp = *((r14 + 0x28));\n        rbp += r12;\n        rbp += *(r14);\n        *((rsp + 8)) = rbp;\nlabel_6:\n        rax = fcn_00406400 (*((rsp + 0x18)), *((rsp + 8)), *((rsp + 0x10)), *(rsp));\n        if (rax > 0xfffffffffffffffd) {\n            goto label_20;\n        }\n        edx = *((rsp + 0x24));\n        *(rsp) = edx;\n        eax = towupper (*((rsp + 0x24)));\n        edx = *(rsp);\n        r8 = r15;\n        r13d = eax;\n        if (edx == eax) {\n            goto label_11;\n        }\n        rcx = rsp + 0x30;\n        *((rsp + 0x10)) = r15;\n        rdi = rcx;\n        *(rsp) = rcx;\n        rax = wcrtomb (rdi, eax, rsp + 0x28);\n        rcx = *(rsp);\n        r8 = *((rsp + 0x10));\n        r10 = rax;\n        if (rbp != rax) {\n            goto label_21;\n        }\n        *(rsp) = r8;\n        rdi += r15;\n        memcpy (*((r14 + 8)), rcx, rbp);\n        r8 = *(rsp);\nlabel_8:\n        if (*((r14 + 0x8c)) != 0) {\n            goto label_22;\n        }\n        rax = r12 + rbp;\nlabel_10:\n        r12 = rax;\n        rax = *((r14 + 0x10));\n        r15++;\n        rsi = r8 + rbp;\n        rdx = r8*4;\n        *((rax + r8*4)) = r13d;\n    } while (r15 >= rsi);\n    rdx = rax + rdx + 4;\n    rcx = rax + rsi*4;\n    do {\n        *(rdx) = 0xffffffff;\n        rdx += 4;\n    } while (rcx != rdx);\n    r15 = rsi;\n    goto label_0;\nlabel_9:\n    rax = *((rsp + 0x28));\n    *((r14 + 0x20)) = rax;\nlabel_18:\n    *((r14 + 0x30)) = r15;\n    eax = 0;\n    *((r14 + 0x38)) = r12;\nlabel_3:\n    return rax;\nlabel_17:\n    if (*((rdi + 0x8c)) != 0) {\n        goto label_1;\n    }\n    if (r15 >= rbx) {\n        goto label_12;\n    }\n    rax = rdi + 0x20;\n    *(rsp) = rax;\nlabel_2:\n    r12 = *((r14 + 0x28));\n    r12 += r15;\n    r12 += *(r14);\n    r13d = *(r12);\n    if ((r13b & 0x80) == 0) {\n        eax = mbsinit (*(rsp));\n        if (eax != 0) {\n            goto label_23;\n        }\n    }\n    rax = *((r14 + 0x20));\n    rdx -= r15;\n    *((rsp + 0x28)) = rax;\n    rax = rsp + 0x24;\n    rdi = rax;\n    *((rsp + 0x10)) = rdx;\n    *((rsp + 0x18)) = rax;\n    rax = fcn_00406400 (rdi, r12, rbx, *(rsp));\n    r12 = rax;\n    if (rax > 0xfffffffffffffffd) {\n        goto label_24;\n    }\n    edx = *((rsp + 0x24));\n    *((rsp + 8)) = edx;\n    eax = towupper (*((rsp + 0x24)));\n    edx = *((rsp + 8));\n    r13d = eax;\n    if (edx == eax) {\n        goto label_25;\n    }\n    rax = wcrtomb (rsp + 0x30, eax, rsp + 0x28);\n    if (r12 != rax) {\n        goto label_26;\n    }\n    rdi += r15;\n    memcpy (*((r14 + 8)), rsp + 0x30, r12);\nlabel_4:\n    rax = *((r14 + 0x10));\n    rdx = rbp*4;\n    r15++;\n    *((rax + rbp*4)) = r13d;\n    rbp += r12;\n    if (r15 >= rbp) {\n        goto label_5;\n    }\n    rcx = rax + rdx + 4;\n    rax = rax + rbp*4;\n    do {\n        *(rcx) = 0xffffffff;\n        rcx += 4;\n    } while (rax != rcx);\n    r15 = rbp;\nlabel_5:\n    if (rbx > r15) {\n        goto label_2;\n    }\nlabel_12:\n    *((r14 + 0x30)) = r15;\n    eax = 0;\n    *((r14 + 0x38)) = r15;\n    goto label_3;\nlabel_25:\n    rsi += r15;\n    rdi += r15;\n    rsi += *(r14);\n    memcpy (*((r14 + 8)), *((r14 + 0x28)), r12);\n    goto label_4;\nlabel_23:\n    rax = ctype_toupper_loc ();\n    rdx = *((r14 + 8));\n    rax = *(rax);\n    eax = *((rax + r13*4));\n    *((rdx + r15)) = al;\n    rdx = *((r14 + 8));\n    rax = *((r14 + 0x10));\n    edx = *((rdx + r15));\n    *((rax + r15*4)) = edx;\n    r15++;\n    goto label_5;\nlabel_24:\n    if (rax == 0xfffffffffffffffe) {\n        rax = *((r14 + 0x58));\n        if (*((r14 + 0x40)) < rax) {\n            goto label_27;\n        }\n        rax = *(r14);\n        rdx = *((r14 + 8));\n        rax += r15;\n        rax += *((r14 + 0x28));\n        eax = *(rax);\n        *((rdx + r15)) = al;\n        rdx = *((r14 + 0x10));\n        r15++;\n        *((rdx + rbp*4)) = eax;\n        goto label_5;\n    }\n    rax = *(r14);\n    rdx = *((r14 + 8));\n    rax += r15;\n    rax += *((r14 + 0x28));\n    eax = *(rax);\n    *((rdx + r15)) = al;\n    rdx = *((r14 + 0x10));\n    r15++;\n    *((rdx + rbp*4)) = eax;\n    rax = *((rsp + 0x28));\n    *((r14 + 0x20)) = rax;\n    goto label_5;\nlabel_19:\n    eax = *((r14 + 0x90));\n    if (eax <= 0) {\n        goto label_28;\n    }\n    if (*((rsp + 0x10)) <= 0) {\n        goto label_28;\n    }\n    rdi = *((r14 + 0x28));\n    r10d = rax - 1;\n    rcx = rsp + 0x30;\n    eax = 0;\n    rdi += r12;\n    rdi += *(r14);\n    while (r10 != rax) {\n        rax++;\n        if (*((rsp + 0x10)) == rax) {\n            goto label_14;\n        }\n        esi = *((rdi + rax));\n        esi = *((rdx + rsi));\n        *((rcx + rax)) = sil;\n    }\nlabel_14:\n    *((rsp + 8)) = rcx;\n    goto label_6;\nlabel_26:\n    r12 = r15;\n    goto label_7;\nlabel_11:\n    *(rsp) = r8;\n    rdi += r15;\n    rax = memcpy (*((r14 + 8)), *((rsp + 8)), rbp);\n    r8 = *(rsp);\n    goto label_8;\nlabel_20:\n    if (rax != 0xfffffffffffffffe) {\n        goto label_29;\n    }\n    rax = *((r14 + 0x58));\n    if (*((r14 + 0x40)) < rax) {\n        goto label_9;\n    }\nlabel_29:\n    rax = *(r14);\n    rdx = *((r14 + 0x78));\n    rax += r12;\n    rax += *((r14 + 0x28));\n    eax = *(rax);\n    if (rdx != 0) {\n        goto label_30;\n    }\nlabel_16:\n    rdx = *((r14 + 8));\n    rcx = r15;\n    *((rdx + r15)) = al;\n    if (*((r14 + 0x8c)) != 0) {\n        goto label_31;\n    }\nlabel_15:\n    rdx = *((r14 + 0x10));\n    r12++;\n    r15++;\n    *((rdx + rcx*4)) = eax;\n    if (rbp != -1) {\n        goto label_0;\n    }\n    rax = *((rsp + 0x28));\n    *((r14 + 0x20)) = rax;\n    goto label_0;\nlabel_22:\n    rax = r12;\n    if (rbp == 0) {\n        goto label_10;\n    }\n    rcx = r15;\n    rdx = *((r14 + 0x18));\n    rax = rbp + r12;\n    rcx -= r12;\n    rdx = rdx + rcx*8;\n    do {\n        *((rdx + r12*8)) = r12;\n        r12++;\n    } while (rax != r12);\n    goto label_10;\nlabel_21:\n    if (rax == -1) {\n        goto label_11;\n    }\n    rax = r15 + rax;\n    rsi = rax;\n    *(rsp) = rax;\n    rax = *((r14 + 0x40));\n    if (rsi > rax) {\n        goto label_9;\n    }\n    if (*((r14 + 0x18)) == 0) {\n        goto label_32;\n    }\nlabel_13:\n    if (*((r14 + 0x8c)) != 0) {\n        goto label_33;\n    }\n    if (r15 == 0) {\n        goto label_34;\n    }\n    rdx = *((r14 + 0x18));\n    eax = 0;\n    do {\n        *((rdx + rax*8)) = rax;\n        rax++;\n    } while (r15 != rax);\nlabel_34:\n    *((r14 + 0x8c)) = 1;\nlabel_33:\n    rdx = r10;\n    *((rsp + 8)) = r10;\n    rdi += r15;\n    memcpy (*((r14 + 8)), rcx, rdx);\n    rax = *((r14 + 0x10));\n    r10 = *((rsp + 8));\n    rdi = rbp - 1;\n    rsi = rax + r15*4;\n    rax = *((r14 + 0x18));\n    *(rsi) = r13d;\n    rcx = rax + r15*8;\n    eax = 1;\n    *(rcx) = r12;\n    if (r10 <= 1) {\n        goto label_35;\n    }\n    do {\n        rdx = rax;\n        if (rax >= rbp) {\n            rdx = rdi;\n        }\n        rdx += r12;\n        *((rcx + rax*8)) = rdx;\n        *((rsi + rax*4)) = 0xffffffff;\n        rax++;\n    } while (rax != r10);\nlabel_35:\n    rbx = *((r14 + 0x58));\n    r10 -= rbp;\n    rbx += r10;\n    *((r14 + 0x58)) = rbx;\n    if (r12 < *((r14 + 0x60))) {\n        *((r14 + 0x68)) += r10;\n    }\n    r15 = *(rsp);\n    if (*((r14 + 0x40)) <= rbx) {\n        rbx = *((r14 + 0x40));\n    }\n    r12 += rbp;\n    goto label_0;\nlabel_27:\n    rax = *((rsp + 0x28));\n    *((r14 + 0x20)) = rax;\n    goto label_12;\nlabel_32:\n    *((rsp + 0x10)) = rcx;\n    *((rsp + 8)) = r10;\n    rax = malloc (rax*8);\n    r10 = *((rsp + 8));\n    rcx = *((rsp + 0x10));\n    *((r14 + 0x18)) = rax;\n    if (rax != 0) {\n        goto label_13;\n    }\n    eax = 0xc;\n    goto label_3;\nlabel_28:\n    rcx = rsp + 0x30;\n    goto label_14;\nlabel_31:\n    rdx = *((r14 + 0x18));\n    *((rdx + r15*8)) = r12;\n    goto label_15;\nlabel_30:\n    eax = *((rdx + rax));\n    goto label_16;\n}\n"
        },
        {
            "funcName": "fcn_004074b0",
            "funcStartAddr": "0x4074b0",
            "funcEndAddr": "0x4075fe",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4074b0 */\n#include <stdint.h>\n \nint64_t fcn_004074b0 (int64_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = 0xffffffffffffffe;\n    rax = *((rdi + 0x40));\n    if (rax > rdx) {\n        goto label_2;\n    }\n    rdx = *((rdi + 0x58));\n    rax += rax;\n    rsi = (int64_t) esi;\n    rbx = rdi;\n    if (rax > rdx) {\n        rax = rdx;\n    }\n    if (rax >= rsi) {\n        rsi = rax;\n    }\n    eax = fcn_00406910 (rdi, rsi);\n    if (eax != 0) {\n        goto label_1;\n    }\n    rdi = *((rbx + 0xb8));\n    if (rdi != 0) {\n        rax = *((rbx + 0x40));\n        rax = realloc (rdi, rax*8 + 8);\n        if (rax == 0) {\n            goto label_2;\n        }\n        *((rbx + 0xb8)) = rax;\n    }\n    eax = *((rbx + 0x90));\n    if (*((rbx + 0x88)) == 0) {\n        goto label_3;\n    }\n    rdi = rbx;\n    if (eax <= 1) {\n        goto label_4;\n    }\n    void (*0x406eb0)() ();\nlabel_0:\n    rsi = rax;\n    *((rbx + 0x30)) = rsi;\n    *((rbx + 0x38)) = rsi;\n    do {\nlabel_1:\n        eax = ebp;\n        return rax;\nlabel_3:\n        if (eax > 1) {\n            goto label_5;\n        }\n        rcx = *((rbx + 0x78));\n    } while (rcx == 0);\n    rsi = *((rbx + 0x58));\n    rax = *((rbx + 0x30));\n    if (*((rbx + 0x40)) <= rsi) {\n        rsi = *((rbx + 0x40));\n    }\n    if (rsi > rax) {\n        goto label_6;\n    }\n    goto label_0;\n    do {\n        rcx = *((rbx + 0x78));\nlabel_6:\n        rdx = *(rbx);\n        rdx += rax;\n        rdx += *((rbx + 0x28));\n        edx = *(rdx);\n        ecx = *((rcx + rdx));\n        rdx = *((rbx + 8));\n        *((rdx + rax)) = cl;\n        rax++;\n    } while (rsi != rax);\n    *((rbx + 0x30)) = rsi;\n    *((rbx + 0x38)) = rsi;\n    goto label_1;\nlabel_5:\n    fcn_00406d00 (rbx);\n    eax = ebp;\n    return rax;\nlabel_4:\n    fcn_00406c80 (rdi);\n    eax = ebp;\n    return rax;\nlabel_2:\n    eax = ebp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00407600",
            "funcStartAddr": "0x407600",
            "funcEndAddr": "0x407686",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x407600 */\n#include <stdint.h>\n \nint64_t fcn_00407600 (signed int64_t arg1, signed int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rax = *((rdi + 0x40));\n    rbx = rdi;\n    r12 = *((rdi + 0xc0));\n    if (rax > rsi) {\n        goto label_3;\n    }\n    if (rax >= *((rdi + 0x58))) {\n        goto label_3;\n    }\n    eax = fcn_004074b0 (rbx, rbp + 1);\n    while (rax > rbp) {\nlabel_0:\n        if (r12 < rbp) {\n            goto label_4;\n        }\nlabel_2:\n        eax = 0;\nlabel_1:\n        return rax;\nlabel_3:\n        rax = *((rbx + 0x30));\n    }\n    if (rax >= *((rbx + 0x58))) {\n        goto label_0;\n    }\n    eax = fcn_004074b0 (rbx, rbp + 1);\n    if (eax == 0) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_4:\n    rax = *((rbx + 0xb8));\n    rdx -= r12;\n    rdx <<= 3;\n    memset (rax + r12*8 + 8, 0, rbp);\n    *((rbx + 0xc0)) = rbp;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_00407690",
            "funcStartAddr": "0x407690",
            "funcEndAddr": "0x4076ae",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x407690 */\n#include <stdint.h>\n \nvoid fcn_00407690 (void ** ptr) {\n    rdi = ptr;\n    rbx = rdi;\n    free (*(rdi));\n    free (*((rbx + 0x18)));\n    rdi = rbx;\n    return free ();\n}\n"
        },
        {
            "funcName": "fcn_004076b0",
            "funcStartAddr": "0x4076b0",
            "funcEndAddr": "0x4076d8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4076b0 */\n#include <stdint.h>\n \nint32_t fcn_004076b0 (int64_t arg1) {\n    rdi = arg1;\n    eax = *((rdi + 8));\n    eax &= 0x400ff;\n    if (eax != 6) {\n        if (eax == 3) {\n            goto label_0;\n        }\n        return eax;\n    }\n    rdi = *(rdi);\n    void (*0x407690)() ();\nlabel_0:\n    rdi = *(rdi);\n    return free ();\n}\n"
        },
        {
            "funcName": "fcn_00407700",
            "funcStartAddr": "0x407700",
            "funcEndAddr": "0x407893",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x407700 */\n#include <stdint.h>\n \nint64_t fcn_00407700 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r15 = rsi;\n    rbx = rdi;\n    rdi = *((rdi + 0x10));\n    rbp = *((rbx + 8));\n    if (rdi < rbp) {\n        r12 = *((rbx + 0x18));\n        r13 = *((rbx + 0x28));\nlabel_0:\n        rax = rdi;\n        ecx = edx;\n        ecx &= 0xfffc00ff;\n        rax <<= 4;\n        rax += *(rbx);\n        *((rax + 8)) = rdx;\n        *(rax) = r15;\n        *((rax + 8)) = ecx;\n        cl = (dl == 6) ? 1 : 0;\n        if (dl == 5) {\n            cl = (*((rbx + 0xb4)) > 1) ? 1 : 0;\n        }\n        edx = *((rax + 0xa));\n        ecx <<= 4;\n        xmm0 = 0;\n        edx &= 0xffffffef;\n        edx |= ecx;\n        *((rax + 0xa)) = dl;\n        *((r12 + rdi*8)) = 0xffffffffffffffff;\n        rax = *((rbx + 0x10));\n        rax *= 3;\n        rax = r13 + rax*8;\n        __asm (\"movups xmmword [rax], xmm0\");\n        *((rax + 0x10)) = 0;\n        rax = *((rbx + 0x10));\n        rdx = rax * 3;\n        rax = *((rbx + 0x30));\n        rax = rax + rdx*8;\n        __asm (\"movups xmmword [rax], xmm0\");\n        *((rax + 0x10)) = 0;\n        rax = *((rbx + 0x10));\n        rdx = rax + 1;\n        *((rbx + 0x10)) = rdx;\n    }\n    rax = 0xaaaaaaaaaaaaaaa;\n    r14 = rbp + rbp;\n    if (r14 > rax) {\n        void (*0x4078c2)() ();\n    }\n    *((rsp + 8)) = rdx;\n    rsi <<= 5;\n    rax = realloc (*(rbx), rbp);\n    if (rax == 0) {\n        void (*0x4078c2)() ();\n    }\n    r13 = rbp;\n    *(rbx) = rax;\n    rbp += r14;\n    r13 <<= 4;\n    rbp <<= 4;\n    rax = realloc (*((rbx + 0x18)), r13);\n    r12 = rax;\n    rax = realloc (*((rbx + 0x20)), r13);\n    *(rsp) = rax;\n    rax = realloc (*((rbx + 0x28)), rbp);\n    r13 = rax;\n    rax = realloc (*((rbx + 0x30)), rbp);\n    rcx = *(rsp);\n    if (r12 != 0) {\n        if (rcx == 0) {\n            goto label_1;\n        }\n        if (r13 == 0) {\n            goto label_1;\n        }\n        rdx = *((rsp + 8));\n        if (rax == 0) {\n            goto label_1;\n        }\n        *((rbx + 0x18)) = r12;\n        rdi = *((rbx + 0x10));\n        *((rbx + 0x20)) = rcx;\n        *((rbx + 0x28)) = r13;\n        *((rbx + 0x30)) = rax;\n        *((rbx + 8)) = r14;\n        goto label_0;\n    }\nlabel_1:\n    rdi = r12;\n}\n"
        },
        {
            "funcName": "fcn_00407886",
            "funcStartAddr": "0x407886",
            "funcEndAddr": "0x40799c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x407886 */\n#include <stdint.h>\n \nint64_t fcn_00407886 (void * arg_8h, int64_t arg4, void * ptr) {\n    rcx = arg4;\n    rdi = ptr;\n    do {\n        return;\n        *(0x441f0f66fffffe) = eax;\n        *((rcx + rcx*4 - 0x19)) += cl;\n        *((rsp + 8)) = rax;\n        *(rsp) = rcx;\n        free (rdi);\n        rcx = *(rsp);\n        free (*(rsp));\n        free (r13);\n        rax = *((rsp + 8));\n        free (*((rsp + 8)));\n        rax = 0xffffffffffffffff;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_004078d0",
            "funcStartAddr": "0x4078d0",
            "funcEndAddr": "0x40796f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4078d0 */\n#include <stdint.h>\n \nint64_t fcn_004078d0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13 = rsi;\n    r13 <<= 4;\n    r12d = edx;\n    rbx = rdi;\n    rax = *(rdi);\n    rax = fcn_00407700 (rdi, *((rax + r13)), *((rax + r13 + 8)));\n    if (rax != -1) {\n        edi = r12d;\n        r8 = *(rbx);\n        rsi = rax;\n        di &= 0x3ff;\n        rsi <<= 4;\n        ecx = edi;\n        rsi += r8;\n        ecx &= 0x3ff;\n        ecx <<= 8;\n        edx = ecx;\n        ecx = *((rsi + 8));\n        ecx &= 0xfffc00ff;\n        ecx |= edx;\n        *((rsi + 8)) = ecx;\n        edx = *((r8 + r13 + 8));\n        ecx &= 0xfffc00ff;\n        edx >>= 8;\n        edx |= edi;\n        edx &= 0x3ff;\n        edx <<= 8;\n        edx |= ecx;\n        ecx = edx;\n        *((rsi + 8)) = edx;\n        ecx >>= 0x10;\n        edx = ecx;\n        edx |= 4;\n        *((rsi + 0xa)) = dl;\n        rdx = *((rbx + 0x20));\n        *((rdx + rax*8)) = rbp;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00407970",
            "funcStartAddr": "0x407970",
            "funcEndAddr": "0x407bf4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x407970 */\n#include <stdint.h>\n \nint64_t fcn_00407970 (int64_t arg1, int64_t arg2, int64_t arg3, uint32_t arg4, int64_t arg5) {\n    uint32_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\nlabel_4:\n    r9 = rsi;\n    r13 = rdx;\n    r12d = r8d;\n    rbx = rdi;\n    *((rsp + 8)) = rcx;\nlabel_1:\n    rcx = *(rbx);\n    rax = r9;\n    rdi = *((rbx + 0x28));\n    r14 = r13;\n    rax <<= 4;\n    rax += rcx;\n    if (*((rax + 8)) == 4) {\n        goto label_7;\n    }\n    r14 = r9 * 3;\n    r14 <<= 3;\n    r8 = rdi + r14;\n    rsi = *((r8 + 8));\n    if (rsi == 0) {\n        goto label_8;\n    }\n    rbp = r13 * 3;\n    r8 = *((r8 + 0x10));\n    rbp <<= 3;\n    rdi += rbp;\n    r15 = *(r8);\n    *((rdi + 8)) = 0;\n    if (rsi == 1) {\n        goto label_9;\n    }\n    rdx = *((rbx + 0x10));\n    rsi = rdx - 1;\n    rax = rsi;\n    rax <<= 4;\n    rax += rcx;\n    if ((*((rax + 0xa)) & 4) == 0) {\n        goto label_10;\n    }\n    if (rsi <= 0) {\n        goto label_10;\n    }\n    rdx <<= 4;\n    rcx -= rax;\n    r8 = *((rbx + 0x20));\n    rcx = rcx + rdx - 0x20;\n    while (*((r8 + rsi*8)) != r15) {\nlabel_0:\n        rax += rcx;\n        rsi--;\n        if ((*((rax + 0xa)) & 4) == 0) {\n            goto label_10;\n        }\n        if (rsi <= 0) {\n            goto label_10;\n        }\n    }\n    edx = *((rax + 8));\n    edx >>= 8;\n    edx &= 0x3ff;\n    if (r12d != edx) {\n        goto label_0;\n    }\n    al = fcn_00406a20 (rdi, rsi);\n    if (al == 0) {\n        goto label_2;\n    }\nlabel_5:\n    rax = *((rbx + 0x28));\n    rax = *((rax + r14 + 0x10));\n    r9 = *((rax + 8));\n    *(rsp) = r9;\n    rax = fcn_004078d0 (rbx, *((rax + 8)), r12d);\n    r13 = rax;\n    if (rax == -1) {\n        goto label_2;\n    }\nlabel_3:\n    rdi += rbp;\n    al = fcn_00406a20 (*((rbx + 0x28)), r13);\n    r9 = *(rsp);\n    if (al != 0) {\n        goto label_1;\n    }\n    do {\nlabel_2:\n        eax = 0xc;\nlabel_6:\n        return rax;\nlabel_9:\n        if (r9 == *((rsp + 8))) {\n            if (r9 != r13) {\n                goto label_11;\n            }\n        }\n        eax = *((rax + 8));\n        eax >>= 8;\n        eax &= 0x3ff;\n        r12d |= eax;\n        rax = fcn_004078d0 (rbx, r15, r12d);\n        r13 = rax;\n    } while (rax == -1);\n    rdi += rbp;\n    al = fcn_00406a20 (*((rbx + 0x28)), rax);\n    if (al == 0) {\n        goto label_2;\n    }\n    r9 = r15;\n    goto label_1;\nlabel_7:\n    rax = *((rbx + 0x18));\n    rbp = r13 * 3;\n    r15 = r9*8;\n    rbp <<= 3;\n    r9 = *((rax + r9*8));\n    *((rdi + rbp + 8)) = 0;\n    rsi = r9;\n    *(rsp) = r9;\n    rax = fcn_004078d0 (rbx, rsi, r12d);\n    r9 = *(rsp);\n    r13 = rax;\n    if (rax == -1) {\n        goto label_2;\n    }\n    rax = *((rbx + 0x18));\n    *(rsp) = r9;\n    rcx = *((rax + r15));\n    *((rax + r14*8)) = rcx;\n    goto label_3;\nlabel_10:\n    rax = fcn_004078d0 (rbx, r15, r12d);\n    r13 = rax;\n    if (rax == -1) {\n        goto label_2;\n    }\n    rdi += rbp;\n    al = fcn_00406a20 (*((rbx + 0x28)), r13);\n    if (al == 0) {\n        goto label_2;\n    }\n    eax = fcn_00407970 (rbx, r15, r13, *((rsp + 8)), r12d);\n    goto label_4;\n    if (eax == 0) {\n        goto label_5;\n    }\n    goto label_6;\nlabel_8:\n    rax = *((rbx + 0x18));\n    rcx = *((rax + r9*8));\n    *((rax + r13*8)) = rcx;\n    eax = 0;\n    goto label_6;\nlabel_11:\n    eax = fcn_00406a20 (rdi, r15);\n    edx = eax;\n    eax = 0;\n    if (dl != 0) {\n        goto label_6;\n    }\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_00407c00",
            "funcStartAddr": "0x407c00",
            "funcEndAddr": "0x407c59",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x407c00 */\n#include <stdint.h>\n \nint64_t fcn_00407c00 (void ** ptr) {\n    rdi = ptr;\n    rbx = rdi;\n    free (*((rdi + 0x30)));\n    free (*((rbx + 0x48)));\n    rax = *((rbx + 0x50));\n    rdx = rbx + 8;\n    if (rax != rdx) {\n        free (*((rax + 0x10)));\n        free (*((rbx + 0x50)));\n    }\n    free (*((rbx + 0x18)));\n    free (*((rbx + 0x60)));\n    free (*((rbx + 0x58)));\n    rdi = rbx;\n    return free ();\n}\n"
        },
        {
            "funcName": "fcn_00407c60",
            "funcStartAddr": "0x407c60",
            "funcEndAddr": "0x407c92",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x407c60 */\n#include <stdint.h>\n \nvoid fcn_00407c60 (void ** ptr) {\n    rdi = ptr;\n    rbx = rdi;\n    free (*((rdi + 0x10)));\n    free (*((rbx + 0x18)));\n    if (*((rbx + 0x8b)) == 0) {\n        return;\n    }\n    rdi = *((rbx + 8));\n    return free ();\n}\n"
        },
        {
            "funcName": "fcn_00407ca0",
            "funcStartAddr": "0x407ca0",
            "funcEndAddr": "0x407d58",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x407ca0 */\n#include <stdint.h>\n \nint64_t fcn_00407ca0 (signed int64_t arg1) {\n    rdi = arg1;\n    r14 = rdi;\n    if (*((rdi + 0xe8)) <= 0) {\n        goto label_1;\n    }\n    r13d = 0;\nlabel_0:\n    rax = *((r14 + 0xf8));\n    r12 = *((rax + r13*8));\n    if (*((r12 + 0x20)) <= 0) {\n        goto label_2;\n    }\n    ebx = 0;\n    do {\n        rax = *((r12 + 0x28));\n        rbp = *((rax + rbx*8));\n        rbx++;\n        free (*((rbp + 0x20)));\n        free (rbp);\n    } while (*((r12 + 0x20)) > rbx);\nlabel_2:\n    free (*((r12 + 0x28)));\n    rax = *((r12 + 0x10));\n    if (rax != 0) {\n        free (*((rax + 0x10)));\n        free (*((r12 + 0x10)));\n    }\n    r13++;\n    free (r12);\n    if (*((r14 + 0xe8)) > r13) {\n        goto label_0;\n    }\nlabel_1:\n    *((r14 + 0xe8)) = 0;\n    *((r14 + 0xc8)) = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00407fe0",
            "funcStartAddr": "0x407fe0",
            "funcEndAddr": "0x40802e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x407fe0 */\n#include <stdint.h>\n \nuint64_t fcn_00407fe0 (uint32_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rcx = *((rdi + 0x30));\n    rax = rsi + 1;\n    if (rax >= rcx) {\n        goto label_0;\n    }\n    rdx = *((rdi + 0x10));\n    rdi = rax*4;\n    if (*((rdx + rax*4)) != 0xffffffff) {\n        goto label_0;\n    }\n    rcx -= rsi;\n    rsi = rdx + rdi - 4;\n    edx = 2;\n    while (rdx != rcx) {\n        rdx++;\n        if (*((rsi + rdx*4 - 4)) != 0xffffffff) {\n            goto label_1;\n        }\n        eax = edx;\n    }\n    return rax;\nlabel_0:\n    eax = 1;\nlabel_1:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00408030",
            "funcStartAddr": "0x408030",
            "funcEndAddr": "0x408095",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x408030 */\n#include <stdint.h>\n \nuint64_t fcn_00408030 (uint32_t arg1, int64_t arg2, signed int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    eax = 0;\n    if (rdi <= 0) {\n        goto label_1;\n    }\n    r8 = *(rsi);\n    rdi--;\n    esi = 0;\nlabel_0:\n    if (rsi >= rdi) {\n        goto label_2;\n    }\n    rcx = rsi + rdi;\n    rcx >>= 1;\n    if (rdx <= *((r8 + rcx*8))) {\n        goto label_3;\n    }\n    goto label_4;\n    do {\n        rax = rsi + rcx;\n        rax >>= 1;\n        if (*((r8 + rax*8)) < rdx) {\n            goto label_5;\n        }\n        rcx = rax;\nlabel_3:\n    } while (rsi < rcx);\nlabel_2:\n    eax = 0;\n    if (rdx != *((r8 + rsi*8))) {\nlabel_1:\n        return rax;\nlabel_4:\n        rax = rcx;\n        rcx = rdi;\nlabel_5:\n        rsi = rax + 1;\n        rdi = rcx;\n        goto label_0;\n    }\n    rax = rsi + 1;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004080a0",
            "funcStartAddr": "0x4080a0",
            "funcEndAddr": "0x408199",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4080a0 */\n#include <stdint.h>\n \nuint64_t fcn_004080a0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\nlabel_0:\n    r15 = rcx;\n    r14 = rsi + 0x10;\n    r13d = r8d;\n    r12 = rdi;\n    rbx = rdx;\n    do {\n        rax = fcn_00408030 (*((rbp + 8)), r14, rbx);\n        if (rax != 0) {\n            goto label_2;\n        }\n        rax = rbx;\n        rax <<= 4;\n        rax += *(r12);\n        edx = *((rax + 8));\n        if (edx == r13d) {\n            if (*(rax) == r15) {\n                goto label_3;\n            }\n        }\n        al = fcn_00406a20 (rbp, rbx);\n        if (al == 0) {\n            goto label_4;\n        }\n        rbx *= 3;\n        rdx = *((r12 + 0x28));\n        rbx <<= 3;\n        rdx += rbx;\n        rax = *((rdx + 8));\n        if (rax == 0) {\n            goto label_2;\n        }\n        rdx = *((rdx + 0x10));\n        if (rax == 2) {\n            goto label_5;\n        }\nlabel_1:\n        rbx = *(rdx);\n    } while (1);\nlabel_5:\n    eax = fcn_004080a0 (r12, rbp, *((rdx + 8)), r15, r13d);\n    goto label_0;\n    if (eax == 0) {\n        rax = *((r12 + 0x28));\n        rdx = *((rax + rbx + 0x10));\n        goto label_1;\nlabel_3:\n        if (r13d != 9) {\n            goto label_2;\n        }\n        al = fcn_00406a20 (rbp, rbx);\n        if (al != 0) {\n            goto label_2;\n        }\nlabel_4:\n        eax = 0xc;\n    }\n    return rax;\nlabel_2:\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004081a0",
            "funcStartAddr": "0x4081a0",
            "funcEndAddr": "0x4081c3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4081a0 */\n#include <stdint.h>\n \nint64_t fcn_004081a0 (int32_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rdx >= *(rdi)) {\n        goto label_0;\n    }\n    rax = *(rsi);\n    do {\n        rcx = *((rax + rdx*8 + 8));\n        *((rax + rdx*8)) = rcx;\n        rdx++;\n    } while (rdx < *(rdi));\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004082c0",
            "funcStartAddr": "0x4082c0",
            "funcEndAddr": "0x40850e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4082c0 */\n#include <stdint.h>\n \nint64_t fcn_004082c0 (signed int64_t arg_80h, int64_t arg1, signed int64_t arg2, int64_t arg3, int64_t arg4, signed int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    signed int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    signed int64_t var_38h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    ebx = 0;\n    rax = *((rdi + 0x98));\n    r15 = *((rdi + 0xc8));\n    r12 = *((rsp + 0x80));\n    *((rsp + 8)) = rax;\n    rax = r15;\nlabel_0:\n    if (rbx >= rax) {\n        goto label_5;\n    }\n    r11 = rbx + rax;\n    rbp = *((rdi + 0xd8));\n    r10 = r11;\n    r10 >>= 0x3f;\n    r10 += r11;\n    r10 >>= 1;\n    r11 = r10 * 5;\n    if (r8 <= *((rbp + r11*8 + 8))) {\n        goto label_6;\n    }\n    goto label_7;\n    do {\n        r11 = rbx + r10;\n        rax = r11;\n        rax >>= 0x3f;\n        rax += r11;\n        rax >>= 1;\n        r11 = rax * 5;\n        r13 = rax;\n        if (*((rbp + r11*8 + 8)) < r8) {\n            goto label_8;\n        }\n        r10 = rax;\nlabel_6:\n    } while (rbx < r10);\nlabel_5:\n    if (r15 <= rbx) {\n        goto label_9;\n    }\n    r11 = *((rdi + 0xd8));\n    rax = rbx * 5;\n    rax = r11 + rax*8;\n    rax = 0xffffffffffffffff;\n    if (r8 != *((rax + 8))) {\n        rbx = rax;\n    }\nlabel_3:\n    rax = r15;\n    ebp = 0;\nlabel_1:\n    if (rbp >= rax) {\n        goto label_10;\n    }\n    r11 = rbp + rax;\n    r10 = r11;\n    r10 >>= 0x3f;\n    r10 += r11;\n    r11 = *((rdi + 0xd8));\n    r10 >>= 1;\n    r13 = r10 * 5;\n    if (r12 <= *((r11 + r13*8 + 8))) {\n        goto label_11;\n    }\n    goto label_12;\n    do {\n        r13 = rbp + r10;\n        rax = r13;\n        rax >>= 0x3f;\n        rax += r13;\n        rax >>= 1;\n        r13 = rax * 5;\n        r14 = rax;\n        if (*((r11 + r13*8 + 8)) < r12) {\n            goto label_13;\n        }\n        r10 = rax;\nlabel_11:\n    } while (rbp < r10);\nlabel_10:\n    if (r15 <= rbp) {\n        goto label_14;\n    }\n    r10 = *((rdi + 0xd8));\n    rax = rbp + rbp*4;\n    rax = r10 + rax*8;\n    rax = 0xffffffffffffffff;\n    if (r12 != *((rax + 8))) {\n    }\nlabel_4:\n    if (*(rsi) <= 0) {\n        goto label_15;\n    }\n    *((rsp + 0x20)) = r9;\n    r13 = rdi;\n    r14d = 0;\n    r15 = r12;\n    *((rsp + 0x18)) = r8;\n    *((rsp + 0x10)) = rcx;\n    *((rsp + 0x38)) = rsi;\n    *((rsp + 0x28)) = rbx;\n    *((rsp + 0x30)) = rbp;\n    do {\n        rax = *(rbp);\n        rdx = *((r13 + 0xd8));\n        rax = rsi * 5;\n        rax = rdx + rax*8;\n        rdx = *((rsp + 8));\n        rax = *(rax);\n        rax <<= 4;\n        rax += *(rdx);\n        r12 = *(rax);\n        eax = fcn_004068a0 (r13, *((rax + r14*8)), *(rax), *((rsp + 0x10)), *((rsp + 0x18)), *((rsp + 0x28)));\n        ebx = eax;\n        rax = *(rbp);\n        eax = fcn_004068a0 (r13, *((rax + r14*8)), r12, *((rsp + 0x20)), r15, *((rsp + 0x30)));\n        if (ebx != eax) {\n            eax = 1;\nlabel_2:\n            return rax;\nlabel_7:\n            r13 = r10;\n            r10 = rax;\nlabel_8:\n            rbx = r13 + 1;\n            rax = r10;\n            goto label_0;\nlabel_12:\n            r14 = r10;\n            r10 = rax;\nlabel_13:\n            rbp = r14 + 1;\n            rax = r10;\n            goto label_1;\n        }\n        rax = *((rsp + 0x38));\n        r14++;\n    } while (r14 < *(rax));\nlabel_15:\n    eax = 0;\n    goto label_2;\nlabel_9:\n    rbx = 0xffffffffffffffff;\n    goto label_3;\nlabel_14:\n    goto label_4;\n}\n"
        },
        {
            "funcName": "fcn_00408510",
            "funcStartAddr": "0x408510",
            "funcEndAddr": "0x408561",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x408510 */\n#include <stdint.h>\n \nuint32_t fcn_00408510 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r12 = rsi;\n    rbx = rdi;\n    while (rdx != 0) {\nlabel_0:\n        rbx = rdx;\n        rsi = rdx;\n        rdi = rbp;\n        eax = void (*r12)() ();\n        if (eax != 0) {\n            goto label_2;\n        }\n        rdx = *((rbx + 8));\n        ecx = 0;\n    }\n    goto label_3;\nlabel_1:\n    rbx = rdx;\nlabel_3:\n    rdx = *((rbx + 0x10));\n    if (rdx == rcx) {\n        goto label_4;\n    }\n    if (rdx != 0) {\n        goto label_0;\n    }\nlabel_4:\n    rdx = *(rbx);\n    rcx = rbx;\n    if (rdx != 0) {\n        goto label_1;\n    }\nlabel_2:\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00408570",
            "funcStartAddr": "0x408570",
            "funcEndAddr": "0x408733",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x408570 */\n#include <stdint.h>\n \nint64_t fcn_00408570 (int64_t arg2, void ** ptr) {\n    rsi = arg2;\n    rdi = ptr;\n    if (rsi == 0) {\n        goto label_5;\n    }\n    rax = *((rsi + 8));\n    if (rax == 0) {\n        goto label_5;\n    }\n    r12 = rsi;\n    rdx = *((rdi + 8));\n    rbx = rdi;\n    rsi = *(rdi);\n    rcx = rdx + rax*2;\n    if (rsi < rcx) {\n        goto label_6;\n    }\n    if (rdx == 0) {\n        goto label_7;\n    }\nlabel_2:\n    rbp = rdx + rax*2;\n    rax--;\n    rdx--;\n    rdi = rax;\n    rdi = ~rdi;\nlabel_1:\n    if (rdi >= 0) {\n        goto label_8;\n    }\n    do {\n        if (rdx < 0) {\n            goto label_8;\n        }\n        rsi = *((r12 + 0x10));\n        rcx = *((rbx + 0x10));\n        rsi = *((rsi + rax*8));\n        if (*((rcx + rdx*8)) == rsi) {\n            goto label_9;\n        }\n        if (*((rcx + rdx*8)) >= rsi) {\n            goto label_10;\n        }\n        rax--;\n        rbp--;\n        rdi = rax;\n        *((rcx + rbp*8)) = rsi;\n        rdi = ~rdi;\n    } while (rdi < 0);\nlabel_8:\n    if (rax >= 0) {\n        rax++;\n        rdx = *((rbx + 0x10));\n        rbp -= rax;\n        memcpy (rdx + rbp*8, *((r12 + 0x10)), rax*8);\n    }\n    rcx = *((rbx + 8));\n    rax = *((r12 + 8));\n    r8 = rcx + rax*2 - 1;\n    rdx = r8;\n    rdx -= rbp;\n    rdx++;\n    if (rdx == 0) {\n        goto label_3;\n    }\n    rax = rcx - 1;\n    rcx += rdx;\n    rdi = *((rbx + 0x10));\n    *((rbx + 8)) = rcx;\n    do {\nlabel_0:\n        rsi = *((rdi + r8*8));\n        rcx = *((rdi + rax*8));\n        r9 = rax + rdx;\n        r9 = rdi + r9*8;\n        if (rsi <= rcx) {\n            goto label_11;\n        }\n        r8--;\n        *(r9) = rsi;\n        rdx--;\n    } while (rdx != 0);\nlabel_3:\n    eax = 0;\nlabel_4:\n    return rax;\nlabel_11:\n    *(r9) = rcx;\n    rax--;\n    if (rax >= 0) {\n        goto label_0;\n    }\n    rdx <<= 3;\n    eax = memcpy (rdi, rdi + rbp*8, rdx);\n    eax = 0;\n    return rax;\nlabel_9:\n    rax--;\n    rdx--;\n    rdi = rax;\n    rdi = ~rdi;\n    goto label_1;\nlabel_10:\n    rdx--;\n    goto label_1;\nlabel_5:\n    eax = 0;\n    return rax;\nlabel_6:\n    rax += rsi;\n    rbp = rax + rax;\n    rax <<= 4;\n    rax = realloc (*((rdi + 0x10)), rax);\n    if (rax == 0) {\n        goto label_12;\n    }\n    rdx = *((rbx + 8));\n    *((rbx + 0x10)) = rax;\n    *(rbx) = rbp;\n    rax = *((r12 + 8));\n    if (rdx != 0) {\n        goto label_2;\n    }\nlabel_7:\n    *((rbx + 8)) = rax;\n    rax = *((r12 + 8));\n    memcpy (*((rbx + 0x10)), *((r12 + 0x10)), rax*8);\n    goto label_3;\nlabel_12:\n    eax = 0xc;\n    goto label_4;\n}\n"
        },
        {
            "funcName": "fcn_00408740",
            "funcStartAddr": "0x408740",
            "funcEndAddr": "0x408994",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x408740 */\n#include <stdint.h>\n \nint64_t fcn_00408740 (int64_t arg1, int64_t arg2, int64_t arg3, uint32_t arg4) {\n    uint32_t var_ch;\n    int64_t var_10h;\n    int64_t var_18h;\n    void * var_20h;\n    int64_t var_30h;\n    void * ptr;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\nlabel_0:\n    r15 = rsi;\n    r12 = rdx;\n    rbp = rdx * 3;\n    rbp <<= 3;\n    rbx = *((rsi + 0x28));\n    *(rsp) = rdi;\n    rbx += rbp;\n    *((rsp + 0xc)) = ecx;\n    rax = *((rbx + 8));\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x10)) = rdi;\n    rdi <<= 3;\n    rax = malloc (rax + 1);\n    *((rsp + 0x20)) = rax;\n    if (rax == 0) {\n        goto label_6;\n    }\n    rax = *((r15 + 0x30));\n    rdx = *(r15);\n    r13 = r12;\n    r13 <<= 4;\n    *((rax + rbp + 8)) = 0xffffffffffffffff;\n    rax = rdx + r13;\n    r8d = *((rax + 8));\n    if ((r8d & 0x3ff00) != 0) {\n        goto label_7;\n    }\nlabel_4:\n    if ((*((rax + 8)) & 8) == 0) {\n        goto label_8;\n    }\n    rsi = *((r15 + 0x28));\n    rax = rsi + rbp;\n    if (*((rax + 8)) <= 0) {\n        goto label_8;\n    }\n    r13d = 0;\n    r14d = 0;\n    while (rcx != 0) {\n        __asm (\"movdqu xmm0, xmmword [rax]\");\n        *((rsp + 0x30)) = xmm0;\n        rax = *((rax + 0x10));\n        *((rsp + 0x40)) = rax;\nlabel_1:\n        eax = fcn_00408570 (rsp + 0x10, rsp + 0x30);\n        if (eax != 0) {\n            goto label_5;\n        }\n        rax = *((r15 + 0x30));\n        if (*((rax + rbx + 8)) == 0) {\n            goto label_9;\n        }\nlabel_2:\n        rsi = *((r15 + 0x28));\n        r14++;\n        rax = rsi + rbp;\n        if (*((rax + 8)) <= r14) {\n            goto label_10;\n        }\nlabel_3:\n        rax = *((rax + 0x10));\n        rdx = *((rax + r14*8));\n        rax = *((r15 + 0x30));\n        rbx = rdx * 3;\n        rbx <<= 3;\n        rax += rbx;\n        rcx = *((rax + 8));\n        if (rcx == -1) {\n            goto label_11;\n        }\n    }\n    eax = fcn_00408740 (rsp + 0x30, r15, rdx, rcx);\n    goto label_0;\n    if (eax == 0) {\n        goto label_1;\n    }\nlabel_5:\n    return rax;\nlabel_9:\n    r13d = 1;\n    free (*((rsp + 0x40)));\n    goto label_2;\nlabel_11:\n    rax = rsi + rbp;\n    r13d = 1;\n    r14++;\n    if (*((rax + 8)) > r14) {\n        goto label_3;\n    }\nlabel_10:\n    al = fcn_00406a20 (rsp + 0x10, r12);\n    if (al == 0) {\n        goto label_6;\n    }\n    rax = *((r15 + 0x30));\n    rdx = rax + rbp;\n    if (*((rsp + 0xc)) == 1) {\n        goto label_12;\n    }\n    if (r13b == 0) {\n        goto label_12;\n    }\n    *((rdx + 8)) = 0;\n    goto label_13;\nlabel_7:\n    if (*((rbx + 8)) == 0) {\n        goto label_8;\n    }\n    rcx = *((rbx + 0x10));\n    rcx = *(rcx);\n    rcx <<= 4;\n    if ((*((rdx + rcx + 0xa)) & 4) != 0) {\n        goto label_4;\n    }\n    r8d >>= 8;\n    rcx = r12;\n    rdx = r12;\n    r8d &= 0x3ff;\n    eax = fcn_00407970 (r15, r12, rdx, rcx, r8);\n    if (eax != 0) {\n        goto label_5;\n    }\n    rax = *(r15);\n    rax += r13;\n    goto label_4;\nlabel_8:\n    al = fcn_00406a20 (rsp + 0x10, r12);\n    if (al != 0) {\n        rax = *((r15 + 0x30));\nlabel_12:\n        __asm (\"movdqa xmm2, xmmword [rsp + 0x10]\");\n        __asm (\"movups xmmword [rax + rbp], xmm2\");\n        rdx = *((rsp + 0x20));\n        *((rax + rbp + 0x10)) = rdx;\nlabel_13:\n        rdx = *(rsp);\n        rax = *((rsp + 0x20));\n        __asm (\"movdqa xmm1, xmmword [rsp + 0x10]\");\n        *((rdx + 0x10)) = rax;\n        eax = 0;\n        *(rdx) = xmm1;\n        return rax;\n    }\nlabel_6:\n    eax = 0xc;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004089a0",
            "funcStartAddr": "0x4089a0",
            "funcEndAddr": "0x408adf",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4089a0 */\n#include <stdint.h>\n \nuint64_t fcn_004089a0 (int64_t arg1, int64_t arg3, int64_t arg4, size_t * size) {\n    int64_t var_ch;\n    int64_t var_10h;\n    int64_t var_18h;\n    void * ptr;\n    rdi = arg1;\n    rdx = arg3;\n    rcx = arg4;\n    rsi = size;\n    r14 = rsi;\n    r13 = rdi;\n    ebx = ecx;\n    r12 = *((rsi + 8));\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x10)) = r12;\n    rax = malloc (r12*8);\n    *((rsp + 0x20)) = rax;\n    if (rax == 0) {\n        goto label_3;\n    }\n    if (r12 <= 0) {\n        goto label_4;\n    }\n    r12d = 0;\nlabel_1:\n    rax = *((r14 + 0x10));\n    rdx = *((rax + r12*8));\n    rax = *((r13 + 0x30));\n    rcx = rdx * 3;\n    rsi = rax + rcx*8;\n    r9 = *((rsi + 8));\n    if (r9 <= 0) {\n        goto label_5;\n    }\n    r11 = *((rsi + 0x10));\n    r10 = *(r13);\n    ecx = 0;\n    while (ebx != r8d) {\nlabel_0:\n        rcx++;\n        if (r9 == rcx) {\n            goto label_5;\n        }\n        rdi = *((r11 + rcx*8));\n        rax = *((r11 + rcx*8));\n        rax <<= 4;\n        rax += r10;\n        r8d = *((rax + 8));\n    }\n    if (rbp != *(rax)) {\n        goto label_0;\n    }\n    if (rdi == -1) {\n        goto label_5;\n    }\n    eax = fcn_004080a0 (r13, rsp + 0x10, rdx, rbp, ebx);\n    if (eax != 0) {\n        goto label_6;\n    }\nlabel_2:\n    r12++;\n    if (*((r14 + 8)) > r12) {\n        goto label_1;\n    }\nlabel_4:\n    free (*((r14 + 0x10)));\n    rax = *((rsp + 0x20));\n    __asm (\"movdqa xmm0, xmmword [rsp + 0x10]\");\n    *((r14 + 0x10)) = rax;\n    eax = 0;\n    *(r14) = xmm0;\n    return rax;\nlabel_5:\n    eax = fcn_00408570 (rsp + 0x10, rsi);\n    if (eax == 0) {\n        goto label_2;\n    }\nlabel_6:\n    *((rsp + 0xc)) = eax;\n    free (*((rsp + 0x20)));\n    eax = *((rsp + 0xc));\n    return rax;\nlabel_3:\n    eax = 0xc;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00408ae0",
            "funcStartAddr": "0x408ae0",
            "funcEndAddr": "0x408c92",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x408ae0 */\n#include <stdint.h>\n \nuint64_t fcn_00408ae0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r10 = *((rsi + 8));\n    eax = 0;\n    if (r10 == 0) {\n        goto label_4;\n    }\n    r8 = *((rdx + 8));\n    if (r8 == 0) {\n        goto label_4;\n    }\n    rax = r10 + r8;\n    r12 = rdx;\n    rbx = rdi;\n    rcx = *((rdi + 8));\n    r13 = *(rdi);\n    rdi = *((rdi + 0x10));\n    rdx = rax + rcx;\n    if (rdx > r13) {\n        goto label_5;\n    }\nlabel_3:\n    r13 = *((rbp + 0x10));\n    r11 = *((r12 + 0x10));\n    rsi = rcx + r10;\n    rax = r8 - 1;\n    r10--;\n    rsi += r8;\n    rcx--;\n    r8 = *((r13 + r10*8));\n    rdx = *((r11 + rax*8));\nlabel_1:\n    if (r8 == rdx) {\n        goto label_6;\n    }\n    if (r8 >= rdx) {\n        do {\n            goto label_7;\n        }\n        rax--;\n        if (rax < 0) {\n            goto label_8;\n        }\nlabel_0:\n        rdx = *((r11 + rax*8));\n    } while (r8 != rdx);\nlabel_6:\n    if (rcx >= 0) {\n        goto label_9;\n    }\n    goto label_10;\n    do {\n        rcx--;\n        if (rcx == -1) {\n            goto label_10;\n        }\nlabel_9:\n        r9 = *((rdi + rcx*8));\n    } while (r9 > r8);\n    if (r9 != r8) {\nlabel_10:\n        rsi--;\n        *((rdi + rsi*8)) = r8;\n    }\n    r10--;\n    if (r10 >= 0) {\n        rax--;\n        if (rax < 0) {\n            goto label_8;\n        }\n        r8 = *((r13 + r10*8));\n        goto label_0;\nlabel_4:\n        return rax;\nlabel_7:\n        r10--;\n        if (r10 < 0) {\n            goto label_8;\n        }\n        r8 = *((r13 + r10*8));\n        goto label_1;\n    }\nlabel_8:\n    rcx = *((rbx + 8));\n    rdx = *((rbp + 8));\n    rdx += rcx;\n    rdx += *((r12 + 8));\n    rax = rcx - 1;\n    r9 = rdx - 1;\n    rdx -= rsi;\n    rcx += rdx;\n    *((rbx + 8)) = rcx;\n    if (rdx <= 0) {\n        goto label_11;\n    }\n    if (rax < 0) {\n        goto label_11;\n    }\n    do {\nlabel_2:\n        r8 = *((rdi + r9*8));\n        rcx = *((rdi + rax*8));\n        r10 = rax + rdx;\n        r10 = rdi + r10*8;\n        if (r8 <= rcx) {\n            goto label_12;\n        }\n        r9--;\n        *(r10) = r8;\n        rdx--;\n    } while (rdx != 0);\n    rdi = *((rbx + 0x10));\n    edx = 0;\n    goto label_13;\nlabel_12:\n    rax--;\n    *(r10) = rcx;\n    if (rax != -1) {\n        goto label_2;\n    }\n    rdx <<= 3;\n    rdi = *((rbx + 0x10));\n    goto label_13;\nlabel_11:\n    rdx <<= 3;\nlabel_13:\n    eax = memcpy (rdi, rdi + rsi*8, rdx);\n    eax = 0;\n    do {\n        return rax;\nlabel_5:\n        r13 += rax;\n        rax = realloc (rdi, r13*8);\n        rdi = rax;\n        if (rax != 0) {\n            rcx = *((rbx + 8));\n            r10 = *((rbp + 8));\n            *((rbx + 0x10)) = rax;\n            *(rbx) = r13;\n            r8 = *((r12 + 8));\n            goto label_3;\n        }\n        eax = 0xc;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00408ca0",
            "funcStartAddr": "0x408ca0",
            "funcEndAddr": "0x408d77",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x408ca0 */\n#include <stdint.h>\n \nuint64_t fcn_00408ca0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    rbx = rdi;\n    rdi = *(rsi);\n    if (edi == 0xf) {\n        goto label_1;\n    }\n    r9 = rdi;\n    r10 = *(rbx);\n    eax = rdi + 1;\n    r9 <<= 6;\n    r9 += 8;\n    do {\n        *(rsi) = eax;\n        rsi = rdi;\n        rax = r10 + r9;\n        rsi <<= 6;\n        rdi = r10 + rsi;\n        *((rdi + 8)) = 0;\n        *((rdi + 0x10)) = rdx;\n        *((rdi + 0x18)) = rcx;\n        __asm (\"movdqu xmm0, xmmword [r8]\");\n        __asm (\"movups xmmword [rdi + 0x30], xmm0\");\n        *((r10 + rsi + 0x3a)) &= 0xf3;\n        *((rdi + 0x20)) = 0;\n        *((rdi + 0x28)) = 0;\n        *((rdi + 0x40)) = 0xffffffffffffffff;\n        if (rdx != 0) {\n            *(rdx) = rax;\n        }\n        if (rcx != 0) {\n            *(rcx) = rax;\n        }\nlabel_0:\n        return rax;\nlabel_1:\n        *((rsp + 0x18)) = r8;\n        *((rsp + 0x10)) = rcx;\n        *((rsp + 8)) = rdx;\n        *(rsp) = rsi;\n        rax = malloc (0x3c8);\n        r10 = rax;\n        if (rax == 0) {\n            goto label_2;\n        }\n        rax = *(rbx);\n        r9d = 8;\n        *(rbx) = r10;\n        edi = 0;\n        r8 = *((rsp + 0x18));\n        rcx = *((rsp + 0x10));\n        rdx = *((rsp + 8));\n        rsi = *(rsp);\n        *(r10) = rax;\n        eax = 1;\n    } while (1);\nlabel_2:\n    eax = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00408d80",
            "funcStartAddr": "0x408d80",
            "funcEndAddr": "0x408e29",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x408d80 */\n#include <stdint.h>\n \nuint64_t fcn_00408d80 (int64_t arg1, int64_t arg2) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    r13 = rsi + 0x70;\n    r12 = rsi + 0x80;\n    rbx = rdi;\n    rbp = *(rdi);\n    r14 = rsp + 8;\n    while (rax != 0) {\n        r14 = rbp + 8;\n        rbx = rax;\nlabel_0:\n        rax = fcn_00408ca0 (r13, r12, 0, 0, rbx + 0x28);\n        *(r14) = rax;\n        if (rax == 0) {\n            goto label_1;\n        }\n        *(rax) = rbp;\n        rbp = *(r14);\n        *((rbp + 0x32)) |= 4;\n        rax = *((rbx + 8));\n    }\n    edx = 0;\n    while (rax != 0) {\n        rbx = rax;\n        rax = *((rbx + 0x10));\n        if (rax != 0) {\n            if (rax != rdx) {\n                goto label_2;\n            }\n        }\n        rax = *(rbx);\n        rbp = *(rbp);\n        rdx = rbx;\n    }\n    rax = *((rsp + 8));\nlabel_1:\n    return rax;\nlabel_2:\n    r14 = rbp + 0x10;\n    rbx = rax;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00408e30",
            "funcStartAddr": "0x408e30",
            "funcEndAddr": "0x40904a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x408e30 */\n#include <stdint.h>\n \nint64_t fcn_00408e30 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r12 = rdx;\n    rbx = *(rsi);\n    rbp = *((rdx + 8));\n    *((rsp + 0x18)) = rdi;\n    if ((*((rsi + 0x38)) & 0x10) == 0) {\n        goto label_3;\n    }\n    if (rbp == 0) {\n        goto label_4;\n    }\n    rax = *((rdx + 0x28));\n    if (rax > 0x3f) {\n        goto label_2;\n    }\n    rdx = *((rbx + 0xa0));\n    if (((rdx >> rax) & 1) >= 0) {\n        goto label_2;\n    }\n    rax = rbx + 0x80;\n    r13 = rbx + 0x70;\n    r14 = rsp + 0x20;\n    r15 = rax;\n    rsi = rax;\n    *((rsp + 0x28)) = 8;\n    *((rsp + 8)) = rax;\n    rax = fcn_00408ca0 (r13, rsi, 0, 0, r14);\n    rbx = rax;\n    *((rsp + 0x28)) = 9;\n    rax = fcn_00408ca0 (r13, r15, 0, 0, r14);\n    r15 = rax;\nlabel_0:\n    *((rsp + 0x28)) = 0x10;\n    rax = fcn_00408ca0 (r13, *((rsp + 8)), rbp, r15, r14);\n    r11 = rax;\n    do {\nlabel_1:\n        rcx = r11;\n        *((rsp + 0x28)) = 0x10;\n        *((rsp + 0x10)) = r11;\n        rax = fcn_00408ca0 (r13, *((rsp + 8)), rbx, rcx, r14);\n        if (rax == 0) {\n            goto label_5;\n        }\n        r11 = *((rsp + 0x10));\n        if (r11 == 0) {\n            goto label_5;\n        }\n        if (rbx == 0) {\n            goto label_5;\n        }\n        if (r15 == 0) {\n            goto label_5;\n        }\n        rax = *((r12 + 0x28));\n        *((r15 + 0x28)) = rax;\n        *((rbx + 0x28)) = rax;\n        eax = *((r12 + 0x32));\n        edx = *((r15 + 0x32));\n        eax &= 8;\n        ecx = eax;\n        edx &= 0xfffffff7;\n        edx |= ecx;\n        *((r15 + 0x32)) = dl;\n        eax = *((rbx + 0x32));\n        eax &= 0xfffffff7;\n        eax |= ecx;\n        *((rbx + 0x32)) = al;\nlabel_2:\n        rax = rbp;\n        return rax;\nlabel_4:\n        rax = rbx + 0x80;\n        r13 = rbx + 0x70;\n        r14 = rsp + 0x20;\n        r15 = rax;\n        rsi = rax;\n        *((rsp + 0x28)) = 8;\n        *((rsp + 8)) = rax;\n        rax = fcn_00408ca0 (r13, rsi, 0, 0, r14);\n        rbx = rax;\n        *((rsp + 0x28)) = 9;\n        rax = fcn_00408ca0 (r13, r15, 0, 0, r14);\n        r11 = rax;\n        r15 = rax;\n    } while (1);\nlabel_3:\n    rax = rbx + 0x80;\n    r13 = rbx + 0x70;\n    r14 = rsp + 0x20;\n    r15 = rax;\n    rsi = rax;\n    *((rsp + 0x28)) = 8;\n    *((rsp + 8)) = rax;\n    rax = fcn_00408ca0 (r13, rsi, 0, 0, r14);\n    rbx = rax;\n    *((rsp + 0x28)) = 9;\n    rax = fcn_00408ca0 (r13, r15, 0, 0, r14);\n    r15 = rax;\n    r11 = rax;\n    if (rbp != 0) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_5:\n    rax = *((rsp + 0x18));\n    ebp = 0;\n    *(rax) = 0xc;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_004090d0",
            "funcStartAddr": "0x4090d0",
            "funcEndAddr": "0x40914f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4090d0 */\n#include <stdint.h>\n \nuint64_t fcn_004090d0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = *((rsi + 8));\n    *((rdi + 8)) = rdx;\n    if (rdx <= 0) {\n        goto label_0;\n    }\n    r12 = rsi;\n    rbx = rdx*8;\n    *(rdi) = rdx;\n    rax = malloc (rbx);\n    *((rbp + 0x10)) = rax;\n    if (rax == 0) {\n        goto label_1;\n    }\n    eax = memcpy (rax, *((r12 + 0x10)), rbx);\n    eax = 0;\n    do {\n        return rax;\nlabel_0:\n        xmm0 = 0;\n        *((rdi + 0x10)) = 0;\n        eax = 0;\n        __asm (\"movups xmmword [rdi], xmm0\");\n        return rax;\nlabel_1:\n        *((rbp + 8)) = 0;\n        eax = 0xc;\n        *(rbp) = 0;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00409150",
            "funcStartAddr": "0x409150",
            "funcEndAddr": "0x4092d2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x409150 */\n#include <stdint.h>\n \nuint64_t fcn_00409150 (int64_t arg1, int64_t arg2, signed int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rsi == 0) {\n        goto label_3;\n    }\n    r12 = *((rsi + 8));\n    if (rdx == 0) {\n        goto label_4;\n    }\n    if (r12 <= 0) {\n        goto label_4;\n    }\n    r15 = *((rdx + 8));\n    if (r15 <= 0) {\n        goto label_5;\n    }\n    r13 = rdi;\n    rbx = rsi;\n    *(r13) = rdi;\n    rdi <<= 3;\n    rax = malloc (r12 + r15);\n    *((r13 + 0x10)) = rax;\n    if (rax == 0) {\n        goto label_6;\n    }\n    rdi = rax;\n    r10 = *((rbx + 0x10));\n    r14d = 0;\n    ecx = 0;\n    edx = 0;\n    while (rsi <= r8) {\n        r8b = (rax == 0) ? 1 : 0;\n        *(rdi) = rsi;\n        rdx++;\n        r8d = (int32_t) r8b;\n        rcx += r8;\nlabel_0:\n        r12 = *((rbx + 8));\n        rdi += 8;\n        if (rdx >= r12) {\n            goto label_7;\n        }\n        rsi = r10 + rdx*8;\n        if (r15 <= rcx) {\n            goto label_8;\n        }\n        r9 = *((rbp + 0x10));\n        rsi = *(rsi);\n        r14++;\n        r8 = *((r9 + rcx*8));\n    }\n    rcx++;\n    *(rdi) = r8;\n    goto label_0;\nlabel_4:\n    if (r12 <= 0) {\nlabel_3:\n        if (rdx != 0) {\n            if (*((rdx + 8)) > 0) {\n                goto label_9;\n            }\n        }\n        *((rdi + 0x10)) = 0;\n        xmm0 = 0;\n        eax = 0;\n        *(rdi) = xmm0;\nlabel_2:\n        return rax;\nlabel_9:\n        rsi = rdx;\n    }\nlabel_5:\n    void (*0x4090d0)() ();\nlabel_7:\n    rdx = *((rbp + 8));\n    while (1) {\nlabel_1:\n        *((r13 + 8)) = r14;\n        eax = 0;\n        return rax;\n        rbx = rdx;\n        rbx -= rcx;\n        r14 += rbx;\n        memcpy (rax + r14*8, r9 + rcx*8, rbx*8);\n    }\nlabel_8:\n    r12 -= rdx;\n    r14 += r12;\n    memcpy (rdi, rsi, r12*8);\n    goto label_1;\nlabel_6:\n    eax = 0xc;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_004092e0",
            "funcStartAddr": "0x4092e0",
            "funcEndAddr": "0x4095e0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4092e0 */\n#include <stdint.h>\n \nint64_t fcn_004092e0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r10 = *((rdx + 8));\n    if (r10 == 0) {\n        goto label_7;\n    }\n    r8d = ecx;\n    r12 = r8 + r10;\n    if (r10 <= 0) {\n        goto label_8;\n    }\n    rax = *((rdx + 0x10));\n    r10 = rax + r10*8;\n    do {\n        r12 += *(rax);\n        rax += 8;\n    } while (r10 != rax);\nlabel_8:\n    rax = *((rsi + 0x88));\n    r15d = ecx;\n    r13 = rsi;\n    *((rsp + 0x18)) = rdi;\n    rax &= r12;\n    rdx = rax * 3;\n    rax = *((rsi + 0x40));\n    rax = rax + rdx*8;\n    r11 = *(rax);\n    if (r11 <= 0) {\n        goto label_9;\n    }\n    rbx = *((rax + 0x10));\n    r10d = 0;\n    r9d = ecx;\n    while (*(r14) != r12) {\nlabel_0:\n        r10++;\n        if (r10 == r11) {\n            goto label_9;\n        }\n        r14 = *((rbx + r10*8));\n    }\n    eax = *((r14 + 0x68));\n    eax &= 0xf;\n    if (eax != r9d) {\n        goto label_0;\n    }\n    al = fcn_00406480 (*((r14 + 0x50)), rbp);\n    if (al == 0) {\n        goto label_0;\n    }\nlabel_1:\n    rax = r14;\n    return rax;\nlabel_9:\n    rax = calloc (0x70, 1);\n    r14 = rax;\n    if (rax == 0) {\n        goto label_5;\n    }\n    rax = rax + 8;\n    rdi = rax;\n    *(rsp) = rax;\n    eax = fcn_004090d0 (rdi, rbp);\n    if (eax != 0) {\n        goto label_10;\n    }\n    eax = *((r14 + 0x68));\n    edx = r15d;\n    ecx = r15d;\n    edx &= 0xf;\n    eax &= 0xfffffff0;\n    eax |= edx;\n    *((r14 + 0x68)) = al;\n    rax = *(rsp);\n    *((r14 + 0x50)) = rax;\n    if (*((rbp + 8)) <= 0) {\n        goto label_11;\n    }\n    rax = r14 + 0x18;\n    r15d = 0;\n    *((rsp + 0x10)) = r12;\n    r10d = 0;\n    *((rsp + 8)) = rax;\n    r12 = r14;\n    r14 = r15;\n    r15 = rbp;\n    do {\n        rax = *((r15 + 0x10));\n        rax = *((rax + r14*8));\n        rax <<= 4;\n        rax += *(r13);\n        ebx = *((rax + 8));\n        esi = *((rax + 8));\n        ebx >>= 8;\n        bx &= 0x3ff;\n        edi = (int32_t) bx;\n        if (esi == 1) {\n            if (edi == 0) {\n                goto label_12;\n            }\n        }\n        edx = *((r12 + 0x68));\n        eax = *((rax + 0xa));\n        r11d = edx;\n        al >>= 4;\n        edx &= 0xffffffdf;\n        r11b >>= 5;\n        eax |= r11d;\n        eax &= 1;\n        eax <<= 5;\n        eax |= edx;\n        *((r12 + 0x68)) = al;\n        if (esi == 2) {\n            goto label_13;\n        }\n        if (esi == 4) {\n            eax |= 0x40;\n            *((r12 + 0x68)) = al;\n        }\nlabel_2:\n        if (edi != 0) {\n            rax = *(rsp);\n            if (rax == *((r12 + 0x50))) {\n                goto label_14;\n            }\nlabel_6:\n            if ((bl & 1) == 0) {\n                goto label_15;\n            }\n            if ((bpl & 1) != 0) {\n                if ((bl & 2) != 0) {\n                    goto label_4;\n                }\nlabel_3:\n                if ((bl & 0x10) != 0) {\n                    if ((bpl & 2) == 0) {\n                        goto label_4;\n                    }\n                }\n                ebx &= 0x40;\n                if (ebx == 0) {\n                    goto label_12;\n                }\n                if ((bpl & 4) != 0) {\n                    goto label_12;\n                }\n            }\nlabel_4:\n            rdx = r14;\n            rdx -= r10;\n            if (rdx >= 0) {\n                rax = *((r12 + 0x10));\n                if (rdx >= rax) {\n                    goto label_16;\n                }\n                rax--;\n                *((r12 + 0x10)) = rax;\n                fcn_004081a0 (r12 + 0x10, *((rsp + 8)), rdx);\n            }\nlabel_16:\n            r10++;\n        }\nlabel_12:\n        r14++;\n    } while (r14 < *((r15 + 8)));\n    r14 = r12;\n    r12 = *((rsp + 0x10));\nlabel_11:\n    eax = fcn_00406b50 (r13, r14, *((rsp + 0x10)));\n    if (eax == 0) {\n        goto label_1;\n    }\n    fcn_00407c00 (r14);\nlabel_5:\n    rax = *((rsp + 0x18));\n    r14d = 0;\n    *(rax) = 0xc;\n    goto label_1;\nlabel_13:\n    eax |= 0x10;\n    *((r12 + 0x68)) = al;\n    goto label_2;\nlabel_15:\n    if ((bl & 2) == 0) {\n        goto label_3;\n    }\n    if ((bpl & 1) == 0) {\n        goto label_3;\n    }\n    goto label_4;\nlabel_14:\n    rax = malloc (0x18);\n    *((r12 + 0x50)) = rax;\n    if (rax == 0) {\n        goto label_17;\n    }\n    eax = fcn_004090d0 (rax, r15);\n    if (eax != 0) {\n        goto label_5;\n    }\n    *((r12 + 0x68)) |= 0x80;\n    r10d = 0;\n    goto label_6;\nlabel_7:\n    *(rdi) = 0;\n    r14d = 0;\n    goto label_1;\nlabel_17:\n    fcn_00407c00 (r12);\n    goto label_5;\nlabel_10:\n    free (r14);\n    goto label_5;\n}\n"
        },
        {
            "funcName": "fcn_004095e0",
            "funcStartAddr": "0x4095e0",
            "funcEndAddr": "0x4097c8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4095e0 */\n#include <stdint.h>\n \nint64_t fcn_004095e0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rbp = *((rdx + 8));\n    if (rbp == 0) {\n        goto label_4;\n    }\n    if (rbp <= 0) {\n        goto label_5;\n    }\n    rax = *((rdx + 0x10));\n    rcx = rax + rbp*8;\n    do {\n        rbp += *(rax);\n        rax += 8;\n    } while (rcx != rax);\nlabel_5:\n    rax = *((rsi + 0x88));\n    r14 = rdx;\n    r12 = rsi;\n    r13 = rdi;\n    rax &= rbp;\n    rdx = rax * 3;\n    rax = *((rsi + 0x40));\n    rax = rax + rdx*8;\n    r10 = *(rax);\n    if (r10 <= 0) {\n        goto label_6;\n    }\n    r11 = *((rax + 0x10));\n    r9d = 0;\n    do {\n        rbx = *((r11 + r9*8));\n        if (*(rbx) == rbp) {\n            al = fcn_00406480 (rbx + 8, r14);\n            if (al != 0) {\n                goto label_3;\n            }\n        }\n        r9++;\n    } while (r10 != r9);\nlabel_6:\n    rax = calloc (0x70, 1);\n    rbx = rax;\n    if (rax == 0) {\n        goto label_7;\n    }\n    r15 = rax + 8;\n    eax = fcn_004090d0 (r15, r14);\n    if (eax != 0) {\n        goto label_8;\n    }\n    rax = *((r14 + 8));\n    *((rbx + 0x50)) = r15;\n    if (rax <= 0) {\n        goto label_9;\n    }\n    rsi = *((r14 + 0x10));\n    r8 = *(r12);\n    r9 = rsi + rax*8;\n    while (edi != 1) {\n        ecx = *((rbx + 0x68));\n        edx = *((rax + 0xa));\n        r10d = ecx;\n        dl >>= 4;\n        ecx &= 0xffffffdf;\n        r10b >>= 5;\n        edx |= r10d;\n        edx &= 1;\n        edx <<= 5;\n        edx |= ecx;\n        *((rbx + 0x68)) = dl;\n        if (edi == 2) {\n            goto label_10;\n        }\n        if (edi != 4) {\n            goto label_11;\n        }\n        edx |= 0x40;\n        *((rbx + 0x68)) = dl;\nlabel_0:\n        rsi += 8;\n        if (r9 == rsi) {\n            goto label_9;\n        }\nlabel_1:\n        rax = *(rsi);\n        rax <<= 4;\n        rax += r8;\n        edi = *((rax + 8));\n    }\n    if ((*((rax + 8)) & 0x3ff00) == 0) {\n        goto label_0;\n    }\n    edx = *((rbx + 0x68));\n    eax = *((rax + 0xa));\n    ecx = edx;\n    al >>= 4;\n    edx &= 0xffffffdf;\n    cl >>= 5;\n    eax |= ecx;\n    eax &= 1;\n    eax <<= 5;\n    eax |= edx;\n    *((rbx + 0x68)) = al;\nlabel_2:\n    rsi += 8;\n    *((rbx + 0x68)) |= 0x80;\n    if (r9 != rsi) {\n        goto label_1;\n    }\nlabel_9:\n    eax = fcn_00406b50 (r12, rbx, rbp);\n    if (eax != 0) {\n        goto label_12;\n    }\nlabel_3:\n    rax = rbx;\n    return rax;\nlabel_10:\n    edx |= 0x10;\n    *((rbx + 0x68)) = dl;\n    goto label_0;\nlabel_11:\n    if (edi == 0xc) {\n        goto label_2;\n    }\n    if ((*((rax + 8)) & 0x3ff00) == 0) {\n        goto label_0;\n    }\n    goto label_2;\nlabel_8:\n    free (rbx);\n    do {\nlabel_7:\n        *(r13) = 0xc;\n        ebx = 0;\n        goto label_3;\nlabel_4:\n        *(rdi) = 0;\n        ebx = 0;\n        goto label_3;\nlabel_12:\n        fcn_00407c00 (rbx);\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_004097d0",
            "funcStartAddr": "0x4097d0",
            "funcEndAddr": "0x409878",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4097d0 */\n#include <stdint.h>\n \nuint64_t fcn_004097d0 (signed int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_ch;\n    int64_t var_10h;\n    void * ptr;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    if (rcx <= 0) {\n        goto label_1;\n    }\n    r14 = rdi;\n    r13 = rdx;\n    r12 = rcx;\n    ebx = 0;\n    while (rsi != 0) {\n        if (rdx != 0) {\n            rdx += 8;\n            rsi += 8;\n            eax = fcn_00409150 (rsp + 0x10, rsi, rdx);\n            *((rsp + 0xc)) = eax;\n            if (eax != 0) {\n                goto label_2;\n            }\n            rax = fcn_004095e0 (rsp + 0xc, r14, rsp + 0x10);\n            *((rbp + rbx*8)) = rax;\n            free (*((rsp + 0x20)));\n            eax = *((rsp + 0xc));\n            if (eax != 0) {\n                goto label_2;\n            }\n        }\n        rbx++;\n        if (r12 == rbx) {\n            goto label_3;\n        }\nlabel_0:\n        rsi = *((rbp + rbx*8));\n        rdx = *((r13 + rbx*8));\n    }\n    *((rbp + rbx*8)) = rdx;\n    rbx++;\n    if (r12 != rbx) {\n        goto label_0;\n    }\nlabel_3:\n    eax = 0;\nlabel_2:\n    return rax;\nlabel_1:\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00409880",
            "funcStartAddr": "0x409880",
            "funcEndAddr": "0x409c02",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x409880 */\n#include <stdint.h>\n \nint64_t fcn_00409880 (int64_t arg1, int64_t arg2, signed int64_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_2ch;\n    int64_t var_3ch;\n    int64_t var_40h;\n    int64_t var_48h;\n    void * ptr;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r11d = 0;\n    rbp = *((rdi + 0xc8));\n    rax = *((rdi + 0xc8));\nlabel_4:\n    if (r11 >= rax) {\n        goto label_7;\n    }\n    r10 = r11 + rax;\n    r12 = *((rdi + 0xd8));\n    r9 = r10;\n    r9 >>= 0x3f;\n    r9 += r10;\n    r9 >>= 1;\n    r10 = r9 * 5;\n    if (rdx <= *((r12 + r10*8 + 8))) {\n        goto label_8;\n    }\n    goto label_9;\n    do {\n        r10 = r9 + r11;\n        rax = r10;\n        rax >>= 0x3f;\n        rax += r10;\n        rax >>= 1;\n        r10 = rax * 5;\n        rbx = rax;\n        if (rdx > *((r12 + r10*8 + 8))) {\n            goto label_10;\n        }\n        r9 = rax;\nlabel_8:\n    } while (r9 > r11);\nlabel_7:\n    if (rbp <= r11) {\n        goto label_11;\n    }\n    r9 = r11 * 5;\n    rax = *((rdi + 0xd8));\n    rbx = r9*8;\n    *((rsp + 0x18)) = rbx;\n    if (*((rax + rbx + 8)) != rdx) {\n        goto label_11;\n    }\n    if (r11 == -1) {\n        goto label_11;\n    }\n    *((rsp + 0x20)) = rcx;\n    rcx = rsi + 0x10;\n    rbx = rdx;\n    r12 = rsi;\n    *((rsp + 0x2c)) = r8d;\n    r13 = *((rdi + 0x98));\n    *(rsp) = rcx;\nlabel_2:\n    rcx = *((rsp + 0x18));\n    r15 = rax + rcx;\n    goto label_12;\nlabel_0:\n    rax = *((r13 + 0x18));\n    r10 = *((rbp + 0xb8));\n    rcx = *((rax + r9*8));\n    rax = r14*8;\n    r10 += rax;\n    *((rsp + 0x10)) = rax;\n    r9 = *(r10);\n    *((rsp + 8)) = rcx;\n    if (r9 == 0) {\n        goto label_13;\n    }\n    rax = fcn_00408030 (*((r9 + 0x10)), r9 + 0x18, rcx);\n    if (rax != 0) {\n        goto label_1;\n    }\n    eax = fcn_004090d0 (rsp + 0x40, r9 + 8);\n    *((rsp + 0x3c)) = eax;\n    al = fcn_00406a20 (rsp + 0x40, *((rsp + 8)));\n    edx = *((rsp + 0x3c));\n    if (edx != 0) {\n        goto label_14;\n    }\n    if (al != 1) {\n        goto label_14;\n    }\n    r10 = *((rsp + 0x10));\n    r10 += *((rbp + 0xb8));\nlabel_3:\n    *((rsp + 8)) = r10;\n    rax = fcn_004095e0 (rsp + 0x3c, r13, rsp + 0x40);\n    r10 = *((rsp + 8));\n    *(r10) = rax;\n    free (*((rsp + 0x50)));\n    rax = *((rbp + 0xb8));\n    if (*((rax + r14*8)) == 0) {\n        goto label_15;\n    }\n    do {\nlabel_1:\n        r15 += 0x28;\n        if (*((r15 - 8)) == 0) {\n            goto label_11;\n        }\nlabel_12:\n        r9 = *(r15);\n        r10 = *((r12 + 8));\n        rax = fcn_00408030 (r10, *(rsp), r9);\n    } while (rax == 0);\n    r8 = *((r15 + 0x18));\n    r8 += rbx;\n    r14 = r8;\n    r14 -= *((r15 + 0x10));\n    if (rbx != r14) {\n        goto label_0;\n    }\n    rcx = *((r13 + 0x28));\n    rax = r9 * 3;\n    rax = rcx + rax*8;\n    rax = *((rax + 0x10));\n    r14 = *(rax);\n    rax = fcn_00408030 (r10, *(rsp), *(rax));\n    if (rax != 0) {\n        goto label_1;\n    }\n    *((rsp + 0x40)) = 1;\n    *((rsp + 0x48)) = 1;\n    rax = malloc (8);\n    *((rsp + 0x50)) = rax;\n    if (rax == 0) {\n        goto label_16;\n    }\n    *(rax) = r14;\n    eax = 0;\nlabel_6:\n    *((rsp + 0x3c)) = eax;\n    eax = fcn_004089a0 (r13, rsp + 0x40, *((rsp + 0x20)), *((rsp + 0x2c)));\n    r14d = eax;\n    eax = fcn_00408570 (r12, rsp + 0x40);\n    r15d = eax;\n    free (*((rsp + 0x50)));\n    eax = *((rsp + 0x3c));\n    edx = r14d;\n    edx |= r15d;\n    edx |= eax;\n    if (edx != 0) {\n        goto label_17;\n    }\n    rax = *((rbp + 0xd8));\n    goto label_2;\nlabel_13:\n    *((rsp + 0x10)) = r10;\n    *((rsp + 0x40)) = 1;\n    *((rsp + 0x48)) = 1;\n    rax = malloc (8);\n    *((rsp + 0x50)) = rax;\n    if (rax == 0) {\n        goto label_18;\n    }\n    rcx = *((rsp + 8));\n    *((rsp + 0x3c)) = 0;\n    r10 = *((rsp + 0x10));\n    *(rax) = rcx;\n    goto label_3;\nlabel_9:\n    rbx = r9;\n    r9 = rax;\nlabel_10:\n    r11 = rbx + 1;\n    rax = r9;\n    goto label_4;\nlabel_11:\n    eax = 0;\nlabel_5:\n    return rax;\nlabel_15:\n    eax = *((rsp + 0x3c));\n    if (eax == 0) {\n        goto label_1;\n    }\n    goto label_5;\nlabel_14:\n    free (*((rsp + 0x50)));\n    eax = *((rsp + 0x3c));\n    if (eax != 0) {\n        goto label_5;\n    }\nlabel_18:\n    eax = 0xc;\n    return rax;\nlabel_17:\n    if (eax != 0) {\n        goto label_5;\n    }\n    eax = r15d;\n    if (r14d != 0) {\n        eax = r14d;\n    }\n    goto label_5;\nlabel_16:\n    *((rsp + 0x48)) = 0;\n    eax = 0xc;\n    *((rsp + 0x40)) = 0;\n    goto label_6;\n}\n"
        },
        {
            "funcName": "fcn_00409c10",
            "funcStartAddr": "0x409c10",
            "funcEndAddr": "0x409d51",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x409c10 */\n#include <stdint.h>\n \nint64_t fcn_00409c10 (int64_t arg1, uint32_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    void ** var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r12 = *((rdi + 0x98));\n    if (*(rsi) <= 0) {\n        goto label_4;\n    }\n    r15 = rdi;\n    r14 = rsi;\n    r13 = rcx;\n    ebx = 0;\n    while (*((rax + 8)) != 8) {\nlabel_0:\n        rbx++;\n        if (rbx >= *(r14)) {\n            goto label_4;\n        }\nlabel_1:\n        rax = *(rdx);\n        rbp = *((rax + rbx*8));\n        rax = *((rax + rbx*8));\n        rax <<= 4;\n        rax += *(r12);\n    }\n    rax = *(rax);\n    if (rax > 0x3f) {\n        goto label_0;\n    }\n    rcx = *((r12 + 0xa0));\n    if (((rcx >> rax) & 1) >= 0) {\n        goto label_0;\n    }\n    rcx = *((r15 + 0xe8));\n    r9 = *((r15 + 0xf8));\n    if (rcx == *((r15 + 0xf0))) {\n        goto label_5;\n    }\nlabel_3:\n    *((rsp + 0x10)) = r9;\n    *((rsp + 8)) = rcx;\n    *((rsp + 0x18)) = rdx;\n    rax = calloc (1, 0x30);\n    rcx = *((rsp + 8));\n    r9 = *((rsp + 0x10));\n    *((r9 + rcx*8)) = rax;\n    if (rax == 0) {\n        goto label_2;\n    }\n    rcx++;\n    *(rax) = r13;\n    rdx = *((rsp + 0x18));\n    rbx++;\n    *((rax + 8)) = rbp;\n    *((r15 + 0xe8)) = rcx;\n    if (rbx < *(r14)) {\n        goto label_1;\n    }\nlabel_4:\n    eax = 0;\n    do {\n        return rax;\nlabel_2:\n        eax = 0xc;\n    } while (1);\nlabel_5:\n    rax = rcx + rcx;\n    *((rsp + 8)) = rdx;\n    rsi <<= 4;\n    *((rsp + 0x10)) = rax;\n    rax = realloc (r9, rcx);\n    rdx = *((rsp + 8));\n    r9 = rax;\n    if (rax == 0) {\n        goto label_2;\n    }\n    *((r15 + 0xf8)) = rax;\n    rax = *((rsp + 0x10));\n    rcx = *((r15 + 0xe8));\n    *((r15 + 0xf0)) = rax;\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_00409d60",
            "funcStartAddr": "0x409d60",
            "funcEndAddr": "0x409e4e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x409d60 */\n#include <stdint.h>\n \nint64_t fcn_00409d60 (int32_t arg1, uint32_t arg2, signed int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rsi < 0) {\n        goto label_2;\n    }\n    if (*((rdi + 0x58)) == rsi) {\n        goto label_3;\n    }\n    if (*((rdi + 0x90)) <= 1) {\n        goto label_4;\n    }\n    rax = *((rdi + 0x10));\n    while (ebx == 0xffffffff) {\n        rsi--;\n        if (rsi == -1) {\n            goto label_2;\n        }\n        ebx = *((rax + rsi*4));\n    }\n    if (*((rbp + 0x8e)) != 0) {\n        goto label_5;\n    }\nlabel_1:\n    eax = 0;\n    if (ebx == 0xa) {\n        goto label_6;\n    }\n    do {\nlabel_0:\n        return rax;\nlabel_4:\n        rax = *((rdi + 8));\n        rdx = *((rdi + 0x80));\n        eax = *((rax + rsi));\n        rcx = rax;\n        rax >>= 6;\n        rax = *((rdx + rax*8));\n        rax >>= cl;\n        rdx = rax;\n        eax = 1;\n        edx &= 1;\n    } while (edx != 0);\n    eax = 0;\n    if (cl != 0xa) {\n        goto label_0;\n    }\nlabel_6:\n    eax = 0;\n    al = (*((rbp + 0x8d)) != 0) ? 1 : 0;\n    eax += eax;\n    return rax;\nlabel_2:\n    eax = *((rbp + 0x70));\n    return rax;\nlabel_3:\n    edx &= 2;\n    eax -= eax;\n    eax &= 2;\n    eax += 8;\n    goto label_0;\nlabel_5:\n    eax = iswalnum (ebx);\n    if (eax != 0) {\n        goto label_7;\n    }\n    if (ebx != 0x5f) {\n        goto label_1;\n    }\nlabel_7:\n    eax = 1;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00409e50",
            "funcStartAddr": "0x409e50",
            "funcEndAddr": "0x409f7b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x409e50 */\n#include <stdint.h>\n \nint64_t fcn_00409e50 (int64_t arg1, uint32_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rax = *((rdi + 8));\n    ecx = *((rax + rdx));\n    eax = *((rsi + 8));\n    if (al == 3) {\n        goto label_3;\n    }\n    if (al <= 3) {\n        goto label_4;\n    }\n    if (al != 5) {\n        eax = 0;\n        if (al != 7) {\n            goto label_5;\n        }\n        if (cl < 0) {\n            goto label_6;\n        }\n    }\n    if (cl == 0xa) {\n        goto label_7;\n    }\n    if (cl != 0) {\n        goto label_0;\n    }\n    rcx = *((rdi + 0x98));\n    eax = 0;\n    if ((*((rcx + 0xd8)) & 0x80) != 0) {\n        goto label_6;\n    }\n    do {\nlabel_0:\n        ebx = *((rsi + 8));\n        eax = 1;\n        if ((ebx & 0x3ff00) != 0) {\n            ebx >>= 8;\n            eax = fcn_00409d60 (rdi, rdx, *((rdi + 0xa0)));\n            ecx = ebx;\n            edx = eax;\n            cx &= 0x3ff;\n            if ((bl & 4) != 0) {\n                goto label_8;\n            }\n            ebx &= 8;\n            if (ebx != 0) {\n                if ((al & 1) != 0) {\n                    goto label_9;\n                }\n            }\nlabel_2:\n            if ((cl & 0x20) != 0) {\n                eax = 0;\n                if ((dl & 2) == 0) {\n                    goto label_1;\n                }\n            }\n            edx >>= 3;\n            eax = 1;\n            edx &= 1;\n            ecx &= 0x80;\n            if (ecx == 0) {\n                eax = edx;\n                goto label_1;\n            }\n        }\nlabel_1:\n        return rax;\nlabel_4:\n        eax = 0;\n        if (al != 1) {\n            goto label_10;\n        }\n    } while (*(rsi) == cl);\nlabel_6:\n    return rax;\nlabel_5:\n    return rax;\nlabel_10:\n    return rax;\nlabel_3:\n    eax = (int32_t) cl;\n    r8 = *(rsi);\n    rax >>= 6;\n    rax = *((r8 + rax*8));\n    rax >>= cl;\n    rcx = rax;\n    eax = 0;\n    ecx &= 1;\n    if (ecx != 0) {\n        goto label_0;\n    }\n    return rax;\nlabel_8:\n    eax = 0;\n    if ((dl & 1) == 0) {\n        goto label_1;\n    }\n    ebx &= 8;\n    if (ebx == 0) {\n        goto label_2;\n    }\n    return rax;\nlabel_7:\n    rcx = *((rdi + 0x98));\n    eax = 0;\n    if ((*((rcx + 0xd8)) & 0x40) != 0) {\n        goto label_0;\n    }\n    return rax;\nlabel_9:\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00409f80",
            "funcStartAddr": "0x409f80",
            "funcEndAddr": "0x40a048",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x409f80 */\n#include <stdint.h>\n \nuint64_t fcn_00409f80 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r12 = rdx;\n    rbx = rsi;\n    eax = fcn_00409d60 (rdi, rcx, *((rdi + 0xa0)));\n    if (rbx <= 0) {\n        goto label_2;\n    }\n    rdx = *((rbp + 0x98));\n    r11d = eax;\n    r9 = *(r12);\n    eax &= 1;\n    esi = 0;\n    ebp &= 8;\n    r11d &= 2;\n    r8 = *(rdx);\n    r10d = eax;\nlabel_1:\n    rax = *((r9 + rsi*8));\n    rdx = *((r9 + rsi*8));\n    rdx <<= 4;\n    rdx += r8;\n    ecx = *((rdx + 8));\n    ecx >>= 8;\n    edi = ecx;\n    di &= 0x3ff;\n    if (*((rdx + 8)) != 2) {\n        goto label_3;\n    }\n    if (di == 0) {\n        goto label_4;\n    }\n    if ((cl & 4) == 0) {\n        goto label_5;\n    }\n    if (r10d == 0) {\n        goto label_3;\n    }\n    ecx &= 8;\n    if (ecx != 0) {\n        goto label_3;\n    }\n    do {\nlabel_0:\n        if ((dil & 0x20) != 0) {\n            if (r11d == 0) {\n                goto label_3;\n            }\n        }\n        edi &= 0x80;\n        if (edi != 0) {\n            if (ebp == 0) {\n                goto label_3;\n            }\n        }\nlabel_4:\n        return rax;\nlabel_5:\n        ecx &= 8;\n    } while (ecx == 0);\n    if (r10d == 0) {\n        goto label_0;\n    }\nlabel_3:\n    rsi++;\n    if (rsi != rbx) {\n        goto label_1;\n    }\nlabel_2:\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040a050",
            "funcStartAddr": "0x40a050",
            "funcEndAddr": "0x40a837",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x40a050 */\n#include <stdint.h>\n \nint64_t fcn_0040a050 (signed int64_t arg1, signed int64_t arg2, int64_t arg3) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_2ch;\n    int64_t var_32h;\n    int64_t var_38h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r10d = edx;\n    r15 = rsi;\n    rbx = rdi;\n    rax = *((rdi + 0x28));\n    rbp -= rax;\n    if (rax > rsi) {\n        if (*((rdi + 0x90)) > 1) {\n            *((rdi + 0x20)) = 0;\n        }\n        rax = *((rbx + 0x50));\n        *((rbx + 0x30)) = 0;\n        *((rbx + 0x28)) = 0;\n        *((rbx + 0x58)) = rax;\n        rax = *((rbx + 0x60));\n        *((rbx + 0x38)) = 0;\n        *((rbx + 0x68)) = rax;\n        eax = r10d;\n        eax &= 1;\n        *((rbx + 0x8c)) = 0;\n        eax -= eax;\n        eax &= 2;\n        eax += 4;\n        *((rbx + 0x70)) = eax;\n        if (*((rbx + 0x8b)) == 0) {\n            goto label_27;\n        }\n    }\n    if (rbp == 0) {\n        goto label_28;\n    }\n    do {\n        rax = *((rbx + 0x38));\n        edx = *((rbx + 0x8c));\n        r14 = *((rbx + 0x30));\n        if (rax <= rbp) {\n            goto label_29;\n        }\n        if (dl != 0) {\n            goto label_30;\n        }\n        r14 -= rbp;\n        eax = fcn_00409d60 (rbx, rbp - 1, r10d);\n        *((rbx + 0x70)) = eax;\n        if (*((rbx + 0x90)) > 1) {\n            goto label_31;\n        }\nlabel_1:\n        edx = *((rbx + 0x8b));\n        if (dl != 0) {\n            goto label_32;\n        }\nlabel_8:\n        *((rbx + 0x38)) -= rbp;\n        *((rbx + 0x30)) = r14;\nlabel_6:\n        rax = *((rbx + 0x58));\n        rcx = *((rbx + 0x68));\n        esi = *((rbx + 0x90));\n        rax -= rbp;\n        rcx -= rbp;\nlabel_9:\n        if (dl == 0) {\nlabel_4:\n            *((rbx + 8)) += rbp;\n        }\nlabel_0:\n        *((rbx + 0x28)) = r15;\n        *((rbx + 0x58)) = rax;\n        *((rbx + 0x68)) = rcx;\n        if (esi <= 1) {\n            goto label_33;\n        }\n        rdi = rbx;\n        if (*((rbx + 0x88)) != 0) {\n            goto label_34;\n        }\n        eax = fcn_00406d00 (rdi);\nlabel_2:\n        *((rbx + 0x48)) = 0;\n        eax = 0;\nlabel_3:\n        return rax;\nlabel_27:\n        rax = *(rbx);\n        *((rbx + 8)) = rax;\n    } while (rbp != 0);\nlabel_28:\n    esi = *((rbx + 0x90));\n    rax = *((rbx + 0x58));\n    rcx = *((rbx + 0x68));\n    goto label_0;\nlabel_31:\n    memmove (*((rbx + 0x10)), rdi + rbp*4, r14*4);\n    r14 = *((rbx + 0x30));\n    r14 -= rbp;\n    goto label_1;\nlabel_34:\n    eax = fcn_00406eb0 (rdi);\n    if (eax == 0) {\n        goto label_2;\n    }\n    goto label_3;\nlabel_5:\n    rax = *(rbx);\n    rax += rbp;\n    ecx = *((r11 + rax - 1));\n    rax = *((rbx + 0x78));\n    *((rbx + 0x38)) = 0;\n    if (rax != 0) {\n        ecx = *((rax + rcx));\n    }\n    rdx = *((rbx + 0x80));\n    eax = (int32_t) cl;\n    rax >>= 6;\n    rax = *((rdx + rax*8));\n    edx = 1;\n    rax >>= cl;\n    if ((al & 1) == 0) {\n        edx = 0;\n        if (cl != 0xa) {\n            goto label_35;\n        }\n        edx = 0;\n        dl = (*((rbx + 0x8d)) != 0) ? 1 : 0;\n        edx += edx;\n    }\nlabel_35:\n    rax = *((rbx + 0x58));\n    rcx = *((rbx + 0x68));\n    *((rbx + 0x70)) = edx;\n    rax -= rbp;\n    rcx -= rbp;\n    if (*((rbx + 0x8b)) == 0) {\n        goto label_4;\n    }\n    *((rbx + 0x28)) = r15;\n    *((rbx + 0x58)) = rax;\n    *((rbx + 0x68)) = rcx;\nlabel_33:\n    if (*((rbx + 0x8b)) != 0) {\n        goto label_36;\n    }\n    *((rbx + 0x30)) = rax;\n    goto label_2;\nlabel_29:\n    if (dl != 0) {\n        goto label_37;\n    }\nlabel_18:\n    rsi = *((rbx + 0x90));\n    r11 = *((rbx + 0x28));\n    *((rbx + 0x30)) = 0;\n    if (esi <= 1) {\n        goto label_5;\n    }\n    if (*((rbx + 0x89)) != 0) {\n        goto label_38;\n    }\nlabel_10:\n    r13 = r11 + rax;\n    if (r15 <= r13) {\n        goto label_39;\n    }\n    rax = rbx + 0x20;\n    *((rsp + 8)) = rax;\n    rax = rsp + 0x38;\n    *((rsp + 0x10)) = rax;\n    do {\n        r12 = *((rbx + 0x50));\n        *((rsp + 4)) = r10d;\n        rax = *((rbx + 0x20));\n        r12 -= r13;\n        rsi += r13;\n        *((rsp + 0x18)) = rax;\n        rax = fcn_00406400 (*((rsp + 0x10)), *(rbx), r12, *((rsp + 8)));\n        edx = *((rsp + 0x38));\n        r10d = *((rsp + 4));\n        rcx = rax - 1;\n        if (rcx > 0xfffffffffffffffc) {\n            goto label_40;\n        }\nlabel_19:\n        r13 += rax;\n    } while (r15 > r13);\n    r13 -= r15;\n    r12 = r13;\n    *((rbx + 0x30)) = r13;\n    if (edx == 0xffffffff) {\n        goto label_41;\n    }\nlabel_16:\n    if (*((rbx + 0x8e)) != 0) {\n        goto label_42;\n    }\nlabel_23:\n    eax = 0;\n    if (edx == 0xa) {\n        eax = 0;\n        al = (*((rbx + 0x8d)) != 0) ? 1 : 0;\n        eax += eax;\n    }\nlabel_24:\n    *((rbx + 0x70)) = eax;\nlabel_15:\n    if (r12 != 0) {\n        goto label_43;\n    }\nlabel_21:\n    edx = *((rbx + 0x8b));\nlabel_20:\n    *((rbx + 0x38)) = r12;\n    goto label_6;\nlabel_30:\n    r13 = *((rbx + 0x18));\n    rcx = r14;\n    edi = 0;\n    if (r12 >= 0) {\n        while (rdx <= rbp) {\n            goto label_44;\n        }\n        rdi = rax + 1;\nlabel_7:\n        if (rdi >= rcx) {\n            goto label_45;\n        }\n        rdx = rdi + rcx;\n        rax = rdx;\n        rax >>= 0x3f;\n        rax += rdx;\n        rax >>= 1;\n        rdx = *((r13 + rax*8));\n        rsi = rax;\n    }\n    rcx = rax;\n    goto label_7;\nlabel_32:\n    memmove (*((rbx + 8)), rdi + rbp, r14);\n    r14 = *((rbx + 0x30));\n    edx = *((rbx + 0x8b));\n    r14 -= rbp;\n    goto label_8;\nlabel_45:\n    r12 = rax + 1;\n    if (rdx >= rbp) {\n        goto label_46;\n    }\nlabel_12:\n    eax = fcn_00409d60 (rbx, rsi, r10d);\n    *((rbx + 0x70)) = eax;\n    if (rbp != r12) {\n        goto label_47;\n    }\n    if (rbp >= r14) {\n        goto label_47;\n    }\n    if (*((r13 + r12*8)) != rbp) {\n        goto label_47;\n    }\n    r8 = r14;\n    r8 -= rbp;\n    memmove (*((rbx + 0x10)), rdi + rbp*4, r8*4);\n    rdx -= rbp;\n    memmove (*((rbx + 8)), rdi + rbp, *((rbx + 0x30)));\n    rax = *((rbx + 0x30));\n    *((rbx + 0x38)) -= rbp;\n    rax -= rbp;\n    *((rbx + 0x30)) = rax;\n    if (rax <= 0) {\n        goto label_48;\n    }\n    rcx = *((rbx + 0x18));\n    eax = 0;\n    rsi = rcx + rbp*8;\n    do {\n        rdx = *((rsi + rax*8));\n        rdx -= rbp;\n        *((rcx + rax*8)) = rdx;\n        rax++;\n    } while (*((rbx + 0x30)) > rax);\nlabel_48:\n    rax = *((rbx + 0x58));\n    rcx = *((rbx + 0x68));\n    esi = *((rbx + 0x90));\n    edx = *((rbx + 0x8b));\n    rax -= rbp;\n    rcx -= rbp;\n    goto label_9;\nlabel_47:\n    rax = *((rbx + 0x50));\n    rcx = *((rbx + 0x60));\n    *((rbx + 0x8c)) = 0;\n    rax -= r15;\n    rcx -= r15;\n    rdx = rax + rbp;\n    *((rbx + 0x58)) = rdx;\n    rdx = rcx + rbp;\n    *((rbx + 0x68)) = rdx;\n    if (r12 > 0) {\n        goto label_49;\n    }\n    goto label_50;\n    do {\n        r12--;\n        if (r12 == 0) {\n            goto label_50;\n        }\nlabel_49:\n    } while (*((r13 + r12*8 - 8)) == rbp);\nlabel_50:\n    if (r12 >= r14) {\n        goto label_51;\n    }\n    rdx = *((rbx + 0x10));\n    while (*((rdx + r12*4)) == 0xffffffff) {\n        r12++;\n        if (r12 == r14) {\n            goto label_52;\n        }\n    }\nlabel_13:\n    rdx = *((r13 + r12*8));\n    rdx -= rbp;\n    *((rbx + 0x30)) = rdx;\n    if (rdx == 0) {\n        goto label_14;\n    }\n    if (rdx <= 0) {\n        goto label_53;\n    }\n    rax = *((rbx + 0x10));\n    rcx = rax + rdx*4;\n    do {\n        *(rax) = 0xffffffff;\n        rax += 4;\n    } while (rcx != rax);\nlabel_53:\n    memset (*((rbx + 8)), 0xff, rdx);\n    rax = *((rbx + 0x58));\n    rcx = *((rbx + 0x68));\n    rdx = *((rbx + 0x30));\n    rax -= rbp;\n    rcx -= rbp;\nlabel_14:\n    *((rbx + 0x38)) = rdx;\n    esi = *((rbx + 0x90));\n    edx = *((rbx + 0x8b));\n    goto label_9;\nlabel_38:\n    rcx = *(rbx);\n    rdx = rbp;\n    rdx -= rsi;\n    r13 = rcx + r11;\n    rdx += r13;\n    r12 = r13 + rbp - 1;\n    if (rcx < rdx) {\n        rcx = rdx;\n    }\n    if (rcx <= r12) {\n        goto label_54;\n    }\n    goto label_10;\nlabel_11:\n    r12--;\n    if (rcx > r12) {\n        goto label_10;\n    }\nlabel_54:\n    edx = *(r12);\n    edx &= 0xffffffc0;\n    if (dl == 0x80) {\n        goto label_11;\n    }\n    rdx = *((rbx + 0x58));\n    rcx = *((rbx + 0x78));\n    rsi = r12;\n    rdx += r13;\n    rdx -= r12;\n    if (rcx != 0) {\n        goto label_55;\n    }\nlabel_26:\n    rax = rsp + 0x38;\n    *((rsp + 4)) = r10d;\n    *((rsp + 0x38)) = 0;\n    rax = fcn_00406400 (rsp + 0x2c, rsi, rdx, rax);\n    rdx = r13 + rbp;\n    r10d = *((rsp + 4));\n    rdx -= r12;\n    if (rdx <= rax) {\n        if (rax <= 0xfffffffffffffffd) {\n            goto label_56;\n        }\n    }\nlabel_17:\n    r11 = *((rbx + 0x28));\n    rax = *((rbx + 0x38));\n    goto label_10;\nlabel_46:\n    r12 = rax;\n    rsi = rax - 1;\n    goto label_12;\nlabel_36:\n    if (*((rbx + 0x88)) != 0) {\n        goto label_57;\n    }\n    rcx = *((rbx + 0x78));\n    if (rcx == 0) {\n        goto label_2;\n    }\n    rdx = *((rbx + 0x30));\n    if (*((rbx + 0x40)) <= rax) {\n        rax = *((rbx + 0x40));\n    }\n    if (rax > rdx) {\n        goto label_58;\n    }\n    goto label_59;\n    do {\n        r15 = *((rbx + 0x28));\n        rcx = *((rbx + 0x78));\nlabel_58:\n        rsi = *(rbx);\n        rsi += rdx;\n        esi = *((rsi + r15));\n        esi = *((rcx + rsi));\n        rcx = *((rbx + 8));\n        *((rcx + rdx)) = sil;\n        rdx++;\n    } while (rax != rdx);\nlabel_25:\n    *((rbx + 0x30)) = rax;\n    *((rbx + 0x38)) = rax;\n    goto label_2;\nlabel_44:\n    r12 = rax;\n    rsi--;\n    goto label_12;\n    if (rsi != 0) {\nlabel_51:\n        goto label_13;\n    }\nlabel_52:\n    *((rbx + 0x30)) = 0;\n    edx = 0;\n    goto label_14;\nlabel_39:\n    r13 -= r15;\n    *((rbx + 0x30)) = r13;\n    r12 = r13;\nlabel_41:\n    eax = fcn_00409d60 (rbx, r14 - 1, r10d);\n    *((rbx + 0x70)) = eax;\n    goto label_15;\nlabel_56:\n    rax -= rdx;\n    edx = *((rsp + 0x2c));\n    *((rbx + 0x20)) = 0;\n    r12 = rax;\n    *((rbx + 0x30)) = rax;\n    if (edx != 0xffffffff) {\n        goto label_16;\n    }\n    goto label_17;\nlabel_57:\n    rax = fcn_00406c80 (rbx);\n    goto label_2;\nlabel_37:\n    rdx = *((rbx + 0x50));\n    *((rbx + 0x8c)) = 0;\n    rdx += rbp;\n    rdx -= r15;\n    *((rbx + 0x58)) = rdx;\n    rdx = *((rbx + 0x60));\n    rdx += rbp;\n    rdx -= r15;\n    *((rbx + 0x68)) = rdx;\n    goto label_18;\nlabel_40:\n    if (rax == 0) {\n        goto label_60;\n    }\n    if (r12 == 0) {\n        goto label_60;\n    }\n    rax = *(rbx);\n    edx = *((rax + r13));\nlabel_22:\n    rax = *((rsp + 0x18));\n    *((rbx + 0x20)) = rax;\n    eax = 1;\n    goto label_19;\n    if (r12 <= 0) {\nlabel_43:\n        goto label_61;\n    }\n    rax = *((rbx + 0x10));\n    rdx = rax + r12*4;\n    do {\n        *(rax) = 0xffffffff;\n        rax += 4;\n    } while (rdx != rax);\nlabel_61:\n    edx = *((rbx + 0x8b));\n    if (dl == 0) {\n        goto label_20;\n    }\n    memset (*((rbx + 8)), 0xff, r12);\n    r12 = *((rbx + 0x30));\n    goto label_21;\nlabel_60:\n    edx = 0;\n    goto label_22;\nlabel_42:\n    edi = edx;\n    *((rsp + 4)) = edx;\n    eax = iswalnum (edi);\n    if (eax != 0) {\n        goto label_62;\n    }\n    edx = *((rsp + 4));\n    if (edx != 0x5f) {\n        goto label_23;\n    }\nlabel_62:\n    eax = 1;\n    goto label_24;\nlabel_59:\n    rax = rdx;\n    goto label_25;\nlabel_55:\n    esi = 6;\n    if (rdx <= 6) {\n        rsi = rdx;\n    }\n    esi--;\n    rax = (int64_t) esi;\n    if (esi < 0) {\n        goto label_63;\n    }\n    do {\n        esi = *((r12 + rax));\n        esi = *((rcx + rsi));\n        *((rsp + rax + 0x32)) = sil;\n        rax--;\n    } while (eax >= 0);\nlabel_63:\n    rsi = rsp + 0x32;\n    goto label_26;\n}\n"
        },
        {
            "funcName": "fcn_0040a840",
            "funcStartAddr": "0x40a840",
            "funcEndAddr": "0x40aa65",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x40a840 */\n#include <stdint.h>\n \nint64_t fcn_0040a840 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    void * ptr;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    xmm0 = 0;\n    r13 = rdx;\n    rdx = rsi * 3;\n    rax = *((rdi + 0x38));\n    *((rsp + 0x20)) = xmm0;\n    rbp = rax + rdx*8;\n    *((rsp + 0x18)) = rcx;\n    *((rsp + 0x30)) = 0;\n    r10 = *((rbp + 8));\n    if (r10 <= 0) {\n        goto label_3;\n    }\n    r12 = rdi;\n    r14 = rsi;\n    ebx = 0;\n    goto label_4;\nlabel_1:\n    if (rax != 0) {\n        goto label_5;\n    }\n    rax = fcn_00408030 (*((r13 + 8)), r13 + 0x10, r8);\n    if (rax == 0) {\n        goto label_5;\n    }\nlabel_2:\n    rdx += r9;\n    eax = fcn_00408ae0 (rsp + 0x20, *((rsp + 0x18)), *((r12 + 0x38)));\n    if (eax != 0) {\n        goto label_6;\n    }\n    r10 = *((rbp + 8));\n    do {\nlabel_0:\n        rbx++;\n        if (r10 <= rbx) {\n            goto label_7;\n        }\nlabel_4:\n        rax = *((rbp + 0x10));\n        rax = *((rax + rbx*8));\n    } while (r14 == rax);\n    rdx = rax;\n    rdx <<= 4;\n    rdx += *(r12);\n    if ((*((rdx + 8)) & 8) == 0) {\n        goto label_0;\n    }\n    r9 = rax * 3;\n    rcx = *((r12 + 0x28));\n    r11 = rbp + 0x10;\n    r9 <<= 3;\n    rcx += r9;\n    r15 = *((rcx + 0x10));\n    *((rsp + 0x10)) = rcx;\n    r8 = *(r15);\n    *((rsp + 8)) = r8;\n    rax = fcn_00408030 (r10, r11, *(r15));\n    rcx = *((rsp + 0x10));\n    r8 = *((rsp + 8));\n    if (*((rcx + 8)) > 1) {\n        goto label_1;\n    }\n    if (rax != 0) {\n        goto label_0;\n    }\n    rax = fcn_00408030 (*((r13 + 8)), r13 + 0x10, r8);\n    if (rax != 0) {\n        goto label_2;\n    }\n    goto label_0;\nlabel_5:\n    r15 = *((r15 + 8));\n    if (r15 <= 0) {\n        goto label_0;\n    }\n    rax = fcn_00408030 (r10, r11, r15);\n    if (rax != 0) {\n        goto label_0;\n    }\n    rax = fcn_00408030 (*((r13 + 8)), r13 + 0x10, rdx);\n    if (rax == 0) {\n        goto label_0;\n    }\n    goto label_2;\nlabel_7:\n    r9d = 0;\n    rbx = rsp + 0x30;\n    if (r10 <= 0) {\n        goto label_8;\n    }\n    do {\n        rax = *((rbp + 0x10));\n        r10 = *((rax + r9*8));\n        rax = fcn_00408030 (*((rsp + 0x28)), rbx, *((rax + r9*8)));\n        if (rax == 0) {\n            r11 = *((r13 + 8));\n            r12 = r13 + 0x10;\n            rax = fcn_00408030 (r11, r12, rdx);\n            rax--;\n            rdx = rax;\n            if (rax < 0) {\n                goto label_9;\n            }\n            if (rax >= r11) {\n                goto label_9;\n            }\n            r11--;\n            *((r13 + 8)) = r11;\n            fcn_004081a0 (r13 + 8, r12, rdx);\n        }\nlabel_9:\n        r9++;\n    } while (*((rbp + 8)) > r9);\nlabel_8:\n    do {\n        eax = free (*((rsp + 0x30)));\n        eax = 0;\n        return rax;\nlabel_6:\n        *((rsp + 8)) = eax;\n        free (*((rsp + 0x30)));\n        eax = *((rsp + 8));\n        return rax;\nlabel_3:\n        edi = 0;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040aa70",
            "funcStartAddr": "0x40aa70",
            "funcEndAddr": "0x40b57d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x40aa70 */\n#include <stdint.h>\n \nuint64_t fcn_0040aa70 (int64_t arg1, void ** arg2) {\n    void * ptr;\n    size_t var_10h;\n    void * var_18h;\n    size_t size;\n    size_t * var_28h;\n    uint32_t var_30h;\n    void * var_38h;\n    int64_t var_40h;\n    void ** var_48h;\n    int64_t var_50h;\n    int64_t var_60h;\n    int64_t var_70h;\n    int64_t var_78h;\n    void * var_80h;\n    int64_t var_90h;\n    int64_t var_91h;\n    int64_t var_a0h;\n    int64_t var_b0h;\n    rdi = arg1;\n    rsi = arg2;\n    *((rsp + 0x48)) = rsi;\n    rax = malloc (0x3800);\n    *((rsp + 0x20)) = rax;\n    if (rax == 0) {\n        goto label_5;\n    }\n    r9 = *((rsp + 0x48));\n    rax = *((rsp + 0x20));\n    xmm0 = 0;\n    *((rsp + 0x50)) = xmm0;\n    rax += 0x1800;\n    *((rsp + 0x60)) = xmm0;\n    *((rsp + 8)) = rax;\n    *((r9 + 0x58)) = 0;\n    *((r9 + 0x60)) = 0;\n    if (*((r9 + 0x10)) <= 0) {\n        goto label_27;\n    }\n    r8d = 0;\n    r12d = 0;\n    *((rsp + 0x18)) = r8;\n    r8 = rbp;\n    do {\n        rdi = *((rsp + 0x18));\n        rax = rdi*8;\n        *((rsp + 0x28)) = rax;\n        rax = *((r9 + 0x18));\n        r15 = *((rax + rdi*8));\n        r15 <<= 4;\n        r15 += *(r8);\n        eax = *((r15 + 8));\n        ebp = *((r15 + 8));\n        eax >>= 8;\n        ax &= 0x3ff;\n        if (ebp == 1) {\n            goto label_28;\n        }\n        if (ebp == 3) {\n            goto label_29;\n        }\n        if (ebp == 5) {\n            goto label_30;\n        }\n        if (ebp == 7) {\n            goto label_31;\n        }\nlabel_2:\n        rax = *((rsp + 0x18));\n    } while (rax < *((r9 + 0x10)));\n    if (r12 <= 0) {\n        goto label_32;\n    }\n    *((rsp + 0x78)) = 0;\n    rbx = r12 + 1;\n    *((rsp + 0x70)) = rbx;\n    rbx <<= 3;\n    rax = malloc (rbx);\n    r13 = rax;\n    *((rsp + 0x80)) = rax;\n    if (rax == 0) {\n        goto label_33;\n    }\n    rax = 0xaaaaaaaaaaaa855;\n    *((rsp + 0x50)) = 0;\n    if (r12 > rax) {\n        goto label_33;\n    }\n    rax = r12 * 3;\n    rax <<= 3;\n    rdi = rax;\n    *((rsp + 0x38)) = rax;\n    rax = malloc (rdi);\n    *((rsp + 8)) = rax;\n    if (rax == 0) {\n        goto label_33;\n    }\n    rax = *((rsp + 8));\n    rbx -= 8;\n    xmm0 = 0;\n    r15d = 0;\n    r13 = *((rsp + 0x20));\n    *((rsp + 0x30)) = 0;\n    rax += rbx;\n    *((rsp + 0x10)) = r12;\n    r12 = rbp;\n    *((rsp + 0x18)) = rax;\n    rbx += rax;\n    r14 = r13 + 8;\n    *((rsp + 0x28)) = rbx;\n    rbx = rsp + 0x70;\n    *((rsp + 0x90)) = xmm0;\n    *((rsp + 0xa0)) = xmm0;\nlabel_0:\n    *((rsp + 0x78)) = 0;\n    r14d = 0;\n    if (*(rbp) <= 0) {\n        goto label_34;\n    }\n    do {\n        rax = *((rbp + 8));\n        rdx = *((rax + r14*8));\n        rax = *((r12 + 0x18));\n        rax = *((rax + rdx*8));\n        if (rax != -1) {\n            rdx = rax * 3;\n            rax = *((r12 + 0x30));\n            eax = fcn_00408570 (rbx, rax + rdx*8);\n            *((rsp + 0x50)) = eax;\n            if (eax != 0) {\n                goto label_17;\n            }\n        }\n        r14++;\n    } while (*(rbp) > r14);\nlabel_34:\n    rax = fcn_004092e0 (rsp + 0x50, r12, rbx, 0);\n    rdi = *((rsp + 8));\n    *((rdi + r15*8)) = rax;\n    if (rax == 0) {\n        goto label_35;\n    }\nlabel_18:\n    if (*((rax + 0x68)) < 0) {\n        goto label_36;\n    }\n    rdi = *((rsp + 0x18));\n    *((rdi + r15*8)) = rax;\n    rdi = *((rsp + 0x28));\n    *((rdi + r15*8)) = rax;\nlabel_16:\n    eax = 0;\n    rdx = rsp + 0x90;\n    do {\n        rcx = *((rdx + rax));\n        rcx |= *((r13 + rax + 0x1800));\n        *((rdx + rax)) = rcx;\n        rax += 8;\n    } while (rax != 0x20);\n    r15++;\n    rbp += 0x18;\n    r13 += 0x20;\n    if (r15 != *((rsp + 0x10))) {\n        goto label_0;\n    }\n    r12 = *((rsp + 0x10));\n    *((rsp + 0x10)) = rdx;\n    if (*((rsp + 0x30)) != 0) {\n        goto label_37;\n    }\n    rax = calloc (8, 0x100);\n    rbx = rax;\n    rax = *((rsp + 0x48));\n    *((rax + 0x58)) = rbx;\n    if (rbx == 0) {\n        goto label_22;\n    }\n    r10 = *((rsp + 0x20));\n    r13 = *((rsp + 8));\n    r11d = 0;\n    r14 = *((rsp + 0x18));\n    rdx = *((rsp + 0x10));\n    r8 = r10 + 0x1820;\nlabel_1:\n    rdi = r11;\n    rax = *((rdx + r11));\n    ecx = 1;\n    rdi <<= 6;\n    rdi += rbx;\n    if (rax == 0) {\n        goto label_38;\n    }\n    do {\n        if ((al & 1) != 0) {\n            goto label_39;\n        }\nlabel_19:\n        rcx += rcx;\n        rdi += 8;\n        rax >>= 1;\n    } while (rax != 0);\nlabel_38:\n    r11 += 8;\n    if (r11 != 0x20) {\n        goto label_1;\n    }\nlabel_24:\n    if ((*((rsp + 0x91)) & 4) == 0) {\n        goto label_21;\n    }\n    rcx = *((rsp + 0x20));\n    eax = 0;\n    do {\n        rdx = rax;\n        rdx <<= 5;\n        if ((*((rcx + rdx + 0x1801)) & 4) != 0) {\n            goto label_40;\n        }\n        rax++;\n    } while (rax != r12);\nlabel_21:\n    free (*((rsp + 8)));\n    free (*((rsp + 0x80)));\n    rax = *((rsp + 0x20));\n    rbx = *((rsp + 0x38));\n    rbp = rax + 0x10;\n    rbx += rbp;\n    do {\n        rbp += 0x18;\n        free (*(rbp));\n    } while (rbx != rbp);\n    free (*((rsp + 0x20)));\n    eax = 1;\n    goto label_20;\nlabel_4:\n    *((r13 + 8)) = 0;\n    *(r13) = 0;\n    if (r12 != 0) {\n        goto label_41;\n    }\n    eax = free (*((rsp + 0x20)));\nlabel_5:\n    eax = 0;\nlabel_20:\n    return rax;\nlabel_28:\n    ecx = *(r15);\n    rbx = rsp + 0x50;\n    edi = 1;\n    rdx = rcx;\n    rdi <<= cl;\n    rdx >>= 3;\n    edx &= 0x18;\n    *((rbx + rdx)) |= rdi;\nlabel_6:\n    if (ax == 0) {\n        goto label_9;\n    }\n    if ((al & 0x20) != 0) {\n        goto label_42;\n    }\nlabel_7:\n    if ((al & 0x80) != 0) {\n        goto label_11;\n    }\n    if ((al & 4) == 0) {\n        goto label_10;\n    }\n    if (ebp == 1) {\n        goto label_43;\n    }\n    if (*((r8 + 0xb4)) <= 1) {\n        goto label_13;\n    }\nlabel_12:\n    rdi = *((r8 + 0x78));\n    esi = 0;\n    ecx = 0;\n    do {\n        rdx = *((rdi + rcx*8));\n        rdx = ~rdx;\n        rdx |= *((r8 + rcx*8 + 0xb8));\n        rdx &= *((rbx + rcx*8));\n        *((rbx + rcx*8)) = rdx;\n        rcx++;\n        rsi |= rdx;\n    } while (rcx != 4);\n    if (rsi == 0) {\n        goto label_2;\n    }\nlabel_10:\n    if ((al & 8) == 0) {\n        goto label_9;\n    }\n    if (ebp == 1) {\n        goto label_44;\n    }\nlabel_14:\n    if (*((r8 + 0xb4)) <= 1) {\n        goto label_45;\n    }\n    rsi = *((r8 + 0x78));\n    ecx = 0;\n    edx = 0;\n    do {\n        rax = *((r8 + rdx*8 + 0xb8));\n        rax &= *((rsi + rdx*8));\n        rax = ~rax;\n        rax &= *((rbx + rdx*8));\n        *((rbx + rdx*8)) = rax;\n        rdx++;\n        rcx |= rax;\n    } while (rdx != 4);\n    if (rcx == 0) {\n        goto label_2;\n    }\nlabel_9:\n    r14 = *((rsp + 8));\n    r13d = 0;\n    if (r12 <= 0) {\n        goto label_46;\n    }\n    *((rsp + 0x10)) = ebp;\n    r12 = r14;\n    r14 = rbx;\n    *((rsp + 0x40)) = r8;\n    *((rsp + 0x30)) = r9;\n    while (*((rsp + 0x10)) == 1) {\n        ecx = *(r15);\n        rax = rcx;\n        rax >>= 3;\n        eax &= 0x18;\n        rax += *((rsp + 8));\n        rax = *((rax + rdx));\n        rax >>= cl;\n        if ((al & 1) != 0) {\n            goto label_47;\n        }\nlabel_3:\n        r13++;\n        r12 += 0x20;\n        if (r13 >= rbp) {\n            goto label_48;\n        }\n        rdx = r13;\n        rdx <<= 5;\n    }\nlabel_47:\n    ecx = 0;\n    eax = 0;\n    rsi = rsp + 0x70;\n    do {\n        rdx = *((r14 + rax*8));\n        rdx &= *((r12 + rax*8));\n        *((rsi + rax*8)) = rdx;\n        rax++;\n        rcx |= rdx;\n    } while (rax != 4);\n    if (rcx == 0) {\n        goto label_3;\n    }\n    ebx = 0;\n    edi = 0;\n    r11 = rsp + 0x90;\n    edx = 0;\n    do {\n        rsi = *((r14 + rdx*8));\n        rax = *((r12 + rdx*8));\n        rcx = rsi;\n        rcx = ~rcx;\n        rcx &= rax;\n        rax = ~rax;\n        rax &= rsi;\n        *((r11 + rdx*8)) = rcx;\n        rdi |= rcx;\n        *((r14 + rdx*8)) = rax;\n        rdx++;\n        rbx |= rax;\n    } while (rdx != 4);\n    rsi = *((rsp + 0x20));\n    rax = r13 * 3;\n    rdx = rsi + rax*8;\n    if (rdi != 0) {\n        __asm (\"movdqa xmm1, xmmword [rsp + 0x90]\");\n        rax = rbp;\n        *((rsp + 0x38)) = rdx;\n        rax <<= 5;\n        rax += *((rsp + 8));\n        __asm (\"movups xmmword [rax], xmm1\");\n        __asm (\"movdqa xmm2, xmmword [rsp + 0xa0]\");\n        __asm (\"movups xmmword [rax + 0x10], xmm2\");\n        __asm (\"movdqa xmm3, xmmword [rsp + 0x70]\");\n        rax = rbp + rbp*2;\n        __asm (\"movups xmmword [r12], xmm3\");\n        __asm (\"movdqa xmm4, xmmword [rsp + 0x80]\");\n        __asm (\"movups xmmword [r12 + 0x10], xmm4\");\n        eax = fcn_004090d0 (rsi + rax*8, rdx);\n        if (eax != 0) {\n            goto label_49;\n        }\n        rdx = *((rsp + 0x38));\n        rbp++;\n    }\n    rax = *((rsp + 0x30));\n    rdi = *((rsp + 0x28));\n    rax = *((rax + 0x18));\n    al = fcn_00406a20 (rdx, *((rax + rdi)));\n    if (al == 0) {\n        goto label_49;\n    }\n    if (rbx != 0) {\n        goto label_3;\n    }\nlabel_48:\n    r8 = *((rsp + 0x40));\n    r9 = *((rsp + 0x30));\n    r12 = rbp;\n    rbx = r14;\nlabel_46:\n    if (r12 != r13) {\n        goto label_2;\n    }\n    __asm (\"movdqa xmm5, xmmword [rsp + 0x50]\");\n    rax = r12;\n    rdi = *((rsp + 0x28));\n    *((rsp + 0x30)) = r8;\n    rax <<= 5;\n    rax += *((rsp + 8));\n    *((rsp + 0x10)) = r9;\n    __asm (\"movups xmmword [rax], xmm5\");\n    __asm (\"movdqa xmm6, xmmword [rsp + 0x60]\");\n    __asm (\"movups xmmword [rax + 0x10], xmm6\");\n    rax = *((r9 + 0x18));\n    rbp = *((rax + rdi));\n    rdi = *((rsp + 0x20));\n    rax = r12 * 3;\n    r13 = rdi + rax*8;\n    *(r13) = 1;\n    *((r13 + 8)) = 1;\n    rax = malloc (8);\n    r9 = *((rsp + 0x10));\n    r8 = *((rsp + 0x30));\n    *((r13 + 0x10)) = rax;\n    if (rax == 0) {\n        goto label_4;\n    }\n    *(rax) = rbp;\n    r12++;\nlabel_11:\n    xmm0 = 0;\n    *(rbx) = xmm0;\n    *((rbx + 0x10)) = xmm0;\n    goto label_2;\nlabel_49:\n    r12 = rbp;\nlabel_41:\n    rax = *((rsp + 0x20));\n    rbx = rax + 0x10;\n    rax = r12 * 3;\n    rbp = rbx + rax*8;\n    do {\n        rbx += 0x18;\n        free (*(rbx));\n    } while (rbp != rbx);\n    free (*((rsp + 0x20)));\n    goto label_5;\nlabel_30:\n    if (*((r8 + 0xb4)) <= 1) {\n        goto label_50;\n    }\n    rsi = *((r8 + 0x78));\n    edx = 0;\n    rbx = rsp + 0x50;\n    do {\n        rcx = *((rbx + rdx));\n        rcx |= *((rsi + rdx));\n        *((rbx + rdx)) = rcx;\n        rdx += 8;\n    } while (rdx != 0x20);\nlabel_8:\n    rdx = *((r8 + 0xd8));\n    if ((dl & 0x40) == 0) {\n    }\n    edx &= 0x80;\n    if (edx == 0) {\n        goto label_6;\n    }\n    goto label_6;\nlabel_42:\n    rdx = *((rsp + 0x50));\n    xmm0 = 0;\n    *(rbx) = xmm0;\n    *((rbx + 0x10)) = xmm0;\n    dh &= 4;\n    if (dh == 0) {\n        goto label_2;\n    }\n    *((rsp + 0x50)) = 0x400;\n    goto label_7;\nlabel_50:\n    __asm (\"pcmpeqd xmm0, xmm0\");\n    rbx = rsp + 0x50;\n    *((rsp + 0x50)) = xmm0;\n    *((rsp + 0x60)) = xmm0;\n    goto label_8;\nlabel_45:\n    ecx = 0;\n    edx = 0;\n    do {\n        rax = *((r8 + rdx*8 + 0xb8));\n        rax = ~rax;\n        rax &= *((rbx + rdx*8));\n        *((rbx + rdx*8)) = rax;\n        rdx++;\n        rcx |= rax;\n    } while (rdx != 4);\n    if (rcx == 0) {\n        goto label_2;\n    }\n    goto label_9;\nlabel_13:\n    esi = 0;\n    edx = 0;\n    do {\n        rcx = *((rbx + rdx*8));\n        rcx &= *((r8 + rdx*8 + 0xb8));\n        *((rbx + rdx*8)) = rcx;\n        rdx++;\n        rsi |= rcx;\n    } while (rdx != 4);\n    if (rsi != 0) {\n        goto label_10;\n    }\n    goto label_2;\nlabel_43:\n    if ((*((r15 + 0xa)) & 0x40) == 0) {\n        goto label_11;\n    }\n    if (*((r8 + 0xb4)) > 1) {\n        goto label_12;\n    }\n    goto label_13;\nlabel_31:\n    __asm (\"pcmpeqd xmm0, xmm0\");\n    rbx = rsp + 0x50;\n    *((rsp + 0x50)) = xmm0;\n    goto label_8;\nlabel_29:\n    rsi = *(r15);\n    edx = 0;\n    rbx = rsp + 0x50;\n    do {\n        rcx = *((rbx + rdx));\n        rcx |= *((rsi + rdx));\n        *((rbx + rdx)) = rcx;\n        rdx += 8;\n    } while (rdx != 0x20);\n    goto label_6;\nlabel_44:\n    if ((*((r15 + 0xa)) & 0x40) == 0) {\n        goto label_14;\n    }\n    goto label_11;\nlabel_15:\n    edx = *((rsp + 0x50));\n    if (edx == 0) {\n        goto label_51;\n    }\nlabel_17:\n    r12 = *((rsp + 0x10));\nlabel_22:\n    free (*((rsp + 8)));\n    r13 = *((rsp + 0x80));\nlabel_33:\n    free (*((rsp + 0x80)));\n    rax = *((rsp + 0x20));\n    rbx = rax + 0x10;\n    rax = r12 * 3;\n    rbp = rbx + rax*8;\n    do {\n        rbx += 0x18;\n        free (*(rbx));\n    } while (rbx != rbp);\n    free (*((rsp + 0x20)));\n    goto label_5;\nlabel_36:\n    rax = fcn_004092e0 (rsp + 0x50, r12, rbx, 1);\n    rdi = *((rsp + 0x18));\n    *((rdi + r15*8)) = rax;\n    if (rax == 0) {\n        goto label_15;\n    }\nlabel_51:\n    rdi = *((rsp + 8));\n    if (rax != *((rdi + r15*8))) {\n        edi = *((rsp + 0x30));\n        eax = 1;\n        if (*((r12 + 0xb4)) >= 2) {\n            edi = eax;\n        }\n        *((rsp + 0x30)) = dil;\n    }\n    rax = fcn_004092e0 (rsp + 0x50, r12, rbx, 2);\n    rdi = *((rsp + 0x28));\n    *((rdi + r15*8)) = rax;\n    if (rax != 0) {\n        goto label_16;\n    }\n    eax = *((rsp + 0x50));\n    if (eax == 0) {\n        goto label_16;\n    }\n    goto label_17;\nlabel_35:\n    ecx = *((rsp + 0x50));\n    if (ecx == 0) {\n        goto label_18;\n    }\n    goto label_17;\nlabel_39:\n    if ((*((r10 + r11 + 0x1800)) & rcx) != 0) {\n        goto label_52;\n    }\n    rsi = r8 + r11;\n    r9d = 0;\n    do {\n        r15 = *(rsi);\n        r9++;\n        rsi += 0x20;\n        r15 &= rcx;\n    } while (r15 == 0);\n    r9 <<= 3;\n    do {\n        if ((*((rbp + r11 + 0xb8)) & rcx) != 0) {\n            rsi = *((r14 + r9));\n            *(rdi) = rsi;\n            goto label_19;\n        }\n        rsi = *((r13 + r9));\n        *(rdi) = rsi;\n        goto label_19;\nlabel_27:\n        free (*((rsp + 0x20)));\nlabel_26:\n        rax = calloc (8, 0x100);\n        rbx = *((rsp + 0x48));\n        *((rbx + 0x58)) = rax;\n        al = (rax != 0) ? 1 : 0;\n        goto label_20;\nlabel_52:\n        r9d = 0;\n    } while (1);\nlabel_40:\n    rdi = *((rsp + 0x28));\n    rax = *((rdi + rax*8));\n    *((rbx + 0x50)) = rax;\n    if (*((rsp + 0x30)) == 0) {\n        goto label_21;\n    }\n    *((rbx + 0x850)) = rax;\n    goto label_21;\nlabel_37:\n    rax = calloc (8, 0x200);\n    rbx = rax;\n    rax = *((rsp + 0x48));\n    *((rax + 0x60)) = rbx;\n    if (rbx == 0) {\n        goto label_22;\n    }\n    rax = *((rsp + 0x20));\n    rdx = *((rsp + 0x10));\n    r13 = rsp + 0xb0;\n    r14 = *((rsp + 8));\n    r15 = *((rsp + 0x18));\n    r11 = rax + 0x1820;\nlabel_23:\n    rax = *(rdx);\n    r8 = rbp;\n    ecx = 1;\n    if (rax == 0) {\n        goto label_53;\n    }\n    do {\n        if ((al & 1) != 0) {\n            goto label_54;\n        }\nlabel_25:\n        rcx += rcx;\n        r8 += 8;\n        rax >>= 1;\n    } while (rax != 0);\nlabel_53:\n    rdx += 8;\n    rbp += 0x200;\n    r11 += 8;\n    if (r13 != rdx) {\n        goto label_23;\n    }\n    goto label_24;\nlabel_54:\n    if ((*((r11 - 0x20)) & rcx) != 0) {\n        goto label_55;\n    }\n    rdi = r11;\n    esi = 0;\n    do {\n        r9 = *(rdi);\n        rsi++;\n        rdi += 0x20;\n        r10 = rsi;\n        r9 &= rcx;\n    } while (r9 == 0);\n    do {\n        rsi = *((r14 + r10*8));\n        *(r8) = rsi;\n        rsi = *((r15 + r10*8));\n        *((r8 + 0x800)) = rsi;\n        goto label_25;\nlabel_55:\n        r10d = 0;\n    } while (1);\nlabel_32:\n    free (*((rsp + 0x20)));\n    if (r12 != 0) {\n        goto label_5;\n    }\n    goto label_26;\n}\n"
        },
        {
            "funcName": "fcn_0040b610",
            "funcStartAddr": "0x40b610",
            "funcEndAddr": "0x40b78c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x40b610 */\n#include <stdint.h>\n \nint64_t fcn_0040b610 (int64_t arg1) {\n    rdi = arg1;\n    r12 = rdi;\n    rdi = *(rdi);\n    if (rdi == 0) {\n        goto label_1;\n    }\n    if (*((r12 + 0x10)) == 0) {\n        goto label_1;\n    }\n    ebx = 0;\n    while (*((r12 + 0x10)) > rbx) {\n        rax = rbx;\n        rbx++;\n        rax <<= 4;\n        rdi += rax;\n        fcn_004076b0 (*(r12));\n    }\nlabel_1:\n    ebx = 0;\n    free (*((r12 + 0x18)));\n    if (*((r12 + 0x10)) == 0) {\n        goto label_2;\n    }\n    do {\n        rax = *((r12 + 0x30));\n        if (rax != 0) {\n            rdx = rbx * 3;\n            free (*((rax + rdx*8 + 0x10)));\n        }\n        rax = *((r12 + 0x38));\n        if (rax != 0) {\n            rdx = rbx * 3;\n            free (*((rax + rdx*8 + 0x10)));\n        }\n        rax = *((r12 + 0x28));\n        if (rax != 0) {\n            rdx = rbx * 3;\n            free (*((rax + rdx*8 + 0x10)));\n        }\n        rbx++;\n    } while (*((r12 + 0x10)) > rbx);\nlabel_2:\n    r13d = 0;\n    free (*((r12 + 0x28)));\n    free (*((r12 + 0x30)));\n    free (*((r12 + 0x38)));\n    free (*(r12));\n    rdi = *((r12 + 0x40));\n    if (rdi == 0) {\n        goto label_3;\n    }\nlabel_0:\n    rax = r13 * 3;\n    ebx = 0;\n    rbp = rdi + rax*8;\n    if (*(rbp) <= 0) {\n        goto label_4;\n    }\n    do {\n        rax = *((rbp + 0x10));\n        rbx++;\n        fcn_00407c00 (*((rax + rbx*8)));\n    } while (rbx < *(rbp));\nlabel_4:\n    r13++;\n    free (*((rbp + 0x10)));\n    if (*((r12 + 0x88)) >= r13) {\n        rdi = *((r12 + 0x40));\n        goto label_0;\n    }\nlabel_3:\n    free (*((r12 + 0x40)));\n    rdi = *((r12 + 0x78));\n    if (rdi != 0x416f20) {\n        free (rdi);\n    }\n    free (*((r12 + 0xe0)));\n    rdi = r12;\n    return free ();\n}\n"
        },
        {
            "funcName": "fcn_0040b790",
            "funcStartAddr": "0x40b790",
            "funcEndAddr": "0x40b7de",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x40b790 */\n#include <stdint.h>\n \nint64_t fcn_0040b790 (int32_t arg1) {\n    rdi = arg1;\n    r12 = rdi;\n    if (*(rdi) <= 0) {\n        goto label_0;\n    }\n    ebx = 0;\n    do {\n        rax = *((r12 + 0x10));\n        rbp = rbx * 3;\n        rbx++;\n        rbp <<= 4;\n        free (*((rax + rbp + 0x28)));\n        rax = *((r12 + 0x10));\n        free (*((rax + rbp + 0x10)));\n    } while (rbx < *(r12));\nlabel_0:\n    rdi = *((r12 + 0x10));\n    return free ();\n}\n"
        },
        {
            "funcName": "fcn_0040b7e0",
            "funcStartAddr": "0x40b7e0",
            "funcEndAddr": "0x40b86b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x40b7e0 */\n#include <stdint.h>\n \nint64_t fcn_0040b7e0 (uint32_t arg1, void * arg3, int64_t arg6, size_t n, void ** s1, void ** s2) {\n    rdi = arg1;\n    rdx = arg3;\n    r9 = arg6;\n    rcx = n;\n    r8 = s1;\n    rsi = s2;\n    rax = *(rdi);\n    rax--;\n    *(rdi) = rax;\n    if (rax >= 0) {\n        rbx = rax * 3;\n        rax = *(rsi);\n        r12 = rsi;\n        rcx <<= 4;\n        rbx <<= 4;\n        rax += rbx;\n        rsi = *(rax);\n        *(rdx) = rsi;\n        memcpy (r8, *((rax + 0x10)), rcx);\n        free (*((rbp + 0x10)));\n        rax = *(r12);\n        free (*((rax + rbx + 0x10)));\n        rbx += *(r12);\n        __asm (\"movdqu xmm0, xmmword [rbx + 0x18]\");\n        *(rbp) = xmm0;\n        rax = *((rbx + 0x28));\n        *((rbp + 0x10)) = rax;\n        rax = *((rbx + 8));\n        return rax;\n    }\n    return assert_fail (\"num >= 0\", \"lib/regexec.c\", 0x54f, \"pop_fail_stack\");\n}\n"
        },
        {
            "funcName": "fcn_0040b870",
            "funcStartAddr": "0x40b870",
            "funcEndAddr": "0x40b8bc",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x40b870 */\n#include <stdint.h>\n \nuint64_t fcn_0040b870 (int64_t arg1, char * s) {\n    rdi = arg1;\n    rsi = s;\n    rdi = rsi;\n    rbx = rsi;\n    rax = strlen (rdi);\n    if (rax == 1) {\n        ecx = *(rbx);\n        rdx = rcx;\n        rax <<= cl;\n        rdx >>= 3;\n        edx &= 0x18;\n        *((rbp + rdx)) |= rax;\n        eax = 0;\n        return rax;\n    }\n    eax = 3;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040b8c0",
            "funcStartAddr": "0x40b8c0",
            "funcEndAddr": "0x40c086",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x40b8c0 */\n#include <stdint.h>\n \nuint64_t fcn_0040b8c0 (int64_t arg_40h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, void ** arg5, int64_t arg6) {\n    void ** var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r13 = rcx;\n    r12 = r9;\n    rbx = rsi;\n    if ((*((rsp + 0x40)) & segment.LOAD0) != 0) {\n        edi = \"upper\";\n        ecx = 6;\n        rsi = r9;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        al = ((*((rsp + 0x40)) & segment.LOAD0) > 0) ? 1 : 0;\n        if (al != 0) {\n            goto label_3;\n        }\n        r12d = \"alpha\";\n    }\n    rcx = *(r13);\n    rax = *(rdx);\n    if (*(r8) == rcx) {\n        goto label_4;\n    }\nlabel_1:\n    rdx = rcx + 1;\n    *(r13) = rdx;\n    r13 = rax + rcx*8;\n    rax = wctype (r12);\n    edi = \"alnum\";\n    ecx = 6;\n    rsi = r12;\n    *(r13) = rax;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (*(r8) > rcx) ? 1 : 0;\n    if (al == 0) {\n        goto label_5;\n    }\n    edi = \"cntrl\";\n    ecx = 6;\n    rsi = r12;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (al > 0) ? 1 : 0;\n    if (al != 0) {\n        goto label_6;\n    }\n    rax = ctype_b_loc ();\n    ecx = 0;\n    edi = 1;\n    rdx = *(rax);\n    if (rbp != 0) {\n        goto label_7;\n    }\n    do {\n        if ((*((rdx + rcx*2)) & 2) != 0) {\n            rax = rcx;\n            rsi = rdi;\n            rax >>= 6;\n            rsi <<= cl;\n            *((rbx + rax*8)) |= rsi;\n        }\n        rcx++;\n    } while (rcx != 0x100);\nlabel_0:\n    eax = 0;\nlabel_2:\n    return rax;\nlabel_5:\n    rax = ctype_b_loc ();\n    ecx = 0;\n    edi = 1;\n    rdx = *(rax);\n    if (rbp != 0) {\n        goto label_8;\n    }\n    do {\n        if ((*((rdx + rcx*2)) & 8) != 0) {\n            rax = rcx;\n            rsi = rdi;\n            rax >>= 6;\n            rsi <<= cl;\n            *((rbx + rax*8)) |= rsi;\n        }\n        rcx++;\n    } while (rcx != 0x100);\n    goto label_0;\nlabel_3:\n    ecx = 6;\n    edi = \"lower\";\n    rsi = r9;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    rcx = *(r13);\n    al = (rcx > 0x100) ? 1 : 0;\n    eax = \"alpha\";\n    if (al == 0) {\n        r12 = rax;\n    }\n    rax = *(rdx);\n    if (*(r8) != rcx) {\n        goto label_1;\n    }\nlabel_4:\n    r14 = rcx + rcx + 1;\n    *((rsp + 8)) = r8;\n    *(rsp) = rdx;\n    rax = realloc (rax, r14*8);\n    if (rax == 0) {\n        goto label_9;\n    }\n    rdx = *(rsp);\n    r8 = *((rsp + 8));\n    *(rdx) = rax;\n    *(r8) = r14;\n    rcx = *(r13);\n    goto label_1;\nlabel_6:\n    edi = \"lower\";\n    ecx = 6;\n    rsi = r12;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (rax > 0) ? 1 : 0;\n    if (al == 0) {\n        goto label_10;\n    }\n    edi = \"space\";\n    ecx = 6;\n    rsi = r12;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (al > 0) ? 1 : 0;\n    if (al != 0) {\n        goto label_11;\n    }\n    rax = ctype_b_loc ();\n    ecx = 0;\n    edi = 1;\n    rdx = *(rax);\n    if (rbp != 0) {\n        goto label_12;\n    }\n    do {\n        if ((*((rdx + rcx*2 + 1)) & 0x20) != 0) {\n            rax = rcx;\n            rsi = rdi;\n            rax >>= 6;\n            rsi <<= cl;\n            *((rbx + rax*8)) |= rsi;\n        }\n        rcx++;\n    } while (rcx != 0x100);\n    goto label_0;\nlabel_10:\n    rax = ctype_b_loc ();\n    ecx = 0;\n    edi = 1;\n    rdx = *(rax);\n    if (rbp != 0) {\n        goto label_13;\n    }\n    do {\n        if ((*((rdx + rcx*2 + 1)) & 2) != 0) {\n            rax = rcx;\n            rsi = rdi;\n            rax >>= 6;\n            rsi <<= cl;\n            *((rbx + rax*8)) |= rsi;\n        }\n        rcx++;\n    } while (rcx != 0x100);\n    goto label_0;\nlabel_11:\n    edi = \"alpha\";\n    ecx = 6;\n    rsi = r12;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (rcx > 0x100) ? 1 : 0;\n    if (al == 0) {\n        goto label_14;\n    }\n    edi = 0x416536;\n    ecx = 6;\n    rsi = r12;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (al > 0) ? 1 : 0;\n    if (al != 0) {\n        goto label_15;\n    }\n    rax = ctype_b_loc ();\n    ecx = 0;\n    edi = 1;\n    rdx = *(rax);\n    if (rbp != 0) {\n        goto label_16;\n    }\n    do {\n        if ((*((rdx + rcx*2 + 1)) & 8) != 0) {\n            rax = rcx;\n            rsi = rdi;\n            rax >>= 6;\n            rsi <<= cl;\n            *((rbx + rax*8)) |= rsi;\n        }\n        rcx++;\n    } while (rcx != 0x100);\n    goto label_0;\nlabel_14:\n    rax = ctype_b_loc ();\n    ecx = 0;\n    edi = 1;\n    rdx = *(rax);\n    if (rbp != 0) {\n        goto label_17;\n    }\n    do {\n        if ((*((rdx + rcx*2 + 1)) & 4) != 0) {\n            rax = rcx;\n            rsi = rdi;\n            rax >>= 6;\n            rsi <<= cl;\n            *((rbx + rax*8)) |= rsi;\n        }\n        rcx++;\n    } while (rcx != 0x100);\n    goto label_0;\nlabel_8:\n    eax = 0;\n    do {\n        if ((*((rdx + rax*2)) & 8) != 0) {\n            ecx = *((rbp + rax));\n            r10 = rdi;\n            rsi = rcx;\n            r10 <<= cl;\n            rsi >>= 3;\n            esi &= 0x18;\n            *((rbx + rsi)) |= r10;\n        }\n        rax++;\n    } while (rax != 0x100);\n    goto label_0;\nlabel_7:\n    eax = 0;\n    do {\n        if ((*((rdx + rax*2)) & 2) != 0) {\n            ecx = *((rbp + rax));\n            r11 = rdi;\n            rsi = rcx;\n            r11 <<= cl;\n            rsi >>= 3;\n            esi &= 0x18;\n            *((rbx + rsi)) |= r11;\n        }\n        rax++;\n    } while (rax != 0x100);\n    goto label_0;\nlabel_13:\n    eax = 0;\n    do {\n        if ((*((rdx + rax*2 + 1)) & 2) != 0) {\n            ecx = *((rbp + rax));\n            r14 = rdi;\n            rsi = rcx;\n            r14 <<= cl;\n            rsi >>= 3;\n            esi &= 0x18;\n            *((rbx + rsi)) |= r14;\n        }\n        rax++;\n    } while (rax != 0x100);\n    goto label_0;\nlabel_15:\n    edi = \"print\";\n    ecx = 6;\n    rsi = r12;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (rax > 0x100) ? 1 : 0;\n    if (al != 0) {\n        goto label_18;\n    }\n    rax = ctype_b_loc ();\n    ecx = 0;\n    edi = 1;\n    rdx = *(rax);\n    if (rbp != 0) {\n        goto label_19;\n    }\n    do {\n        if ((*((rdx + rcx*2 + 1)) & 0x40) != 0) {\n            rax = rcx;\n            rsi = rdi;\n            rax >>= 6;\n            rsi <<= cl;\n            *((rbx + rax*8)) |= rsi;\n        }\n        rcx++;\n    } while (rcx != 0x100);\n    goto label_0;\nlabel_18:\n    edi = \"upper\";\n    ecx = 6;\n    rsi = r12;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (rcx > 0x100) ? 1 : 0;\n    if (al != 0) {\n        goto label_20;\n    }\n    rax = ctype_b_loc ();\n    ecx = 0;\n    edi = 1;\n    rax = *(rax);\n    if (rbp != 0) {\n        goto label_21;\n    }\n    do {\n        if ((*((rax + rcx*2 + 1)) & 1) != 0) {\n            rdx = rcx;\n            rsi = rdi;\n            rdx >>= 6;\n            rsi <<= cl;\n            *((rbx + rdx*8)) |= rsi;\n        }\n        rcx++;\n    } while (rcx != 0x100);\n    goto label_0;\nlabel_9:\n    eax = 0xc;\n    goto label_2;\nlabel_20:\n    edi = \"blank\";\n    ecx = 6;\n    rsi = r12;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (rcx > 0x100) ? 1 : 0;\n    if (al != 0) {\n        goto label_22;\n    }\n    rax = ctype_b_loc ();\n    ecx = 0;\n    esi = 1;\n    rdx = *(rax);\n    if (rbp != 0) {\n        goto label_23;\n    }\n    do {\n        if ((*((rdx + rcx*2)) & 1) != 0) {\n            rax = rcx;\n            rdi = rsi;\n            rax >>= 6;\n            rdi <<= cl;\n            *((rbx + rax*8)) |= rdi;\n        }\n        rcx++;\n    } while (rcx != 0x100);\n    goto label_0;\nlabel_17:\n    eax = 0;\n    do {\n        if ((*((rdx + rax*2 + 1)) & 4) != 0) {\n            ecx = *((rbp + rax));\n            r9 = rdi;\n            rsi = rcx;\n            r9 <<= cl;\n            rsi >>= 3;\n            esi &= 0x18;\n            *((rbx + rsi)) |= r9;\n        }\n        rax++;\n    } while (rax != 0x100);\n    goto label_0;\nlabel_12:\n    eax = 0;\n    do {\n        if ((*((rdx + rax*2 + 1)) & 0x20) != 0) {\n            ecx = *((rbp + rax));\n            r9 = rdi;\n            rsi = rcx;\n            r9 <<= cl;\n            rsi >>= 3;\n            esi &= 0x18;\n            *((rbx + rsi)) |= r9;\n        }\n        rax++;\n    } while (rax != 0x100);\n    goto label_0;\nlabel_16:\n    eax = 0;\n    do {\n        if ((*((rdx + rax*2 + 1)) & 8) != 0) {\n            ecx = *((rbp + rax));\n            r14 = rdi;\n            rsi = rcx;\n            r14 <<= cl;\n            rsi >>= 3;\n            esi &= 0x18;\n            *((rbx + rsi)) |= r14;\n        }\n        rax++;\n    } while (rax != 0x100);\n    goto label_0;\nlabel_22:\n    edi = \"graph\";\n    ecx = 6;\n    rsi = r12;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (rax > 0x100) ? 1 : 0;\n    if (al != 0) {\n        goto label_24;\n    }\n    rax = ctype_b_loc ();\n    ecx = 0;\n    edx = 1;\n    rsi = *(rax);\n    if (rbp != 0) {\n        goto label_25;\n    }\n    do {\n        if (*((rsi + rcx*2)) < 0) {\n            rax = rcx;\n            rdi = rdx;\n            rax >>= 6;\n            rdi <<= cl;\n            *((rbx + rax*8)) |= rdi;\n        }\n        rcx++;\n    } while (rcx != 0x100);\n    goto label_0;\nlabel_25:\n    eax = 0;\n    edi = 1;\n    do {\n        if (*((rsi + rax*2)) < 0) {\n            ecx = *((rbp + rax));\n            r9 = rdi;\n            rdx = rcx;\n            r9 <<= cl;\n            rdx >>= 3;\n            edx &= 0x18;\n            *((rbx + rdx)) |= r9;\n        }\n        rax++;\n    } while (rax != 0x100);\n    goto label_0;\nlabel_24:\n    eax = strcmp (r12, \"punct\");\n    if (eax != 0) {\n        goto label_26;\n    }\n    rax = ctype_b_loc ();\n    ecx = 0;\n    edx = 1;\n    rsi = *(rax);\n    if (rbp != 0) {\n        goto label_27;\n    }\n    do {\n        if ((*((rsi + rcx*2)) & 4) != 0) {\n            rax = rcx;\n            rdi = rdx;\n            rax >>= 6;\n            rdi <<= cl;\n            *((rbx + rax*8)) |= rdi;\n        }\n        rcx++;\n    } while (rcx != 0x100);\n    goto label_0;\nlabel_27:\n    eax = 0;\n    edi = 1;\n    do {\n        if ((*((rsi + rax*2)) & 4) != 0) {\n            ecx = *((rbp + rax));\n            r14 = rdi;\n            rdx = rcx;\n            r14 <<= cl;\n            rdx >>= 3;\n            edx &= 0x18;\n            *((rbx + rdx)) |= r14;\n        }\n        rax++;\n    } while (rax != 0x100);\n    goto label_0;\nlabel_26:\n    eax = strcmp (r12, \"xdigit\");\n    if (eax != 0) {\n        goto label_28;\n    }\n    rax = ctype_b_loc ();\n    ecx = 0;\n    edx = 1;\n    rsi = *(rax);\n    if (rbp != 0) {\n        goto label_29;\n    }\n    do {\n        if ((*((rsi + rcx*2 + 1)) & 0x10) != 0) {\n            rax = rcx;\n            rdi = rdx;\n            rax >>= 6;\n            rdi <<= cl;\n            *((rbx + rax*8)) |= rdi;\n        }\n        rcx++;\n    } while (rcx != 0x100);\n    goto label_0;\nlabel_29:\n    eax = 0;\n    edi = 1;\n    do {\n        if ((*((rsi + rax*2 + 1)) & 0x10) != 0) {\n            ecx = *((rbp + rax));\n            r9 = rdi;\n            rdx = rcx;\n            r9 <<= cl;\n            rdx >>= 3;\n            edx &= 0x18;\n            *((rbx + rdx)) |= r9;\n        }\n        rax++;\n    } while (rax != 0x100);\n    goto label_0;\nlabel_28:\n    eax = 4;\n    goto label_2;\nlabel_19:\n    eax = 0;\n    do {\n        if ((*((rdx + rax*2 + 1)) & 0x40) != 0) {\n            ecx = *((rbp + rax));\n            r14 = rdi;\n            rsi = rcx;\n            r14 <<= cl;\n            rsi >>= 3;\n            esi &= 0x18;\n            *((rbx + rsi)) |= r14;\n        }\n        rax++;\n    } while (rax != 0x100);\n    goto label_0;\nlabel_23:\n    eax = 0;\n    edi = 1;\n    do {\n        if ((*((rdx + rax*2)) & 1) != 0) {\n            ecx = *((rbp + rax));\n            r14 = rdi;\n            rsi = rcx;\n            r14 <<= cl;\n            rsi >>= 3;\n            esi &= 0x18;\n            *((rbx + rsi)) |= r14;\n        }\n        rax++;\n    } while (rax != 0x100);\n    goto label_0;\nlabel_21:\n    edx = 0;\n    do {\n        if ((*((rax + rdx*2 + 1)) & 1) != 0) {\n            ecx = *((rbp + rdx));\n            r9 = rdi;\n            rsi = rcx;\n            r9 <<= cl;\n            rsi >>= 3;\n            esi &= 0x18;\n            *((rbx + rsi)) |= r9;\n        }\n        rdx++;\n    } while (rdx != 0x100);\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040c090",
            "funcStartAddr": "0x40c090",
            "funcEndAddr": "0x40c2c5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x40c090 */\n#include <stdint.h>\n \nuint64_t fcn_0040c090 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_10h;\n    int64_t var_8h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r14 = rdx;\n    r13 = rcx;\n    r12d = r8d;\n    *(rsp) = rsi;\n    *((rsp + 8)) = r9;\n    *((rsp + 0x18)) = 0;\n    rax = calloc (0x20, 1);\n    if (rax == 0) {\n        goto label_1;\n    }\n    rbx = rax;\n    rax = calloc (0x50, 1);\n    r15 = rax;\n    if (rax == 0) {\n        goto label_2;\n    }\n    eax = *((rax + 0x20));\n    edx = r12d;\n    edx &= 1;\n    eax &= 0xfffffffe;\n    eax |= edx;\n    *((r15 + 0x20)) = al;\n    eax = fcn_0040b8c0 (*((rsp + 0x10)), rbx, r15 + 0x18, r15 + 0x48, rsp + 0x28, r14);\n    if (eax != 0) {\n        goto label_3;\n    }\n    rcx = *(r13);\n    esi = 1;\n    if (cl == 0) {\n        goto label_4;\n    }\n    do {\n        rax = rcx + 0x3f;\n        rdx = rcx;\n        __asm (\"cmovns rax, rcx\");\n        rdx >>= 0x3f;\n        r13++;\n        rdx >>= 0x3a;\n        rcx += rdx;\n        rax >>= 6;\n        ecx &= 0x3f;\n        rcx -= rdx;\n        rdx = rsi;\n        rdx <<= cl;\n        rcx = *(r13);\n        *((rbx + rax*8)) |= rdx;\n    } while (cl != 0);\nlabel_4:\n    if (r12b == 0) {\n        goto label_5;\n    }\n    rax = rbx;\n    rdx = rbx + 0x20;\n    do {\n        rax = ~rax;\n        rax += 8;\n    } while (rdx != rax);\nlabel_5:\n    if (*((rbp + 0xb4)) <= 1) {\n        goto label_6;\n    }\n    rcx = *((rbp + 0x78));\n    eax = 0;\n    do {\n        rdx = *((rcx + rax));\n        *((rbx + rax)) &= rdx;\n        rax += 8;\n    } while (rax != 0x20);\nlabel_6:\n    r12 = rbp + 0x70;\n    r13 = rbp + 0x80;\n    *((rsp + 0x28)) = 3;\n    *((rsp + 0x20)) = rbx;\n    rax = fcn_00408ca0 (r12, r13, 0, 0, rsp + 0x20);\n    r14 = rax;\n    if (rax == 0) {\n        goto label_7;\n    }\n    if (*((rbp + 0xb4)) <= 1) {\n        goto label_8;\n    }\n    *((rbp + 0xb0)) |= 2;\n    *((rsp + 0x28)) = 6;\n    *((rsp + 0x20)) = r15;\n    rax = fcn_00408ca0 (r12, r13, 0, 0, rsp + 0x20);\n    if (rax == 0) {\n        goto label_7;\n    }\n    *((rsp + 0x38)) = 0xa;\n    rax = fcn_00408ca0 (r12, r13, r14, rax, rsp + 0x30);\n    r14 = rax;\n    do {\nlabel_0:\n        rax = r14;\n        return rax;\nlabel_7:\n        free (rbx);\n        fcn_00407690 (r15);\nlabel_1:\n        rax = *((rsp + 8));\n        r14d = 0;\n        *(rax) = 0xc;\n    } while (1);\nlabel_8:\n    fcn_00407690 (r15);\n    goto label_0;\nlabel_2:\n    r14d = 0;\n    free (rbx);\n    rax = *((rsp + 8));\n    *(rax) = 0xc;\n    goto label_0;\nlabel_3:\n    *(rsp) = eax;\n    r14d = 0;\n    free (rbx);\n    fcn_00407690 (r15);\n    rdi = *((rsp + 8));\n    eax = *(rsp);\n    *(rdi) = eax;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040c2d0",
            "funcStartAddr": "0x40c2d0",
            "funcEndAddr": "0x40c7a8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x40c2d0 */\n#include <stdint.h>\n \nint64_t fcn_0040c2d0 (int64_t arg1, signed int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg7) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    signed int64_t var_28h;\n    wint_t wc;\n    mbstate_t * ps;\n    char * s;\n    int64_t var_41h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    xmm0 = arg7;\n    r12d = 0;\n    rax = *(rdi);\n    *(rsp) = rax;\n    if (*((rax + 0xb4)) == 1) {\n        r9 = *((rdi + 0x18));\n        r9 >>= 0x16;\n        r12d = r9d;\n        r12d &= 1;\n    }\n    ebx = 0;\n    if (*(rsi) <= 0) {\n        goto label_4;\n    }\n    r15 = rcx;\n    *((rsp + 0x20)) = rdx;\n    *((rsp + 0x28)) = rsi;\n    *((rsp + 0x18)) = rdi;\n    while (eax != 1) {\n        if (eax == 3) {\n            goto label_6;\n        }\n        if (eax == 6) {\n            goto label_7;\n        }\n        edx &= 0xfffffffd;\n        if (dl == 5) {\n            goto label_8;\n        }\n        if (eax == 2) {\n            goto label_9;\n        }\nlabel_0:\n        rax = *((rsp + 0x28));\n        rbx++;\n        if (rbx >= *(rax)) {\n            goto label_4;\n        }\nlabel_1:\n        rax = *((rsp + 0x20));\n        rax = *(rax);\n        r14 = *((rax + rbx*8));\n        rax = *(rsp);\n        rcx = *(rax);\n        rax = r14;\n        rax <<= 4;\n        rsi = rcx + rax;\n        *((rsp + 0x10)) = rax;\n        eax = *((rsi + 8));\n        edx = eax;\n    }\n    edx = *(rsi);\n    *((r15 + rdx)) = 1;\n    *((rsp + 8)) = rdx;\n    if (r12d != 0) {\n        rax = ctype_tolower_loc ();\n        rdx = *((rsp + 8));\n        rax = *(rax);\n        rax = *((rax + rdx*4));\n        *((r15 + rax)) = 1;\n    }\n    rax = *((rsp + 0x18));\n    if ((*((rax + 0x1a)) & 0x40) == 0) {\n        goto label_0;\n    }\n    rax = *(rsp);\n    if (*((rax + 0xb4)) <= 1) {\n        goto label_0;\n    }\n    rsi = rax;\n    rcx = *((rsp + 0x10));\n    rax = *(rax);\n    edx = *((rax + rcx));\n    *((rsp + 0x40)) = dl;\n    rdx = r14 + 1;\n    if (*((rsi + 0x10)) <= rdx) {\n        goto label_10;\n    }\n    rax = rax + rcx + 0x10;\n    ecx = *((rax + 8));\n    ecx &= 0x2000ff;\n    if (ecx != 0x200001) {\n        goto label_10;\n    }\n    rsi = rsp + 0x41;\n    while (*((rax + 0x10)) > rdx) {\n        rcx = *(rsp);\n        rax = rdx;\n        rax <<= 4;\n        rax += *(rcx);\n        ecx = *((rax + 8));\n        ecx &= 0x2000ff;\n        if (ecx != 0x200001) {\n            goto label_11;\n        }\n        eax = *(rax);\n        rsi++;\n        rdx++;\n        *((rsi - 1)) = al;\n        rax = *(rsp);\n    }\nlabel_11:\n    rax = rsp + 0x40;\n    rsi -= rax;\n    r13 = rsi;\nlabel_5:\n    *((rsp + 0x38)) = 0;\n    rax = fcn_00406400 (rsp + 0x34, rsp + 0x40, r13, rsp + 0x38);\n    if (rax != r13) {\n        goto label_0;\n    }\n    eax = towlower (*((rsp + 0x34)));\n    rax = wcrtomb (rsp + 0x40, eax, rsp + 0x38);\n    if (rax == -1) {\n        goto label_0;\n    }\n    eax = *((rsp + 0x40));\n    rbx++;\n    *((r15 + rax)) = 1;\n    rax = *((rsp + 0x28));\n    if (rbx < *(rax)) {\n        goto label_1;\n    }\nlabel_4:\n    return rax;\nlabel_7:\n    rax = *(rsp);\n    r13 = *(rsi);\n    if (*((rax + 0xb4)) > 1) {\n        if (*((r13 + 0x48)) != 0) {\n            goto label_12;\n        }\n        if ((*((r13 + 0x20)) & 1) != 0) {\n            goto label_12;\n        }\n        if (*((r13 + 0x40)) != 0) {\n            goto label_12;\n        }\n    }\n    r14d = 0;\n    if (*((r13 + 0x28)) > 0) {\n        goto label_13;\n    }\n    goto label_0;\nlabel_2:\n    r14++;\n    if (r14 >= *((r13 + 0x28))) {\n        goto label_0;\n    }\nlabel_13:\n    *((rsp + 0x38)) = 0;\n    rax = *(r13);\n    rbp = r14*4;\n    rax = wcrtomb (rsp + 0x40, *((rax + r14*4)), rsp + 0x38);\n    if (rax != -1) {\n        edx = *((rsp + 0x40));\n        *((r15 + rdx)) = 1;\n        *((rsp + 8)) = rdx;\n        if (r12d == 0) {\n            goto label_14;\n        }\n        rax = ctype_tolower_loc ();\n        rdx = *((rsp + 8));\n        rax = *(rax);\n        rax = *((rax + rdx*4));\n        *((r15 + rax)) = 1;\n    }\nlabel_14:\n    rax = *((rsp + 0x18));\n    if ((*((rax + 0x1a)) & 0x40) == 0) {\n        goto label_2;\n    }\n    rax = *(rsp);\n    if (*((rax + 0xb4)) <= 1) {\n        goto label_2;\n    }\n    rax = *(r13);\n    eax = towlower (*((rax + rbp)));\n    rax = wcrtomb (rsp + 0x40, eax, rsp + 0x38);\n    if (rax == -1) {\n        goto label_2;\n    }\n    eax = *((rsp + 0x40));\n    *((r15 + rax)) = 1;\n    goto label_2;\nlabel_12:\n    *((rsp + 0x38)) = 0;\n    do {\n        *((rsp + 0x40)) = 0;\n        rax = fcn_00406400 (0, rsp + 0x38, 1, rsp + 0x40);\n        if (rax == 0xfffffffffffffffe) {\n            eax = *((rsp + 0x38));\n            *((r15 + rax)) = 1;\n        }\n    } while (rax != 0xfffffffffffffffe);\n    goto label_0;\nlabel_6:\n    *((rsp + 8)) = 0;\nlabel_3:\n    rax = *((rsp + 0x10));\n    r14d = 0;\n    rax = *((rcx + rax));\n    rcx = *((rsp + 8));\n    rbp = *((rax + rcx));\n    r13 = rcx*8;\n    do {\n        if (((rbp >> r14) & 1) < 0) {\n            rax = r15 + r13;\n            *((r15 + r13)) = 1;\n            if (r12d == 0) {\n                goto label_15;\n            }\n            edi = r13 + 0x80;\n            if (edi <= 0x17f) {\n                rax = ctype_tolower_loc ();\n                rax = *(rax);\n                rax = *((rax + r13*4));\n                rax += r15;\n            }\n            *(rax) = 1;\n        }\nlabel_15:\n        r14d++;\n        r13++;\n    } while (r14d != 0x40);\n    rax = *((rsp + 8));\n    if (rax == 0x20) {\n        goto label_0;\n    }\n    rax = *(rsp);\n    rcx = *(rax);\n    goto label_3;\nlabel_8:\n    __asm (\"movdqa xmm0, xmmword [0x00417160]\");\n    __asm (\"movups xmmword [r15], xmm0\");\n    __asm (\"movups xmmword [r15 + 0x10], xmm0\");\n    __asm (\"movups xmmword [r15 + 0x20], xmm0\");\n    __asm (\"movups xmmword [r15 + 0x30], xmm0\");\n    __asm (\"movups xmmword [r15 + 0x40], xmm0\");\n    __asm (\"movups xmmword [r15 + 0x50], xmm0\");\n    __asm (\"movups xmmword [r15 + 0x60], xmm0\");\n    __asm (\"movups xmmword [r15 + 0x70], xmm0\");\n    __asm (\"movups xmmword [r15 + 0x80], xmm0\");\n    __asm (\"movups xmmword [r15 + 0x90], xmm0\");\n    __asm (\"movups xmmword [r15 + 0xa0], xmm0\");\n    __asm (\"movups xmmword [r15 + 0xb0], xmm0\");\n    __asm (\"movups xmmword [r15 + 0xc0], xmm0\");\n    __asm (\"movups xmmword [r15 + 0xd0], xmm0\");\n    __asm (\"movups xmmword [r15 + 0xe0], xmm0\");\n    __asm (\"movups xmmword [r15 + 0xf0], xmm0\");\n    if (eax != 2) {\n        goto label_4;\n    }\n    goto label_16;\nlabel_9:\n    __asm (\"movdqa xmm0, xmmword [0x00417160]\");\n    __asm (\"movups xmmword [r15], xmm0\");\n    __asm (\"movups xmmword [r15 + 0x10], xmm0\");\n    __asm (\"movups xmmword [r15 + 0x20], xmm0\");\n    __asm (\"movups xmmword [r15 + 0x30], xmm0\");\n    __asm (\"movups xmmword [r15 + 0x40], xmm0\");\n    __asm (\"movups xmmword [r15 + 0x50], xmm0\");\n    __asm (\"movups xmmword [r15 + 0x60], xmm0\");\n    __asm (\"movups xmmword [r15 + 0x70], xmm0\");\n    __asm (\"movups xmmword [r15 + 0x80], xmm0\");\n    __asm (\"movups xmmword [r15 + 0x90], xmm0\");\n    __asm (\"movups xmmword [r15 + 0xa0], xmm0\");\n    __asm (\"movups xmmword [r15 + 0xb0], xmm0\");\n    __asm (\"movups xmmword [r15 + 0xc0], xmm0\");\n    __asm (\"movups xmmword [r15 + 0xd0], xmm0\");\n    __asm (\"movups xmmword [r15 + 0xe0], xmm0\");\n    __asm (\"movups xmmword [r15 + 0xf0], xmm0\");\nlabel_16:\n    rax = *((rsp + 0x18));\n    *((rax + 0x38)) |= 1;\n    goto label_4;\nlabel_10:\n    r13d = 1;\n    goto label_5;\n}\n"
        },
        {
            "funcName": "fcn_0040c7b0",
            "funcStartAddr": "0x40c7b0",
            "funcEndAddr": "0x40ca34",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x40c7b0 */\n#include <stdint.h>\n \nuint64_t fcn_0040c7b0 (int64_t arg1, int64_t arg2, int64_t arg3, int32_t arg4, int64_t arg5) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    rdx <<= 4;\n    r10 = rdi + rdx;\n    r11d = *((r10 + 8));\n    if (r11b == 7) {\n        goto label_6;\n    }\n    if (*((rcx + 0x90)) == 1) {\n        goto label_0;\n    }\n    rbx = rsi;\n    rdi = rcx;\n    r9 = rcx;\n    eax = fcn_00407fe0 (rdi, r8);\n    if (r11b == 5) {\n        goto label_7;\n    }\n    if (r11b != 6) {\n        goto label_0;\n    }\n    if (eax > 1) {\n        goto label_8;\n    }\n    do {\nlabel_0:\n        ebp = 0;\nlabel_1:\n        eax = ebp;\n        return eax;\nlabel_7:\n    } while (eax <= 1);\n    rax = *(rbx);\n    if ((al & 0x40) != 0) {\n        goto label_9;\n    }\n    rdx = *((r9 + 8));\n    if (*((rdx + r8)) == 0xa) {\n        goto label_0;\n    }\nlabel_9:\n    if ((al & 0x80) == 0) {\n        goto label_1;\n    }\n    rax = *((r9 + 8));\n    if (*((rax + r8)) == 0) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_8:\n    r13 = *(r10);\n    rsi = *((r13 + 0x40));\n    rdx = *((r13 + 0x28));\n    if (rsi == 0) {\n        rax = rdx;\n        rax |= *((r13 + 0x48));\n        if (rax == 0) {\n            goto label_10;\n        }\n    }\n    rax = *((r9 + 0x10));\n    r12d = *((rax + r8*4));\n    if (rdx <= 0) {\n        goto label_11;\n    }\n    rcx = *(r13);\n    if (r12d == *(rcx)) {\n        goto label_3;\n    }\n    eax = 0;\n    while (rdx != rax) {\n        if (r12d == *((rcx + rax*4))) {\n            goto label_3;\n        }\n        rax++;\n    }\nlabel_11:\n    rax = *((r13 + 0x48));\n    if (rax <= 0) {\n        goto label_12;\n    }\n    ebx = 0;\n    while (eax == 0) {\n        rbx++;\n        if (rbx >= *((r13 + 0x48))) {\n            goto label_13;\n        }\n        rax = *((r13 + 0x18));\n        eax = iswctype (r12d, *((rax + rbx*8)));\n    }\nlabel_3:\n    if ((*((r13 + 0x20)) & 1) == 0) {\n        goto label_1;\n    }\n    goto label_0;\nlabel_6:\n    rax = *((rcx + 8));\n    edx = *((rax + r8));\n    if (dl <= 0xc1) {\n        goto label_0;\n    }\n    rcx = *((rcx + 0x58));\n    rsi = r8 + 1;\n    if (rsi >= rcx) {\n        goto label_0;\n    }\n    edi = *((rax + r8 + 1));\n    if (dl <= 0xdf) {\n        goto label_14;\n    }\n    if (dl > 0xef) {\n        goto label_15;\n    }\n    if (dl != 0xe0) {\n        goto label_16;\n    }\n    if (dil <= 0x9f) {\n        goto label_0;\n    }\nlabel_16:\n    edi = 3;\nlabel_5:\n    rdx = r8 + rdi;\n    if (rcx < rdx) {\n        goto label_0;\n    }\n    rdx = rax + rsi;\n    rax += r8;\n    rax += rdi;\n    goto label_17;\nlabel_2:\n    rdx++;\n    if (rax == rdx) {\n        goto label_1;\n    }\nlabel_17:\n    ebx = *(rdx);\n    ecx = rbx - 0x80;\n    if (cl <= 0x3f) {\n        goto label_2;\n    }\n    goto label_0;\nlabel_13:\n    rsi = *((r13 + 0x40));\nlabel_12:\n    if (rsi <= 0) {\n        goto label_10;\n    }\n    rdx = *((r13 + 8));\n    eax = 0;\nlabel_4:\n    if (r12d < *((rdx + rax*4))) {\n        goto label_18;\n    }\n    rcx = *((r13 + 0x10));\n    if (r12d <= *((rcx + rax*4))) {\n        goto label_3;\n    }\nlabel_18:\n    rax++;\n    if (rax != rsi) {\n        goto label_4;\n    }\nlabel_10:\n    if ((*((r13 + 0x20)) & 1) != 0) {\n        goto label_1;\n    }\n    goto label_0;\nlabel_15:\n    if (dl > 0xf7) {\n        goto label_19;\n    }\n    if (dl != 0xf0) {\n        goto label_20;\n    }\n    if (dil <= 0x8f) {\n        goto label_0;\n    }\nlabel_20:\n    edi = 4;\n    goto label_5;\nlabel_14:\n    edi += 0xffffff80;\n    if (dil <= 0x3f) {\n        goto label_1;\n    }\n    goto label_0;\nlabel_19:\n    if (dl > 0xfb) {\n        goto label_21;\n    }\n    if (dl != 0xf8) {\n        goto label_22;\n    }\n    if (dil <= 0x87) {\n        goto label_0;\n    }\nlabel_22:\n    edi = 5;\n    goto label_5;\nlabel_21:\n    if (dl > 0xfd) {\n        goto label_0;\n    }\n    if (dl != 0xfc) {\n        goto label_23;\n    }\n    if (dil <= 0x83) {\n        goto label_0;\n    }\nlabel_23:\n    edi = 6;\n    goto label_5;\n}\n"
        },
        {
            "funcName": "fcn_0040ca40",
            "funcStartAddr": "0x40ca40",
            "funcEndAddr": "0x40d15f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x40ca40 */\n#include <stdint.h>\n \nint64_t fcn_0040ca40 (int64_t arg_100h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, signed int64_t arg6) {\n    int64_t var_8h;\n    signed int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    signed int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    int64_t var_50h;\n    int64_t var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    int64_t var_78h;\n    int64_t var_7ch;\n    int64_t var_80h;\n    uint32_t var_88h;\n    void * var_90h;\n    int64_t var_a0h;\n    int64_t var_a8h;\n    void * ptr;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rax = rdx;\n    rax <<= 4;\n    r13 = rdx;\n    r12 = rdi;\n    rbx = *((rdi + 0x98));\n    r15 = *((rsi + 8));\n    *((rsp + 0x50)) = rsi;\n    rax += *(rbx);\n    *((rsp + 0x68)) = r8;\n    rax = *(rax);\n    *((rsp + 0x30)) = r9;\n    *((rsp + 0x20)) = rbx;\n    *((rsp + 0x38)) = rax;\n    rax = *((rdi + 0xe0));\n    *((rsp + 0x78)) = 0;\n    rax += r9;\n    if (rax >= r15) {\n        goto label_15;\n    }\nlabel_11:\n    rcx = *((r12 + 0xb8));\n    rax = *((rsp + 0x50));\n    edx = *((r12 + 0xa0));\n    rbx = *(rax);\n    r14 = *((rax + 0x10));\n    *((rsp + 0x58)) = rcx;\n    rcx = *((r12 + 0x48));\n    *((r12 + 0xb8)) = r14;\n    *((rsp + 0x60)) = rcx;\n    if (rbx == 0) {\n        goto label_16;\n    }\n    *((r12 + 0x48)) = rbx;\n    eax = fcn_00409d60 (r12, rbx - 1, rdx);\n    *(rsp) = eax;\n    if (rbx == rbp) {\n        goto label_17;\n    }\n    r15 = *((r14 + rbx*8));\n    if (r15 != 0) {\n        if ((*((r15 + 0x68)) & 0x40) != 0) {\n            goto label_18;\n        }\n    }\n    *((rsp + 0x90)) = 0;\n    xmm0 = 0;\n    *((rsp + 0x80)) = xmm0;\nlabel_6:\n    if (rbx >= *((rsp + 0x30))) {\n        goto label_19;\n    }\n    ecx = *((r12 + 0xe0));\n    if (ecx < 0) {\n        goto label_19;\n    }\n    *((rsp + 0x10)) = 0;\n    r13 = rbx + 1;\n    rax = *((r12 + 0xb8));\n    r14 = r13;\nlabel_1:\n    rcx = r14 - 1;\n    rsi = *((rax + r14*8));\n    *((rsp + 0x88)) = 0;\n    *(rsp) = rcx;\n    rcx = r14*8;\n    *((rsp + 0x18)) = rcx;\n    if (rsi == 0) {\n        goto label_20;\n    }\n    rsi += 8;\n    eax = fcn_00408570 (rsp + 0x80, rsi);\n    *((rsp + 0x78)) = eax;\n    if (eax != 0) {\n        goto label_7;\n    }\n    if (r15 == 0) {\n        goto label_8;\n    }\nlabel_4:\n    xmm0 = 0;\n    rbp = *((r12 + 0x98));\n    *((rsp + 0x7c)) = 0;\n    *((rsp + 0xa0)) = xmm0;\n    *((rsp + 0xb0)) = 0;\n    if (*((r15 + 0x28)) <= 0) {\n        goto label_21;\n    }\n    ecx = 0;\n    rax = rbp + 0xd8;\n    *((rsp + 0x48)) = r14;\n    *((rsp + 0x28)) = rax;\n    r14 = rcx;\n    while ((*((rsi + 0xa)) & 0x10) == 0) {\nlabel_3:\n        al = fcn_00409e50 (r12, rsi, *(rsp));\n        if (al != 0) {\nlabel_2:\n            rax = r13*8;\n            *((rsp + 8)) = rax;\nlabel_0:\n            rax = *((rbp + 0x18));\n            rcx = *((rsp + 8));\n            al = fcn_00406a20 (rsp + 0x80, *((rax + rcx)));\n            if (al == 0) {\n                goto label_22;\n            }\n        }\n        r14++;\n        if (r14 >= *((r15 + 0x28))) {\n            goto label_23;\n        }\n        rax = *((r15 + 0x30));\n        rdi = *(rbp);\n        r13 = *((rax + r14*8));\n        rbx = *((rax + r14*8));\n        rbx <<= 4;\n        rsi = rdi + rbx;\n    }\n    eax = fcn_0040c7b0 (rdi, *((rsp + 0x28)), r13, r12, *(rsp));\n    if (eax <= 1) {\n        goto label_24;\n    }\n    rcx = *(rsp);\n    rbx = r13*8;\n    rax = (int64_t) eax;\n    rdx = *((rbp + 0x18));\n    *((rsp + 8)) = rbx;\n    rbx = rax + rcx;\n    rax = *((r12 + 0xb8));\n    rdx = *((rdx + r13*8));\n    r13 = rbx*8;\n    rsi = *((rax + rbx*8));\n    *((rsp + 0xa8)) = 0;\n    if (rsi != 0) {\n        rsi += 8;\n        *((rsp + 0x40)) = rdx;\n        eax = fcn_00408570 (rsp + 0xa0, rsi);\n        rdx = *((rsp + 0x40));\n        *((rsp + 0x7c)) = eax;\n        if (eax != 0) {\n            goto label_25;\n        }\n    }\n    al = fcn_00406a20 (rsp + 0xa0, rdx);\n    if (al == 0) {\n        goto label_22;\n    }\n    r13 += *((r12 + 0xb8));\n    rax = fcn_004095e0 (rsp + 0x7c, rbp, rsp + 0xa0);\n    *(r13) = rax;\n    rax = *((r12 + 0xb8));\n    if (*((rax + rbx*8)) != 0) {\n        goto label_0;\n    }\n    edx = *((rsp + 0x7c));\n    if (edx == 0) {\n        goto label_0;\n    }\nlabel_25:\n    r14 = *((rsp + 0x48));\n    free (*((rsp + 0xb0)));\n    eax = *((rsp + 0x7c));\n    *((rsp + 0x78)) = eax;\n    if (eax != 0) {\n        goto label_7;\n    }\nlabel_8:\n    rbx = r14;\n    if (*((rsp + 0x88)) != 0) {\n        eax = fcn_004089a0 (*((rsp + 0x20)), rsp + 0x80, *((rsp + 0x38)), *((rsp + 0x100)));\n        *((rsp + 0x78)) = eax;\n        if (eax != 0) {\n            goto label_7;\n        }\n        eax = fcn_00409880 (r12, rsp + 0x80, r14, *((rsp + 0x38)), *((rsp + 0x100)));\n        *((rsp + 0x78)) = eax;\n        if (eax != 0) {\n            goto label_7;\n        }\n    }\nlabel_5:\n    eax = fcn_00409d60 (r12, *(rsp), *((r12 + 0xa0)));\n    rax = fcn_004092e0 (rsp + 0x78, *((rsp + 0x20)), rsp + 0x80, eax);\n    r15 = rax;\n    if (rax == 0) {\n        goto label_26;\n    }\n    rax = *((r12 + 0xb8));\n    rcx = *((rsp + 0x18));\n    *((rsp + 0x10)) = 0;\n    *((rax + rcx)) = r15;\nlabel_9:\n    if (*((rsp + 0x30)) <= r14) {\n        goto label_19;\n    }\n    r14++;\n    rdx = *((r12 + 0xe0));\n    if (rdx >= *((rsp + 0x10))) {\n        goto label_1;\n    }\nlabel_19:\n    free (*((rsp + 0x90)));\n    rax = *((r12 + 0xb8));\n    rdx = *((rsp + 0x30));\n    rax = *((rax + rdx*8));\n    if (rax == 0) {\n        goto label_27;\n    }\n    rdx = *((rsp + 0x50));\n    *(rdx) = rbx;\n    rbx = *((rsp + 0x58));\n    *((r12 + 0xb8)) = rbx;\n    rbx = *((rsp + 0x60));\n    *((r12 + 0x48)) = rbx;\n    rax = fcn_00408030 (*((rax + 0x10)), rax + 0x18, *((rsp + 0x68)));\n    al = (rax == 0) ? 1 : 0;\n    eax = (int32_t) al;\n    goto label_13;\nlabel_24:\n    if (eax != 0) {\n        goto label_2;\n    }\n    rbx += *(rbp);\n    rsi = rbx;\n    goto label_3;\nlabel_20:\n    if (r15 != 0) {\n        goto label_4;\n    }\n    rbx = r14;\n    goto label_5;\nlabel_22:\n    free (*((rsp + 0xb0)));\n    *((rsp + 0x78)) = 0xc;\nlabel_7:\n    free (*((rsp + 0x90)));\n    eax = *((rsp + 0x78));\n    do {\nlabel_13:\n        return rax;\nlabel_18:\n        r13 = rsp + 0x80;\n        eax = fcn_004090d0 (r13, r15 + 8);\n        *((rsp + 0x78)) = eax;\n    } while (eax != 0);\n    if ((*((r15 + 0x68)) & 0x40) == 0) {\n        goto label_6;\n    }\nlabel_10:\n    if (*((rsp + 0x88)) == 0) {\n        goto label_28;\n    }\n    eax = fcn_00409880 (r12, r13, rbx, *((rsp + 0x38)), *((rsp + 0x100)));\n    *((rsp + 0x78)) = eax;\n    if (eax != 0) {\n        goto label_7;\n    }\nlabel_28:\n    rax = fcn_004092e0 (rsp + 0x78, *((rsp + 0x20)), r13, *(rsp));\n    r15 = rax;\n    if (rax == 0) {\n        goto label_29;\n    }\nlabel_12:\n    rax = *((r12 + 0xb8));\n    *((rax + rbx*8)) = r15;\n    goto label_6;\nlabel_23:\n    r14 = *((rsp + 0x48));\nlabel_14:\n    free (*((rsp + 0xb0)));\n    *((rsp + 0x78)) = 0;\n    goto label_8;\nlabel_26:\n    eax = *((rsp + 0x78));\n    if (eax != 0) {\n        goto label_7;\n    }\n    rax = *((r12 + 0xb8));\n    rdx = *((rsp + 0x18));\n    *((rax + rdx)) = 0;\n    goto label_9;\nlabel_16:\n    *((r12 + 0x48)) = rbp;\n    eax = fcn_00409d60 (r12, rbp - 1, rdx);\n    *(rsp) = eax;\nlabel_17:\n    *((rsp + 0x80)) = 1;\n    *((rsp + 0x88)) = 1;\n    rax = malloc (8);\n    *((rsp + 0x90)) = rax;\n    if (rax == 0) {\n        goto label_30;\n    }\n    *(rax) = r13;\n    rbx = rbp;\n    r13 = rsp + 0x80;\n    *((rsp + 0x78)) = 0;\n    eax = fcn_004089a0 (*((rsp + 0x20)), r13, *((rsp + 0x38)), *((rsp + 0x100)));\n    *((rsp + 0x78)) = eax;\n    if (eax == 0) {\n        goto label_10;\n    }\n    goto label_7;\nlabel_15:\n    rbx = rax + 1;\n    rax = 0x7fffffffffffffff;\n    rax -= r15;\n    if (rax < rbx) {\n        goto label_30;\n    }\n    rax = 0x1fffffffffffffff;\n    r14 = r15 + rbx;\n    if (r14 > rax) {\n        goto label_30;\n    }\n    rax = *((rsp + 0x50));\n    rax = realloc (*((rax + 0x10)), r14*8);\n    if (rax == 0) {\n        goto label_30;\n    }\n    rcx = *((rsp + 0x50));\n    *((rcx + 0x10)) = rax;\n    *((rcx + 8)) = r14;\n    memset (rax + r15*8, 0, rbx*8);\n    goto label_11;\nlabel_29:\n    esi = *((rsp + 0x78));\n    if (esi == 0) {\n        goto label_12;\n    }\n    goto label_7;\nlabel_30:\n    eax = 0xc;\n    goto label_13;\nlabel_27:\n    rax = *((rsp + 0x50));\n    *(rax) = rbx;\n    rax = *((rsp + 0x58));\n    *((r12 + 0xb8)) = rax;\n    rax = *((rsp + 0x60));\n    *((r12 + 0x48)) = rax;\n    eax = 1;\n    goto label_13;\nlabel_21:\n    edi = 0;\n    goto label_14;\n}\n"
        },
        {
            "funcName": "fcn_0040d160",
            "funcStartAddr": "0x40d160",
            "funcEndAddr": "0x40da23",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x40d160 */\n#include <stdint.h>\n \nint64_t fcn_0040d160 (int64_t arg1, int64_t arg2, int32_t arg3, int64_t arg4) {\n    int64_t var_c8h;\n    uint32_t var_b9h;\n    int64_t var_b8h;\n    void * s1;\n    size_t size;\n    uint32_t var_a0h;\n    int32_t var_98h;\n    int64_t var_90h;\n    uint32_t var_88h;\n    void * s2;\n    int64_t var_70h;\n    int64_t var_68h;\n    void * ptr;\n    int64_t var_50h;\n    int64_t var_48h;\n    void * var_40h;\n    int64_t var_28h;\n    int64_t var_fh;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r13 = rcx;\n    r12 = rsi;\n    rax = *(rdi);\n    *((rbp - 0x98)) = rdx;\n    *((rbp - 0x50)) = 0;\n    *((rbp - 0x90)) = rax;\n    *((rbp - 0x48)) = 2;\n    *((rbp - 0x40)) = 0;\n    if (r8b == 0) {\n        goto label_20;\n    }\n    rbx = rbp - 0x50;\n    rax = malloc (0x60);\n    *((rbp - 0x88)) = rbx;\n    *((rbp - 0x40)) = rax;\n    if (rax == 0) {\n        goto label_15;\n    }\nlabel_13:\n    rax = *((rbp - 0x90));\n    xmm0 = 0;\n    *((rbp - 0x60)) = 0;\n    *((rbp - 0x70)) = xmm0;\n    rbx = *((rax + 0x90));\n    rax = *((rbp - 0x98));\n    rax <<= 4;\n    *((rbp - 0xa8)) = rax;\n    if (rax > 0xfbf) {\n        goto label_21;\n    }\n    rax += 0x10;\n    *((rbp - 0xb9)) = 0;\n    rax = rsp + 0xf;\n    rax &= 0xfffffffffffffff0;\n    *((rbp - 0xb0)) = rax;\nlabel_14:\n    memcpy (*((rbp - 0xb0)), r13, *((rbp - 0xa8)));\n    rcx = *(r13);\n    rax = rbp - 0x70;\n    rax += 0x10;\n    *((rbp - 0x78)) = rcx;\n    *((rbp - 0xb8)) = rax;\n    while (edx != 8) {\n        if (edx == 9) {\n            goto label_22;\n        }\nlabel_0:\n        if (rcx == rax) {\n            if (*((r12 + 0xb0)) == rbx) {\n                goto label_23;\n            }\n        }\nlabel_9:\n        r14 = *((r12 + 0x98));\n        rdi = *(r14);\n        rsi = rdi + r9;\n        eax = *((rsi + 8));\n        if ((al & 8) != 0) {\n            goto label_24;\n        }\n        if ((*((rsi + 0xa)) & 0x10) != 0) {\n            goto label_25;\n        }\n        if (al == 4) {\n            goto label_26;\n        }\n        rcx = *((rbp - 0x78));\nlabel_3:\n        *((rbp - 0xa0)) = rcx;\n        al = fcn_00409e50 (r12, rsi, *((rbp - 0x78)));\n        rcx = *((rbp - 0xa0));\n        if (al == 0) {\n            goto label_27;\n        }\n        rax = *((r14 + 0x18));\n        rdx = rcx + 1;\n        rbx = *((rax + r15*8));\nlabel_5:\n        *((rbp - 0x78)) = rdx;\n        if (*((rbp - 0x88)) != 0) {\n            if (rdx > *((r12 + 0xa8))) {\n                goto label_4;\n            }\n            rax = *((r12 + 0xb8));\n            rax = *((rax + rdx*8));\n            if (rax == 0) {\n                goto label_4;\n            }\n            rax = fcn_00408030 (*((rax + 0x10)), rax + 0x18, rbx);\n            if (rax == 0) {\n                goto label_4;\n            }\n        }\n        *((rbp - 0x68)) = 0;\nlabel_6:\n        if (rbx < 0) {\n            goto label_28;\n        }\nlabel_1:\n        rcx = *((rbp - 0x78));\n        rax = *((r13 + 8));\n        if (rax < rcx) {\n            goto label_29;\n        }\nlabel_2:\n        rdi = *((rbp - 0x90));\n        r9 = rbx;\n        r15 = rbx;\n        r9 <<= 4;\n        rsi = *(rdi);\n        rsi += r9;\n        edx = *((rsi + 8));\n    }\n    rdx = *(rsi);\n    rdx++;\n    if (*((rbp - 0x98)) <= rdx) {\n        goto label_0;\n    }\n    rdx <<= 4;\n    rdx += r13;\n    *((rdx + 8)) = 0xffffffffffffffff;\n    rax = *((r13 + 8));\n    *(rdx) = rcx;\n    goto label_0;\nlabel_24:\n    rax = *((r12 + 0xb8));\n    rdx = *((rbp - 0x78));\n    r9 = *((rax + rdx*8));\n    rax = *((r14 + 0x28));\n    rdx = rbx * 3;\n    *((rbp - 0xa0)) = r9;\n    r15 = rax + rdx*8;\n    al = fcn_00406a20 (rbp - 0x70, rbx);\n    r9 = *((rbp - 0xa0));\n    if (al == 0) {\n        goto label_30;\n    }\n    r10 = *((r15 + 8));\n    if (r10 <= 0) {\n        goto label_27;\n    }\n    r11 = *((r9 + 0x10));\n    rax = r9 + 0x18;\n    r15 = *((r15 + 0x10));\n    rbx = 0xffffffffffffffff;\n    *((rbp - 0xa0)) = r12;\n    r9d = 0;\n    r12 = rbx;\n    rbx = r11;\n    r11 = rax;\n    do {\n        r14 = *((r15 + r9*8));\n        rax = fcn_00408030 (rbx, r11, r14);\n        if (rax != 0) {\n            if (r12 != -1) {\n                goto label_31;\n            }\n            r12 = r14;\n        }\n        r9++;\n    } while (r10 != r9);\n    rbx = r12;\n    r12 = *((rbp - 0xa0));\n    if (rbx >= 0) {\n        goto label_1;\n    }\nlabel_28:\n    if (rbx == 0xfffffffffffffffe) {\n        goto label_30;\n    }\nlabel_27:\n    if (*((rbp - 0x88)) == 0) {\n        goto label_32;\n    }\nlabel_4:\n    rax = fcn_0040b7e0 (*((rbp - 0x88)), rdi + 0x10, rbp - 0x78, *((rbp - 0x98)), r13, rbp - 0x70);\n    rcx = *((rbp - 0x78));\n    rbx = rax;\n    rax = *((r13 + 8));\n    if (rax >= rcx) {\n        goto label_2;\n    }\nlabel_29:\n    free (*((rbp - 0x60)));\n    if (*((rbp - 0xb9)) != 0) {\n        goto label_33;\n    }\n    rdi = *((rbp - 0x88));\n    if (rdi != 0) {\nlabel_16:\n        eax = fcn_0040b790 (rdi);\n    }\nlabel_17:\n    eax = 0;\nlabel_8:\n    rsp = rbp - 0x28;\n    return rax;\nlabel_22:\n    rdi = *(rsi);\n    rdx = rdi + 1;\n    if (*((rbp - 0x98)) <= rdx) {\n        goto label_0;\n    }\n    rdx <<= 4;\n    rax = r13 + rdx;\n    if (*(rax) < rcx) {\n        goto label_34;\n    }\n    if ((*((rsi + 0xa)) & 8) != 0) {\n        rsi = *((rbp - 0xb0));\n        if (*((rsi + rdx)) != -1) {\n            goto label_35;\n        }\n    }\n    *((rax + 8)) = rcx;\n    rax = *((r13 + 8));\n    goto label_0;\nlabel_25:\n    *((rbp - 0xa0)) = r9;\n    eax = fcn_0040c7b0 (rdi, r14 + 0xd8, rbx, r12, *((rbp - 0x78)));\n    rcx = (int64_t) eax;\n    if (rcx != 0) {\n        goto label_36;\n    }\n    r9 = *((rbp - 0xa0));\n    rsi = *(r14);\n    rcx = *((rbp - 0x78));\n    rsi += r9;\n    goto label_3;\nlabel_26:\n    rax = *(rsi);\n    rax++;\n    rax <<= 4;\n    rax += r13;\n    rdx = *((rax + 8));\n    rdi = *(rax);\n    rcx = rdx;\n    rcx -= rdi;\n    if (*((rbp - 0x88)) == 0) {\n        goto label_37;\n    }\n    if (rdi == -1) {\n        goto label_4;\n    }\n    if (rdx == -1) {\n        goto label_4;\n    }\n    if (rcx == 0) {\n        goto label_38;\n    }\n    rax = *((r12 + 8));\n    r15 = *((rbp - 0x78));\n    rdx = rcx;\n    *((rbp - 0xa0)) = rcx;\n    rdi += rax;\n    eax = memcmp (rdi, rax + r15, rdx);\n    rcx = *((rbp - 0xa0));\n    if (eax != 0) {\n        goto label_4;\n    }\nlabel_7:\n    rax = *((r14 + 0x18));\n    rdx = r15 + rcx;\n    rbx = *((rax + rbx*8));\n    goto label_5;\nlabel_31:\n    rbx = r12;\n    r12 = *((rbp - 0xa0));\n    rax = fcn_00408030 (*((rbp - 0x68)), *((rbp - 0xb8)), rbx);\n    if (rax != 0) {\n        goto label_39;\n    }\n    rcx = *((rbp - 0x88));\n    if (rcx == 0) {\n        goto label_6;\n    }\n    r15 = *(rcx);\n    rdx = *((rbp - 0x78));\n    rax = r15 + 1;\n    *(rcx) = rax;\n    if (rax == *((rcx + 8))) {\n        goto label_40;\n    }\n    rax = *((rcx + 0x10));\nlabel_12:\n    r15 *= 3;\n    r15 <<= 4;\n    r15 += rax;\n    *((r15 + 8)) = r14;\n    r14 = *((rbp - 0xa8));\n    *(r15) = rdx;\n    rax = malloc (r14);\n    *((r15 + 0x10)) = rax;\n    if (rax == 0) {\n        goto label_11;\n    }\n    memcpy (rax, r13, r14);\n    eax = fcn_004090d0 (r15 + 0x18, rbp - 0x70);\n    if (eax == 0) {\n        goto label_6;\n    }\nlabel_11:\n    free (*((rbp - 0x60)));\n    if (*((rbp - 0xb9)) != 0) {\n        goto label_41;\n    }\nlabel_10:\n    fcn_0040b790 (*((rbp - 0x88)));\n    rsp = rbp - 0x28;\n    eax = 0xc;\n    return rax;\nlabel_37:\n    if (rcx == 0) {\n        goto label_38;\n    }\nlabel_36:\n    r15 = *((rbp - 0x78));\n    goto label_7;\nlabel_23:\n    if (*((rbp - 0x88)) == 0) {\n        goto label_42;\n    }\n    rcx = *((rbp - 0x98));\n    if (rcx == 0) {\n        goto label_43;\n    }\n    rax = r13;\n    edx = 0;\n    do {\n        if (*(rax) >= 0) {\n            if (*((rax + 8)) == -1) {\n                goto label_44;\n            }\n        }\n        rdx++;\n        rax += 0x10;\n    } while (rcx != rdx);\n    do {\nlabel_43:\n        free (*((rbp - 0x60)));\n        if (*((rbp - 0xb9)) != 0) {\n            goto label_45;\n        }\nlabel_19:\n        eax = fcn_0040b790 (*((rbp - 0x88)));\n        eax = 0;\n        goto label_8;\nlabel_44:\n    } while (*((rbp - 0x98)) == rdx);\n    rax = fcn_0040b7e0 (*((rbp - 0x88)), rdi + 0x10, rbp - 0x78, *((rbp - 0x98)), r13, rbp - 0x70);\n    r9 = rax;\n    rbx = rax;\n    r15 = rax;\n    r9 <<= 4;\n    goto label_9;\nlabel_38:\n    *((rbp - 0xa0)) = r9;\n    al = fcn_00406a20 (rbp - 0x70, rbx);\n    if (al == 0) {\n        goto label_30;\n    }\n    rdx = *((r14 + 0x28));\n    rax = rbx * 3;\n    rcx = *((rbp - 0x78));\n    rax = rdx + rax*8;\n    *((rbp - 0xc8)) = rcx;\n    rax = *((rax + 0x10));\n    rbx = *(rax);\n    rax = *((r12 + 0xb8));\n    rax = *((rax + rcx*8));\n    rax = fcn_00408030 (*((rax + 0x10)), rax + 0x18, rbx);\n    if (rax != 0) {\n        goto label_6;\n    }\n    r9 = *((rbp - 0xa0));\n    rsi = *(r14);\n    rcx = *((rbp - 0xc8));\n    rsi += r9;\n    goto label_3;\nlabel_39:\n    rbx = r14;\n    goto label_6;\nlabel_30:\n    free (*((rbp - 0x60)));\n    if (*((rbp - 0xb9)) != 0) {\n        goto label_41;\n    }\nlabel_18:\n    if (*((rbp - 0x88)) != 0) {\n        goto label_10;\n    }\nlabel_15:\n    rsp = rbp - 0x28;\n    eax = 0xc;\n    return rax;\nlabel_34:\n    *((rax + 8)) = rcx;\n    *((rbp - 0xc8)) = r9;\n    *((rbp - 0xa0)) = rcx;\n    memcpy (*((rbp - 0xb0)), r13, *((rbp - 0xa8)));\n    rax = *((r13 + 8));\n    rcx = *((rbp - 0xa0));\n    r9 = *((rbp - 0xc8));\n    goto label_0;\nlabel_35:\n    *((rbp - 0xc8)) = rcx;\n    *((rbp - 0xa0)) = r9;\n    memcpy (r13, rsi, *((rbp - 0xa8)));\n    rax = *((r13 + 8));\n    r9 = *((rbp - 0xa0));\n    rcx = *((rbp - 0xc8));\n    goto label_0;\nlabel_40:\n    rax = *((rbp - 0x88));\n    *((rbp - 0xa0)) = rdx;\n    rsi <<= 5;\n    rax = realloc (*((rax + 0x10)), rax + rax*2);\n    if (rax == 0) {\n        goto label_11;\n    }\n    rcx = *((rbp - 0x88));\n    rdx = *((rbp - 0xa0));\n    *((rcx + 8)) <<= 1;\n    *((rcx + 0x10)) = rax;\n    goto label_12;\nlabel_20:\n    *((rbp - 0x88)) = 0;\n    goto label_13;\nlabel_21:\n    rax = malloc (*((rbp - 0xa8)));\n    *((rbp - 0xb9)) = 1;\n    *((rbp - 0xb0)) = rax;\n    if (rax != 0) {\n        goto label_14;\n    }\n    rdi = *((rbp - 0x88));\n    if (rdi == 0) {\n        goto label_15;\n    }\n    fcn_0040b790 (rdi);\n    goto label_15;\nlabel_33:\n    free (*((rbp - 0xb0)));\n    rdi = *((rbp - 0x88));\n    if (rdi != 0) {\n        goto label_16;\n    }\n    goto label_17;\nlabel_41:\n    free (*((rbp - 0xb0)));\n    goto label_18;\nlabel_32:\n    free (*((rbp - 0x60)));\n    eax = 1;\n    if (*((rbp - 0xb9)) == 0) {\n        goto label_8;\n    }\n    *((rbp - 0x88)) = eax;\n    free (*((rbp - 0xb0)));\n    eax = *((rbp - 0x88));\n    goto label_8;\nlabel_42:\n    free (*((rbp - 0x60)));\n    if (*((rbp - 0xb9)) == 0) {\n        goto label_17;\n    }\n    eax = free (*((rbp - 0xb0)));\n    eax = 0;\n    goto label_8;\nlabel_45:\n    free (*((rbp - 0xb0)));\n    goto label_19;\n}\n"
        },
        {
            "funcName": "fcn_0040da30",
            "funcStartAddr": "0x40da30",
            "funcEndAddr": "0x40dbc6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x40da30 */\n#include <stdint.h>\n \nuint64_t fcn_0040da30 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = r8;\n    r14 = rdx;\n    r13 = rcx;\n    r12 = rsi;\n    rbx = rdi;\n    eax = fcn_0040ca40 (rdi, rdx + 0x10, *(rdx), *((rdx + 8)), r13, r9);\n    if (eax != 0) {\nlabel_1:\n        return eax;\n    }\n    r15 = *((r14 + 8));\n    rax = *((rbx + 0xc8));\n    rdx = *((rbx + 0xd0));\n    rcx = *(r12);\n    rdi = *((rbx + 0xd8));\n    rsi = r15;\n    if (rax >= rdx) {\n        goto label_2;\n    }\nlabel_0:\n    rdx = rax * 5;\n    rdx <<= 3;\n    if (rax <= 0) {\n        goto label_3;\n    }\n    r8 = rdi + rdx - 0x28;\n    while (1) {\nlabel_3:\n        rdi += rdx;\n        edx = 0;\n        dl = (r15 == rcx) ? 1 : 0;\n        rax++;\n        *(rdi) = r13;\n        edx = -edx;\n        *((rdi + 8)) = rbp;\n        *((rdi + 0x22)) = dx;\n        *((rdi + 0x10)) = rcx;\n        *((rdi + 0x18)) = r15;\n        *((rbx + 0xc8)) = rax;\n        rax = r15;\n        *((rdi + 0x20)) = 0;\n        rdx = *((rbx + 0xe0));\n        rax -= rcx;\n        if (rdx < rax) {\n            r15d -= ecx;\n            *((rbx + 0xe0)) = r15d;\n        }\n        rsi += rbp;\n        rsi -= *(r12);\n        rdi = rbx;\n        void (*0x407600)() ();\n        *((r8 + 0x20)) = 1;\n    }\nlabel_2:\n    *((rsp + 8)) = rcx;\n    rsi <<= 4;\n    rax = realloc (rdi, rdx + rdx*4);\n    rcx = *((rsp + 8));\n    if (rax != 0) {\n        rdx = *((rbx + 0xd0));\n        rsi = *((rbx + 0xc8));\n        *((rsp + 8)) = rcx;\n        *((rbx + 0xd8)) = rax;\n        rsi *= 5;\n        rdx <<= 3;\n        memset (rax + rsi*8, 0, rdx + rdx*4);\n        *((rbx + 0xd0)) <<= 1;\n        rax = *((rbx + 0xc8));\n        rdi = *((rbx + 0xd8));\n        rsi = *((r14 + 8));\n        rcx = *((rsp + 8));\n        goto label_0;\n    }\n    free (*((rbx + 0xd8)));\n    eax = 0xc;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040dbd0",
            "funcStartAddr": "0x40dbd0",
            "funcEndAddr": "0x40e442",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x40dbd0 */\n#include <stdint.h>\n \nint64_t fcn_0040dbd0 (int64_t arg1, uint32_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    int64_t var_10h;\n    void ** var_18h;\n    uint32_t var_20h;\n    void ** var_28h;\n    uint32_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    uint32_t var_50h;\n    int64_t var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    int64_t var_70h;\n    uint32_t var_78h;\n    int64_t var_8ch;\n    int64_t var_90h;\n    void * ptr;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\nlabel_9:\n    r14 = rdi;\n    r15 = *((rdi + 0x48));\n    rax = *((rdi + 0x98));\n    *((rsp + 0x50)) = rsi;\n    *((rsp + 0x48)) = rdx;\n    *((rsp + 0x38)) = rax;\n    rax = r15*8;\n    *((rsp + 0x58)) = rax;\n    *((rsp + 8)) = 0;\n    if (*(rsi) > 0) {\n        goto label_21;\n    }\n    goto label_22;\nlabel_0:\n    if ((al & 1) == 0) {\n        goto label_2;\n    }\n    edx &= 8;\n    if (edx != 0) {\n        goto label_2;\n    }\nlabel_1:\n    if ((cl & 0x20) != 0) {\n        if ((al & 2) == 0) {\n            goto label_2;\n        }\n    }\n    ecx &= 0x80;\n    if (ecx == 0) {\n        goto label_23;\n    }\n    if ((al & 8) != 0) {\n        goto label_23;\n    }\n    do {\nlabel_2:\n        rdi = *((rsp + 0x50));\n        rax = *((rsp + 8));\n        if (rax >= *(rdi)) {\n            goto label_22;\n        }\nlabel_21:\n        rax = *((rsp + 0x48));\n        rdi = *((rsp + 8));\n        rax = *(rax);\n        r13 = *((rax + rdi*8));\n        rdi = *((rsp + 0x38));\n        rax = *(rdi);\n        rbp <<= 4;\n        rax += rbp;\n    } while (*((rax + 8)) != 4);\n    ebx = *((rax + 8));\n    if ((ebx & 0x3ff00) == 0) {\n        goto label_23;\n    }\n    ebx >>= 8;\n    al = fcn_00409d60 (r14, r15, *((r14 + 0xa0)));\n    ecx = ebx;\n    edx = ebx;\n    cx &= 0x3ff;\n    if ((bl & 4) != 0) {\n        goto label_0;\n    }\n    edx &= 8;\n    if (edx == 0) {\n        goto label_1;\n    }\n    if ((al & 1) == 0) {\n        goto label_1;\n    }\n    goto label_2;\nlabel_23:\n    rbx = *((r14 + 0xc8));\n    ecx = 0;\n    rax = rbx;\nlabel_3:\n    if (rcx >= rax) {\n        goto label_24;\n    }\n    rsi = rcx + rax;\n    r8 = *((r14 + 0xd8));\n    rdx = rsi;\n    rdx >>= 0x3f;\n    rdx += rsi;\n    rdx >>= 1;\n    rsi = rdx * 5;\n    if (r15 <= *((r8 + rsi*8 + 8))) {\n        goto label_25;\n    }\n    goto label_26;\n    do {\n        rsi = rdx + rcx;\n        rax = rsi;\n        rax >>= 0x3f;\n        rax += rsi;\n        rax >>= 1;\n        rsi = rax * 5;\n        rdi = rax;\n        if (r15 > *((r8 + rsi*8 + 8))) {\n            goto label_27;\n        }\n        rdx = rax;\nlabel_25:\n    } while (rdx > rcx);\nlabel_24:\n    if (rbx <= rcx) {\n        goto label_28;\n    }\n    rdx = *((r14 + 0xd8));\n    rax = rcx * 5;\n    rax = rdx + rax*8;\n    if (*((rax + 8)) != r15) {\n        goto label_28;\n    }\n    if (rcx != -1) {\n        goto label_29;\n    }\n    goto label_28;\n    do {\n        rax += 0x28;\n        if (*((rax - 8)) == 0) {\n            goto label_28;\n        }\nlabel_29:\n    } while (r13 != *(rax));\n    do {\n        *((rsp + 0x8c)) = 0;\n        goto label_2;\nlabel_26:\n        rdi = rdx;\n        rdx = rax;\nlabel_27:\n        rcx = rdi + 1;\n        rax = rdx;\n        goto label_3;\nlabel_28:\n        rax = *((r14 + 0x98));\n        rdx = *(rax);\n        *((rsp + 0x68)) = rax;\n        rax = *((rdx + rbp));\n        *((rsp + 0x60)) = rax;\n    } while (*((r14 + 0xe8)) <= 0);\n    rax = *((r14 + 8));\n    *((rsp + 0x18)) = r15;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x20)) = rax;\n    *((rsp + 0x40)) = r13;\n    *((rsp + 0x70)) = rbx;\n    do {\n        rax = *((r14 + 0xf8));\n        rbx = *((rsp + 0x10));\n        rdi = *((rsp + 0x60));\n        rbx = *((rax + rbx*8));\n        rax = *((rbx + 8));\n        rax <<= 4;\n        if (rdi == *((rdx + rax))) {\n            goto label_30;\n        }\nlabel_12:\n        rax = *((rsp + 0x10));\n        if (rax >= *((r14 + 0xe8))) {\n            goto label_31;\n        }\n        rax = *((rsp + 0x68));\n        rdx = *(rax);\n    } while (1);\nlabel_31:\n    r15 = *((rsp + 0x18));\n    r13 = *((rsp + 0x40));\n    *((rsp + 0x8c)) = 0;\n    rbx = *((rsp + 0x70));\n    if (rbx >= *((r14 + 0xc8))) {\n        goto label_2;\n    }\n    rax = r13*8;\n    r12 = *((rsp + 0x38));\n    *((rsp + 0x40)) = rax;\n    rax = r13 * 3;\n    rax <<= 3;\n    *((rsp + 0x60)) = rax;\n    rax = r14;\n    r14 = rbx;\n    rbx = rax;\n    goto label_10;\nlabel_5:\n    rcx = *((r12 + 0x28));\n    rdi = *((rsp + 0x60));\n    rcx = *((rcx + rdi + 0x10));\n    rcx = *(rcx);\n    rcx *= 3;\n    rsi = rdx + rcx*8;\n    *((rsp + 0x18)) = rsi;\nlabel_6:\n    rbp += r15;\n    rbp -= rax;\n    eax = fcn_00409d60 (rbx, rbp - 1, *((rbx + 0xa0)));\n    rdi = *((rsp + 0x58));\n    r10 = rbp*8;\n    *((rsp + 0x10)) = 0;\n    ecx = eax;\n    rax = *((rbx + 0xb8));\n    r11 = rax + r10;\n    rax = *((rax + rdi));\n    rdx = *(r11);\n    if (rax != 0) {\n        rax = *((rax + 0x10));\n        *((rsp + 0x10)) = rax;\n    }\n    if (rdx == 0) {\n        goto label_32;\n    }\n    *((rsp + 0x28)) = ecx;\n    *((rsp + 0x30)) = r10;\n    eax = fcn_00409150 (rsp + 0x90, *((rdx + 0x50)), *((rsp + 0x18)));\n    ecx = *((rsp + 0x28));\n    r10 = *((rsp + 0x30));\n    *((rsp + 0x8c)) = eax;\n    if (eax != 0) {\n        goto label_33;\n    }\n    r10 += *((rbx + 0xb8));\n    *((rsp + 0x28)) = r10;\n    rax = fcn_004092e0 (rsp + 0x8c, r12, rsp + 0x90, rcx);\n    r10 = *((rsp + 0x28));\n    *(r10) = rax;\n    free (*((rsp + 0xa0)));\n    rdx = *((rbx + 0xb8));\n    if (*((rdx + rbp*8)) == 0) {\n        goto label_34;\n    }\nlabel_7:\n    if (*((rsp + 0x20)) != 0) {\n        goto label_4;\n    }\n    rax = *((rsp + 0x58));\n    rdi = *((rsp + 0x10));\n    rax = *((rdx + rax));\n    if (*((rax + 0x10)) > rdi) {\n        goto label_35;\n    }\n    do {\nlabel_4:\n        r14++;\n        if (r14 >= *((rbx + 0xc8))) {\n            goto label_36;\n        }\nlabel_10:\n        rdx = *((rbx + 0xd8));\n        rax = r14 * 5;\n        rax = rdx + rax*8;\n    } while (r13 != *(rax));\n    if (r15 != *((rax + 8))) {\n        goto label_4;\n    }\n    rbp = *((rax + 0x18));\n    rax = *((rax + 0x10));\n    rdx = *((r12 + 0x30));\n    rdi = rbp;\n    rdi -= rax;\n    *((rsp + 0x20)) = rdi;\n    if (rdi == 0) {\n        goto label_5;\n    }\n    rcx = *((r12 + 0x18));\n    rdi = *((rsp + 0x40));\n    rcx = *((rcx + rdi));\n    rcx *= 3;\n    rsi = rdx + rcx*8;\n    *((rsp + 0x18)) = rsi;\n    goto label_6;\nlabel_32:\n    *((rsp + 0x28)) = r11;\n    rax = fcn_004092e0 (rsp + 0x8c, r12, *((rsp + 0x18)), rcx);\n    r11 = *((rsp + 0x28));\n    rdx = *((rbx + 0xb8));\n    *(r11) = rax;\n    if (*((rdx + rbp*8)) != 0) {\n        goto label_7;\n    }\nlabel_34:\n    eax = *((rsp + 0x8c));\n    if (eax == 0) {\n        goto label_7;\n    }\nlabel_8:\n    return rax;\nlabel_30:\n    r12 = *(rbx);\n    r10 = *((rsp + 0x18));\n    if (*((rbx + 0x20)) <= 0) {\n        goto label_16;\n    }\n    rcx = r12;\n    ebp = 0;\n    r12 = *((rsp + 0x20));\n    r8 = r10;\n    while (eax <= 1) {\n        rbp++;\n        rcx = r13;\n        r8 = r15;\n        if (rbp >= *((rbx + 0x20))) {\n            goto label_37;\n        }\n        rax = *((rbx + 0x28));\n        r9 = *((rax + rbp*8));\n        r13 = *((r9 + 8));\n        rdx = *((r9 + 8));\n        rdx -= rcx;\n        r15 = rdx + r8;\n        if (rdx > 0) {\n            if (*((r14 + 0x30)) < r15) {\n                goto label_38;\n            }\nlabel_11:\n            *((rsp + 0x30)) = r9;\n            *((rsp + 0x28)) = rcx;\n            *((rsp + 0x20)) = r8;\n            eax = memcmp (r12 + r8, r12 + rcx, rdx);\n            r8 = *((rsp + 0x20));\n            rcx = *((rsp + 0x28));\n            r9 = *((rsp + 0x30));\n            if (eax != 0) {\n                goto label_39;\n            }\n        }\n        eax = fcn_0040da30 (r14, rbx, r9, *((rsp + 0x40)), *((rsp + 0x18)));\n        r12 = *((r14 + 8));\n    }\n    goto label_8;\nlabel_35:\n    rax = *((rsp + 0x18));\n    r8 = rax + 0x10;\n    rbp = rax + 8;\n    rdx = r8;\n    *((rsp + 0x10)) = r8;\n    eax = fcn_00409c10 (rbx, rbp, rdx, r15);\n    *((rsp + 0x8c)) = eax;\n    if (eax != 0) {\n        goto label_8;\n    }\n    r8 = *((rsp + 0x10));\n    eax = fcn_0040dbd0 (rbx, rbp, r8);\n    goto label_9;\n    *((rsp + 0x8c)) = eax;\n    if (eax != 0) {\n        goto label_8;\n    }\n    r14++;\n    if (r14 < *((rbx + 0xc8))) {\n        goto label_10;\n    }\nlabel_36:\n    r14 = rbx;\n    goto label_2;\nlabel_38:\n    *((rsp + 0x28)) = rdx;\n    *((rsp + 0x20)) = r9;\n    if (*((r14 + 0x58)) < r15) {\n        goto label_39;\n    }\n    *((rsp + 0x78)) = r8;\n    *((rsp + 0x30)) = rcx;\n    eax = fcn_00407600 (r14, r15);\n    if (eax != 0) {\n        goto label_8;\n    }\n    r12 = *((r14 + 8));\n    rdx = *((rsp + 0x28));\n    r9 = *((rsp + 0x20));\n    r8 = *((rsp + 0x78));\n    rcx = *((rsp + 0x30));\n    goto label_11;\nlabel_33:\n    free (*((rsp + 0xa0)));\n    eax = *((rsp + 0x8c));\n    goto label_8;\nlabel_22:\n    eax = 0;\n    goto label_8;\nlabel_37:\n    *((rsp + 0x20)) = r12;\nlabel_17:\n    r12 = r13 + 1;\n    r10 = r15;\nlabel_16:\n    if (*((rsp + 0x18)) < r12) {\n        goto label_12;\n    }\n    r13 = *((rsp + 0x60));\n    r15 = r10;\nlabel_14:\n    rax = r12;\n    rax -= *(rbx);\n    if (rax <= 0) {\n        goto label_40;\n    }\n    if (*((r14 + 0x30)) <= r15) {\n        goto label_41;\n    }\nlabel_18:\n    rcx = *((rsp + 0x20));\n    rax = r15 + 1;\n    esi = *((rcx + r12 - 1));\n    if (*((rcx + r15)) != sil) {\n        goto label_12;\n    }\n    r15 = rax;\nlabel_40:\n    rax = *((r14 + 0xb8));\n    rax = *((rax + r12*8));\n    if (rax == 0) {\n        goto label_42;\n    }\n    rcx = *((rax + 0x10));\n    if (rcx <= 0) {\n        goto label_42;\n    }\n    rdi = *((rax + 0x18));\n    rax = *((rsp + 0x68));\n    edx = 0;\n    rsi = *(rax);\n    while (*((rax + 8)) != 9) {\nlabel_13:\n        rdx++;\n        if (rcx == rdx) {\n            goto label_42;\n        }\n        rbp = *((rdi + rdx*8));\n        rax = *((rdi + rdx*8));\n        rax <<= 4;\n        rax += rsi;\n    }\n    if (r13 != *(rax)) {\n        goto label_13;\n    }\n    if (rbp == -1) {\n        goto label_42;\n    }\n    rsi = *((rbx + 0x10));\n    rcx = *(rbx);\n    if (rsi == 0) {\n        goto label_43;\n    }\nlabel_15:\n    eax = fcn_0040ca40 (r14, rsi, *((rbx + 8)), rcx, rbp, r12);\n    if (eax == 1) {\n        goto label_42;\n    }\n    if (eax != 0) {\n        goto label_8;\n    }\n    rax = *((rbx + 0x18));\n    if (*((rbx + 0x20)) == rax) {\n        goto label_44;\n    }\nlabel_20:\n    rax = calloc (1, 0x28);\n    if (rax == 0) {\n        goto label_19;\n    }\n    rdx = *((rbx + 0x20));\n    rcx = *((rbx + 0x28));\n    *((rcx + rdx*8)) = rax;\n    rdx++;\n    *(rax) = rbp;\n    *((rax + 8)) = r12;\n    *((rbx + 0x20)) = rdx;\n    fcn_0040da30 (r14, rbx, rax, *((rsp + 0x40)), *((rsp + 0x18)));\nlabel_42:\n    r12++;\n    if (*((rsp + 0x18)) >= r12) {\n        goto label_14;\n    }\n    goto label_12;\nlabel_43:\n    *((rsp + 0x28)) = rcx;\n    rsi -= rcx;\n    rsi++;\n    rax = calloc (0x18, r12);\n    rcx = *((rsp + 0x28));\n    rsi = rax;\n    *((rbx + 0x10)) = rax;\n    if (rax != 0) {\n        goto label_15;\n    }\nlabel_19:\n    eax = 0xc;\n    goto label_8;\nlabel_39:\n    *((rsp + 0x20)) = r12;\n    r10 = r8;\n    r12 = rcx;\n    if (*((rbx + 0x20)) > rbp) {\n        goto label_12;\n    }\n    if (rbp <= 0) {\n        goto label_16;\n    }\n    r13 = rcx;\n    r15 = r8;\n    goto label_17;\nlabel_41:\n    if (*((r14 + 0x58)) <= r15) {\n        goto label_12;\n    }\n    eax = fcn_004074b0 (r14, r15 + 1);\n    if (eax != 0) {\n        goto label_8;\n    }\n    rax = *((r14 + 8));\n    *((rsp + 0x20)) = rax;\n    goto label_18;\nlabel_44:\n    rdx = rax + rax + 1;\n    *((rsp + 0x28)) = rdx;\n    rax = realloc (*((rbx + 0x28)), rdx*8);\n    if (rax == 0) {\n        goto label_19;\n    }\n    rdx = *((rsp + 0x28));\n    *((rbx + 0x28)) = rax;\n    *((rbx + 0x18)) = rdx;\n    goto label_20;\n}\n"
        },
        {
            "funcName": "fcn_0040e450",
            "funcStartAddr": "0x40e450",
            "funcEndAddr": "0x40e607",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x40e450 */\n#include <stdint.h>\n \nint64_t fcn_0040e450 (int64_t arg1, signed int64_t arg2, int64_t arg3, int64_t arg7) {\n    int64_t var_8h;\n    int64_t var_10h;\n    void * ptr;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    xmm0 = arg7;\n    r13 = rdi;\n    rbx = rsi;\n    r12 = *((rsi + 0x48));\n    r14 = *((rsi + 0xb8));\n    r15 = *((rsi + 0x98));\n    rbp = r12*8;\n    r14 += rbp;\n    if (*((rsi + 0xc0)) >= r12) {\n        goto label_2;\n    }\n    *(r14) = rdx;\n    *((rsi + 0xc0)) = r12;\n    do {\nlabel_0:\n        if (*((r15 + 0x98)) != 0) {\n            goto label_3;\n        }\nlabel_1:\n        rax = rbp;\n        return rax;\nlabel_2:\n        rax = *(r14);\n        if (rax == 0) {\n            goto label_4;\n        }\n        rax = *((rax + 0x50));\n        if (rdx == 0) {\n            goto label_5;\n        }\n        r14 = *((rdx + 0x50));\n        eax = fcn_00409150 (rsp + 0x10, r14, rax);\n        *(r13) = eax;\n        if (eax != 0) {\n            goto label_6;\n        }\n        rax = *((rbx + 0x48));\n        eax = fcn_00409d60 (rbx, rax - 1, *((rbx + 0xa0)));\n        r8 = *((rbx + 0xb8));\n        r8 += rbp;\n        *((rsp + 8)) = r8;\n        rax = fcn_004092e0 (r13, r15, rsp + 0x10, eax);\n        r8 = *((rsp + 8));\n        *(r8) = rax;\n    } while (r14 == 0);\n    rax = free (*((rsp + 0x20)));\n    goto label_0;\nlabel_5:\n    __asm (\"movdqu xmm0, xmmword [rax]\");\n    *((rsp + 0x10)) = xmm0;\n    rax = *((rax + 0x10));\n    *((rsp + 0x20)) = rax;\n    eax = fcn_00409d60 (rbx, r12 - 1, *((rsi + 0xa0)));\n    rax = fcn_004092e0 (r13, r15, rsp + 0x10, eax);\n    *(r14) = rax;\n    goto label_0;\nlabel_4:\n    *(r14) = rdx;\n    goto label_0;\nlabel_3:\n    if (rbp == 0) {\n        goto label_6;\n    }\n    r14 = rbp + 0x10;\n    r15 = rbp + 0x18;\n    eax = fcn_00409c10 (rbx, r14, r15, r12);\n    *(r13) = eax;\n    if (eax != 0) {\n        goto label_6;\n    }\n    if ((*((rbp + 0x68)) & 0x40) == 0) {\n        goto label_1;\n    }\n    eax = fcn_0040dbd0 (rbx, r14, r15);\n    *(r13) = eax;\n    if (eax == 0) {\n        rax = *((rbx + 0xb8));\n        rbp = *((rax + r12*8));\n        goto label_1;\n    }\nlabel_6:\n    ebp = 0;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040e610",
            "funcStartAddr": "0x40e610",
            "funcEndAddr": "0x40e934",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x40e610 */\n#include <stdint.h>\n \nuint64_t fcn_0040e610 (int64_t arg1, uint32_t arg2) {\n    int64_t var_8h;\n    size_t n;\n    int64_t var_1ch;\n    signed int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    void * ptr;\n    rdi = arg1;\n    rsi = arg2;\n    r15 = rsi;\n    r13 = rdi;\n    rbx = *((rsi + 0x18));\n    rbp = *((rsi + 0x10));\n    *((rsp + 0x40)) = 1;\n    *((rsp + 0x48)) = 1;\n    rax = malloc (8);\n    *((rsp + 0x50)) = rax;\n    if (rax == 0) {\n        goto label_4;\n    }\n    *(rax) = rbp;\n    eax = fcn_004100a0 (r13, r15, rbx, rsp + 0x40);\n    if (eax != 0) {\n        goto label_5;\n    }\n    rax = r15 + 0x30;\n    *((rsp + 0x1c)) = 0;\n    *((rsp + 0x38)) = rax;\n    if (rbx <= 0) {\n        goto label_6;\n    }\nlabel_2:\n    rdi = *(r15);\n    rax = rbx*8;\n    *((rsp + 0x10)) = rax;\n    if (*((rdi + rbx*8)) == 0) {\n        goto label_7;\n    }\n    *((rsp + 0x1c)) = 0;\n    eax = *((rsp + 0x1c));\n    if (*((r13 + 0xe0)) < eax) {\n        goto label_8;\n    }\nlabel_3:\n    rax = *((r13 + 0xb8));\n    rcx = *((rsp + 0x10));\n    rbx--;\n    *((rsp + 0x48)) = 0;\n    r14 = *((rax + rcx - 8));\n    if (r14 == 0) {\n        goto label_9;\n    }\n    r12 = *((r13 + 0x98));\n    if (*((r14 + 0x28)) <= 0) {\n        goto label_9;\n    }\n    *((rsp + 8)) = 0;\n    while ((*((rsi + 0xa)) & 0x10) == 0) {\nlabel_1:\n        al = fcn_00409e50 (r13, rsi, rbx);\n        if (al != 0) {\n            rax = *(r15);\n            rcx = *((rsp + 0x10));\n            rax = *((rax + rcx));\n            if (rax == 0) {\n                goto label_10;\n            }\n            rdx = *((r12 + 0x18));\n            rax = fcn_00408030 (*((rax + 0x10)), rax + 0x18, *((rdx + rbp*8)));\n            if (rax == 0) {\n                goto label_10;\n            }\n            r9d = 1;\nlabel_0:\n            if (*((r15 + 0x28)) != 0) {\n                rdx = *((r12 + 0x18));\n                rax = (int64_t) r9d;\n                al = fcn_004082c0 (r13, r15 + 0x28, *((rsp + 0x48)), *((rdx + rbp*8)), rax + rbx, rbp);\n                if (al != 0) {\n                    goto label_10;\n                }\n            }\n            al = fcn_00406a20 (rsp + 0x40, rbp);\n            if (al == 0) {\n                goto label_11;\n            }\n        }\nlabel_10:\n        rax = *((rsp + 8));\n        if (rax >= *((r14 + 0x28))) {\n            goto label_9;\n        }\n        rax = *((r14 + 0x30));\n        rcx = *((rsp + 8));\n        rsi = *(r12);\n        rbp = *((rax + rcx*8));\n        r11 = *((rax + rcx*8));\n        r11 <<= 4;\n        rsi += r11;\n    }\n    r10 = *((r13 + 0x98));\n    rax = *((r15 + 0x18));\n    *((rsp + 0x28)) = r11;\n    rdi = *(r10);\n    *((rsp + 0x30)) = r10;\n    *((rsp + 0x20)) = rax;\n    eax = fcn_0040c7b0 (*(rdi), r10 + 0xd8, rbp, r13, rbx);\n    r11 = *((rsp + 0x28));\n    r9d = eax;\n    if (eax <= 0) {\n        goto label_12;\n    }\n    rax = (int64_t) eax;\n    rax += rbx;\n    if (*((rsp + 0x20)) < rax) {\n        goto label_0;\n    }\n    rdx = *(r15);\n    r10 = *((rsp + 0x30));\n    rax = *((rdx + rax*8));\n    if (rax == 0) {\n        goto label_13;\n    }\n    rdx = *((r10 + 0x18));\n    *((rsp + 0x20)) = r11;\n    rax = fcn_00408030 (*((rax + 0x10)), rax + 0x18, *((rdx + rbp*8)));\n    if (rax != 0) {\n        goto label_0;\n    }\n    r11 = *((rsp + 0x20));\n    rsi = *(r12);\n    rsi += r11;\n    goto label_1;\n    if (rsi != 0) {\nlabel_12:\n        goto label_0;\n    }\nlabel_13:\n    rsi = *(r12);\n    rsi += r11;\n    goto label_1;\nlabel_9:\n    eax = fcn_004100a0 (r13, r15, rbx, rsp + 0x40);\n    if (eax != 0) {\n        goto label_5;\n    }\n    if (rbx != 0) {\n        goto label_2;\n    }\nlabel_6:\n    eax = 0;\n    goto label_5;\nlabel_11:\n    eax = 0xc;\nlabel_5:\n    *((rsp + 8)) = eax;\n    free (*((rsp + 0x50)));\n    eax = *((rsp + 8));\n    return rax;\nlabel_7:\n    eax = *((rsp + 0x1c));\n    if (*((r13 + 0xe0)) >= eax) {\n        goto label_3;\n    }\nlabel_8:\n    memset (rdi, 0, *((rsp + 0x10)));\n    eax = free (*((rsp + 0x50)));\n    eax = 0;\n    return rax;\nlabel_4:\n    eax = 0xc;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040e940",
            "funcStartAddr": "0x40e940",
            "funcEndAddr": "0x410096",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x40e940 */\n#include <stdint.h>\n \nint64_t fcn_0040e940 (uint32_t arg_240h, uint32_t arg_248h, int64_t arg_250h, int64_t arg1, uint32_t arg2, uint32_t arg3, int64_t arg4, uint32_t arg5, int64_t arg6) {\n    signed int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    void * var_20h;\n    int64_t var_28h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    void * var_4ch;\n    int64_t var_50h;\n    int64_t var_58h;\n    uint32_t var_60h;\n    uint32_t var_68h;\n    uint32_t var_70h;\n    uint32_t var_78h;\n    uint32_t var_80h;\n    uint32_t var_88h;\n    uint32_t var_90h;\n    int64_t var_98h;\n    uint32_t var_9ch;\n    int64_t var_a0h;\n    uint32_t var_a8h;\n    int64_t var_adh;\n    int64_t var_aeh;\n    int64_t var_afh;\n    int64_t var_b0h;\n    int64_t var_b4h;\n    uint32_t var_b8h;\n    int64_t var_c0h;\n    int64_t var_c8h;\n    void * ptr;\n    int64_t var_d8h;\n    int64_t var_e0h;\n    void * var_f0h;\n    int64_t var_100h;\n    int64_t var_108h;\n    int64_t var_110h;\n    int64_t var_118h;\n    int64_t var_128h;\n    uint32_t var_130h;\n    uint32_t var_138h;\n    int64_t var_140h;\n    int64_t var_148h;\n    int64_t var_150h;\n    signed int64_t var_158h;\n    int64_t var_160h;\n    signed int64_t var_168h;\n    int64_t var_170h;\n    int64_t var_178h;\n    int64_t var_180h;\n    int64_t var_188h;\n    int64_t var_189h;\n    int64_t var_18ah;\n    uint32_t var_18bh;\n    int64_t var_18ch;\n    int64_t var_18dh;\n    int64_t var_18eh;\n    int64_t var_190h;\n    int64_t var_198h;\n    int64_t var_1a0h;\n    int64_t var_1a8h;\n    int64_t var_1b0h;\n    void * var_1b8h;\n    int64_t var_1c0h;\n    int64_t var_1c8h;\n    int64_t var_1d0h;\n    void * var_1d8h;\n    uint32_t var_1e0h;\n    int64_t var_1f0h;\n    void * var_1f8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r12 = r9;\n    rbx = rcx;\n    ecx = 0x20;\n    rax = *(rdi);\n    r13 = rsp + 0x100;\n    *((rsp + 0x40)) = rdi;\n    *((rsp + 0x70)) = rsi;\n    rsi = rdi;\n    rdi = r13;\n    *((rsp + 0x78)) = rdx;\n    rdx = rax;\n    *((rsp + 0x18)) = rax;\n    eax = 0;\n    do {\n        *(rdi) = rax;\n        rcx--;\n        rdi += 8;\n    } while (rcx != 0);\n    rcx = *((rsi + 0x20));\n    *((rsp + 0x198)) = rdx;\n    *((rsp + 0x60)) = rcx;\n    if (rcx != 0) {\n        edx = *((rsi + 0x38));\n        if ((dl & 8) == 0) {\n            goto label_47;\n        }\n        if (rbx == r8) {\n            goto label_47;\n        }\n        edx &= 1;\n        if (edx == 0) {\n            rax = rcx;\n        }\n        *((rsp + 0x60)) = rax;\n    }\nlabel_0:\n    rax = *((rsp + 0x40));\n    *((rsp + 0x90)) = 0;\n    rax = *((rax + 0x30));\n    if (rax < *((rsp + 0x240))) {\n        rsi = *((rsp + 0x240));\n        rdx = rsi - 1;\n        rsi = rdx;\n        rsi -= rax;\n        rax -= rdx;\n        *((rsp + 0x90)) = rsi;\n    }\n    rsi = *((rsp + 0x40));\n    if (*((rsi + 0x10)) == 0) {\n        goto label_48;\n    }\n    rdi = *((rsp + 0x18));\n    rax = *((rdi + 0x48));\n    if (rax == 0) {\n        goto label_48;\n    }\n    rdx = *((rdi + 0x50));\n    if (rdx == 0) {\n        goto label_48;\n    }\n    rcx = *((rdi + 0x58));\n    if (rcx == 0) {\n        goto label_48;\n    }\n    if (*((rdi + 0x60)) == 0) {\n        goto label_48;\n    }\n    if (*((rax + 0x10)) == 0) {\n        if (*((rdx + 0x10)) != 0) {\n            goto label_49;\n        }\n        if (*((rcx + 0x10)) != 0) {\n            if (*((rsi + 0x38)) < 0) {\n                goto label_49;\n            }\n        }\n        if (rbx != 0) {\n            *((rsp + 0x4c)) = 1;\n            if (rbp != 0) {\n                goto label_25;\n            }\n        }\n        ebp = 0;\n        ebx = 0;\n    }\nlabel_49:\n    *((rsp + 0x48)) = 1;\n    while (1) {\n        rax = *((rsp + 0x40));\n        r11 = *((rsp + 0x18));\n        rcx = *((rsp + 0x78));\n        rdi = *((rax + 0x28));\n        rax = *((rax + 0x18));\n        edx = *((r11 + 0xb4));\n        *((rsp + 8)) = rax;\n        rax = *((r11 + 0x10));\n        *((rsp + 0x190)) = edx;\n        rsi = rax + 1;\n        *((rsp + 0x10)) = rax;\n        rax = (int64_t) edx;\n        *((rsp + 0x88)) = rdi;\n        if (rsi < rax) {\n            rsi = rax;\n        }\n        rax = rcx + 1;\n        *((rsp + 0x178)) = rdi;\n        *((rsp + 0x158)) = rcx;\n        *((rsp + 0x150)) = rcx;\n        if (rsi > rax) {\n            rsi = rax;\n        }\n        rax = *((rsp + 0x70));\n        *((rsp + 0x168)) = rcx;\n        *((rsp + 0x160)) = rcx;\n        *((rsp + 0x100)) = rax;\n        rax = *((rsp + 8));\n        eax &= segment.LOAD0;\n        rsp + 0x188 = (eax != 0) ? 1 : 0;\n        rax |= rdi;\n        eax = *((r11 + 0xb0));\n        rsp + 0x18b = (rax != 0) ? 1 : 0;\n        edx = eax;\n        al >>= 3;\n        dl >>= 2;\n        eax &= 1;\n        edx &= 1;\n        *((rsp + 0x18a)) = al;\n        *((rsp + 0x189)) = dl;\n        eax = fcn_00406910 (r13, rsi);\n        *((rsp + 0x4c)) = eax;\n        if (eax != 0) {\n            goto label_35;\n        }\n        rsi = *((rsp + 0x18));\n        rax = rsi + 0xb8;\n        *((rsp + 0x180)) = rax;\n        eax = *((rsi + 0xb0));\n        *((rsp + 8)) = al;\n        al >>= 4;\n        eax &= 1;\n        *((rsp + 0x18e)) = al;\n        if (*((rsp + 0x18b)) == 0) {\n            rsi = *((rsp + 0x18));\n            rax = *((rsp + 0x70));\n            *((rsp + 0x108)) = rax;\n            rax = *((rsp + 0x78));\n            if (*((rsi + 0xb4)) <= 1) {\n                goto label_50;\n            }\n        }\n        eax = 0;\nlabel_50:\n        *((rsp + 0x130)) = rax;\n        *((rsp + 0x138)) = rax;\n        rax = *((rsp + 0x40));\n        *((rsp + 0x168)) = r12;\n        eax = *((rax + 0x38));\n        *((rsp + 0x160)) = r12;\n        *((rsp + 8)) = al;\n        al >>= 7;\n        *((rsp + 0x18d)) = al;\n        rax = *((rsp + 0x18));\n        r15 = *((rax + 0x98));\n        eax = *((rsp + 0x250));\n        *((rsp + 0x1a8)) = 0xffffffffffffffff;\n        r12 = r15 + r15;\n        *((rsp + 0x1a0)) = eax;\n        if (r12 > 0) {\n            rax = 0x666666666666666;\n            if (r12 > rax) {\n                goto label_51;\n            }\n            rdi <<= 3;\n            rax = malloc (r12 + r15*8);\n            rdi <<= 4;\n            r14 = rax;\n            *((rsp + 0x1d8)) = rax;\n            rax = malloc (r15);\n            *((rsp + 0x1f8)) = rax;\n            if (rax == 0) {\n                goto label_51;\n            }\n            if (r14 == 0) {\n                goto label_51;\n            }\n        }\n        *((rsp + 0x1d0)) = r12;\n        *((rsp + 0x1e0)) = 1;\n        *((rsp + 0x1f0)) = r12;\n        if (*((rsp + 0x240)) <= 1) {\n            goto label_52;\n        }\nlabel_30:\n        rax = *((rsp + 0x140));\n        rdx = 0x1ffffffffffffffe;\n        if (rax > rdx) {\n            goto label_51;\n        }\n        rax = malloc (rax*8 + 8);\n        rdi = rax;\n        *((rsp + 0x1b8)) = rax;\n        if (rax == 0) {\n            goto label_53;\n        }\nlabel_31:\n        eax = *((rsp + 0x250));\n        *((rsp + 0xb8)) = rbx;\n        eax &= 1;\n        eax -= eax;\n        eax &= 2;\n        eax += 4;\n        *((rsp + 0x170)) = eax;\n        eax = 0;\n        al = (rbx <= rbp) ? 1 : 0;\n        eax = rax + rax - 1;\n        *((rsp + 0x9c)) = eax;\n        rax = rbp;\n        if (rbx <= rbp) {\n            rax = rbx;\n        }\n        *((rsp + 0x80)) = rax;\n        rax = rbp;\n        if (rbx >= rbp) {\n            rax = rbx;\n        }\n        *((rsp + 0x68)) = rax;\n        rax = *((rsp + 0x18));\n        esi = *((rax + 0xb4));\n        eax = 8;\n        *((rsp + 0xa8)) = esi;\n        if (*((rsp + 0x60)) != 0) {\n            ecx = 4;\n            if (esi != 1) {\n                rax = *((rsp + 0x40));\n                ecx = 0;\n                rax = *((rax + 0x18));\n                *((rsp + 8)) = rax;\n                eax &= segment.LOAD0;\n                rax |= *((rsp + 0x88));\n                cl = (rax == 0) ? 1 : 0;\n                ecx <<= 2;\n            }\n            edx = 0;\n            dl = (rbx <= rbp) ? 1 : 0;\n            eax = 0;\n            edx += edx;\n            al = (*((rsp + 0x88)) != 0) ? 1 : 0;\n            eax |= ecx;\n            eax |= edx;\n        }\n        cl = (rbx > *((rsp + 0x68))) ? 1 : 0;\n        dl = (rbx < *((rsp + 0x80))) ? 1 : 0;\n        cl |= dl;\n        if (cl != 0) {\n            goto label_18;\n        }\n        rcx = rsp + 0xb8;\n        edx = 0;\n        if (rbx <= rbp) {\n            rdx = rcx;\n        }\n        *((rsp + 0xa0)) = rdx;\n        rsp + 0xaf = (rdx != 0) ? 1 : 0;\n        eax -= 4;\n        *((rsp + 0x98)) = eax;\n        eax = *((rsp + 0x98));\n        if (eax > 4) {\n            goto label_54;\n        }\n        /* switch table (5 cases) at 0x416668 */\nlabel_19:\n        rax = *((rsp + 0x18));\n        al = (*((rax + 0x98)) != 0) ? 1 : 0;\n        eax = (int32_t) al;\n        *((rsp + 0x48)) = eax;\n    }\nlabel_47:\n    *((rsp + 0x60)) = 0;\n    goto label_0;\n    if (*((rsp + 0x80)) > rbx) {\n        goto label_18;\n    }\n    ecx = 0;\n    rax = rbx;\n    rdi = *((rsp + 0x60));\n    r10 = *((rsp + 0x70));\n    rsi = *((rsp + 0x88));\n    r9 = *((rsp + 0x80));\n    r8 = *((rsp + 0x78));\n    while (*((rdi + rdx)) == 0) {\n        rax--;\n        ecx = 1;\n        if (rax < r9) {\n            goto label_55;\n        }\n        edx = 0;\n        if (r8 > rax) {\n            edx = *((r10 + rax));\n        }\n        if (rsi != 0) {\n            edx = *((rsi + rdx));\n        }\n    }\n    if (cl != 0) {\n        *((rsp + 0xb8)) = rax;\n        rbx = rax;\n    }\nlabel_1:\n    eax = fcn_0040a050 (r13, rbx, *((rsp + 0x250)));\n    *((rsp + 0x4c)) = eax;\n    if (eax != 0) {\n        goto label_35;\n    }\n    if (*((rsp + 0xa8)) != 1) {\n        if (*((rsp + 0x130)) == 0) {\n            goto label_56;\n        }\n        rax = *((rsp + 0x110));\n        if (*(rax) == 0xffffffff) {\n            goto label_33;\n        }\n    }\nlabel_56:\n    eax = *((rsp + 0x48));\n    rbx = *((rsp + 0x198));\n    *((rsp + 0x1e0)) = 0;\n    *((rsp + 0x1c8)) = 0;\n    eax &= 1;\n    r14 = *((rbx + 0x48));\n    *((rsp + 0x1c0)) = 0;\n    *((rsp + 0xae)) = al;\n    rax = *((rsp + 0x148));\n    *((rsp + 0xb0)) = 0;\n    *((rsp + 0x10)) = rax;\n    if (*((r14 + 0x68)) < 0) {\n        al = fcn_00409d60 (r13, rax - 1, *((rsp + 0x1a0)));\n        if ((al & 1) != 0) {\n            goto label_57;\n        }\n        if (eax == 0) {\n            goto label_34;\n        }\n        edx = eax;\n        edx &= 6;\n        if (edx == 6) {\n            goto label_58;\n        }\n        if ((al & 2) != 0) {\n            goto label_59;\n        }\n        if ((al & 4) != 0) {\n            goto label_60;\n        }\n    }\nlabel_34:\n    rax = *((rsp + 0x1b8));\n    if (rax != 0) {\n        rsi = *((rsp + 0x10));\n        *((rax + rsi*8)) = r14;\n        if (*((rbx + 0x98)) != 0) {\n            goto label_61;\n        }\n    }\n    eax = *((rsp + 0xaf));\n    *((rsp + 0xad)) = al;\n    eax = *((r14 + 0x68));\nlabel_41:\n    *((rsp + 0x20)) = 0;\n    r12 = 0xffffffffffffffff;\n    if ((al & 0x10) != 0) {\n        goto label_62;\n    }\nlabel_36:\n    rax = *((rsp + 0xa0));\n    rbx = *((rsp + 0x148));\n    *((rsp + 0x28)) = r12;\n    *((rsp + 0x50)) = rax;\n    while (rbp != 0) {\nlabel_4:\n        rbx = *((rsp + 0x148));\n        al = (r14 == rbp) ? 1 : 0;\n        rax = *((rsp + 8));\n        if (r14 == rbp) {\n            rax = *((rsp + 0x10));\n        }\n        *((rsp + 0x10)) = rax;\n        eax = *((rbp + 0x68));\n        if ((al & 0x10) != 0) {\n            if (al < 0) {\n                goto label_63;\n            }\nlabel_7:\n            eax = *((rsp + 0x48));\n            if (eax == 0) {\n                goto label_64;\n            }\n            *((rsp + 0x28)) = rbx;\n            *((rsp + 0x20)) = 1;\n            *((rsp + 0x50)) = 0;\n        }\nlabel_6:\n        r14 = rbp;\n        if (*((rsp + 0x168)) <= rbx) {\n            goto label_65;\n        }\n        rax = rbx + 1;\n        rcx = rax;\n        *((rsp + 8)) = rax;\n        rax = *((rsp + 0x140));\n        if (rcx >= rax) {\n            goto label_66;\n        }\nlabel_8:\n        rax = *((rsp + 0x130));\n        if (*((rsp + 8)) >= rax) {\n            goto label_67;\n        }\nlabel_16:\n        if ((*((r14 + 0x68)) & 0x20) != 0) {\n            goto label_68;\n        }\nlabel_9:\n        rax = rbx + 1;\n        *((rsp + 0x148)) = rax;\n        rax = *((rsp + 0x108));\n        ebx = *((rax + rbx));\nlabel_22:\n        rax = *((r14 + 0x58));\n        if (rax == 0) {\n            goto label_69;\n        }\n        rbp = *((rax + rbx*8));\nlabel_15:\n        if (*((rsp + 0x1b8)) != 0) {\nlabel_21:\n            rax = fcn_0040e450 (rsp + 0xb0, r13, rbp, rcx);\n        }\n    }\n    ecx = *((rsp + 0xb0));\n    rdi = *((rsp + 0x1b8));\n    if (ecx != 0) {\n        goto label_53;\n    }\n    if (rdi == 0) {\n        goto label_65;\n    }\n    eax = *((rsp + 0xae));\n    eax ^= 1;\n    if ((*((rsp + 0x20)) & al) != 0) {\n        goto label_65;\n    }\nlabel_3:\n    rsi = *((rsp + 0x1c0));\n    rax = *((rsp + 0x148));\n    ecx = 0;\n    while (rsi >= rdx) {\n        rax = rdx;\n        ecx = 1;\n        if (*((rdi + rdx*8)) != 0) {\n            goto label_70;\n        }\n        rdx = rax + 1;\n    }\n    r12 = *((rsp + 0x28));\n    if (cl != 0) {\n        *((rsp + 0x148)) = rax;\n    }\nlabel_5:\n    rax = *((rsp + 0x50));\n    if (rax != 0) {\n        rsi = *((rsp + 0x10));\n        *(rax) += rsi;\n    }\nlabel_37:\n    if (r12 == -1) {\n        goto label_42;\n    }\n    if (r12 == 0xfffffffffffffffe) {\n        goto label_51;\n    }\n    rax = *((rsp + 0x40));\n    *((rsp + 0x1a8)) = r12;\n    if ((*((rax + 0x38)) & 0x10) != 0) {\n        goto label_71;\n    }\n    if (*((rsp + 0x240)) <= 1) {\n        goto label_71;\n    }\n    rbx = *((rsp + 0x1b8));\n    rax = *((rbx + r12*8));\n    rax = fcn_00409f80 (r13, *((rax + 0x10)), rax + 0x18, r12);\n    r14 = rax;\n    *((rsp + 0x1b0)) = rax;\n    rax = *((rsp + 0x18));\n    if ((*((rax + 0xb0)) & 1) != 0) {\n        goto label_72;\n    }\n    rax = *((rsp + 0x18));\n    if (*((rax + 0x98)) != 0) {\n        goto label_73;\n    }\n    goto label_29;\n    if (*((rsp + 0x68)) <= rbx) {\n        goto label_2;\n    }\n    rax = *((rsp + 0x70));\n    rcx = *((rsp + 0x88));\n    eax = *((rax + rbx));\n    edx = *((rcx + rax));\n    rcx = *((rsp + 0x60));\n    rax = rbx + 1;\n    if (*((rcx + rdx)) != 0) {\n        goto label_1;\n    }\n    rsi = *((rsp + 0x60));\n    rdi = *((rsp + 0x88));\n    rcx = *((rsp + 0x68));\n    r8 = *((rsp + 0x70));\n    while (rcx != rax) {\n        eax = *((r8 + rax));\n        edx = *((rdi + rax));\n        rax = rbx + 1;\n        if (*((rsi + rdx)) != 0) {\n            goto label_74;\n        }\n        rbx = rax;\n    }\n    rax = *((rsp + 0x68));\n    *((rsp + 0xb8)) = rax;\nlabel_2:\n    if (*((rsp + 0x68)) != rbx) {\n        goto label_1;\n    }\n    eax = 0;\n    rsi = *((rsp + 0x68));\n    if (*((rsp + 0x78)) > rsi) {\n        rax = *((rsp + 0x70));\n        eax = *((rax + rsi));\n    }\n    rsi = *((rsp + 0x88));\n    if (rsi != 0) {\n        eax = *((rsi + rax));\n    }\n    rcx = *((rsp + 0x60));\n    if (*((rcx + rax)) != 0) {\n        goto label_1;\n    }\nlabel_18:\n    rdi = *((rsp + 0x1b8));\n    *((rsp + 0x4c)) = 1;\n    goto label_24;\n    if (*((rsp + 0x68)) <= rbx) {\n        goto label_2;\n    }\n    rax = *((rsp + 0x70));\n    rsi = *((rsp + 0x60));\n    edx = *((rax + rbx));\n    rax = rbx + 1;\n    if (*((rsi + rdx)) != 0) {\n        goto label_1;\n    }\n    rsi = *((rsp + 0x60));\n    rcx = *((rsp + 0x68));\n    rdi = *((rsp + 0x70));\n    while (rcx != rax) {\n        edx = *((rdi + rax));\n        rax = rax + 1;\n        if (*((rsi + rdx)) != 0) {\n            goto label_74;\n        }\n        rbx = rax;\n    }\n    rax = *((rsp + 0x68));\n    *((rsp + 0xb8)) = rax;\n    goto label_2;\nlabel_71:\n    rax = *((rsp + 0x18));\n    if (*((rax + 0x98)) != 0) {\n        goto label_75;\n    }\nlabel_29:\n    if (*((rsp + 0x240)) != 0) {\n        goto label_76;\n    }\nlabel_35:\nlabel_24:\n    free (*((rsp + 0x1b8)));\n    rax = *((rsp + 0x18));\n    if (*((rax + 0x98)) != 0) {\n        goto label_77;\n    }\nlabel_32:\n    fcn_00407c60 (r13);\nlabel_25:\n    eax = *((rsp + 0x4c));\n    return rax;\nlabel_70:\n    *((rsp + 0x148)) = rdx;\n    rax = fcn_0040e450 (rsp + 0xb0, r13, 0, rcx);\n    edx = *((rsp + 0xb0));\n    if (edx == 0) {\n        if (rax != 0) {\n            goto label_78;\n        }\n        rdi = *((rsp + 0x1b8));\n        goto label_3;\n    }\n    if (rax != 0) {\n        goto label_4;\n    }\nlabel_65:\n    r12 = *((rsp + 0x28));\n    goto label_5;\nlabel_63:\n    rax = fcn_00409f80 (r13, *((rbp + 0x10)), rbp + 0x18, rbx);\n    if (rax == 0) {\n        goto label_6;\n    }\n    goto label_7;\nlabel_66:\n    if (rax >= *((rsp + 0x158))) {\n        goto label_8;\n    }\nlabel_17:\n    eax = *((rsp + 8));\n    eax = fcn_004074b0 (r13, rax + 1);\n    *((rsp + 0xb0)) = eax;\n    if (eax != 0) {\n        goto label_79;\n    }\n    rbx = *((rsp + 0x148));\n    if ((*((r14 + 0x68)) & 0x20) == 0) {\n        goto label_9;\n    }\nlabel_68:\n    rbp = *((rsp + 0x198));\n    if (*((r14 + 0x10)) <= 0) {\n        goto label_80;\n    }\n    rax = rbp + 0xd8;\n    r12d = 0;\n    r8 = rbx;\n    *((rsp + 0x58)) = rax;\n    goto label_81;\nlabel_11:\n    if ((al & 1) == 0) {\n        goto label_13;\n    }\n    edx &= 8;\n    if (edx != 0) {\n        goto label_13;\n    }\nlabel_12:\n    if ((cl & 0x20) != 0) {\n        if ((al & 2) == 0) {\n            goto label_13;\n        }\n    }\n    ecx &= 0x80;\n    if (ecx != 0) {\n        if ((al & 8) == 0) {\n            goto label_13;\n        }\n    }\nlabel_10:\n    eax = fcn_0040c7b0 (r9, *((rsp + 0x58)), r15, r13, r8);\n    if (eax != 0) {\n        rbx = (int64_t) eax;\n        rbx += *((rsp + 0x148));\n        rdi = r13;\n        if (*((rsp + 0x1e0)) >= eax) {\n            eax = *((rsp + 0x1e0));\n        }\n        *((rsp + 0x1e0)) = eax;\n        eax = fcn_00407600 (rdi, rbx);\n        *((rsp + 0xb4)) = eax;\n        if (eax != 0) {\n            goto label_82;\n        }\n        rax = *((rbp + 0x18));\n        r8 = *((rsp + 0x1b8));\n        rax = *((rax + r15*8));\n        r15 = rbx*8;\n        r8 += r15;\n        rdx = rax * 3;\n        rax = *((rbp + 0x30));\n        *((rsp + 0x30)) = r8;\n        rdx = rax + rdx*8;\n        rax = *(r8);\n        if (rax == 0) {\n            goto label_83;\n        }\n        eax = fcn_00409150 (rsp + 0xc0, *((rax + 0x50)), rdx);\n        *((rsp + 0xb4)) = eax;\n        if (eax != 0) {\n            goto label_82;\n        }\n        eax = fcn_00409d60 (r13, rbx - 1, *((rsp + 0x1a0)));\n        r15 += *((rsp + 0x1b8));\n        rax = fcn_004092e0 (rsp + 0xb4, rbp, rsp + 0xc0, eax);\n        *(r15) = rax;\n        free (*((rsp + 0xd0)));\n        rdx = *((rsp + 0x1b8));\n        if (*((rdx + rbx*8)) == 0) {\n            goto label_84;\n        }\n    }\nlabel_14:\n    r8 = *((rsp + 0x148));\n    do {\nlabel_13:\n        r12++;\n        if (r12 >= *((r14 + 0x10))) {\n            goto label_85;\n        }\nlabel_81:\n        rax = *((r14 + 0x18));\n        r9 = *(rbp);\n        r15 = *((rax + r12*8));\n        rax = *((rax + r12*8));\n        rax <<= 4;\n        rax += r9;\n    } while ((*((rax + 0xa)) & 0x10) == 0);\n    ebx = *((rax + 8));\n    if ((ebx & 0x3ff00) == 0) {\n        goto label_10;\n    }\n    rsi = r8;\n    *((rsp + 0x38)) = r9;\n    *((rsp + 0x30)) = r8;\n    al = fcn_00409d60 (r13, rsi, *((rsp + 0x1a0)));\n    edx = ebx;\n    r8 = *((rsp + 0x30));\n    r9 = *((rsp + 0x38));\n    edx >>= 8;\n    ecx = edx;\n    cx &= 0x3ff;\n    if ((dl & 4) != 0) {\n        goto label_11;\n    }\n    edx &= 8;\n    if (edx == 0) {\n        goto label_12;\n    }\n    if ((al & 1) == 0) {\n        goto label_12;\n    }\n    goto label_13;\nlabel_83:\n    __asm (\"movdqu xmm1, xmmword [rdx]\");\n    *((rsp + 0xc0)) = xmm1;\n    rax = *((rdx + 0x10));\n    *((rsp + 0xd0)) = rax;\n    eax = fcn_00409d60 (r13, rbx - 1, *((rsp + 0x1a0)));\n    rax = fcn_004092e0 (rsp + 0xb4, rbp, rsp + 0xc0, eax);\n    r8 = *((rsp + 0x30));\n    rdx = *((rsp + 0x1b8));\n    *(r8) = rax;\n    if (*((rdx + rbx*8)) != 0) {\n        goto label_14;\n    }\nlabel_84:\n    eax = *((rsp + 0xb4));\n    if (eax == 0) {\n        goto label_14;\n    }\n    goto label_86;\nlabel_69:\n    rbp = *((r14 + 0x60));\n    if (rbp == 0) {\n        goto label_87;\n    }\n    rax = *((rsp + 0x148));\n    al = fcn_00409d60 (r13, rax - 1, *((rsp + 0x1a0)));\n    if ((al & 1) == 0) {\n        goto label_88;\n    }\n    rbp = *((rbp + rbx*8 + 0x800));\n    goto label_15;\nlabel_67:\n    if (rax >= *((rsp + 0x158))) {\n        goto label_16;\n    }\n    goto label_17;\nlabel_26:\n    xmm0 = 0;\n    *((rsp + 0xc0)) = r15;\n    *((rsp + 0xc8)) = 0;\n    *((rsp + 0xd0)) = r14;\n    *((rsp + 0xd8)) = r12;\n    *((rsp + 0xe0)) = xmm0;\n    *((rsp + 0xf0)) = 0;\n    eax = fcn_0040e610 (r13, rsp + 0xc0);\n    ebx = eax;\n    free (*((rsp + 0xf0)));\n    if (ebx != 0) {\n        goto label_89;\n    }\n    if (*(r15) != 0) {\n        goto label_90;\n    }\n    free (r15);\nlabel_42:\n    fcn_00407ca0 (r13);\n    rbx = *((rsp + 0xb8));\nlabel_33:\n    rax = *((rsp + 0x9c));\n    rbx += rax;\n    *((rsp + 0xb8)) = rbx;\n    if (rbx < *((rsp + 0x80))) {\n        goto label_18;\n    }\n    if (rbx > *((rsp + 0x68))) {\n        goto label_18;\n    }\n    eax = *((rsp + 0x98));\n    if (eax <= 4) {\n        goto label_19;\n    }\nlabel_54:\n    rbp = *((rsp + 0x60));\n    r14d = *((rsp + 0x9c));\n    r15 = *((rsp + 0x80));\n    rcx = *((rsp + 0x68));\n    r12 = *((rsp + 0x78));\n    goto label_91;\nlabel_20:\n    rax = rbp;\n    if (r12 > rbx) {\n        rax = *((rsp + 0x108));\n        eax = *((rax + rdx));\n        rax += rbp;\n    }\n    if (*(rax) != 0) {\n        goto label_1;\n    }\n    rax = (int64_t) r14d;\n    rbx += rax;\n    *((rsp + 0xb8)) = rbx;\n    if (rbx < r15) {\n        goto label_18;\n    }\n    if (rbx > rcx) {\n        goto label_18;\n    }\nlabel_91:\n    rdx = rbx;\n    rdx -= *((rsp + 0x128));\n    if (*((rsp + 0x138)) > rdx) {\n        goto label_20;\n    }\n    *((rsp + 8)) = rcx;\n    eax = fcn_0040a050 (r13, rbx, *((rsp + 0x250)));\n    rcx = *((rsp + 8));\n    if (eax != 0) {\n        goto label_92;\n    }\n    rdx = rbx;\n    rdx -= *((rsp + 0x128));\n    goto label_20;\nlabel_82:\n    rdx = *((rsp + 0x1b8));\nlabel_86:\n    *((rsp + 0xb0)) = eax;\n    if (rdx == 0) {\n        goto label_93;\n    }\nlabel_23:\n    ebp = 0;\n    goto label_21;\nlabel_87:\n    al = fcn_0040aa70 (*((rsp + 0x198)), r14);\n    if (al != 0) {\n        goto label_22;\n    }\n    *((rsp + 0xb0)) = 0xc;\n    if (*((rsp + 0x1b8)) != 0) {\n        goto label_23;\n    }\nlabel_93:\n    edi = 0;\nlabel_53:\n    *((rsp + 0x4c)) = 0xc;\n    goto label_24;\nlabel_48:\n    *((rsp + 0x4c)) = 1;\n    goto label_25;\nlabel_85:\n    rbx = r8;\nlabel_80:\n    *((rsp + 0xb0)) = 0;\n    goto label_9;\nlabel_88:\n    rbp = *((rbp + rbx*8));\n    goto label_15;\nlabel_79:\n    if (eax != 0xc) {\n        goto label_94;\n    }\n    do {\nlabel_51:\n        rdi = *((rsp + 0x1b8));\n        *((rsp + 0x4c)) = 0xc;\n        goto label_24;\nlabel_75:\n        rbx = *((rsp + 0x1b8));\n        rax = *((rbx + r12*8));\n        rax = fcn_00409f80 (r13, *((rax + 0x10)), rax + 0x18, r12);\n        *((rsp + 0x1b0)) = rax;\nlabel_73:\n        r14 = *((rsp + 0x1b0));\nlabel_72:\n        rax = *((rsp + 0x198));\n        *((rsp + 8)) = rax;\n        rax = 0x1ffffffffffffffe;\n        if (r12 > rax) {\n            goto label_95;\n        }\n        rbp = r12 + 1;\n        rbx = rbp*8;\n        rax = malloc (rbx);\n        r15 = rax;\n    } while (rax == 0);\n    rax = *((rsp + 8));\n    if (*((rax + 0x98)) == 0) {\n        goto label_26;\n    }\n    rax = malloc (rbx);\n    rbx = rax;\n    *((rsp + 0x20)) = rax;\n    if (rax == 0) {\n        goto label_96;\n    }\nlabel_28:\n    memset (rbx, 0, rbp*8);\n    xmm0 = 0;\n    *((rsp + 0xe0)) = xmm0;\n    *((rsp + 0xc0)) = r15;\n    *((rsp + 0xc8)) = rbx;\n    *((rsp + 0xd0)) = r14;\n    *((rsp + 0xd8)) = r12;\n    *((rsp + 0xf0)) = 0;\n    eax = fcn_0040e610 (r13, rsp + 0xc0);\n    *((rsp + 0x10)) = eax;\n    free (*((rsp + 0xf0)));\n    eax = *((rsp + 0x10));\n    if (eax != 0) {\n        goto label_97;\n    }\n    if (*(r15) != 0) {\n        goto label_98;\n    }\n    if (*(rbx) != 0) {\n        goto label_98;\n    }\n    rdx = *((rsp + 0x1b8));\n    do {\nlabel_27:\n        r12--;\n        if (r12 == -1) {\n            goto label_99;\n        }\n        rax = *((rdx + r12*8));\n    } while (rax == 0);\n    if ((*((rax + 0x68)) & 0x10) == 0) {\n        goto label_27;\n    }\n    rbp = r12 + 1;\n    rax = fcn_00409f80 (r13, *((rax + 0x10)), rax + 0x18, r12);\n    r14 = rax;\n    goto label_28;\nlabel_98:\n    eax = fcn_004097d0 (*((rsp + 8)), r15, rbx, rbp);\n    free (rbx);\n    if (ebp != 0) {\n        goto label_89;\n    }\nlabel_90:\n    rax = r14;\n    r14 = r12;\n    r12 = rax;\n    free (*((rsp + 0x1b8)));\n    *((rsp + 0x1b8)) = r15;\n    *((rsp + 0x1b0)) = r12;\n    *((rsp + 0x1a8)) = r14;\n    goto label_29;\nlabel_52:\n    rax = *((rsp + 0x18));\n    if ((*((rax + 0xb0)) & 2) != 0) {\n        goto label_30;\n    }\n    *((rsp + 0x1b8)) = 0;\n    goto label_31;\nlabel_77:\n    fcn_00407ca0 (r13);\n    free (*((rsp + 0x1f8)));\n    free (*((rsp + 0x1d8)));\n    goto label_32;\nlabel_99:\n    free (r15);\n    free (rbx);\n    fcn_00407ca0 (r13);\n    rbx = *((rsp + 0xb8));\n    goto label_33;\nlabel_57:\n    r14 = *((rbx + 0x50));\nlabel_38:\n    if (r14 != 0) {\n        goto label_34;\n    }\n    eax = *((rsp + 0xb0));\n    *((rsp + 0x4c)) = eax;\n    if (eax == 0xc) {\n        goto label_35;\n    }\n    rax = assert_fail (\"err == REG_ESPACE\", \"lib/regexec.c\", 0x431, \"check_matching\");\nlabel_74:\n    *((rsp + 0xb8)) = rbx;\n    goto label_1;\nlabel_55:\n    *((rsp + 0xb8)) = rax;\n    rdi = *((rsp + 0x1b8));\n    *((rsp + 0x4c)) = 1;\n    goto label_24;\nlabel_62:\n    if (*((r14 + 0x68)) < 0) {\n        goto label_100;\n    }\nlabel_39:\n    esi = *((rsp + 0x48));\n    r12 = *((rsp + 0x10));\n    *((rsp + 0x20)) = 1;\n    if (esi != 0) {\n        goto label_36;\n    }\n    goto label_37;\nlabel_78:\n    goto label_4;\nlabel_64:\n    r12 = rbx;\n    goto label_37;\nlabel_95:\n    rdi = rbx;\n    *((rsp + 0x4c)) = 0xc;\n    goto label_24;\nlabel_59:\n    r14 = *((rbx + 0x58));\n    goto label_38;\nlabel_60:\n    rax = fcn_004092e0 (rsp + 0xb0, rbx, *((r14 + 0x50)), eax);\n    r14 = rax;\n    goto label_38;\nlabel_100:\n    rax = fcn_00409f80 (r13, *((r14 + 0x10)), r14 + 0x18, *((rsp + 0x10)));\n    *((rsp + 0x20)) = rax;\n    if (rax == 0) {\n        goto label_36;\n    }\n    goto label_39;\nlabel_76:\n    rax = *((rsp + 0x248));\n    rcx = *((rsp + 0x240));\n    rdx = 0xffffffffffffffff;\n    rcx <<= 4;\n    rax += 0x10;\n    rcx += *((rsp + 0x248));\n    if (*((rsp + 0x240)) <= 1) {\n        goto label_101;\n    }\n    do {\n        *((rax + 8)) = rdx;\n        rax += 0x10;\n        *((rax - 0x10)) = rdx;\n    } while (rcx != rax);\n    rax = *((rsp + 0x248));\n    rsi = *((rsp + 0x248));\n    *(rax) = 0;\n    rax = *((rsp + 0x1a8));\n    *((rsi + 8)) = rax;\n    rax = *((rsp + 0x40));\n    if ((*((rax + 0x38)) & 0x10) != 0) {\n        goto label_102;\n    }\n    if (*((rsp + 0x240)) == 1) {\n        goto label_102;\n    }\n    rax = *((rsp + 0x18));\n    r8d = 0;\n    if ((*((rax + 0xb0)) & 1) != 0) {\n        r8d = 0;\n        r8b = (*((rax + 0x98)) > 0) ? 1 : 0;\n    }\n    eax = fcn_0040d160 (*((rsp + 0x40)), r13, *((rsp + 0x240)), *((rsp + 0x248)));\n    if (eax != 0) {\n        goto label_103;\n    }\n    rax = *((rsp + 0x248));\n    rdx = *(rax);\nlabel_45:\n    r8d = *((rsp + 0x18c));\n    r9 = *((rsp + 0x130));\n    ecx = 0;\n    r11 = *((rsp + 0x118));\n    r10 = *((rsp + 0x138));\n    rdi = *((rsp + 0xb8));\n    rax = *((rsp + 0x248));\n    rbx = *((rsp + 0x240));\n    while (rcx != rbx) {\n        rdx = *(rax);\n        if (rdx != -1) {\n            rsi = *((rax + 8));\n            if (r8b != 0) {\n                goto label_104;\n            }\nlabel_46:\n            rdx += rdi;\n            rsi += rdi;\n            *(rax) = rdx;\n            *((rax + 8)) = rsi;\n        }\n        rcx++;\n        rax += 0x10;\n    }\n    if (*((rsp + 0x90)) <= 0) {\n        goto label_105;\n    }\n    rax = *((rsp + 0x240));\n    rcx = *((rsp + 0x90));\n    rdx = 0xffffffffffffffff;\n    rcx += *((rsp + 0x240));\n    rax <<= 4;\n    rcx <<= 4;\n    rax += *((rsp + 0x248));\n    rcx += *((rsp + 0x248));\n    do {\n        *(rax) = rdx;\n        rax += 0x10;\n        *((rax - 8)) = rdx;\n    } while (rcx != rax);\nlabel_105:\n    rax = *((rsp + 0x18));\n    rdi = *((rsp + 0x1b8));\n    rsi = *((rax + 0xe0));\n    if (rsi == 0) {\n        goto label_24;\n    }\n    rax = *((rsp + 0x240));\n    r8 = rax - 1;\n    eax = 0;\n    goto label_106;\nlabel_40:\n    rdx = *((rsi + rax*8));\n    if (rdx == rax) {\n        void (*0x40ff37)() ();\n    }\nlabel_106:\n    if (rax != r8) {\n        goto label_40;\n    }\n    goto label_24;\nlabel_61:\n    rbx = r14 + 0x10;\n    rbp = r14 + 0x18;\n    eax = fcn_00409c10 (r13, rbx, rbp, 0);\n    *((rsp + 0xb0)) = eax;\n    if (eax != 0) {\n        goto label_107;\n    }\n    eax = *((r14 + 0x68));\n    if ((al & 0x40) != 0) {\n        goto label_108;\n    }\nlabel_44:\n    *((rsp + 0xad)) = 0;\n    goto label_41;\nlabel_58:\n    r14 = *((rbx + 0x60));\n    goto label_38;\nlabel_97:\nlabel_43:\n    free (r15);\n    free (*((rsp + 0x20)));\n    eax = ebp;\n    if (ebp == 1) {\n        goto label_42;\n    }\nlabel_103:\n    rdi = *((rsp + 0x1b8));\n    *((rsp + 0x4c)) = eax;\n    goto label_24;\nlabel_92:\n    *((rsp + 0x4c)) = eax;\n    goto label_35;\nlabel_89:\n    *((rsp + 0x20)) = 0;\n    goto label_43;\nlabel_96:\n    free (r15);\n    rdi = *((rsp + 0x1b8));\n    *((rsp + 0x4c)) = 0xc;\n    goto label_24;\nlabel_108:\n    eax = fcn_0040dbd0 (r13, rbx, rbp);\n    *((rsp + 0xb0)) = eax;\n    if (eax == 0) {\n        eax = *((r14 + 0x68));\n        goto label_44;\nlabel_101:\n        rax = *((rsp + 0x248));\n        rsi = *((rsp + 0x248));\n        *(rax) = 0;\n        rax = *((rsp + 0x1a8));\n        *((rsi + 8)) = rax;\nlabel_102:\n        edx = 0;\n        goto label_45;\n    }\nlabel_107:\n    r12 = (int64_t) eax;\n    goto label_37;\nlabel_104:\n    if (r9 == rdx) {\n        goto label_109;\n    }\n    rdx = *((r11 + rdx*8));\n    do {\n        *(rax) = rdx;\n        if (r9 == rsi) {\n            goto label_110;\n        }\n        rsi = *((r11 + rsi*8));\n        goto label_46;\nlabel_109:\n        rdx = r10;\n    } while (1);\nlabel_110:\n    rsi = r10;\n    goto label_46;\nlabel_94:\n    return assert_fail (\"err == REG_ESPACE\", \"lib/regexec.c\", 0x468, \"check_matching\");\n}\n"
        },
        {
            "funcName": "fcn_004100a0",
            "funcStartAddr": "0x4100a0",
            "funcEndAddr": "0x4108c9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4100a0 */\n#include <stdint.h>\n \nint64_t fcn_004100a0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_10h;\n    uint32_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    signed int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    int64_t var_5ch;\n    uint32_t var_60h;\n    int64_t var_70h;\n    int64_t var_78h;\n    int64_t var_80h;\n    uint32_t var_88h;\n    void * ptr;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r14 = rdx;\n    rcx = rdx*8;\n    rbx = rsi;\n    r12 = *((rdi + 0x98));\n    rdx = *((rbp + 8));\n    *((rsp + 0x18)) = rcx;\n    rcx += *((rdi + 0xb8));\n    *((rsp + 8)) = rdi;\n    rdi = *(rcx);\n    *((rsp + 0x5c)) = 0;\n    *((rsp + 0x10)) = rdi;\n    if (rdi == 0) {\n        goto label_17;\n    }\n    if (rdx != 0) {\n        goto label_18;\n    }\n    rdx = *(rsi);\n    rax = rcx;\n    *((rdx + r14*8)) = 0;\n    rdx = *(rax);\n    eax = 0;\n    if ((*((rdx + 0x68)) & 0x40) != 0) {\n        goto label_19;\n    }\n    do {\nlabel_0:\n        return rax;\nlabel_18:\n        *((rsp + 0x60)) = 0;\n        rax = fcn_004095e0 (rsp + 0x60, r12, rbp);\n        r15 = rax;\n        eax = *((rsp + 0x60));\n    } while (eax != 0);\n    r13 = *((r15 + 0x38));\n    rax = r15 + 0x38;\n    *((rsp + 0x20)) = rax;\n    if (r13 != 0) {\n        goto label_20;\n    }\n    *((r15 + 0x40)) = 0;\n    *((r15 + 0x38)) = rdi;\n    rdi <<= 3;\n    rax = malloc (*((rbp + 8)));\n    *((r15 + 0x48)) = rax;\n    if (rax == 0) {\n        goto label_21;\n    }\n    *((rsp + 0x60)) = 0;\n    if (*((rbp + 8)) <= 0) {\n        goto label_20;\n    }\n    r15 = *((rsp + 0x20));\n    while (eax == 0) {\n        r13++;\n        if (r13 >= *((rbp + 8))) {\n            goto label_20;\n        }\n        rax = *((rbp + 0x10));\n        rax = *((rax + r13*8));\n        rdx = rax * 3;\n        rax = *((r12 + 0x38));\n        eax = fcn_00408570 (r15, rax + rdx*8);\n        *((rsp + 0x60)) = eax;\n    }\nlabel_21:\n    eax = 0xc;\n    goto label_0;\nlabel_20:\n    rax = *((rsp + 0x10));\n    rax += 8;\n    rsi = rax;\n    *((rsp + 0x28)) = rax;\n    eax = fcn_00408ae0 (rbp, rsi, *((rsp + 0x20)));\n    *((rsp + 0x5c)) = eax;\n    if (eax != 0) {\n        goto label_0;\n    }\n    if (*((rbx + 0x28)) != 0) {\n        goto label_22;\n    }\nlabel_9:\n    r13 = *((rsp + 0x18));\n    r13 += *(rbx);\n    rax = fcn_004095e0 (rsp + 0x5c, r12, rbp);\n    *(r13) = rax;\n    eax = *((rsp + 0x5c));\n    if (eax != 0) {\n        goto label_0;\n    }\n    rsi = *((rsp + 8));\n    rax = *((rsp + 0x18));\n    rax += *((rsi + 0xb8));\n    rdx = *(rax);\n    eax = 0;\n    if ((*((rdx + 0x68)) & 0x40) == 0) {\n        goto label_0;\n    }\nlabel_19:\n    rax = *((rsp + 8));\n    r12d = 0;\n    rsi = *((rax + 0xc8));\n    rax = *((rax + 0xc8));\nlabel_4:\n    if (r12 >= rax) {\n        goto label_23;\n    }\n    rcx = r12 + rax;\n    rdi = *((rsp + 8));\n    rdx = rcx;\n    rdx >>= 0x3f;\n    rdi = *((rdi + 0xd8));\n    rdx += rcx;\n    rdx >>= 1;\n    rcx = rdx * 5;\n    if (r14 <= *((rdi + rcx*8 + 8))) {\n        goto label_24;\n    }\n    goto label_25;\n    do {\n        rcx = r12 + rdx;\n        rax = rcx;\n        rax >>= 0x3f;\n        rax += rcx;\n        rax >>= 1;\n        rcx = rax * 5;\n        r8 = rax;\n        if (r14 > *((rdi + rcx*8 + 8))) {\n            goto label_26;\n        }\n        rdx = rax;\nlabel_24:\n    } while (r12 < rdx);\nlabel_23:\n    if (rsi <= r12) {\n        goto label_27;\n    }\n    rcx = *((rsp + 8));\n    rax = r12 * 5;\n    rsi = rax*8;\n    rax = *((rcx + 0xd8));\n    *((rsp + 0x38)) = rsi;\n    if (r14 != *((rax + rsi + 8))) {\n        goto label_27;\n    }\n    if (r12 == -1) {\n        goto label_27;\n    }\n    rax = *((rsp + 0x10));\n    r13 = *((rcx + 0x98));\n    *((rsp + 0x60)) = 0;\n    if (*((rax + 0x10)) <= 0) {\n        goto label_27;\n    }\n    *((rsp + 0x30)) = r14;\n    r15d = 0;\n    r14 = rbx;\n    *((rsp + 0x40)) = r12;\n    while (rbp != *((r14 + 0x10))) {\n        if (al == 4) {\n            goto label_28;\n        }\nlabel_1:\n        rax = *((rsp + 0x10));\n        r15++;\n        if (r15 >= *((rax + 0x10))) {\n            goto label_29;\n        }\n        rax = *((rsp + 0x10));\n        rax = *((rax + 0x18));\n        rbp = *((rax + r15*8));\n        rax = *((rax + r15*8));\n        rax <<= 4;\n        rax += *(r13);\n        eax = *((rax + 8));\n    }\n    rbx = *((rsp + 0x30));\n    if (rbx == *((r14 + 0x18))) {\n        goto label_1;\n    }\n    if (al != 4) {\n        goto label_1;\n    }\nlabel_28:\n    rax = *((rsp + 8));\n    rbx = *((rsp + 0x38));\n    *((rsp + 0x48)) = r15;\n    r12 = *((rsp + 0x40));\n    r15 = *((rsp + 0x30));\n    rbx += *((rax + 0xd8));\n    rax = rbp + rbp*2;\n    rax <<= 3;\n    *((rsp + 0x28)) = rax;\n    rax = rbp*8;\n    *((rsp + 0x20)) = rax;\n    goto label_30;\nlabel_2:\n    rax = *((r13 + 0x18));\n    rsi = *((rsp + 0x20));\n    r9 = *((rax + rsi));\nlabel_3:\n    if (r10 > *((r14 + 0x18))) {\n        goto label_31;\n    }\n    rax = *(r14);\n    rax = *((rax + r10*8));\n    if (rax == 0) {\n        goto label_31;\n    }\n    rax = fcn_00408030 (*((rax + 0x10)), rax + 0x18, r9);\n    if (rax == 0) {\n        goto label_31;\n    }\n    al = fcn_004082c0 (*((rsp + 0x18)), r14 + 0x28, r14 + 0x30, rbp, r15, r9);\n    if (al != 0) {\n        goto label_31;\n    }\n    if (*((rsp + 0x60)) == 0) {\n        goto label_32;\n    }\nlabel_5:\n    *((rsp + 0x70)) = rbp;\n    *((rsp + 0x78)) = r15;\n    al = fcn_00406a20 (rsp + 0x80, r12);\n    if (al == 0) {\n        goto label_33;\n    }\n    rax = *((rsp + 0x60));\n    rbx = *((rsp + 0x18));\n    rbx = *((rax + rbx));\n    eax = fcn_0040e610 (*((rsp + 8)), rsp + 0x60);\n    if (eax != 0) {\n        goto label_15;\n    }\n    rsi = *((r14 + 8));\n    rdx = *((rsp + 0x60));\n    if (rsi != 0) {\n        eax = fcn_004097d0 (r13, rsi, rdx, r15 + 1);\n        if (eax != 0) {\n            goto label_15;\n        }\n        rdx = *((rsp + 0x60));\n    }\n    rax = *((rsp + 0x18));\n    r9 = *((rsp + 0x88));\n    r10 = rsp + 0x90;\n    *((rdx + rax)) = rbx;\n    rax = fcn_00408030 (r9, r10, r12);\n    rax--;\n    rdx = rax;\n    if (rax >= 0) {\n        if (r9 <= rax) {\n            goto label_34;\n        }\n        r9--;\n        *((rsp + 0x88)) = r9;\n        fcn_004081a0 (rsp + 0x88, r10, rdx);\n    }\nlabel_34:\n    rbx = *((rsp + 8));\n    rax = r12 * 5;\n    rdx = *((rbx + 0xd8));\n    rbx = rdx + rax*8;\n    do {\nlabel_31:\n        r12++;\n        rax = rbx + 0x28;\n        if (*((rbx + 0x20)) == 0) {\n            goto label_35;\n        }\n        rbx = rax;\nlabel_30:\n    } while (rbp != *(rbx));\n    rax = *((rbx + 0x18));\n    rax -= *((rbx + 0x10));\n    r10 = r15 + rax;\n    if (rax != 0) {\n        goto label_2;\n    }\n    rax = *((r13 + 0x28));\n    rcx = *((rsp + 0x28));\n    rax = *((rax + rcx + 0x10));\n    r9 = *(rax);\n    goto label_3;\nlabel_17:\n    rax = *((rsp + 0x18));\n    rax += *(rsi);\n    rbx = rax;\n    if (rdx == 0) {\n        *(rax) = 0;\n        eax = 0;\n        goto label_0;\n    }\n    rax = fcn_004095e0 (rsp + 0x5c, r12, rbp);\n    *(rbx) = rax;\n    eax = *((rsp + 0x5c));\n    goto label_0;\nlabel_29:\n    if (*((rsp + 0x60)) != 0) {\n        goto label_36;\n    }\nlabel_27:\n    eax = 0;\n    goto label_0;\nlabel_25:\n    r8 = rdx;\n    rdx = rax;\nlabel_26:\n    r12 = r8 + 1;\n    rax = rdx;\n    goto label_4;\nlabel_32:\n    __asm (\"movdqa xmm0, xmmword [r14]\");\n    __asm (\"movdqa xmm1, xmmword [r14 + 0x10]\");\n    __asm (\"movdqa xmm2, xmmword [r14 + 0x20]\");\n    rax = *((r14 + 0x30));\n    *((rsp + 0x60)) = xmm0;\n    *((rsp + 0x70)) = xmm1;\n    *((rsp + 0x80)) = xmm2;\n    *((rsp + 0x90)) = rax;\n    eax = fcn_004090d0 (rsp + 0x80, r14 + 0x20);\n    if (eax == 0) {\n        goto label_5;\n    }\nlabel_15:\n    if (*((rsp + 0x60)) == 0) {\n        goto label_0;\n    }\nlabel_16:\n    *((rsp + 8)) = eax;\n    free (*((rsp + 0x90)));\n    eax = *((rsp + 8));\n    goto label_0;\nlabel_35:\n    r15 = *((rsp + 0x48));\n    goto label_1;\nlabel_22:\n    rax = *((rsp + 8));\n    rax = *((rax + 0xd8));\n    *((rsp + 0x20)) = rax;\n    if (*((rsp + 0x60)) <= 0) {\n        goto label_37;\n    }\n    r11d = 0;\n    r15 = r11;\nlabel_8:\n    rax = *((rbx + 0x30));\n    rcx = *((rsp + 0x20));\n    rax = *((rax + r15*8));\n    rax *= 5;\n    rdx = rcx + rax*8;\n    if (r14 <= *((rdx + 0x10))) {\n        goto label_10;\n    }\n    if (r14 > *((rdx + 8))) {\n        goto label_10;\n    }\n    rcx = *(rdx);\n    rax = *(r12);\n    rsi = *((rbp + 8));\n    rcx <<= 4;\n    r8 = *((rax + rcx));\n    if (r14 == *((rdx + 0x18))) {\n        goto label_38;\n    }\n    r13d = 0;\n    if (rsi <= 0) {\n        goto label_10;\n    }\n    *((rsp + 0x30)) = rbx;\n    rbx = r8;\n    while (edx > 1) {\nlabel_6:\n        r13++;\n        if (r13 >= *((rbp + 8))) {\n            goto label_39;\n        }\nlabel_7:\n        rax = *(r12);\n        rdx = *((rbp + 0x10));\n        rsi = *((rdx + r13*8));\n        rdx = *((rdx + r13*8));\n        rdx <<= 4;\n        rax += rdx;\n        edx = *((rax + 8));\n        edx -= 8;\n    }\n    if (rbx != *(rax)) {\n        goto label_6;\n    }\n    eax = fcn_0040a840 (r12, rsi, rbp, *((rsp + 0x28)));\n    if (eax != 0) {\n        goto label_0;\n    }\n    r13++;\n    if (r13 < *((rbp + 8))) {\n        goto label_7;\n    }\nlabel_39:\n    rbx = *((rsp + 0x30));\nlabel_10:\n    r15++;\n    if (r15 < *((rbx + 0x28))) {\n        goto label_8;\n    }\nlabel_37:\n    *((rsp + 0x5c)) = 0;\n    goto label_9;\nlabel_38:\n    if (rsi <= 0) {\n        goto label_10;\n    }\n    r10 = *((rbp + 0x10));\n    r9 = 0xffffffffffffffff;\n    r11 = r10 + rsi*8;\n    rcx = r10;\n    rsi = r9;\n    while (r13d != 8) {\n        if (r13d == 9) {\n            if (r8 != *(rdx)) {\n                r9 = rdi;\n                goto label_40;\n            }\n        }\nlabel_40:\n        rcx += 8;\n        if (r11 == rcx) {\n            goto label_41;\n        }\nlabel_11:\n        rdi = *(rcx);\n        rdx = *(rcx);\n        rdx <<= 4;\n        rdx += rax;\n        r13d = *((rdx + 8));\n    }\n    if (r8 == *(rdx)) {\n        rsi = rdi;\n    }\n    rcx += 8;\n    if (r11 != rcx) {\n        goto label_11;\n    }\nlabel_41:\n    r13 = r9;\n    *((rsp + 0x30)) = r9;\n    if (rsi >= 0) {\n        goto label_42;\n    }\n    if (*((rsp + 0x30)) < 0) {\n        goto label_10;\n    }\nlabel_14:\n    r13d = 0;\n    *((rsp + 0x38)) = rbx;\n    rbx = r13;\n    r13 = *((rsp + 0x30));\n    while (rax != 0) {\nlabel_12:\n        rbx++;\nlabel_13:\n        if (*((rbp + 8)) <= rbx) {\n            goto label_43;\n        }\n        r10 = *((rbp + 0x10));\n        r10 = *((r10 + rbx*8));\n        rax = *((r12 + 0x38));\n        r9 = r10 * 3;\n        r9 <<= 3;\n        rax += r9;\n        rax = fcn_00408030 (*((rax + 8)), rax + 0x10, r13);\n    }\n    r9 += *((r12 + 0x30));\n    rax = fcn_00408030 (*((r9 + 8)), r9 + 0x10, rdx);\n    if (rax != 0) {\n        goto label_12;\n    }\n    eax = fcn_0040a840 (r12, r10, rbp, *((rsp + 0x28)));\n    if (eax == 0) {\n        goto label_13;\n    }\n    goto label_0;\nlabel_42:\n    eax = fcn_0040a840 (r12, rsi, rbp, *((rsp + 0x28)));\n    if (eax != 0) {\n        goto label_0;\n    }\n    if (r13 < 0) {\n        goto label_10;\n    }\n    if (*((rbp + 8)) <= 0) {\n        goto label_10;\n    }\n    r10 = *((rbp + 0x10));\n    goto label_14;\nlabel_33:\n    eax = 0xc;\n    goto label_15;\nlabel_43:\n    rbx = *((rsp + 0x38));\n    goto label_10;\nlabel_36:\n    eax = 0;\n    goto label_16;\n}\n"
        },
        {
            "funcName": "fcn_004108d0",
            "funcStartAddr": "0x4108d0",
            "funcEndAddr": "0x410aed",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4108d0 */\n#include <stdint.h>\n \nint64_t fcn_004108d0 (int64_t arg1, uint32_t arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    uint32_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r10 = rsi;\n    r11 = (int64_t) ecx;\n    rbx = rdi;\n    r12 = *((rsi + 0x48));\n    if (*((rsi + 0x90)) != 1) {\n        eax = fcn_00407fe0 (r10, r12);\n        if (eax > 1) {\n            goto label_5;\n        }\n    }\n    eax = *((rbp + 8));\n    r11 += r12;\n    *((r10 + 0x48)) = r11;\n    edx = eax;\n    edx &= 0xfffffffb;\n    if (dl != 0x1a) {\n        if (al == 0x1c) {\n            goto label_6;\n        }\n        if (al == 0x16) {\n            if (r9b == 0) {\n                goto label_7;\n            }\n        }\nlabel_4:\n        eax = *(rbp);\n        *(rbx) = 0;\n        *((rbx + 8)) = al;\n        eax = 0;\nlabel_1:\n        return eax;\nlabel_5:\n        rdx = *((r10 + 0x10));\n        rax = (int64_t) eax;\n        *(rbx) = 1;\n        rax += r12;\n        edx = *((rdx + r12*4));\n        *((rbx + 8)) = edx;\n        *((r10 + 0x48)) = rax;\n        eax = 0;\n        return rax;\n    }\nlabel_6:\n    if (r11 >= *((r10 + 0x68))) {\n        goto label_8;\n    }\n    r9d = *(rbp);\n    r8d = 0;\n    while (r9b != r13b) {\nlabel_0:\n        rax = *((rbx + 8));\n        *((rax + r8)) = r13b;\n        r8++;\n        if (r8 == 0x20) {\n            goto label_8;\n        }\n        eax = *((rbp + 8));\n        r11 = *((r10 + 0x48));\n        r12 = (int64_t) r8d;\n        if (al == 0x1e) {\n            goto label_9;\n        }\nlabel_2:\n        rdx = *((r10 + 8));\n        rax = r11 + 1;\n        *((r10 + 0x48)) = rax;\n        r13d = *((rdx + r11));\nlabel_3:\n        if (*((r10 + 0x68)) <= rax) {\n            goto label_8;\n        }\n    }\n    rdx = *((r10 + 8));\n    if (*((rdx + rax)) != 0x5d) {\n        goto label_0;\n    }\n    rax++;\n    *((r10 + 0x48)) = rax;\n    rax = *((rbx + 8));\n    *((rax + r12)) = 0;\n    edx = *((rbp + 8));\n    if (dl == 0x1c) {\n        goto label_10;\n    }\n    if (dl == 0x1e) {\n        goto label_11;\n    }\n    eax = 0;\n    if (dl != 0x1a) {\n        goto label_1;\n    }\n    *(rbx) = 3;\n    goto label_1;\nlabel_8:\n    eax = 7;\n    return rax;\nlabel_9:\n    if (*((r10 + 0x8b)) == 0) {\n        goto label_2;\n    }\n    if (*((r10 + 0x8c)) == 0) {\n        goto label_12;\n    }\n    if (r11 == *((r10 + 0x30))) {\n        goto label_13;\n    }\n    rax = *((r10 + 0x10));\n    if (*((rax + r11*4)) == 0xffffffff) {\n        goto label_2;\n    }\nlabel_13:\n    rax = *((r10 + 0x18));\n    rax = *((rax + r11*8));\n    rax += *(r10);\n    rax += *((r10 + 0x28));\n    r13d = *(rax);\n    if ((r13b & 0x80) != 0) {\n        goto label_2;\n    }\n    eax = 1;\n    if (*((r10 + 0x90)) != 1) {\n        rax = fcn_00407fe0 (r10, r11);\n        rax = (int64_t) eax;\n    }\n    rax += r11;\n    *((r10 + 0x48)) = rax;\n    goto label_3;\nlabel_12:\n    rax = r11 + 1;\n    r11 += *(r10);\n    r11 += *((r10 + 0x28));\n    *((r10 + 0x48)) = rax;\n    r13d = *(r11);\n    goto label_3;\nlabel_7:\n    fcn_00406540 (rsp, r10, r8);\n    eax = 0xb;\n    if (*((rsp + 8)) == 0x15) {\n        goto label_4;\n    }\n    goto label_1;\nlabel_11:\n    *(rbx) = 4;\n    eax = 0;\n    goto label_1;\nlabel_10:\n    *(rbx) = 2;\n    eax = 0;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00410af0",
            "funcStartAddr": "0x410af0",
            "funcEndAddr": "0x411193",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x410af0 */\n#include <stdint.h>\n \nint64_t fcn_00410af0 (signed int64_t arg1, signed int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\nlabel_2:\n    r12 = *((rsi + 0x48));\n    if (*((rsi + 0x68)) <= r12) {\n        goto label_14;\n    }\n    r15 = rdx;\n    rdx = *((rsi + 8));\n    r14d = *((rdi + 0xa));\n    r13 = rsi;\n    eax = *((rsi + 0x90));\n    rbx = rdi;\n    ebp = *((rdx + r12));\n    r14d &= 0xffffff9f;\n    *((rdi + 0xa)) = r14b;\n    *(rdi) = bpl;\n    if (eax <= 1) {\n        goto label_15;\n    }\n    if (r12 != *((rsi + 0x30))) {\n        rcx = *((rsi + 0x10));\n        if (*((rcx + r12*4)) == 0xffffffff) {\n            goto label_16;\n        }\n    }\n    if (bpl == 0x5c) {\n        goto label_17;\n    }\n    rax = *((r13 + 0x10));\n    *((rbx + 8)) = 1;\n    *((rsp + 8)) = rdx;\n    r14d = *((rax + r12*4));\n    eax = iswalnum (*((rax + r12*4)));\n    al = (eax != 0) ? 1 : 0;\n    cl = (r14d == 0x5f) ? 1 : 0;\n    eax |= ecx;\n    eax <<= 6;\n    ecx = eax;\n    eax = *((rbx + 0xa));\n    eax &= 0xffffffbf;\n    eax |= ecx;\n    *((rbx + 0xa)) = al;\n    rdx = *((rsp + 8));\n    do {\n        ebp -= 0xa;\n        if (bpl > 0x73) {\n            goto label_11;\n        }\n        ebp = (int32_t) bpl;\n        /* switch table (116 cases) at 0x416690 */\nlabel_15:\n        if (bpl == 0x5c) {\n            goto label_17;\n        }\n        *((rbx + 8)) = 1;\n        *((rsp + 8)) = rdx;\n        rax = ctype_b_loc ();\n        ecx = (int32_t) bpl;\n        rax = *(rax);\n        eax = *((rax + rcx*2));\n        ax >>= 3;\n        eax &= 1;\n        cl = (bpl == 0x5f) ? 1 : 0;\n        eax |= ecx;\n        eax <<= 6;\n        r14d |= eax;\n        *((rbx + 0xa)) = r14b;\n        rdx = *((rsp + 8));\n    } while (1);\nlabel_17:\n    rcx = r12 + 1;\n    if (rcx < *((r13 + 0x58))) {\n        goto label_18;\n    }\n    *((rbx + 8)) = 0x24;\n    eax = 1;\n    return rax;\nlabel_14:\n    *((rdi + 8)) = 2;\n    eax = 0;\n    do {\nlabel_1:\n        return rax;\nlabel_18:\n        if (*((r13 + 0x8b)) != 0) {\n            goto label_19;\n        }\nlabel_10:\n        edi = *((rdx + r12 + 1));\n        *((rsp + 8)) = edi;\n        r14d = edi;\nlabel_9:\n        *(rbx) = r14b;\n        *((rbx + 8)) = 1;\n        if (eax <= 1) {\n            goto label_20;\n        }\n        rax = *((r13 + 0x10));\n        ebp = *((rax + rcx*4));\nlabel_13:\n        eax = iswalnum (*((rax + rcx*4)));\n        al = (eax != 0) ? 1 : 0;\n        dl = (ebp == 0x5f) ? 1 : 0;\n        eax |= edx;\n        eax <<= 6;\n        edx = eax;\n        eax = *((rbx + 0xa));\n        eax &= 0xffffffbf;\n        eax |= edx;\n        *((rbx + 0xa)) = al;\nlabel_0:\n        r14d -= 0x27;\n        if (r14b > 0x56) {\n            goto label_21;\n        }\n        r14d = (int32_t) r14b;\n        /* switch table (87 cases) at 0x416a30 */\nlabel_16:\n        eax = *((rdi + 8));\n        eax &= 0xffdfff00;\n        eax |= 0x200001;\n        *((rdi + 8)) = eax;\n        eax = 1;\n    } while (1);\nlabel_20:\n    rax = ctype_b_loc ();\n    edx = (int32_t) r14b;\n    rax = *(rax);\n    eax = *((rax + rdx*2));\n    ax >>= 3;\n    eax &= 1;\n    dl = (r14b == 0x5f) ? 1 : 0;\n    eax |= edx;\n    edx = *((rbx + 0xa));\n    eax <<= 6;\n    edx &= 0xffffffbf;\n    eax |= edx;\n    *((rbx + 0xa)) = al;\n    goto label_0;\n    eax = 1;\n    if ((r15d & 0x2000) == 0) {\n        goto label_1;\n    }\nlabel_8:\n    *((rbx + 8)) = 8;\n    goto label_1;\n    eax = 1;\n    if ((r15d & 0x2000) == 0) {\n        goto label_1;\n    }\nlabel_7:\n    *((rbx + 8)) = 9;\n    goto label_1;\n    *((rbx + 8)) = 0xb;\n    eax = 1;\n    goto label_1;\n    eax = 1;\n    if ((r15d & 0x402) != 0) {\n        goto label_1;\n    }\nlabel_6:\n    *((rbx + 8)) = 0x12;\n    goto label_1;\n    *((rbx + 8)) = 5;\n    eax = 1;\n    goto label_1;\n    eax = 1;\n    if ((r15d & 0x402) != 0) {\n        goto label_1;\n    }\nlabel_5:\n    *((rbx + 8)) = 0x13;\n    goto label_1;\n    *((rbx + 8)) = 0x14;\n    eax = 1;\n    goto label_1;\n    if ((r15d & 0x800008) == 0) {\n        if (r12 != 0) {\n            goto label_22;\n        }\n    }\nlabel_12:\n    *((rbx + 8)) = 0xc;\n    eax = 1;\n    *(rbx) = 0x10;\n    goto label_1;\n    r15d &= 0x1200;\n    eax = 1;\n    if (r15 != 0x1200) {\n        goto label_1;\n    }\nlabel_4:\n    *((rbx + 8)) = 0x17;\n    goto label_1;\n    r15d &= 0x8400;\n    if (r15 == 0x8000) {\n        goto label_23;\n    }\nlabel_11:\n    eax = 1;\n    goto label_1;\n    eax = 1;\n    if ((r15d & 0x800) == 0) {\n        goto label_1;\n    }\nlabel_23:\n    *((rbx + 8)) = 0xa;\n    eax = 1;\n    goto label_1;\n    if ((r15b & 8) != 0) {\n        goto label_24;\n    }\n    r12++;\n    if (r12 == *((r13 + 0x58))) {\n        goto label_24;\n    }\n    *((r13 + 0x48)) = r12;\n    fcn_00410af0 (rsp + 0x10, r13, r15);\n    goto label_2;\n    eax = *((rsp + 0x18));\n    *((r13 + 0x48))--;\n    edx = rax - 9;\n    eax = 1;\n    if (dl > 1) {\n        goto label_1;\n    }\nlabel_24:\n    *((rbx + 8)) = 0xc;\n    eax = 1;\n    *(rbx) = 0x20;\n    goto label_1;\n    r15d &= 0x1200;\n    eax = 1;\n    if (r15 != 0x1200) {\n        goto label_1;\n    }\nlabel_3:\n    *((rbx + 8)) = 0x18;\n    goto label_1;\n    r15d &= 0x1200;\n    eax = 2;\n    if (r15 != 0x200) {\n        goto label_1;\n    }\n    goto label_3;\n    eax = 2;\n    if ((r15d & 0x8400) != 0) {\n        goto label_1;\n    }\n    *((rbx + 8)) = 0xa;\n    goto label_1;\n    r15d &= 0x1200;\n    eax = 2;\n    if (r15 != 0x200) {\n        goto label_1;\n    }\n    goto label_4;\n    eax = 2;\n    if ((r15d & 0x80000) != 0) {\n        goto label_1;\n    }\n    *((rbx + 8)) = 0x20;\n    goto label_1;\n    eax = 2;\n    if ((r15d & 0x80000) != 0) {\n        goto label_1;\n    }\n    *((rbx + 8)) = 0x22;\n    goto label_1;\n    eax = 2;\n    if ((r15d & 0x80000) != 0) {\n        goto label_1;\n    }\n    *((rbx + 8)) = 0xc;\n    *(rbx) = 0x100;\n    goto label_1;\n    eax = 2;\n    if ((r15d & 0x80000) != 0) {\n        goto label_1;\n    }\n    *((rbx + 8)) = 0xc;\n    *(rbx) = 0x40;\n    goto label_1;\n    eax = 2;\n    if ((r15d & 0x80000) != 0) {\n        goto label_1;\n    }\n    *((rbx + 8)) = 0x21;\n    goto label_1;\n    eax = 2;\n    if ((r15d & 0x80000) != 0) {\n        goto label_1;\n    }\n    *((rbx + 8)) = 0x23;\n    goto label_1;\n    eax = 2;\n    if ((r15d & 0x80000) != 0) {\n        goto label_1;\n    }\n    *((rbx + 8)) = 0xc;\n    *(rbx) = 0x200;\n    goto label_1;\n    r15d &= 0x402;\n    eax = 2;\n    if (r15 != 2) {\n        goto label_1;\n    }\n    goto label_5;\n    eax = 2;\n    if ((r15d & 0x80000) != 0) {\n        goto label_1;\n    }\n    *((rbx + 8)) = 0xc;\n    *(rbx) = 9;\n    goto label_1;\n    eax = 2;\n    if ((r15d & 0x80000) != 0) {\n        goto label_1;\n    }\n    *((rbx + 8)) = 0xc;\n    *(rbx) = 6;\n    goto label_1;\n    eax = 2;\n    if ((r15d & 0x4000) != 0) {\n        goto label_1;\n    }\n    edx = *((rsp + 8));\n    *((rbx + 8)) = 4;\n    edx -= 0x31;\n    rdx = (int64_t) edx;\n    *(rbx) = rdx;\n    goto label_1;\n    r15d &= 0x402;\n    eax = 2;\n    if (r15 != 2) {\n        goto label_1;\n    }\n    goto label_6;\n    eax = 2;\n    if ((r15d & 0x2000) != 0) {\n        goto label_1;\n    }\n    goto label_7;\n    eax = 2;\n    if ((r15d & 0x2000) != 0) {\n        goto label_1;\n    }\n    goto label_8;\n    eax = 2;\n    if ((r15d & 0x80000) != 0) {\n        goto label_1;\n    }\n    *((rbx + 8)) = 0xc;\n    *(rbx) = 0x80;\n    goto label_1;\nlabel_21:\n    eax = 2;\n    goto label_1;\nlabel_19:\n    if (eax > 1) {\n        rdi = *((r13 + 0x10));\n        r8 = rcx*4;\n        ebp = *((rdi + rcx*4));\n        if (ebp == 0xffffffff) {\n            goto label_25;\n        }\n        r9 = r12 + 2;\n        if (*((r13 + 0x30)) == r9) {\n            goto label_26;\n        }\n        if (*((rdi + r8 + 4)) == 0xffffffff) {\n            goto label_25;\n        }\n    }\nlabel_26:\n    rsi = *(r13);\n    rdi = *((r13 + 0x28));\n    if (*((r13 + 0x8c)) == 0) {\n        goto label_27;\n    }\n    r8 = *((r13 + 0x18));\n    rsi += rdi;\n    rsi += *((r8 + rcx*8));\n    edi = *(rsi);\n    r14d = edi;\n    *((rsp + 8)) = edi;\n    edi &= 0x80;\n    if (edi == 0) {\n        goto label_9;\n    }\n    goto label_10;\nlabel_22:\n    if (*((rdx + r12 - 1)) != 0xa) {\n        goto label_11;\n    }\n    if ((r15d & 0x800) == 0) {\n        goto label_11;\n    }\n    goto label_12;\nlabel_27:\n    rsi += rcx;\n    edi = *((rsi + rdi));\n    r14d = edi;\n    *((rsp + 8)) = edi;\n    goto label_9;\nlabel_25:\n    eax = *((rdx + r12 + 1));\n    *((rbx + 8)) = 1;\n    r14d = eax;\n    *(rbx) = al;\n    *((rsp + 8)) = eax;\n    goto label_13;\n}\n"
        },
        {
            "funcName": "fcn_004111a0",
            "funcStartAddr": "0x4111a0",
            "funcEndAddr": "0x411256",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4111a0 */\n#include <stdint.h>\n \nuint64_t fcn_004111a0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r14 = rdi;\n    r13 = rsi;\n    r12 = 0xfffffffffffffffe;\n    rbx = 0xffffffffffffffff;\n    do {\nlabel_1:\n        rax = fcn_00410af0 (r13, r14, rbp);\n        edx = *(r13);\n        rax = (int64_t) eax;\n        *((r14 + 0x48)) += rax;\n        eax = *((r13 + 8));\n        if (al == 2) {\n            goto label_2;\n        }\n        if (al == 0x18) {\n            goto label_3;\n        }\n        if (dl == 0x2c) {\n            goto label_3;\n        }\n        if (al == 1) {\n            goto label_4;\n        }\nlabel_0:\n        rbx = r12;\n    } while (1);\nlabel_4:\n    eax = rdx - 0x30;\n    if (al > 9) {\n        goto label_0;\n    }\n    if (rbx == 0xfffffffffffffffe) {\n        goto label_0;\n    }\n    if (rbx != -1) {\n        rax = rbx * 5;\n        rbx = rdx + rax*2;\n        eax = 0x8030;\n        if (rbx > 0x8030) {\n            rbx = rax;\n        }\n        rbx -= 0x30;\n        goto label_1;\nlabel_2:\n        rbx = 0xfffffffffffffffe;\nlabel_3:\n        rax = 0xfffffffffffffffe;\n        return rax;\n    }\n    ebx = (int32_t) dl;\n    ebx -= 0x30;\n    rbx = (int64_t) ebx;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00411260",
            "funcStartAddr": "0x411260",
            "funcEndAddr": "0x412744",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x411260 */\n#include <stdint.h>\n \nint64_t fcn_00411260 (uint32_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, uint32_t arg6) {\n    int64_t var_10h_2;\n    int64_t var_8h;\n    int64_t var_10h;\n    void * ptr;\n    uint32_t var_20h;\n    uint32_t var_30h;\n    uint32_t var_38h;\n    uint32_t var_40h;\n    void * var_48h;\n    size_t * size;\n    uint32_t var_58h;\n    uint32_t var_5ch;\n    int64_t var_68h;\n    int64_t var_70h;\n    int64_t var_78h;\n    int64_t var_80h;\n    int64_t var_88h;\n    int64_t var_90h;\n    int64_t var_98h;\n    int64_t var_a0h;\n    int64_t var_a8h;\n    int64_t var_c0h;\n    int64_t var_c8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\nlabel_28:\n    rax = *(rsi);\n    *((rsp + 0x10)) = rax;\n    eax = *((rdx + 8));\n    if (al > 0x24) {\n        goto label_5;\n    }\n    r12 = rdx;\n    edx = (int32_t) al;\n    *((rsp + 0x30)) = r9;\n    *((rsp + 8)) = rcx;\n    r15 = rdi;\n    /* switch table (37 cases) at 0x416ce8 */\n    if ((*((rsp + 8)) & 0x1000000) != 0) {\n        goto label_52;\n    }\n    rcx = *((rsp + 8));\n    if ((cl & 0x20) != 0) {\n        goto label_52;\n    }\n    if ((cl & 0x10) != 0) {\n        goto label_53;\n    }\n    if (al == 9) {\n        goto label_54;\n    }\nlabel_20:\n    rax = *((rsp + 0x10));\n    *((r12 + 8)) = 1;\n    rax = fcn_00408ca0 (rax + 0x70, rax + 0x80, 0, 0, r12);\n    *((rsp + 0x18)) = rax;\n    if (rax == 0) {\n        goto label_19;\n    }\nlabel_17:\n    rax = fcn_00410af0 (r12, r15, *((rsp + 8)));\n    ebp = *((r12 + 8));\n    rax = (int64_t) eax;\n    *((r15 + 0x48)) += rax;\nlabel_1:\n    if (bpl <= 0x17) {\n        goto label_55;\n    }\n    do {\nlabel_0:\n        rax = *((rsp + 0x18));\n        return rax;\n        rbx = *((rsi + 0x30));\n        r14 = *((rsp + 8));\n        *(rsp) = r8;\n        rax = rbx + 1;\n        *((rsi + 0x30)) = rax;\n        rdx |= 0x800000;\n        rax = fcn_00410af0 (r12, rdi, r14);\n        rax = (int64_t) eax;\n        *((r15 + 0x48)) += rax;\n        eax = 0;\n        if (*((r12 + 8)) == 9) {\n            goto label_56;\n        }\n        r13 = *((rsp + 0x30));\n        r8++;\n        rax = fcn_00412890 (r15, rbp, r12, r14, *(rsp), r13);\n        r11d = *(r13);\n        if (r11d == 0) {\n            if (*((r12 + 8)) == 9) {\n                goto label_56;\n            }\n            if (rax != 0) {\n                fcn_004064d0 (rax, 0x4076e0, 0);\n            }\n            rax = *((rsp + 0x30));\n            *(rax) = 8;\n        }\nlabel_5:\n        *((rsp + 0x18)) = 0;\n    } while (1);\nlabel_55:\n    eax = 0x8c0800;\n    bl = (bpl == 0x12) ? 1 : 0;\n    if (((rax >> rbp) & 1) >= 0) {\n        goto label_0;\n    }\n    r13 = *((r15 + 0x48));\n    __asm (\"movdqa xmm0, xmmword [r12]\");\n    if (bpl == 0x17) {\n        goto label_57;\n    }\n    ebx = (int32_t) bl;\n    if (bpl == 0x13) {\n        goto label_58;\n    }\n    rax = fcn_00410af0 (r12, r15, *((rsp + 8)));\n    rax = (int64_t) eax;\n    *((r15 + 0x48)) += rax;\n    if (*((rsp + 0x18)) == 0) {\n        goto label_8;\n    }\n    if (bpl == 0x12) {\n        goto label_59;\n    }\n    rbp = *((rsp + 0x18));\n    if (*((rbp + 0x30)) == 0x11) {\n        goto label_60;\n    }\n    *(rsp) = 0xffffffffffffffff;\n    ebx = 0;\n    *((rsp + 0x20)) = 0;\nlabel_3:\n    eax = 0xb;\nlabel_2:\n    *((rsp + 0xc8)) = al;\n    rax = *((rsp + 0x10));\n    r13 = rax + 0x70;\n    r14 = rax + 0x80;\n    rax = fcn_00408ca0 (r13, r14, rbp, 0, rsp + 0xc0);\n    rdx = rax;\n    if (rax == 0) {\n        goto label_14;\n    }\n    rbx += 2;\n    if (rbx > *(rsp)) {\n        goto label_61;\n    }\n    *((rsp + 0x38)) = r12;\n    r12 = rbp;\n    do {\n        rax = fcn_00408d80 (r12, *((rsp + 0x10)));\n        r12 = rax;\n        *((rsp + 0xc8)) = 0x10;\n        rax = fcn_00408ca0 (r13, r14, rbp, rax, rsp + 0xc0);\n        if (r12 == 0) {\n            goto label_14;\n        }\n        if (rax == 0) {\n            goto label_14;\n        }\n        *((rsp + 0xc8)) = 0xa;\n        rax = fcn_00408ca0 (r13, r14, rax, 0, rsp + 0xc0);\n        if (rax == 0) {\n            goto label_14;\n        }\n        rbx++;\n    } while (rbx <= *(rsp));\n    r12 = *((rsp + 0x38));\n    rdx = rax;\nlabel_61:\n    rax = *((rsp + 0x20));\n    if (rax == 0) {\n        goto label_62;\n    }\n    *((rsp + 0xc8)) = 0x10;\n    rax = fcn_00408ca0 (r13, r14, rax, rdx, rsp + 0xc0);\nlabel_4:\n    rcx = *((rsp + 0x30));\n    edx = *(rcx);\n    if (edx != 0) {\n        if (rax == 0) {\n            goto label_32;\n        }\n    }\n    *((rsp + 0x18)) = rax;\nlabel_6:\n    ebp = *((r12 + 8));\n    if ((*((rsp + 8)) & 0x1000000) == 0) {\n        goto label_1;\n    }\n    if (bpl == 0xb) {\n        goto label_63;\n    }\n    if (bpl != 0x17) {\n        goto label_1;\n    }\nlabel_63:\n    rax = *((rsp + 0x18));\n    if (rax != 0) {\n        fcn_004064d0 (rax, 0x4076e0, 0);\n    }\nlabel_52:\n    *((rsp + 0x18)) = 0;\n    rax = *((rsp + 0x30));\n    *(rax) = 0xd;\n    goto label_0;\nlabel_9:\n    if (rbx <= 0) {\n        goto label_64;\n    }\n    if (rbx == 1) {\n        goto label_65;\n    }\n    rax = *((rsp + 0x10));\n    r14 = *((rsp + 0x18));\n    *((rsp + 0x20)) = r15;\n    *((rsp + 0x38)) = r12;\n    r12 = rbx;\n    r13 = rax + 0x70;\n    rax -= 0xffffffffffffff80;\n    r15 = r14;\n    rbx = rax;\n    while (r15 != 0) {\n        if (rax == 0) {\n            goto label_14;\n        }\n        rbp++;\n        if (r12 < rbp) {\n            goto label_66;\n        }\n        rax = fcn_00408d80 (r15, *((rsp + 0x10)));\n        rcx = rax;\n        r15 = rax;\n        *((rsp + 0xc8)) = 0x10;\n        rax = fcn_00408ca0 (r13, rbx, r14, rcx, rsp + 0xc0);\n        r14 = rax;\n    }\nlabel_14:\n    rax = *((rsp + 0x30));\n    *(rax) = 0xc;\nlabel_11:\n    fcn_004064d0 (*((rsp + 0x18)), 0x4076e0, 0);\n    *((rsp + 0x18)) = 0;\n    goto label_0;\nlabel_58:\n    rax = fcn_00410af0 (r12, r15, *((rsp + 8)));\n    rax = (int64_t) eax;\n    *((r15 + 0x48)) += rax;\n    if (*((rsp + 0x18)) == 0) {\n        goto label_8;\n    }\n    rbp = *((rsp + 0x18));\n    if (*((rbp + 0x30)) == 0x11) {\n        goto label_67;\n    }\n    *(rsp) = 1;\n    eax = 0xa;\n    *((rsp + 0x20)) = 0;\n    goto label_2;\nlabel_60:\n    *(rsp) = 0xffffffffffffffff;\n    rbp = *((rsp + 0x18));\n    ebx = 0;\n    *((rsp + 0x20)) = 0;\nlabel_16:\n    fcn_004064d0 (rbp, 0x406670, *((rbp + 0x28)));\nlabel_15:\n    if (*(rsp) == -1) {\n        goto label_3;\n    }\n    eax = 0xa;\n    goto label_2;\nlabel_57:\n    *((rsp + 0x20)) = xmm0;\n    rax = fcn_004111a0 (r15, r12, *((rsp + 8)));\n    __asm (\"movdqa xmm0, xmmword [rsp + 0x20]\");\n    *(rsp) = rax;\n    if (rax == -1) {\n        goto label_68;\n    }\n    if (*(rsp) != 0xfffffffffffffffe) {\n        eax = *((r12 + 8));\n        if (al == 0x18) {\n            goto label_69;\n        }\n        if (al == 1) {\n            goto label_70;\n        }\n    }\nlabel_7:\n    if ((*((rsp + 8)) & 0x200000) == 0) {\n        goto label_71;\n    }\nlabel_13:\n    *((r15 + 0x48)) = r13;\n    rax = *((rsp + 0x18));\n    *(r12) = xmm0;\n    *((r12 + 8)) = 1;\n    goto label_4;\nlabel_8:\n    rax = *((rsp + 0x30));\n    ecx = *(rax);\n    if (ecx != 0) {\n        goto label_5;\n    }\nlabel_10:\n    *((rsp + 0x18)) = 0;\n    goto label_6;\nlabel_68:\n    if (*((r12 + 8)) != 1) {\n        goto label_31;\n    }\n    if (*(r12) != 0x2c) {\n        goto label_31;\n    }\n    ebx = 0;\nlabel_50:\n    *((rsp + 0x20)) = xmm0;\n    rax = fcn_004111a0 (r15, r12, *((rsp + 8)));\n    __asm (\"movdqa xmm0, xmmword [rsp + 0x20]\");\n    *(rsp) = rax;\n    if (rax == 0xfffffffffffffffe) {\n        goto label_7;\n    }\n    rax = *(rsp);\n    if (rax != -1) {\n        if (rax < rbx) {\n            goto label_31;\n        }\n    }\n    if (*((r12 + 8)) != 0x18) {\n        goto label_31;\n    }\n    if (*(rsp) != -1) {\n        goto label_72;\n    }\n    eax = 0;\n    al = (rbx > 0x7fff) ? 1 : 0;\n    if (rax != 0) {\n        goto label_73;\n    }\nlabel_12:\n    rax = fcn_00410af0 (r12, r15, *((rsp + 8)));\n    rdi = *((rsp + 0x18));\n    rax = (int64_t) eax;\n    *((r15 + 0x48)) += rax;\n    if (rdi == 0) {\n        goto label_8;\n    }\n    rax = *(rsp);\n    rax |= rbx;\n    if (rax != 0) {\n        goto label_9;\n    }\n    fcn_004064d0 (rdi, 0x4076e0, 0);\n    rax = *((rsp + 0x30));\n    esi = *(rax);\n    if (esi == 0) {\n        goto label_10;\n    }\n    goto label_11;\nlabel_69:\n    rbx = *(rsp);\nlabel_72:\n    eax = 0;\n    al = (*(rsp) > 0x7fff) ? 1 : 0;\n    if (rax == 0) {\n        goto label_12;\n    }\nlabel_73:\n    rax = *((rsp + 0x30));\n    *(rax) = 0xf;\n    goto label_32;\nlabel_70:\n    if (*(r12) == 0x2c) {\n        goto label_74;\n    }\n    if ((*((rsp + 8)) & 0x200000) != 0) {\n        goto label_13;\n    }\nlabel_31:\n    rax = *((rsp + 0x30));\n    *(rax) = 0xa;\nlabel_32:\n    if (*((rsp + 0x18)) == 0) {\n        goto label_5;\n    }\n    goto label_11;\nlabel_66:\n    rbx = r12;\n    r14 = r15;\n    r12 = *((rsp + 0x38));\n    r15 = *((rsp + 0x20));\n    rdx = rax;\nlabel_49:\n    if (rbx == *(rsp)) {\nlabel_62:\n        *((rsp + 0x18)) = rdx;\n        goto label_6;\nlabel_59:\n        r14 = *((rsp + 0x18));\n        *(rsp) = 0xffffffffffffffff;\n        ebx = 1;\n        rdx = r14;\n    }\n    *((rsp + 0x20)) = rdx;\n    rax = fcn_00408d80 (r14, *((rsp + 0x10)));\n    rdx = *((rsp + 0x20));\n    if (rax == 0) {\n        goto label_14;\n    }\nlabel_51:\n    *((rsp + 0x20)) = rdx;\n    if (*((rbp + 0x30)) != 0x11) {\n        goto label_15;\n    }\n    goto label_16;\n    *((rsp + 0x68)) = 0;\n    rax = calloc (0x20, 1);\n    rbx = rax;\n    *(rsp) = rax;\n    rax = calloc (0x50, 1);\n    r13 = rax;\n    dl = (rbx == 0) ? 1 : 0;\n    al = (r13 == 0) ? 1 : 0;\n    dl |= al;\n    if (dl != 0) {\n        goto label_75;\n    }\n    eax = fcn_00406540 (r12, r15, *((rsp + 8)));\n    ebx = eax;\n    eax = *((r12 + 8));\n    if (al == 2) {\n        goto label_76;\n    }\n    *((rsp + 0x38)) = 0;\n    if (al == 0x19) {\n        goto label_77;\n    }\nlabel_26:\n    if (al == 0x15) {\n        goto label_78;\n    }\nlabel_27:\n    *((rsp + 0x20)) = 0;\n    rbp = *(rsp);\n    r9d = 1;\n    r14 = rsp + 0xa0;\n    *((rsp + 0x18)) = 0;\nlabel_22:\n    r9d &= 1;\n    *((rsp + 0x78)) = r14;\n    *((rsp + 0x70)) = 3;\n    eax = fcn_004108d0 (rsp + 0x70, r15, r12, ebx, *((rsp + 8)));\n    if (eax != 0) {\n        goto label_30;\n    }\n    eax = fcn_00406540 (r12, r15, *((rsp + 8)));\n    ebx = eax;\n    eax = *((rsp + 0x70));\n    edx = rax - 2;\n    edx &= 0xfffffffd;\n    if (edx != 0) {\n        edx = *((r12 + 8));\n        if (dl == 2) {\n            goto label_79;\n        }\n        if (dl == 0x16) {\n            goto label_80;\n        }\n    }\nlabel_33:\n    if (eax > 4) {\n        goto label_81;\n    }\n    /* switch table (5 cases) at 0x416e10 */\n    rbx = *((rsp + 0x30));\n    r8b = (al == 0x21) ? 1 : 0;\n    r8d = (int32_t) r8b;\nlabel_18:\n    rax = fcn_0040c090 (*((rsp + 0x10)), *((rdi + 0x78)), \"alnum\", 0x414c7e, r8, rbx);\n    edi = *(rbx);\n    *((rsp + 0x18)) = rax;\n    if (edi == 0) {\n        goto label_17;\n    }\n    if (rax != 0) {\n        goto label_17;\n    }\n    goto label_5;\n    rbx = *((rsp + 0x30));\n    rsi = *((rdi + 0x78));\n    ecx = 0x4164a7;\n    r8b = (al == 0x23) ? 1 : 0;\n    edx = \"space\";\n    r9 = rbx;\n    r8d = (int32_t) r8b;\n    goto label_18;\n    *((rsp + 0x18)) = 0;\n    rax = *((rsp + 0x30));\n    *(rax) = 5;\n    goto label_0;\n    rax = *((rsp + 0x10));\n    rbx = rax + 0x70;\n    rbp = rax + 0x80;\n    rax = fcn_00408ca0 (rbx, rbp, 0, 0, r12);\n    *((rsp + 0x18)) = rax;\n    if (rax == 0) {\n        goto label_19;\n    }\n    rax = *((rsp + 0x10));\n    r14 = *((rsp + 0x18));\n    if (*((rax + 0xb4)) <= 1) {\n        goto label_17;\n    }\n    do {\n        rax = *((r15 + 0x48));\n        if (*((r15 + 0x68)) <= rax) {\n            goto label_82;\n        }\n        if (rax == *((r15 + 0x30))) {\n            goto label_82;\n        }\n        rdx = *((r15 + 0x10));\n        if (*((rdx + rax*4)) != 0xffffffff) {\n            goto label_82;\n        }\n        rax = fcn_00410af0 (r12, r15, *((rsp + 8)));\n        rax = (int64_t) eax;\n        *((r15 + 0x48)) += rax;\n        rax = fcn_00408ca0 (rbx, rbp, 0, 0, r12);\n        r13 = rax;\n        *((rsp + 0xc8)) = 0x10;\n        rax = fcn_00408ca0 (rbx, rbp, r14, rax, rsp + 0xc0);\n        dl = (r13 == 0) ? 1 : 0;\n        r14 = rax;\n        al = (rax == 0) ? 1 : 0;\n        dl |= al;\n    } while (dl == 0);\n    do {\nlabel_19:\n        rax = *((rsp + 0x30));\n        *(rax) = 0xc;\n        goto label_5;\n        rcx = *(r12);\n        eax = 1;\n        eax <<= cl;\n        rcx = *((rsp + 0x10));\n        rax = (int64_t) eax;\n        if ((*((rcx + 0xa8)) & rax) == 0) {\n            goto label_83;\n        }\n        rbx = *((rsp + 0x10));\n        *((rbx + 0xa0)) |= rax;\n        rax = fcn_00408ca0 (rbx + 0x70, rbx + 0x80, 0, 0, r12);\n        *((rsp + 0x18)) = rax;\n    } while (rax == 0);\n    *((rbx + 0x98))++;\n    *((rbx + 0xb0)) |= 2;\n    goto label_17;\n    rbx = *((rsp + 0x10));\n    rax = fcn_00408ca0 (rbx + 0x70, rbx + 0x80, 0, 0, r12);\n    *((rsp + 0x18)) = rax;\n    if (rax == 0) {\n        goto label_19;\n    }\n    if (*((rbx + 0xb4)) <= 1) {\n        goto label_17;\n    }\n    *((rbx + 0xb0)) |= 2;\n    goto label_17;\n    r14d = *(r12);\n    if ((r14d & 0x30f) != 0) {\n        rax = *((rsp + 0x10));\n        eax = *((rax + 0xb0));\n        if ((al & 0x10) != 0) {\n            goto label_39;\n        }\n        rcx = *((rsp + 0x10));\n        eax |= 0x10;\n        *((rcx + 0xb0)) = al;\n        if ((al & 8) != 0) {\n            goto label_84;\n        }\n        rsi = 0x3ff000000000000;\n        *((rcx + 0xb8)) = rsi;\n        rsi = 0x7fffffe87fffffe;\n        *((rcx + 0xc0)) = rsi;\n        if ((al & 4) == 0) {\n            goto label_85;\n        }\n        xmm0 = 0;\n        __asm (\"movups xmmword [rcx + 0xc8], xmm0\");\n        r14d = *(r12);\n    }\nlabel_39:\n    rax = *((rsp + 0x10));\n    r13 = rax + 0x70;\n    rbp = rax + 0x80;\n    eax = r14 - 0x100;\n    if ((eax & 0xfffffeff) != 0) {\n        goto label_86;\n    }\n    if (r14d == 0x100) {\n        goto label_87;\n    }\n    *(r12) = 5;\n    rax = fcn_00408ca0 (r13, rbp, 0, 0, r12);\n    *(r12) = 0xa;\n    rbx = rax;\nlabel_29:\n    rax = fcn_00408ca0 (r13, rbp, 0, 0, r12);\n    rcx = rax;\n    r14 = rax;\n    *((rsp + 0xc8)) = 0xa;\n    rax = fcn_00408ca0 (r13, rbp, rbx, rcx, rsp + 0xc0);\n    dl = (rbx == 0) ? 1 : 0;\n    rcx = rax;\n    *((rsp + 0x18)) = rax;\n    al = (r14 == 0) ? 1 : 0;\n    dl |= al;\n    if (dl != 0) {\n        goto label_19;\n    }\n    if (rcx == 0) {\n        goto label_19;\n    }\nlabel_25:\n    rax = fcn_00410af0 (r12, r15, *((rsp + 8)));\n    rax = (int64_t) eax;\n    *((r15 + 0x48)) += rax;\n    goto label_0;\nlabel_54:\n    if ((*((rsp + 8)) & 0x20000) != 0) {\n        goto label_20;\n    }\n    *((rsp + 0x18)) = 0;\n    rax = *((rsp + 0x30));\n    *(rax) = 0x10;\n    goto label_0;\nlabel_56:\n    if (rbx <= 8) {\n        goto label_88;\n    }\nlabel_21:\n    rcx = *((rsp + 0x10));\n    *((rsp + 0xc8)) = 0x11;\n    rax = fcn_00408ca0 (rcx + 0x70, rcx + 0x80, rax, 0, rsp + 0xc0);\n    *((rsp + 0x18)) = rax;\n    if (rax == 0) {\n        goto label_19;\n    }\n    *((rax + 0x28)) = rbx;\n    goto label_17;\nlabel_88:\n    ecx = ebx;\n    edx = 1;\n    edx <<= cl;\n    rcx = *((rsp + 0x10));\n    rdx = (int64_t) edx;\n    *((rcx + 0xa8)) |= rdx;\n    goto label_21;\n    eax = fcn_0040b870 (rbp, *((rsp + 0x78)));\n    rcx = *((rsp + 0x30));\n    *(rcx) = eax;\n    if (eax != 0) {\n        goto label_24;\n    }\n    do {\nlabel_23:\n        eax = *((r12 + 8));\n        if (al == 2) {\n            goto label_79;\n        }\n        if (al == 0x15) {\n            goto label_89;\n        }\n        r9d = 0;\n        goto label_22;\n        rdx = *((r13 + 0x28));\n        rax = *(r13);\n        if (rdx == *((rsp + 0x18))) {\n            goto label_90;\n        }\nlabel_34:\n        rcx = rdx + 1;\n        *((r13 + 0x28)) = rcx;\n        ecx = *((rsp + 0x78));\n        *((rax + rdx*4)) = ecx;\n    } while (1);\n    ecx = *((rsp + 0x78));\n    edx = 1;\n    rax = rcx;\n    rdx <<= cl;\n    rax >>= 3;\n    eax &= 0x18;\n    *((rbp + rax)) |= rdx;\n    goto label_23;\n    eax = fcn_0040b8c0 (*((r15 + 0x78)), rbp, r13 + 0x18, r13 + 0x48, rsp + 0x78, *((rsp + 0x88)));\n    rcx = *((rsp + 0x40));\n    *(rcx) = eax;\n    if (eax == 0) {\n        goto label_23;\n    }\nlabel_24:\n    free (*(rsp));\n    fcn_00407690 (r13);\n    rax = *((rsp + 0x30));\n    r8d = *(rax);\n    if (r8d != 0) {\n        goto label_5;\n    }\n    *((rsp + 0x18)) = 0;\n    goto label_17;\n    eax = fcn_0040b870 (rbp, *((rsp + 0x78)));\n    rcx = *((rsp + 0x30));\n    *(rcx) = eax;\n    if (eax == 0) {\n        goto label_23;\n    }\n    goto label_24;\nlabel_86:\n    rax = fcn_00408ca0 (r13, rbp, 0, 0, r12);\n    *((rsp + 0x18)) = rax;\n    if (rax != 0) {\n        goto label_25;\n    }\n    goto label_19;\nlabel_77:\n    *((r13 + 0x20)) |= 1;\n    if ((*((rsp + 8)) & 0x100) != 0) {\n        rax = *(rsp);\n        *(rax) |= 0x400;\n    }\n    rax = (int64_t) ebx;\n    *((r15 + 0x48)) += rax;\n    eax = fcn_00406540 (r12, r15, *((rsp + 8)));\n    ebx = eax;\n    eax = *((r12 + 8));\n    if (al == 2) {\n        goto label_76;\n    }\n    *((rsp + 0x38)) = 1;\n    goto label_26;\nlabel_78:\n    *((r12 + 8)) = 1;\n    goto label_27;\n    do {\nlabel_79:\n        rax = *((rsp + 0x30));\n        *(rax) = 7;\n        goto label_24;\nlabel_53:\n        rdx = rcx;\n        *(rsp) = r8;\n        rbx = rcx;\n        rax = fcn_00410af0 (r12, r15, rdx);\n        rax = (int64_t) eax;\n        *((r15 + 0x48)) += rax;\n        rax = fcn_00411260 (r15, rbp, r12, rbx, *(rsp), *((rsp + 0x30)));\n        goto label_28;\n        *((rsp + 0x18)) = rax;\n        goto label_0;\nlabel_30:\n        rcx = *((rsp + 0x30));\n        *(rcx) = eax;\n        goto label_24;\nlabel_82:\n        *((rsp + 0x18)) = r14;\n        goto label_17;\nlabel_87:\n        *(r12) = 6;\n        rax = fcn_00408ca0 (r13, rbp, 0, 0, r12);\n        *(r12) = 9;\n        rbx = rax;\n        goto label_29;\nlabel_80:\n        rax = (int64_t) ebx;\n        *((r15 + 0x48)) += rax;\n        r10 = *((rsp + 8));\n        eax = fcn_00406540 (rsp + 0x90, rsi, r10);\n        edx = *((rsp + 0x98));\n    } while (dl == 2);\n    if (dl == 0x15) {\n        goto label_91;\n    }\n    rcx = rsp + 0xc0;\n    r9d = 1;\n    *((rsp + 0x80)) = 3;\n    *((rsp + 0x88)) = rcx;\n    eax = fcn_004108d0 (rsp + 0x80, rsi, rsp + 0x90, eax, r10);\n    if (eax != 0) {\n        goto label_30;\n    }\n    eax = fcn_00406540 (r12, r15, *((rsp + 8)));\n    r8d = *((rsp + 0x70));\n    edx = 0;\n    ebx = eax;\n    rax = *((rsp + 0x10));\n    eax = r8 - 2;\n    if (*((rax + 0xb4)) >= 2) {\n        rdx = r13;\n    }\n    eax &= 0xfffffffd;\n    if (eax == 0) {\n        goto label_92;\n    }\n    esi = *((rsp + 0x80));\n    eax = rsi - 2;\n    eax &= 0xfffffffd;\n    if (eax == 0) {\n        goto label_92;\n    }\n    rsp + 0x40 = (r8d == 3) ? 1 : 0;\n    if (r8d == 3) {\n        goto label_93;\n    }\n    if (esi == 3) {\n        goto label_94;\n    }\n    if (r8d != 0) {\n        goto label_95;\n    }\nlabel_45:\n    edi = *((rsp + 0x78));\nlabel_47:\n    if (esi == 0) {\n        goto label_96;\n    }\n    ecx = 0;\n    if (esi == 3) {\n        r9 = *((rsp + 0x88));\nlabel_44:\n        ecx = *(r9);\n    }\nlabel_42:\n    if (r8d == 0) {\n        goto label_97;\n    }\n    r8d = *((rsp + 0x78));\n    if (*((rsp + 0x40)) != 0) {\n        goto label_97;\n    }\nlabel_41:\n    if (esi == 0) {\n        goto label_98;\n    }\n    r9d = *((rsp + 0x88));\n    if (esi == 3) {\n        goto label_98;\n    }\nlabel_36:\n    if (r8d == 0xffffffff) {\n        goto label_43;\n    }\n    if (r9d == 0xffffffff) {\n        goto label_43;\n    }\n    if ((*((rsp + 8)) & 0x10000) != 0) {\n        if (r8d > r9d) {\n            goto label_92;\n        }\n    }\n    if (rdx != 0) {\n        rax = *((rdx + 0x40));\n        rcx = *((rdx + 8));\n        if (rax == *((rsp + 0x20))) {\n            goto label_99;\n        }\nlabel_48:\n        *((rcx + rax*4)) = r8d;\n        rcx = *((rdx + 0x10));\n        rsi = rax + 1;\n        *((rdx + 0x40)) = rsi;\n        *((rcx + rax*4)) = r9d;\n    }\n    eax = 0;\n    esi = 1;\n    do {\n        ecx = eax;\n        if (r8d <= eax) {\n            if (r9d < eax) {\n                goto label_100;\n            }\n            rdx = rax;\n            rdi = rsi;\n            rdx >>= 6;\n            rdi <<= cl;\n            *((rbp + rdx*8)) |= rdi;\n        }\nlabel_100:\n        rax++;\n    } while (rax != 0x100);\n    rax = *((rsp + 0x30));\n    *(rax) = 0;\n    goto label_23;\nlabel_76:\n    rax = *((rsp + 0x30));\n    *(rax) = 2;\n    goto label_24;\nlabel_71:\n    if (*((r12 + 8)) != 2) {\n        goto label_31;\n    }\n    rax = *((rsp + 0x30));\n    *(rax) = 9;\n    goto label_32;\nlabel_75:\n    free (*(rsp));\n    free (r13);\n    goto label_19;\nlabel_83:\n    *((rsp + 0x18)) = 0;\n    rax = *((rsp + 0x30));\n    *(rax) = 6;\n    goto label_0;\nlabel_91:\n    eax = ebx;\n    eax = -eax;\n    rax = (int64_t) eax;\n    *((r15 + 0x48)) += rax;\n    eax = *((rsp + 0x70));\n    *((r12 + 8)) = 1;\n    goto label_33;\nlabel_90:\n    rcx = *((rsp + 0x18));\n    rcx = rcx + rcx + 1;\n    *((rsp + 0x18)) = rcx;\n    rax = realloc (rax, rcx*4);\n    if (rax == 0) {\n        goto label_35;\n    }\n    *(r13) = rax;\n    rdx = *((r13 + 0x28));\n    goto label_34;\nlabel_89:\n    rax = (int64_t) ebx;\n    *((r15 + 0x48)) += rax;\n    if (*((rsp + 0x38)) == 0) {\n        goto label_101;\n    }\n    rcx = *(rsp);\n    rax = *(rsp);\n    rdx = rcx + 0x20;\n    do {\n        rax = ~rax;\n        rax += 8;\n    } while (rdx != rax);\nlabel_101:\n    rax = *((rsp + 0x10));\n    edx = *((rax + 0xb4));\n    if (edx <= 1) {\n        goto label_102;\n    }\n    rax = *((rsp + 0x10));\n    rsi = *(rsp);\n    rcx = *((rax + 0x78));\n    eax = 0;\n    do {\n        rdi = *((rcx + rax));\n        *((rsi + rax)) &= rdi;\n        rax += 8;\n    } while (rax != 0x20);\nlabel_102:\n    if (*((r13 + 0x28)) != 0) {\n        goto label_103;\n    }\n    if (*((r13 + 0x30)) != 0) {\n        goto label_103;\n    }\n    if (*((r13 + 0x38)) != 0) {\n        goto label_103;\n    }\n    if (*((r13 + 0x40)) != 0) {\n        goto label_103;\n    }\n    edx--;\n    if (edx > 0) {\n        if (*((r13 + 0x48)) != 0) {\n            goto label_103;\n        }\n        if ((*((r13 + 0x20)) & 1) != 0) {\n            goto label_103;\n        }\n    }\n    fcn_00407690 (r13);\n    rax = *(rsp);\n    *((rsp + 0xa8)) = 3;\n    *((rsp + 0xa0)) = rax;\n    rax = *((rsp + 0x10));\n    rax = fcn_00408ca0 (rax + 0x70, rax + 0x80, 0, 0, r14);\n    *((rsp + 0x18)) = rax;\n    if (rax != 0) {\n        goto label_17;\n    }\n    do {\nlabel_35:\n        rax = *((rsp + 0x30));\n        *(rax) = 0xc;\n        goto label_24;\nlabel_103:\n        rax = *((rsp + 0x10));\n        *((rax + 0xb0)) |= 2;\n        rbp = rax + 0x70;\n        rbx = rax + 0x80;\n        *((rsp + 0xa8)) = 6;\n        *((rsp + 0xa0)) = r13;\n        rax = fcn_00408ca0 (rbp, rbx, 0, 0, r14);\n        rcx = *(rsp);\n        rsi = rax;\n        *((rsp + 0x18)) = rax;\n        rdx = rcx + 0x20;\n        rax = rcx;\n    } while (rsi == 0);\n    do {\n        if (*(rax) != 0) {\n            goto label_104;\n        }\n        rax += 8;\n    } while (rdx != rax);\n    free (*(rsp));\n    goto label_17;\nlabel_104:\n    rax = *(rsp);\n    *((rsp + 0xa8)) = 3;\n    *((rsp + 0xa0)) = rax;\n    rax = fcn_00408ca0 (rbp, rbx, 0, 0, r14);\n    if (rax == 0) {\n        goto label_35;\n    }\n    *((rsp + 0xc8)) = 0xa;\n    rax = fcn_00408ca0 (rbp, rbx, rax, *((rsp + 0x18)), rsp + 0xc0);\n    *((rsp + 0x18)) = rax;\n    if (rax != 0) {\n        goto label_17;\n    }\n    goto label_35;\nlabel_46:\n    r9 = *((rsp + 0x88));\n    rcx = r10;\n    rdi = r9;\n    __asm (\"repne scasb al, byte [rdi]\");\n    rax = rcx;\n    rax = ~rax;\n    rax--;\n    if (rax <= 1) {\n        goto label_105;\n    }\nlabel_43:\n    rax = *((rsp + 0x30));\n    *(rax) = 3;\n    goto label_24;\nlabel_98:\n    rsi = rdx;\n    *((rsp + 0x48)) = r8d;\n    *((rsp + 0x40)) = rdx;\n    eax = fcn_00406c50 (ecx);\n    r8d = *((rsp + 0x48));\n    rdx = *((rsp + 0x40));\n    r9d = eax;\n    goto label_36;\nlabel_85:\n    ebx = 0x80;\nlabel_40:\n    rax = ctype_b_loc ();\n    rcx = *((rsp + 0x10));\n    rdx = (int64_t) ebp;\n    r9d = rbx + 0x100;\n    rax = *(rax);\n    ebp <<= 6;\n    r8d = 1;\n    rsi = rcx + rdx*8;\n    rdx = (int64_t) ebx;\n    r9d -= ebp;\n    rdi = rax + rdx*2;\nlabel_38:\n    eax = 0;\n    while ((*((rdi + rax*2)) & 8) == 0) {\n        edx = rbx + rax;\n        if (edx == 0x5f) {\n            goto label_106;\n        }\nlabel_37:\n        rax++;\n        if (rax == 0x40) {\n            goto label_107;\n        }\n        ecx = eax;\n    }\nlabel_106:\n    rdx = r8;\n    rdx <<= cl;\n    *((rsi + 0xb8)) |= rdx;\n    goto label_37;\nlabel_107:\n    ebx += 0x40;\n    rsi += 8;\n    rdi -= 0xffffffffffffff80;\n    if (r9d != ebx) {\n        goto label_38;\n    }\n    goto label_39;\nlabel_84:\n    ebx = 0;\n    ebp = 0;\n    goto label_40;\nlabel_97:\n    rsi = rdx;\n    *((rsp + 0x48)) = ecx;\n    *((rsp + 0x40)) = rdx;\n    eax = fcn_00406c50 (rdi);\n    esi = *((rsp + 0x80));\n    ecx = *((rsp + 0x48));\n    r8d = eax;\n    rdx = *((rsp + 0x40));\n    goto label_41;\nlabel_95:\n    edi = 0;\n    ecx = 0;\n    if (esi != 0) {\n        goto label_42;\n    }\nlabel_96:\n    ecx = *((rsp + 0x88));\n    goto label_42;\nlabel_92:\n    rax = *((rsp + 0x30));\n    *(rax) = 0xb;\n    goto label_24;\nlabel_94:\n    r9 = *((rsp + 0x88));\n    eax = 0;\n    rcx |= 0xffffffffffffffff;\n    rdi = r9;\n    __asm (\"repne scasb al, byte [rdi]\");\n    rax = rcx;\n    rax = ~rax;\n    rax--;\n    if (rax > 1) {\n        goto label_43;\n    }\n    edi = 0;\n    if (r8d != 0) {\n        goto label_44;\n    }\n    goto label_45;\nlabel_93:\n    r11 = *((rsp + 0x78));\n    r10 |= 0xffffffffffffffff;\n    eax = 0;\n    rcx = r10;\n    rdi = r11;\n    __asm (\"repne scasb al, byte [rdi]\");\n    rcx = ~rcx;\n    rcx += r10;\n    if (rcx > 1) {\n        goto label_43;\n    }\n    if (esi == 3) {\n        goto label_46;\n    }\nlabel_105:\n    edi = *(r11);\n    goto label_47;\nlabel_99:\n    rax = *((rsp + 0x20));\n    *((rsp + 0x5c)) = r9d;\n    *((rsp + 0x58)) = r8d;\n    rax += rax;\n    *((rsp + 0x40)) = rdx;\n    rax++;\n    r11 = rax*4;\n    *((rsp + 0x20)) = rax;\n    rsi = r11;\n    *((rsp + 0x50)) = r11;\n    rax = realloc (rcx, rsi);\n    rdx = *((rsp + 0x40));\n    r11 = *((rsp + 0x50));\n    *((rsp + 0x48)) = rax;\n    rax = realloc (*((rdx + 0x10)), r11);\n    rcx = *((rsp + 0x48));\n    if (rcx != 0) {\n        rdx = *((rsp + 0x40));\n        r8d = *((rsp + 0x58));\n        r9d = *((rsp + 0x5c));\n        if (rax == 0) {\n            goto label_108;\n        }\n        *((rdx + 0x10)) = rax;\n        rax = *((rdx + 0x40));\n        *((rdx + 8)) = rcx;\n        goto label_48;\nlabel_81:\n        rax = assert_fail (0x4164f7, \"lib/regcomp.c\", 0xcf3, \"parse_bracket_exp\");\n    }\nlabel_108:\n    *((rsp + 0x18)) = rax;\n    free (rcx);\n    rax = *((rsp + 0x18));\n    free (*((rsp + 0x18)));\n    rax = *((rsp + 0x30));\n    *(rax) = 0xc;\n    goto label_24;\nlabel_65:\n    r14 = *((rsp + 0x18));\n    rdx = *((rsp + 0x18));\n    goto label_49;\nlabel_67:\n    rbp = *((rsp + 0x18));\n    *(rsp) = 1;\n    *((rsp + 0x20)) = 0;\n    goto label_16;\nlabel_74:\n    rbx = *(rsp);\n    goto label_50;\nlabel_64:\n    rbp = *((rsp + 0x18));\n    edx = 0;\n    goto label_51;\n}\n"
        },
        {
            "funcName": "fcn_00412750",
            "funcStartAddr": "0x412750",
            "funcEndAddr": "0x41288e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x412750 */\n#include <stdint.h>\n \nint64_t fcn_00412750 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r15 = rcx;\n    r13 = rsi;\n    r12 = r8;\n    rbx = r9;\n    rax = *(rsi);\n    *((rsp + 8)) = rdi;\n    *((rsp + 0x18)) = rax;\n    rax = fcn_00411260 (rdi, rsi, rdx, rcx, r8, r9);\n    edx = *(rbx);\n    r14 = rax;\n    if (edx != 0) {\n        if (rax == 0) {\n            goto label_2;\n        }\n    }\nlabel_0:\n    eax = *((rbp + 8));\n    edx = eax;\n    edx &= 0xfffffff7;\n    if (dl == 2) {\n        goto label_1;\n    }\n    do {\n        if (al == 9) {\n            if (r12 != 0) {\n                goto label_1;\n            }\n        }\n        rax = fcn_00411260 (*((rsp + 8)), r13, rbp, r15, r12, rbx);\n        r9 = rax;\n        eax = *(rbx);\n        if (eax != 0) {\n            if (r9 == 0) {\n                goto label_3;\n            }\n        }\n        if (r14 == 0) {\n            goto label_4;\n        }\n        if (r9 == 0) {\n            goto label_4;\n        }\n        rax = *((rsp + 0x18));\n        rcx = r9;\n        *((rsp + 0x10)) = r9;\n        *((rsp + 0x28)) = 0x10;\n        rax = fcn_00408ca0 (rax + 0x70, rax + 0x80, r14, rcx, rsp + 0x20);\n        r9 = *((rsp + 0x10));\n        if (rax == 0) {\n            goto label_5;\n        }\n        r14 = rax;\n        eax = *((rbp + 8));\n        edx = eax;\n        edx &= 0xfffffff7;\n    } while (dl != 2);\n    do {\nlabel_1:\n        rax = r14;\n        return rax;\nlabel_4:\n        if (r14 == 0) {\n            r14 = r9;\n        }\n        goto label_0;\nlabel_3:\n        if (r14 != 0) {\n            fcn_004064d0 (r14, 0x4076e0, 0);\n        }\nlabel_2:\n        r14d = 0;\n    } while (1);\nlabel_5:\n    fcn_004064d0 (r9, 0x4076e0, 0);\n    fcn_004064d0 (r14, 0x4076e0, 0);\n    r14d = 0;\n    *(rbx) = 0xc;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00412890",
            "funcStartAddr": "0x412890",
            "funcEndAddr": "0x4129e1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x412890 */\n#include <stdint.h>\n \nint64_t fcn_00412890 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r14 = r9;\n    r13 = rcx;\n    r12 = rdi;\n    rbx = *(rsi);\n    *((rsp + 0x18)) = rsi;\n    rax = *((rbx + 0xa8));\n    *(rsp) = r8;\n    *((rsp + 0x10)) = rax;\n    rax = fcn_00412750 (rdi, rsi, rdx, rcx, r8, r9);\n    edx = *(r14);\n    r15 = rax;\n    if (edx == 0) {\n        goto label_4;\n    }\n    if (rax != 0) {\n        goto label_4;\n    }\nlabel_3:\n    r15d = 0;\n    do {\nlabel_2:\n        rax = r15;\n        return rax;\nlabel_0:\n        if (al == 9) {\n            if (*(rsp) != 0) {\n                goto label_5;\n            }\n        }\n        rax = *((rbx + 0xa8));\n        *((rsp + 8)) = rax;\n        rax = *((rsp + 0x10));\n        *((rbx + 0xa8)) = rax;\n        rax = fcn_00412750 (r12, *((rsp + 0x18)), rbp, r13, *(rsp), r14);\n        rcx = rax;\n        eax = *(r14);\n        if (eax != 0) {\n            if (rcx == 0) {\n                goto label_6;\n            }\n        }\n        rax = *((rsp + 8));\n        *((rbx + 0xa8)) |= rax;\nlabel_1:\n        *((rsp + 0x28)) = 0xa;\n        rax = fcn_00408ca0 (rbx + 0x70, rbx + 0x80, r15, rcx, rsp + 0x20);\n        r15 = rax;\n        if (rax == 0) {\n            goto label_7;\n        }\nlabel_4:\n    } while (*((rbp + 8)) != 0xa);\n    rdx |= 0x800000;\n    rax = fcn_00410af0 (rbp, r12, r13);\n    rax = (int64_t) eax;\n    *((r12 + 0x48)) += rax;\n    eax = *((rbp + 8));\n    edx = eax;\n    edx &= 0xfffffff7;\n    if (dl != 2) {\n        goto label_0;\n    }\nlabel_5:\n    ecx = 0;\n    goto label_1;\nlabel_7:\n    *(r14) = 0xc;\n    goto label_2;\nlabel_6:\n    if (r15 == 0) {\n        goto label_3;\n    }\n    fcn_004064d0 (r15, 0x4076e0, 0);\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_004129f0",
            "funcStartAddr": "0x4129f0",
            "funcEndAddr": "0x4244bc",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4129f0 */\n#include <stdint.h>\n \nuint64_t fcn_004129f0 (uint32_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    size_t size;\n    size_t var_10h;\n    int64_t var_18h;\n    int64_t var_2ch;\n    int64_t var_30h;\n    int64_t var_40h;\n    int64_t var_48h;\n    void * ptr;\n    int64_t var_60h;\n    int64_t var_68h;\n    int64_t var_88h;\n    int64_t var_90h;\n    signed int64_t var_98h;\n    int64_t var_a0h;\n    int64_t var_a8h;\n    int64_t var_b0h;\n    uint32_t var_b8h;\n    int64_t var_c0h;\n    int64_t var_c8h;\n    int64_t var_d8h;\n    int64_t var_e8h;\n    int64_t var_e9h;\n    int64_t var_eah;\n    int64_t var_ebh;\n    int64_t var_f0h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\nlabel_18:\n    eax = abort ();\n    r14 = rsi;\n    r13 = rcx;\n    r12 = rdx;\n    *((rdi + 0x38)) &= 0x90;\n    *((rsp + 0x2c)) = 0;\n    rbx = *(rdi);\n    *((rdi + 0x18)) = rcx;\n    *((rdi + 0x10)) = 0;\n    *((rdi + 0x30)) = 0;\n    if (*((rdi + 8)) <= 0xe7) {\n        goto label_32;\n    }\nlabel_21:\n    rdi = rbx + 8;\n    rcx = rbx;\n    eax = 0;\n    *((rbp + 0x10)) = 0xe8;\n    rdi &= 0xfffffffffffffff8;\n    *(rbx) = 0;\n    *((rbx + 0xe0)) = 0;\n    rcx -= rdi;\n    ecx += 0xe8;\n    ecx >>= 3;\n    do {\n        *(rdi) = rax;\n        rcx--;\n        rdi += 8;\n    } while (rcx != 0);\n    rax = 0x555555555555554;\n    *((rbx + 0x80)) = 0xf;\n    if (r12 > rax) {\n        goto label_10;\n    }\n    rax = r12 + 1;\n    *((rbx + 8)) = rax;\n    rdi = rax;\n    rdi <<= 4;\n    *((rsp + 0x10)) = rax;\n    rax = malloc (rdi);\n    *(rbx) = rax;\n    if (r12 == 0) {\n        goto label_33;\n    }\n    esi = 1;\n    do {\n        rsi += rsi;\n    } while (r12 >= rsi);\n    r15 = rsi - 1;\nlabel_22:\n    rax = calloc (0x18, rsi);\n    *((rbx + 0x88)) = r15;\n    *((rbx + 0x40)) = rax;\n    eax = ctype_get_mb_cur_max ();\n    *((rbx + 0xb4)) = eax;\n    rax = nl_langinfo (0xe);\n    edx = *(rax);\n    edx &= 0xffffffdf;\n    if (dl == 0x55) {\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x54) {\n            goto label_34;\n        }\n        edx = *((rax + 2));\n        edx &= 0xffffffdf;\n        if (dl != 0x46) {\n            goto label_34;\n        }\n        edx = 0;\n        edi = 0x41654e;\n        ecx = 2;\n        dl = (*((rax + 3)) == 0x2d) ? 1 : 0;\n        rsi = rax + rdx + 3;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        al = (*((rax + 3)) > 0x2d) ? 1 : 0;\n        if (al != 0) {\n            goto label_34;\n        }\n        *((rbx + 0xb0)) |= 4;\n    }\nlabel_34:\n    eax = *((rbx + 0xb0));\n    edx = eax;\n    edx &= 0xfffffff7;\n    *((rbx + 0xb0)) = dl;\n    if (*((rbx + 0xb4)) > 1) {\n        if ((al & 4) == 0) {\n            goto label_35;\n        }\n        *((rbx + 0x78)) = 0x416f20;\n    }\nlabel_15:\n    if (*(rbx) == 0) {\n        goto label_10;\n    }\n    if (*((rbx + 0x40)) == 0) {\n        goto label_10;\n    }\n    rsi = rsp + 0x68;\n    eax = 0;\n    ecx = 0x12;\n    rdx = *((rbp + 0x28));\n    rdi = rsi;\n    *((rsp + 0x2c)) = 0;\n    *(rdi) = rax;\n    rcx--;\n    rdi += 8;\n    rax = r13;\n    *((rsp + 0xd8)) = rdx;\n    edi = *((rbx + 0xb4));\n    eax &= segment.LOAD0;\n    *((rsp + 0x60)) = r14;\n    *(rsp) = rax;\n    rsp + 0xe8 = (eax != 0) ? 1 : 0;\n    rdx |= rax;\n    eax = *((rbx + 0xb0));\n    sil = (rdx != 0) ? 1 : 0;\n    *((rsp + 0xb8)) = r12;\n    r15 = rdx;\n    ecx = eax;\n    al >>= 3;\n    *((rsp + 0xb0)) = r12;\n    cl >>= 2;\n    eax &= 1;\n    *((rsp + 0xeb)) = sil;\n    ecx &= 1;\n    *((rsp + 0xf0)) = edi;\n    *((rsp + 0xe9)) = cl;\n    *((rsp + 0xea)) = al;\n    *((rsp + 0xc8)) = r12;\n    *((rsp + 0xc0)) = r12;\n    if (r12 != 0) {\n        goto label_36;\n    }\nlabel_4:\n    if (sil != 0) {\n        r14 = *((rsp + 0x68));\n    }\n    *((rsp + 0x68)) = r14;\n    if (*(rsp) == 0) {\n        goto label_37;\n    }\n    if (edi <= 1) {\n        goto label_38;\n    }\nlabel_0:\n    eax = fcn_00406eb0 (rsp + 0x60);\n    if (eax != 0) {\n        goto label_39;\n    }\n    if (r12 <= *((rsp + 0x98))) {\n        goto label_40;\n    }\n    rsi = *((rsp + 0xa0));\n    rax = *((rbx + 0xb4));\n    rax += *((rsp + 0x90));\n    if (rsi > rax) {\n        goto label_40;\n    }\n    rsi += rsi;\n    eax = fcn_00406910 (rsp + 0x60, rsi);\n    do {\n    } while (rcx != 0);\n    if (eax == 0) {\n        goto label_0;\n    }\n    goto label_39;\nlabel_37:\n    if (edi > 1) {\n        goto label_41;\n    }\n    rcx = *((rsp + 0xa0));\n    if (r15 == 0) {\n        goto label_30;\n    }\n    rax = *((rsp + 0x90));\n    if (*((rsp + 0xb8)) <= rcx) {\n        rcx = *((rsp + 0xb8));\n    }\n    if (rcx > rax) {\n        goto label_42;\n    }\n    goto label_43;\n    do {\n        r14 = *((rsp + 0x68));\nlabel_42:\n        rdx = *((rsp + 0x60));\n        rsi = *((rsp + 0xd8));\n        rdx += rax;\n        rdx += *((rsp + 0x88));\n        edx = *(rdx);\n        edx = *((rsi + rdx));\n        *((r14 + rax)) = dl;\n        rax++;\n    } while (rcx != rax);\nlabel_30:\n    *((rsp + 0x90)) = rcx;\n    *((rsp + 0x98)) = rcx;\n    *((rsp + 0x2c)) = 0;\nlabel_16:\n    r12 = *(rbp);\n    *((rbp + 0x30)) = 0;\n    rdx = r13;\n    rdx |= 0x800000;\n    *((r12 + 0xd8)) = r13;\n    rax = fcn_00410af0 (rsp + 0x30, rsp + 0x60, rdx);\n    rax = (int64_t) eax;\n    rax = fcn_00412890 (rsp + 0x60, rbp, rsp + 0x30, r13, 0, rsp + 0x2c);\n    ecx = *((rsp + 0x2c));\n    if (ecx != 0) {\n        goto label_44;\n    }\n    r15 = r12 + 0x70;\n    *((rsp + 8)) = rax;\n    r13 = r12 + 0x80;\n    r12 = rsp + 0x40;\n    *((rsp + 0x48)) = 2;\n    rax = fcn_00408ca0 (r15, r13, 0, 0, r12);\n    r9 = *((rsp + 8));\n    r14 = rax;\n    rdx = rax;\n    if (r9 != 0) {\nlabel_25:\n        *((rsp + 0x48)) = 0x10;\n        rax = fcn_00408ca0 (r15, r13, r9, r14, r12);\n        rdx = r14;\n        r14 = rax;\n    }\n    r15 = *(rbp);\n    dl = (rdx == 0) ? 1 : 0;\n    al = (r14 == 0) ? 1 : 0;\n    dl |= al;\n    if (dl != 0) {\n        goto label_45;\n    }\n    r13 = *((r15 + 8));\n    *((rbx + 0x68)) = r14;\n    rdx = r13*8;\n    r13 *= 3;\n    rdi = rdx;\n    *((rsp + 8)) = rdx;\n    r13 <<= 3;\n    rax = malloc (rdi);\n    rdx = *((rsp + 8));\n    *((r15 + 0x18)) = rax;\n    r14 = rax;\n    rax = malloc (rdx);\n    *((r15 + 0x20)) = rax;\n    *((rsp + 0x10)) = rax;\n    rax = malloc (r13);\n    *((r15 + 0x28)) = rax;\n    *((rsp + 8)) = rax;\n    rax = malloc (r13);\n    rcx = *((rsp + 8));\n    rdx = *((rsp + 0x10));\n    *((r15 + 0x30)) = rax;\n    if (r14 == 0) {\n        goto label_46;\n    }\n    if (rdx == 0) {\n        goto label_46;\n    }\n    if (rcx == 0) {\n        goto label_46;\n    }\n    if (rax == 0) {\n        goto label_46;\n    }\n    r13 = *((rbp + 0x30));\n    rax = malloc (r13*8);\n    *((r15 + 0xe0)) = rax;\n    if (rax == 0) {\n        goto label_47;\n    }\n    edx = 0;\n    if (r13 == 0) {\n        goto label_48;\n    }\n    do {\n        *((rax + rdx*8)) = rdx;\n        rdx++;\n    } while (rdx != r13);\nlabel_48:\n    fcn_00408510 (*((r15 + 0x68)), 0x4081d0, r15);\n    rdx = *((rbp + 0x30));\n    if (rdx == 0) {\n        goto label_49;\n    }\n    rdi = *((r15 + 0xe0));\n    rax = *(rdi);\n    if (rax == 0) {\n        goto label_50;\n    }\n    goto label_47;\n    do {\n        if (*((rdi + rax*8)) != rax) {\n            goto label_47;\n        }\nlabel_50:\n        rax++;\n    } while (rax != rdx);\nlabel_31:\n    free (rdi);\n    *((r15 + 0xe0)) = 0;\nlabel_47:\n    eax = fcn_004064d0 (*((r15 + 0x68)), 0x409050, rbp);\n    if (eax != 0) {\n        goto label_39;\n    }\n    eax = fcn_004064d0 (*((r15 + 0x68)), 0x40b580, r15);\n    if (eax != 0) {\n        goto label_39;\n    }\n    fcn_00408510 (*((r15 + 0x68)), 0x408260, r15);\n    eax = fcn_00408510 (*((r15 + 0x68)), 0x407d60, r15);\n    if (eax != 0) {\n        goto label_39;\n    }\n    r13d = 0;\n    r14d = 0;\nlabel_2:\n    if (*((r15 + 0x10)) == r14) {\n        goto label_51;\n    }\n    do {\nlabel_1:\n        r9 = r14 * 3;\n        rax = *((r15 + 0x30));\n        r9 <<= 3;\n        if (*((rax + r9 + 8)) == 0) {\n            goto label_52;\n        }\n        r14++;\n    } while (*((r15 + 0x10)) != r14);\nlabel_51:\n    if (r13b == 0) {\n        goto label_53;\n    }\nlabel_3:\n    r13d = 0;\n    r14d = 0;\n    goto label_1;\nlabel_52:\n    *((rsp + 8)) = r9;\n    eax = fcn_00408740 (r12, r15, r14, 1);\n    if (eax != 0) {\n        goto label_39;\n    }\n    rax = *((r15 + 0x30));\n    r9 = *((rsp + 8));\n    r14++;\n    if (*((rax + r9 + 8)) != 0) {\n        goto label_2;\n    }\n    r13d = 1;\n    free (*((rsp + 0x50)));\n    if (*((r15 + 0x10)) != r14) {\n        goto label_1;\n    }\n    goto label_3;\nlabel_36:\n    eax = fcn_00406910 (rsp + 0x60, *((rsp + 0x10)));\n    if (eax != 0) {\n        goto label_39;\n    }\n    esi = *((rsp + 0xeb));\n    edi = *((rbx + 0xb4));\n    goto label_4;\nlabel_53:\n    if ((*((rbp + 0x38)) & 0x10) != 0) {\n        goto label_54;\n    }\n    if (*((rbp + 0x30)) == 0) {\n        goto label_54;\n    }\n    if ((*((r15 + 0xb0)) & 1) == 0) {\n        goto label_54;\n    }\nlabel_5:\n    rdi <<= 3;\n    rax = malloc (r14 + r14*2);\n    *((r15 + 0x38)) = rax;\n    if (rax == 0) {\n        goto label_55;\n    }\n    edx = 0;\n    if (r14 != 0) {\n        goto label_56;\n    }\n    goto label_24;\n    do {\n        rax = *((r15 + 0x38));\nlabel_56:\n        rcx = rdx * 3;\n        xmm0 = 0;\n        rdx++;\n        rax = rax + rcx*8;\n        __asm (\"movups xmmword [rax], xmm0\");\n        *((rax + 0x10)) = 0;\n        rax = *((r15 + 0x10));\n    } while (rax > rdx);\n    if (rax == 0) {\n        goto label_24;\n    }\n    *((rsp + 0x10)) = 0;\n    rax = *((r15 + 0x30));\nlabel_23:\n    rsi = *((rsp + 0x10));\n    r14d = 0;\n    rdx = rsi * 3;\n    rsi = rdx*8;\n    *((rsp + 0x18)) = rsi;\n    rsi += rax;\n    rcx = *((rsi + 0x10));\n    if (*((rsi + 8)) > 0) {\n        goto label_57;\n    }\n    goto label_58;\n    do {\n        rax = *((r15 + 0x30));\n        rsi = *((rsp + 0x18));\n        r14++;\n        rcx = *((rsp + 8));\n        if (r14 >= *((rax + rsi + 8))) {\n            goto label_58;\n        }\nlabel_57:\n        rax = *((rcx + r14*8));\n        *((rsp + 8)) = rcx;\n        rsi = rax * 3;\n        rax = *((r15 + 0x38));\n        al = fcn_004069b0 (rax + rsi*8, *((rsp + 0x10)));\n    } while (al != 0);\n    eax = 0xc;\nlabel_39:\n    *((rsp + 0x2c)) = eax;\n    r15 = *(rbp);\n    goto label_26;\nlabel_54:\n    if (*((r15 + 0x98)) != 0) {\n        goto label_5;\n    }\nlabel_24:\n    eax = *((rbx + 0xb0));\n    *((rsp + 0x2c)) = 0;\n    al >>= 2;\n    dl = (*(rsp) == 0) ? 1 : 0;\n    al &= dl;\n    if (al != 0) {\n        goto label_59;\n    }\nlabel_17:\n    rax = *((rbx + 0x68));\n    rax = *((rax + 0x18));\n    rax = *((rax + 0x38));\n    rdx = rax * 3;\n    *((rbx + 0x90)) = rax;\n    rax = *((rbx + 0x30));\n    eax = fcn_004090d0 (r12, rax + rdx*8);\n    r13d = eax;\n    *((rsp + 0x30)) = eax;\n    if (eax != 0) {\n        goto label_20;\n    }\n    if (*((rbx + 0x98)) <= 0) {\n        goto label_60;\n    }\n    r10 = *((rsp + 0x48));\n    if (r10 <= 0) {\n        goto label_60;\n    }\n    r9d = 0;\n    r14 = r12 + 0x10;\n    while (*((rcx + 8)) != 4) {\nlabel_6:\n        r9++;\n        if (r10 <= r9) {\n            goto label_60;\n        }\nlabel_8:\n        rdi = *((rsp + 0x50));\n        r8 = *(rbx);\n        rsi = *((rdi + r9*8));\n        rcx = *((rdi + r9*8));\n        rcx <<= 4;\n        rcx += r8;\n    }\n    edx = 0;\n    goto label_61;\nlabel_7:\n    rdx++;\n    if (r10 == rdx) {\n        goto label_6;\n    }\nlabel_61:\n    rax = *((rdi + rdx*8));\n    rax <<= 4;\n    rax += r8;\n    if (*((rax + 8)) != 9) {\n        goto label_7;\n    }\n    r11 = *(rcx);\n    if (*(rax) != r11) {\n        goto label_7;\n    }\n    rdx = *((rbx + 0x28));\n    rax = rsi * 3;\n    rax = rdx + rax*8;\n    rax = *((rax + 0x10));\n    r11 = *(rax);\n    rax = fcn_00408030 (r10, r14, *(rax));\n    if (rax != 0) {\n        goto label_6;\n    }\n    rax = *((rbx + 0x30));\n    rdx = r11 * 3;\n    eax = fcn_00408570 (r12, rax + rdx*8);\n    if (eax != 0) {\n        goto label_62;\n    }\n    r10 = *((rsp + 0x48));\n    r9d = 1;\n    if (r10 > r9) {\n        goto label_8;\n    }\nlabel_60:\n    rax = fcn_004092e0 (rsp + 0x30, rbx, r12, 0);\n    *((rbx + 0x48)) = rax;\n    if (rax == 0) {\n        goto label_63;\n    }\n    if (*((rax + 0x68)) < 0) {\n        goto label_64;\n    }\n    *((rbx + 0x60)) = rax;\n    *((rbx + 0x58)) = rax;\n    *((rbx + 0x50)) = rax;\nlabel_19:\n    free (*((rsp + 0x50)));\nlabel_20:\n    r12 = *(rbp);\n    *((rsp + 0x2c)) = r13d;\n    rdi = *((r12 + 0x70));\n    if (rdi == 0) {\n        goto label_65;\n    }\n    do {\n        r13 = *(rdi);\n        free (rdi);\n        rdi = r13;\n    } while (r13 != 0);\nlabel_65:\n    *((r12 + 0x70)) = 0;\n    *((r12 + 0x80)) = 0xf;\n    *((r12 + 0x68)) = 0;\n    free (*((r12 + 0x20)));\n    *((r12 + 0x20)) = 0;\n    fcn_00407c60 (rsp + 0x60);\n    eax = *((rsp + 0x2c));\n    if (eax != 0) {\n        goto label_66;\n    }\nlabel_9:\n    return rax;\nlabel_46:\n    *((rsp + 0x2c)) = 0xc;\nlabel_26:\n    rdi = *((r15 + 0x70));\n    if (rdi == 0) {\n        goto label_67;\n    }\n    do {\n        r12 = *(rdi);\n        free (rdi);\n        rdi = r12;\n    } while (r12 != 0);\nlabel_67:\n    *((r15 + 0x70)) = 0;\n    *((r15 + 0x80)) = 0xf;\n    *((r15 + 0x68)) = 0;\n    free (*((r15 + 0x20)));\n    *((r15 + 0x20)) = 0;\n    fcn_00407c60 (rsp + 0x60);\n    do {\nlabel_66:\n        fcn_0040b610 (rbx);\n        *(rbp) = 0;\n        eax = *((rsp + 0x2c));\n        *((rbp + 8)) = 0;\n        goto label_9;\nlabel_10:\n        *((rsp + 0x2c)) = 0xc;\n    } while (1);\nlabel_35:\n    rax = calloc (0x20, 1);\n    *((rbx + 0x78)) = rax;\n    if (rax == 0) {\n        goto label_10;\n    }\n    r15d = 0;\nlabel_14:\n    edx = r15*8;\n    ecx = 0;\n    while (eax == 0xffffffff) {\n        if (edi == 0) {\nlabel_12:\n            *((rbx + 0xb0)) |= 8;\n        }\nlabel_11:\n        ecx++;\n        edx++;\n        if (ecx == 0x40) {\n            goto label_68;\n        }\nlabel_13:\n        edi = edx;\n        *((rsp + 8)) = ecx;\n        *(rsp) = edx;\n        eax = btowc (edi);\n        edx = *(rsp);\n        ecx = *((rsp + 8));\n        edi = edx;\n        edi &= 0xffffff80;\n    }\n    r8 = *((rbx + 0x78));\n    r9d = 1;\n    r9 <<= cl;\n    r8 += r15;\n    *(r8) |= r9;\n    if (edi != 0) {\n        goto label_11;\n    }\n    if (eax != edx) {\n        goto label_12;\n    }\n    ecx++;\n    edx++;\n    if (ecx != 0x40) {\n        goto label_13;\n    }\nlabel_68:\n    r15 += 8;\n    if (r15 != 0x20) {\n        goto label_14;\n    }\n    goto label_15;\nlabel_41:\n    fcn_00406d00 (rsp + 0x60);\n    *((rsp + 0x2c)) = 0;\n    goto label_16;\nlabel_59:\n    if (*((rbp + 0x28)) != 0) {\n        goto label_17;\n    }\n    rdi = *((rbx + 0x10));\n    if (rdi == 0) {\n        goto label_69;\n    }\n    r8 = *(rbx);\n    r9d = 0;\n    ecx = 0;\n    rdx = r8;\nlabel_27:\n    if (*((rdx + 8)) > 0xc) {\n        goto label_18;\n    }\n    esi = *((rdx + 8));\n    /* switch table (13 cases) at 0x416e38 */\nlabel_64:\n    rax = fcn_004092e0 (rsp + 0x30, rbx, r12, 1);\n    *((rbx + 0x50)) = rax;\n    rax = fcn_004092e0 (rsp + 0x30, rbx, r12, 2);\n    *((rbx + 0x58)) = rax;\n    rax = fcn_004092e0 (rsp + 0x30, rbx, r12, 6);\n    *((rbx + 0x60)) = rax;\n    if (*((rbx + 0x50)) == 0) {\n        goto label_63;\n    }\n    if (*((rbx + 0x58)) == 0) {\n        goto label_63;\n    }\n    if (rax != 0) {\n        goto label_19;\n    }\nlabel_63:\n    r13d = *((rsp + 0x30));\n    goto label_20;\nlabel_38:\n    fcn_00406c80 (rsp + 0x60);\n    *((rsp + 0x2c)) = 0;\n    goto label_16;\nlabel_32:\n    rax = realloc (rbx, 0xe8);\n    rbx = rax;\n    if (rax == 0) {\n        goto label_70;\n    }\n    *((rbp + 8)) = 0xe8;\n    *(rbp) = rax;\n    goto label_21;\nlabel_33:\n    r15d = 0;\n    esi = 1;\n    goto label_22;\nlabel_58:\n    rsi = *((rsp + 0x10));\n    if (*((r15 + 0x10)) > rsi) {\n        goto label_23;\n    }\n    goto label_24;\nlabel_44:\n    if (rax == 0) {\n        goto label_71;\n    }\n    r15 = r12 + 0x70;\n    *((rsp + 8)) = rax;\n    r13 = r12 + 0x80;\n    r12 = rsp + 0x40;\n    *((rsp + 0x48)) = 2;\n    rax = fcn_00408ca0 (r15, r13, 0, 0, r12);\n    r9 = *((rsp + 8));\n    r14 = rax;\n    goto label_25;\nlabel_45:\n    *((rsp + 0x2c)) = 0xc;\n    *((rbx + 0x68)) = 0;\n    goto label_26;\nlabel_40:\n    *((rsp + 0x2c)) = 0;\n    goto label_16;\n    r9d = eax;\nlabel_29:\n    rcx++;\n    rdx += 0x10;\n    if (rcx != rdi) {\n        goto label_27;\n    }\n    r13b |= r9b;\n    if (r13b == 0) {\n        goto label_69;\n    }\n    rax = rcx;\n    rax <<= 4;\n    rax += r8;\n    while (dl != 1) {\n        if (dl == 5) {\n            *((r8 + 8)) = 7;\n        }\nlabel_28:\n        r8 += 0x10;\n        if (rax == r8) {\n            goto label_72;\n        }\n        edx = *((r8 + 8));\n    }\n    if (*(r8) >= 0) {\n        goto label_28;\n    }\n    *((r8 + 0xa)) &= 0xdf;\n    goto label_28;\n    __asm (\"cmovs r13d, eax\");\n    goto label_29;\n    esi = *(rdx);\n    if (esi == 0x20) {\n        goto label_29;\n    }\n    if (esi <= 0x20) {\n        goto label_73;\n    }\n    if (esi == 0x40) {\n        goto label_29;\n    }\n    if (esi == 0x80) {\n        goto label_29;\n    }\n    goto label_17;\n    rsi = *(rdx);\n    if (*((rsi + 0x10)) != 0) {\n        goto label_17;\n    }\n    if (*((rsi + 0x18)) == 0) {\n        goto label_29;\n    }\n    goto label_17;\nlabel_62:\n    r13d = eax;\n    goto label_20;\nlabel_73:\n    if (esi == 0x10) {\n        goto label_29;\n    }\n    goto label_17;\nlabel_43:\n    rcx = rax;\n    goto label_30;\nlabel_49:\n    rdi = *((r15 + 0xe0));\n    goto label_31;\nlabel_55:\n    *((rsp + 0x2c)) = 0xc;\n    r15 = *(rbp);\n    goto label_26;\nlabel_70:\n    eax = 0xc;\n    goto label_9;\nlabel_71:\n    *((rbx + 0x68)) = 0;\n    r15 = *(rbp);\n    goto label_26;\nlabel_69:\n    r9d = 0;\nlabel_72:\n    edx = *((rbx + 0xb0));\n    *((rbx + 0xb4)) = 1;\n    al = (*((rbx + 0x98)) > 0) ? 1 : 0;\n    eax |= r9d;\n    edx &= 0xfffffff9;\n    eax &= 1;\n    eax += eax;\n    eax |= edx;\n    *((rbx + 0xb0)) = al;\n    goto label_17;\n}\n"
        },
        {
            "funcName": "fcn_004137a0",
            "funcStartAddr": "0x4137a0",
            "funcEndAddr": "0x413807",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4137a0 */\n#include <stdint.h>\n \nint64_t fcn_004137a0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r8 = rdi;\n    rax = rcx;\n    rax >>= 0x19;\n    eax &= 1;\n    eax <<= 4;\n    edx = eax;\n    eax = *((rdi + 0x38));\n    eax &= 0xffffffef;\n    eax |= edx;\n    eax |= 0xffffff80;\n    *((rdi + 0x38)) = al;\n    eax = fcn_004129f0 (rdx, r8, rsi, *(0x0061d690));\n    if (eax != 0) {\n        rax = (int64_t) eax;\n        edx = 5;\n        edi = 0;\n        rsi = *((rax*8 + 0x416f40));\n        rsi += str.Success;\n        void (*0x401960)() ();\n    }\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00413820",
            "funcStartAddr": "0x413820",
            "funcEndAddr": "0x4138e3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x413820 */\n#include <stdint.h>\n \nint64_t fcn_00413820 (int64_t arg1, int64_t arg5) {\n    rdi = arg1;\n    r8 = arg5;\n    eax = 0;\n    rbp = *((rdi + 0x20));\n    rbx = rdi;\n    r12 = *(rdi);\n    rdi = rbp + 8;\n    rcx = rbp;\n    *(rbp) = 0;\n    *((rbp + 0xf8)) = 0;\n    rdi &= 0xfffffffffffffff8;\n    rcx -= rdi;\n    ecx += 0x100;\n    ecx >>= 3;\n    do {\n        *(rdi) = rax;\n        rcx--;\n        rdi += 8;\n    } while (rcx != 0);\n    rsi += 0x10;\n    fcn_0040c2d0 (rbx, *((r12 + 0x48)), rsi + 0x18, rbp, r8);\n    rax = *((r12 + 0x50));\n    if (*((r12 + 0x48)) != rax) {\n        fcn_0040c2d0 (rbx, rax + 0x10, rax + 0x18, rbp, r8);\n        rax = *((r12 + 0x48));\n    }\n    rsi = *((r12 + 0x58));\n    if (rsi != rax) {\n        rsi += 0x10;\n        fcn_0040c2d0 (rbx, rsi, rsi + 0x18, rbp, r8);\n        rax = *((r12 + 0x48));\n    }\n    rsi = *((r12 + 0x60));\n    if (rsi != rax) {\n        rsi += 0x10;\n        eax = fcn_0040c2d0 (rbx, rsi, rsi + 0x18, rbp, r8);\n    }\n    *((rbx + 0x38)) |= 8;\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004138f0",
            "funcStartAddr": "0x4138f0",
            "funcEndAddr": "0x413d45",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4138f0 */\n#include <stdint.h>\n \nint64_t fcn_004138f0 (int64_t arg_70h, int64_t arg_78h, int64_t arg1, size_t * arg2, signed int64_t arg3, signed int64_t arg4, signed int64_t arg5, int64_t arg6) {\n    size_t * size;\n    int64_t var_10h;\n    signed int64_t var_18h;\n    int64_t var_20h;\n    uint32_t var_28h;\n    int64_t var_2ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rax = r8;\n    r8 += rcx;\n    ebx = *((rsp + 0x78));\n    r12 = *((rsp + 0x70));\n    *((rsp + 0x28)) = ebx;\n    if (rcx < 0) {\n        goto label_11;\n    }\n    if (rcx > rdx) {\n        goto label_11;\n    }\n    rbx = rcx;\n    *((rsp + 8)) = rsi;\n    r15 = rdi;\n    if (r8 > rdx) {\n        goto label_12;\n    }\n    if (rax >= 0) {\n        if (rcx > r8) {\n            goto label_12;\n        }\n    }\n    if (r8 < 0) {\n        goto label_13;\n    }\n    if (rax < 0) {\n        if (rbx <= r8) {\n            goto label_13;\n        }\n    }\nlabel_6:\n    eax = *((r15 + 0x38));\n    ecx = eax;\n    cl >>= 5;\n    esi = ecx;\n    esi &= 3;\n    *((rsp + 0x2c)) = esi;\n    if (r8 > rbx) {\n        if (*((r15 + 0x20)) == 0) {\n            goto label_5;\n        }\n        if ((al & 8) == 0) {\n            goto label_14;\n        }\n    }\nlabel_5:\n    if ((al & 0x10) != 0) {\n        goto label_15;\n    }\n    if (r12 == 0) {\n        goto label_15;\n    }\n    eax &= 6;\n    rcx = *((r15 + 0x30));\n    if (al == 4) {\n        goto label_16;\n    }\nlabel_2:\n    r14 = rcx + 1;\n    r13 = r14;\nlabel_3:\n    rdi <<= 4;\nlabel_4:\n    *((rsp + 0x20)) = r9;\n    *((rsp + 0x18)) = rdx;\n    *((rsp + 0x10)) = r8;\n    rax = malloc (r14);\n    if (rax == 0) {\n        goto label_17;\n    }\n    eax = *((rsp + 0x34));\n    eax = fcn_0040e940 (r15, *((rsp + 0x28)), *((rsp + 0x38)), rbx, *((rsp + 0x30)), *((rsp + 0x40)));\n    if (eax != 0) {\n        r12 = 0xffffffffffffffff;\n        if (eax != 1) {\nlabel_0:\n            r12 = 0xfffffffffffffffe;\n        }\nlabel_1:\n        free (rbp);\nlabel_8:\n        rax = r12;\n        return rax;\n    }\n    if (r12 == 0) {\n        goto label_18;\n    }\n    eax = *((r15 + 0x38));\n    rdx = r13 + 1;\n    al >>= 1;\n    eax &= 3;\n    if (eax == 0) {\n        goto label_19;\n    }\n    if (eax == 1) {\n        goto label_20;\n    }\n    if (eax != 2) {\n        goto label_21;\n    }\n    if (r14 > *(r12)) {\n        goto label_22;\n    }\n    r9d = 2;\nlabel_7:\n    if (r13 <= 0) {\n        goto label_23;\n    }\n    r8 = *((r12 + 8));\n    rdi = *((r12 + 0x10));\n    rdx = r13;\n    eax = 0;\n    rsi = r13*8;\n    do {\n        rcx = *((rbp + rax*2));\n        *((r8 + rax)) = rcx;\n        rcx = *((rbp + rax*2 + 8));\n        *((rdi + rax)) = rcx;\n        rax += 8;\n    } while (rax != rsi);\nlabel_9:\n    if (*(r12) <= rdx) {\n        goto label_10;\n    }\n    rsi = *((r12 + 0x10));\n    rcx = *((r12 + 8));\n    rax = 0xffffffffffffffff;\n    do {\n        r13++;\n        *((rsi + rdx*8)) = rax;\n        *((rcx + rdx*8)) = rax;\n        rdx = r13;\n    } while (*(r12) > r13);\nlabel_10:\n    eax = *((r15 + 0x38));\n    r13d = r9 + r9;\n    eax &= 0xfffffff9;\n    eax |= r13d;\n    *((r15 + 0x38)) = al;\n    if ((al & 6) == 0) {\n        goto label_0;\n    }\nlabel_18:\n    r12 = *(rbp);\n    if (*((rsp + 0x28)) == 0) {\n        goto label_1;\n    }\n    if (rbx != r12) {\n        goto label_24;\n    }\n    rax = *((rbp + 8));\n    rax -= r12;\n    r12 = rax;\n    goto label_1;\nlabel_16:\n    r14 = *(r12);\n    if (r14 > rcx) {\n        goto label_2;\n    }\n    r13 = r14;\n    if (r14 > 0) {\n        goto label_3;\n    }\nlabel_15:\n    edi = 0x10;\n    r14d = 1;\n    r13d = 1;\n    r12d = 0;\n    goto label_4;\nlabel_14:\n    *((rsp + 0x20)) = r9;\n    *((rsp + 0x18)) = rdx;\n    *((rsp + 0x10)) = r8;\n    fcn_00413820 (r15, rsi);\n    eax = *((r15 + 0x38));\n    r9 = *((rsp + 0x20));\n    rdx = *((rsp + 0x18));\n    r8 = *((rsp + 0x10));\n    goto label_5;\nlabel_12:\n    r8 = rdx;\n    goto label_6;\nlabel_19:\n    r14 = rdx*8;\n    *((rsp + 8)) = rdx;\n    rax = malloc (r14);\n    rdx = *((rsp + 8));\n    *((r12 + 8)) = rax;\n    if (rax == 0) {\n        goto label_25;\n    }\n    *((rsp + 8)) = rdx;\n    *((rsp + 0x10)) = rax;\n    rax = malloc (r14);\n    rdx = *((rsp + 8));\n    rcx = *((rsp + 0x10));\n    *((r12 + 0x10)) = rax;\n    if (rax == 0) {\n        goto label_26;\n    }\n    *(r12) = rdx;\n    r9d = 1;\n    goto label_7;\nlabel_13:\n    eax = *((r15 + 0x38));\n    r8d = 0;\n    ecx = eax;\n    cl >>= 5;\n    esi = ecx;\n    esi &= 3;\n    *((rsp + 0x2c)) = esi;\n    goto label_5;\nlabel_11:\n    r12 = 0xffffffffffffffff;\n    goto label_8;\nlabel_17:\n    r12 = 0xfffffffffffffffe;\n    goto label_8;\nlabel_20:\n    r9d = 1;\n    if (*(r12) >= rdx) {\n        goto label_7;\n    }\n    rcx = rdx*8;\n    *((rsp + 0x18)) = r9b;\n    rsi = rcx;\n    *((rsp + 0x10)) = rdx;\n    *((rsp + 8)) = rcx;\n    rax = realloc (*((r12 + 8)), rsi);\n    r14 = rax;\n    if (rax != 0) {\n        rcx = *((rsp + 8));\n        rax = realloc (*((r12 + 0x10)), rcx);\n        rdx = *((rsp + 0x10));\n        r9d = *((rsp + 0x18));\n        if (rax == 0) {\n            goto label_27;\n        }\n        *((r12 + 8)) = r14;\n        *((r12 + 0x10)) = rax;\n        *(r12) = rdx;\n        goto label_7;\nlabel_23:\n        edx = 0;\n        r13d = 0;\n        goto label_9;\nlabel_26:\n        free (rcx);\n    }\nlabel_25:\n    r9d = 0;\n    goto label_10;\nlabel_27:\n    free (r14);\n    r9d = 0;\n    goto label_10;\nlabel_24:\n    assert_fail (\"pmatch[0].rm_so == start\", \"lib/regexec.c\", 0x1bd, \"re_search_stub\");\nlabel_22:\n    assert_fail (\"regs->num_regs >= nregs\", \"lib/regexec.c\", 0x1fa, \"re_copy_regs\");\nlabel_21:\n    return assert_fail (\"regs_allocated == REGS_FIXED\", \"lib/regexec.c\", 0x1f8, \"re_copy_regs\");\n}\n"
        },
        {
            "funcName": "fcn_00413d50",
            "funcStartAddr": "0x413d50",
            "funcEndAddr": "0x413e7b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x413d50 */\n#include <stdint.h>\n \nvoid fcn_00413d50 (int64_t arg_70h_2, int64_t arg_70h, int64_t arg_78h, int64_t arg1, void * arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    void * s2;\n    int64_t var_10h;\n    int64_t var_1ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r14 = rcx;\n    rcx = r9;\n    r12 = rdi;\n    rbx = rdx;\n    rdx = rbp;\n    rdx >>= 0x3f;\n    edi = edx;\n    r9 = *((rsp + 0x70));\n    r8d = *((rsp + 0x78));\n    rax = r9;\n    rax >>= 0x3f;\n    dil |= al;\n    if (dil != 0) {\n        goto label_2;\n    }\n    if (rbx < 0) {\n        goto label_2;\n    }\n    r15 = rbx;\n    r15 += rbp;\n    if (r15 overflow 0) {\n        goto label_2;\n    }\n    if (rbp == 0) {\n        goto label_3;\n    }\n    *((rsp + 8)) = rsi;\n    r13d = 0;\n    while (1) {\nlabel_1:\n        r8d = (int32_t) r8b;\n        rax = fcn_004138f0 (r12, r14, r15, rcx, *((rsp + 0x70)), r9);\n        rbx = rax;\n        free (r13);\nlabel_0:\n        rax = rbx;\n        return;\n        *((rsp + 0x1c)) = r8d;\n        *((rsp + 0x70)) = r9;\n        *((rsp + 0x10)) = rcx;\n        rax = malloc (r15);\n        r13 = rax;\n        if (rax == 0) {\n            goto label_2;\n        }\n        memcpy (rax, *((rsp + 8)), rbx);\n        memcpy (r13 + rbx, r14, rbp);\n        r14 = r13;\n        rcx = *((rsp + 0x10));\n        r9 = *((rsp + 0x70));\n        r8d = *((rsp + 0x1c));\n    }\nlabel_2:\n    rbx = 0xfffffffffffffffe;\n    goto label_0;\nlabel_3:\n    r14 = rsi;\n    r13d = 0;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00414120",
            "funcStartAddr": "0x414120",
            "funcEndAddr": "0x414135",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x414120 */\n#include <stdint.h>\n \nvoid fcn_00414120 (int64_t arg3, int64_t arg6) {\n    rdx = arg3;\n    r9 = arg6;\n    fcn_004138f0 (rdi, rsi, rdx, rcx, r8, rdx);\n}\n"
        },
        {
            "funcName": "fcn_004141c0",
            "funcStartAddr": "0x4141c0",
            "funcEndAddr": "0x41421d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4141c0 */\n#include <stdint.h>\n \nuint64_t fcn_004141c0 (int64_t arg1) {\n    rdi = arg1;\n    rax = fpending ();\n    ebx = *(rbp);\n    r12 = rax;\n    ebx &= 0x20;\n    eax = fcn_00414900 (rbp);\n    if (ebx != 0) {\n        goto label_1;\n    }\n    if (eax == 0) {\n        goto label_0;\n    }\n    if (r12 != 0) {\n        goto label_2;\n    }\n    rax = errno_location ();\n    al = (*(rax) != 9) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = -eax;\n    do {\nlabel_0:\n        return rax;\nlabel_1:\n        if (eax != 0) {\n            goto label_2;\n        }\n        errno_location ();\n        *(rax) = 0;\n        eax = 0xffffffff;\n    } while (1);\nlabel_2:\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00414220",
            "funcStartAddr": "0x414220",
            "funcEndAddr": "0x41427b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x414220 */\n#include <stdint.h>\n \nint64_t fcn_00414220 (int64_t arg1) {\n    rdi = arg1;\n    edx = *(rdi);\n    rax = rdi;\n    if (dl != 0x2f) {\n        goto label_1;\n    }\n    do {\n        rax++;\n        edx = *(rax);\n    } while (dl == 0x2f);\nlabel_1:\n    if (dl == 0) {\n        goto label_2;\n    }\n    rcx = rax;\n    esi = 0;\n    while (dl != 0x2f) {\n        if (sil != 0) {\n            rax = rcx;\n            esi = 0;\n        }\n        rcx++;\n        edx = *(rcx);\n        if (dl == 0) {\n            goto label_2;\n        }\nlabel_0:\n    }\n    rcx++;\n    edx = *(rcx);\n    esi = 1;\n    if (dl != 0) {\n        goto label_0;\n    }\nlabel_2:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00414280",
            "funcStartAddr": "0x414280",
            "funcEndAddr": "0x4142ab",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x414280 */\n#include <stdint.h>\n \nuint64_t fcn_00414280 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = strlen (rdi);\n    while (rdx != 1) {\n        rdx = rax - 1;\n        if (*((rbx + rax - 1)) != 0x2f) {\n            return rax;\n        }\n        rax = rdx;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00414300",
            "funcStartAddr": "0x414300",
            "funcEndAddr": "0x41431a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x414300 */\n#include <stdint.h>\n \nint32_t fcn_00414300 (int64_t arg1, int64_t arg2, int64_t arg4) {\n    rdi = arg1;\n    rsi = arg2;\n    rcx = arg4;\n    esi &= 0x80000;\n    eax = 0x406;\n    edx = 3;\n    if (esi != 0) {\n        esi = eax;\n    }\n    eax = 0;\n    return void (*0x414980)() ();\n}\n"
        },
        {
            "funcName": "fcn_00414320",
            "funcStartAddr": "0x414320",
            "funcEndAddr": "0x41437e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x414320 */\n#include <stdint.h>\n \nuint64_t fcn_00414320 (int32_t category) {\n    rdi = category;\n    rax = setlocale (rdi, 0);\n    rdx = rax;\n    eax = 1;\n    if (rdx != 0) {\n        ecx = 2;\n        edi = 0x417170;\n        rsi = rdx;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (rdx > 0) ? 1 : 0;\n        eax = 0;\n        if (cl != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    edi = \"POSIX\";\n    ecx = 6;\n    rsi = rdx;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (cl > 0) ? 1 : 0;\n    al = (al != 0) ? 1 : 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00414380",
            "funcStartAddr": "0x414380",
            "funcEndAddr": "0x4148e2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x414380 */\n#include <stdint.h>\n \nuint64_t fcn_00414380 (void) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_60h;\n    rax = nl_langinfo (0xe);\n    r15 = imp.__libc_start_main;\n    rbx = rax;\n    eax = 0x4164a7;\n    if (rax == 0) {\n        rbx = rax;\n    }\n    if (r15 == 0) {\n        goto label_15;\n    }\nlabel_1:\n    ebp = *(r15);\n    if (bpl != 0) {\n        goto label_16;\n    }\n    goto label_17;\n    do {\nlabel_0:\n        strlen (r15);\n        rbp = r15 + rax + 1;\n        strlen (rbp);\n        r15 = rbp + rax + 1;\n        ebp = *(r15);\n        if (bpl == 0) {\n            goto label_17;\n        }\nlabel_16:\n        eax = strcmp (rbx, r15);\n        if (eax == 0) {\n            goto label_18;\n        }\n    } while (bpl != 0x2a);\n    if (*((r15 + 1)) != 0) {\n        goto label_0;\n    }\nlabel_18:\n    strlen (r15);\n    rbx = r15 + rax + 1;\nlabel_17:\n    eax = \"ASCII\";\n    if (*(rbx) == 0) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\nlabel_15:\n    rax = getenv (\"CHARSETALIASDIR\");\n    r13 = rax;\n    if (rax == 0) {\n        goto label_19;\n    }\n    if (*(rax) == 0) {\n        goto label_19;\n    }\n    rax = strlen (rax);\n    r12 = rax;\n    r14 = rax;\n    if (rax != 0) {\n        goto label_20;\n    }\nlabel_13:\n    rax = malloc (0xe);\n    if (rax != 0) {\n        goto label_21;\n    }\n    do {\n        r15d = 0x4164a7;\nlabel_2:\n        *(0x0061d678) = r15;\n        goto label_1;\nlabel_19:\n        r12d = 0x65;\n        r14d = 0x64;\n        r13d = \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\";\nlabel_14:\n        rax = malloc (0x73);\n    } while (rax == 0);\n    memcpy (rbp, r13, r14);\n    *((rbp + r14)) = 0x2f;\n    do {\n        r12 += rbp;\n        rax = 0x2e74657372616863;\n        *(r12) = rax;\n        eax = 0x73;\n        *((r12 + 0xc)) = ax;\n        eax = 0;\n        *((r12 + 8)) = 0x61696c61;\n        eax = open (rbp, 0, rdx);\n        r12d = eax;\n        if (eax >= 0) {\n            goto label_22;\n        }\nlabel_6:\n        r15d = 0x4164a7;\nlabel_7:\n        free (rbp);\n        goto label_2;\nlabel_21:\n        eax = memcpy (rbp, r13, r14);\n    } while (1);\nlabel_22:\n    esi = 0x416503;\n    edi = eax;\n    r15d = 0;\n    rax = fdopen ();\n    *((rsp + 8)) = 0;\n    r13 = rax;\n    if (rax == 0) {\n        goto label_23;\n    }\n    rax = rbx;\n    r12 = rsp + 0x60;\n    r14 = rsp + 0x20;\n    rbx = r13;\n    r13 = rax;\n    do {\nlabel_3:\n        rax = *((rbx + 8));\n        if (rax >= *((rbx + 0x10))) {\n            goto label_24;\n        }\nlabel_4:\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        edi = *(rax);\nlabel_5:\n        eax = rdi - 9;\n    } while (eax <= 1);\n    if (edi == 0x20) {\n        goto label_3;\n    }\n    if (edi == 0x23) {\n        goto label_25;\n    }\n    eax = ungetc (rdi, rbx);\n    eax = 0;\n    rcx = r12;\n    rdx = r14;\n    eax = fscanf (rbx, \"%50s %50s\");\n    if (eax <= 1) {\n        goto label_12;\n    }\n    rcx = r14;\n    do {\n        edx = *(rcx);\n        rcx += 4;\n        eax = rdx - 0x1010101;\n        edx = ~edx;\n        eax &= edx;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    edx = eax;\n    edx >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = edx;\n    }\n    rdx = rcx + 2;\n    if ((eax & 0x8080) == 0) {\n        rcx = rdx;\n    }\n    edx = eax;\n    dl += al;\n    rdx = r12;\n    rcx -= 3;\n    rcx -= r14;\n    do {\n        esi = *(rdx);\n        rdx += 4;\n        eax = rsi - 0x1010101;\n        esi = ~esi;\n        eax &= esi;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    esi = eax;\n    *((rsp + 0x10)) = rcx;\n    esi >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = esi;\n    }\n    rsi = rdx + 2;\n    if ((eax & 0x8080) == 0) {\n        rdx = rsi;\n    }\n    esi = eax;\n    sil += al;\n    rdx -= 3;\n    rdx -= r12;\n    rax = rcx + rdx;\n    *((rsp + 0x18)) = rdx;\n    if (*((rsp + 8)) != 0) {\n        goto label_26;\n    }\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    rax = malloc (rax + 3);\n    rcx = *((rsp + 0x10));\n    rdx = *((rsp + 0x18));\nlabel_9:\n    if (rax == 0) {\n        goto label_27;\n    }\n    rdi = *((rsp + 8));\n    rsi = 0xfffffffffffffffe;\n    rsi -= rcx;\n    rcx++;\n    rdi -= rdx;\n    rsi += rdi;\n    rsi += rax;\n    if (ecx >= 8) {\n        goto label_28;\n    }\n    if ((cl & 4) != 0) {\n        goto label_29;\n    }\n    if (ecx != 0) {\n        r9d = *(r14);\n        *(rsi) = r9b;\n        if ((cl & 2) != 0) {\n            goto label_30;\n        }\n    }\nlabel_10:\n    rdx++;\n    rcx = rax + rdi - 1;\n    if (edx >= 8) {\n        goto label_31;\n    }\n    if ((dl & 4) != 0) {\n        goto label_32;\n    }\n    if (edx != 0) {\n        esi = *(r12);\n        *(rcx) = sil;\n        if ((dl & 2) != 0) {\n            goto label_33;\n        }\n    }\nlabel_11:\n    r15 = rax;\n    rax = *((rbx + 8));\n    if (rax < *((rbx + 0x10))) {\n        goto label_4;\n    }\nlabel_24:\n    rdi = rbx;\n    eax = uflow ();\n    edi = eax;\n    if (eax != 0xffffffff) {\n        goto label_5;\n    }\nlabel_12:\n    rax = r13;\n    r13 = rbx;\n    rbx = rax;\n    fcn_00414900 (rbx);\n    rax = *((rsp + 8));\n    if (rax == 0) {\n        goto label_6;\n    }\n    *((r15 + rax)) = 0;\n    goto label_7;\n    do {\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        eax = *(rax);\n        edx = 1;\nlabel_8:\n        if (eax == 0xa) {\n            goto label_34;\n        }\n        if (dl == 0) {\n            goto label_34;\n        }\nlabel_25:\n        rax = *((rbx + 8));\n    } while (rax < *((rbx + 0x10)));\n    rdi = rbx;\n    eax = uflow ();\n    dl = (eax != 0xffffffff) ? 1 : 0;\n    goto label_8;\nlabel_26:\n    rax += *((rsp + 8));\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    eax = realloc (r15, rax + 3);\n    rdx = *((rsp + 0x18));\n    rcx = *((rsp + 0x10));\n    goto label_9;\nlabel_28:\n    r9 = *(r14);\n    *(rsi) = r9;\n    r9d = ecx;\n    r10 = *((r14 + r9 - 8));\n    *((rsi + r9 - 8)) = r10;\n    r9 = rsi + 8;\n    r10 = r14;\n    r9 &= 0xfffffffffffffff8;\n    rsi -= r9;\n    ecx += esi;\n    r10 -= rsi;\n    ecx &= 0xfffffff8;\n    if (ecx < 8) {\n        goto label_10;\n    }\n    ecx &= 0xfffffff8;\n    esi = 0;\n    do {\n        r8d = esi;\n        esi += 8;\n        r11 = *((r10 + r8));\n        *((r9 + r8)) = r11;\n    } while (esi < ecx);\n    goto label_10;\nlabel_31:\n    rsi = *(r12);\n    r9 = r12;\n    *(rcx) = rsi;\n    esi = edx;\n    rdi = *((r12 + rsi - 8));\n    *((rcx + rsi - 8)) = rdi;\n    rdi = rcx + 8;\n    rdi &= 0xfffffffffffffff8;\n    rcx -= rdi;\n    edx += ecx;\n    r9 -= rcx;\n    edx &= 0xfffffff8;\n    if (edx < 8) {\n        goto label_11;\n    }\n    edx &= 0xfffffff8;\n    ecx = 0;\n    do {\n        esi = ecx;\n        ecx += 8;\n        r8 = *((r9 + rsi));\n        *((rdi + rsi)) = r8;\n    } while (ecx < edx);\n    goto label_11;\nlabel_34:\n    if (eax == 0xffffffff) {\n        goto label_12;\n    }\n    goto label_3;\nlabel_20:\n    if (*((r13 + rax - 1)) == 0x2f) {\n        rdi = rax + 0xe;\n        goto label_13;\nlabel_23:\n        close (r12d);\n        goto label_6;\nlabel_29:\n        r9d = *(r14);\n        *(rsi) = r9d;\n        r9d = *((r14 + rcx - 4));\n        *((rsi + rcx - 4)) = r9d;\n        goto label_10;\nlabel_32:\n        esi = *(r12);\n        *(rcx) = esi;\n        esi = *((r12 + rdx - 4));\n        *((rcx + rdx - 4)) = esi;\n        goto label_11;\nlabel_27:\n        rax = r13;\n        r13 = rbx;\n        r15d = 0x4164a7;\n        rbx = rax;\n        free (r15);\n        fcn_00414900 (r13);\n        goto label_7;\nlabel_30:\n        r9d = *((r14 + rcx - 2));\n        *((rsi + rcx - 2)) = r9w;\n        goto label_10;\nlabel_33:\n        esi = edx;\n        edx = *((r12 + rsi - 2));\n        *((rcx + rsi - 2)) = dx;\n        goto label_11;\n    }\n    rdi = rax + 0xf;\n    r12++;\n    goto label_14;\n}\n"
        },
        {
            "funcName": "fcn_004148f0",
            "funcStartAddr": "0x4148f0",
            "funcEndAddr": "0x414ab5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x4148f0 */\n#include <stdint.h>\n \nuint64_t fcn_004148f0 (int64_t arg_70h, int64_t arg1, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_30h;\n    int64_t var_38h;\n    rdi = arg1;\n    rcx = arg4;\n    edx = 3;\n    esi = 0;\n    eax = 0;\n    while (1) {\nlabel_2:\n        rax = rsp + 0x70;\n        *((rsp + 0x30)) = rdx;\n        *((rsp + 0x10)) = rax;\n        rax = rsp + 0x20;\n        *((rsp + 0x38)) = rcx;\n        *((rsp + 8)) = 0x10;\n        *((rsp + 0x18)) = rax;\n        if (esi != 0x406) {\n            goto label_4;\n        }\n        r12d = *((rax + 0x10));\n        eax = imp.__libc_start_main;\n        *((rsp + 8)) = 0x18;\n        edx = r12d;\n        if (eax >= 0) {\n            eax = 0;\n            eax = fcntl ();\n            ebx = eax;\n            if (eax < 0) {\n                goto label_5;\n            }\nlabel_1:\n            *(0x0061d680) = 1;\nlabel_0:\n            eax = ebx;\n            return rax;\n        }\n        eax = 0;\n        eax = void (*0x414980)(uint64_t, uint64_t, uint64_t) (rdi, 0, rdx);\n    }\n    ebx = eax;\n    if (eax < 0) {\n        goto label_0;\n    }\n    if (*(0x0061d680) != 0xffffffff) {\n        goto label_0;\n    }\nlabel_3:\n    eax = 0;\n    esi = 1;\n    edi = ebx;\n    eax = fcntl ();\n    if (eax < 0) {\n        goto label_6;\n    }\n    eax |= 1;\n    esi = 2;\n    edi = ebx;\n    edx = eax;\n    eax = 0;\n    eax = fcntl ();\n    if (eax != 0xffffffff) {\n        goto label_0;\n    }\nlabel_6:\n    rax = errno_location ();\n    ebx = 0xffffffff;\n    r12d = *(rax);\n    close (ebx);\n    *(rbp) = r12d;\n    goto label_0;\nlabel_4:\n    rax = *((rsp + 0x18));\n    rdx = *((rax + 0x10));\n    eax = 0;\n    eax = fcntl ();\n    ebx = eax;\n    return rax;\nlabel_5:\n    rax = errno_location ();\n    if (*(rax) != 0x16) {\n        goto label_1;\n    }\n    eax = 0;\n    eax = void (*0x414980)(uint64_t, uint64_t, uint64_t) (ebp, 0, r12d);\n    goto label_2;\n    ebx = eax;\n    if (eax < 0) {\n        goto label_0;\n    }\n    *(0x0061d680) = 0xffffffff;\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_00414900",
            "funcStartAddr": "0x414900",
            "funcEndAddr": "0x41497b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x414900 */\n#include <stdint.h>\n \nuint64_t fcn_00414900 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    eax = fileno (rdi);\n    rdi = rbx;\n    if (eax < 0) {\n        goto label_1;\n    }\n    eax = freading ();\n    while (rax != -1) {\n        eax = fcn_00414ac0 (rbx);\n        if (eax == 0) {\n            goto label_2;\n        }\n        rax = errno_location ();\n        r12d = *(rax);\n        fclose (rbx);\n        if (r12d != 0) {\n            goto label_3;\n        }\nlabel_0:\n        return rax;\n        eax = fileno (rbx);\n        esi = 0;\n        edx = 1;\n        edi = eax;\n        rax = lseek ();\n    }\nlabel_2:\n    rdi = rbx;\nlabel_1:\n    void (*0x401940)() ();\nlabel_3:\n    *(rbp) = r12d;\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00414ac0",
            "funcStartAddr": "0x414ac0",
            "funcEndAddr": "0x414b00",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x414ac0 */\n#include <stdint.h>\n \nuint32_t fcn_00414ac0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    if (rdi != 0) {\n        eax = freading ();\n        if (eax == 0) {\n            goto label_0;\n        }\n        if ((*(rbx) & 0x100) != 0) {\n            goto label_1;\n        }\n    }\nlabel_0:\n    rdi = rbx;\n    void (*0x401b00)() ();\nlabel_1:\n    fcn_004055d0 (rbx, 0, 1);\n    rdi = rbx;\n    return fflush ();\n}\n"
        },
        {
            "funcName": "fcn_00414b70",
            "funcStartAddr": "0x414b70",
            "funcEndAddr": "0x414b88",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x414b70 */\n#include <stdint.h>\n \nint64_t fcn_00414b70 (void) {\n    rax = 0x61b268;\n    edx = 0;\n    if (rax != 0) {\n        rdx = *(rax);\n    }\n    esi = 0;\n    return cxa_atexit ();\n}\n"
        },
        {
            "funcName": "fcn_00414b88",
            "funcStartAddr": "0x414b88",
            "funcEndAddr": "0x414ba8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tac.elf @ 0x414b88 */\n#include <stdint.h>\n \nvoid fcn_00414b88 (int64_t arg3) {\n    rdx = arg3;\n    ebx = segment.GNU_RELRO;\n    do {\n        rax = *(rbx);\n        if (rax == -1) {\n            goto label_0;\n        }\n        void (*rax)() ();\n        rbx -= 8;\n    } while (1);\nlabel_0:\n}\n"
        }
    ],
    "funcCount": 120
}