{
    "binaryInfo": {
        "isStripped": true,
        "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf"
    },
    "buildInfo": {
        "decompilerName": "radare2",
        "compilerName": "gcc",
        "compilerVersion": "9.4.0",
        "optLevel": "O"
    },
    "funcInfo": [
        {
            "funcName": "main",
            "funcStartAddr": "0x401a40",
            "funcEndAddr": "0x401df4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x401a40 */\n#include <stdint.h>\n \nint32_t main (int32_t argc, char ** argv) {\n    rdi = argc;\n    rsi = argv;\n    r14 = 0xffffffffffffffff;\n    r12d = 0;\n    rdi = *(rsi);\n    rbx = rsi;\n    fcn_00403790 (*(rdi));\n    setlocale (6, 0x409507);\n    bindtextdomain (0x4075d9, \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\");\n    textdomain (0x4075d9, rsi);\n    edi = 0x4031d0;\n    fcn_004074f0 ();\n    *(0x0060b313) = 0;\n    *(0x0060b314) = 0;\n    *(0x0060b311) = 0;\n    *(0x0060b2fa) = 0;\n    do {\nlabel_0:\n        r8d = 0;\n        ecx = 0x407fa0;\n        edx = \"b:c:d:f:nsz\";\n        rsi = rbx;\n        edi = ebp;\n        eax = fcn_00406ac0 ();\n        if (eax == 0xffffffff) {\n            goto label_5;\n        }\n        if (eax == 0x66) {\n            goto label_6;\n        }\n        if (eax <= 0x66) {\n            goto label_7;\n        }\n        if (eax == 0x7a) {\n            goto label_8;\n        }\n        if (eax > 0x7a) {\n            goto label_9;\n        }\n    } while (eax == 0x6e);\n    if (eax != 0x73) {\n        goto label_10;\n    }\n    *(0x0060b313) = 1;\n    goto label_0;\nlabel_7:\n    if (eax <= 0x63) {\n        if (eax >= 0x62) {\n            goto label_11;\n        }\n        if (eax == 0xffffff7d) {\n            eax = 0;\n            rcx = *(str.8.29);\n            r9d = \"David MacKenzie\";\n            r8d = \"David M. Ihnat\";\n            fcn_00405830 (*(obj.stdout), 0x40755b, \"GNU coreutils\");\n            eax = exit (0);\nlabel_9:\n            if (eax == 0x80) {\n                rdx = imp.__libc_start_main;\n                *(0x0060b310) = 1;\n                eax = 1;\n                if (*(rdx) != 0) {\n                    eax = 0;\n                    rcx = r14;\n                    rdi = rdx;\n                    __asm (\"repne scasb al, byte [rdi]\");\n                    rax = rcx;\n                    rax = ~rax;\n                    rax--;\n                }\n                *(0x0060b308) = rax;\n                rax = fcn_00405ba0 (rdx);\n                *(0x0060b300) = rax;\n                goto label_0;\n            }\n            if (eax != 0x81) {\n                goto label_10;\n            }\n            *(0x0060b312) = 1;\n            goto label_0;\n        }\n        if (eax != 0xffffff7e) {\n            goto label_10;\n        }\n        eax = fcn_004026b0 (0);\n    }\n    if (eax != 0x64) {\n        goto label_10;\n    }\n    rdx = imp.__libc_start_main;\n    eax = *(rdx);\n    if (al != 0) {\n        if (*((rdx + 1)) != 0) {\n            goto label_12;\n        }\n    }\n    *(0x0060b311) = al;\n    r12d = 1;\n    goto label_0;\nlabel_11:\n    edx = imp.__libc_start_main;\n    if (edx != 0) {\n        goto label_13;\n    }\n    *(0x0060b314) = 1;\n    r13 = imp.__libc_start_main;\n    goto label_0;\nlabel_6:\n    eax = imp.__libc_start_main;\n    if (eax != 0) {\n        goto label_13;\n    }\n    *(0x0060b314) = 2;\n    r13 = imp.__libc_start_main;\n    goto label_0;\nlabel_8:\n    *(0x0060b230) = 0;\n    goto label_0;\nlabel_5:\n    eax = imp.__libc_start_main;\n    edx = 5;\n    esi = \"you must specify a list of bytes, characters, or fields\";\n    if (eax == 0) {\n        goto label_4;\n    }\n    dl = (eax != 2) ? 1 : 0;\n    if (eax != 2) {\n        if (r12b != 0) {\n            goto label_14;\n        }\n    }\n    if ((*(0x0060b313) & dl) != 0) {\n        goto label_15;\n    }\n    sil = (eax != 2) ? 1 : 0;\n    esi <<= 2;\n    eax -= eax;\n    eax = ~eax;\n    eax &= 2;\n    esi |= eax;\n    fcn_00402bd0 (r13, 0, rdx);\n    if (r12b == 0) {\n        *(0x0060b311) = 9;\n    }\n    if (*(0x0060b300) == 0) {\n        goto label_16;\n    }\nlabel_2:\n    eax = *(0x0060b2bc);\n    if (eax == ebp) {\n        goto label_17;\n    }\n    r12d = 1;\n    if (eax >= ebp) {\n        goto label_3;\n    }\n    do {\n        rax = (int64_t) eax;\n        eax = fcn_00401ee0 (*((rbx + rax*8)));\n        r12d &= eax;\n        eax = *(0x0060b2bc);\n        eax++;\n        *(0x0060b2bc) = eax;\n    } while (eax < ebp);\nlabel_3:\n    while (eax != 0) {\nlabel_1:\n        r12d ^= 1;\n        eax = (int32_t) r12b;\n        return rax;\n        eax = fcn_00405c20 (*(obj.stdin));\n        eax++;\n    }\n    rax = errno_location ();\n    r12d = 0;\n    eax = 0;\n    error (0, *(rax), 0x4094ea);\n    goto label_1;\nlabel_16:\n    eax = *(0x0060b311);\n    *(0x0060b2f9) = 0;\n    *(0x0060b300) = 0x60b2f8;\n    *(0x0060b2f8) = al;\n    *(0x0060b308) = 1;\n    goto label_2;\nlabel_17:\n    eax = fcn_00401ee0 (0x4094ea);\n    r12d = eax;\n    goto label_3;\nlabel_13:\n    edx = 5;\n    do {\nlabel_4:\n        rax = dcgettext (0, \"only one type of list may be specified\");\n        eax = 0;\n        error (0, 0, rax);\nlabel_10:\n        fcn_004026b0 (1);\nlabel_12:\n        edx = 5;\n        esi = \"the delimiter must be a single character\";\n    } while (1);\nlabel_15:\n    edx = 5;\n    esi = \"suppressing non-delimited lines makes sense\\n\\tonly when operating on fields\";\n    goto label_4;\nlabel_14:\n    edx = 5;\n    esi = \"an input delimiter may be specified only when operating on fields\";\n    goto label_4;\n}\n"
        },
        {
            "funcName": "fcn_00401e2b",
            "funcStartAddr": "0x401e2b",
            "funcEndAddr": "0x401e4a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x401e2b */\n#include <stdint.h>\n \nint32_t fcn_00401e2b (void) {\n    eax = __progname;\n    if (rax != obj.__progname) {\n        eax = 0;\n        if (rax == 0) {\n            goto label_0;\n        }\n        edi = __progname;\n        void (*rax)() ();\n    }\nlabel_0:\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00401e81",
            "funcStartAddr": "0x401e81",
            "funcEndAddr": "0x401ed8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x401e81 */\n#include <stdint.h>\n \nint64_t fcn_00401e81 (int32_t argc, func fini, func init, func main, func rtld_fini, void * stack_end, char ** ubp_av) {\n    rsi = argc;\n    r8 = fini;\n    rcx = init;\n    rdi = main;\n    r9 = rtld_fini;\n    xmm0 = stack_end;\n    rdx = ubp_av;\n    if (*(0x0060b2e8) != 0) {\n        goto label_0;\n    }\n    r12d = section..dtors;\n    ebx = 0x60ae48;\n    rbx -= section..dtors;\n    rbx >>= 3;\n    rbx--;\n    do {\n        rax = imp.__libc_start_main;\n        if (rax >= rbx) {\n            goto label_1;\n        }\n        rax++;\n        *(0x0060b2f0) = rax;\n        uint64_t (*r12 + rax*8)() ();\n    } while (1);\nlabel_1:\n    fcn_00401e2b ();\n    *(0x0060b2e8) = 1;\n    return rax;\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00401ed8",
            "funcStartAddr": "0x401ed8",
            "funcEndAddr": "0x401f6b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x401ed8 */\n#include <stdint.h>\n \nint64_t fcn_00401ed8 (void) {\n    do {\n        esi = __progname;\n        ecx = 2;\n        rsi -= obj.__progname;\n        rsi >>= 3;\n        rax = rsi;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rsi = rax;\n        if (rax != 0) {\n            eax = 0;\n            if (rax == 0) {\n                goto label_0;\n            }\n            edi = __progname;\n            void (*rax)() ();\n        }\nlabel_0:\n        return rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00401ee0",
            "funcStartAddr": "0x401ee0",
            "funcEndAddr": "0x4026af",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x401ee0 */\n#include <stdint.h>\n \nvoid fcn_00401ee0 (int64_t arg1) {\n    int64_t var_bh;\n    int64_t var_ch;\n    rdi = arg1;\n    rsi = rdi;\n    ecx = 2;\n    r14 = rdi;\n    edi = 0x4094ea;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (? > ?) ? 1 : 0;\n    if (al != 0) {\n        goto label_25;\n    }\n    *(0x0060b2fa) = 1;\n    r13 = stdin;\nlabel_15:\n    fcn_00403280 (r13, 2);\n    rax = imp.__libc_start_main;\n    *(0x0060b328) = rax;\n    if (*(0x0060b314) == 1) {\n        goto label_26;\n    }\n    rax = *((r13 + 8));\n    if (rax >= *((r13 + 0x10))) {\n        goto label_27;\n    }\n    rdx = rax + 1;\n    *((r13 + 8)) = rdx;\n    edi = *(rax);\nlabel_5:\n    ebx = 1;\n    ungetc (rdi, r13);\n    rax = imp.__libc_start_main;\n    r15b = (*(rax) > 1) ? 1 : 0;\n    r15b ^= *(0x0060b313);\n    ebp = 0;\n    edx = 0;\n    *((rsp + 0xb)) = r15b;\nlabel_6:\n    r12b = (rbx == 1) ? 1 : 0;\n    r12b &= *((rsp + 0xb));\n    if (r12b != 0) {\n        goto label_28;\n    }\nlabel_3:\n    rax = imp.__libc_start_main;\n    r12d = edx;\nlabel_10:\n    if (*(rax) > rbx) {\n        goto label_29;\n    }\n    if (bpl == 0) {\n        goto label_30;\n    }\n    rcx = stdout;\n    rdx = imp.__libc_start_main;\n    esi = 1;\n    rdi = imp.__libc_start_main;\n    rax = fwrite_unlocked ();\n    while (rax < *((r13 + 0x10))) {\n        rdx = rax + 1;\n        *((r13 + 8)) = rdx;\n        ebp = *(rax);\nlabel_0:\n        edx = *(0x0060b311);\n        eax = *(0x0060b230);\n        ecx = edx;\n        edi = edx;\n        r15d = edx;\n        if (ebp == edx) {\n            goto label_31;\n        }\n        edx = (int32_t) al;\n        if (ebp == edx) {\n            goto label_32;\n        }\n        if (ebp == 0xffffffff) {\n            goto label_33;\n        }\n        rdi = stdout;\n        rax = *((rdi + 0x28));\n        if (rax >= *((rdi + 0x30))) {\n            goto label_34;\n        }\n        rdx = rax + 1;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = bpl;\nlabel_2:\n        r12d = ebp;\nlabel_30:\n        rax = *((r13 + 8));\n    }\n    rdi = r13;\n    eax = uflow ();\n    goto label_0;\n    do {\n        rdx = rax + 1;\n        *((r13 + 8)) = rdx;\n        r15d = *(rax);\nlabel_1:\n        edx = *(0x0060b311);\n        eax = *(0x0060b230);\n        ecx = edx;\n        edi = edx;\n        if (edx == r15d) {\n            goto label_35;\n        }\n        edx = (int32_t) al;\n        if (r15d == edx) {\n            goto label_36;\n        }\n        if (r15d == 0xffffffff) {\n            goto label_37;\n        }\n        r12d = r15d;\nlabel_29:\n        rax = *((r13 + 8));\n    } while (rax < *((r13 + 0x10)));\n    rdi = r13;\n    eax = uflow ();\n    r15d = eax;\n    goto label_1;\nlabel_34:\n    esi = (int32_t) bpl;\n    al = overflow ();\n    goto label_2;\nlabel_33:\nlabel_37:\n    edi = ecx;\n    r9d = ebp;\n    esi = (int32_t) al;\n    edx = 0xffffffff;\n    ecx = 0;\nlabel_8:\n    if (r9b == 0) {\n        if (*(0x0060b313) != 1) {\n            goto label_38;\n        }\n        if (rbx == 1) {\n            goto label_13;\n        }\n    }\nlabel_38:\n    r8b = (esi != r12d) ? 1 : 0;\n    dil = (dil == al) ? 1 : 0;\n    r8b |= dil;\n    if (r8b == 0) {\n        if (cl == 0) {\n            goto label_18;\n        }\n    }\n    rdi = stdout;\n    rcx = *((rdi + 0x28));\n    if (rcx >= *((rdi + 0x30))) {\n        goto label_39;\n    }\n    rsi = rcx + 1;\n    *((rdi + 0x28)) = rsi;\n    *(rcx) = al;\nlabel_13:\n    if (bpl != 0) {\n        goto label_18;\n    }\n    rax = imp.__libc_start_main;\n    *(0x0060b328) = rax;\nlabel_4:\n    ebx = 1;\n    r12b = (rbx == 1) ? 1 : 0;\n    r12b &= *((rsp + 0xb));\n    if (r12b == 0) {\n        goto label_3;\n    }\nlabel_28:\n    r9d = *(0x0060b230);\n    r8d = *(0x0060b311);\n    rax = fcn_004032b0 (0x60b320, 0x60b318, 0, 0xffffffffffffffff, r8, r9);\n    rbx = rax;\n    if (rbx < 0) {\n        goto label_40;\n    }\n    if (rbx == 0) {\n        goto label_41;\n    }\n    rdi = imp.__libc_start_main;\n    rdx = rbx - 1;\n    eax = *(0x0060b311);\n    if (*((rdi + rbx - 1)) == al) {\n        goto label_42;\n    }\n    if (*(0x0060b313) != 0) {\n        goto label_43;\n    }\n    rcx = stdout;\n    rdx = rbx;\n    esi = 1;\n    fwrite_unlocked ();\n    rax = imp.__libc_start_main;\n    edx = *(0x0060b230);\n    eax = *((rax + rbx - 1));\n    if (eax == edx) {\n        goto label_4;\n    }\n    rdi = stdout;\n    rax = *((rdi + 0x28));\n    if (rax >= *((rdi + 0x30))) {\n        goto label_44;\n    }\n    rsi = rax + 1;\n    *((rdi + 0x28)) = rsi;\n    *(rax) = dl;\n    goto label_4;\nlabel_27:\n    rdi = r13;\n    eax = uflow ();\n    edi = eax;\n    if (eax != 0xffffffff) {\n        goto label_5;\n    }\nlabel_18:\n    eax = *(r13);\nlabel_19:\n    if ((al & 0x20) != 0) {\n        goto label_45;\n    }\n    edi = 0x4094ea;\n    ecx = 2;\n    rsi = r14;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    rdi = r13;\n    al = ((al & 0x20) > 0) ? 1 : 0;\n    if (al == 0) {\n        goto label_46;\n    }\n    eax = fcn_00405c20 (rdi);\n    edx = eax;\n    eax = 1;\n    if (edx == 0xffffffff) {\n        goto label_45;\n    }\n    return;\nlabel_32:\nlabel_36:\n    ecx = (int32_t) cl;\n    edi = ecx;\n    if (*(0x0060b230) == cl) {\n        goto label_47;\n    }\nlabel_11:\n    if (edx != ecx) {\n        goto label_48;\n    }\nlabel_7:\n    rax = imp.__libc_start_main;\n    rbx++;\n    if (rbx <= *((rax + 8))) {\n        goto label_6;\n    }\n    rax += 0x10;\n    *(0x0060b328) = rax;\n    goto label_6;\nlabel_31:\nlabel_35:\n    if (al == cl) {\n        goto label_49;\n    }\n    ecx = edx;\n    edx = r15d;\n    if (edx == ecx) {\n        goto label_7;\n    }\nlabel_48:\n    eax = *(0x0060b230);\n    r8b = (edx == 0xffffffff) ? 1 : 0;\nlabel_9:\n    esi = (int32_t) al;\n    cl = (esi == edx) ? 1 : 0;\n    if (r8b != 0) {\n        goto label_50;\n    }\n    if (cl == 0) {\n        goto label_6;\n    }\nlabel_50:\n    r9d = ebp;\n    goto label_8;\nlabel_43:\n    ebx = 1;\n    edx = 0;\n    goto label_6;\nlabel_47:\n    r8d = 0;\n    goto label_9;\nlabel_42:\n    rax = imp.__libc_start_main;\n    while (1) {\nlabel_22:\n        if (*((rax + 8)) <= 1) {\n            rax += 0x10;\n            ebx = 2;\n            r12d = 0;\n            *(0x0060b328) = rax;\n            goto label_10;\nlabel_49:\n            rax = *((r13 + 8));\n            if (rax >= *((r13 + 0x10))) {\n                goto label_51;\n            }\n            rdx = rax + 1;\n            *((r13 + 8)) = rdx;\n            edx = *(rax);\nlabel_12:\n            ungetc (edx, r13);\n            ecx = *(0x0060b311);\n            edx = r15d;\n            edi = ecx;\n            goto label_11;\n        }\n        ebx = 2;\n        r12d = 0;\n        goto label_10;\n        rcx = stdout;\n        esi = 1;\n        fwrite_unlocked ();\n        eax = *(0x0060b230);\n        if (*(0x0060b311) == al) {\n            goto label_52;\n        }\nlabel_14:\n        rax = imp.__libc_start_main;\n    }\nlabel_51:\n    rdi = r13;\n    eax = uflow ();\n    edx = eax;\n    if (eax != 0xffffffff) {\n        goto label_12;\n    }\n    esi = *(0x0060b230);\n    r9d = ebp;\n    edi = *(0x0060b311);\n    ecx = 0;\n    eax = esi;\n    goto label_8;\nlabel_46:\n    clearerr_unlocked ();\n    eax = 1;\n    return;\nlabel_39:\n    *((rsp + 0xc)) = edx;\n    overflow ();\n    edx = *((rsp + 0xc));\n    goto label_13;\nlabel_52:\n    rax = *((r13 + 8));\n    if (rax >= *((r13 + 0x10))) {\n        goto label_53;\n    }\n    rdx = rax + 1;\n    *((r13 + 8)) = rdx;\n    eax = *(rax);\nlabel_21:\n    ungetc (eax, r13);\n    goto label_14;\nlabel_25:\n    rax = fopen (r14, 0x40764e);\n    r13 = rax;\n    if (rax != 0) {\n        goto label_15;\n    }\nlabel_45:\n    rdx = r14;\n    rax = fcn_00405230 (0, 3);\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    eax = error (0, *(rax), 0x4082a6);\n    eax = 0;\n    return;\nlabel_26:\n    ebx = 0;\n    r12d = 0;\n    do {\nlabel_20:\n        rax = *((r13 + 8));\n        if (rax >= *((r13 + 0x10))) {\n            goto label_54;\n        }\nlabel_16:\n        rdx = rax + 1;\n        esi = *(0x0060b230);\n        *((r13 + 8)) = rdx;\n        ebp = *(rax);\n        if (ebp == esi) {\n            goto label_55;\n        }\nlabel_17:\n        rax = imp.__libc_start_main;\n        rbx++;\n        if (rbx > *((rax + 8))) {\n            rax += 0x10;\n            *(0x0060b328) = rax;\n        }\n        rax = *(rax);\n    } while (rbx < rax);\n    edx = *(0x0060b310);\n    rdi = stdout;\n    if (dl != 0) {\n        al = (rbx == rax) ? 1 : 0;\n        r12b &= al;\n        if (r12b != 0) {\n            goto label_56;\n        }\n        r12d = edx;\n    }\nlabel_24:\n    rax = *((rdi + 0x28));\n    if (rax >= *((rdi + 0x30))) {\n        goto label_57;\n    }\n    rdx = rax + 1;\n    *((rdi + 0x28)) = rdx;\n    *(rax) = bpl;\n    rax = *((r13 + 8));\n    if (rax < *((r13 + 0x10))) {\n        goto label_16;\n    }\nlabel_54:\n    rdi = r13;\n    eax = uflow ();\n    esi = *(0x0060b230);\n    if (ebp == esi) {\n        goto label_55;\n    }\n    if (ebp != 0xffffffff) {\n        goto label_17;\n    }\n    if (rbx == 0) {\n        goto label_18;\n    }\n    rdi = stdout;\n    rdx = *((rdi + 0x28));\n    if (rdx >= *((rdi + 0x30))) {\n        goto label_58;\n    }\n    rcx = rdx + 1;\n    *((rdi + 0x28)) = rcx;\n    *(rdx) = sil;\n    eax = *(r13);\n    goto label_19;\nlabel_55:\n    rdi = stdout;\n    rax = *((rdi + 0x28));\n    if (rax >= *((rdi + 0x30))) {\n        goto label_59;\n    }\n    rdx = rax + 1;\n    *((rdi + 0x28)) = rdx;\n    *(rax) = sil;\nlabel_23:\n    rax = imp.__libc_start_main;\n    ebx = 0;\n    r12d = 0;\n    *(0x0060b328) = rax;\n    goto label_20;\nlabel_40:\n    free (*(0x0060b320));\n    eax = *(r13);\n    *(0x0060b320) = 0;\n    if ((al & 0x30) != 0) {\n        goto label_19;\n    }\n    fcn_00405bc0 ();\nlabel_53:\n    rdi = r13;\n    eax = uflow ();\n    if (eax != 0xffffffff) {\n        goto label_21;\n    }\n    rax = imp.__libc_start_main;\n    goto label_22;\nlabel_59:\n    overflow ();\n    goto label_23;\nlabel_57:\n    esi = (int32_t) bpl;\n    overflow ();\n    goto label_20;\nlabel_56:\n    rcx = rdi;\n    rdx = imp.__libc_start_main;\n    rdi = imp.__libc_start_main;\n    esi = 1;\n    fwrite_unlocked ();\n    rdi = stdout;\n    goto label_24;\nlabel_44:\n    esi = edx;\n    overflow ();\n    edx = *(0x0060b230);\n    goto label_4;\nlabel_58:\n    overflow ();\n    eax = *(r13);\n    goto label_19;\nlabel_41:\n    return assert_fail (\"n_bytes != 0\", \"src/cut.c\", 0x149, \"cut_fields\");\n}\n"
        },
        {
            "funcName": "fcn_004026b0",
            "funcStartAddr": "0x4026b0",
            "funcEndAddr": "0x402add",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x4026b0 */\n#include <stdint.h>\n \nuint64_t fcn_004026b0 (int64_t arg1) {\n    char * var_8h;\n    int64_t var_10h;\n    char * var_18h;\n    char * var_20h;\n    char * var_28h;\n    char * var_30h;\n    char * var_38h;\n    char * var_40h;\n    char * var_48h;\n    char * var_50h;\n    char * var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    rdi = arg1;\n    edx = 5;\n    ebx = edi;\n    rbp = imp.__libc_start_main;\n    if (edi != 0) {\n        rax = dcgettext (0, \"Try '%s --help' for more information.\\n\");\n        rdi = stderr;\n        rcx = rbp;\n        esi = 1;\n        rdx = rax;\n        eax = 0;\n        fprintf_chk ();\nlabel_0:\n        exit (ebx);\n    }\n    rax = dcgettext (0, \"Usage: %s OPTION... [FILE]...\\n\");\n    rdx = rbp;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"Print selected parts of lines from each FILE to standard output.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nWith no FILE, or when FILE is -, read standard input.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nMandatory arguments to long options are mandatory for short options too.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -b, --bytes=LIST        select only these bytes\\n  -c, --characters=LIST   select only these characters\\n  -d, --delimiter=DELIM   use DELIM instead of TAB for field delimiter\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -f, --fields=LIST       select only these fields;  also print any line\\n                            that contains no delimiter character, unless\\n                            the -s option is specified\\n  -n                      (ignored)\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --complement        complement the set of selected bytes, characters\\n                            or fields\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -s, --only-delimited    do not print lines not containing delimiters\\n      --output-delimiter=STRING  use STRING as the output delimiter\\n                            the default is to use the input delimiter\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -z, --zero-terminated    line delimiter is NUL, not newline\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --help     display this help and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --version  output version information and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nUse one, and only one of -b, -c or -f.  Each LIST is made up of one\\nrange, or many ranges separated by commas.  Selected input is written\\nin the same order that it is read, and is written exactly once.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"Each range is one of:\\n\\n  N     N'th byte, character or field, counted from 1\\n  N-    from N'th byte, character or field, to end of line\\n  N-M   from N'th to M'th (included) byte, character or field\\n  -M    from first to M'th (included) byte, character or field\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    *(rsp) = 0x40755f;\n    rax = rsp;\n    *((rsp + 8)) = \"test invocation\";\n    *((rsp + 0x10)) = 0x4075d9;\n    *((rsp + 0x18)) = \"Multi-call invocation\";\n    *((rsp + 0x20)) = \"sha224sum\";\n    *((rsp + 0x28)) = \"sha2 utilities\";\n    *((rsp + 0x30)) = \"sha256sum\";\n    *((rsp + 0x38)) = \"sha2 utilities\";\n    *((rsp + 0x40)) = \"sha384sum\";\n    *((rsp + 0x48)) = \"sha2 utilities\";\n    *((rsp + 0x50)) = \"sha512sum\";\n    *((rsp + 0x58)) = \"sha2 utilities\";\n    *((rsp + 0x60)) = 0;\n    *((rsp + 0x68)) = 0;\n    do {\n        rax += 0x10;\n        rdi = *(rax);\n        if (rdi == 0) {\n            goto label_2;\n        }\n        esi = 0x40755b;\n        ecx = 4;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        dl = (rdi > 0) ? 1 : 0;\n    } while (dl != 0);\nlabel_2:\n    rbp = *((rax + 8));\n    edx = 5;\n    esi = \"\\n%s online help: <%s>\\n\";\n    edi = 0;\n    if (rbp == 0) {\n        goto label_3;\n    }\n    rax = dcgettext (rdi, rsi);\n    edi = 1;\n    ecx = \"https://www.gnu.org/software/coreutils/\";\n    edx = \"GNU coreutils\";\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rax = setlocale (5, 0);\n    if (rax != 0) {\n        eax = strncmp (rax, 0x4075e3, 3);\n        if (eax != 0) {\n            goto label_4;\n        }\n    }\nlabel_1:\n    edx = 5;\n    r12d = 0x40757b;\n    rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n    ecx = 0x40755b;\n    edx = \"https://www.gnu.org/software/coreutils/\";\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    ecx = 0x409507;\n    r12 = rcx;\n    while (1) {\n        edx = 5;\n        rax = dcgettext (0, \"or available locally via: info '(coreutils) %s%s'\\n\");\n        rcx = r12;\n        rdx = rbp;\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        goto label_0;\nlabel_3:\n        rax = dcgettext (rdi, rsi);\n        edi = 1;\n        ecx = \"https://www.gnu.org/software/coreutils/\";\n        edx = \"GNU coreutils\";\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        rax = setlocale (5, 0);\n        if (rax != 0) {\n            eax = strncmp (rax, 0x4075e3, 3);\n            if (eax != 0) {\n                goto label_5;\n            }\n        }\n        edx = 5;\n        rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n        ecx = 0x40755b;\n        edx = \"https://www.gnu.org/software/coreutils/\";\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        r12d = 0x40757b;\n        printf_chk ();\n    }\nlabel_5:\nlabel_4:\n    edx = 5;\n    rax = dcgettext (0, \"Report %s translation bugs to <https://translationproject.org/team/>\\n\");\n    edx = 0x40755b;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00402b00",
            "funcStartAddr": "0x402b00",
            "funcEndAddr": "0x402bcc",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x402b00 */\n#include <stdint.h>\n \nint64_t fcn_00402b00 (uint32_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rsi;\n    rdx = imp.__libc_start_main;\n    rcx = imp.__libc_start_main;\n    rax = imp.__libc_start_main;\n    while (1) {\n        rdi = rdx;\n        rdx++;\n        rdi <<= 4;\n        rax += rdi;\n        *(rax) = rbp;\n        *((rax + 8)) = rbx;\n        *(0x0060b4e8) = rdx;\n        return rax;\n        if (rax == 0) {\n            goto label_1;\n        }\n        rdx = 0x555555555555554;\n        if (rcx > rdx) {\n            goto label_2;\n        }\n        rdx = rcx;\n        rdx >>= 1;\n        rcx = rcx + rdx + 1;\n        rsi = rcx;\n        rsi <<= 4;\nlabel_0:\n        *(0x0060b338) = rcx;\n        rax = fcn_004059d0 (rax, rsi);\n        rdx = imp.__libc_start_main;\n        *(0x0060b4e0) = rax;\n    }\nlabel_1:\n    if (rcx == 0) {\n        goto label_3;\n    }\n    rsi = rcx;\n    edx = 0;\n    rsi >>= 0x3c;\n    rsi = rcx;\n    dl = (rsi != 0) ? 1 : 0;\n    rsi <<= 4;\n    if (rsi < 0) {\n        goto label_2;\n    }\n    if (rdx == 0) {\n        goto label_0;\n    }\nlabel_2:\n    fcn_00405bc0 ();\nlabel_3:\n    esi = 0x80;\n    ecx = 8;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00402bd0",
            "funcStartAddr": "0x402bd0",
            "funcEndAddr": "0x40316e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x402bd0 */\n#include <stdint.h>\n \nuint64_t fcn_00402bd0 (int64_t arg1, int64_t arg2, int64_t arg4) {\n    uint32_t var_8h;\n    int64_t var_sp_10h;\n    int64_t var_18h;\n    int64_t var_1ch;\n    rdi = arg1;\n    rsi = arg2;\n    rcx = arg4;\n    eax = esi;\n    r15 = rdi;\n    eax &= 1;\n    *((rsp + 0x1c)) = esi;\n    *((rsp + 0x18)) = eax;\n    if (eax != 0) {\n        edi = 0x4094ea;\n        ecx = 2;\n        rsi = r15;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        al = (eax > 0) ? 1 : 0;\n        if (al == 0) {\n            goto label_13;\n        }\n    }\n    edi = 0;\n    ebx = 0;\nlabel_7:\n    r12d = 0;\n    r14d = 0;\n    *((rsp + 8)) = 1;\n    while (r13b != 0x2d) {\n        if (r13b != 0x2c) {\n            *((rsp + 0x10)) = rdi;\n            rax = ctype_b_loc ();\n            r9d = (int32_t) r13b;\n            rdi = *((rsp + 0x10));\n            rax = *(rax);\n            if ((*((rax + r9*2)) & 1) != 0) {\n                goto label_14;\n            }\n            if (r13b != 0) {\n                goto label_15;\n            }\n        }\nlabel_14:\n        if (bpl == 0) {\n            goto label_16;\n        }\n        if (bl != 0) {\n            goto label_17;\n        }\n        if (r14b != 0) {\n            goto label_18;\n        }\n        eax = *((rsp + 0x18));\n        if (eax == 0) {\n            goto label_19;\n        }\n        *((rsp + 8)) = 1;\nlabel_5:\n        fcn_00402b00 (*((rsp + 8)), 0xffffffffffffffff);\nlabel_6:\n        if (*(r15) == 0) {\n            goto label_20;\n        }\nlabel_1:\n        edi = 0;\n        r12d = 0;\n        ebp = 0;\n        r14d = 0;\n        ebx = 0;\nlabel_0:\n        r15++;\n        r13d = *(r15);\n    }\n    if (bpl != 0) {\n        goto label_21;\n    }\n    cl = (rdi == 0) ? 1 : 0;\n    cl &= bl;\n    r12d = ecx;\n    if (cl != 0) {\n        goto label_22;\n    }\n    if (bl != 0) {\n        goto label_23;\n    }\n    r12d = ebx;\n    edi = 0;\n    *((rsp + 8)) = 1;\n    goto label_0;\nlabel_16:\n    if (rdi == 0) {\n        goto label_24;\n    }\n    fcn_00402b00 (rdi, rdi);\n    if (*(r15) != 0) {\n        goto label_1;\n    }\nlabel_20:\n    rsi = imp.__libc_start_main;\n    if (rsi == 0) {\n        goto label_25;\n    }\n    rdi = imp.__libc_start_main;\n    ecx = 0x402ae0;\n    edx = 0x10;\n    r15d = 0;\n    qsort ();\n    rbx = imp.__libc_start_main;\n    r14 = imp.__libc_start_main;\n    do {\nlabel_2:\n        if (r15 >= rbx) {\n            goto label_26;\n        }\nlabel_4:\n        r15++;\n    } while (r15 >= rbx);\n    rbp <<= 4;\n    r12 = rbp - 0x10;\n    rdi = r14 + rbp;\n    rdx = r14 + r12;\n    rax = *((rdx + 8));\n    if (rax < *(rdi)) {\n        goto label_2;\n    }\n    r13 = rbp + 0x10;\nlabel_3:\n    if (*((rdi + 8)) >= rax) {\n        rax = *((rdi + 8));\n    }\n    rbx -= r15;\n    rbx <<= 4;\n    *((rdx + 8)) = rax;\n    memmove (rdi, r14 + r13, rbx - 0x10);\n    rax = imp.__libc_start_main;\n    r14 = imp.__libc_start_main;\n    rbx = rax - 1;\n    *(0x0060b4e8) = rbx;\n    if (rbx <= r15) {\n        goto label_2;\n    }\n    rdx = r14 + r12;\n    rdi = r14 + rbp;\n    rax = *((rdx + 8));\n    if (*(rdi) <= rax) {\n        goto label_3;\n    }\n    if (r15 < rbx) {\n        goto label_4;\n    }\nlabel_26:\n    if ((*((rsp + 0x1c)) & 2) != 0) {\n        goto label_27;\n    }\nlabel_8:\n    rbx++;\n    rsi = rbx;\n    *(0x0060b4e8) = rbx;\n    rsi <<= 4;\n    rax = fcn_004059d0 (r14, rsi);\n    rdx = imp.__libc_start_main;\n    *(0x0060b4e0) = rax;\n    rdx <<= 4;\n    rax = rax + rdx - 0x10;\n    rdx = 0xffffffffffffffff;\n    *((rax + 8)) = rdx;\n    *(rax) = rdx;\n    return rax;\nlabel_17:\n    if (r14b == 0) {\n        goto label_5;\n    }\nlabel_18:\n    if (*((rsp + 8)) > rdi) {\n        goto label_28;\n    }\n    fcn_00402b00 (*((rsp + 8)), rdi);\n    goto label_6;\nlabel_23:\n    *((rsp + 8)) = rdi;\n    edi = 0;\n    goto label_0;\nlabel_15:\n    eax = (int32_t) r13b;\n    r9d = rax - 0x30;\n    if (r9d > 9) {\n        goto label_29;\n    }\n    if (r12b == 0) {\n        goto label_30;\n    }\n    while (1) {\n        ecx = 1;\n        if (bpl == 0) {\n            ebx = ecx;\n        }\n        if (bpl != 0) {\n            r14d = ebp;\n        }\n        rcx = 0x1999999999999999;\n        if (rdi > rcx) {\n            goto label_31;\n        }\n        eax -= 0x30;\n        rcx = rdi * 5;\n        rax = (int64_t) eax;\n        rax = rax + rcx*2;\n        if (rax < rdi) {\n            goto label_31;\n        }\n        if (rax == -1) {\n            goto label_31;\n        }\n        rdi = rax;\n        r12d = 1;\n        goto label_0;\nlabel_30:\n        *(0x0060b330) = r15;\n    }\nlabel_13:\n    r15++;\n    edi = 1;\n    ebx = 1;\n    goto label_7;\nlabel_27:\n    *(0x0060b4e0) = 0;\n    rax = *(r14);\n    *(0x0060b4e8) = 0;\n    *(0x0060b338) = 0;\n    if (rax > 1) {\n        goto label_32;\n    }\nlabel_9:\n    r12 = rbx;\n    rbp = r14 + 0x10;\n    r12 <<= 4;\n    r12 += r14;\n    if (rbx <= 1) {\n        goto label_33;\n    }\n    do {\n        rax = *((rbp - 8));\n        rsi = *(rbp);\n        rdi = rax + 1;\n        if (rdi != rsi) {\n            rsi--;\n            fcn_00402b00 (rdi, rsi);\n        }\n        rbp += 0x10;\n    } while (r12 != rbp);\nlabel_33:\n    rbx <<= 4;\n    rax = *((r14 + rbx - 8));\n    while (1) {\n        free (r14);\n        rbx = imp.__libc_start_main;\n        r14 = imp.__libc_start_main;\n        goto label_8;\n        fcn_00402b00 (rax + 1, 0xffffffffffffffff);\n    }\nlabel_32:\n    fcn_00402b00 (1, rax - 1);\n    goto label_9;\nlabel_19:\n    edx = 5;\n    do {\nlabel_12:\n        rax = dcgettext (0, \"invalid range with no endpoint: -\");\nlabel_10:\n        eax = 0;\n        error (0, 0, rax);\n        fcn_004026b0 (1);\nlabel_31:\n        rbx = imp.__libc_start_main;\n        rax = strspn (rbx, \"0123456789\");\n        rax = fcn_00405c00 (rbx, rax);\n        rdi = rax;\n        rbx = rax;\n        rax = fcn_004053b0 (rdi);\n        edx = 5;\n        if ((*((rsp + 0x1c)) & 4) == 0) {\n            goto label_34;\n        }\n        rax = dcgettext (0, \"byte/character offset %s is too large\");\nlabel_11:\n        rcx = rbp;\n        eax = 0;\n        error (0, 0, rax);\n        free (rbx);\n        fcn_004026b0 (1);\nlabel_28:\n        edx = 5;\n        esi = \"invalid decreasing range\";\n    } while (1);\nlabel_22:\n    edx = 5;\n    if ((*((rsp + 0x1c)) & 4) == 0) {\n        goto label_35;\n    }\n    dcgettext (0, \"byte/character positions are numbered from 1\");\n    goto label_10;\nlabel_21:\n    edx = 5;\n    if ((*((rsp + 0x1c)) & 4) == 0) {\n        goto label_36;\n    }\n    dcgettext (0, \"invalid byte or character range\");\n    goto label_10;\n    do {\nlabel_35:\n        dcgettext (0, \"fields are numbered from 1\");\n        goto label_10;\nlabel_36:\n        dcgettext (0, \"invalid field range\");\n        goto label_10;\nlabel_24:\n        edx = 5;\n    } while ((*((rsp + 0x1c)) & 4) == 0);\n    dcgettext (rdi, \"byte/character positions are numbered from 1\");\n    goto label_10;\nlabel_34:\n    dcgettext (0, \"field number %s is too large\");\n    goto label_11;\nlabel_25:\n    edx = 5;\n    if ((*((rsp + 0x1c)) & 4) == 0) {\n        goto label_37;\n    }\n    dcgettext (0, \"missing list of byte/character positions\");\n    goto label_10;\nlabel_29:\n    rax = fcn_004053b0 (r15);\n    edx = 5;\n    rbx = rax;\n    if ((*((rsp + 0x1c)) & 4) == 0) {\n        goto label_38;\n    }\n    rax = dcgettext (0, \"invalid byte/character position %s\");\n    do {\n        rcx = rbx;\n        eax = 0;\n        error (0, 0, rax);\n        fcn_004026b0 (1);\nlabel_37:\n        esi = \"missing list of fields\";\n        goto label_12;\nlabel_38:\n        dcgettext (0, \"invalid field value %s\");\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00403280",
            "funcStartAddr": "0x403280",
            "funcEndAddr": "0x4032a1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x403280 */\n#include <stdint.h>\n \nuint32_t fcn_00403280 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    if (rdi != 0) {\n        ebx = esi;\n        eax = fileno (rdi);\n        ecx = ebx;\n        edx = 0;\n        esi = 0;\n        edi = eax;\n        void (*0x401820)() ();\n    }\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_004032b0",
            "funcStartAddr": "0x4032b0",
            "funcEndAddr": "0x4035fd",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x4032b0 */\n#include <stdint.h>\n \nint64_t fcn_004032b0 (int64_t arg_90h, int64_t arg1, int64_t arg2, void * arg3, uint32_t arg5, uint32_t arg6, size_t size) {\n    uint32_t var_4h;\n    size_t var_8h;\n    void * ptr;\n    int64_t var_18h;\n    uint32_t var_1ch;\n    int64_t var_20h;\n    void * var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    uint32_t var_48h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r8 = arg5;\n    r9 = arg6;\n    rcx = size;\n    rax = *(rdi);\n    r12 = *(rsi);\n    *((rsp + 0x30)) = rdi;\n    r14 = *((rsp + 0x90));\n    *((rsp + 0x38)) = rsi;\n    *((rsp + 0x28)) = rdx;\n    *((rsp + 8)) = rcx;\n    *((rsp + 4)) = r8d;\n    *((rsp + 0x1c)) = r9d;\n    *((rsp + 0x10)) = rax;\n    if (rax == 0) {\n        goto label_10;\n    }\nlabel_7:\n    if (r12 < *((rsp + 0x28))) {\n        goto label_2;\n    }\n    rbp -= *((rsp + 0x28));\n    dl = (rbp == 0) ? 1 : 0;\n    al = (r12 >= *((rsp + 8))) ? 1 : 0;\n    if ((dl & al) != 0) {\n        goto label_2;\n    }\n    eax = *((rsp + 4));\n    if (eax == 0xffffffff) {\n        goto label_11;\n    }\n    ebx = *((rsp + 0x1c));\n    if (ebx == 0xffffffff) {\n        ebx = eax;\n    }\n    *((rsp + 0x1c)) = ebx;\nlabel_9:\n    rbx = *((rsp + 0x10));\n    rbx += *((rsp + 0x28));\n    while (rax != 0) {\n        r13 = *((rsp + 0x48));\n        if (*((rsp + 4)) != 0xffffffff) {\n            goto label_12;\n        }\nlabel_4:\n        rcx = r13 + 1;\n        r13d = 0;\nlabel_0:\n        rdi = *((rsp + 8));\n        if (r12 < rdi) {\n            if (rbp < rcx) {\n                goto label_13;\n            }\n        }\nlabel_3:\n        if (rbp > 1) {\n            rcx = rbp - 1;\n            if (*((rsp + 0x48)) <= rcx) {\n                rcx = *((rsp + 0x48));\n            }\n            if (r15 == 0) {\n                goto label_14;\n            }\n            rdx = rcx;\n            *((rsp + 0x20)) = rcx;\n            memcpy (rbx, r15, rdx);\n            rcx = *((rsp + 0x20));\nlabel_1:\n            rbx += rcx;\n            rbp -= rcx;\n        }\n        if (r15 != 0) {\n            eax = fcn_00406d30 (r14, *((rsp + 0x48)));\n            if (eax != 0) {\n                goto label_2;\n            }\n        }\n        if (r13b != 0) {\n            goto label_15;\n        }\n        rax = fcn_00405ce0 (r14, rsp + 0x48);\n        r15 = rax;\n    }\n    rax = *((r14 + 8));\n    if (rax >= *((r14 + 0x10))) {\n        goto label_16;\n    }\n    rdx = rax + 1;\n    *((r14 + 8)) = rdx;\n    eax = *(rax);\n    *((rsp + 0x18)) = eax;\n    do {\n        eax = *((rsp + 0x18));\n        ecx = 2;\n        *((rsp + 0x48)) = 1;\n        r13b = (*((rsp + 4)) == eax) ? 1 : 0;\n        al = (*((rsp + 0x1c)) == eax) ? 1 : 0;\n        r13d |= eax;\n        goto label_0;\nlabel_16:\n        rdi = r14;\n        eax = uflow ();\n        *((rsp + 0x18)) = eax;\n    } while (eax != 0xffffffff);\n    if (rbx != *((rsp + 0x10))) {\n        goto label_15;\n    }\n    do {\nlabel_2:\n        rax = *((rsp + 0x30));\n        rbx = *((rsp + 0x10));\n        *(rax) = rbx;\n        rax = *((rsp + 0x38));\n        *(rax) = r12;\n        rax = 0xffffffffffffffff;\nlabel_6:\n        return rax;\nlabel_14:\n        eax = *((rsp + 0x18));\n        *(rbx) = al;\n        goto label_1;\nlabel_13:\n        rax = r12 + 0x40;\n        rdx = r12 + r12;\n        if (r12 <= 0x3f) {\n            rdx = rax;\n        }\n        rbx -= *((rsp + 0x10));\n        rax = rbx + rcx;\n        rsi = rdx;\n        rsi -= rbx;\n        if (rsi < rcx) {\n            rdx = rax;\n        }\n        if (r12 >= rdx) {\n            goto label_17;\n        }\n        if (rdx > rdi) {\n            goto label_17;\n        }\nlabel_5:\n        rax = *((rsp + 0x28));\n        if (rdx >= rax) {\n            goto label_18;\n        }\n        rdx = 0x8000000000000000;\n        rdx += rax;\n    } while (r12 == rdx);\nlabel_18:\n    rsi = rdx;\n    *((rsp + 0x20)) = rdx;\n    rbp -= rbx;\n    rax = realloc (*((rsp + 0x10)), rsi);\n    if (rax == 0) {\n        goto label_2;\n    }\n    rdx = *((rsp + 0x20));\n    rbx += rax;\n    *((rsp + 0x10)) = rax;\n    r12 = rdx;\n    goto label_3;\nlabel_12:\n    rax = fcn_00403600 (rax, *((rsp + 4)), *((rsp + 0x1c)), r13);\n    if (rax == 0) {\n        goto label_4;\n    }\n    rax -= r15;\n    r13d = 1;\n    rdx = rax + 1;\n    rcx = rax + 2;\n    *((rsp + 0x48)) = rdx;\n    goto label_0;\nlabel_17:\n    rdx = *((rsp + 8));\n    goto label_5;\nlabel_15:\n    rdx = *((rsp + 0x10));\n    rax = *((rsp + 0x28));\n    *(rbx) = 0;\n    rsi = *((rsp + 0x30));\n    rax += rdx;\n    *(rsi) = rdx;\n    rdx = *((rsp + 0x38));\n    rbx -= rax;\n    rax = rbx;\n    *(rdx) = r12;\n    if (rbx != 0) {\n        goto label_6;\n    }\nlabel_8:\n    rax = 0xffffffffffffffff;\n    return rax;\nlabel_10:\n    r12d = 0x40;\n    if (rcx <= 0x40) {\n        r12 = rcx;\n    }\n    rax = malloc (r12);\n    *((rsp + 0x10)) = rax;\n    if (rax != 0) {\n        goto label_7;\n    }\n    goto label_8;\nlabel_11:\n    eax = *((rsp + 0x1c));\n    *((rsp + 4)) = eax;\n    goto label_9;\n}\n"
        },
        {
            "funcName": "fcn_00403600",
            "funcStartAddr": "0x403600",
            "funcEndAddr": "0x406cc4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x403600 */\n#include <stdint.h>\n \nint64_t fcn_00403600 (uint32_t arg1, uint32_t arg2, uint32_t arg3, uint32_t arg4) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    if (sil == dl) {\n        goto label_1;\n    }\n    r10d = esi;\n    r9d = edx;\n    if (rcx == 0) {\n        goto label_2;\n    }\n    if ((dil & 7) == 0) {\n        goto label_2;\n    }\n    eax = *(rdi);\n    if (al == dl) {\n        goto label_3;\n    }\n    if (al != sil) {\n        goto label_4;\n    }\n    goto label_3;\n    do {\n        if ((dil & 7) == 0) {\n            goto label_2;\n        }\n        eax = *(rdi);\n        if (al == r9b) {\n            goto label_3;\n        }\n        if (al == r10b) {\n            goto label_3;\n        }\nlabel_4:\n        rdi++;\n        rcx--;\n    } while (rcx != 0);\nlabel_2:\n    r8d = esi;\n    eax = edx;\n    r8d <<= 8;\n    eax <<= 8;\n    r8d = (int32_t) r8w;\n    eax = (int32_t) ax;\n    ebp = (int32_t) dl;\n    ebx = (int32_t) sil;\n    eax |= ebp;\n    r8d |= ebx;\n    rax = (int64_t) eax;\n    r8 = (int64_t) r8d;\n    rbx = r8;\n    rbp <<= 0x10;\n    rbx <<= 0x10;\n    rax |= rbp;\n    r8 |= rbx;\n    rbx = r8;\n    rbp <<= 0x20;\n    rbx <<= 0x20;\n    rbp |= rax;\n    rbx |= r8;\n    if (rcx <= 7) {\n        goto label_5;\n    }\n    r11 = 0xfefefefefefefeff;\n    rax = *(rdi);\n    r12 = rbx;\n    r12 ^= rax;\n    rax ^= rbp;\n    r8 = r12 + r11;\n    r12 = ~r12;\n    r8 &= r12;\n    r12 = rax + r11;\n    rax = ~rax;\n    rax &= r12;\n    r12 = 0x8080808080808080;\n    rax |= r8;\n    if ((rax & r12) == 0) {\n        goto label_6;\n    }\n    goto label_7;\n    do {\n        rax = *(rdi);\n        r13 = *(rdi);\n        rax ^= rbp;\n        r13 ^= rbx;\n        r8 = r13 + r11;\n        r13 = ~r13;\n        r8 &= r13;\n        r13 = rax + r11;\n        rax = ~rax;\n        rax &= r13;\n        rax |= r8;\n        if ((rax & r12) != 0) {\n            goto label_7;\n        }\nlabel_6:\n        rcx -= 8;\n        rdi += 8;\n    } while (rcx > 7);\nlabel_5:\n    if (rcx == 0) {\n        goto label_8;\n    }\nlabel_7:\n    eax = *(rdi);\n    if (al == dl) {\n        goto label_9;\n    }\n    if (al == sil) {\n        goto label_9;\n    }\n    rdx = rdi + 1;\n    rdi += rcx;\n    while (rdx != rdi) {\n        esi = *(rdx);\n        rdx++;\n        if (sil == r10b) {\n            goto label_10;\n        }\n        if (sil == r9b) {\n            goto label_10;\n        }\n        rax = rdx;\n    }\nlabel_8:\n    eax = 0;\n    do {\nlabel_10:\n        r12 = rbx;\n        r13 = rbx;\n        return rax;\nlabel_3:\n        rax = rdi;\n        return rax;\nlabel_1:\n        esi = (int32_t) sil;\n        rdx = rcx;\n        goto label_11;\nlabel_9:\n        rax = rdi;\n    } while (1);\nlabel_11:\n    r8d = esi;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    if ((dil & 7) == 0) {\n        goto label_12;\n    }\n    if (sil != *(rdi)) {\n        goto label_13;\n    }\n    goto label_14;\n    do {\n        if ((dil & 7) == 0) {\n            goto label_12;\n        }\n        if (*(rdi) == r8b) {\n            goto label_14;\n        }\nlabel_13:\n        rdi++;\n        rdx--;\n    } while (rdx != 0);\nlabel_0:\n    eax = 0;\n    return rax;\nlabel_12:\n    r9d = esi;\n    eax = (int32_t) sil;\n    r9d <<= 8;\n    r9d = (int32_t) r9w;\n    r9d |= eax;\n    r9 = (int64_t) r9d;\n    rax = r9;\n    rax <<= 0x10;\n    r9 |= rax;\n    rax = r9;\n    rax <<= 0x20;\n    r9 |= rax;\n    if (rdx <= 7) {\n        goto label_15;\n    }\n    r11 = 0xfefefefefefefeff;\n    rax = *(rdi);\n    r10 = 0x8080808080808080;\n    rax ^= r9;\n    rcx = rax + r11;\n    rax = ~rax;\n    rax &= rcx;\n    if ((rax & r10) == 0) {\n        goto label_16;\n    }\n    goto label_15;\n    do {\n        rax = *(rdi);\n        rax ^= r9;\n        rcx = rax + r11;\n        rax = ~rax;\n        rax &= rcx;\n        if ((rax & r10) != 0) {\n            goto label_15;\n        }\nlabel_16:\n        rdx -= 8;\n        rdi += 8;\n    } while (rdx > 7);\n    if (rdx == 0) {\n        goto label_0;\n    }\nlabel_15:\n    if (sil == *(rdi)) {\n        goto label_14;\n    }\n    rcx = rdi + 1;\n    rdi += rdx;\n    while (rcx != rdi) {\n        rcx++;\n        if (*((rcx - 1)) == r8b) {\n            goto label_17;\n        }\n        rax = rcx;\n    }\n    goto label_0;\nlabel_14:\n    rax = rdi;\nlabel_17:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00403790",
            "funcStartAddr": "0x403790",
            "funcEndAddr": "0x403829",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x403790 */\n#include <stdint.h>\n \nuint64_t fcn_00403790 (char ** arg1) {\n    rdi = arg1;\n    if (rdi != 0) {\n        rbx = rdi;\n        rax = strrchr (rdi, 0x2f);\n        if (rax != 0) {\n            r8 = rax + 1;\n            rdx = r8;\n            rdx -= rbx;\n            if (rdx <= 6) {\n                goto label_0;\n            }\n            rsi = rax - 6;\n            edi = \"/.libs/\";\n            ecx = 7;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (rdx > 6) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            edi = 0x4082f0;\n            ecx = 3;\n            rsi = r8;\n            rbx = r8;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (dl > 0) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            rbx = rax + 4;\n            *(obj.__progname) = rbx;\n        }\nlabel_0:\n        *(0x0060b350) = rbx;\n        *(obj.program_invocation_name) = rbx;\n        return rax;\n    }\n    fwrite (\"A NULL argv[0] was passed through an exec system call.\\n\", 1, 0x37, *(obj.stderr));\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_00403830",
            "funcStartAddr": "0x403830",
            "funcEndAddr": "0x403922",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x403830 */\n#include <stdint.h>\n \nuint64_t fcn_00403830 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edx = 5;\n    r12d = esi;\n    rsi = rdi;\n    rax = dcgettext (0, rsi);\n    rbx = rax;\n    while (1) {\nlabel_0:\n        rax = rbx;\n        return rax;\n        rax = fcn_00406ee0 ();\n        edx = *(rax);\n        edx &= 0xffffffdf;\n        if (dl != 0x55) {\n            goto label_1;\n        }\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x54) {\n            goto label_2;\n        }\n        edx = *((rax + 2));\n        edx &= 0xffffffdf;\n        if (dl != 0x46) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x2d) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0) {\n            goto label_2;\n        }\n        eax = 0x4082f6;\n        ebx = 0x408301;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n    }\nlabel_1:\n    if (dl == 0x47) {\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x42) {\n            goto label_2;\n        }\n        if (*((rax + 2)) != 0x31) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0x33) {\n            goto label_2;\n        }\n        if (*((rax + 6)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 7)) != 0) {\n            goto label_2;\n        }\n        eax = 0x4082fa;\n        ebx = 0x4082fd;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n        goto label_0;\n    }\nlabel_2:\n    eax = 0x4094d7;\n    ebx = 0x4082f4;\n    if (r12d != 9) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00403930",
            "funcStartAddr": "0x403930",
            "funcEndAddr": "0x406a61",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x403930 */\n#include <stdint.h>\n \nuint64_t fcn_00403930 (int64_t arg_e8h_3, uint32_t arg_e8h_2, int64_t arg_e8h, char * arg_e0h, int64_t arg1, char * arg2, char * arg3, size_t * arg4, int64_t arg5, int64_t arg6) {\n    size_t * var_8h;\n    size_t * var_10h;\n    uint32_t var_1fh;\n    char * s;\n    size_t n;\n    size_t * var_30h;\n    size_t * var_38h;\n    size_t var_40h;\n    size_t var_48h;\n    void * s2;\n    char * var_58h;\n    uint32_t var_60h;\n    int64_t var_68h;\n    uint32_t var_6ch;\n    char * var_6dh;\n    int64_t var_6eh;\n    int64_t var_6fh;\n    int64_t var_70h;\n    int64_t var_78h;\n    wint_t wc;\n    mbstate_t * ps;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    do {\n        /* [13] -r-x section size 23304 named .text */\n        abort ();\nlabel_5:\n        r15 = rdi;\n        r14 = rsi;\n        r13d = r8d;\n        *((rsp + 0x20)) = rdx;\n        *((rsp + 8)) = rcx;\n        *((rsp + 0x68)) = r9d;\n        rax = ctype_get_mb_cur_max ();\n        ebp &= 2;\n        *((rsp + 0x60)) = rax;\n        rsp + 0x6c = (ebp != 0) ? 1 : 0;\n    } while (r13d > 0xa);\n    eax = r13d;\n    r11 = *((rsp + 8));\n    /* switch table (11 cases) at 0x408360 */\nlabel_30:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    r13d = 2;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x4094d7;\nlabel_21:\n    r9 = r11;\n    r12d = 0;\n    r11d = r13d;\n    do {\nlabel_28:\n        r13b = (r9 != r12) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            r13b = (*((rax + r12)) != 0) ? 1 : 0;\n        }\n        if (r13b == 0) {\n            goto label_47;\n        }\n        rdi = *((rsp + 0x20));\n        al = (r11d != 2) ? 1 : 0;\n        al &= *((rsp + 8));\n        r8 = rdi + r12;\n        *((rsp + 0x10)) = al;\n        if (al == 0) {\n            goto label_48;\n        }\n        rax = *((rsp + 0x28));\n        if (rax == 0) {\n            goto label_49;\n        }\n        rbp = r12 + rax;\n        if (r9 == -1) {\n            if (rax <= 1) {\n                goto label_50;\n            }\n            *((rsp + 0x40)) = r11d;\n            *((rsp + 0x38)) = r10b;\n            *((rsp + 0x30)) = r8;\n            rax = strlen (rdi);\n            r11d = *((rsp + 0x40));\n            r10d = *((rsp + 0x38));\n            r8 = *((rsp + 0x30));\n            r9 = rax;\n        }\nlabel_50:\n        if (rbp > r9) {\n            goto label_49;\n        }\n        rdi = r8;\n        *((rsp + 0x48)) = r11d;\n        *((rsp + 0x40)) = r9;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        eax = memcmp (rdi, *((rsp + 0x50)), *((rsp + 0x28)));\n        r8 = *((rsp + 0x30));\n        r10d = *((rsp + 0x38));\n        r9 = *((rsp + 0x40));\n        r11d = *((rsp + 0x48));\n        if (eax != 0) {\n            goto label_49;\n        }\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_51;\n        }\n        ebp = *(r8);\n        if (bpl > 0x7e) {\n            goto label_52;\n        }\n        eax = (int32_t) bpl;\n        /* switch table (127 cases) at 0x4083b8 */\n        *((rsp + 0x10)) = 0;\n        al = (r9 != 1) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            al = (*((rax + 1)) != 0) ? 1 : 0;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        if (al != 0) {\n            goto label_7;\n        }\nlabel_17:\n        if (r12 != 0) {\n            goto label_7;\n        }\nlabel_18:\n        if (*((rsp + 0x6c)) != 0) {\n            if (dl != 0) {\n                goto label_53;\n            }\n        }\nlabel_2:\n        eax = *((rsp + 8));\n        eax ^= 1;\n        eax |= edx;\n        eax ^= 1;\n        al |= *((rsp + 0x6c));\n        if (al == 0) {\n            goto label_11;\n        }\nlabel_24:\n        eax = 0;\nlabel_10:\n        if (*((rsp + 0xd0)) == 0) {\n            goto label_11;\n        }\n        edx = ebp;\n        rcx = *((rsp + 0xd0));\n        dl >>= 5;\n        edx = (int32_t) dl;\n        edx = *((rcx + rdx*4));\n        ecx = ebp;\n        edx >>= cl;\n        edx &= 1;\n        if (edx == 0) {\n            goto label_11;\n        }\n        dl = (r11d == 2) ? 1 : 0;\nlabel_0:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_54;\n        }\nlabel_4:\n        eax = r10d;\n        eax ^= 1;\n        al &= dl;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rdx = rbx + 1;\n            if (rdx < r14) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rdx = rbx + 2;\n            if (rdx < r14) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\nlabel_9:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n        r12++;\nlabel_1:\n        if (rbx < r14) {\n            *((r15 + rbx)) = bpl;\n        }\n        edi = *((rsp + 0x1f));\n        rbx++;\n        eax = 0;\n        if (r13b == 0) {\n            edi = eax;\n        }\n        *((rsp + 0x1f)) = dil;\n    } while (1);\nlabel_3:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    if (r14 == 0) {\n        goto label_56;\n    }\n    edx = 0;\n    if (*((rsp + 0x58)) != 0) {\n        goto label_56;\n    }\nlabel_27:\n    *((rsp + 0x6d)) = r13b;\n    rbx += 3;\n    eax = 0;\n    r10d = 0;\n    *((rsp + 0x58)) = r14;\n    r14 = rdx;\nlabel_11:\n    dl = (r11d == 2) ? 1 : 0;\n    if (*((rsp + 0x10)) != 0) {\n        goto label_0;\n    }\n    eax ^= 1;\n    r12++;\n    eax &= r10d;\nlabel_16:\n    if (al == 0) {\n        goto label_1;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x27;\n    }\n    rbx += 2;\n    r10d = 0;\n    goto label_1;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_57;\n    }\n    if (r11d == 5) {\n        goto label_58;\n    }\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_3;\n    }\n    *((rsp + 0x6d)) = r13b;\n    edx = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\nlabel_15:\n    edx = *((rsp + 8));\n    dl &= *((rsp + 0x6c));\n    ecx = 0x5c;\n    al = (*((rsp + 0x28)) != 0) ? 1 : 0;\n    dl &= al;\n    if (dl != 0) {\n        goto label_59;\n    }\nlabel_8:\n    if (*((rsp + 8)) != 0) {\n        goto label_60;\n    }\nlabel_7:\n    r13d = 0;\n    goto label_2;\nlabel_6:\n    edx = 0;\n    r13d = 0;\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_4;\n    }\nlabel_54:\n    r13d = r11d;\n    eax = edx;\n    r11 = r9;\nlabel_42:\nlabel_12:\n    eax = 4;\n    if (*((rsp + 8)) != 0) {\n        r13d = eax;\n    }\nlabel_43:\n    r9d &= 0xfffffffd;\n    rax = fcn_00403930 (r15, r14, *((rsp + 0x40)), r11, r13d, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\nlabel_44:\n    rax = rbx;\n    return rax;\n    goto label_6;\n    *((rsp + 0x10)) = 0;\n    edx = 0;\n    goto label_7;\n    *((rsp + 0x10)) = 0;\n    ecx = 0x72;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    do {\nlabel_20:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_61;\n        }\nlabel_34:\n        r13d = 0;\n        goto label_9;\n    } while (1);\nlabel_14:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_62;\n    }\n    *((rsp + 0x10)) = 0;\n    eax = r10d;\n    dl = (r11d == 2) ? 1 : 0;\n    eax ^= 1;\n    al &= dl;\n    if (al == 0) {\n        goto label_63;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rcx = rbx + 1;\n    if (r14 > rcx) {\n        *((r15 + rbx + 1)) = 0x24;\n    }\n    rcx = rbx + 2;\n    if (r14 > rcx) {\n        *((r15 + rbx + 2)) = 0x27;\n    }\n    rcx = rbx + 3;\n    if (r14 <= rcx) {\n        goto label_64;\n    }\nlabel_26:\n    *((r15 + rcx)) = 0x5c;\n    r10d = eax;\nlabel_25:\n    rbx = rcx + 1;\n    if (r11d == 2) {\n        goto label_65;\n    }\n    rax = r12 + 1;\n    if (rax < r9) {\n        rax = *((rsp + 0x20));\n        eax = *((rax + r12 + 1));\n        *((rsp + 0x30)) = al;\n        eax -= 0x30;\n        if (al <= 9) {\n            goto label_66;\n        }\n    }\nlabel_35:\n    eax = *((rsp + 8));\n    eax ^= 1;\n    al |= dl;\n    eax = r13d;\n    r13d = 0;\n    if (al == 0) {\n        goto label_10;\n    }\n    goto label_11;\nlabel_19:\n    *((rsp + 0x10)) = 0;\n    do {\nlabel_52:\n        if (*((rsp + 0x60)) != 1) {\n            goto label_67;\n        }\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r9;\n        *((rsp + 0x30)) = r10b;\n        rax = ctype_b_loc ();\n        edx = (int32_t) bpl;\n        r10d = *((rsp + 0x30));\n        r9 = *((rsp + 0x38));\n        rax = *(rax);\n        r11d = *((rsp + 0x40));\n        edi = 1;\n        eax = *((rax + rdx*2));\n        ax &= 0x4000;\n        r13b = (ax != 0) ? 1 : 0;\n        dl = (ax == 0) ? 1 : 0;\n        dl &= *((rsp + 8));\nlabel_37:\n        if (dl != 0) {\n            goto label_68;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        goto label_2;\nlabel_48:\n        ebp = *(r8);\n    } while (bpl > 0x7e);\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x4087b0 */\n    ecx = 0x6e;\nlabel_13:\n    eax = *((rsp + 0x6c));\n    dl = (r11d == 2) ? 1 : 0;\n    al &= dl;\n    *((rsp + 0x10)) = al;\n    if (al == 0) {\n        goto label_8;\n    }\nlabel_53:\n    r11 = r9;\n    r13d = 2;\n    goto label_12;\n    ecx = 0x74;\n    goto label_13;\n    ecx = 0x62;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x61;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    if (*((rsp + 8)) != 0) {\n        goto label_14;\n    }\n    if ((*((rsp + 0x68)) & 1) != 0) {\n        goto label_69;\n    }\n    *((rsp + 0x10)) = 0;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    ebp = 0;\n    goto label_2;\n    if (r11d != 2) {\n        goto label_15;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_17;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_18;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_18;\n    ecx = 0x72;\n    goto label_13;\n    ecx = 0x66;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x76;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\nlabel_49:\n    ebp = *(r8);\n    if (bpl > 0x7e) {\n        goto label_19;\n    }\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x408ba8 */\n    eax = 0;\n    do {\nlabel_31:\n        r13d = *((rsp + 0x10));\n        *((rsp + 0x10)) = al;\n        eax = 0;\n        goto label_10;\n        eax = 0;\nlabel_32:\n        if (r12 != 0) {\n            goto label_70;\n        }\n        r13d = *((rsp + 0x10));\n        edx = 0;\n        *((rsp + 0x10)) = al;\n        goto label_2;\n        eax = 0;\nlabel_33:\n    } while (1);\n    goto label_6;\n    goto label_20;\nlabel_47:\n    r13d = r11d;\n    r11 = r9;\n    dl = (r13d == 2) ? 1 : 0;\n    if (rbx == 0) {\n        if ((*((rsp + 0x6c)) & dl) != 0) {\n            goto label_71;\n        }\n    }\n    eax = *((rsp + 0x6c));\n    eax ^= 1;\n    dl &= al;\n    if (dl == 0) {\n        goto label_72;\n    }\n    if (*((rsp + 0x6d)) == 0) {\n        goto label_45;\n    }\n    if (*((rsp + 0x1f)) != 0) {\n        goto label_73;\n    }\n    al = (r14 == 0) ? 1 : 0;\n    dl = (*((rsp + 0x58)) != 0) ? 1 : 0;\n    al &= dl;\n    if (al == 0) {\n        goto label_74;\n    }\n    r14 = *((rsp + 0x58));\nlabel_46:\n    *(r15) = 0x27;\n    r13d = 2;\n    ebx = 1;\n    *((rsp + 0x50)) = 0x4094d7;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x6c)) = 0;\n    *((rsp + 0x6d)) = al;\n    goto label_21;\nlabel_58:\n    if ((*((rsp + 0x68)) & 4) != 0) {\n        rax = r12 + 2;\n        if (rax >= r9) {\n            goto label_39;\n        }\n        rsi = *((rsp + 0x20));\n        if (*((rsi + r12 + 1)) == 0x3f) {\n            goto label_75;\n        }\n    }\nlabel_39:\n    edx = 0;\n    r13d = 0;\n    goto label_2;\nlabel_57:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r13d = 0;\n    eax = 0;\n    goto label_11;\nlabel_67:\n    *((rsp + 0x88)) = 0;\n    if (r9 == -1) {\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        rax = strlen (*((rsp + 0x20)));\n        r11d = *((rsp + 0x40));\n        r10d = *((rsp + 0x38));\n        r8 = *((rsp + 0x30));\n        r9 = rax;\n    }\n    eax = 0;\n    *((rsp + 0x70)) = rbx;\n    *((rsp + 0x78)) = r8;\n    rbx = rax;\n    *((rsp + 0x6e)) = r10b;\n    *((rsp + 0x6f)) = bpl;\n    *((rsp + 0x40)) = r15;\n    *((rsp + 0x48)) = r14;\n    *((rsp + 0x30)) = r9;\n    *((rsp + 0x38)) = r11d;\n    while (*((rsp + 0x38)) != 2) {\nlabel_22:\n        eax = iswprint (*((rsp + 0x84)));\n        rdi = rsp + 0x88;\n        eax = 0;\n        if (eax == 0) {\n            r13d = eax;\n        }\n        rbx += r14;\n        eax = mbsinit (rdi);\n        if (eax != 0) {\n            goto label_76;\n        }\n        rax = *((rsp + 0x20));\n        r15 = r12 + rbx;\n        rbp = rax + r15;\n        rdx -= r15;\n        rax = fcn_00406b40 (rsp + 0x84, rbp, *((rsp + 0x30)), rsp + 0x88);\n        r14 = rax;\n        if (rax == 0) {\n            goto label_76;\n        }\n        if (rax == -1) {\n            goto label_77;\n        }\n        if (rax == 0xfffffffffffffffe) {\n            goto label_78;\n        }\n    }\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_22;\n    }\n    if (rax == 1) {\n        goto label_22;\n    }\n    rsi = *((rsp + 0x20));\n    rax = rsi + r15 + 1;\n    rsi += r14;\n    rsi += r15;\n    goto label_79;\nlabel_23:\n    rax++;\n    if (rsi == rax) {\n        goto label_22;\n    }\nlabel_79:\n    ecx = *(rax);\n    ecx -= 0x5b;\n    if (cl > 0x21) {\n        goto label_23;\n    }\n    edx = 1;\n    rdx <<= cl;\n    rcx = 0x20000002b;\n    if ((rdx & rcx) == 0) {\n        goto label_23;\n    }\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r13d = 2;\n    r11 = *((rsp + 0x30));\n    goto label_12;\nlabel_70:\n    *((rsp + 0x10)) = al;\n    r13d = 0;\n    goto label_24;\nlabel_63:\n    rcx = rbx;\n    if (r14 <= rbx) {\n        goto label_25;\n    }\n    eax = r10d;\n    goto label_26;\nlabel_56:\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x5c;\n    }\n    rax = rbx + 2;\n    if (r14 <= rax) {\n        goto label_80;\n    }\n    rdx = r14;\n    *((r15 + rbx + 2)) = 0x27;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_69:\n    r12++;\n    goto label_28;\nlabel_68:\n    edx = *((rsp + 8));\n    r13d = 0;\nlabel_36:\n    rcx = rdi;\n    *((rsp + 0x30)) = r13b;\n    esi = 0;\n    r13d = *((rsp + 0x6c));\n    rcx += r12;\n    edi = *((rsp + 0x10));\n    r8 = *((rsp + 0x20));\n    while (dl != 0) {\n        al = (r11d == 2) ? 1 : 0;\n        if (r13b != 0) {\n            goto label_81;\n        }\n        esi = r10d;\n        esi ^= 1;\n        al &= sil;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rsi = rbx + 1;\n            if (r14 > rsi) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rsi = rbx + 2;\n            if (r14 > rsi) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 6;\n            eax += 0x30;\n            *((r15 + rbx + 1)) = al;\n        }\n        rax = rbx + 2;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 3;\n            eax &= 7;\n            eax += 0x30;\n            *((r15 + rbx + 2)) = al;\n        }\n        ebp &= 7;\n        r12++;\n        rbx += 3;\n        ebp += 0x30;\n        if (r12 >= rcx) {\n            goto label_82;\n        }\n        esi = edx;\nlabel_29:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = bpl;\n        }\n        ebp = *((r8 + r12));\n        rbx++;\n    }\n    eax = esi;\n    eax ^= 1;\n    eax &= r10d;\n    if (dil != 0) {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n    }\n    r12++;\n    if (r12 < rcx) {\n        if (al == 0) {\n            goto label_83;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x27;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            *((r15 + rbx + 1)) = 0x27;\n        }\n        rbx += 2;\n        edi = 0;\n        r10d = 0;\n        goto label_29;\n    }\n    r13d = *((rsp + 0x30));\n    goto label_16;\nlabel_81:\n    r13d = r11d;\n    *((rsp + 8)) = al;\n    r11 = r9;\n    goto label_12;\nlabel_64:\n    rbx += 4;\n    r10d = eax;\n    r13d = 0;\n    goto label_11;\n    if (ebp != 0) {\n        goto label_30;\n    }\n    *((rsp + 8)) = 1;\n    do {\n        if (r14 != 0) {\n            goto label_84;\n        }\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 1;\n        r13d = 2;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x4094d7;\n        goto label_21;\n        if (ebp != 0) {\n            goto label_85;\n        }\n        if (r14 == 0) {\n            goto label_86;\n        }\n        *(r15) = 0x22;\n        r10d = 0;\n        *((rsp + 0x1f)) = 1;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\nlabel_38:\n        *((rsp + 0x6c)) = 0;\n        ebx = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x4082f4;\n        goto label_21;\n        if (r14 != 0) {\n            *((rsp + 8)) = r11;\n            rax = fcn_00403830 (0x408305, r13d);\n            *((rsp + 0xd8)) = rax;\n            rax = fcn_00403830 (0x4094d7, r13d);\n            r11 = *((rsp + 8));\n            *((rsp + 0xe0)) = rax;\n        }\n        ebx = 0;\n        if (ebp == 0) {\n            goto label_87;\n        }\nlabel_41:\n        *((rsp + 0x10)) = r11;\n        rax = strlen (*((rsp + 0xe0)));\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        r11 = *((rsp + 0x10));\n        *((rsp + 0x28)) = rax;\n        rax = *((rsp + 0xe0));\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x50)) = rax;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 8)) = 1;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 0;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 5;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x4082f4;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 2;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x4094d7;\n        goto label_21;\n        eax = *((rsp + 0x10));\n        goto label_31;\n        eax = *((rsp + 0x10));\n        goto label_32;\n        eax = *((rsp + 0x10));\n        goto label_33;\n        edx = 0;\n        r13d = 0;\n        goto label_4;\n        goto label_34;\nlabel_66:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x30;\n        }\n        rax = rcx + 2;\n        if (r14 > rax) {\n            *((r15 + rcx + 2)) = 0x30;\n        }\n        rbx = rcx + 3;\n        goto label_35;\n        if (ebp != 0) {\n            goto label_88;\n        }\n        *((rsp + 8)) = 0;\n    } while (1);\nlabel_82:\n    r13d = *((rsp + 0x30));\n    goto label_1;\nlabel_59:\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\nlabel_83:\n    edi = 0;\n    goto label_29;\nlabel_76:\n    rdi = rbx;\n    edx = r13d;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    edx ^= 1;\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    dl &= *((rsp + 8));\nlabel_40:\n    if (rdi > 1) {\n        goto label_36;\n    }\n    goto label_37;\nlabel_86:\n    *((rsp + 0x58)) = 0;\n    r10d = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x6d)) = 0;\n    goto label_38;\nlabel_65:\n    eax = r13d;\n    r13d = 0;\n    goto label_11;\nlabel_75:\n    ebp = *((rsi + rax));\n    if (bpl > 0x3e) {\n        goto label_39;\n    }\n    rsi = 0x7000a38200000000;\n    if (((rsi >> rbp) & 1) >= 0) {\n        goto label_39;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_51;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x3f;\n    }\n    rdx = rbx + 1;\n    if (r14 > rdx) {\n        *((r15 + rbx + 1)) = 0x22;\n    }\n    rdx = rbx + 2;\n    if (r14 > rdx) {\n        *((r15 + rbx + 2)) = 0x22;\n    }\n    rdx = rbx + 3;\n    if (r14 > rdx) {\n        *((r15 + rbx + 3)) = 0x3f;\n    }\n    rbx += 4;\n    edx = 0;\n    r13d = 0;\n    r12 = rax;\n    goto label_35;\nlabel_77:\n    rdi = rbx;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r13d = 0;\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    edx = *((rsp + 8));\n    goto label_40;\nlabel_78:\n    r9 = *((rsp + 0x30));\n    rsi = r15;\n    rcx = rbp;\n    rax = rbx;\n    rdi = rbx;\n    r8 = *((rsp + 0x78));\n    r10d = *((rsp + 0x6e));\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r11d = *((rsp + 0x38));\n    if (rsi >= r9) {\n        goto label_89;\n    }\n    if (*(rcx) != 0) {\n        goto label_90;\n    }\n    goto label_89;\n    do {\n        if (*((r8 + rax)) == 0) {\n            goto label_91;\n        }\nlabel_90:\n        rax++;\n        rdx = r12 + rax;\n    } while (rdx < r9);\nlabel_91:\n    rdi = rax;\nlabel_89:\n    edx = *((rsp + 8));\n    r13d = 0;\n    goto label_40;\nlabel_87:\n    rax = *((rsp + 0xd8));\n    eax = *(rax);\n    if (al == 0) {\n        goto label_41;\n    }\n    rdx = *((rsp + 0xd8));\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = al;\n        }\n        rbx++;\n        eax = *((rdx + rbx));\n    } while (al != 0);\n    goto label_41;\nlabel_61:\n    r13d = r11d;\n    eax = 0;\n    r11 = r9;\n    goto label_42;\nlabel_85:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 1;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x4082f4;\n    goto label_21;\nlabel_51:\n    r13d = r11d;\n    r11 = r9;\n    goto label_43;\nlabel_72:\n    edx = eax;\nlabel_45:\n    rax = *((rsp + 0x50));\n    if (rax == 0) {\n        goto label_92;\n    }\n    if (dl == 0) {\n        goto label_92;\n    }\n    edx = *(rax);\n    if (dl == 0) {\n        goto label_92;\n    }\n    rax -= rbx;\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = dl;\n        }\n        rbx++;\n        edx = *((rax + rbx));\n    } while (dl != 0);\nlabel_92:\n    if (r14 <= rbx) {\n        goto label_44;\n    }\n    *((r15 + rbx)) = 0;\n    goto label_44;\nlabel_55:\n    r13d = r11d;\n    r11 = r9;\n    goto label_12;\nlabel_62:\n    r13d = r11d;\n    r11 = r9;\n    rsp + 8 = (r13d == 2) ? 1 : 0;\n    goto label_12;\nlabel_73:\n    rax = fcn_00403930 (r15, *((rsp + 0x78)), *((rsp + 0x40)), r11, 5, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\n    goto label_44;\nlabel_74:\n    edx = *((rsp + 0x6d));\n    goto label_45;\nlabel_71:\n    r13d = 2;\n    goto label_12;\nlabel_84:\n    r10d = 0;\n    eax = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x58)) = 0;\n    goto label_46;\nlabel_80:\n    rdx = r14;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_88:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x4094d7;\n    goto label_21;\nlabel_60:\n    r13d = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00404b60",
            "funcStartAddr": "0x404b60",
            "funcEndAddr": "0x407e39",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x404b60 */\n#include <stdint.h>\n \nuint64_t fcn_00404b60 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_30h;\n    int64_t var_18h;\n    int64_t var_24h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    do {\n        abort ();\n        r15 = (int64_t) edi;\n        r14 = rdx;\n        *((rsp + 8)) = rsi;\n        rax = errno_location ();\n        rbx = *(0x0060b298);\n        r13 = rax;\n        eax = *(rax);\n        *((rsp + 0x18)) = eax;\n    } while (r15d < 0);\n    if (*(0x0060b2b0) > r15d) {\n        goto label_0;\n    }\n    if (r15d == 0x7fffffff) {\n        goto label_1;\n    }\n    r12d = r15 + 1;\n    rsi = (int64_t) r12d;\n    rsi <<= 4;\n    if (rbx == 0x60b2a0) {\n        goto label_2;\n    }\n    rax = fcn_004059d0 (rbx, rsi);\n    *(0x0060b298) = rax;\n    rbx = rax;\n    do {\n        rdi = *(0x0060b2b0);\n        edx -= edi;\n        rdi <<= 4;\n        rdx = (int64_t) edx;\n        rdi += rbx;\n        rdx <<= 4;\n        memset (rdi, 0, r12d);\n        *(0x0060b2b0) = r12d;\nlabel_0:\n        eax = *((rbp + 4));\n        r15 <<= 4;\n        rbx += r15;\n        r15 = rbp + 8;\n        eax |= 1;\n        r11 = *(rbx);\n        r12 = *((rbx + 8));\n        *((rsp + 0x24)) = eax;\n        rsi = r11;\n        *((rsp + 0x30)) = r11;\n        rax = fcn_00403930 (r12, rsi, *((rsp + 0x28)), r14, *(rbp), eax);\n        r11 = *((rsp + 0x10));\n        if (r11 <= rax) {\n            rsi = rax + 1;\n            *(rbx) = rsi;\n            if (r12 != 0x60b360) {\n                *((rsp + 0x10)) = rsi;\n                free (r12);\n                rsi = *((rsp + 0x10));\n            }\n            *((rsp + 0x10)) = rsi;\n            rax = fcn_00405970 (*((rsp + 0x10)));\n            *((rbx + 8)) = rax;\n            rdi = rax;\n            r12 = rax;\n            fcn_00403930 (rdi, *((rsp + 0x30)), *((rsp + 0x28)), r14, *(rbp), *((rsp + 0x3c)));\n        }\n        eax = *((rsp + 0x18));\n        *(r13) = eax;\n        rax = r12;\n        return rax;\nlabel_2:\n        rax = fcn_004059d0 (0, rsi);\n        __asm (\"movdqa xmm0, xmmword [0x0060b2a0]\");\n        rbx = rax;\n        *(0x0060b298) = rax;\n        __asm (\"movups xmmword [rax], xmm0\");\n    } while (1);\nlabel_1:\n    return fcn_00405bc0 ();\n}\n"
        },
        {
            "funcName": "fcn_00405200",
            "funcStartAddr": "0x405200",
            "funcEndAddr": "0x405291",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x405200 */\n#include <stdint.h>\n \nint64_t fcn_00405200 (int64_t arg1, int64_t arg7, int64_t arg8, int64_t arg9) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_20h;\n    int64_t var_30h;\n    rdi = arg1;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    xmm2 = arg9;\n    do {\n        rax = imp.__libc_start_main;\n        ecx = edx;\n        __asm (\"movdqa xmm0, xmmword [0x0060b460]\");\n        __asm (\"movdqa xmm1, xmmword [0x0060b470]\");\n        __asm (\"movdqa xmm2, xmmword [0x0060b480]\");\n        ecx &= 0x1f;\n        *((rsp + 0x30)) = rax;\n        eax = edx;\n        al >>= 5;\n        *(rsp) = xmm0;\n        eax = (int32_t) al;\n        *((rsp + 0x10)) = xmm1;\n        r8 = rsp + rax*4 + 8;\n        *((rsp + 0x20)) = xmm2;\n        edx = *(r8);\n        eax = *(r8);\n        eax >>= cl;\n        eax = ~eax;\n        eax &= 1;\n        eax <<= cl;\n        eax ^= edx;\n        *(r8) = eax;\n        fcn_00404b60 (0, rdi, rsi, rsp);\n        return rax;\n        edx = 0x3a;\n        rsi = 0xffffffffffffffff;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00405230",
            "funcStartAddr": "0x405230",
            "funcEndAddr": "0x408a9a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x405230 */\n#include <stdint.h>\n \nint64_t fcn_00405230 (uint32_t arg2, int64_t arg3) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rsi = arg2;\n    rdx = arg3;\n    do {\n        abort ();\n    } while (esi == 0xa);\n    rcx = 0x400000000000000;\n    rax = rdx;\n    *(rsp) = esi;\n    *((rsp + 8)) = rcx;\n    *((rsp + 4)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x30)) = 0;\n    fcn_00404b60 (rdi, rax, 0xffffffffffffffff, rsp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004053b0",
            "funcStartAddr": "0x4053b0",
            "funcEndAddr": "0x4053c6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x4053b0 */\n#include <stdint.h>\n \nvoid fcn_004053b0 (int64_t arg1) {\n    rdi = arg1;\n    rsi = rdi;\n    ecx = 0x60b260;\n    rdx = 0xffffffffffffffff;\n    edi = 0;\n    return void (*0x404b60)() ();\n}\n"
        },
        {
            "funcName": "fcn_004053d0",
            "funcStartAddr": "0x4053d0",
            "funcEndAddr": "0x409144",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x4053d0 */\n#include <stdint.h>\n \nvoid fcn_004053d0 (int64_t arg_20h, int64_t arg_30h, int64_t arg_8h_2, int64_t arg_10h, int64_t arg_8h, int64_t arg_8h_3, int64_t arg_10h_2, int64_t arg_18h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_30h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    eax = abort ();\n    r12 = r9;\n    rbx = r8;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    r9 = rcx;\n    r8 = rdx;\n    rcx = rsi;\n    edx = \"%s (%s) %s\\n\";\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    do {\n        edx = 5;\n        rax = dcgettext (0, 0x40904b);\n        r8d = 0x7e1;\n        edx = \"Copyright %s %d Free Software Foundation, Inc.\";\n        rdi = rbp;\n        rcx = rax;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        edx = 5;\n        rax = dcgettext (0, \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\");\n        rsi = rbp;\n        rdi = rax;\n        eax = fputs_unlocked ();\n        if (r12 > 9) {\n            goto label_2;\n        }\n        /* switch table (10 cases) at 0x409338 */\nlabel_1:\n        r8 = rcx;\n        esi = 1;\n        rcx = rdx;\n        eax = 0;\n        edx = \"%s %s\\n\";\n        fprintf_chk ();\n    } while (1);\n    r9 = *((rbx + 0x38));\n    rax = *((rbx + 0x10));\n    edx = 5;\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    r15 = *((rbx + 0x20));\n    *((rsp + 0x10)) = r9;\n    r14 = *((rbx + 0x18));\n    rbx = *(rbx);\n    *(rsp) = rax;\n    *((rsp + 8)) = r8;\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n    do {\n        r9 = *((rsp + 0x18));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        r9 = *((rsp + 0x30));\n        r8 = *((rsp + 0x38));\n        fprintf_chk ();\n        return rax;\n        r10 = *((rbx + 0x40));\n        r9 = *((rbx + 0x38));\n        edx = 5;\n        rax = *((rbx + 0x10));\n        r8 = *((rbx + 8));\n        r13 = *((rbx + 0x30));\n        r12 = *((rbx + 0x28));\n        *((rsp + 0x18)) = r10;\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        *((rsp + 0x10)) = r9;\n        *(rsp) = rax;\n        rbx = *(rbx);\n        *((rsp + 8)) = r8;\nlabel_0:\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        r10 = *((rsp + 0x18));\n    } while (1);\n    rbx = *(rbx);\n    edx = 5;\n    rax = dcgettext (0, \"Written by %s.\\n\");\n    rdi = rbp;\n    esi = 1;\n    rcx = rbx;\n    rdx = rax;\n    eax = 0;\n    void (*0x4019e0)() ();\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s and %s.\\n\");\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x4019e0)() ();\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, and %s.\\n\");\n    r9 = r13;\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x4019e0)() ();\n    edx = 5;\n    r14 = *((rbx + 0x18));\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\nand %s.\\n\");\n    do {\n        rdx = rax;\n        r9 = r13;\n        r8 = r12;\n        rcx = rbx;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r15 = *((rbx + 0x20));\n        edx = 5;\n        r14 = *((rbx + 0x18));\n        r13 = *((rbx + 0x10));\n        r12 = *((rbx + 8));\n        rbx = *(rbx);\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n    } while (1);\n    r8 = *((rbx + 8));\n    r12 = *((rbx + 0x28));\n    edx = 5;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *(rsp) = r8;\n    r13 = *((rbx + 0x10));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n    r9 = r13;\n    do {\n        r8 = *((rsp + 0x20));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r9 = *((rbx + 0x10));\n        r13 = *((rbx + 0x30));\n        edx = 5;\n        r12 = *((rbx + 0x28));\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        r8 = *((rbx + 8));\n        *((rsp + 8)) = r9;\n        rbx = *(rbx);\n        *(rsp) = r8;\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n        r9 = *((rsp + 0x28));\n    } while (1);\nlabel_2:\n    r10 = *((rbx + 0x40));\n    r9 = *((rbx + 0x38));\n    edx = 5;\n    esi = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    rax = *((rbx + 0x10));\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    *((rsp + 0x18)) = r10;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *((rsp + 0x10)) = r9;\n    *(rsp) = rax;\n    rbx = *(rbx);\n    *((rsp + 8)) = r8;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00405830",
            "funcStartAddr": "0x405830",
            "funcEndAddr": "0x4058ec",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x405830 */\n#include <stdint.h>\n \nuint64_t fcn_00405830 (int64_t arg_b0h, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_70h;\n    int64_t var_90h;\n    int64_t var_98h;\n    r8 = arg5;\n    r9 = arg6;\n    r11d = 0;\n    rax = rsp + 0xb0;\n    *((rsp + 0x90)) = r8;\n    r10 = rsp + 0xb0;\n    r8d = 0x20;\n    *((rsp + 0x10)) = rax;\n    rax = rsp + 0x70;\n    *((rsp + 0x98)) = r9;\n    r9d = 0;\n    *((rsp + 8)) = 0x20;\n    *((rsp + 0x18)) = rax;\n    while (r8d <= 0x2f) {\n        eax = r8d;\n        r11 = rsp + 0x70;\n        r8d += 8;\n        rax += r11;\n        r11d = 1;\n        rax = *(rax);\n        *((rsp + r9*8 + 0x20)) = rax;\n        if (rax == 0) {\n            goto label_1;\n        }\nlabel_0:\n        r9++;\n        if (r9 == 0xa) {\n            goto label_1;\n        }\n    }\n    rax = r10;\n    r10 += 8;\n    rax = *(rax);\n    *((rsp + r9*8 + 0x20)) = rax;\n    if (rax != 0) {\n        goto label_0;\n    }\nlabel_1:\n    if (r11b != 0) {\n        *((rsp + 8)) = r8d;\n    }\n    fcn_004053d0 (rdi, rsi, rdx, rcx, rsp + 0x20, r9);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405970",
            "funcStartAddr": "0x405970",
            "funcEndAddr": "0x40598a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x405970 */\n#include <stdint.h>\n \nuint64_t fcn_00405970 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = malloc (rdi);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    return fcn_00405bc0 ();\n}\n"
        },
        {
            "funcName": "fcn_004059d0",
            "funcStartAddr": "0x4059d0",
            "funcEndAddr": "0x405a06",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x4059d0 */\n#include <stdint.h>\n \nuint64_t fcn_004059d0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rsi;\n    if (rsi == 0) {\n        if (rdi != 0) {\n            goto label_0;\n        }\n    }\n    rax = realloc (rdi, rbx);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_1;\n        }\n    }\n    return rax;\nlabel_0:\n    eax = free (rdi);\n    eax = 0;\n    return rax;\nlabel_1:\n    return fcn_00405bc0 ();\n}\n"
        },
        {
            "funcName": "fcn_00405b70",
            "funcStartAddr": "0x405b70",
            "funcEndAddr": "0x405b98",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x405b70 */\n#include <stdint.h>\n \nuint64_t fcn_00405b70 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdi = rsi;\n    rbx = rsi;\n    rax = fcn_00405970 (rdi);\n    rdx = rbx;\n    rsi = rbp;\n    rdi = rax;\n    return memcpy ();\n}\n"
        },
        {
            "funcName": "fcn_00405ba0",
            "funcStartAddr": "0x405ba0",
            "funcEndAddr": "0x405bb3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x405ba0 */\n#include <stdint.h>\n \nvoid fcn_00405ba0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    strlen (rdi);\n    rdi = rbx;\n    rsi = rax + 1;\n    return void (*0x405b70)() ();\n}\n"
        },
        {
            "funcName": "fcn_00405bc0",
            "funcStartAddr": "0x405bc0",
            "funcEndAddr": "0x405bf1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x405bc0 */\n#include <stdint.h>\n \nuint64_t fcn_00405bc0 (void) {\n    edx = 5;\n    rax = dcgettext (0, \"memory exhausted\");\n    rcx = rax;\n    eax = 0;\n    error (*(0x0060b240), 0, 0x4082a6);\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_00405c00",
            "funcStartAddr": "0x405c00",
            "funcEndAddr": "0x405c18",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x405c00 */\n#include <stdint.h>\n \nuint64_t fcn_00405c00 (int32_t n, const char * src) {\n    rsi = n;\n    rdi = src;\n    rax = strndup (rdi, rsi);\n    if (rax != 0) {\n        return rax;\n    }\n    return fcn_00405bc0 ();\n}\n"
        },
        {
            "funcName": "fcn_00405c20",
            "funcStartAddr": "0x405c20",
            "funcEndAddr": "0x405c9b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x405c20 */\n#include <stdint.h>\n \nuint64_t fcn_00405c20 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    eax = fileno (rdi);\n    rdi = rbx;\n    if (eax < 0) {\n        goto label_1;\n    }\n    eax = freading ();\n    while (rax != -1) {\n        eax = fcn_00405ca0 (rbx);\n        if (eax == 0) {\n            goto label_2;\n        }\n        rax = errno_location ();\n        r12d = *(rax);\n        fclose (rbx);\n        if (r12d != 0) {\n            goto label_3;\n        }\nlabel_0:\n        return rax;\n        eax = fileno (rbx);\n        esi = 0;\n        edx = 1;\n        edi = eax;\n        rax = lseek ();\n    }\nlabel_2:\n    rdi = rbx;\nlabel_1:\n    void (*0x401710)() ();\nlabel_3:\n    *(rbp) = r12d;\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00405ca0",
            "funcStartAddr": "0x405ca0",
            "funcEndAddr": "0x405ce0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x405ca0 */\n#include <stdint.h>\n \nuint32_t fcn_00405ca0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    if (rdi != 0) {\n        eax = freading ();\n        if (eax == 0) {\n            goto label_0;\n        }\n        if ((*(rbx) & 0x100) != 0) {\n            goto label_1;\n        }\n    }\nlabel_0:\n    rdi = rbx;\n    void (*0x4018c0)() ();\nlabel_1:\n    fcn_00405d10 (rbx, 0, 1);\n    rdi = rbx;\n    return fflush ();\n}\n"
        },
        {
            "funcName": "fcn_00405ce0",
            "funcStartAddr": "0x405ce0",
            "funcEndAddr": "0x405d03",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x405ce0 */\n#include <stdint.h>\n \nint64_t fcn_00405ce0 (uint32_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rax = *((rdi + 0x20));\n    if (*((rdi + 0x28)) <= rax) {\n        rax = *((rdi + 8));\n        rdx = *((rdi + 0x10));\n        rdx -= rax;\n        if (rdx == 0) {\n            goto label_0;\n        }\n        *(rsi) = rdx;\n        return rax;\n    }\nlabel_0:\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405d10",
            "funcStartAddr": "0x405d10",
            "funcEndAddr": "0x405d67",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x405d10 */\n#include <stdint.h>\n \nint64_t fcn_00405d10 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rax = *((rdi + 8));\n    while (*((rdi + 0x28)) != rax) {\nlabel_0:\n        void (*0x401990)() ();\n        rax = *((rdi + 0x20));\n    }\n    if (*((rdi + 0x48)) != 0) {\n        goto label_0;\n    }\n    r12d = edx;\n    rbx = rdi;\n    eax = fileno (rdi);\n    edx = r12d;\n    rsi = rbp;\n    edi = eax;\n    rax = lseek ();\n    if (rax != -1) {\n        *(rbx) &= 0xffffffef;\n        *((rbx + 0x90)) = rax;\n        eax = 0;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405d70",
            "funcStartAddr": "0x405d70",
            "funcEndAddr": "0x405e4f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x405d70 */\n#include <stdint.h>\n \nuint64_t fcn_00405d70 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r11 = rdi + 8;\n    r12d = *((rsi + 0x2c));\n    ebp = *(rsi);\n    rbx = *((rsi + 0x30));\n    r9d = r12d;\n    r10d = ebp;\n    r8 = rbx;\nlabel_1:\n    if (r10d <= r8d) {\n        goto label_2;\n    }\nlabel_0:\n    if (r9d >= r8d) {\n        goto label_2;\n    }\n    r14d = r10d;\n    edx = r8d;\n    r14d -= r8d;\n    edx -= r9d;\n    if (r14d <= edx) {\n        goto label_3;\n    }\n    rcx = (int64_t) r9d;\n    r10d -= edx;\n    edx--;\n    rdx += rcx;\n    rax = rdi + rcx*8;\n    r13 = r11 + rdx*8;\n    rdx = (int64_t) r10d;\n    rdx -= rcx;\n    do {\n        rcx = *(rax);\n        r14 = *((rax + rdx*8));\n        *(rax) = r14;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (r13 != rax);\n    if (r10d > r8d) {\n        goto label_0;\n    }\nlabel_2:\n    eax = ebp;\n    *((rsi + 0x30)) = ebp;\n    eax -= r8d;\n    r12d += eax;\n    *((rsi + 0x2c)) = r12d;\n    r12 = rbx;\n    r13 = rbx;\n    r14 = rbx;\n    r15 = rbx;\n    return rax;\nlabel_3:\n    rdx = (int64_t) r9d;\n    ecx = r14 - 1;\n    rcx += rdx;\n    rax = rdi + rdx*8;\n    r13 = r11 + rcx*8;\n    rcx = rbx;\n    rcx -= rdx;\n    rdx = rcx;\n    do {\n        rcx = *(rax);\n        r15 = *((rax + rdx*8));\n        *(rax) = r15;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (rax != r13);\n    r9d += r14d;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00405e50",
            "funcStartAddr": "0x405e50",
            "funcEndAddr": "0x40646c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x405e50 */\n#include <stdint.h>\n \nint64_t fcn_00405e50 (int64_t arg_90h, int64_t arg_98h, int64_t arg_a0h, signed int64_t arg1, int64_t arg2, char * arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_ch;\n    int64_t var_10h;\n    void * ptr;\n    int64_t var_20h;\n    int64_t var_28h;\n    char * s;\n    int64_t var_38h;\n    int64_t c;\n    signed int64_t var_40h;\n    int64_t var_44h;\n    void * var_48h;\n    size_t nmeb;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rax = *((rsp + 0x90));\n    *((rsp + 0x40)) = edi;\n    *((rsp + 0x28)) = rsi;\n    r14 = *((rax + 0x20));\n    *((rsp + 0x30)) = rdx;\n    *(rsp) = rcx;\n    eax = *(r14);\n    *((rsp + 0x20)) = r8;\n    *((rsp + 0xc)) = r9d;\n    *((rsp + 0x3f)) = al;\n    if (al == 0x3d) {\n        goto label_11;\n    }\n    if (al == 0) {\n        goto label_11;\n    }\n    do {\n        rbp++;\n        eax = *(rbp);\n        if (al == 0) {\n            goto label_12;\n        }\n    } while (al != 0x3d);\nlabel_12:\n    r13 = rbp;\n    r13 -= r14;\nlabel_6:\n    rbx = *(rsp);\n    r12d = 0;\n    rax = *(rbx);\n    *((rsp + 0x10)) = rax;\n    r15 = rax;\n    if (rax != 0) {\n        goto label_13;\n    }\n    goto label_14;\n    do {\n        r12 = (int64_t) r8d;\nlabel_13:\n        eax = strncmp (r15, r14, r13);\n        if (eax == 0) {\n            rax = strlen (r15);\n            if (rax == r13) {\n                goto label_15;\n            }\n        }\n        rbx += 0x20;\n        r15 = *(rbx);\n        r8d = r12 + 1;\n    } while (r15 != 0);\n    rcx = *(rsp);\n    *((rsp + 0x4c)) = r8d;\n    r9d = 0;\n    ebx = 0;\n    *((rsp + 0x44)) = 0xffffffff;\n    r15 = r9;\n    *((rsp + 0x38)) = 0;\n    *((rsp + 0x48)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x10)) = rbp;\n    do {\n        eax = strncmp (*((rsp + 0x10)), r14, r13);\n        if (eax == 0) {\n            if (rbx == 0) {\n                goto label_16;\n            }\n            eax = *((rsp + 0xc));\n            if (eax == 0) {\n                goto label_17;\n            }\nlabel_0:\n            r11d = *((rsp + 0x38));\n            if (r11d != 0) {\n                goto label_1;\n            }\n            r10d = *((rsp + 0x98));\n            if (r10d == 0) {\n                goto label_18;\n            }\n            if (*((rsp + 0x18)) == 0) {\n                goto label_19;\n            }\nlabel_3:\n            rax = *((rsp + 0x18));\n            *((rax + r15)) = 1;\n        }\nlabel_1:\n        rbp += 0x20;\n        rdi = *(rbp);\n        r15++;\n    } while (rdi != 0);\n    rbp = *((rsp + 0x10));\n    if (*((rsp + 0x18)) != 0) {\n        goto label_20;\n    }\n    r9d = *((rsp + 0x38));\n    if (r9d != 0) {\n        goto label_20;\n    }\n    if (rbx == 0) {\nlabel_14:\n        eax = *((rsp + 0xc));\n        if (eax != 0) {\n            rax = *((rsp + 0x90));\n            rcx = *((rsp + 0x28));\n            rax = *(rax);\n            rax = *((rcx + rax*8));\n            if (*((rax + 1)) == 0x2d) {\n                goto label_21;\n            }\n            esi = *((rsp + 0x3f));\n            rax = strchr (*((rsp + 0x30)), rsi);\n            rdx = rax;\n            eax = 0xffffffff;\n            if (rdx != 0) {\n                goto label_5;\n            }\n        }\nlabel_21:\n        ecx = *((rsp + 0x98));\n        if (ecx != 0) {\n            goto label_22;\n        }\nlabel_4:\n        rax = *((rsp + 0x90));\n        *((rax + 0x20)) = 0;\n        *(rax)++;\n        *((rax + 8)) = 0;\n        eax = 0x3f;\n        return rax;\n    }\n    r12d = *((rsp + 0x44));\nlabel_15:\n    rax = *((rsp + 0x90));\n    rcx = *((rsp + 0x90));\n    edx = *(rax);\n    *((rcx + 0x20)) = 0;\n    eax = rdx + 1;\n    *(rcx) = eax;\n    ecx = *((rbx + 8));\n    if (*(rbp) != 0) {\n        goto label_23;\n    }\n    if (ecx == 1) {\n        goto label_24;\n    }\nlabel_2:\n    rax = *((rsp + 0x20));\n    if (rax != 0) {\n        *(rax) = r12d;\n    }\n    rdx = *((rbx + 0x10));\n    eax = *((rbx + 0x18));\n    if (rdx != 0) {\n        *(rdx) = eax;\n        eax = 0;\n    }\nlabel_5:\n    return rax;\nlabel_17:\n    eax = *((rbp + 8));\n    if (*((rbx + 8)) != eax) {\n        goto label_0;\n    }\n    rax = *((rbp + 0x10));\n    if (*((rbx + 0x10)) != rax) {\n        goto label_0;\n    }\n    eax = *((rbp + 0x18));\n    if (*((rbx + 0x18)) != eax) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_23:\n    if (ecx == 0) {\n        goto label_25;\n    }\n    rax = *((rsp + 0x90));\n    rbp++;\n    *((rax + 0x10)) = rbp;\n    goto label_2;\nlabel_16:\n    *((rsp + 0x44)) = r15d;\n    rbx = rbp;\n    goto label_1;\nlabel_18:\n    *((rsp + 0x38)) = 1;\n    if (*((rsp + 0x18)) == 0) {\n        goto label_1;\n    }\n    goto label_3;\nlabel_22:\n    rax = *((rsp + 0x28));\n    edx = 5;\n    rbx = *(rax);\n    rax = dcgettext (0, \"%s: unrecognized option '%s%s'\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r14;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbx;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_4;\nlabel_20:\n    r8d = *((rsp + 0x98));\n    if (r8d != 0) {\n        edi = *((rsp + 0x38));\n        if (edi == 0) {\n            goto label_26;\n        }\n        rax = *((rsp + 0x28));\n        edx = 5;\n        rbx = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' is ambiguous\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r14;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbx;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        rax = *((rsp + 0x90));\n        r14 = *((rax + 0x20));\n    }\nlabel_9:\n    esi = *((rsp + 0x48));\n    if (esi != 0) {\n        goto label_27;\n    }\nlabel_7:\n    rax = strlen (r14);\n    r14 += rax;\n    rax = *((rsp + 0x90));\n    *((rax + 0x20)) = r14;\n    *(rax)++;\n    *((rax + 8)) = 0;\n    eax = 0x3f;\n    goto label_5;\nlabel_24:\n    if (eax >= *((rsp + 0x40))) {\n        goto label_28;\n    }\n    rcx = *((rsp + 0x90));\n    edx += 2;\n    rax = (int64_t) eax;\n    *(rcx) = edx;\n    rcx = *((rsp + 0x28));\n    rax = *((rcx + rax*8));\n    rcx = *((rsp + 0x90));\n    *((rcx + 0x10)) = rax;\n    goto label_2;\nlabel_11:\n    r13d = 0;\n    goto label_6;\nlabel_25:\n    edx = *((rsp + 0x98));\n    while (1) {\n        eax = *((rbx + 0x18));\n        rcx = *((rsp + 0x90));\n        *((rcx + 8)) = eax;\n        eax = 0x3f;\n        goto label_5;\nlabel_19:\n        rdi = *((rsp + 0x4c));\n        rax = calloc (rdi, 1);\n        *((rsp + 0x18)) = rax;\n        if (rax == 0) {\n            goto label_29;\n        }\n        rax = *((rsp + 0x44));\n        rcx = *((rsp + 0x18));\n        *((rsp + 0x48)) = 1;\n        *((rcx + rax)) = 1;\n        goto label_3;\n        rax = *((rsp + 0x28));\n        r12 = *(rbx);\n        edx = 5;\n        rbp = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' doesn't allow an argument\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r12;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_27:\n    free (*((rsp + 0x18)));\n    goto label_7;\nlabel_28:\n    eax = *((rsp + 0x98));\n    if (eax != 0) {\n        goto label_30;\n    }\nlabel_10:\n    eax = *((rbx + 0x18));\n    rcx = *((rsp + 0x90));\n    *((rcx + 8)) = eax;\n    rax = *((rsp + 0x30));\n    al = (*(rax) != 0x3a) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = rax * 5;\n    goto label_5;\nlabel_26:\n    rdi = stderr;\n    flockfile ();\n    rax = *((rsp + 0x90));\n    edx = 5;\n    rbx = *((rax + 0x20));\n    rax = *((rsp + 0x28));\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' is ambiguous; possibilities:\");\n    rdi = stderr;\n    r9 = rbx;\n    r8 = *((rsp + 0xa0));\n    rcx = rbp;\n    rdx = rax;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    rax = *((rsp + 0x18));\n    rdi = stderr;\n    rbx = *(rsp);\n    r12 = rax + r12 + 1;\n    while (*(rbp) == 0) {\nlabel_8:\n        rbp++;\n        rbx += 0x20;\n        if (r12 == rbp) {\n            goto label_31;\n        }\n    }\n    r8 = *(rbx);\n    edx = \" '%s%s';\n    esi = 1;\n    eax = 0;\n    rcx = *((rsp + 0xa0));\n    fprintf_chk ();\n    rdi = stderr;\n    goto label_8;\nlabel_31:\n    fputc (0xa, rdi);\n    rdi = stderr;\n    funlockfile ();\n    rax = *((rsp + 0x90));\n    r14 = *((rax + 0x20));\n    goto label_9;\nlabel_30:\n    rax = *((rsp + 0x28));\n    r12 = *(rbx);\n    edx = 5;\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' requires an argument\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r12;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbp;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_10;\nlabel_29:\n    *((rsp + 0x38)) = 1;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00406470",
            "funcStartAddr": "0x406470",
            "funcEndAddr": "0x406a36",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x406470 */\n#include <stdint.h>\n \nuint64_t fcn_00406470 (int64_t arg_70h, int64_t arg_78h, int64_t arg1, int64_t arg2, int64_t arg3, uint32_t arg4, int64_t arg5, int64_t arg6) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_1ch;\n    int64_t var_20h;\n    int64_t var_28h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rbx = *((rsp + 0x70));\n    *((rsp + 8)) = rcx;\n    *((rsp + 0x10)) = r8;\n    r13d = *((rbx + 4));\n    if (edi <= 0) {\n        goto label_16;\n    }\n    eax = *(rbx);\n    r12 = rsi;\n    r15 = rdx;\n    *((rbx + 0x10)) = 0;\n    if (eax == 0) {\n        goto label_17;\n    }\n    esi = *((rbx + 0x18));\n    if (esi == 0) {\nlabel_1:\n        *((rbx + 0x30)) = eax;\n        *((rbx + 0x2c)) = eax;\n        *((rbx + 0x20)) = 0;\n        eax = *(r15);\n        if (al == 0x2d) {\n            goto label_18;\n        }\n        if (al == 0x2b) {\n            goto label_19;\n        }\n        ecx = *((rsp + 0x78));\n        edx = 0;\n        if (ecx == 0) {\n            goto label_20;\n        }\nlabel_8:\n        *((rbx + 0x28)) = 0;\n        goto label_11;\n    }\n    eax = *(rdx);\n    rdx = *((rbx + 0x20));\n    ecx = rax - 0x2b;\n    ecx &= 0xfd;\n    if (ecx != 0) {\n        goto label_21;\n    }\n    eax = *((r15 + 1));\n    r15++;\n    eax = 0;\n    if (al == 0x3a) {\n        r13d = eax;\n    }\n    if (rdx != 0) {\n        goto label_22;\n    }\n    do {\nlabel_0:\n        eax = *(rbx);\n        if (*((rbx + 0x30)) > eax) {\n            *((rbx + 0x30)) = eax;\n        }\n        if (eax < *((rbx + 0x2c))) {\n            *((rbx + 0x2c)) = eax;\n        }\n        if (*((rbx + 0x28)) == 1) {\n            goto label_23;\n        }\nlabel_4:\n        if (ebp == eax) {\n            goto label_24;\n        }\n        rdx = (int64_t) eax;\n        ecx = 3;\n        edi = 0x4094e9;\n        r14 = *((r12 + rdx*8));\n        rsi = *((r12 + rdx*8));\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (ebp > eax) ? 1 : 0;\n        if (cl != 0) {\n            goto label_25;\n        }\n        edx = *((rbx + 0x2c));\n        ecx = *((rbx + 0x30));\n        eax++;\n        *(rbx) = eax;\n        if (edx == ecx) {\n            goto label_26;\n        }\n        if (eax != ecx) {\n            fcn_00405d70 (r12, rbx);\n            edx = *((rbx + 0x2c));\n        }\nlabel_12:\n        *((rbx + 0x30)) = ebp;\n        *(rbx) = ebp;\n        goto label_27;\nlabel_18:\n        *((rbx + 0x28)) = 2;\n        r15++;\n        edx = 0;\nlabel_11:\n        *((rbx + 0x18)) = 1;\n        eax = *(r15);\nlabel_21:\n        eax = 0;\n        if (al == 0x3a) {\n            r13d = eax;\n        }\n    } while (rdx == 0);\nlabel_22:\n    if (*(rdx) == 0) {\n        goto label_0;\n    }\nlabel_6:\n    r8 = rdx + 1;\n    *((rsp + 0x20)) = rdx;\n    *((rbx + 0x20)) = r8;\n    r14d = *(rdx);\n    *((rsp + 0x28)) = r8;\n    *((rsp + 0x1c)) = r14b;\n    rax = strchr (r15, r14d);\n    rdx = *((rsp + 0x20));\n    ecx = *((rsp + 0x1c));\n    r8 = *((rsp + 0x28));\n    if (*((rdx + 1)) == 0) {\n        *(rbx)++;\n    }\n    ecx -= 0x3a;\n    if (cl <= 1) {\n        goto label_28;\n    }\n    if (rax == 0) {\n        goto label_28;\n    }\n    ecx = *((rax + 1));\n    if (*(rax) == 0x57) {\n        goto label_29;\n    }\nlabel_7:\n    if (cl == 0x3a) {\n        goto label_30;\n    }\n    do {\nlabel_2:\n        eax = r14d;\n        return rax;\nlabel_25:\n        if (*(r14) == 0x2d) {\n            goto label_31;\n        }\nlabel_5:\n        edx = *((rbx + 0x28));\n        if (edx == 0) {\n            goto label_16;\n        }\n        eax++;\n        *((rbx + 0x10)) = r14;\n        r14d = 1;\n        *(rbx) = eax;\n    } while (1);\nlabel_17:\n    *(rbx) = 1;\n    eax = 1;\n    goto label_1;\nlabel_24:\n    ebp = *((rbx + 0x30));\n    edx = *((rbx + 0x2c));\nlabel_27:\n    if (edx != ebp) {\n        *(rbx) = edx;\n    }\nlabel_16:\n    r14d = 0xffffffff;\n    goto label_2;\nlabel_23:\n    edx = *((rbx + 0x30));\n    if (*((rbx + 0x2c)) == edx) {\n        goto label_32;\n    }\n    if (eax != edx) {\n        *((rsp + 0x1c)) = r9d;\n        fcn_00405d70 (r12, rbx);\n        edx = *(rbx);\n        r9d = *((rsp + 0x1c));\n    }\nlabel_9:\n    if (ebp <= edx) {\n        goto label_33;\n    }\n    rax = (int64_t) edx;\n    while (*(rcx) != 0x2d) {\nlabel_3:\n        edx = rsi + 1;\n        rax++;\n        *(rbx) = edx;\n        if (ebp <= eax) {\n            goto label_33;\n        }\n        rcx = *((r12 + rax*8));\n        esi = eax;\n        edx = eax;\n    }\n    if (*((rcx + 1)) == 0) {\n        goto label_3;\n    }\n    eax = *(rbx);\nlabel_10:\n    *((rbx + 0x30)) = edx;\n    goto label_4;\nlabel_31:\n    ecx = *((r14 + 1));\n    if (cl == 0) {\n        goto label_5;\n    }\n    if (*((rsp + 8)) == 0) {\n        goto label_34;\n    }\n    if (cl == 0x2d) {\n        goto label_35;\n    }\n    if (r9d == 0) {\n        goto label_34;\n    }\n    if (*((r14 + 2)) == 0) {\n        esi = (int32_t) cl;\n        *((rsp + 0x1c)) = r9d;\n        rax = strchr (r15, rsi);\n        r9d = *((rsp + 0x1c));\n        if (rax != 0) {\n            goto label_34;\n        }\n    }\n    rdx = r14 + 1;\n    *((rbx + 0x20)) = rdx;\n    eax = fcn_00405e50 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), r9);\n    r14d = eax;\n    if (eax != 0xffffffff) {\n        goto label_2;\n    }\n    rax = *(rbx);\n    r14 = *((r12 + rax*8));\nlabel_34:\n    rdx = r14 + 1;\n    goto label_6;\nlabel_29:\n    if (*((rsp + 8)) == 0) {\n        goto label_7;\n    }\n    if (cl != 0x3b) {\n        goto label_7;\n    }\n    if (*((rdx + 1)) == 0) {\n        rax = *(rbx);\n        if (eax == ebp) {\n            goto label_36;\n        }\n        r8 = *((r12 + rax*8));\n    }\n    *((rbx + 0x20)) = r8;\n    *((rbx + 0x10)) = 0;\nlabel_14:\n    eax = fcn_00405e50 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), 0);\n    r14d = eax;\n    goto label_2;\nlabel_20:\n    *((rsp + 0x1c)) = r9d;\n    rax = getenv (\"POSIXLY_CORRECT\");\n    r9d = *((rsp + 0x1c));\n    if (rax == 0) {\n        goto label_37;\n    }\n    rdx = *((rbx + 0x20));\n    goto label_8;\nlabel_30:\n    edx = *((rdx + 1));\n    if (*((rax + 2)) == 0x3a) {\n        goto label_38;\n    }\n    rax = *(rbx);\n    if (dl != 0) {\n        goto label_39;\n    }\n    if (ebp == eax) {\n        goto label_40;\n    }\n    edx = rax + 1;\n    rax = *((r12 + rax*8));\n    *(rbx) = edx;\n    *((rbx + 0x10)) = rax;\nlabel_13:\n    *((rbx + 0x20)) = 0;\n    goto label_2;\nlabel_32:\n    if (eax == edx) {\n        goto label_9;\n    }\n    *((rbx + 0x2c)) = eax;\n    edx = eax;\n    goto label_9;\nlabel_33:\n    eax = edx;\n    goto label_10;\nlabel_19:\n    *((rbx + 0x28)) = 0;\n    r15++;\n    edx = 0;\n    goto label_11;\nlabel_28:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0x3f;\n        goto label_2;\nlabel_26:\n        *((rbx + 0x2c)) = eax;\n        edx = eax;\n        goto label_12;\nlabel_39:\n        eax++;\n        *((rbx + 0x10)) = r8;\n        *(rbx) = eax;\n        goto label_13;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: invalid option -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_38:\n    if (dl != 0) {\n        *((rbx + 0x10)) = r8;\n        *(rbx)++;\n        goto label_13;\nlabel_37:\n        *((rbx + 0x28)) = 1;\n        rdx = *((rbx + 0x20));\n        goto label_11;\n    }\n    *((rbx + 0x10)) = 0;\n    goto label_13;\nlabel_40:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_13;\nlabel_35:\n        rdx = r14 + 2;\n        *((rbx + 0x20)) = rdx;\n        goto label_14;\nlabel_36:\n        if (r13d != 0) {\n            goto label_41;\n        }\nlabel_15:\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_2;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_41:\n    rbp = *(r12);\n    edx = 5;\n    rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n    rdi = stderr;\n    r8d = r14d;\n    esi = 1;\n    rdx = rax;\n    rcx = rbp;\n    eax = 0;\n    fprintf_chk ();\n    goto label_15;\n}\n"
        },
        {
            "funcName": "fcn_00406a40",
            "funcStartAddr": "0x406a40",
            "funcEndAddr": "0x406a96",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x406a40 */\n#include <stdint.h>\n \nint32_t fcn_00406a40 (int64_t arg_10h) {\n    eax = *(0x0060b2bc);\n    *(0x0060b4a0) = eax;\n    eax = *(0x0060b2b8);\n    *(0x0060b4a4) = eax;\n    eax = *((rsp + 0x10));\n    fcn_00406470 (rdi, rsi, rdx, rcx, r8, r9);\n    edx = imp.__libc_start_main;\n    *(0x0060b2bc) = edx;\n    rdx = imp.__libc_start_main;\n    *(0x0060b4f0) = rdx;\n    edx = imp.__libc_start_main;\n    *(0x0060b2b4) = edx;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00406ac0",
            "funcStartAddr": "0x406ac0",
            "funcEndAddr": "0x406ad3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x406ac0 */\n#include <stdint.h>\n \nvoid fcn_00406ac0 (void) {\n    r9d = 0;\n    fcn_00406a40 (rdi);\n}\n"
        },
        {
            "funcName": "fcn_00406b40",
            "funcStartAddr": "0x406b40",
            "funcEndAddr": "0x406bba",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x406b40 */\n#include <stdint.h>\n \nuint64_t fcn_00406b40 (wint_t arg1, int64_t arg2, size_t * arg3, mbstate_t * ps) {\n    int64_t var_ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = ps;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    rbx = 0xfffffffffffffffe;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r12 = rdi;\n    while (1) {\n        rax = mbrtowc (r12, rbp, rdx, rcx);\n        rbx = rax;\n        if (rax > 0xfffffffffffffffd) {\n            goto label_2;\n        }\nlabel_0:\n        rax = rbx;\n        return rax;\nlabel_1:\n        edx = 1;\n        r12 = rsp + 0xc;\n    }\nlabel_2:\n    al = fcn_00406e80 (0);\n    if (al != 0) {\n        goto label_0;\n    }\n    eax = *(rbp);\n    ebx = 1;\n    *(r12) = eax;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00406cd0",
            "funcStartAddr": "0x406cd0",
            "funcEndAddr": "0x406d2d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x406cd0 */\n#include <stdint.h>\n \nuint64_t fcn_00406cd0 (int64_t arg1) {\n    rdi = arg1;\n    rax = fpending ();\n    ebx = *(rbp);\n    r12 = rax;\n    ebx &= 0x20;\n    eax = fcn_00405c20 (rbp);\n    if (ebx != 0) {\n        goto label_1;\n    }\n    if (eax == 0) {\n        goto label_0;\n    }\n    if (r12 != 0) {\n        goto label_2;\n    }\n    rax = errno_location ();\n    al = (*(rax) != 9) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = -eax;\n    do {\nlabel_0:\n        return rax;\nlabel_1:\n        if (eax != 0) {\n            goto label_2;\n        }\n        errno_location ();\n        *(rax) = 0;\n        eax = 0xffffffff;\n    } while (1);\nlabel_2:\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00406d30",
            "funcStartAddr": "0x406d30",
            "funcEndAddr": "0x406e80",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x406d30 */\n#include <stdint.h>\n \nuint64_t fcn_00406d30 (int64_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    eax = 0;\n    if (rsi == 0) {\n        goto label_4;\n    }\n    r12 = rdi;\n    rbx = rsi;\n    rax = fcn_00407450 (rdi);\n    if (rax == 0) {\n        goto label_5;\n    }\n    r13 = rsp;\n    while (eax != 0xffffffff) {\n        rbx--;\n        if (rbx == 0) {\n            goto label_6;\n        }\n        rbp--;\n        if (rbp == 0) {\n            goto label_5;\n        }\n        rax = fcn_00405ce0 (r12, r13);\n        if (rax != 0) {\n            rax = *(rsp);\n            if (rax == 0) {\n                goto label_7;\n            }\n            if (rax > rbx) {\n                rax = rbx;\n            }\n            *((r12 + 8)) += rax;\n            rbx -= rax;\n            if (rbx == 0) {\n                goto label_6;\n            }\n            rbp -= rax;\n            if (rbp == 0) {\n                goto label_5;\n            }\n        }\nlabel_7:\n        eax = fgetc (r12);\n    }\nlabel_1:\n    eax = ferror (r12);\n    al = (eax != 0) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = -eax;\nlabel_3:\n    return rax;\n    do {\nlabel_6:\n        eax = 0;\n        return rax;\nlabel_4:\n        return rax;\nlabel_5:\n        eax = fileno (r12);\n        if (eax >= 0) {\n            goto label_8;\n        }\nlabel_2:\n        r13 = rsp;\n        r14d = 0x1000;\n        goto label_9;\nlabel_0:\n        rbx -= rbp;\n    } while (rbx == 0);\nlabel_9:\n    r8 = r12;\n    rdi = r13;\n    if (rbx <= 0x1000) {\n    }\n    edx = 1;\n    esi = 0x1000;\n    rcx = rbp;\n    rax = fread_chk ();\n    if (rbp <= rax) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_8:\n    esi = 0;\n    edx = 1;\n    edi = eax;\n    rax = lseek ();\n    if (rax < 0) {\n        goto label_2;\n    }\n    fcn_00405d10 (r12, rbx, 1);\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_00406e80",
            "funcStartAddr": "0x406e80",
            "funcEndAddr": "0x406ede",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x406e80 */\n#include <stdint.h>\n \nuint64_t fcn_00406e80 (int32_t category) {\n    rdi = category;\n    rax = setlocale (rdi, 0);\n    rdx = rax;\n    eax = 1;\n    if (rdx != 0) {\n        ecx = 2;\n        edi = 0x40950c;\n        rsi = rdx;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (rdx > 0) ? 1 : 0;\n        eax = 0;\n        if (cl != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    edi = \"POSIX\";\n    ecx = 6;\n    rsi = rdx;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (cl > 0) ? 1 : 0;\n    al = (al != 0) ? 1 : 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00406ee0",
            "funcStartAddr": "0x406ee0",
            "funcEndAddr": "0x407442",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x406ee0 */\n#include <stdint.h>\n \nuint64_t fcn_00406ee0 (void) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_60h;\n    rax = nl_langinfo (0xe);\n    r15 = imp.__libc_start_main;\n    rbx = rax;\n    eax = 0x409507;\n    if (rax == 0) {\n        rbx = rax;\n    }\n    if (r15 == 0) {\n        goto label_15;\n    }\nlabel_1:\n    ebp = *(r15);\n    if (bpl != 0) {\n        goto label_16;\n    }\n    goto label_17;\n    do {\nlabel_0:\n        strlen (r15);\n        rbp = r15 + rax + 1;\n        strlen (rbp);\n        r15 = rbp + rax + 1;\n        ebp = *(r15);\n        if (bpl == 0) {\n            goto label_17;\n        }\nlabel_16:\n        eax = strcmp (rbx, r15);\n        if (eax == 0) {\n            goto label_18;\n        }\n    } while (bpl != 0x2a);\n    if (*((r15 + 1)) != 0) {\n        goto label_0;\n    }\nlabel_18:\n    strlen (r15);\n    rbx = r15 + rax + 1;\nlabel_17:\n    eax = \"ASCII\";\n    if (*(rbx) == 0) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\nlabel_15:\n    rax = getenv (\"CHARSETALIASDIR\");\n    r13 = rax;\n    if (rax == 0) {\n        goto label_19;\n    }\n    if (*(rax) == 0) {\n        goto label_19;\n    }\n    rax = strlen (rax);\n    r12 = rax;\n    r14 = rax;\n    if (rax != 0) {\n        goto label_20;\n    }\nlabel_13:\n    rax = malloc (0xe);\n    if (rax != 0) {\n        goto label_21;\n    }\n    do {\n        r15d = 0x409507;\nlabel_2:\n        *(0x0060b4d8) = r15;\n        goto label_1;\nlabel_19:\n        r12d = 0x65;\n        r14d = 0x64;\n        r13d = \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\";\nlabel_14:\n        rax = malloc (0x73);\n    } while (rax == 0);\n    memcpy (rbp, r13, r14);\n    *((rbp + r14)) = 0x2f;\n    do {\n        r12 += rbp;\n        rax = 0x2e74657372616863;\n        *(r12) = rax;\n        eax = 0x73;\n        *((r12 + 0xc)) = ax;\n        eax = 0;\n        *((r12 + 8)) = 0x61696c61;\n        eax = open (rbp, 0, rdx);\n        r12d = eax;\n        if (eax >= 0) {\n            goto label_22;\n        }\nlabel_6:\n        r15d = 0x409507;\nlabel_7:\n        free (rbp);\n        goto label_2;\nlabel_21:\n        eax = memcpy (rbp, r13, r14);\n    } while (1);\nlabel_22:\n    esi = 0x40764e;\n    edi = eax;\n    r15d = 0;\n    rax = fdopen ();\n    *((rsp + 8)) = 0;\n    r13 = rax;\n    if (rax == 0) {\n        goto label_23;\n    }\n    rax = rbx;\n    r12 = rsp + 0x60;\n    r14 = rsp + 0x20;\n    rbx = r13;\n    r13 = rax;\n    do {\nlabel_3:\n        rax = *((rbx + 8));\n        if (rax >= *((rbx + 0x10))) {\n            goto label_24;\n        }\nlabel_4:\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        edi = *(rax);\nlabel_5:\n        eax = rdi - 9;\n    } while (eax <= 1);\n    if (edi == 0x20) {\n        goto label_3;\n    }\n    if (edi == 0x23) {\n        goto label_25;\n    }\n    eax = ungetc (rdi, rbx);\n    eax = 0;\n    rcx = r12;\n    rdx = r14;\n    eax = fscanf (rbx, \"%50s %50s\");\n    if (eax <= 1) {\n        goto label_12;\n    }\n    rcx = r14;\n    do {\n        edx = *(rcx);\n        rcx += 4;\n        eax = rdx - 0x1010101;\n        edx = ~edx;\n        eax &= edx;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    edx = eax;\n    edx >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = edx;\n    }\n    rdx = rcx + 2;\n    if ((eax & 0x8080) == 0) {\n        rcx = rdx;\n    }\n    edx = eax;\n    dl += al;\n    rdx = r12;\n    rcx -= 3;\n    rcx -= r14;\n    do {\n        esi = *(rdx);\n        rdx += 4;\n        eax = rsi - 0x1010101;\n        esi = ~esi;\n        eax &= esi;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    esi = eax;\n    *((rsp + 0x10)) = rcx;\n    esi >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = esi;\n    }\n    rsi = rdx + 2;\n    if ((eax & 0x8080) == 0) {\n        rdx = rsi;\n    }\n    esi = eax;\n    sil += al;\n    rdx -= 3;\n    rdx -= r12;\n    rax = rcx + rdx;\n    *((rsp + 0x18)) = rdx;\n    if (*((rsp + 8)) != 0) {\n        goto label_26;\n    }\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    rax = malloc (rax + 3);\n    rcx = *((rsp + 0x10));\n    rdx = *((rsp + 0x18));\nlabel_9:\n    if (rax == 0) {\n        goto label_27;\n    }\n    rdi = *((rsp + 8));\n    rsi = 0xfffffffffffffffe;\n    rsi -= rcx;\n    rcx++;\n    rdi -= rdx;\n    rsi += rdi;\n    rsi += rax;\n    if (ecx >= 8) {\n        goto label_28;\n    }\n    if ((cl & 4) != 0) {\n        goto label_29;\n    }\n    if (ecx != 0) {\n        r9d = *(r14);\n        *(rsi) = r9b;\n        if ((cl & 2) != 0) {\n            goto label_30;\n        }\n    }\nlabel_10:\n    rdx++;\n    rcx = rax + rdi - 1;\n    if (edx >= 8) {\n        goto label_31;\n    }\n    if ((dl & 4) != 0) {\n        goto label_32;\n    }\n    if (edx != 0) {\n        esi = *(r12);\n        *(rcx) = sil;\n        if ((dl & 2) != 0) {\n            goto label_33;\n        }\n    }\nlabel_11:\n    r15 = rax;\n    rax = *((rbx + 8));\n    if (rax < *((rbx + 0x10))) {\n        goto label_4;\n    }\nlabel_24:\n    rdi = rbx;\n    eax = uflow ();\n    edi = eax;\n    if (eax != 0xffffffff) {\n        goto label_5;\n    }\nlabel_12:\n    rax = r13;\n    r13 = rbx;\n    rbx = rax;\n    fcn_00405c20 (rbx);\n    rax = *((rsp + 8));\n    if (rax == 0) {\n        goto label_6;\n    }\n    *((r15 + rax)) = 0;\n    goto label_7;\n    do {\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        eax = *(rax);\n        edx = 1;\nlabel_8:\n        if (eax == 0xa) {\n            goto label_34;\n        }\n        if (dl == 0) {\n            goto label_34;\n        }\nlabel_25:\n        rax = *((rbx + 8));\n    } while (rax < *((rbx + 0x10)));\n    rdi = rbx;\n    eax = uflow ();\n    dl = (eax != 0xffffffff) ? 1 : 0;\n    goto label_8;\nlabel_26:\n    rax += *((rsp + 8));\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    eax = realloc (r15, rax + 3);\n    rdx = *((rsp + 0x18));\n    rcx = *((rsp + 0x10));\n    goto label_9;\nlabel_28:\n    r9 = *(r14);\n    *(rsi) = r9;\n    r9d = ecx;\n    r10 = *((r14 + r9 - 8));\n    *((rsi + r9 - 8)) = r10;\n    r9 = rsi + 8;\n    r10 = r14;\n    r9 &= 0xfffffffffffffff8;\n    rsi -= r9;\n    ecx += esi;\n    r10 -= rsi;\n    ecx &= 0xfffffff8;\n    if (ecx < 8) {\n        goto label_10;\n    }\n    ecx &= 0xfffffff8;\n    esi = 0;\n    do {\n        r8d = esi;\n        esi += 8;\n        r11 = *((r10 + r8));\n        *((r9 + r8)) = r11;\n    } while (esi < ecx);\n    goto label_10;\nlabel_31:\n    rsi = *(r12);\n    r9 = r12;\n    *(rcx) = rsi;\n    esi = edx;\n    rdi = *((r12 + rsi - 8));\n    *((rcx + rsi - 8)) = rdi;\n    rdi = rcx + 8;\n    rdi &= 0xfffffffffffffff8;\n    rcx -= rdi;\n    edx += ecx;\n    r9 -= rcx;\n    edx &= 0xfffffff8;\n    if (edx < 8) {\n        goto label_11;\n    }\n    edx &= 0xfffffff8;\n    ecx = 0;\n    do {\n        esi = ecx;\n        ecx += 8;\n        r8 = *((r9 + rsi));\n        *((rdi + rsi)) = r8;\n    } while (ecx < edx);\n    goto label_11;\nlabel_34:\n    if (eax == 0xffffffff) {\n        goto label_12;\n    }\n    goto label_3;\nlabel_20:\n    if (*((r13 + rax - 1)) == 0x2f) {\n        rdi = rax + 0xe;\n        goto label_13;\nlabel_23:\n        close (r12d);\n        goto label_6;\nlabel_29:\n        r9d = *(r14);\n        *(rsi) = r9d;\n        r9d = *((r14 + rcx - 4));\n        *((rsi + rcx - 4)) = r9d;\n        goto label_10;\nlabel_32:\n        esi = *(r12);\n        *(rcx) = esi;\n        esi = *((r12 + rdx - 4));\n        *((rcx + rdx - 4)) = esi;\n        goto label_11;\nlabel_27:\n        rax = r13;\n        r13 = rbx;\n        r15d = 0x409507;\n        rbx = rax;\n        free (r15);\n        fcn_00405c20 (r13);\n        goto label_7;\nlabel_30:\n        r9d = *((r14 + rcx - 2));\n        *((rsi + rcx - 2)) = r9w;\n        goto label_10;\nlabel_33:\n        esi = edx;\n        edx = *((r12 + rsi - 2));\n        *((rcx + rsi - 2)) = dx;\n        goto label_11;\n    }\n    rdi = rax + 0xf;\n    r12++;\n    goto label_14;\n}\n"
        },
        {
            "funcName": "fcn_00407450",
            "funcStartAddr": "0x407450",
            "funcEndAddr": "0x407478",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x407450 */\n#include <stdint.h>\n \nint64_t fcn_00407450 (uint32_t arg1) {\n    rdi = arg1;\n    eax = 0;\n    rcx = *((rdi + 0x20));\n    if (*((rdi + 0x28)) <= rcx) {\n        rax = *((rdi + 0x10));\n        rax -= *((rdi + 8));\n        if ((*(rdi) & 0x100) == 0) {\n            goto label_0;\n        }\n        rdx = *((rdi + 0x58));\n        rdx -= *((rdi + 0x48));\n        rax += rdx;\n    }\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004074f0",
            "funcStartAddr": "0x4074f0",
            "funcEndAddr": "0x407508",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x4074f0 */\n#include <stdint.h>\n \nint64_t fcn_004074f0 (void) {\n    rax = 0x60b228;\n    edx = 0;\n    if (rax != 0) {\n        rdx = *(rax);\n    }\n    esi = 0;\n    return cxa_atexit ();\n}\n"
        },
        {
            "funcName": "fcn_00407508",
            "funcStartAddr": "0x407508",
            "funcEndAddr": "0x407528",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cut.elf @ 0x407508 */\n#include <stdint.h>\n \nvoid fcn_00407508 (int64_t arg3) {\n    rdx = arg3;\n    ebx = segment.GNU_RELRO;\n    do {\n        rax = *(rbx);\n        if (rax == -1) {\n            goto label_0;\n        }\n        void (*rax)() ();\n        rbx -= 8;\n    } while (1);\nlabel_0:\n}\n"
        }
    ],
    "funcCount": 43
}