{
    "binaryInfo": {
        "isStripped": true,
        "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf"
    },
    "buildInfo": {
        "decompilerName": "radare2",
        "compilerName": "gcc",
        "compilerVersion": "9.4.0",
        "optLevel": "O"
    },
    "funcInfo": [
        {
            "funcName": "main",
            "funcStartAddr": "0x402210",
            "funcEndAddr": "0x402950",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x402210 */\n#include <stdint.h>\n \nint32_t main (int32_t argc, char ** argv) {\n    int64_t var_8h;\n    int64_t var_10h;\n    uint32_t var_18h;\n    uint32_t var_1fh;\n    int64_t var_20h;\n    int64_t var_38h;\n    rdi = argc;\n    rsi = argv;\n    r15d = 0;\n    r14d = 0;\n    r13d = 0;\n    r12d = 0;\n    ebx = edi;\n    fcn_00406260 (*(rsi));\n    setlocale (6, 0x40e307);\n    bindtextdomain (0x40bcb9, \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\");\n    textdomain (0x40bcb9, rsi);\n    edi = 0x404960;\n    fcn_0040bb40 ();\n    *(0x006113e0) = 0;\n    *(0x006113e1) = 0;\n    *(0x006113e3) = 0;\n    *(0x006113e2) = 0;\n    *(0x006113e6) = 0;\n    *((rsp + 8)) = 0;\n    do {\nlabel_0:\n        r8d = 0;\n        ecx = 0x40cc00;\n        edx = \"bdfinrst:vFLPS:T\";\n        rsi = rbp;\n        edi = ebx;\n        eax = fcn_0040a1b0 ();\n        if (eax == 0xffffffff) {\n            goto label_7;\n        }\n        if (eax == 0x62) {\n            goto label_8;\n        }\n        if (eax <= 0x62) {\n            goto label_9;\n        }\n        if (eax == 0x6e) {\n            goto label_10;\n        }\n        if (eax <= 0x6e) {\n            goto label_11;\n        }\n        if (eax == 0x73) {\n            goto label_12;\n        }\n        if (eax <= 0x73) {\n            goto label_13;\n        }\n        if (eax != 0x74) {\n            goto label_14;\n        }\n        if (r13 != 0) {\n            goto label_15;\n        }\n        rsi = imp.__libc_start_main;\n        rdx = rsp + 0x20;\n        edi = 1;\n        eax = xstat ();\n        if (eax != 0) {\n            goto label_16;\n        }\n        eax = *((rsp + 0x38));\n        r13 = imp.__libc_start_main;\n        eax &= 0xf000;\n    } while (eax == 0x4000);\n    rax = fcn_00407c30 (4, r13);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"target %s is not a directory\");\n    rcx = rbx;\n    eax = 0;\n    rax = error (1, 0, rax);\nlabel_9:\n    if (eax == 0x4c) {\n        goto label_17;\n    }\n    if (eax <= 0x4c) {\n        goto label_18;\n    }\n    if (eax == 0x53) {\n        goto label_19;\n    }\n    if (eax == 0x54) {\n        r12d = 1;\n        goto label_0;\nlabel_14:\n        if (eax != 0x76) {\n            goto label_1;\n        }\n        *(0x006113e1) = 1;\n        goto label_0;\n    }\n    if (eax == 0x50) {\n        goto label_20;\n    }\n    do {\nlabel_1:\n        eax = fcn_004032b0 (1);\nlabel_18:\n        if (eax == 0xffffff7e) {\n            goto label_21;\n        }\n        if (eax == 0x46) {\n            goto label_22;\n        }\n    } while (eax != 0xffffff7d);\n    eax = 0;\n    rcx = *(str.8.29);\n    r9d = \"David MacKenzie\";\n    r8d = \"Mike Parker\";\n    fcn_00408910 (*(obj.stdout), 0x40bc39, \"GNU coreutils\");\n    eax = exit (0);\nlabel_13:\n    if (eax != 0x72) {\n        goto label_1;\n    }\n    *(0x006113e5) = 1;\n    goto label_0;\nlabel_11:\n    if (eax == 0x66) {\n        goto label_23;\n    }\n    if (eax == 0x69) {\n        *(0x006113e2) = 0;\n        *(0x006113e3) = 1;\n        goto label_0;\n    }\n    if (eax != 0x64) {\n        goto label_1;\n    }\nlabel_22:\n    *(0x006113e0) = 1;\n    goto label_0;\nlabel_23:\n    *(0x006113e2) = 1;\n    *(0x006113e3) = 0;\n    goto label_0;\nlabel_12:\n    *(0x006113e6) = 1;\n    goto label_0;\nlabel_10:\n    *(0x006112f0) = 0;\n    goto label_0;\nlabel_8:\n    rax = imp.__libc_start_main;\n    r14d = 1;\n    if (rax != 0) {\n        r15 = rax;\n    }\n    goto label_0;\nlabel_19:\n    rax = imp.__libc_start_main;\n    r14d = 1;\n    *((rsp + 8)) = rax;\n    goto label_0;\nlabel_17:\n    *(0x006113e4) = 1;\n    goto label_0;\nlabel_20:\n    *(0x006113e4) = 0;\n    goto label_0;\nlabel_7:\n    rax = *(0x0061137c);\n    ebx -= eax;\n    rbp = rbp + rax*8;\n    if (ebx <= 0) {\n        goto label_24;\n    }\n    if (r12b != 0) {\n        goto label_25;\n    }\n    if (r13 == 0) {\n        goto label_26;\n    }\n    do {\nlabel_3:\n        eax = 0;\n        if (r14b != 0) {\n            goto label_27;\n        }\nlabel_2:\n        *(0x006113e8) = eax;\n        fcn_00403ce0 (*((rsp + 8)));\n        if (*(0x006113e5) != 0) {\n            if (*(0x006113e6) == 0) {\n                goto label_28;\n            }\n        }\n        if (r13 == 0) {\n            goto label_29;\n        }\n        if (ebx == 1) {\n            goto label_30;\n        }\n        if (*(0x006113e2) == 0) {\n            goto label_30;\n        }\n        if (*(0x006113e6) != 0) {\n            goto label_30;\n        }\n        if (*(0x006113e8) == 3) {\n            goto label_30;\n        }\n        rax = fcn_004057d0 (0x3d, 0, 0x406190, 0x4061d0, 0x406240);\n        *(0x006113d8) = rax;\n        if (rax != 0) {\n            goto label_30;\n        }\n        fcn_00408ca0 ();\nlabel_25:\n        if (r13 != 0) {\n            goto label_31;\n        }\n        if (ebx != 2) {\n            goto label_32;\n        }\nlabel_4:\n        ebx = 2;\n        r13d = 0;\n    } while (1);\nlabel_30:\n    eax = rbx - 1;\n    r14d = 1;\n    r12 = rsp + 0x20;\n    r15 = rbp + rax*8 + 8;\n    do {\n        rbp += 8;\n        rax = fcn_00404ca0 (*(rbp));\n        rdx = r12;\n        rdi = r13;\n        rsi = rax;\n        rax = fcn_00404e40 ();\n        rbx = rax;\n        fcn_00404d30 (*((rsp + 0x20)));\n        eax = fcn_00402a30 (*((rbp - 8)), rbx);\n        r14d &= eax;\n        free (rbx);\n    } while (rbp != r15);\n    do {\n        r14d ^= 1;\n        eax = (int32_t) r14b;\n        return rax;\nlabel_27:\n        edx = 5;\n        rax = dcgettext (0, \"backup type\");\n        rsi = r15;\n        fcn_00404280 (rax);\n        goto label_2;\nlabel_29:\n        eax = fcn_00402a30 (*(rbp), *((rbp + 8)));\n        r14d = eax;\n    } while (1);\nlabel_26:\n    r13d = 0x40ce0b;\n    if (ebx == 1) {\n        goto label_3;\n    }\n    rax = (int64_t) ebx;\n    rax = rbp + rax*8 - 8;\n    r13 = *(rax);\n    *((rsp + 0x10)) = rax;\n    rax = fcn_00404ca0 (r13);\n    rcx |= 0xffffffffffffffff;\n    rdi = rax;\n    rdx = rax;\n    eax = r12d;\n    __asm (\"repne scasb al, byte [rdi]\");\n    *((rsp + 0x18)) = 1;\n    rax = rcx;\n    rax = ~rax;\n    rax--;\n    if (rax != 0) {\n        al = (*((rdx + rax - 1)) == 0x2f) ? 1 : 0;\n        eax = (int32_t) al;\n        *((rsp + 0x18)) = eax;\n    }\n    eax = *((rsp + 0x18));\n    r12 = rsp + 0x20;\n    rsi = r13;\n    edi = 1;\n    rdx = r12;\n    eax &= 1;\n    *((rsp + 0x1f)) = al;\n    if (*(0x006112f0) == 0) {\n        goto label_33;\n    }\n    eax = xstat ();\nlabel_6:\n    if (eax == 0) {\n        goto label_34;\n    }\n    rax = errno_location ();\n    r12d = *(rax);\n    if (r12d == 0) {\n        goto label_34;\n    }\n    if (r12d > 0x28) {\n        goto label_35;\n    }\n    rax = 0x11000100004;\n    if (((rax >> r12) & 1) >= 0) {\n        goto label_35;\n    }\n    if (*((rsp + 0x18)) != 0) {\n        goto label_36;\n    }\nlabel_5:\n    if (ebx == 2) {\n        goto label_4;\n    }\n    rax = *((rsp + 0x10));\n    rax = fcn_00407c30 (4, *(rax));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"target %s is not a directory\");\n    rcx = rbx;\n    eax = 0;\n    error (1, 0, rax);\nlabel_34:\n    eax = *((rsp + 0x38));\n    eax &= 0xf000;\n    dl = (eax == 0x4000) ? 1 : 0;\n    if (dl < *((rsp + 0x1f))) {\n        goto label_37;\n    }\n    if (eax != 0x4000) {\n        goto label_5;\n    }\n    ebx--;\n    rax = (int64_t) ebx;\n    r13 = *((rbp + rax*8));\n    goto label_3;\nlabel_33:\n    lxstat ();\n    goto label_6;\nlabel_21:\n    fcn_004032b0 (0);\nlabel_35:\n    rax = fcn_00407c30 (4, r13);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"failed to access %s\");\n    rcx = rbx;\n    eax = 0;\n    error (1, r12d, rax);\nlabel_37:\n    r12d = 0;\nlabel_36:\n    rax = fcn_00407c30 (4, r13);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"target %s is not a directory\");\n    rcx = rbx;\n    eax = 0;\n    error (1, r12d, rax);\nlabel_24:\n    edx = 5;\n    rax = dcgettext (0, \"missing file operand\");\n    eax = 0;\n    error (0, 0, rax);\n    goto label_1;\nlabel_32:\n    ebx--;\n    if (ebx == 0) {\n        goto label_38;\n    }\n    rax = fcn_00407c30 (4, *((rbp + 0x10)));\n    edx = 5;\n    rbx = rax;\n    do {\n        rax = dcgettext (0, \"extra operand %s\");\n        rcx = rbx;\n        eax = 0;\n        error (0, 0, rax);\n        goto label_1;\nlabel_31:\n        edx = 5;\n        rax = dcgettext (0, \"cannot combine --target-directory and --no-target-directory\");\n        eax = 0;\n        error (1, 0, rax);\nlabel_38:\n        rax = fcn_00407c30 (4, *(rbp));\n        edx = 5;\n        esi = \"missing destination file operand after %s\";\n        rbx = rax;\n    } while (1);\nlabel_28:\n    edx = 5;\n    rax = dcgettext (0, \"cannot do --relative without --symbolic\");\n    eax = 0;\n    error (1, 0, rax);\nlabel_16:\n    rax = fcn_00407c30 (4, *(0x006115a0));\n    edx = 5;\n    rax = dcgettext (0, \"failed to access %s\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    error (1, *(rax), rbx);\nlabel_15:\n    edx = 5;\n    rax = dcgettext (0, \"multiple target directories specified\");\n    eax = 0;\n    error (1, 0, rax);\n}\n"
        },
        {
            "funcName": "fcn_0040297b",
            "funcStartAddr": "0x40297b",
            "funcEndAddr": "0x40299a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40297b */\n#include <stdint.h>\n \nint32_t fcn_0040297b (void) {\n    eax = 0x611388;\n    if (rax != 0x611388) {\n        eax = 0;\n        if (rax == 0) {\n            goto label_0;\n        }\n        edi = 0x611388;\n        void (*rax)() ();\n    }\nlabel_0:\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_004029d1",
            "funcStartAddr": "0x4029d1",
            "funcEndAddr": "0x402a28",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x4029d1 */\n#include <stdint.h>\n \nint64_t fcn_004029d1 (int32_t argc, func fini, func init, func main, func rtld_fini, void * stack_end, char ** ubp_av) {\n    rsi = argc;\n    r8 = fini;\n    rcx = init;\n    rdi = main;\n    r9 = rtld_fini;\n    xmm0 = stack_end;\n    rdx = ubp_av;\n    if (*(0x006113c8) != 0) {\n        goto label_0;\n    }\n    r12d = section..dtors;\n    ebx = 0x610e48;\n    rbx -= section..dtors;\n    rbx >>= 3;\n    rbx--;\n    do {\n        rax = imp.__libc_start_main;\n        if (rax >= rbx) {\n            goto label_1;\n        }\n        rax++;\n        *(0x006113d0) = rax;\n        uint64_t (*r12 + rax*8)() ();\n    } while (1);\nlabel_1:\n    fcn_0040297b ();\n    *(0x006113c8) = 1;\n    return rax;\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00402a28",
            "funcStartAddr": "0x402a28",
            "funcEndAddr": "0x402abb",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x402a28 */\n#include <stdint.h>\n \nint64_t fcn_00402a28 (void) {\n    do {\n        esi = 0x611388;\n        ecx = 2;\n        rsi -= 0x611388;\n        rsi >>= 3;\n        rax = rsi;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rsi = rax;\n        if (rax != 0) {\n            eax = 0;\n            if (rax == 0) {\n                goto label_0;\n            }\n            edi = 0x611388;\n            void (*rax)() ();\n        }\nlabel_0:\n        return rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00402a30",
            "funcStartAddr": "0x402a30",
            "funcEndAddr": "0x4032ac",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x402a30 */\n#include <stdint.h>\n \nuint64_t fcn_00402a30 (int64_t arg1, int64_t arg2) {\n    void * errname;\n    void * var_10h;\n    void * ptr;\n    uint32_t var_20h;\n    uint32_t var_28h;\n    uint32_t var_30h;\n    int64_t var_38h;\n    int64_t var_b0h;\n    int64_t var_b8h;\n    int64_t var_c8h;\n    rdi = arg1;\n    rsi = arg2;\n    r12 = rdi;\n    ebx = *(0x006113e6);\n    if (bl == 0) {\n        rsi = rdi;\n        rdx = rsp + 0x20;\n        edi = 1;\n        if (*(0x006113e4) == 0) {\n            goto label_18;\n        }\n        eax = xstat ();\n        al = (eax != 0) ? 1 : 0;\n        if (al != 0) {\n            goto label_19;\n        }\nlabel_3:\n        eax = *((rsp + 0x38));\n        eax &= 0xf000;\n        if (eax == 0x4000) {\n            goto label_20;\n        }\n    }\n    r15d = 0;\nlabel_9:\n    r13d = *(0x006113e2);\n    if (r13b == 0) {\n        if (*(0x006113e3) == 0) {\n            goto label_21;\n        }\n    }\nlabel_2:\n    rdx = rsp + 0xb0;\n    rsi = rbp;\n    edi = 1;\n    eax = lxstat ();\n    r14d = eax;\n    if (eax == 0) {\n        goto label_22;\n    }\n    rax = errno_location ();\n    if (*(rax) != 2) {\n        goto label_23;\n    }\n    if (r13b == 0) {\n        goto label_24;\n    }\n    do {\nlabel_1:\n        ebx = 0;\n        r13d = 0;\nlabel_0:\n        r14d = 0;\n        if (*(0x006113e5) != 0) {\n            goto label_25;\n        }\nlabel_7:\n        bl |= *(0x006113e2);\n        r9d = (int32_t) bl;\n        if (*(0x006113e6) != 0) {\n            goto label_26;\n        }\n        r8b = (*(0x006113e4) != 0) ? 1 : 0;\n        r8d <<= 0xa;\n        eax = fcn_00403750 (edx, r12, 0xffffff9c, rbp, 0, r9);\n        eax = ~eax;\n        ebx = eax;\n        ebx >>= 0x1f;\nlabel_6:\n        if (bl == 0) {\n            goto label_27;\n        }\n        if (*(0x006113e6) == 0) {\n            goto label_28;\n        }\nlabel_11:\n        if (*(0x006113e1) != 0) {\n            if (r13 != 0) {\n                rax = fcn_00407c30 (4, r13);\n                esi = \"%s ~ \";\n                edi = 1;\n                rdx = rax;\n                eax = 0;\n                printf_chk ();\n            }\n            r12d = 0x3d;\n            rax = fcn_00407b50 (1, 4, r12);\n            ecx = 0x2d;\n            rdx = rbp;\n            if (*(0x006113e6) != 0) {\n                r12d = ecx;\n            }\n            r15 = rax;\n            rax = fcn_00407b50 (0, 4, rdx);\n            r8 = r15;\n            esi = \"%s %c> %s\\n\";\n            edi = 1;\n            rdx = rax;\n            ecx = r12d;\n            eax = 0;\n            printf_chk ();\n        }\nlabel_5:\n        free (r13);\n        free (r14);\nlabel_4:\n        eax = ebx;\n        return rax;\nlabel_22:\n        rdi = imp.__libc_start_main;\n        if (rdi != 0) {\n            al = fcn_00404e00 (rdi, rbp, rsp + 0xb0);\n            if (al != 0) {\n                goto label_29;\n            }\n            r13d = *(0x006113e2);\n        }\n        if (r13b == 0) {\n            goto label_30;\n        }\n        edx = imp.__libc_start_main;\n        if (edx != 0) {\n            goto label_31;\n        }\n        if (*(0x006113e6) == 0) {\n            goto label_13;\n        }\n        rdx = rsp + 0x20;\n        rsi = r12;\n        edi = 1;\n        eax = xstat ();\n        if (eax == 0) {\n            goto label_13;\n        }\nlabel_8:\n        eax = *((rsp + 0xc8));\n        eax &= 0xf000;\n        if (eax == 0x4000) {\n            goto label_32;\n        }\n        ebx = *(0x006113e3);\n        if (bl != 0) {\n            goto label_33;\n        }\nlabel_12:\n        esi = imp.__libc_start_main;\n    } while (esi == 0);\n    rdi = rbp;\n    rax = fcn_00404240 ();\n    rsi = rax;\n    r13 = rax;\n    eax = rename (rbp, rsi);\n    if (eax != 0) {\n        goto label_34;\n    }\n    bl = (r13 != 0) ? 1 : 0;\n    goto label_0;\nlabel_21:\n    esi = imp.__libc_start_main;\n    if (esi == 0) {\n        goto label_1;\n    }\n    goto label_2;\nlabel_18:\n    eax = lxstat ();\n    al = (eax != 0) ? 1 : 0;\n    if (al == 0) {\n        goto label_3;\n    }\nlabel_19:\n    rax = fcn_00407c30 (4, r12);\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"failed to access %s\");\n    rax = errno_location ();\n    rcx = r12;\n    eax = 0;\n    error (0, *(rax), rbp);\n    goto label_4;\nlabel_27:\n    rax = fcn_00407b50 (1, 4, r12);\n    *((rsp + 0x10)) = rax;\n    rax = fcn_00407b50 (0, 4, rbp);\n    *((rsp + 0x18)) = rax;\n    rax = errno_location ();\n    *((rsp + 8)) = rax;\n    if (*(0x006113e6) == 0) {\n        goto label_35;\n    }\n    edx = 5;\n    if (*(rax) != 0x24) {\n        if (*(r12) != 0) {\n            goto label_36;\n        }\n    }\n    rax = dcgettext (0, \"failed to create symbolic link %s -> %s\");\n    rdx = rax;\nlabel_10:\n    rax = *((rsp + 8));\n    r8 = *((rsp + 0x10));\n    rcx = *((rsp + 0x18));\n    eax = 0;\n    error (0, *(rax), rdx);\n    if (r13 == 0) {\n        goto label_5;\n    }\n    eax = rename (r13, rbp);\n    if (eax == 0) {\n        goto label_5;\n    }\n    rax = fcn_00407c30 (4, rbp);\n    edx = 5;\n    rax = dcgettext (0, \"cannot un-backup %s\");\n    rcx = rbp;\n    rdx = rax;\n    rax = *((rsp + 8));\n    eax = 0;\n    error (0, *(rax), rdx);\n    goto label_5;\nlabel_26:\n    eax = fcn_00403890 (r12, 0xffffff9c, rbp, r9d);\n    eax = ~eax;\n    ebx = eax;\n    ebx >>= 0x1f;\n    goto label_6;\nlabel_25:\n    rdi = rbp;\n    rax = fcn_00404bc0 ();\n    rdi = rax;\n    *((rsp + 0x18)) = rax;\n    rax = fcn_004042d0 (rdi, 2);\n    r14 = rax;\n    *((rsp + 8)) = rax;\n    rax = fcn_004042d0 (r12, 2);\n    *((rsp + 0x10)) = rax;\n    if (r14 == 0) {\n        goto label_37;\n    }\n    if (rax == 0) {\n        goto label_37;\n    }\n    rax = fcn_00408a50 (0x1000);\n    rdx = rax;\n    r14 = rax;\n    al = fcn_00403a10 (*((rsp + 0x10)), *((rsp + 8)), rdx, 0x1000);\n    if (al == 0) {\n        goto label_38;\n    }\n    free (*((rsp + 0x18)));\n    free (*((rsp + 8)));\n    free (*((rsp + 0x10)));\n    if (r14 == 0) {\n        goto label_39;\n    }\n    r12 = r14;\n    goto label_7;\nlabel_24:\n    if (bl == 0) {\n        goto label_40;\n    }\nlabel_14:\n    if (r14d == 0) {\n        goto label_8;\n    }\n    goto label_1;\nlabel_20:\n    r15d = *(0x006113e0);\n    if (r15b != 0) {\n        goto label_9;\n    }\n    rax = fcn_00407d00 (0, 3, r12);\n    edx = 5;\n    rbx = rax;\nlabel_15:\n    rax = dcgettext (0, \"%s: hard link not allowed for directory\");\n    rcx = rbx;\n    eax = 0;\n    ebx = 0;\n    error (0, 0, rax);\n    goto label_4;\nlabel_30:\n    if (*(0x006113e6) != 0) {\n        goto label_8;\n    }\n    eax = imp.__libc_start_main;\n    if (eax == 0) {\n        goto label_8;\n    }\nlabel_13:\n    rax = *((rsp + 0xb8));\n    if (*((rsp + 0x28)) != rax) {\n        goto label_8;\n    }\n    rax = *((rsp + 0xb0));\n    if (*((rsp + 0x20)) != rax) {\n        goto label_8;\n    }\n    if (*((rsp + 0x30)) == 1) {\n        goto label_41;\n    }\n    al = fcn_004080f0 (r12, rbp);\n    if (al == 0) {\n        goto label_8;\n    }\nlabel_41:\n    rax = fcn_00407b50 (1, 4, rbp);\n    rax = fcn_00407b50 (0, 4, r12);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"%s and %s are the same file\");\n    r8 = rbp;\nlabel_17:\n    rcx = rbx;\n    eax = 0;\n    ebx = 0;\n    error (0, 0, rax);\n    goto label_4;\nlabel_35:\n    rax = *((rsp + 8));\n    eax = *(rax);\n    if (eax == 0x1f) {\n        goto label_42;\n    }\n    if (eax != 0x7a) {\n        if (eax == 0x11) {\n            goto label_43;\n        }\n        eax &= 0xfffffffd;\n        if (eax == 0x1c) {\n            goto label_43;\n        }\nlabel_16:\n        edx = 5;\n        rax = dcgettext (0, \"failed to create hard link %s => %s\");\n        rdx = rax;\n        goto label_10;\nlabel_38:\n        free (r14);\nlabel_37:\n        free (*((rsp + 0x18)));\n        free (*((rsp + 8)));\n        free (*((rsp + 0x10)));\nlabel_39:\n        rax = fcn_00408c80 (r12);\n        r12 = rax;\n        r14 = rax;\n        goto label_7;\n    }\nlabel_43:\n    edx = 5;\n    rax = dcgettext (0, \"failed to create hard link %s\");\n    rdx = rax;\n    goto label_10;\nlabel_28:\n    rax = fcn_00404d70 (*(0x006113d8), rbp, rsp + 0x20);\n    goto label_11;\nlabel_23:\n    *((rsp + 8)) = rax;\n    rax = fcn_00407c30 (4, rbp);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"failed to access %s\");\n    r8 = *((rsp + 8));\n    rcx = rbx;\n    eax = 0;\n    ebx = 0;\n    error (0, *(r8), rax);\n    goto label_4;\nlabel_33:\n    rax = fcn_00407c30 (4, rbp);\n    edx = 5;\n    r13 = imp.__libc_start_main;\n    r14 = rax;\n    rax = dcgettext (0, \"%s: replace %s? \");\n    r8 = r14;\n    rcx = r13;\n    esi = 1;\n    rdi = stderr;\n    rdx = rax;\n    eax = 0;\n    fprintf_chk ();\n    al = fcn_00408d10 ();\n    if (al == 0) {\n        goto label_4;\n    }\n    *(0x006113e2) = 1;\n    goto label_12;\nlabel_31:\n    if (*(0x006113e6) != 0) {\n        goto label_8;\n    }\n    goto label_13;\nlabel_40:\n    ecx = imp.__libc_start_main;\n    if (ecx != 0) {\n        goto label_1;\n    }\n    goto label_14;\nlabel_32:\n    rax = fcn_00407d00 (0, 3, rbp);\n    edx = 5;\n    esi = \"%s: cannot overwrite directory\";\n    rbx = rax;\n    goto label_15;\nlabel_42:\n    if (r15b != 0) {\n        goto label_16;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"failed to create hard link to %.0s%s\");\n    rdx = rax;\n    goto label_10;\nlabel_29:\n    rax = fcn_00407b50 (1, 4, r12);\n    r12 = rax;\n    rax = fcn_00407b50 (0, 4, rbp);\n    edx = 5;\n    rbx = rax;\n    dcgettext (0, \"will not overwrite just-created %s with %s\");\n    r8 = r12;\n    goto label_17;\nlabel_34:\n    rax = errno_location ();\n    ebx = *(rax);\n    free (r13);\n    if (ebx == 2) {\n        goto label_1;\n    }\n    rax = fcn_00407c30 (4, rbp);\n    edx = 5;\n    rax = dcgettext (0, \"cannot backup %s\");\n    esi = ebx;\n    rcx = rbp;\n    eax = 0;\n    ebx = 0;\n    error (0, esi, rax);\n    goto label_4;\nlabel_36:\n    rax = dcgettext (0, \"failed to create symbolic link %s\");\n    rdx = rax;\n    goto label_10;\n}\n"
        },
        {
            "funcName": "fcn_004032b0",
            "funcStartAddr": "0x4032b0",
            "funcEndAddr": "0x40369d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x4032b0 */\n#include <stdint.h>\n \nuint64_t fcn_004032b0 (int64_t arg1) {\n    char * var_8h;\n    int64_t var_10h;\n    char * var_18h;\n    char * var_20h;\n    char * var_28h;\n    char * var_30h;\n    char * var_38h;\n    char * var_40h;\n    char * var_48h;\n    char * var_50h;\n    char * var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    rdi = arg1;\n    edx = 5;\n    ebx = edi;\n    rbp = imp.__libc_start_main;\n    if (edi != 0) {\n        rax = dcgettext (0, \"Try '%s --help' for more information.\\n\");\n        rdi = stderr;\n        rcx = rbp;\n        esi = 1;\n        rdx = rax;\n        eax = 0;\n        fprintf_chk ();\nlabel_0:\n        exit (ebx);\n    }\n    rax = dcgettext (0, \"Usage: %s [OPTION]... [-T] TARGET LINK_NAME   (1st form)\\n  or:  %s [OPTION]... TARGET                  (2nd form)\\n  or:  %s [OPTION]... TARGET... DIRECTORY     (3rd form)\\n  or:  %s [OPTION]... -t DIRECTORY TARGET...  (4th form)\\n\");\n    r9 = rbp;\n    r8 = rbp;\n    rcx = rbp;\n    rdx = rbp;\n    rsi = rax;\n    edi = 1;\n    eax = 0;\n    printf_chk ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"In the 1st form, create a link to TARGET with the name LINK_NAME.\\nIn the 2nd form, create a link to TARGET in the current directory.\\nIn the 3rd and 4th forms, create links to each TARGET in DIRECTORY.\\nCreate hard links by default, symbolic links with --symbolic.\\nBy default, each destination (name of new link) should not already exist.\\nWhen creating hard links, each TARGET must exist.  Symbolic links\\ncan hold arbitrary text; if later resolved, a relative link is\\ninterpreted in relation to its parent directory.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nMandatory arguments to long options are mandatory for short options too.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --backup[=CONTROL]      make a backup of each existing destination file\\n  -b                          like --backup but does not accept an argument\\n  -d, -F, --directory         allow the superuser to attempt to hard link\\n                                directories (note: will probably fail due to\\n                                system restrictions, even for the superuser)\\n  -f, --force                 remove existing destination files\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -i, --interactive           prompt whether to remove destinations\\n  -L, --logical               dereference TARGETs that are symbolic links\\n  -n, --no-dereference        treat LINK_NAME as a normal file if\\n                                it is a symbolic link to a directory\\n  -P, --physical              make hard links directly to symbolic links\\n  -r, --relative              create symbolic links relative to link location\\n  -s, --symbolic              make symbolic links instead of hard links\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -S, --suffix=SUFFIX         override the usual backup suffix\\n  -t, --target-directory=DIRECTORY  specify the DIRECTORY in which to create\\n                                the links\\n  -T, --no-target-directory   treat LINK_NAME as a normal file always\\n  -v, --verbose               print name of each linked file\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --help     display this help and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --version  output version information and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\\nThe version control method may be selected via the --backup option or through\\nthe VERSION_CONTROL environment variable.  Here are the values:\\n\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    edx = 5;\n    rbp = stdout;\n    rax = dcgettext (0, \"  none, off       never make backups (even if --backup is given)\\n  numbered, t     make numbered backups\\n  existing, nil   numbered if numbered backups exist, simple otherwise\\n  simple, never   always make simple backups\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    edx = 5;\n    rax = dcgettext (0, \"\\nUsing -s ignores -L and -P.  Otherwise, the last option specified controls\\nbehavior when a TARGET is a symbolic link, defaulting to %s.\\n\");\n    edx = 0x40bc3c;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    *(rsp) = 0x40bc3f;\n    rax = rsp;\n    *((rsp + 8)) = \"test invocation\";\n    *((rsp + 0x10)) = 0x40bcb9;\n    *((rsp + 0x18)) = \"Multi-call invocation\";\n    *((rsp + 0x20)) = \"sha224sum\";\n    *((rsp + 0x28)) = \"sha2 utilities\";\n    *((rsp + 0x30)) = \"sha256sum\";\n    *((rsp + 0x38)) = \"sha2 utilities\";\n    *((rsp + 0x40)) = \"sha384sum\";\n    *((rsp + 0x48)) = \"sha2 utilities\";\n    *((rsp + 0x50)) = \"sha512sum\";\n    *((rsp + 0x58)) = \"sha2 utilities\";\n    *((rsp + 0x60)) = 0;\n    *((rsp + 0x68)) = 0;\n    do {\n        rax += 0x10;\n        rdi = *(rax);\n        if (rdi == 0) {\n            goto label_2;\n        }\n        esi = 0x40bc39;\n        ecx = 3;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        dl = (rdi > 0) ? 1 : 0;\n    } while (dl != 0);\nlabel_2:\n    rbp = *((rax + 8));\n    edx = 5;\n    esi = \"\\n%s online help: <%s>\\n\";\n    edi = 0;\n    if (rbp == 0) {\n        goto label_3;\n    }\n    rax = dcgettext (rdi, rsi);\n    edi = 1;\n    ecx = \"https://www.gnu.org/software/coreutils/\";\n    edx = \"GNU coreutils\";\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rax = setlocale (5, 0);\n    if (rax != 0) {\n        eax = strncmp (rax, 0x40bcc3, 3);\n        if (eax != 0) {\n            goto label_4;\n        }\n    }\nlabel_1:\n    edx = 5;\n    r12d = 0x40bc5b;\n    rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n    ecx = 0x40bc39;\n    edx = \"https://www.gnu.org/software/coreutils/\";\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    ecx = 0x40e307;\n    r12 = rcx;\n    while (1) {\n        edx = 5;\n        rax = dcgettext (0, \"or available locally via: info '(coreutils) %s%s'\\n\");\n        rcx = r12;\n        rdx = rbp;\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        goto label_0;\nlabel_3:\n        rax = dcgettext (rdi, rsi);\n        edi = 1;\n        ecx = \"https://www.gnu.org/software/coreutils/\";\n        edx = \"GNU coreutils\";\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        rax = setlocale (5, 0);\n        if (rax != 0) {\n            eax = strncmp (rax, 0x40bcc3, 3);\n            if (eax != 0) {\n                goto label_5;\n            }\n        }\n        edx = 5;\n        rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n        ecx = 0x40bc39;\n        edx = \"https://www.gnu.org/software/coreutils/\";\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        r12d = 0x40bc5b;\n        printf_chk ();\n    }\nlabel_5:\nlabel_4:\n    edx = 5;\n    rax = dcgettext (0, \"Report %s translation bugs to <https://translationproject.org/team/>\\n\");\n    edx = 0x40bc39;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_004036c0",
            "funcStartAddr": "0x4036c0",
            "funcEndAddr": "0x403724",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x4036c0 */\n#include <stdint.h>\n \nuint64_t fcn_004036c0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r12 = rdi;\n    rbx = rsi;\n    rax = fcn_00404ca0 (rdi);\n    rax -= r12;\n    rdi = rax + 9;\n    if (rdi > 0x100) {\n        rax = malloc (rdi);\n        rbx = rax;\n        if (rax == 0) {\n            goto label_0;\n        }\n    }\n    rdx = rbp;\n    rsi = r12;\n    rdi = rbx;\n    mempcpy ();\n    rdx = \"CuXXXXXX\";\n    *(rax) = rdx;\n    edx = *(0x0040ce08);\n    *((rax + 8)) = dl;\n    rax = rbx;\n    do {\n        return rax;\nlabel_0:\n        eax = 0;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00403750",
            "funcStartAddr": "0x403750",
            "funcEndAddr": "0x403885",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x403750 */\n#include <stdint.h>\n \nuint64_t fcn_00403750 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_24h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r15d = edi;\n    r14 = rsi;\n    r13d = r8d;\n    r12 = rcx;\n    *((rsp + 8)) = r9d;\n    eax = linkat ();\n    r9d = *((rsp + 8));\n    ebx = eax;\n    if (r9b != 1) {\n        goto label_0;\n    }\n    if (eax == 0) {\n        goto label_0;\n    }\n    rax = errno_location ();\n    while (r12d == 0) {\nlabel_0:\n        eax = ebx;\n        return rax;\n        *((rsp + 8)) = rax;\n        rax = fcn_004036c0 (r12, rsp + 0x30);\n        rbx = rax;\n        if (rax == 0) {\n            goto label_2;\n        }\n        *((rsp + 0x10)) = r15d;\n        *((rsp + 0x18)) = r14;\n        *((rsp + 0x20)) = ebp;\n        *((rsp + 0x24)) = r13d;\n        eax = fcn_004082d0 (rax, 0, rsp + 0x10, 0x4036a0, 6);\n        r9 = *((rsp + 8));\n        if (eax == 0) {\n            goto label_3;\n        }\n        r12d = *(r9);\nlabel_1:\n        rax = rsp + 0x30;\n        if (rbx != rax) {\n            *((rsp + 8)) = r9;\n            free (rbx);\n            r9 = *((rsp + 8));\n        }\n        ebx = 1;\n    }\n    *(r9) = r12d;\n    ebx = 0xffffffff;\n    goto label_0;\nlabel_3:\n    rcx = r12;\n    edx = ebp;\n    rsi = rbx;\n    edi = ebp;\n    *((rsp + 8)) = r9;\n    eax = renameat ();\n    r9 = *((rsp + 8));\n    r12d = eax;\n    if (eax != 0) {\n        r12d = *(r9);\n    }\n    edx = 0;\n    rsi = rbx;\n    edi = ebp;\n    *((rsp + 8)) = r9;\n    unlinkat ();\n    r9 = *((rsp + 8));\n    goto label_1;\nlabel_2:\n    ebx = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00403890",
            "funcStartAddr": "0x403890",
            "funcEndAddr": "0x403990",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x403890 */\n#include <stdint.h>\n \nuint64_t fcn_00403890 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_10h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r14d = ecx;\n    r13 = rdi;\n    r12 = rdx;\n    eax = symlinkat ();\n    ebx = eax;\n    if (r14b != 1) {\n        goto label_2;\n    }\n    if (eax == 0) {\n        goto label_2;\n    }\n    rax = errno_location ();\n    r14 = rax;\n    while (1) {\nlabel_2:\n        eax = ebx;\n        return rax;\n        r15 = rsp + 0x10;\n        rax = fcn_004036c0 (r12, r15);\n        rbx = rax;\n        if (rax == 0) {\n            goto label_3;\n        }\n        *(rsp) = r13;\n        *((rsp + 8)) = ebp;\n        eax = fcn_004082d0 (rax, 0, rsp, 0x403730, 6);\n        if (eax == 0) {\n            goto label_4;\n        }\n        r12d = *(r14);\nlabel_1:\n        if (rbx != r15) {\n            free (rbx);\n        }\n        if (r12d != 0) {\n            goto label_5;\n        }\nlabel_0:\n        ebx = 1;\n    }\nlabel_4:\n    rcx = r12;\n    edx = ebp;\n    rsi = rbx;\n    edi = ebp;\n    eax = renameat ();\n    if (eax != 0) {\n        goto label_6;\n    }\n    if (rbx == r15) {\n        goto label_0;\n    }\n    free (rbx);\n    goto label_0;\nlabel_6:\n    edx = 0;\n    rsi = rbx;\n    edi = ebp;\n    r12d = *(r14);\n    unlinkat ();\n    goto label_1;\nlabel_5:\n    *(r14) = r12d;\n    ebx = 0xffffffff;\n    goto label_2;\nlabel_3:\n    ebx = 0xffffffff;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_00403990",
            "funcStartAddr": "0x403990",
            "funcEndAddr": "0x403a07",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x403990 */\n#include <stdint.h>\n \nuint64_t fcn_00403990 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r14 = rdi;\n    r13 = *(rsi);\n    if (r13 != 0) {\n        r12 = rdx;\n        rax = strlen (rdi);\n        rbx = rax;\n        eax = 1;\n        if (*(r12) <= rbx) {\n            return rax;\n        }\n        eax = memcpy (r13, r14, rbx + 1);\n        *(rbp) += rbx;\n        eax = 0;\n        *(r12) -= rbx;\n        return rax;\n    }\n    rsi = stdout;\n    eax = fputs_unlocked ();\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00403a10",
            "funcStartAddr": "0x403a10",
            "funcEndAddr": "0x403c07",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x403a10 */\n#include <stdint.h>\n \nuint64_t fcn_00403a10 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8d = *((rsi + 1));\n    r9d = *((rdi + 1));\n    *(rsp) = rcx;\n    *((rsp + 8)) = rdx;\n    cl = (r8b == 0x2f) ? 1 : 0;\n    dl = (r9b == 0x2f) ? 1 : 0;\n    eax = 0;\n    if (cl != dl) {\n        goto label_7;\n    }\n    edx = *(rdi);\n    r10d = *(rsi);\n    cl = (dl == 0) ? 1 : 0;\n    if (r10b == 0) {\n        goto label_7;\n    }\n    al = (r10b != dl) ? 1 : 0;\n    al |= cl;\n    if (al != 0) {\n        goto label_8;\n    }\n    ecx = 2;\n    edx = 0;\n    while (r8b != 0) {\n        if (r8b != r9b) {\n            goto label_9;\n        }\n        if (r10b != 0) {\n            goto label_9;\n        }\n        r11d = *((rsi + rcx));\n        r9d = *((rdi + rcx));\n        r10d = r8d;\n        rcx++;\n        r8d = r11d;\n        r11d = rcx - 1;\n        if (r10b == 0x2f) {\n            edx = r11d;\n        }\n        r10b = (r9b == 0) ? 1 : 0;\n    }\n    if (r9b == 0x2f) {\n        goto label_10;\n    }\n    if (r10b != 0) {\n        goto label_10;\n    }\n    do {\nlabel_0:\n        if (edx != 0) {\nlabel_6:\n            rdx = (int64_t) edx;\n            rbp = rsi + rdx;\n            rbx = rdi + rdx;\n            eax = *(rbp);\n            if (al == 0x2f) {\n                eax = *((rbp + 1));\n                rbp++;\n            }\n            edx = 0;\n            dl = (*(rbx) == 0x2f) ? 1 : 0;\n            rbx += rdx;\n            if (al != 0) {\n                goto label_11;\n            }\n            eax = 0x40ce0b;\n            rsi = rsp + 8;\n            rdx = rsp;\n            if (*(rbx) == 0) {\n                rbx = rax;\n            }\n            eax = fcn_00403990 (rbx, rsi, rdx);\n            r12d = eax;\nlabel_1:\n            if (r12b != 0) {\n                goto label_12;\n            }\nlabel_5:\n            eax = r12d;\n            eax ^= 1;\n        }\nlabel_7:\n        return eax;\nlabel_9:\n    } while (r8b != 0x2f);\n    if (r10b == 0) {\n        goto label_0;\n    }\n    goto label_10;\nlabel_11:\n    eax = fcn_00403990 (0x40ce0a, rsp + 8, rsp);\n    r12d = eax;\n    eax = *(rbp);\n    if (al != 0) {\n        goto label_13;\n    }\nlabel_2:\n    if (*(rbx) == 0) {\n        goto label_1;\n    }\n    eax = fcn_00403990 (0x40d01e, rsp + 8, rsp);\n    eax = fcn_00403990 (rbx, rsp + 8, rsp);\n    ebp |= eax;\n    r12d |= ebp;\n    goto label_1;\nlabel_4:\n    eax = fcn_00403990 (0x40ce09, rsp + 8, rsp);\n    r12d |= eax;\nlabel_3:\n    rbp++;\n    eax = *(rbp);\n    if (al == 0) {\n        goto label_2;\n    }\nlabel_13:\n    if (al != 0x2f) {\n        goto label_3;\n    }\n    goto label_4;\nlabel_12:\n    edx = 5;\n    rax = dcgettext (0, \"generating relative path\");\n    rcx = rax;\n    eax = 0;\n    eax = error (0, 0x24, 0x40e363);\n    goto label_5;\nlabel_10:\n    edx = r11d;\n    goto label_6;\nlabel_8:\n    eax = 0;\n    goto label_7;\n}\n"
        },
        {
            "funcName": "fcn_00403c10",
            "funcStartAddr": "0x403c10",
            "funcEndAddr": "0x403cde",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x403c10 */\n#include <stdint.h>\n \nuint64_t fcn_00403c10 (int64_t arg1, void ** arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r13 = rsi;\n    rbx = rdi;\n    rax = fcn_00404ca0 (rdi);\n    rdi = rax;\n    rax = fcn_00404d00 (rdi);\n    while (r12 <= rdx) {\n        return rax;\n        esi = 0x2e;\n        r14d = *(rbp);\n        r12 = rax;\n        *(rbp) = si;\n        errno_location ();\n        esi = 3;\n        rdi = rbx;\n        *(rax) = 0;\n        r15 = rax;\n        rax = pathconf ();\n        if (rax < 0) {\n            goto label_2;\n        }\nlabel_1:\n        rdx = rax;\nlabel_0:\n        *(rbp) = r14w;\n    }\n    rsi = rbx + r13;\n    rax = rsi;\n    rax -= rbp;\n    if (rax >= rdx) {\n        goto label_3;\n    }\n    rdx = rax + 1;\n    do {\n        *(rsi) = 0x7e;\n        *((rbp + rdx)) = 0;\n        return rax;\nlabel_3:\n        rsi = rbp + rdx - 1;\n    } while (1);\nlabel_2:\n    ecx = *(r15);\n    edx = 0xff;\n    if (ecx != 0) {\n        goto label_0;\n    }\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00403ce0",
            "funcStartAddr": "0x403ce0",
            "funcEndAddr": "0x403d34",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x403ce0 */\n#include <stdint.h>\n \nuint64_t fcn_00403ce0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    if (rdi == 0) {\n        goto label_2;\n    }\nlabel_1:\n    while (rax != rbx) {\nlabel_0:\n        ebx = 0x40ce2b;\n        *(0x006113f0) = rbx;\n        return;\n        rax = fcn_00404ca0 (rbx);\n    }\n    *(0x006113f0) = rbx;\n    return rax;\nlabel_2:\n    rax = getenv (\"SIMPLE_BACKUP_SUFFIX\");\n    rbx = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00403d40",
            "funcStartAddr": "0x403d40",
            "funcEndAddr": "0x404201",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x403d40 */\n#include <stdint.h>\n \nuint64_t fcn_00403d40 (void * arg1, uint32_t arg2) {\n    void ** s1;\n    void * s2;\n    int64_t var_18h;\n    int64_t var_20h;\n    size_t size;\n    uint32_t var_30h;\n    size_t n;\n    uint32_t var_40h;\n    uint32_t var_47h;\n    int64_t var_48h;\n    int64_t var_50h;\n    size_t * var_58h;\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rdi;\n    *((rsp + 0x10)) = rdi;\n    *((rsp + 0x40)) = esi;\n    *((rsp + 0x47)) = dl;\n    rax = fcn_00404ca0 (rdi);\n    r14 = rax;\n    rax = strlen (rax);\n    r14 -= rbx;\n    rdi = imp.__libc_start_main;\n    rax += r14;\n    *((rsp + 8)) = rax;\n    if (rdi == 0) {\n        goto label_11;\n    }\nlabel_10:\n    rax = strlen (rdi);\n    rsi = *((rsp + 8));\n    rax++;\n    rbx = rsi + 1;\n    *((rsp + 0x58)) = rax;\n    rsi = rax;\n    eax = 9;\n    *((rsp + 0x38)) = rbx;\n    if (rax >= 9) {\n        rax = rsi;\n    }\n    rax += rbx;\n    rdi = rax;\n    *((rsp + 0x48)) = rax;\n    rax = malloc (rdi);\n    r15 = rax;\n    if (rax == 0) {\n        goto label_9;\n    }\n    r12d = 0;\nlabel_2:\n    memcpy (r15, *((rsp + 0x10)), *((rsp + 0x38)));\n    if (*((rsp + 0x40)) == 1) {\n        goto label_12;\n    }\n    rbx = r15 + r14;\n    rax = fcn_00404d00 (rbx);\n    r13 = rax;\n    if (r12 == 0) {\n        goto label_13;\n    }\n    rdi = r12;\n    rewinddir ();\nlabel_5:\n    rax = *((rsp + 0x48));\n    *((rsp + 0x20)) = 1;\n    *((rsp + 0x28)) = rax;\n    rax = r13 + 4;\n    *((rsp + 0x30)) = rax;\n    do {\nlabel_0:\n        rdi = r12;\n        rax = readdir ();\n        if (rax == 0) {\n            goto label_8;\n        }\nlabel_1:\n        rbx = rax + 0x13;\n        rax = strlen (rbx);\n    } while (rax < *((rsp + 0x30)));\n    rcx = r13 + 2;\n    rdx = rcx;\n    *((rsp + 0x18)) = rcx;\n    eax = memcmp (r15 + r14, rbx, rdx);\n    if (eax != 0) {\n        goto label_0;\n    }\n    rcx = *((rsp + 0x18));\n    rbx += rcx;\n    eax = *(rbx);\n    edx = rax - 0x31;\n    if (dl > 8) {\n        goto label_0;\n    }\n    edx = *((rbx + 1));\n    ecx = 1;\n    r8b = (al == 0x39) ? 1 : 0;\n    eax = edx;\n    edx -= 0x30;\n    if (edx > 9) {\n        goto label_14;\n    }\n    do {\n        al = (al == 0x39) ? 1 : 0;\n        rcx++;\n        edx = *((rbx + rcx));\n        r8d &= eax;\n        eax = edx;\n        edx -= 0x30;\n    } while (edx <= 9);\nlabel_14:\n    if (al != 0x7e) {\n        goto label_0;\n    }\n    if (*((rbx + rcx + 1)) != 0) {\n        goto label_0;\n    }\n    rdx = *((rsp + 0x20));\n    if (rdx < rcx) {\n        goto label_15;\n    }\n    *((rsp + 0x50)) = rcx;\n    *((rsp + 0x18)) = r8b;\n    if (rdx != rcx) {\n        goto label_0;\n    }\n    rax = *((rsp + 8));\n    eax = memcmp (r15 + rax + 2, rbx, rdx);\n    r8d = *((rsp + 0x18));\n    rcx = *((rsp + 0x50));\n    if (eax > 0) {\n        goto label_0;\n    }\nlabel_15:\n    edx = (int32_t) r8b;\n    rsi = *((rsp + 8));\n    ebp = (int32_t) r8b;\n    rax = rdx + rcx;\n    *((rsp + 0x20)) = rax;\n    rax = rsi + rax + 4;\n    if (rax <= *((rsp + 0x28))) {\n        goto label_16;\n    }\n    esi = 0;\n    rdi = rax;\n    __asm (\"sets sil\");\n    rdi += rdi;\n    if (rdi < 0) {\n        goto label_17;\n    }\n    if (rsi != 0) {\n        goto label_17;\n    }\n    *((rsp + 0x28)) = rdi;\nlabel_6:\n    *((rsp + 0x50)) = rdx;\n    *((rsp + 0x18)) = rcx;\n    rax = realloc (r15, *((rsp + 0x28)));\n    rcx = *((rsp + 0x18));\n    rdx = *((rsp + 0x50));\n    r8 = rax;\n    if (rax == 0) {\n        goto label_18;\n    }\nlabel_7:\n    rax = *((rsp + 8));\n    esi = 0x7e2e;\n    *((rsp + 0x50)) = r8;\n    *((rsp + 0x18)) = rcx;\n    rax += r8;\n    *(rax) = si;\n    r9 = rax + rdx + 2;\n    *((rax + 2)) = 0x30;\n    rax = memcpy (r9, rbx, rcx + 2);\n    rcx = *((rsp + 0x18));\n    r8 = *((rsp + 0x50));\n    rcx += rax;\n    edx = *((rcx - 1));\n    rax = rcx - 1;\n    if (dl != 0x39) {\n        goto label_19;\n    }\n    do {\n        *(rax) = 0x30;\n        rax--;\n        edx = *(rax);\n    } while (dl == 0x39);\nlabel_19:\n    edx++;\n    rdi = r12;\n    r15 = r8;\n    *(rax) = dl;\n    rax = readdir ();\n    if (rax != 0) {\n        goto label_1;\n    }\nlabel_8:\n    if (ebp == 2) {\n        goto label_20;\n    }\n    if (ebp == 3) {\n        goto label_18;\n    }\n    if (ebp == 1) {\n        goto label_21;\n    }\nlabel_4:\n    if (*((rsp + 0x47)) == 0) {\n        goto label_22;\n    }\n    if (r12 == 0) {\n        goto label_23;\n    }\n    rdi = r12;\n    eax = dirfd ();\n    rcx = r15 + r14;\n    edx = eax;\n    if (eax < 0) {\n        goto label_23;\n    }\nlabel_3:\n    r8b = (*((rsp + 0x40)) != 1) ? 1 : 0;\n    eax = fcn_00407ea0 (0xffffff9c, *((rsp + 0x10)), rdx, rcx, 0);\n    if (eax == 0) {\n        goto label_22;\n    }\n    rax = errno_location ();\n    ebp = *(rax);\n    if (ebp == 0x11) {\n        goto label_2;\n    }\n    rbx = rax;\n    if (r12 != 0) {\n        rdi = r12;\n        closedir ();\n    }\n    r15d = 0;\n    free (r15);\n    *(rbx) = ebp;\n    do {\nlabel_9:\n        rax = r15;\n        return rax;\nlabel_23:\n        rcx = r15;\n        edx = 0xffffff9c;\n        r14d = 0;\n        goto label_3;\nlabel_12:\n        rax = *((rsp + 8));\n        memcpy (r15 + rax, *(0x006113f0), *((rsp + 0x58)));\n        goto label_4;\nlabel_20:\n        if (*((rsp + 0x40)) == 2) {\n            rax = *((rsp + 8));\n            rax = memcpy (r15 + rax, *(0x006113f0), *((rsp + 0x58)));\n            *((rsp + 0x40)) = 1;\n        }\nlabel_21:\n        fcn_00403c10 (r15, *((rsp + 8)));\n        goto label_4;\nlabel_13:\n        edi = 0x2e;\n        eax = *(rbx);\n        *(rbx) = di;\n        rdi = r15;\n        *((rsp + 0x18)) = ax;\n        rax = fcn_00404b20 ();\n        rcx = rbx + r13;\n        r12 = rax;\n        if (rax == 0) {\n            goto label_24;\n        }\n        eax = *((rsp + 0x18));\n        *(rbx) = ax;\n        *(rcx) = 0x7e317e2e;\n        *((rcx + 4)) = 0;\n        goto label_5;\nlabel_18:\n        r15d = 0;\n        free (r15);\n        errno_location ();\n        *(rax) = 0xc;\n    } while (1);\nlabel_17:\n    *((rsp + 0x28)) = rax;\n    goto label_6;\nlabel_16:\n    r8 = r15;\n    goto label_7;\nlabel_24:\n    *((rsp + 0x20)) = rcx;\n    ebp = 0;\n    rax = errno_location ();\n    rcx = *((rsp + 0x20));\n    eax = *((rsp + 0x18));\n    bpl = (*(rax) == 0xc) ? 1 : 0;\n    *(rbx) = ax;\n    ebp += 2;\n    *(rcx) = 0x7e317e2e;\n    *((rcx + 4)) = 0;\n    goto label_8;\nlabel_22:\n    if (r12 == 0) {\n        goto label_9;\n    }\n    rdi = r12;\n    closedir ();\n    goto label_9;\nlabel_11:\n    fcn_00403ce0 (rdi);\n    rdi = imp.__libc_start_main;\n    goto label_10;\n}\n"
        },
        {
            "funcName": "fcn_00404210",
            "funcStartAddr": "0x404210",
            "funcEndAddr": "0x40423c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x404210 */\n#include <stdint.h>\n \nint32_t fcn_00404210 (void) {\n    fcn_0040a670 (rdi, rsi, 0x40cec0, 0x40cea0, 4, *(0x00611380));\n    eax = *((rax*4 + 0x40cea0));\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00404240",
            "funcStartAddr": "0x404240",
            "funcEndAddr": "0x40425a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x404240 */\n#include <stdint.h>\n \nuint64_t fcn_00404240 (void) {\n    edx = 0;\n    rax = fcn_00403d40 (rdi, rsi);\n    if (rax != 0) {\n        return rax;\n    }\n    return fcn_00408ca0 ();\n}\n"
        },
        {
            "funcName": "fcn_00404280",
            "funcStartAddr": "0x404280",
            "funcEndAddr": "0x4042c1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x404280 */\n#include <stdint.h>\n \nuint64_t fcn_00404280 (uint32_t arg2) {\n    rsi = arg2;\n    if (rsi != 0) {\n        if (*(rsi) != 0) {\n            goto label_0;\n        }\n    }\n    rax = getenv (0x40ce43);\n    if (rax != 0) {\n        if (*(rax) != 0) {\n            goto label_1;\n        }\n    }\n    eax = 2;\n    return rax;\nlabel_1:\n    rsi = rax;\n    edi = \"$VERSION_CONTROL\";\nlabel_0:\n    return void (*0x404210)() ();\n}\n"
        },
        {
            "funcName": "fcn_004042d0",
            "funcStartAddr": "0x4042d0",
            "funcEndAddr": "0x404943",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x4042d0 */\n#include <stdint.h>\n \nuint64_t fcn_004042d0 (int64_t arg1, int64_t arg2) {\n    uint32_t var_8h;\n    uint32_t var_14h;\n    uint32_t var_18h;\n    uint32_t var_20h;\n    void * ptr;\n    uint32_t var_30h;\n    int64_t var_38h;\n    int64_t var_3ch;\n    int64_t var_40h;\n    int64_t var_58h;\n    int64_t var_70h;\n    rdi = arg1;\n    rsi = arg2;\n    ecx = esi;\n    ecx &= 3;\n    eax = rcx - 1;\n    *((rsp + 0x14)) = ecx;\n    if ((ecx & eax) != 0) {\n        goto label_18;\n    }\n    r15 = rdi;\n    if (rdi == 0) {\n        goto label_18;\n    }\n    eax = *(rdi);\n    if (al == 0) {\n        goto label_19;\n    }\n    r14d = esi;\n    if (al == 0x2f) {\n        goto label_20;\n    }\n    rax = fcn_00408ce0 ();\n    r12 = rax;\n    if (rax == 0) {\n        goto label_7;\n    }\n    rax = strlen (rax);\n    rbx = rax;\n    if (rax <= 0xfff) {\n        goto label_21;\n    }\n    rbx += r12;\nlabel_1:\n    r14d &= 4;\n    *((rsp + 0x20)) = r15;\n    eax = *(r15);\n    *((rsp + 0x38)) = r14d;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x30)) = 0;\n    *((rsp + 0x28)) = 0;\nlabel_0:\n    if (al == 0) {\n        goto label_22;\n    }\n    edx = eax;\n    if (al != 0x2f) {\n        goto label_23;\n    }\n    do {\n        r15++;\n        edx = *(r15);\n    } while (dl == 0x2f);\n    if (dl == 0) {\n        goto label_22;\n    }\nlabel_23:\n    r13 = r15;\n    while (al != 0x2f) {\n        r13 = r14;\n        eax = *((r13 + 1));\n        r14 = r13 + 1;\n        if (al == 0) {\n            goto label_24;\n        }\n    }\nlabel_24:\n    if (r14 == r15) {\n        goto label_22;\n    }\n    r8 = r14;\n    r8 -= r15;\n    if (r8 == 1) {\n        goto label_25;\n    }\n    if (dl == 0x2e) {\n        if (r8 == 2) {\n            goto label_26;\n        }\n    }\nlabel_4:\n    if (*((rbx - 1)) != 0x2f) {\n        *(rbx) = 0x2f;\n        rbx++;\n    }\n    rax = rbx + r8;\n    if (rbp <= rax) {\n        rbp -= r12;\n        rbx -= r12;\n        rdi = r12;\n        *((rsp + 8)) = r8;\n        rax = r8 + rbp + 1;\n        rbp += 0x1000;\n        if (r8 >= 0x1000) {\n        }\n        rax = fcn_00408ab0 (rdi, rbp);\n        r8 = *((rsp + 8));\n        r12 = rax;\n        rbp += rax;\n        rbx += rax;\n    }\n    rdx = r8;\n    *((rsp + 8)) = r8;\n    memcpy (rbx, r15, rdx);\n    r8 = *((rsp + 8));\n    rbx = rbx + r8;\n    *(rbx) = 0;\n    if (*((rsp + 0x14)) != 2) {\n        goto label_27;\n    }\n    edx = *((rsp + 0x38));\n    while (eax != 1) {\n        *((rsp + 0x58)) = 0;\nlabel_3:\n        if (*(r14) != 0) {\n            if (*((rsp + 0x14)) != 2) {\n                goto label_28;\n            }\n        }\nlabel_2:\n        eax = *(r14);\n        r15 = r14;\n        goto label_0;\nlabel_20:\n        rax = fcn_00408a50 (0x1000);\n        r12 = rax;\n        rbp = rax + 0x1000;\n        rbx = rax + 1;\n        *(rax) = 0x2f;\n        goto label_1;\nlabel_27:\n        eax = *((rsp + 0x38));\n        rdx = rsp + 0x40;\n        rsi = r12;\n        edi = 1;\n        if (eax == 0) {\n            goto label_29;\n        }\n        eax = xstat ();\n        al = (eax != 0) ? 1 : 0;\nlabel_5:\n        if (al == 0) {\n            goto label_30;\n        }\n        rax = errno_location ();\n        rdx = rax;\n        ecx = *(rax);\n        eax = *((rsp + 0x14));\n        if (eax == 0) {\n            goto label_31;\n        }\n    }\n    *((rsp + 0x3c)) = ecx;\n    *((rsp + 8)) = rdx;\n    strspn (r14, 0x40d01e);\n    rdx = *((rsp + 8));\n    ecx = *((rsp + 0x3c));\n    if (*((r14 + rax)) != 0) {\n        goto label_31;\n    }\n    if (ecx != 2) {\n        goto label_31;\n    }\nlabel_6:\n    eax = *((r13 + 1));\n    r15 = r14;\n    goto label_0;\nlabel_30:\n    eax = *((rsp + 0x58));\n    eax &= 0xf000;\n    if (eax == 0xa000) {\n        goto label_32;\n    }\n    if (eax == 0x4000) {\n        goto label_2;\n    }\n    goto label_3;\nlabel_25:\n    if (dl != 0x2e) {\n        goto label_4;\n    }\nlabel_14:\n    r15 = r14;\n    goto label_0;\nlabel_22:\n    rax = r12 + 1;\n    if (rbx > rax) {\n        if (*((rbx - 1)) == 0x2f) {\n            goto label_33;\n        }\n    }\n    rax = rbx + 1;\nlabel_16:\n    *(rbx) = 0;\n    if (rbp != rax) {\n        rbx -= r12;\n        rax = fcn_00408ab0 (r12, rbx + 1);\n        r12 = rax;\n    }\n    free (*((rsp + 0x28)));\n    rax = *((rsp + 0x18));\n    if (rax != 0) {\n        fcn_00405a10 (rax);\n    }\nlabel_7:\n    rax = r12;\n    return rax;\nlabel_29:\n    eax = lxstat ();\n    al = (eax != 0) ? 1 : 0;\n    goto label_5;\nlabel_32:\n    if (*((rsp + 0x18)) == 0) {\n        goto label_34;\n    }\nlabel_8:\n    al = fcn_00404e00 (*((rsp + 0x18)), *((rsp + 0x20)), rsp + 0x40);\n    if (al == 0) {\n        fcn_00404d70 (*((rsp + 0x18)), *((rsp + 0x20)), rsp + 0x40);\n        rax = fcn_0040a2b0 (r12, *((rsp + 0x70)));\n        r15 = rax;\n        if (rax == 0) {\n            goto label_35;\n        }\n        rax = strlen (rax);\n        r13 = rax;\n        rax = strlen (r14);\n        rdx = rax;\n        r8 = r13 + rax + 1;\n        if (*((rsp + 0x30)) == 0) {\n            goto label_36;\n        }\n        if (r8 > *((rsp + 0x30))) {\n            goto label_37;\n        }\nlabel_11:\n        rax = *((rsp + 0x28));\n        rdx++;\n        memmove (rax + r13, r14, rdx);\n        rax = memcpy (*((rsp + 0x28)), r15, r13);\n        rdx = r12 + 1;\n        r14 = rax;\n        *((rsp + 0x20)) = rax;\n        if (*(r15) == 0x2f) {\n            goto label_38;\n        }\n        if (rbx > rdx) {\n            goto label_39;\n        }\nlabel_13:\n        free (r15);\n        goto label_2;\n    }\n    if (*((rsp + 0x14)) == 2) {\n        goto label_6;\n    }\n    rax = errno_location ();\n    ecx = 0x28;\n    rdx = rax;\nlabel_12:\n    *((rsp + 0x14)) = ecx;\n    *((rsp + 8)) = rdx;\n    free (*((rsp + 0x28)));\n    free (r12);\n    rdx = *((rsp + 8));\n    ecx = *((rsp + 0x14));\nlabel_10:\n    *((rsp + 0x14)) = ecx;\n    *((rsp + 8)) = rdx;\n    fcn_00405a10 (*((rsp + 0x18)));\n    ecx = *((rsp + 0x14));\n    rdx = *((rsp + 8));\nlabel_9:\n    *(rdx) = ecx;\n    r12d = 0;\n    goto label_7;\nlabel_26:\n    if (*((r15 + 1)) != 0x2e) {\n        goto label_4;\n    }\n    rdx = r12 + 1;\n    r15 = r14;\n    if (rbx <= rdx) {\n        goto label_0;\n    }\n    rdx = rbx - 1;\n    if (r12 < rdx) {\n        if (*((rbx - 2)) != 0x2f) {\n            goto label_40;\n        }\n    }\n    rbx = rdx;\n    goto label_0;\nlabel_18:\n    errno_location ();\n    r12d = 0;\n    *(rax) = 0x16;\n    goto label_7;\nlabel_34:\n    rax = fcn_004057d0 (7, 0, 0x406190, 0x406200, 0x406240);\n    *((rsp + 0x18)) = rax;\n    if (rax != 0) {\n        goto label_8;\n    }\n    fcn_00408ca0 ();\nlabel_28:\n    rax = errno_location ();\n    ecx = 0x14;\n    rdx = rax;\nlabel_31:\n    *((rsp + 0x14)) = ecx;\n    *((rsp + 8)) = rdx;\n    free (*((rsp + 0x28)));\n    rax = free (r12);\n    rdx = *((rsp + 8));\n    ecx = *((rsp + 0x14));\n    if (*((rsp + 0x18)) == 0) {\n        goto label_9;\n    }\n    goto label_10;\nlabel_36:\n    *((rsp + 8)) = rax;\n    eax = 0x1000;\n    if (r8 >= 0x1000) {\n        rax = r8;\n    }\n    rdi = rax;\n    *((rsp + 0x30)) = rax;\n    rax = fcn_00408a50 (rdi);\n    rdx = *((rsp + 8));\n    *((rsp + 0x28)) = rax;\n    goto label_11;\nlabel_19:\n    errno_location ();\n    r12d = 0;\n    *(rax) = 2;\n    goto label_7;\nlabel_21:\n    rax = fcn_00408ab0 (r12, 0x1000);\n    r12 = rax;\n    rbx += rax;\n    rbp = rax + 0x1000;\n    goto label_1;\nlabel_35:\n    rax = errno_location ();\n    rdx = rax;\n    ecx = *(rax);\n    if (*((rsp + 0x14)) != 2) {\n        goto label_12;\n    }\n    if (ecx != 0xc) {\n        goto label_6;\n    }\n    goto label_12;\nlabel_38:\n    *(r12) = 0x2f;\n    rbx = rdx;\n    goto label_13;\nlabel_40:\n    rbx = rdx - 1;\n    if (r12 == rbx) {\n        goto label_14;\n    }\nlabel_15:\n    if (*((rbx - 1)) == 0x2f) {\n        goto label_14;\n    }\n    rdx = rbx;\n    rbx = rdx - 1;\n    if (r12 != rbx) {\n        goto label_15;\n    }\n    goto label_14;\nlabel_37:\n    rsi = r8;\n    *((rsp + 8)) = r8;\n    *((rsp + 0x20)) = rax;\n    rax = fcn_00408ab0 (*((rsp + 0x28)), rsi);\n    r8 = *((rsp + 8));\n    rdx = *((rsp + 0x20));\n    *((rsp + 0x28)) = rax;\n    *((rsp + 0x30)) = r8;\n    goto label_11;\nlabel_33:\n    rax = rbx;\n    rbx--;\n    goto label_16;\nlabel_39:\n    rdx = rbx - 1;\n    if (r12 >= rdx) {\n        goto label_41;\n    }\n    rbx = rdx;\n    if (*((rbx - 2)) == 0x2f) {\n        goto label_13;\n    }\nlabel_17:\n    rbx--;\n    if (r12 == rbx) {\n        goto label_13;\n    }\n    if (*((rbx - 1)) == 0x2f) {\n        goto label_13;\n    }\n    goto label_17;\nlabel_41:\n    rbx = rdx;\n    goto label_13;\n}\n"
        },
        {
            "funcName": "fcn_00404a80",
            "funcStartAddr": "0x404a80",
            "funcEndAddr": "0x404b1e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x404a80 */\n#include <stdint.h>\n \nuint64_t fcn_00404a80 (void) {\n    eax = fcn_0040a730 (*(obj.stdout));\n    if (eax != 0) {\n        rax = errno_location ();\n        rbx = rax;\n        if (*(0x00611400) == 0) {\n            goto label_0;\n        }\n        if (*(rax) != 0x20) {\n            goto label_0;\n        }\n    }\n    eax = fcn_0040a730 (*(obj.stderr));\n    if (eax != 0) {\n        goto label_1;\n    }\n    return rax;\nlabel_0:\n    edx = 5;\n    rax = dcgettext (0, \"write error\");\n    rdi = imp.__libc_start_main;\n    if (rdi == 0) {\n        goto label_2;\n    }\n    rax = fcn_00407cd0 (rdi, rsi, rdx, rcx);\n    r8 = rbp;\n    rcx = rax;\n    eax = 0;\n    error (0, *(rbx), \"%s: %s\");\n    do {\nlabel_1:\n        rax = exit (*(0x00611300));\nlabel_2:\n        rcx = rax;\n        eax = 0;\n        error (0, *(rbx), 0x40e363);\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00404b20",
            "funcStartAddr": "0x404b20",
            "funcEndAddr": "0x404bb6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x404b20 */\n#include <stdint.h>\n \nuint64_t fcn_00404b20 (void) {\n    rax = opendir ();\n    rbx = rax;\n    if (rax != 0) {\n        rdi = rax;\n        eax = dirfd ();\n        if (eax <= 2) {\n            goto label_1;\n        }\n    }\n    rax = rbx;\n    return rax;\nlabel_1:\n    edi = eax;\n    eax = 0;\n    eax = fcn_00408d80 (edi, 0x406, 3, rcx, r8);\n    r12d = eax;\n    rax = errno_location ();\n    if (r12d >= 0) {\n        goto label_2;\n    }\n    r14d = *(rax);\n    r13d = 0;\n    do {\nlabel_0:\n        rdi = rbx;\n        rbx = r13;\n        closedir ();\n        *(rbp) = r14d;\n        rax = rbx;\n        return rax;\nlabel_2:\n        edi = r12d;\n        rax = fdopendir ();\n        r14d = *(rbp);\n        r13 = rax;\n    } while (rax != 0);\n    close (r12d);\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00404bc0",
            "funcStartAddr": "0x404bc0",
            "funcEndAddr": "0x404bd8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x404bc0 */\n#include <stdint.h>\n \nuint64_t fcn_00404bc0 (void) {\n    rax = fcn_00404c40 (rdi);\n    if (rax != 0) {\n        return rax;\n    }\n    return fcn_00408ca0 ();\n}\n"
        },
        {
            "funcName": "fcn_00404be0",
            "funcStartAddr": "0x404be0",
            "funcEndAddr": "0x404c3d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x404be0 */\n#include <stdint.h>\n \nuint64_t fcn_00404be0 (uint32_t arg1) {\n    rdi = arg1;\n    ebp = 0;\n    rbx = rdi;\n    bpl = (*(rdi) == 0x2f) ? 1 : 0;\n    rax = fcn_00404ca0 (rdi);\n    rcx = rax;\n    rcx -= rbx;\n    if (rcx <= rbp) {\n        goto label_0;\n    }\n    rdx = rcx - 1;\n    if (*((rax - 1)) == 0x2f) {\n        goto label_1;\n    }\n    goto label_0;\n    do {\n        rax = rdx - 1;\n        if (*((rbx + rdx - 1)) != 0x2f) {\n            goto label_2;\n        }\n        rdx = rax;\nlabel_1:\n    } while (rbp != rdx);\nlabel_2:\n    rax = rdx;\n    return rax;\nlabel_0:\n    rdx = rcx;\n    rax = rcx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00404c40",
            "funcStartAddr": "0x404c40",
            "funcEndAddr": "0x404c9a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x404c40 */\n#include <stdint.h>\n \nuint64_t fcn_00404c40 (int64_t arg1) {\n    rdi = arg1;\n    rax = fcn_00404be0 (rdi);\n    rbx = rax;\n    al = (rax == 0) ? 1 : 0;\n    eax = (int32_t) al;\n    rax = malloc (rbx + rax + 1);\n    rcx = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    rax = memcpy (rax, rbp, rbx);\n    rcx = rax;\n    while (1) {\n        *((rcx + rbx)) = 0;\nlabel_0:\n        rax = rcx;\n        return rax;\n        *(rax) = 0x2e;\n        ebx = 1;\n    }\n}\n"
        },
        {
            "funcName": "fcn_00404ca0",
            "funcStartAddr": "0x404ca0",
            "funcEndAddr": "0x404cfb",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x404ca0 */\n#include <stdint.h>\n \nint64_t fcn_00404ca0 (int64_t arg1) {\n    rdi = arg1;\n    edx = *(rdi);\n    rax = rdi;\n    if (dl != 0x2f) {\n        goto label_1;\n    }\n    do {\n        rax++;\n        edx = *(rax);\n    } while (dl == 0x2f);\nlabel_1:\n    if (dl == 0) {\n        goto label_2;\n    }\n    rcx = rax;\n    esi = 0;\n    while (dl != 0x2f) {\n        if (sil != 0) {\n            rax = rcx;\n            esi = 0;\n        }\n        rcx++;\n        edx = *(rcx);\n        if (dl == 0) {\n            goto label_2;\n        }\nlabel_0:\n    }\n    rcx++;\n    edx = *(rcx);\n    esi = 1;\n    if (dl != 0) {\n        goto label_0;\n    }\nlabel_2:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00404d00",
            "funcStartAddr": "0x404d00",
            "funcEndAddr": "0x404d2b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x404d00 */\n#include <stdint.h>\n \nuint64_t fcn_00404d00 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = strlen (rdi);\n    while (rdx != 1) {\n        rdx = rax - 1;\n        if (*((rbx + rax - 1)) != 0x2f) {\n            return rax;\n        }\n        rax = rdx;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00404d30",
            "funcStartAddr": "0x404d30",
            "funcEndAddr": "0x404d63",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x404d30 */\n#include <stdint.h>\n \nuint64_t fcn_00404d30 (int64_t arg1) {\n    rdi = arg1;\n    rax = fcn_00404ca0 (rdi);\n    rbx = rax;\n    if (*(rax) == 0) {\n        rbx = rbp;\n    }\n    rax = fcn_00404d00 (rbx);\n    rbx += rax;\n    *(rbx) = 0;\n    al = (*(rbx) != 0) ? 1 : 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00404d70",
            "funcStartAddr": "0x404d70",
            "funcEndAddr": "0x406255",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x404d70 */\n#include <stdint.h>\n \nuint64_t fcn_00404d70 (uint32_t arg1, int64_t arg2, uint32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rdi != 0) {\n        r13 = rdi;\n        r12 = rsi;\n        rax = fcn_00408a50 (0x18);\n        rbx = rax;\n        rax = fcn_00408c80 (r12);\n        rsi = rbx;\n        *(rbx) = rax;\n        rax = *((rbp + 8));\n        *((rbx + 8)) = rax;\n        rax = *(rbp);\n        *((rbx + 0x10)) = rax;\n        rax = fcn_00405f70 (r13);\n        if (rax == 0) {\n            goto label_0;\n        }\n        if (rbx != rax) {\n            rdi = rbx;\n            goto label_1;\n        }\n        return rax;\n    }\n    return rax;\nlabel_0:\n    fcn_00408ca0 ();\nlabel_1:\n    rbx = rdi;\n    free (*(rdi));\n    rdi = rbx;\n    return free ();\n}\n"
        },
        {
            "funcName": "fcn_00404e00",
            "funcStartAddr": "0x404e00",
            "funcEndAddr": "0x404e3b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x404e00 */\n#include <stdint.h>\n \nint64_t fcn_00404e00 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    int64_t var_10h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rdi != 0) {\n        rax = *((rdx + 8));\n        *(rsp) = rsi;\n        *((rsp + 8)) = rax;\n        rax = *(rdx);\n        *((rsp + 0x10)) = rax;\n        rax = fcn_00405560 (rdi, rsp);\n        al = (rax != 0) ? 1 : 0;\n        return rax;\n    }\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00404e40",
            "funcStartAddr": "0x404e40",
            "funcEndAddr": "0x404e58",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x404e40 */\n#include <stdint.h>\n \nuint64_t fcn_00404e40 (void) {\n    uint32_t var_fh;\n    rax = void (*0x404e60)() ();\n    if (rax != 0) {\n        return rax;\n    }\n    return fcn_00408ca0 ();\n}\n"
        },
        {
            "funcName": "fcn_00404f40",
            "funcStartAddr": "0x404f40",
            "funcEndAddr": "0x404fd3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x404f40 */\n#include <stdint.h>\n \nint64_t fcn_00404f40 (uint32_t arg1, int64_t arg3) {\n    rdi = arg1;\n    rdx = arg3;\n    esi = 0xa;\n    r9 = 0xaaaaaaaaaaaaaaab;\n    if (rdi >= 0xa) {\n        rsi = rdi;\n    }\n    rsi |= 1;\n    if (rsi == -1) {\n        goto label_1;\n    }\nlabel_0:\n    rax = rsi;\n    rcx = rsi;\n    rdx:rax = rax * r9;\n    rax = rdx;\n    rax >>= 1;\n    rax *= 3;\n    rcx -= rax;\n    rax = rcx;\n    if (rsi <= 9) {\n        goto label_2;\n    }\n    if (rcx == 0) {\n        goto label_3;\n    }\n    r8d = 0x10;\n    edi = 9;\n    ecx = 3;\n    while (rdi < rsi) {\n        r8 += 8;\n        if (rdx == 0) {\n            goto label_3;\n        }\n        rcx += 2;\n        rax = rsi;\n        edx = 0;\n        rdi += r8;\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rax = rdx;\n    }\nlabel_2:\n    if (rax != 0) {\n        goto label_1;\n    }\nlabel_3:\n    rsi += 2;\n    if (rsi != -1) {\n        goto label_0;\n    }\nlabel_1:\n    rax = rsi;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405000",
            "funcStartAddr": "0x405000",
            "funcEndAddr": "0x407e51",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x405000 */\n#include <stdint.h>\n \nuint64_t fcn_00405000 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    do {\n        /* [13] -r-x section size 39336 named .text */\n        abort ();\n        rbx = rdi;\n        rdi = rsi;\n        rsi = *((rbx + 0x10));\n        rax = uint64_t (*rbx + 0x30)(uint64_t) (rbx);\n    } while (*((rbx + 0x10)) <= rax);\n    rax <<= 4;\n    rax += *(rbx);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405030",
            "funcStartAddr": "0x405030",
            "funcEndAddr": "0x405149",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x405030 */\n#include <stdint.h>\n \nuint64_t fcn_00405030 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r14 = rdx;\n    r13d = ecx;\n    r12 = rdi;\n    rax = fcn_00405000 (rdi, rsi);\n    *(r14) = rax;\n    rsi = *(rax);\n    if (rsi == 0) {\n        goto label_1;\n    }\n    rbx = rax;\n    if (rsi == rbp) {\n        goto label_2;\n    }\n    rdi = rbp;\n    al = uint64_t (*r12 + 0x38)() ();\n    if (al != 0) {\n        goto label_3;\n    }\n    rax = *((rbx + 8));\n    if (rax == 0) {\n        goto label_1;\n    }\n    rsi = *(rax);\n    if (rbp != rsi) {\n        goto label_4;\n    }\n    goto label_5;\n    do {\n        rbx = *((rbx + 8));\n        rax = *((rbx + 8));\n        if (rax == 0) {\n            goto label_1;\n        }\n        rsi = *(rax);\n        if (rsi == rbp) {\n            goto label_5;\n        }\nlabel_4:\n        rdi = rbp;\n        al = uint64_t (*r12 + 0x38)() ();\n    } while (al == 0);\n    rax = *((rbx + 8));\n    rsi = *(rax);\nlabel_5:\n    if (r13b == 0) {\n        goto label_0;\n    }\n    rdx = *((rax + 8));\n    *((rbx + 8)) = rdx;\n    *(rax) = 0;\n    rdx = *((r12 + 0x48));\n    *((rax + 8)) = rdx;\n    *((r12 + 0x48)) = rax;\n    do {\nlabel_0:\n        rax = rsi;\n        return rax;\nlabel_3:\n        rsi = *(rbx);\nlabel_2:\n    } while (r13b == 0);\n    rax = *((rbx + 8));\n    if (rax != 0) {\n        __asm (\"movdqu xmm0, xmmword [rax]\");\n        __asm (\"movups xmmword [rbx], xmm0\");\n        *(rax) = 0;\n        rdx = *((r12 + 0x48));\n        *((rax + 8)) = rdx;\n        *((r12 + 0x48)) = rax;\n        rax = rsi;\n        return rax;\nlabel_1:\n        esi = 0;\n        rax = rsi;\n        return rax;\n    }\n    *(rbx) = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00405150",
            "funcStartAddr": "0x405150",
            "funcEndAddr": "0x4051ce",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x405150 */\n#include <stdint.h>\n \nint64_t fcn_00405150 (int64_t arg1) {\n    rdi = arg1;\n    rax = *(rdi);\n    if (rax != 0x40cfa0) {\n        xmm0 = *((rax + 8));\n        __asm (\"comiss xmm0, dword [0x0040cfb4]\");\n        if (rax > 0x40cfa0) {\n            xmm1 = *(0x0040cfb8);\n            __asm (\"comiss xmm1, xmm0\");\n            if (rax <= 0x40cfa0) {\n                goto label_0;\n            }\n            xmm1 = *((rax + 0xc));\n            __asm (\"comiss xmm1, dword [0x0040cfbc]\");\n            if (rax <= 0x40cfa0) {\n                goto label_0;\n            }\n            xmm1 = *(rax);\n            __asm (\"comiss xmm1, dword [0x0040cfc0]\");\n            if (rax < 0x40cfa0) {\n                goto label_0;\n            }\n            __asm (\"addss xmm1, dword [0x0040cfb4]\");\n            xmm2 = *((rax + 4));\n            __asm (\"comiss xmm2, xmm1\");\n            if (rax <= 0x40cfa0) {\n                goto label_0;\n            }\n            xmm3 = *(0x0040cfc4);\n            __asm (\"comiss xmm3, xmm2\");\n            if (rax < 0x40cfa0) {\n                goto label_0;\n            }\n            __asm (\"comiss xmm0, xmm1\");\n            eax = 1;\n            if (rax > 0x40cfa0) {\n                goto label_1;\n            }\n        }\nlabel_0:\n        *(rdi) = 0x40cfa0;\n        eax = 0;\n        return rax;\n    }\n    eax = 1;\nlabel_1:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004051d0",
            "funcStartAddr": "0x4051d0",
            "funcEndAddr": "0x40531a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x4051d0 */\n#include <stdint.h>\n \nuint64_t fcn_004051d0 (int64_t arg1, uint32_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r14d = edx;\n    r13 = rsi;\n    r12 = *(rsi);\n    if (r12 < *((rsi + 8))) {\n        goto label_2;\n    }\n    goto label_5;\n    do {\nlabel_1:\n        r12 += 0x10;\n        if (*((r13 + 8)) <= r12) {\n            goto label_5;\n        }\nlabel_2:\n        r15 = *(r12);\n    } while (r15 == 0);\n    rbx = *((r12 + 8));\n    if (rbx != 0) {\n        goto label_0;\n    }\n    goto label_6;\n    do {\n        rcx = *((rax + 8));\n        *((rbx + 8)) = rcx;\n        *((rax + 8)) = rbx;\n        rbx = rdx;\n        if (rdx == 0) {\n            goto label_7;\n        }\nlabel_0:\n        r15 = *(rbx);\n        rax = fcn_00405000 (rbp, r15);\n        rdx = *((rbx + 8));\n    } while (*(rax) != 0);\n    *(rax) = r15;\n    *((rbp + 0x18))++;\n    *(rbx) = 0;\n    rax = *((rbp + 0x48));\n    *((rbx + 8)) = rax;\n    *((rbp + 0x48)) = rbx;\n    rbx = rdx;\n    if (rdx != 0) {\n        goto label_0;\n    }\nlabel_7:\n    r15 = *(r12);\nlabel_6:\n    *((r12 + 8)) = 0;\n    if (r14b != 0) {\n        goto label_1;\n    }\n    rax = fcn_00405000 (rbp, r15);\n    rbx = rax;\n    if (*(rax) == 0) {\n        goto label_8;\n    }\n    rax = *((rbp + 0x48));\n    if (rax == 0) {\n        goto label_9;\n    }\n    rdx = *((rax + 8));\n    *((rbp + 0x48)) = rdx;\nlabel_4:\n    rdx = *((rbx + 8));\n    *(rax) = r15;\n    *((rax + 8)) = rdx;\n    *((rbx + 8)) = rax;\nlabel_3:\n    *(r12) = 0;\n    r12 += 0x10;\n    *((r13 + 0x18))--;\n    if (*((r13 + 8)) > r12) {\n        goto label_2;\n    }\nlabel_5:\n    eax = 1;\n    return rax;\nlabel_8:\n    *(rax) = r15;\n    *((rbp + 0x18))++;\n    goto label_3;\nlabel_9:\n    rax = malloc (0x10);\n    if (rax != 0) {\n        goto label_4;\n    }\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405560",
            "funcStartAddr": "0x405560",
            "funcEndAddr": "0x4055b3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x405560 */\n#include <stdint.h>\n \nuint64_t fcn_00405560 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r12 = rdi;\n    rax = fcn_00405000 (rdi, rsi);\n    rsi = *(rax);\n    if (rsi == 0) {\n        goto label_0;\n    }\n    rbx = rax;\n    while (rbx != 0) {\n        rsi = *(rbx);\n        if (rsi == rbp) {\n            goto label_1;\n        }\n        rdi = rbp;\n        al = uint64_t (*r12 + 0x38)() ();\n        if (al != 0) {\n            goto label_2;\n        }\n        rbx = *((rbx + 8));\n    }\nlabel_0:\n    eax = 0;\n    return rax;\nlabel_2:\n    rbp = *(rbx);\nlabel_1:\n    rax = *(rbx);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004057d0",
            "funcStartAddr": "0x4057d0",
            "funcEndAddr": "0x40595a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x4057d0 */\n#include <stdint.h>\n \nuint64_t fcn_004057d0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    eax = 0x404fe0;\n    r15 = rsi;\n    r14 = r8;\n    r13 = rcx;\n    r12 = rdx;\n    edi = 0x50;\n    if (rdx == 0) {\n        r12 = rax;\n    }\n    eax = 0x404ff0;\n    if (rcx == 0) {\n        r13 = rax;\n    }\n    rax = malloc (rdi);\n    rbx = rax;\n    if (rax == 0) {\n        goto label_4;\n    }\n    rdi = rax + 0x28;\n    if (r15 == 0) {\n        goto label_5;\n    }\n    *((rax + 0x28)) = r15;\n    al = fcn_00405150 (rdi);\n    if (al == 0) {\n        goto label_0;\n    }\n    if (*((r15 + 0x10)) == 0) {\n        goto label_6;\n    }\nlabel_1:\n    rax = fcn_00404f40 (rbp, rsi);\n    rax >>= 0x3d;\n    al = (rax != 0) ? 1 : 0;\n    eax = (int32_t) al;\n    if (((rbp >> 0x3c) & 1) < 0) {\n        goto label_0;\n    }\n    if (rax != 0) {\n        goto label_0;\n    }\n    *((rbx + 0x10)) = rbp;\n    if (rbp == 0) {\n        goto label_0;\n    }\n    rax = calloc (rbp, 0x10);\n    *(rbx) = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    rbp <<= 4;\n    *((rbx + 0x18)) = 0;\n    rbp += rax;\n    *((rbx + 0x20)) = 0;\n    *((rbx + 8)) = rbp;\n    *((rbx + 0x30)) = r12;\n    *((rbx + 0x38)) = r13;\n    *((rbx + 0x40)) = r14;\n    *((rbx + 0x48)) = 0;\n    while (al == 0) {\nlabel_0:\n        ebx = 0;\n        free (rbx);\nlabel_4:\n        rax = rbx;\n        return rax;\nlabel_5:\n        *((rax + 0x28)) = 0x40cfa0;\n        al = fcn_00405150 (rdi);\n        xmm1 = *(0x0040cfc8);\n    }\n    if (rbp < 0) {\n        goto label_7;\n    }\nlabel_2:\n    xmm0 = 0;\n    __asm (\"cvtsi2ss xmm0, rbp\");\nlabel_3:\n    __asm (\"divss xmm0, xmm1\");\n    __asm (\"comiss xmm0, dword [0x0040cfcc]\");\n    if (rbp >= 0) {\n        goto label_0;\n    }\n    __asm (\"comiss xmm0, dword [0x0040cfd0]\");\n    if (rbp < 0) {\n        goto label_8;\n    }\n    __asm (\"subss xmm0, dword [0x0040cfd0]\");\n    __asm (\"cvttss2si rbp, xmm0\");\n    __asm (\"btc rbp, 0x3f\");\n    goto label_1;\nlabel_6:\n    xmm1 = *((r15 + 8));\n    if (rbp >= 0) {\n        goto label_2;\n    }\nlabel_7:\n    rax = rbp;\n    ebp &= 1;\n    xmm0 = 0;\n    rax >>= 1;\n    rax |= rbp;\n    __asm (\"cvtsi2ss xmm0, rax\");\n    __asm (\"addss xmm0, xmm0\");\n    goto label_3;\nlabel_8:\n    __asm (\"cvttss2si rbp, xmm0\");\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00405a10",
            "funcStartAddr": "0x405a10",
            "funcEndAddr": "0x405ae6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x405a10 */\n#include <stdint.h>\n \nint64_t fcn_00405a10 (uint32_t arg1) {\n    rdi = arg1;\n    r12 = rdi;\n    rbp = *(rdi);\n    rax = *((rdi + 8));\n    if (*((rdi + 0x40)) == 0) {\n        goto label_2;\n    }\n    if (*((rdi + 0x20)) == 0) {\n        goto label_2;\n    }\n    if (rbp < rax) {\n        goto label_0;\n    }\n    goto label_3;\n    do {\n        rbp += 0x10;\n        if (rax <= rbp) {\n            goto label_4;\n        }\nlabel_0:\n        rdi = *(rbp);\n    } while (rdi == 0);\n    rbx = rbp;\n    while (rbx != 0) {\n        rdi = *(rbx);\n        uint64_t (*r12 + 0x40)() ();\n        rbx = *((rbx + 8));\n    }\n    rax = *((r12 + 8));\n    rbp += 0x10;\n    if (rax > rbp) {\n        goto label_0;\n    }\nlabel_4:\n    rbp = *(r12);\nlabel_2:\n    if (rbp >= rax) {\n        goto label_3;\n    }\nlabel_1:\n    rdi = *((rbp + 8));\n    if (rdi == 0) {\n        goto label_5;\n    }\n    do {\n        rbx = *((rdi + 8));\n        free (rdi);\n        rdi = rbx;\n    } while (rbx != 0);\nlabel_5:\n    rbp += 0x10;\n    if (*((r12 + 8)) > rbp) {\n        goto label_1;\n    }\nlabel_3:\n    rdi = *((r12 + 0x48));\n    if (rdi == 0) {\n        goto label_6;\n    }\n    do {\n        rbx = *((rdi + 8));\n        free (rdi);\n        rdi = rbx;\n    } while (rbx != 0);\nlabel_6:\n    free (*(r12));\n    rdi = r12;\n    return free ();\n}\n"
        },
        {
            "funcName": "fcn_00405af0",
            "funcStartAddr": "0x405af0",
            "funcEndAddr": "0x409600",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x405af0 */\n#include <stdint.h>\n \nuint64_t fcn_00405af0 (int64_t arg1, uint32_t arg2) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    rdi = arg1;\n    rsi = arg2;\n    do {\nlabel_0:\n        rax = abort ();\n        r12 = *((rdi + 0x28));\n        if (*((r12 + 0x10)) == 0) {\n            if (rsi < 0) {\n                goto label_3;\n            }\n            xmm0 = 0;\n            __asm (\"cvtsi2ss xmm0, rsi\");\nlabel_1:\n            __asm (\"divss xmm0, dword [r12 + 8]\");\n            __asm (\"comiss xmm0, dword [0x0040cfcc]\");\n            if (rsi >= 0) {\n                goto label_4;\n            }\n            __asm (\"comiss xmm0, dword [0x0040cfd0]\");\n            if (rsi < 0) {\n                goto label_5;\n            }\n            __asm (\"subss xmm0, dword [0x0040cfd0]\");\n            __asm (\"cvttss2si rsi, xmm0\");\n            __asm (\"btc rsi, 0x3f\");\n        }\nlabel_2:\n        rax = fcn_00404f40 (rsi, rsi);\n        rdx = rax*8;\n        rbx = rax;\n        rax >>= 0x3d;\n        al = (rax != 0) ? 1 : 0;\n        edx = 1;\n        eax = (int32_t) al;\n        __asm (\"cmovs rax, rdx\");\n        if (rbx == 0) {\n            goto label_4;\n        }\n        if (rax != 0) {\n            goto label_4;\n        }\n        if (*((rbp + 0x10)) == rbx) {\n            goto label_6;\n        }\n        rax = calloc (rbx, 0x10);\n        *(rsp) = rax;\n        if (rax == 0) {\n            goto label_4;\n        }\n        *((rsp + 0x10)) = rbx;\n        rbx <<= 4;\n        rbx += rax;\n        rax = *((rbp + 0x30));\n        *((rsp + 0x18)) = 0;\n        *((rsp + 8)) = rbx;\n        *((rsp + 0x30)) = rax;\n        rax = *((rbp + 0x38));\n        *((rsp + 0x20)) = 0;\n        *((rsp + 0x38)) = rax;\n        rax = *((rbp + 0x40));\n        *((rsp + 0x28)) = r12;\n        *((rsp + 0x40)) = rax;\n        rax = *((rbp + 0x48));\n        *((rsp + 0x48)) = rax;\n        eax = fcn_004051d0 (rsp, rbp, 0);\n        ebx = eax;\n        if (al != 0) {\n            goto label_7;\n        }\n        rax = *((rsp + 0x48));\n        *((rbp + 0x48)) = rax;\n        al = fcn_004051d0 (rbp, rsp, 1);\n    } while (al == 0);\n    al = fcn_004051d0 (rbp, rsp, 0);\n    if (al == 0) {\n        goto label_0;\n    }\n    free (*(rsp));\n    eax = ebx;\n    return rax;\nlabel_4:\n    ebx = 0;\n    do {\n        eax = ebx;\n        return rax;\nlabel_3:\n        rax = rsi;\n        esi &= 1;\n        xmm0 = 0;\n        rax >>= 1;\n        rax |= rsi;\n        __asm (\"cvtsi2ss xmm0, rax\");\n        __asm (\"addss xmm0, xmm0\");\n        goto label_1;\nlabel_5:\n        __asm (\"cvttss2si rsi, xmm0\");\n        goto label_2;\nlabel_6:\n        ebx = 1;\n        eax = 1;\n        return rax;\nlabel_7:\n        free (*(rbp));\n        rax = *(rsp);\n        *(rbp) = rax;\n        rax = *((rsp + 8));\n        *((rbp + 8)) = rax;\n        rax = *((rsp + 0x10));\n        *((rbp + 0x10)) = rax;\n        rax = *((rsp + 0x18));\n        *((rbp + 0x18)) = rax;\n        rax = *((rsp + 0x48));\n        *((rbp + 0x48)) = rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00405cf0",
            "funcStartAddr": "0x405cf0",
            "funcEndAddr": "0x409a75",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x405cf0 */\n#include <stdint.h>\n \nuint64_t fcn_00405cf0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    do {\nlabel_6:\n        abort ();\n    } while (rsi == 0);\n    r12 = rdx;\n    rbx = rdi;\n    rax = fcn_00405030 (rdi, rsi, rsp + 8, 0);\n    rdx = rax;\n    if (rax != 0) {\n        eax = 0;\n        if (r12 != 0) {\n            *(r12) = rdx;\n        }\n        return rax;\n    }\n    rax = *((rbx + 0x18));\n    if (rax < 0) {\n        goto label_8;\n    }\n    xmm1 = 0;\n    rdx = *((rbx + 0x28));\n    __asm (\"cvtsi2ss xmm1, rax\");\n    rax = *((rbx + 0x10));\n    if (rax < 0) {\n        goto label_9;\n    }\n    do {\n        xmm0 = 0;\n        __asm (\"cvtsi2ss xmm0, rax\");\n        __asm (\"mulss xmm0, dword [rdx + 8]\");\n        __asm (\"comiss xmm1, xmm0\");\n        if (rax > 0) {\n            goto label_10;\n        }\nlabel_0:\n        r12 = *((rsp + 8));\n        if (*(r12) == 0) {\n            goto label_11;\n        }\n        rax = *((rbx + 0x48));\n        if (rax == 0) {\n            goto label_12;\n        }\n        rdx = *((rax + 8));\n        *((rbx + 0x48)) = rdx;\nlabel_1:\n        rdx = *((r12 + 8));\n        *(rax) = rbp;\n        *((rax + 8)) = rdx;\n        *((r12 + 8)) = rax;\n        eax = 1;\n        *((rbx + 0x20))++;\n        return rax;\nlabel_8:\n        rdx = rax;\n        eax &= 1;\n        xmm1 = 0;\n        rdx >>= 1;\n        rdx |= rax;\n        rax = *((rbx + 0x10));\n        __asm (\"cvtsi2ss xmm1, rdx\");\n        rdx = *((rbx + 0x28));\n        __asm (\"addss xmm1, xmm1\");\n    } while (rax >= 0);\nlabel_9:\n    rcx = rax;\n    eax &= 1;\n    xmm0 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm0, rcx\");\n    __asm (\"addss xmm0, xmm0\");\n    __asm (\"mulss xmm0, dword [rdx + 8]\");\n    __asm (\"comiss xmm1, xmm0\");\n    if (rcx <= 0) {\n        goto label_0;\n    }\nlabel_10:\n    fcn_00405150 (rbx + 0x28);\n    rdx = *((rbx + 0x28));\n    rax = *((rbx + 0x10));\n    xmm2 = *((rdx + 8));\n    if (rax < 0) {\n        goto label_13;\n    }\n    xmm0 = 0;\n    __asm (\"cvtsi2ss xmm0, rax\");\nlabel_3:\n    rax = *((rbx + 0x18));\n    if (rax < 0) {\n        goto label_14;\n    }\n    xmm1 = 0;\n    __asm (\"cvtsi2ss xmm1, rax\");\nlabel_2:\n    xmm3 = xmm2;\n    __asm (\"mulss xmm3, xmm0\");\n    __asm (\"comiss xmm1, xmm3\");\n    if (rax <= 0) {\n        goto label_0;\n    }\n    __asm (\"mulss xmm0, dword [rdx + 0xc]\");\n    if (*((rdx + 0x10)) == 0) {\n        goto label_15;\n    }\nlabel_4:\n    __asm (\"comiss xmm0, dword [0x0040cfcc]\");\n    if (*((rdx + 0x10)) < 0) {\n        goto label_16;\n    }\n    do {\nlabel_5:\n        eax = 0xffffffff;\n        return rax;\nlabel_11:\n        *(r12) = rbp;\n        eax = 1;\n        *((rbx + 0x20))++;\n        *((rbx + 0x18))++;\n        return rax;\nlabel_12:\n        rax = malloc (0x10);\n    } while (rax == 0);\n    goto label_1;\nlabel_14:\n    rcx = rax;\n    eax &= 1;\n    xmm1 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm1, rcx\");\n    __asm (\"addss xmm1, xmm1\");\n    goto label_2;\nlabel_13:\n    rcx = rax;\n    eax &= 1;\n    xmm0 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm0, rcx\");\n    __asm (\"addss xmm0, xmm0\");\n    goto label_3;\nlabel_15:\n    __asm (\"mulss xmm0, xmm2\");\n    goto label_4;\nlabel_16:\n    __asm (\"comiss xmm0, dword [0x0040cfd0]\");\n    if (rcx >= 0) {\n        goto label_17;\n    }\n    __asm (\"cvttss2si rsi, xmm0\");\nlabel_7:\n    al = fcn_00405af0 (rbx, rsi);\n    if (al == 0) {\n        goto label_5;\n    }\n    rax = fcn_00405030 (rbx, rbp, rsp + 8, 0);\n    if (rax == 0) {\n        goto label_0;\n    }\n    goto label_6;\nlabel_17:\n    __asm (\"subss xmm0, dword [0x0040cfd0]\");\n    __asm (\"cvttss2si rsi, xmm0\");\n    __asm (\"btc rsi, 0x3f\");\n    goto label_7;\n}\n"
        },
        {
            "funcName": "fcn_00405f70",
            "funcStartAddr": "0x405f70",
            "funcEndAddr": "0x405fab",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x405f70 */\n#include <stdint.h>\n \nuint64_t fcn_00405f70 (int64_t arg2) {\n    int64_t var_8h;\n    rsi = arg2;\n    rbx = rsi;\n    eax = fcn_00405cf0 (rdi, rsi, rsp + 8);\n    if (eax != 0xffffffff) {\n        if (eax == 0) {\n            rbx = *((rsp + 8));\n        }\n        rax = rbx;\n        return rax;\n    }\n    ebx = 0;\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00406260",
            "funcStartAddr": "0x406260",
            "funcEndAddr": "0x4062f9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x406260 */\n#include <stdint.h>\n \nuint64_t fcn_00406260 (char ** arg1) {\n    rdi = arg1;\n    if (rdi != 0) {\n        rbx = rdi;\n        rax = strrchr (rdi, 0x2f);\n        if (rax != 0) {\n            r8 = rax + 1;\n            rdx = r8;\n            rdx -= rbx;\n            if (rdx <= 6) {\n                goto label_0;\n            }\n            rsi = rax - 6;\n            edi = \"/.libs/\";\n            ecx = 7;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (rdx > 6) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            edi = 0x40d020;\n            ecx = 3;\n            rsi = r8;\n            rbx = r8;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (dl > 0) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            rbx = rax + 4;\n            *(obj.__progname) = rbx;\n        }\nlabel_0:\n        *(0x00611410) = rbx;\n        *(obj.program_invocation_name) = rbx;\n        return rax;\n    }\n    fwrite (0x40cfe0, 1, 0x37, *(obj.stderr));\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_00406300",
            "funcStartAddr": "0x406300",
            "funcEndAddr": "0x4063f2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x406300 */\n#include <stdint.h>\n \nuint64_t fcn_00406300 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edx = 5;\n    r12d = esi;\n    rsi = rdi;\n    rax = dcgettext (0, rsi);\n    rbx = rax;\n    while (1) {\nlabel_0:\n        rax = rbx;\n        return rax;\n        rax = fcn_0040a830 ();\n        edx = *(rax);\n        edx &= 0xffffffdf;\n        if (dl != 0x55) {\n            goto label_1;\n        }\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x54) {\n            goto label_2;\n        }\n        edx = *((rax + 2));\n        edx &= 0xffffffdf;\n        if (dl != 0x46) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x2d) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0) {\n            goto label_2;\n        }\n        eax = 0x40d026;\n        ebx = 0x40d031;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n    }\nlabel_1:\n    if (dl == 0x47) {\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x42) {\n            goto label_2;\n        }\n        if (*((rax + 2)) != 0x31) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0x33) {\n            goto label_2;\n        }\n        if (*((rax + 6)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 7)) != 0) {\n            goto label_2;\n        }\n        eax = 0x40d02a;\n        ebx = 0x40d02d;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n        goto label_0;\n    }\nlabel_2:\n    eax = 0x40e2d7;\n    ebx = 0x40d024;\n    if (r12d != 9) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00406400",
            "funcStartAddr": "0x406400",
            "funcEndAddr": "0x40b83d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x406400 */\n#include <stdint.h>\n \nuint64_t fcn_00406400 (int64_t arg_e8h_3, uint32_t arg_e8h_2, int64_t arg_e8h, char * arg_e0h, int64_t arg1, char * arg2, char * arg3, size_t * arg4, int64_t arg5, int64_t arg6) {\n    size_t * var_8h;\n    size_t * var_10h;\n    uint32_t var_1fh;\n    char * s;\n    size_t n;\n    size_t * var_30h;\n    size_t * var_38h;\n    size_t var_40h;\n    size_t var_48h;\n    void * s2;\n    char * var_58h;\n    uint32_t var_60h;\n    int64_t var_68h;\n    uint32_t var_6ch;\n    char * var_6dh;\n    int64_t var_6eh;\n    int64_t var_6fh;\n    int64_t var_70h;\n    int64_t var_78h;\n    wint_t wc;\n    mbstate_t * ps;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    do {\n        abort ();\nlabel_5:\n        r15 = rdi;\n        r14 = rsi;\n        r13d = r8d;\n        *((rsp + 0x20)) = rdx;\n        *((rsp + 8)) = rcx;\n        *((rsp + 0x68)) = r9d;\n        rax = ctype_get_mb_cur_max ();\n        ebp &= 2;\n        *((rsp + 0x60)) = rax;\n        rsp + 0x6c = (ebp != 0) ? 1 : 0;\n    } while (r13d > 0xa);\n    eax = r13d;\n    r11 = *((rsp + 8));\n    /* switch table (11 cases) at 0x40d0a0 */\nlabel_30:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    r13d = 2;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x40e2d7;\nlabel_21:\n    r9 = r11;\n    r12d = 0;\n    r11d = r13d;\n    do {\nlabel_28:\n        r13b = (r9 != r12) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            r13b = (*((rax + r12)) != 0) ? 1 : 0;\n        }\n        if (r13b == 0) {\n            goto label_47;\n        }\n        rdi = *((rsp + 0x20));\n        al = (r11d != 2) ? 1 : 0;\n        al &= *((rsp + 8));\n        r8 = rdi + r12;\n        *((rsp + 0x10)) = al;\n        if (al == 0) {\n            goto label_48;\n        }\n        rax = *((rsp + 0x28));\n        if (rax == 0) {\n            goto label_49;\n        }\n        rbp = r12 + rax;\n        if (r9 == -1) {\n            if (rax <= 1) {\n                goto label_50;\n            }\n            *((rsp + 0x40)) = r11d;\n            *((rsp + 0x38)) = r10b;\n            *((rsp + 0x30)) = r8;\n            rax = strlen (rdi);\n            r11d = *((rsp + 0x40));\n            r10d = *((rsp + 0x38));\n            r8 = *((rsp + 0x30));\n            r9 = rax;\n        }\nlabel_50:\n        if (rbp > r9) {\n            goto label_49;\n        }\n        rdi = r8;\n        *((rsp + 0x48)) = r11d;\n        *((rsp + 0x40)) = r9;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        eax = memcmp (rdi, *((rsp + 0x50)), *((rsp + 0x28)));\n        r8 = *((rsp + 0x30));\n        r10d = *((rsp + 0x38));\n        r9 = *((rsp + 0x40));\n        r11d = *((rsp + 0x48));\n        if (eax != 0) {\n            goto label_49;\n        }\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_51;\n        }\n        ebp = *(r8);\n        if (bpl > 0x7e) {\n            goto label_52;\n        }\n        eax = (int32_t) bpl;\n        /* switch table (127 cases) at 0x40d0f8 */\n        *((rsp + 0x10)) = 0;\n        al = (r9 != 1) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            al = (*((rax + 1)) != 0) ? 1 : 0;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        if (al != 0) {\n            goto label_7;\n        }\nlabel_17:\n        if (r12 != 0) {\n            goto label_7;\n        }\nlabel_18:\n        if (*((rsp + 0x6c)) != 0) {\n            if (dl != 0) {\n                goto label_53;\n            }\n        }\nlabel_2:\n        eax = *((rsp + 8));\n        eax ^= 1;\n        eax |= edx;\n        eax ^= 1;\n        al |= *((rsp + 0x6c));\n        if (al == 0) {\n            goto label_11;\n        }\nlabel_24:\n        eax = 0;\nlabel_10:\n        if (*((rsp + 0xd0)) == 0) {\n            goto label_11;\n        }\n        edx = ebp;\n        rcx = *((rsp + 0xd0));\n        dl >>= 5;\n        edx = (int32_t) dl;\n        edx = *((rcx + rdx*4));\n        ecx = ebp;\n        edx >>= cl;\n        edx &= 1;\n        if (edx == 0) {\n            goto label_11;\n        }\n        dl = (r11d == 2) ? 1 : 0;\nlabel_0:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_54;\n        }\nlabel_4:\n        eax = r10d;\n        eax ^= 1;\n        al &= dl;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rdx = rbx + 1;\n            if (rdx < r14) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rdx = rbx + 2;\n            if (rdx < r14) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\nlabel_9:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n        r12++;\nlabel_1:\n        if (rbx < r14) {\n            *((r15 + rbx)) = bpl;\n        }\n        edi = *((rsp + 0x1f));\n        rbx++;\n        eax = 0;\n        if (r13b == 0) {\n            edi = eax;\n        }\n        *((rsp + 0x1f)) = dil;\n    } while (1);\nlabel_3:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    if (r14 == 0) {\n        goto label_56;\n    }\n    edx = 0;\n    if (*((rsp + 0x58)) != 0) {\n        goto label_56;\n    }\nlabel_27:\n    *((rsp + 0x6d)) = r13b;\n    rbx += 3;\n    eax = 0;\n    r10d = 0;\n    *((rsp + 0x58)) = r14;\n    r14 = rdx;\nlabel_11:\n    dl = (r11d == 2) ? 1 : 0;\n    if (*((rsp + 0x10)) != 0) {\n        goto label_0;\n    }\n    eax ^= 1;\n    r12++;\n    eax &= r10d;\nlabel_16:\n    if (al == 0) {\n        goto label_1;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x27;\n    }\n    rbx += 2;\n    r10d = 0;\n    goto label_1;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_57;\n    }\n    if (r11d == 5) {\n        goto label_58;\n    }\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_3;\n    }\n    *((rsp + 0x6d)) = r13b;\n    edx = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\nlabel_15:\n    edx = *((rsp + 8));\n    dl &= *((rsp + 0x6c));\n    ecx = 0x5c;\n    al = (*((rsp + 0x28)) != 0) ? 1 : 0;\n    dl &= al;\n    if (dl != 0) {\n        goto label_59;\n    }\nlabel_8:\n    if (*((rsp + 8)) != 0) {\n        goto label_60;\n    }\nlabel_7:\n    r13d = 0;\n    goto label_2;\nlabel_6:\n    edx = 0;\n    r13d = 0;\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_4;\n    }\nlabel_54:\n    r13d = r11d;\n    eax = edx;\n    r11 = r9;\nlabel_42:\nlabel_12:\n    eax = 4;\n    if (*((rsp + 8)) != 0) {\n        r13d = eax;\n    }\nlabel_43:\n    r9d &= 0xfffffffd;\n    rax = fcn_00406400 (r15, r14, *((rsp + 0x40)), r11, r13d, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\nlabel_44:\n    rax = rbx;\n    return rax;\n    goto label_6;\n    *((rsp + 0x10)) = 0;\n    edx = 0;\n    goto label_7;\n    *((rsp + 0x10)) = 0;\n    ecx = 0x72;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    do {\nlabel_20:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_61;\n        }\nlabel_34:\n        r13d = 0;\n        goto label_9;\n    } while (1);\nlabel_14:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_62;\n    }\n    *((rsp + 0x10)) = 0;\n    eax = r10d;\n    dl = (r11d == 2) ? 1 : 0;\n    eax ^= 1;\n    al &= dl;\n    if (al == 0) {\n        goto label_63;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rcx = rbx + 1;\n    if (r14 > rcx) {\n        *((r15 + rbx + 1)) = 0x24;\n    }\n    rcx = rbx + 2;\n    if (r14 > rcx) {\n        *((r15 + rbx + 2)) = 0x27;\n    }\n    rcx = rbx + 3;\n    if (r14 <= rcx) {\n        goto label_64;\n    }\nlabel_26:\n    *((r15 + rcx)) = 0x5c;\n    r10d = eax;\nlabel_25:\n    rbx = rcx + 1;\n    if (r11d == 2) {\n        goto label_65;\n    }\n    rax = r12 + 1;\n    if (rax < r9) {\n        rax = *((rsp + 0x20));\n        eax = *((rax + r12 + 1));\n        *((rsp + 0x30)) = al;\n        eax -= 0x30;\n        if (al <= 9) {\n            goto label_66;\n        }\n    }\nlabel_35:\n    eax = *((rsp + 8));\n    eax ^= 1;\n    al |= dl;\n    eax = r13d;\n    r13d = 0;\n    if (al == 0) {\n        goto label_10;\n    }\n    goto label_11;\nlabel_19:\n    *((rsp + 0x10)) = 0;\n    do {\nlabel_52:\n        if (*((rsp + 0x60)) != 1) {\n            goto label_67;\n        }\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r9;\n        *((rsp + 0x30)) = r10b;\n        rax = ctype_b_loc ();\n        edx = (int32_t) bpl;\n        r10d = *((rsp + 0x30));\n        r9 = *((rsp + 0x38));\n        rax = *(rax);\n        r11d = *((rsp + 0x40));\n        edi = 1;\n        eax = *((rax + rdx*2));\n        ax &= 0x4000;\n        r13b = (ax != 0) ? 1 : 0;\n        dl = (ax == 0) ? 1 : 0;\n        dl &= *((rsp + 8));\nlabel_37:\n        if (dl != 0) {\n            goto label_68;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        goto label_2;\nlabel_48:\n        ebp = *(r8);\n    } while (bpl > 0x7e);\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x40d4f0 */\n    ecx = 0x6e;\nlabel_13:\n    eax = *((rsp + 0x6c));\n    dl = (r11d == 2) ? 1 : 0;\n    al &= dl;\n    *((rsp + 0x10)) = al;\n    if (al == 0) {\n        goto label_8;\n    }\nlabel_53:\n    r11 = r9;\n    r13d = 2;\n    goto label_12;\n    ecx = 0x74;\n    goto label_13;\n    ecx = 0x62;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x61;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    if (*((rsp + 8)) != 0) {\n        goto label_14;\n    }\n    if ((*((rsp + 0x68)) & 1) != 0) {\n        goto label_69;\n    }\n    *((rsp + 0x10)) = 0;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    ebp = 0;\n    goto label_2;\n    if (r11d != 2) {\n        goto label_15;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_17;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_18;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_18;\n    ecx = 0x72;\n    goto label_13;\n    ecx = 0x66;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x76;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\nlabel_49:\n    ebp = *(r8);\n    if (bpl > 0x7e) {\n        goto label_19;\n    }\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x40d8e8 */\n    eax = 0;\n    do {\nlabel_31:\n        r13d = *((rsp + 0x10));\n        *((rsp + 0x10)) = al;\n        eax = 0;\n        goto label_10;\n        eax = 0;\nlabel_32:\n        if (r12 != 0) {\n            goto label_70;\n        }\n        r13d = *((rsp + 0x10));\n        edx = 0;\n        *((rsp + 0x10)) = al;\n        goto label_2;\n        eax = 0;\nlabel_33:\n    } while (1);\n    goto label_6;\n    goto label_20;\nlabel_47:\n    r13d = r11d;\n    r11 = r9;\n    dl = (r13d == 2) ? 1 : 0;\n    if (rbx == 0) {\n        if ((*((rsp + 0x6c)) & dl) != 0) {\n            goto label_71;\n        }\n    }\n    eax = *((rsp + 0x6c));\n    eax ^= 1;\n    dl &= al;\n    if (dl == 0) {\n        goto label_72;\n    }\n    if (*((rsp + 0x6d)) == 0) {\n        goto label_45;\n    }\n    if (*((rsp + 0x1f)) != 0) {\n        goto label_73;\n    }\n    al = (r14 == 0) ? 1 : 0;\n    dl = (*((rsp + 0x58)) != 0) ? 1 : 0;\n    al &= dl;\n    if (al == 0) {\n        goto label_74;\n    }\n    r14 = *((rsp + 0x58));\nlabel_46:\n    *(r15) = 0x27;\n    r13d = 2;\n    ebx = 1;\n    *((rsp + 0x50)) = 0x40e2d7;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x6c)) = 0;\n    *((rsp + 0x6d)) = al;\n    goto label_21;\nlabel_58:\n    if ((*((rsp + 0x68)) & 4) != 0) {\n        rax = r12 + 2;\n        if (rax >= r9) {\n            goto label_39;\n        }\n        rsi = *((rsp + 0x20));\n        if (*((rsi + r12 + 1)) == 0x3f) {\n            goto label_75;\n        }\n    }\nlabel_39:\n    edx = 0;\n    r13d = 0;\n    goto label_2;\nlabel_57:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r13d = 0;\n    eax = 0;\n    goto label_11;\nlabel_67:\n    *((rsp + 0x88)) = 0;\n    if (r9 == -1) {\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        rax = strlen (*((rsp + 0x20)));\n        r11d = *((rsp + 0x40));\n        r10d = *((rsp + 0x38));\n        r8 = *((rsp + 0x30));\n        r9 = rax;\n    }\n    eax = 0;\n    *((rsp + 0x70)) = rbx;\n    *((rsp + 0x78)) = r8;\n    rbx = rax;\n    *((rsp + 0x6e)) = r10b;\n    *((rsp + 0x6f)) = bpl;\n    *((rsp + 0x40)) = r15;\n    *((rsp + 0x48)) = r14;\n    *((rsp + 0x30)) = r9;\n    *((rsp + 0x38)) = r11d;\n    while (*((rsp + 0x38)) != 2) {\nlabel_22:\n        eax = iswprint (*((rsp + 0x84)));\n        rdi = rsp + 0x88;\n        eax = 0;\n        if (eax == 0) {\n            r13d = eax;\n        }\n        rbx += r14;\n        eax = mbsinit (rdi);\n        if (eax != 0) {\n            goto label_76;\n        }\n        rax = *((rsp + 0x20));\n        r15 = r12 + rbx;\n        rbp = rax + r15;\n        rdx -= r15;\n        rax = fcn_0040a230 (rsp + 0x84, rbp, *((rsp + 0x30)), rsp + 0x88);\n        r14 = rax;\n        if (rax == 0) {\n            goto label_76;\n        }\n        if (rax == -1) {\n            goto label_77;\n        }\n        if (rax == 0xfffffffffffffffe) {\n            goto label_78;\n        }\n    }\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_22;\n    }\n    if (rax == 1) {\n        goto label_22;\n    }\n    rsi = *((rsp + 0x20));\n    rax = rsi + r15 + 1;\n    rsi += r14;\n    rsi += r15;\n    goto label_79;\nlabel_23:\n    rax++;\n    if (rsi == rax) {\n        goto label_22;\n    }\nlabel_79:\n    ecx = *(rax);\n    ecx -= 0x5b;\n    if (cl > 0x21) {\n        goto label_23;\n    }\n    edx = 1;\n    rdx <<= cl;\n    rcx = 0x20000002b;\n    if ((rdx & rcx) == 0) {\n        goto label_23;\n    }\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r13d = 2;\n    r11 = *((rsp + 0x30));\n    goto label_12;\nlabel_70:\n    *((rsp + 0x10)) = al;\n    r13d = 0;\n    goto label_24;\nlabel_63:\n    rcx = rbx;\n    if (r14 <= rbx) {\n        goto label_25;\n    }\n    eax = r10d;\n    goto label_26;\nlabel_56:\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x5c;\n    }\n    rax = rbx + 2;\n    if (r14 <= rax) {\n        goto label_80;\n    }\n    rdx = r14;\n    *((r15 + rbx + 2)) = 0x27;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_69:\n    r12++;\n    goto label_28;\nlabel_68:\n    edx = *((rsp + 8));\n    r13d = 0;\nlabel_36:\n    rcx = rdi;\n    *((rsp + 0x30)) = r13b;\n    esi = 0;\n    r13d = *((rsp + 0x6c));\n    rcx += r12;\n    edi = *((rsp + 0x10));\n    r8 = *((rsp + 0x20));\n    while (dl != 0) {\n        al = (r11d == 2) ? 1 : 0;\n        if (r13b != 0) {\n            goto label_81;\n        }\n        esi = r10d;\n        esi ^= 1;\n        al &= sil;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rsi = rbx + 1;\n            if (r14 > rsi) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rsi = rbx + 2;\n            if (r14 > rsi) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 6;\n            eax += 0x30;\n            *((r15 + rbx + 1)) = al;\n        }\n        rax = rbx + 2;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 3;\n            eax &= 7;\n            eax += 0x30;\n            *((r15 + rbx + 2)) = al;\n        }\n        ebp &= 7;\n        r12++;\n        rbx += 3;\n        ebp += 0x30;\n        if (r12 >= rcx) {\n            goto label_82;\n        }\n        esi = edx;\nlabel_29:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = bpl;\n        }\n        ebp = *((r8 + r12));\n        rbx++;\n    }\n    eax = esi;\n    eax ^= 1;\n    eax &= r10d;\n    if (dil != 0) {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n    }\n    r12++;\n    if (r12 < rcx) {\n        if (al == 0) {\n            goto label_83;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x27;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            *((r15 + rbx + 1)) = 0x27;\n        }\n        rbx += 2;\n        edi = 0;\n        r10d = 0;\n        goto label_29;\n    }\n    r13d = *((rsp + 0x30));\n    goto label_16;\nlabel_81:\n    r13d = r11d;\n    *((rsp + 8)) = al;\n    r11 = r9;\n    goto label_12;\nlabel_64:\n    rbx += 4;\n    r10d = eax;\n    r13d = 0;\n    goto label_11;\n    if (ebp != 0) {\n        goto label_30;\n    }\n    *((rsp + 8)) = 1;\n    do {\n        if (r14 != 0) {\n            goto label_84;\n        }\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 1;\n        r13d = 2;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x40e2d7;\n        goto label_21;\n        if (ebp != 0) {\n            goto label_85;\n        }\n        if (r14 == 0) {\n            goto label_86;\n        }\n        *(r15) = 0x22;\n        r10d = 0;\n        *((rsp + 0x1f)) = 1;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\nlabel_38:\n        *((rsp + 0x6c)) = 0;\n        ebx = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x40d024;\n        goto label_21;\n        if (r14 != 0) {\n            *((rsp + 8)) = r11;\n            rax = fcn_00406300 (0x40d035, r13d);\n            *((rsp + 0xd8)) = rax;\n            rax = fcn_00406300 (0x40e2d7, r13d);\n            r11 = *((rsp + 8));\n            *((rsp + 0xe0)) = rax;\n        }\n        ebx = 0;\n        if (ebp == 0) {\n            goto label_87;\n        }\nlabel_41:\n        *((rsp + 0x10)) = r11;\n        rax = strlen (*((rsp + 0xe0)));\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        r11 = *((rsp + 0x10));\n        *((rsp + 0x28)) = rax;\n        rax = *((rsp + 0xe0));\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x50)) = rax;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 8)) = 1;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 0;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 5;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x40d024;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 2;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x40e2d7;\n        goto label_21;\n        eax = *((rsp + 0x10));\n        goto label_31;\n        eax = *((rsp + 0x10));\n        goto label_32;\n        eax = *((rsp + 0x10));\n        goto label_33;\n        edx = 0;\n        r13d = 0;\n        goto label_4;\n        goto label_34;\nlabel_66:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x30;\n        }\n        rax = rcx + 2;\n        if (r14 > rax) {\n            *((r15 + rcx + 2)) = 0x30;\n        }\n        rbx = rcx + 3;\n        goto label_35;\n        if (ebp != 0) {\n            goto label_88;\n        }\n        *((rsp + 8)) = 0;\n    } while (1);\nlabel_82:\n    r13d = *((rsp + 0x30));\n    goto label_1;\nlabel_59:\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\nlabel_83:\n    edi = 0;\n    goto label_29;\nlabel_76:\n    rdi = rbx;\n    edx = r13d;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    edx ^= 1;\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    dl &= *((rsp + 8));\nlabel_40:\n    if (rdi > 1) {\n        goto label_36;\n    }\n    goto label_37;\nlabel_86:\n    *((rsp + 0x58)) = 0;\n    r10d = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x6d)) = 0;\n    goto label_38;\nlabel_65:\n    eax = r13d;\n    r13d = 0;\n    goto label_11;\nlabel_75:\n    ebp = *((rsi + rax));\n    if (bpl > 0x3e) {\n        goto label_39;\n    }\n    rsi = 0x7000a38200000000;\n    if (((rsi >> rbp) & 1) >= 0) {\n        goto label_39;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_51;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x3f;\n    }\n    rdx = rbx + 1;\n    if (r14 > rdx) {\n        *((r15 + rbx + 1)) = 0x22;\n    }\n    rdx = rbx + 2;\n    if (r14 > rdx) {\n        *((r15 + rbx + 2)) = 0x22;\n    }\n    rdx = rbx + 3;\n    if (r14 > rdx) {\n        *((r15 + rbx + 3)) = 0x3f;\n    }\n    rbx += 4;\n    edx = 0;\n    r13d = 0;\n    r12 = rax;\n    goto label_35;\nlabel_77:\n    rdi = rbx;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r13d = 0;\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    edx = *((rsp + 8));\n    goto label_40;\nlabel_78:\n    r9 = *((rsp + 0x30));\n    rsi = r15;\n    rcx = rbp;\n    rax = rbx;\n    rdi = rbx;\n    r8 = *((rsp + 0x78));\n    r10d = *((rsp + 0x6e));\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r11d = *((rsp + 0x38));\n    if (rsi >= r9) {\n        goto label_89;\n    }\n    if (*(rcx) != 0) {\n        goto label_90;\n    }\n    goto label_89;\n    do {\n        if (*((r8 + rax)) == 0) {\n            goto label_91;\n        }\nlabel_90:\n        rax++;\n        rdx = r12 + rax;\n    } while (rdx < r9);\nlabel_91:\n    rdi = rax;\nlabel_89:\n    edx = *((rsp + 8));\n    r13d = 0;\n    goto label_40;\nlabel_87:\n    rax = *((rsp + 0xd8));\n    eax = *(rax);\n    if (al == 0) {\n        goto label_41;\n    }\n    rdx = *((rsp + 0xd8));\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = al;\n        }\n        rbx++;\n        eax = *((rdx + rbx));\n    } while (al != 0);\n    goto label_41;\nlabel_61:\n    r13d = r11d;\n    eax = 0;\n    r11 = r9;\n    goto label_42;\nlabel_85:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 1;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x40d024;\n    goto label_21;\nlabel_51:\n    r13d = r11d;\n    r11 = r9;\n    goto label_43;\nlabel_72:\n    edx = eax;\nlabel_45:\n    rax = *((rsp + 0x50));\n    if (rax == 0) {\n        goto label_92;\n    }\n    if (dl == 0) {\n        goto label_92;\n    }\n    edx = *(rax);\n    if (dl == 0) {\n        goto label_92;\n    }\n    rax -= rbx;\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = dl;\n        }\n        rbx++;\n        edx = *((rax + rbx));\n    } while (dl != 0);\nlabel_92:\n    if (r14 <= rbx) {\n        goto label_44;\n    }\n    *((r15 + rbx)) = 0;\n    goto label_44;\nlabel_55:\n    r13d = r11d;\n    r11 = r9;\n    goto label_12;\nlabel_62:\n    r13d = r11d;\n    r11 = r9;\n    rsp + 8 = (r13d == 2) ? 1 : 0;\n    goto label_12;\nlabel_73:\n    rax = fcn_00406400 (r15, *((rsp + 0x78)), *((rsp + 0x40)), r11, 5, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\n    goto label_44;\nlabel_74:\n    edx = *((rsp + 0x6d));\n    goto label_45;\nlabel_71:\n    r13d = 2;\n    goto label_12;\nlabel_84:\n    r10d = 0;\n    eax = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x58)) = 0;\n    goto label_46;\nlabel_80:\n    rdx = r14;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_88:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x40e2d7;\n    goto label_21;\nlabel_60:\n    r13d = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00407630",
            "funcStartAddr": "0x407630",
            "funcEndAddr": "0x40cc15",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x407630 */\n#include <stdint.h>\n \nuint64_t fcn_00407630 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_30h;\n    int64_t var_18h;\n    int64_t var_24h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    do {\n        abort ();\n        r15 = (int64_t) edi;\n        r14 = rdx;\n        *((rsp + 8)) = rsi;\n        rax = errno_location ();\n        rbx = *(0x00611358);\n        r13 = rax;\n        eax = *(rax);\n        *((rsp + 0x18)) = eax;\n    } while (r15d < 0);\n    if (*(0x00611370) > r15d) {\n        goto label_0;\n    }\n    if (r15d == 0x7fffffff) {\n        goto label_1;\n    }\n    r12d = r15 + 1;\n    rsi = (int64_t) r12d;\n    rsi <<= 4;\n    if (rbx == 0x611360) {\n        goto label_2;\n    }\n    rax = fcn_00408ab0 (rbx, rsi);\n    *(0x00611358) = rax;\n    rbx = rax;\n    do {\n        rdi = *(0x00611370);\n        edx -= edi;\n        rdi <<= 4;\n        rdx = (int64_t) edx;\n        rdi += rbx;\n        rdx <<= 4;\n        memset (rdi, 0, r12d);\n        *(0x00611370) = r12d;\nlabel_0:\n        eax = *((rbp + 4));\n        r15 <<= 4;\n        rbx += r15;\n        r15 = rbp + 8;\n        eax |= 1;\n        r11 = *(rbx);\n        r12 = *((rbx + 8));\n        *((rsp + 0x24)) = eax;\n        rsi = r11;\n        *((rsp + 0x30)) = r11;\n        rax = fcn_00406400 (r12, rsi, *((rsp + 0x28)), r14, *(rbp), eax);\n        r11 = *((rsp + 0x10));\n        if (r11 <= rax) {\n            rsi = rax + 1;\n            *(rbx) = rsi;\n            if (r12 != 0x611420) {\n                *((rsp + 0x10)) = rsi;\n                free (r12);\n                rsi = *((rsp + 0x10));\n            }\n            *((rsp + 0x10)) = rsi;\n            rax = fcn_00408a50 (*((rsp + 0x10)));\n            *((rbx + 8)) = rax;\n            rdi = rax;\n            r12 = rax;\n            fcn_00406400 (rdi, *((rsp + 0x30)), *((rsp + 0x28)), r14, *(rbp), *((rsp + 0x3c)));\n        }\n        eax = *((rsp + 0x18));\n        *(r13) = eax;\n        rax = r12;\n        return rax;\nlabel_2:\n        rax = fcn_00408ab0 (0, rsi);\n        __asm (\"movdqa xmm0, xmmword [0x00611360]\");\n        rbx = rax;\n        *(0x00611358) = rax;\n        __asm (\"movups xmmword [rax], xmm0\");\n    } while (1);\nlabel_1:\n    return fcn_00408ca0 ();\n}\n"
        },
        {
            "funcName": "fcn_00407a86",
            "funcStartAddr": "0x407a86",
            "funcEndAddr": "0x407ad5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x407a86 */\n#include <stdint.h>\n \nvoid fcn_00407a86 (uint32_t arg1) {\n    rdi = arg1;\n    if (rdi != 0x611420) {\n        free (rdi);\n        *(0x00611360) = 0x100;\n        *(0x00611368) = 0x611420;\n    }\n    if (r12 != 0x611360) {\n        free (r12);\n        *(0x00611358) = 0x611360;\n    }\n    *(0x00611370) = 1;\n}\n"
        },
        {
            "funcName": "fcn_00407b50",
            "funcStartAddr": "0x407b50",
            "funcEndAddr": "0x40d51a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x407b50 */\n#include <stdint.h>\n \nint64_t fcn_00407b50 (int64_t arg1, uint32_t arg2, int64_t arg3) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    do {\n        abort ();\n    } while (esi == 0xa);\n    rax = rdx;\n    *(rsp) = esi;\n    *((rsp + 4)) = 0;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x30)) = 0;\n    fcn_00407630 (rdi, rax, 0xffffffffffffffff, rsp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00407c30",
            "funcStartAddr": "0x407c30",
            "funcEndAddr": "0x407c3c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x407c30 */\n#include <stdint.h>\n \nvoid fcn_00407c30 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = rsi;\n    esi = edi;\n    edi = 0;\n    return void (*0x407b50)() ();\n}\n"
        },
        {
            "funcName": "fcn_00407cd0",
            "funcStartAddr": "0x407cd0",
            "funcEndAddr": "0x407d61",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x407cd0 */\n#include <stdint.h>\n \nint64_t fcn_00407cd0 (int64_t arg1, int64_t arg7, int64_t arg8, int64_t arg9) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_20h;\n    int64_t var_30h;\n    rdi = arg1;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    xmm2 = arg9;\n    do {\n        rax = imp.__libc_start_main;\n        ecx = edx;\n        __asm (\"movdqa xmm0, xmmword [0x00611520]\");\n        __asm (\"movdqa xmm1, xmmword [0x00611530]\");\n        __asm (\"movdqa xmm2, xmmword [0x00611540]\");\n        ecx &= 0x1f;\n        *((rsp + 0x30)) = rax;\n        eax = edx;\n        al >>= 5;\n        *(rsp) = xmm0;\n        eax = (int32_t) al;\n        *((rsp + 0x10)) = xmm1;\n        r8 = rsp + rax*4 + 8;\n        *((rsp + 0x20)) = xmm2;\n        edx = *(r8);\n        eax = *(r8);\n        eax >>= cl;\n        eax = ~eax;\n        eax &= 1;\n        eax <<= cl;\n        eax ^= edx;\n        *(r8) = eax;\n        fcn_00407630 (0, rdi, rsi, rsp);\n        return rax;\n        edx = 0x3a;\n        rsi = 0xffffffffffffffff;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00407d00",
            "funcStartAddr": "0x407d00",
            "funcEndAddr": "0x40d876",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x407d00 */\n#include <stdint.h>\n \nint64_t fcn_00407d00 (int64_t arg1, uint32_t arg2, int64_t arg3) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    do {\n        abort ();\n    } while (esi == 0xa);\n    rcx = 0x400000000000000;\n    rax = rdx;\n    *(rsp) = esi;\n    *((rsp + 8)) = rcx;\n    *((rsp + 4)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x30)) = 0;\n    fcn_00407630 (rdi, rax, 0xffffffffffffffff, rsp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00407e60",
            "funcStartAddr": "0x407e60",
            "funcEndAddr": "0x407e71",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x407e60 */\n#include <stdint.h>\n \nvoid fcn_00407e60 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    ecx = 0x611320;\n    rdx = 0xffffffffffffffff;\n    return void (*0x407630)() ();\n}\n"
        },
        {
            "funcName": "fcn_00407e80",
            "funcStartAddr": "0x407e80",
            "funcEndAddr": "0x407e96",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x407e80 */\n#include <stdint.h>\n \nvoid fcn_00407e80 (int64_t arg1) {\n    rdi = arg1;\n    rsi = rdi;\n    ecx = 0x611320;\n    rdx = 0xffffffffffffffff;\n    edi = 0;\n    return void (*0x407630)() ();\n}\n"
        },
        {
            "funcName": "fcn_00407ea0",
            "funcStartAddr": "0x407ea0",
            "funcEndAddr": "0x4080e2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x407ea0 */\n#include <stdint.h>\n \nuint64_t fcn_00407ea0 (int64_t arg1, void * arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_28h;\n    int64_t var_a0h;\n    int64_t var_b8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9d = r8d;\n    eax = 0;\n    r14d = edi;\n    r13d = edx;\n    r12 = rcx;\n    r8 = rcx;\n    ecx = edx;\n    rdx = rsi;\n    rbx = rsi;\n    esi = edi;\n    edi = 0x13c;\n    eax = syscall ();\n    edx = eax;\n    if (eax >= 0) {\n        goto label_0;\n    }\n    *((rsp + 8)) = eax;\n    rax = errno_location ();\n    edx = *((rsp + 8));\n    r9 = rax;\n    eax = *(rax);\n    ecx = rax - 0x16;\n    ecx &= 0xffffffef;\n    r15b = (ecx != 0) ? 1 : 0;\n    al = (eax != 0x5f) ? 1 : 0;\n    r15b &= al;\n    if (r15b != 0) {\n        goto label_0;\n    }\n    if (ebp == 0) {\n        goto label_2;\n    }\n    ebp &= 0xfffffffe;\n    if (ebp == 0) {\n        goto label_3;\n    }\n    *(r9) = 0x5f;\n    edx = 0xffffffff;\n    do {\nlabel_0:\n        eax = edx;\n        return rax;\nlabel_3:\n        rdx = r12;\n        esi = r13d;\n        edi = 1;\n        *((rsp + 8)) = r9;\n        r8d = 0x100;\n        rcx = rsp + 0xa0;\n        eax = fxstatat ();\n        r9 = *((rsp + 8));\n        if (eax == 0) {\n            goto label_4;\n        }\n        eax = *(r9);\n        if (eax == 0x4b) {\n            goto label_4;\n        }\n        if (eax != 2) {\n            goto label_1;\n        }\n        r15d = 1;\nlabel_2:\n        *((rsp + 8)) = r9;\n        rax = strlen (rbx);\n        rax = strlen (r12);\n        if (rbp == 0) {\n            goto label_5;\n        }\n        r9 = *((rsp + 8));\n        if (rax == 0) {\n            goto label_5;\n        }\n        if (*((rbx + rbp - 1)) != 0x2f) {\n            if (*((r12 + rax - 1)) != 0x2f) {\n                goto label_5;\n            }\n        }\n        rcx = rsp + 0x10;\n        rdx = rbx;\n        esi = r14d;\n        edi = 1;\n        r8d = 0x100;\n        *((rsp + 8)) = r9;\n        eax = fxstatat ();\n        if (eax != 0) {\n            goto label_1;\n        }\n        r9 = *((rsp + 8));\n        if (r15b == 0) {\n            goto label_6;\n        }\n        eax = *((rsp + 0x28));\n        eax &= 0xf000;\n        if (eax == 0x4000) {\n            goto label_5;\n        }\n        *(r9) = 2;\n        edx = 0xffffffff;\n    } while (1);\n    do {\n        eax = *((rsp + 0xb8));\n        eax &= 0xf000;\n        if (eax == 0x4000) {\n            goto label_7;\n        }\n        *(r9) = 0x14;\nlabel_1:\n        edx = 0xffffffff;\n        goto label_0;\nlabel_6:\n        rdx = r12;\n        esi = r13d;\n        edi = 1;\n        *((rsp + 8)) = r9;\n        r8d = 0x100;\n        rcx = rsp + 0xa0;\n        eax = fxstatat ();\n        r9 = *((rsp + 8));\n    } while (eax == 0);\n    if (*(r9) != 2) {\n        goto label_1;\n    }\n    eax = *((rsp + 0x28));\n    eax &= 0xf000;\n    if (eax != 0x4000) {\n        goto label_1;\n    }\n    do {\nlabel_5:\n        edx = r13d;\n        rcx = r12;\n        rsi = rbx;\n        edi = r14d;\n        eax = renameat ();\n        edx = eax;\n        goto label_0;\nlabel_4:\n        *(r9) = 0x11;\n        edx = 0xffffffff;\n        goto label_0;\nlabel_7:\n        eax = *((rsp + 0x28));\n        eax &= 0xf000;\n    } while (eax == 0x4000);\n    *(r9) = 0x15;\n    edx = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_004080f0",
            "funcStartAddr": "0x4080f0",
            "funcEndAddr": "0x408220",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x4080f0 */\n#include <stdint.h>\n \nuint64_t fcn_004080f0 (int64_t arg1, int64_t arg2) {\n    uint32_t var_8h;\n    int64_t var_90h;\n    int64_t var_98h;\n    rdi = arg1;\n    rsi = arg2;\n    r15 = rdi;\n    r14 = rsi;\n    ebx = 0;\n    rax = fcn_00404ca0 (rdi);\n    rax = fcn_00404ca0 (r14);\n    r12 = rax;\n    rax = fcn_00404d00 (rbp);\n    r13 = rax;\n    rax = fcn_00404d00 (r12);\n    while (eax != 0) {\nlabel_0:\n        eax = ebx;\n        return rax;\n        eax = memcmp (rbp, r12, r13);\n    }\n    rdi = r15;\n    rax = fcn_00404bc0 ();\n    rdi = r14;\n    rax = fcn_00404bc0 ();\n    rdx = rsp;\n    rsi = rbp;\n    edi = 1;\n    r12 = rax;\n    eax = xstat ();\n    if (eax != 0) {\n        goto label_2;\n    }\nlabel_1:\n    rdx = rsp + 0x90;\n    rsi = r12;\n    edi = 1;\n    eax = xstat ();\n    while (1) {\n        ebx = 0;\n        rax = *((rsp + 0x98));\n        if (*((rsp + 8)) == rax) {\n            rax = *((rsp + 0x90));\n            bl = (*(rsp) == rax) ? 1 : 0;\n        }\n        free (rbp);\n        free (r12);\n        goto label_0;\n        rax = errno_location ();\n        rcx = r12;\n        eax = 0;\n        error (1, *(rax), 0x40e363);\n    }\nlabel_2:\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    error (1, *(rax), 0x40e363);\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_004082b0",
            "funcStartAddr": "0x4082b0",
            "funcEndAddr": "0x4082cd",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x4082b0 */\n#include <stdint.h>\n \nvoid fcn_004082b0 (void) {\n    return assert_fail (\"! \\\"invalid KIND in __gen_tempname\\\", \"lib/tempname.c\", 0x147, \"gen_tempname_len\");\n}\n"
        },
        {
            "funcName": "fcn_004082d0",
            "funcStartAddr": "0x4082d0",
            "funcEndAddr": "0x40842d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x4082d0 */\n#include <stdint.h>\n \nuint64_t fcn_004082d0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_2ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r14 = rdi;\n    r13 = r8;\n    *((rsp + 0x18)) = rdx;\n    *((rsp + 8)) = rdi;\n    *((rsp + 0x20)) = rcx;\n    rax = errno_location ();\n    r15 = rax;\n    eax = *(rax);\n    *((rsp + 0x2c)) = eax;\n    rax = strlen (r14);\n    rdx = (int64_t) ebp;\n    rdx += r13;\n    if (rdx > rax) {\n        goto label_2;\n    }\n    rax -= rdx;\n    rbx = rax;\n    rax = r14 + rax;\n    rdi = rax;\n    *((rsp + 0x10)) = rax;\n    rax = strspn (rdi, 0x40ce40);\n    if (r13 > rax) {\n        goto label_2;\n    }\n    rsi = r13;\n    edi = 0;\n    rax = fcn_0040add0 ();\n    if (rax == 0) {\n        goto label_3;\n    }\n    rax = *((rsp + 8));\n    r12d = 0x3a2f8;\n    rax += r13;\n    rbx += rax;\nlabel_0:\n    r14 = *((rsp + 0x10));\n    if (r13 == 0) {\n        goto label_4;\n    }\n    do {\n        r14++;\n        fcn_0040ae10 (rbp, 0x3d);\n        eax = *((rax + str.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789));\n        *((r14 - 1)) = al;\n    } while (r14 != rbx);\nlabel_4:\n    rsi = *((rsp + 0x18));\n    rdi = *((rsp + 8));\n    rax = *((rsp + 0x20));\n    eax = void (*rax)() ();\n    edx = eax;\n    if (eax >= 0) {\n        goto label_5;\n    }\n    ecx = *(r15);\n    if (ecx != 0x11) {\n        goto label_6;\n    }\n    r12d--;\n    if (r12d != 0) {\n        goto label_0;\n    }\n    fcn_0040af30 (rbp);\n    *(r15) = 0x11;\n    edx = 0xffffffff;\n    goto label_1;\nlabel_5:\n    eax = *((rsp + 0x2c));\n    *(r15) = eax;\n    ecx = eax;\n    do {\n        *((rsp + 0x10)) = edx;\n        *((rsp + 8)) = ecx;\n        fcn_0040af30 (rbp);\n        ecx = *((rsp + 8));\n        edx = *((rsp + 0x10));\n        *(r15) = ecx;\nlabel_1:\n        eax = edx;\n        return rax;\nlabel_6:\n        edx = 0xffffffff;\n    } while (1);\nlabel_2:\n    *(r15) = 0x16;\n    edx = 0xffffffff;\n    goto label_1;\nlabel_3:\n    edx = 0xffffffff;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_004084b0",
            "funcStartAddr": "0x4084b0",
            "funcEndAddr": "0x40eb40",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x4084b0 */\n#include <stdint.h>\n \nvoid fcn_004084b0 (int64_t arg_20h, int64_t arg_30h, int64_t arg_8h_2, int64_t arg_10h, int64_t arg_8h, int64_t arg_8h_3, int64_t arg_10h_2, int64_t arg_18h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_30h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    eax = abort ();\n    r12 = r9;\n    rbx = r8;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    r9 = rcx;\n    r8 = rdx;\n    rcx = rsi;\n    edx = \"%s (%s) %s\\n\";\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    do {\n        edx = 5;\n        rax = dcgettext (0, 0x40de52);\n        r8d = 0x7e1;\n        edx = \"Copyright %s %d Free Software Foundation, Inc.\";\n        rdi = rbp;\n        rcx = rax;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        edx = 5;\n        rax = dcgettext (0, \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\");\n        rsi = rbp;\n        rdi = rax;\n        eax = fputs_unlocked ();\n        if (r12 > 9) {\n            goto label_2;\n        }\n        /* switch table (10 cases) at 0x40e138 */\nlabel_1:\n        r8 = rcx;\n        esi = 1;\n        rcx = rdx;\n        eax = 0;\n        edx = \"%s %s\\n\";\n        fprintf_chk ();\n    } while (1);\n    r9 = *((rbx + 0x38));\n    rax = *((rbx + 0x10));\n    edx = 5;\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    r15 = *((rbx + 0x20));\n    *((rsp + 0x10)) = r9;\n    r14 = *((rbx + 0x18));\n    rbx = *(rbx);\n    *(rsp) = rax;\n    *((rsp + 8)) = r8;\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n    do {\n        r9 = *((rsp + 0x18));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        r9 = *((rsp + 0x30));\n        r8 = *((rsp + 0x38));\n        fprintf_chk ();\n        return rax;\n        r10 = *((rbx + 0x40));\n        r9 = *((rbx + 0x38));\n        edx = 5;\n        rax = *((rbx + 0x10));\n        r8 = *((rbx + 8));\n        r13 = *((rbx + 0x30));\n        r12 = *((rbx + 0x28));\n        *((rsp + 0x18)) = r10;\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        *((rsp + 0x10)) = r9;\n        *(rsp) = rax;\n        rbx = *(rbx);\n        *((rsp + 8)) = r8;\nlabel_0:\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        r10 = *((rsp + 0x18));\n    } while (1);\n    rbx = *(rbx);\n    edx = 5;\n    rax = dcgettext (0, \"Written by %s.\\n\");\n    rdi = rbp;\n    esi = 1;\n    rcx = rbx;\n    rdx = rax;\n    eax = 0;\n    void (*0x402180)() ();\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s and %s.\\n\");\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x402180)() ();\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, and %s.\\n\");\n    r9 = r13;\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x402180)() ();\n    edx = 5;\n    r14 = *((rbx + 0x18));\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\nand %s.\\n\");\n    do {\n        rdx = rax;\n        r9 = r13;\n        r8 = r12;\n        rcx = rbx;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r15 = *((rbx + 0x20));\n        edx = 5;\n        r14 = *((rbx + 0x18));\n        r13 = *((rbx + 0x10));\n        r12 = *((rbx + 8));\n        rbx = *(rbx);\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n    } while (1);\n    r8 = *((rbx + 8));\n    r12 = *((rbx + 0x28));\n    edx = 5;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *(rsp) = r8;\n    r13 = *((rbx + 0x10));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n    r9 = r13;\n    do {\n        r8 = *((rsp + 0x20));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r9 = *((rbx + 0x10));\n        r13 = *((rbx + 0x30));\n        edx = 5;\n        r12 = *((rbx + 0x28));\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        r8 = *((rbx + 8));\n        *((rsp + 8)) = r9;\n        rbx = *(rbx);\n        *(rsp) = r8;\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n        r9 = *((rsp + 0x28));\n    } while (1);\nlabel_2:\n    r10 = *((rbx + 0x40));\n    r9 = *((rbx + 0x38));\n    edx = 5;\n    esi = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    rax = *((rbx + 0x10));\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    *((rsp + 0x18)) = r10;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *((rsp + 0x10)) = r9;\n    *(rsp) = rax;\n    rbx = *(rbx);\n    *((rsp + 8)) = r8;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00408910",
            "funcStartAddr": "0x408910",
            "funcEndAddr": "0x4089cc",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x408910 */\n#include <stdint.h>\n \nuint64_t fcn_00408910 (int64_t arg_b0h, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_70h;\n    int64_t var_90h;\n    int64_t var_98h;\n    r8 = arg5;\n    r9 = arg6;\n    r11d = 0;\n    rax = rsp + 0xb0;\n    *((rsp + 0x90)) = r8;\n    r10 = rsp + 0xb0;\n    r8d = 0x20;\n    *((rsp + 0x10)) = rax;\n    rax = rsp + 0x70;\n    *((rsp + 0x98)) = r9;\n    r9d = 0;\n    *((rsp + 8)) = 0x20;\n    *((rsp + 0x18)) = rax;\n    while (r8d <= 0x2f) {\n        eax = r8d;\n        r11 = rsp + 0x70;\n        r8d += 8;\n        rax += r11;\n        r11d = 1;\n        rax = *(rax);\n        *((rsp + r9*8 + 0x20)) = rax;\n        if (rax == 0) {\n            goto label_1;\n        }\nlabel_0:\n        r9++;\n        if (r9 == 0xa) {\n            goto label_1;\n        }\n    }\n    rax = r10;\n    r10 += 8;\n    rax = *(rax);\n    *((rsp + r9*8 + 0x20)) = rax;\n    if (rax != 0) {\n        goto label_0;\n    }\nlabel_1:\n    if (r11b != 0) {\n        *((rsp + 8)) = r8d;\n    }\n    fcn_004084b0 (rdi, rsi, rdx, rcx, rsp + 0x20, r9);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00408a50",
            "funcStartAddr": "0x408a50",
            "funcEndAddr": "0x408a6a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x408a50 */\n#include <stdint.h>\n \nuint64_t fcn_00408a50 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = malloc (rdi);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    return fcn_00408ca0 ();\n}\n"
        },
        {
            "funcName": "fcn_00408ab0",
            "funcStartAddr": "0x408ab0",
            "funcEndAddr": "0x408ae6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x408ab0 */\n#include <stdint.h>\n \nuint64_t fcn_00408ab0 (void * arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rsi;\n    if (rsi == 0) {\n        if (rdi != 0) {\n            goto label_0;\n        }\n    }\n    rax = realloc (rdi, rbx);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_1;\n        }\n    }\n    return rax;\nlabel_0:\n    eax = free (rdi);\n    eax = 0;\n    return rax;\nlabel_1:\n    return fcn_00408ca0 ();\n}\n"
        },
        {
            "funcName": "fcn_00408c50",
            "funcStartAddr": "0x408c50",
            "funcEndAddr": "0x408c78",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x408c50 */\n#include <stdint.h>\n \nuint64_t fcn_00408c50 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdi = rsi;\n    rbx = rsi;\n    rax = fcn_00408a50 (rdi);\n    rdx = rbx;\n    rsi = rbp;\n    rdi = rax;\n    return memcpy ();\n}\n"
        },
        {
            "funcName": "fcn_00408c80",
            "funcStartAddr": "0x408c80",
            "funcEndAddr": "0x408c93",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x408c80 */\n#include <stdint.h>\n \nvoid fcn_00408c80 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    strlen (rdi);\n    rdi = rbx;\n    rsi = rax + 1;\n    return void (*0x408c50)() ();\n}\n"
        },
        {
            "funcName": "fcn_00408ca0",
            "funcStartAddr": "0x408ca0",
            "funcEndAddr": "0x408cd1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x408ca0 */\n#include <stdint.h>\n \nuint64_t fcn_00408ca0 (void) {\n    edx = 5;\n    rax = dcgettext (0, \"memory exhausted\");\n    rcx = rax;\n    eax = 0;\n    error (*(0x00611300), 0, 0x40e363);\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_00408ce0",
            "funcStartAddr": "0x408ce0",
            "funcEndAddr": "0x408d0f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x408ce0 */\n#include <stdint.h>\n \nuint64_t fcn_00408ce0 (void) {\n    int64_t var_8h;\n    rax = fcn_00408f90 (0, 0);\n    rbx = rax;\n    while (*(rax) != 0xc) {\n        rax = rbx;\n        return rax;\n        rax = errno_location ();\n    }\n    return fcn_00408ca0 ();\n}\n"
        },
        {
            "funcName": "fcn_00408d10",
            "funcStartAddr": "0x408d10",
            "funcEndAddr": "0x408d79",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x408d10 */\n#include <stdint.h>\n \nuint64_t fcn_00408d10 (void) {\n    int64_t var_8h;\n    edx = 0xa;\n    ebx = 0;\n    rcx = stdin;\n    rsi = rsp + 8;\n    rdi = rsp;\n    *(rsp) = 0;\n    *((rsp + 8)) = 0;\n    rax = getdelim ();\n    if (rax <= 0) {\n        goto label_0;\n    }\n    rdi = *(rsp);\n    rax = rdi + rax - 1;\n    while (1) {\n        eax = rpmatch ();\n        bl = (eax > 0) ? 1 : 0;\nlabel_0:\n        free (*(rsp));\n        eax = ebx;\n        return rax;\n        *(rax) = 0;\n        rdi = *(rsp);\n    }\n}\n"
        },
        {
            "funcName": "fcn_00408d80",
            "funcStartAddr": "0x408d80",
            "funcEndAddr": "0x408eb5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x408d80 */\n#include <stdint.h>\n \nuint64_t fcn_00408d80 (int64_t arg_70h, int64_t arg1, uint32_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_30h;\n    int64_t var_38h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    do {\nlabel_2:\n        rax = rsp + 0x70;\n        *((rsp + 0x30)) = rdx;\n        *((rsp + 0x10)) = rax;\n        rax = rsp + 0x20;\n        *((rsp + 0x38)) = rcx;\n        *((rsp + 8)) = 0x10;\n        *((rsp + 0x18)) = rax;\n        if (esi != 0x406) {\n            goto label_4;\n        }\n        r12d = *((rax + 0x10));\n        eax = imp.__libc_start_main;\n        *((rsp + 8)) = 0x18;\n        edx = r12d;\n        if (eax >= 0) {\n            eax = 0;\n            eax = fcntl ();\n            ebx = eax;\n            if (eax < 0) {\n                goto label_5;\n            }\nlabel_1:\n            *(0x00611558) = 1;\nlabel_0:\n            eax = ebx;\n            return rax;\n        }\n        eax = 0;\n        eax = fcn_00408d80 (rdi, 0, rdx, rcx, r8);\n    } while (1);\n    ebx = eax;\n    if (eax < 0) {\n        goto label_0;\n    }\n    if (*(0x00611558) != 0xffffffff) {\n        goto label_0;\n    }\nlabel_3:\n    eax = 0;\n    esi = 1;\n    edi = ebx;\n    eax = fcntl ();\n    if (eax < 0) {\n        goto label_6;\n    }\n    eax |= 1;\n    esi = 2;\n    edi = ebx;\n    edx = eax;\n    eax = 0;\n    eax = fcntl ();\n    if (eax != 0xffffffff) {\n        goto label_0;\n    }\nlabel_6:\n    rax = errno_location ();\n    ebx = 0xffffffff;\n    r12d = *(rax);\n    close (ebx);\n    *(rbp) = r12d;\n    goto label_0;\nlabel_4:\n    rax = *((rsp + 0x18));\n    rdx = *((rax + 0x10));\n    eax = 0;\n    eax = fcntl ();\n    ebx = eax;\n    return rax;\nlabel_5:\n    rax = errno_location ();\n    if (*(rax) != 0x16) {\n        goto label_1;\n    }\n    eax = 0;\n    eax = fcn_00408d80 (ebp, 0, r12d, rcx, r8);\n    goto label_2;\n    ebx = eax;\n    if (eax < 0) {\n        goto label_0;\n    }\n    *(0x00611558) = 0xffffffff;\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_00408ec0",
            "funcStartAddr": "0x408ec0",
            "funcEndAddr": "0x408f00",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x408ec0 */\n#include <stdint.h>\n \nuint32_t fcn_00408ec0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    if (rdi != 0) {\n        eax = freading ();\n        if (eax == 0) {\n            goto label_0;\n        }\n        if ((*(rbx) & 0x100) != 0) {\n            goto label_1;\n        }\n    }\nlabel_0:\n    rdi = rbx;\n    void (*0x401ff0)() ();\nlabel_1:\n    fcn_00408f30 (rbx, 0, 1);\n    rdi = rbx;\n    return fflush ();\n}\n"
        },
        {
            "funcName": "fcn_00408f00",
            "funcStartAddr": "0x408f00",
            "funcEndAddr": "0x408f28",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x408f00 */\n#include <stdint.h>\n \nint64_t fcn_00408f00 (uint32_t arg1) {\n    rdi = arg1;\n    eax = 0;\n    rcx = *((rdi + 0x20));\n    if (*((rdi + 0x28)) <= rcx) {\n        rax = *((rdi + 0x10));\n        rax -= *((rdi + 8));\n        if ((*(rdi) & 0x100) == 0) {\n            goto label_0;\n        }\n        rdx = *((rdi + 0x58));\n        rdx -= *((rdi + 0x48));\n        rax += rdx;\n    }\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00408f30",
            "funcStartAddr": "0x408f30",
            "funcEndAddr": "0x408f87",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x408f30 */\n#include <stdint.h>\n \nint64_t fcn_00408f30 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rax = *((rdi + 8));\n    while (*((rdi + 0x28)) != rax) {\nlabel_0:\n        void (*0x4020f0)() ();\n        rax = *((rdi + 0x20));\n    }\n    if (*((rdi + 0x48)) != 0) {\n        goto label_0;\n    }\n    r12d = edx;\n    rbx = rdi;\n    eax = fileno (rdi);\n    edx = r12d;\n    rsi = rbp;\n    edi = eax;\n    rax = lseek ();\n    if (rax != -1) {\n        *(rbx) &= 0xffffffef;\n        *((rbx + 0x90)) = rax;\n        eax = 0;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00408f90",
            "funcStartAddr": "0x408f90",
            "funcEndAddr": "0x409452",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x408f90 */\n#include <stdint.h>\n \nuint64_t fcn_00408f90 (void * arg1, uint32_t arg2) {\n    int64_t var_8h;\n    uint32_t var_10h;\n    void * ptr;\n    void * var_20h;\n    size_t size;\n    uint32_t var_30h;\n    int64_t var_3fh;\n    void * s2;\n    uint32_t var_48h;\n    uint32_t var_50h;\n    void ** var_58h;\n    uint32_t var_60h;\n    uint32_t var_68h;\n    int64_t var_78h;\n    rdi = arg1;\n    rsi = arg2;\n    *((rsp + 0x20)) = rdi;\n    *((rsp + 0x30)) = rsi;\n    if (rsi != 0) {\n        goto label_11;\n    }\n    *((rsp + 0x28)) = 0x1000;\n    if (rdi != 0) {\n        goto label_12;\n    }\n    do {\n        rax = malloc (*((rsp + 0x28)));\n        *((rsp + 0x18)) = rax;\n        if (rax != 0) {\n            goto label_13;\n        }\nlabel_2:\n        rax = *((rsp + 0x18));\n        return rax;\nlabel_11:\n        rax = *((rsp + 0x30));\n        *((rsp + 0x28)) = rax;\n    } while (*((rsp + 0x20)) == 0);\n    rax = *((rsp + 0x20));\n    *((rsp + 0x18)) = rax;\nlabel_13:\n    rbx = *((rsp + 0x18));\n    rbx += *((rsp + 0x28));\n    rdx = rsp + 0x60;\n    esi = 0x40ce0b;\n    *((rbx - 1)) = 0;\n    edi = 1;\n    eax = lxstat ();\n    if (eax < 0) {\n        goto label_14;\n    }\n    r15 = *((rsp + 0x60));\n    rdx = rsp + 0x60;\n    esi = 0x40d01e;\n    edi = 1;\n    r14 = *((rsp + 0x68));\n    *((rsp + 8)) = r15;\n    eax = lxstat ();\n    if (eax < 0) {\n        goto label_14;\n    }\n    rax = rbx - 1;\n    rsi = *((rsp + 0x68));\n    *((rsp + 0x40)) = rax;\n    rax = *((rsp + 0x60));\n    *((rsp + 0x50)) = rsi;\n    *((rsp + 0x48)) = rax;\n    dl = (r15 != rax) ? 1 : 0;\n    al = (r14 != rsi) ? 1 : 0;\n    dl |= al;\n    *((rsp + 0x3f)) = dl;\n    if (dl == 0) {\n        goto label_15;\n    }\n    rax = errno_location ();\n    ebp = 0;\n    r15d = 0xffffff9c;\n    r12 = rax;\nlabel_1:\n    eax = 0;\n    eax = openat (r15d, 0x40ce0a, 0);\n    r15d = eax;\n    if (eax < 0) {\n        goto label_16;\n    }\n    rdx = rsp + 0x60;\n    esi = eax;\n    edi = 1;\n    eax = fxstat ();\n    if (eax != 0) {\n        goto label_17;\n    }\n    if (rbp != 0) {\n        rdi = rbp;\n        eax = closedir ();\n        if (eax != 0) {\n            goto label_18;\n        }\n    }\n    rax = *((rsp + 0x60));\n    edi = r15d;\n    *((rsp + 0x10)) = rax;\n    rax = *((rsp + 0x68));\n    *((rsp + 0x58)) = rax;\n    rax = fdopendir ();\n    if (rax == 0) {\n        goto label_18;\n    }\n    r13d = *((rsp + 0x3f));\n    do {\nlabel_0:\n        *(r12) = 0;\n        rdi = rbp;\n        rax = readdir ();\n        if (rax == 0) {\n            goto label_19;\n        }\n        if (*((rax + 0x13)) == 0x2e) {\n            goto label_20;\n        }\nlabel_4:\n        if (r13b == 0) {\n            goto label_3;\n        }\n        rcx = *((rsp + 8));\n        dl = (*(rax) == r14) ? 1 : 0;\n        cl = (*((rsp + 0x10)) != rcx) ? 1 : 0;\n        dl |= cl;\n    } while (dl == 0);\n    r13d = edx;\nlabel_3:\n    rbx = rax + 0x13;\n    rcx = rsp + 0x60;\n    esi = r15d;\n    edi = 1;\n    r8d = 0x100;\n    rdx = rbx;\n    eax = fxstatat ();\n    if (eax != 0) {\n        goto label_0;\n    }\n    eax = *((rsp + 0x78));\n    eax &= 0xf000;\n    if (eax != 0x4000) {\n        goto label_0;\n    }\n    rax = *((rsp + 8));\n    if (*((rsp + 0x60)) != rax) {\n        goto label_0;\n    }\n    if (*((rsp + 0x68)) != r14) {\n        goto label_0;\n    }\n    r13 = *((rsp + 0x40));\n    r13 -= *((rsp + 0x18));\n    rax = strlen (rbx);\n    r14 = rax;\n    if (r13 <= rax) {\n        if (*((rsp + 0x30)) != 0) {\n            goto label_21;\n        }\n        rax = *((rsp + 0x28));\n        rdx = rax;\n        if (r14 >= rax) {\n            rdx = r14;\n        }\n        rax += rdx;\n        *((rsp + 0x40)) = rdx;\n        *((rsp + 8)) = rax;\n        if (rax < 0) {\n            goto label_22;\n        }\n        rax = realloc (*((rsp + 0x18)), rax);\n        rdx = *((rsp + 0x40));\n        if (rax == 0) {\n            goto label_22;\n        }\n        rdx += r13;\n        *((rsp + 0x18)) = rax;\n        rdx -= r13;\n        rax = memcpy (rax + rdx, rax + r13, *((rsp + 0x28)));\n        *((rsp + 0x40)) = rax;\n        rax = *((rsp + 8));\n        *((rsp + 0x28)) = rax;\n    }\n    r8 = *((rsp + 0x40));\n    r8 -= r14;\n    rax = memcpy (r8, rbx, r14);\n    rsi = *((rsp + 0x58));\n    r8 = rax;\n    rax = rax - 1;\n    *((rsp + 0x40)) = rax;\n    rax = *((rsp + 0x10));\n    r14 = rsi;\n    *((r8 - 1)) = 0x2f;\n    *((rsp + 8)) = rax;\n    if (*((rsp + 0x48)) != rax) {\n        goto label_1;\n    }\n    if (*((rsp + 0x50)) != rsi) {\n        goto label_1;\n    }\n    rdi = rbp;\n    eax = closedir ();\n    if (eax != 0) {\n        goto label_23;\n    }\n    rbx = *((rsp + 0x18));\n    rbx += *((rsp + 0x28));\nlabel_15:\n    rax = *((rsp + 0x18));\n    rsi = *((rsp + 0x28));\n    rax = rax + rsi - 1;\n    if (*((rsp + 0x40)) == rax) {\n        goto label_24;\n    }\nlabel_10:\n    rbx -= rsi;\n    memmove (*((rsp + 0x18)), *((rsp + 0x40)), rbx);\n    if (*((rsp + 0x30)) == 0) {\n        goto label_25;\n    }\nlabel_9:\n    rax = *((rsp + 0x20));\n    if (rax == 0) {\n        rax = *((rsp + 0x18));\n    }\n    *((rsp + 0x18)) = rax;\n    goto label_2;\nlabel_19:\n    ebx = *(r12);\n    if (ebx != 0) {\n        goto label_26;\n    }\n    if (r13b == 0) {\n        goto label_26;\n    }\n    rdi = rbp;\n    rewinddir ();\n    rdi = rbp;\n    rax = readdir ();\n    if (rax == 0) {\n        goto label_27;\n    }\n    r13d = 0;\n    if (*((rax + 0x13)) != 0x2e) {\n        goto label_3;\n    }\nlabel_20:\n    if (*((rax + 0x14)) == 0) {\n        goto label_0;\n    }\n    if (*((rax + 0x14)) != 0x2e) {\n        goto label_4;\n    }\n    goto label_0;\nlabel_27:\n    ebx = *(r12);\nlabel_26:\n    if (ebx == 0) {\n        *(r12) = 2;\n        ebx = 2;\n    }\nlabel_7:\n    rdi = rbp;\n    closedir ();\nlabel_6:\n    if (*((rsp + 0x20)) == 0) {\n        goto label_28;\n    }\n    do {\nlabel_5:\n        *(r12) = ebx;\n        *((rsp + 0x18)) = 0;\n        goto label_2;\nlabel_14:\n        rax = errno_location ();\n        r12 = rax;\nlabel_23:\n        ebx = *(r12);\n    } while (*((rsp + 0x20)) != 0);\nlabel_28:\n    free (*((rsp + 0x18)));\n    goto label_5;\nlabel_12:\n    errno_location ();\n    *((rsp + 0x18)) = 0;\n    *(rax) = 0x16;\n    goto label_2;\nlabel_18:\n    ebx = *(r12);\nlabel_8:\n    close (r15d);\n    goto label_6;\nlabel_16:\n    ebx = *(r12);\n    if (rbp == 0) {\n        goto label_6;\n    }\n    goto label_7;\nlabel_17:\n    ebx = *(r12);\n    if (rbp == 0) {\n        goto label_8;\n    }\n    rdi = rbp;\n    closedir ();\n    goto label_8;\nlabel_25:\n    rax = realloc (*((rsp + 0x18)), rbx);\n    *((rsp + 0x20)) = rax;\n    goto label_9;\nlabel_24:\n    rax = *((rsp + 0x40));\n    *((rax - 1)) = 0x2f;\n    rax--;\n    *((rsp + 0x40)) = rax;\n    goto label_10;\nlabel_22:\n    *(r12) = 0xc;\n    ebx = 0xc;\n    goto label_7;\nlabel_21:\n    *(r12) = 0x22;\n    ebx = 0x22;\n    goto label_7;\n}\n"
        },
        {
            "funcName": "fcn_00409460",
            "funcStartAddr": "0x409460",
            "funcEndAddr": "0x40953f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x409460 */\n#include <stdint.h>\n \nuint64_t fcn_00409460 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r11 = rdi + 8;\n    r12d = *((rsi + 0x2c));\n    ebp = *(rsi);\n    rbx = *((rsi + 0x30));\n    r9d = r12d;\n    r10d = ebp;\n    r8 = rbx;\nlabel_1:\n    if (r10d <= r8d) {\n        goto label_2;\n    }\nlabel_0:\n    if (r9d >= r8d) {\n        goto label_2;\n    }\n    r14d = r10d;\n    edx = r8d;\n    r14d -= r8d;\n    edx -= r9d;\n    if (r14d <= edx) {\n        goto label_3;\n    }\n    rcx = (int64_t) r9d;\n    r10d -= edx;\n    edx--;\n    rdx += rcx;\n    rax = rdi + rcx*8;\n    r13 = r11 + rdx*8;\n    rdx = (int64_t) r10d;\n    rdx -= rcx;\n    do {\n        rcx = *(rax);\n        r14 = *((rax + rdx*8));\n        *(rax) = r14;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (r13 != rax);\n    if (r10d > r8d) {\n        goto label_0;\n    }\nlabel_2:\n    eax = ebp;\n    *((rsi + 0x30)) = ebp;\n    eax -= r8d;\n    r12d += eax;\n    *((rsi + 0x2c)) = r12d;\n    r12 = rbx;\n    r13 = rbx;\n    r14 = rbx;\n    r15 = rbx;\n    return rax;\nlabel_3:\n    rdx = (int64_t) r9d;\n    ecx = r14 - 1;\n    rcx += rdx;\n    rax = rdi + rdx*8;\n    r13 = r11 + rcx*8;\n    rcx = rbx;\n    rcx -= rdx;\n    rdx = rcx;\n    do {\n        rcx = *(rax);\n        r15 = *((rax + rdx*8));\n        *(rax) = r15;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (rax != r13);\n    r9d += r14d;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00409540",
            "funcStartAddr": "0x409540",
            "funcEndAddr": "0x409b5c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x409540 */\n#include <stdint.h>\n \nint64_t fcn_00409540 (int64_t arg_90h, int64_t arg_98h, int64_t arg_a0h, signed int64_t arg1, int64_t arg2, char * arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_ch;\n    int64_t var_10h;\n    void * ptr;\n    int64_t var_20h;\n    int64_t var_28h;\n    char * s;\n    int64_t var_38h;\n    int64_t c;\n    signed int64_t var_40h;\n    int64_t var_44h;\n    void * var_48h;\n    size_t nmeb;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rax = *((rsp + 0x90));\n    *((rsp + 0x40)) = edi;\n    *((rsp + 0x28)) = rsi;\n    r14 = *((rax + 0x20));\n    *((rsp + 0x30)) = rdx;\n    *(rsp) = rcx;\n    eax = *(r14);\n    *((rsp + 0x20)) = r8;\n    *((rsp + 0xc)) = r9d;\n    *((rsp + 0x3f)) = al;\n    if (al == 0x3d) {\n        goto label_11;\n    }\n    if (al == 0) {\n        goto label_11;\n    }\n    do {\n        rbp++;\n        eax = *(rbp);\n        if (al == 0) {\n            goto label_12;\n        }\n    } while (al != 0x3d);\nlabel_12:\n    r13 = rbp;\n    r13 -= r14;\nlabel_6:\n    rbx = *(rsp);\n    r12d = 0;\n    rax = *(rbx);\n    *((rsp + 0x10)) = rax;\n    r15 = rax;\n    if (rax != 0) {\n        goto label_13;\n    }\n    goto label_14;\n    do {\n        r12 = (int64_t) r8d;\nlabel_13:\n        eax = strncmp (r15, r14, r13);\n        if (eax == 0) {\n            rax = strlen (r15);\n            if (rax == r13) {\n                goto label_15;\n            }\n        }\n        rbx += 0x20;\n        r15 = *(rbx);\n        r8d = r12 + 1;\n    } while (r15 != 0);\n    rcx = *(rsp);\n    *((rsp + 0x4c)) = r8d;\n    r9d = 0;\n    ebx = 0;\n    *((rsp + 0x44)) = 0xffffffff;\n    r15 = r9;\n    *((rsp + 0x38)) = 0;\n    *((rsp + 0x48)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x10)) = rbp;\n    do {\n        eax = strncmp (*((rsp + 0x10)), r14, r13);\n        if (eax == 0) {\n            if (rbx == 0) {\n                goto label_16;\n            }\n            eax = *((rsp + 0xc));\n            if (eax == 0) {\n                goto label_17;\n            }\nlabel_0:\n            r11d = *((rsp + 0x38));\n            if (r11d != 0) {\n                goto label_1;\n            }\n            r10d = *((rsp + 0x98));\n            if (r10d == 0) {\n                goto label_18;\n            }\n            if (*((rsp + 0x18)) == 0) {\n                goto label_19;\n            }\nlabel_3:\n            rax = *((rsp + 0x18));\n            *((rax + r15)) = 1;\n        }\nlabel_1:\n        rbp += 0x20;\n        rdi = *(rbp);\n        r15++;\n    } while (rdi != 0);\n    rbp = *((rsp + 0x10));\n    if (*((rsp + 0x18)) != 0) {\n        goto label_20;\n    }\n    r9d = *((rsp + 0x38));\n    if (r9d != 0) {\n        goto label_20;\n    }\n    if (rbx == 0) {\nlabel_14:\n        eax = *((rsp + 0xc));\n        if (eax != 0) {\n            rax = *((rsp + 0x90));\n            rcx = *((rsp + 0x28));\n            rax = *(rax);\n            rax = *((rcx + rax*8));\n            if (*((rax + 1)) == 0x2d) {\n                goto label_21;\n            }\n            esi = *((rsp + 0x3f));\n            rax = strchr (*((rsp + 0x30)), rsi);\n            rdx = rax;\n            eax = 0xffffffff;\n            if (rdx != 0) {\n                goto label_5;\n            }\n        }\nlabel_21:\n        ecx = *((rsp + 0x98));\n        if (ecx != 0) {\n            goto label_22;\n        }\nlabel_4:\n        rax = *((rsp + 0x90));\n        *((rax + 0x20)) = 0;\n        *(rax)++;\n        *((rax + 8)) = 0;\n        eax = 0x3f;\n        return rax;\n    }\n    r12d = *((rsp + 0x44));\nlabel_15:\n    rax = *((rsp + 0x90));\n    rcx = *((rsp + 0x90));\n    edx = *(rax);\n    *((rcx + 0x20)) = 0;\n    eax = rdx + 1;\n    *(rcx) = eax;\n    ecx = *((rbx + 8));\n    if (*(rbp) != 0) {\n        goto label_23;\n    }\n    if (ecx == 1) {\n        goto label_24;\n    }\nlabel_2:\n    rax = *((rsp + 0x20));\n    if (rax != 0) {\n        *(rax) = r12d;\n    }\n    rdx = *((rbx + 0x10));\n    eax = *((rbx + 0x18));\n    if (rdx != 0) {\n        *(rdx) = eax;\n        eax = 0;\n    }\nlabel_5:\n    return rax;\nlabel_17:\n    eax = *((rbp + 8));\n    if (*((rbx + 8)) != eax) {\n        goto label_0;\n    }\n    rax = *((rbp + 0x10));\n    if (*((rbx + 0x10)) != rax) {\n        goto label_0;\n    }\n    eax = *((rbp + 0x18));\n    if (*((rbx + 0x18)) != eax) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_23:\n    if (ecx == 0) {\n        goto label_25;\n    }\n    rax = *((rsp + 0x90));\n    rbp++;\n    *((rax + 0x10)) = rbp;\n    goto label_2;\nlabel_16:\n    *((rsp + 0x44)) = r15d;\n    rbx = rbp;\n    goto label_1;\nlabel_18:\n    *((rsp + 0x38)) = 1;\n    if (*((rsp + 0x18)) == 0) {\n        goto label_1;\n    }\n    goto label_3;\nlabel_22:\n    rax = *((rsp + 0x28));\n    edx = 5;\n    rbx = *(rax);\n    rax = dcgettext (0, \"%s: unrecognized option '%s%s'\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r14;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbx;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_4;\nlabel_20:\n    r8d = *((rsp + 0x98));\n    if (r8d != 0) {\n        edi = *((rsp + 0x38));\n        if (edi == 0) {\n            goto label_26;\n        }\n        rax = *((rsp + 0x28));\n        edx = 5;\n        rbx = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' is ambiguous\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r14;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbx;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        rax = *((rsp + 0x90));\n        r14 = *((rax + 0x20));\n    }\nlabel_9:\n    esi = *((rsp + 0x48));\n    if (esi != 0) {\n        goto label_27;\n    }\nlabel_7:\n    rax = strlen (r14);\n    r14 += rax;\n    rax = *((rsp + 0x90));\n    *((rax + 0x20)) = r14;\n    *(rax)++;\n    *((rax + 8)) = 0;\n    eax = 0x3f;\n    goto label_5;\nlabel_24:\n    if (eax >= *((rsp + 0x40))) {\n        goto label_28;\n    }\n    rcx = *((rsp + 0x90));\n    edx += 2;\n    rax = (int64_t) eax;\n    *(rcx) = edx;\n    rcx = *((rsp + 0x28));\n    rax = *((rcx + rax*8));\n    rcx = *((rsp + 0x90));\n    *((rcx + 0x10)) = rax;\n    goto label_2;\nlabel_11:\n    r13d = 0;\n    goto label_6;\nlabel_25:\n    edx = *((rsp + 0x98));\n    while (1) {\n        eax = *((rbx + 0x18));\n        rcx = *((rsp + 0x90));\n        *((rcx + 8)) = eax;\n        eax = 0x3f;\n        goto label_5;\nlabel_19:\n        rdi = *((rsp + 0x4c));\n        rax = calloc (rdi, 1);\n        *((rsp + 0x18)) = rax;\n        if (rax == 0) {\n            goto label_29;\n        }\n        rax = *((rsp + 0x44));\n        rcx = *((rsp + 0x18));\n        *((rsp + 0x48)) = 1;\n        *((rcx + rax)) = 1;\n        goto label_3;\n        rax = *((rsp + 0x28));\n        r12 = *(rbx);\n        edx = 5;\n        rbp = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' doesn't allow an argument\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r12;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_27:\n    free (*((rsp + 0x18)));\n    goto label_7;\nlabel_28:\n    eax = *((rsp + 0x98));\n    if (eax != 0) {\n        goto label_30;\n    }\nlabel_10:\n    eax = *((rbx + 0x18));\n    rcx = *((rsp + 0x90));\n    *((rcx + 8)) = eax;\n    rax = *((rsp + 0x30));\n    al = (*(rax) != 0x3a) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = rax * 5;\n    goto label_5;\nlabel_26:\n    rdi = stderr;\n    flockfile ();\n    rax = *((rsp + 0x90));\n    edx = 5;\n    rbx = *((rax + 0x20));\n    rax = *((rsp + 0x28));\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' is ambiguous; possibilities:\");\n    rdi = stderr;\n    r9 = rbx;\n    r8 = *((rsp + 0xa0));\n    rcx = rbp;\n    rdx = rax;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    rax = *((rsp + 0x18));\n    rdi = stderr;\n    rbx = *(rsp);\n    r12 = rax + r12 + 1;\n    while (*(rbp) == 0) {\nlabel_8:\n        rbp++;\n        rbx += 0x20;\n        if (r12 == rbp) {\n            goto label_31;\n        }\n    }\n    r8 = *(rbx);\n    edx = \" '%s%s';\n    esi = 1;\n    eax = 0;\n    rcx = *((rsp + 0xa0));\n    fprintf_chk ();\n    rdi = stderr;\n    goto label_8;\nlabel_31:\n    fputc (0xa, rdi);\n    rdi = stderr;\n    funlockfile ();\n    rax = *((rsp + 0x90));\n    r14 = *((rax + 0x20));\n    goto label_9;\nlabel_30:\n    rax = *((rsp + 0x28));\n    r12 = *(rbx);\n    edx = 5;\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' requires an argument\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r12;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbp;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_10;\nlabel_29:\n    *((rsp + 0x38)) = 1;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00409b60",
            "funcStartAddr": "0x409b60",
            "funcEndAddr": "0x40a126",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x409b60 */\n#include <stdint.h>\n \nuint64_t fcn_00409b60 (int64_t arg_70h, int64_t arg_78h, int64_t arg1, int64_t arg2, int64_t arg3, uint32_t arg4, int64_t arg5, int64_t arg6) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_1ch;\n    int64_t var_20h;\n    int64_t var_28h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rbx = *((rsp + 0x70));\n    *((rsp + 8)) = rcx;\n    *((rsp + 0x10)) = r8;\n    r13d = *((rbx + 4));\n    if (edi <= 0) {\n        goto label_16;\n    }\n    eax = *(rbx);\n    r12 = rsi;\n    r15 = rdx;\n    *((rbx + 0x10)) = 0;\n    if (eax == 0) {\n        goto label_17;\n    }\n    esi = *((rbx + 0x18));\n    if (esi == 0) {\nlabel_1:\n        *((rbx + 0x30)) = eax;\n        *((rbx + 0x2c)) = eax;\n        *((rbx + 0x20)) = 0;\n        eax = *(r15);\n        if (al == 0x2d) {\n            goto label_18;\n        }\n        if (al == 0x2b) {\n            goto label_19;\n        }\n        ecx = *((rsp + 0x78));\n        edx = 0;\n        if (ecx == 0) {\n            goto label_20;\n        }\nlabel_8:\n        *((rbx + 0x28)) = 0;\n        goto label_11;\n    }\n    eax = *(rdx);\n    rdx = *((rbx + 0x20));\n    ecx = rax - 0x2b;\n    ecx &= 0xfd;\n    if (ecx != 0) {\n        goto label_21;\n    }\n    eax = *((r15 + 1));\n    r15++;\n    eax = 0;\n    if (al == 0x3a) {\n        r13d = eax;\n    }\n    if (rdx != 0) {\n        goto label_22;\n    }\n    do {\nlabel_0:\n        eax = *(rbx);\n        if (*((rbx + 0x30)) > eax) {\n            *((rbx + 0x30)) = eax;\n        }\n        if (eax < *((rbx + 0x2c))) {\n            *((rbx + 0x2c)) = eax;\n        }\n        if (*((rbx + 0x28)) == 1) {\n            goto label_23;\n        }\nlabel_4:\n        if (ebp == eax) {\n            goto label_24;\n        }\n        rdx = (int64_t) eax;\n        ecx = 3;\n        edi = 0x40e2e9;\n        r14 = *((r12 + rdx*8));\n        rsi = *((r12 + rdx*8));\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (ebp > eax) ? 1 : 0;\n        if (cl != 0) {\n            goto label_25;\n        }\n        edx = *((rbx + 0x2c));\n        ecx = *((rbx + 0x30));\n        eax++;\n        *(rbx) = eax;\n        if (edx == ecx) {\n            goto label_26;\n        }\n        if (eax != ecx) {\n            fcn_00409460 (r12, rbx);\n            edx = *((rbx + 0x2c));\n        }\nlabel_12:\n        *((rbx + 0x30)) = ebp;\n        *(rbx) = ebp;\n        goto label_27;\nlabel_18:\n        *((rbx + 0x28)) = 2;\n        r15++;\n        edx = 0;\nlabel_11:\n        *((rbx + 0x18)) = 1;\n        eax = *(r15);\nlabel_21:\n        eax = 0;\n        if (al == 0x3a) {\n            r13d = eax;\n        }\n    } while (rdx == 0);\nlabel_22:\n    if (*(rdx) == 0) {\n        goto label_0;\n    }\nlabel_6:\n    r8 = rdx + 1;\n    *((rsp + 0x20)) = rdx;\n    *((rbx + 0x20)) = r8;\n    r14d = *(rdx);\n    *((rsp + 0x28)) = r8;\n    *((rsp + 0x1c)) = r14b;\n    rax = strchr (r15, r14d);\n    rdx = *((rsp + 0x20));\n    ecx = *((rsp + 0x1c));\n    r8 = *((rsp + 0x28));\n    if (*((rdx + 1)) == 0) {\n        *(rbx)++;\n    }\n    ecx -= 0x3a;\n    if (cl <= 1) {\n        goto label_28;\n    }\n    if (rax == 0) {\n        goto label_28;\n    }\n    ecx = *((rax + 1));\n    if (*(rax) == 0x57) {\n        goto label_29;\n    }\nlabel_7:\n    if (cl == 0x3a) {\n        goto label_30;\n    }\n    do {\nlabel_2:\n        eax = r14d;\n        return rax;\nlabel_25:\n        if (*(r14) == 0x2d) {\n            goto label_31;\n        }\nlabel_5:\n        edx = *((rbx + 0x28));\n        if (edx == 0) {\n            goto label_16;\n        }\n        eax++;\n        *((rbx + 0x10)) = r14;\n        r14d = 1;\n        *(rbx) = eax;\n    } while (1);\nlabel_17:\n    *(rbx) = 1;\n    eax = 1;\n    goto label_1;\nlabel_24:\n    ebp = *((rbx + 0x30));\n    edx = *((rbx + 0x2c));\nlabel_27:\n    if (edx != ebp) {\n        *(rbx) = edx;\n    }\nlabel_16:\n    r14d = 0xffffffff;\n    goto label_2;\nlabel_23:\n    edx = *((rbx + 0x30));\n    if (*((rbx + 0x2c)) == edx) {\n        goto label_32;\n    }\n    if (eax != edx) {\n        *((rsp + 0x1c)) = r9d;\n        fcn_00409460 (r12, rbx);\n        edx = *(rbx);\n        r9d = *((rsp + 0x1c));\n    }\nlabel_9:\n    if (ebp <= edx) {\n        goto label_33;\n    }\n    rax = (int64_t) edx;\n    while (*(rcx) != 0x2d) {\nlabel_3:\n        edx = rsi + 1;\n        rax++;\n        *(rbx) = edx;\n        if (ebp <= eax) {\n            goto label_33;\n        }\n        rcx = *((r12 + rax*8));\n        esi = eax;\n        edx = eax;\n    }\n    if (*((rcx + 1)) == 0) {\n        goto label_3;\n    }\n    eax = *(rbx);\nlabel_10:\n    *((rbx + 0x30)) = edx;\n    goto label_4;\nlabel_31:\n    ecx = *((r14 + 1));\n    if (cl == 0) {\n        goto label_5;\n    }\n    if (*((rsp + 8)) == 0) {\n        goto label_34;\n    }\n    if (cl == 0x2d) {\n        goto label_35;\n    }\n    if (r9d == 0) {\n        goto label_34;\n    }\n    if (*((r14 + 2)) == 0) {\n        esi = (int32_t) cl;\n        *((rsp + 0x1c)) = r9d;\n        rax = strchr (r15, rsi);\n        r9d = *((rsp + 0x1c));\n        if (rax != 0) {\n            goto label_34;\n        }\n    }\n    rdx = r14 + 1;\n    *((rbx + 0x20)) = rdx;\n    eax = fcn_00409540 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), r9);\n    r14d = eax;\n    if (eax != 0xffffffff) {\n        goto label_2;\n    }\n    rax = *(rbx);\n    r14 = *((r12 + rax*8));\nlabel_34:\n    rdx = r14 + 1;\n    goto label_6;\nlabel_29:\n    if (*((rsp + 8)) == 0) {\n        goto label_7;\n    }\n    if (cl != 0x3b) {\n        goto label_7;\n    }\n    if (*((rdx + 1)) == 0) {\n        rax = *(rbx);\n        if (eax == ebp) {\n            goto label_36;\n        }\n        r8 = *((r12 + rax*8));\n    }\n    *((rbx + 0x20)) = r8;\n    *((rbx + 0x10)) = 0;\nlabel_14:\n    eax = fcn_00409540 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), 0);\n    r14d = eax;\n    goto label_2;\nlabel_20:\n    *((rsp + 0x1c)) = r9d;\n    rax = getenv (\"POSIXLY_CORRECT\");\n    r9d = *((rsp + 0x1c));\n    if (rax == 0) {\n        goto label_37;\n    }\n    rdx = *((rbx + 0x20));\n    goto label_8;\nlabel_30:\n    edx = *((rdx + 1));\n    if (*((rax + 2)) == 0x3a) {\n        goto label_38;\n    }\n    rax = *(rbx);\n    if (dl != 0) {\n        goto label_39;\n    }\n    if (ebp == eax) {\n        goto label_40;\n    }\n    edx = rax + 1;\n    rax = *((r12 + rax*8));\n    *(rbx) = edx;\n    *((rbx + 0x10)) = rax;\nlabel_13:\n    *((rbx + 0x20)) = 0;\n    goto label_2;\nlabel_32:\n    if (eax == edx) {\n        goto label_9;\n    }\n    *((rbx + 0x2c)) = eax;\n    edx = eax;\n    goto label_9;\nlabel_33:\n    eax = edx;\n    goto label_10;\nlabel_19:\n    *((rbx + 0x28)) = 0;\n    r15++;\n    edx = 0;\n    goto label_11;\nlabel_28:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0x3f;\n        goto label_2;\nlabel_26:\n        *((rbx + 0x2c)) = eax;\n        edx = eax;\n        goto label_12;\nlabel_39:\n        eax++;\n        *((rbx + 0x10)) = r8;\n        *(rbx) = eax;\n        goto label_13;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: invalid option -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_38:\n    if (dl != 0) {\n        *((rbx + 0x10)) = r8;\n        *(rbx)++;\n        goto label_13;\nlabel_37:\n        *((rbx + 0x28)) = 1;\n        rdx = *((rbx + 0x20));\n        goto label_11;\n    }\n    *((rbx + 0x10)) = 0;\n    goto label_13;\nlabel_40:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_13;\nlabel_35:\n        rdx = r14 + 2;\n        *((rbx + 0x20)) = rdx;\n        goto label_14;\nlabel_36:\n        if (r13d != 0) {\n            goto label_41;\n        }\nlabel_15:\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_2;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_41:\n    rbp = *(r12);\n    edx = 5;\n    rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n    rdi = stderr;\n    r8d = r14d;\n    esi = 1;\n    rdx = rax;\n    rcx = rbp;\n    eax = 0;\n    fprintf_chk ();\n    goto label_15;\n}\n"
        },
        {
            "funcName": "fcn_0040a130",
            "funcStartAddr": "0x40a130",
            "funcEndAddr": "0x40a186",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40a130 */\n#include <stdint.h>\n \nint32_t fcn_0040a130 (int64_t arg_10h) {\n    eax = *(0x0061137c);\n    *(0x00611560) = eax;\n    eax = *(0x00611378);\n    *(0x00611564) = eax;\n    eax = *((rsp + 0x10));\n    fcn_00409b60 (rdi, rsi, rdx, rcx, r8, r9);\n    edx = imp.__libc_start_main;\n    *(0x0061137c) = edx;\n    rdx = imp.__libc_start_main;\n    *(0x006115a0) = rdx;\n    edx = imp.__libc_start_main;\n    *(0x00611374) = edx;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_0040a1b0",
            "funcStartAddr": "0x40a1b0",
            "funcEndAddr": "0x40a1c3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40a1b0 */\n#include <stdint.h>\n \nvoid fcn_0040a1b0 (void) {\n    r9d = 0;\n    fcn_0040a130 (rdi);\n}\n"
        },
        {
            "funcName": "fcn_0040a230",
            "funcStartAddr": "0x40a230",
            "funcEndAddr": "0x40a2aa",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40a230 */\n#include <stdint.h>\n \nuint64_t fcn_0040a230 (wint_t arg1, int64_t arg2, size_t * arg3, mbstate_t * ps) {\n    int64_t var_ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = ps;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    rbx = 0xfffffffffffffffe;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r12 = rdi;\n    while (1) {\n        rax = mbrtowc (r12, rbp, rdx, rcx);\n        rbx = rax;\n        if (rax > 0xfffffffffffffffd) {\n            goto label_2;\n        }\nlabel_0:\n        rax = rbx;\n        return rax;\nlabel_1:\n        edx = 1;\n        r12 = rsp + 0xc;\n    }\nlabel_2:\n    al = fcn_0040a790 (0);\n    if (al != 0) {\n        goto label_0;\n    }\n    eax = *(rbp);\n    ebx = 1;\n    *(r12) = eax;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040a2b0",
            "funcStartAddr": "0x40a2b0",
            "funcEndAddr": "0x40a39f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40a2b0 */\n#include <stdint.h>\n \nuint64_t fcn_0040a2b0 (int64_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    eax = 0x401;\n    r15 = 0x7ffffffffffffffe;\n    r14 = 0x3fffffffffffffff;\n    r13 = rdi;\n    rbx = rsi + 1;\n    if (rsi >= 0x401) {\n        rbx = rax;\n    }\nlabel_0:\n    rax = malloc (rbx);\n    if (rax == 0) {\n        goto label_2;\n    }\n    do {\n        rdx = rbx;\n        rsi = rax;\n        rdi = r13;\n        rax = readlink ();\n        r12 = rax;\n        if (rax < 0) {\n            goto label_3;\n        }\nlabel_1:\n        if (rbx > r12) {\n            goto label_4;\n        }\n        free (rbp);\n        if (rbx > r14) {\n            goto label_5;\n        }\n        rbx += rbx;\n        rax = malloc (rbx);\n    } while (rax != 0);\nlabel_2:\n    rax = rbp;\n    return rax;\nlabel_5:\n    if (rbx > r15) {\n        goto label_6;\n    }\n    rbx = 0x7fffffffffffffff;\n    goto label_0;\nlabel_3:\n    rax = errno_location ();\n    if (*(rax) == 0x22) {\n        goto label_1;\n    }\n    ebp = 0;\n    free (rbp);\n    goto label_2;\nlabel_4:\n    *((rbp + r12)) = 0;\n    goto label_2;\nlabel_6:\n    errno_location ();\n    ebp = 0;\n    *(rax) = 0xc;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_0040a3b0",
            "funcStartAddr": "0x40a3b0",
            "funcEndAddr": "0x40a4c6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40a3b0 */\n#include <stdint.h>\n \nuint64_t fcn_0040a3b0 (char * arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    char * s2;\n    uint32_t var_17h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r15 = rsi;\n    r13 = rcx;\n    *((rsp + 8)) = rdi;\n    *((rsp + 0x18)) = rdx;\n    rax = strlen (rdi);\n    r14 = *(r15);\n    *(rsp) = 0xffffffffffffffff;\n    if (r14 == 0) {\n        goto label_3;\n    }\n    r12 = rax;\n    *((rsp + 0x17)) = 0;\n    ebx = 0;\n    goto label_1;\nlabel_0:\n    rax = *((rsp + 0x18));\n    if (rax == 0) {\n        goto label_4;\n    }\n    rdi *= r13;\n    rdi += rax;\n    eax = memcmp (*(rsp), rbp, r13);\n    ecx = 1;\n    eax = *((rsp + 0x17));\n    if (eax != 0) {\n        eax = ecx;\n    }\n    *((rsp + 0x17)) = al;\n    do {\nlabel_2:\n        rbx++;\n        rbp += r13;\n        r14 = *((r15 + rbx*8));\n        if (r14 == 0) {\n            goto label_5;\n        }\nlabel_1:\n        eax = strncmp (r14, *((rsp + 8)), r12);\n    } while (eax != 0);\n    rax = strlen (r14);\n    if (rax == r12) {\n        goto label_6;\n    }\n    if (*(rsp) != -1) {\n        goto label_0;\n    }\n    *(rsp) = rbx;\n    rbx++;\n    rbp += r13;\n    r14 = *((r15 + rbx*8));\n    if (r14 != 0) {\n        goto label_1;\n    }\nlabel_5:\n    rax = 0xfffffffffffffffe;\n    if (*((rsp + 0x17)) == 0) {\n        rax = *(rsp);\n    }\n    *(rsp) = rax;\n    do {\nlabel_3:\n        rax = *(rsp);\n        return rax;\nlabel_4:\n        *((rsp + 0x17)) = 1;\n        goto label_2;\nlabel_6:\n        *(rsp) = rbx;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040a4d0",
            "funcStartAddr": "0x40a4d0",
            "funcEndAddr": "0x40a541",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40a4d0 */\n#include <stdint.h>\n \nuint64_t fcn_0040a4d0 (int64_t arg1, int64_t arg2, uint32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    edx = 5;\n    r12 = rsi;\n    if (rdx == -1) {\n        goto label_0;\n    }\n    rax = dcgettext (0, \"ambiguous argument %s for %s\");\n    rbx = rax;\n    do {\n        rax = fcn_00407e60 (1, rbp);\n        rax = fcn_00407b50 (0, 8, r12);\n        r8 = rbp;\n        rdx = rbx;\n        esi = 0;\n        rcx = rax;\n        edi = 0;\n        eax = 0;\n        void (*0x4020c0)() ();\nlabel_0:\n        rax = dcgettext (0, \"invalid argument %s for %s\");\n        rbx = rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040a550",
            "funcStartAddr": "0x40a550",
            "funcEndAddr": "0x40a668",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40a550 */\n#include <stdint.h>\n \nuint64_t fcn_0040a550 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r15 = rdi;\n    r14d = 0;\n    r13 = rdx;\n    edx = 5;\n    rbx = stderr;\n    rax = dcgettext (0, \"Valid arguments are:\");\n    rdi = rax;\n    rsi = rbx;\n    ebx = 0;\n    fputs_unlocked ();\n    r12 = *(r15);\n    if (r12 != 0) {\n        goto label_1;\n    }\n    goto label_2;\n    do {\nlabel_0:\n        rbx++;\n        r14 = rbp;\n        rbp += r13;\n        rax = fcn_00407e80 (r12);\n        edx = \"\\n  - %s\";\n        esi = 1;\n        rdi = stderr;\n        rcx = rax;\n        eax = 0;\n        fprintf_chk ();\n        r12 = *((r15 + rbx*8));\n        if (r12 == 0) {\n            goto label_2;\n        }\nlabel_1:\n    } while (rbx == 0);\n    eax = memcmp (r14, rbp, r13);\n    if (eax != 0) {\n        goto label_0;\n    }\n    rbx++;\n    rbp += r13;\n    rax = fcn_00407e80 (r12);\n    edx = \", %s\";\n    esi = 1;\n    rdi = stderr;\n    rcx = rax;\n    eax = 0;\n    fprintf_chk ();\n    r12 = *((r15 + rbx*8));\n    if (r12 != 0) {\n        goto label_1;\n    }\nlabel_2:\n    rdi = stderr;\n    rax = *((rdi + 0x28));\n    if (rax < *((rdi + 0x30))) {\n        rdx = rax + 1;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = 0xa;\n        return rax;\n    }\n    esi = 0xa;\n    return overflow ();\n}\n"
        },
        {
            "funcName": "fcn_0040a670",
            "funcStartAddr": "0x40a670",
            "funcEndAddr": "0x40a6e0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40a670 */\n#include <stdint.h>\n \nuint64_t fcn_0040a670 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r15 = r8;\n    r14 = rdi;\n    r13 = r9;\n    r12 = rsi;\n    rbx = rdx;\n    rax = fcn_0040a3b0 (r12, rbx, rbp, r8);\n    while (1) {\n        return rax;\n        fcn_0040a4d0 (r14, r12, rax);\n        fcn_0040a550 (rbx, rbp, r15);\n        void (*r13)() ();\n        rax = 0xffffffffffffffff;\n    }\n}\n"
        },
        {
            "funcName": "fcn_0040a730",
            "funcStartAddr": "0x40a730",
            "funcEndAddr": "0x40a78d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40a730 */\n#include <stdint.h>\n \nuint64_t fcn_0040a730 (int64_t arg1) {\n    rdi = arg1;\n    rax = fpending ();\n    ebx = *(rbp);\n    r12 = rax;\n    ebx &= 0x20;\n    eax = fcn_0040b9a0 (rbp);\n    if (ebx != 0) {\n        goto label_1;\n    }\n    if (eax == 0) {\n        goto label_0;\n    }\n    if (r12 != 0) {\n        goto label_2;\n    }\n    rax = errno_location ();\n    al = (*(rax) != 9) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = -eax;\n    do {\nlabel_0:\n        return rax;\nlabel_1:\n        if (eax != 0) {\n            goto label_2;\n        }\n        errno_location ();\n        *(rax) = 0;\n        eax = 0xffffffff;\n    } while (1);\nlabel_2:\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040a790",
            "funcStartAddr": "0x40a790",
            "funcEndAddr": "0x40a7ee",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40a790 */\n#include <stdint.h>\n \nuint64_t fcn_0040a790 (int32_t category) {\n    rdi = category;\n    rax = setlocale (rdi, 0);\n    rdx = rax;\n    eax = 1;\n    if (rdx != 0) {\n        ecx = 2;\n        edi = 0x40e366;\n        rsi = rdx;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (rdx > 0) ? 1 : 0;\n        eax = 0;\n        if (cl != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    edi = \"POSIX\";\n    ecx = 6;\n    rsi = rdx;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (cl > 0) ? 1 : 0;\n    al = (al != 0) ? 1 : 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040a7f0",
            "funcStartAddr": "0x40a7f0",
            "funcEndAddr": "0x40a826",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40a7f0 */\n#include <stdint.h>\n \nuint64_t rotate_left64 (uint64_t value, uint32_t count) {\n    const uint64_t mask = (CHAR_BIT * sizeof (value)) - 1;\n    count &= mask;\n    return (value << count) | (value >> (-count & mask));\n}\n \nint64_t fcn_0040a7f0 (int64_t arg1) {\n    rdi = arg1;\n    rcx = *(rdi);\n    if (cl == 0) {\n        goto label_0;\n    }\n    eax = 0;\n    do {\n        rax = rotate_left64 (rax, 9);\n        rdi++;\n        rax += rcx;\n        rcx = *(rdi);\n    } while (cl != 0);\n    edx = 0;\n    rax = rdx:rax / rsi;\n    rdx = rdx:rax % rsi;\n    rax = rdx;\n    return rax;\nlabel_0:\n    edx = 0;\n    rax = rdx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040a830",
            "funcStartAddr": "0x40a830",
            "funcEndAddr": "0x40ad92",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40a830 */\n#include <stdint.h>\n \nuint64_t fcn_0040a830 (void) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_60h;\n    rax = nl_langinfo (0xe);\n    r15 = imp.__libc_start_main;\n    rbx = rax;\n    eax = 0x40e307;\n    if (rax == 0) {\n        rbx = rax;\n    }\n    if (r15 == 0) {\n        goto label_15;\n    }\nlabel_1:\n    ebp = *(r15);\n    if (bpl != 0) {\n        goto label_16;\n    }\n    goto label_17;\n    do {\nlabel_0:\n        strlen (r15);\n        rbp = r15 + rax + 1;\n        strlen (rbp);\n        r15 = rbp + rax + 1;\n        ebp = *(r15);\n        if (bpl == 0) {\n            goto label_17;\n        }\nlabel_16:\n        eax = strcmp (rbx, r15);\n        if (eax == 0) {\n            goto label_18;\n        }\n    } while (bpl != 0x2a);\n    if (*((r15 + 1)) != 0) {\n        goto label_0;\n    }\nlabel_18:\n    strlen (r15);\n    rbx = r15 + rax + 1;\nlabel_17:\n    eax = \"ASCII\";\n    if (*(rbx) == 0) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\nlabel_15:\n    rax = getenv (\"CHARSETALIASDIR\");\n    r13 = rax;\n    if (rax == 0) {\n        goto label_19;\n    }\n    if (*(rax) == 0) {\n        goto label_19;\n    }\n    rax = strlen (rax);\n    r12 = rax;\n    r14 = rax;\n    if (rax != 0) {\n        goto label_20;\n    }\nlabel_13:\n    rax = malloc (0xe);\n    if (rax != 0) {\n        goto label_21;\n    }\n    do {\n        r15d = 0x40e307;\nlabel_2:\n        *(0x00611598) = r15;\n        goto label_1;\nlabel_19:\n        r12d = 0x65;\n        r14d = 0x64;\n        r13d = \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\";\nlabel_14:\n        rax = malloc (0x73);\n    } while (rax == 0);\n    memcpy (rbp, r13, r14);\n    *((rbp + r14)) = 0x2f;\n    do {\n        r12 += rbp;\n        rax = 0x2e74657372616863;\n        *(r12) = rax;\n        eax = 0x73;\n        *((r12 + 0xc)) = ax;\n        eax = 0;\n        *((r12 + 8)) = 0x61696c61;\n        eax = open (rbp, 0, rdx);\n        r12d = eax;\n        if (eax >= 0) {\n            goto label_22;\n        }\nlabel_6:\n        r15d = 0x40e307;\nlabel_7:\n        free (rbp);\n        goto label_2;\nlabel_21:\n        eax = memcpy (rbp, r13, r14);\n    } while (1);\nlabel_22:\n    esi = 0x40bcfe;\n    edi = eax;\n    r15d = 0;\n    rax = fdopen ();\n    *((rsp + 8)) = 0;\n    r13 = rax;\n    if (rax == 0) {\n        goto label_23;\n    }\n    rax = rbx;\n    r12 = rsp + 0x60;\n    r14 = rsp + 0x20;\n    rbx = r13;\n    r13 = rax;\n    do {\nlabel_3:\n        rax = *((rbx + 8));\n        if (rax >= *((rbx + 0x10))) {\n            goto label_24;\n        }\nlabel_4:\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        edi = *(rax);\nlabel_5:\n        eax = rdi - 9;\n    } while (eax <= 1);\n    if (edi == 0x20) {\n        goto label_3;\n    }\n    if (edi == 0x23) {\n        goto label_25;\n    }\n    eax = ungetc (rdi, rbx);\n    eax = 0;\n    rcx = r12;\n    rdx = r14;\n    eax = fscanf (rbx, \"%50s %50s\");\n    if (eax <= 1) {\n        goto label_12;\n    }\n    rcx = r14;\n    do {\n        edx = *(rcx);\n        rcx += 4;\n        eax = rdx - 0x1010101;\n        edx = ~edx;\n        eax &= edx;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    edx = eax;\n    edx >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = edx;\n    }\n    rdx = rcx + 2;\n    if ((eax & 0x8080) == 0) {\n        rcx = rdx;\n    }\n    edx = eax;\n    dl += al;\n    rdx = r12;\n    rcx -= 3;\n    rcx -= r14;\n    do {\n        esi = *(rdx);\n        rdx += 4;\n        eax = rsi - 0x1010101;\n        esi = ~esi;\n        eax &= esi;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    esi = eax;\n    *((rsp + 0x10)) = rcx;\n    esi >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = esi;\n    }\n    rsi = rdx + 2;\n    if ((eax & 0x8080) == 0) {\n        rdx = rsi;\n    }\n    esi = eax;\n    sil += al;\n    rdx -= 3;\n    rdx -= r12;\n    rax = rcx + rdx;\n    *((rsp + 0x18)) = rdx;\n    if (*((rsp + 8)) != 0) {\n        goto label_26;\n    }\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    rax = malloc (rax + 3);\n    rcx = *((rsp + 0x10));\n    rdx = *((rsp + 0x18));\nlabel_9:\n    if (rax == 0) {\n        goto label_27;\n    }\n    rdi = *((rsp + 8));\n    rsi = 0xfffffffffffffffe;\n    rsi -= rcx;\n    rcx++;\n    rdi -= rdx;\n    rsi += rdi;\n    rsi += rax;\n    if (ecx >= 8) {\n        goto label_28;\n    }\n    if ((cl & 4) != 0) {\n        goto label_29;\n    }\n    if (ecx != 0) {\n        r9d = *(r14);\n        *(rsi) = r9b;\n        if ((cl & 2) != 0) {\n            goto label_30;\n        }\n    }\nlabel_10:\n    rdx++;\n    rcx = rax + rdi - 1;\n    if (edx >= 8) {\n        goto label_31;\n    }\n    if ((dl & 4) != 0) {\n        goto label_32;\n    }\n    if (edx != 0) {\n        esi = *(r12);\n        *(rcx) = sil;\n        if ((dl & 2) != 0) {\n            goto label_33;\n        }\n    }\nlabel_11:\n    r15 = rax;\n    rax = *((rbx + 8));\n    if (rax < *((rbx + 0x10))) {\n        goto label_4;\n    }\nlabel_24:\n    rdi = rbx;\n    eax = uflow ();\n    edi = eax;\n    if (eax != 0xffffffff) {\n        goto label_5;\n    }\nlabel_12:\n    rax = r13;\n    r13 = rbx;\n    rbx = rax;\n    fcn_0040b9a0 (rbx);\n    rax = *((rsp + 8));\n    if (rax == 0) {\n        goto label_6;\n    }\n    *((r15 + rax)) = 0;\n    goto label_7;\n    do {\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        eax = *(rax);\n        edx = 1;\nlabel_8:\n        if (eax == 0xa) {\n            goto label_34;\n        }\n        if (dl == 0) {\n            goto label_34;\n        }\nlabel_25:\n        rax = *((rbx + 8));\n    } while (rax < *((rbx + 0x10)));\n    rdi = rbx;\n    eax = uflow ();\n    dl = (eax != 0xffffffff) ? 1 : 0;\n    goto label_8;\nlabel_26:\n    rax += *((rsp + 8));\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    eax = realloc (r15, rax + 3);\n    rdx = *((rsp + 0x18));\n    rcx = *((rsp + 0x10));\n    goto label_9;\nlabel_28:\n    r9 = *(r14);\n    *(rsi) = r9;\n    r9d = ecx;\n    r10 = *((r14 + r9 - 8));\n    *((rsi + r9 - 8)) = r10;\n    r9 = rsi + 8;\n    r10 = r14;\n    r9 &= 0xfffffffffffffff8;\n    rsi -= r9;\n    ecx += esi;\n    r10 -= rsi;\n    ecx &= 0xfffffff8;\n    if (ecx < 8) {\n        goto label_10;\n    }\n    ecx &= 0xfffffff8;\n    esi = 0;\n    do {\n        r8d = esi;\n        esi += 8;\n        r11 = *((r10 + r8));\n        *((r9 + r8)) = r11;\n    } while (esi < ecx);\n    goto label_10;\nlabel_31:\n    rsi = *(r12);\n    r9 = r12;\n    *(rcx) = rsi;\n    esi = edx;\n    rdi = *((r12 + rsi - 8));\n    *((rcx + rsi - 8)) = rdi;\n    rdi = rcx + 8;\n    rdi &= 0xfffffffffffffff8;\n    rcx -= rdi;\n    edx += ecx;\n    r9 -= rcx;\n    edx &= 0xfffffff8;\n    if (edx < 8) {\n        goto label_11;\n    }\n    edx &= 0xfffffff8;\n    ecx = 0;\n    do {\n        esi = ecx;\n        ecx += 8;\n        r8 = *((r9 + rsi));\n        *((rdi + rsi)) = r8;\n    } while (ecx < edx);\n    goto label_11;\nlabel_34:\n    if (eax == 0xffffffff) {\n        goto label_12;\n    }\n    goto label_3;\nlabel_20:\n    if (*((r13 + rax - 1)) == 0x2f) {\n        rdi = rax + 0xe;\n        goto label_13;\nlabel_23:\n        close (r12d);\n        goto label_6;\nlabel_29:\n        r9d = *(r14);\n        *(rsi) = r9d;\n        r9d = *((r14 + rcx - 4));\n        *((rsi + rcx - 4)) = r9d;\n        goto label_10;\nlabel_32:\n        esi = *(r12);\n        *(rcx) = esi;\n        esi = *((r12 + rdx - 4));\n        *((rcx + rdx - 4)) = esi;\n        goto label_11;\nlabel_27:\n        rax = r13;\n        r13 = rbx;\n        r15d = 0x40e307;\n        rbx = rax;\n        free (r15);\n        fcn_0040b9a0 (r13);\n        goto label_7;\nlabel_30:\n        r9d = *((r14 + rcx - 2));\n        *((rsi + rcx - 2)) = r9w;\n        goto label_10;\nlabel_33:\n        esi = edx;\n        edx = *((r12 + rsi - 2));\n        *((rcx + rsi - 2)) = dx;\n        goto label_11;\n    }\n    rdi = rax + 0xf;\n    r12++;\n    goto label_14;\n}\n"
        },
        {
            "funcName": "fcn_0040add0",
            "funcStartAddr": "0x40add0",
            "funcEndAddr": "0x40adff",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40add0 */\n#include <stdint.h>\n \nuint64_t fcn_0040add0 (void) {\n    rax = fcn_0040aff0 (rdi, rsi);\n    rbx = rax;\n    eax = 0;\n    if (rbx != 0) {\n        fcn_00408a50 (0x18);\n        *(rax) = rbx;\n        *((rax + 0x10)) = 0;\n        *((rax + 8)) = 0;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040ae10",
            "funcStartAddr": "0x40ae10",
            "funcEndAddr": "0x40af05",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40ae10 */\n#include <stdint.h>\n \nint64_t fcn_0040ae10 (int64_t arg1, int64_t arg2) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    r15 = rdi;\n    r14 = rsi + 1;\n    r13 = rsi;\n    r12 = *(rdi);\n    rbp = *((rdi + 8));\n    rbx = *((rdi + 0x10));\n    while (rbx >= r13) {\n        if (rbx == r13) {\n            goto label_1;\n        }\nlabel_0:\n        rax = rbx;\n        edx = 0;\n        rax -= r13;\n        rax = rdx:rax / r14;\n        rdx = rdx:rax % r14;\n        rsi = rdx;\n        rcx = rax;\n        rbx -= rdx;\n        rax = rbp;\n        edx = 0;\n        rax = rdx:rax / r14;\n        rdx = rdx:rax % r14;\n        if (rbp <= rbx) {\n            goto label_2;\n        }\n        rbx = rsi - 1;\n    }\n    rax = rbx;\n    edx = 0;\n    do {\n        rax <<= 8;\n        rdx++;\n        rax += 0xff;\n    } while (r13 > rax);\n    fcn_0040b300 (r12, rsp + 8, rdx);\n    rax = rsp + 8;\n    do {\n        edx = *(rax);\n        rbx <<= 8;\n        rbp <<= 8;\n        rax++;\n        rbx += 0xff;\n        rbp += rdx;\n    } while (r13 > rbx);\n    if (rbx != r13) {\n        goto label_0;\n    }\nlabel_1:\n    *((r15 + 0x10)) = 0;\n    *((r15 + 8)) = 0;\n    do {\n        rax = rbp;\n        return rax;\nlabel_2:\n        *((r15 + 8)) = rax;\n        *((r15 + 0x10)) = rcx;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040af30",
            "funcStartAddr": "0x40af30",
            "funcEndAddr": "0x40af81",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40af30 */\n#include <stdint.h>\n \nuint64_t fcn_0040af30 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    eax = fcn_0040b460 (*(rdi));\n    r12d = eax;\n    rax = errno_location ();\n    rdi = rbx;\n    esi = 0x18;\n    rdx = 0xffffffffffffffff;\n    r13d = *(rax);\n    explicit_bzero_chk ();\n    free (rbx);\n    *(rbp) = r13d;\n    eax = r12d;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040aff0",
            "funcStartAddr": "0x40aff0",
            "funcEndAddr": "0x40b2df",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40aff0 */\n#include <stdint.h>\n \nuint64_t fcn_0040aff0 (int64_t arg1, int64_t arg2) {\n    int64_t var_8h;\n    uid_t var_10h;\n    rdi = arg1;\n    rsi = arg2;\n    if (rsi == 0) {\n        goto label_3;\n    }\n    r12 = rdi;\n    if (rdi == 0) {\n        goto label_4;\n    }\n    rax = fcn_0040ba20 (rdi, 0x40e424);\n    r13 = rax;\n    if (rax == 0) {\n        goto label_5;\n    }\n    fcn_00408a50 (0x1038);\n    ecx = 0x1000;\n    rdi = r13;\n    *(rax) = r13;\n    if (rbp <= 0x1000) {\n        rcx = rbp;\n    }\n    *((rax + 8)) = 0x40af90;\n    rbx = rax;\n    *((rax + 0x10)) = r12;\n    setvbuf (rdi, rax + 0x18, 0, rcx);\n    do {\nlabel_0:\n        rax = rbx;\n        return rax;\nlabel_4:\n        fcn_00408a50 (0x1038);\n        *(rax) = 0;\n        rbx = rax;\n        r13 = rax + 0x20;\n        *((rax + 8)) = 0x40af90;\n        *((rax + 0x10)) = 0;\n        *((rax + 0x18)) = 0;\n        eax = 0;\n        eax = open (\"/dev/urandom\", 0, rdx);\n        r15d = eax;\n        if (eax < 0) {\n            goto label_6;\n        }\n        rdx = rbp;\n        edi = eax;\n        rsi = r13;\n        r14d = 0x800;\n        ecx = 0x1018;\n        if (rbp > 0x800) {\n            rdx = r14;\n        }\n        rax = read_chk ();\n        close (r15d);\n        if (rbp <= 0x7ff) {\n            goto label_7;\n        }\nlabel_1:\n        fcn_0040b760 (r13);\n    } while (1);\nlabel_3:\n    rax = fcn_00408a50 (0x1038);\n    rbx = rax;\n    *(rax) = 0;\n    *((rax + 8)) = 0x40af90;\n    *((rax + 0x10)) = 0;\n    goto label_0;\nlabel_6:\n    r12 = rsp + 0x10;\n    esi = 0;\n    r14d = 0x14;\n    rdi = r12;\n    gettimeofday ();\n    __asm (\"movdqa xmm0, xmmword [rsp + 0x10]\");\n    __asm (\"movups xmmword [rbx + 0x20], xmm0\");\n    eax = getpid ();\n    *((rsp + 0x10)) = eax;\n    *((rbx + 0x30)) = eax;\nlabel_2:\n    eax = 4;\n    rbp -= r14;\n    if (rbp > 4) {\n    }\n    eax = getppid ();\n    rsi = r13 + r14;\n    *((rsp + 0x10)) = eax;\n    edi = ebp;\n    if (ebp == 0) {\n        goto label_8;\n    }\n    eax = 0;\n    do {\n        edx = eax;\n        eax++;\n        ecx = *((r12 + rdx));\n        *((rsi + rdx)) = cl;\n    } while (eax < edi);\nlabel_8:\n    rbp += r14;\n    if (rbp > 0x7ff) {\n        goto label_1;\n    }\n    r14d = 0x800;\n    eax = 4;\n    r14 -= rbp;\n    if (r14 > 4) {\n        r14 = rax;\n    }\n    eax = getuid ();\n    rsi = r13 + rbp;\n    *((rsp + 0x10)) = eax;\n    edi = r14d;\n    if (r14d == 0) {\n        goto label_9;\n    }\n    eax = 0;\n    do {\n        edx = eax;\n        eax++;\n        ecx = *((r12 + rdx));\n        *((rsi + rdx)) = cl;\n    } while (eax < edi);\nlabel_9:\n    rbp += r14;\n    if (rbp > 0x7ff) {\n        goto label_1;\n    }\n    eax = getgid ();\n    edx = 4;\n    rsi = r13 + rbp;\n    *((rsp + 0x10)) = eax;\n    eax = 0x800;\n    rax -= rbp;\n    if (rax > 4) {\n        rax = rdx;\n    }\n    edi = eax;\n    if (eax == 0) {\n        goto label_1;\n    }\n    eax = 0;\n    do {\n        edx = eax;\n        eax++;\n        ecx = *((r12 + rdx));\n        *((rsi + rdx)) = cl;\n    } while (eax < edi);\n    goto label_1;\nlabel_5:\n    ebx = 0;\n    goto label_0;\nlabel_7:\n    rcx = r14;\n    eax = 0x10;\n    __asm (\"cmovs rbp, r12\");\n    r12 = rsp + 0x10;\n    rdi = r12;\n    rcx -= rbp;\n    r15 = r13 + rbp;\n    if (rcx > 0x10) {\n        rcx = rax;\n    }\n    esi = 0;\n    rbp += rcx;\n    *((rsp + 8)) = rcx;\n    gettimeofday ();\n    rcx = *((rsp + 8));\n    rdi = r15;\n    rsi = r12;\n    *(rdi) = *(rsi);\n    rcx--;\n    rsi++;\n    rdi++;\n    if (rbp > 0x7ff) {\n        goto label_1;\n    }\n    r14 -= rbp;\n    eax = 4;\n    if (r14 > 4) {\n        r14 = rax;\n    }\n    eax = getpid ();\n    rsi = r12;\n    *((rsp + 0x10)) = eax;\n    ecx = r14d;\n    rax = r13 + rbp;\n    r14 += rbp;\n    rdi = rax;\n    *(rdi) = *(rsi);\n    rcx--;\n    rsi++;\n    rdi++;\n    if (r14 <= 0x7ff) {\n        goto label_2;\n    }\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040b300",
            "funcStartAddr": "0x40b300",
            "funcEndAddr": "0x40b45c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40b300 */\n#include <stdint.h>\n \nuint64_t fcn_0040b300 (int64_t arg1, int64_t arg2, uint32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r12 = rdi;\n    rbx = rdx;\n    r13 = *(rdi);\n    if (r13 == 0) {\n        goto label_1;\n    }\n    rax = errno_location ();\n    r15d = 0;\n    r14 = rax;\n    while (rbx != 0) {\n        rax = *(r12);\n        rdi = *((r12 + 0x10));\n        if ((*(rax) & 0x20) == 0) {\n            edx = r15d;\n        }\n        *(r14) = edx;\n        uint64_t (*r12 + 8)() ();\n        r13 = *(r12);\n        rdx = rbx;\n        rdi = rbp;\n        rcx = r13;\n        esi = 1;\n        rax = fread_unlocked ();\n        edx = *(r14);\n        rbp += rax;\n        rbx -= rax;\n    }\nlabel_0:\n    return rax;\nlabel_1:\n    r15 = *((rdi + 0x18));\n    r13 = rdi + 0x838;\n    r14 = rdi + 0x20;\n    if (rdx <= r15) {\n        goto label_2;\n    }\n    do {\n        rbp += r15;\n        rsi -= r15;\n        rbx -= r15;\n        rsi += r13;\n        memcpy (rbp, 0x800, r15);\n        if ((bpl & 7) == 0) {\n            goto label_3;\n        }\n        r15d = 0x800;\n        fcn_0040b4b0 (r14, r13);\n    } while (rbx > 0x800);\n    goto label_4;\n    do {\n        rbp += 0x800;\n        fcn_0040b4b0 (r14, rbp);\n        rbx -= 0x800;\n        if (rbx == 0) {\n            goto label_5;\n        }\nlabel_3:\n    } while (rbx > 0x7ff);\n    fcn_0040b4b0 (r14, r13);\nlabel_4:\n    r15d = 0x800;\n    do {\n        memcpy (rbp, r13, rbx);\n        rcx = r15;\n        rcx -= rbx;\n        *((r12 + 0x18)) = rcx;\n        goto label_0;\nlabel_5:\n        *((r12 + 0x18)) = 0;\n        return rax;\nlabel_2:\n        r13 -= r15;\n        r13 += 0x800;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040b460",
            "funcStartAddr": "0x40b460",
            "funcEndAddr": "0x40b4a9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40b460 */\n#include <stdint.h>\n \nuint32_t fcn_0040b460 (int64_t arg1) {\n    rdi = arg1;\n    rdx = 0xffffffffffffffff;\n    esi = 0x1038;\n    rbx = rdi;\n    rbp = *(rdi);\n    explicit_bzero_chk ();\n    eax = free (rbx);\n    if (rbp != 0) {\n        rdi = rbp;\n        void (*0x40b9a0)() ();\n    }\n    eax = 0;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_0040b4b0",
            "funcStartAddr": "0x40b4b0",
            "funcEndAddr": "0x40b755",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40b4b0 */\n#include <stdint.h>\n \nint64_t fcn_0040b4b0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rax = *((rdi + 0x810));\n    r11 = *((rdi + 0x808));\n    r10 = rdi + 0x400;\n    rdx = *((rdi + 0x800));\n    r9 = rsi;\n    r8 = rax + 1;\n    rax = rdi;\n    *((rdi + 0x810)) = r8;\n    r11 += r8;\n    do {\n        rcx = rdx;\n        rcx <<= 0x15;\n        rdx ^= rcx;\n        rcx = *(rax);\n        rdx = ~rdx;\n        rdx += *((rax + 0x400));\n        r8 = rcx;\n        r8d &= 0x7f8;\n        rbx = *((rdi + r8));\n        rbx += rdx;\n        r8 = rbx;\n        r8 += r11;\n        r11 = rdx;\n        *(rax) = r8;\n        r8 >>= 8;\n        r11 >>= 5;\n        r8d &= 0x7f8;\n        rdx ^= r11;\n        rbx = *((rdi + r8));\n        rbx += rcx;\n        *(r9) = rbx;\n        r8 = *((rax + 8));\n        rdx += *((rax + 0x408));\n        r11 = rdx;\n        rdx = r8;\n        edx &= 0x7f8;\n        rcx = *((rdi + rdx));\n        rdx = r11;\n        rdx <<= 0xc;\n        rcx += r11;\n        rdx ^= r11;\n        rcx += rbx;\n        *((rax + 8)) = rcx;\n        rcx >>= 8;\n        ecx &= 0x7f8;\n        rbx = *((rdi + rcx));\n        rbx += r8;\n        *((r9 + 8)) = rbx;\n        rcx = *((rax + 0x10));\n        rdx += *((rax + 0x410));\n        r8 = rcx;\n        r8d &= 0x7f8;\n        r11 = *((rdi + r8));\n        r11 += rdx;\n        r8 = r11;\n        r8 += rbx;\n        *((rax + 0x10)) = r8;\n        r8 >>= 8;\n        r8d &= 0x7f8;\n        rcx += *((rdi + r8));\n        *((r9 + 0x10)) = rcx;\n        r11 = rcx;\n        r8 = *((rax + 0x18));\n        rcx = rdx;\n        rcx >>= 0x21;\n        rdx ^= rcx;\n        rcx = r8;\n        rdx += *((rax + 0x418));\n        ecx &= 0x7f8;\n        rbx = *((rdi + rcx));\n        rbx += rdx;\n        rcx = rbx;\n        rcx += r11;\n        rax += 0x20;\n        r9 += 0x20;\n        *((rax - 8)) = rcx;\n        rcx >>= 8;\n        ecx &= 0x7f8;\n        r11 = *((rdi + rcx));\n        r11 += r8;\n        *((r9 - 8)) = r11;\n    } while (rax != r10);\n    rsi += 0x400;\n    r9 = rdi + 0x800;\n    do {\n        rcx = rdx;\n        rcx <<= 0x15;\n        rdx ^= rcx;\n        rcx = *(rax);\n        rdx = ~rdx;\n        rdx += *((rax - 0x400));\n        r8 = rcx;\n        r10 = rdx;\n        r8d &= 0x7f8;\n        r10 >>= 5;\n        rbx = *((rdi + r8));\n        rbx += rdx;\n        rdx ^= r10;\n        r8 = rbx;\n        r8 += r11;\n        *(rax) = r8;\n        r8 >>= 8;\n        r8d &= 0x7f8;\n        rcx += *((rdi + r8));\n        *(rsi) = rcx;\n        r8 = *((rax + 8));\n        r11 = rcx;\n        rdx += *((rax - 0x3f8));\n        r10 = rdx;\n        rdx = r8;\n        edx &= 0x7f8;\n        rcx = *((rdi + rdx));\n        rdx = r10;\n        rdx <<= 0xc;\n        rcx += r10;\n        rdx ^= r10;\n        rcx += r11;\n        *((rax + 8)) = rcx;\n        rcx >>= 8;\n        ecx &= 0x7f8;\n        r11 = *((rdi + rcx));\n        r11 += r8;\n        *((rsi + 8)) = r11;\n        rcx = *((rax + 0x10));\n        rdx += *((rax - 0x3f0));\n        r8 = rcx;\n        r8d &= 0x7f8;\n        rbx = *((rdi + r8));\n        rbx += rdx;\n        r8 = rbx;\n        r8 += r11;\n        *((rax + 0x10)) = r8;\n        r8 >>= 8;\n        r8d &= 0x7f8;\n        rcx += *((rdi + r8));\n        *((rsi + 0x10)) = rcx;\n        r10 = rcx;\n        r8 = *((rax + 0x18));\n        rcx = rdx;\n        rcx >>= 0x21;\n        rdx ^= rcx;\n        rcx = r8;\n        rdx += *((rax - 0x3e8));\n        ecx &= 0x7f8;\n        rbx = *((rdi + rcx));\n        rbx += rdx;\n        rcx = rbx;\n        rcx += r10;\n        rax += 0x20;\n        rsi += 0x20;\n        *((rax - 8)) = rcx;\n        rcx >>= 8;\n        ecx &= 0x7f8;\n        r11 = *((rdi + rcx));\n        r11 += r8;\n        *((rsi - 8)) = r11;\n    } while (rax != r9);\n    *((rdi + 0x800)) = rdx;\n    *((rdi + 0x808)) = r11;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040b760",
            "funcStartAddr": "0x40b760",
            "funcEndAddr": "0x40b994",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40b760 */\n#include <stdint.h>\n \nint64_t fcn_0040b760 (int64_t arg1) {\n    rdi = arg1;\n    rdx = rdi;\n    rax = rdi;\n    rcx = 0x98f5704f6c44c0ab;\n    rsi = 0x82f053db8355e0ce;\n    r11 = 0xb29b2e824a595524;\n    r12 = 0xae985bf2cbfc89ed;\n    r10 = 0x8c0ea5053d4712a0;\n    r9 = 0xb9f8b322c73ac862;\n    rbp = rdi + 0x800;\n    r8 = 0x647c4677a2884b7c;\n    rbx = 0x48fe4a0fa5a09315;\n    do {\n        r13 = *(rax);\n        rsi += *((rax + 0x20));\n        rcx += *((rax + 0x38));\n        rbx += *((rax + 0x28));\n        r13 -= rsi;\n        r12 += *((rax + 0x30));\n        r8 += r13;\n        r13 = rcx;\n        r13 >>= 9;\n        rcx += r8;\n        rbx ^= r13;\n        r13 = *((rax + 8));\n        r13 -= rbx;\n        r9 += r13;\n        r13 = r8;\n        r13 <<= 9;\n        r8 += r9;\n        r12 ^= r13;\n        r13 = *((rax + 0x10));\n        r13 -= r12;\n        r10 += r13;\n        r13 = r9;\n        r13 >>= 0x17;\n        r9 += r10;\n        rcx ^= r13;\n        r13 = *((rax + 0x18));\n        r13 -= rcx;\n        r11 += r13;\n        r13 = r10;\n        r13 <<= 0xf;\n        r10 += r11;\n        r8 ^= r13;\n        r13 = r11;\n        rsi -= r8;\n        r13 >>= 0xe;\n        *(rax) = r8;\n        r9 ^= r13;\n        r13 = rsi;\n        r11 += rsi;\n        rbx -= r9;\n        r13 <<= 0x14;\n        *((rax + 8)) = r9;\n        r10 ^= r13;\n        r13 = rsi + rbx;\n        rsi = rbx;\n        r12 -= r10;\n        rsi >>= 0x11;\n        *((rax + 0x10)) = r10;\n        rax += 0x40;\n        r11 ^= rsi;\n        rsi = r12;\n        rbx += r12;\n        rcx -= r11;\n        rsi <<= 0xe;\n        *((rax - 0x28)) = r11;\n        rsi ^= r13;\n        r12 += rcx;\n        *((rax - 0x18)) = rbx;\n        *((rax - 0x20)) = rsi;\n        *((rax - 0x10)) = r12;\n        *((rax - 8)) = rcx;\n    } while (rbp != rax);\n    do {\n        rcx += *((rdx + 0x38));\n        rsi += *((rdx + 0x20));\n        r8 += *(rdx);\n        rax = rcx;\n        rbx += *((rdx + 0x28));\n        r8 -= rsi;\n        rax >>= 9;\n        r9 += *((rdx + 8));\n        r12 += *((rdx + 0x30));\n        rbx ^= rax;\n        rax = r8;\n        r10 += *((rdx + 0x10));\n        rcx += r8;\n        r9 -= rbx;\n        rax <<= 9;\n        r11 += *((rdx + 0x18));\n        r12 ^= rax;\n        rax = r9;\n        r8 += r9;\n        r10 -= r12;\n        rax >>= 0x17;\n        rcx ^= rax;\n        rax = r10;\n        r9 += r10;\n        r11 -= rcx;\n        rax <<= 0xf;\n        r8 ^= rax;\n        rax = r11;\n        r10 += r11;\n        rsi -= r8;\n        rax >>= 0xe;\n        *(rdx) = r8;\n        r9 ^= rax;\n        rax = rsi;\n        r11 += rsi;\n        rbx -= r9;\n        rax <<= 0x14;\n        *((rdx + 8)) = r9;\n        r10 ^= rax;\n        rax = rsi + rbx;\n        rsi = rbx;\n        r12 -= r10;\n        rsi >>= 0x11;\n        *((rdx + 0x10)) = r10;\n        rdx += 0x40;\n        r11 ^= rsi;\n        rsi = r12;\n        rbx += r12;\n        rcx -= r11;\n        rsi <<= 0xe;\n        *((rdx - 0x28)) = r11;\n        rsi ^= rax;\n        r12 += rcx;\n        *((rdx - 0x18)) = rbx;\n        *((rdx - 0x20)) = rsi;\n        *((rdx - 0x10)) = r12;\n        *((rdx - 8)) = rcx;\n    } while (rbp != rdx);\n    *((rdi + 0x810)) = 0;\n    *((rdi + 0x808)) = 0;\n    *((rdi + 0x800)) = 0;\n    r12 = rbx;\n    r13 = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040b9a0",
            "funcStartAddr": "0x40b9a0",
            "funcEndAddr": "0x40ba1b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40b9a0 */\n#include <stdint.h>\n \nuint64_t fcn_0040b9a0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    eax = fileno (rdi);\n    rdi = rbx;\n    if (eax < 0) {\n        goto label_1;\n    }\n    eax = freading ();\n    while (rax != -1) {\n        eax = fcn_00408ec0 (rbx);\n        if (eax == 0) {\n            goto label_2;\n        }\n        rax = errno_location ();\n        r12d = *(rax);\n        fclose (rbx);\n        if (r12d != 0) {\n            goto label_3;\n        }\nlabel_0:\n        return rax;\n        eax = fileno (rbx);\n        esi = 0;\n        edx = 1;\n        edi = eax;\n        rax = lseek ();\n    }\nlabel_2:\n    rdi = rbx;\nlabel_1:\n    void (*0x401d80)() ();\nlabel_3:\n    *(rbp) = r12d;\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040ba20",
            "funcStartAddr": "0x40ba20",
            "funcEndAddr": "0x40bab3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40ba20 */\n#include <stdint.h>\n \nuint64_t fcn_0040ba20 (int64_t arg2, const char * filename) {\n    rsi = arg2;\n    rdi = filename;\n    rax = fopen (rdi, rsi);\n    rbx = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    eax = fileno (rax);\n    while (rax != 0) {\nlabel_0:\n        rax = rbx;\n        return rax;\n        eax = fcn_0040bac0 (eax, rsi);\n        r12d = eax;\n        if (eax < 0) {\n            goto label_1;\n        }\n        eax = fcn_0040b9a0 (rbx);\n        if (eax != 0) {\n            goto label_2;\n        }\n        rsi = rbp;\n        edi = r12d;\n        rax = fdopen ();\n        rbx = rax;\n    }\nlabel_2:\n    rax = errno_location ();\n    ebp = *(rax);\n    rbx = rax;\n    close (r12d);\n    *(rbx) = ebp;\n    ebx = 0;\n    goto label_0;\nlabel_1:\n    rax = errno_location ();\n    ebx = 0;\n    r12d = *(rax);\n    fcn_0040b9a0 (rbx);\n    *(rbp) = r12d;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040bac0",
            "funcStartAddr": "0x40bac0",
            "funcEndAddr": "0x40bace",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40bac0 */\n#include <stdint.h>\n \nint32_t fcn_0040bac0 (int64_t arg1, int64_t arg4) {\n    rdi = arg1;\n    rcx = arg4;\n    edx = 3;\n    esi = 0;\n    eax = 0;\n    return void (*0x408d80)() ();\n}\n"
        },
        {
            "funcName": "fcn_0040bb40",
            "funcStartAddr": "0x40bb40",
            "funcEndAddr": "0x40bb58",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40bb40 */\n#include <stdint.h>\n \nint64_t fcn_0040bb40 (void) {\n    rax = 0x6112e8;\n    edx = 0;\n    if (rax != 0) {\n        rdx = *(rax);\n    }\n    esi = 0;\n    return cxa_atexit ();\n}\n"
        },
        {
            "funcName": "fcn_0040bb58",
            "funcStartAddr": "0x40bb58",
            "funcEndAddr": "0x40bb78",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ln.elf @ 0x40bb58 */\n#include <stdint.h>\n \nvoid fcn_0040bb58 (int64_t arg3) {\n    rdx = arg3;\n    ebx = segment.GNU_RELRO;\n    do {\n        rax = *(rbx);\n        if (rax == -1) {\n            goto label_0;\n        }\n        void (*rax)() ();\n        rbx -= 8;\n    } while (1);\nlabel_0:\n}\n"
        }
    ],
    "funcCount": 97
}