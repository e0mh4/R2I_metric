{
    "binaryInfo": {
        "isStripped": true,
        "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf"
    },
    "buildInfo": {
        "decompilerName": "radare2",
        "compilerName": "gcc",
        "compilerVersion": "9.4.0",
        "optLevel": "O"
    },
    "funcInfo": [
        {
            "funcName": "main",
            "funcStartAddr": "0x403050",
            "funcEndAddr": "0x403cd0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x403050 */\n#include <stdint.h>\n \nint32_t main (int32_t argc, char ** argv) {\n    int64_t var_8h;\n    int64_t var_10h;\n    signed int64_t var_18h;\n    uint32_t var_27h;\n    uint32_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    int64_t var_4ch;\n    uint32_t var_4fh;\n    int64_t var_50h;\n    uint32_t var_51h;\n    uint32_t var_55h;\n    int64_t var_58h;\n    int64_t var_5eh;\n    int64_t var_60h;\n    int64_t var_64h;\n    int64_t var_68h;\n    int64_t var_70h;\n    int64_t var_80h;\n    int64_t var_98h;\n    rdi = argc;\n    rsi = argv;\n    r15d = 0;\n    r14d = 0;\n    r13 = rsi;\n    r12d = 0;\n    ebp = 0;\n    ebx = edi;\n    *(0x00621560) = 0;\n    fcn_0040cfd0 (*(rsi));\n    setlocale (6, 0x41aa3f);\n    bindtextdomain (0x41716a, \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\");\n    textdomain (0x41716a, rsi);\n    edi = 0x40aa00;\n    fcn_00416fd0 ();\n    fcn_00405700 (rsp + 0x30);\n    esi = 0x100;\n    rax = 0x400000000;\n    *((rsp + 0x30)) = rax;\n    rax = 0x200000004;\n    *((rsp + 0x38)) = rax;\n    rax = 0x10100000180;\n    *((rsp + 0x64)) = 0;\n    *((rsp + 0x40)) = rax;\n    *((rsp + 0x48)) = si;\n    *((rsp + 0x4c)) = 0;\n    *((rsp + 0x50)) = 0x1000000;\n    *((rsp + 0x58)) = 0x1000000;\n    *((rsp + 0x60)) = 0;\n    *((rsp + 0x68)) = 0;\n    *((rsp + 0x70)) = 0;\n    *(0x00621558) = 0;\n    *(0x00621548) = 0;\n    *(0x00621541) = 0;\n    *(0x00621540) = 0;\n    umask (0);\n    *((rsp + 0x27)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    do {\nlabel_0:\n        r8d = 0;\n        ecx = 0x418380;\n        edx = \"bcCsDdg:m:o:pt:TvS:Z\";\n        rsi = r13;\n        edi = ebx;\n        eax = fcn_00412970 ();\n        if (eax == 0xffffffff) {\n            goto label_17;\n        }\n        if (eax == 0x64) {\n            goto label_18;\n        }\n        if (eax <= 0x64) {\n            goto label_19;\n        }\n        if (eax == 0x73) {\n            goto label_20;\n        }\n        if (eax > 0x73) {\n            goto label_21;\n        }\n        if (eax == 0x6d) {\n            goto label_22;\n        }\n        if (eax <= 0x6d) {\n            goto label_23;\n        }\n        if (eax != 0x6f) {\n            goto label_24;\n        }\n        rax = imp.__libc_start_main;\n        *(0x00621558) = rax;\n    } while (1);\nlabel_19:\n    if (eax == 0x53) {\n        goto label_25;\n    }\n    if (eax <= 0x53) {\n        goto label_26;\n    }\n    if (eax == 0x5a) {\n        goto label_27;\n    }\n    if (eax <= 0x5a) {\n        goto label_28;\n    }\n    if (eax == 0x62) {\n        rax = imp.__libc_start_main;\n        r15d = 1;\n        if (rax == 0) {\n            rax = *((rsp + 8));\n        }\n        *((rsp + 8)) = rax;\n        goto label_0;\nlabel_24:\n        if (eax != 0x70) {\n            goto label_1;\n        }\n        *((rsp + 0x4f)) = 1;\n        goto label_0;\n    }\n    if (eax == 0x63) {\n        goto label_0;\n    }\n    do {\nlabel_1:\n        eax = fcn_004046f0 (1);\nlabel_28:\n    } while (eax != 0x54);\n    r14d = 1;\n    goto label_0;\nlabel_26:\n    if (eax == 0xffffff7e) {\n        goto label_29;\n    }\n    if (eax <= 0xffffff7e) {\n        goto label_30;\n    }\n    if (eax != 0x43) {\n        goto label_31;\n    }\n    *(0x00621542) = 1;\n    goto label_0;\nlabel_23:\n    if (eax != 0x67) {\n        goto label_1;\n    }\n    rax = imp.__libc_start_main;\n    *(0x00621548) = rax;\n    goto label_0;\nlabel_21:\n    if (eax == 0x76) {\n        goto label_32;\n    }\n    if (eax <= 0x76) {\n        goto label_33;\n    }\n    if (eax != 0x80) {\n        goto label_34;\n    }\n    ecx = imp.__libc_start_main;\n    edx = 5;\n    esi = \"WARNING: ignoring --preserve-context; this kernel is not SELinux-enabled\";\n    if (ecx == 0) {\n        goto label_35;\n    }\n    *((rsp + 0x55)) = 1;\n    *(0x0061f44c) = 0;\n    goto label_0;\nlabel_31:\n    if (eax != 0x44) {\n        goto label_1;\n    }\n    goto label_0;\nlabel_30:\n    if (eax != 0xffffff7d) {\n        goto label_1;\n    }\n    r9d = 0;\n    r8d = \"David MacKenzie\";\n    eax = 0;\n    rcx = *(str.8.29);\n    fcn_00411160 (*(obj.stdout), \"install\", \"GNU coreutils\");\n    eax = exit (0);\nlabel_34:\n    if (eax != 0x81) {\n        goto label_1;\n    }\n    rax = fcn_00411510 (*(0x00621b80));\n    *((rsp + 0x27)) = 1;\n    *(0x0061f438) = rax;\n    goto label_0;\nlabel_33:\n    if (eax != 0x74) {\n        goto label_1;\n    }\n    if (r12 != 0) {\n        goto label_36;\n    }\n    r12 = imp.__libc_start_main;\n    goto label_0;\nlabel_20:\n    esi = 0;\n    *(0x00621541) = 1;\n    signal (0x11);\n    goto label_0;\nlabel_32:\n    *((rsp + 0x5e)) = 1;\n    goto label_0;\nlabel_18:\n    *(0x00621540) = 1;\n    goto label_0;\nlabel_27:\n    edx = imp.__libc_start_main;\n    rax = imp.__libc_start_main;\n    if (edx != 0) {\n        *(0x0061f44c) = 0;\n        if (rax == 0) {\n            goto label_37;\n        }\n        *((rsp + 0x28)) = rax;\n        goto label_0;\nlabel_25:\n        rax = imp.__libc_start_main;\n        r15d = 1;\n        *((rsp + 0x10)) = rax;\n        goto label_0;\nlabel_22:\n        rax = imp.__libc_start_main;\n        *((rsp + 0x18)) = rax;\n        goto label_0;\n    }\n    if (rax == 0) {\n        goto label_0;\n    }\n    edx = 5;\nlabel_35:\n    rax = dcgettext (0, \"warning: ignoring --context; it requires an SELinux-enabled kernel\");\n    eax = 0;\n    error (0, 0, rax);\n    goto label_0;\nlabel_17:\n    if (*(0x00621540) != 0) {\n        goto label_38;\n    }\n    if (r12 == 0) {\n        goto label_39;\n    }\n    rdx = rsp + 0x80;\n    rsi = r12;\n    edi = 1;\n    eax = xstat ();\n    if (bpl == 0) {\n        if (eax != 0) {\n            goto label_40;\n        }\n    }\n    if (eax != 0) {\n        goto label_39;\n    }\n    eax = *((rsp + 0x98));\n    eax &= 0xf000;\n    if (eax != 0x4000) {\n        goto label_41;\n    }\n    do {\nlabel_39:\n        eax = 0;\n        if (r15b != 0) {\n            goto label_42;\n        }\nlabel_10:\n        *((rsp + 0x30)) = eax;\n        fcn_0040a380 (*((rsp + 0x10)));\n        if (*((rsp + 0x55)) == 0) {\n            goto label_43;\n        }\n        if (*((rsp + 0x51)) != 0) {\n            goto label_44;\n        }\n        if (*((rsp + 0x28)) != 0) {\n            goto label_44;\n        }\nlabel_3:\n        rax = *(0x0061f4dc);\n        ebx -= eax;\n        rax = r13 + rax*8;\n        *((rsp + 8)) = rax;\n        eax = *(0x00621540);\n        eax ^= 1;\n        dl = (r12 == 0) ? 1 : 0;\n        eax &= edx;\n        edx = (int32_t) al;\n        if (edx >= ebx) {\n            goto label_45;\n        }\n        if (r14b == 0) {\n            goto label_46;\n        }\n        if (r12 != 0) {\n            goto label_47;\n        }\n        if (ebx > 2) {\n            goto label_48;\n        }\nlabel_2:\n        rax = *((rsp + 0x18));\n        if (rax != 0) {\n            rax = fcn_0040ca80 (rax);\n            r13 = rax;\n            if (rax == 0) {\n                goto label_49;\n            }\n            r8d = 0;\n            eax = fcn_0040ce50 (0, 0, 0, rax);\n            r8d = 0x61f440;\n            *(0x0061f448) = eax;\n            eax = fcn_0040ce50 (0, 1, 0, r13);\n            *(0x0061f444) = eax;\n            free (r13);\n        }\n        if (*((rsp + 0x27)) != 0) {\n            if (*(0x00621541) == 0) {\n                goto label_50;\n            }\n        }\nlabel_12:\n        if (*(0x00621542) != 0) {\n            if (*((rsp + 0x4f)) != 0) {\n                goto label_51;\n            }\n            edx = 5;\n            esi = \"options --compare (-C) and --strip are mutually exclusive\";\n            if (*(0x00621541) != 0) {\n                goto label_52;\n            }\n            if ((*(0x0061f448) & 0xffff0e00) != 0) {\n                goto label_53;\n            }\n        }\nlabel_11:\n        rdi = imp.__libc_start_main;\n        if (rdi == 0) {\n            goto label_54;\n        }\n        rax = getpwnam ();\n        if (rax == 0) {\n            goto label_55;\n        }\n        eax = *((rax + 0x10));\nlabel_13:\n        *(0x00621550) = eax;\n        endpwent ();\nlabel_9:\n        rdi = imp.__libc_start_main;\n        if (rdi == 0) {\n            goto label_56;\n        }\n        rax = getgrnam ();\n        if (rax == 0) {\n            goto label_57;\n        }\n        eax = *((rax + 0x10));\nlabel_14:\n        *(0x00621544) = eax;\n        endgrent ();\nlabel_8:\n        if (*(0x00621540) == 0) {\n            goto label_58;\n        }\n        eax = fcn_0040f910 (ebx, *((rsp + 8)), 0x403f50, rsp + 0x30);\n        *((rsp + 0x10)) = eax;\nlabel_4:\n        eax = *((rsp + 0x10));\n        return rax;\nlabel_38:\n        if (*(0x00621541) != 0) {\n            goto label_59;\n        }\n    } while (r12 == 0);\n    edx = 5;\n    rax = dcgettext (0, \"target directory not allowed when installing a directory\");\n    eax = 0;\n    al = error (1, 0, rax);\nlabel_46:\n    if (al == 0) {\n        goto label_2;\n    }\n    r12d = 0;\n    if (ebx == 1) {\n        goto label_2;\n    }\n    rcx = *((rsp + 8));\n    rax = (int64_t) ebx;\n    r13d = 1;\n    rax = rcx + rax*8 - 8;\n    r12 = *(rax);\n    r15 = rax;\n    rax = fcn_0040ad40 (r12);\n    rcx |= 0xffffffffffffffff;\n    rdi = rax;\n    rdx = rax;\n    eax = r14d;\n    __asm (\"repne scasb al, byte [rdi]\");\n    rax = rcx;\n    rax = ~rax;\n    rax--;\n    if (rax != 0) {\n        r13d = 0;\n        r13b = (*((rdx + rax - 1)) == 0x2f) ? 1 : 0;\n    }\n    rdx = rsp + 0x80;\n    rsi = r12;\n    edi = 1;\n    eax = xstat ();\n    if (eax == 0) {\n        goto label_60;\n    }\n    rax = errno_location ();\n    r14d = *(rax);\n    if (r14d == 0) {\n        goto label_60;\n    }\n    if (r14d != 2) {\n        goto label_61;\n    }\nlabel_16:\n    if (r13d != 0) {\n        goto label_62;\n    }\n    r12d = 0;\n    if (ebx == 2) {\n        goto label_2;\n    }\n    rax = fcn_0040ea00 (4, *(r15));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"target %s is not a directory\");\n    rcx = rbx;\n    eax = 0;\n    error (1, 0, rax);\nlabel_43:\n    if (*((rsp + 0x28)) == 0) {\n        goto label_3;\n    }\n    errno_location ();\n    *(rax) = 0x5f;\n    rbx = rax;\n    rax = fcn_0040ec50 (*((rsp + 0x28)));\n    edx = 5;\n    rax = dcgettext (0, \"failed to set default file creation context to %s\");\n    rcx = rbp;\n    eax = 0;\n    error (1, *(rbx), rax);\nlabel_58:\n    fcn_00409a90 ();\n    if (r12 == 0) {\n        goto label_63;\n    }\n    r13d = 0;\n    rax = fcn_004056a0 (rsp + 0x30);\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = ebx;\n    goto label_64;\nlabel_5:\n    ecx = 1;\n    al = fcn_00403db0 (r15, rax, rsp + 0x30);\n    if (al != 0) {\n        goto label_65;\n    }\nlabel_6:\n    free (rbx);\n    *((rsp + 0x10)) = 1;\nlabel_7:\n    r13++;\n    if (*((rsp + 0x18)) <= r13d) {\n        goto label_4;\n    }\nlabel_64:\n    rax = *((rsp + 8));\n    r14b = (r13d == 0) ? 1 : 0;\n    r15 = *((rax + r13*8));\n    r14d &= ebp;\n    rax = fcn_0040ad40 (r15);\n    edx = 0;\n    rdi = r12;\n    rsi = rax;\n    rax = fcn_0040b0c0 ();\n    rbx = rax;\n    if (r14b != 0) {\n        goto label_5;\n    }\nlabel_65:\n    al = fcn_00404090 (r15, rbx, rsp + 0x30);\n    if (al == 0) {\n        goto label_6;\n    }\n    free (rbx);\n    goto label_7;\nlabel_56:\n    *(0x00621544) = 0xffffffff;\n    goto label_8;\nlabel_54:\n    *(0x00621550) = 0xffffffff;\n    goto label_9;\nlabel_37:\n    *((rsp + 0x51)) = 1;\n    goto label_0;\nlabel_42:\n    edx = 5;\n    rax = dcgettext (0, \"backup type\");\n    rsi = *((rsp + 8));\n    fcn_0040a930 (rax);\n    goto label_10;\nlabel_63:\n    rax = *((rsp + 8));\n    r12 = *((rax + 8));\n    rbx = *(rax);\n    if (bpl != 0) {\n        ecx = 0;\n        al = fcn_00403db0 (rbx, r12, rsp + 0x30);\n        edx = 0;\n        if (al != 0) {\n            goto label_66;\n        }\nlabel_15:\n        eax = edx;\n        eax &= 1;\n        eax ^= 1;\n    } else {\n        eax = fcn_00404090 (rbx, r12, rsp + 0x30);\n        eax ^= 1;\n    }\n    eax = (int32_t) al;\n    *((rsp + 0x10)) = eax;\n    goto label_4;\nlabel_53:\n    edx = 5;\n    rax = dcgettext (0, \"the --compare (-C) option is ignored when you specify a mode with non-permission bits\");\n    eax = 0;\n    error (0, 0, rax);\n    goto label_11;\nlabel_50:\n    edx = 5;\n    rax = dcgettext (0, \"WARNING: ignoring --strip-program option as -s option was not specified\");\n    eax = 0;\n    error (0, 0, rax);\n    goto label_12;\nlabel_55:\n    eax = fcn_00411570 (*(0x00621558), 0, 0, rsp + 0x80, 0);\n    if (eax != 0) {\n        goto label_67;\n    }\n    rax = *((rsp + 0x80));\n    edx = 0xffffffff;\n    if (rax <= rdx) {\n        goto label_13;\n    }\nlabel_67:\n    rax = fcn_0040ec50 (*(0x00621558));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"invalid user %s\");\n    rcx = rbx;\n    eax = 0;\n    error (1, 0, rax);\nlabel_57:\n    eax = fcn_00411570 (*(0x00621548), 0, 0, rsp + 0x80, 0);\n    if (eax != 0) {\n        goto label_68;\n    }\n    rax = *((rsp + 0x80));\n    edx = 0xffffffff;\n    if (rax <= rdx) {\n        goto label_14;\n    }\nlabel_68:\n    rax = fcn_0040ec50 (*(0x00621548));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"invalid group %s\");\n    rcx = rbx;\n    eax = 0;\n    error (1, 0, rax);\nlabel_66:\n    al = fcn_00404090 (rbx, r12, rsp + 0x30);\n    edx = (int32_t) al;\n    goto label_15;\nlabel_60:\n    eax = *((rsp + 0x98));\n    eax &= 0xf000;\n    if (eax != 0x4000) {\n        r14d = 0;\n        goto label_16;\nlabel_29:\n        fcn_004046f0 (0);\n    }\n    ebx--;\n    rcx = *((rsp + 8));\n    rax = (int64_t) ebx;\n    r12 = *((rcx + rax*8));\n    goto label_2;\nlabel_36:\n    edx = 5;\n    rax = dcgettext (0, \"multiple target directories specified\");\n    eax = 0;\n    error (1, 0, rax);\nlabel_41:\n    rax = fcn_0040ea00 (4, r12);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"target %s is not a directory\");\n    rcx = rbx;\n    eax = 0;\n    error (1, 0, rax);\nlabel_40:\n    rax = fcn_0040ea00 (4, r12);\n    edx = 5;\n    rax = dcgettext (0, \"failed to access %s\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    error (1, *(rax), rbx);\nlabel_48:\n    rax = *((rsp + 8));\n    rax = fcn_0040ea00 (4, *((rax + 0x10)));\n    edx = 5;\n    rbx = rax;\n    do {\n        rax = dcgettext (0, \"extra operand %s\");\n        rcx = rbx;\n        eax = 0;\n        error (0, 0, rax);\n        goto label_1;\nlabel_47:\n        edx = 5;\n        rax = dcgettext (0, \"cannot combine --target-directory (-t) and --no-target-directory (-T)\");\n        eax = 0;\n        error (1, 0, rax);\nlabel_45:\n        ebx--;\n        if (ebx != 0) {\n            goto label_69;\n        }\n        rax = *((rsp + 8));\n        rax = fcn_0040ea00 (4, *(rax));\n        edx = 5;\n        esi = \"missing destination file operand after %s\";\n        rbx = rax;\n    } while (1);\nlabel_44:\n    edx = 5;\n    rax = dcgettext (0, \"cannot set target context and preserve it\");\n    eax = 0;\n    error (1, 0, rax);\nlabel_69:\n    edx = 5;\n    do {\nlabel_52:\n        rax = dcgettext (0, \"missing file operand\");\n        eax = 0;\n        error (0, 0, rax);\n        goto label_1;\nlabel_51:\n        edx = 5;\n        esi = \"options --compare (-C) and --preserve-timestamps are mutually exclusive\";\n    } while (1);\nlabel_49:\n    rax = fcn_0040ec50 (*((rsp + 0x18)));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"invalid mode %s\");\n    rcx = rbx;\n    eax = 0;\n    error (1, 0, rax);\nlabel_59:\n    edx = 5;\n    rax = dcgettext (0, \"the strip option may not be used when installing a directory\");\n    eax = 0;\n    error (1, 0, rax);\nlabel_61:\n    rax = fcn_0040ea00 (4, r12);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"failed to access %s\");\n    rcx = rbx;\n    eax = 0;\n    error (1, r14d, rax);\nlabel_62:\n    rax = fcn_0040ea00 (4, r12);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"target %s is not a directory\");\n    rcx = rbx;\n    eax = 0;\n    error (1, r14d, rax);\n}\n"
        },
        {
            "funcName": "fcn_00403cfb",
            "funcStartAddr": "0x403cfb",
            "funcEndAddr": "0x403d1a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x403cfb */\n#include <stdint.h>\n \nint32_t fcn_00403cfb (void) {\n    eax = 0x61f4e8;\n    if (rax != 0x61f4e8) {\n        eax = 0;\n        if (rax == 0) {\n            goto label_0;\n        }\n        edi = 0x61f4e8;\n        void (*rax)() ();\n    }\nlabel_0:\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00403d51",
            "funcStartAddr": "0x403d51",
            "funcEndAddr": "0x403da8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x403d51 */\n#include <stdint.h>\n \nint64_t fcn_00403d51 (int32_t argc, func fini, func init, func main, func rtld_fini, void * stack_end, char ** ubp_av) {\n    rsi = argc;\n    r8 = fini;\n    rcx = init;\n    rdi = main;\n    r9 = rtld_fini;\n    xmm0 = stack_end;\n    rdx = ubp_av;\n    if (*(0x0061f528) != 0) {\n        goto label_0;\n    }\n    r12d = section..dtors;\n    ebx = 0x61ee48;\n    rbx -= section..dtors;\n    rbx >>= 3;\n    rbx--;\n    do {\n        rax = imp.__libc_start_main;\n        if (rax >= rbx) {\n            goto label_1;\n        }\n        rax++;\n        *(0x0061f530) = rax;\n        uint64_t (*r12 + rax*8)() ();\n    } while (1);\nlabel_1:\n    fcn_00403cfb ();\n    *(0x0061f528) = 1;\n    return rax;\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00403da8",
            "funcStartAddr": "0x403da8",
            "funcEndAddr": "0x403e3b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x403da8 */\n#include <stdint.h>\n \nint64_t fcn_00403da8 (void) {\n    do {\n        esi = 0x61f4e8;\n        ecx = 2;\n        rsi -= 0x61f4e8;\n        rsi >>= 3;\n        rax = rsi;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rsi = rax;\n        if (rax != 0) {\n            eax = 0;\n            if (rax == 0) {\n                goto label_0;\n            }\n            edi = 0x61f4e8;\n            void (*rax)() ();\n        }\nlabel_0:\n        return rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00403db0",
            "funcStartAddr": "0x403db0",
            "funcEndAddr": "0x403f4a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x403db0 */\n#include <stdint.h>\n \nuint64_t fcn_00403db0 (uint32_t arg1, uint32_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rbx = rsi;\n    if (cl == 0) {\n        if (*(rdi) == 0x2f) {\n            goto label_4;\n        }\n    }\nlabel_0:\n    *((rsp + 8)) = 0;\n    rax = fcn_0040c5e0 (rbx, rsp + 8, 0x404020, rbp);\n    rax = errno_location ();\n    r12 = rax;\n    if (rbp != -1) {\n        goto label_5;\n    }\n    rax = fcn_0040ea00 (4, rbx);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"cannot create directory %s\");\n    rcx = rbx;\n    eax = 0;\n    error (0, *(r12), rax);\n    fcn_0040f770 (rsp + 8, 1, rdx);\n    eax = fcn_0040f8a0 (rsp + 8);\n    do {\n        eax = 0;\nlabel_2:\n        return rax;\nlabel_5:\n        eax = fcn_0040f770 (rsp + 8, 0, rdx);\n        r12d = *(r12);\n        fcn_0040f8a0 (rsp + 8);\n    } while (ebp > 0);\n    if (ebp != 0) {\n        goto label_6;\n    }\nlabel_1:\n    eax = 1;\nlabel_3:\n    return rax;\nlabel_4:\n    if (*(rsi) != 0x2f) {\n        goto label_0;\n    }\n    *((rsp + 8)) = 0;\n    fcn_0040f8a0 (rsp + 8);\n    rax = fcn_0040c5e0 (rbx, rsp + 8, 0x404020, rbp);\n    if (rax != -1) {\n        goto label_1;\n    }\n    rax = fcn_0040ea00 (4, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"cannot create directory %s\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    eax = error (0, *(rax), rbx);\n    eax = 0;\n    goto label_2;\nlabel_6:\n    rax = fcn_0040ea00 (4, rbx);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"cannot create directory %s\");\n    rcx = rbx;\n    eax = 0;\n    eax = error (0, r12d, rax);\n    eax = 0;\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_00403fc0",
            "funcStartAddr": "0x403fc0",
            "funcEndAddr": "0x404bcf",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x403fc0 */\n#include <stdint.h>\n \nuint64_t fcn_00403fc0 (int64_t arg_f0h, int64_t arg1) {\n    int64_t var_8h;\n    int64_t var_ch;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    int64_t var_50h;\n    int64_t var_60h;\n    int64_t var_70h;\n    int64_t var_80h;\n    int64_t var_90h;\n    int64_t var_a0h;\n    int64_t var_b0h;\n    int64_t var_c0h;\n    rdi = arg1;\n    rax = fcn_0040ea00 (4, rdi);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"creating directory %s\");\n    rdi = stdout;\n    rdx = rbx;\n    rsi = rax;\n    eax = 0;\n    rbx = rdi;\n    *((rsp + 0x30)) = rdx;\n    *((rsp + 0x38)) = rcx;\n    *((rsp + 0x40)) = r8;\n    *((rsp + 0x48)) = r9;\n    if (al != 0) {\n        *((rsp + 0x50)) = xmm0;\n        *((rsp + 0x60)) = xmm1;\n        *((rsp + 0x70)) = xmm2;\n        *((rsp + 0x80)) = xmm3;\n        *((rsp + 0x90)) = xmm4;\n        *((rsp + 0xa0)) = xmm5;\n        *((rsp + 0xb0)) = xmm6;\n        *((rsp + 0xc0)) = xmm7;\n    }\n    rdi = imp.__libc_start_main;\n    rsi = rbx;\n    fputs_unlocked ();\n    rcx = rbx;\n    edx = 2;\n    esi = 1;\n    edi = 0x4185c0;\n    fwrite_unlocked ();\n    rax = rsp + 0xf0;\n    *((rsp + 8)) = 0x10;\n    *((rsp + 0x10)) = rax;\n    rax = rsp + 0x20;\n    *((rsp + 0xc)) = 0x30;\n    *((rsp + 0x18)) = rax;\n    fcn_00412a70 (rbx, rbp, rsp + 8);\n    rax = *((rbx + 0x28));\n    if (rax >= *((rbx + 0x30))) {\n        goto label_0;\n    }\n    rdx = rax + 1;\n    *((rbx + 0x28)) = rdx;\n    *(rax) = 0xa;\n    do {\n        return rax;\nlabel_0:\n        esi = 0xa;\n        rdi = rbx;\n        overflow ();\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00404090",
            "funcStartAddr": "0x404090",
            "funcEndAddr": "0x4046eb",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x404090 */\n#include <stdint.h>\n \nuint64_t fcn_00404090 (int64_t arg1, int64_t arg2, uint32_t arg3) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_28h;\n    int64_t var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    int64_t var_70h;\n    int64_t var_a0h;\n    int64_t var_b8h;\n    uint32_t var_d0h;\n    int64_t var_130h;\n    int64_t var_138h;\n    int64_t var_140h;\n    int64_t var_148h;\n    uint32_t var_14ch;\n    uint32_t var_150h;\n    int64_t var_160h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r12 = rdi;\n    rbx = rsi;\n    if (*((rdx + 0x1f)) != 0) {\n        rsi = rdi;\n        rdx = rsp + 0x10;\n        edi = 1;\n        eax = xstat ();\n        if (eax != 0) {\n            goto label_13;\n        }\n    }\n    if (*(0x00621542) == 0) {\n        goto label_14;\n    }\n    r14d = *(0x0061f448);\n    if ((r14d & 0xffff0e00) != 0) {\n        goto label_14;\n    }\n    rdx = rsp + 0xa0;\n    rsi = r12;\n    edi = 1;\n    eax = lxstat ();\n    r13 = rsp + 0x130;\n    if (eax != 0) {\n        goto label_11;\n    }\n    rdx = r13;\n    rsi = rbx;\n    edi = 1;\n    eax = lxstat ();\n    if (eax != 0) {\n        goto label_11;\n    }\n    eax = *((rsp + 0xb8));\n    edx = *((rsp + 0xb8));\n    edx &= 0xf000;\n    if (edx != 0x8000) {\n        goto label_11;\n    }\n    edx = *((rsp + 0x148));\n    ecx = *((rsp + 0x148));\n    ecx &= 0xf000;\n    if (ecx != 0x8000) {\n        goto label_11;\n    }\n    eax |= edx;\n    if ((eax & 0xffff0e00) != 0) {\n        goto label_11;\n    }\n    rax = *((rsp + 0x160));\n    if (*((rsp + 0xd0)) != rax) {\n        goto label_11;\n    }\n    edx &= 0xfff;\n    if (r14d != edx) {\n        goto label_11;\n    }\n    eax = imp.__libc_start_main;\n    if (eax == 0xffffffff) {\n        goto label_15;\n    }\nlabel_10:\n    if (eax != *((rsp + 0x14c))) {\n        goto label_11;\n    }\n    eax = imp.__libc_start_main;\n    if (eax == 0xffffffff) {\n        goto label_16;\n    }\nlabel_12:\n    if (eax != *((rsp + 0x150))) {\n        goto label_11;\n    }\n    if (*(0x00621560) != 0) {\n        if (*((rbp + 0x25)) != 0) {\n            goto label_17;\n        }\n    }\n    eax = 0;\n    eax = open (r12, 0, rdx);\n    r14d = eax;\n    if (eax < 0) {\n        goto label_11;\n    }\n    eax = 0;\n    eax = open (rbx, 0, rdx);\n    r15d = eax;\n    if (eax >= 0) {\n        goto label_18;\n    }\n    goto label_19;\n    do {\n        *((rsp + 8)) = rcx;\n        rax = fcn_0040b1c0 (r15d, 0x620540, 0x1000);\n        rcx = *((rsp + 8));\n        if (rax != rcx) {\n            goto label_20;\n        }\n        eax = memcmp (0x61f540, 0x620540, rax);\n        if (eax != 0) {\n            goto label_20;\n        }\nlabel_18:\n        rax = fcn_0040b1c0 (r14d, 0x61f540, 0x1000);\n        rcx = rax;\n    } while (rax != 0);\n    close (r14d);\n    close (r15d);\n    do {\n        if (*(0x00621541) != 0) {\n            goto label_21;\n        }\n        if (*((rbp + 0x1f)) != 0) {\nlabel_3:\n            eax = *((rsp + 0x28));\n            eax &= 0xf000;\n            if (eax == 0x8000) {\n                goto label_1;\n            }\nlabel_2:\n            rax = *((rsp + 0x58));\n            *((rsp + 0x130)) = rax;\n            rax = *((rsp + 0x60));\n            *((rsp + 0x138)) = rax;\n            rax = *((rsp + 0x68));\n            *((rsp + 0x140)) = rax;\n            rax = *((rsp + 0x70));\n            *((rsp + 0x148)) = rax;\n            eax = fcn_00410aa0 (rbx, r13, rdx, rcx);\n            if (eax != 0) {\n                goto label_22;\n            }\n        }\nlabel_1:\n        esi = imp.__libc_start_main;\n        edx = imp.__libc_start_main;\n        eax = esi;\n        eax &= edx;\n        if (eax != 0xffffffff) {\n            rdi = rbx;\n            eax = lchown ();\n            if (eax != 0) {\n                goto label_23;\n            }\n        }\n        eax = chmod (rbx, *(0x0061f448));\n        if (eax != 0) {\n            goto label_24;\n        }\nlabel_4:\n        if (*(0x0061f44c) == 0) {\n            goto label_25;\n        }\n        if (*(0x00621560) != 1) {\n            goto label_25;\n        }\n        rdx = r13;\n        rsi = rbx;\n        edi = 1;\n        eax = lxstat ();\n        if (eax != 0) {\n            goto label_25;\n        }\n        if (*(0x0061f430) != 0) {\n            if (*(rbx) == 0x2f) {\n                goto label_26;\n            }\n        }\nlabel_8:\n        *(0x0061f430) = 0;\n        errno_location ();\n        *(rax) = 0x5f;\n        goto label_25;\nlabel_14:\n        r13 = rsp + 0x130;\nlabel_11:\n        r9d = 0;\n        al = fcn_00409810 (r12, rbx, 0, rbp, r13);\n    } while (al != 0);\n    do {\nlabel_0:\n        ebp = 0;\nlabel_25:\n        eax = ebp;\n        return rax;\nlabel_21:\n        eax = fork ();\n        if (eax != 0xffffffff) {\n            goto label_27;\n        }\n        edx = 5;\nlabel_7:\n        rax = dcgettext (0, \"fork system call failed\");\n        rax = errno_location ();\n        eax = 0;\n        error (0, *(rax), rbp);\nlabel_6:\n        eax = unlink (rbx);\n    } while (eax == 0);\n    rax = fcn_0040ea00 (4, rbx);\n    edx = 5;\n    rax = dcgettext (0, \"cannot unlink %s\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    error (1, *(rax), rbx);\nlabel_13:\n    rax = fcn_0040ea00 (4, r12);\n    edx = 5;\nlabel_5:\n    rax = dcgettext (0, \"cannot stat %s\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    eax = error (0, *(rax), rbx);\n    goto label_0;\nlabel_27:\n    if (eax == 0) {\n        goto label_28;\n    }\n    eax = waitpid (eax, r13, 0);\n    if (eax < 0) {\n        goto label_29;\n    }\n    eax = *((rsp + 0x130));\n    edx = (int32_t) ah;\n    eax &= 0x7f;\n    edx |= eax;\n    if (edx != 0) {\n        goto label_30;\n    }\n    if (*((rbp + 0x1f)) == 0) {\n        goto label_1;\n    }\n    if (*(0x00621541) != 0) {\n        goto label_2;\n    }\n    goto label_3;\nlabel_23:\n    rax = fcn_0040ea00 (4, rbx);\n    edx = 5;\n    r12 = rax;\n    do {\n        rax = dcgettext (0, \"cannot change ownership of %s\");\n        rax = errno_location ();\n        rcx = r12;\n        eax = 0;\n        ebp = 0;\n        error (0, *(rax), rbp);\n        goto label_4;\nlabel_24:\n        rax = fcn_0040ea00 (4, rbx);\n        edx = 5;\n        esi = \"cannot change permissions of %s\";\n        r12 = rax;\n    } while (1);\nlabel_22:\n    rax = fcn_0040ea00 (4, rbx);\n    edx = 5;\n    esi = \"cannot set timestamps for %s\";\n    goto label_5;\nlabel_30:\n    edx = 5;\n    rax = dcgettext (0, \"strip process terminated abnormally\");\n    eax = 0;\n    error (0, 0, rax);\n    goto label_6;\nlabel_29:\n    edx = 5;\n    esi = \"waiting for strip\";\n    goto label_7;\nlabel_26:\n    eax = *((rbx + 1));\n    r12 = rbx + 1;\n    if (al == 0x2f) {\n        goto label_31;\n    }\n    goto label_32;\n    do {\n        r12 = rdx;\nlabel_31:\n        eax = *((r12 + 1));\n        rdx = r12 + 1;\n    } while (al == 0x2f);\nlabel_9:\n    if (al == 0) {\n        goto label_8;\n    }\n    while (al != 0) {\n        if (al == 0x2f) {\n            goto label_33;\n        }\n        rdx++;\n        eax = *(rdx);\n    }\nlabel_33:\n    rbx = rdx;\n    rbx -= r12;\n    rax = malloc (rbx + 2);\n    r13 = rax;\n    if (rax == 0) {\n        goto label_8;\n    }\n    rdx = rbx;\n    rsi = r12;\n    rdi = rax;\n    stpncpy ();\n    edx = 0x2f;\n    *(rax) = dx;\n    free (r13);\n    goto label_8;\nlabel_32:\n    rdx = r12;\n    r12 = rbx;\n    goto label_9;\nlabel_15:\n    errno_location ();\n    *(rax) = 0;\n    r14 = rax;\n    eax = getuid ();\n    if (eax != 0xffffffff) {\n        goto label_10;\n    }\n    if (*(r14) == 0) {\n        goto label_10;\n    }\n    goto label_11;\nlabel_16:\n    errno_location ();\n    *(rax) = 0;\n    r14 = rax;\n    eax = getgid ();\n    if (eax != 0xffffffff) {\n        goto label_12;\n    }\n    if (*(r14) == 0) {\n        goto label_12;\n    }\n    goto label_11;\nlabel_19:\n    eax = close (r14d);\n    goto label_11;\nlabel_28:\n    rbp = *(0x0061f438);\n    ecx = 0;\n    rdx = rbx;\n    eax = 0;\n    rsi = rbp;\n    rdi = rbp;\n    execlp ();\n    rax = fcn_0040ea00 (4, rbp);\n    edx = 5;\n    rax = dcgettext (0, \"cannot run %s\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    error (1, *(rax), rbx);\nlabel_17:\n    errno_location ();\n    *(rax) = 0x5f;\n    goto label_11;\nlabel_20:\n    close (r14d);\n    close (r15d);\n    goto label_11;\n}\n"
        },
        {
            "funcName": "fcn_004046f0",
            "funcStartAddr": "0x4046f0",
            "funcEndAddr": "0x404add",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x4046f0 */\n#include <stdint.h>\n \nuint64_t fcn_004046f0 (int64_t arg1) {\n    char * var_8h;\n    int64_t var_10h;\n    char * var_18h;\n    char * var_20h;\n    char * var_28h;\n    char * var_30h;\n    char * var_38h;\n    char * var_40h;\n    char * var_48h;\n    char * var_50h;\n    char * var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    rdi = arg1;\n    edx = 5;\n    ebx = edi;\n    rbp = imp.__libc_start_main;\n    if (edi != 0) {\n        rax = dcgettext (0, \"Try '%s --help' for more information.\\n\");\n        rdi = stderr;\n        rcx = rbp;\n        esi = 1;\n        rdx = rax;\n        eax = 0;\n        fprintf_chk ();\nlabel_0:\n        exit (ebx);\n    }\n    rax = dcgettext (0, \"Usage: %s [OPTION]... [-T] SOURCE DEST\\n  or:  %s [OPTION]... SOURCE... DIRECTORY\\n  or:  %s [OPTION]... -t DIRECTORY SOURCE...\\n  or:  %s [OPTION]... -d DIRECTORY...\\n\");\n    r9 = rbp;\n    r8 = rbp;\n    rcx = rbp;\n    rdx = rbp;\n    rsi = rax;\n    edi = 1;\n    eax = 0;\n    printf_chk ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nThis install program copies files (often just compiled) into destination\\nlocations you choose.  If you want to download and install a ready-to-use\\npackage on a GNU/Linux system, you should instead be using a package manager\\nlike yum(1) or apt-get(1).\\n\\nIn the first three forms, copy SOURCE to DEST or multiple SOURCE(s) to\\nthe existing DIRECTORY, while setting permission modes and owner/group.\\nIn the 4th form, create all components of the given DIRECTORY(ies).\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nMandatory arguments to long options are mandatory for short options too.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --backup[=CONTROL]  make a backup of each existing destination file\\n  -b                  like --backup but does not accept an argument\\n  -c                  (ignored)\\n  -C, --compare       compare each pair of source and destination files, and\\n                        in some cases, do not modify the destination at all\\n  -d, --directory     treat all arguments as directory names; create all\\n                        components of the specified directories\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -D                  create all leading components of DEST except the last,\\n                        or all components of --target-directory,\\n                        then copy SOURCE to DEST\\n  -g, --group=GROUP   set group ownership, instead of process' current group\\n  -m, --mode=MODE     set permission mode (as in chmod), instead of rwxr-xr-x\\n  -o, --owner=OWNER   set ownership (super-user only)\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -p, --preserve-timestamps   apply access/modification times of SOURCE files\\n                        to corresponding destination files\\n  -s, --strip         strip symbol tables\\n      --strip-program=PROGRAM  program used to strip binaries\\n  -S, --suffix=SUFFIX  override the usual backup suffix\\n  -t, --target-directory=DIRECTORY  copy all SOURCE arguments into DIRECTORY\\n  -T, --no-target-directory  treat DEST as a normal file\\n  -v, --verbose       print the name of each directory as it is created\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --preserve-context  preserve SELinux security context\\n  -Z                      set SELinux security context of destination\\n                            file and each created directory to default type\\n      --context[=CTX]     like -Z, or if CTX is specified then set the\\n                            SELinux or SMACK security context to CTX\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --help     display this help and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --version  output version information and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\\nThe version control method may be selected via the --backup option or through\\nthe VERSION_CONTROL environment variable.  Here are the values:\\n\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  none, off       never make backups (even if --backup is given)\\n  numbered, t     make numbered backups\\n  existing, nil   numbered if numbered backups exist, simple otherwise\\n  simple, never   always make simple backups\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    *(rsp) = 0x4170f0;\n    rax = rsp;\n    *((rsp + 8)) = \"test invocation\";\n    *((rsp + 0x10)) = 0x41716a;\n    *((rsp + 0x18)) = \"Multi-call invocation\";\n    *((rsp + 0x20)) = \"sha224sum\";\n    *((rsp + 0x28)) = \"sha2 utilities\";\n    *((rsp + 0x30)) = \"sha256sum\";\n    *((rsp + 0x38)) = \"sha2 utilities\";\n    *((rsp + 0x40)) = \"sha384sum\";\n    *((rsp + 0x48)) = \"sha2 utilities\";\n    *((rsp + 0x50)) = \"sha512sum\";\n    *((rsp + 0x58)) = \"sha2 utilities\";\n    *((rsp + 0x60)) = 0;\n    *((rsp + 0x68)) = 0;\n    do {\n        rax += 0x10;\n        rdi = *(rax);\n        if (rdi == 0) {\n            goto label_2;\n        }\n        esi = \"install\";\n        ecx = 8;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        dl = (rdi > 0) ? 1 : 0;\n    } while (dl != 0);\nlabel_2:\n    rbp = *((rax + 8));\n    edx = 5;\n    esi = \"\\n%s online help: <%s>\\n\";\n    edi = 0;\n    if (rbp == 0) {\n        goto label_3;\n    }\n    rax = dcgettext (rdi, rsi);\n    edi = 1;\n    ecx = \"https://www.gnu.org/software/coreutils/\";\n    edx = \"GNU coreutils\";\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rax = setlocale (5, 0);\n    if (rax != 0) {\n        eax = strncmp (rax, 0x417174, 3);\n        if (eax != 0) {\n            goto label_4;\n        }\n    }\nlabel_1:\n    edx = 5;\n    r12d = 0x41710c;\n    rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n    ecx = \"install\";\n    edx = \"https://www.gnu.org/software/coreutils/\";\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    ecx = 0x41aa3f;\n    r12 = rcx;\n    while (1) {\n        edx = 5;\n        rax = dcgettext (0, \"or available locally via: info '(coreutils) %s%s'\\n\");\n        rcx = r12;\n        rdx = rbp;\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        goto label_0;\nlabel_3:\n        rax = dcgettext (rdi, rsi);\n        edi = 1;\n        ecx = \"https://www.gnu.org/software/coreutils/\";\n        edx = \"GNU coreutils\";\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        rax = setlocale (5, 0);\n        if (rax != 0) {\n            eax = strncmp (rax, 0x417174, 3);\n            if (eax != 0) {\n                goto label_5;\n            }\n        }\n        edx = 5;\n        rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n        ecx = \"install\";\n        edx = \"https://www.gnu.org/software/coreutils/\";\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        r12d = 0x41710c;\n        printf_chk ();\n    }\nlabel_5:\nlabel_4:\n    edx = 5;\n    rax = dcgettext (0, \"Report %s translation bugs to <https://translationproject.org/team/>\\n\");\n    edx = \"install\";\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00404bd0",
            "funcStartAddr": "0x404bd0",
            "funcEndAddr": "0x404c14",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x404bd0 */\n#include <stdint.h>\n \nint32_t fcn_00404bd0 (char * arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    esi &= 0xf000;\n    if (esi == 0xa000) {\n        eax = 1;\n        return eax;\n    }\n    rbx = rdi;\n    al = fcn_004112a0 ();\n    if (al != 0) {\n        eax = 1;\n        return eax;\n    }\n    rdi = rbx;\n    esi = 2;\n    eax = euidaccess ();\n    al = (eax == 0) ? 1 : 0;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00404c20",
            "funcStartAddr": "0x404c20",
            "funcEndAddr": "0x404cc2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x404c20 */\n#include <stdint.h>\n \nuint64_t fcn_00404c20 (size_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r12d = edi;\n    rbx = rsi;\n    if (*(0x00621980) == 0) {\n        goto label_1;\n    }\nlabel_0:\n    if (rbx != 0) {\n        goto label_2;\n    }\n    goto label_3;\n    do {\n        rbx -= rax;\n        if (rbx == 0) {\n            goto label_3;\n        }\nlabel_2:\n        rsi = imp.__libc_start_main;\n        edi = r12d;\n        if (*(0x0061f458) <= rbx) {\n            rbp = *(0x0061f458);\n        }\n        rax = fcn_0040b240 (rdi, rsi, rbp);\n    } while (rax == rbp);\n    eax = 0;\n    return rax;\nlabel_3:\n    eax = 1;\n    return rax;\nlabel_1:\n    rax = calloc (*(0x0061f458), 1);\n    if (rax != 0) {\n        *(0x00621980) = rax;\n        goto label_0;\n    }\n    *(0x00621980) = 0x621580;\n    *(0x0061f458) = 0x400;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00404cd0",
            "funcStartAddr": "0x404cd0",
            "funcEndAddr": "0x404d07",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x404cd0 */\n#include <stdint.h>\n \nuint64_t fcn_00404cd0 (int64_t arg2, uint32_t arg3) {\n    rsi = arg2;\n    rdx = arg3;\n    rcx = rdx;\n    rdx = rsi;\n    esi = 3;\n    eax = fallocate ();\n    ebx = eax;\n    while (eax != 0x5f) {\n        eax = ebx;\n        return eax;\n        rax = errno_location ();\n        eax = *(rax);\n        if (eax == 0x26) {\n            goto label_0;\n        }\n    }\nlabel_0:\n    ebx = 0;\n    eax = ebx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00404d10",
            "funcStartAddr": "0x404d10",
            "funcEndAddr": "0x404d2d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x404d10 */\n#include <stdint.h>\n \nint64_t fcn_00404d10 (size_t arg1, char * arg2, size_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rax = rsi;\n    esi = edx;\n    if (edi < 0) {\n        rdi = rax;\n        void (*0x402e50)() ();\n    }\n    return fchmod ();\n}\n"
        },
        {
            "funcName": "fcn_00404d30",
            "funcStartAddr": "0x404d30",
            "funcEndAddr": "0x404d70",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x404d30 */\n#include <stdint.h>\n \nint64_t fcn_00404d30 (void) {\n    errno_location ();\n    edx = 5;\n    *(rax) = 0x5f;\n    rbx = rax;\n    rax = dcgettext (0, \"failed to restore the default file creation context\");\n    eax = 0;\n    error (1, *(rbx), rax);\n}\n"
        },
        {
            "funcName": "fcn_00404d70",
            "funcStartAddr": "0x404d70",
            "funcEndAddr": "0x404e1e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x404d70 */\n#include <stdint.h>\n \nuint64_t fcn_00404d70 (int64_t arg1, char * arg2, size_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r12 = rdi;\n    rbx = rdx;\n    rax = fcn_0040e920 (1, 4, rsi);\n    rax = fcn_0040e920 (0, 4, r12);\n    rcx = rbp;\n    esi = \"%s -> %s\";\n    edi = 1;\n    rdx = rax;\n    eax = 0;\n    printf_chk ();\n    if (rbx != 0) {\n        rax = fcn_0040ea00 (4, rbx);\n        edx = 5;\n        rbx = rax;\n        rax = dcgettext (0, \" (backup: %s)\");\n        rdx = rbx;\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n    }\n    rdi = stdout;\n    rax = *((rdi + 0x28));\n    if (rax < *((rdi + 0x30))) {\n        rdx = rax + 1;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = 0xa;\n        return rax;\n    }\n    esi = 0xa;\n    return overflow ();\n}\n"
        },
        {
            "funcName": "fcn_00404e20",
            "funcStartAddr": "0x404e20",
            "funcEndAddr": "0x404f4c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x404e20 */\n#include <stdint.h>\n \nvoid fcn_00404e20 (int64_t arg1, char * arg2, int64_t arg3) {\n    int64_t var_4h;\n    int64_t var_dh;\n    int64_t var_eh;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r12 = rdi;\n    rbx = rsi;\n    al = fcn_00404bd0 (rsi, *(rdx));\n    if (al != 0) {\n        goto label_0;\n    }\n    fcn_0040af30 (*(rbp), rsp + 4);\n    ebp = *(rbp);\n    *((rsp + 0xe)) = 0;\n    rax = fcn_0040ea00 (4, rbx);\n    ebp &= 0xfff;\n    rbx = imp.__libc_start_main;\n    r13 = rax;\n    edx = 5;\n    if (*((r12 + 0x18)) == 0) {\n        if ((*((r12 + 0x14)) & 0xffff00) == 0) {\n            goto label_1;\n        }\n    }\n    rax = dcgettext (0, \"%s: replace %s, overriding mode %04lo (%s)? \");\n    rdx = rax;\n    do {\n        rdi = stderr;\n        r9 = rbp;\n        eax = 0;\n        rsi = rsp + 0xd;\n        r8 = r13;\n        rcx = rbx;\n        esi = 1;\n        fprintf_chk ();\n        fcn_004119a0 ();\n        return;\nlabel_0:\n        rax = fcn_0040ea00 (4, rbx);\n        rbx = imp.__libc_start_main;\n        edx = 5;\n        rax = dcgettext (0, \"%s: overwrite %s? \");\n        r8 = rbp;\n        rcx = rbx;\n        esi = 1;\n        rdi = stderr;\n        rdx = rax;\n        eax = 0;\n        fprintf_chk ();\n        fcn_004119a0 ();\n        return;\nlabel_1:\n        rax = dcgettext (0, \"%s: unwritable %s (mode %04lo, %s); try anyway? \");\n        rdx = rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00404f50",
            "funcStartAddr": "0x404f50",
            "funcEndAddr": "0x405053",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x404f50 */\n#include <stdint.h>\n \nuint64_t fcn_00404f50 (char * arg1, char * arg2, int64_t arg4) {\n    rdi = arg1;\n    rsi = arg2;\n    rcx = arg4;\n    r9d = (int32_t) dl;\n    r12 = rsi;\n    rsi = rdi;\n    rbx = rdi;\n    r8b = (r8b != 0) ? 1 : 0;\n    r8d = (int32_t) r8b;\n    r8d <<= 0xa;\n    eax = fcn_00409e90 (edx, rsi, 0xffffff9c, rsi, r8, r9);\n    if (eax >= 0) {\n        bl = (eax > 0) ? 1 : 0;\n        bl &= bpl;\n        if (bl == 0) {\n            ebx = 1;\n            eax = 1;\n            return eax;\n        }\n        rax = fcn_0040ea00 (4, r12);\n        edx = 5;\n        rax = dcgettext (0, \"removed %s\\n\");\n        rdx = rbp;\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        eax = ebx;\n        return rax;\n    }\n    rax = fcn_0040e920 (1, 4, rbx);\n    r13 = rax;\n    rax = fcn_0040e920 (0, 4, r12);\n    edx = 5;\n    rax = dcgettext (0, \"cannot create hard link %s to %s\");\n    rbx = rax;\n    rax = errno_location ();\n    r8 = r13;\n    rcx = rbp;\n    eax = 0;\n    ebx = 0;\n    error (0, *(rax), rbx);\n    eax = ebx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405060",
            "funcStartAddr": "0x405060",
            "funcEndAddr": "0x405117",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x405060 */\n#include <stdint.h>\n \nuint64_t fcn_00405060 (size_t arg1, char * arg2, int64_t arg3, int64_t arg4) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r13 = rsi;\n    rsi = rcx;\n    r12d = edx;\n    edx = 1;\n    rbx = rcx;\n    rax = lseek ();\n    if (rax < 0) {\n        goto label_0;\n    }\n    while (eax >= 0) {\n        eax = 1;\n        return rax;\n        rax -= rbx;\n        rdx = rbx;\n        eax = fcn_00404cd0 (ebp, rax);\n    }\n    rax = fcn_0040ea00 (4, r13);\n    edx = 5;\n    esi = \"error deallocating %s\";\n    goto label_1;\nlabel_0:\n    rax = fcn_0040ea00 (4, r13);\n    edx = 5;\nlabel_1:\n    rax = dcgettext (0, \"cannot lseek %s\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    eax = error (0, *(rax), rbx);\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405120",
            "funcStartAddr": "0x405120",
            "funcEndAddr": "0x405543",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x405120 */\n#include <stdint.h>\n \nint64_t fcn_00405120 (int64_t arg_b0h, int64_t arg_b8h, int64_t arg_c0h, int64_t arg_c8h, int64_t arg_d0h, char *** arg1, size_t arg2, uint32_t arg3, int64_t arg4, uint32_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    size_t var_18h;\n    int64_t var_1dh;\n    int64_t var_1eh;\n    int64_t var_1fh;\n    uint32_t buf;\n    size_t nbyte;\n    ssize_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    ssize_t var_50h;\n    uint32_t var_58h;\n    int64_t var_60h;\n    char *** fildes;\n    int64_t var_6ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rax = *((rsp + 0xb0));\n    rbx = *((rsp + 0xc8));\n    *((rsp + 0x1f)) = r9b;\n    r10 = *((rsp + 0xd0));\n    *((rsp + 0x40)) = rax;\n    rax = *((rsp + 0xb8));\n    *(r10) = 0;\n    *((rsp + 0x10)) = rax;\n    rax = *((rsp + 0xc0));\n    *((rsp + 0x48)) = rbx;\n    *((rsp + 0x28)) = rax;\n    *((rsp + 0x60)) = r10;\n    *(rbx) = 0;\n    if (rax == 0) {\n        goto label_8;\n    }\n    *((rsp + 0x58)) = r8;\n    if (r8 == 0) {\n        r8 = rcx;\n    }\n    *((rsp + 0x6c)) = r9d;\n    r15d = 0;\n    r13d = 0;\n    *((rsp + 0x38)) = rcx;\n    r14d = r15d;\n    r15 = r13;\n    *((rsp + 0x20)) = rdx;\n    *((rsp + 0x18)) = esi;\n    *((rsp + 0x68)) = edi;\n    *((rsp + 0x50)) = r8;\n    do {\nlabel_4:\n        rax = *((rsp + 0x38));\n        rdx = *((rsp + 0x28));\n        rsi = *((rsp + 0x20));\n        edi = *((rsp + 0x68));\n        if (rax <= rdx) {\n            rdx = rax;\n        }\n        rax = read (rdi, rsi, rdx);\n        *((rsp + 0x30)) = rax;\n        if (rax >= 0) {\n            goto label_9;\n        }\n        rax = errno_location ();\n    } while (*(rax) == 4);\n    rbx = rax;\n    r15d = 0;\n    rax = fcn_0040ea00 (4, *((rsp + 0x40)));\n    edx = 5;\n    rax = dcgettext (0, \"error reading %s\");\n    rcx = rbp;\n    eax = 0;\n    error (0, *(rbx), rax);\nlabel_2:\n    eax = r15d;\n    return rax;\n    if (*(rax) == 4) {\nlabel_9:\n        goto label_10;\n    }\n    rax = *((rsp + 0x48));\n    r13 = *((rsp + 0x20));\n    r12 = *((rsp + 0x30));\n    rbx = *((rsp + 0x50));\n    *(rax) += r12;\n    r11 = r13;\n    rsp + 0x1d = (*((rsp + 0x58)) != 0) ? 1 : 0;\nlabel_0:\n    if (rbx > r12) {\n        rbx = r12;\n    }\n    bpl = (rbx != 0) ? 1 : 0;\n    bpl &= *((rsp + 0x1d));\n    if (bpl == 0) {\n        goto label_11;\n    }\n    rsi = r13;\n    rdx = rbx;\n    do {\n        if (*(rsi) != 0) {\n            goto label_12;\n        }\n        rsi++;\n        rdx--;\n        if (rdx == 0) {\n            goto label_13;\n        }\n    } while ((dl & 0xf) != 0);\n    *((rsp + 8)) = r11;\n    eax = memcmp (r13, rsi, rdx);\n    r11 = *((rsp + 8));\n    bpl = (eax == 0) ? 1 : 0;\n    edx = ebp;\n    edx ^= r14d;\n    al = (eax != 0) ? 1 : 0;\nlabel_5:\n    r9b = (r15 != 0) ? 1 : 0;\n    r9d &= edx;\n    if (rbx != r12) {\n        goto label_14;\n    }\n    if (al == 0) {\n        goto label_14;\n    }\n    if (r9b == 0) {\n        goto label_15;\n    }\n    *((rsp + 8)) = 1;\n    ebp = 0;\nlabel_7:\n    *((rsp + 0x1e)) = r9b;\n    if (r14b != 0) {\n        goto label_16;\n    }\n    do {\n        rax = fcn_0040b240 (*((rsp + 0x18)), r11, r15);\n        r9d = *((rsp + 0x1e));\n        if (r15 != rax) {\n            goto label_17;\n        }\nlabel_1:\n        eax = *((rsp + 8));\n        if (eax == 0) {\n            goto label_18;\n        }\n        if (rbx == 0) {\n            goto label_19;\n        }\n        if (r9b == 0) {\n            goto label_20;\n        }\n        r15 = rbx;\n        r11 = r13;\n        r14d = ebp;\n        ebx = 0;\n        goto label_0;\nlabel_11:\n        eax = r14d;\n        dl = (rbx == r12) ? 1 : 0;\n        eax ^= 1;\n        if ((dl & al) == 0) {\n            if (rbx != 0) {\n                goto label_21;\n            }\n        }\nlabel_6:\n        r9d = 0;\n        r15 += rbx;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x1e)) = r9b;\n    } while (r14b == 0);\nlabel_16:\n    edx = *((rsp + 0x1f));\n    al = fcn_00405060 (*((rsp + 0x18)), *((rsp + 0x10)), rdx, r15);\n    r9d = *((rsp + 0x1e));\n    if (al != 0) {\n        goto label_1;\n    }\n    r15d = eax;\n    goto label_2;\nlabel_13:\n    r9d = r14d;\n    r9d ^= 1;\n    al = (r15 != 0) ? 1 : 0;\n    r9d &= eax;\nlabel_14:\n    if (r9b != 0) {\n        goto label_22;\n    }\nlabel_21:\n    rax = 0x7fffffffffffffff;\n    rax -= rbx;\n    if (rax < r15) {\n        goto label_23;\n    }\n    r15 += rbx;\n    r12 -= rbx;\n    r13 += rbx;\n    r14d = ebp;\nlabel_3:\n    if (r12 != 0) {\n        goto label_0;\n    }\n    goto label_24;\nlabel_18:\n    r11 = r13;\n    r12 -= rbx;\n    r14d = ebp;\n    r13 += rbx;\n    r15 = rbx;\n    goto label_3;\nlabel_19:\n    r15d = 0;\nlabel_24:\n    rcx = *((rsp + 0x30));\n    rax = *((rsp + 0x60));\n    *(rax) = bpl;\n    if (r13 != 0) {\n        r14d = ebp;\n        goto label_4;\nlabel_20:\n        r11 = r13;\n        r12 -= rbx;\n        r14d = ebp;\n        r13 += rbx;\n        r15d = 0;\n        goto label_3;\nlabel_23:\n        r15d = 0;\n        rax = fcn_0040ea00 (4, *((rsp + 0x40)));\n        edx = 5;\n        rbx = rax;\n        rax = dcgettext (0, \"overflow reading %s\");\n        rcx = rbx;\n        eax = 0;\n        error (0, 0, rax);\n        goto label_2;\nlabel_12:\n        eax = ebp;\n        edx = r14d;\n        ebp = 0;\n        goto label_5;\nlabel_17:\n        r15d = r14d;\n        rax = fcn_0040ea00 (4, *((rsp + 0x10)));\n        edx = 5;\n        rax = dcgettext (0, \"error writing %s\");\n        rbx = rax;\n        rax = errno_location ();\n        rcx = rbp;\n        eax = 0;\n        error (0, *(rax), rbx);\n        goto label_2;\n    }\n    r13 = r15;\n    do {\n        if (bpl != 0) {\n            edx = *((rsp + 0x6c));\n            rsi = *((rsp + 0x10));\n            rcx = r13;\n            edi = *((rsp + 0x18));\n            void (*0x405060)() ();\n        }\nlabel_8:\n        r15d = 1;\n        goto label_2;\nlabel_10:\n        r13 = r15;\n    } while (1);\nlabel_15:\n    ebp = 0;\n    goto label_6;\nlabel_22:\n    *((rsp + 8)) = 0;\n    goto label_7;\n}\n"
        },
        {
            "funcName": "fcn_00405550",
            "funcStartAddr": "0x405550",
            "funcEndAddr": "0x405618",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x405550 */\n#include <stdint.h>\n \nuint64_t fcn_00405550 (int64_t arg1, int64_t arg4, uint32_t arg5) {\n    rdi = arg1;\n    rcx = arg4;\n    r8 = arg5;\n    if (*((r8 + 0x25)) == 0) {\n        goto label_1;\n    }\n    r12 = rdi;\n    rax = errno_location ();\n    r13 = rax;\n    while (bl != 0) {\n        *(r13) = 0x5f;\n        rax = fcn_0040ea00 (4, r12);\n        edx = 5;\n        rbx = rax;\n        rax = dcgettext (0, \"failed to get security context of %s\");\n        rcx = rbx;\n        eax = 0;\n        error (0, *(r13), rax);\n        ebx = *((rbp + 0x26));\nlabel_0:\n        ebx ^= 1;\n        eax = ebx;\n        return rax;\n        ebx = *((rbp + 0x26));\n    }\n    *(rax) = 0x5f;\n    goto label_0;\nlabel_1:\n    ebx = ecx;\n    bl &= *((r8 + 0x21));\n    if (bl == 0) {\n        ebx = 1;\n        eax = 1;\n        return rax;\n    }\n    errno_location ();\n    *(rax) = 0x5f;\n    eax = ebx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405620",
            "funcStartAddr": "0x405620",
            "funcEndAddr": "0x405693",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x405620 */\n#include <stdint.h>\n \nuint64_t fcn_00405620 (char * arg1, int64_t arg4) {\n    rdi = arg1;\n    rcx = arg4;\n    r12 = rdi;\n    rbx = rcx;\n    rax = errno_location ();\n    while (*((rbx + 0x26)) != 0) {\n        *(rbp) = 0x5f;\n        rax = fcn_0040e920 (0, 4, r12);\n        edx = 5;\n        rbx = rax;\n        rax = dcgettext (0, \"failed to set the security context of %s\");\n        rcx = rbx;\n        eax = 0;\n        eax = error (0, *(rbp), rax);\n        eax = 0;\n        return rax;\n    }\n    *(rax) = 0x5f;\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004056a0",
            "funcStartAddr": "0x4056a0",
            "funcEndAddr": "0x4056c6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x4056a0 */\n#include <stdint.h>\n \nuint64_t fcn_004056a0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = fcn_0040bb50 (0x3d, 0, 0x40c510, 0x40c550, 0x40c5c0);\n    *((rbx + 0x38)) = rax;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405700",
            "funcStartAddr": "0x405700",
            "funcEndAddr": "0x405731",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x405700 */\n#include <stdint.h>\n \nuint32_t fcn_00405700 (int64_t arg1) {\n    rdi = arg1;\n    xmm0 = 0;\n    rbx = rdi;\n    *((rdi + 0x40)) = 0;\n    __asm (\"movups xmmword [rdi], xmm0\");\n    __asm (\"movups xmmword [rdi + 0x10], xmm0\");\n    __asm (\"movups xmmword [rdi + 0x20], xmm0\");\n    __asm (\"movups xmmword [rdi + 0x30], xmm0\");\n    eax = geteuid ();\n    al = (eax == 0) ? 1 : 0;\n    *((rbx + 0x1b)) = al;\n    *((rbx + 0x1a)) = al;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00405740",
            "funcStartAddr": "0x405740",
            "funcEndAddr": "0x405764",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x405740 */\n#include <stdint.h>\n \nuint64_t fcn_00405740 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = errno_location ();\n    edx = *(rax);\n    al = (edx == 1) ? 1 : 0;\n    dl = (edx == 0x16) ? 1 : 0;\n    al |= dl;\n    if (al != 0) {\n        eax = *((rbx + 0x1a));\n        eax ^= 1;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405770",
            "funcStartAddr": "0x405770",
            "funcEndAddr": "0x40595b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x405770 */\n#include <stdint.h>\n \nint64_t fcn_00405770 (uint32_t arg1, char * arg2, size_t arg3, int64_t arg4, int64_t arg6) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r9 = arg6;\n    r12 = rsi;\n    ebx = edx;\n    r14d = *((rcx + 0x1c));\n    r13d = *((rcx + 0x20));\n    if (r8b != 0) {\n        goto label_5;\n    }\n    rax = 0xff0000000000ff;\n    if ((*((rdi + 0x18)) & rax) == 0) {\n        goto label_6;\n    }\n    esi = *((r9 + 0x18));\n    edx = *((rcx + 0x18));\nlabel_0:\n    eax = *((rcx + 0x18));\n    eax = ~eax;\n    ah |= 0xe;\n    eax &= esi;\n    if ((eax & 0xfff) == 0) {\n        goto label_5;\n    }\n    edx &= esi;\n    edx &= 0x1c0;\n    eax = fcn_0040d0b0 (r12, ebx, rdx);\n    if (eax != 0) {\n        goto label_7;\n    }\n    do {\nlabel_5:\n        edx = r13d;\n        esi = r14d;\n        if (ebx == 0xffffffff) {\n            goto label_8;\n        }\n        edi = ebx;\n        eax = fchown ();\n        if (eax == 0) {\n            goto label_9;\n        }\n        rax = errno_location ();\n        r14d = *(rax);\n        r15 = rax;\n        if (r14d == 1) {\n            goto label_10;\n        }\n        if (r14d == 0x16) {\n            goto label_10;\n        }\nlabel_2:\n        al = fcn_00405740 (rbp);\n        edx = 0;\n        if (al == 0) {\n            goto label_11;\n        }\nlabel_1:\n        eax = edx;\n        return rax;\nlabel_6:\n    } while (*((rdi + 0x2b)) == 0);\n    esi = *((r9 + 0x18));\n    edx = *((rdi + 0x10));\n    goto label_0;\n    do {\nlabel_9:\n        edx = 1;\n        goto label_1;\nlabel_8:\n        rdi = r12;\n        eax = lchown ();\n    } while (eax == 0);\n    rax = errno_location ();\n    ebx = *(rax);\n    r14 = rax;\n    if (ebx == 1) {\n        goto label_12;\n    }\n    if (ebx != 0x16) {\n        goto label_2;\n    }\nlabel_12:\n    edx = r13d;\n    esi = 0xffffffff;\n    rdi = r12;\n    lchown ();\n    *(r14) = ebx;\n    goto label_2;\nlabel_11:\n    rax = fcn_0040ea00 (4, r12);\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"failed to preserve ownership for %s\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = r12;\n    eax = 0;\n    error (0, *(rax), rbx);\n    do {\nlabel_4:\n        edx = *((rbp + 0x24));\n        edx = -edx;\n        goto label_1;\nlabel_10:\n        edx = r13d;\n        esi = 0xffffffff;\n        edi = ebx;\n        fchown ();\n        *(r15) = r14d;\n        goto label_2;\nlabel_7:\n        rax = errno_location ();\n        rbx = rax;\n        eax = *(rax);\n        if (eax == 1) {\n            goto label_13;\n        }\n        if (eax == 0x16) {\n            goto label_13;\n        }\nlabel_3:\n        rax = fcn_0040ea00 (4, r12);\n        edx = 5;\n        r12 = rax;\n        rax = dcgettext (0, \"clearing permissions for %s\");\n        rcx = r12;\n        eax = 0;\n        error (0, *(rbx), rax);\n    } while (1);\nlabel_13:\n    if (*((rbp + 0x1b)) != 0) {\n        goto label_3;\n    }\n    goto label_4;\n}\n"
        },
        {
            "funcName": "fcn_00405960",
            "funcStartAddr": "0x405960",
            "funcEndAddr": "0x40598a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x405960 */\n#include <stdint.h>\n \nint32_t fcn_00405960 (void) {\n    ebx = *(0x0061f450);\n    if (ebx != 0xffffffff) {\n        eax = ebx;\n        return eax;\n    }\n    eax = umask (0);\n    ebx = eax;\n    edi = eax;\n    *(0x0061f450) = eax;\n    umask (edi);\n    eax = ebx;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00405990",
            "funcStartAddr": "0x405990",
            "funcEndAddr": "0x40980c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x405990 */\n#include <stdint.h>\n \nuint64_t fcn_00405990 (int64_t arg_10h, int64_t arg_18h, int64_t arg_20h, uint32_t arg_28h, int64_t arg1, char * arg2, int64_t arg3, uint32_t arg4, size_t arg5, uint32_t arg6) {\n    uint32_t var_368h;\n    uint32_t var_360h;\n    uint32_t var_358h;\n    int64_t var_354h;\n    uint32_t var_350h;\n    size_t var_348h;\n    int64_t var_344h;\n    uint32_t var_340h;\n    uint32_t var_338h;\n    uint32_t ptr;\n    uint32_t var_328h;\n    uint32_t var_323h;\n    uint32_t var_322h;\n    int64_t var_321h;\n    func * rtld_fini;\n    func * fini;\n    char * var_310h;\n    size_t s1;\n    size_t s2;\n    uint32_t var_2f8h;\n    char * var_2f0h;\n    size_t fd;\n    char ** format;\n    func * init;\n    size_t src;\n    char *** var_2c8h;\n    uint32_t var_2c4h;\n    char *** errname;\n    char * newpath;\n    int64_t var_2a9h;\n    uint32_t var_2a8h;\n    uint32_t var_2a0h;\n    int64_t var_298h;\n    int64_t var_290h;\n    uint32_t var_288h;\n    uint32_t var_280h;\n    uint32_t var_27fh;\n    void * var_278h;\n    uint32_t var_270h;\n    uint32_t var_268h;\n    uint32_t var_260h;\n    int64_t var_258h;\n    uint32_t var_254h;\n    uint32_t var_250h;\n    int64_t var_248h;\n    int64_t var_240h;\n    int64_t var_228h;\n    int64_t var_220h;\n    int64_t var_218h;\n    int64_t var_210h;\n    uint32_t var_1e0h;\n    uint32_t var_1d8h;\n    uint32_t var_1d0h;\n    int64_t var_1c8h;\n    int64_t var_1b0h;\n    uint32_t var_150h;\n    uint32_t var_148h;\n    int64_t var_140h;\n    int64_t var_138h;\n    int64_t var_130h;\n    int64_t var_120h;\n    int64_t var_118h;\n    uint32_t var_110h;\n    int64_t var_100h;\n    int64_t var_f0h;\n    int64_t var_e0h;\n    int64_t var_d0h;\n    uint32_t var_c0h;\n    int64_t var_bch;\n    uint32_t var_b8h;\n    int64_t var_b0h;\n    int64_t var_a8h;\n    int64_t var_a4h;\n    int64_t var_a0h;\n    int64_t var_90h;\n    int64_t var_88h;\n    int64_t var_80h;\n    int64_t var_70h;\n    int64_t var_60h;\n    int64_t var_50h;\n    int64_t var_40h;\n    int64_t var_fh;\n    void * var_fh_2;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\nlabel_17:\n    r14 = rdi;\n    r13 = r9;\n    r12d = edx;\n    *((rbp - 0x2b8)) = rsi;\n    rbp - 0x2c0 = (*((rbp + 0x28)) != 0) ? 1 : 0;\n    ebx = *((rbp + 0x10));\n    *((rbp - 0x2f8)) = rcx;\n    eax = *((rbp - 0x2c0));\n    *((rbp - 0x2e8)) = r8;\n    if (*((r9 + 0x18)) != 0) {\n        if (al == 0) {\n            goto label_101;\n        }\n        rax = *((rbp + 0x28));\n        *(rax) = 0;\n    }\nlabel_101:\n    rax = *((rbp + 0x20));\n    rsi = r14;\n    edi = 1;\n    *(rax) = 0;\n    rax = rbp - 0x270;\n    *((rbp - 0x2d8)) = rax;\n    rdx = rax;\n    if (*((r13 + 4)) == 2) {\n        goto label_102;\n    }\n    eax = xstat ();\n    rsi = r14;\n    r15b = (eax != 0) ? 1 : 0;\n    if (r15b != 0) {\n        void (*0x406237)() ();\n    }\nlabel_2:\n    eax = *((rbp - 0x258));\n    *((rbp - 0x2c8)) = eax;\n    eax &= 0xf000;\n    *((rbp - 0x2c4)) = eax;\n    if (eax == 0x4000) {\n        goto label_103;\n    }\n    if (bl != 0) {\n        r10d = *(r13);\n        rdi = *((r13 + 0x40));\n        if (r10d == 0) {\n            goto label_104;\n        }\n        fcn_0040ae60 (rdi, r14, *((rbp - 0x2d8)));\n    }\nlabel_3:\n    *((rbp - 0x2e0)) = 1;\n    eax = *((r13 + 4));\n    if (eax != 4) {\n        al = (eax == 3) ? 1 : 0;\n        eax = (int32_t) al;\n        eax &= ebx;\n        *((rbp - 0x2e0)) = eax;\n    }\n    if (r12b == 0) {\n        eax = *((rbp - 0x2c4));\n        if (eax != 0x8000) {\n            if (*((r13 + 0x14)) == 0) {\n                goto label_105;\n            }\n            if (eax == 0x4000) {\n                goto label_105;\n            }\n            if (eax == 0xa000) {\n                goto label_105;\n            }\n        }\n        if (*((r13 + 0x18)) != 0) {\n            goto label_105;\n        }\n        if (*((r13 + 0x2c)) != 0) {\n            goto label_105;\n        }\n        if (*((r13 + 0x17)) != 0) {\n            goto label_105;\n        }\n        r9d = *(r13);\n        if (r9d != 0) {\n            goto label_105;\n        }\n        if (*((r13 + 0x15)) != 0) {\n            goto label_105;\n        }\n        rax = rbp - 0x1e0;\n        rsi = *((rbp - 0x2b8));\n        edi = 1;\n        rdx = rax;\n        *((rbp - 0x2f0)) = rax;\n        eax = xstat ();\n        r8d = 1;\n        rbp - 0x2d0 = (eax != 0) ? 1 : 0;\n        if (*((rbp - 0x2d0)) != 0) {\n            goto label_106;\n        }\nlabel_8:\n        rax = *((rbp - 0x1d8));\n        if (*((rbp - 0x268)) == rax) {\n            goto label_107;\n        }\nlabel_26:\n        if (*((r13 + 4)) == 2) {\n            goto label_108;\n        }\nlabel_23:\n        if (*((rbp - 0x2c4)) == 0x4000) {\n            goto label_109;\n        }\n        if (*((r13 + 0x2d)) != 0) {\n            goto label_110;\n        }\nlabel_21:\n        eax = *((r13 + 8));\n        if (*((r13 + 0x18)) != 0) {\n            goto label_111;\n        }\n        if (eax == 2) {\n            goto label_22;\n        }\n        if (eax == 3) {\n            goto label_112;\n        }\nlabel_28:\n        if (*((rbp - 0x2d0)) != 0) {\n            goto label_22;\n        }\n        eax = *((rbp - 0x1c8));\n        ecx = r8d;\n        ecx ^= 1;\n        edx = eax;\n        edx &= 0xf000;\n        if (edx == 0x4000) {\n            goto label_113;\n        }\n        if (*((rbp - 0x2c4)) == 0x4000) {\n            goto label_114;\n        }\n        r12d = *(r13);\n        if (bl != 0) {\nlabel_44:\n            if (r12d == 3) {\n                goto label_115;\n            }\n            *((rbp - 0x300)) = cl;\n            al = fcn_0040aef0 (*((r13 + 0x38)), *((rbp - 0x2b8)), *((rbp - 0x2f0)));\n            ecx = *((rbp - 0x300));\n            if (al != 0) {\n                goto label_116;\n            }\n            if (*((rbp - 0x2c4)) != 0x4000) {\n                eax = *((rbp - 0x1c8));\n                edx = *((rbp - 0x1c8));\n                edx &= 0xf000;\n                if (edx == 0x4000) {\n                    goto label_117;\n                }\n            }\nlabel_41:\n            r12d = *(r13);\n        }\n        eax = *((r13 + 0x18));\n        if (al != 0) {\n            goto label_118;\n        }\n        if (r12d != 0) {\n            goto label_119;\n        }\nlabel_57:\n        edx = *((rbp - 0x1c8));\n        *((rbp - 0x300)) = 0;\n        edx &= 0xf000;\n        dl = (edx == 0x4000) ? 1 : 0;\n        dl |= al;\n        if (dl != 0) {\n            goto label_42;\n        }\n        eax = *((r13 + 0x15));\n        *((rbp - 0x2d0)) = al;\n        if (al == 0) {\n            if (*((r13 + 0x22)) == 0) {\n                goto label_120;\n            }\n            if (*((rbp - 0x1d0)) <= 1) {\n                goto label_120;\n            }\n        }\nlabel_56:\n        *((rbp - 0x2d0)) = cl;\n        eax = unlink (*((rbp - 0x2b8)));\n        ecx = *((rbp - 0x2d0));\n        if (eax != 0) {\n            rax = errno_location ();\n            ecx = *((rbp - 0x2d0));\n            r12 = rax;\n            if (*(rax) != 2) {\n                goto label_121;\n            }\n        }\n        eax = *((r13 + 0x2e));\n        *((rbp - 0x2d0)) = al;\n        if (al != 0) {\n            goto label_122;\n        }\n        if (bl == 0) {\n            goto label_123;\n        }\n        *((rbp - 0x2d0)) = bl;\n        *((rbp - 0x300)) = 0;\n        if (*((r13 + 0x38)) == 0) {\n            goto label_124;\n        }\nlabel_0:\n        if (*((r13 + 0x18)) != 0) {\n            goto label_125;\n        }\n        esi = *(r13);\n        if (esi != 0) {\n            goto label_126;\n        }\n        rdx = rbp - 0x1e0;\n        if (cl == 0) {\n            goto label_127;\n        }\nlabel_31:\n        eax = *((rdx + 0x18));\n        eax &= 0xf000;\n        if (eax != 0xa000) {\n            goto label_1;\n        }\n        al = fcn_0040aef0 (*((r13 + 0x38)), *((rbp - 0x2b8)), rdx);\n        if (al == 0) {\n            goto label_1;\n        }\n        rax = fcn_0040e920 (1, 4, *((rbp - 0x2b8)));\n        r12 = rax;\n        rax = fcn_0040e920 (0, 4, r14);\n        edx = 5;\n        rbx = rax;\nlabel_24:\n        rax = dcgettext (0, \"will not copy %s through just-created symlink %s\");\n        r8 = r12;\n        rcx = rbx;\nlabel_83:\n        eax = 0;\n        error (0, 0, rax);\n    }\nlabel_9:\n    *((rbp - 0x2d0)) = 1;\n    ecx = 0;\n    *((rbp - 0x300)) = 0;\nlabel_42:\n    if (bl != 0) {\n        goto label_128;\n    }\nlabel_1:\n    if (*((r13 + 0x2e)) == 0) {\n        goto label_124;\n    }\n    if (*((r13 + 0x18)) != 0) {\n        goto label_129;\n    }\nlabel_15:\n    if (*((rbp - 0x2c4)) == 0x4000) {\n        goto label_130;\n    }\n    fcn_00404d70 (r14, *((rbp - 0x2b8)), *((rbp - 0x300)));\nlabel_4:\n    if (*((r13 + 0x18)) != 0) {\n        goto label_131;\n    }\nlabel_16:\n    if (*((r13 + 0x22)) != 0) {\n        goto label_7;\n    }\n    eax = *((rbp - 0x2d0));\n    *((rbp - 0x2f0)) = 0;\n    *((rbp - 0x2c0)) = eax;\nlabel_5:\n    r12d = *((rbp - 0x2c8));\n    r12d &= 0xfff;\n    if (*((r13 + 0x2b)) != 0) {\n        r12d = *((r13 + 0x10));\n        r12d &= 0xfff;\n    }\n    if (*((r13 + 0x1d)) != 0) {\n        goto label_132;\n    }\n    if (*((rbp - 0x2c4)) == 0x4000) {\n        goto label_133;\n    }\n    ecx = *((rbp - 0x2c0));\n    r8 = r13;\n    al = fcn_00405550 (r14, *((rbp - 0x2b8)), *((rbp - 0x2c8)));\n    *((rbp - 0x308)) = 0;\n    if (al == 0) {\n        void (*0x406271)() ();\n    }\nlabel_13:\n    eax = *((r13 + 0x2c));\n    *((rbp - 0x2e8)) = al;\n    if (al == 0) {\n        goto label_134;\n    }\n    if (*(r14) != 0x2f) {\n        rdi = *((rbp - 0x2b8));\n        rax = fcn_0040ac60 ();\n        esi = 0x418d7b;\n        ecx = 2;\n        rdi = rax;\n        r12 = rax;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        al = (*(r14) > 0x2f) ? 1 : 0;\n        if (al != 0) {\n            goto label_135;\n        }\nlabel_33:\n        free (r12);\n    }\n    ecx = *((r13 + 0x16));\n    eax = fcn_00409fd0 (r14, 0xffffff9c, *((rbp - 0x2b8)), rcx);\n    if (eax < 0) {\n        goto label_136;\n    }\n    eax = *((rbp - 0x2e8));\n    *((rbp - 0x321)) = 0;\n    r8d = 0;\n    *((rbp - 0x2e0)) = al;\nlabel_128:\n    if (*((r13 + 0x38)) != 0) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_102:\n    eax = lxstat ();\n    rsi = r14;\n    r15b = (eax != 0) ? 1 : 0;\n    if (r15b == 0) {\n        goto label_2;\n    }\nlabel_103:\n    if (*((r13 + 0x2a)) == 0) {\n        goto label_137;\n    }\n    if (bl == 0) {\n        goto label_3;\n    }\n    goto label_138;\nlabel_125:\n    if (*((r13 + 0x2e)) != 0) {\n        goto label_129;\n    }\nlabel_124:\n    if (*((r13 + 0x2a)) == 0) {\n        goto label_4;\n    }\n    if (*((rbp - 0x2c4)) != 0x4000) {\n        goto label_4;\n    }\nlabel_6:\n    rdx = *((rbp - 0x270));\n    rdi = *((rbp - 0x268));\n    if (bl == 0) {\n        goto label_139;\n    }\n    rax = fcn_00409a10 (*((rbp - 0x2b8)), rdi, rdx);\n    *((rbp - 0x2f0)) = rax;\nlabel_19:\n    if (*((rbp - 0x2f0)) == 0) {\n        goto label_10;\n    }\nlabel_11:\n    al = fcn_0040ef80 (r14, *((rbp - 0x2f0)));\n    if (al != 0) {\n        goto label_140;\n    }\n    al = fcn_0040ef80 (*((rbp - 0x2b8)), *((rbp - 0x2f0)));\n    if (al != 0) {\n        goto label_141;\n    }\n    eax = *((r13 + 4));\n    if (eax == 4) {\n        goto label_10;\n    }\n    if (eax == 3) {\n        if (bl != 0) {\n            goto label_10;\n        }\n    }\n    rax = fcn_0040e920 (1, 4, *((rbp - 0x2f0)));\n    r12 = rax;\n    rax = fcn_0040e920 (0, 4, *((rbp - 0x2b8)));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"will not create hard link %s to directory %s\");\n    r8 = r12;\n    rcx = rbx;\n    eax = 0;\n    rax = error (0, 0, rax);\nlabel_12:\n    if (*((r13 + 0x25)) != 0) {\n        void (*0x406e0d)() ();\n    }\nlabel_7:\n    if (*((r13 + 0x17)) == 0) {\n        goto label_142;\n    }\n    *((rbp - 0x2f0)) = 0;\nlabel_10:\n    if (*((r13 + 0x18)) != 0) {\n        goto label_143;\n    }\n    eax = *((rbp - 0x2d0));\n    *((rbp - 0x2c0)) = eax;\n    goto label_5;\nlabel_129:\n    if (*((rbp - 0x2c4)) != 0x4000) {\n        goto label_131;\n    }\n    if (*((r13 + 0x2a)) != 0) {\n        goto label_6;\n    }\nlabel_131:\n    if (*((rbp - 0x260)) == 1) {\n        goto label_144;\n    }\n    if (*((r13 + 0x22)) != 0) {\n        goto label_7;\n    }\n    *((rbp - 0x2f0)) = 0;\nlabel_143:\n    eax = rename (r14, *((rbp - 0x2b8)));\n    if (eax == 0) {\n        goto label_145;\n    }\n    rax = errno_location ();\n    r12 = rax;\n    eax = *(rax);\n    if (eax == 0x16) {\n        goto label_146;\n    }\n    if (eax != 0x12) {\n        goto label_147;\n    }\n    rdi = *((rbp - 0x2b8));\n    if (*((rbp - 0x2c4)) == 0x4000) {\n        goto label_148;\n    }\n    eax = unlink (rdi);\n    if (eax != 0) {\n        if (*(r12) != 2) {\n            goto label_149;\n        }\n    }\n    al = (*((rbp - 0x2c4)) != 0x4000) ? 1 : 0;\n    al &= *((r13 + 0x2e));\n    *((rbp - 0x2d0)) = al;\n    if (al != 0) {\n        goto label_150;\n    }\nlabel_25:\n    *((rbp - 0x2c0)) = 1;\n    *((rbp - 0x2d0)) = 1;\n    goto label_5;\nlabel_105:\n    rax = rbp - 0x1e0;\n    rsi = *((rbp - 0x2b8));\n    edi = 1;\n    rdx = rax;\n    *((rbp - 0x2f0)) = rax;\n    eax = lxstat ();\n    r8d = r12d;\n    rbp - 0x2d0 = (eax != 0) ? 1 : 0;\n    if (*((rbp - 0x2d0)) == 0) {\n        goto label_8;\n    }\nlabel_106:\n    rax = errno_location ();\n    if (*(rax) == 2) {\n        goto label_9;\n    }\n    *((rbp - 0x2c0)) = rax;\n    r15d = r12d;\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"cannot stat %s\");\n    r8 = *((rbp - 0x2c0));\n    rcx = rbx;\n    eax = 0;\n    error (0, *(r8), rax);\n    void (*0x406271)() ();\nlabel_142:\n    if (*((rbp - 0x260)) > 1) {\n        goto label_151;\n    }\n    eax = *((r13 + 4));\n    if (bl != 0) {\n        if (eax == 3) {\n            goto label_151;\n        }\n    }\n    *((rbp - 0x2f0)) = 0;\n    if (eax != 4) {\n        goto label_10;\n    }\nlabel_151:\n    rax = fcn_00409a10 (*((rbp - 0x2b8)), *((rbp - 0x268)), *((rbp - 0x270)));\n    *((rbp - 0x2f0)) = rax;\nlabel_20:\n    if (*((rbp - 0x2f0)) == 0) {\n        goto label_10;\n    }\n    if (*((rbp - 0x2c4)) == 0x4000) {\n        goto label_11;\n    }\n    ecx = *((r13 + 0x2e));\n    r8d = *((rbp - 0x2e0));\n    al = fcn_00404f50 (*((rbp - 0x2f0)), *((rbp - 0x2b8)), 1);\n    if (al == 0) {\n        goto label_12;\n    }\nlabel_22:\n    r15d = 1;\n    void (*0x406271)() ();\nlabel_104:\n    al = fcn_0040aef0 (rdi, r14, *((rbp - 0x2d8)));\n    if (al != 0) {\n        goto label_152;\n    }\nlabel_138:\n    fcn_0040ae60 (*((r13 + 0x40)), r14, *((rbp - 0x2d8)));\n    goto label_3;\nlabel_132:\n    ecx = *((rbp - 0x2c0));\n    r8 = r13;\n    al = fcn_00405550 (r14, *((rbp - 0x2b8)), *((rbp - 0x2c8)));\n    if (al == 0) {\n        void (*0x406271)() ();\n    }\n    eax = r12d;\n    eax &= 0x3f;\n    *((rbp - 0x308)) = eax;\n    if (*((rbp - 0x2c4)) != 0x4000) {\n        goto label_13;\n    }\nlabel_18:\n    rdx = *((rbp - 0x268));\n    rcx = *((rbp - 0x270));\n    rax = *((rbp - 0x2e8));\n    if (*((rbp - 0x2e8)) != 0) {\n        goto label_153;\n    }\n    goto label_154;\n    do {\nlabel_14:\n        rax = *(rax);\n        if (rax == 0) {\n            goto label_154;\n        }\nlabel_153:\n    } while (*((rax + 8)) != rdx);\n    if (*((rax + 0x10)) != rcx) {\n        goto label_14;\n    }\n    rax = fcn_0040ea00 (4, r14);\n    edx = 5;\n    rbx = rax;\nlabel_34:\n    rax = dcgettext (0, \"cannot copy cyclic symbolic link %s\");\n    rcx = rbx;\n    eax = 0;\n    error (0, 0, rax);\n    void (*0x406910)() ();\nlabel_126:\n    if (*((r13 + 0x2e)) != 0) {\n        goto label_15;\n    }\n    if (*((rbp - 0x2c4)) != 0x4000) {\n        goto label_16;\n    }\nlabel_130:\n    if (*((r13 + 0x2a)) == 0) {\n        goto label_16;\n    }\n    goto label_6;\nlabel_134:\n    eax = *((r13 + 0x17));\n    *((rbp - 0x321)) = al;\n    if (al != 0) {\n        goto label_155;\n    }\n    eax = *((rbp - 0x2c4));\n    if (eax == 0x8000) {\n        goto label_156;\n    }\n    r8b = (eax != 0xa000) ? 1 : 0;\n    r8b &= *((r13 + 0x14));\n    if (r8b != 0) {\n        goto label_156;\n    }\n    *((rbp - 0x2c0)) = r8b;\n    if (*((rbp - 0x2c4)) == 0x1000) {\n        goto label_157;\n    }\n    ecx = *((rbp - 0x2c8));\n    eax = *((rbp - 0x2c8));\n    eax &= 0xb000;\n    r12b = (eax == 0x2000) ? 1 : 0;\n    al = (*((rbp - 0x2c4)) == 0xc000) ? 1 : 0;\n    r12b |= al;\n    *((rbp - 0x2e0)) = r12b;\n    if (r12b == 0) {\n        goto label_158;\n    }\n    edx = *((rbp - 0x308));\n    rax = *((rbp - 0x248));\n    edi = 0;\n    rsi = *((rbp - 0x2b8));\n    edx = ~edx;\n    *((rbp - 0xc0)) = rax;\n    edx &= ecx;\n    rcx = rbp - 0xc0;\n    eax = xmknod ();\n    r8d = *((rbp - 0x2c0));\n    *((rbp - 0x2e8)) = r8b;\n    *((rbp - 0x321)) = r8b;\n    if (eax == 0) {\n        void (*0x405f45)() ();\n    }\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    rbx = rax;\nlabel_40:\n    rax = dcgettext (0, \"cannot create special file %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    error (0, *(rax), r12);\nlabel_154:\n    rsi = *((rbp - 0x2e8));\n    rax = rsp + 0xf;\n    rax &= 0xfffffffffffffff0;\n    *((rbp - 0x318)) = rax;\n    *(rax) = rsi;\n    *((rax + 8)) = rdx;\n    *((rax + 0x10)) = rcx;\n    if (*((rbp - 0x2d0)) == 0) {\n        eax = *((rbp - 0x1c8));\n        eax &= 0xf000;\n        if (eax == 0x4000) {\n            goto label_159;\n        }\n    }\n    esi = *((rbp - 0x308));\n    rdi = *((rbp - 0x2b8));\n    esi = ~esi;\n    esi &= r12d;\n    eax = mkdir ();\n    if (eax != 0) {\n        goto label_160;\n    }\n    rsi = *((rbp - 0x2b8));\n    rdx = rbp - 0x1e0;\n    edi = 1;\n    eax = lxstat ();\n    if (eax != 0) {\n        goto label_161;\n    }\n    r12d = *((rbp - 0x1c8));\n    *((rbp - 0x321)) = 0;\n    eax = r12d;\n    eax &= 0x1c0;\n    if (eax != 0x1c0) {\n        esi |= 0x1c0;\n        eax = chmod (*((rbp - 0x2b8)), r12d);\n        *((rbp - 0x344)) = r12d;\n        *((rbp - 0x321)) = 1;\n        if (eax != 0) {\n            goto label_162;\n        }\n    }\n    rax = *((rbp + 0x18));\n    if (*(rax) == 0) {\n        goto label_163;\n    }\nlabel_48:\n    if (*((r13 + 0x2e)) != 0) {\n        if (*((r13 + 0x18)) == 0) {\n            goto label_164;\n        }\n        rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n        edx = 5;\n        r12 = rax;\n        rax = dcgettext (0, \"created directory %s\\n\");\n        rdx = r12;\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n    }\nlabel_43:\n    rax = *((rbp - 0x2f8));\n    r12b = (rax != 0) ? 1 : 0;\n    r12b &= *((r13 + 0x1c));\n    *((rbp - 0x2e0)) = r12b;\n    if (r12b != 0) {\n        goto label_165;\n    }\nlabel_32:\n    __asm (\"movdqu xmm0, xmmword [r13]\");\n    __asm (\"movdqu xmm1, xmmword [r13 + 0x10]\");\n    esi = 2;\n    __asm (\"movdqu xmm2, xmmword [r13 + 0x20]\");\n    __asm (\"movdqu xmm3, xmmword [r13 + 0x30]\");\n    rax = *((r13 + 0x40));\n    *((rbp - 0xc0)) = xmm0;\n    *((rbp - 0xb0)) = xmm1;\n    *((rbp - 0xa0)) = xmm2;\n    *((rbp - 0x90)) = xmm3;\n    *((rbp - 0x80)) = rax;\n    rax = fcn_0040f480 (r14);\n    *((rbp - 0x330)) = rax;\n    if (rax == 0) {\n        goto label_166;\n    }\n    if (*((r13 + 4)) == 3) {\n        *((rbp - 0xbc)) = 2;\n    }\n    rax = *((rbp - 0x330));\n    if (*(rax) == 0) {\n        goto label_167;\n    }\n    rax = rbp - 0x150;\n    ecx = 0;\n    *((rbp - 0x338)) = r15b;\n    r12 = *((rbp - 0x330));\n    *((rbp - 0x310)) = rax;\n    rax = rbp - 0xc0;\n    r15d = ecx;\n    *((rbp - 0x320)) = rax;\n    rax = rbp - 0x2a0;\n    *((rbp - 0x340)) = r13;\n    r13 = *((rbp + 0x20));\n    *((rbp - 0x2e0)) = 1;\n    *((rbp - 0x2f8)) = rax;\n    *((rbp - 0x2e8)) = r14;\n    *((rbp - 0x328)) = ebx;\n    while (*((rbp - 0x2a0)) == 0) {\n        r15b |= *((rbp - 0x150));\n        strlen (r12);\n        r12 = r12 + rax + 1;\n        if (*(r12) == 0) {\n            goto label_168;\n        }\n        rdi = *((rbp - 0x2e8));\n        edx = 0;\n        rsi = r12;\n        rax = fcn_0040b0c0 ();\n        rdi = *((rbp - 0x2b8));\n        edx = 0;\n        rsi = r12;\n        rbx = rax;\n        rax = fcn_0040b0c0 ();\n        r14 = rax;\n        rax = *((rbp + 0x18));\n        eax = *(rax);\n        *((rbp - 0x150)) = al;\n        al = fcn_00405990 (rbx, r14, *((rbp - 0x2c0)), *((rbp - 0x2d8)), *((rbp - 0x318)), *((rbp - 0x320)));\n        goto label_17;\n        *((rbp - 0x2e0)) &= al;\n        eax = *((rbp - 0x2a0));\n        *(r13) |= al;\n        free (r14);\n        free (rbx);\n    }\nlabel_168:\n    r12d = r15d;\n    r14 = *((rbp - 0x2e8));\n    r15d = *((rbp - 0x338));\n    r13 = *((rbp - 0x340));\n    ebx = *((rbp - 0x328));\nlabel_66:\n    free (*((rbp - 0x330)));\n    rax = *((rbp + 0x18));\n    *(rax) = r12b;\nlabel_61:\n    *((rbp - 0x2e8)) = 0;\n    r8d = 0;\n    void (*0x405f45)() ();\nlabel_133:\n    ecx = *((rbp - 0x2c0));\n    r8 = r13;\n    al = fcn_00405550 (r14, *((rbp - 0x2b8)), *((rbp - 0x2c8)));\n    if (al == 0) {\n        void (*0x406271)() ();\n    }\n    eax = r12d;\n    eax &= 0x12;\n    *((rbp - 0x308)) = eax;\n    goto label_18;\nlabel_137:\n    rax = fcn_0040ea00 (4, rsi);\n    edx = 5;\n    rbx = rax;\n    if (*((r13 + 0x19)) == 0) {\n        void (*0x406e18)() ();\n    }\nlabel_55:\n    dcgettext (0, \"omitting directory %s\");\nlabel_67:\n    rdx = *((rbp - 0x270));\n    *((rbp - 0x300)) = 0;\nlabel_139:\n    rax = fcn_004099d0 (*((rbp - 0x268)), rdx);\n    *((rbp - 0x2f0)) = rax;\n    goto label_19;\nlabel_144:\n    rax = fcn_004099d0 (*((rbp - 0x268)), *((rbp - 0x270)));\n    *((rbp - 0x2f0)) = rax;\n    goto label_20;\nlabel_110:\n    ecx = 0;\n    if (*((r13 + 0x1f)) != 0) {\n        ecx = 1;\n        if (*((r13 + 0x18)) == 0) {\n            goto label_169;\n        }\n        rax = *((rbp - 0x270));\n        cl = (*((rbp - 0x1e0)) != rax) ? 1 : 0;\n    }\nlabel_169:\n    *((rbp - 0x300)) = r8b;\n    eax = fcn_0040fd60 (*((rbp - 0x2b8)), *((rbp - 0x2f0)), *((rbp - 0x2d8)), 0);\n    r8d = *((rbp - 0x300));\n    if (eax < 0) {\n        goto label_21;\n    }\n    if (*((rbp + 0x28)) != 0) {\n        rax = *((rbp + 0x28));\n        *(rax) = 1;\n    }\n    rax = fcn_00409a10 (*((rbp - 0x2b8)), *((rbp - 0x268)), *((rbp - 0x270)));\n    if (rax == 0) {\n        goto label_22;\n    }\n    ecx = *((r13 + 0x2e));\n    r8d = *((rbp - 0x2e0));\n    al = fcn_00404f50 (rax, *((rbp - 0x2b8)), 1);\n    if (al != 0) {\n        goto label_22;\n    }\n    if (*((r13 + 0x25)) == 0) {\n        void (*0x406271)() ();\n    }\nlabel_108:\n    r12d = 0;\n    ecx = 0;\nlabel_47:\n    eax = *((rbp - 0x258));\n    r9 = *((rbp - 0x2f0));\n    rdx = *((rbp - 0x2d8));\n    eax &= 0xf000;\n    if (eax == 0xa000) {\n        goto label_170;\n    }\nlabel_27:\n    edi = *(r13);\n    if (edi == 0) {\n        goto label_171;\n    }\n    if (r12b != 0) {\n        goto label_172;\n    }\n    if (*((r13 + 0x18)) != 0) {\n        goto label_23;\n    }\n    if (*((r13 + 4)) == 2) {\n        goto label_23;\n    }\n    eax = *((rdx + 0x18));\n    eax &= 0xf000;\n    if (eax != 0xa000) {\n        goto label_23;\n    }\n    eax = *((r9 + 0x18));\n    eax &= 0xf000;\n    if (eax == 0xa000) {\n        goto label_23;\n    }\nlabel_30:\n    rax = fcn_0040e920 (1, 4, *((rbp - 0x2b8)));\n    r12 = rax;\n    rax = fcn_0040e920 (0, 4, r14);\n    edx = 5;\n    esi = \"%s and %s are the same file\";\n    rbx = rax;\n    goto label_24;\nlabel_155:\n    r8d = *((rbp - 0x2e0));\n    edx = *((r13 + 0x16));\n    ecx = 0;\n    al = fcn_00404f50 (r14, *((rbp - 0x2b8)), rdx);\n    r8d = 0;\n    *((rbp - 0x321)) = 0;\n    *((rbp - 0x2e0)) = al;\n    if (al != 0) {\n        void (*0x405f45)() ();\n    }\n    void (*0x406910)() ();\nlabel_148:\n    eax = rmdir ();\n    if (eax == 0) {\n        goto label_25;\n    }\n    if (*(r12) == 2) {\n        goto label_25;\n    }\nlabel_149:\n    rax = fcn_0040e920 (1, 4, *((rbp - 0x2b8)));\n    r13 = rax;\n    rax = fcn_0040e920 (0, 4, r14);\n    edx = 5;\n    rbx = rax;\nlabel_29:\n    rax = dcgettext (0, \"inter-device move failed: %s to %s; unable to remove target\");\n    r8 = r13;\n    rcx = rbx;\n    eax = 0;\n    error (0, *(r12), rax);\n    fcn_00409980 (*((rbp - 0x268)), *((rbp - 0x270)));\n    void (*0x406271)() ();\nlabel_145:\n    if (*((r13 + 0x2e)) != 0) {\n        goto label_173;\n    }\nlabel_39:\n    if (*((r13 + 0x21)) != 0) {\n        goto label_174;\n    }\nlabel_38:\n    if (*((rbp + 0x28)) != 0) {\n        rax = *((rbp + 0x28));\n        *(rax) = 1;\n    }\n    if (bl == 0) {\n        goto label_22;\n    }\n    r15d = ebx;\n    fcn_0040ae60 (*((r13 + 0x38)), *((rbp - 0x2b8)), *((rbp - 0x2d8)));\n    void (*0x406271)() ();\nlabel_107:\n    rax = *((rbp - 0x1e0));\n    if (*((rbp - 0x270)) != rax) {\n        goto label_26;\n    }\n    r12d = *((r13 + 0x17));\n    if (r12b != 0) {\n        goto label_37;\n    }\n    if (*((r13 + 4)) == 2) {\n        goto label_175;\n    }\n    rax = rbp - 0x150;\n    rsi = *((rbp - 0x2b8));\n    edi = 1;\n    *((rbp - 0x300)) = r8b;\n    rdx = rax;\n    *((rbp - 0x310)) = rax;\n    eax = lxstat ();\n    r8d = *((rbp - 0x300));\n    if (eax != 0) {\n        goto label_23;\n    }\n    rax = rbp - 0xc0;\n    rsi = r14;\n    edi = 1;\n    rdx = rax;\n    *((rbp - 0x320)) = rax;\n    eax = lxstat ();\n    r8d = *((rbp - 0x300));\n    if (eax != 0) {\n        goto label_23;\n    }\n    rax = *((rbp - 0x148));\n    if (*((rbp - 0xb8)) == rax) {\n        rax = *((rbp - 0x150));\n        r12b = (*((rbp - 0xc0)) == rax) ? 1 : 0;\n    }\n    eax = *((rbp - 0xa8));\n    r9 = *((rbp - 0x310));\n    rdx = *((rbp - 0x320));\n    eax &= 0xf000;\n    if (eax != 0xa000) {\n        goto label_27;\n    }\n    eax = *((rbp - 0x138));\n    eax &= 0xf000;\n    if (eax != 0xa000) {\n        goto label_27;\n    }\n    if (*((r13 + 0x15)) == 0) {\n        goto label_27;\n    }\n    goto label_23;\nlabel_109:\n    if (*((r13 + 0x18)) == 0) {\n        goto label_28;\n    }\n    eax = *((r13 + 8));\nlabel_111:\n    if (eax == 2) {\n        goto label_176;\n    }\n    if (eax == 3) {\n        goto label_177;\n    }\n    if (eax != 4) {\n        goto label_28;\n    }\n    if (*((r13 + 0x2f)) == 0) {\n        goto label_28;\n    }\n    *((rbp - 0x300)) = r8b;\n    al = fcn_00404bd0 (*((rbp - 0x2b8)), *((rbp - 0x1c8)));\n    r8d = *((rbp - 0x300));\n    if (al != 0) {\n        goto label_28;\n    }\nlabel_177:\n    rax = *((rbp - 0x2f0));\n    *((rbp - 0x300)) = r8b;\n    al = fcn_00404e20 (r13, *((rbp - 0x2b8)), rax + 0x18);\n    r8d = *((rbp - 0x300));\n    if (al != 0) {\n        goto label_28;\n    }\nlabel_176:\n    if (*((rbp + 0x28)) == 0) {\n        goto label_22;\n    }\nlabel_51:\n    rax = *((rbp + 0x28));\n    r15d = 1;\n    *(rax) = 1;\n    void (*0x406271)() ();\nlabel_147:\n    rax = fcn_0040e920 (1, 4, *((rbp - 0x2b8)));\n    r13 = rax;\n    rax = fcn_0040e920 (0, 4, r14);\n    edx = 5;\n    esi = \"cannot move %s to %s\";\n    rbx = rax;\n    goto label_29;\nlabel_156:\n    eax = *((rbp - 0x258));\n    sil = (*((r13 + 4)) == 2) ? 1 : 0;\n    *((rbp - 0x318)) = eax;\n    eax = *((r13 + 0x23));\n    esi <<= 0x11;\n    *((rbp - 0x310)) = al;\n    eax = 0;\n    eax = fcn_0040ae10 (r14, 0, rdx, rcx);\n    *((rbp - 0x2c0)) = eax;\n    if (eax < 0) {\n        goto label_178;\n    }\n    esi = *((rbp - 0x2c0));\n    rdx = rbp - 0x150;\n    edi = 1;\n    eax = fxstat ();\n    if (eax != 0) {\n        goto label_179;\n    }\n    rax = *((rbp - 0x148));\n    if (*((rbp - 0x268)) != rax) {\n        goto label_180;\n    }\n    rax = *((rbp - 0x150));\n    if (*((rbp - 0x270)) != rax) {\n        goto label_180;\n    }\n    r12d &= 0x1ff;\n    *((rbp - 0x354)) = r12d;\n    if (*((rbp - 0x2d0)) != 0) {\n        goto label_92;\n    }\n    r12 = *((rbp - 0x2b8));\n    esi -= esi;\n    eax = 0;\n    esi &= 0xfffffe00;\n    esi += 0x201;\n    eax = fcn_0040ae10 (r12, rsi, rdx, rcx);\n    ecx = eax;\n    *((rbp - 0x2e8)) = eax;\n    rax = 0xff000000ff00;\n    if ((*((r13 + 0x20)) & rax) == 0) {\n        goto label_181;\n    }\n    if (ecx >= 0) {\n        goto label_182;\n    }\nlabel_68:\n    rax = errno_location ();\n    r12 = rax;\n    if (*((r13 + 0x16)) == 0) {\n        goto label_183;\n    }\n    eax = unlink (*((rbp - 0x2b8)));\n    if (eax != 0) {\n        goto label_184;\n    }\n    if (*((r13 + 0x2e)) != 0) {\n        goto label_185;\n    }\nlabel_96:\n    eax = *((r13 + 0x21));\n    ecx = *((rbp - 0x308));\n    *((rbp - 0x2d0)) = al;\n    *((rbp - 0x348)) = ecx;\n    if (al != 0) {\n        goto label_186;\n    }\nlabel_62:\n    r12d = *((rbp - 0x348));\n    eax = 0;\n    r12d = ~r12d;\n    r12d &= *((rbp - 0x354));\n    edx = r12d;\n    *((rbp - 0x2e0)) = r12d;\n    eax = fcn_0040ae10 (*((rbp - 0x2b8)), 0xc1, edx, rcx);\n    *((rbp - 0x2e8)) = eax;\n    rax = errno_location ();\n    edx = *((rbp - 0x2e8));\n    r12d = *(rax);\n    *((rbp - 0x2f8)) = rax;\n    edx >>= 0x1f;\n    al = (r12d == 0x11) ? 1 : 0;\n    al &= dl;\n    *((rbp - 0x320)) = al;\n    if (al == 0) {\n        goto label_187;\n    }\n    eax = *((r13 + 0x18));\n    r12d = 0x11;\n    *((rbp - 0x2d0)) = al;\n    if (al == 0) {\n        goto label_188;\n    }\nlabel_70:\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    *((rbp - 0x2e0)) = rax;\n    rax = dcgettext (0, \"cannot create regular file %s\");\n    rcx = *((rbp - 0x2e0));\nlabel_46:\n    eax = 0;\n    error (0, r12d, rax);\n    r8d = 0;\n    *((rbp - 0x2e0)) = 0;\nlabel_171:\n    ecx = *((r13 + 0x18));\n    if (cl != 0) {\n        goto label_189;\n    }\n    if (*((r13 + 0x15)) != 0) {\n        goto label_189;\n    }\n    eax = *((rdx + 0x18));\n    eax &= 0xf000;\n    if (eax != 0xa000) {\nlabel_59:\n        eax = *((r9 + 0x18));\n        eax &= 0xf000;\n        if (eax != 0xa000) {\n            goto label_190;\n        }\nlabel_36:\n        ecx = *((r13 + 0x18));\nlabel_35:\n        if (cl == 0) {\n            goto label_63;\n        }\n        eax = *((rbp - 0x258));\n        eax &= 0xf000;\n        if (eax == 0xa000) {\n            goto label_191;\n        }\n    }\nlabel_63:\n    if (*((r13 + 0x2c)) != 0) {\n        goto label_192;\n    }\n    if ((*((r13 + 0x14)) & 0xff00ff00) != 0) {\n        eax = *((r9 + 0x18));\n        eax &= 0xf000;\n        if (eax == 0xa000) {\n            goto label_192;\n        }\n    }\n    if (*((r13 + 4)) != 2) {\n        goto label_30;\n    }\n    eax = *((rdx + 0x18));\n    eax &= 0xf000;\n    if (eax == 0xa000) {\n        goto label_193;\n    }\n    __asm (\"movdqa xmm4, xmmword [rdx]\");\n    *((rbp - 0xc0)) = xmm4;\n    __asm (\"movdqa xmm5, xmmword [rdx + 0x10]\");\n    *((rbp - 0xb0)) = xmm5;\n    __asm (\"movdqa xmm6, xmmword [rdx + 0x20]\");\n    *((rbp - 0xa0)) = xmm6;\n    __asm (\"movdqa xmm7, xmmword [rdx + 0x30]\");\n    *((rbp - 0x90)) = xmm7;\n    __asm (\"movdqa xmm4, xmmword [rdx + 0x40]\");\n    *((rbp - 0x80)) = xmm4;\n    __asm (\"movdqa xmm5, xmmword [rdx + 0x50]\");\n    *((rbp - 0x70)) = xmm5;\n    __asm (\"movdqa xmm6, xmmword [rdx + 0x60]\");\n    *((rbp - 0x60)) = xmm6;\n    __asm (\"movdqa xmm7, xmmword [rdx + 0x70]\");\n    *((rbp - 0x50)) = xmm7;\n    __asm (\"movdqa xmm4, xmmword [rdx + 0x80]\");\n    *((rbp - 0x40)) = xmm4;\nlabel_76:\n    eax = *((r9 + 0x18));\n    eax &= 0xf000;\n    if (eax == 0xa000) {\n        goto label_194;\n    }\n    __asm (\"movdqa xmm5, xmmword [r9]\");\n    *((rbp - 0x150)) = xmm5;\n    __asm (\"movdqa xmm6, xmmword [r9 + 0x10]\");\n    *((rbp - 0x140)) = xmm6;\n    __asm (\"movdqa xmm7, xmmword [r9 + 0x20]\");\n    *((rbp - 0x130)) = xmm7;\n    __asm (\"movdqa xmm4, xmmword [r9 + 0x30]\");\n    *((rbp - 0x120)) = xmm4;\n    __asm (\"movdqa xmm5, xmmword [r9 + 0x40]\");\n    *((rbp - 0x110)) = xmm5;\n    __asm (\"movdqa xmm6, xmmword [r9 + 0x50]\");\n    *((rbp - 0x100)) = xmm6;\n    __asm (\"movdqa xmm7, xmmword [r9 + 0x60]\");\n    *((rbp - 0xf0)) = xmm7;\n    __asm (\"movdqa xmm4, xmmword [r9 + 0x70]\");\n    *((rbp - 0xe0)) = xmm4;\n    __asm (\"movdqa xmm5, xmmword [r9 + 0x80]\");\n    *((rbp - 0xd0)) = xmm5;\nlabel_75:\n    rax = *((rbp - 0x148));\n    if (*((rbp - 0xb8)) != rax) {\n        goto label_23;\n    }\n    rax = *((rbp - 0x150));\n    if (*((rbp - 0xc0)) != rax) {\n        goto label_23;\n    }\n    if (*((r13 + 0x17)) == 0) {\n        goto label_30;\n    }\nlabel_37:\n    *((rbp - 0x2d0)) = 1;\n    goto label_23;\nlabel_152:\n    *((rbp - 0x2b8)) = al;\n    rax = fcn_0040ea00 (4, r14);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"warning: source file %s specified more than once\");\n    rcx = rbx;\n    eax = 0;\n    error (0, 0, rax);\n    r8d = *((rbp - 0x2b8));\n    r15d = r8d;\n    void (*0x406271)() ();\nlabel_140:\n    rax = fcn_0040e920 (1, 4, *(0x00621988));\n    rbx = rax;\n    rax = fcn_0040e920 (0, 4, *(0x00621990));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"cannot copy a directory, %s, into itself, %s\");\n    r8 = rbx;\n    rcx = r12;\n    eax = 0;\n    error (0, 0, rax);\n    rax = *((rbp + 0x20));\n    *(rax) = 1;\n    goto label_12;\nlabel_127:\n    rax = rbp - 0xc0;\n    rsi = *((rbp - 0x2b8));\n    edi = 1;\n    rdx = rax;\n    r12 = rax;\n    eax = lxstat ();\n    if (eax != 0) {\n        goto label_1;\n    }\n    rdx = r12;\n    goto label_31;\nlabel_165:\n    *((rbp - 0x2e8)) = 0;\n    r8d = 0;\n    rcx = *((rbp - 0x270));\n    if (*(rax) != rcx) {\n        void (*0x405f45)() ();\n    }\n    goto label_32;\nlabel_135:\n    rdx = rbp - 0x150;\n    esi = 0x418d7b;\n    edi = 1;\n    eax = xstat ();\n    if (eax != 0) {\n        goto label_33;\n    }\n    rdx = rbp - 0xc0;\n    rsi = r12;\n    edi = 1;\n    eax = xstat ();\n    if (eax != 0) {\n        goto label_33;\n    }\n    rax = *((rbp - 0xb8));\n    if (*((rbp - 0x148)) == rax) {\n        goto label_195;\n    }\nlabel_69:\n    free (r12);\n    rax = fcn_0040ead0 (0, 3, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"%s: can make relative symbolic links only in current directory\";\n    rbx = rax;\n    goto label_34;\nlabel_189:\n    eax = *((r9 + 0x18));\n    eax &= 0xf000;\n    if (eax == 0xa000) {\n        goto label_23;\n    }\n    if (r12b != 0) {\n        if (*((r9 + 0x10)) > 1) {\n            goto label_196;\n        }\n    }\n    eax = *((rdx + 0x18));\n    eax &= 0xf000;\n    if (eax == 0xa000) {\n        goto label_35;\n    }\nlabel_190:\n    rax = *((r9 + 8));\n    if (*((rdx + 8)) != rax) {\n        goto label_23;\n    }\n    rax = *(r9);\n    if (*(rdx) != rax) {\n        goto label_23;\n    }\n    if (*((r13 + 0x17)) == 0) {\n        goto label_36;\n    }\n    goto label_37;\nlabel_174:\n    rcx = r13;\n    edx = 1;\n    fcn_00405620 (*((rbp - 0x2b8)), 0);\n    goto label_38;\nlabel_173:\n    edx = 5;\n    rax = dcgettext (0, \"renamed \");\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    fcn_00404d70 (r14, *((rbp - 0x2b8)), *((rbp - 0x300)));\n    goto label_39;\nlabel_160:\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"cannot create directory %s\";\n    rbx = rax;\n    goto label_40;\nlabel_113:\n    if (*((rbp - 0x2c4)) == 0x4000) {\n        goto label_41;\n    }\nlabel_117:\n    if (*((r13 + 0x18)) == 0) {\n        goto label_197;\n    }\n    r12d = *(r13);\n    if (r12d == 0) {\n        goto label_197;\n    }\nlabel_45:\n    edx = *((rbp - 0x258));\n    edx &= 0xf000;\n    if (edx == 0x4000) {\n        goto label_198;\n    }\nlabel_50:\n    *((rbp - 0x2f0)) = cl;\n    rax = fcn_0040ad40 (r14);\n    ecx = *((rbp - 0x2f0));\n    r8 = rax;\n    if (*(rax) == 0x2e) {\n        goto label_199;\n    }\nlabel_49:\n    if (r12d != 3) {\n        rdi = r8;\n        *((rbp - 0x2f0)) = cl;\n        *((rbp - 0x308)) = r8;\n        rax = strlen (rdi);\n        *((rbp - 0x2d0)) = rax;\n        rax = fcn_0040ad40 (*((rbp - 0x2b8)));\n        rdi = rax;\n        *((rbp - 0x300)) = rax;\n        rax = strlen (rdi);\n        rcx = imp.__libc_start_main;\n        r12 = rax;\n        rdi = rcx;\n        *((rbp - 0x310)) = rcx;\n        rax = strlen (rdi);\n        ecx = *((rbp - 0x2f0));\n        r9 = rax;\n        rax = r12 + rax;\n        *((rbp - 0x318)) = r9;\n        if (*((rbp - 0x2d0)) != rax) {\n            goto label_82;\n        }\n        r8 = *((rbp - 0x308));\n        *((rbp - 0x2d0)) = cl;\n        rdi = r8;\n        *((rbp - 0x2f0)) = r8;\n        eax = memcmp (rdi, *((rbp - 0x300)), r12);\n        ecx = *((rbp - 0x2d0));\n        if (eax != 0) {\n            goto label_82;\n        }\n        r8 = *((rbp - 0x2f0));\n        eax = strcmp (r8 + r12, *((rbp - 0x310)));\n        ecx = *((rbp - 0x2d0));\n        if (eax != 0) {\n            goto label_82;\n        }\n        *((rbp - 0x300)) = cl;\n        rax = strlen (*((rbp - 0x2b8)));\n        r9 = *((rbp - 0x318));\n        *((rbp - 0x2f0)) = rax;\n        rax = fcn_004112e0 (r9 + rax + 1);\n        rdx = *((rbp - 0x2f0));\n        rsi = *((rbp - 0x2b8));\n        r12 = rax;\n        rax = imp.__libc_start_main;\n        rdi = r12;\n        *((rbp - 0x2d0)) = rax;\n        rax = mempcpy ();\n        strcpy (rax, *((rbp - 0x2d0)));\n        rax = rbp - 0xc0;\n        rsi = r12;\n        edi = 1;\n        rdx = rax;\n        eax = xstat ();\n        *((rbp - 0x2d0)) = eax;\n        free (r12);\n        eax = *((rbp - 0x2d0));\n        ecx = *((rbp - 0x300));\n        if (eax != 0) {\n            goto label_82;\n        }\n        rax = *((rbp - 0xb8));\n        if (*((rbp - 0x268)) == rax) {\n            goto label_200;\n        }\n    }\nlabel_82:\n    *((rbp - 0x2d0)) = cl;\n    rax = fcn_0040a8b0 (*((rbp - 0x2b8)), *(r13));\n    ecx = *((rbp - 0x2d0));\n    r12 = rax;\n    *((rbp - 0x300)) = rax;\n    *((rbp - 0x2f0)) = cl;\n    if (rax == 0) {\n        goto label_201;\n    }\n    rax = strlen (rax);\n    rax += 0x18;\n    rax &= 0xfffffffffffffff0;\n    rdi &= 0xfffffffffffffff0;\n    rax = memcpy (rsp + 0xf, r12, rax + 1);\n    r12 = rax;\n    free (*((rbp - 0x300)));\n    *((rbp - 0x300)) = r12;\n    ecx = *((rbp - 0x2f0));\n    *((rbp - 0x2d0)) = 1;\n    goto label_42;\nlabel_159:\n    rax = 0xff000000ff00;\n    if ((*((r13 + 0x20)) & rax) != 0) {\n        goto label_202;\n    }\nlabel_53:\n    *((rbp - 0x321)) = 0;\n    *((rbp - 0x308)) = 0;\n    goto label_43;\nlabel_170:\n    eax = *((rbp - 0x1c8));\n    eax &= 0xf000;\n    if (eax != 0xa000) {\n        goto label_27;\n    }\n    *((rbp - 0x308)) = ecx;\n    *((rbp - 0x300)) = r8b;\n    al = fcn_0040ef80 (r14, *((rbp - 0x2b8)));\n    if (al != 0) {\n        goto label_30;\n    }\n    r8d = *(r13);\n    r8d = *((rbp - 0x300));\n    if (r8d != 0) {\n        goto label_23;\n    }\n    ecx = *((rbp - 0x308));\n    if (ecx == 0) {\n        goto label_23;\n    }\n    r12d = *((r13 + 0x18));\n    eax = 1;\n    r12d ^= 1;\nlabel_54:\n    if (r12b == 0) {\n        goto label_30;\n    }\n    *((rbp - 0x2d0)) = al;\n    goto label_23;\nlabel_150:\n    edx = 5;\n    rax = dcgettext (0, \"copied \");\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    fcn_00404d70 (r14, *((rbp - 0x2b8)), *((rbp - 0x300)));\n    *((rbp - 0x2c0)) = 1;\n    goto label_5;\nlabel_146:\n    edi = 1;\n    r15d = 1;\n    rax = fcn_0040e920 (edi, 4, *(0x00621988));\n    r12 = rax;\n    rax = fcn_0040e920 (0, 4, *(0x00621990));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"cannot move %s to a subdirectory of itself, %s\");\n    r8 = r12;\n    rcx = rbx;\n    eax = 0;\n    error (0, 0, rax);\n    rax = *((rbp + 0x20));\n    *(rax) = 1;\n    void (*0x406271)() ();\nlabel_136:\n    rax = fcn_0040e920 (1, 4, r14);\n    rbx = rax;\n    rax = fcn_0040e920 (0, 4, *((rbp - 0x2b8)));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"cannot create symbolic link %s to %s\");\n    r14 = rax;\n    rax = errno_location ();\n    r8 = rbx;\n    rcx = r12;\n    eax = 0;\n    error (0, *(rax), r14);\n    void (*0x406910)() ();\nlabel_158:\n    if (*((rbp - 0x2c4)) != 0xa000) {\n        goto label_203;\n    }\n    rax = fcn_0040a1c0 (r14, *((rbp - 0x240)));\n    r12 = rax;\n    if (rax == 0) {\n        goto label_204;\n    }\n    ecx = *((r13 + 0x16));\n    eax = fcn_00409fd0 (rax, 0xffffff9c, *((rbp - 0x2b8)), rcx);\n    if (eax < 0) {\n        goto label_205;\n    }\nlabel_65:\n    free (r12);\n    eax = *((r13 + 0x25));\n    *((rbp - 0x321)) = al;\n    if (al != 0) {\n        void (*0x406e0d)() ();\n    }\n    r8d = *((r13 + 0x1d));\n    if (r8b != 0) {\n        goto label_206;\n    }\n    *((rbp - 0x321)) = r8b;\n    *((rbp - 0x2e8)) = 1;\n    *((rbp - 0x2e0)) = 1;\n    void (*0x405f45)() ();\nlabel_114:\n    if (*((r13 + 0x18)) == 0) {\n        goto label_207;\n    }\n    r12d = *(r13);\n    if (r12d == 0) {\n        goto label_207;\n    }\n    if (bl != 0) {\n        goto label_44;\n    }\n    goto label_45;\nlabel_180:\n    rax = fcn_0040ea00 (4, r14);\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"skipping file %s, as it was replaced while being copied\");\n    rcx = r12;\n    esi = 0;\n    rdx = rax;\n    goto label_46;\nlabel_175:\n    r12d = 1;\n    ecx = 1;\n    goto label_47;\nlabel_163:\n    fcn_00409a10 (*((rbp - 0x2b8)), *((rbp - 0x1d8)), *((rbp - 0x1e0)));\n    rax = *((rbp + 0x18));\n    *(rax) = 1;\n    goto label_48;\nlabel_115:\n    if (*((r13 + 0x18)) != 0) {\n        goto label_45;\n    }\nlabel_119:\n    *((rbp - 0x2f0)) = cl;\n    rax = fcn_0040ad40 (r14);\n    ecx = *((rbp - 0x2f0));\n    r8 = rax;\n    if (*(rax) == 0x2e) {\n        goto label_208;\n    }\nlabel_58:\n    eax = *((rbp - 0x1c8));\n    eax &= 0xf000;\n    if (eax != 0x4000) {\n        goto label_49;\n    }\n    do {\n        *((rbp - 0x300)) = 0;\n        goto label_42;\nlabel_118:\n        eax = *((rbp - 0x258));\n        eax &= 0xf000;\n        if (eax == 0x4000) {\n            goto label_209;\n        }\nlabel_52:\n    } while (r12d == 0);\n    goto label_50;\nlabel_141:\n    rax = fcn_0040ea00 (4, *(0x00621990));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"warning: source directory %s specified more than once\");\n    rcx = rbx;\n    eax = 0;\n    error (0, 0, rax);\n    if (*((r13 + 0x18)) == 0) {\n        goto label_22;\n    }\n    if (*((rbp - 0x2c0)) != 0) {\n        goto label_51;\n    }\n    goto label_22;\nlabel_161:\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"cannot stat %s\";\n    rbx = rax;\n    goto label_40;\nlabel_178:\n    rax = fcn_0040ea00 (4, r14);\n    edx = 5;\n    esi = \"cannot open %s for reading\";\n    rbx = rax;\n    goto label_40;\nlabel_112:\n    rax = *((rbp - 0x2f0));\n    *((rbp - 0x300)) = r8b;\n    al = fcn_00404e20 (r13, *((rbp - 0x2b8)), rax + 0x18);\n    r8d = *((rbp - 0x300));\n    if (al != 0) {\n        goto label_28;\n    }\n    goto label_22;\nlabel_164:\n    fcn_00404d70 (r14, *((rbp - 0x2b8)), 0);\n    goto label_43;\nlabel_157:\n    eax = *((rbp - 0x308));\n    rsi = *((rbp - 0x2b8));\n    edi = 0;\n    rcx = rbp - 0xc0;\n    *((rbp - 0xc0)) = 0;\n    eax = ~eax;\n    eax &= *((rbp - 0x2c8));\n    edx = eax;\n    r12d = eax;\n    eax = xmknod ();\n    r8d = *((rbp - 0x2c0));\n    if (eax != 0) {\n        goto label_210;\n    }\nlabel_64:\n    *((rbp - 0x2e8)) = r8b;\n    *((rbp - 0x321)) = r8b;\n    *((rbp - 0x2e0)) = 1;\n    void (*0x405f45)() ();\nlabel_209:\n    eax = *((rbp - 0x1c8));\nlabel_198:\n    eax &= 0xf000;\n    if (eax == 0x4000) {\n        goto label_52;\n    }\n    if (r12d != 0) {\n        goto label_50;\n    }\n    rax = fcn_0040ead0 (0, 3, *((rbp - 0x2b8)));\n    r12 = rax;\n    rax = fcn_0040ead0 (0, 3, r14);\n    edx = 5;\n    esi = \"cannot move directory onto non-directory: %s -> %s\";\n    rbx = rax;\n    goto label_24;\nlabel_203:\n    rax = fcn_0040ea00 (4, r14);\n    edx = 5;\n    esi = \"%s has unknown file type\";\n    rbx = rax;\n    goto label_34;\nlabel_202:\n    esi = *((r13 + 0x25));\n    edx = 0;\n    rcx = r13;\n    al = fcn_00405620 (*((rbp - 0x2b8)), rsi);\n    if (al != 0) {\n        goto label_53;\n    }\n    if (*((r13 + 0x26)) == 0) {\n        goto label_53;\n    }\n    void (*0x406910)() ();\nlabel_172:\n    *((rbp - 0x2d0)) = r8b;\n    eax = fcn_0040ef80 (r14, *((rbp - 0x2b8)));\n    r8d = *((rbp - 0x2d0));\n    eax ^= 1;\n    r12d = eax;\n    eax = 0;\n    goto label_54;\nlabel_192:\n    rax = *(rdx);\n    r12b = (*(r9) == rax) ? 1 : 0;\n    eax = 0;\n    goto label_54;\nlabel_207:\n    rax = fcn_0040e920 (1, 4, r14);\n    r12 = rax;\n    rax = fcn_0040e920 (0, 4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"cannot overwrite non-directory %s with directory %s\";\n    rbx = rax;\n    goto label_24;\nlabel_201:\n    rax = errno_location ();\n    *((rbp - 0x2d0)) = 1;\n    ecx = *((rbp - 0x2f0));\n    r12 = rax;\n    if (*(rax) == 2) {\n        goto label_42;\n    }\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    rbx = rax;\nlabel_72:\n    r15d = 0;\n    rax = dcgettext (0, \"cannot backup %s\");\n    rcx = rbx;\n    eax = 0;\n    error (0, *(r12), rax);\n    void (*0x406271)() ();\nlabel_197:\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"cannot overwrite directory %s with non-directory\";\n    rbx = rax;\n    goto label_55;\nlabel_179:\n    rax = fcn_0040ea00 (4, r14);\n    edx = 5;\n    *((rbp - 0x2e0)) = rax;\n    rax = dcgettext (0, \"cannot fstat %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = *((rbp - 0x2e0));\n    rdx = r12;\n    esi = *(rax);\n    goto label_46;\nlabel_120:\n    *((rbp - 0x300)) = 0;\n    if (*((r13 + 4)) != 2) {\n        goto label_42;\n    }\n    eax = *((rbp - 0x258));\n    eax &= 0xf000;\n    if (eax != 0x8000) {\n        goto label_56;\n    }\n    goto label_42;\nlabel_199:\n    eax = 1;\nlabel_60:\n    edx = 0;\n    dl = (*((r8 + 1)) == 0x2e) ? 1 : 0;\n    edx = *((r8 + rdx + 1));\n    if (dl == 0) {\n        goto label_57;\n    }\n    if (dl == 0x2f) {\n        goto label_57;\n    }\n    if (al == 0) {\n        goto label_58;\n    }\n    goto label_49;\nlabel_196:\n    *((rbp - 0x310)) = r8b;\n    *((rbp - 0x308)) = r9;\n    *((rbp - 0x300)) = rdx;\n    al = fcn_0040ef80 (r14, *((rbp - 0x2b8)));\n    rdx = *((rbp - 0x300));\n    r9 = *((rbp - 0x308));\n    r8d = *((rbp - 0x310));\n    if (al == 0) {\n        goto label_211;\n    }\n    eax = *((rdx + 0x18));\n    eax &= 0xf000;\n    if (eax != 0xa000) {\n        goto label_59;\n    }\n    goto label_36;\nlabel_208:\n    eax = 0;\n    goto label_60;\nlabel_166:\n    rax = fcn_0040ea00 (4, r14);\n    edx = 5;\n    *((rbp - 0x2c0)) = rax;\n    rax = dcgettext (0, \"cannot access %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = *((rbp - 0x2c0));\n    eax = 0;\n    error (0, *(rax), r12);\n    *((rbp - 0x2e0)) = 0;\n    goto label_61;\nlabel_162:\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"setting permissions for %s\";\n    rbx = rax;\n    goto label_40;\nlabel_92:\n    eax = *((rbp - 0x308));\n    *((rbp - 0x348)) = eax;\n    goto label_62;\nlabel_191:\n    if (*((r9 + 0x10)) <= 1) {\n        goto label_63;\n    }\n    rdi = r14;\n    *((rbp - 0x310)) = r8b;\n    *((rbp - 0x308)) = r9;\n    *((rbp - 0x300)) = rdx;\n    rax = canonicalize_file_name ();\n    rdx = *((rbp - 0x300));\n    r9 = *((rbp - 0x308));\n    r8d = *((rbp - 0x310));\n    if (rax == 0) {\n        goto label_63;\n    }\n    rdi = rax;\n    *((rbp - 0x300)) = r8b;\n    *((rbp - 0x2d0)) = rax;\n    eax = fcn_0040ef80 (rdi, *((rbp - 0x2b8)));\n    rcx = *((rbp - 0x2d0));\n    eax ^= 1;\n    r12d = eax;\n    eax = free (rcx);\n    eax = 0;\n    r8d = *((rbp - 0x300));\n    goto label_54;\nlabel_210:\n    esi = r12d;\n    rdi = *((rbp - 0x2b8));\n    esi &= 0xffffefff;\n    eax = mkfifo ();\n    r8d = *((rbp - 0x2c0));\n    if (eax == 0) {\n        goto label_64;\n    }\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"cannot create fifo %s\";\n    rbx = rax;\n    goto label_40;\nlabel_205:\n    rax = errno_location ();\n    eax = *(rax);\n    *((rbp - 0x2c0)) = eax;\n    if (eax == 0) {\n        goto label_65;\n    }\n    if (*((r13 + 0x2d)) == 1) {\n        if (*((rbp - 0x2d0)) == 0) {\n            goto label_212;\n        }\n    }\nlabel_91:\n    free (r12);\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"cannot create symbolic link %s\");\n    rcx = r12;\n    eax = 0;\n    error (0, *((rbp - 0x2c0)), rax);\n    void (*0x406910)() ();\nlabel_167:\n    r12d = 0;\n    *((rbp - 0x2e0)) = 1;\n    goto label_66;\nlabel_116:\n    rax = fcn_0040e920 (1, 4, r14);\n    r12 = rax;\n    rax = fcn_0040e920 (0, 4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"will not overwrite just-created %s with %s\";\n    rbx = rax;\n    goto label_24;\nlabel_123:\n    al = (*((rbp - 0x2c4)) == 0x4000) ? 1 : 0;\n    al &= *((r13 + 0x2a));\n    *((rbp - 0x2d0)) = al;\n    if (al != 0) {\n        goto label_67;\n    }\n    *((rbp - 0x2d0)) = 1;\n    *((rbp - 0x300)) = 0;\n    goto label_4;\nlabel_122:\n    *((rbp - 0x2f0)) = cl;\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"removed %s\\n\");\n    rdx = r12;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    ecx = *((rbp - 0x2f0));\n    *((rbp - 0x300)) = 0;\n    goto label_42;\nlabel_181:\n    ecx = *((rbp - 0x2e8));\n    if (ecx < 0) {\n        goto label_68;\n    }\nlabel_74:\n    *((rbp - 0x348)) = 0;\nlabel_81:\n    rax = rbp - 0xc0;\n    esi = *((rbp - 0x2e8));\n    __asm (\"std\");\n    edi = 1;\n    rdx = rax;\n    *((rbp - 0x320)) = rax;\n    eax = fxstat ();\n    *((rbp - 0x2f8)) = eax;\n    if (eax != 0) {\n        goto label_213;\n    }\n    if (*((rbp - 0x310)) == 0) {\n        goto label_89;\n    }\n    if (*((r13 + 0x34)) != 0) {\n        goto label_214;\n    }\nlabel_90:\n    eax = getpagesize ();\n    r12 = (int64_t) eax;\n    rax = *((rbp - 0x88));\n    *((rbp - 0x340)) = rax;\n    rdx = rax - 0x20000;\n    *((rbp - 0x330)) = rax;\n    rax = 0x1ffffffffffe0000;\n    if (rdx > rax) {\n        rcx = *((rbp - 0x340));\n        rax = 0x1fffffffffffffff;\n        *((rbp - 0x330)) = 0x20000;\n        rdx = rcx - 1;\n        eax = 0x200;\n        if (rdx <= rax) {\n            rax = rcx;\n        }\n        *((rbp - 0x340)) = rax;\n    }\n    edi = *((rbp - 0x2c0));\n    ecx = 2;\n    edx = 0;\n    esi = 0;\n    fcn_0040add0 ();\n    r9d = *((rbp - 0x138));\n    r9d &= 0xf000;\n    if (r9d == 0x8000) {\n        rax = *((rbp - 0x120));\n        ecx = 0x200;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        al = (*((rbp - 0x110)) < rax) ? 1 : 0;\n        eax = (int32_t) al;\n        *((rbp - 0x2f8)) = eax;\n    }\n    rax = r12 - 1;\n    *((rbp - 0x2e0)) = rax;\n    eax = *((rbp - 0xa8));\n    eax &= 0xf000;\n    if (eax == 0x8000) {\n        goto label_215;\n    }\nlabel_87:\n    rdi = *((rbp - 0x118));\n    rsi = *((rbp - 0x330));\n    rax = 0x1ffffffffffe0000;\n    r8 = 0x7fffffffffffffff;\n    r8 -= r12;\n    *((rbp - 0x338)) = r9d;\n    rdx = rdi - 0x20000;\n    *((rbp - 0x2e0)) = r8;\n    eax = 0x20000;\n    rdx = r8;\n    if (rdx > rax) {\n        rdi = rax;\n    }\n    rax = fcn_0040a980 (rdi, rsi, rdx);\n    r9d = *((rbp - 0x338));\n    r8 = *((rbp - 0x2e0));\n    rcx = rax;\n    if (r9d == 0x8000) {\n        goto label_216;\n    }\nlabel_86:\n    rax = *((rbp - 0x330));\n    edx = 0;\n    rsi = rcx + rax - 1;\n    rax = rsi;\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    rsi -= rdx;\n    *((rbp - 0x330)) = rsi;\n    if (rsi == 0) {\n        goto label_217;\n    }\n    if (r8 < rsi) {\n        goto label_217;\n    }\nlabel_85:\n    rax = *((rbp - 0x330));\n    rax = fcn_004112e0 (r12 + rax);\n    rcx = r12 - 1;\n    edx = 0;\n    rcx += rax;\n    *((rbp - 0x2e0)) = rax;\n    rax = rcx;\n    rax = rdx:rax / r12;\n    rdx = rdx:rax % r12;\n    rcx -= rdx;\n    *((rbp - 0x350)) = rcx;\n    if (*((rbp - 0x2f8)) != 0) {\n        goto label_218;\n    }\n    rax = rbp - 0x2a0;\n    *((rbp - 0x340)) = 0;\n    *((rbp - 0x2f8)) = rax;\n    r9b = (*((r13 + 0xc)) == 3) ? 1 : 0;\nlabel_94:\n    rax = rbp - 0x2a8;\n    al = fcn_00405120 (*((rbp - 0x2c0)), *((rbp - 0x2e8)), *((rbp - 0x350)), *((rbp - 0x330)), *((rbp - 0x340)), 0);\n    if (al == 0) {\n        goto label_78;\n    }\n    if (*((rbp - 0x2a8)) != 0) {\n        goto label_219;\n    }\nlabel_71:\n    if (*((r13 + 0x1f)) != 0) {\n        goto label_220;\n    }\nlabel_73:\n    if (*((r13 + 0x1d)) != 0) {\n        eax = *((rbp - 0xa4));\n        if (*((rbp - 0x254)) == eax) {\n            eax = *((rbp - 0xa0));\n            if (*((rbp - 0x250)) == eax) {\n                goto label_221;\n            }\n        }\n        r9 = *((rbp - 0x320));\n        r8d = *((rbp - 0x2d0));\n        eax = fcn_00405770 (r13, *((rbp - 0x2b8)), *((rbp - 0x2e8)), *((rbp - 0x2d8)), r8);\n        if (eax == 0xffffffff) {\n            goto label_78;\n        }\n        if (eax != 0) {\n            goto label_221;\n        }\n        *((rbp - 0x318)) &= 0xfffff1ff;\n    }\nlabel_221:\n    if (*((r13 + 0x27)) != 0) {\n        if ((*((rbp - 0xa8)) & 0x80) == 0) {\n            goto label_222;\n        }\n    }\nlabel_84:\n    rax = 0xff0000000000ff;\n    if ((*((r13 + 0x18)) & rax) != 0) {\n        goto label_223;\n    }\nlabel_206:\n    edx = *((rbp - 0x250));\n    esi = *((rbp - 0x254));\n    *((rbp - 0x2c0)) = r8b;\n    rdi = *((rbp - 0x2b8));\n    eax = lchown ();\n    r8d = *((rbp - 0x2c0));\n    if (eax == 0) {\n        goto label_224;\n    }\n    al = fcn_00405740 (r13);\n    *((rbp - 0x2e8)) = al;\n    if (al == 0) {\n        goto label_225;\n    }\n    eax = *((rbp - 0x2e8));\n    r8d = 0;\n    *((rbp - 0x2e0)) = al;\n    void (*0x405f45)() ();\nlabel_195:\n    rax = *((rbp - 0xc0));\n    if (*((rbp - 0x150)) != rax) {\n        goto label_69;\n    }\n    goto label_33;\nlabel_188:\n    rsi = *((rbp - 0x2b8));\n    rdx = rbp - 0xc0;\n    edi = 1;\n    eax = lxstat ();\n    if (eax == 0) {\n        eax = *((rbp - 0xa8));\n        eax &= 0xf000;\n        if (eax != 0xa000) {\n            goto label_187;\n        }\n        r8d = *((r13 + 0x30));\n        if (r8b == 0) {\n            goto label_226;\n        }\n        eax = 0;\n        eax = fcn_0040ae10 (*((rbp - 0x2b8)), 0x41, *((rbp - 0x2e0)), rcx);\n        *((rbp - 0x2e8)) = eax;\n        rax = *((rbp - 0x2f8));\n        r12d = *(rax);\n    }\nlabel_187:\n    eax = *((rbp - 0x2e8));\n    eax >>= 0x1f;\n    dl = (r12d == 0x15) ? 1 : 0;\n    dl &= al;\n    *((rbp - 0x2d0)) = dl;\n    if (dl == 0) {\n        goto label_227;\n    }\n    rsi = *((rbp - 0x2b8));\n    r12d = 0x15;\n    rdi = rsi;\n    if (*(rsi) == 0) {\n        goto label_70;\n    }\n    eax = 0;\n    rcx |= 0xffffffffffffffff;\n    r12d = 0;\n    __asm (\"repne scasb al, byte [rdi]\");\n    rax = rcx;\n    rax = ~rax;\n    r12b = (*((rsi + rax - 2)) != 0x2f) ? 1 : 0;\n    r12d += 0x14;\n    goto label_70;\nlabel_211:\n    r12d = *((r13 + 0x18));\n    r12d ^= 1;\n    goto label_54;\nlabel_89:\n    *((rbp - 0x2e0)) = 0;\n    goto label_71;\nlabel_204:\n    rax = fcn_0040ea00 (4, r14);\n    edx = 5;\n    esi = \"cannot read symbolic link %s\";\n    rbx = rax;\n    goto label_40;\nlabel_121:\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"cannot remove %s\";\n    rbx = rax;\n    goto label_72;\nlabel_224:\n    *((rbp - 0x2e8)) = r8b;\n    *((rbp - 0x2e0)) = r8b;\n    r8d = 0;\n    void (*0x405f45)() ();\nlabel_220:\n    rax = *((rbp - 0x228));\n    *((rbp - 0x2a0)) = rax;\n    rax = *((rbp - 0x220));\n    *((rbp - 0x298)) = rax;\n    rax = *((rbp - 0x218));\n    *((rbp - 0x290)) = rax;\n    rax = *((rbp - 0x210));\n    *((rbp - 0x288)) = rax;\n    eax = fcn_00410660 (*((rbp - 0x2e8)), *((rbp - 0x2b8)), rbp - 0x2a0, rcx, r8);\n    if (eax == 0) {\n        goto label_73;\n    }\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    *((rbp - 0x2f8)) = rax;\n    rax = dcgettext (0, \"preserving times for %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = *((rbp - 0x2f8));\n    eax = 0;\n    error (0, *(rax), r12);\n    if (*((r13 + 0x24)) == 0) {\n        goto label_73;\n    }\nlabel_78:\n    r8d = 0;\n    void (*0x408940)() ();\nlabel_182:\n    esi = *((r13 + 0x25));\n    rcx = r13;\n    edx = 0;\n    eax = fcn_00405620 (r12, rsi);\n    r8d = eax;\n    if (al != 0) {\n        goto label_74;\n    }\n    eax = *((r13 + 0x26));\n    *((rbp - 0x2d0)) = al;\n    if (al == 0) {\n        goto label_74;\n    }\n    *((rbp - 0x2d0)) = 0;\n    *((rbp - 0x2e0)) = 0;\n    void (*0x408940)() ();\nlabel_194:\n    rax = rbp - 0x150;\n    rsi = *((rbp - 0x2b8));\n    edi = 1;\n    *((rbp - 0x300)) = r8b;\n    rdx = rax;\n    eax = xstat ();\n    r8d = *((rbp - 0x300));\n    if (eax == 0) {\n        goto label_75;\n    }\n    goto label_23;\nlabel_193:\n    rax = rbp - 0xc0;\n    rsi = r14;\n    edi = 1;\n    *((rbp - 0x308)) = r8b;\n    rdx = rax;\n    *((rbp - 0x300)) = r9;\n    eax = xstat ();\n    r9 = *((rbp - 0x300));\n    r8d = *((rbp - 0x308));\n    if (eax == 0) {\n        goto label_76;\n    }\n    goto label_23;\nlabel_213:\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    *((rbp - 0x2e0)) = rax;\n    rax = dcgettext (0, \"cannot fstat %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = *((rbp - 0x2e0));\n    eax = 0;\n    error (0, *(rax), r12);\n    r8d = 0;\n    *((rbp - 0x2e0)) = 0;\n    void (*0x408940)() ();\nlabel_223:\n    r8d = *((rbp - 0x318));\n    ecx = *((rbp - 0x2e8));\n    rdx = *((rbp - 0x2b8));\n    eax = fcn_0040a0d0 (r14, *((rbp - 0x2c0)));\n    r8d = 1;\n    if (eax == 0) {\n        void (*0x408940)() ();\n    }\nlabel_183:\n    r12d = *(r12);\n    if (r12d == 2) {\n        if (*((r13 + 0x18)) == 0) {\n            goto label_228;\n        }\n    }\n    *((rbp - 0x2d0)) = 0;\n    goto label_70;\nlabel_228:\n    *((rbp - 0x348)) = 0;\n    goto label_62;\nlabel_218:\n    *((rbp - 0x323)) = 0;\n    *((rbp - 0x328)) = 1;\nlabel_88:\n    rcx = rbp - 0x2a0;\n    rax = *((rbp - 0x120));\n    r12d = 0;\n    rsi = rcx;\n    *((rbp - 0x2f8)) = rcx;\n    *((rbp - 0x368)) = rax;\n    fcn_00409ae0 (*((rbp - 0x2c0)), rsi);\n    r10d = 0;\n    *((rbp - 0x358)) = ebx;\n    ecx = 0;\n    *((rbp - 0x360)) = r13;\n    rbx = *((rbp - 0x368));\n    *((rbp - 0x322)) = r15b;\n    r15d = *((rbp - 0x310));\n    *((rbp - 0x338)) = r14;\n    r14 = r10;\nlabel_80:\n    *((rbp - 0x310)) = rcx;\n    al = fcn_00409b10 (*((rbp - 0x2f8)));\n    rcx = *((rbp - 0x310));\n    if (al == 0) {\n        goto label_229;\n    }\n    if (*((rbp - 0x288)) == 0) {\n        goto label_230;\n    }\n    rdx = r14;\n    rsi = r12;\n    r13d = 0;\n    eax = 0;\n    while (rcx == 0) {\nlabel_77:\n        r8d = 0;\n        if (*((rbp - 0x328)) == 3) {\n            r8 = *((rbp - 0x340));\n        }\nlabel_79:\n        rax = rbp - 0x2a9;\n        rax = rbp - 0x2a8;\n        al = fcn_00405120 (*((rbp - 0x2c0)), *((rbp - 0x2e8)), *((rbp - 0x350)), *((rbp - 0x330)), r8, 1);\n        if (al == 0) {\n            goto label_231;\n        }\n        rax = *((rbp - 0x2a8));\n        rcx = r12 + rax;\n        if (rax != 0) {\n            r15d = *((rbp - 0x2a9));\n        }\n        if (rbx == rcx) {\n            goto label_232;\n        }\n        eax = r13 + 1;\n        rsi = r12;\n        rdx = r14;\n        r13 = rax;\n        if (rax >= *((rbp - 0x288))) {\n            goto label_230;\n        }\n        rcx = rax * 3;\n        rax = *((rbp - 0x278));\n        rax = rax + rcx*8;\n        r12 = *(rax);\n        r14 = *((rax + 8));\n        rax = r12 + r14;\n        if (rbx < rax) {\n            r14 = rbx;\n            if (r12 > rbx) {\n                r12 = rbx;\n            }\n            r14 -= r12;\n        }\n        rcx = r12;\n        r15d = 0;\n        rcx -= rsi;\n        rcx -= rdx;\n    }\n    edi = *((rbp - 0x2c0));\n    edx = 0;\n    rsi = r12;\n    *((rbp - 0x310)) = rcx;\n    rax = lseek ();\n    rcx = *((rbp - 0x310));\n    if (rax < 0) {\n        goto label_233;\n    }\n    eax = *((rbp - 0x328));\n    if (eax == 1) {\n        goto label_234;\n    }\n    dl = (eax == 3) ? 1 : 0;\n    eax = fcn_00405060 (*((rbp - 0x2e8)), *((rbp - 0x2b8)), 0, rcx);\n    r15d = eax;\n    if (al != 0) {\n        goto label_77;\n    }\nlabel_231:\n    r15d = *((rbp - 0x322));\n    r14 = *((rbp - 0x338));\n    r13 = *((rbp - 0x360));\n    ebx = *((rbp - 0x358));\nlabel_97:\n    free (*((rbp - 0x278)));\n    goto label_78;\nlabel_234:\n    al = fcn_00404c20 (*((rbp - 0x2e8)), rcx);\n    if (al == 0) {\n        goto label_235;\n    }\n    r8d = 0;\n    goto label_79;\nlabel_232:\n    *((rbp - 0x27f)) = 1;\nlabel_230:\n    *((rbp - 0x310)) = rcx;\n    free (*((rbp - 0x278)));\n    *((rbp - 0x278)) = 0;\n    *((rbp - 0x288)) = 0;\n    rcx = *((rbp - 0x310));\n    if (*((rbp - 0x27f)) == 0) {\n        goto label_80;\n    }\n    *((rbp - 0x310)) = r15b;\n    r14 = *((rbp - 0x338));\n    r15d = *((rbp - 0x322));\n    r13 = *((rbp - 0x360));\n    ebx = *((rbp - 0x358));\nlabel_98:\n    r12b = (*((rbp - 0x368)) > rcx) ? 1 : 0;\n    if (*((rbp - 0x368)) > rcx) {\n        goto label_236;\n    }\n    if (*((rbp - 0x310)) == 0) {\n        goto label_71;\n    }\nlabel_236:\n    if (*((rbp - 0x328)) == 1) {\n        goto label_237;\n    }\n    rsi = *((rbp - 0x368));\n    edi = *((rbp - 0x2e8));\n    *((rbp - 0x2f8)) = rcx;\n    eax = ftruncate ();\n    rcx = *((rbp - 0x2f8));\n    if (eax != 0) {\n        goto label_100;\n    }\n    if (*((rbp - 0x328)) != 3) {\n        goto label_71;\n    }\n    if (r12b == 0) {\n        goto label_71;\n    }\n    rdx = *((rbp - 0x368));\n    rdx -= rcx;\n    eax = fcn_00404cd0 (*((rbp - 0x2e8)), rcx);\n    if (eax >= 0) {\n        goto label_71;\n    }\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    *((rbp - 0x2f8)) = rax;\nlabel_95:\n    rax = dcgettext (0, \"error deallocating %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = *((rbp - 0x2f8));\n    eax = 0;\n    error (0, *(rax), r12);\n    goto label_78;\nlabel_227:\n    *((rbp - 0x2d0)) = 1;\n    if (*((rbp - 0x2e8)) < 0) {\n        goto label_70;\n    }\n    goto label_81;\nlabel_200:\n    rax = *((rbp - 0xc0));\n    if (*((rbp - 0x270)) != rax) {\n        goto label_82;\n    }\n    if (*((r13 + 0x18)) == 0) {\n        goto label_238;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"backing up %s might destroy source;  %s not moved\");\n    rbx = rax;\n    do {\n        rax = fcn_0040e920 (1, 4, r14);\n        r12 = rax;\n        rax = fcn_0040e920 (0, 4, *((rbp - 0x2b8)));\n        r8 = r12;\n        rdx = rbx;\n        rcx = rax;\n        goto label_83;\nlabel_238:\n        edx = 5;\n        rax = dcgettext (0, \"backing up %s might destroy source;  %s not copied\");\n        rbx = rax;\n    } while (1);\nlabel_222:\n    eax = geteuid ();\n    if (eax == 0) {\n        goto label_84;\n    }\n    eax = fcn_00404d10 (*((rbp - 0x2e8)), *((rbp - 0x2b8)), 0x180);\n    if (eax != 0) {\n        goto label_84;\n    }\n    edx = ~edx;\n    edx &= *((rbp - 0x354));\n    fcn_00404d10 (*((rbp - 0x2e8)), *((rbp - 0x2b8)), *((rbp - 0x348)));\n    goto label_84;\nlabel_217:\n    *((rbp - 0x330)) = rcx;\n    goto label_85;\nlabel_216:\n    rax = *((rbp - 0x120));\n    if (*((rbp - 0x330)) <= rax) {\n        goto label_86;\n    }\n    rax++;\n    *((rbp - 0x330)) = rax;\n    goto label_86;\nlabel_215:\n    eax = *((r13 + 0xc));\n    if (eax == 3) {\n        goto label_239;\n    }\n    if (eax != 2) {\n        goto label_87;\n    }\n    if ((*((rbp - 0x2f8)) & 1) == 0) {\n        goto label_87;\n    }\n    rax = *((rbp - 0x330));\n    rax = fcn_004112e0 (rax + r12);\n    rcx = r12 - 1;\n    edx = 0;\n    rcx += rax;\n    *((rbp - 0x2e0)) = rax;\n    rax = rcx;\n    rax = rdx:rax / r12;\n    rdx = rdx:rax % r12;\n    rcx -= rdx;\n    *((rbp - 0x350)) = rcx;\nlabel_93:\n    eax = *((r13 + 0xc));\n    *((rbp - 0x328)) = eax;\n    eax = *((rbp - 0x310));\n    *((rbp - 0x323)) = al;\n    goto label_88;\nlabel_214:\n    edx = *((rbp - 0x2c0));\n    eax = 0;\n    eax = ioctl (*((rbp - 0x2e8)), 0x40049409);\n    if (eax == 0) {\n        goto label_89;\n    }\n    if (*((r13 + 0x34)) != 2) {\n        goto label_90;\n    }\n    rax = fcn_0040e920 (1, 4, r14);\n    *((rbp - 0x2f8)) = rax;\n    rax = fcn_0040e920 (0, 4, *((rbp - 0x2b8)));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"failed to clone %s from %s\");\n    *((rbp - 0x2e0)) = rax;\n    rax = errno_location ();\n    r8 = *((rbp - 0x2f8));\n    rcx = r12;\n    eax = 0;\n    error (0, *(rax), *((rbp - 0x2e0)));\n    r8d = 0;\n    *((rbp - 0x2e0)) = 0;\n    void (*0x408940)() ();\nlabel_225:\n    edx = 5;\n    rax = dcgettext (0, \"failed to preserve ownership for %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = *((rbp - 0x2b8));\n    eax = 0;\n    error (0, *(rax), r12);\n    eax = *((r13 + 0x24));\n    *((rbp - 0x321)) = al;\n    if (al != 0) {\n        void (*0x406910)() ();\n    }\n    r8d = *((rbp - 0x2c0));\n    *((rbp - 0x2e8)) = r8b;\n    *((rbp - 0x2e0)) = r8b;\n    r8d = 0;\n    void (*0x405f45)() ();\nlabel_212:\n    eax = *((rbp - 0x1c8));\n    eax &= 0xf000;\n    if (eax != 0xa000) {\n        goto label_91;\n    }\n    eax = *((rbp - 0x2d0));\n    rcx |= 0xffffffffffffffff;\n    rdi = r12;\n    rsi = *((rbp - 0x1b0));\n    __asm (\"repne scasb al, byte [rdi]\");\n    rcx = ~rcx;\n    rax = rcx - 1;\n    if (rsi != rax) {\n        goto label_91;\n    }\n    rax = fcn_0040a1c0 (*((rbp - 0x2b8)), rsi);\n    if (rax == 0) {\n        goto label_91;\n    }\n    rdi = rax;\n    *((rbp - 0x2e0)) = rax;\n    eax = strcmp (rdi, r12);\n    rdx = *((rbp - 0x2e0));\n    rdi = rdx;\n    if (eax != 0) {\n        goto label_240;\n    }\n    free (rdi);\n    goto label_65;\nlabel_186:\n    r8 = r13;\n    ecx = 1;\n    eax = fcn_00405550 (r14, *((rbp - 0x2b8)), *((rbp - 0x354)));\n    r8d = eax;\n    if (al != 0) {\n        goto label_92;\n    }\n    *((rbp - 0x2e0)) = 0;\n    void (*0x407447)() ();\nlabel_239:\n    rax = *((rbp - 0x330));\n    rax = fcn_004112e0 (rax + r12);\n    rcx = r12 - 1;\n    edx = 0;\n    rcx += rax;\n    *((rbp - 0x2e0)) = rax;\n    rax = rcx;\n    rax = rdx:rax / r12;\n    rdx = rdx:rax % r12;\n    rcx -= rdx;\n    *((rbp - 0x350)) = rcx;\n    if (*((rbp - 0x2f8)) != 0) {\n        goto label_93;\n    }\n    r9d = 0;\n    rax = rbp - 0x2a0;\n    r9b = (*((r13 + 0xc)) == 3) ? 1 : 0;\n    *((rbp - 0x2f8)) = rax;\n    goto label_94;\nlabel_219:\n    rsi = *((rbp - 0x2a0));\n    edi = *((rbp - 0x2e8));\n    eax = ftruncate ();\n    if (eax >= 0) {\n        goto label_71;\n    }\nlabel_100:\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"failed to extend %s\";\n    *((rbp - 0x2f8)) = rax;\n    goto label_95;\nlabel_185:\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"removed %s\\n\");\n    rdx = r12;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    goto label_96;\nlabel_233:\n    r14 = *((rbp - 0x338));\n    r15d = *((rbp - 0x322));\n    r13 = *((rbp - 0x360));\n    ebx = *((rbp - 0x358));\n    rax = fcn_0040ea00 (4, r14);\n    edx = 5;\n    *((rbp - 0x2f8)) = rax;\nlabel_99:\n    rax = dcgettext (0, \"cannot lseek %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = *((rbp - 0x2f8));\n    eax = 0;\n    error (0, *(rax), r12);\n    goto label_97;\nlabel_184:\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    *((rbp - 0x2e0)) = rax;\n    rax = dcgettext (0, \"cannot remove %s\");\n    rcx = *((rbp - 0x2e0));\n    esi = *(r12);\n    rdx = rax;\n    goto label_46;\nlabel_229:\n    *((rbp - 0x310)) = r15b;\n    r14 = *((rbp - 0x338));\n    r15d = *((rbp - 0x322));\n    r13 = *((rbp - 0x360));\n    ebx = *((rbp - 0x358));\n    if (*((rbp - 0x27f)) != 0) {\n        goto label_98;\n    }\n    if (*((rbp - 0x280)) != 0) {\n        r9d = 0;\n        eax = 0;\n        r9b = (*((r13 + 0xc)) == 3) ? 1 : 0;\n        if (*((rbp - 0x323)) != 0) {\n            rax = *((rbp - 0x340));\n        }\n        *((rbp - 0x340)) = rax;\n        goto label_94;\nlabel_235:\n        r15d = *((rbp - 0x322));\n        r14 = *((rbp - 0x338));\n        r13 = *((rbp - 0x360));\n        ebx = *((rbp - 0x358));\n        rax = fcn_0040ead0 (0, 3, *((rbp - 0x2b8)));\n        edx = 5;\n        esi = \"%s: write failed\";\n        *((rbp - 0x2f8)) = rax;\n        goto label_99;\n    }\n    rax = fcn_0040ead0 (0, 3, r14);\n    edx = 5;\n    esi = \"%s: failed to get extents info\";\n    *((rbp - 0x2f8)) = rax;\n    goto label_95;\nlabel_237:\n    rsi -= rcx;\n    al = fcn_00404c20 (*((rbp - 0x2e8)), *((rbp - 0x368)));\n    if (al != 0) {\n        goto label_71;\n    }\n    goto label_100;\nlabel_240:\n    free (rdi);\n    goto label_91;\nlabel_226:\n    *((rbp - 0x2e8)) = r8b;\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"not writing through dangling symlink %s\");\n    rcx = r12;\n    eax = 0;\n    error (0, 0, rax);\n    eax = *((rbp - 0x320));\n    *((rbp - 0x2e0)) = 0;\n    r8d = *((rbp - 0x2e8));\n    *((rbp - 0x2d0)) = al;\n    return void (*0x407447)() ();\n}\n"
        },
        {
            "funcName": "fcn_00408617",
            "funcStartAddr": "0x408617",
            "funcEndAddr": "0x408618",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x408617 */\n#include <stdint.h>\n \nvoid fcn_00408617 (void) {\n    __asm (\"std\");\n}\n"
        },
        {
            "funcName": "fcn_00408918",
            "funcStartAddr": "0x408918",
            "funcEndAddr": "0x40c204",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x408918 */\n#include <stdint.h>\n \nuint64_t fcn_00405990 (int64_t arg_10h, int64_t arg_18h, int64_t arg_20h, uint32_t arg_28h, int64_t arg1, char * arg2, int64_t arg3, uint32_t arg4, size_t arg5, uint32_t arg6) {\n    uint32_t var_368h;\n    uint32_t var_360h;\n    uint32_t var_358h;\n    int64_t var_354h;\n    uint32_t var_350h;\n    size_t var_348h;\n    int64_t var_344h;\n    uint32_t var_340h;\n    uint32_t var_338h;\n    uint32_t ptr;\n    uint32_t var_328h;\n    uint32_t var_323h;\n    uint32_t var_322h;\n    int64_t var_321h;\n    func * rtld_fini;\n    func * fini;\n    char * var_310h;\n    size_t s1;\n    size_t s2;\n    uint32_t var_2f8h;\n    char * var_2f0h;\n    size_t fd;\n    char ** format;\n    func * init;\n    size_t src;\n    char *** var_2c8h;\n    uint32_t var_2c4h;\n    char *** errname;\n    char * newpath;\n    int64_t var_2a9h;\n    uint32_t var_2a8h;\n    uint32_t var_2a0h;\n    int64_t var_298h;\n    int64_t var_290h;\n    uint32_t var_288h;\n    uint32_t var_280h;\n    uint32_t var_27fh;\n    void * var_278h;\n    uint32_t var_270h;\n    uint32_t var_268h;\n    uint32_t var_260h;\n    int64_t var_258h;\n    uint32_t var_254h;\n    uint32_t var_250h;\n    int64_t var_248h;\n    int64_t var_240h;\n    int64_t var_228h;\n    int64_t var_220h;\n    int64_t var_218h;\n    int64_t var_210h;\n    uint32_t var_1e0h;\n    uint32_t var_1d8h;\n    uint32_t var_1d0h;\n    int64_t var_1c8h;\n    int64_t var_1b0h;\n    uint32_t var_150h;\n    uint32_t var_148h;\n    int64_t var_140h;\n    int64_t var_138h;\n    int64_t var_130h;\n    int64_t var_120h;\n    int64_t var_118h;\n    uint32_t var_110h;\n    int64_t var_100h;\n    int64_t var_f0h;\n    int64_t var_e0h;\n    int64_t var_d0h;\n    uint32_t var_c0h;\n    int64_t var_bch;\n    uint32_t var_b8h;\n    int64_t var_b0h;\n    int64_t var_a8h;\n    int64_t var_a4h;\n    int64_t var_a0h;\n    int64_t var_90h;\n    int64_t var_88h;\n    int64_t var_80h;\n    int64_t var_70h;\n    int64_t var_60h;\n    int64_t var_50h;\n    int64_t var_40h;\n    int64_t var_fh;\n    void * var_fh_2;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\nlabel_17:\n    r14 = rdi;\n    r13 = r9;\n    r12d = edx;\n    *((rbp - 0x2b8)) = rsi;\n    rbp - 0x2c0 = (*((rbp + 0x28)) != 0) ? 1 : 0;\n    ebx = *((rbp + 0x10));\n    *((rbp - 0x2f8)) = rcx;\n    eax = *((rbp - 0x2c0));\n    *((rbp - 0x2e8)) = r8;\n    if (*((r9 + 0x18)) != 0) {\n        if (al == 0) {\n            goto label_101;\n        }\n        rax = *((rbp + 0x28));\n        *(rax) = 0;\n    }\nlabel_101:\n    rax = *((rbp + 0x20));\n    rsi = r14;\n    edi = 1;\n    *(rax) = 0;\n    rax = rbp - 0x270;\n    *((rbp - 0x2d8)) = rax;\n    rdx = rax;\n    if (*((r13 + 4)) == 2) {\n        goto label_102;\n    }\n    eax = xstat ();\n    rsi = r14;\n    r15b = (eax != 0) ? 1 : 0;\n    if (r15b != 0) {\n        void (*0x406237)() ();\n    }\nlabel_2:\n    eax = *((rbp - 0x258));\n    *((rbp - 0x2c8)) = eax;\n    eax &= 0xf000;\n    *((rbp - 0x2c4)) = eax;\n    if (eax == 0x4000) {\n        goto label_103;\n    }\n    if (bl != 0) {\n        r10d = *(r13);\n        rdi = *((r13 + 0x40));\n        if (r10d == 0) {\n            goto label_104;\n        }\n        fcn_0040ae60 (rdi, r14, *((rbp - 0x2d8)));\n    }\nlabel_3:\n    *((rbp - 0x2e0)) = 1;\n    eax = *((r13 + 4));\n    if (eax != 4) {\n        al = (eax == 3) ? 1 : 0;\n        eax = (int32_t) al;\n        eax &= ebx;\n        *((rbp - 0x2e0)) = eax;\n    }\n    if (r12b == 0) {\n        eax = *((rbp - 0x2c4));\n        if (eax != 0x8000) {\n            if (*((r13 + 0x14)) == 0) {\n                goto label_105;\n            }\n            if (eax == 0x4000) {\n                goto label_105;\n            }\n            if (eax == 0xa000) {\n                goto label_105;\n            }\n        }\n        if (*((r13 + 0x18)) != 0) {\n            goto label_105;\n        }\n        if (*((r13 + 0x2c)) != 0) {\n            goto label_105;\n        }\n        if (*((r13 + 0x17)) != 0) {\n            goto label_105;\n        }\n        r9d = *(r13);\n        if (r9d != 0) {\n            goto label_105;\n        }\n        if (*((r13 + 0x15)) != 0) {\n            goto label_105;\n        }\n        rax = rbp - 0x1e0;\n        rsi = *((rbp - 0x2b8));\n        edi = 1;\n        rdx = rax;\n        *((rbp - 0x2f0)) = rax;\n        eax = xstat ();\n        r8d = 1;\n        rbp - 0x2d0 = (eax != 0) ? 1 : 0;\n        if (*((rbp - 0x2d0)) != 0) {\n            goto label_106;\n        }\nlabel_8:\n        rax = *((rbp - 0x1d8));\n        if (*((rbp - 0x268)) == rax) {\n            goto label_107;\n        }\nlabel_26:\n        if (*((r13 + 4)) == 2) {\n            goto label_108;\n        }\nlabel_23:\n        if (*((rbp - 0x2c4)) == 0x4000) {\n            goto label_109;\n        }\n        if (*((r13 + 0x2d)) != 0) {\n            goto label_110;\n        }\nlabel_21:\n        eax = *((r13 + 8));\n        if (*((r13 + 0x18)) != 0) {\n            goto label_111;\n        }\n        if (eax == 2) {\n            goto label_22;\n        }\n        if (eax == 3) {\n            goto label_112;\n        }\nlabel_28:\n        if (*((rbp - 0x2d0)) != 0) {\n            goto label_22;\n        }\n        eax = *((rbp - 0x1c8));\n        ecx = r8d;\n        ecx ^= 1;\n        edx = eax;\n        edx &= 0xf000;\n        if (edx == 0x4000) {\n            goto label_113;\n        }\n        if (*((rbp - 0x2c4)) == 0x4000) {\n            goto label_114;\n        }\n        r12d = *(r13);\n        if (bl != 0) {\nlabel_44:\n            if (r12d == 3) {\n                goto label_115;\n            }\n            *((rbp - 0x300)) = cl;\n            al = fcn_0040aef0 (*((r13 + 0x38)), *((rbp - 0x2b8)), *((rbp - 0x2f0)));\n            ecx = *((rbp - 0x300));\n            if (al != 0) {\n                goto label_116;\n            }\n            if (*((rbp - 0x2c4)) != 0x4000) {\n                eax = *((rbp - 0x1c8));\n                edx = *((rbp - 0x1c8));\n                edx &= 0xf000;\n                if (edx == 0x4000) {\n                    goto label_117;\n                }\n            }\nlabel_41:\n            r12d = *(r13);\n        }\n        eax = *((r13 + 0x18));\n        if (al != 0) {\n            goto label_118;\n        }\n        if (r12d != 0) {\n            goto label_119;\n        }\nlabel_57:\n        edx = *((rbp - 0x1c8));\n        *((rbp - 0x300)) = 0;\n        edx &= 0xf000;\n        dl = (edx == 0x4000) ? 1 : 0;\n        dl |= al;\n        if (dl != 0) {\n            goto label_42;\n        }\n        eax = *((r13 + 0x15));\n        *((rbp - 0x2d0)) = al;\n        if (al == 0) {\n            if (*((r13 + 0x22)) == 0) {\n                goto label_120;\n            }\n            if (*((rbp - 0x1d0)) <= 1) {\n                goto label_120;\n            }\n        }\nlabel_56:\n        *((rbp - 0x2d0)) = cl;\n        eax = unlink (*((rbp - 0x2b8)));\n        ecx = *((rbp - 0x2d0));\n        if (eax != 0) {\n            rax = errno_location ();\n            ecx = *((rbp - 0x2d0));\n            r12 = rax;\n            if (*(rax) != 2) {\n                goto label_121;\n            }\n        }\n        eax = *((r13 + 0x2e));\n        *((rbp - 0x2d0)) = al;\n        if (al != 0) {\n            goto label_122;\n        }\n        if (bl == 0) {\n            goto label_123;\n        }\n        *((rbp - 0x2d0)) = bl;\n        *((rbp - 0x300)) = 0;\n        if (*((r13 + 0x38)) == 0) {\n            goto label_124;\n        }\nlabel_0:\n        if (*((r13 + 0x18)) != 0) {\n            goto label_125;\n        }\n        esi = *(r13);\n        if (esi != 0) {\n            goto label_126;\n        }\n        rdx = rbp - 0x1e0;\n        if (cl == 0) {\n            goto label_127;\n        }\nlabel_31:\n        eax = *((rdx + 0x18));\n        eax &= 0xf000;\n        if (eax != 0xa000) {\n            goto label_1;\n        }\n        al = fcn_0040aef0 (*((r13 + 0x38)), *((rbp - 0x2b8)), rdx);\n        if (al == 0) {\n            goto label_1;\n        }\n        rax = fcn_0040e920 (1, 4, *((rbp - 0x2b8)));\n        r12 = rax;\n        rax = fcn_0040e920 (0, 4, r14);\n        edx = 5;\n        rbx = rax;\nlabel_24:\n        rax = dcgettext (0, \"will not copy %s through just-created symlink %s\");\n        r8 = r12;\n        rcx = rbx;\nlabel_83:\n        eax = 0;\n        error (0, 0, rax);\n    }\nlabel_9:\n    *((rbp - 0x2d0)) = 1;\n    ecx = 0;\n    *((rbp - 0x300)) = 0;\nlabel_42:\n    if (bl != 0) {\n        goto label_128;\n    }\nlabel_1:\n    if (*((r13 + 0x2e)) == 0) {\n        goto label_124;\n    }\n    if (*((r13 + 0x18)) != 0) {\n        goto label_129;\n    }\nlabel_15:\n    if (*((rbp - 0x2c4)) == 0x4000) {\n        goto label_130;\n    }\n    fcn_00404d70 (r14, *((rbp - 0x2b8)), *((rbp - 0x300)));\nlabel_4:\n    if (*((r13 + 0x18)) != 0) {\n        goto label_131;\n    }\nlabel_16:\n    if (*((r13 + 0x22)) != 0) {\n        goto label_7;\n    }\n    eax = *((rbp - 0x2d0));\n    *((rbp - 0x2f0)) = 0;\n    *((rbp - 0x2c0)) = eax;\nlabel_5:\n    r12d = *((rbp - 0x2c8));\n    r12d &= 0xfff;\n    if (*((r13 + 0x2b)) != 0) {\n        r12d = *((r13 + 0x10));\n        r12d &= 0xfff;\n    }\n    if (*((r13 + 0x1d)) != 0) {\n        goto label_132;\n    }\n    if (*((rbp - 0x2c4)) == 0x4000) {\n        goto label_133;\n    }\n    ecx = *((rbp - 0x2c0));\n    r8 = r13;\n    al = fcn_00405550 (r14, *((rbp - 0x2b8)), *((rbp - 0x2c8)));\n    *((rbp - 0x308)) = 0;\n    if (al == 0) {\n        void (*0x406271)() ();\n    }\nlabel_13:\n    eax = *((r13 + 0x2c));\n    *((rbp - 0x2e8)) = al;\n    if (al == 0) {\n        goto label_134;\n    }\n    if (*(r14) != 0x2f) {\n        rdi = *((rbp - 0x2b8));\n        rax = fcn_0040ac60 ();\n        esi = 0x418d7b;\n        ecx = 2;\n        rdi = rax;\n        r12 = rax;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        al = (*(r14) > 0x2f) ? 1 : 0;\n        if (al != 0) {\n            goto label_135;\n        }\nlabel_33:\n        free (r12);\n    }\n    ecx = *((r13 + 0x16));\n    eax = fcn_00409fd0 (r14, 0xffffff9c, *((rbp - 0x2b8)), rcx);\n    if (eax < 0) {\n        goto label_136;\n    }\n    eax = *((rbp - 0x2e8));\n    *((rbp - 0x321)) = 0;\n    r8d = 0;\n    *((rbp - 0x2e0)) = al;\nlabel_128:\n    if (*((r13 + 0x38)) != 0) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_102:\n    eax = lxstat ();\n    rsi = r14;\n    r15b = (eax != 0) ? 1 : 0;\n    if (r15b == 0) {\n        goto label_2;\n    }\nlabel_103:\n    if (*((r13 + 0x2a)) == 0) {\n        goto label_137;\n    }\n    if (bl == 0) {\n        goto label_3;\n    }\n    goto label_138;\nlabel_125:\n    if (*((r13 + 0x2e)) != 0) {\n        goto label_129;\n    }\nlabel_124:\n    if (*((r13 + 0x2a)) == 0) {\n        goto label_4;\n    }\n    if (*((rbp - 0x2c4)) != 0x4000) {\n        goto label_4;\n    }\nlabel_6:\n    rdx = *((rbp - 0x270));\n    rdi = *((rbp - 0x268));\n    if (bl == 0) {\n        goto label_139;\n    }\n    rax = fcn_00409a10 (*((rbp - 0x2b8)), rdi, rdx);\n    *((rbp - 0x2f0)) = rax;\nlabel_19:\n    if (*((rbp - 0x2f0)) == 0) {\n        goto label_10;\n    }\nlabel_11:\n    al = fcn_0040ef80 (r14, *((rbp - 0x2f0)));\n    if (al != 0) {\n        goto label_140;\n    }\n    al = fcn_0040ef80 (*((rbp - 0x2b8)), *((rbp - 0x2f0)));\n    if (al != 0) {\n        goto label_141;\n    }\n    eax = *((r13 + 4));\n    if (eax == 4) {\n        goto label_10;\n    }\n    if (eax == 3) {\n        if (bl != 0) {\n            goto label_10;\n        }\n    }\n    rax = fcn_0040e920 (1, 4, *((rbp - 0x2f0)));\n    r12 = rax;\n    rax = fcn_0040e920 (0, 4, *((rbp - 0x2b8)));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"will not create hard link %s to directory %s\");\n    r8 = r12;\n    rcx = rbx;\n    eax = 0;\n    rax = error (0, 0, rax);\nlabel_12:\n    if (*((r13 + 0x25)) != 0) {\n        void (*0x406e0d)() ();\n    }\nlabel_7:\n    if (*((r13 + 0x17)) == 0) {\n        goto label_142;\n    }\n    *((rbp - 0x2f0)) = 0;\nlabel_10:\n    if (*((r13 + 0x18)) != 0) {\n        goto label_143;\n    }\n    eax = *((rbp - 0x2d0));\n    *((rbp - 0x2c0)) = eax;\n    goto label_5;\nlabel_129:\n    if (*((rbp - 0x2c4)) != 0x4000) {\n        goto label_131;\n    }\n    if (*((r13 + 0x2a)) != 0) {\n        goto label_6;\n    }\nlabel_131:\n    if (*((rbp - 0x260)) == 1) {\n        goto label_144;\n    }\n    if (*((r13 + 0x22)) != 0) {\n        goto label_7;\n    }\n    *((rbp - 0x2f0)) = 0;\nlabel_143:\n    eax = rename (r14, *((rbp - 0x2b8)));\n    if (eax == 0) {\n        goto label_145;\n    }\n    rax = errno_location ();\n    r12 = rax;\n    eax = *(rax);\n    if (eax == 0x16) {\n        goto label_146;\n    }\n    if (eax != 0x12) {\n        goto label_147;\n    }\n    rdi = *((rbp - 0x2b8));\n    if (*((rbp - 0x2c4)) == 0x4000) {\n        goto label_148;\n    }\n    eax = unlink (rdi);\n    if (eax != 0) {\n        if (*(r12) != 2) {\n            goto label_149;\n        }\n    }\n    al = (*((rbp - 0x2c4)) != 0x4000) ? 1 : 0;\n    al &= *((r13 + 0x2e));\n    *((rbp - 0x2d0)) = al;\n    if (al != 0) {\n        goto label_150;\n    }\nlabel_25:\n    *((rbp - 0x2c0)) = 1;\n    *((rbp - 0x2d0)) = 1;\n    goto label_5;\nlabel_105:\n    rax = rbp - 0x1e0;\n    rsi = *((rbp - 0x2b8));\n    edi = 1;\n    rdx = rax;\n    *((rbp - 0x2f0)) = rax;\n    eax = lxstat ();\n    r8d = r12d;\n    rbp - 0x2d0 = (eax != 0) ? 1 : 0;\n    if (*((rbp - 0x2d0)) == 0) {\n        goto label_8;\n    }\nlabel_106:\n    rax = errno_location ();\n    if (*(rax) == 2) {\n        goto label_9;\n    }\n    *((rbp - 0x2c0)) = rax;\n    r15d = r12d;\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"cannot stat %s\");\n    r8 = *((rbp - 0x2c0));\n    rcx = rbx;\n    eax = 0;\n    error (0, *(r8), rax);\n    void (*0x406271)() ();\nlabel_142:\n    if (*((rbp - 0x260)) > 1) {\n        goto label_151;\n    }\n    eax = *((r13 + 4));\n    if (bl != 0) {\n        if (eax == 3) {\n            goto label_151;\n        }\n    }\n    *((rbp - 0x2f0)) = 0;\n    if (eax != 4) {\n        goto label_10;\n    }\nlabel_151:\n    rax = fcn_00409a10 (*((rbp - 0x2b8)), *((rbp - 0x268)), *((rbp - 0x270)));\n    *((rbp - 0x2f0)) = rax;\nlabel_20:\n    if (*((rbp - 0x2f0)) == 0) {\n        goto label_10;\n    }\n    if (*((rbp - 0x2c4)) == 0x4000) {\n        goto label_11;\n    }\n    ecx = *((r13 + 0x2e));\n    r8d = *((rbp - 0x2e0));\n    al = fcn_00404f50 (*((rbp - 0x2f0)), *((rbp - 0x2b8)), 1);\n    if (al == 0) {\n        goto label_12;\n    }\nlabel_22:\n    r15d = 1;\n    void (*0x406271)() ();\nlabel_104:\n    al = fcn_0040aef0 (rdi, r14, *((rbp - 0x2d8)));\n    if (al != 0) {\n        goto label_152;\n    }\nlabel_138:\n    fcn_0040ae60 (*((r13 + 0x40)), r14, *((rbp - 0x2d8)));\n    goto label_3;\nlabel_132:\n    ecx = *((rbp - 0x2c0));\n    r8 = r13;\n    al = fcn_00405550 (r14, *((rbp - 0x2b8)), *((rbp - 0x2c8)));\n    if (al == 0) {\n        void (*0x406271)() ();\n    }\n    eax = r12d;\n    eax &= 0x3f;\n    *((rbp - 0x308)) = eax;\n    if (*((rbp - 0x2c4)) != 0x4000) {\n        goto label_13;\n    }\nlabel_18:\n    rdx = *((rbp - 0x268));\n    rcx = *((rbp - 0x270));\n    rax = *((rbp - 0x2e8));\n    if (*((rbp - 0x2e8)) != 0) {\n        goto label_153;\n    }\n    goto label_154;\n    do {\nlabel_14:\n        rax = *(rax);\n        if (rax == 0) {\n            goto label_154;\n        }\nlabel_153:\n    } while (*((rax + 8)) != rdx);\n    if (*((rax + 0x10)) != rcx) {\n        goto label_14;\n    }\n    rax = fcn_0040ea00 (4, r14);\n    edx = 5;\n    rbx = rax;\nlabel_34:\n    rax = dcgettext (0, \"cannot copy cyclic symbolic link %s\");\n    rcx = rbx;\n    eax = 0;\n    error (0, 0, rax);\n    void (*0x406910)() ();\nlabel_126:\n    if (*((r13 + 0x2e)) != 0) {\n        goto label_15;\n    }\n    if (*((rbp - 0x2c4)) != 0x4000) {\n        goto label_16;\n    }\nlabel_130:\n    if (*((r13 + 0x2a)) == 0) {\n        goto label_16;\n    }\n    goto label_6;\nlabel_134:\n    eax = *((r13 + 0x17));\n    *((rbp - 0x321)) = al;\n    if (al != 0) {\n        goto label_155;\n    }\n    eax = *((rbp - 0x2c4));\n    if (eax == 0x8000) {\n        goto label_156;\n    }\n    r8b = (eax != 0xa000) ? 1 : 0;\n    r8b &= *((r13 + 0x14));\n    if (r8b != 0) {\n        goto label_156;\n    }\n    *((rbp - 0x2c0)) = r8b;\n    if (*((rbp - 0x2c4)) == 0x1000) {\n        goto label_157;\n    }\n    ecx = *((rbp - 0x2c8));\n    eax = *((rbp - 0x2c8));\n    eax &= 0xb000;\n    r12b = (eax == 0x2000) ? 1 : 0;\n    al = (*((rbp - 0x2c4)) == 0xc000) ? 1 : 0;\n    r12b |= al;\n    *((rbp - 0x2e0)) = r12b;\n    if (r12b == 0) {\n        goto label_158;\n    }\n    edx = *((rbp - 0x308));\n    rax = *((rbp - 0x248));\n    edi = 0;\n    rsi = *((rbp - 0x2b8));\n    edx = ~edx;\n    *((rbp - 0xc0)) = rax;\n    edx &= ecx;\n    rcx = rbp - 0xc0;\n    eax = xmknod ();\n    r8d = *((rbp - 0x2c0));\n    *((rbp - 0x2e8)) = r8b;\n    *((rbp - 0x321)) = r8b;\n    if (eax == 0) {\n        void (*0x405f45)() ();\n    }\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    rbx = rax;\nlabel_40:\n    rax = dcgettext (0, \"cannot create special file %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    error (0, *(rax), r12);\nlabel_154:\n    rsi = *((rbp - 0x2e8));\n    rax = rsp + 0xf;\n    rax &= 0xfffffffffffffff0;\n    *((rbp - 0x318)) = rax;\n    *(rax) = rsi;\n    *((rax + 8)) = rdx;\n    *((rax + 0x10)) = rcx;\n    if (*((rbp - 0x2d0)) == 0) {\n        eax = *((rbp - 0x1c8));\n        eax &= 0xf000;\n        if (eax == 0x4000) {\n            goto label_159;\n        }\n    }\n    esi = *((rbp - 0x308));\n    rdi = *((rbp - 0x2b8));\n    esi = ~esi;\n    esi &= r12d;\n    eax = mkdir ();\n    if (eax != 0) {\n        goto label_160;\n    }\n    rsi = *((rbp - 0x2b8));\n    rdx = rbp - 0x1e0;\n    edi = 1;\n    eax = lxstat ();\n    if (eax != 0) {\n        goto label_161;\n    }\n    r12d = *((rbp - 0x1c8));\n    *((rbp - 0x321)) = 0;\n    eax = r12d;\n    eax &= 0x1c0;\n    if (eax != 0x1c0) {\n        esi |= 0x1c0;\n        eax = chmod (*((rbp - 0x2b8)), r12d);\n        *((rbp - 0x344)) = r12d;\n        *((rbp - 0x321)) = 1;\n        if (eax != 0) {\n            goto label_162;\n        }\n    }\n    rax = *((rbp + 0x18));\n    if (*(rax) == 0) {\n        goto label_163;\n    }\nlabel_48:\n    if (*((r13 + 0x2e)) != 0) {\n        if (*((r13 + 0x18)) == 0) {\n            goto label_164;\n        }\n        rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n        edx = 5;\n        r12 = rax;\n        rax = dcgettext (0, \"created directory %s\\n\");\n        rdx = r12;\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n    }\nlabel_43:\n    rax = *((rbp - 0x2f8));\n    r12b = (rax != 0) ? 1 : 0;\n    r12b &= *((r13 + 0x1c));\n    *((rbp - 0x2e0)) = r12b;\n    if (r12b != 0) {\n        goto label_165;\n    }\nlabel_32:\n    __asm (\"movdqu xmm0, xmmword [r13]\");\n    __asm (\"movdqu xmm1, xmmword [r13 + 0x10]\");\n    esi = 2;\n    __asm (\"movdqu xmm2, xmmword [r13 + 0x20]\");\n    __asm (\"movdqu xmm3, xmmword [r13 + 0x30]\");\n    rax = *((r13 + 0x40));\n    *((rbp - 0xc0)) = xmm0;\n    *((rbp - 0xb0)) = xmm1;\n    *((rbp - 0xa0)) = xmm2;\n    *((rbp - 0x90)) = xmm3;\n    *((rbp - 0x80)) = rax;\n    rax = fcn_0040f480 (r14);\n    *((rbp - 0x330)) = rax;\n    if (rax == 0) {\n        goto label_166;\n    }\n    if (*((r13 + 4)) == 3) {\n        *((rbp - 0xbc)) = 2;\n    }\n    rax = *((rbp - 0x330));\n    if (*(rax) == 0) {\n        goto label_167;\n    }\n    rax = rbp - 0x150;\n    ecx = 0;\n    *((rbp - 0x338)) = r15b;\n    r12 = *((rbp - 0x330));\n    *((rbp - 0x310)) = rax;\n    rax = rbp - 0xc0;\n    r15d = ecx;\n    *((rbp - 0x320)) = rax;\n    rax = rbp - 0x2a0;\n    *((rbp - 0x340)) = r13;\n    r13 = *((rbp + 0x20));\n    *((rbp - 0x2e0)) = 1;\n    *((rbp - 0x2f8)) = rax;\n    *((rbp - 0x2e8)) = r14;\n    *((rbp - 0x328)) = ebx;\n    while (*((rbp - 0x2a0)) == 0) {\n        r15b |= *((rbp - 0x150));\n        strlen (r12);\n        r12 = r12 + rax + 1;\n        if (*(r12) == 0) {\n            goto label_168;\n        }\n        rdi = *((rbp - 0x2e8));\n        edx = 0;\n        rsi = r12;\n        rax = fcn_0040b0c0 ();\n        rdi = *((rbp - 0x2b8));\n        edx = 0;\n        rsi = r12;\n        rbx = rax;\n        rax = fcn_0040b0c0 ();\n        r14 = rax;\n        rax = *((rbp + 0x18));\n        eax = *(rax);\n        *((rbp - 0x150)) = al;\n        al = fcn_00405990 (rbx, r14, *((rbp - 0x2c0)), *((rbp - 0x2d8)), *((rbp - 0x318)), *((rbp - 0x320)));\n        goto label_17;\n        *((rbp - 0x2e0)) &= al;\n        eax = *((rbp - 0x2a0));\n        *(r13) |= al;\n        free (r14);\n        free (rbx);\n    }\nlabel_168:\n    r12d = r15d;\n    r14 = *((rbp - 0x2e8));\n    r15d = *((rbp - 0x338));\n    r13 = *((rbp - 0x340));\n    ebx = *((rbp - 0x328));\nlabel_66:\n    free (*((rbp - 0x330)));\n    rax = *((rbp + 0x18));\n    *(rax) = r12b;\nlabel_61:\n    *((rbp - 0x2e8)) = 0;\n    r8d = 0;\n    void (*0x405f45)() ();\nlabel_133:\n    ecx = *((rbp - 0x2c0));\n    r8 = r13;\n    al = fcn_00405550 (r14, *((rbp - 0x2b8)), *((rbp - 0x2c8)));\n    if (al == 0) {\n        void (*0x406271)() ();\n    }\n    eax = r12d;\n    eax &= 0x12;\n    *((rbp - 0x308)) = eax;\n    goto label_18;\nlabel_137:\n    rax = fcn_0040ea00 (4, rsi);\n    edx = 5;\n    rbx = rax;\n    if (*((r13 + 0x19)) == 0) {\n        void (*0x406e18)() ();\n    }\nlabel_55:\n    dcgettext (0, \"omitting directory %s\");\nlabel_67:\n    rdx = *((rbp - 0x270));\n    *((rbp - 0x300)) = 0;\nlabel_139:\n    rax = fcn_004099d0 (*((rbp - 0x268)), rdx);\n    *((rbp - 0x2f0)) = rax;\n    goto label_19;\nlabel_144:\n    rax = fcn_004099d0 (*((rbp - 0x268)), *((rbp - 0x270)));\n    *((rbp - 0x2f0)) = rax;\n    goto label_20;\nlabel_110:\n    ecx = 0;\n    if (*((r13 + 0x1f)) != 0) {\n        ecx = 1;\n        if (*((r13 + 0x18)) == 0) {\n            goto label_169;\n        }\n        rax = *((rbp - 0x270));\n        cl = (*((rbp - 0x1e0)) != rax) ? 1 : 0;\n    }\nlabel_169:\n    *((rbp - 0x300)) = r8b;\n    eax = fcn_0040fd60 (*((rbp - 0x2b8)), *((rbp - 0x2f0)), *((rbp - 0x2d8)), 0);\n    r8d = *((rbp - 0x300));\n    if (eax < 0) {\n        goto label_21;\n    }\n    if (*((rbp + 0x28)) != 0) {\n        rax = *((rbp + 0x28));\n        *(rax) = 1;\n    }\n    rax = fcn_00409a10 (*((rbp - 0x2b8)), *((rbp - 0x268)), *((rbp - 0x270)));\n    if (rax == 0) {\n        goto label_22;\n    }\n    ecx = *((r13 + 0x2e));\n    r8d = *((rbp - 0x2e0));\n    al = fcn_00404f50 (rax, *((rbp - 0x2b8)), 1);\n    if (al != 0) {\n        goto label_22;\n    }\n    if (*((r13 + 0x25)) == 0) {\n        void (*0x406271)() ();\n    }\nlabel_108:\n    r12d = 0;\n    ecx = 0;\nlabel_47:\n    eax = *((rbp - 0x258));\n    r9 = *((rbp - 0x2f0));\n    rdx = *((rbp - 0x2d8));\n    eax &= 0xf000;\n    if (eax == 0xa000) {\n        goto label_170;\n    }\nlabel_27:\n    edi = *(r13);\n    if (edi == 0) {\n        goto label_171;\n    }\n    if (r12b != 0) {\n        goto label_172;\n    }\n    if (*((r13 + 0x18)) != 0) {\n        goto label_23;\n    }\n    if (*((r13 + 4)) == 2) {\n        goto label_23;\n    }\n    eax = *((rdx + 0x18));\n    eax &= 0xf000;\n    if (eax != 0xa000) {\n        goto label_23;\n    }\n    eax = *((r9 + 0x18));\n    eax &= 0xf000;\n    if (eax == 0xa000) {\n        goto label_23;\n    }\nlabel_30:\n    rax = fcn_0040e920 (1, 4, *((rbp - 0x2b8)));\n    r12 = rax;\n    rax = fcn_0040e920 (0, 4, r14);\n    edx = 5;\n    esi = \"%s and %s are the same file\";\n    rbx = rax;\n    goto label_24;\nlabel_155:\n    r8d = *((rbp - 0x2e0));\n    edx = *((r13 + 0x16));\n    ecx = 0;\n    al = fcn_00404f50 (r14, *((rbp - 0x2b8)), rdx);\n    r8d = 0;\n    *((rbp - 0x321)) = 0;\n    *((rbp - 0x2e0)) = al;\n    if (al != 0) {\n        void (*0x405f45)() ();\n    }\n    void (*0x406910)() ();\nlabel_148:\n    eax = rmdir ();\n    if (eax == 0) {\n        goto label_25;\n    }\n    if (*(r12) == 2) {\n        goto label_25;\n    }\nlabel_149:\n    rax = fcn_0040e920 (1, 4, *((rbp - 0x2b8)));\n    r13 = rax;\n    rax = fcn_0040e920 (0, 4, r14);\n    edx = 5;\n    rbx = rax;\nlabel_29:\n    rax = dcgettext (0, \"inter-device move failed: %s to %s; unable to remove target\");\n    r8 = r13;\n    rcx = rbx;\n    eax = 0;\n    error (0, *(r12), rax);\n    fcn_00409980 (*((rbp - 0x268)), *((rbp - 0x270)));\n    void (*0x406271)() ();\nlabel_145:\n    if (*((r13 + 0x2e)) != 0) {\n        goto label_173;\n    }\nlabel_39:\n    if (*((r13 + 0x21)) != 0) {\n        goto label_174;\n    }\nlabel_38:\n    if (*((rbp + 0x28)) != 0) {\n        rax = *((rbp + 0x28));\n        *(rax) = 1;\n    }\n    if (bl == 0) {\n        goto label_22;\n    }\n    r15d = ebx;\n    fcn_0040ae60 (*((r13 + 0x38)), *((rbp - 0x2b8)), *((rbp - 0x2d8)));\n    void (*0x406271)() ();\nlabel_107:\n    rax = *((rbp - 0x1e0));\n    if (*((rbp - 0x270)) != rax) {\n        goto label_26;\n    }\n    r12d = *((r13 + 0x17));\n    if (r12b != 0) {\n        goto label_37;\n    }\n    if (*((r13 + 4)) == 2) {\n        goto label_175;\n    }\n    rax = rbp - 0x150;\n    rsi = *((rbp - 0x2b8));\n    edi = 1;\n    *((rbp - 0x300)) = r8b;\n    rdx = rax;\n    *((rbp - 0x310)) = rax;\n    eax = lxstat ();\n    r8d = *((rbp - 0x300));\n    if (eax != 0) {\n        goto label_23;\n    }\n    rax = rbp - 0xc0;\n    rsi = r14;\n    edi = 1;\n    rdx = rax;\n    *((rbp - 0x320)) = rax;\n    eax = lxstat ();\n    r8d = *((rbp - 0x300));\n    if (eax != 0) {\n        goto label_23;\n    }\n    rax = *((rbp - 0x148));\n    if (*((rbp - 0xb8)) == rax) {\n        rax = *((rbp - 0x150));\n        r12b = (*((rbp - 0xc0)) == rax) ? 1 : 0;\n    }\n    eax = *((rbp - 0xa8));\n    r9 = *((rbp - 0x310));\n    rdx = *((rbp - 0x320));\n    eax &= 0xf000;\n    if (eax != 0xa000) {\n        goto label_27;\n    }\n    eax = *((rbp - 0x138));\n    eax &= 0xf000;\n    if (eax != 0xa000) {\n        goto label_27;\n    }\n    if (*((r13 + 0x15)) == 0) {\n        goto label_27;\n    }\n    goto label_23;\nlabel_109:\n    if (*((r13 + 0x18)) == 0) {\n        goto label_28;\n    }\n    eax = *((r13 + 8));\nlabel_111:\n    if (eax == 2) {\n        goto label_176;\n    }\n    if (eax == 3) {\n        goto label_177;\n    }\n    if (eax != 4) {\n        goto label_28;\n    }\n    if (*((r13 + 0x2f)) == 0) {\n        goto label_28;\n    }\n    *((rbp - 0x300)) = r8b;\n    al = fcn_00404bd0 (*((rbp - 0x2b8)), *((rbp - 0x1c8)));\n    r8d = *((rbp - 0x300));\n    if (al != 0) {\n        goto label_28;\n    }\nlabel_177:\n    rax = *((rbp - 0x2f0));\n    *((rbp - 0x300)) = r8b;\n    al = fcn_00404e20 (r13, *((rbp - 0x2b8)), rax + 0x18);\n    r8d = *((rbp - 0x300));\n    if (al != 0) {\n        goto label_28;\n    }\nlabel_176:\n    if (*((rbp + 0x28)) == 0) {\n        goto label_22;\n    }\nlabel_51:\n    rax = *((rbp + 0x28));\n    r15d = 1;\n    *(rax) = 1;\n    void (*0x406271)() ();\nlabel_147:\n    rax = fcn_0040e920 (1, 4, *((rbp - 0x2b8)));\n    r13 = rax;\n    rax = fcn_0040e920 (0, 4, r14);\n    edx = 5;\n    esi = \"cannot move %s to %s\";\n    rbx = rax;\n    goto label_29;\nlabel_156:\n    eax = *((rbp - 0x258));\n    sil = (*((r13 + 4)) == 2) ? 1 : 0;\n    *((rbp - 0x318)) = eax;\n    eax = *((r13 + 0x23));\n    esi <<= 0x11;\n    *((rbp - 0x310)) = al;\n    eax = 0;\n    eax = fcn_0040ae10 (r14, 0, rdx, rcx);\n    *((rbp - 0x2c0)) = eax;\n    if (eax < 0) {\n        goto label_178;\n    }\n    esi = *((rbp - 0x2c0));\n    rdx = rbp - 0x150;\n    edi = 1;\n    eax = fxstat ();\n    if (eax != 0) {\n        goto label_179;\n    }\n    rax = *((rbp - 0x148));\n    if (*((rbp - 0x268)) != rax) {\n        goto label_180;\n    }\n    rax = *((rbp - 0x150));\n    if (*((rbp - 0x270)) != rax) {\n        goto label_180;\n    }\n    r12d &= 0x1ff;\n    *((rbp - 0x354)) = r12d;\n    if (*((rbp - 0x2d0)) != 0) {\n        goto label_92;\n    }\n    r12 = *((rbp - 0x2b8));\n    esi -= esi;\n    eax = 0;\n    esi &= 0xfffffe00;\n    esi += 0x201;\n    eax = fcn_0040ae10 (r12, rsi, rdx, rcx);\n    ecx = eax;\n    *((rbp - 0x2e8)) = eax;\n    rax = 0xff000000ff00;\n    if ((*((r13 + 0x20)) & rax) == 0) {\n        goto label_181;\n    }\n    if (ecx >= 0) {\n        goto label_182;\n    }\nlabel_68:\n    rax = errno_location ();\n    r12 = rax;\n    if (*((r13 + 0x16)) == 0) {\n        goto label_183;\n    }\n    eax = unlink (*((rbp - 0x2b8)));\n    if (eax != 0) {\n        goto label_184;\n    }\n    if (*((r13 + 0x2e)) != 0) {\n        goto label_185;\n    }\nlabel_96:\n    eax = *((r13 + 0x21));\n    ecx = *((rbp - 0x308));\n    *((rbp - 0x2d0)) = al;\n    *((rbp - 0x348)) = ecx;\n    if (al != 0) {\n        goto label_186;\n    }\nlabel_62:\n    r12d = *((rbp - 0x348));\n    eax = 0;\n    r12d = ~r12d;\n    r12d &= *((rbp - 0x354));\n    edx = r12d;\n    *((rbp - 0x2e0)) = r12d;\n    eax = fcn_0040ae10 (*((rbp - 0x2b8)), 0xc1, edx, rcx);\n    *((rbp - 0x2e8)) = eax;\n    rax = errno_location ();\n    edx = *((rbp - 0x2e8));\n    r12d = *(rax);\n    *((rbp - 0x2f8)) = rax;\n    edx >>= 0x1f;\n    al = (r12d == 0x11) ? 1 : 0;\n    al &= dl;\n    *((rbp - 0x320)) = al;\n    if (al == 0) {\n        goto label_187;\n    }\n    eax = *((r13 + 0x18));\n    r12d = 0x11;\n    *((rbp - 0x2d0)) = al;\n    if (al == 0) {\n        goto label_188;\n    }\nlabel_70:\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    *((rbp - 0x2e0)) = rax;\n    rax = dcgettext (0, \"cannot create regular file %s\");\n    rcx = *((rbp - 0x2e0));\nlabel_46:\n    eax = 0;\n    error (0, r12d, rax);\n    r8d = 0;\n    *((rbp - 0x2e0)) = 0;\nlabel_171:\n    ecx = *((r13 + 0x18));\n    if (cl != 0) {\n        goto label_189;\n    }\n    if (*((r13 + 0x15)) != 0) {\n        goto label_189;\n    }\n    eax = *((rdx + 0x18));\n    eax &= 0xf000;\n    if (eax != 0xa000) {\nlabel_59:\n        eax = *((r9 + 0x18));\n        eax &= 0xf000;\n        if (eax != 0xa000) {\n            goto label_190;\n        }\nlabel_36:\n        ecx = *((r13 + 0x18));\nlabel_35:\n        if (cl == 0) {\n            goto label_63;\n        }\n        eax = *((rbp - 0x258));\n        eax &= 0xf000;\n        if (eax == 0xa000) {\n            goto label_191;\n        }\n    }\nlabel_63:\n    if (*((r13 + 0x2c)) != 0) {\n        goto label_192;\n    }\n    if ((*((r13 + 0x14)) & 0xff00ff00) != 0) {\n        eax = *((r9 + 0x18));\n        eax &= 0xf000;\n        if (eax == 0xa000) {\n            goto label_192;\n        }\n    }\n    if (*((r13 + 4)) != 2) {\n        goto label_30;\n    }\n    eax = *((rdx + 0x18));\n    eax &= 0xf000;\n    if (eax == 0xa000) {\n        goto label_193;\n    }\n    __asm (\"movdqa xmm4, xmmword [rdx]\");\n    *((rbp - 0xc0)) = xmm4;\n    __asm (\"movdqa xmm5, xmmword [rdx + 0x10]\");\n    *((rbp - 0xb0)) = xmm5;\n    __asm (\"movdqa xmm6, xmmword [rdx + 0x20]\");\n    *((rbp - 0xa0)) = xmm6;\n    __asm (\"movdqa xmm7, xmmword [rdx + 0x30]\");\n    *((rbp - 0x90)) = xmm7;\n    __asm (\"movdqa xmm4, xmmword [rdx + 0x40]\");\n    *((rbp - 0x80)) = xmm4;\n    __asm (\"movdqa xmm5, xmmword [rdx + 0x50]\");\n    *((rbp - 0x70)) = xmm5;\n    __asm (\"movdqa xmm6, xmmword [rdx + 0x60]\");\n    *((rbp - 0x60)) = xmm6;\n    __asm (\"movdqa xmm7, xmmword [rdx + 0x70]\");\n    *((rbp - 0x50)) = xmm7;\n    __asm (\"movdqa xmm4, xmmword [rdx + 0x80]\");\n    *((rbp - 0x40)) = xmm4;\nlabel_76:\n    eax = *((r9 + 0x18));\n    eax &= 0xf000;\n    if (eax == 0xa000) {\n        goto label_194;\n    }\n    __asm (\"movdqa xmm5, xmmword [r9]\");\n    *((rbp - 0x150)) = xmm5;\n    __asm (\"movdqa xmm6, xmmword [r9 + 0x10]\");\n    *((rbp - 0x140)) = xmm6;\n    __asm (\"movdqa xmm7, xmmword [r9 + 0x20]\");\n    *((rbp - 0x130)) = xmm7;\n    __asm (\"movdqa xmm4, xmmword [r9 + 0x30]\");\n    *((rbp - 0x120)) = xmm4;\n    __asm (\"movdqa xmm5, xmmword [r9 + 0x40]\");\n    *((rbp - 0x110)) = xmm5;\n    __asm (\"movdqa xmm6, xmmword [r9 + 0x50]\");\n    *((rbp - 0x100)) = xmm6;\n    __asm (\"movdqa xmm7, xmmword [r9 + 0x60]\");\n    *((rbp - 0xf0)) = xmm7;\n    __asm (\"movdqa xmm4, xmmword [r9 + 0x70]\");\n    *((rbp - 0xe0)) = xmm4;\n    __asm (\"movdqa xmm5, xmmword [r9 + 0x80]\");\n    *((rbp - 0xd0)) = xmm5;\nlabel_75:\n    rax = *((rbp - 0x148));\n    if (*((rbp - 0xb8)) != rax) {\n        goto label_23;\n    }\n    rax = *((rbp - 0x150));\n    if (*((rbp - 0xc0)) != rax) {\n        goto label_23;\n    }\n    if (*((r13 + 0x17)) == 0) {\n        goto label_30;\n    }\nlabel_37:\n    *((rbp - 0x2d0)) = 1;\n    goto label_23;\nlabel_152:\n    *((rbp - 0x2b8)) = al;\n    rax = fcn_0040ea00 (4, r14);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"warning: source file %s specified more than once\");\n    rcx = rbx;\n    eax = 0;\n    error (0, 0, rax);\n    r8d = *((rbp - 0x2b8));\n    r15d = r8d;\n    void (*0x406271)() ();\nlabel_140:\n    rax = fcn_0040e920 (1, 4, *(0x00621988));\n    rbx = rax;\n    rax = fcn_0040e920 (0, 4, *(0x00621990));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"cannot copy a directory, %s, into itself, %s\");\n    r8 = rbx;\n    rcx = r12;\n    eax = 0;\n    error (0, 0, rax);\n    rax = *((rbp + 0x20));\n    *(rax) = 1;\n    goto label_12;\nlabel_127:\n    rax = rbp - 0xc0;\n    rsi = *((rbp - 0x2b8));\n    edi = 1;\n    rdx = rax;\n    r12 = rax;\n    eax = lxstat ();\n    if (eax != 0) {\n        goto label_1;\n    }\n    rdx = r12;\n    goto label_31;\nlabel_165:\n    *((rbp - 0x2e8)) = 0;\n    r8d = 0;\n    rcx = *((rbp - 0x270));\n    if (*(rax) != rcx) {\n        void (*0x405f45)() ();\n    }\n    goto label_32;\nlabel_135:\n    rdx = rbp - 0x150;\n    esi = 0x418d7b;\n    edi = 1;\n    eax = xstat ();\n    if (eax != 0) {\n        goto label_33;\n    }\n    rdx = rbp - 0xc0;\n    rsi = r12;\n    edi = 1;\n    eax = xstat ();\n    if (eax != 0) {\n        goto label_33;\n    }\n    rax = *((rbp - 0xb8));\n    if (*((rbp - 0x148)) == rax) {\n        goto label_195;\n    }\nlabel_69:\n    free (r12);\n    rax = fcn_0040ead0 (0, 3, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"%s: can make relative symbolic links only in current directory\";\n    rbx = rax;\n    goto label_34;\nlabel_189:\n    eax = *((r9 + 0x18));\n    eax &= 0xf000;\n    if (eax == 0xa000) {\n        goto label_23;\n    }\n    if (r12b != 0) {\n        if (*((r9 + 0x10)) > 1) {\n            goto label_196;\n        }\n    }\n    eax = *((rdx + 0x18));\n    eax &= 0xf000;\n    if (eax == 0xa000) {\n        goto label_35;\n    }\nlabel_190:\n    rax = *((r9 + 8));\n    if (*((rdx + 8)) != rax) {\n        goto label_23;\n    }\n    rax = *(r9);\n    if (*(rdx) != rax) {\n        goto label_23;\n    }\n    if (*((r13 + 0x17)) == 0) {\n        goto label_36;\n    }\n    goto label_37;\nlabel_174:\n    rcx = r13;\n    edx = 1;\n    fcn_00405620 (*((rbp - 0x2b8)), 0);\n    goto label_38;\nlabel_173:\n    edx = 5;\n    rax = dcgettext (0, \"renamed \");\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    fcn_00404d70 (r14, *((rbp - 0x2b8)), *((rbp - 0x300)));\n    goto label_39;\nlabel_160:\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"cannot create directory %s\";\n    rbx = rax;\n    goto label_40;\nlabel_113:\n    if (*((rbp - 0x2c4)) == 0x4000) {\n        goto label_41;\n    }\nlabel_117:\n    if (*((r13 + 0x18)) == 0) {\n        goto label_197;\n    }\n    r12d = *(r13);\n    if (r12d == 0) {\n        goto label_197;\n    }\nlabel_45:\n    edx = *((rbp - 0x258));\n    edx &= 0xf000;\n    if (edx == 0x4000) {\n        goto label_198;\n    }\nlabel_50:\n    *((rbp - 0x2f0)) = cl;\n    rax = fcn_0040ad40 (r14);\n    ecx = *((rbp - 0x2f0));\n    r8 = rax;\n    if (*(rax) == 0x2e) {\n        goto label_199;\n    }\nlabel_49:\n    if (r12d != 3) {\n        rdi = r8;\n        *((rbp - 0x2f0)) = cl;\n        *((rbp - 0x308)) = r8;\n        rax = strlen (rdi);\n        *((rbp - 0x2d0)) = rax;\n        rax = fcn_0040ad40 (*((rbp - 0x2b8)));\n        rdi = rax;\n        *((rbp - 0x300)) = rax;\n        rax = strlen (rdi);\n        rcx = imp.__libc_start_main;\n        r12 = rax;\n        rdi = rcx;\n        *((rbp - 0x310)) = rcx;\n        rax = strlen (rdi);\n        ecx = *((rbp - 0x2f0));\n        r9 = rax;\n        rax = r12 + rax;\n        *((rbp - 0x318)) = r9;\n        if (*((rbp - 0x2d0)) != rax) {\n            goto label_82;\n        }\n        r8 = *((rbp - 0x308));\n        *((rbp - 0x2d0)) = cl;\n        rdi = r8;\n        *((rbp - 0x2f0)) = r8;\n        eax = memcmp (rdi, *((rbp - 0x300)), r12);\n        ecx = *((rbp - 0x2d0));\n        if (eax != 0) {\n            goto label_82;\n        }\n        r8 = *((rbp - 0x2f0));\n        eax = strcmp (r8 + r12, *((rbp - 0x310)));\n        ecx = *((rbp - 0x2d0));\n        if (eax != 0) {\n            goto label_82;\n        }\n        *((rbp - 0x300)) = cl;\n        rax = strlen (*((rbp - 0x2b8)));\n        r9 = *((rbp - 0x318));\n        *((rbp - 0x2f0)) = rax;\n        rax = fcn_004112e0 (r9 + rax + 1);\n        rdx = *((rbp - 0x2f0));\n        rsi = *((rbp - 0x2b8));\n        r12 = rax;\n        rax = imp.__libc_start_main;\n        rdi = r12;\n        *((rbp - 0x2d0)) = rax;\n        rax = mempcpy ();\n        strcpy (rax, *((rbp - 0x2d0)));\n        rax = rbp - 0xc0;\n        rsi = r12;\n        edi = 1;\n        rdx = rax;\n        eax = xstat ();\n        *((rbp - 0x2d0)) = eax;\n        free (r12);\n        eax = *((rbp - 0x2d0));\n        ecx = *((rbp - 0x300));\n        if (eax != 0) {\n            goto label_82;\n        }\n        rax = *((rbp - 0xb8));\n        if (*((rbp - 0x268)) == rax) {\n            goto label_200;\n        }\n    }\nlabel_82:\n    *((rbp - 0x2d0)) = cl;\n    rax = fcn_0040a8b0 (*((rbp - 0x2b8)), *(r13));\n    ecx = *((rbp - 0x2d0));\n    r12 = rax;\n    *((rbp - 0x300)) = rax;\n    *((rbp - 0x2f0)) = cl;\n    if (rax == 0) {\n        goto label_201;\n    }\n    rax = strlen (rax);\n    rax += 0x18;\n    rax &= 0xfffffffffffffff0;\n    rdi &= 0xfffffffffffffff0;\n    rax = memcpy (rsp + 0xf, r12, rax + 1);\n    r12 = rax;\n    free (*((rbp - 0x300)));\n    *((rbp - 0x300)) = r12;\n    ecx = *((rbp - 0x2f0));\n    *((rbp - 0x2d0)) = 1;\n    goto label_42;\nlabel_159:\n    rax = 0xff000000ff00;\n    if ((*((r13 + 0x20)) & rax) != 0) {\n        goto label_202;\n    }\nlabel_53:\n    *((rbp - 0x321)) = 0;\n    *((rbp - 0x308)) = 0;\n    goto label_43;\nlabel_170:\n    eax = *((rbp - 0x1c8));\n    eax &= 0xf000;\n    if (eax != 0xa000) {\n        goto label_27;\n    }\n    *((rbp - 0x308)) = ecx;\n    *((rbp - 0x300)) = r8b;\n    al = fcn_0040ef80 (r14, *((rbp - 0x2b8)));\n    if (al != 0) {\n        goto label_30;\n    }\n    r8d = *(r13);\n    r8d = *((rbp - 0x300));\n    if (r8d != 0) {\n        goto label_23;\n    }\n    ecx = *((rbp - 0x308));\n    if (ecx == 0) {\n        goto label_23;\n    }\n    r12d = *((r13 + 0x18));\n    eax = 1;\n    r12d ^= 1;\nlabel_54:\n    if (r12b == 0) {\n        goto label_30;\n    }\n    *((rbp - 0x2d0)) = al;\n    goto label_23;\nlabel_150:\n    edx = 5;\n    rax = dcgettext (0, \"copied \");\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    fcn_00404d70 (r14, *((rbp - 0x2b8)), *((rbp - 0x300)));\n    *((rbp - 0x2c0)) = 1;\n    goto label_5;\nlabel_146:\n    edi = 1;\n    r15d = 1;\n    rax = fcn_0040e920 (edi, 4, *(0x00621988));\n    r12 = rax;\n    rax = fcn_0040e920 (0, 4, *(0x00621990));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"cannot move %s to a subdirectory of itself, %s\");\n    r8 = r12;\n    rcx = rbx;\n    eax = 0;\n    error (0, 0, rax);\n    rax = *((rbp + 0x20));\n    *(rax) = 1;\n    void (*0x406271)() ();\nlabel_136:\n    rax = fcn_0040e920 (1, 4, r14);\n    rbx = rax;\n    rax = fcn_0040e920 (0, 4, *((rbp - 0x2b8)));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"cannot create symbolic link %s to %s\");\n    r14 = rax;\n    rax = errno_location ();\n    r8 = rbx;\n    rcx = r12;\n    eax = 0;\n    error (0, *(rax), r14);\n    void (*0x406910)() ();\nlabel_158:\n    if (*((rbp - 0x2c4)) != 0xa000) {\n        goto label_203;\n    }\n    rax = fcn_0040a1c0 (r14, *((rbp - 0x240)));\n    r12 = rax;\n    if (rax == 0) {\n        goto label_204;\n    }\n    ecx = *((r13 + 0x16));\n    eax = fcn_00409fd0 (rax, 0xffffff9c, *((rbp - 0x2b8)), rcx);\n    if (eax < 0) {\n        goto label_205;\n    }\nlabel_65:\n    free (r12);\n    eax = *((r13 + 0x25));\n    *((rbp - 0x321)) = al;\n    if (al != 0) {\n        void (*0x406e0d)() ();\n    }\n    r8d = *((r13 + 0x1d));\n    if (r8b != 0) {\n        goto label_206;\n    }\n    *((rbp - 0x321)) = r8b;\n    *((rbp - 0x2e8)) = 1;\n    *((rbp - 0x2e0)) = 1;\n    void (*0x405f45)() ();\nlabel_114:\n    if (*((r13 + 0x18)) == 0) {\n        goto label_207;\n    }\n    r12d = *(r13);\n    if (r12d == 0) {\n        goto label_207;\n    }\n    if (bl != 0) {\n        goto label_44;\n    }\n    goto label_45;\nlabel_180:\n    rax = fcn_0040ea00 (4, r14);\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"skipping file %s, as it was replaced while being copied\");\n    rcx = r12;\n    esi = 0;\n    rdx = rax;\n    goto label_46;\nlabel_175:\n    r12d = 1;\n    ecx = 1;\n    goto label_47;\nlabel_163:\n    fcn_00409a10 (*((rbp - 0x2b8)), *((rbp - 0x1d8)), *((rbp - 0x1e0)));\n    rax = *((rbp + 0x18));\n    *(rax) = 1;\n    goto label_48;\nlabel_115:\n    if (*((r13 + 0x18)) != 0) {\n        goto label_45;\n    }\nlabel_119:\n    *((rbp - 0x2f0)) = cl;\n    rax = fcn_0040ad40 (r14);\n    ecx = *((rbp - 0x2f0));\n    r8 = rax;\n    if (*(rax) == 0x2e) {\n        goto label_208;\n    }\nlabel_58:\n    eax = *((rbp - 0x1c8));\n    eax &= 0xf000;\n    if (eax != 0x4000) {\n        goto label_49;\n    }\n    do {\n        *((rbp - 0x300)) = 0;\n        goto label_42;\nlabel_118:\n        eax = *((rbp - 0x258));\n        eax &= 0xf000;\n        if (eax == 0x4000) {\n            goto label_209;\n        }\nlabel_52:\n    } while (r12d == 0);\n    goto label_50;\nlabel_141:\n    rax = fcn_0040ea00 (4, *(0x00621990));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"warning: source directory %s specified more than once\");\n    rcx = rbx;\n    eax = 0;\n    error (0, 0, rax);\n    if (*((r13 + 0x18)) == 0) {\n        goto label_22;\n    }\n    if (*((rbp - 0x2c0)) != 0) {\n        goto label_51;\n    }\n    goto label_22;\nlabel_161:\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"cannot stat %s\";\n    rbx = rax;\n    goto label_40;\nlabel_178:\n    rax = fcn_0040ea00 (4, r14);\n    edx = 5;\n    esi = \"cannot open %s for reading\";\n    rbx = rax;\n    goto label_40;\nlabel_112:\n    rax = *((rbp - 0x2f0));\n    *((rbp - 0x300)) = r8b;\n    al = fcn_00404e20 (r13, *((rbp - 0x2b8)), rax + 0x18);\n    r8d = *((rbp - 0x300));\n    if (al != 0) {\n        goto label_28;\n    }\n    goto label_22;\nlabel_164:\n    fcn_00404d70 (r14, *((rbp - 0x2b8)), 0);\n    goto label_43;\nlabel_157:\n    eax = *((rbp - 0x308));\n    rsi = *((rbp - 0x2b8));\n    edi = 0;\n    rcx = rbp - 0xc0;\n    *((rbp - 0xc0)) = 0;\n    eax = ~eax;\n    eax &= *((rbp - 0x2c8));\n    edx = eax;\n    r12d = eax;\n    eax = xmknod ();\n    r8d = *((rbp - 0x2c0));\n    if (eax != 0) {\n        goto label_210;\n    }\nlabel_64:\n    *((rbp - 0x2e8)) = r8b;\n    *((rbp - 0x321)) = r8b;\n    *((rbp - 0x2e0)) = 1;\n    void (*0x405f45)() ();\nlabel_209:\n    eax = *((rbp - 0x1c8));\nlabel_198:\n    eax &= 0xf000;\n    if (eax == 0x4000) {\n        goto label_52;\n    }\n    if (r12d != 0) {\n        goto label_50;\n    }\n    rax = fcn_0040ead0 (0, 3, *((rbp - 0x2b8)));\n    r12 = rax;\n    rax = fcn_0040ead0 (0, 3, r14);\n    edx = 5;\n    esi = \"cannot move directory onto non-directory: %s -> %s\";\n    rbx = rax;\n    goto label_24;\nlabel_203:\n    rax = fcn_0040ea00 (4, r14);\n    edx = 5;\n    esi = \"%s has unknown file type\";\n    rbx = rax;\n    goto label_34;\nlabel_202:\n    esi = *((r13 + 0x25));\n    edx = 0;\n    rcx = r13;\n    al = fcn_00405620 (*((rbp - 0x2b8)), rsi);\n    if (al != 0) {\n        goto label_53;\n    }\n    if (*((r13 + 0x26)) == 0) {\n        goto label_53;\n    }\n    void (*0x406910)() ();\nlabel_172:\n    *((rbp - 0x2d0)) = r8b;\n    eax = fcn_0040ef80 (r14, *((rbp - 0x2b8)));\n    r8d = *((rbp - 0x2d0));\n    eax ^= 1;\n    r12d = eax;\n    eax = 0;\n    goto label_54;\nlabel_192:\n    rax = *(rdx);\n    r12b = (*(r9) == rax) ? 1 : 0;\n    eax = 0;\n    goto label_54;\nlabel_207:\n    rax = fcn_0040e920 (1, 4, r14);\n    r12 = rax;\n    rax = fcn_0040e920 (0, 4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"cannot overwrite non-directory %s with directory %s\";\n    rbx = rax;\n    goto label_24;\nlabel_201:\n    rax = errno_location ();\n    *((rbp - 0x2d0)) = 1;\n    ecx = *((rbp - 0x2f0));\n    r12 = rax;\n    if (*(rax) == 2) {\n        goto label_42;\n    }\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    rbx = rax;\nlabel_72:\n    r15d = 0;\n    rax = dcgettext (0, \"cannot backup %s\");\n    rcx = rbx;\n    eax = 0;\n    error (0, *(r12), rax);\n    void (*0x406271)() ();\nlabel_197:\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"cannot overwrite directory %s with non-directory\";\n    rbx = rax;\n    goto label_55;\nlabel_179:\n    rax = fcn_0040ea00 (4, r14);\n    edx = 5;\n    *((rbp - 0x2e0)) = rax;\n    rax = dcgettext (0, \"cannot fstat %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = *((rbp - 0x2e0));\n    rdx = r12;\n    esi = *(rax);\n    goto label_46;\nlabel_120:\n    *((rbp - 0x300)) = 0;\n    if (*((r13 + 4)) != 2) {\n        goto label_42;\n    }\n    eax = *((rbp - 0x258));\n    eax &= 0xf000;\n    if (eax != 0x8000) {\n        goto label_56;\n    }\n    goto label_42;\nlabel_199:\n    eax = 1;\nlabel_60:\n    edx = 0;\n    dl = (*((r8 + 1)) == 0x2e) ? 1 : 0;\n    edx = *((r8 + rdx + 1));\n    if (dl == 0) {\n        goto label_57;\n    }\n    if (dl == 0x2f) {\n        goto label_57;\n    }\n    if (al == 0) {\n        goto label_58;\n    }\n    goto label_49;\nlabel_196:\n    *((rbp - 0x310)) = r8b;\n    *((rbp - 0x308)) = r9;\n    *((rbp - 0x300)) = rdx;\n    al = fcn_0040ef80 (r14, *((rbp - 0x2b8)));\n    rdx = *((rbp - 0x300));\n    r9 = *((rbp - 0x308));\n    r8d = *((rbp - 0x310));\n    if (al == 0) {\n        goto label_211;\n    }\n    eax = *((rdx + 0x18));\n    eax &= 0xf000;\n    if (eax != 0xa000) {\n        goto label_59;\n    }\n    goto label_36;\nlabel_208:\n    eax = 0;\n    goto label_60;\nlabel_166:\n    rax = fcn_0040ea00 (4, r14);\n    edx = 5;\n    *((rbp - 0x2c0)) = rax;\n    rax = dcgettext (0, \"cannot access %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = *((rbp - 0x2c0));\n    eax = 0;\n    error (0, *(rax), r12);\n    *((rbp - 0x2e0)) = 0;\n    goto label_61;\nlabel_162:\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"setting permissions for %s\";\n    rbx = rax;\n    goto label_40;\nlabel_92:\n    eax = *((rbp - 0x308));\n    *((rbp - 0x348)) = eax;\n    goto label_62;\nlabel_191:\n    if (*((r9 + 0x10)) <= 1) {\n        goto label_63;\n    }\n    rdi = r14;\n    *((rbp - 0x310)) = r8b;\n    *((rbp - 0x308)) = r9;\n    *((rbp - 0x300)) = rdx;\n    rax = canonicalize_file_name ();\n    rdx = *((rbp - 0x300));\n    r9 = *((rbp - 0x308));\n    r8d = *((rbp - 0x310));\n    if (rax == 0) {\n        goto label_63;\n    }\n    rdi = rax;\n    *((rbp - 0x300)) = r8b;\n    *((rbp - 0x2d0)) = rax;\n    eax = fcn_0040ef80 (rdi, *((rbp - 0x2b8)));\n    rcx = *((rbp - 0x2d0));\n    eax ^= 1;\n    r12d = eax;\n    eax = free (rcx);\n    eax = 0;\n    r8d = *((rbp - 0x300));\n    goto label_54;\nlabel_210:\n    esi = r12d;\n    rdi = *((rbp - 0x2b8));\n    esi &= 0xffffefff;\n    eax = mkfifo ();\n    r8d = *((rbp - 0x2c0));\n    if (eax == 0) {\n        goto label_64;\n    }\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"cannot create fifo %s\";\n    rbx = rax;\n    goto label_40;\nlabel_205:\n    rax = errno_location ();\n    eax = *(rax);\n    *((rbp - 0x2c0)) = eax;\n    if (eax == 0) {\n        goto label_65;\n    }\n    if (*((r13 + 0x2d)) == 1) {\n        if (*((rbp - 0x2d0)) == 0) {\n            goto label_212;\n        }\n    }\nlabel_91:\n    free (r12);\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"cannot create symbolic link %s\");\n    rcx = r12;\n    eax = 0;\n    error (0, *((rbp - 0x2c0)), rax);\n    void (*0x406910)() ();\nlabel_167:\n    r12d = 0;\n    *((rbp - 0x2e0)) = 1;\n    goto label_66;\nlabel_116:\n    rax = fcn_0040e920 (1, 4, r14);\n    r12 = rax;\n    rax = fcn_0040e920 (0, 4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"will not overwrite just-created %s with %s\";\n    rbx = rax;\n    goto label_24;\nlabel_123:\n    al = (*((rbp - 0x2c4)) == 0x4000) ? 1 : 0;\n    al &= *((r13 + 0x2a));\n    *((rbp - 0x2d0)) = al;\n    if (al != 0) {\n        goto label_67;\n    }\n    *((rbp - 0x2d0)) = 1;\n    *((rbp - 0x300)) = 0;\n    goto label_4;\nlabel_122:\n    *((rbp - 0x2f0)) = cl;\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"removed %s\\n\");\n    rdx = r12;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    ecx = *((rbp - 0x2f0));\n    *((rbp - 0x300)) = 0;\n    goto label_42;\nlabel_181:\n    ecx = *((rbp - 0x2e8));\n    if (ecx < 0) {\n        goto label_68;\n    }\nlabel_74:\n    *((rbp - 0x348)) = 0;\nlabel_81:\n    rax = rbp - 0xc0;\n    esi = *((rbp - 0x2e8));\n    __asm (\"std\");\n    edi = 1;\n    rdx = rax;\n    *((rbp - 0x320)) = rax;\n    eax = fxstat ();\n    *((rbp - 0x2f8)) = eax;\n    if (eax != 0) {\n        goto label_213;\n    }\n    if (*((rbp - 0x310)) == 0) {\n        goto label_89;\n    }\n    if (*((r13 + 0x34)) != 0) {\n        goto label_214;\n    }\nlabel_90:\n    eax = getpagesize ();\n    r12 = (int64_t) eax;\n    rax = *((rbp - 0x88));\n    *((rbp - 0x340)) = rax;\n    rdx = rax - 0x20000;\n    *((rbp - 0x330)) = rax;\n    rax = 0x1ffffffffffe0000;\n    if (rdx > rax) {\n        rcx = *((rbp - 0x340));\n        rax = 0x1fffffffffffffff;\n        *((rbp - 0x330)) = 0x20000;\n        rdx = rcx - 1;\n        eax = 0x200;\n        if (rdx <= rax) {\n            rax = rcx;\n        }\n        *((rbp - 0x340)) = rax;\n    }\n    edi = *((rbp - 0x2c0));\n    ecx = 2;\n    edx = 0;\n    esi = 0;\n    fcn_0040add0 ();\n    r9d = *((rbp - 0x138));\n    r9d &= 0xf000;\n    if (r9d == 0x8000) {\n        rax = *((rbp - 0x120));\n        ecx = 0x200;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        al = (*((rbp - 0x110)) < rax) ? 1 : 0;\n        eax = (int32_t) al;\n        *((rbp - 0x2f8)) = eax;\n    }\n    rax = r12 - 1;\n    *((rbp - 0x2e0)) = rax;\n    eax = *((rbp - 0xa8));\n    eax &= 0xf000;\n    if (eax == 0x8000) {\n        goto label_215;\n    }\nlabel_87:\n    rdi = *((rbp - 0x118));\n    rsi = *((rbp - 0x330));\n    rax = 0x1ffffffffffe0000;\n    r8 = 0x7fffffffffffffff;\n    r8 -= r12;\n    *((rbp - 0x338)) = r9d;\n    rdx = rdi - 0x20000;\n    *((rbp - 0x2e0)) = r8;\n    eax = 0x20000;\n    rdx = r8;\n    if (rdx > rax) {\n        rdi = rax;\n    }\n    rax = fcn_0040a980 (rdi, rsi, rdx);\n    r9d = *((rbp - 0x338));\n    r8 = *((rbp - 0x2e0));\n    rcx = rax;\n    if (r9d == 0x8000) {\n        goto label_216;\n    }\nlabel_86:\n    rax = *((rbp - 0x330));\n    edx = 0;\n    rsi = rcx + rax - 1;\n    rax = rsi;\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    rsi -= rdx;\n    *((rbp - 0x330)) = rsi;\n    if (rsi == 0) {\n        goto label_217;\n    }\n    if (r8 < rsi) {\n        goto label_217;\n    }\nlabel_85:\n    rax = *((rbp - 0x330));\n    rax = fcn_004112e0 (r12 + rax);\n    rcx = r12 - 1;\n    edx = 0;\n    rcx += rax;\n    *((rbp - 0x2e0)) = rax;\n    rax = rcx;\n    rax = rdx:rax / r12;\n    rdx = rdx:rax % r12;\n    rcx -= rdx;\n    *((rbp - 0x350)) = rcx;\n    if (*((rbp - 0x2f8)) != 0) {\n        goto label_218;\n    }\n    rax = rbp - 0x2a0;\n    *((rbp - 0x340)) = 0;\n    *((rbp - 0x2f8)) = rax;\n    r9b = (*((r13 + 0xc)) == 3) ? 1 : 0;\nlabel_94:\n    rax = rbp - 0x2a8;\n    al = fcn_00405120 (*((rbp - 0x2c0)), *((rbp - 0x2e8)), *((rbp - 0x350)), *((rbp - 0x330)), *((rbp - 0x340)), 0);\n    if (al == 0) {\n        goto label_78;\n    }\n    if (*((rbp - 0x2a8)) != 0) {\n        goto label_219;\n    }\nlabel_71:\n    if (*((r13 + 0x1f)) != 0) {\n        goto label_220;\n    }\nlabel_73:\n    if (*((r13 + 0x1d)) != 0) {\n        eax = *((rbp - 0xa4));\n        if (*((rbp - 0x254)) == eax) {\n            eax = *((rbp - 0xa0));\n            if (*((rbp - 0x250)) == eax) {\n                goto label_221;\n            }\n        }\n        r9 = *((rbp - 0x320));\n        r8d = *((rbp - 0x2d0));\n        eax = fcn_00405770 (r13, *((rbp - 0x2b8)), *((rbp - 0x2e8)), *((rbp - 0x2d8)), r8);\n        if (eax == 0xffffffff) {\n            goto label_78;\n        }\n        if (eax != 0) {\n            goto label_221;\n        }\n        *((rbp - 0x318)) &= 0xfffff1ff;\n    }\nlabel_221:\n    if (*((r13 + 0x27)) != 0) {\n        if ((*((rbp - 0xa8)) & 0x80) == 0) {\n            goto label_222;\n        }\n    }\nlabel_84:\n    rax = 0xff0000000000ff;\n    if ((*((r13 + 0x18)) & rax) != 0) {\n        goto label_223;\n    }\nlabel_206:\n    edx = *((rbp - 0x250));\n    esi = *((rbp - 0x254));\n    *((rbp - 0x2c0)) = r8b;\n    rdi = *((rbp - 0x2b8));\n    eax = lchown ();\n    r8d = *((rbp - 0x2c0));\n    if (eax == 0) {\n        goto label_224;\n    }\n    al = fcn_00405740 (r13);\n    *((rbp - 0x2e8)) = al;\n    if (al == 0) {\n        goto label_225;\n    }\n    eax = *((rbp - 0x2e8));\n    r8d = 0;\n    *((rbp - 0x2e0)) = al;\n    void (*0x405f45)() ();\nlabel_195:\n    rax = *((rbp - 0xc0));\n    if (*((rbp - 0x150)) != rax) {\n        goto label_69;\n    }\n    goto label_33;\nlabel_188:\n    rsi = *((rbp - 0x2b8));\n    rdx = rbp - 0xc0;\n    edi = 1;\n    eax = lxstat ();\n    if (eax == 0) {\n        eax = *((rbp - 0xa8));\n        eax &= 0xf000;\n        if (eax != 0xa000) {\n            goto label_187;\n        }\n        r8d = *((r13 + 0x30));\n        if (r8b == 0) {\n            goto label_226;\n        }\n        eax = 0;\n        eax = fcn_0040ae10 (*((rbp - 0x2b8)), 0x41, *((rbp - 0x2e0)), rcx);\n        *((rbp - 0x2e8)) = eax;\n        rax = *((rbp - 0x2f8));\n        r12d = *(rax);\n    }\nlabel_187:\n    eax = *((rbp - 0x2e8));\n    eax >>= 0x1f;\n    dl = (r12d == 0x15) ? 1 : 0;\n    dl &= al;\n    *((rbp - 0x2d0)) = dl;\n    if (dl == 0) {\n        goto label_227;\n    }\n    rsi = *((rbp - 0x2b8));\n    r12d = 0x15;\n    rdi = rsi;\n    if (*(rsi) == 0) {\n        goto label_70;\n    }\n    eax = 0;\n    rcx |= 0xffffffffffffffff;\n    r12d = 0;\n    __asm (\"repne scasb al, byte [rdi]\");\n    rax = rcx;\n    rax = ~rax;\n    r12b = (*((rsi + rax - 2)) != 0x2f) ? 1 : 0;\n    r12d += 0x14;\n    goto label_70;\nlabel_211:\n    r12d = *((r13 + 0x18));\n    r12d ^= 1;\n    goto label_54;\nlabel_89:\n    *((rbp - 0x2e0)) = 0;\n    goto label_71;\nlabel_204:\n    rax = fcn_0040ea00 (4, r14);\n    edx = 5;\n    esi = \"cannot read symbolic link %s\";\n    rbx = rax;\n    goto label_40;\nlabel_121:\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"cannot remove %s\";\n    rbx = rax;\n    goto label_72;\nlabel_224:\n    *((rbp - 0x2e8)) = r8b;\n    *((rbp - 0x2e0)) = r8b;\n    r8d = 0;\n    void (*0x405f45)() ();\nlabel_220:\n    rax = *((rbp - 0x228));\n    *((rbp - 0x2a0)) = rax;\n    rax = *((rbp - 0x220));\n    *((rbp - 0x298)) = rax;\n    rax = *((rbp - 0x218));\n    *((rbp - 0x290)) = rax;\n    rax = *((rbp - 0x210));\n    *((rbp - 0x288)) = rax;\n    eax = fcn_00410660 (*((rbp - 0x2e8)), *((rbp - 0x2b8)), rbp - 0x2a0, rcx, r8);\n    if (eax == 0) {\n        goto label_73;\n    }\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    *((rbp - 0x2f8)) = rax;\n    rax = dcgettext (0, \"preserving times for %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = *((rbp - 0x2f8));\n    eax = 0;\n    error (0, *(rax), r12);\n    if (*((r13 + 0x24)) == 0) {\n        goto label_73;\n    }\nlabel_78:\n    r8d = 0;\n    void (*0x408940)() ();\nlabel_182:\n    esi = *((r13 + 0x25));\n    rcx = r13;\n    edx = 0;\n    eax = fcn_00405620 (r12, rsi);\n    r8d = eax;\n    if (al != 0) {\n        goto label_74;\n    }\n    eax = *((r13 + 0x26));\n    *((rbp - 0x2d0)) = al;\n    if (al == 0) {\n        goto label_74;\n    }\n    *((rbp - 0x2d0)) = 0;\n    *((rbp - 0x2e0)) = 0;\n    void (*0x408940)() ();\nlabel_194:\n    rax = rbp - 0x150;\n    rsi = *((rbp - 0x2b8));\n    edi = 1;\n    *((rbp - 0x300)) = r8b;\n    rdx = rax;\n    eax = xstat ();\n    r8d = *((rbp - 0x300));\n    if (eax == 0) {\n        goto label_75;\n    }\n    goto label_23;\nlabel_193:\n    rax = rbp - 0xc0;\n    rsi = r14;\n    edi = 1;\n    *((rbp - 0x308)) = r8b;\n    rdx = rax;\n    *((rbp - 0x300)) = r9;\n    eax = xstat ();\n    r9 = *((rbp - 0x300));\n    r8d = *((rbp - 0x308));\n    if (eax == 0) {\n        goto label_76;\n    }\n    goto label_23;\nlabel_213:\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    *((rbp - 0x2e0)) = rax;\n    rax = dcgettext (0, \"cannot fstat %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = *((rbp - 0x2e0));\n    eax = 0;\n    error (0, *(rax), r12);\n    r8d = 0;\n    *((rbp - 0x2e0)) = 0;\n    void (*0x408940)() ();\nlabel_223:\n    r8d = *((rbp - 0x318));\n    ecx = *((rbp - 0x2e8));\n    rdx = *((rbp - 0x2b8));\n    eax = fcn_0040a0d0 (r14, *((rbp - 0x2c0)));\n    r8d = 1;\n    if (eax == 0) {\n        void (*0x408940)() ();\n    }\nlabel_183:\n    r12d = *(r12);\n    if (r12d == 2) {\n        if (*((r13 + 0x18)) == 0) {\n            goto label_228;\n        }\n    }\n    *((rbp - 0x2d0)) = 0;\n    goto label_70;\nlabel_228:\n    *((rbp - 0x348)) = 0;\n    goto label_62;\nlabel_218:\n    *((rbp - 0x323)) = 0;\n    *((rbp - 0x328)) = 1;\nlabel_88:\n    rcx = rbp - 0x2a0;\n    rax = *((rbp - 0x120));\n    r12d = 0;\n    rsi = rcx;\n    *((rbp - 0x2f8)) = rcx;\n    *((rbp - 0x368)) = rax;\n    fcn_00409ae0 (*((rbp - 0x2c0)), rsi);\n    r10d = 0;\n    *((rbp - 0x358)) = ebx;\n    ecx = 0;\n    *((rbp - 0x360)) = r13;\n    rbx = *((rbp - 0x368));\n    *((rbp - 0x322)) = r15b;\n    r15d = *((rbp - 0x310));\n    *((rbp - 0x338)) = r14;\n    r14 = r10;\nlabel_80:\n    *((rbp - 0x310)) = rcx;\n    al = fcn_00409b10 (*((rbp - 0x2f8)));\n    rcx = *((rbp - 0x310));\n    if (al == 0) {\n        goto label_229;\n    }\n    if (*((rbp - 0x288)) == 0) {\n        goto label_230;\n    }\n    rdx = r14;\n    rsi = r12;\n    r13d = 0;\n    eax = 0;\n    while (rcx == 0) {\nlabel_77:\n        r8d = 0;\n        if (*((rbp - 0x328)) == 3) {\n            r8 = *((rbp - 0x340));\n        }\nlabel_79:\n        rax = rbp - 0x2a9;\n        rax = rbp - 0x2a8;\n        al = fcn_00405120 (*((rbp - 0x2c0)), *((rbp - 0x2e8)), *((rbp - 0x350)), *((rbp - 0x330)), r8, 1);\n        if (al == 0) {\n            goto label_231;\n        }\n        rax = *((rbp - 0x2a8));\n        rcx = r12 + rax;\n        if (rax != 0) {\n            r15d = *((rbp - 0x2a9));\n        }\n        if (rbx == rcx) {\n            goto label_232;\n        }\n        eax = r13 + 1;\n        rsi = r12;\n        rdx = r14;\n        r13 = rax;\n        if (rax >= *((rbp - 0x288))) {\n            goto label_230;\n        }\n        rcx = rax * 3;\n        rax = *((rbp - 0x278));\n        rax = rax + rcx*8;\n        r12 = *(rax);\n        r14 = *((rax + 8));\n        rax = r12 + r14;\n        if (rbx < rax) {\n            r14 = rbx;\n            if (r12 > rbx) {\n                r12 = rbx;\n            }\n            r14 -= r12;\n        }\n        rcx = r12;\n        r15d = 0;\n        rcx -= rsi;\n        rcx -= rdx;\n    }\n    edi = *((rbp - 0x2c0));\n    edx = 0;\n    rsi = r12;\n    *((rbp - 0x310)) = rcx;\n    rax = lseek ();\n    rcx = *((rbp - 0x310));\n    if (rax < 0) {\n        goto label_233;\n    }\n    eax = *((rbp - 0x328));\n    if (eax == 1) {\n        goto label_234;\n    }\n    dl = (eax == 3) ? 1 : 0;\n    eax = fcn_00405060 (*((rbp - 0x2e8)), *((rbp - 0x2b8)), 0, rcx);\n    r15d = eax;\n    if (al != 0) {\n        goto label_77;\n    }\nlabel_231:\n    r15d = *((rbp - 0x322));\n    r14 = *((rbp - 0x338));\n    r13 = *((rbp - 0x360));\n    ebx = *((rbp - 0x358));\nlabel_97:\n    free (*((rbp - 0x278)));\n    goto label_78;\nlabel_234:\n    al = fcn_00404c20 (*((rbp - 0x2e8)), rcx);\n    if (al == 0) {\n        goto label_235;\n    }\n    r8d = 0;\n    goto label_79;\nlabel_232:\n    *((rbp - 0x27f)) = 1;\nlabel_230:\n    *((rbp - 0x310)) = rcx;\n    free (*((rbp - 0x278)));\n    *((rbp - 0x278)) = 0;\n    *((rbp - 0x288)) = 0;\n    rcx = *((rbp - 0x310));\n    if (*((rbp - 0x27f)) == 0) {\n        goto label_80;\n    }\n    *((rbp - 0x310)) = r15b;\n    r14 = *((rbp - 0x338));\n    r15d = *((rbp - 0x322));\n    r13 = *((rbp - 0x360));\n    ebx = *((rbp - 0x358));\nlabel_98:\n    r12b = (*((rbp - 0x368)) > rcx) ? 1 : 0;\n    if (*((rbp - 0x368)) > rcx) {\n        goto label_236;\n    }\n    if (*((rbp - 0x310)) == 0) {\n        goto label_71;\n    }\nlabel_236:\n    if (*((rbp - 0x328)) == 1) {\n        goto label_237;\n    }\n    rsi = *((rbp - 0x368));\n    edi = *((rbp - 0x2e8));\n    *((rbp - 0x2f8)) = rcx;\n    eax = ftruncate ();\n    rcx = *((rbp - 0x2f8));\n    if (eax != 0) {\n        goto label_100;\n    }\n    if (*((rbp - 0x328)) != 3) {\n        goto label_71;\n    }\n    if (r12b == 0) {\n        goto label_71;\n    }\n    rdx = *((rbp - 0x368));\n    rdx -= rcx;\n    eax = fcn_00404cd0 (*((rbp - 0x2e8)), rcx);\n    if (eax >= 0) {\n        goto label_71;\n    }\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    *((rbp - 0x2f8)) = rax;\nlabel_95:\n    rax = dcgettext (0, \"error deallocating %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = *((rbp - 0x2f8));\n    eax = 0;\n    error (0, *(rax), r12);\n    goto label_78;\nlabel_227:\n    *((rbp - 0x2d0)) = 1;\n    if (*((rbp - 0x2e8)) < 0) {\n        goto label_70;\n    }\n    goto label_81;\nlabel_200:\n    rax = *((rbp - 0xc0));\n    if (*((rbp - 0x270)) != rax) {\n        goto label_82;\n    }\n    if (*((r13 + 0x18)) == 0) {\n        goto label_238;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"backing up %s might destroy source;  %s not moved\");\n    rbx = rax;\n    do {\n        rax = fcn_0040e920 (1, 4, r14);\n        r12 = rax;\n        rax = fcn_0040e920 (0, 4, *((rbp - 0x2b8)));\n        r8 = r12;\n        rdx = rbx;\n        rcx = rax;\n        goto label_83;\nlabel_238:\n        edx = 5;\n        rax = dcgettext (0, \"backing up %s might destroy source;  %s not copied\");\n        rbx = rax;\n    } while (1);\nlabel_222:\n    eax = geteuid ();\n    if (eax == 0) {\n        goto label_84;\n    }\n    eax = fcn_00404d10 (*((rbp - 0x2e8)), *((rbp - 0x2b8)), 0x180);\n    if (eax != 0) {\n        goto label_84;\n    }\n    edx = ~edx;\n    edx &= *((rbp - 0x354));\n    fcn_00404d10 (*((rbp - 0x2e8)), *((rbp - 0x2b8)), *((rbp - 0x348)));\n    goto label_84;\nlabel_217:\n    *((rbp - 0x330)) = rcx;\n    goto label_85;\nlabel_216:\n    rax = *((rbp - 0x120));\n    if (*((rbp - 0x330)) <= rax) {\n        goto label_86;\n    }\n    rax++;\n    *((rbp - 0x330)) = rax;\n    goto label_86;\nlabel_215:\n    eax = *((r13 + 0xc));\n    if (eax == 3) {\n        goto label_239;\n    }\n    if (eax != 2) {\n        goto label_87;\n    }\n    if ((*((rbp - 0x2f8)) & 1) == 0) {\n        goto label_87;\n    }\n    rax = *((rbp - 0x330));\n    rax = fcn_004112e0 (rax + r12);\n    rcx = r12 - 1;\n    edx = 0;\n    rcx += rax;\n    *((rbp - 0x2e0)) = rax;\n    rax = rcx;\n    rax = rdx:rax / r12;\n    rdx = rdx:rax % r12;\n    rcx -= rdx;\n    *((rbp - 0x350)) = rcx;\nlabel_93:\n    eax = *((r13 + 0xc));\n    *((rbp - 0x328)) = eax;\n    eax = *((rbp - 0x310));\n    *((rbp - 0x323)) = al;\n    goto label_88;\nlabel_214:\n    edx = *((rbp - 0x2c0));\n    eax = 0;\n    eax = ioctl (*((rbp - 0x2e8)), 0x40049409);\n    if (eax == 0) {\n        goto label_89;\n    }\n    if (*((r13 + 0x34)) != 2) {\n        goto label_90;\n    }\n    rax = fcn_0040e920 (1, 4, r14);\n    *((rbp - 0x2f8)) = rax;\n    rax = fcn_0040e920 (0, 4, *((rbp - 0x2b8)));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"failed to clone %s from %s\");\n    *((rbp - 0x2e0)) = rax;\n    rax = errno_location ();\n    r8 = *((rbp - 0x2f8));\n    rcx = r12;\n    eax = 0;\n    error (0, *(rax), *((rbp - 0x2e0)));\n    r8d = 0;\n    *((rbp - 0x2e0)) = 0;\n    void (*0x408940)() ();\nlabel_225:\n    edx = 5;\n    rax = dcgettext (0, \"failed to preserve ownership for %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = *((rbp - 0x2b8));\n    eax = 0;\n    error (0, *(rax), r12);\n    eax = *((r13 + 0x24));\n    *((rbp - 0x321)) = al;\n    if (al != 0) {\n        void (*0x406910)() ();\n    }\n    r8d = *((rbp - 0x2c0));\n    *((rbp - 0x2e8)) = r8b;\n    *((rbp - 0x2e0)) = r8b;\n    r8d = 0;\n    void (*0x405f45)() ();\nlabel_212:\n    eax = *((rbp - 0x1c8));\n    eax &= 0xf000;\n    if (eax != 0xa000) {\n        goto label_91;\n    }\n    eax = *((rbp - 0x2d0));\n    rcx |= 0xffffffffffffffff;\n    rdi = r12;\n    rsi = *((rbp - 0x1b0));\n    __asm (\"repne scasb al, byte [rdi]\");\n    rcx = ~rcx;\n    rax = rcx - 1;\n    if (rsi != rax) {\n        goto label_91;\n    }\n    rax = fcn_0040a1c0 (*((rbp - 0x2b8)), rsi);\n    if (rax == 0) {\n        goto label_91;\n    }\n    rdi = rax;\n    *((rbp - 0x2e0)) = rax;\n    eax = strcmp (rdi, r12);\n    rdx = *((rbp - 0x2e0));\n    rdi = rdx;\n    if (eax != 0) {\n        goto label_240;\n    }\n    free (rdi);\n    goto label_65;\nlabel_186:\n    r8 = r13;\n    ecx = 1;\n    eax = fcn_00405550 (r14, *((rbp - 0x2b8)), *((rbp - 0x354)));\n    r8d = eax;\n    if (al != 0) {\n        goto label_92;\n    }\n    *((rbp - 0x2e0)) = 0;\n    void (*0x407447)() ();\nlabel_239:\n    rax = *((rbp - 0x330));\n    rax = fcn_004112e0 (rax + r12);\n    rcx = r12 - 1;\n    edx = 0;\n    rcx += rax;\n    *((rbp - 0x2e0)) = rax;\n    rax = rcx;\n    rax = rdx:rax / r12;\n    rdx = rdx:rax % r12;\n    rcx -= rdx;\n    *((rbp - 0x350)) = rcx;\n    if (*((rbp - 0x2f8)) != 0) {\n        goto label_93;\n    }\n    r9d = 0;\n    rax = rbp - 0x2a0;\n    r9b = (*((r13 + 0xc)) == 3) ? 1 : 0;\n    *((rbp - 0x2f8)) = rax;\n    goto label_94;\nlabel_219:\n    rsi = *((rbp - 0x2a0));\n    edi = *((rbp - 0x2e8));\n    eax = ftruncate ();\n    if (eax >= 0) {\n        goto label_71;\n    }\nlabel_100:\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"failed to extend %s\";\n    *((rbp - 0x2f8)) = rax;\n    goto label_95;\nlabel_185:\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"removed %s\\n\");\n    rdx = r12;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    goto label_96;\nlabel_233:\n    r14 = *((rbp - 0x338));\n    r15d = *((rbp - 0x322));\n    r13 = *((rbp - 0x360));\n    ebx = *((rbp - 0x358));\n    rax = fcn_0040ea00 (4, r14);\n    edx = 5;\n    *((rbp - 0x2f8)) = rax;\nlabel_99:\n    rax = dcgettext (0, \"cannot lseek %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = *((rbp - 0x2f8));\n    eax = 0;\n    error (0, *(rax), r12);\n    goto label_97;\nlabel_184:\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    *((rbp - 0x2e0)) = rax;\n    rax = dcgettext (0, \"cannot remove %s\");\n    rcx = *((rbp - 0x2e0));\n    esi = *(r12);\n    rdx = rax;\n    goto label_46;\nlabel_229:\n    *((rbp - 0x310)) = r15b;\n    r14 = *((rbp - 0x338));\n    r15d = *((rbp - 0x322));\n    r13 = *((rbp - 0x360));\n    ebx = *((rbp - 0x358));\n    if (*((rbp - 0x27f)) != 0) {\n        goto label_98;\n    }\n    if (*((rbp - 0x280)) != 0) {\n        r9d = 0;\n        eax = 0;\n        r9b = (*((r13 + 0xc)) == 3) ? 1 : 0;\n        if (*((rbp - 0x323)) != 0) {\n            rax = *((rbp - 0x340));\n        }\n        *((rbp - 0x340)) = rax;\n        goto label_94;\nlabel_235:\n        r15d = *((rbp - 0x322));\n        r14 = *((rbp - 0x338));\n        r13 = *((rbp - 0x360));\n        ebx = *((rbp - 0x358));\n        rax = fcn_0040ead0 (0, 3, *((rbp - 0x2b8)));\n        edx = 5;\n        esi = \"%s: write failed\";\n        *((rbp - 0x2f8)) = rax;\n        goto label_99;\n    }\n    rax = fcn_0040ead0 (0, 3, r14);\n    edx = 5;\n    esi = \"%s: failed to get extents info\";\n    *((rbp - 0x2f8)) = rax;\n    goto label_95;\nlabel_237:\n    rsi -= rcx;\n    al = fcn_00404c20 (*((rbp - 0x2e8)), *((rbp - 0x368)));\n    if (al != 0) {\n        goto label_71;\n    }\n    goto label_100;\nlabel_240:\n    free (rdi);\n    goto label_91;\nlabel_226:\n    *((rbp - 0x2e8)) = r8b;\n    rax = fcn_0040ea00 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"not writing through dangling symlink %s\");\n    rcx = r12;\n    eax = 0;\n    error (0, 0, rax);\n    eax = *((rbp - 0x320));\n    *((rbp - 0x2e0)) = 0;\n    r8d = *((rbp - 0x2e8));\n    *((rbp - 0x2d0)) = al;\n    return void (*0x407447)() ();\n}\n"
        },
        {
            "funcName": "fcn_00409810",
            "funcStartAddr": "0x409810",
            "funcEndAddr": "0x40992c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x409810 */\n#include <stdint.h>\n \nuint64_t fcn_00409810 (int64_t arg1, int64_t arg2, uint32_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_fh;\n    rdi = arg1;\n    rsi = arg2;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    if (rcx == 0) {\n        goto label_0;\n    }\n    if (*(rcx) > 3) {\n        goto label_1;\n    }\n    eax = *((rcx + 0xc));\n    r10d = rax - 1;\n    if (r10d > 2) {\n        goto label_2;\n    }\n    r10d = *((rcx + 0x34));\n    if (r10d > 2) {\n        goto label_3;\n    }\n    while (*((rcx + 0x2c)) == 0) {\n        if (eax != 2) {\n            if (r10d == 2) {\n                goto label_4;\n            }\n        }\n        *((rsp + 0xf)) = 0;\n        edx = (int32_t) dl;\n        *(0x00621990) = rdi;\n        *(0x00621988) = rsi;\n        rax = rsp + 0x1f;\n        fcn_00405990 (rdi, rsi, rdx, 0, 0, rcx);\n        return rax;\n    }\n    assert_fail (\"!(co->hard_link && co->symbolic_link)\", \"src/copy.c\", 0xb64, \"valid_options\");\nlabel_4:\n    assert_fail (\"! (co->reflink_mode == REFLINK_ALWAYS && co->sparse_mode != SPARSE_AUTO)\", \"src/copy.c\", 0xb67, \"valid_options\");\nlabel_3:\n    assert_fail (\"VALID_REFLINK_MODE (co->reflink_mode)\", \"src/copy.c\", 0xb63, \"valid_options\");\nlabel_0:\n    assert_fail (\"co != NULL\", \"src/copy.c\", 0xb60, \"valid_options\");\nlabel_2:\n    assert_fail (\"VALID_SPARSE_MODE (co->sparse_mode)\", \"src/copy.c\", 0xb62, \"valid_options\");\nlabel_1:\n    return assert_fail (\"VALID_BACKUP_TYPE (co->backup_type)\", \"src/copy.c\", 0xb61, \"valid_options\");\n}\n"
        },
        {
            "funcName": "fcn_00409980",
            "funcStartAddr": "0x409980",
            "funcEndAddr": "0x4099c5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x409980 */\n#include <stdint.h>\n \nuint64_t fcn_00409980 (uint32_t arg1, uint32_t arg2) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    rdi = arg1;\n    rsi = arg2;\n    *(rsp) = rdi;\n    *((rsp + 8)) = rsi;\n    rsi = rsp;\n    *((rsp + 0x10)) = 0;\n    rax = fcn_0040c330 (*(0x00621998));\n    if (rax != 0) {\n        rbx = rax;\n        free (*((rax + 0x10)));\n        free (rbx);\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004099d0",
            "funcStartAddr": "0x4099d0",
            "funcEndAddr": "0x409a07",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x4099d0 */\n#include <stdint.h>\n \nuint64_t fcn_004099d0 (uint32_t arg1, uint32_t arg2) {\n    uint32_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    *(rsp) = rdi;\n    *((rsp + 8)) = rsi;\n    rax = fcn_0040b8e0 (*(0x00621998), rsp);\n    if (rax != 0) {\n        rax = *((rax + 0x10));\n        return rax;\n    }\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00409a10",
            "funcStartAddr": "0x409a10",
            "funcEndAddr": "0x409a86",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x409a10 */\n#include <stdint.h>\n \nuint64_t fcn_00409a10 (char * arg1, uint32_t arg2, uint32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13 = rdi;\n    r12 = rsi;\n    rax = fcn_004112e0 (0x18);\n    rbx = rax;\n    rax = fcn_00411510 (r13);\n    rsi = rbx;\n    *(rbx) = r12;\n    *((rbx + 0x10)) = rax;\n    *((rbx + 8)) = rbp;\n    rax = fcn_0040c2f0 (*(0x00621998));\n    if (rax != 0) {\n        eax = 0;\n        if (rbx != rbp) {\n            free (*((rbx + 0x10)));\n            free (rbx);\n            rax = *((rbp + 0x10));\n        }\n        return rax;\n    }\n    return fcn_00411530 ();\n}\n"
        },
        {
            "funcName": "fcn_00409a90",
            "funcStartAddr": "0x409a90",
            "funcEndAddr": "0x409ac6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x409a90 */\n#include <stdint.h>\n \nuint64_t fcn_00409a90 (void) {\n    rax = fcn_0040bb50 (0x67, 0, 0x409930, 0x409940, 0x409960);\n    *(0x00621998) = rax;\n    if (rax != 0) {\n        return rax;\n    }\n    return fcn_00411530 ();\n}\n"
        },
        {
            "funcName": "fcn_00409ae0",
            "funcStartAddr": "0x409ae0",
            "funcEndAddr": "0x409b08",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x409ae0 */\n#include <stdint.h>\n \nint32_t fcn_00409ae0 (char *** arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    eax = 0;\n    *(rsi) = edi;\n    *((rsi + 0x28)) = 0;\n    *((rsi + 8)) = 0;\n    *((rsi + 0x18)) = 0;\n    *((rsi + 0x20)) = ax;\n    *((rsi + 0x10)) = 1;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00409b10",
            "funcStartAddr": "0x409b10",
            "funcEndAddr": "0x409dd5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x409b10 */\n#include <stdint.h>\n \nint64_t fcn_00409b10 (uint32_t arg1) {\n    int64_t var_20h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_14h;\n    int64_t var_18h;\n    int64_t var_30h;\n    rdi = arg1;\n    r15 = 0x7fffffffffffffff;\n    r13d = 0;\n    r12 = rdi;\n    rbx = *((rdi + 0x28));\n    rdx = *((rdi + 8));\n    r14 = rbp + 0x20;\nlabel_6:\n    eax = 0;\n    ecx = 0x200;\n    rdi = rbp;\n    esi = 0xc020660b;\n    do {\n        *(rdi) = rax;\n        rcx--;\n        rdi += 8;\n    } while (rcx != 0);\n    eax = *((r12 + 0x10));\n    *(rsp) = rdx;\n    rdx = ~rdx;\n    *((rsp + 0x18)) = 0x48;\n    *((rsp + 0x10)) = eax;\n    eax = 0;\n    *((rsp + 8)) = rdx;\n    rdx = rbp;\n    eax = ioctl (*(r12), rsi);\n    if (eax < 0) {\n        goto label_7;\n    }\n    eax = *((rsp + 0x14));\n    if (eax == 0) {\n        goto label_8;\n    }\n    rdx = rax;\n    rcx = *((r12 + 0x18));\n    rdx = ~rdx;\n    if (rcx > rdx) {\n        goto label_9;\n    }\n    edx = 0x18;\n    rdi = *((r12 + 0x28));\n    rcx += rax;\n    rax = rdx;\n    *((r12 + 0x18)) = rcx;\n    rbx -= rdi;\n    rdx:rax = rax * rcx;\n    __asm (\"seto dl\");\n    edx = (int32_t) dl;\n    if (rax < 0) {\n        goto label_10;\n    }\n    if (rdx != 0) {\n        goto label_10;\n    }\n    rsi <<= 3;\n    rax = fcn_00411340 (rdi, rcx + rcx*2);\n    r8d = *((rsp + 0x14));\n    *((r12 + 0x28)) = rax;\n    rbx += rax;\n    if (r8d == 0) {\n        goto label_11;\n    }\n    rax = *((rsp + 0x30));\n    rcx = r15;\n    rdx = *((rsp + 0x20));\n    rcx -= rax;\n    if (rdx > rcx) {\n        goto label_12;\n    }\n    edi = 0;\n    rcx = r14;\n    do {\n        if (r13d == 0) {\n            goto label_13;\n        }\n        r9d = *((rcx + 0x28));\n        r10 = *((rbx + 8));\n        rsi = *(rbx);\n        r11d = r9d;\n        rsi += r10;\n        r11d &= 0xfffffffe;\n        if (*((rbx + 0x10)) == r11d) {\n            goto label_14;\n        }\nlabel_3:\n        if (rsi <= rdx) {\n            goto label_15;\n        }\nlabel_0:\n        r9 = rsi;\n        r9 -= rdx;\n        if (r9 < rax) {\n            goto label_7;\n        }\n        rdx += rax;\n        *(rcx) = rsi;\n        rdx -= rsi;\n        *((rcx + 0x10)) = rdx;\nlabel_4:\n        if (edi >= r8d) {\n            goto label_11;\n        }\nlabel_1:\n        edx = edi;\n        rsi = r15;\n        rax = rdx*8;\n        rax -= rdx;\n        rcx = r14 + rax*8;\n        rax = *((rcx + 0x10));\n        rdx = *(rcx);\n        rsi -= rax;\n    } while (rdx <= rsi);\nlabel_12:\n    rax = assert_fail (\"fm_extents[i].fe_logical <= OFF_T_MAX - fm_extents[i].fe_length\", \"src/extent-scan.c\", 0x8d, \"extent_scan_read\");\nlabel_13:\n    rsi = *((r12 + 8));\n    if (rsi > rdx) {\n        goto label_0;\n    }\n    r9d = *((rcx + 0x28));\nlabel_15:\n    ecx = r13d;\n    edi++;\n    r13d++;\n    rsi = rcx * 3;\n    rcx = *((r12 + 0x28));\n    rbx = rcx + rsi*8;\n    *(rbx) = rdx;\n    *((rbx + 8)) = rax;\n    *((rbx + 0x10)) = r9d;\n    if (edi < r8d) {\n        goto label_1;\n    }\nlabel_11:\n    if ((*((rbx + 0x10)) & 1) != 0) {\n        goto label_16;\n    }\n    eax = *((r12 + 0x21));\n    if (r13d <= 0x48) {\n        goto label_17;\n    }\n    if (al != 0) {\n        goto label_18;\n    }\n    eax = r13 - 1;\n    rdx = *((r12 + 0x28));\n    rcx = rax * 3;\n    *((r12 + 0x18)) = rax;\n    rax = *((rdx + rcx*8 - 0x10));\n    rax += *((rdx + rcx*8 - 0x18));\n    *((r12 + 8)) = rax;\nlabel_5:\n    eax = 1;\n    do {\nlabel_2:\n        return rax;\nlabel_7:\n        eax = 0;\n    } while (*((r12 + 8)) != 0);\n    *((r12 + 0x20)) = 1;\n    eax = 0;\n    goto label_2;\nlabel_14:\n    if (rdx != rsi) {\n        goto label_3;\n    }\n    rax += r10;\n    *((rbx + 0x10)) = r9d;\n    edi++;\n    *((rbx + 8)) = rax;\n    goto label_4;\nlabel_17:\n    edi = r13d;\n    *((r12 + 0x18)) = rdi;\n    if (al != 0) {\n        goto label_5;\n    }\n    rdx = *((rbx + 8));\n    rdx += *(rbx);\n    *((r12 + 8)) = rdx;\n    if (r13d != 0x48) {\n        goto label_6;\n    }\n    goto label_5;\nlabel_16:\n    *((r12 + 0x21)) = 1;\nlabel_18:\n    eax = r13d;\n    *((r12 + 0x18)) = rax;\n    goto label_5;\nlabel_8:\n    *((r12 + 0x21)) = 1;\n    al = (*((r12 + 8)) != 0) ? 1 : 0;\n    goto label_2;\nlabel_10:\n    fcn_00411530 ();\nlabel_9:\n    return assert_fail (\"scan->ei_count <= SIZE_MAX - fiemap->fm_mapped_extents\", \"src/extent-scan.c\", 0x7e, \"extent_scan_read\");\n}\n"
        },
        {
            "funcName": "fcn_00409e00",
            "funcStartAddr": "0x409e00",
            "funcEndAddr": "0x409e64",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x409e00 */\n#include <stdint.h>\n \nuint64_t fcn_00409e00 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r12 = rdi;\n    rbx = rsi;\n    rax = fcn_0040ad40 (rdi);\n    rax -= r12;\n    rdi = rax + 9;\n    if (rdi > 0x100) {\n        rax = malloc (rdi);\n        rbx = rax;\n        if (rax == 0) {\n            goto label_0;\n        }\n    }\n    rdx = rbp;\n    rsi = r12;\n    rdi = rbx;\n    mempcpy ();\n    rdx = \"CuXXXXXX\";\n    *(rax) = rdx;\n    edx = *(0x00418fb0);\n    *((rax + 8)) = dl;\n    rax = rbx;\n    do {\n        return rax;\nlabel_0:\n        eax = 0;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00409e90",
            "funcStartAddr": "0x409e90",
            "funcEndAddr": "0x409fc5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x409e90 */\n#include <stdint.h>\n \nuint64_t fcn_00409e90 (int64_t arg1, char * arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_24h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r15d = edi;\n    r14 = rsi;\n    r13d = r8d;\n    r12 = rcx;\n    *((rsp + 8)) = r9d;\n    eax = linkat ();\n    r9d = *((rsp + 8));\n    ebx = eax;\n    if (r9b != 1) {\n        goto label_0;\n    }\n    if (eax == 0) {\n        goto label_0;\n    }\n    rax = errno_location ();\n    while (r12d == 0) {\nlabel_0:\n        eax = ebx;\n        return rax;\n        *((rsp + 8)) = rax;\n        rax = fcn_00409e00 (r12, rsp + 0x30);\n        rbx = rax;\n        if (rax == 0) {\n            goto label_2;\n        }\n        *((rsp + 0x10)) = r15d;\n        *((rsp + 0x18)) = r14;\n        *((rsp + 0x20)) = ebp;\n        *((rsp + 0x24)) = r13d;\n        eax = fcn_0040fb10 (rax, 0, rsp + 0x10, 0x409de0, 6);\n        r9 = *((rsp + 8));\n        if (eax == 0) {\n            goto label_3;\n        }\n        r12d = *(r9);\nlabel_1:\n        rax = rsp + 0x30;\n        if (rbx != rax) {\n            *((rsp + 8)) = r9;\n            free (rbx);\n            r9 = *((rsp + 8));\n        }\n        ebx = 1;\n    }\n    *(r9) = r12d;\n    ebx = 0xffffffff;\n    goto label_0;\nlabel_3:\n    rcx = r12;\n    edx = ebp;\n    rsi = rbx;\n    edi = ebp;\n    *((rsp + 8)) = r9;\n    eax = renameat ();\n    r9 = *((rsp + 8));\n    r12d = eax;\n    if (eax != 0) {\n        r12d = *(r9);\n    }\n    edx = 0;\n    rsi = rbx;\n    edi = ebp;\n    *((rsp + 8)) = r9;\n    unlinkat ();\n    r9 = *((rsp + 8));\n    goto label_1;\nlabel_2:\n    ebx = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00409fd0",
            "funcStartAddr": "0x409fd0",
            "funcEndAddr": "0x40a0d0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x409fd0 */\n#include <stdint.h>\n \nuint64_t fcn_00409fd0 (int64_t arg1, int64_t arg2, char * arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_10h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r14d = ecx;\n    r13 = rdi;\n    r12 = rdx;\n    eax = symlinkat ();\n    ebx = eax;\n    if (r14b != 1) {\n        goto label_2;\n    }\n    if (eax == 0) {\n        goto label_2;\n    }\n    rax = errno_location ();\n    r14 = rax;\n    while (1) {\nlabel_2:\n        eax = ebx;\n        return rax;\n        r15 = rsp + 0x10;\n        rax = fcn_00409e00 (r12, r15);\n        rbx = rax;\n        if (rax == 0) {\n            goto label_3;\n        }\n        *(rsp) = r13;\n        *((rsp + 8)) = ebp;\n        eax = fcn_0040fb10 (rax, 0, rsp, 0x409e70, 6);\n        if (eax == 0) {\n            goto label_4;\n        }\n        r12d = *(r14);\nlabel_1:\n        if (rbx != r15) {\n            free (rbx);\n        }\n        if (r12d != 0) {\n            goto label_5;\n        }\nlabel_0:\n        ebx = 1;\n    }\nlabel_4:\n    rcx = r12;\n    edx = ebp;\n    rsi = rbx;\n    edi = ebp;\n    eax = renameat ();\n    if (eax != 0) {\n        goto label_6;\n    }\n    if (rbx == r15) {\n        goto label_0;\n    }\n    free (rbx);\n    goto label_0;\nlabel_6:\n    edx = 0;\n    rsi = rbx;\n    edi = ebp;\n    r12d = *(r14);\n    unlinkat ();\n    goto label_1;\nlabel_5:\n    *(r14) = r12d;\n    ebx = 0xffffffff;\n    goto label_2;\nlabel_3:\n    ebx = 0xffffffff;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_0040a0d0",
            "funcStartAddr": "0x40a0d0",
            "funcEndAddr": "0x40a15a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40a0d0 */\n#include <stdint.h>\n \nuint64_t fcn_0040a0d0 (int64_t arg1, int64_t arg3) {\n    rdi = arg1;\n    rdx = arg3;\n    r12 = rdi;\n    eax = fcn_0040d070 (rdi, rsi, rdx);\n    ebx = eax;\n    if (eax != 0xfffffffe) {\n        if (eax == 0xffffffff) {\n            rax = fcn_0040ec50 (rbp);\n            edx = 5;\n            r12 = rax;\n            rax = dcgettext (0, \"preserving permissions for %s\");\n            rax = errno_location ();\n            rcx = r12;\n            eax = 0;\n            error (0, *(rax), rbp);\n        }\n        eax = ebx;\n        return rax;\n    }\n    rax = fcn_0040ec50 (r12);\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    error (0, *(rax), 0x41aa9b);\n    eax = ebx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040a160",
            "funcStartAddr": "0x40a160",
            "funcEndAddr": "0x40a1bc",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40a160 */\n#include <stdint.h>\n \nuint64_t fcn_0040a160 (char * arg1, uint32_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    eax = fcn_0040d0b0 (rdi, rsi, rdx);\n    ebx = eax;\n    if (eax == 0) {\n        eax = ebx;\n        return eax;\n    }\n    rax = fcn_0040ec50 (rbp);\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"setting permissions for %s\");\n    rax = errno_location ();\n    rcx = r12;\n    eax = 0;\n    error (0, *(rax), rbp);\n    eax = ebx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040a1c0",
            "funcStartAddr": "0x40a1c0",
            "funcEndAddr": "0x40a2af",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40a1c0 */\n#include <stdint.h>\n \nuint64_t fcn_0040a1c0 (char * arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    eax = 0x401;\n    r15 = 0x7ffffffffffffffe;\n    r14 = 0x3fffffffffffffff;\n    r13 = rdi;\n    rbx = rsi + 1;\n    if (rsi >= 0x401) {\n        rbx = rax;\n    }\nlabel_0:\n    rax = malloc (rbx);\n    if (rax == 0) {\n        goto label_2;\n    }\n    do {\n        rdx = rbx;\n        rsi = rax;\n        rdi = r13;\n        rax = readlink ();\n        r12 = rax;\n        if (rax < 0) {\n            goto label_3;\n        }\nlabel_1:\n        if (rbx > r12) {\n            goto label_4;\n        }\n        free (rbp);\n        if (rbx > r14) {\n            goto label_5;\n        }\n        rbx += rbx;\n        rax = malloc (rbx);\n    } while (rax != 0);\nlabel_2:\n    rax = rbp;\n    return rax;\nlabel_5:\n    if (rbx > r15) {\n        goto label_6;\n    }\n    rbx = 0x7fffffffffffffff;\n    goto label_0;\nlabel_3:\n    rax = errno_location ();\n    if (*(rax) == 0x22) {\n        goto label_1;\n    }\n    ebp = 0;\n    free (rbp);\n    goto label_2;\nlabel_4:\n    *((rbp + r12)) = 0;\n    goto label_2;\nlabel_6:\n    errno_location ();\n    ebp = 0;\n    *(rax) = 0xc;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_0040a2b0",
            "funcStartAddr": "0x40a2b0",
            "funcEndAddr": "0x40a37e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40a2b0 */\n#include <stdint.h>\n \nuint64_t fcn_0040a2b0 (int64_t arg1, void ** arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r13 = rsi;\n    rbx = rdi;\n    rax = fcn_0040ad40 (rdi);\n    rdi = rax;\n    rax = fcn_0040ada0 (rdi);\n    while (r12 <= rdx) {\n        return rax;\n        esi = 0x2e;\n        r14d = *(rbp);\n        r12 = rax;\n        *(rbp) = si;\n        errno_location ();\n        esi = 3;\n        rdi = rbx;\n        *(rax) = 0;\n        r15 = rax;\n        rax = pathconf ();\n        if (rax < 0) {\n            goto label_2;\n        }\nlabel_1:\n        rdx = rax;\nlabel_0:\n        *(rbp) = r14w;\n    }\n    rsi = rbx + r13;\n    rax = rsi;\n    rax -= rbp;\n    if (rax >= rdx) {\n        goto label_3;\n    }\n    rdx = rax + 1;\n    do {\n        *(rsi) = 0x7e;\n        *((rbp + rdx)) = 0;\n        return rax;\nlabel_3:\n        rsi = rbp + rdx - 1;\n    } while (1);\nlabel_2:\n    ecx = *(r15);\n    edx = 0xff;\n    if (ecx != 0) {\n        goto label_0;\n    }\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040a380",
            "funcStartAddr": "0x40a380",
            "funcEndAddr": "0x40a3d4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40a380 */\n#include <stdint.h>\n \nuint64_t fcn_0040a380 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    if (rdi == 0) {\n        goto label_2;\n    }\nlabel_1:\n    while (rax != rbx) {\nlabel_0:\n        ebx = 0x418fb6;\n        *(0x006219a0) = rbx;\n        return;\n        rax = fcn_0040ad40 (rbx);\n    }\n    *(0x006219a0) = rbx;\n    return rax;\nlabel_2:\n    rax = getenv (\"SIMPLE_BACKUP_SUFFIX\");\n    rbx = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040a3e0",
            "funcStartAddr": "0x40a3e0",
            "funcEndAddr": "0x40a8a1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40a3e0 */\n#include <stdint.h>\n \nuint64_t fcn_0040a3e0 (void * arg1, uint32_t arg2) {\n    void ** s1;\n    void * s2;\n    int64_t var_18h;\n    int64_t var_20h;\n    size_t size;\n    uint32_t var_30h;\n    size_t n;\n    uint32_t var_40h;\n    uint32_t var_47h;\n    int64_t var_48h;\n    int64_t var_50h;\n    size_t * var_58h;\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rdi;\n    *((rsp + 0x10)) = rdi;\n    *((rsp + 0x40)) = esi;\n    *((rsp + 0x47)) = dl;\n    rax = fcn_0040ad40 (rdi);\n    r14 = rax;\n    rax = strlen (rax);\n    r14 -= rbx;\n    rdi = imp.__libc_start_main;\n    rax += r14;\n    *((rsp + 8)) = rax;\n    if (rdi == 0) {\n        goto label_11;\n    }\nlabel_10:\n    rax = strlen (rdi);\n    rsi = *((rsp + 8));\n    rax++;\n    rbx = rsi + 1;\n    *((rsp + 0x58)) = rax;\n    rsi = rax;\n    eax = 9;\n    *((rsp + 0x38)) = rbx;\n    if (rax >= 9) {\n        rax = rsi;\n    }\n    rax += rbx;\n    rdi = rax;\n    *((rsp + 0x48)) = rax;\n    rax = malloc (rdi);\n    r15 = rax;\n    if (rax == 0) {\n        goto label_9;\n    }\n    r12d = 0;\nlabel_2:\n    memcpy (r15, *((rsp + 0x10)), *((rsp + 0x38)));\n    if (*((rsp + 0x40)) == 1) {\n        goto label_12;\n    }\n    rbx = r15 + r14;\n    rax = fcn_0040ada0 (rbx);\n    r13 = rax;\n    if (r12 == 0) {\n        goto label_13;\n    }\n    rdi = r12;\n    rewinddir ();\nlabel_5:\n    rax = *((rsp + 0x48));\n    *((rsp + 0x20)) = 1;\n    *((rsp + 0x28)) = rax;\n    rax = r13 + 4;\n    *((rsp + 0x30)) = rax;\n    do {\nlabel_0:\n        rdi = r12;\n        rax = readdir ();\n        if (rax == 0) {\n            goto label_8;\n        }\nlabel_1:\n        rbx = rax + 0x13;\n        rax = strlen (rbx);\n    } while (rax < *((rsp + 0x30)));\n    rcx = r13 + 2;\n    rdx = rcx;\n    *((rsp + 0x18)) = rcx;\n    eax = memcmp (r15 + r14, rbx, rdx);\n    if (eax != 0) {\n        goto label_0;\n    }\n    rcx = *((rsp + 0x18));\n    rbx += rcx;\n    eax = *(rbx);\n    edx = rax - 0x31;\n    if (dl > 8) {\n        goto label_0;\n    }\n    edx = *((rbx + 1));\n    ecx = 1;\n    r8b = (al == 0x39) ? 1 : 0;\n    eax = edx;\n    edx -= 0x30;\n    if (edx > 9) {\n        goto label_14;\n    }\n    do {\n        al = (al == 0x39) ? 1 : 0;\n        rcx++;\n        edx = *((rbx + rcx));\n        r8d &= eax;\n        eax = edx;\n        edx -= 0x30;\n    } while (edx <= 9);\nlabel_14:\n    if (al != 0x7e) {\n        goto label_0;\n    }\n    if (*((rbx + rcx + 1)) != 0) {\n        goto label_0;\n    }\n    rdx = *((rsp + 0x20));\n    if (rdx < rcx) {\n        goto label_15;\n    }\n    *((rsp + 0x50)) = rcx;\n    *((rsp + 0x18)) = r8b;\n    if (rdx != rcx) {\n        goto label_0;\n    }\n    rax = *((rsp + 8));\n    eax = memcmp (r15 + rax + 2, rbx, rdx);\n    r8d = *((rsp + 0x18));\n    rcx = *((rsp + 0x50));\n    if (eax > 0) {\n        goto label_0;\n    }\nlabel_15:\n    edx = (int32_t) r8b;\n    rsi = *((rsp + 8));\n    ebp = (int32_t) r8b;\n    rax = rdx + rcx;\n    *((rsp + 0x20)) = rax;\n    rax = rsi + rax + 4;\n    if (rax <= *((rsp + 0x28))) {\n        goto label_16;\n    }\n    esi = 0;\n    rdi = rax;\n    __asm (\"sets sil\");\n    rdi += rdi;\n    if (rdi < 0) {\n        goto label_17;\n    }\n    if (rsi != 0) {\n        goto label_17;\n    }\n    *((rsp + 0x28)) = rdi;\nlabel_6:\n    *((rsp + 0x50)) = rdx;\n    *((rsp + 0x18)) = rcx;\n    rax = realloc (r15, *((rsp + 0x28)));\n    rcx = *((rsp + 0x18));\n    rdx = *((rsp + 0x50));\n    r8 = rax;\n    if (rax == 0) {\n        goto label_18;\n    }\nlabel_7:\n    rax = *((rsp + 8));\n    esi = 0x7e2e;\n    *((rsp + 0x50)) = r8;\n    *((rsp + 0x18)) = rcx;\n    rax += r8;\n    *(rax) = si;\n    r9 = rax + rdx + 2;\n    *((rax + 2)) = 0x30;\n    rax = memcpy (r9, rbx, rcx + 2);\n    rcx = *((rsp + 0x18));\n    r8 = *((rsp + 0x50));\n    rcx += rax;\n    edx = *((rcx - 1));\n    rax = rcx - 1;\n    if (dl != 0x39) {\n        goto label_19;\n    }\n    do {\n        *(rax) = 0x30;\n        rax--;\n        edx = *(rax);\n    } while (dl == 0x39);\nlabel_19:\n    edx++;\n    rdi = r12;\n    r15 = r8;\n    *(rax) = dl;\n    rax = readdir ();\n    if (rax != 0) {\n        goto label_1;\n    }\nlabel_8:\n    if (ebp == 2) {\n        goto label_20;\n    }\n    if (ebp == 3) {\n        goto label_18;\n    }\n    if (ebp == 1) {\n        goto label_21;\n    }\nlabel_4:\n    if (*((rsp + 0x47)) == 0) {\n        goto label_22;\n    }\n    if (r12 == 0) {\n        goto label_23;\n    }\n    rdi = r12;\n    eax = dirfd ();\n    rcx = r15 + r14;\n    edx = eax;\n    if (eax < 0) {\n        goto label_23;\n    }\nlabel_3:\n    r8b = (*((rsp + 0x40)) != 1) ? 1 : 0;\n    eax = fcn_0040ec70 (0xffffff9c, *((rsp + 0x10)), rdx, rcx, 0);\n    if (eax == 0) {\n        goto label_22;\n    }\n    rax = errno_location ();\n    ebp = *(rax);\n    if (ebp == 0x11) {\n        goto label_2;\n    }\n    rbx = rax;\n    if (r12 != 0) {\n        rdi = r12;\n        closedir ();\n    }\n    r15d = 0;\n    free (r15);\n    *(rbx) = ebp;\n    do {\nlabel_9:\n        rax = r15;\n        return rax;\nlabel_23:\n        rcx = r15;\n        edx = 0xffffff9c;\n        r14d = 0;\n        goto label_3;\nlabel_12:\n        rax = *((rsp + 8));\n        memcpy (r15 + rax, *(0x006219a0), *((rsp + 0x58)));\n        goto label_4;\nlabel_20:\n        if (*((rsp + 0x40)) == 2) {\n            rax = *((rsp + 8));\n            rax = memcpy (r15 + rax, *(0x006219a0), *((rsp + 0x58)));\n            *((rsp + 0x40)) = 1;\n        }\nlabel_21:\n        fcn_0040a2b0 (r15, *((rsp + 8)));\n        goto label_4;\nlabel_13:\n        edi = 0x2e;\n        eax = *(rbx);\n        *(rbx) = di;\n        rdi = r15;\n        *((rsp + 0x18)) = ax;\n        rax = fcn_0040abc0 ();\n        rcx = rbx + r13;\n        r12 = rax;\n        if (rax == 0) {\n            goto label_24;\n        }\n        eax = *((rsp + 0x18));\n        *(rbx) = ax;\n        *(rcx) = 0x7e317e2e;\n        *((rcx + 4)) = 0;\n        goto label_5;\nlabel_18:\n        r15d = 0;\n        free (r15);\n        errno_location ();\n        *(rax) = 0xc;\n    } while (1);\nlabel_17:\n    *((rsp + 0x28)) = rax;\n    goto label_6;\nlabel_16:\n    r8 = r15;\n    goto label_7;\nlabel_24:\n    *((rsp + 0x20)) = rcx;\n    ebp = 0;\n    rax = errno_location ();\n    rcx = *((rsp + 0x20));\n    eax = *((rsp + 0x18));\n    bpl = (*(rax) == 0xc) ? 1 : 0;\n    *(rbx) = ax;\n    ebp += 2;\n    *(rcx) = 0x7e317e2e;\n    *((rcx + 4)) = 0;\n    goto label_8;\nlabel_22:\n    if (r12 == 0) {\n        goto label_9;\n    }\n    rdi = r12;\n    closedir ();\n    goto label_9;\nlabel_11:\n    fcn_0040a380 (rdi);\n    rdi = imp.__libc_start_main;\n    goto label_10;\n}\n"
        },
        {
            "funcName": "fcn_0040a8b0",
            "funcStartAddr": "0x40a8b0",
            "funcEndAddr": "0x40a8ba",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40a8b0 */\n#include <stdint.h>\n \nvoid fcn_0040a8b0 (char * arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edx = 1;\n    return void (*0x40a3e0)() ();\n}\n"
        },
        {
            "funcName": "fcn_0040a930",
            "funcStartAddr": "0x40a930",
            "funcEndAddr": "0x40a9e1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40a930 */\n#include <stdint.h>\n \nuint64_t fcn_0040a930 (uint32_t arg2) {\n    rsi = arg2;\n    do {\n        fcn_00412e60 (rdi, rsi, 0x419040, 0x419020, 4, *(0x0061f4e0));\n        eax = *((rax*4 + 0x419020));\n        return eax;\n        if (rsi != 0) {\n            if (*(rsi) != 0) {\n                goto label_0;\n            }\n        }\n        rax = getenv (0x418fce);\n        if (rax != 0) {\n            if (*(rax) != 0) {\n                goto label_1;\n            }\n        }\n        eax = 2;\n        return rax;\nlabel_1:\n        rsi = rax;\n        edi = \"$VERSION_CONTROL\";\nlabel_0:\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040a980",
            "funcStartAddr": "0x40a980",
            "funcEndAddr": "0x40a9f0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40a980 */\n#include <stdint.h>\n \nint64_t fcn_0040a980 (uint32_t arg1, void * arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = rdx;\n    if (rdi != 0) {\n        goto label_3;\n    }\n    edi = 0x2000;\n    rdi = rsi;\n    while (rsi == 0) {\nlabel_0:\n        if (rdi <= rcx) {\n            rcx = rdi;\n        }\n        r8 = rcx;\nlabel_1:\n        rax = rcx;\n        return rax;\nlabel_3:\n    }\n    r8 = rsi;\n    rax = rdi;\nlabel_2:\n    edx = 0;\n    rax = rdx:rax / r8;\n    rdx = rdx:rax % r8;\n    if (rdx != 0) {\n        goto label_4;\n    }\n    rax = rdi;\n    edx = 0;\n    rax = rdx:rax / r8;\n    rdx = rdx:rax % r8;\n    r8 = rsi;\n    r8 *= rax;\n    r9 = rax;\n    if (r8 > rcx) {\n        goto label_0;\n    }\n    rax = r8;\n    edx = 0;\n    rax = rdx:rax / rsi;\n    rdx = rdx:rax % rsi;\n    if (rax != r9) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_4:\n    rax = r8;\n    r8 = rdx;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_0040ab20",
            "funcStartAddr": "0x40ab20",
            "funcEndAddr": "0x40abbe",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40ab20 */\n#include <stdint.h>\n \nuint64_t fcn_0040ab20 (void) {\n    eax = fcn_00412f20 (*(obj.stdout));\n    if (eax != 0) {\n        rax = errno_location ();\n        rbx = rax;\n        if (*(0x006219b0) == 0) {\n            goto label_0;\n        }\n        if (*(rax) != 0x20) {\n            goto label_0;\n        }\n    }\n    eax = fcn_00412f20 (*(obj.stderr));\n    if (eax != 0) {\n        goto label_1;\n    }\n    return rax;\nlabel_0:\n    edx = 5;\n    rax = dcgettext (0, \"write error\");\n    rdi = imp.__libc_start_main;\n    if (rdi == 0) {\n        goto label_2;\n    }\n    rax = fcn_0040eaa0 (rdi, rsi, rdx, rcx);\n    r8 = rbp;\n    rcx = rax;\n    eax = 0;\n    error (0, *(rbx), \"%s: %s\");\n    do {\nlabel_1:\n        rax = exit (*(0x0061f468));\nlabel_2:\n        rcx = rax;\n        eax = 0;\n        error (0, *(rbx), 0x41aa9b);\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040abc0",
            "funcStartAddr": "0x40abc0",
            "funcEndAddr": "0x40ac56",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40abc0 */\n#include <stdint.h>\n \nuint64_t fcn_0040abc0 (void) {\n    rax = opendir ();\n    rbx = rax;\n    if (rax != 0) {\n        rdi = rax;\n        eax = dirfd ();\n        if (eax <= 2) {\n            goto label_1;\n        }\n    }\n    rax = rbx;\n    return rax;\nlabel_1:\n    edi = eax;\n    eax = 0;\n    eax = fcn_00411a10 (edi, 0x406, 3, rcx, r8);\n    r12d = eax;\n    rax = errno_location ();\n    if (r12d >= 0) {\n        goto label_2;\n    }\n    r14d = *(rax);\n    r13d = 0;\n    do {\nlabel_0:\n        rdi = rbx;\n        rbx = r13;\n        closedir ();\n        *(rbp) = r14d;\n        rax = rbx;\n        return rax;\nlabel_2:\n        edi = r12d;\n        rax = fdopendir ();\n        r14d = *(rbp);\n        r13 = rax;\n    } while (rax != 0);\n    close (r12d);\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040ac60",
            "funcStartAddr": "0x40ac60",
            "funcEndAddr": "0x40ac78",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40ac60 */\n#include <stdint.h>\n \nuint64_t fcn_0040ac60 (void) {\n    rax = fcn_0040ace0 (rdi);\n    if (rax != 0) {\n        return rax;\n    }\n    return fcn_00411530 ();\n}\n"
        },
        {
            "funcName": "fcn_0040ac80",
            "funcStartAddr": "0x40ac80",
            "funcEndAddr": "0x40acdd",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40ac80 */\n#include <stdint.h>\n \nuint64_t fcn_0040ac80 (uint32_t arg1) {\n    rdi = arg1;\n    ebp = 0;\n    rbx = rdi;\n    bpl = (*(rdi) == 0x2f) ? 1 : 0;\n    rax = fcn_0040ad40 (rdi);\n    rcx = rax;\n    rcx -= rbx;\n    if (rcx <= rbp) {\n        goto label_0;\n    }\n    rdx = rcx - 1;\n    if (*((rax - 1)) == 0x2f) {\n        goto label_1;\n    }\n    goto label_0;\n    do {\n        rax = rdx - 1;\n        if (*((rbx + rdx - 1)) != 0x2f) {\n            goto label_2;\n        }\n        rdx = rax;\nlabel_1:\n    } while (rbp != rdx);\nlabel_2:\n    rax = rdx;\n    return rax;\nlabel_0:\n    rdx = rcx;\n    rax = rcx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040ace0",
            "funcStartAddr": "0x40ace0",
            "funcEndAddr": "0x40ad3a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40ace0 */\n#include <stdint.h>\n \nuint64_t fcn_0040ace0 (int64_t arg1) {\n    rdi = arg1;\n    rax = fcn_0040ac80 (rdi);\n    rbx = rax;\n    al = (rax == 0) ? 1 : 0;\n    eax = (int32_t) al;\n    rax = malloc (rbx + rax + 1);\n    rcx = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    rax = memcpy (rax, rbp, rbx);\n    rcx = rax;\n    while (1) {\n        *((rcx + rbx)) = 0;\nlabel_0:\n        rax = rcx;\n        return rax;\n        *(rax) = 0x2e;\n        ebx = 1;\n    }\n}\n"
        },
        {
            "funcName": "fcn_0040ad40",
            "funcStartAddr": "0x40ad40",
            "funcEndAddr": "0x40ad9b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40ad40 */\n#include <stdint.h>\n \nint64_t fcn_0040ad40 (char * arg1) {\n    rdi = arg1;\n    edx = *(rdi);\n    rax = rdi;\n    if (dl != 0x2f) {\n        goto label_1;\n    }\n    do {\n        rax++;\n        edx = *(rax);\n    } while (dl == 0x2f);\nlabel_1:\n    if (dl == 0) {\n        goto label_2;\n    }\n    rcx = rax;\n    esi = 0;\n    while (dl != 0x2f) {\n        if (sil != 0) {\n            rax = rcx;\n            esi = 0;\n        }\n        rcx++;\n        edx = *(rcx);\n        if (dl == 0) {\n            goto label_2;\n        }\nlabel_0:\n    }\n    rcx++;\n    edx = *(rcx);\n    esi = 1;\n    if (dl != 0) {\n        goto label_0;\n    }\nlabel_2:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040ada0",
            "funcStartAddr": "0x40ada0",
            "funcEndAddr": "0x40adcb",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40ada0 */\n#include <stdint.h>\n \nuint64_t fcn_0040ada0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = strlen (rdi);\n    while (rdx != 1) {\n        rdx = rax - 1;\n        if (*((rbx + rax - 1)) != 0x2f) {\n            return rax;\n        }\n        rax = rdx;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040add0",
            "funcStartAddr": "0x40add0",
            "funcEndAddr": "0x40add5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40add0 */\n#include <stdint.h>\n \nvoid fcn_0040add0 (void) {\n    return posix_fadvise ();\n}\n"
        },
        {
            "funcName": "fcn_0040ae10",
            "funcStartAddr": "0x40ae10",
            "funcEndAddr": "0x40ae5a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40ae10 */\n#include <stdint.h>\n \nuint64_t fcn_0040ae10 (int64_t arg_60h, uint32_t arg3, int32_t oflag, const char * path) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    uint32_t var_30h;\n    rdx = arg3;\n    rsi = oflag;\n    rdi = path;\n    *((rsp + 0x30)) = rdx;\n    edx = 0;\n    while (1) {\n        eax = 0;\n        eax = open (rdi, rsi, rdx);\n        fcn_0040fcf0 (eax);\n        return eax;\n        rax = rsp + 0x60;\n        *((rsp + 8)) = 0x10;\n        edx = *((rsp + 0x30));\n        *((rsp + 0x10)) = rax;\n        rax = rsp + 0x20;\n        *((rsp + 0x18)) = rax;\n    }\n}\n"
        },
        {
            "funcName": "fcn_0040ae60",
            "funcStartAddr": "0x40ae60",
            "funcEndAddr": "0x40c5d5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40ae60 */\n#include <stdint.h>\n \nuint64_t fcn_0040ae60 (int64_t arg1, char * arg2, func * arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rdi != 0) {\n        r13 = rdi;\n        r12 = rsi;\n        rax = fcn_004112e0 (0x18);\n        rbx = rax;\n        rax = fcn_00411510 (r12);\n        rsi = rbx;\n        *(rbx) = rax;\n        rax = *((rbp + 8));\n        *((rbx + 8)) = rax;\n        rax = *(rbp);\n        *((rbx + 0x10)) = rax;\n        rax = fcn_0040c2f0 (r13);\n        if (rax == 0) {\n            goto label_0;\n        }\n        if (rbx != rax) {\n            rdi = rbx;\n            goto label_1;\n        }\n        return rax;\n    }\n    return rax;\nlabel_0:\n    fcn_00411530 ();\nlabel_1:\n    rbx = rdi;\n    free (*(rdi));\n    rdi = rbx;\n    return free ();\n}\n"
        },
        {
            "funcName": "fcn_0040aef0",
            "funcStartAddr": "0x40aef0",
            "funcEndAddr": "0x40af2b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40aef0 */\n#include <stdint.h>\n \nint64_t fcn_0040aef0 (int64_t arg1, char * arg2, int64_t arg3) {\n    int64_t var_8h;\n    int64_t var_10h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rdi != 0) {\n        rax = *((rdx + 8));\n        *(rsp) = rsi;\n        *((rsp + 8)) = rax;\n        rax = *(rdx);\n        *((rsp + 0x10)) = rax;\n        rax = fcn_0040b8e0 (rdi, rsp);\n        al = (rax != 0) ? 1 : 0;\n        return rax;\n    }\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040af30",
            "funcStartAddr": "0x40af30",
            "funcEndAddr": "0x40b0a3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40af30 */\n#include <stdint.h>\n \nint32_t fcn_0040af30 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edx = edi;\n    eax = 0x2d;\n    edx &= 0xf000;\n    if (edx != 0x8000) {\n        eax = 0x64;\n        if (edx == 0x4000) {\n            goto label_1;\n        }\n        eax = 0x62;\n        if (edx == 0x6000) {\n            goto label_1;\n        }\n        eax = 0x63;\n        if (edx == 0x2000) {\n            goto label_1;\n        }\n        eax = 0x6c;\n        if (edx == 0xa000) {\n            goto label_1;\n        }\n        eax = 0x70;\n        if (edx == 0x1000) {\n            goto label_1;\n        }\n        eax = 0x73;\n        edx = 0x3f;\n        if (edx == 0xc000) {\n            eax = edx;\n            goto label_1;\n        }\n    }\nlabel_1:\n    *(rsi) = al;\n    eax = edi;\n    eax &= 0x100;\n    eax -= eax;\n    eax &= 0xffffffbb;\n    eax += 0x72;\n    *((rsi + 1)) = al;\n    eax = edi;\n    eax &= 0x80;\n    eax -= eax;\n    eax &= 0xffffffb6;\n    eax += 0x77;\n    *((rsi + 2)) = al;\n    eax = edi;\n    eax &= 0x40;\n    eax -= eax;\n    if ((edi & 0x800) == 0) {\n        goto label_2;\n    }\n    eax &= 0xffffffe0;\n    eax += 0x73;\n    do {\n        *((rsi + 3)) = al;\n        eax = edi;\n        eax &= 0x20;\n        eax -= eax;\n        eax &= 0xffffffbb;\n        eax += 0x72;\n        *((rsi + 4)) = al;\n        eax = edi;\n        eax &= 0x10;\n        eax -= eax;\n        eax &= 0xffffffb6;\n        eax += 0x77;\n        *((rsi + 5)) = al;\n        eax = edi;\n        eax &= 8;\n        eax -= eax;\n        if ((edi & 0x400) == 0) {\n            goto label_3;\n        }\n        eax &= 0xffffffe0;\n        eax += 0x73;\nlabel_0:\n        *((rsi + 6)) = al;\n        eax = edi;\n        eax &= 4;\n        eax -= eax;\n        eax &= 0xffffffbb;\n        eax += 0x72;\n        *((rsi + 7)) = al;\n        eax = edi;\n        eax &= 2;\n        eax -= eax;\n        eax &= 0xffffffb6;\n        eax += 0x77;\n        *((rsi + 8)) = al;\n        eax = edi;\n        eax &= 1;\n        eax -= eax;\n        edi &= 0x200;\n        if (edi == 0) {\n            goto label_4;\n        }\n        eax &= 0xffffffe0;\n        eax += 0x74;\n        *((rsi + 9)) = al;\n        eax = 0x20;\n        *((rsi + 0xa)) = ax;\n        return eax;\nlabel_2:\n        eax &= 0xffffffb5;\n        eax += 0x78;\n    } while (1);\nlabel_3:\n    eax &= 0xffffffb5;\n    eax += 0x78;\n    goto label_0;\nlabel_4:\n    eax &= 0xffffffb5;\n    eax += 0x78;\n    *((rsi + 9)) = al;\n    eax = 0x20;\n    *((rsi + 0xa)) = ax;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_0040b0c0",
            "funcStartAddr": "0x40b0c0",
            "funcEndAddr": "0x40b0d8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40b0c0 */\n#include <stdint.h>\n \nuint64_t fcn_0040b0c0 (void) {\n    uint32_t var_fh;\n    rax = void (*0x40b0e0)() ();\n    if (rax != 0) {\n        return rax;\n    }\n    return fcn_00411530 ();\n}\n"
        },
        {
            "funcName": "fcn_0040b1c0",
            "funcStartAddr": "0x40b1c0",
            "funcEndAddr": "0x40b236",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40b1c0 */\n#include <stdint.h>\n \nuint64_t fcn_0040b1c0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r13d = edi;\n    rbx = rdx;\n    r12d = 0;\n    while (rax != -1) {\n        if (rax == 0) {\n            goto label_1;\n        }\n        r12 += rax;\n        rbp += rax;\n        rbx -= rax;\n        if (rbx == 0) {\n            goto label_2;\n        }\n        rax = fcn_0040eec0 (r13d, rbp, rbx);\n    }\n    do {\nlabel_2:\n        rax = r12;\n        return rax;\nlabel_1:\n        errno_location ();\n        *(rax) = 0;\n        rax = r12;\n        return rax;\nlabel_0:\n        r12d = 0;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040b240",
            "funcStartAddr": "0x40b240",
            "funcEndAddr": "0x40b2b6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40b240 */\n#include <stdint.h>\n \nuint64_t fcn_0040b240 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r13d = edi;\n    rbx = rdx;\n    r12d = 0;\n    while (rax != -1) {\n        if (rax == 0) {\n            goto label_1;\n        }\n        r12 += rax;\n        rbp += rax;\n        rbx -= rax;\n        if (rbx == 0) {\n            goto label_2;\n        }\n        rax = fcn_0040ef20 (r13d, rbp, rbx);\n    }\n    do {\nlabel_2:\n        rax = r12;\n        return rax;\nlabel_1:\n        errno_location ();\n        *(rax) = 0x1c;\n        rax = r12;\n        return rax;\nlabel_0:\n        r12d = 0;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040b2c0",
            "funcStartAddr": "0x40b2c0",
            "funcEndAddr": "0x40b353",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40b2c0 */\n#include <stdint.h>\n \nint64_t fcn_0040b2c0 (uint32_t arg1, int64_t arg3) {\n    rdi = arg1;\n    rdx = arg3;\n    esi = 0xa;\n    r9 = 0xaaaaaaaaaaaaaaab;\n    if (rdi >= 0xa) {\n        rsi = rdi;\n    }\n    rsi |= 1;\n    if (rsi == -1) {\n        goto label_1;\n    }\nlabel_0:\n    rax = rsi;\n    rcx = rsi;\n    rdx:rax = rax * r9;\n    rax = rdx;\n    rax >>= 1;\n    rax *= 3;\n    rcx -= rax;\n    rax = rcx;\n    if (rsi <= 9) {\n        goto label_2;\n    }\n    if (rcx == 0) {\n        goto label_3;\n    }\n    r8d = 0x10;\n    edi = 9;\n    ecx = 3;\n    while (rdi < rsi) {\n        r8 += 8;\n        if (rdx == 0) {\n            goto label_3;\n        }\n        rcx += 2;\n        rax = rsi;\n        edx = 0;\n        rdi += r8;\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rax = rdx;\n    }\nlabel_2:\n    if (rax != 0) {\n        goto label_1;\n    }\nlabel_3:\n    rsi += 2;\n    if (rsi != -1) {\n        goto label_0;\n    }\nlabel_1:\n    rax = rsi;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040b380",
            "funcStartAddr": "0x40b380",
            "funcEndAddr": "0x413711",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40b380 */\n#include <stdint.h>\n \nuint64_t fcn_0040b380 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    do {\n        /* [13] -r-x section size 81912 named .text */\n        abort ();\n        rbx = rdi;\n        rdi = rsi;\n        rsi = *((rbx + 0x10));\n        rax = uint64_t (*rbx + 0x30)(uint64_t) (rbx);\n    } while (*((rbx + 0x10)) <= rax);\n    rax <<= 4;\n    rax += *(rbx);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040b3b0",
            "funcStartAddr": "0x40b3b0",
            "funcEndAddr": "0x40b4c9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40b3b0 */\n#include <stdint.h>\n \nuint64_t fcn_0040b3b0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r14 = rdx;\n    r13d = ecx;\n    r12 = rdi;\n    rax = fcn_0040b380 (rdi, rsi);\n    *(r14) = rax;\n    rsi = *(rax);\n    if (rsi == 0) {\n        goto label_1;\n    }\n    rbx = rax;\n    if (rsi == rbp) {\n        goto label_2;\n    }\n    rdi = rbp;\n    al = uint64_t (*r12 + 0x38)() ();\n    if (al != 0) {\n        goto label_3;\n    }\n    rax = *((rbx + 8));\n    if (rax == 0) {\n        goto label_1;\n    }\n    rsi = *(rax);\n    if (rbp != rsi) {\n        goto label_4;\n    }\n    goto label_5;\n    do {\n        rbx = *((rbx + 8));\n        rax = *((rbx + 8));\n        if (rax == 0) {\n            goto label_1;\n        }\n        rsi = *(rax);\n        if (rsi == rbp) {\n            goto label_5;\n        }\nlabel_4:\n        rdi = rbp;\n        al = uint64_t (*r12 + 0x38)() ();\n    } while (al == 0);\n    rax = *((rbx + 8));\n    rsi = *(rax);\nlabel_5:\n    if (r13b == 0) {\n        goto label_0;\n    }\n    rdx = *((rax + 8));\n    *((rbx + 8)) = rdx;\n    *(rax) = 0;\n    rdx = *((r12 + 0x48));\n    *((rax + 8)) = rdx;\n    *((r12 + 0x48)) = rax;\n    do {\nlabel_0:\n        rax = rsi;\n        return rax;\nlabel_3:\n        rsi = *(rbx);\nlabel_2:\n    } while (r13b == 0);\n    rax = *((rbx + 8));\n    if (rax != 0) {\n        __asm (\"movdqu xmm0, xmmword [rax]\");\n        __asm (\"movups xmmword [rbx], xmm0\");\n        *(rax) = 0;\n        rdx = *((r12 + 0x48));\n        *((rax + 8)) = rdx;\n        *((r12 + 0x48)) = rax;\n        rax = rsi;\n        return rax;\nlabel_1:\n        esi = 0;\n        rax = rsi;\n        return rax;\n    }\n    *(rbx) = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040b4d0",
            "funcStartAddr": "0x40b4d0",
            "funcEndAddr": "0x40b54e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40b4d0 */\n#include <stdint.h>\n \nint64_t fcn_0040b4d0 (int64_t arg1) {\n    rdi = arg1;\n    rax = *(rdi);\n    if (rax != 0x419120) {\n        xmm0 = *((rax + 8));\n        __asm (\"comiss xmm0, dword [0x00419134]\");\n        if (rax > 0x419120) {\n            xmm1 = *(0x00419138);\n            __asm (\"comiss xmm1, xmm0\");\n            if (rax <= 0x419120) {\n                goto label_0;\n            }\n            xmm1 = *((rax + 0xc));\n            __asm (\"comiss xmm1, dword [0x0041913c]\");\n            if (rax <= 0x419120) {\n                goto label_0;\n            }\n            xmm1 = *(rax);\n            __asm (\"comiss xmm1, dword [0x00419140]\");\n            if (rax < 0x419120) {\n                goto label_0;\n            }\n            __asm (\"addss xmm1, dword [0x00419134]\");\n            xmm2 = *((rax + 4));\n            __asm (\"comiss xmm2, xmm1\");\n            if (rax <= 0x419120) {\n                goto label_0;\n            }\n            xmm3 = *(0x00419144);\n            __asm (\"comiss xmm3, xmm2\");\n            if (rax < 0x419120) {\n                goto label_0;\n            }\n            __asm (\"comiss xmm0, xmm1\");\n            eax = 1;\n            if (rax > 0x419120) {\n                goto label_1;\n            }\n        }\nlabel_0:\n        *(rdi) = 0x419120;\n        eax = 0;\n        return rax;\n    }\n    eax = 1;\nlabel_1:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040b550",
            "funcStartAddr": "0x40b550",
            "funcEndAddr": "0x40b69a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40b550 */\n#include <stdint.h>\n \nuint64_t fcn_0040b550 (int64_t arg1, uint32_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r14d = edx;\n    r13 = rsi;\n    r12 = *(rsi);\n    if (r12 < *((rsi + 8))) {\n        goto label_2;\n    }\n    goto label_5;\n    do {\nlabel_1:\n        r12 += 0x10;\n        if (*((r13 + 8)) <= r12) {\n            goto label_5;\n        }\nlabel_2:\n        r15 = *(r12);\n    } while (r15 == 0);\n    rbx = *((r12 + 8));\n    if (rbx != 0) {\n        goto label_0;\n    }\n    goto label_6;\n    do {\n        rcx = *((rax + 8));\n        *((rbx + 8)) = rcx;\n        *((rax + 8)) = rbx;\n        rbx = rdx;\n        if (rdx == 0) {\n            goto label_7;\n        }\nlabel_0:\n        r15 = *(rbx);\n        rax = fcn_0040b380 (rbp, r15);\n        rdx = *((rbx + 8));\n    } while (*(rax) != 0);\n    *(rax) = r15;\n    *((rbp + 0x18))++;\n    *(rbx) = 0;\n    rax = *((rbp + 0x48));\n    *((rbx + 8)) = rax;\n    *((rbp + 0x48)) = rbx;\n    rbx = rdx;\n    if (rdx != 0) {\n        goto label_0;\n    }\nlabel_7:\n    r15 = *(r12);\nlabel_6:\n    *((r12 + 8)) = 0;\n    if (r14b != 0) {\n        goto label_1;\n    }\n    rax = fcn_0040b380 (rbp, r15);\n    rbx = rax;\n    if (*(rax) == 0) {\n        goto label_8;\n    }\n    rax = *((rbp + 0x48));\n    if (rax == 0) {\n        goto label_9;\n    }\n    rdx = *((rax + 8));\n    *((rbp + 0x48)) = rdx;\nlabel_4:\n    rdx = *((rbx + 8));\n    *(rax) = r15;\n    *((rax + 8)) = rdx;\n    *((rbx + 8)) = rax;\nlabel_3:\n    *(r12) = 0;\n    r12 += 0x10;\n    *((r13 + 0x18))--;\n    if (*((r13 + 8)) > r12) {\n        goto label_2;\n    }\nlabel_5:\n    eax = 1;\n    return rax;\nlabel_8:\n    *(rax) = r15;\n    *((rbp + 0x18))++;\n    goto label_3;\nlabel_9:\n    rax = malloc (0x10);\n    if (rax != 0) {\n        goto label_4;\n    }\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040b8e0",
            "funcStartAddr": "0x40b8e0",
            "funcEndAddr": "0x40b933",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40b8e0 */\n#include <stdint.h>\n \nuint64_t fcn_0040b8e0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r12 = rdi;\n    rax = fcn_0040b380 (rdi, rsi);\n    rsi = *(rax);\n    if (rsi == 0) {\n        goto label_0;\n    }\n    rbx = rax;\n    while (rbx != 0) {\n        rsi = *(rbx);\n        if (rsi == rbp) {\n            goto label_1;\n        }\n        rdi = rbp;\n        al = uint64_t (*r12 + 0x38)() ();\n        if (al != 0) {\n            goto label_2;\n        }\n        rbx = *((rbx + 8));\n    }\nlabel_0:\n    eax = 0;\n    return rax;\nlabel_2:\n    rbp = *(rbx);\nlabel_1:\n    rax = *(rbx);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040bb50",
            "funcStartAddr": "0x40bb50",
            "funcEndAddr": "0x40bcda",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40bb50 */\n#include <stdint.h>\n \nuint64_t fcn_0040bb50 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    eax = 0x40b360;\n    r15 = rsi;\n    r14 = r8;\n    r13 = rcx;\n    r12 = rdx;\n    edi = 0x50;\n    if (rdx == 0) {\n        r12 = rax;\n    }\n    eax = 0x40b370;\n    if (rcx == 0) {\n        r13 = rax;\n    }\n    rax = malloc (rdi);\n    rbx = rax;\n    if (rax == 0) {\n        goto label_4;\n    }\n    rdi = rax + 0x28;\n    if (r15 == 0) {\n        goto label_5;\n    }\n    *((rax + 0x28)) = r15;\n    al = fcn_0040b4d0 (rdi);\n    if (al == 0) {\n        goto label_0;\n    }\n    if (*((r15 + 0x10)) == 0) {\n        goto label_6;\n    }\nlabel_1:\n    rax = fcn_0040b2c0 (rbp, rsi);\n    rax >>= 0x3d;\n    al = (rax != 0) ? 1 : 0;\n    eax = (int32_t) al;\n    if (((rbp >> 0x3c) & 1) < 0) {\n        goto label_0;\n    }\n    if (rax != 0) {\n        goto label_0;\n    }\n    *((rbx + 0x10)) = rbp;\n    if (rbp == 0) {\n        goto label_0;\n    }\n    rax = calloc (rbp, 0x10);\n    *(rbx) = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    rbp <<= 4;\n    *((rbx + 0x18)) = 0;\n    rbp += rax;\n    *((rbx + 0x20)) = 0;\n    *((rbx + 8)) = rbp;\n    *((rbx + 0x30)) = r12;\n    *((rbx + 0x38)) = r13;\n    *((rbx + 0x40)) = r14;\n    *((rbx + 0x48)) = 0;\n    while (al == 0) {\nlabel_0:\n        ebx = 0;\n        free (rbx);\nlabel_4:\n        rax = rbx;\n        return rax;\nlabel_5:\n        *((rax + 0x28)) = 0x419120;\n        al = fcn_0040b4d0 (rdi);\n        xmm1 = *(0x00419148);\n    }\n    if (rbp < 0) {\n        goto label_7;\n    }\nlabel_2:\n    xmm0 = 0;\n    __asm (\"cvtsi2ss xmm0, rbp\");\nlabel_3:\n    __asm (\"divss xmm0, xmm1\");\n    __asm (\"comiss xmm0, dword [0x0041914c]\");\n    if (rbp >= 0) {\n        goto label_0;\n    }\n    __asm (\"comiss xmm0, dword [0x00419150]\");\n    if (rbp < 0) {\n        goto label_8;\n    }\n    __asm (\"subss xmm0, dword [0x00419150]\");\n    __asm (\"cvttss2si rbp, xmm0\");\n    __asm (\"btc rbp, 0x3f\");\n    goto label_1;\nlabel_6:\n    xmm1 = *((r15 + 8));\n    if (rbp >= 0) {\n        goto label_2;\n    }\nlabel_7:\n    rax = rbp;\n    ebp &= 1;\n    xmm0 = 0;\n    rax >>= 1;\n    rax |= rbp;\n    __asm (\"cvtsi2ss xmm0, rax\");\n    __asm (\"addss xmm0, xmm0\");\n    goto label_3;\nlabel_8:\n    __asm (\"cvttss2si rbp, xmm0\");\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040be70",
            "funcStartAddr": "0x40be70",
            "funcEndAddr": "0x414ec0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40be70 */\n#include <stdint.h>\n \nuint64_t fcn_0040be70 (int64_t arg1, uint32_t arg2) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    rdi = arg1;\n    rsi = arg2;\n    do {\nlabel_0:\n        rax = abort ();\n        r12 = *((rdi + 0x28));\n        if (*((r12 + 0x10)) == 0) {\n            if (rsi < 0) {\n                goto label_3;\n            }\n            xmm0 = 0;\n            __asm (\"cvtsi2ss xmm0, rsi\");\nlabel_1:\n            __asm (\"divss xmm0, dword [r12 + 8]\");\n            __asm (\"comiss xmm0, dword [0x0041914c]\");\n            if (rsi >= 0) {\n                goto label_4;\n            }\n            __asm (\"comiss xmm0, dword [0x00419150]\");\n            if (rsi < 0) {\n                goto label_5;\n            }\n            __asm (\"subss xmm0, dword [0x00419150]\");\n            __asm (\"cvttss2si rsi, xmm0\");\n            __asm (\"btc rsi, 0x3f\");\n        }\nlabel_2:\n        rax = fcn_0040b2c0 (rsi, rsi);\n        rdx = rax*8;\n        rbx = rax;\n        rax >>= 0x3d;\n        al = (rax != 0) ? 1 : 0;\n        edx = 1;\n        eax = (int32_t) al;\n        __asm (\"cmovs rax, rdx\");\n        if (rbx == 0) {\n            goto label_4;\n        }\n        if (rax != 0) {\n            goto label_4;\n        }\n        if (*((rbp + 0x10)) == rbx) {\n            goto label_6;\n        }\n        rax = calloc (rbx, 0x10);\n        *(rsp) = rax;\n        if (rax == 0) {\n            goto label_4;\n        }\n        *((rsp + 0x10)) = rbx;\n        rbx <<= 4;\n        rbx += rax;\n        rax = *((rbp + 0x30));\n        *((rsp + 0x18)) = 0;\n        *((rsp + 8)) = rbx;\n        *((rsp + 0x30)) = rax;\n        rax = *((rbp + 0x38));\n        *((rsp + 0x20)) = 0;\n        *((rsp + 0x38)) = rax;\n        rax = *((rbp + 0x40));\n        *((rsp + 0x28)) = r12;\n        *((rsp + 0x40)) = rax;\n        rax = *((rbp + 0x48));\n        *((rsp + 0x48)) = rax;\n        eax = fcn_0040b550 (rsp, rbp, 0);\n        ebx = eax;\n        if (al != 0) {\n            goto label_7;\n        }\n        rax = *((rsp + 0x48));\n        *((rbp + 0x48)) = rax;\n        al = fcn_0040b550 (rbp, rsp, 1);\n    } while (al == 0);\n    al = fcn_0040b550 (rbp, rsp, 0);\n    if (al == 0) {\n        goto label_0;\n    }\n    free (*(rsp));\n    eax = ebx;\n    return rax;\nlabel_4:\n    ebx = 0;\n    do {\n        eax = ebx;\n        return rax;\nlabel_3:\n        rax = rsi;\n        esi &= 1;\n        xmm0 = 0;\n        rax >>= 1;\n        rax |= rsi;\n        __asm (\"cvtsi2ss xmm0, rax\");\n        __asm (\"addss xmm0, xmm0\");\n        goto label_1;\nlabel_5:\n        __asm (\"cvttss2si rsi, xmm0\");\n        goto label_2;\nlabel_6:\n        ebx = 1;\n        eax = 1;\n        return rax;\nlabel_7:\n        free (*(rbp));\n        rax = *(rsp);\n        *(rbp) = rax;\n        rax = *((rsp + 8));\n        *((rbp + 8)) = rax;\n        rax = *((rsp + 0x10));\n        *((rbp + 0x10)) = rax;\n        rax = *((rsp + 0x18));\n        *((rbp + 0x18)) = rax;\n        rax = *((rsp + 0x48));\n        *((rbp + 0x48)) = rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040c070",
            "funcStartAddr": "0x40c070",
            "funcEndAddr": "0x415335",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40c070 */\n#include <stdint.h>\n \nuint64_t fcn_0040c070 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    do {\nlabel_6:\n        abort ();\n    } while (rsi == 0);\n    r12 = rdx;\n    rbx = rdi;\n    rax = fcn_0040b3b0 (rdi, rsi, rsp + 8, 0);\n    rdx = rax;\n    if (rax != 0) {\n        eax = 0;\n        if (r12 != 0) {\n            *(r12) = rdx;\n        }\n        return rax;\n    }\n    rax = *((rbx + 0x18));\n    if (rax < 0) {\n        goto label_8;\n    }\n    xmm1 = 0;\n    rdx = *((rbx + 0x28));\n    __asm (\"cvtsi2ss xmm1, rax\");\n    rax = *((rbx + 0x10));\n    if (rax < 0) {\n        goto label_9;\n    }\n    do {\n        xmm0 = 0;\n        __asm (\"cvtsi2ss xmm0, rax\");\n        __asm (\"mulss xmm0, dword [rdx + 8]\");\n        __asm (\"comiss xmm1, xmm0\");\n        if (rax > 0) {\n            goto label_10;\n        }\nlabel_0:\n        r12 = *((rsp + 8));\n        if (*(r12) == 0) {\n            goto label_11;\n        }\n        rax = *((rbx + 0x48));\n        if (rax == 0) {\n            goto label_12;\n        }\n        rdx = *((rax + 8));\n        *((rbx + 0x48)) = rdx;\nlabel_1:\n        rdx = *((r12 + 8));\n        *(rax) = rbp;\n        *((rax + 8)) = rdx;\n        *((r12 + 8)) = rax;\n        eax = 1;\n        *((rbx + 0x20))++;\n        return rax;\nlabel_8:\n        rdx = rax;\n        eax &= 1;\n        xmm1 = 0;\n        rdx >>= 1;\n        rdx |= rax;\n        rax = *((rbx + 0x10));\n        __asm (\"cvtsi2ss xmm1, rdx\");\n        rdx = *((rbx + 0x28));\n        __asm (\"addss xmm1, xmm1\");\n    } while (rax >= 0);\nlabel_9:\n    rcx = rax;\n    eax &= 1;\n    xmm0 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm0, rcx\");\n    __asm (\"addss xmm0, xmm0\");\n    __asm (\"mulss xmm0, dword [rdx + 8]\");\n    __asm (\"comiss xmm1, xmm0\");\n    if (rcx <= 0) {\n        goto label_0;\n    }\nlabel_10:\n    fcn_0040b4d0 (rbx + 0x28);\n    rdx = *((rbx + 0x28));\n    rax = *((rbx + 0x10));\n    xmm2 = *((rdx + 8));\n    if (rax < 0) {\n        goto label_13;\n    }\n    xmm0 = 0;\n    __asm (\"cvtsi2ss xmm0, rax\");\nlabel_3:\n    rax = *((rbx + 0x18));\n    if (rax < 0) {\n        goto label_14;\n    }\n    xmm1 = 0;\n    __asm (\"cvtsi2ss xmm1, rax\");\nlabel_2:\n    xmm3 = xmm2;\n    __asm (\"mulss xmm3, xmm0\");\n    __asm (\"comiss xmm1, xmm3\");\n    if (rax <= 0) {\n        goto label_0;\n    }\n    __asm (\"mulss xmm0, dword [rdx + 0xc]\");\n    if (*((rdx + 0x10)) == 0) {\n        goto label_15;\n    }\nlabel_4:\n    __asm (\"comiss xmm0, dword [0x0041914c]\");\n    if (*((rdx + 0x10)) < 0) {\n        goto label_16;\n    }\n    do {\nlabel_5:\n        eax = 0xffffffff;\n        return rax;\nlabel_11:\n        *(r12) = rbp;\n        eax = 1;\n        *((rbx + 0x20))++;\n        *((rbx + 0x18))++;\n        return rax;\nlabel_12:\n        rax = malloc (0x10);\n    } while (rax == 0);\n    goto label_1;\nlabel_14:\n    rcx = rax;\n    eax &= 1;\n    xmm1 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm1, rcx\");\n    __asm (\"addss xmm1, xmm1\");\n    goto label_2;\nlabel_13:\n    rcx = rax;\n    eax &= 1;\n    xmm0 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm0, rcx\");\n    __asm (\"addss xmm0, xmm0\");\n    goto label_3;\nlabel_15:\n    __asm (\"mulss xmm0, xmm2\");\n    goto label_4;\nlabel_16:\n    __asm (\"comiss xmm0, dword [0x00419150]\");\n    if (rcx >= 0) {\n        goto label_17;\n    }\n    __asm (\"cvttss2si rsi, xmm0\");\nlabel_7:\n    al = fcn_0040be70 (rbx, rsi);\n    if (al == 0) {\n        goto label_5;\n    }\n    rax = fcn_0040b3b0 (rbx, rbp, rsp + 8, 0);\n    if (rax == 0) {\n        goto label_0;\n    }\n    goto label_6;\nlabel_17:\n    __asm (\"subss xmm0, dword [0x00419150]\");\n    __asm (\"cvttss2si rsi, xmm0\");\n    __asm (\"btc rsi, 0x3f\");\n    goto label_7;\n}\n"
        },
        {
            "funcName": "fcn_0040c2f0",
            "funcStartAddr": "0x40c2f0",
            "funcEndAddr": "0x40c32b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40c2f0 */\n#include <stdint.h>\n \nuint64_t fcn_0040c2f0 (int64_t arg2) {\n    int64_t var_8h;\n    rsi = arg2;\n    rbx = rsi;\n    eax = fcn_0040c070 (rdi, rsi, rsp + 8);\n    if (eax != 0xffffffff) {\n        if (eax == 0) {\n            rbx = *((rsp + 8));\n        }\n        rax = rbx;\n        return rax;\n    }\n    ebx = 0;\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040c330",
            "funcStartAddr": "0x40c330",
            "funcEndAddr": "0x40c507",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40c330 */\n#include <stdint.h>\n \nuint64_t fcn_0040c330 (int64_t arg1) {\n    int64_t var_8h;\n    rdi = arg1;\n    rbx = rdi;\n    rax = fcn_0040b3b0 (rdi, rsi, rsp + 8, 1);\n    if (rax == 0) {\n        goto label_0;\n    }\n    rax = *((rsp + 8));\n    *((rbx + 0x20))--;\n    while (rax <= 0) {\nlabel_0:\n        rax = rbp;\n        return rax;\n        rax = *((rbx + 0x18));\n        rax--;\n        *((rbx + 0x18)) = rax;\n        if (rax < 0) {\n            goto label_6;\n        }\n        xmm0 = 0;\n        rdx = *((rbx + 0x28));\n        __asm (\"cvtsi2ss xmm0, rax\");\n        rax = *((rbx + 0x10));\n        if (rax < 0) {\n            goto label_7;\n        }\nlabel_1:\n        xmm1 = 0;\n        __asm (\"cvtsi2ss xmm1, rax\");\nlabel_2:\n        __asm (\"mulss xmm1, dword [rdx]\");\n        __asm (\"comiss xmm1, xmm0\");\n    }\n    fcn_0040b4d0 (rbx + 0x28);\n    rax = *((rbx + 0x10));\n    rdx = *((rbx + 0x28));\n    if (rax < 0) {\n        goto label_8;\n    }\n    xmm0 = 0;\n    __asm (\"cvtsi2ss xmm0, rax\");\nlabel_4:\n    rax = *((rbx + 0x18));\n    if (rax < 0) {\n        goto label_9;\n    }\n    xmm1 = 0;\n    __asm (\"cvtsi2ss xmm1, rax\");\nlabel_3:\n    xmm2 = *(rdx);\n    __asm (\"mulss xmm2, xmm0\");\n    __asm (\"comiss xmm2, xmm1\");\n    if (rax <= 0) {\n        goto label_0;\n    }\n    __asm (\"mulss xmm0, dword [rdx + 4]\");\n    if (*((rdx + 0x10)) == 0) {\n        __asm (\"mulss xmm0, dword [rdx + 8]\");\n    }\n    __asm (\"comiss xmm0, dword [0x00419150]\");\n    if (*((rdx + 0x10)) >= 0) {\n        goto label_10;\n    }\n    __asm (\"cvttss2si rsi, xmm0\");\nlabel_5:\n    al = fcn_0040be70 (rbx, rsi);\n    if (al != 0) {\n        goto label_0;\n    }\n    rdi = *((rbx + 0x48));\n    if (rdi == 0) {\n        goto label_11;\n    }\n    do {\n        r12 = *((rdi + 8));\n        rax = free (rdi);\n        rdi = r12;\n    } while (r12 != 0);\nlabel_11:\n    *((rbx + 0x48)) = 0;\n    goto label_0;\nlabel_6:\n    rdx = rax;\n    eax &= 1;\n    xmm0 = 0;\n    rdx >>= 1;\n    rdx |= rax;\n    rax = *((rbx + 0x10));\n    __asm (\"cvtsi2ss xmm0, rdx\");\n    rdx = *((rbx + 0x28));\n    __asm (\"addss xmm0, xmm0\");\n    if (rax >= 0) {\n        goto label_1;\n    }\nlabel_7:\n    rcx = rax;\n    eax &= 1;\n    xmm1 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm1, rcx\");\n    __asm (\"addss xmm1, xmm1\");\n    goto label_2;\nlabel_9:\n    rcx = rax;\n    eax &= 1;\n    xmm1 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm1, rcx\");\n    __asm (\"addss xmm1, xmm1\");\n    goto label_3;\nlabel_8:\n    rcx = rax;\n    eax &= 1;\n    xmm0 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm0, rcx\");\n    __asm (\"addss xmm0, xmm0\");\n    goto label_4;\nlabel_10:\n    __asm (\"subss xmm0, dword [0x00419150]\");\n    __asm (\"cvttss2si rsi, xmm0\");\n    __asm (\"btc rsi, 0x3f\");\n    goto label_5;\n}\n"
        },
        {
            "funcName": "fcn_0040c5e0",
            "funcStartAddr": "0x40c5e0",
            "funcEndAddr": "0x40c768",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40c5e0 */\n#include <stdint.h>\n \nuint64_t fcn_0040c5e0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_14h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r14 = rdx;\n    r13 = rdi;\n    r12 = rdi;\n    ebp = 0;\n    rbx = rdi;\n    *((rsp + 8)) = rsi;\n    *((rsp + 0x18)) = rcx;\n    *((rsp + 0x14)) = 0;\n    do {\nlabel_0:\n        r12++;\n        edx = *((r12 - 1));\n        if (dl == 0) {\n            goto label_6;\n        }\nlabel_1:\n        eax = *(r12);\n        if (al == 0x2f) {\n            goto label_7;\n        }\n        al = (al != 0) ? 1 : 0;\n        r15b = (dl == 0x2f) ? 1 : 0;\n        r15b &= al;\n    } while (r15b == 0);\n    if (rbp == 0) {\n        goto label_0;\n    }\n    rax = rbp;\n    rax -= r13;\n    if (rax == 1) {\n        goto label_8;\n    }\n    *(rbp) = 0;\n    if (rax == 2) {\n        goto label_9;\n    }\nlabel_2:\n    rdx = *((rsp + 0x18));\n    rsi = r13;\n    rdi = rbx;\n    eax = void (*r14)() ();\n    if (eax < 0) {\n        goto label_10;\n    }\n    *((rsp + 0x14)) = r15b;\n    r15d = 0;\nlabel_3:\n    eax = fcn_0040f520 (*((rsp + 8)), r13, 1, 0);\n    r13d = eax;\n    if (eax == 0xffffffff) {\n        goto label_11;\n    }\n    *(rbp) = 0x2f;\n    if (eax != 0) {\n        goto label_11;\n    }\nlabel_4:\n    r13 = r12;\n    r12++;\n    edx = *((r12 - 1));\n    if (dl != 0) {\n        goto label_1;\n    }\nlabel_6:\n    rax = r13;\n    rax -= rbx;\nlabel_5:\n    return rax;\nlabel_7:\n    if (dl != 0x2f) {\n    }\n    goto label_0;\nlabel_9:\n    if (*(r13) != 0x2e) {\n        goto label_2;\n    }\n    if (*((r13 + 1)) != 0x2e) {\n        goto label_2;\n    }\n    r15d = 0;\n    *((rsp + 0x14)) = 0;\n    edx = 0;\n    goto label_3;\nlabel_10:\n    rax = errno_location ();\n    edx = *((rsp + 0x14));\n    r15d = *(rax);\n    edx &= 1;\n    goto label_3;\nlabel_8:\n    if (*(r13) == 0x2e) {\n        goto label_4;\n    }\n    *(rbp) = 0;\n    goto label_2;\nlabel_11:\n    if (r15d != 0) {\n        rax = errno_location ();\n        if (*(rax) != 2) {\n            goto label_12;\n        }\n        *(rax) = r15d;\n    }\nlabel_12:\n    rax = (int64_t) r13d;\n    goto label_5;\n}\n"
        },
        {
            "funcName": "fcn_0040c770",
            "funcStartAddr": "0x40c770",
            "funcEndAddr": "0x40ca78",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40c770 */\n#include <stdint.h>\n \nuint64_t fcn_0040c770 (int64_t arg_f0h, int64_t arg_f8h, int64_t arg_100h, int64_t arg_108h, uint32_t arg1, uint32_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_ch;\n    int64_t var_10h;\n    uint32_t var_18h;\n    uint32_t var_1ch;\n    int64_t var_20h;\n    int64_t var_38h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r14 = rsi;\n    r13 = rdx;\n    r12d = r8d;\n    rbx = rdi;\n    eax = *((rsp + 0x108));\n    *(rsp) = rcx;\n    *((rsp + 0x10)) = r9;\n    *((rsp + 0x18)) = eax;\n    if (*(rdi) != 0x2f) {\n        if (*(rsi) == 4) {\n            goto label_8;\n        }\n    }\n    if (r13 == 0) {\n        goto label_2;\n    }\nlabel_1:\n    rax = fcn_0040c5e0 (rbx, r14, r13, *(rsp));\n    if (rax < 0) {\n        goto label_9;\n    }\n    rbp += rbx;\n    do {\n        eax = *((rsp + 0xf0));\n        edx = r12d;\n        ecx = *((rsp + 0xf8));\n        edx &= 0x200;\n        ecx &= *((rsp + 0x100));\n        eax &= 0xc00;\n        *((rsp + 0x1c)) = ecx;\n        eax |= edx;\n        if (ecx == 0xffffffff) {\n            goto label_10;\n        }\n        eax = r12d;\n        eax &= 0xffffffc0;\n        *((rsp + 0xc)) = eax;\nlabel_5:\n        esi = *((rsp + 0xc));\n        rdi = rbp;\n        eax = mkdir ();\n        r15d = eax;\n        if (eax == 0) {\n            goto label_11;\n        }\nlabel_3:\n        rax = errno_location ();\n        r15d = *(rax);\n        if (*((rsp + 0x18)) == 0) {\n            goto label_12;\n        }\n        if (r15d == 0) {\n            goto label_6;\n        }\n        if (r15d != 2) {\n            if (r13 == 0) {\n                goto label_0;\n            }\n            rdx = rsp + 0x20;\n            rsi = rbp;\n            edi = 1;\n            eax = xstat ();\n            if (eax == 0) {\n                goto label_13;\n            }\n        }\nlabel_0:\n        rax = fcn_0040ec50 (rbx);\n        edx = 5;\n        rbx = rax;\n        rax = dcgettext (0, \"cannot create directory %s\");\n        rcx = rbx;\n        eax = 0;\n        eax = error (0, r15d, rax);\n        eax = 0;\nlabel_4:\n        return rax;\nlabel_2:\n    } while (1);\nlabel_8:\n    r15d = *((rsi + 4));\n    if (r15d != 0) {\n        goto label_0;\n    }\n    if (r13 != 0) {\n        goto label_1;\n    }\n    goto label_2;\nlabel_10:\n    if (eax != 0) {\n        goto label_14;\n    }\n    esi = r12d;\n    rdi = rbp;\n    eax = mkdir ();\n    r15d = eax;\n    if (eax != 0) {\n        goto label_3;\n    }\n    rax = *((rsp + 0x10));\n    rsi = *(rsp);\n    rdi = rbx;\n    void (*rax)() ();\n    eax = *((rsp + 0xf0));\n    eax &= r12d;\n    if ((eax & 0x1ff) != 0) {\n        goto label_15;\n    }\nlabel_6:\n    eax = 1;\n    goto label_4;\nlabel_14:\n    eax = r12d;\n    eax &= 0xffffffed;\n    *((rsp + 0xc)) = eax;\n    goto label_5;\nlabel_9:\n    eax = 1;\n    if (rbp != -1) {\n        goto label_4;\n    }\n    rax = errno_location ();\n    r15d = *(rax);\n    goto label_0;\nlabel_12:\n    *((rsp + 0xc)) = 0xffffffff;\nlabel_7:\n    eax = fcn_0040f520 (r14, rbp, 2, rsp + 0x20);\n    if (eax < 0xffffffff) {\n        goto label_6;\n    }\n    eax = 0x418d7b;\n    r9d = r12d;\n    if (eax == 0) {\n    }\n    eax = *((rsp + 0xf8));\n    eax = fcn_004135d0 (*((rsp + 0x30)), rbp, *((rsp + 0x1c)), *((rsp + 0x108)), *((rsp + 0x110)), r9);\n    if (eax == 0) {\n        goto label_6;\n    }\n    if (r15d == 0) {\n        goto label_16;\n    }\n    if (r15d == 2) {\n        goto label_0;\n    }\n    if (r13 == 0) {\n        goto label_0;\n    }\n    rax = errno_location ();\n    if (*(rax) == 0x14) {\n        goto label_0;\n    }\nlabel_16:\n    rax = errno_location ();\n    rax = fcn_0040ec50 (rbx);\n    esi = \"cannot change permissions of %s\";\n    edx = 5;\n    rbx = rax;\n    eax = 0x419160;\n    if (*((rsp + 0x1c)) != 0xffffffff) {\n        rsi = rax;\n    }\n    rax = dcgettext (0, rsi);\n    rcx = rbx;\n    eax = 0;\n    eax = error (0, *(rbp), rax);\n    eax = 0;\n    goto label_4;\nlabel_11:\n    rsi = *(rsp);\n    rdi = rbx;\n    rax = *((rsp + 0x10));\n    void (*rax)() ();\n    edx = 3;\n    goto label_7;\nlabel_13:\n    eax = *((rsp + 0x38));\n    eax &= 0xf000;\n    if (eax != 0x4000) {\n        goto label_0;\n    }\n    goto label_6;\nlabel_15:\n    *((rsp + 0xc)) = r12d;\n    edx = 3;\n    goto label_7;\n}\n"
        },
        {
            "funcName": "fcn_0040ca80",
            "funcStartAddr": "0x40ca80",
            "funcEndAddr": "0x40cde1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40ca80 */\n#include <stdint.h>\n \nuint64_t fcn_0040ca80 (int64_t arg1) {\n    int64_t var_18h;\n    rdi = arg1;\n    rcx = rdi;\n    rbx = rdi;\n    edx = *(rdi);\n    eax = rdx - 0x30;\n    if (al <= 7) {\n        goto label_11;\n    }\n    edi = 1;\n    if (dl == 0) {\n        goto label_12;\n    }\n    do {\n        eax = edx;\n        eax &= 0xffffffef;\n        al = (al == 0x2d) ? 1 : 0;\n        dl = (dl == 0x2b) ? 1 : 0;\n        rcx++;\n        eax |= edx;\n        edx = *(rcx);\n        eax = (int32_t) al;\n        rdi += rax;\n    } while (dl != 0);\n    rax = rdi;\n    rax >>= 0x3c;\n    al = (rax != 0) ? 1 : 0;\n    rdi <<= 4;\n    eax = (int32_t) al;\n    if (rdi < 0) {\n        goto label_13;\n    }\n    if (rax != 0) {\n        goto label_13;\n    }\nlabel_9:\n    rax = fcn_004112e0 (rdi);\n    r10d = 0;\nlabel_10:\n    edi = 0;\nlabel_6:\n    r9d = *(rbx);\n    if (r9b == 0x61) {\n        goto label_14;\n    }\n    if (r9b <= 0x61) {\n        goto label_15;\n    }\n    if (r9b == 0x6f) {\n        goto label_16;\n    }\n    if (r9b == 0x75) {\n        goto label_17;\n    }\n    if (r9b == 0x67) {\n        goto label_18;\n    }\nlabel_0:\n    eax = free (rax);\n    eax = 0;\nlabel_8:\n    return rax;\nlabel_11:\n    ebp = 0;\n    while (ebp <= 0xfff) {\n        edx = *(rcx);\n        eax = rdx - 0x30;\n        if (al > 7) {\n            goto label_19;\n        }\n        ebp = rdx + rbp*8 - 0x30;\n        rcx++;\n    }\n    eax = 0;\n    return rax;\nlabel_15:\n    if (r9b == 0x2d) {\n        goto label_20;\n    }\n    if (r9b == 0x3d) {\n        goto label_20;\n    }\n    if (r9b != 0x2b) {\n        goto label_0;\n    }\nlabel_20:\n    r11 = r10 + 1;\n    r10 <<= 4;\n    r10 += rax;\n    while (dl != 0x6f) {\n        ecx = 0x1c0;\n        if (dl != 0x75) {\n            goto label_21;\n        }\nlabel_1:\n        *((r10 + 1)) = 3;\n        *((r10 + 4)) = edi;\n        *((r10 + 8)) = ecx;\n        *(r10) = r9b;\n        r9d = *((rbx + 2));\n        rbx = rsi;\nlabel_4:\n        edx = ecx;\n        edx &= edi;\n        if (edi != 0) {\n            ecx = edx;\n        }\nlabel_3:\n        edx = r9d;\n        *((r10 + 0xc)) = ecx;\n        rcx = r11 + 1;\n        r10 += 0x10;\n        edx &= 0xffffffef;\n        if (dl != 0x2d) {\n            if (r9b != 0x2b) {\n                goto label_22;\n            }\n        }\n        r11 = rcx;\n        edx = *((rbx + 1));\n        r8 = rbx + 1;\n        if (dl == 0x67) {\n            goto label_23;\n        }\n        if (dl <= 0x67) {\n            goto label_24;\n        }\n        rsi = rbx + 2;\n    }\n    ecx = 7;\n    goto label_1;\nlabel_24:\n    ecx = rdx - 0x30;\n    if (cl > 7) {\n        goto label_21;\n    }\n    ecx = 0;\nlabel_2:\n    ecx = rdx + rcx*8 - 0x30;\n    r8++;\n    if (ecx > 0xfff) {\n        goto label_0;\n    }\n    edx = *(r8);\n    esi = rdx - 0x30;\n    if (sil <= 7) {\n        goto label_2;\n    }\n    if (edi != 0) {\n        goto label_0;\n    }\n    if (dl == 0) {\n        goto label_25;\n    }\n    if (dl != 0x2c) {\n        goto label_0;\n    }\nlabel_25:\n    *(r10) = r9b;\n    rbx = r8;\n    r9d = edx;\n    edi = 0xfff;\n    *((r10 + 8)) = ecx;\n    ecx = 0xfff;\n    *((r10 + 1)) = 1;\n    *((r10 + 4)) = 0xfff;\n    goto label_3;\nlabel_21:\n    esi = rdx - 0x58;\n    ebx = 1;\n    ecx = 0;\n    if (sil > 0x20) {\n        goto label_26;\n    }\n    do {\n        esi = (int32_t) sil;\n        /* switch table (33 cases) at 0x419190 */\n        ebx = 2;\nlabel_5:\n        r8++;\n        edx = *(r8);\n        esi = rdx - 0x58;\n    } while (sil <= 0x20);\nlabel_26:\n    *(r10) = r9b;\n    r9d = edx;\n    *((r10 + 1)) = bl;\n    rbx = r8;\n    *((r10 + 4)) = edi;\n    *((r10 + 8)) = ecx;\n    goto label_4;\n    ecx |= 0x49;\n    goto label_5;\n    cl |= 0x92;\n    goto label_5;\n    ch |= 2;\n    goto label_5;\n    ch |= 0xc;\n    goto label_5;\n    ecx |= 0x124;\n    goto label_5;\nlabel_23:\n    rsi = rbx + 2;\n    ecx = 0x38;\n    goto label_1;\nlabel_14:\n    edi = 0xfff;\n    do {\nlabel_7:\n        rbx++;\n        goto label_6;\nlabel_18:\n        edi |= 0x438;\n    } while (1);\nlabel_17:\n    edi |= 0x9c0;\n    goto label_7;\nlabel_16:\n    edi |= 0x207;\n    goto label_7;\nlabel_19:\n    eax = 0;\n    if (dl != 0) {\n        goto label_8;\n    }\n    rcx -= rbx;\n    ebx = ebp;\n    eax = 0xfff;\n    edi = 0x20;\n    ebx &= 0xc00;\n    ebx |= 0x3ff;\n    if (rcx >= 5) {\n        ebx = eax;\n    }\n    fcn_004112e0 (rdi);\n    edx = 0x13d;\n    *(rax) = dx;\n    *((rax + 4)) = 0xfff;\n    *((rax + 8)) = ebp;\n    *((rax + 0xc)) = ebx;\n    *((rax + 0x11)) = 0;\n    return rax;\nlabel_12:\n    edi = 0x10;\n    goto label_9;\nlabel_22:\n    if (r9b == 0x2c) {\n        rbx++;\n        r10 = r11;\n        goto label_10;\n    }\n    if (r9b != 0) {\n        goto label_0;\n    }\n    r11 <<= 4;\n    *((rax + r11 + 1)) = 0;\n    goto label_8;\nlabel_13:\n    return fcn_00411530 ();\n}\n"
        },
        {
            "funcName": "fcn_0040ce50",
            "funcStartAddr": "0x40ce50",
            "funcEndAddr": "0x40cfcd",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40ce50 */\n#include <stdint.h>\n \nint32_t fcn_0040ce50 (int64_t arg1, int64_t arg3, int64_t arg4, int64_t arg5) {\n    rdi = arg1;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r11d = *((rcx + 1));\n    eax = edi;\n    eax &= 0xfff;\n    ebx = 0;\n    if (r11b == 0) {\n        goto label_7;\n    }\n    edx = ~edx;\n    while (sil == 0) {\n        r10d = ebp;\n        edi = 0;\n        if (r11b == 2) {\n            goto label_8;\n        }\nlabel_0:\n        if (r11b == 3) {\n            r9d &= eax;\n            r11d = r9d;\n            r11d &= 0x124;\n            r11d -= r11d;\n            r11d = ~r11d;\n            r11d &= 0x124;\n            r13d = r11d;\n            r13b |= 0x92;\n            if ((r9b & 0x92) != 0) {\n                r11d = r13d;\n            }\n            r13d = r11d;\n            r13d |= 0x49;\n            if ((r9b & 0x49) != 0) {\n                r11d = r13d;\n            }\n            r9d |= r11d;\n        }\nlabel_5:\n        r11d = *(rcx);\n        r9d &= r10d;\n        if (r12d != 0) {\n            goto label_9;\n        }\nlabel_1:\n        r9d &= edx;\n        if (r11b == 0x2d) {\n            goto label_10;\n        }\n        if (r11b == 0x3d) {\n            goto label_11;\n        }\nlabel_2:\n        if (r11b == 0x2b) {\n            goto label_12;\n        }\nlabel_4:\n        rcx += 0x10;\n        r11d = *((rcx + 1));\n        if (r11b == 0) {\n            goto label_7;\n        }\nlabel_3:\n        r12d = *((rcx + 4));\n        r9d = *((rcx + 8));\n    }\n    r10d = *((rcx + 0xc));\n    edi = *((rcx + 0xc));\n    r10d |= 0xfffff3ff;\n    edi = ~edi;\n    edi &= 0xc00;\n    if (r11b != 2) {\n        goto label_0;\n    }\nlabel_6:\n    r9d |= 0x49;\n    r11d = *(rcx);\n    r9d &= r10d;\n    if (r12d == 0) {\n        goto label_1;\n    }\nlabel_9:\n    r9d &= r12d;\n    if (r11b == 0x2d) {\n        goto label_10;\n    }\n    if (r11b != 0x3d) {\n        goto label_2;\n    }\n    r12d = ~r12d;\n    edi |= r12d;\n    r10d = edi;\n    r10d = ~r10d;\nlabel_11:\n    rcx += 0x10;\n    r11d = *((rcx + 1));\n    r10d &= 0xfff;\n    eax &= edi;\n    ebx |= r10d;\n    eax |= r9d;\n    if (r11b != 0) {\n        goto label_3;\n    }\nlabel_7:\n    if (r8 != 0) {\n        *(r8) = ebx;\n    }\n    r12 = rbx;\n    r13 = rbx;\n    return eax;\nlabel_10:\n    ebx |= r9d;\n    r9d = ~r9d;\n    eax &= r9d;\n    goto label_4;\nlabel_12:\n    ebx |= r9d;\n    eax |= r9d;\n    goto label_4;\nlabel_8:\n    if ((al & 0x49) == 0) {\n        goto label_5;\n    }\n    goto label_6;\n}\n"
        },
        {
            "funcName": "fcn_0040cfd0",
            "funcStartAddr": "0x40cfd0",
            "funcEndAddr": "0x40d069",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40cfd0 */\n#include <stdint.h>\n \nuint64_t fcn_0040cfd0 (char ** arg1) {\n    rdi = arg1;\n    if (rdi != 0) {\n        rbx = rdi;\n        rax = strrchr (rdi, 0x2f);\n        if (rax != 0) {\n            r8 = rax + 1;\n            rdx = r8;\n            rdx -= rbx;\n            if (rdx <= 6) {\n                goto label_0;\n            }\n            rsi = rax - 6;\n            edi = \"/.libs/\";\n            ecx = 7;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (rdx > 6) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            edi = 0x4192d8;\n            ecx = 3;\n            rsi = r8;\n            rbx = r8;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (dl > 0) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            rbx = rax + 4;\n            *(obj.__progname) = rbx;\n        }\nlabel_0:\n        *(0x006219c0) = rbx;\n        *(obj.program_invocation_name) = rbx;\n        return rax;\n    }\n    fwrite (\"A NULL argv[0] was passed through an exec system call.\\n\", 1, 0x37, *(obj.stderr));\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_0040d070",
            "funcStartAddr": "0x40d070",
            "funcEndAddr": "0x40d0af",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40d070 */\n#include <stdint.h>\n \nuint32_t fcn_0040d070 (int64_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_ch;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    rbx = rdx;\n    edx = r8d;\n    rcx = rsp + 0xc;\n    eax = fcn_00412b30 (rdi, rsi);\n    if (eax != 0) {\n        goto label_0;\n    }\n    fcn_00412b60 (rsp + 0xc, rbx, ebp);\n    do {\n        return eax;\nlabel_0:\n        eax = 0xfffffffe;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040d0b0",
            "funcStartAddr": "0x40d0b0",
            "funcEndAddr": "0x40d0cc",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40d0b0 */\n#include <stdint.h>\n \nvoid fcn_0040d0b0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    *((rsp + 0xc)) = edx;\n    fcn_00412b60 (rsp + 0xc, rdi, esi);\n}\n"
        },
        {
            "funcName": "fcn_0040d0d0",
            "funcStartAddr": "0x40d0d0",
            "funcEndAddr": "0x40d1c2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40d0d0 */\n#include <stdint.h>\n \nuint64_t fcn_0040d0d0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edx = 5;\n    r12d = esi;\n    rsi = rdi;\n    rax = dcgettext (0, rsi);\n    rbx = rax;\n    while (1) {\nlabel_0:\n        rax = rbx;\n        return rax;\n        rax = fcn_00413060 ();\n        edx = *(rax);\n        edx &= 0xffffffdf;\n        if (dl != 0x55) {\n            goto label_1;\n        }\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x54) {\n            goto label_2;\n        }\n        edx = *((rax + 2));\n        edx &= 0xffffffdf;\n        if (dl != 0x46) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x2d) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0) {\n            goto label_2;\n        }\n        eax = 0x4192de;\n        ebx = 0x4192e9;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n    }\nlabel_1:\n    if (dl == 0x47) {\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x42) {\n            goto label_2;\n        }\n        if (*((rax + 2)) != 0x31) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0x33) {\n            goto label_2;\n        }\n        if (*((rax + 6)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 7)) != 0) {\n            goto label_2;\n        }\n        eax = 0x4192e2;\n        ebx = 0x4192e5;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n        goto label_0;\n    }\nlabel_2:\n    eax = 0x41aa0f;\n    ebx = 0x4192dc;\n    if (r12d != 9) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040d1d0",
            "funcStartAddr": "0x40d1d0",
            "funcEndAddr": "0x41859d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40d1d0 */\n#include <stdint.h>\n \nuint64_t fcn_0040d1d0 (int64_t arg_e8h_3, uint32_t arg_e8h_2, int64_t arg_e8h, char * arg_e0h, int64_t arg1, char * arg2, char * arg3, size_t * arg4, int64_t arg5, int64_t arg6) {\n    size_t * var_8h;\n    size_t * var_10h;\n    uint32_t var_1fh;\n    char * s;\n    size_t n;\n    size_t * var_30h;\n    size_t * var_38h;\n    size_t var_40h;\n    size_t var_48h;\n    void * s2;\n    char * var_58h;\n    uint32_t var_60h;\n    int64_t var_68h;\n    uint32_t var_6ch;\n    char * var_6dh;\n    int64_t var_6eh;\n    int64_t var_6fh;\n    int64_t var_70h;\n    int64_t var_78h;\n    wint_t wc;\n    mbstate_t * ps;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    do {\n        abort ();\nlabel_5:\n        r15 = rdi;\n        r14 = rsi;\n        r13d = r8d;\n        *((rsp + 0x20)) = rdx;\n        *((rsp + 8)) = rcx;\n        *((rsp + 0x68)) = r9d;\n        rax = ctype_get_mb_cur_max ();\n        ebp &= 2;\n        *((rsp + 0x60)) = rax;\n        rsp + 0x6c = (ebp != 0) ? 1 : 0;\n    } while (r13d > 0xa);\n    eax = r13d;\n    r11 = *((rsp + 8));\n    /* switch table (11 cases) at 0x419340 */\nlabel_30:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    r13d = 2;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x41aa0f;\nlabel_21:\n    r9 = r11;\n    r12d = 0;\n    r11d = r13d;\n    do {\nlabel_28:\n        r13b = (r9 != r12) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            r13b = (*((rax + r12)) != 0) ? 1 : 0;\n        }\n        if (r13b == 0) {\n            goto label_47;\n        }\n        rdi = *((rsp + 0x20));\n        al = (r11d != 2) ? 1 : 0;\n        al &= *((rsp + 8));\n        r8 = rdi + r12;\n        *((rsp + 0x10)) = al;\n        if (al == 0) {\n            goto label_48;\n        }\n        rax = *((rsp + 0x28));\n        if (rax == 0) {\n            goto label_49;\n        }\n        rbp = r12 + rax;\n        if (r9 == -1) {\n            if (rax <= 1) {\n                goto label_50;\n            }\n            *((rsp + 0x40)) = r11d;\n            *((rsp + 0x38)) = r10b;\n            *((rsp + 0x30)) = r8;\n            rax = strlen (rdi);\n            r11d = *((rsp + 0x40));\n            r10d = *((rsp + 0x38));\n            r8 = *((rsp + 0x30));\n            r9 = rax;\n        }\nlabel_50:\n        if (rbp > r9) {\n            goto label_49;\n        }\n        rdi = r8;\n        *((rsp + 0x48)) = r11d;\n        *((rsp + 0x40)) = r9;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        eax = memcmp (rdi, *((rsp + 0x50)), *((rsp + 0x28)));\n        r8 = *((rsp + 0x30));\n        r10d = *((rsp + 0x38));\n        r9 = *((rsp + 0x40));\n        r11d = *((rsp + 0x48));\n        if (eax != 0) {\n            goto label_49;\n        }\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_51;\n        }\n        ebp = *(r8);\n        if (bpl > 0x7e) {\n            goto label_52;\n        }\n        eax = (int32_t) bpl;\n        /* switch table (127 cases) at 0x419398 */\n        *((rsp + 0x10)) = 0;\n        al = (r9 != 1) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            al = (*((rax + 1)) != 0) ? 1 : 0;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        if (al != 0) {\n            goto label_7;\n        }\nlabel_17:\n        if (r12 != 0) {\n            goto label_7;\n        }\nlabel_18:\n        if (*((rsp + 0x6c)) != 0) {\n            if (dl != 0) {\n                goto label_53;\n            }\n        }\nlabel_2:\n        eax = *((rsp + 8));\n        eax ^= 1;\n        eax |= edx;\n        eax ^= 1;\n        al |= *((rsp + 0x6c));\n        if (al == 0) {\n            goto label_11;\n        }\nlabel_24:\n        eax = 0;\nlabel_10:\n        if (*((rsp + 0xd0)) == 0) {\n            goto label_11;\n        }\n        edx = ebp;\n        rcx = *((rsp + 0xd0));\n        dl >>= 5;\n        edx = (int32_t) dl;\n        edx = *((rcx + rdx*4));\n        ecx = ebp;\n        edx >>= cl;\n        edx &= 1;\n        if (edx == 0) {\n            goto label_11;\n        }\n        dl = (r11d == 2) ? 1 : 0;\nlabel_0:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_54;\n        }\nlabel_4:\n        eax = r10d;\n        eax ^= 1;\n        al &= dl;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rdx = rbx + 1;\n            if (rdx < r14) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rdx = rbx + 2;\n            if (rdx < r14) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\nlabel_9:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n        r12++;\nlabel_1:\n        if (rbx < r14) {\n            *((r15 + rbx)) = bpl;\n        }\n        edi = *((rsp + 0x1f));\n        rbx++;\n        eax = 0;\n        if (r13b == 0) {\n            edi = eax;\n        }\n        *((rsp + 0x1f)) = dil;\n    } while (1);\nlabel_3:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    if (r14 == 0) {\n        goto label_56;\n    }\n    edx = 0;\n    if (*((rsp + 0x58)) != 0) {\n        goto label_56;\n    }\nlabel_27:\n    *((rsp + 0x6d)) = r13b;\n    rbx += 3;\n    eax = 0;\n    r10d = 0;\n    *((rsp + 0x58)) = r14;\n    r14 = rdx;\nlabel_11:\n    dl = (r11d == 2) ? 1 : 0;\n    if (*((rsp + 0x10)) != 0) {\n        goto label_0;\n    }\n    eax ^= 1;\n    r12++;\n    eax &= r10d;\nlabel_16:\n    if (al == 0) {\n        goto label_1;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x27;\n    }\n    rbx += 2;\n    r10d = 0;\n    goto label_1;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_57;\n    }\n    if (r11d == 5) {\n        goto label_58;\n    }\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_3;\n    }\n    *((rsp + 0x6d)) = r13b;\n    edx = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\nlabel_15:\n    edx = *((rsp + 8));\n    dl &= *((rsp + 0x6c));\n    ecx = 0x5c;\n    al = (*((rsp + 0x28)) != 0) ? 1 : 0;\n    dl &= al;\n    if (dl != 0) {\n        goto label_59;\n    }\nlabel_8:\n    if (*((rsp + 8)) != 0) {\n        goto label_60;\n    }\nlabel_7:\n    r13d = 0;\n    goto label_2;\nlabel_6:\n    edx = 0;\n    r13d = 0;\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_4;\n    }\nlabel_54:\n    r13d = r11d;\n    eax = edx;\n    r11 = r9;\nlabel_42:\nlabel_12:\n    eax = 4;\n    if (*((rsp + 8)) != 0) {\n        r13d = eax;\n    }\nlabel_43:\n    r9d &= 0xfffffffd;\n    rax = fcn_0040d1d0 (r15, r14, *((rsp + 0x40)), r11, r13d, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\nlabel_44:\n    rax = rbx;\n    return rax;\n    goto label_6;\n    *((rsp + 0x10)) = 0;\n    edx = 0;\n    goto label_7;\n    *((rsp + 0x10)) = 0;\n    ecx = 0x72;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    do {\nlabel_20:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_61;\n        }\nlabel_34:\n        r13d = 0;\n        goto label_9;\n    } while (1);\nlabel_14:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_62;\n    }\n    *((rsp + 0x10)) = 0;\n    eax = r10d;\n    dl = (r11d == 2) ? 1 : 0;\n    eax ^= 1;\n    al &= dl;\n    if (al == 0) {\n        goto label_63;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rcx = rbx + 1;\n    if (r14 > rcx) {\n        *((r15 + rbx + 1)) = 0x24;\n    }\n    rcx = rbx + 2;\n    if (r14 > rcx) {\n        *((r15 + rbx + 2)) = 0x27;\n    }\n    rcx = rbx + 3;\n    if (r14 <= rcx) {\n        goto label_64;\n    }\nlabel_26:\n    *((r15 + rcx)) = 0x5c;\n    r10d = eax;\nlabel_25:\n    rbx = rcx + 1;\n    if (r11d == 2) {\n        goto label_65;\n    }\n    rax = r12 + 1;\n    if (rax < r9) {\n        rax = *((rsp + 0x20));\n        eax = *((rax + r12 + 1));\n        *((rsp + 0x30)) = al;\n        eax -= 0x30;\n        if (al <= 9) {\n            goto label_66;\n        }\n    }\nlabel_35:\n    eax = *((rsp + 8));\n    eax ^= 1;\n    al |= dl;\n    eax = r13d;\n    r13d = 0;\n    if (al == 0) {\n        goto label_10;\n    }\n    goto label_11;\nlabel_19:\n    *((rsp + 0x10)) = 0;\n    do {\nlabel_52:\n        if (*((rsp + 0x60)) != 1) {\n            goto label_67;\n        }\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r9;\n        *((rsp + 0x30)) = r10b;\n        rax = ctype_b_loc ();\n        edx = (int32_t) bpl;\n        r10d = *((rsp + 0x30));\n        r9 = *((rsp + 0x38));\n        rax = *(rax);\n        r11d = *((rsp + 0x40));\n        edi = 1;\n        eax = *((rax + rdx*2));\n        ax &= 0x4000;\n        r13b = (ax != 0) ? 1 : 0;\n        dl = (ax == 0) ? 1 : 0;\n        dl &= *((rsp + 8));\nlabel_37:\n        if (dl != 0) {\n            goto label_68;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        goto label_2;\nlabel_48:\n        ebp = *(r8);\n    } while (bpl > 0x7e);\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x419790 */\n    ecx = 0x6e;\nlabel_13:\n    eax = *((rsp + 0x6c));\n    dl = (r11d == 2) ? 1 : 0;\n    al &= dl;\n    *((rsp + 0x10)) = al;\n    if (al == 0) {\n        goto label_8;\n    }\nlabel_53:\n    r11 = r9;\n    r13d = 2;\n    goto label_12;\n    ecx = 0x74;\n    goto label_13;\n    ecx = 0x62;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x61;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    if (*((rsp + 8)) != 0) {\n        goto label_14;\n    }\n    if ((*((rsp + 0x68)) & 1) != 0) {\n        goto label_69;\n    }\n    *((rsp + 0x10)) = 0;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    ebp = 0;\n    goto label_2;\n    if (r11d != 2) {\n        goto label_15;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_17;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_18;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_18;\n    ecx = 0x72;\n    goto label_13;\n    ecx = 0x66;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x76;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\nlabel_49:\n    ebp = *(r8);\n    if (bpl > 0x7e) {\n        goto label_19;\n    }\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x419b88 */\n    eax = 0;\n    do {\nlabel_31:\n        r13d = *((rsp + 0x10));\n        *((rsp + 0x10)) = al;\n        eax = 0;\n        goto label_10;\n        eax = 0;\nlabel_32:\n        if (r12 != 0) {\n            goto label_70;\n        }\n        r13d = *((rsp + 0x10));\n        edx = 0;\n        *((rsp + 0x10)) = al;\n        goto label_2;\n        eax = 0;\nlabel_33:\n    } while (1);\n    goto label_6;\n    goto label_20;\nlabel_47:\n    r13d = r11d;\n    r11 = r9;\n    dl = (r13d == 2) ? 1 : 0;\n    if (rbx == 0) {\n        if ((*((rsp + 0x6c)) & dl) != 0) {\n            goto label_71;\n        }\n    }\n    eax = *((rsp + 0x6c));\n    eax ^= 1;\n    dl &= al;\n    if (dl == 0) {\n        goto label_72;\n    }\n    if (*((rsp + 0x6d)) == 0) {\n        goto label_45;\n    }\n    if (*((rsp + 0x1f)) != 0) {\n        goto label_73;\n    }\n    al = (r14 == 0) ? 1 : 0;\n    dl = (*((rsp + 0x58)) != 0) ? 1 : 0;\n    al &= dl;\n    if (al == 0) {\n        goto label_74;\n    }\n    r14 = *((rsp + 0x58));\nlabel_46:\n    *(r15) = 0x27;\n    r13d = 2;\n    ebx = 1;\n    *((rsp + 0x50)) = 0x41aa0f;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x6c)) = 0;\n    *((rsp + 0x6d)) = al;\n    goto label_21;\nlabel_58:\n    if ((*((rsp + 0x68)) & 4) != 0) {\n        rax = r12 + 2;\n        if (rax >= r9) {\n            goto label_39;\n        }\n        rsi = *((rsp + 0x20));\n        if (*((rsi + r12 + 1)) == 0x3f) {\n            goto label_75;\n        }\n    }\nlabel_39:\n    edx = 0;\n    r13d = 0;\n    goto label_2;\nlabel_57:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r13d = 0;\n    eax = 0;\n    goto label_11;\nlabel_67:\n    *((rsp + 0x88)) = 0;\n    if (r9 == -1) {\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        rax = strlen (*((rsp + 0x20)));\n        r11d = *((rsp + 0x40));\n        r10d = *((rsp + 0x38));\n        r8 = *((rsp + 0x30));\n        r9 = rax;\n    }\n    eax = 0;\n    *((rsp + 0x70)) = rbx;\n    *((rsp + 0x78)) = r8;\n    rbx = rax;\n    *((rsp + 0x6e)) = r10b;\n    *((rsp + 0x6f)) = bpl;\n    *((rsp + 0x40)) = r15;\n    *((rsp + 0x48)) = r14;\n    *((rsp + 0x30)) = r9;\n    *((rsp + 0x38)) = r11d;\n    while (*((rsp + 0x38)) != 2) {\nlabel_22:\n        eax = iswprint (*((rsp + 0x84)));\n        rdi = rsp + 0x88;\n        eax = 0;\n        if (eax == 0) {\n            r13d = eax;\n        }\n        rbx += r14;\n        eax = mbsinit (rdi);\n        if (eax != 0) {\n            goto label_76;\n        }\n        rax = *((rsp + 0x20));\n        r15 = r12 + rbx;\n        rbp = rax + r15;\n        rdx -= r15;\n        rax = fcn_004129f0 (rsp + 0x84, rbp, *((rsp + 0x30)), rsp + 0x88);\n        r14 = rax;\n        if (rax == 0) {\n            goto label_76;\n        }\n        if (rax == -1) {\n            goto label_77;\n        }\n        if (rax == 0xfffffffffffffffe) {\n            goto label_78;\n        }\n    }\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_22;\n    }\n    if (rax == 1) {\n        goto label_22;\n    }\n    rsi = *((rsp + 0x20));\n    rax = rsi + r15 + 1;\n    rsi += r14;\n    rsi += r15;\n    goto label_79;\nlabel_23:\n    rax++;\n    if (rsi == rax) {\n        goto label_22;\n    }\nlabel_79:\n    ecx = *(rax);\n    ecx -= 0x5b;\n    if (cl > 0x21) {\n        goto label_23;\n    }\n    edx = 1;\n    rdx <<= cl;\n    rcx = 0x20000002b;\n    if ((rdx & rcx) == 0) {\n        goto label_23;\n    }\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r13d = 2;\n    r11 = *((rsp + 0x30));\n    goto label_12;\nlabel_70:\n    *((rsp + 0x10)) = al;\n    r13d = 0;\n    goto label_24;\nlabel_63:\n    rcx = rbx;\n    if (r14 <= rbx) {\n        goto label_25;\n    }\n    eax = r10d;\n    goto label_26;\nlabel_56:\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x5c;\n    }\n    rax = rbx + 2;\n    if (r14 <= rax) {\n        goto label_80;\n    }\n    rdx = r14;\n    *((r15 + rbx + 2)) = 0x27;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_69:\n    r12++;\n    goto label_28;\nlabel_68:\n    edx = *((rsp + 8));\n    r13d = 0;\nlabel_36:\n    rcx = rdi;\n    *((rsp + 0x30)) = r13b;\n    esi = 0;\n    r13d = *((rsp + 0x6c));\n    rcx += r12;\n    edi = *((rsp + 0x10));\n    r8 = *((rsp + 0x20));\n    while (dl != 0) {\n        al = (r11d == 2) ? 1 : 0;\n        if (r13b != 0) {\n            goto label_81;\n        }\n        esi = r10d;\n        esi ^= 1;\n        al &= sil;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rsi = rbx + 1;\n            if (r14 > rsi) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rsi = rbx + 2;\n            if (r14 > rsi) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 6;\n            eax += 0x30;\n            *((r15 + rbx + 1)) = al;\n        }\n        rax = rbx + 2;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 3;\n            eax &= 7;\n            eax += 0x30;\n            *((r15 + rbx + 2)) = al;\n        }\n        ebp &= 7;\n        r12++;\n        rbx += 3;\n        ebp += 0x30;\n        if (r12 >= rcx) {\n            goto label_82;\n        }\n        esi = edx;\nlabel_29:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = bpl;\n        }\n        ebp = *((r8 + r12));\n        rbx++;\n    }\n    eax = esi;\n    eax ^= 1;\n    eax &= r10d;\n    if (dil != 0) {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n    }\n    r12++;\n    if (r12 < rcx) {\n        if (al == 0) {\n            goto label_83;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x27;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            *((r15 + rbx + 1)) = 0x27;\n        }\n        rbx += 2;\n        edi = 0;\n        r10d = 0;\n        goto label_29;\n    }\n    r13d = *((rsp + 0x30));\n    goto label_16;\nlabel_81:\n    r13d = r11d;\n    *((rsp + 8)) = al;\n    r11 = r9;\n    goto label_12;\nlabel_64:\n    rbx += 4;\n    r10d = eax;\n    r13d = 0;\n    goto label_11;\n    if (ebp != 0) {\n        goto label_30;\n    }\n    *((rsp + 8)) = 1;\n    do {\n        if (r14 != 0) {\n            goto label_84;\n        }\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 1;\n        r13d = 2;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x41aa0f;\n        goto label_21;\n        if (ebp != 0) {\n            goto label_85;\n        }\n        if (r14 == 0) {\n            goto label_86;\n        }\n        *(r15) = 0x22;\n        r10d = 0;\n        *((rsp + 0x1f)) = 1;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\nlabel_38:\n        *((rsp + 0x6c)) = 0;\n        ebx = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x4192dc;\n        goto label_21;\n        if (r14 != 0) {\n            *((rsp + 8)) = r11;\n            rax = fcn_0040d0d0 (0x4192ed, r13d);\n            *((rsp + 0xd8)) = rax;\n            rax = fcn_0040d0d0 (0x41aa0f, r13d);\n            r11 = *((rsp + 8));\n            *((rsp + 0xe0)) = rax;\n        }\n        ebx = 0;\n        if (ebp == 0) {\n            goto label_87;\n        }\nlabel_41:\n        *((rsp + 0x10)) = r11;\n        rax = strlen (*((rsp + 0xe0)));\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        r11 = *((rsp + 0x10));\n        *((rsp + 0x28)) = rax;\n        rax = *((rsp + 0xe0));\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x50)) = rax;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 8)) = 1;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 0;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 5;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x4192dc;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 2;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x41aa0f;\n        goto label_21;\n        eax = *((rsp + 0x10));\n        goto label_31;\n        eax = *((rsp + 0x10));\n        goto label_32;\n        eax = *((rsp + 0x10));\n        goto label_33;\n        edx = 0;\n        r13d = 0;\n        goto label_4;\n        goto label_34;\nlabel_66:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x30;\n        }\n        rax = rcx + 2;\n        if (r14 > rax) {\n            *((r15 + rcx + 2)) = 0x30;\n        }\n        rbx = rcx + 3;\n        goto label_35;\n        if (ebp != 0) {\n            goto label_88;\n        }\n        *((rsp + 8)) = 0;\n    } while (1);\nlabel_82:\n    r13d = *((rsp + 0x30));\n    goto label_1;\nlabel_59:\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\nlabel_83:\n    edi = 0;\n    goto label_29;\nlabel_76:\n    rdi = rbx;\n    edx = r13d;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    edx ^= 1;\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    dl &= *((rsp + 8));\nlabel_40:\n    if (rdi > 1) {\n        goto label_36;\n    }\n    goto label_37;\nlabel_86:\n    *((rsp + 0x58)) = 0;\n    r10d = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x6d)) = 0;\n    goto label_38;\nlabel_65:\n    eax = r13d;\n    r13d = 0;\n    goto label_11;\nlabel_75:\n    ebp = *((rsi + rax));\n    if (bpl > 0x3e) {\n        goto label_39;\n    }\n    rsi = 0x7000a38200000000;\n    if (((rsi >> rbp) & 1) >= 0) {\n        goto label_39;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_51;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x3f;\n    }\n    rdx = rbx + 1;\n    if (r14 > rdx) {\n        *((r15 + rbx + 1)) = 0x22;\n    }\n    rdx = rbx + 2;\n    if (r14 > rdx) {\n        *((r15 + rbx + 2)) = 0x22;\n    }\n    rdx = rbx + 3;\n    if (r14 > rdx) {\n        *((r15 + rbx + 3)) = 0x3f;\n    }\n    rbx += 4;\n    edx = 0;\n    r13d = 0;\n    r12 = rax;\n    goto label_35;\nlabel_77:\n    rdi = rbx;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r13d = 0;\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    edx = *((rsp + 8));\n    goto label_40;\nlabel_78:\n    r9 = *((rsp + 0x30));\n    rsi = r15;\n    rcx = rbp;\n    rax = rbx;\n    rdi = rbx;\n    r8 = *((rsp + 0x78));\n    r10d = *((rsp + 0x6e));\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r11d = *((rsp + 0x38));\n    if (rsi >= r9) {\n        goto label_89;\n    }\n    if (*(rcx) != 0) {\n        goto label_90;\n    }\n    goto label_89;\n    do {\n        if (*((r8 + rax)) == 0) {\n            goto label_91;\n        }\nlabel_90:\n        rax++;\n        rdx = r12 + rax;\n    } while (rdx < r9);\nlabel_91:\n    rdi = rax;\nlabel_89:\n    edx = *((rsp + 8));\n    r13d = 0;\n    goto label_40;\nlabel_87:\n    rax = *((rsp + 0xd8));\n    eax = *(rax);\n    if (al == 0) {\n        goto label_41;\n    }\n    rdx = *((rsp + 0xd8));\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = al;\n        }\n        rbx++;\n        eax = *((rdx + rbx));\n    } while (al != 0);\n    goto label_41;\nlabel_61:\n    r13d = r11d;\n    eax = 0;\n    r11 = r9;\n    goto label_42;\nlabel_85:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 1;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x4192dc;\n    goto label_21;\nlabel_51:\n    r13d = r11d;\n    r11 = r9;\n    goto label_43;\nlabel_72:\n    edx = eax;\nlabel_45:\n    rax = *((rsp + 0x50));\n    if (rax == 0) {\n        goto label_92;\n    }\n    if (dl == 0) {\n        goto label_92;\n    }\n    edx = *(rax);\n    if (dl == 0) {\n        goto label_92;\n    }\n    rax -= rbx;\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = dl;\n        }\n        rbx++;\n        edx = *((rax + rbx));\n    } while (dl != 0);\nlabel_92:\n    if (r14 <= rbx) {\n        goto label_44;\n    }\n    *((r15 + rbx)) = 0;\n    goto label_44;\nlabel_55:\n    r13d = r11d;\n    r11 = r9;\n    goto label_12;\nlabel_62:\n    r13d = r11d;\n    r11 = r9;\n    rsp + 8 = (r13d == 2) ? 1 : 0;\n    goto label_12;\nlabel_73:\n    rax = fcn_0040d1d0 (r15, *((rsp + 0x78)), *((rsp + 0x40)), r11, 5, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\n    goto label_44;\nlabel_74:\n    edx = *((rsp + 0x6d));\n    goto label_45;\nlabel_71:\n    r13d = 2;\n    goto label_12;\nlabel_84:\n    r10d = 0;\n    eax = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x58)) = 0;\n    goto label_46;\nlabel_80:\n    rdx = r14;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_88:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x41aa0f;\n    goto label_21;\nlabel_60:\n    r13d = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040e400",
            "funcStartAddr": "0x40e400",
            "funcEndAddr": "0x419975",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40e400 */\n#include <stdint.h>\n \nuint64_t fcn_0040e400 (int64_t arg1, char * arg2, int64_t arg3, int64_t arg4) {\n    char * var_8h;\n    char * var_30h;\n    int64_t var_18h;\n    int64_t var_24h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    do {\n        abort ();\n        r15 = (int64_t) edi;\n        r14 = rdx;\n        *((rsp + 8)) = rsi;\n        rax = errno_location ();\n        rbx = *(0x0061f4b8);\n        r13 = rax;\n        eax = *(rax);\n        *((rsp + 0x18)) = eax;\n    } while (r15d < 0);\n    if (*(0x0061f4d0) > r15d) {\n        goto label_0;\n    }\n    if (r15d == 0x7fffffff) {\n        goto label_1;\n    }\n    r12d = r15 + 1;\n    rsi = (int64_t) r12d;\n    rsi <<= 4;\n    if (rbx == 0x61f4c0) {\n        goto label_2;\n    }\n    rax = fcn_00411340 (rbx, rsi);\n    *(0x0061f4b8) = rax;\n    rbx = rax;\n    do {\n        rdi = *(0x0061f4d0);\n        edx -= edi;\n        rdi <<= 4;\n        rdx = (int64_t) edx;\n        rdi += rbx;\n        rdx <<= 4;\n        memset (rdi, 0, r12d);\n        *(0x0061f4d0) = r12d;\nlabel_0:\n        eax = *((rbp + 4));\n        r15 <<= 4;\n        rbx += r15;\n        r15 = rbp + 8;\n        eax |= 1;\n        r11 = *(rbx);\n        r12 = *((rbx + 8));\n        *((rsp + 0x24)) = eax;\n        rsi = r11;\n        *((rsp + 0x30)) = r11;\n        rax = fcn_0040d1d0 (r12, rsi, *((rsp + 0x28)), r14, *(rbp), eax);\n        r11 = *((rsp + 0x10));\n        if (r11 <= rax) {\n            rsi = rax + 1;\n            *(rbx) = rsi;\n            if (r12 != 0x6219e0) {\n                *((rsp + 0x10)) = rsi;\n                free (r12);\n                rsi = *((rsp + 0x10));\n            }\n            *((rsp + 0x10)) = rsi;\n            rax = fcn_004112e0 (*((rsp + 0x10)));\n            *((rbx + 8)) = rax;\n            rdi = rax;\n            r12 = rax;\n            fcn_0040d1d0 (rdi, *((rsp + 0x30)), *((rsp + 0x28)), r14, *(rbp), *((rsp + 0x3c)));\n        }\n        eax = *((rsp + 0x18));\n        *(r13) = eax;\n        rax = r12;\n        return rax;\nlabel_2:\n        rax = fcn_00411340 (0, rsi);\n        __asm (\"movdqa xmm0, xmmword [0x0061f4c0]\");\n        rbx = rax;\n        *(0x0061f4b8) = rax;\n        __asm (\"movups xmmword [rax], xmm0\");\n    } while (1);\nlabel_1:\n    return fcn_00411530 ();\n}\n"
        },
        {
            "funcName": "fcn_0040e920",
            "funcStartAddr": "0x40e920",
            "funcEndAddr": "0x41a27a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40e920 */\n#include <stdint.h>\n \nint64_t fcn_0040e920 (int64_t arg1, uint32_t arg2, char * arg3) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    do {\n        abort ();\n    } while (esi == 0xa);\n    rax = rdx;\n    *(rsp) = esi;\n    *((rsp + 4)) = 0;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x30)) = 0;\n    fcn_0040e400 (rdi, rax, 0xffffffffffffffff, rsp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040ea00",
            "funcStartAddr": "0x40ea00",
            "funcEndAddr": "0x40ea0c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40ea00 */\n#include <stdint.h>\n \nvoid fcn_0040ea00 (int64_t arg1, char * arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = rsi;\n    esi = edi;\n    edi = 0;\n    return void (*0x40e920)() ();\n}\n"
        },
        {
            "funcName": "fcn_0040eaa0",
            "funcStartAddr": "0x40eaa0",
            "funcEndAddr": "0x40eb31",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40eaa0 */\n#include <stdint.h>\n \nint64_t fcn_0040eaa0 (int64_t arg1, int64_t arg7, int64_t arg8, int64_t arg9) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_20h;\n    int64_t var_30h;\n    rdi = arg1;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    xmm2 = arg9;\n    do {\n        rax = imp.__libc_start_main;\n        ecx = edx;\n        __asm (\"movdqa xmm0, xmmword [0x00621ae0]\");\n        __asm (\"movdqa xmm1, xmmword [0x00621af0]\");\n        __asm (\"movdqa xmm2, xmmword [0x00621b00]\");\n        ecx &= 0x1f;\n        *((rsp + 0x30)) = rax;\n        eax = edx;\n        al >>= 5;\n        *(rsp) = xmm0;\n        eax = (int32_t) al;\n        *((rsp + 0x10)) = xmm1;\n        r8 = rsp + rax*4 + 8;\n        *((rsp + 0x20)) = xmm2;\n        edx = *(r8);\n        eax = *(r8);\n        eax >>= cl;\n        eax = ~eax;\n        eax &= 1;\n        eax <<= cl;\n        eax ^= edx;\n        *(r8) = eax;\n        fcn_0040e400 (0, rdi, rsi, rsp);\n        return rax;\n        edx = 0x3a;\n        rsi = 0xffffffffffffffff;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040ead0",
            "funcStartAddr": "0x40ead0",
            "funcEndAddr": "0x41a5d6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40ead0 */\n#include <stdint.h>\n \nint64_t fcn_0040ead0 (int64_t arg1, uint32_t arg2, char * arg3) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    do {\n        abort ();\n    } while (esi == 0xa);\n    rcx = 0x400000000000000;\n    rax = rdx;\n    *(rsp) = esi;\n    *((rsp + 8)) = rcx;\n    *((rsp + 4)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x30)) = 0;\n    fcn_0040e400 (rdi, rax, 0xffffffffffffffff, rsp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040ec30",
            "funcStartAddr": "0x40ec30",
            "funcEndAddr": "0x40ec41",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40ec30 */\n#include <stdint.h>\n \nvoid fcn_0040ec30 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    ecx = 0x61f480;\n    rdx = 0xffffffffffffffff;\n    return void (*0x40e400)() ();\n}\n"
        },
        {
            "funcName": "fcn_0040ec50",
            "funcStartAddr": "0x40ec50",
            "funcEndAddr": "0x40ec66",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40ec50 */\n#include <stdint.h>\n \nvoid fcn_0040ec50 (signed int64_t arg1) {\n    rdi = arg1;\n    rsi = rdi;\n    ecx = 0x61f480;\n    rdx = 0xffffffffffffffff;\n    edi = 0;\n    return void (*0x40e400)() ();\n}\n"
        },
        {
            "funcName": "fcn_0040ec70",
            "funcStartAddr": "0x40ec70",
            "funcEndAddr": "0x40eeb2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40ec70 */\n#include <stdint.h>\n \nuint64_t fcn_0040ec70 (int64_t arg1, void * arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_28h;\n    int64_t var_a0h;\n    int64_t var_b8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9d = r8d;\n    eax = 0;\n    r14d = edi;\n    r13d = edx;\n    r12 = rcx;\n    r8 = rcx;\n    ecx = edx;\n    rdx = rsi;\n    rbx = rsi;\n    esi = edi;\n    edi = 0x13c;\n    eax = syscall ();\n    edx = eax;\n    if (eax >= 0) {\n        goto label_0;\n    }\n    *((rsp + 8)) = eax;\n    rax = errno_location ();\n    edx = *((rsp + 8));\n    r9 = rax;\n    eax = *(rax);\n    ecx = rax - 0x16;\n    ecx &= 0xffffffef;\n    r15b = (ecx != 0) ? 1 : 0;\n    al = (eax != 0x5f) ? 1 : 0;\n    r15b &= al;\n    if (r15b != 0) {\n        goto label_0;\n    }\n    if (ebp == 0) {\n        goto label_2;\n    }\n    ebp &= 0xfffffffe;\n    if (ebp == 0) {\n        goto label_3;\n    }\n    *(r9) = 0x5f;\n    edx = 0xffffffff;\n    do {\nlabel_0:\n        eax = edx;\n        return rax;\nlabel_3:\n        rdx = r12;\n        esi = r13d;\n        edi = 1;\n        *((rsp + 8)) = r9;\n        r8d = 0x100;\n        rcx = rsp + 0xa0;\n        eax = fxstatat ();\n        r9 = *((rsp + 8));\n        if (eax == 0) {\n            goto label_4;\n        }\n        eax = *(r9);\n        if (eax == 0x4b) {\n            goto label_4;\n        }\n        if (eax != 2) {\n            goto label_1;\n        }\n        r15d = 1;\nlabel_2:\n        *((rsp + 8)) = r9;\n        rax = strlen (rbx);\n        rax = strlen (r12);\n        if (rbp == 0) {\n            goto label_5;\n        }\n        r9 = *((rsp + 8));\n        if (rax == 0) {\n            goto label_5;\n        }\n        if (*((rbx + rbp - 1)) != 0x2f) {\n            if (*((r12 + rax - 1)) != 0x2f) {\n                goto label_5;\n            }\n        }\n        rcx = rsp + 0x10;\n        rdx = rbx;\n        esi = r14d;\n        edi = 1;\n        r8d = 0x100;\n        *((rsp + 8)) = r9;\n        eax = fxstatat ();\n        if (eax != 0) {\n            goto label_1;\n        }\n        r9 = *((rsp + 8));\n        if (r15b == 0) {\n            goto label_6;\n        }\n        eax = *((rsp + 0x28));\n        eax &= 0xf000;\n        if (eax == 0x4000) {\n            goto label_5;\n        }\n        *(r9) = 2;\n        edx = 0xffffffff;\n    } while (1);\n    do {\n        eax = *((rsp + 0xb8));\n        eax &= 0xf000;\n        if (eax == 0x4000) {\n            goto label_7;\n        }\n        *(r9) = 0x14;\nlabel_1:\n        edx = 0xffffffff;\n        goto label_0;\nlabel_6:\n        rdx = r12;\n        esi = r13d;\n        edi = 1;\n        *((rsp + 8)) = r9;\n        r8d = 0x100;\n        rcx = rsp + 0xa0;\n        eax = fxstatat ();\n        r9 = *((rsp + 8));\n    } while (eax == 0);\n    if (*(r9) != 2) {\n        goto label_1;\n    }\n    eax = *((rsp + 0x28));\n    eax &= 0xf000;\n    if (eax != 0x4000) {\n        goto label_1;\n    }\n    do {\nlabel_5:\n        edx = r13d;\n        rcx = r12;\n        rsi = rbx;\n        edi = r14d;\n        eax = renameat ();\n        edx = eax;\n        goto label_0;\nlabel_4:\n        *(r9) = 0x11;\n        edx = 0xffffffff;\n        goto label_0;\nlabel_7:\n        eax = *((rsp + 0x28));\n        eax &= 0xf000;\n    } while (eax == 0x4000);\n    *(r9) = 0x15;\n    edx = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040eec0",
            "funcStartAddr": "0x40eec0",
            "funcEndAddr": "0x40ef1e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40eec0 */\n#include <stdint.h>\n \nuint64_t fcn_0040eec0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13d = edi;\n    r12 = rsi;\n    rbx = rdx;\n    do {\nlabel_0:\n        rax = read (r13d, r12, rbx);\n        if (rax >= 0) {\n            goto label_1;\n        }\n        rax = errno_location ();\n        eax = *(rax);\n    } while (eax == 4);\n    if (rbx > 0x7fffe000) {\n        if (eax != 0x16) {\n            goto label_1;\n        }\n        ebx = 0x7fffe000;\n        goto label_0;\n    }\nlabel_1:\n    rax = rbp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040ef20",
            "funcStartAddr": "0x40ef20",
            "funcEndAddr": "0x40ef7e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40ef20 */\n#include <stdint.h>\n \nuint64_t fcn_0040ef20 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13d = edi;\n    r12 = rsi;\n    rbx = rdx;\n    do {\nlabel_0:\n        rax = write (r13d, r12, rbx);\n        if (rax >= 0) {\n            goto label_1;\n        }\n        rax = errno_location ();\n        eax = *(rax);\n    } while (eax == 4);\n    if (eax == 0x16) {\n        if (rbx <= 0x7fffe000) {\n            goto label_1;\n        }\n        ebx = 0x7fffe000;\n        goto label_0;\n    }\nlabel_1:\n    rax = rbp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040ef80",
            "funcStartAddr": "0x40ef80",
            "funcEndAddr": "0x40f0b0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40ef80 */\n#include <stdint.h>\n \nuint64_t fcn_0040ef80 (char * arg1, char * arg2) {\n    uint32_t var_8h;\n    int64_t var_90h;\n    int64_t var_98h;\n    rdi = arg1;\n    rsi = arg2;\n    r15 = rdi;\n    r14 = rsi;\n    ebx = 0;\n    rax = fcn_0040ad40 (rdi);\n    rax = fcn_0040ad40 (r14);\n    r12 = rax;\n    rax = fcn_0040ada0 (rbp);\n    r13 = rax;\n    rax = fcn_0040ada0 (r12);\n    while (eax != 0) {\nlabel_0:\n        eax = ebx;\n        return rax;\n        eax = memcmp (rbp, r12, r13);\n    }\n    rdi = r15;\n    rax = fcn_0040ac60 ();\n    rdi = r14;\n    rax = fcn_0040ac60 ();\n    rdx = rsp;\n    rsi = rbp;\n    edi = 1;\n    r12 = rax;\n    eax = xstat ();\n    if (eax != 0) {\n        goto label_2;\n    }\nlabel_1:\n    rdx = rsp + 0x90;\n    rsi = r12;\n    edi = 1;\n    eax = xstat ();\n    while (1) {\n        ebx = 0;\n        rax = *((rsp + 0x98));\n        if (*((rsp + 8)) == rax) {\n            rax = *((rsp + 0x90));\n            bl = (*(rsp) == rax) ? 1 : 0;\n        }\n        free (rbp);\n        free (r12);\n        goto label_0;\n        rax = errno_location ();\n        rcx = r12;\n        eax = 0;\n        error (1, *(rax), 0x41aa9b);\n    }\nlabel_2:\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    error (1, *(rax), 0x41aa9b);\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040f0e0",
            "funcStartAddr": "0x40f0e0",
            "funcEndAddr": "0x40f474",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40f0e0 */\n#include <stdint.h>\n \nint64_t fcn_0040f0e0 (int64_t arg1, int64_t arg2) {\n    uint32_t const void *);\n    uint32_t var_10h;\n    int64_t var_18h;\n    uint32_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    rdi = arg1;\n    rsi = arg2;\n    rax = *((rsi*8 + 0x41a020));\n    *((rsp + 8)) = rax;\n    if (rdi == 0) {\n        goto label_9;\n    }\n    rbx = rdi;\n    r15d = 0;\n    r12d = 0;\n    r14d = 0;\n    rax = errno_location ();\n    r13d = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x10)) = 0;\n    while (al != 0x2e) {\nlabel_1:\n        if (al != 0) {\n            goto label_10;\n        }\nlabel_0:\n        *(rbp) = 0;\n        rdi = rbx;\n        rax = readdir ();\n        rcx = rax;\n        if (rax == 0) {\n            goto label_11;\n        }\n        r8 = rax + 0x13;\n        eax = *((rax + 0x13));\n    }\n    if (*((rcx + 0x14)) == 0x2e) {\n        goto label_12;\n    }\n    eax = *((rcx + 0x14));\n    if (al == 0) {\n        goto label_0;\n    }\nlabel_10:\n    rdi = r8;\n    *((rsp + 0x18)) = r8;\n    *((rsp + 0x28)) = rcx;\n    strlen (rdi);\n    r8 = *((rsp + 0x18));\n    rdx = rax + 1;\n    if (*((rsp + 8)) == 0) {\n        goto label_13;\n    }\n    rax = r12 + 1;\n    rcx = *((rsp + 0x28));\n    *((rsp + 0x18)) = rax;\n    if (r12 == *((rsp + 0x20))) {\n        goto label_14;\n    }\nlabel_2:\n    *((rsp + 0x30)) = rdx;\n    r12 <<= 4;\n    *((rsp + 0x28)) = rcx;\n    r12 += r14;\n    rax = fcn_00411510 (r8);\n    rcx = *((rsp + 0x28));\n    rdx = *((rsp + 0x30));\n    *(r12) = rax;\n    rax = *(rcx);\n    r15 += rdx;\n    *((r12 + 8)) = rax;\n    r12 = *((rsp + 0x18));\n    goto label_0;\nlabel_12:\n    eax = *((rcx + 0x15));\n    goto label_1;\nlabel_11:\n    ebx = *(rbp);\n    if (ebx != 0) {\n        goto label_15;\n    }\n    if (*((rsp + 8)) == 0) {\n        goto label_16;\n    }\n    rbx = r15 + 1;\n    if (r12 == 0) {\n        rax = fcn_004112e0 (rbx);\n        r13 = rax;\n        goto label_17;\n    }\n    rcx = *((rsp + 8));\n    rsi = r12;\n    edx = 0x10;\n    rdi = r14;\n    r12 <<= 4;\n    ebp = 0;\n    qsort ();\n    r12 += r14;\n    rbx = r14;\n    rax = fcn_004112e0 (rbx);\n    r13 = rax;\n    do {\n        r15 = r13 + rbp;\n        rsi = *(rbx);\n        rbx += 0x10;\n        rdi = r15;\n        rax = stpcpy ();\n        rax -= r15;\n        rbp = rbp + rax + 1;\n        free (*((rbx - 0x10)));\n    } while (rbx != r12);\n    rbp += r13;\nlabel_17:\n    free (r14);\n    do {\nlabel_3:\n        *(rbp) = 0;\nlabel_4:\n        rax = r13;\n        return rax;\nlabel_13:\n        rax = *((rsp + 0x10));\n        rsi = r15;\n        rax -= r15;\n        rsi += rdx;\n        cl = (rsi < 0) ? 1 : 0;\n        *((rsp + 0x18)) = rsi;\n        ecx = (int32_t) cl;\n        if (rax <= rdx) {\n            if (rcx != 0) {\n                goto label_8;\n            }\n            if (r13 == 0) {\n                goto label_18;\n            }\n            rax = 0x5555555555555553;\n            rsi = *((rsp + 0x18));\n            if (rsi > rax) {\n                goto label_8;\n            }\n            rax = rsi;\n            rax >>= 1;\n            rax = rsi + rax + 1;\nlabel_5:\n            *((rsp + 0x10)) = rax;\nlabel_6:\n            *((rsp + 0x30)) = rdx;\n            *((rsp + 0x28)) = r8;\n            rax = fcn_00411340 (r13, *((rsp + 0x10)));\n            r8 = *((rsp + 0x28));\n            r13 = rax;\n        }\n        memcpy (r13 + r15, r8, *((rsp + 0x30)));\n        r15 = *((rsp + 0x18));\n        goto label_0;\nlabel_16:\n        if (*((rsp + 0x10)) == r15) {\n            goto label_19;\n        }\n        rbp = r13 + r15;\n    } while (1);\nlabel_14:\n    if (r14 == 0) {\n        goto label_20;\n    }\n    rax = 0x555555555555554;\n    if (r12 > rax) {\n        goto label_8;\n    }\n    rax = r12;\n    rax >>= 1;\n    rax += *((rsp + 0x18));\n    *((rsp + 0x20)) = rax;\n    rsi <<= 4;\nlabel_7:\n    *((rsp + 0x38)) = rdx;\n    *((rsp + 0x30)) = r8;\n    *((rsp + 0x28)) = rcx;\n    rax = fcn_00411340 (r14, rax);\n    rdx = *((rsp + 0x38));\n    r8 = *((rsp + 0x30));\n    r14 = rax;\n    rcx = *((rsp + 0x28));\n    goto label_2;\nlabel_19:\n    rbx = *((rsp + 0x10));\n    rax = fcn_00411340 (r13, rbx + 1);\n    r13 = rax;\n    rbp = rax + rbx;\n    goto label_3;\nlabel_15:\n    free (r14);\n    r13d = 0;\n    free (r13);\n    *(rbp) = ebx;\n    goto label_4;\nlabel_9:\n    r13d = 0;\n    goto label_4;\nlabel_18:\n    rax = rsi;\n    if (rsi == 0) {\n        goto label_21;\n    }\n    if (rsi >= 0) {\n        goto label_5;\n    }\n    do {\nlabel_8:\n        fcn_00411530 ();\nlabel_21:\n        *((rsp + 0x10)) = 0x80;\n        goto label_6;\nlabel_20:\n        if (r12 == 0) {\n            goto label_22;\n        }\n        rax = r12;\n        rsi = r12;\n        rax >>= 0x3c;\n        al = (rax != 0) ? 1 : 0;\n        rsi <<= 4;\n        eax = (int32_t) al;\n    } while (rsi < 0);\n    if (rax == 0) {\n        goto label_7;\n    }\n    goto label_8;\nlabel_22:\n    *((rsp + 0x20)) = 8;\n    esi = 0x80;\n    *((rsp + 0x18)) = 1;\n    goto label_7;\n}\n"
        },
        {
            "funcName": "fcn_0040f480",
            "funcStartAddr": "0x40f480",
            "funcEndAddr": "0x40f4e8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40f480 */\n#include <stdint.h>\n \nuint64_t fcn_0040f480 (int64_t arg2) {\n    rsi = arg2;\n    rax = fcn_0040abc0 ();\n    if (rax != 0) {\n        rbx = rax;\n        rax = fcn_0040f0e0 (rax, ebp);\n        rdi = rbx;\n        eax = closedir ();\n        if (eax != 0) {\n            goto label_0;\n        }\n        rax = rbp;\n        return rax;\n    }\n    ebp = 0;\n    rax = rbp;\n    return rax;\nlabel_0:\n    rax = errno_location ();\n    ebp = 0;\n    r12d = *(rax);\n    rbx = rax;\n    free (rbp);\n    rax = rbp;\n    *(rbx) = r12d;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040f520",
            "funcStartAddr": "0x40f520",
            "funcEndAddr": "0x40f769",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40f520 */\n#include <stdint.h>\n \nuint64_t fcn_0040f520 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r12 = rsi;\n    rbx = rcx;\n    if (rcx == 0) {\n        goto label_6;\n    }\n    esi = edx;\n    rdi = r12;\n    r14d = edx;\n    esi <<= 0x11;\n    esi &= 0x20000;\n    esi |= 0x10900;\n    eax = open_2 ();\n    *(rbx) = eax;\n    r13d = eax;\n    rax = errno_location ();\n    eax = *(rax);\n    *((rbx + 4)) = eax;\n    if (r13d < 0) {\n        goto label_7;\n    }\n    r14d &= 2;\n    while (eax == 0xd) {\nlabel_1:\n        ecx = *(rbp);\n        if (ecx > 5) {\n            goto label_8;\n        }\n        eax = 1;\n        rax <<= cl;\n        if ((al & 0x36) == 0) {\n            if ((al & 8) != 0) {\n                goto label_9;\n            }\n            if (ecx != 0) {\n                goto label_8;\n            }\n            eax = 0;\n            eax = fcn_0040ae10 (0x418d7b, 0, rdx, rcx);\n            if (eax < 0) {\n                goto label_10;\n            }\n            *(rbp) = 1;\n            *((rbp + 4)) = eax;\n        }\nlabel_2:\n        if (r13d < 0) {\n            goto label_11;\n        }\n        edi = r13d;\n        eax = fchdir ();\n        r12d = eax;\n        if (eax == 0) {\n            goto label_12;\n        }\n        al = (rbx == 0) ? 1 : 0;\n        goto label_5;\n        r12d = 0;\nlabel_0:\n        eax = r12d;\n        return rax;\nlabel_7:\n    }\n    r12d = 0xffffffff;\n    goto label_0;\nlabel_11:\n    rdi = r12;\n    eax = chdir ();\n    r12d = eax;\n    if (eax != 0) {\n        goto label_0;\n    }\nlabel_12:\n    if (*(rbp) > 5) {\n        goto label_13;\n    }\n    eax = *(rbp);\n    /* switch table (6 cases) at 0x41a088 */\n    *(rbp) = 2;\nlabel_3:\n    al = (rbx == 0) ? 1 : 0;\n    r12d = 0;\nlabel_5:\n    if (r13d < 0) {\n        goto label_0;\n    }\n    if (al == 0) {\n        goto label_0;\n    }\n    rax = errno_location ();\n    ebp = *(rax);\n    rbx = rax;\n    close (r13d);\n    eax = r12d;\n    *(rbx) = ebp;\n    return rax;\nlabel_6:\n    r13d = 0xffffffff;\n    goto label_1;\nlabel_9:\n    edx = *((rbp + 4));\n    if (edx >= 0) {\n        goto label_2;\n    }\nlabel_4:\n    eax = fork ();\n    *((rbp + 4)) = eax;\n    if (eax == 0) {\n        goto label_2;\n    }\n    if (eax > 0) {\n        goto label_14;\n    }\n    *(rbp) = 4;\n    rax = errno_location ();\n    eax = *(rax);\n    *((rbp + 4)) = eax;\n    goto label_2;\n    eax = *((rbp + 4));\n    if (eax == 0) {\n        goto label_3;\n    }\n    assert_fail (\"wd->val.child == 0\", \"lib/savewd.c\", 0x9b, \"savewd_chdir\");\nlabel_10:\n    rax = errno_location ();\n    eax = *(rax);\n    if (eax != 0xd) {\n        if (eax == 0x74) {\n            goto label_15;\n        }\n        *(rbp) = 4;\n        *((rbp + 4)) = eax;\n        goto label_2;\n    }\nlabel_15:\n    rax = 0xffffffff00000003;\n    *(rbp) = rax;\n    goto label_4;\nlabel_13:\n    assert_fail (0x41a084, \"lib/savewd.c\", 0x9f, \"savewd_chdir\");\nlabel_14:\n    eax = 1;\n    r12d = 0xfffffffe;\n    goto label_5;\nlabel_8:\n    return assert_fail (0x41a084, \"lib/savewd.c\", 0x63, \"savewd_save\");\n}\n"
        },
        {
            "funcName": "fcn_0040f770",
            "funcStartAddr": "0x40f770",
            "funcEndAddr": "0x40f896",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40f770 */\n#include <stdint.h>\n \nuint64_t fcn_0040f770 (int64_t wstatus, uint32_t arg1, int64_t status) {\n    rdi = arg1;\n    rsi = status;\n    if (*(rdi) > 4) {\n        goto label_1;\n    }\n    eax = *(rdi);\n    rbx = rdi;\n    /* switch table (5 cases) at 0x41a0b8 */\n    ebp = *((rdi + 4));\n    if (ebp == 0) {\n        goto label_2;\n    }\n    if (ebp > 0) {\n        goto label_3;\n    }\n    eax = 0;\n    return eax;\n    r12d = *((rdi + 4));\n    rax = errno_location ();\nlabel_0:\n    *(rbp) = r12d;\n    eax = 0xffffffff;\n    return rax;\n    do {\n        rax = errno_location ();\n        if (*(rax) != 4) {\n            goto label_4;\n        }\nlabel_3:\n        eax = waitpid (ebp, rsp + 0xc, 0);\n    } while (eax < 0);\n    eax = *((rsp + 0xc));\n    *((rbx + 4)) = 0xffffffff;\n    edi = eax;\n    edi &= 0x7f;\n    while (1) {\n        eax = (int32_t) ah;\n        return rax;\n        edi = *((rdi + 4));\n        eax = fchdir ();\n        if (eax != 0) {\n            goto label_5;\n        }\n        *(rbx) = 1;\n        return rax;\n        raise (rdi);\n        eax = *((rsp + 0xc));\n    }\nlabel_5:\n    rax = errno_location ();\n    r12d = *(rax);\n    close (*((rbx + 4)));\n    *(rbx) = 4;\n    *((rbx + 4)) = r12d;\n    goto label_0;\nlabel_4:\n    assert_fail (\"(*__errno_location ()) == 4\", \"lib/savewd.c\", 0xd8, \"savewd_restore\");\nlabel_1:\n    assert_fail (0x41a084, \"lib/savewd.c\", 0xe2, \"savewd_restore\");\nlabel_2:\n    return exit (esi);\n}\n"
        },
        {
            "funcName": "fcn_0040f8a0",
            "funcStartAddr": "0x40f8a0",
            "funcEndAddr": "0x40f909",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40f8a0 */\n#include <stdint.h>\n \nint32_t fcn_0040f8a0 (uint32_t fildes) {\n    rdi = fildes;\n    if (*(rdi) > 4) {\n        goto label_0;\n    }\n    eax = *(rdi);\n    rbx = rdi;\n    /* switch table (5 cases) at 0x41a0e0 */\n    close (*((rdi + 4)));\n    do {\n        *(rbx) = 5;\n        return eax;\n        eax = *((rdi + 4));\n    } while (eax < 0);\n    assert_fail (\"wd->val.child < 0\", \"lib/savewd.c\", 0xf7, \"savewd_finish\");\nlabel_0:\n    return assert_fail (0x41a084, \"lib/savewd.c\", 0xfb, \"savewd_finish\");\n}\n"
        },
        {
            "funcName": "fcn_0040f910",
            "funcStartAddr": "0x40f910",
            "funcEndAddr": "0x40fa58",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40f910 */\n#include <stdint.h>\n \nint64_t fcn_0040f910 (signed int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    uint32_t var_10h;\n    signed int64_t var_18h;\n    int64_t var_1ch;\n    int64_t var_28h;\n    int64_t var_2ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    eax = rdi - 1;\n    r13 = rdx;\n    r12 = rsi;\n    *((rsp + 0x18)) = edi;\n    *((rsp + 8)) = rcx;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x1c)) = eax;\n    if (eax < 0) {\n        goto label_2;\n    }\n    rax = (int64_t) eax;\n    rax = *((rsi + rax*8));\n    if (*(rax) != 0x2f) {\n        goto label_3;\n    }\n    eax = rdi - 2;\n    rax = (int64_t) eax;\n    while (eax >= 0) {\n        rdx = *((r12 + rax*8));\n        rax--;\n        if (*(rdx) != 0x2f) {\n            goto label_3;\n        }\n    }\nlabel_3:\n    if (ebp <= 0) {\n        goto label_2;\n    }\n    eax = rbp - 1;\n    r15 = r12;\n    rbx = rsp + 0x28;\n    r14d = 0;\n    rax = r12 + rax*8 + 8;\n    *((rsp + 0x10)) = rax;\n    eax = 0;\n    while (eax != 3) {\nlabel_1:\n        rdx = *((rsp + 8));\n        rsi = rbx;\n        rdi = *(r15);\n        eax = void (*r13)() ();\n        if (r14d < eax) {\n            r14d = eax;\n        }\nlabel_0:\n        rax = *((r15 + 8));\n        if (*(rax) != 0x2f) {\n            eax = fcn_0040f770 (rbx, r14d, rdx);\n            if (r14d >= eax) {\n                r14d = eax;\n                goto label_4;\n            }\n        }\nlabel_4:\n        r15 += 8;\n        if (r15 == *((rsp + 0x10))) {\n            goto label_5;\n        }\n        eax = *((rsp + 0x28));\n    }\n    eax = *((rsp + 0x2c));\n    if (eax > 0) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_2:\n    r14d = 0;\n    ebp = 0;\n    rbx = rsp + 0x28;\nlabel_5:\n    fcn_0040f8a0 (rbx);\n    if (*((rsp + 0x18)) <= ebp) {\n        goto label_6;\n    }\n    eax = *((rsp + 0x1c));\n    rdx = (int64_t) ebp;\n    r15 = r12 + rdx*8;\n    eax -= ebp;\n    rax += rdx;\n    rbp = r12 + rax*8 + 8;\n    do {\n        rdi = *(r15);\n        rdx = *((rsp + 8));\n        rsi = rbx;\n        eax = void (*r13)() ();\n        if (r14d < eax) {\n            r14d = eax;\n        }\n        r15 += 8;\n    } while (r15 != rbp);\nlabel_6:\n    eax = r14d;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040faf0",
            "funcStartAddr": "0x40faf0",
            "funcEndAddr": "0x40fb0d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40faf0 */\n#include <stdint.h>\n \nvoid fcn_0040faf0 (void) {\n    return assert_fail (\"! \\\"invalid KIND in __gen_tempname\\\", \"lib/tempname.c\", 0x147, \"gen_tempname_len\");\n}\n"
        },
        {
            "funcName": "fcn_0040fb10",
            "funcStartAddr": "0x40fb10",
            "funcEndAddr": "0x40fc6d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40fb10 */\n#include <stdint.h>\n \nuint64_t fcn_0040fb10 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_2ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r14 = rdi;\n    r13 = r8;\n    *((rsp + 0x18)) = rdx;\n    *((rsp + 8)) = rdi;\n    *((rsp + 0x20)) = rcx;\n    rax = errno_location ();\n    r15 = rax;\n    eax = *(rax);\n    *((rsp + 0x2c)) = eax;\n    rax = strlen (r14);\n    rdx = (int64_t) ebp;\n    rdx += r13;\n    if (rdx > rax) {\n        goto label_2;\n    }\n    rax -= rdx;\n    rbx = rax;\n    rax = r14 + rax;\n    rdi = rax;\n    *((rsp + 0x10)) = rax;\n    rax = strspn (rdi, 0x418fcb);\n    if (r13 > rax) {\n        goto label_2;\n    }\n    rsi = r13;\n    edi = 0;\n    rax = fcn_00413800 ();\n    if (rax == 0) {\n        goto label_3;\n    }\n    rax = *((rsp + 8));\n    r12d = 0x3a2f8;\n    rax += r13;\n    rbx += rax;\nlabel_0:\n    r14 = *((rsp + 0x10));\n    if (r13 == 0) {\n        goto label_4;\n    }\n    do {\n        r14++;\n        fcn_00413840 (rbp, 0x3d);\n        eax = *((rax + str.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789));\n        *((r14 - 1)) = al;\n    } while (r14 != rbx);\nlabel_4:\n    rsi = *((rsp + 0x18));\n    rdi = *((rsp + 8));\n    rax = *((rsp + 0x20));\n    eax = void (*rax)() ();\n    edx = eax;\n    if (eax >= 0) {\n        goto label_5;\n    }\n    ecx = *(r15);\n    if (ecx != 0x11) {\n        goto label_6;\n    }\n    r12d--;\n    if (r12d != 0) {\n        goto label_0;\n    }\n    fcn_00413960 (rbp);\n    *(r15) = 0x11;\n    edx = 0xffffffff;\n    goto label_1;\nlabel_5:\n    eax = *((rsp + 0x2c));\n    *(r15) = eax;\n    ecx = eax;\n    do {\n        *((rsp + 0x10)) = edx;\n        *((rsp + 8)) = ecx;\n        fcn_00413960 (rbp);\n        ecx = *((rsp + 8));\n        edx = *((rsp + 0x10));\n        *(r15) = ecx;\nlabel_1:\n        eax = edx;\n        return rax;\nlabel_6:\n        edx = 0xffffffff;\n    } while (1);\nlabel_2:\n    *(r15) = 0x16;\n    edx = 0xffffffff;\n    goto label_1;\nlabel_3:\n    edx = 0xffffffff;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040fcf0",
            "funcStartAddr": "0x40fcf0",
            "funcEndAddr": "0x40fd3e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40fcf0 */\n#include <stdint.h>\n \nuint64_t fcn_0040fcf0 (uint32_t arg1) {\n    rdi = arg1;\n    ebx = edi;\n    if (edi > 2) {\n        eax = ebx;\n        return eax;\n    }\n    eax = fcn_004143d0 (rdi, rsi);\n    r12d = eax;\n    rax = errno_location ();\n    ebx = r12d;\n    r13d = *(rax);\n    close (ebx);\n    eax = ebx;\n    *(rbp) = r13d;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040fd60",
            "funcStartAddr": "0x40fd60",
            "funcEndAddr": "0x4104c9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x40fd60 */\n#include <stdint.h>\n \nuint64_t fcn_0040fd60 (char * arg1, char * arg2, func * arg3, int64_t arg4) {\n    int64_t var_8h;\n    char * var_10h;\n    uint32_t var_18h;\n    char * var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    int64_t var_3ch;\n    int64_t var_40h;\n    int64_t var_48h;\n    int64_t var_50h;\n    int64_t var_58h;\n    int64_t var_5ch;\n    int64_t var_60h;\n    int64_t var_68h;\n    int64_t var_70h;\n    int64_t var_78h;\n    int64_t var_80h;\n    int64_t var_d8h;\n    int64_t var_e0h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    ebx = ecx;\n    r13 = *((rdx + 0x60));\n    r12 = *((rsi + 0x58));\n    rbp = *((rdx + 0x58));\n    r14 = *((rsi + 0x60));\n    r15d = r13d;\n    ebx &= 1;\n    if (ebx != 0) {\n        rsp = (r12 == rbp) ? 1 : 0;\n        ecx = *(rsp);\n        al = (r14d == r13d) ? 1 : 0;\n        al &= cl;\n        *((rsp + 8)) = al;\n        if (al != 0) {\n            goto label_15;\n        }\n        rax = rbp - 1;\n        if (rax > r12) {\n            goto label_2;\n        }\n        rax = r12 - 1;\n        if (rax > rbp) {\n            goto label_0;\n        }\n        rdx = imp.__libc_start_main;\n        *((rsp + 0x10)) = rsi;\n        *((rsp + 0x20)) = rdi;\n        if (rdx == 0) {\n            goto label_16;\n        }\nlabel_1:\n        rsi = imp.__libc_start_main;\n        if (rsi == 0) {\n            goto label_17;\n        }\nlabel_5:\n        rax = *((rsp + 0x10));\n        rax = *(rax);\n        *(rsi) = rax;\n        rax = fcn_0040c2f0 (rdx);\n        r9 = rax;\n        if (rax == 0) {\n            goto label_18;\n        }\n        if (*(0x00621b18) == rax) {\n            goto label_19;\n        }\nlabel_7:\n        edi = *((r9 + 8));\n        *((rsp + 0x18)) = edi;\n        if (*((r9 + 0xc)) == 0) {\n            goto label_20;\n        }\n        eax = 0;\n        al = (edi == 0x77359400) ? 1 : 0;\n        eax = ~eax;\n        rax = (int64_t) eax;\n        rbp &= rax;\n        eax = r15d;\n        r15d = r13d;\n        edx:eax = (int64_t) eax;\n        eax = edx:eax / edi;\n        edx = edx:eax % edi;\n        r15d -= edx;\n    }\nlabel_4:\n    if (rbp > r12) {\n        goto label_2;\n    }\n    ebx = 1;\n    if (rbp != r12) {\n        goto label_0;\n    }\n    if (r15d > r14d) {\n        goto label_2;\n    }\n    bl = (r15d < r14d) ? 1 : 0;\n    ebx = (int32_t) bl;\n    do {\nlabel_0:\n        eax = ebx;\n        return rax;\nlabel_15:\n        ebx = 0;\n    } while (1);\nlabel_3:\n    eax = r15d;\n    edx:eax = (int64_t) eax;\n    eax = edx:eax / r8d;\n    edx = edx:eax % r8d;\n    eax = r13d;\n    eax -= edx;\n    if (eax <= r14d) {\n        goto label_21;\n    }\nlabel_2:\n    ebx = 0xffffffff;\n    goto label_0;\nlabel_16:\n    rax = fcn_0040bb50 (0x10, 0, 0x40fd40, 0x40fd50, sym.imp.free);\n    rdx = rax;\n    *(0x00621b20) = rax;\n    if (rax != 0) {\n        goto label_1;\n    }\nlabel_6:\n    rdx = rsp + 0x50;\nlabel_8:\n    *((rsp + 0x58)) = 0x77359400;\n    r9 = rdx;\n    *((rsp + 0x5c)) = 0;\n    *((rsp + 0x18)) = 0x77359400;\nlabel_20:\n    rax = *((rsp + 0x10));\n    r8d = 0x66666667;\n    rdi = *((rax + 0x50));\n    rcx = *((rax + 0x70));\n    eax = edi;\n    esi = edi;\n    *((rsp + 0x30)) = rdi;\n    edx:eax = eax * r8d;\n    esi >>= 0x1f;\n    edx >>= 2;\n    edx -= esi;\n    esi = edi;\n    edi = ecx;\n    eax = rdx * 5;\n    r11d = edx;\n    edi >>= 0x1f;\n    eax += eax;\n    esi -= eax;\n    eax = ecx;\n    edx:eax = eax * r8d;\n    edx >>= 2;\n    edx -= edi;\n    edi = r14d;\n    eax = rdx * 5;\n    r10d = edx;\n    edi >>= 0x1f;\n    eax += eax;\n    ecx -= eax;\n    eax = r14d;\n    edx:eax = eax * r8d;\n    ecx |= esi;\n    esi = r14d;\n    edx >>= 2;\n    edx -= edi;\n    eax = rdx * 5;\n    edi = edx;\n    *((rsp + 0x28)) = edx;\n    eax += eax;\n    esi -= eax;\n    ecx |= esi;\n    if (ecx != 0) {\n        goto label_22;\n    }\n    rax = *((rsp + 0x10));\n    ecx = r11d;\n    esi = r10d;\n    rax = *((rax + 0x48));\n    *((rsp + 0x48)) = rax;\n    if (*((rsp + 0x18)) <= 0xa) {\n        goto label_23;\n    }\n    eax = r11d;\n    edx:eax = eax * r8d;\n    eax = r11d;\n    eax >>= 0x1f;\n    edx >>= 2;\n    edx -= eax;\n    eax = rdx * 5;\n    eax += eax;\n    r11d -= eax;\n    eax = r10d;\n    edx:eax = eax * r8d;\n    eax = r10d;\n    eax >>= 0x1f;\n    edx >>= 2;\n    edx -= eax;\n    eax = rdx * 5;\n    eax += eax;\n    r10d -= eax;\n    eax = *((rsp + 0x28));\n    r11d |= r10d;\n    r10d = 0x66666667;\n    edx:eax = eax * r8d;\n    r8d = *((rsp + 0x28));\n    eax = *((rsp + 0x28));\n    eax >>= 0x1f;\n    edx >>= 2;\n    edx -= eax;\n    eax = rdx * 5;\n    edx = r8d;\n    r8d = 0xa;\n    eax += eax;\n    edx -= eax;\n    eax = 8;\n    r11d |= edx;\n    if (r11d != 0) {\n        goto label_24;\n    }\n    *((rsp + 0x28)) = rbp;\n    *((rsp + 0x40)) = r9;\n    r9d = *((rsp + 0x18));\n    *((rsp + 0x3c)) = r15d;\n    r15d = eax;\n    do {\n        eax = ecx;\n        ecx >>= 0x1f;\n        r11d = r8 * 5;\n        edx:eax = eax * r10d;\n        eax = esi;\n        esi >>= 0x1f;\n        r11d += r11d;\n        r8d = r11d;\n        edx >>= 2;\n        edx -= ecx;\n        ecx = edx;\n        edx:eax = eax * r10d;\n        eax = edi;\n        edi >>= 0x1f;\n        edx >>= 2;\n        edx -= esi;\n        esi = edx;\n        edx:eax = eax * r10d;\n        edx >>= 2;\n        edx -= edi;\n        edi = edx;\n        if (r11d >= r9d) {\n            goto label_25;\n        }\n        eax = ecx;\n        edx:eax = eax * r10d;\n        eax = ecx;\n        eax >>= 0x1f;\n        edx >>= 2;\n        edx -= eax;\n        eax = rdx * 5;\n        eax += eax;\n        ebp -= eax;\n        eax = esi;\n        edx:eax = eax * r10d;\n        eax = esi;\n        eax >>= 0x1f;\n        edx >>= 2;\n        edx -= eax;\n        eax = rdx * 5;\n        edx = esi;\n        eax += eax;\n        edx -= eax;\n        eax = edi;\n        ebp |= edx;\n        edx:eax = eax * r10d;\n        eax = edi;\n        eax >>= 0x1f;\n        edx >>= 2;\n        edx -= eax;\n        eax = rdx * 5;\n        edx = edi;\n        eax += eax;\n        edx -= eax;\n        ebp |= edx;\n        if (ebp != 0) {\n            goto label_25;\n        }\n        r15d--;\n    } while (r15d != 0);\n    rax = *((rsp + 0x48));\n    rdi = *((rsp + 0x10));\n    rbp = *((rsp + 0x28));\n    r15d = *((rsp + 0x3c));\n    rax |= r12;\n    rax |= *((rdi + 0x68));\n    r9 = *((rsp + 0x40));\n    if ((al & 1) == 0) {\n        goto label_26;\n    }\n    *((r9 + 8)) = 0x3b9aca00;\n    rax = rbp;\n    r8d = 0x3b9aca00;\nlabel_9:\n    if (r12 > rbp) {\n        goto label_0;\n    }\n    if (r14d < r13d) {\n        goto label_27;\n    }\n    if (*(rsp) != 0) {\n        goto label_0;\n    }\nlabel_27:\n    if (r12 < rax) {\n        goto label_2;\n    }\n    if (r12 == rax) {\n        goto label_3;\n    }\nlabel_21:\n    rax = *((rsp + 0x48));\n    edx = 0x38e38e39;\n    *((rsp + 0x18)) = r8d;\n    rdi = *((rsp + 0x20));\n    *((rsp + 0x60)) = rax;\n    rax = *((rsp + 0x30));\n    *((rsp + 0x68)) = rax;\n    eax = *((rsp + 8));\n    rax |= r12;\n    *((rsp + 0x70)) = rax;\n    eax = r8d;\n    edx:eax = eax * edx;\n    edx >>= 1;\n    eax = rdx + r14;\n    rax = (int64_t) eax;\n    *((rsp + 0x78)) = rax;\n    rax = *((rsp + 0x10));\n    eax = *((rax + 0x18));\n    *(rsp) = eax;\n    eax &= 0xf000;\n    rax = rsp + 0x60;\n    *(rsp) = r9;\n    *((rsp + 8)) = rax;\n    rsi = rax;\n    if (eax == 0xa000) {\n        goto label_28;\n    }\n    eax = fcn_00410aa0 (rdi, rsi, rdx, rcx);\n    r8d = *((rsp + 0x18));\n    r9 = *(rsp);\n    al = (eax != 0) ? 1 : 0;\nlabel_11:\n    if (al == 0) {\n        rax = *((rsp + 0x10));\n        *((rsp + 0x18)) = r8d;\n        edi = 1;\n        rdx = rsp + 0x80;\n        rsi = *((rsp + 0x20));\n        eax = *((rax + 0x18));\n        *(rsp) = eax;\n        eax &= 0xf000;\n        *(rsp) = r9;\n        if (eax == 0xa000) {\n            goto label_29;\n        }\n        eax = xstat ();\n        r8d = *((rsp + 0x18));\n        r9 = *(rsp);\n        r10d = eax;\nlabel_12:\n        rax = *((rsp + 0xd8));\n        rcx = *((rsp + 0xe0));\n        rdi = (int64_t) r14d;\n        rdx = rdi;\n        rsi = rax;\n        rdx ^= rcx;\n        rsi ^= r12;\n        rdx |= rsi;\n        rsi = (int64_t) r10d;\n        rdx |= rsi;\n        if (rdx == 0) {\n            goto label_30;\n        }\n        rax = *((rsp + 0x10));\n        *((rsp + 0x78)) = rdi;\n        *((rsp + 0x70)) = r12;\n        rsi = *((rsp + 8));\n        eax = *((rax + 0x18));\n        rdi = *((rsp + 0x20));\n        *((rsp + 0x18)) = r8d;\n        *((rsp + 0x10)) = r10d;\n        eax &= 0xf000;\n        *(rsp) = r9;\n        if (eax == 0xa000) {\n            goto label_31;\n        }\n        fcn_00410aa0 (rdi, rsi, rdx, rcx);\n        r8d = *((rsp + 0x18));\n        r10d = *((rsp + 0x10));\n        r9 = *(rsp);\nlabel_14:\n        if (r10d == 0) {\n            goto label_32;\n        }\n    }\n    ebx = 0xfffffffe;\n    goto label_0;\nlabel_32:\n    rax = *((rsp + 0xd8));\n    rcx = *((rsp + 0xe0));\nlabel_30:\n    eax &= 1;\n    edx = 0x66666667;\n    eax *= 0x3b9aca00;\n    ecx += eax;\n    eax = ecx;\n    edx:eax = eax * edx;\n    eax = edx;\n    edx = ecx;\n    eax >>= 2;\n    edx >>= 0x1f;\n    eax -= edx;\n    eax = rax * 5;\n    eax += eax;\n    if (ecx != eax) {\n        goto label_33;\n    }\n    if (r8d == 0xa) {\n        goto label_34;\n    }\n    esi = 9;\n    ebx = 0xa;\n    edi = 0x66666667;\n    while (esi != 0) {\n        ebx = rbx * 5;\n        ebx += ebx;\n        if (ebx == r8d) {\n            goto label_35;\n        }\n        eax = ecx;\n        ecx >>= 0x1f;\n        edx:eax = eax * edi;\n        edx >>= 2;\n        edx -= ecx;\n        eax = edx;\n        ecx = edx;\n        edx:eax = eax * edi;\n        eax = ecx;\n        eax >>= 0x1f;\n        edx >>= 2;\n        edx -= eax;\n        eax = rdx * 5;\n        eax += eax;\n        if (ecx != eax) {\n            goto label_35;\n        }\n        esi--;\n    }\n    rax = 0xfffffffffffffffe;\n    ebx = 0x77359400;\nlabel_13:\n    rbp &= rax;\n    eax = r15d;\n    r15d = r13d;\n    edx:eax = (int64_t) eax;\n    eax = edx:eax / ebx;\n    edx = edx:eax % ebx;\n    r15d -= edx;\nlabel_22:\n    *((r9 + 8)) = ebx;\n    *((r9 + 0xc)) = 1;\n    goto label_4;\nlabel_17:\n    *((rsp + 0x18)) = rdx;\n    rax = malloc (0x10);\n    rsi = rax;\n    *(0x00621b18) = rax;\n    if (rax == 0) {\n        goto label_36;\n    }\n    *((rax + 8)) = 0x77359400;\n    rdx = *((rsp + 0x18));\n    *((rax + 0xc)) = 0;\n    goto label_5;\nlabel_18:\n    rdi = imp.__libc_start_main;\n    if (rdi == 0) {\n        goto label_6;\n    }\nlabel_10:\n    rax = *((rsp + 0x10));\n    rdx = rsp + 0x50;\n    rsi = rdx;\n    *((rsp + 0x18)) = rdx;\n    rax = *(rax);\n    *((rsp + 0x50)) = rax;\n    rax = fcn_0040b8e0 (rdi, rsi);\n    rdx = *((rsp + 0x18));\n    r9 = rax;\n    if (rax != 0) {\n        goto label_7;\n    }\n    goto label_8;\nlabel_19:\n    *(0x00621b18) = 0;\n    goto label_7;\nlabel_25:\n    rbp = *((rsp + 0x28));\n    r9 = *((rsp + 0x40));\n    rsp + 8 = (r11d == 0x77359400) ? 1 : 0;\n    eax = *((rsp + 8));\n    r15d = *((rsp + 0x3c));\n    *((r9 + 8)) = r11d;\n    eax = ~eax;\n    rax = (int64_t) eax;\n    rax &= rbp;\n    goto label_9;\nlabel_26:\n    rax = rbp;\n    *((r9 + 8)) = 0x77359400;\n    r8d = 0x77359400;\n    rax &= 0xfffffffffffffffe;\n    *((rsp + 8)) = 1;\n    goto label_9;\nlabel_36:\n    rdi = imp.__libc_start_main;\n    goto label_10;\nlabel_28:\n    eax = fcn_00410ab0 (rdi, rsi, rdx, rcx);\n    r9 = *(rsp);\n    r8d = *((rsp + 0x18));\n    al = (eax != 0) ? 1 : 0;\n    goto label_11;\nlabel_24:\n    *((r9 + 8)) = 0xa;\n    rax = rbp;\n    goto label_9;\nlabel_23:\n    *((r9 + 8)) = 0xa;\n    rax = rbp;\n    r8d = 0xa;\n    goto label_9;\nlabel_29:\n    eax = lxstat ();\n    r9 = *(rsp);\n    r8d = *((rsp + 0x18));\n    r10d = eax;\n    goto label_12;\nlabel_35:\n    eax = 0;\n    al = (ebx == 0x77359400) ? 1 : 0;\n    eax = ~eax;\n    rax = (int64_t) eax;\n    goto label_13;\nlabel_31:\n    rax = fcn_00410ab0 (rdi, rsi, rdx, rcx);\n    r9 = *(rsp);\n    r10d = *((rsp + 0x10));\n    r8d = *((rsp + 0x18));\n    goto label_14;\nlabel_34:\n    ebx = 0xa;\nlabel_33:\n    rax |= 0xffffffffffffffff;\n    goto label_13;\n}\n"
        },
        {
            "funcName": "fcn_004104d0",
            "funcStartAddr": "0x4104d0",
            "funcEndAddr": "0x41059e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x4104d0 */\n#include <stdint.h>\n \nint64_t fcn_004104d0 (int64_t arg1, uint32_t arg2) {\n    int64_t var_fh;\n    rdi = arg1;\n    rsi = arg2;\n    rbx = *(rsi);\n    rax = *((rbx + 8));\n    rdx = *((rbx + 0x18));\n    if (rax == 0x3ffffffe) {\n        goto label_3;\n    }\n    if (rax == 0x3fffffff) {\n        goto label_4;\n    }\n    if (rdx != 0x3ffffffe) {\n        goto label_2;\n    }\nlabel_1:\n    rdx = *((rbp + 0x58));\n    rax = *((rbp + 0x60));\n    *((rbx + 0x10)) = rdx;\n    *((rbx + 0x18)) = rax;\n    eax = 0;\n    do {\nlabel_0:\n        return rax;\nlabel_3:\n        eax = 1;\n    } while (rdx == 0x3ffffffe);\n    rcx = *((rdi + 0x48));\n    rax = *((rdi + 0x50));\n    *(rbx) = rcx;\n    *((rbx + 8)) = rax;\nlabel_2:\n    eax = 0;\n    if (rdx != 0x3fffffff) {\n        goto label_0;\n    }\n    *((rsp + 0xf)) = al;\n    fcn_00412f80 (rbx + 0x10);\n    eax = *((rsp + 0xf));\n    return rax;\nlabel_4:\n    if (rdx == 0x3fffffff) {\n        goto label_5;\n    }\n    eax = fcn_00412f80 (rbx);\n    rdx = *((rbx + 0x18));\n    if (rdx == 0x3ffffffe) {\n        goto label_1;\n    }\n    goto label_2;\nlabel_5:\n    *(rsi) = 0;\n    eax = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_004105a0",
            "funcStartAddr": "0x4105a0",
            "funcEndAddr": "0x410649",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x4105a0 */\n#include <stdint.h>\n \nint64_t fcn_004105a0 (int64_t arg1) {\n    rdi = arg1;\n    r9 = *((rdi + 8));\n    rsi = r9 - 0x3ffffffe;\n    if (rsi > 1) {\n        if (r9 > 0x3b9ac9ff) {\n            goto label_0;\n        }\n    }\n    rdx = *((rdi + 0x18));\n    r8 = rdx - 0x3ffffffe;\n    if (r8 > 1) {\n        if (rdx > 0x3b9ac9ff) {\n            goto label_0;\n        }\n    }\n    ecx = 0;\n    r10d = 0;\n    if (rsi <= 1) {\n        *(rdi) = 0;\n        ecx = 0;\n        r10d = 1;\n        cl = (r9 == 0x3ffffffe) ? 1 : 0;\n    }\n    if (r8 <= 1) {\n        eax = 0;\n        *((rdi + 0x10)) = 0;\n        r10d = 1;\n        al = (rdx == 0x3ffffffe) ? 1 : 0;\n        ecx += eax;\n    }\n    eax = 0;\n    al = (ecx == 1) ? 1 : 0;\n    eax += r10d;\n    return eax;\nlabel_0:\n    errno_location ();\n    *(rax) = 0x16;\n    eax = 0xffffffff;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00410660",
            "funcStartAddr": "0x410660",
            "funcEndAddr": "0x410a9e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x410660 */\n#include <stdint.h>\n \nuint64_t fcn_00410660 (size_t arg1, char * arg2, uint32_t arg3, int64_t arg7, int64_t arg8) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_20h;\n    int64_t var_30h;\n    uint32_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    int64_t var_50h;\n    int64_t var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    int64_t var_70h;\n    uint32_t var_b8h;\n    uint32_t var_c0h;\n    int64_t var_c8h;\n    uint32_t var_d0h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    ebx = edi;\n    if (rdx == 0) {\n        goto label_10;\n    }\n    __asm (\"movdqu xmm0, xmmword [rdx]\");\n    __asm (\"movdqu xmm1, xmmword [rdx + 0x10]\");\n    *((rsp + 8)) = rdi;\n    *((rsp + 0x10)) = xmm0;\n    *((rsp + 0x20)) = xmm1;\n    eax = fcn_004105a0 (rsp + 0x10);\n    r13d = eax;\n    if (eax < 0) {\n        goto label_11;\n    }\nlabel_1:\n    if (ebx < 0) {\n        if (rbp == 0) {\n            goto label_12;\n        }\n    }\n    eax = imp.__libc_start_main;\n    if (eax >= 0) {\n        if (r13d == 2) {\n            goto label_13;\n        }\n        rsi = *((rsp + 8));\nlabel_2:\n        if (ebx < 0) {\n            goto label_14;\n        }\n        edi = ebx;\n        eax = futimens ();\n        r12d = eax;\n        if (eax <= 0) {\n            goto label_15;\n        }\nlabel_4:\n        errno_location ();\n        *(rax) = 0x26;\n    }\nlabel_7:\n    *(0x00621b2c) = 0xffffffff;\n    *(0x00621b28) = 0xffffffff;\n    if (r13d != 0) {\n        if (r13d != 3) {\n            rdx = rsp + 0x70;\n            if (ebx < 0) {\n                goto label_16;\n            }\n            esi = ebx;\n            edi = 1;\n            eax = fxstat ();\n            al = (eax != 0) ? 1 : 0;\nlabel_3:\n            if (al != 0) {\n                goto label_11;\n            }\n        }\n        if (*((rsp + 8)) == 0) {\n            goto label_17;\n        }\n        r12d = 0;\n        al = fcn_004104d0 (rsp + 0x70, rsp + 8);\n        if (al != 0) {\n            goto label_0;\n        }\n    }\n    rsi = *((rsp + 8));\n    if (rsi == 0) {\n        goto label_17;\n    }\n    rax = *(rsi);\n    rdi = *((rsi + 8));\n    r13 = rsp + 0x30;\n    rcx = 0x20c49ba5e353f7cf;\n    *((rsp + 0x30)) = rax;\n    rax = rdi;\n    rdi >>= 0x3f;\n    rdx:rax = rax * rcx;\n    rax = *((rsi + 0x10));\n    rsi = *((rsi + 0x18));\n    *((rsp + 0x40)) = rax;\n    rax = rsi;\n    rsi >>= 0x3f;\n    rdx >>= 7;\n    rdx -= rdi;\n    *((rsp + 0x38)) = rdx;\n    rdx:rax = rax * rcx;\n    rcx = rdx;\n    rdx = r13;\n    rcx >>= 7;\n    rcx -= rsi;\n    *((rsp + 0x48)) = rcx;\n    if (ebx < 0) {\n        goto label_18;\n    }\n    do {\n        esi = 0;\n        edi = ebx;\n        eax = futimesat ();\n        r12d = eax;\n        if (eax == 0) {\n            goto label_19;\n        }\n        r12d = 0xffffffff;\n        if (rbp != 0) {\n            rax = *((rsp + 8));\n            esi = 0;\n            if (rax != 0) {\n                rdx = *(rax);\n                rax = *((rax + 0x10));\n                rsi = rsp + 0x50;\n                *((rsp + 0x50)) = rdx;\n                *((rsp + 0x58)) = rax;\n            }\n            rdi = rbp;\n            eax = utime ();\n            r12d = eax;\n        }\nlabel_0:\n        eax = r12d;\n        return rax;\nlabel_17:\n        r13d = 0;\n        rdx = r13;\n    } while (ebx >= 0);\nlabel_18:\n    rsi = rbp;\n    edi = 0xffffff9c;\n    eax = futimesat ();\n    r12d = eax;\n    goto label_0;\nlabel_10:\n    *((rsp + 8)) = 0;\n    r13d = 0;\n    goto label_1;\nlabel_13:\n    rdx = rsp + 0x70;\n    if (ebx < 0) {\n        goto label_20;\n    }\n    esi = ebx;\n    edi = 1;\n    eax = fxstat ();\n    al = (eax != 0) ? 1 : 0;\nlabel_5:\n    if (al != 0) {\n        goto label_11;\n    }\n    rsi = *((rsp + 8));\n    if (*((rsi + 8)) == 0x3ffffffe) {\n        goto label_21;\n    }\n    r13d = 3;\n    if (*((rsi + 0x18)) != 0x3ffffffe) {\n        goto label_2;\n    }\n    rax = *((rsp + 0xd0));\n    rdx = *((rsp + 0xc8));\n    *((rsi + 0x18)) = rax;\n    *((rsi + 0x10)) = rdx;\n    goto label_2;\nlabel_16:\n    rsi = rbp;\n    edi = 1;\n    eax = xstat ();\n    al = (eax != 0) ? 1 : 0;\n    goto label_3;\nlabel_14:\n    rdx = rsi;\n    ecx = 0;\n    rsi = rbp;\n    edi = 0xffffff9c;\n    eax = utimensat ();\n    r12d = eax;\n    if (eax > 0) {\n        goto label_4;\n    }\n    if (eax != 0) {\nlabel_15:\n        goto label_22;\n    }\nlabel_6:\n    *(0x00621b2c) = 1;\n    goto label_0;\nlabel_19:\n    if (r13 == 0) {\n        goto label_0;\n    }\n    bpl = (*((r13 + 8)) > 0x7a11f) ? 1 : 0;\n    r14b = (*((r13 + 0x18)) > 0x7a11f) ? 1 : 0;\n    if (bpl != 0) {\n        goto label_23;\n    }\n    if (r14b == 0) {\n        goto label_0;\n    }\nlabel_23:\n    rdx = rsp + 0x70;\n    esi = ebx;\n    edi = 1;\n    eax = fxstat ();\n    if (eax != 0) {\n        goto label_0;\n    }\n    rdx = *((rsp + 0xc8));\n    rdx -= *((r13 + 0x10));\n    rax = *((rsp + 0xb8));\n    __asm (\"movdqa xmm2, xmmword [r13]\");\n    rax -= *(r13);\n    __asm (\"movdqa xmm3, xmmword [r13 + 0x10]\");\n    dl = (rdx == 1) ? 1 : 0;\n    *((rsp + 0x50)) = xmm2;\n    *((rsp + 0x60)) = xmm3;\n    r14d &= edx;\n    if (rax != 1) {\n        goto label_24;\n    }\n    if (bpl == 0) {\n        goto label_24;\n    }\n    if (*((rsp + 0xc0)) != 0) {\n        goto label_24;\n    }\n    *((rsp + 0x58)) = 0;\n    if (r14b != 0) {\n        if (*((rsp + 0xd0)) == 0) {\n            goto label_25;\n        }\n    }\nlabel_9:\n    rdx = rsp + 0x50;\n    esi = 0;\n    edi = ebx;\n    futimesat ();\nlabel_8:\n    r12d = 0;\n    goto label_0;\nlabel_20:\n    rsi = rbp;\n    edi = 1;\n    eax = xstat ();\n    al = (eax != 0) ? 1 : 0;\n    goto label_5;\nlabel_21:\n    rax = *((rsp + 0xc0));\n    rdx = *((rsp + 0xb8));\n    r13d = 3;\n    *(rsi) = rdx;\n    *((rsi + 8)) = rax;\n    goto label_2;\nlabel_12:\n    errno_location ();\n    *(rax) = 9;\nlabel_11:\n    r12d = 0xffffffff;\n    goto label_0;\nlabel_22:\n    rax = errno_location ();\n    if (*(rax) != 0x26) {\n        goto label_6;\n    }\n    goto label_7;\nlabel_24:\n    if (r14b == 0) {\n        goto label_8;\n    }\n    if (*((rsp + 0xd0)) != 0) {\n        goto label_8;\n    }\nlabel_25:\n    *((rsp + 0x68)) = 0;\n    goto label_9;\n}\n"
        },
        {
            "funcName": "fcn_00410aa0",
            "funcStartAddr": "0x410aa0",
            "funcEndAddr": "0x410ab0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x410aa0 */\n#include <stdint.h>\n \nvoid fcn_00410aa0 (int64_t arg1, int64_t arg2, int64_t arg7, int64_t arg8) {\n    rdi = arg1;\n    rsi = arg2;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    rdx = rsi;\n    rsi = rdi;\n    edi = 0xffffffff;\n    return void (*0x410660)() ();\n}\n"
        },
        {
            "funcName": "fcn_00410ab0",
            "funcStartAddr": "0x410ab0",
            "funcEndAddr": "0x410cf8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x410ab0 */\n#include <stdint.h>\n \nuint64_t fcn_00410ab0 (int64_t arg1, int64_t arg2, int64_t arg7, int64_t arg8) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_20h;\n    int64_t var_30h;\n    int64_t var_48h;\n    int64_t var_78h;\n    int64_t var_80h;\n    int64_t var_88h;\n    int64_t var_90h;\n    rdi = arg1;\n    rsi = arg2;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    r12 = rdi;\n    if (rsi == 0) {\n        goto label_7;\n    }\n    __asm (\"movdqu xmm0, xmmword [rsi]\");\n    __asm (\"movdqu xmm1, xmmword [rsi + 0x10]\");\n    *((rsp + 8)) = rdi;\n    *((rsp + 0x10)) = xmm0;\n    *((rsp + 0x20)) = xmm1;\n    eax = fcn_004105a0 (rsp + 0x10);\n    ebx = eax;\n    if (eax < 0) {\n        goto label_3;\n    }\n    eax = imp.__libc_start_main;\n    if (eax < 0) {\n        goto label_6;\n    }\n    if (ebx == 2) {\n        goto label_8;\n    }\n    rdx = *((rsp + 8));\n    do {\nlabel_4:\n        ecx = 0x100;\n        rsi = r12;\n        edi = 0xffffff9c;\n        eax = utimensat ();\n        if (eax <= 0) {\n            goto label_9;\n        }\n        errno_location ();\n        *(rax) = 0x26;\nlabel_6:\n        *(0x00621b28) = 0xffffffff;\n        if (ebx == 0) {\n            goto label_10;\n        }\n        if (ebx != 3) {\n            goto label_11;\n        }\n        if (*((rsp + 8)) != 0) {\nlabel_2:\n            ebp = 0;\n            al = fcn_004104d0 (rsp + 0x30, rsp + 8);\n            if (al != 0) {\n                goto label_1;\n            }\n        }\nlabel_0:\n        eax = *((rsp + 0x48));\n        eax &= 0xf000;\n        if (eax == 0xa000) {\n            goto label_12;\n        }\n        eax = fcn_00410660 (0xffffffff, r12, *((rsp + 8)), rcx, r8);\nlabel_1:\n        eax = ebp;\n        return rax;\nlabel_7:\n        ecx = imp.__libc_start_main;\n        edx = 0;\n        ebx = 0;\n        *((rsp + 8)) = 0;\n    } while (ecx >= 0);\n    *(0x00621b28) = 0xffffffff;\nlabel_10:\n    rdx = rsp + 0x30;\n    rsi = r12;\n    edi = 1;\n    eax = lxstat ();\n    if (eax == 0) {\n        goto label_0;\n    }\n    do {\nlabel_3:\n        goto label_1;\n        if (eax != 0) {\nlabel_9:\n            goto label_13;\n        }\nlabel_5:\n        *(0x00621b2c) = 1;\n        eax = ebp;\n        *(0x00621b28) = 1;\n        return rax;\nlabel_11:\n        rdx = rsp + 0x30;\n        rsi = r12;\n        edi = 1;\n        eax = lxstat ();\n    } while (eax != 0);\n    if (*((rsp + 8)) != 0) {\n        goto label_2;\n    }\n    goto label_0;\nlabel_8:\n    rdx = rsp + 0x30;\n    rsi = r12;\n    edi = 1;\n    eax = lxstat ();\n    if (eax != 0) {\n        goto label_3;\n    }\n    rdx = *((rsp + 8));\n    if (*((rdx + 8)) == 0x3ffffffe) {\n        goto label_14;\n    }\n    ebx = 3;\n    if (*((rdx + 0x18)) != 0x3ffffffe) {\n        goto label_4;\n    }\n    rax = *((rsp + 0x90));\n    rcx = *((rsp + 0x88));\n    *((rdx + 0x18)) = rax;\n    *((rdx + 0x10)) = rcx;\n    goto label_4;\nlabel_14:\n    rax = *((rsp + 0x80));\n    rcx = *((rsp + 0x78));\n    ebx = 3;\n    *(rdx) = rcx;\n    *((rdx + 8)) = rax;\n    goto label_4;\nlabel_13:\n    rax = errno_location ();\n    if (*(rax) != 0x26) {\n        goto label_5;\n    }\n    goto label_6;\nlabel_12:\n    errno_location ();\n    *(rax) = 0x26;\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_00410d00",
            "funcStartAddr": "0x410d00",
            "funcEndAddr": "0x41eda0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x410d00 */\n#include <stdint.h>\n \nvoid fcn_00410d00 (int64_t arg_20h, int64_t arg_30h, int64_t arg_8h_2, int64_t arg_10h, int64_t arg_8h, int64_t arg_8h_3, int64_t arg_10h_2, int64_t arg_18h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_30h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    eax = abort ();\n    r12 = r9;\n    rbx = r8;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    r9 = rcx;\n    r8 = rdx;\n    rcx = rsi;\n    edx = \"%s (%s) %s\\n\";\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    do {\n        edx = 5;\n        rax = dcgettext (0, 0x41a212);\n        r8d = 0x7e1;\n        edx = \"Copyright %s %d Free Software Foundation, Inc.\";\n        rdi = rbp;\n        rcx = rax;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        edx = 5;\n        rax = dcgettext (0, \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\");\n        rsi = rbp;\n        rdi = rax;\n        eax = fputs_unlocked ();\n        if (r12 > 9) {\n            goto label_2;\n        }\n        /* switch table (10 cases) at 0x41a4f8 */\nlabel_1:\n        r8 = rcx;\n        esi = 1;\n        rcx = rdx;\n        eax = 0;\n        edx = \"%s %s\\n\";\n        fprintf_chk ();\n    } while (1);\n    r9 = *((rbx + 0x38));\n    rax = *((rbx + 0x10));\n    edx = 5;\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    r15 = *((rbx + 0x20));\n    *((rsp + 0x10)) = r9;\n    r14 = *((rbx + 0x18));\n    rbx = *(rbx);\n    *(rsp) = rax;\n    *((rsp + 8)) = r8;\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n    do {\n        r9 = *((rsp + 0x18));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        r9 = *((rsp + 0x30));\n        r8 = *((rsp + 0x38));\n        fprintf_chk ();\n        return rax;\n        r10 = *((rbx + 0x40));\n        r9 = *((rbx + 0x38));\n        edx = 5;\n        rax = *((rbx + 0x10));\n        r8 = *((rbx + 8));\n        r13 = *((rbx + 0x30));\n        r12 = *((rbx + 0x28));\n        *((rsp + 0x18)) = r10;\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        *((rsp + 0x10)) = r9;\n        *(rsp) = rax;\n        rbx = *(rbx);\n        *((rsp + 8)) = r8;\nlabel_0:\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        r10 = *((rsp + 0x18));\n    } while (1);\n    rbx = *(rbx);\n    edx = 5;\n    rax = dcgettext (0, \"Written by %s.\\n\");\n    rdi = rbp;\n    esi = 1;\n    rcx = rbx;\n    rdx = rax;\n    eax = 0;\n    void (*0x402f90)() ();\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s and %s.\\n\");\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x402f90)() ();\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, and %s.\\n\");\n    r9 = r13;\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x402f90)() ();\n    edx = 5;\n    r14 = *((rbx + 0x18));\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\nand %s.\\n\");\n    do {\n        rdx = rax;\n        r9 = r13;\n        r8 = r12;\n        rcx = rbx;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r15 = *((rbx + 0x20));\n        edx = 5;\n        r14 = *((rbx + 0x18));\n        r13 = *((rbx + 0x10));\n        r12 = *((rbx + 8));\n        rbx = *(rbx);\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n    } while (1);\n    r8 = *((rbx + 8));\n    r12 = *((rbx + 0x28));\n    edx = 5;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *(rsp) = r8;\n    r13 = *((rbx + 0x10));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n    r9 = r13;\n    do {\n        r8 = *((rsp + 0x20));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r9 = *((rbx + 0x10));\n        r13 = *((rbx + 0x30));\n        edx = 5;\n        r12 = *((rbx + 0x28));\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        r8 = *((rbx + 8));\n        *((rsp + 8)) = r9;\n        rbx = *(rbx);\n        *(rsp) = r8;\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n        r9 = *((rsp + 0x28));\n    } while (1);\nlabel_2:\n    r10 = *((rbx + 0x40));\n    r9 = *((rbx + 0x38));\n    edx = 5;\n    esi = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    rax = *((rbx + 0x10));\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    *((rsp + 0x18)) = r10;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *((rsp + 0x10)) = r9;\n    *(rsp) = rax;\n    rbx = *(rbx);\n    *((rsp + 8)) = r8;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00411160",
            "funcStartAddr": "0x411160",
            "funcEndAddr": "0x41121c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x411160 */\n#include <stdint.h>\n \nuint64_t fcn_00411160 (int64_t arg_b0h, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_70h;\n    int64_t var_90h;\n    int64_t var_98h;\n    r8 = arg5;\n    r9 = arg6;\n    r11d = 0;\n    rax = rsp + 0xb0;\n    *((rsp + 0x90)) = r8;\n    r10 = rsp + 0xb0;\n    r8d = 0x20;\n    *((rsp + 0x10)) = rax;\n    rax = rsp + 0x70;\n    *((rsp + 0x98)) = r9;\n    r9d = 0;\n    *((rsp + 8)) = 0x20;\n    *((rsp + 0x18)) = rax;\n    while (r8d <= 0x2f) {\n        eax = r8d;\n        r11 = rsp + 0x70;\n        r8d += 8;\n        rax += r11;\n        r11d = 1;\n        rax = *(rax);\n        *((rsp + r9*8 + 0x20)) = rax;\n        if (rax == 0) {\n            goto label_1;\n        }\nlabel_0:\n        r9++;\n        if (r9 == 0xa) {\n            goto label_1;\n        }\n    }\n    rax = r10;\n    r10 += 8;\n    rax = *(rax);\n    *((rsp + r9*8 + 0x20)) = rax;\n    if (rax != 0) {\n        goto label_0;\n    }\nlabel_1:\n    if (r11b != 0) {\n        *((rsp + 8)) = r8d;\n    }\n    fcn_00410d00 (rdi, rsi, rdx, rcx, rsp + 0x20, r9);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004112a0",
            "funcStartAddr": "0x4112a0",
            "funcEndAddr": "0x4112d8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x4112a0 */\n#include <stdint.h>\n \nuint32_t fcn_004112a0 (void) {\n    if (*(0x00621b31) != 0) {\n        eax = *(0x00621b30);\n        return eax;\n    }\n    eax = geteuid ();\n    *(0x00621b31) = 1;\n    al = (eax == 0) ? 1 : 0;\n    *(0x00621b30) = al;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_004112e0",
            "funcStartAddr": "0x4112e0",
            "funcEndAddr": "0x4112fa",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x4112e0 */\n#include <stdint.h>\n \nuint64_t fcn_004112e0 (void * arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = malloc (rdi);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    return fcn_00411530 ();\n}\n"
        },
        {
            "funcName": "fcn_00411340",
            "funcStartAddr": "0x411340",
            "funcEndAddr": "0x411376",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x411340 */\n#include <stdint.h>\n \nuint64_t fcn_00411340 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rsi;\n    if (rsi == 0) {\n        if (rdi != 0) {\n            goto label_0;\n        }\n    }\n    rax = realloc (rdi, rbx);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_1;\n        }\n    }\n    return rax;\nlabel_0:\n    eax = free (rdi);\n    eax = 0;\n    return rax;\nlabel_1:\n    return fcn_00411530 ();\n}\n"
        },
        {
            "funcName": "fcn_004114e0",
            "funcStartAddr": "0x4114e0",
            "funcEndAddr": "0x411508",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x4114e0 */\n#include <stdint.h>\n \nuint64_t fcn_004114e0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdi = rsi;\n    rbx = rsi;\n    rax = fcn_004112e0 (rdi);\n    rdx = rbx;\n    rsi = rbp;\n    rdi = rax;\n    return memcpy ();\n}\n"
        },
        {
            "funcName": "fcn_00411510",
            "funcStartAddr": "0x411510",
            "funcEndAddr": "0x411523",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x411510 */\n#include <stdint.h>\n \nvoid fcn_00411510 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    strlen (rdi);\n    rdi = rbx;\n    rsi = rax + 1;\n    return void (*0x4114e0)() ();\n}\n"
        },
        {
            "funcName": "fcn_00411530",
            "funcStartAddr": "0x411530",
            "funcEndAddr": "0x411561",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x411530 */\n#include <stdint.h>\n \nuint64_t fcn_00411530 (void) {\n    edx = 5;\n    rax = dcgettext (0, \"memory exhausted\");\n    rcx = rax;\n    eax = 0;\n    error (*(0x0061f468), 0, 0x41aa9b);\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_00411570",
            "funcStartAddr": "0x411570",
            "funcEndAddr": "0x411994",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x411570 */\n#include <stdint.h>\n \nuint64_t fcn_00411570 (int64_t arg1, int64_t arg2, uint32_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_8h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    if (edx > 0x24) {\n        goto label_13;\n    }\n    r15 = rsi;\n    rax = rsp + 0x18;\n    *(rsp) = edx;\n    r14 = rcx;\n    r13 = r8;\n    if (rsi == 0) {\n        r15 = rax;\n    }\n    errno_location ();\n    *(rax) = 0;\n    r12 = rax;\n    ebx = *(rbp);\n    rax = ctype_b_loc ();\n    edx = *(rsp);\n    rsi = *(rax);\n    rax = rbp;\n    while ((*((rsi + rcx*2 + 1)) & 0x20) != 0) {\n        rax++;\n        ebx = *(rax);\n        ecx = (int32_t) bl;\n    }\n    if (bl == 0x2d) {\n        goto label_1;\n    }\n    rax = strtoul (rbp, r15, rdx);\n    r8 = *(r15);\n    rbx = rax;\n    if (r8 == rbp) {\n        goto label_14;\n    }\n    eax = *(r12);\n    if (eax != 0) {\n        goto label_15;\n    }\n    ebp = 0;\n    do {\n        if (r13 != 0) {\n            r12d = *(r8);\n            if (r12b != 0) {\n                goto label_16;\n            }\n        }\nlabel_2:\n        *(r14) = rbx;\nlabel_0:\n        eax = ebp;\n        return rax;\nlabel_15:\n    } while (eax == 0x22);\n    do {\nlabel_1:\n        goto label_0;\nlabel_14:\n        *(rsp) = r8;\n    } while (r13 == 0);\n    r12d = *(rbp);\n    if (r12b == 0) {\n        goto label_1;\n    }\n    esi = (int32_t) r12b;\n    ebp = 0;\n    ebx = 1;\n    rax = strchr (r13, rsi);\n    r8 = *(rsp);\n    if (rax == 0) {\n        goto label_1;\n    }\nlabel_4:\n    edx = r12 - 0x45;\n    if (dl <= 0x2f) {\n        rax = 0x814400308945;\n        *(rsp) = dl;\n        if (((rax >> rdx) & 1) >= 0) {\n            goto label_17;\n        }\n        *((rsp + 8)) = r8;\n        rax = strchr (r13, 0x30);\n        r8 = *((rsp + 8));\n        if (rax == 0) {\n            goto label_17;\n        }\n        eax = *((r8 + 1));\n        if (al == 0x44) {\n            goto label_18;\n        }\n        if (al == 0x69) {\n            goto label_19;\n        }\n        edx = *(rsp);\n        if (al == 0x42) {\n            goto label_18;\n        }\n        /* switch table (67 cases) at 0x41a5d8 */\n    }\nlabel_17:\n    esi = 1;\n    edx = 0x400;\nlabel_7:\n    r12d -= 0x42;\n    if (r12b > 0x35) {\n        goto label_20;\n    }\n    r12d = (int32_t) r12b;\n    /* switch table (54 cases) at 0x41a758 */\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    rax = rbx;\n    rdx:rax = rax * rcx;\n    if (r12b overflow 0x35) {\n        goto label_5;\n    }\n    rdx:rax = rax * rcx;\n    if (r12b overflow 0x35) {\n        goto label_5;\n    }\n    rbx = rax;\n    do {\nlabel_3:\n        rsi = (int64_t) esi;\n        eax = ebp;\n        r8 += rsi;\n        eax |= 2;\n        *(r15) = r8;\n        if (*(r8) != 0) {\n        }\n        goto label_2;\n        esi = 1;\n        edx = 0x400;\n        rax = rbx;\n        rdx:rax = rax * rdx;\n        rbx = rax;\n    } while (*(r8) !overflow 0);\nlabel_5:\n    rbx |= 0xffffffffffffffff;\n    goto label_3;\nlabel_16:\n    esi = (int32_t) r12b;\n    *(rsp) = r8;\n    rax = strchr (r13, rsi);\n    r8 = *(rsp);\n    if (rax != 0) {\n        goto label_4;\n    }\nlabel_20:\n    *(r14) = rbx;\n    ebp |= 2;\n    goto label_0;\n    if (rbx < 0) {\n        goto label_5;\n    }\n    rbx += rbx;\n    goto label_3;\n    esi = 1;\n    rax = rbx;\n    rax >>= 0x37;\n    if (rax != 0) {\n        goto label_5;\n    }\n    rbx <<= 9;\n    goto label_3;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 7;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (rbx overflow 0) {\n            goto label_21;\n        }\nlabel_8:\n        edi--;\n    } while (edi != 0);\nlabel_6:\n    ebp |= r9d;\n    goto label_3;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 8;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (ebp overflow 0) {\n            goto label_22;\n        }\nlabel_11:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 4;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_23;\n        }\nlabel_9:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 5;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_24;\n        }\nlabel_12:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 6;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_25;\n        }\nlabel_10:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    rax = rbx;\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rbx = rax;\n    eax = 0;\n    ebp |= eax;\n    goto label_3;\n    rax = rbx;\n    rax >>= 0x36;\n    if (rax != 0) {\n        goto label_5;\n    }\n    rbx <<= 0xa;\n    goto label_3;\n    esi = 1;\n    goto label_3;\nlabel_18:\n    esi = 2;\n    edx = 0x3e8;\n    goto label_7;\nlabel_19:\n    esi = 0;\n    edx = 0x400;\n    sil = (*((r8 + 2)) == 0x42) ? 1 : 0;\n    esi = rsi + rsi + 1;\n    goto label_7;\nlabel_21:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_8;\nlabel_26:\n    eax = 1;\n    rbx |= 0xffffffffffffffff;\n    ebp |= eax;\n    goto label_3;\nlabel_23:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_9;\nlabel_25:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_10;\nlabel_22:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_11;\nlabel_24:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_12;\nlabel_13:\n    return assert_fail (\"0 <= strtol_base && strtol_base <= 36\", \"lib/xstrtol.c\", 0x60, \"xstrtoul\");\n}\n"
        },
        {
            "funcName": "fcn_004119a0",
            "funcStartAddr": "0x4119a0",
            "funcEndAddr": "0x411a09",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x4119a0 */\n#include <stdint.h>\n \nuint64_t fcn_004119a0 (void) {\n    int64_t var_8h;\n    edx = 0xa;\n    ebx = 0;\n    rcx = stdin;\n    rsi = rsp + 8;\n    rdi = rsp;\n    *(rsp) = 0;\n    *((rsp + 8)) = 0;\n    rax = getdelim ();\n    if (rax <= 0) {\n        goto label_0;\n    }\n    rdi = *(rsp);\n    rax = rdi + rax - 1;\n    while (1) {\n        eax = rpmatch ();\n        bl = (eax > 0) ? 1 : 0;\nlabel_0:\n        free (*(rsp));\n        eax = ebx;\n        return rax;\n        *(rax) = 0;\n        rdi = *(rsp);\n    }\n}\n"
        },
        {
            "funcName": "fcn_00411a10",
            "funcStartAddr": "0x411a10",
            "funcEndAddr": "0x411b45",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x411a10 */\n#include <stdint.h>\n \nuint64_t fcn_00411a10 (int64_t arg_70h, int64_t arg1, uint32_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_30h;\n    int64_t var_38h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    do {\nlabel_2:\n        rax = rsp + 0x70;\n        *((rsp + 0x30)) = rdx;\n        *((rsp + 0x10)) = rax;\n        rax = rsp + 0x20;\n        *((rsp + 0x38)) = rcx;\n        *((rsp + 8)) = 0x10;\n        *((rsp + 0x18)) = rax;\n        if (esi != 0x406) {\n            goto label_4;\n        }\n        r12d = *((rax + 0x10));\n        eax = imp.__libc_start_main;\n        *((rsp + 8)) = 0x18;\n        edx = r12d;\n        if (eax >= 0) {\n            eax = 0;\n            eax = fcntl ();\n            ebx = eax;\n            if (eax < 0) {\n                goto label_5;\n            }\nlabel_1:\n            *(0x00621b34) = 1;\nlabel_0:\n            eax = ebx;\n            return rax;\n        }\n        eax = 0;\n        eax = fcn_00411a10 (rdi, 0, rdx, rcx, r8);\n    } while (1);\n    ebx = eax;\n    if (eax < 0) {\n        goto label_0;\n    }\n    if (*(0x00621b34) != 0xffffffff) {\n        goto label_0;\n    }\nlabel_3:\n    eax = 0;\n    esi = 1;\n    edi = ebx;\n    eax = fcntl ();\n    if (eax < 0) {\n        goto label_6;\n    }\n    eax |= 1;\n    esi = 2;\n    edi = ebx;\n    edx = eax;\n    eax = 0;\n    eax = fcntl ();\n    if (eax != 0xffffffff) {\n        goto label_0;\n    }\nlabel_6:\n    rax = errno_location ();\n    ebx = 0xffffffff;\n    r12d = *(rax);\n    close (ebx);\n    *(rbp) = r12d;\n    goto label_0;\nlabel_4:\n    rax = *((rsp + 0x18));\n    rdx = *((rax + 0x10));\n    eax = 0;\n    eax = fcntl ();\n    ebx = eax;\n    return rax;\nlabel_5:\n    rax = errno_location ();\n    if (*(rax) != 0x16) {\n        goto label_1;\n    }\n    eax = 0;\n    eax = fcn_00411a10 (ebp, 0, r12d, rcx, r8);\n    goto label_2;\n    ebx = eax;\n    if (eax < 0) {\n        goto label_0;\n    }\n    *(0x00621b34) = 0xffffffff;\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_00411b50",
            "funcStartAddr": "0x411b50",
            "funcEndAddr": "0x411b90",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x411b50 */\n#include <stdint.h>\n \nuint32_t fcn_00411b50 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    if (rdi != 0) {\n        eax = freading ();\n        if (eax == 0) {\n            goto label_0;\n        }\n        if ((*(rbx) & 0x100) != 0) {\n            goto label_1;\n        }\n    }\nlabel_0:\n    rdi = rbx;\n    void (*0x402d30)() ();\nlabel_1:\n    fcn_00411bc0 (rbx, 0, 1);\n    rdi = rbx;\n    return fflush ();\n}\n"
        },
        {
            "funcName": "fcn_00411b90",
            "funcStartAddr": "0x411b90",
            "funcEndAddr": "0x411bb8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x411b90 */\n#include <stdint.h>\n \nint64_t fcn_00411b90 (uint32_t arg1) {\n    rdi = arg1;\n    eax = 0;\n    rcx = *((rdi + 0x20));\n    if (*((rdi + 0x28)) <= rcx) {\n        rax = *((rdi + 0x10));\n        rax -= *((rdi + 8));\n        if ((*(rdi) & 0x100) == 0) {\n            goto label_0;\n        }\n        rdx = *((rdi + 0x58));\n        rdx -= *((rdi + 0x48));\n        rax += rdx;\n    }\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00411bc0",
            "funcStartAddr": "0x411bc0",
            "funcEndAddr": "0x411c17",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x411bc0 */\n#include <stdint.h>\n \nint64_t fcn_00411bc0 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rax = *((rdi + 8));\n    while (*((rdi + 0x28)) != rax) {\nlabel_0:\n        void (*0x402eb0)() ();\n        rax = *((rdi + 0x20));\n    }\n    if (*((rdi + 0x48)) != 0) {\n        goto label_0;\n    }\n    r12d = edx;\n    rbx = rdi;\n    eax = fileno (rdi);\n    edx = r12d;\n    rsi = rbp;\n    edi = eax;\n    rax = lseek ();\n    if (rax != -1) {\n        *(rbx) &= 0xffffffef;\n        *((rbx + 0x90)) = rax;\n        eax = 0;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00411c20",
            "funcStartAddr": "0x411c20",
            "funcEndAddr": "0x411cff",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x411c20 */\n#include <stdint.h>\n \nuint64_t fcn_00411c20 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r11 = rdi + 8;\n    r12d = *((rsi + 0x2c));\n    ebp = *(rsi);\n    rbx = *((rsi + 0x30));\n    r9d = r12d;\n    r10d = ebp;\n    r8 = rbx;\nlabel_1:\n    if (r10d <= r8d) {\n        goto label_2;\n    }\nlabel_0:\n    if (r9d >= r8d) {\n        goto label_2;\n    }\n    r14d = r10d;\n    edx = r8d;\n    r14d -= r8d;\n    edx -= r9d;\n    if (r14d <= edx) {\n        goto label_3;\n    }\n    rcx = (int64_t) r9d;\n    r10d -= edx;\n    edx--;\n    rdx += rcx;\n    rax = rdi + rcx*8;\n    r13 = r11 + rdx*8;\n    rdx = (int64_t) r10d;\n    rdx -= rcx;\n    do {\n        rcx = *(rax);\n        r14 = *((rax + rdx*8));\n        *(rax) = r14;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (r13 != rax);\n    if (r10d > r8d) {\n        goto label_0;\n    }\nlabel_2:\n    eax = ebp;\n    *((rsi + 0x30)) = ebp;\n    eax -= r8d;\n    r12d += eax;\n    *((rsi + 0x2c)) = r12d;\n    r12 = rbx;\n    r13 = rbx;\n    r14 = rbx;\n    r15 = rbx;\n    return rax;\nlabel_3:\n    rdx = (int64_t) r9d;\n    ecx = r14 - 1;\n    rcx += rdx;\n    rax = rdi + rdx*8;\n    r13 = r11 + rcx*8;\n    rcx = rbx;\n    rcx -= rdx;\n    rdx = rcx;\n    do {\n        rcx = *(rax);\n        r15 = *((rax + rdx*8));\n        *(rax) = r15;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (rax != r13);\n    r9d += r14d;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00411d00",
            "funcStartAddr": "0x411d00",
            "funcEndAddr": "0x41231c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x411d00 */\n#include <stdint.h>\n \nint64_t fcn_00411d00 (int64_t arg_90h, int64_t arg_98h, int64_t arg_a0h, signed int64_t arg1, int64_t arg2, char * arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_ch;\n    int64_t var_10h;\n    void * ptr;\n    int64_t var_20h;\n    int64_t var_28h;\n    char * s;\n    int64_t var_38h;\n    int64_t c;\n    signed int64_t var_40h;\n    int64_t var_44h;\n    void * var_48h;\n    size_t nmeb;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rax = *((rsp + 0x90));\n    *((rsp + 0x40)) = edi;\n    *((rsp + 0x28)) = rsi;\n    r14 = *((rax + 0x20));\n    *((rsp + 0x30)) = rdx;\n    *(rsp) = rcx;\n    eax = *(r14);\n    *((rsp + 0x20)) = r8;\n    *((rsp + 0xc)) = r9d;\n    *((rsp + 0x3f)) = al;\n    if (al == 0x3d) {\n        goto label_11;\n    }\n    if (al == 0) {\n        goto label_11;\n    }\n    do {\n        rbp++;\n        eax = *(rbp);\n        if (al == 0) {\n            goto label_12;\n        }\n    } while (al != 0x3d);\nlabel_12:\n    r13 = rbp;\n    r13 -= r14;\nlabel_6:\n    rbx = *(rsp);\n    r12d = 0;\n    rax = *(rbx);\n    *((rsp + 0x10)) = rax;\n    r15 = rax;\n    if (rax != 0) {\n        goto label_13;\n    }\n    goto label_14;\n    do {\n        r12 = (int64_t) r8d;\nlabel_13:\n        eax = strncmp (r15, r14, r13);\n        if (eax == 0) {\n            rax = strlen (r15);\n            if (rax == r13) {\n                goto label_15;\n            }\n        }\n        rbx += 0x20;\n        r15 = *(rbx);\n        r8d = r12 + 1;\n    } while (r15 != 0);\n    rcx = *(rsp);\n    *((rsp + 0x4c)) = r8d;\n    r9d = 0;\n    ebx = 0;\n    *((rsp + 0x44)) = 0xffffffff;\n    r15 = r9;\n    *((rsp + 0x38)) = 0;\n    *((rsp + 0x48)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x10)) = rbp;\n    do {\n        eax = strncmp (*((rsp + 0x10)), r14, r13);\n        if (eax == 0) {\n            if (rbx == 0) {\n                goto label_16;\n            }\n            eax = *((rsp + 0xc));\n            if (eax == 0) {\n                goto label_17;\n            }\nlabel_0:\n            r11d = *((rsp + 0x38));\n            if (r11d != 0) {\n                goto label_1;\n            }\n            r10d = *((rsp + 0x98));\n            if (r10d == 0) {\n                goto label_18;\n            }\n            if (*((rsp + 0x18)) == 0) {\n                goto label_19;\n            }\nlabel_3:\n            rax = *((rsp + 0x18));\n            *((rax + r15)) = 1;\n        }\nlabel_1:\n        rbp += 0x20;\n        rdi = *(rbp);\n        r15++;\n    } while (rdi != 0);\n    rbp = *((rsp + 0x10));\n    if (*((rsp + 0x18)) != 0) {\n        goto label_20;\n    }\n    r9d = *((rsp + 0x38));\n    if (r9d != 0) {\n        goto label_20;\n    }\n    if (rbx == 0) {\nlabel_14:\n        eax = *((rsp + 0xc));\n        if (eax != 0) {\n            rax = *((rsp + 0x90));\n            rcx = *((rsp + 0x28));\n            rax = *(rax);\n            rax = *((rcx + rax*8));\n            if (*((rax + 1)) == 0x2d) {\n                goto label_21;\n            }\n            esi = *((rsp + 0x3f));\n            rax = strchr (*((rsp + 0x30)), rsi);\n            rdx = rax;\n            eax = 0xffffffff;\n            if (rdx != 0) {\n                goto label_5;\n            }\n        }\nlabel_21:\n        ecx = *((rsp + 0x98));\n        if (ecx != 0) {\n            goto label_22;\n        }\nlabel_4:\n        rax = *((rsp + 0x90));\n        *((rax + 0x20)) = 0;\n        *(rax)++;\n        *((rax + 8)) = 0;\n        eax = 0x3f;\n        return rax;\n    }\n    r12d = *((rsp + 0x44));\nlabel_15:\n    rax = *((rsp + 0x90));\n    rcx = *((rsp + 0x90));\n    edx = *(rax);\n    *((rcx + 0x20)) = 0;\n    eax = rdx + 1;\n    *(rcx) = eax;\n    ecx = *((rbx + 8));\n    if (*(rbp) != 0) {\n        goto label_23;\n    }\n    if (ecx == 1) {\n        goto label_24;\n    }\nlabel_2:\n    rax = *((rsp + 0x20));\n    if (rax != 0) {\n        *(rax) = r12d;\n    }\n    rdx = *((rbx + 0x10));\n    eax = *((rbx + 0x18));\n    if (rdx != 0) {\n        *(rdx) = eax;\n        eax = 0;\n    }\nlabel_5:\n    return rax;\nlabel_17:\n    eax = *((rbp + 8));\n    if (*((rbx + 8)) != eax) {\n        goto label_0;\n    }\n    rax = *((rbp + 0x10));\n    if (*((rbx + 0x10)) != rax) {\n        goto label_0;\n    }\n    eax = *((rbp + 0x18));\n    if (*((rbx + 0x18)) != eax) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_23:\n    if (ecx == 0) {\n        goto label_25;\n    }\n    rax = *((rsp + 0x90));\n    rbp++;\n    *((rax + 0x10)) = rbp;\n    goto label_2;\nlabel_16:\n    *((rsp + 0x44)) = r15d;\n    rbx = rbp;\n    goto label_1;\nlabel_18:\n    *((rsp + 0x38)) = 1;\n    if (*((rsp + 0x18)) == 0) {\n        goto label_1;\n    }\n    goto label_3;\nlabel_22:\n    rax = *((rsp + 0x28));\n    edx = 5;\n    rbx = *(rax);\n    rax = dcgettext (0, \"%s: unrecognized option '%s%s'\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r14;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbx;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_4;\nlabel_20:\n    r8d = *((rsp + 0x98));\n    if (r8d != 0) {\n        edi = *((rsp + 0x38));\n        if (edi == 0) {\n            goto label_26;\n        }\n        rax = *((rsp + 0x28));\n        edx = 5;\n        rbx = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' is ambiguous\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r14;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbx;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        rax = *((rsp + 0x90));\n        r14 = *((rax + 0x20));\n    }\nlabel_9:\n    esi = *((rsp + 0x48));\n    if (esi != 0) {\n        goto label_27;\n    }\nlabel_7:\n    rax = strlen (r14);\n    r14 += rax;\n    rax = *((rsp + 0x90));\n    *((rax + 0x20)) = r14;\n    *(rax)++;\n    *((rax + 8)) = 0;\n    eax = 0x3f;\n    goto label_5;\nlabel_24:\n    if (eax >= *((rsp + 0x40))) {\n        goto label_28;\n    }\n    rcx = *((rsp + 0x90));\n    edx += 2;\n    rax = (int64_t) eax;\n    *(rcx) = edx;\n    rcx = *((rsp + 0x28));\n    rax = *((rcx + rax*8));\n    rcx = *((rsp + 0x90));\n    *((rcx + 0x10)) = rax;\n    goto label_2;\nlabel_11:\n    r13d = 0;\n    goto label_6;\nlabel_25:\n    edx = *((rsp + 0x98));\n    while (1) {\n        eax = *((rbx + 0x18));\n        rcx = *((rsp + 0x90));\n        *((rcx + 8)) = eax;\n        eax = 0x3f;\n        goto label_5;\nlabel_19:\n        rdi = *((rsp + 0x4c));\n        rax = calloc (rdi, 1);\n        *((rsp + 0x18)) = rax;\n        if (rax == 0) {\n            goto label_29;\n        }\n        rax = *((rsp + 0x44));\n        rcx = *((rsp + 0x18));\n        *((rsp + 0x48)) = 1;\n        *((rcx + rax)) = 1;\n        goto label_3;\n        rax = *((rsp + 0x28));\n        r12 = *(rbx);\n        edx = 5;\n        rbp = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' doesn't allow an argument\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r12;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_27:\n    free (*((rsp + 0x18)));\n    goto label_7;\nlabel_28:\n    eax = *((rsp + 0x98));\n    if (eax != 0) {\n        goto label_30;\n    }\nlabel_10:\n    eax = *((rbx + 0x18));\n    rcx = *((rsp + 0x90));\n    *((rcx + 8)) = eax;\n    rax = *((rsp + 0x30));\n    al = (*(rax) != 0x3a) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = rax * 5;\n    goto label_5;\nlabel_26:\n    rdi = stderr;\n    flockfile ();\n    rax = *((rsp + 0x90));\n    edx = 5;\n    rbx = *((rax + 0x20));\n    rax = *((rsp + 0x28));\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' is ambiguous; possibilities:\");\n    rdi = stderr;\n    r9 = rbx;\n    r8 = *((rsp + 0xa0));\n    rcx = rbp;\n    rdx = rax;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    rax = *((rsp + 0x18));\n    rdi = stderr;\n    rbx = *(rsp);\n    r12 = rax + r12 + 1;\n    while (*(rbp) == 0) {\nlabel_8:\n        rbp++;\n        rbx += 0x20;\n        if (r12 == rbp) {\n            goto label_31;\n        }\n    }\n    r8 = *(rbx);\n    edx = \" '%s%s';\n    esi = 1;\n    eax = 0;\n    rcx = *((rsp + 0xa0));\n    fprintf_chk ();\n    rdi = stderr;\n    goto label_8;\nlabel_31:\n    fputc (0xa, rdi);\n    rdi = stderr;\n    funlockfile ();\n    rax = *((rsp + 0x90));\n    r14 = *((rax + 0x20));\n    goto label_9;\nlabel_30:\n    rax = *((rsp + 0x28));\n    r12 = *(rbx);\n    edx = 5;\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' requires an argument\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r12;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbp;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_10;\nlabel_29:\n    *((rsp + 0x38)) = 1;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00412320",
            "funcStartAddr": "0x412320",
            "funcEndAddr": "0x4128e6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x412320 */\n#include <stdint.h>\n \nuint64_t fcn_00412320 (int64_t arg_70h, int64_t arg_78h, int64_t arg1, int64_t arg2, int64_t arg3, uint32_t arg4, int64_t arg5, int64_t arg6) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_1ch;\n    int64_t var_20h;\n    int64_t var_28h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rbx = *((rsp + 0x70));\n    *((rsp + 8)) = rcx;\n    *((rsp + 0x10)) = r8;\n    r13d = *((rbx + 4));\n    if (edi <= 0) {\n        goto label_16;\n    }\n    eax = *(rbx);\n    r12 = rsi;\n    r15 = rdx;\n    *((rbx + 0x10)) = 0;\n    if (eax == 0) {\n        goto label_17;\n    }\n    esi = *((rbx + 0x18));\n    if (esi == 0) {\nlabel_1:\n        *((rbx + 0x30)) = eax;\n        *((rbx + 0x2c)) = eax;\n        *((rbx + 0x20)) = 0;\n        eax = *(r15);\n        if (al == 0x2d) {\n            goto label_18;\n        }\n        if (al == 0x2b) {\n            goto label_19;\n        }\n        ecx = *((rsp + 0x78));\n        edx = 0;\n        if (ecx == 0) {\n            goto label_20;\n        }\nlabel_8:\n        *((rbx + 0x28)) = 0;\n        goto label_11;\n    }\n    eax = *(rdx);\n    rdx = *((rbx + 0x20));\n    ecx = rax - 0x2b;\n    ecx &= 0xfd;\n    if (ecx != 0) {\n        goto label_21;\n    }\n    eax = *((r15 + 1));\n    r15++;\n    eax = 0;\n    if (al == 0x3a) {\n        r13d = eax;\n    }\n    if (rdx != 0) {\n        goto label_22;\n    }\n    do {\nlabel_0:\n        eax = *(rbx);\n        if (*((rbx + 0x30)) > eax) {\n            *((rbx + 0x30)) = eax;\n        }\n        if (eax < *((rbx + 0x2c))) {\n            *((rbx + 0x2c)) = eax;\n        }\n        if (*((rbx + 0x28)) == 1) {\n            goto label_23;\n        }\nlabel_4:\n        if (ebp == eax) {\n            goto label_24;\n        }\n        rdx = (int64_t) eax;\n        ecx = 3;\n        edi = 0x41aa21;\n        r14 = *((r12 + rdx*8));\n        rsi = *((r12 + rdx*8));\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (ebp > eax) ? 1 : 0;\n        if (cl != 0) {\n            goto label_25;\n        }\n        edx = *((rbx + 0x2c));\n        ecx = *((rbx + 0x30));\n        eax++;\n        *(rbx) = eax;\n        if (edx == ecx) {\n            goto label_26;\n        }\n        if (eax != ecx) {\n            fcn_00411c20 (r12, rbx);\n            edx = *((rbx + 0x2c));\n        }\nlabel_12:\n        *((rbx + 0x30)) = ebp;\n        *(rbx) = ebp;\n        goto label_27;\nlabel_18:\n        *((rbx + 0x28)) = 2;\n        r15++;\n        edx = 0;\nlabel_11:\n        *((rbx + 0x18)) = 1;\n        eax = *(r15);\nlabel_21:\n        eax = 0;\n        if (al == 0x3a) {\n            r13d = eax;\n        }\n    } while (rdx == 0);\nlabel_22:\n    if (*(rdx) == 0) {\n        goto label_0;\n    }\nlabel_6:\n    r8 = rdx + 1;\n    *((rsp + 0x20)) = rdx;\n    *((rbx + 0x20)) = r8;\n    r14d = *(rdx);\n    *((rsp + 0x28)) = r8;\n    *((rsp + 0x1c)) = r14b;\n    rax = strchr (r15, r14d);\n    rdx = *((rsp + 0x20));\n    ecx = *((rsp + 0x1c));\n    r8 = *((rsp + 0x28));\n    if (*((rdx + 1)) == 0) {\n        *(rbx)++;\n    }\n    ecx -= 0x3a;\n    if (cl <= 1) {\n        goto label_28;\n    }\n    if (rax == 0) {\n        goto label_28;\n    }\n    ecx = *((rax + 1));\n    if (*(rax) == 0x57) {\n        goto label_29;\n    }\nlabel_7:\n    if (cl == 0x3a) {\n        goto label_30;\n    }\n    do {\nlabel_2:\n        eax = r14d;\n        return rax;\nlabel_25:\n        if (*(r14) == 0x2d) {\n            goto label_31;\n        }\nlabel_5:\n        edx = *((rbx + 0x28));\n        if (edx == 0) {\n            goto label_16;\n        }\n        eax++;\n        *((rbx + 0x10)) = r14;\n        r14d = 1;\n        *(rbx) = eax;\n    } while (1);\nlabel_17:\n    *(rbx) = 1;\n    eax = 1;\n    goto label_1;\nlabel_24:\n    ebp = *((rbx + 0x30));\n    edx = *((rbx + 0x2c));\nlabel_27:\n    if (edx != ebp) {\n        *(rbx) = edx;\n    }\nlabel_16:\n    r14d = 0xffffffff;\n    goto label_2;\nlabel_23:\n    edx = *((rbx + 0x30));\n    if (*((rbx + 0x2c)) == edx) {\n        goto label_32;\n    }\n    if (eax != edx) {\n        *((rsp + 0x1c)) = r9d;\n        fcn_00411c20 (r12, rbx);\n        edx = *(rbx);\n        r9d = *((rsp + 0x1c));\n    }\nlabel_9:\n    if (ebp <= edx) {\n        goto label_33;\n    }\n    rax = (int64_t) edx;\n    while (*(rcx) != 0x2d) {\nlabel_3:\n        edx = rsi + 1;\n        rax++;\n        *(rbx) = edx;\n        if (ebp <= eax) {\n            goto label_33;\n        }\n        rcx = *((r12 + rax*8));\n        esi = eax;\n        edx = eax;\n    }\n    if (*((rcx + 1)) == 0) {\n        goto label_3;\n    }\n    eax = *(rbx);\nlabel_10:\n    *((rbx + 0x30)) = edx;\n    goto label_4;\nlabel_31:\n    ecx = *((r14 + 1));\n    if (cl == 0) {\n        goto label_5;\n    }\n    if (*((rsp + 8)) == 0) {\n        goto label_34;\n    }\n    if (cl == 0x2d) {\n        goto label_35;\n    }\n    if (r9d == 0) {\n        goto label_34;\n    }\n    if (*((r14 + 2)) == 0) {\n        esi = (int32_t) cl;\n        *((rsp + 0x1c)) = r9d;\n        rax = strchr (r15, rsi);\n        r9d = *((rsp + 0x1c));\n        if (rax != 0) {\n            goto label_34;\n        }\n    }\n    rdx = r14 + 1;\n    *((rbx + 0x20)) = rdx;\n    eax = fcn_00411d00 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), r9);\n    r14d = eax;\n    if (eax != 0xffffffff) {\n        goto label_2;\n    }\n    rax = *(rbx);\n    r14 = *((r12 + rax*8));\nlabel_34:\n    rdx = r14 + 1;\n    goto label_6;\nlabel_29:\n    if (*((rsp + 8)) == 0) {\n        goto label_7;\n    }\n    if (cl != 0x3b) {\n        goto label_7;\n    }\n    if (*((rdx + 1)) == 0) {\n        rax = *(rbx);\n        if (eax == ebp) {\n            goto label_36;\n        }\n        r8 = *((r12 + rax*8));\n    }\n    *((rbx + 0x20)) = r8;\n    *((rbx + 0x10)) = 0;\nlabel_14:\n    eax = fcn_00411d00 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), 0);\n    r14d = eax;\n    goto label_2;\nlabel_20:\n    *((rsp + 0x1c)) = r9d;\n    rax = getenv (\"POSIXLY_CORRECT\");\n    r9d = *((rsp + 0x1c));\n    if (rax == 0) {\n        goto label_37;\n    }\n    rdx = *((rbx + 0x20));\n    goto label_8;\nlabel_30:\n    edx = *((rdx + 1));\n    if (*((rax + 2)) == 0x3a) {\n        goto label_38;\n    }\n    rax = *(rbx);\n    if (dl != 0) {\n        goto label_39;\n    }\n    if (ebp == eax) {\n        goto label_40;\n    }\n    edx = rax + 1;\n    rax = *((r12 + rax*8));\n    *(rbx) = edx;\n    *((rbx + 0x10)) = rax;\nlabel_13:\n    *((rbx + 0x20)) = 0;\n    goto label_2;\nlabel_32:\n    if (eax == edx) {\n        goto label_9;\n    }\n    *((rbx + 0x2c)) = eax;\n    edx = eax;\n    goto label_9;\nlabel_33:\n    eax = edx;\n    goto label_10;\nlabel_19:\n    *((rbx + 0x28)) = 0;\n    r15++;\n    edx = 0;\n    goto label_11;\nlabel_28:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0x3f;\n        goto label_2;\nlabel_26:\n        *((rbx + 0x2c)) = eax;\n        edx = eax;\n        goto label_12;\nlabel_39:\n        eax++;\n        *((rbx + 0x10)) = r8;\n        *(rbx) = eax;\n        goto label_13;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: invalid option -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_38:\n    if (dl != 0) {\n        *((rbx + 0x10)) = r8;\n        *(rbx)++;\n        goto label_13;\nlabel_37:\n        *((rbx + 0x28)) = 1;\n        rdx = *((rbx + 0x20));\n        goto label_11;\n    }\n    *((rbx + 0x10)) = 0;\n    goto label_13;\nlabel_40:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_13;\nlabel_35:\n        rdx = r14 + 2;\n        *((rbx + 0x20)) = rdx;\n        goto label_14;\nlabel_36:\n        if (r13d != 0) {\n            goto label_41;\n        }\nlabel_15:\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_2;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_41:\n    rbp = *(r12);\n    edx = 5;\n    rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n    rdi = stderr;\n    r8d = r14d;\n    esi = 1;\n    rdx = rax;\n    rcx = rbp;\n    eax = 0;\n    fprintf_chk ();\n    goto label_15;\n}\n"
        },
        {
            "funcName": "fcn_004128f0",
            "funcStartAddr": "0x4128f0",
            "funcEndAddr": "0x412946",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x4128f0 */\n#include <stdint.h>\n \nint32_t fcn_004128f0 (int64_t arg_10h) {\n    eax = *(0x0061f4dc);\n    *(0x00621b40) = eax;\n    eax = *(0x0061f4d8);\n    *(0x00621b44) = eax;\n    eax = *((rsp + 0x10));\n    fcn_00412320 (rdi, rsi, rdx, rcx, r8, r9);\n    edx = imp.__libc_start_main;\n    *(0x0061f4dc) = edx;\n    rdx = imp.__libc_start_main;\n    *(0x00621b80) = rdx;\n    edx = imp.__libc_start_main;\n    *(0x0061f4d4) = edx;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00412970",
            "funcStartAddr": "0x412970",
            "funcEndAddr": "0x412983",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x412970 */\n#include <stdint.h>\n \nvoid fcn_00412970 (void) {\n    r9d = 0;\n    fcn_004128f0 (rdi);\n}\n"
        },
        {
            "funcName": "fcn_004129f0",
            "funcStartAddr": "0x4129f0",
            "funcEndAddr": "0x412a6a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x4129f0 */\n#include <stdint.h>\n \nuint64_t fcn_004129f0 (wint_t arg1, int64_t arg2, size_t * arg3, mbstate_t * ps) {\n    int64_t var_ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = ps;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    rbx = 0xfffffffffffffffe;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r12 = rdi;\n    while (1) {\n        rax = mbrtowc (r12, rbp, rdx, rcx);\n        rbx = rax;\n        if (rax > 0xfffffffffffffffd) {\n            goto label_2;\n        }\nlabel_0:\n        rax = rbx;\n        return rax;\nlabel_1:\n        edx = 1;\n        r12 = rsp + 0xc;\n    }\nlabel_2:\n    al = fcn_00412fc0 (0);\n    if (al != 0) {\n        goto label_0;\n    }\n    eax = *(rbp);\n    ebx = 1;\n    *(r12) = eax;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00412a70",
            "funcStartAddr": "0x412a70",
            "funcEndAddr": "0x412b2d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x412a70 */\n#include <stdint.h>\n \nuint64_t fcn_00412a70 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    int64_t var_10h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13 = rdi;\n    r12 = rsp + 0x10;\n    *((rsp + 8)) = 0x7d0;\n    rax = fcn_00414470 (r12, rsp + 8, rsi, rdx);\n    rbx = *((rsp + 8));\n    if (rax == 0) {\n        goto label_1;\n    }\n    rdi = rax;\n    rax = fwrite (rdi, 1, rbx, r13);\n    if (rax < rbx) {\n        goto label_2;\n    }\n    if (rbp != r12) {\n        free (rbp);\n    }\n    if (rbx > 0x7fffffff) {\n        goto label_3;\n    }\n    do {\nlabel_0:\n        eax = ebx;\n        return rax;\nlabel_2:\n        ebx = 0xffffffff;\n    } while (rbp == r12);\n    rax = errno_location ();\n    r13d = *(rax);\n    r12 = rax;\n    free (rbp);\n    *(r12) = r13d;\n    goto label_0;\nlabel_3:\n    errno_location ();\n    *(rax) = 0x4b;\nlabel_1:\n    ebx = 0xffffffff;\n    fcn_00414460 (r13);\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00412b30",
            "funcStartAddr": "0x412b30",
            "funcEndAddr": "0x412b35",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x412b30 */\n#include <stdint.h>\n \nint32_t fcn_00412b30 (int64_t arg3, int64_t arg4) {\n    rdx = arg3;\n    rcx = arg4;\n    *(rcx) = edx;\n    eax = 0;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00412b40",
            "funcStartAddr": "0x412b40",
            "funcEndAddr": "0x412b55",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x412b40 */\n#include <stdint.h>\n \nint32_t fcn_00412b40 (int64_t arg2, int64_t arg3) {\n    rsi = arg2;\n    rdx = arg3;\n    eax = esi;\n    esi = edx;\n    if (eax != 0xffffffff) {\n        edi = eax;\n        void (*0x402e30)() ();\n    }\n    return chmod ();\n}\n"
        },
        {
            "funcName": "fcn_00412b60",
            "funcStartAddr": "0x412b60",
            "funcEndAddr": "0x412b82",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x412b60 */\n#include <stdint.h>\n \nint64_t fcn_00412b60 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rax = rsi;\n    edx = *(rdi);\n    eax = fcn_00412b40 (rax, edx);\n    al = (eax != 0) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = -eax;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00412ba0",
            "funcStartAddr": "0x412ba0",
            "funcEndAddr": "0x412cb6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x412ba0 */\n#include <stdint.h>\n \nuint64_t fcn_00412ba0 (char * arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    char * s2;\n    uint32_t var_17h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r15 = rsi;\n    r13 = rcx;\n    *((rsp + 8)) = rdi;\n    *((rsp + 0x18)) = rdx;\n    rax = strlen (rdi);\n    r14 = *(r15);\n    *(rsp) = 0xffffffffffffffff;\n    if (r14 == 0) {\n        goto label_3;\n    }\n    r12 = rax;\n    *((rsp + 0x17)) = 0;\n    ebx = 0;\n    goto label_1;\nlabel_0:\n    rax = *((rsp + 0x18));\n    if (rax == 0) {\n        goto label_4;\n    }\n    rdi *= r13;\n    rdi += rax;\n    eax = memcmp (*(rsp), rbp, r13);\n    ecx = 1;\n    eax = *((rsp + 0x17));\n    if (eax != 0) {\n        eax = ecx;\n    }\n    *((rsp + 0x17)) = al;\n    do {\nlabel_2:\n        rbx++;\n        rbp += r13;\n        r14 = *((r15 + rbx*8));\n        if (r14 == 0) {\n            goto label_5;\n        }\nlabel_1:\n        eax = strncmp (r14, *((rsp + 8)), r12);\n    } while (eax != 0);\n    rax = strlen (r14);\n    if (rax == r12) {\n        goto label_6;\n    }\n    if (*(rsp) != -1) {\n        goto label_0;\n    }\n    *(rsp) = rbx;\n    rbx++;\n    rbp += r13;\n    r14 = *((r15 + rbx*8));\n    if (r14 != 0) {\n        goto label_1;\n    }\nlabel_5:\n    rax = 0xfffffffffffffffe;\n    if (*((rsp + 0x17)) == 0) {\n        rax = *(rsp);\n    }\n    *(rsp) = rax;\n    do {\nlabel_3:\n        rax = *(rsp);\n        return rax;\nlabel_4:\n        *((rsp + 0x17)) = 1;\n        goto label_2;\nlabel_6:\n        *(rsp) = rbx;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00412cc0",
            "funcStartAddr": "0x412cc0",
            "funcEndAddr": "0x412d31",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x412cc0 */\n#include <stdint.h>\n \nuint64_t fcn_00412cc0 (int64_t arg1, int64_t arg2, uint32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    edx = 5;\n    r12 = rsi;\n    if (rdx == -1) {\n        goto label_0;\n    }\n    rax = dcgettext (0, \"ambiguous argument %s for %s\");\n    rbx = rax;\n    do {\n        rax = fcn_0040ec30 (1, rbp);\n        rax = fcn_0040e920 (0, 8, r12);\n        r8 = rbp;\n        rdx = rbx;\n        esi = 0;\n        rcx = rax;\n        edi = 0;\n        eax = 0;\n        void (*0x402e70)() ();\nlabel_0:\n        rax = dcgettext (0, \"invalid argument %s for %s\");\n        rbx = rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00412d40",
            "funcStartAddr": "0x412d40",
            "funcEndAddr": "0x412e58",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x412d40 */\n#include <stdint.h>\n \nuint64_t fcn_00412d40 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r15 = rdi;\n    r14d = 0;\n    r13 = rdx;\n    edx = 5;\n    rbx = stderr;\n    rax = dcgettext (0, \"Valid arguments are:\");\n    rdi = rax;\n    rsi = rbx;\n    ebx = 0;\n    fputs_unlocked ();\n    r12 = *(r15);\n    if (r12 != 0) {\n        goto label_1;\n    }\n    goto label_2;\n    do {\nlabel_0:\n        rbx++;\n        r14 = rbp;\n        rbp += r13;\n        rax = fcn_0040ec50 (r12);\n        edx = \"\\n  - %s\";\n        esi = 1;\n        rdi = stderr;\n        rcx = rax;\n        eax = 0;\n        fprintf_chk ();\n        r12 = *((r15 + rbx*8));\n        if (r12 == 0) {\n            goto label_2;\n        }\nlabel_1:\n    } while (rbx == 0);\n    eax = memcmp (r14, rbp, r13);\n    if (eax != 0) {\n        goto label_0;\n    }\n    rbx++;\n    rbp += r13;\n    rax = fcn_0040ec50 (r12);\n    edx = \", %s\";\n    esi = 1;\n    rdi = stderr;\n    rcx = rax;\n    eax = 0;\n    fprintf_chk ();\n    r12 = *((r15 + rbx*8));\n    if (r12 != 0) {\n        goto label_1;\n    }\nlabel_2:\n    rdi = stderr;\n    rax = *((rdi + 0x28));\n    if (rax < *((rdi + 0x30))) {\n        rdx = rax + 1;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = 0xa;\n        return rax;\n    }\n    esi = 0xa;\n    return overflow ();\n}\n"
        },
        {
            "funcName": "fcn_00412e60",
            "funcStartAddr": "0x412e60",
            "funcEndAddr": "0x412ed0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x412e60 */\n#include <stdint.h>\n \nuint64_t fcn_00412e60 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r15 = r8;\n    r14 = rdi;\n    r13 = r9;\n    r12 = rsi;\n    rbx = rdx;\n    rax = fcn_00412ba0 (r12, rbx, rbp, r8);\n    while (1) {\n        return rax;\n        fcn_00412cc0 (r14, r12, rax);\n        fcn_00412d40 (rbx, rbp, r15);\n        void (*r13)() ();\n        rax = 0xffffffffffffffff;\n    }\n}\n"
        },
        {
            "funcName": "fcn_00412f20",
            "funcStartAddr": "0x412f20",
            "funcEndAddr": "0x412f7d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x412f20 */\n#include <stdint.h>\n \nuint64_t fcn_00412f20 (int64_t arg1) {\n    rdi = arg1;\n    rax = fpending ();\n    ebx = *(rbp);\n    r12 = rax;\n    ebx &= 0x20;\n    eax = fcn_004143e0 (rbp);\n    if (ebx != 0) {\n        goto label_1;\n    }\n    if (eax == 0) {\n        goto label_0;\n    }\n    if (r12 != 0) {\n        goto label_2;\n    }\n    rax = errno_location ();\n    al = (*(rax) != 9) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = -eax;\n    do {\nlabel_0:\n        return rax;\nlabel_1:\n        if (eax != 0) {\n            goto label_2;\n        }\n        errno_location ();\n        *(rax) = 0;\n        eax = 0xffffffff;\n    } while (1);\nlabel_2:\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00412f80",
            "funcStartAddr": "0x412f80",
            "funcEndAddr": "0x412fba",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x412f80 */\n#include <stdint.h>\n \nuint64_t fcn_00412f80 (int64_t arg1) {\n    signed int64_t var_8h;\n    rdi = arg1;\n    rsi = rdi;\n    rbx = rdi;\n    edi = 0;\n    eax = clock_gettime ();\n    if (eax != 0) {\n        esi = 0;\n        rdi = rsp;\n        gettimeofday ();\n        rax = *(rsp);\n        *(rbx) = rax;\n        rax = *((rsp + 8)) * 0x3e8;\n        *((rbx + 8)) = rax;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00412fc0",
            "funcStartAddr": "0x412fc0",
            "funcEndAddr": "0x41301e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x412fc0 */\n#include <stdint.h>\n \nuint64_t fcn_00412fc0 (int32_t category) {\n    rdi = category;\n    rax = setlocale (rdi, 0);\n    rdx = rax;\n    eax = 1;\n    if (rdx != 0) {\n        ecx = 2;\n        edi = 0x41aa9e;\n        rsi = rdx;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (rdx > 0) ? 1 : 0;\n        eax = 0;\n        if (cl != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    edi = \"POSIX\";\n    ecx = 6;\n    rsi = rdx;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (cl > 0) ? 1 : 0;\n    al = (al != 0) ? 1 : 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00413020",
            "funcStartAddr": "0x413020",
            "funcEndAddr": "0x413056",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x413020 */\n#include <stdint.h>\n \nuint64_t rotate_left64 (uint64_t value, uint32_t count) {\n    const uint64_t mask = (CHAR_BIT * sizeof (value)) - 1;\n    count &= mask;\n    return (value << count) | (value >> (-count & mask));\n}\n \nint64_t fcn_00413020 (int64_t arg1) {\n    rdi = arg1;\n    rcx = *(rdi);\n    if (cl == 0) {\n        goto label_0;\n    }\n    eax = 0;\n    do {\n        rax = rotate_left64 (rax, 9);\n        rdi++;\n        rax += rcx;\n        rcx = *(rdi);\n    } while (cl != 0);\n    edx = 0;\n    rax = rdx:rax / rsi;\n    rdx = rdx:rax % rsi;\n    rax = rdx;\n    return rax;\nlabel_0:\n    edx = 0;\n    rax = rdx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00413060",
            "funcStartAddr": "0x413060",
            "funcEndAddr": "0x4135c2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x413060 */\n#include <stdint.h>\n \nuint64_t fcn_00413060 (void) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_60h;\n    rax = nl_langinfo (0xe);\n    r15 = imp.__libc_start_main;\n    rbx = rax;\n    eax = 0x41aa3f;\n    if (rax == 0) {\n        rbx = rax;\n    }\n    if (r15 == 0) {\n        goto label_15;\n    }\nlabel_1:\n    ebp = *(r15);\n    if (bpl != 0) {\n        goto label_16;\n    }\n    goto label_17;\n    do {\nlabel_0:\n        strlen (r15);\n        rbp = r15 + rax + 1;\n        strlen (rbp);\n        r15 = rbp + rax + 1;\n        ebp = *(r15);\n        if (bpl == 0) {\n            goto label_17;\n        }\nlabel_16:\n        eax = strcmp (rbx, r15);\n        if (eax == 0) {\n            goto label_18;\n        }\n    } while (bpl != 0x2a);\n    if (*((r15 + 1)) != 0) {\n        goto label_0;\n    }\nlabel_18:\n    strlen (r15);\n    rbx = r15 + rax + 1;\nlabel_17:\n    eax = \"ASCII\";\n    if (*(rbx) == 0) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\nlabel_15:\n    rax = getenv (\"CHARSETALIASDIR\");\n    r13 = rax;\n    if (rax == 0) {\n        goto label_19;\n    }\n    if (*(rax) == 0) {\n        goto label_19;\n    }\n    rax = strlen (rax);\n    r12 = rax;\n    r14 = rax;\n    if (rax != 0) {\n        goto label_20;\n    }\nlabel_13:\n    rax = malloc (0xe);\n    if (rax != 0) {\n        goto label_21;\n    }\n    do {\n        r15d = 0x41aa3f;\nlabel_2:\n        *(0x00621b78) = r15;\n        goto label_1;\nlabel_19:\n        r12d = 0x65;\n        r14d = 0x64;\n        r13d = \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\";\nlabel_14:\n        rax = malloc (0x73);\n    } while (rax == 0);\n    memcpy (rbp, r13, r14);\n    *((rbp + r14)) = 0x2f;\n    do {\n        r12 += rbp;\n        rax = 0x2e74657372616863;\n        *(r12) = rax;\n        eax = 0x73;\n        *((r12 + 0xc)) = ax;\n        eax = 0;\n        *((r12 + 8)) = 0x61696c61;\n        eax = open (rbp, 0, rdx);\n        r12d = eax;\n        if (eax >= 0) {\n            goto label_22;\n        }\nlabel_6:\n        r15d = 0x41aa3f;\nlabel_7:\n        free (rbp);\n        goto label_2;\nlabel_21:\n        eax = memcpy (rbp, r13, r14);\n    } while (1);\nlabel_22:\n    esi = 0x417263;\n    edi = eax;\n    r15d = 0;\n    rax = fdopen ();\n    *((rsp + 8)) = 0;\n    r13 = rax;\n    if (rax == 0) {\n        goto label_23;\n    }\n    rax = rbx;\n    r12 = rsp + 0x60;\n    r14 = rsp + 0x20;\n    rbx = r13;\n    r13 = rax;\n    do {\nlabel_3:\n        rax = *((rbx + 8));\n        if (rax >= *((rbx + 0x10))) {\n            goto label_24;\n        }\nlabel_4:\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        edi = *(rax);\nlabel_5:\n        eax = rdi - 9;\n    } while (eax <= 1);\n    if (edi == 0x20) {\n        goto label_3;\n    }\n    if (edi == 0x23) {\n        goto label_25;\n    }\n    eax = ungetc (rdi, rbx);\n    eax = 0;\n    rcx = r12;\n    rdx = r14;\n    eax = fscanf (rbx, \"%50s %50s\");\n    if (eax <= 1) {\n        goto label_12;\n    }\n    rcx = r14;\n    do {\n        edx = *(rcx);\n        rcx += 4;\n        eax = rdx - 0x1010101;\n        edx = ~edx;\n        eax &= edx;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    edx = eax;\n    edx >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = edx;\n    }\n    rdx = rcx + 2;\n    if ((eax & 0x8080) == 0) {\n        rcx = rdx;\n    }\n    edx = eax;\n    dl += al;\n    rdx = r12;\n    rcx -= 3;\n    rcx -= r14;\n    do {\n        esi = *(rdx);\n        rdx += 4;\n        eax = rsi - 0x1010101;\n        esi = ~esi;\n        eax &= esi;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    esi = eax;\n    *((rsp + 0x10)) = rcx;\n    esi >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = esi;\n    }\n    rsi = rdx + 2;\n    if ((eax & 0x8080) == 0) {\n        rdx = rsi;\n    }\n    esi = eax;\n    sil += al;\n    rdx -= 3;\n    rdx -= r12;\n    rax = rcx + rdx;\n    *((rsp + 0x18)) = rdx;\n    if (*((rsp + 8)) != 0) {\n        goto label_26;\n    }\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    rax = malloc (rax + 3);\n    rcx = *((rsp + 0x10));\n    rdx = *((rsp + 0x18));\nlabel_9:\n    if (rax == 0) {\n        goto label_27;\n    }\n    rdi = *((rsp + 8));\n    rsi = 0xfffffffffffffffe;\n    rsi -= rcx;\n    rcx++;\n    rdi -= rdx;\n    rsi += rdi;\n    rsi += rax;\n    if (ecx >= 8) {\n        goto label_28;\n    }\n    if ((cl & 4) != 0) {\n        goto label_29;\n    }\n    if (ecx != 0) {\n        r9d = *(r14);\n        *(rsi) = r9b;\n        if ((cl & 2) != 0) {\n            goto label_30;\n        }\n    }\nlabel_10:\n    rdx++;\n    rcx = rax + rdi - 1;\n    if (edx >= 8) {\n        goto label_31;\n    }\n    if ((dl & 4) != 0) {\n        goto label_32;\n    }\n    if (edx != 0) {\n        esi = *(r12);\n        *(rcx) = sil;\n        if ((dl & 2) != 0) {\n            goto label_33;\n        }\n    }\nlabel_11:\n    r15 = rax;\n    rax = *((rbx + 8));\n    if (rax < *((rbx + 0x10))) {\n        goto label_4;\n    }\nlabel_24:\n    rdi = rbx;\n    eax = uflow ();\n    edi = eax;\n    if (eax != 0xffffffff) {\n        goto label_5;\n    }\nlabel_12:\n    rax = r13;\n    r13 = rbx;\n    rbx = rax;\n    fcn_004143e0 (rbx);\n    rax = *((rsp + 8));\n    if (rax == 0) {\n        goto label_6;\n    }\n    *((r15 + rax)) = 0;\n    goto label_7;\n    do {\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        eax = *(rax);\n        edx = 1;\nlabel_8:\n        if (eax == 0xa) {\n            goto label_34;\n        }\n        if (dl == 0) {\n            goto label_34;\n        }\nlabel_25:\n        rax = *((rbx + 8));\n    } while (rax < *((rbx + 0x10)));\n    rdi = rbx;\n    eax = uflow ();\n    dl = (eax != 0xffffffff) ? 1 : 0;\n    goto label_8;\nlabel_26:\n    rax += *((rsp + 8));\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    eax = realloc (r15, rax + 3);\n    rdx = *((rsp + 0x18));\n    rcx = *((rsp + 0x10));\n    goto label_9;\nlabel_28:\n    r9 = *(r14);\n    *(rsi) = r9;\n    r9d = ecx;\n    r10 = *((r14 + r9 - 8));\n    *((rsi + r9 - 8)) = r10;\n    r9 = rsi + 8;\n    r10 = r14;\n    r9 &= 0xfffffffffffffff8;\n    rsi -= r9;\n    ecx += esi;\n    r10 -= rsi;\n    ecx &= 0xfffffff8;\n    if (ecx < 8) {\n        goto label_10;\n    }\n    ecx &= 0xfffffff8;\n    esi = 0;\n    do {\n        r8d = esi;\n        esi += 8;\n        r11 = *((r10 + r8));\n        *((r9 + r8)) = r11;\n    } while (esi < ecx);\n    goto label_10;\nlabel_31:\n    rsi = *(r12);\n    r9 = r12;\n    *(rcx) = rsi;\n    esi = edx;\n    rdi = *((r12 + rsi - 8));\n    *((rcx + rsi - 8)) = rdi;\n    rdi = rcx + 8;\n    rdi &= 0xfffffffffffffff8;\n    rcx -= rdi;\n    edx += ecx;\n    r9 -= rcx;\n    edx &= 0xfffffff8;\n    if (edx < 8) {\n        goto label_11;\n    }\n    edx &= 0xfffffff8;\n    ecx = 0;\n    do {\n        esi = ecx;\n        ecx += 8;\n        r8 = *((r9 + rsi));\n        *((rdi + rsi)) = r8;\n    } while (ecx < edx);\n    goto label_11;\nlabel_34:\n    if (eax == 0xffffffff) {\n        goto label_12;\n    }\n    goto label_3;\nlabel_20:\n    if (*((r13 + rax - 1)) == 0x2f) {\n        rdi = rax + 0xe;\n        goto label_13;\nlabel_23:\n        close (r12d);\n        goto label_6;\nlabel_29:\n        r9d = *(r14);\n        *(rsi) = r9d;\n        r9d = *((r14 + rcx - 4));\n        *((rsi + rcx - 4)) = r9d;\n        goto label_10;\nlabel_32:\n        esi = *(r12);\n        *(rcx) = esi;\n        esi = *((r12 + rdx - 4));\n        *((rcx + rdx - 4)) = esi;\n        goto label_11;\nlabel_27:\n        rax = r13;\n        r13 = rbx;\n        r15d = 0x41aa3f;\n        rbx = rax;\n        free (r15);\n        fcn_004143e0 (r13);\n        goto label_7;\nlabel_30:\n        r9d = *((r14 + rcx - 2));\n        *((rsi + rcx - 2)) = r9w;\n        goto label_10;\nlabel_33:\n        esi = edx;\n        edx = *((r12 + rsi - 2));\n        *((rcx + rsi - 2)) = dx;\n        goto label_11;\n    }\n    rdi = rax + 0xf;\n    r12++;\n    goto label_14;\n}\n"
        },
        {
            "funcName": "fcn_004135d0",
            "funcStartAddr": "0x4135d0",
            "funcEndAddr": "0x4137c9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x4135d0 */\n#include <stdint.h>\n \nuint64_t fcn_004135d0 (int64_t arg_e0h, int64_t arg1, int64_t arg2, uint32_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    uint32_t var_8h;\n    int64_t var_ch;\n    int64_t var_10h;\n    int64_t var_28h;\n    uint32_t var_2ch;\n    uint32_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r15d = edi;\n    r14d = r9d;\n    r13d = r8d;\n    r12d = ecx;\n    *((rsp + 8)) = edx;\n    rdx = rsp + 0x10;\n    if (edi >= 0) {\n        esi = edi;\n        edi = 1;\n        eax = fxstat ();\n        ebx = eax;\n        if (eax != 0) {\n            goto label_5;\n        }\n        ecx = *((rsp + 0x28));\n        eax = *((rsp + 0x28));\n        eax &= 0xf000;\n        if (eax != 0x4000) {\n            goto label_7;\n        }\nlabel_6:\n        if (r12d == 0xffffffff) {\n            goto label_8;\n        }\n        if (*((rsp + 0x2c)) == r12d) {\n            goto label_8;\n        }\nlabel_0:\n        if (r15d >= 0) {\n            goto label_9;\n        }\n        *((rsp + 0xc)) = ecx;\n        edx = r13d;\n        esi = r12d;\n        rdi = rbp;\n        if (*((rsp + 8)) == 0xffffffff) {\n            goto label_10;\n        }\n        eax = lchown ();\n        ecx = *((rsp + 0xc));\n        ebx = eax;\nlabel_4:\n        if (ebx != 0) {\n            goto label_1;\n        }\nlabel_2:\n        if ((cl & 0x49) == 0) {\n            goto label_11;\n        }\n        edx = ecx;\n        edx &= 0xc00;\n        goto label_12;\n    }\n    edi = 1;\n    eax = xstat ();\n    ebx = eax;\n    if (eax == 0) {\n        goto label_13;\n    }\n    do {\nlabel_1:\n        eax = ebx;\n        return eax;\nlabel_7:\n        errno_location ();\n        r12d = 0x14;\n        ebx = 0xffffffff;\n        *(rax) = 0x14;\nlabel_3:\n        close (r15d);\n        *(rbp) = r12d;\n    } while (1);\nlabel_8:\n    if (r13d == 0xffffffff) {\n        goto label_11;\n    }\n    if (*((rsp + 0x30)) != r13d) {\n        goto label_0;\n    }\nlabel_11:\n    edx = 0;\nlabel_12:\n    eax = ecx;\n    eax ^= r14d;\n    eax |= edx;\n    if ((*((rsp + 0xe0)) & eax) == 0) {\n        goto label_14;\n    }\n    esi = *((rsp + 0xe0));\n    esi = ~esi;\n    esi &= ecx;\n    esi &= 0xfff;\n    esi |= r14d;\n    if (r15d >= 0) {\n        goto label_15;\n    }\n    eax = chmod (rbp, rsi);\n    ebx = eax;\n    goto label_1;\nlabel_9:\n    edx = r13d;\n    esi = r12d;\n    edi = r15d;\n    *((rsp + 0xc)) = ecx;\n    eax = fchown ();\n    ecx = *((rsp + 0xc));\n    ebx = eax;\n    if (eax == 0) {\n        goto label_2;\n    }\nlabel_5:\n    rax = errno_location ();\n    r12d = *(rax);\n    goto label_3;\nlabel_14:\n    ebx = 0;\n    if (r15d < 0) {\n        goto label_1;\n    }\n    do {\n        eax = close (r15d);\n        ebx = eax;\n        goto label_1;\nlabel_10:\n        eax = chown ();\n        ecx = *((rsp + 0xc));\n        ebx = eax;\n        goto label_4;\nlabel_15:\n        eax = fchmod (r15d, rsi);\n        ebx = eax;\n    } while (eax == 0);\n    goto label_5;\nlabel_13:\n    ecx = *((rsp + 0x28));\n    eax = *((rsp + 0x28));\n    eax &= 0xf000;\n    if (eax == 0x4000) {\n        goto label_6;\n    }\n    errno_location ();\n    ebx |= 0xffffffff;\n    *(rax) = 0x14;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00413800",
            "funcStartAddr": "0x413800",
            "funcEndAddr": "0x41382f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x413800 */\n#include <stdint.h>\n \nuint64_t fcn_00413800 (void) {\n    rax = fcn_00413a20 (rdi, rsi);\n    rbx = rax;\n    eax = 0;\n    if (rbx != 0) {\n        fcn_004112e0 (0x18);\n        *(rax) = rbx;\n        *((rax + 0x10)) = 0;\n        *((rax + 8)) = 0;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00413840",
            "funcStartAddr": "0x413840",
            "funcEndAddr": "0x413935",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x413840 */\n#include <stdint.h>\n \nint64_t fcn_00413840 (int64_t arg1, int64_t arg2) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    r15 = rdi;\n    r14 = rsi + 1;\n    r13 = rsi;\n    r12 = *(rdi);\n    rbp = *((rdi + 8));\n    rbx = *((rdi + 0x10));\n    while (rbx >= r13) {\n        if (rbx == r13) {\n            goto label_1;\n        }\nlabel_0:\n        rax = rbx;\n        edx = 0;\n        rax -= r13;\n        rax = rdx:rax / r14;\n        rdx = rdx:rax % r14;\n        rsi = rdx;\n        rcx = rax;\n        rbx -= rdx;\n        rax = rbp;\n        edx = 0;\n        rax = rdx:rax / r14;\n        rdx = rdx:rax % r14;\n        if (rbp <= rbx) {\n            goto label_2;\n        }\n        rbx = rsi - 1;\n    }\n    rax = rbx;\n    edx = 0;\n    do {\n        rax <<= 8;\n        rdx++;\n        rax += 0xff;\n    } while (r13 > rax);\n    fcn_00413d30 (r12, rsp + 8, rdx);\n    rax = rsp + 8;\n    do {\n        edx = *(rax);\n        rbx <<= 8;\n        rbp <<= 8;\n        rax++;\n        rbx += 0xff;\n        rbp += rdx;\n    } while (r13 > rbx);\n    if (rbx != r13) {\n        goto label_0;\n    }\nlabel_1:\n    *((r15 + 0x10)) = 0;\n    *((r15 + 8)) = 0;\n    do {\n        rax = rbp;\n        return rax;\nlabel_2:\n        *((r15 + 8)) = rax;\n        *((r15 + 0x10)) = rcx;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00413960",
            "funcStartAddr": "0x413960",
            "funcEndAddr": "0x4139b1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x413960 */\n#include <stdint.h>\n \nuint64_t fcn_00413960 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    eax = fcn_00413e90 (*(rdi));\n    r12d = eax;\n    rax = errno_location ();\n    rdi = rbx;\n    esi = 0x18;\n    rdx = 0xffffffffffffffff;\n    r13d = *(rax);\n    explicit_bzero_chk ();\n    free (rbx);\n    *(rbp) = r13d;\n    eax = r12d;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00413a20",
            "funcStartAddr": "0x413a20",
            "funcEndAddr": "0x413d0f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x413a20 */\n#include <stdint.h>\n \nuint64_t fcn_00413a20 (int64_t arg1, int64_t arg2) {\n    int64_t var_8h;\n    uid_t var_10h;\n    rdi = arg1;\n    rsi = arg2;\n    if (rsi == 0) {\n        goto label_3;\n    }\n    r12 = rdi;\n    if (rdi == 0) {\n        goto label_4;\n    }\n    rax = fcn_00415f90 (rdi, 0x41ab5c);\n    r13 = rax;\n    if (rax == 0) {\n        goto label_5;\n    }\n    fcn_004112e0 (0x1038);\n    ecx = 0x1000;\n    rdi = r13;\n    *(rax) = r13;\n    if (rbp <= 0x1000) {\n        rcx = rbp;\n    }\n    *((rax + 8)) = 0x4139c0;\n    rbx = rax;\n    *((rax + 0x10)) = r12;\n    setvbuf (rdi, rax + 0x18, 0, rcx);\n    do {\nlabel_0:\n        rax = rbx;\n        return rax;\nlabel_4:\n        fcn_004112e0 (0x1038);\n        *(rax) = 0;\n        rbx = rax;\n        r13 = rax + 0x20;\n        *((rax + 8)) = 0x4139c0;\n        *((rax + 0x10)) = 0;\n        *((rax + 0x18)) = 0;\n        eax = 0;\n        eax = open (\"/dev/urandom\", 0, rdx);\n        r15d = eax;\n        if (eax < 0) {\n            goto label_6;\n        }\n        rdx = rbp;\n        edi = eax;\n        rsi = r13;\n        r14d = 0x800;\n        ecx = 0x1018;\n        if (rbp > 0x800) {\n            rdx = r14;\n        }\n        rax = read_chk ();\n        close (r15d);\n        if (rbp <= 0x7ff) {\n            goto label_7;\n        }\nlabel_1:\n        fcn_00414190 (r13);\n    } while (1);\nlabel_3:\n    rax = fcn_004112e0 (0x1038);\n    rbx = rax;\n    *(rax) = 0;\n    *((rax + 8)) = 0x4139c0;\n    *((rax + 0x10)) = 0;\n    goto label_0;\nlabel_6:\n    r12 = rsp + 0x10;\n    esi = 0;\n    r14d = 0x14;\n    rdi = r12;\n    gettimeofday ();\n    __asm (\"movdqa xmm0, xmmword [rsp + 0x10]\");\n    __asm (\"movups xmmword [rbx + 0x20], xmm0\");\n    eax = getpid ();\n    *((rsp + 0x10)) = eax;\n    *((rbx + 0x30)) = eax;\nlabel_2:\n    eax = 4;\n    rbp -= r14;\n    if (rbp > 4) {\n    }\n    eax = getppid ();\n    rsi = r13 + r14;\n    *((rsp + 0x10)) = eax;\n    edi = ebp;\n    if (ebp == 0) {\n        goto label_8;\n    }\n    eax = 0;\n    do {\n        edx = eax;\n        eax++;\n        ecx = *((r12 + rdx));\n        *((rsi + rdx)) = cl;\n    } while (eax < edi);\nlabel_8:\n    rbp += r14;\n    if (rbp > 0x7ff) {\n        goto label_1;\n    }\n    r14d = 0x800;\n    eax = 4;\n    r14 -= rbp;\n    if (r14 > 4) {\n        r14 = rax;\n    }\n    eax = getuid ();\n    rsi = r13 + rbp;\n    *((rsp + 0x10)) = eax;\n    edi = r14d;\n    if (r14d == 0) {\n        goto label_9;\n    }\n    eax = 0;\n    do {\n        edx = eax;\n        eax++;\n        ecx = *((r12 + rdx));\n        *((rsi + rdx)) = cl;\n    } while (eax < edi);\nlabel_9:\n    rbp += r14;\n    if (rbp > 0x7ff) {\n        goto label_1;\n    }\n    eax = getgid ();\n    edx = 4;\n    rsi = r13 + rbp;\n    *((rsp + 0x10)) = eax;\n    eax = 0x800;\n    rax -= rbp;\n    if (rax > 4) {\n        rax = rdx;\n    }\n    edi = eax;\n    if (eax == 0) {\n        goto label_1;\n    }\n    eax = 0;\n    do {\n        edx = eax;\n        eax++;\n        ecx = *((r12 + rdx));\n        *((rsi + rdx)) = cl;\n    } while (eax < edi);\n    goto label_1;\nlabel_5:\n    ebx = 0;\n    goto label_0;\nlabel_7:\n    rcx = r14;\n    eax = 0x10;\n    __asm (\"cmovs rbp, r12\");\n    r12 = rsp + 0x10;\n    rdi = r12;\n    rcx -= rbp;\n    r15 = r13 + rbp;\n    if (rcx > 0x10) {\n        rcx = rax;\n    }\n    esi = 0;\n    rbp += rcx;\n    *((rsp + 8)) = rcx;\n    gettimeofday ();\n    rcx = *((rsp + 8));\n    rdi = r15;\n    rsi = r12;\n    *(rdi) = *(rsi);\n    rcx--;\n    rsi++;\n    rdi++;\n    if (rbp > 0x7ff) {\n        goto label_1;\n    }\n    r14 -= rbp;\n    eax = 4;\n    if (r14 > 4) {\n        r14 = rax;\n    }\n    eax = getpid ();\n    rsi = r12;\n    *((rsp + 0x10)) = eax;\n    ecx = r14d;\n    rax = r13 + rbp;\n    r14 += rbp;\n    rdi = rax;\n    *(rdi) = *(rsi);\n    rcx--;\n    rsi++;\n    rdi++;\n    if (r14 <= 0x7ff) {\n        goto label_2;\n    }\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00413d30",
            "funcStartAddr": "0x413d30",
            "funcEndAddr": "0x413e8c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x413d30 */\n#include <stdint.h>\n \nuint64_t fcn_00413d30 (int64_t arg1, int64_t arg2, uint32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r12 = rdi;\n    rbx = rdx;\n    r13 = *(rdi);\n    if (r13 == 0) {\n        goto label_1;\n    }\n    rax = errno_location ();\n    r15d = 0;\n    r14 = rax;\n    while (rbx != 0) {\n        rax = *(r12);\n        rdi = *((r12 + 0x10));\n        if ((*(rax) & 0x20) == 0) {\n            edx = r15d;\n        }\n        *(r14) = edx;\n        uint64_t (*r12 + 8)() ();\n        r13 = *(r12);\n        rdx = rbx;\n        rdi = rbp;\n        rcx = r13;\n        esi = 1;\n        rax = fread_unlocked ();\n        edx = *(r14);\n        rbp += rax;\n        rbx -= rax;\n    }\nlabel_0:\n    return rax;\nlabel_1:\n    r15 = *((rdi + 0x18));\n    r13 = rdi + 0x838;\n    r14 = rdi + 0x20;\n    if (rdx <= r15) {\n        goto label_2;\n    }\n    do {\n        rbp += r15;\n        rsi -= r15;\n        rbx -= r15;\n        rsi += r13;\n        memcpy (rbp, 0x800, r15);\n        if ((bpl & 7) == 0) {\n            goto label_3;\n        }\n        r15d = 0x800;\n        fcn_00413ee0 (r14, r13);\n    } while (rbx > 0x800);\n    goto label_4;\n    do {\n        rbp += 0x800;\n        fcn_00413ee0 (r14, rbp);\n        rbx -= 0x800;\n        if (rbx == 0) {\n            goto label_5;\n        }\nlabel_3:\n    } while (rbx > 0x7ff);\n    fcn_00413ee0 (r14, r13);\nlabel_4:\n    r15d = 0x800;\n    do {\n        memcpy (rbp, r13, rbx);\n        rcx = r15;\n        rcx -= rbx;\n        *((r12 + 0x18)) = rcx;\n        goto label_0;\nlabel_5:\n        *((r12 + 0x18)) = 0;\n        return rax;\nlabel_2:\n        r13 -= r15;\n        r13 += 0x800;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00413e90",
            "funcStartAddr": "0x413e90",
            "funcEndAddr": "0x413ed9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x413e90 */\n#include <stdint.h>\n \nuint32_t fcn_00413e90 (int64_t arg1) {\n    rdi = arg1;\n    rdx = 0xffffffffffffffff;\n    esi = 0x1038;\n    rbx = rdi;\n    rbp = *(rdi);\n    explicit_bzero_chk ();\n    eax = free (rbx);\n    if (rbp != 0) {\n        rdi = rbp;\n        void (*0x4143e0)() ();\n    }\n    eax = 0;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00413ee0",
            "funcStartAddr": "0x413ee0",
            "funcEndAddr": "0x414185",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x413ee0 */\n#include <stdint.h>\n \nint64_t fcn_00413ee0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rax = *((rdi + 0x810));\n    r11 = *((rdi + 0x808));\n    r10 = rdi + 0x400;\n    rdx = *((rdi + 0x800));\n    r9 = rsi;\n    r8 = rax + 1;\n    rax = rdi;\n    *((rdi + 0x810)) = r8;\n    r11 += r8;\n    do {\n        rcx = rdx;\n        rcx <<= 0x15;\n        rdx ^= rcx;\n        rcx = *(rax);\n        rdx = ~rdx;\n        rdx += *((rax + 0x400));\n        r8 = rcx;\n        r8d &= 0x7f8;\n        rbx = *((rdi + r8));\n        rbx += rdx;\n        r8 = rbx;\n        r8 += r11;\n        r11 = rdx;\n        *(rax) = r8;\n        r8 >>= 8;\n        r11 >>= 5;\n        r8d &= 0x7f8;\n        rdx ^= r11;\n        rbx = *((rdi + r8));\n        rbx += rcx;\n        *(r9) = rbx;\n        r8 = *((rax + 8));\n        rdx += *((rax + 0x408));\n        r11 = rdx;\n        rdx = r8;\n        edx &= 0x7f8;\n        rcx = *((rdi + rdx));\n        rdx = r11;\n        rdx <<= 0xc;\n        rcx += r11;\n        rdx ^= r11;\n        rcx += rbx;\n        *((rax + 8)) = rcx;\n        rcx >>= 8;\n        ecx &= 0x7f8;\n        rbx = *((rdi + rcx));\n        rbx += r8;\n        *((r9 + 8)) = rbx;\n        rcx = *((rax + 0x10));\n        rdx += *((rax + 0x410));\n        r8 = rcx;\n        r8d &= 0x7f8;\n        r11 = *((rdi + r8));\n        r11 += rdx;\n        r8 = r11;\n        r8 += rbx;\n        *((rax + 0x10)) = r8;\n        r8 >>= 8;\n        r8d &= 0x7f8;\n        rcx += *((rdi + r8));\n        *((r9 + 0x10)) = rcx;\n        r11 = rcx;\n        r8 = *((rax + 0x18));\n        rcx = rdx;\n        rcx >>= 0x21;\n        rdx ^= rcx;\n        rcx = r8;\n        rdx += *((rax + 0x418));\n        ecx &= 0x7f8;\n        rbx = *((rdi + rcx));\n        rbx += rdx;\n        rcx = rbx;\n        rcx += r11;\n        rax += 0x20;\n        r9 += 0x20;\n        *((rax - 8)) = rcx;\n        rcx >>= 8;\n        ecx &= 0x7f8;\n        r11 = *((rdi + rcx));\n        r11 += r8;\n        *((r9 - 8)) = r11;\n    } while (rax != r10);\n    rsi += 0x400;\n    r9 = rdi + 0x800;\n    do {\n        rcx = rdx;\n        rcx <<= 0x15;\n        rdx ^= rcx;\n        rcx = *(rax);\n        rdx = ~rdx;\n        rdx += *((rax - 0x400));\n        r8 = rcx;\n        r10 = rdx;\n        r8d &= 0x7f8;\n        r10 >>= 5;\n        rbx = *((rdi + r8));\n        rbx += rdx;\n        rdx ^= r10;\n        r8 = rbx;\n        r8 += r11;\n        *(rax) = r8;\n        r8 >>= 8;\n        r8d &= 0x7f8;\n        rcx += *((rdi + r8));\n        *(rsi) = rcx;\n        r8 = *((rax + 8));\n        r11 = rcx;\n        rdx += *((rax - 0x3f8));\n        r10 = rdx;\n        rdx = r8;\n        edx &= 0x7f8;\n        rcx = *((rdi + rdx));\n        rdx = r10;\n        rdx <<= 0xc;\n        rcx += r10;\n        rdx ^= r10;\n        rcx += r11;\n        *((rax + 8)) = rcx;\n        rcx >>= 8;\n        ecx &= 0x7f8;\n        r11 = *((rdi + rcx));\n        r11 += r8;\n        *((rsi + 8)) = r11;\n        rcx = *((rax + 0x10));\n        rdx += *((rax - 0x3f0));\n        r8 = rcx;\n        r8d &= 0x7f8;\n        rbx = *((rdi + r8));\n        rbx += rdx;\n        r8 = rbx;\n        r8 += r11;\n        *((rax + 0x10)) = r8;\n        r8 >>= 8;\n        r8d &= 0x7f8;\n        rcx += *((rdi + r8));\n        *((rsi + 0x10)) = rcx;\n        r10 = rcx;\n        r8 = *((rax + 0x18));\n        rcx = rdx;\n        rcx >>= 0x21;\n        rdx ^= rcx;\n        rcx = r8;\n        rdx += *((rax - 0x3e8));\n        ecx &= 0x7f8;\n        rbx = *((rdi + rcx));\n        rbx += rdx;\n        rcx = rbx;\n        rcx += r10;\n        rax += 0x20;\n        rsi += 0x20;\n        *((rax - 8)) = rcx;\n        rcx >>= 8;\n        ecx &= 0x7f8;\n        r11 = *((rdi + rcx));\n        r11 += r8;\n        *((rsi - 8)) = r11;\n    } while (rax != r9);\n    *((rdi + 0x800)) = rdx;\n    *((rdi + 0x808)) = r11;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00414190",
            "funcStartAddr": "0x414190",
            "funcEndAddr": "0x4143c4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x414190 */\n#include <stdint.h>\n \nint64_t fcn_00414190 (int64_t arg1) {\n    rdi = arg1;\n    rdx = rdi;\n    rax = rdi;\n    rcx = 0x98f5704f6c44c0ab;\n    rsi = 0x82f053db8355e0ce;\n    r11 = 0xb29b2e824a595524;\n    r12 = 0xae985bf2cbfc89ed;\n    r10 = 0x8c0ea5053d4712a0;\n    r9 = 0xb9f8b322c73ac862;\n    rbp = rdi + 0x800;\n    r8 = 0x647c4677a2884b7c;\n    rbx = 0x48fe4a0fa5a09315;\n    do {\n        r13 = *(rax);\n        rsi += *((rax + 0x20));\n        rcx += *((rax + 0x38));\n        rbx += *((rax + 0x28));\n        r13 -= rsi;\n        r12 += *((rax + 0x30));\n        r8 += r13;\n        r13 = rcx;\n        r13 >>= 9;\n        rcx += r8;\n        rbx ^= r13;\n        r13 = *((rax + 8));\n        r13 -= rbx;\n        r9 += r13;\n        r13 = r8;\n        r13 <<= 9;\n        r8 += r9;\n        r12 ^= r13;\n        r13 = *((rax + 0x10));\n        r13 -= r12;\n        r10 += r13;\n        r13 = r9;\n        r13 >>= 0x17;\n        r9 += r10;\n        rcx ^= r13;\n        r13 = *((rax + 0x18));\n        r13 -= rcx;\n        r11 += r13;\n        r13 = r10;\n        r13 <<= 0xf;\n        r10 += r11;\n        r8 ^= r13;\n        r13 = r11;\n        rsi -= r8;\n        r13 >>= 0xe;\n        *(rax) = r8;\n        r9 ^= r13;\n        r13 = rsi;\n        r11 += rsi;\n        rbx -= r9;\n        r13 <<= 0x14;\n        *((rax + 8)) = r9;\n        r10 ^= r13;\n        r13 = rsi + rbx;\n        rsi = rbx;\n        r12 -= r10;\n        rsi >>= 0x11;\n        *((rax + 0x10)) = r10;\n        rax += 0x40;\n        r11 ^= rsi;\n        rsi = r12;\n        rbx += r12;\n        rcx -= r11;\n        rsi <<= 0xe;\n        *((rax - 0x28)) = r11;\n        rsi ^= r13;\n        r12 += rcx;\n        *((rax - 0x18)) = rbx;\n        *((rax - 0x20)) = rsi;\n        *((rax - 0x10)) = r12;\n        *((rax - 8)) = rcx;\n    } while (rbp != rax);\n    do {\n        rcx += *((rdx + 0x38));\n        rsi += *((rdx + 0x20));\n        r8 += *(rdx);\n        rax = rcx;\n        rbx += *((rdx + 0x28));\n        r8 -= rsi;\n        rax >>= 9;\n        r9 += *((rdx + 8));\n        r12 += *((rdx + 0x30));\n        rbx ^= rax;\n        rax = r8;\n        r10 += *((rdx + 0x10));\n        rcx += r8;\n        r9 -= rbx;\n        rax <<= 9;\n        r11 += *((rdx + 0x18));\n        r12 ^= rax;\n        rax = r9;\n        r8 += r9;\n        r10 -= r12;\n        rax >>= 0x17;\n        rcx ^= rax;\n        rax = r10;\n        r9 += r10;\n        r11 -= rcx;\n        rax <<= 0xf;\n        r8 ^= rax;\n        rax = r11;\n        r10 += r11;\n        rsi -= r8;\n        rax >>= 0xe;\n        *(rdx) = r8;\n        r9 ^= rax;\n        rax = rsi;\n        r11 += rsi;\n        rbx -= r9;\n        rax <<= 0x14;\n        *((rdx + 8)) = r9;\n        r10 ^= rax;\n        rax = rsi + rbx;\n        rsi = rbx;\n        r12 -= r10;\n        rsi >>= 0x11;\n        *((rdx + 0x10)) = r10;\n        rdx += 0x40;\n        r11 ^= rsi;\n        rsi = r12;\n        rbx += r12;\n        rcx -= r11;\n        rsi <<= 0xe;\n        *((rdx - 0x28)) = r11;\n        rsi ^= rax;\n        r12 += rcx;\n        *((rdx - 0x18)) = rbx;\n        *((rdx - 0x20)) = rsi;\n        *((rdx - 0x10)) = r12;\n        *((rdx - 8)) = rcx;\n    } while (rbp != rdx);\n    *((rdi + 0x810)) = 0;\n    *((rdi + 0x808)) = 0;\n    *((rdi + 0x800)) = 0;\n    r12 = rbx;\n    r13 = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004143d0",
            "funcStartAddr": "0x4143d0",
            "funcEndAddr": "0x4143de",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x4143d0 */\n#include <stdint.h>\n \nint32_t fcn_004143d0 (int64_t arg1, int64_t arg4) {\n    rdi = arg1;\n    rcx = arg4;\n    edx = 3;\n    esi = 0;\n    eax = 0;\n    return void (*0x411a10)() ();\n}\n"
        },
        {
            "funcName": "fcn_004143e0",
            "funcStartAddr": "0x4143e0",
            "funcEndAddr": "0x41445b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x4143e0 */\n#include <stdint.h>\n \nuint64_t fcn_004143e0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    eax = fileno (rdi);\n    rdi = rbx;\n    if (eax < 0) {\n        goto label_1;\n    }\n    eax = freading ();\n    while (rax != -1) {\n        eax = fcn_00411b50 (rbx);\n        if (eax == 0) {\n            goto label_2;\n        }\n        rax = errno_location ();\n        r12d = *(rax);\n        fclose (rbx);\n        if (r12d != 0) {\n            goto label_3;\n        }\nlabel_0:\n        return rax;\n        eax = fileno (rbx);\n        esi = 0;\n        edx = 1;\n        edi = eax;\n        rax = lseek ();\n    }\nlabel_2:\n    rdi = rbx;\nlabel_1:\n    void (*0x4029d0)() ();\nlabel_3:\n    *(rbp) = r12d;\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00414460",
            "funcStartAddr": "0x414460",
            "funcEndAddr": "0x414464",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x414460 */\n#include <stdint.h>\n \nvoid fcn_00414460 (int64_t arg1) {\n    rdi = arg1;\n    *(rdi) |= 0x20;\n}\n"
        },
        {
            "funcName": "fcn_00414470",
            "funcStartAddr": "0x414470",
            "funcEndAddr": "0x4273b2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x414470 */\n#include <stdint.h>\n \nuint64_t fcn_00414470 (uint32_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_6ech;\n    char ** var_6e8h;\n    char ** var_6e0h;\n    int64_t var_6d8h;\n    int64_t var_6d0h;\n    char ** var_6c8h;\n    void * var_6c0h;\n    uint32_t var_6b8h;\n    char ** var_6b0h;\n    void * var_6a8h;\n    char ** var_6a0h;\n    uint32_t var_690h;\n    uint32_t var_688h;\n    int64_t var_67ch;\n    int64_t var_678h;\n    int64_t var_674h;\n    int64_t var_670h;\n    int64_t var_668h;\n    uint32_t var_580h;\n    int64_t var_578h;\n    int64_t var_570h;\n    int64_t var_568h;\n    int64_t var_2f0h;\n    int64_t var_28h;\n    int64_t var_fh;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\nlabel_1:\n    abort ();\n    r15 = rdx;\n    rbx = rcx;\n    *((rbp - 0x688)) = rdi;\n    *((rbp - 0x6d0)) = rsi;\n    eax = fcn_00416250 (r15, rbp - 0x580, rbp - 0x670);\n    if (eax < 0) {\n        goto label_58;\n    }\n    eax = fcn_00416030 (rbx, rbp - 0x670);\n    if (eax < 0) {\n        goto label_59;\n    }\n    rax = *((rbp - 0x570));\n    rdx = 0xffffffffffffffff;\n    rax += 7;\n    if (rax <= 6) {\n        rax = rdx;\n    }\n    rax += *((rbp - 0x568));\n    if (rax < 0) {\n        goto label_60;\n    }\n    rdi = rax;\n    rdi += 6;\n    if (rdi < 0) {\n        goto label_60;\n    }\n    if (rdi <= 0xf9f) {\n        goto label_61;\n    }\n    if (rdi == -1) {\n        goto label_60;\n    }\n    rax = malloc (rdi);\n    *((rbp - 0x6a8)) = rax;\n    if (rax == 0) {\n        goto label_60;\n    }\n    *((rbp - 0x6d8)) = rax;\n    do {\n        r12d = 0;\n        if (*((rbp - 0x688)) != 0) {\n            rax = *((rbp - 0x6d0));\n            r12 = *(rax);\n        }\n        r14 = *((rbp - 0x578));\n        r13d = 0;\n        r8 = r15;\n        rbx = *((rbp - 0x688));\n        *((rbp - 0x6b8)) = 0;\n        r15 = r13;\n        rcx = *(r14);\n        if (rcx == r8) {\n            goto label_62;\n        }\nlabel_2:\n        rcx -= r8;\n        rax = r15;\n        rax += rcx;\n        r13 = rax;\n        if (rax < 0) {\n            goto label_63;\n        }\n        if (r12 >= rax) {\n            goto label_6;\n        }\n        if (r12 != 0) {\n            goto label_64;\n        }\n        if (rax > 0xc) {\n            goto label_65;\n        }\n        r12d = 0xc;\n        dl = (rbx == *((rbp - 0x688))) ? 1 : 0;\n        if (rbx != 0) {\n            goto label_66;\n        }\nlabel_0:\n        *((rbp - 0x6b0)) = r8;\n        *((rbp - 0x6a0)) = dl;\n        *((rbp - 0x690)) = rcx;\n        rax = malloc (r12);\n        rcx = *((rbp - 0x690));\n        edx = *((rbp - 0x6a0));\n        r9 = rax;\n        r8 = *((rbp - 0x6b0));\n        if (rax == 0) {\n            goto label_5;\n        }\n        if (r15 == 0) {\n            goto label_67;\n        }\n        if (dl == 0) {\n            goto label_67;\n        }\n        *((rbp - 0x6a0)) = r8;\n        *((rbp - 0x690)) = rcx;\n        rax = memcpy (rax, rbx, r15);\n        rcx = *((rbp - 0x690));\n        r8 = *((rbp - 0x6a0));\n        rbx = rax;\n        goto label_6;\nlabel_61:\n        *((rbp - 0x6d8)) = 0;\n        rax += 0x1d;\n        rax &= 0xfffffffffffffff0;\n        rax = rsp + 0xf;\n        rax &= 0xfffffffffffffff0;\n        *((rbp - 0x6a8)) = rax;\n    } while (1);\n    if (rax < 0) {\nlabel_64:\n        goto label_5;\n    }\n    r12 += r12;\n    if (r12 < rax) {\nlabel_65:\n        if (rax == -1) {\n            goto label_5;\n        }\n        r12 = rax;\n    }\n    dl = (rbx == *((rbp - 0x688))) ? 1 : 0;\n    if (rbx == 0) {\n        goto label_0;\n    }\nlabel_66:\n    if (dl != 0) {\n        goto label_0;\n    }\n    *((rbp - 0x6a0)) = r8;\n    *((rbp - 0x690)) = rcx;\n    rax = realloc (rbx, r12);\n    if (rax == 0) {\n        goto label_37;\n    }\n    rcx = *((rbp - 0x690));\n    r8 = *((rbp - 0x6a0));\n    rbx = rax;\nlabel_6:\n    memcpy (rbx + r15, r8, rcx);\nlabel_3:\n    rax = *((rbp - 0x6b8));\n    if (*((rbp - 0x580)) == rax) {\n        goto label_68;\n    }\n    r15d = *((r14 + 0x48));\n    rax = *((r14 + 0x50));\n    if (r15b == 0x25) {\n        goto label_69;\n    }\n    if (rax == -1) {\n        goto label_34;\n    }\n    r8 = *((rbp - 0x668));\n    rax <<= 5;\n    rdx = r8 + rax;\n    eax = *(rdx);\n    *((rbp - 0x690)) = eax;\n    if (r15b == 0x6e) {\n        goto label_70;\n    }\n    eax = r15d;\n    eax &= 0xffffffdf;\n    ecx = rax - 0x45;\n    if (cl > 2) {\n        if (al != 0x41) {\n            goto label_71;\n        }\n    }\n    if (*((rbp - 0x690)) == 0xc) {\n        goto label_72;\n    }\n    goto label_71;\nlabel_8:\n    fp_stack++;\n    goto label_71;\nlabel_9:\n    fp_stack++;\nlabel_71:\n    rsi = *((rbp - 0x6a8));\n    eax = *((r14 + 0x10));\n    r15 = rsi + 1;\n    *(rsi) = 0x25;\n    if ((al & 1) != 0) {\n        rdi = *((rbp - 0x6a8));\n        *((rdi + 1)) = 0x27;\n        r15 = rdi + 2;\n    }\n    if ((al & 2) != 0) {\n        *(r15) = 0x2d;\n        r15++;\n    }\n    if ((al & 4) != 0) {\n        *(r15) = 0x2b;\n        r15++;\n    }\n    if ((al & 8) != 0) {\n        *(r15) = 0x20;\n        r15++;\n    }\n    if ((al & 0x10) != 0) {\n        *(r15) = 0x23;\n        r15++;\n    }\n    if ((al & 0x40) != 0) {\n        *(r15) = 0x49;\n        r15++;\n    }\n    if ((al & 0x20) != 0) {\n        *(r15) = 0x30;\n        r15++;\n    }\n    rsi = *((r14 + 0x18));\n    rdx = *((r14 + 0x20));\n    if (rsi != rdx) {\n        rcx = rdx;\n        *((rbp - 0x6b0)) = r8;\n        rcx -= rsi;\n        rdx = rcx;\n        *((rbp - 0x6a0)) = rcx;\n        memcpy (r15, rsi, rdx);\n        rcx = *((rbp - 0x6a0));\n        r8 = *((rbp - 0x6b0));\n        r15 += rcx;\n    }\n    rsi = *((r14 + 0x30));\n    rdx = *((r14 + 0x38));\n    if (rsi != rdx) {\n        rcx = rdx;\n        *((rbp - 0x6b0)) = r8;\n        rcx -= rsi;\n        rdx = rcx;\n        *((rbp - 0x6a0)) = rcx;\n        memcpy (r15, rsi, rdx);\n        rcx = *((rbp - 0x6a0));\n        r8 = *((rbp - 0x6b0));\n        r15 += rcx;\n    }\n    esi = *((rbp - 0x690));\n    if (esi <= 0x10) {\n        eax = 1;\n        ecx = esi;\n        rax <<= cl;\n        if ((eax & 0x14180) != 0) {\n            goto label_73;\n        }\n        if ((ah & 0x10) != 0) {\n            goto label_74;\n        }\n        if ((ah & 6) != 0) {\n            goto label_75;\n        }\n    }\nlabel_12:\n    eax = *((r14 + 0x48));\n    *((r15 + 1)) = 0;\n    *(r15) = al;\n    rax = *((r14 + 0x28));\n    if (rax == -1) {\n        goto label_76;\n    }\n    rax <<= 5;\n    rax += r8;\n    if (*(rax) != 5) {\n        goto label_34;\n    }\n    *((rbp - 0x6b0)) = 1;\n    eax = *((rax + 0x10));\n    *((rbp - 0x678)) = eax;\nlabel_28:\n    rax = *((r14 + 0x40));\n    if (rax != -1) {\n        rax <<= 5;\n        r8 += rax;\n        if (*(r8) != 5) {\n            goto label_34;\n        }\n        eax = *((rbp - 0x6b0));\n        edx = *((r8 + 0x10));\n        *((rbp + rax*4 - 0x678)) = edx;\n        eax = rax + 1;\n        *((rbp - 0x6b0)) = eax;\n    }\n    rax = r13;\n    rax += 2;\n    if (rax < 0) {\n        goto label_77;\n    }\n    if (r12 >= rax) {\n        goto label_78;\n    }\n    if (r12 != 0) {\n        goto label_79;\n    }\n    if (rax > 0xc) {\n        goto label_80;\n    }\n    r12d = 0xc;\nlabel_20:\n    dl = (rbx == *((rbp - 0x688))) ? 1 : 0;\n    if (rbx == 0) {\n        goto label_81;\n    }\n    if (dl != 0) {\n        goto label_81;\n    }\n    rax = realloc (rbx, r12);\n    r11 = rax;\n    if (rax == 0) {\n        goto label_5;\n    }\nlabel_30:\n    *((r11 + r13)) = 0;\n    *((rbp - 0x6c0)) = r11;\n    rax = errno_location ();\n    r11 = *((rbp - 0x6c0));\n    *((rbp - 0x6c0)) = r15;\n    *((rbp - 0x6a0)) = rax;\n    eax = *(rax);\n    *((rbp - 0x6e0)) = eax;\nlabel_14:\n    rax = *((rbp - 0x6a0));\n    r15 = r12;\n    ebx = 0x7fffffff;\n    *((rbp - 0x67c)) = 0xffffffff;\n    r15 -= r13;\n    *(rax) = 0;\n    eax = *((rbp - 0x690));\n    if (r15 <= 0x7fffffff) {\n        rbx = r15;\n    }\n    if (eax > 0x11) {\n        goto label_1;\n    }\n    /* switch table (18 cases) at 0x41ab60 */\nlabel_43:\n    if (rdi != rdx) {\n        goto label_82;\n    }\nlabel_42:\n    r10 = rcx;\nlabel_10:\n    rdx = *((r14 + 0x30));\n    rcx = *((r14 + 0x38));\n    if (rdx == rcx) {\n        goto label_83;\n    }\n    rsi = *((r14 + 0x40));\n    if (rsi == -1) {\n        goto label_84;\n    }\n    rsi <<= 5;\n    r8 += rsi;\n    if (*(r8) != 5) {\n        goto label_85;\n    }\n    rdx = *((r8 + 0x10));\n    if (edx < 0) {\n        goto label_83;\n    }\nlabel_44:\n    if (rdx == 0) {\n        goto label_86;\n    }\n    rax = rdx;\n    rax += 0xc;\n    rcx = rax;\n    if (rax >= 0) {\n        goto label_51;\n    }\n    fp_stack++;\n    goto label_5;\nlabel_21:\n    fp_stack++;\n    goto label_5;\nlabel_22:\n    fp_stack++;\n    goto label_5;\nlabel_46:\n    fp_stack++;\n    goto label_5;\nlabel_47:\n    fp_stack++;\nlabel_5:\n    rax = errno_location ();\n    r15 = rbx;\n    *((rbp - 0x6a0)) = rax;\nlabel_23:\n    if (r15 != *((rbp - 0x688))) {\n        if (r15 != 0) {\n            goto label_87;\n        }\n    }\nlabel_13:\n    rax = *((rbp - 0x6d8));\n    if (rax == 0) {\n        goto label_60;\n    }\n    free (rax);\nlabel_4:\n    rax = rbp - 0x580;\n    rdi = *((rbp - 0x578));\n    rax += 0x20;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = rbp - 0x670;\n    rdi = *((rbp - 0x668));\n    rax += 0x10;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = *((rbp - 0x6a0));\n    ebx = 0;\n    *(rax) = 0xc;\nlabel_7:\n    rsp = rbp - 0x28;\n    rax = rbx;\n    return rax;\nlabel_69:\n    if (rax != -1) {\n        goto label_34;\n    }\n    rax = r13;\n    rax++;\n    r15 = rax;\n    if (rax < 0) {\n        goto label_88;\n    }\n    if (r12 < rax) {\n        if (r12 != 0) {\n            goto label_89;\n        }\n        if (rax > 0xc) {\n            goto label_90;\n        }\n        r12d = 0xc;\nlabel_31:\n        dl = (rbx == *((rbp - 0x688))) ? 1 : 0;\n        if (rbx == 0) {\n            goto label_91;\n        }\n        if (dl != 0) {\n            goto label_91;\n        }\n        rax = realloc (rbx, r12);\n        if (rax == 0) {\n            goto label_37;\n        }\n        rbx = rax;\n    }\nlabel_29:\n    *((rbx + r13)) = 0x25;\nlabel_11:\n    r8 = *((r14 + 8));\n    r14 += 0x58;\n    rcx = *(r14);\n    *((rbp - 0x6b8))++;\n    if (rcx != r8) {\n        goto label_2;\n    }\nlabel_62:\n    r13 = r15;\n    goto label_3;\nlabel_60:\n    rax = errno_location ();\n    *((rbp - 0x6a0)) = rax;\n    goto label_4;\nlabel_63:\n    if (r12 != -1) {\n        goto label_5;\n    }\n    r13 = 0xffffffffffffffff;\n    goto label_6;\nlabel_70:\n    eax -= 0x12;\n    if (eax > 4) {\n        goto label_1;\n    }\n    /* switch table (5 cases) at 0x41abf0 */\nlabel_58:\n    ebx = 0;\n    goto label_7;\nlabel_72:\n    *(fp_stack--) = fp_stack[?];\n    if (fp_stack[0] == fp_stack[0]) {\n        goto label_92;\n    }\n    *(fp_stack--) = fp_stack[0];\n    fp_stack[0] += fp_stack[1];\n    fp_tmp_0 = fp_stack[1];\n    fp_stack[1] = fp_stack[0];\n    fp_stack[0] = fp_tmp_0;\n    fp_stack[1] = fp_stack[0];\n    fp_stack--;\n    if (fp_stack[0] == fp_stack[1]) {\n        goto label_8;\n    }\n    if (fp_stack[0] != fp_stack[1]) {\n        goto label_9;\n    }\nlabel_92:\n    rdx = *((r14 + 0x18));\n    rdi = *((r14 + 0x20));\n    r11d = *((r14 + 0x10));\n    if (rdx == rdi) {\n        goto label_93;\n    }\n    rcx = *((r14 + 0x28));\n    if (rcx == -1) {\n        goto label_94;\n    }\n    rcx <<= 5;\n    rcx += r8;\n    if (*(rcx) != 5) {\n        goto label_95;\n    }\n    r10 = *((rcx + 0x10));\n    if (r10d >= 0) {\n        goto label_10;\n    }\n    r11d |= 2;\n    r10 = -r10;\n    goto label_10;\n    rax = *((rdx + 0x10));\n    r15 = r13;\n    *(rax) = r13;\n    goto label_11;\nlabel_75:\n    *(r15) = 0x6c;\n    r15++;\nlabel_73:\n    *(r15) = 0x6c;\n    r15++;\n    goto label_12;\nlabel_37:\n    rax = errno_location ();\n    r15 = rbx;\n    *((rbp - 0x6a0)) = rax;\nlabel_87:\n    free (r15);\n    goto label_13;\n    rax = *((r14 + 0x50));\n    rdi = r11 + r13;\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    r9 = *((rax + 0x10));\n    eax = *((rbp - 0x6b0));\n    *((rbp - 0x6c8)) = r11;\n    if (eax == 1) {\n        goto label_96;\n    }\n    if (eax == 2) {\n        goto label_97;\n    }\n    rax = rbp - 0x67c;\nlabel_17:\n    r8 = *((rbp - 0x6a8));\n    rsi = rbx;\n    edx = 1;\n    eax = 0;\n    rcx = 0xffffffffffffffff;\n    eax = snprintf_chk ();\n    r11 = *((rbp - 0x6c8));\nlabel_19:\n    edx = *((rbp - 0x67c));\n    if (edx < 0) {\n        goto label_98;\n    }\nlabel_15:\n    rcx = (int64_t) edx;\n    if (rcx < rbx) {\n        rcx += r11;\n        if (*((rcx + r13)) != 0) {\n            goto label_34;\n        }\n    }\n    if (edx < eax) {\nlabel_16:\n        *((rbp - 0x67c)) = eax;\n        edx = eax;\n    }\n    eax = rdx + 1;\n    if (rax < rbx) {\n        goto label_99;\n    }\n    if (r15 > 0x7ffffffe) {\n        goto label_100;\n    }\n    eax = rdx + 2;\n    ecx = 0;\n    rax += r13;\n    cl = (rax < 0) ? 1 : 0;\n    if (r12 < 0) {\n        goto label_101;\n    }\n    rdx = r12 + r12;\n    if (rcx != 0) {\n        goto label_24;\n    }\n    if (rdx >= rax) {\n        rax = rdx;\n    }\n    if (r12 >= rax) {\n        goto label_14;\n    }\n    r12 += r12;\n    if (r12 < rax) {\n        goto label_102;\n    }\nlabel_25:\n    bl = (r11 == *((rbp - 0x688))) ? 1 : 0;\n    if (r11 == 0) {\n        goto label_103;\n    }\n    if (bl != 0) {\n        goto label_103;\n    }\n    rdi = r11;\n    *((rbp - 0x6c8)) = r11;\n    rax = realloc (rdi, r12);\n    r11 = *((rbp - 0x6c8));\n    if (rax == 0) {\n        goto label_24;\n    }\n    r11 = rax;\n    goto label_14;\n    rax = *((r14 + 0x50));\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    r9d = *((rax + 0x10));\nlabel_18:\n    eax = *((rbp - 0x6b0));\n    rdi = r11 + r13;\n    *((rbp - 0x6c8)) = r11;\n    if (eax == 1) {\n        goto label_104;\n    }\n    if (eax == 2) {\n        goto label_105;\n    }\n    rax = rbp - 0x67c;\nlabel_26:\n    r8 = *((rbp - 0x6a8));\n    rcx = 0xffffffffffffffff;\n    rsi = rbx;\n    eax = 0;\n    edx = 1;\n    eax = snprintf_chk ();\n    edx = *((rbp - 0x67c));\n    r11 = *((rbp - 0x6c8));\n    if (edx >= 0) {\n        goto label_15;\n    }\nlabel_98:\n    rsi = *((rbp - 0x6c0));\n    if (*((rsi + 1)) != 0) {\n        goto label_106;\n    }\n    if (eax >= 0) {\n        goto label_16;\n    }\n    rax = *((rbp - 0x6a0));\n    r15 = r11;\n    ebx = *(rax);\n    if (ebx == 0) {\n        eax = *((r14 + 0x48));\n        ebx = 0x54;\n        eax &= 0xffffffef;\n        eax = 0x16;\n        if (al == 0x63) {\n            ebx = eax;\n            goto label_107;\n        }\n    }\nlabel_107:\n    if (r15 != *((rbp - 0x688))) {\n        if (r15 == 0) {\n            goto label_108;\n        }\n        free (r15);\n    }\nlabel_108:\n    rax = *((rbp - 0x6d8));\n    if (rax != 0) {\n        free (rax);\n    }\n    rax = rbp - 0x580;\n    rdi = *((rbp - 0x578));\n    rax += 0x20;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = rbp - 0x670;\n    rdi = *((rbp - 0x668));\n    rax += 0x10;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = *((rbp - 0x6a0));\n    *(rax) = ebx;\n    ebx = 0;\n    goto label_7;\n    rax = *((r14 + 0x50));\n    rdi = r11 + r13;\n    *((rbp - 0x6c8)) = r11;\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    *(fp_stack--) = fp_stack[?];\n    eax = *((rbp - 0x6b0));\n    if (eax == 1) {\n        goto label_109;\n    }\n    if (eax == 2) {\n        goto label_110;\n    }\n    r9 = rbp - 0x67c;\n    ? = fp_stack[0];\n    fp_stack--;\n    goto label_17;\n    rax = *((r14 + 0x50));\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    r9d = *((rax + 0x10));\n    goto label_18;\n    rax = *((r14 + 0x50));\n    rdi = r11 + r13;\n    *((rbp - 0x6c8)) = r11;\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    xmm0 = *((rax + 0x10));\n    eax = *((rbp - 0x6b0));\n    if (eax == 1) {\n        goto label_111;\n    }\n    if (eax == 2) {\n        goto label_112;\n    }\n    r8 = *((rbp - 0x6a8));\n    r9 = rbp - 0x67c;\n    edx = 1;\n    rsi = rbx;\n    rcx = 0xffffffffffffffff;\n    eax = 1;\n    snprintf_chk ();\n    r11 = *((rbp - 0x6c8));\n    goto label_19;\n    rax = *((r14 + 0x50));\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    r9d = *((rax + 0x10));\n    goto label_18;\n    rax = *((r14 + 0x50));\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    r9d = *((rax + 0x10));\n    goto label_18;\n    rax = *((r14 + 0x50));\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    r9d = *((rax + 0x10));\n    goto label_18;\n    if (rax < 0) {\nlabel_79:\n        goto label_5;\n    }\n    r12 += r12;\n    if (r12 >= rax) {\n        goto label_20;\n    }\nlabel_80:\n    if (rax == -1) {\n        goto label_5;\n    }\n    r12 = rax;\n    goto label_20;\n    rax = *((rdx + 0x10));\n    r15 = r13;\n    *(rax) = r13d;\n    goto label_11;\n    rax = *((rdx + 0x10));\n    r15 = r13;\n    *(rax) = r13w;\n    goto label_11;\n    rax = *((rdx + 0x10));\n    r15 = r13;\n    *(rax) = r13b;\n    goto label_11;\nlabel_83:\n    edx = 0x12;\n    ecx = 0xc;\n    eax = 6;\n    if (al != 0x41) {\n        rcx = rdx;\n    }\n    edx = 0;\n    if (al != 0x41) {\n        rdx = rax;\n    }\nlabel_51:\n    rax = rcx;\n    if (r10 >= rcx) {\n        rax = r10;\n    }\n    rax++;\n    *((rbp - 0x690)) = rax;\n    if (rax < 0) {\n        goto label_21;\n    }\n    if (rax <= 0x2bc) {\n        goto label_113;\n    }\n    *((rbp - 0x6c8)) = r10;\n    *((rbp - 0x6c0)) = rdx;\n    *((rbp - 0x6b0)) = r11d;\n    ? = fp_stack[0];\n    fp_stack--;\n    if (rax == -1) {\n        goto label_5;\n    }\n    rax = malloc (rax);\n    r11d = *((rbp - 0x6b0));\n    *(fp_stack--) = fp_stack[?];\n    rcx = rax;\n    rdx = *((rbp - 0x6c0));\n    r10 = *((rbp - 0x6c8));\n    if (rax == 0) {\n        goto label_22;\n    }\nlabel_33:\n    if (fp_stack[0] == fp_stack[0]) {\n        goto label_114;\n    }\n    r8d = *((rbp - 0x678));\n    eax = r8d;\n    ah |= 3;\n    *((rbp - 0x678)) = ax;\n    __asm (\"fxam\");\n    ax = fp_status;\n    if ((ah & 2) == 0) {\n        goto label_115;\n    }\n    *(rcx) = 0x2d;\n    fp_stack[0] = -fp_stack[0];\n    r15 = rcx + 1;\nlabel_35:\n    *(fp_stack--) = 0.0;\n    fp_tmp_1 = fp_stack[1];\n    fp_stack[1] = fp_stack[0];\n    fp_stack[0] = fp_tmp_1;\n    if (fp_stack[0] <= fp_stack[1]) {\n        goto label_116;\n    }\n    fp_stack[1] = fp_stack[0];\n    fp_stack--;\n    *(fp_stack--) = fp_stack[0];\n    fp_stack[0] += fp_stack[1];\n    __asm (\"fucompi st(1)\");\n    fp_stack++;\n    if (fp_stack[0] != fp_stack[1]) {\n        goto label_117;\n    }\n    goto label_34;\nlabel_85:\n    fp_stack++;\n    goto label_34;\nlabel_95:\n    fp_stack++;\nlabel_34:\n    abort ();\nlabel_101:\n    if (r12 == -1) {\n        goto label_14;\n    }\n    do {\nlabel_24:\n        r15 = r11;\n        goto label_23;\nlabel_103:\n        *((rbp - 0x6c8)) = r11;\n        rax = malloc (r12);\n        r11 = *((rbp - 0x6c8));\n        rcx = rax;\n    } while (rax == 0);\n    if (r13 == 0) {\n        goto label_118;\n    }\n    if (bl == 0) {\n        goto label_118;\n    }\n    rax = memcpy (rax, r11, r13);\n    r11 = rax;\n    goto label_14;\nlabel_102:\n    if (rax == -1) {\n        goto label_24;\n    }\n    r12 = rax;\n    goto label_25;\nlabel_105:\n    rax = rbp - 0x67c;\n    do {\n        eax = *((rbp - 0x674));\nlabel_32:\n        r9d = *((rbp - 0x678));\n        edx = 1;\n        rsi = rbx;\n        eax = 0;\n        r8 = *((rbp - 0x6a8));\n        rcx = 0xffffffffffffffff;\n        snprintf_chk ();\n        r11 = *((rbp - 0x6c8));\n        goto label_19;\nlabel_104:\n        rax = rbp - 0x67c;\nlabel_27:\n        r9d = *((rbp - 0x678));\n        goto label_26;\nlabel_97:\n        rax = rbp - 0x67c;\n    } while (1);\nlabel_96:\n    rax = rbp - 0x67c;\n    goto label_27;\nlabel_106:\n    *((rsi + 1)) = 0;\n    goto label_14;\nlabel_118:\n    r11 = rcx;\n    goto label_14;\nlabel_76:\n    *((rbp - 0x6b0)) = 0;\n    goto label_28;\nlabel_88:\n    if (r12 != -1) {\n        goto label_5;\n    }\n    r15 = 0xffffffffffffffff;\n    goto label_29;\nlabel_81:\n    *((rbp - 0x6a0)) = dl;\n    rax = malloc (r12);\n    edx = *((rbp - 0x6a0));\n    r11 = rax;\n    if (rax == 0) {\n        goto label_5;\n    }\n    if (r13 == 0) {\n        goto label_30;\n    }\n    if (dl == 0) {\n        goto label_30;\n    }\n    rax = memcpy (rax, rbx, r13);\n    r11 = rax;\n    goto label_30;\nlabel_77:\n    if (r12 != -1) {\n        goto label_5;\n    }\nlabel_78:\n    r11 = rbx;\n    goto label_30;\nlabel_91:\n    *((rbp - 0x690)) = dl;\n    rax = malloc (r12);\n    edx = *((rbp - 0x690));\n    rcx = rax;\n    if (rax == 0) {\n        goto label_5;\n    }\n    if (r13 == 0) {\n        goto label_119;\n    }\n    if (dl == 0) {\n        goto label_119;\n    }\n    rax = memcpy (rax, rbx, r13);\n    rbx = rax;\n    goto label_29;\nlabel_67:\n    rbx = r9;\n    goto label_6;\nlabel_59:\n    rax = rbp - 0x580;\n    rdi = *((rbp - 0x578));\n    rax += 0x20;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = rbp - 0x670;\n    rdi = *((rbp - 0x668));\n    rax += 0x10;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    errno_location ();\n    ebx = 0;\n    *(rax) = 0x16;\n    goto label_7;\n    if (rdi < rax) {\nlabel_89:\n        goto label_5;\n    }\n    r12 += r12;\n    if (r12 >= rax) {\n        goto label_31;\n    }\nlabel_90:\n    if (rax == -1) {\n        goto label_5;\n    }\n    r12 = rax;\n    goto label_31;\nlabel_74:\n    *(r15) = 0x4c;\n    r15++;\n    goto label_12;\nlabel_112:\n    rax = rbp - 0x67c;\n    eax = *((rbp - 0x674));\n    do {\n        r9d = *((rbp - 0x678));\n        r8 = *((rbp - 0x6a8));\n        edx = 1;\n        rsi = rbx;\n        rcx = 0xffffffffffffffff;\n        eax = 1;\n        snprintf_chk ();\n        r11 = *((rbp - 0x6c8));\n        goto label_19;\nlabel_111:\n        rax = rbp - 0x67c;\n    } while (1);\nlabel_110:\n    rax = rbp - 0x67c;\n    r9d = *((rbp - 0x678));\n    r8 = *((rbp - 0x6a8));\n    eax = *((rbp - 0x674));\n    edx = 1;\n    rsi = rbx;\n    rcx = 0xffffffffffffffff;\n    ? = fp_stack[0];\n    fp_stack--;\n    eax = 0;\n    snprintf_chk ();\n    r11 = *((rbp - 0x6c8));\n    goto label_19;\nlabel_109:\n    rax = rbp - 0x67c;\n    ? = fp_stack[0];\n    fp_stack--;\n    goto label_32;\nlabel_99:\n    rax = *((rbp - 0x6a0));\n    esi = *((rbp - 0x6e0));\n    r15 = (int64_t) edx;\n    rbx = r11;\n    r15 += r13;\n    *(rax) = esi;\n    goto label_11;\nlabel_100:\n    if (r11 != *((rbp - 0x688))) {\n        if (r11 == 0) {\n            goto label_120;\n        }\n        free (r11);\n    }\nlabel_120:\n    rax = *((rbp - 0x6d8));\n    if (rax != 0) {\n        free (rax);\n    }\n    rax = rbp - 0x580;\n    rdi = *((rbp - 0x578));\n    rax += 0x20;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = rbp - 0x670;\n    rdi = *((rbp - 0x668));\n    rax += 0x10;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = *((rbp - 0x6a0));\n    ebx = 0;\n    *(rax) = 0x4b;\n    goto label_7;\nlabel_113:\n    rcx = rbp - 0x2f0;\n    goto label_33;\nlabel_116:\n    __asm (\"fucompi st(1)\");\n    fp_stack++;\n    if (rdi == rax) {\n        goto label_34;\n    }\n    if (rdi != rax) {\n        goto label_34;\n    }\n    eax = *((r14 + 0x48));\n    eax &= 0xffffffdf;\n    if (al != 0x46) {\n        goto label_121;\n    }\n    *(r15) = 0x30;\n    if ((r11b & 0x10) != 0) {\n        goto label_122;\n    }\n    if (rdx != 0) {\n        goto label_122;\n    }\nlabel_40:\n    r9 = r15 + 1;\nlabel_36:\n    *((rbp - 0x678)) = r8w;\nlabel_50:\n    r8 = r9;\n    r8 -= rcx;\n    if (r10 <= r8) {\n        goto label_39;\n    }\n    r10 -= r8;\n    rdi = r9 + r10;\n    r8 = rdi;\n    r8 -= rcx;\n    if ((r11b & 2) != 0) {\n        goto label_123;\n    }\n    r11d &= 0x20;\n    if (r11d == 0) {\n        goto label_124;\n    }\n    if (r15 == 0) {\n        goto label_124;\n    }\n    if (r15 >= r9) {\n        goto label_125;\n    }\n    rdx = r15 - 1;\n    rax = 0xffffffffffffffff;\n    rdx -= r9;\n    do {\n        esi = *((r9 + rax));\n        *((rdi + rax)) = sil;\n        rax--;\n    } while (rax != rdx);\nlabel_56:\n    if (r10 == 0) {\n        goto label_39;\n    }\n    r10 += r15;\n    do {\n        r15++;\n        *((r15 - 1)) = 0x30;\n    } while (r15 != r10);\nlabel_39:\n    if (*((rbp - 0x690)) <= r8) {\n        goto label_34;\n    }\n    rdx = r12;\n    rax = r13;\n    esi = 0;\n    rdx -= r13;\n    rax += r8;\n    sil = (rax < 0) ? 1 : 0;\n    r15 = rax;\n    if (rdx > r8) {\n        goto label_38;\n    }\n    if (rsi != 0) {\n        goto label_126;\n    }\n    if (r12 >= rax) {\n        goto label_38;\n    }\n    if (r12 != 0) {\n        goto label_127;\n    }\n    if (rax > 0xc) {\n        goto label_128;\n    }\n    r12d = 0xc;\nlabel_49:\n    dl = (rbx == *((rbp - 0x688))) ? 1 : 0;\n    if (rbx == 0) {\n        goto label_129;\n    }\n    if (dl != 0) {\n        goto label_129;\n    }\n    *((rbp - 0x6a0)) = r8;\n    *((rbp - 0x690)) = rcx;\n    rax = realloc (rbx, r12);\n    if (rax == 0) {\n        goto label_5;\n    }\n    rcx = *((rbp - 0x690));\n    r8 = *((rbp - 0x6a0));\n    rbx = rax;\nlabel_38:\n    rsi = rcx;\n    *((rbp - 0x690)) = rcx;\n    memcpy (rbx + r13, rsi, r8);\n    rcx = *((rbp - 0x690));\n    rax = rbp - 0x2f0;\n    if (rcx == rax) {\n        goto label_11;\n    }\n    al = free (rcx);\n    goto label_11;\nlabel_115:\n    if ((r11b & 4) == 0) {\n        goto label_130;\n    }\n    r15 = rcx + 1;\n    *(rcx) = 0x2b;\n    goto label_35;\nlabel_119:\n    rbx = rcx;\n    goto label_29;\nlabel_121:\n    if (al != 0x45) {\n        goto label_131;\n    }\n    *(r15) = 0x30;\n    if ((r11b & 0x10) != 0) {\n        goto label_132;\n    }\n    rsi = r15 + 1;\n    al = (rdx != 0) ? 1 : 0;\n    if (al != 0) {\n        goto label_132;\n    }\nlabel_52:\n    eax = *((r14 + 0x48));\n    r9 = rsi + 4;\n    *((rsi + 3)) = 0x30;\n    *(rsi) = al;\n    eax = 0x302b;\n    *((rsi + 1)) = ax;\n    goto label_36;\nlabel_93:\n    r10d = 0;\n    goto label_10;\n    if (al != 0) {\nlabel_117:\n        goto label_34;\n    }\n    eax = *((r14 + 0x48));\n    r9 = r15 + 3;\n    eax -= 0x41;\n    if (al > 0x19) {\n        goto label_133;\n    }\n    eax = 0x4e49;\n    *((r15 + 2)) = 0x46;\n    *(r15) = ax;\n    r15d = 0;\n    goto label_36;\nlabel_68:\n    r14 = r13;\n    r15 = r13;\n    r14++;\n    if (r14 < 0) {\n        goto label_134;\n    }\n    if (r12 >= r14) {\n        goto label_53;\n    }\n    if (r12 != 0) {\n        goto label_135;\n    }\n    if (r14 > 0xc) {\n        goto label_136;\n    }\n    r12d = 0xc;\nlabel_54:\n    r13b = (rbx == *((rbp - 0x688))) ? 1 : 0;\n    if (rbx == 0) {\n        goto label_137;\n    }\n    if (r13b != 0) {\n        goto label_137;\n    }\n    rax = realloc (rbx, r12);\n    if (rax == 0) {\n        goto label_37;\n    }\n    rbx = rax;\nlabel_53:\n    *((rbx + r15)) = 0;\n    if (r12 > r14) {\n        if (rbx == *((rbp - 0x688))) {\n            goto label_138;\n        }\n        rax = realloc (rbx, r14);\n        if (rax == 0) {\n            rbx = rax;\n            goto label_138;\n        }\n    }\nlabel_138:\n    rax = *((rbp - 0x6d8));\n    if (rax != 0) {\n        free (rax);\n    }\n    rax = rbp - 0x580;\n    rdi = *((rbp - 0x578));\n    rax += 0x20;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = rbp - 0x670;\n    rdi = *((rbp - 0x668));\n    rax += 0x10;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = *((rbp - 0x6d0));\n    *(rax) = r15;\n    goto label_7;\nlabel_126:\n    if (r12 != -1) {\n        goto label_5;\n    }\n    goto label_38;\nlabel_130:\n    r15 = rcx;\n    if ((r11b & 8) == 0) {\n        goto label_35;\n    }\n    r15 = rcx + 1;\n    *(rcx) = 0x20;\n    goto label_35;\nlabel_124:\n    rdx = rcx - 1;\n    rax = 0xffffffffffffffff;\n    rdx -= r9;\n    if (rcx >= r9) {\n        goto label_139;\n    }\n    do {\n        esi = *((r9 + rax));\n        *((rdi + rax)) = sil;\n        rax--;\n    } while (rdx != rax);\n    r9 = rcx;\nlabel_139:\n    if (r10 == 0) {\n        goto label_39;\n    }\n    r10 += r9;\n    do {\n        r9++;\n        *((r9 - 1)) = 0x20;\n    } while (r9 != r10);\n    goto label_39;\nlabel_129:\n    *((rbp - 0x6b0)) = dl;\n    *((rbp - 0x6a0)) = r8;\n    *((rbp - 0x690)) = rcx;\n    rax = malloc (r12);\n    rcx = *((rbp - 0x690));\n    r8 = *((rbp - 0x6a0));\n    r9 = rax;\n    edx = *((rbp - 0x6b0));\n    if (rax == 0) {\n        goto label_5;\n    }\n    if (r13 == 0) {\n        goto label_140;\n    }\n    if (dl == 0) {\n        goto label_140;\n    }\n    *((rbp - 0x6a0)) = r8;\n    *((rbp - 0x690)) = rcx;\n    rax = memcpy (rax, rbx, r13);\n    rcx = *((rbp - 0x690));\n    r8 = *((rbp - 0x6a0));\n    rbx = rax;\n    goto label_38;\nlabel_131:\n    if (al != 0x47) {\n        goto label_141;\n    }\n    *(r15) = 0x30;\n    if ((r11b & 0x10) == 0) {\n        goto label_40;\n    }\n    r9 = r15 + 2;\n    if (rdx == 0) {\n        goto label_142;\n    }\n    rsi = rdx - 1;\n    *((rbp - 0x6ec)) = r8d;\n    *((rbp - 0x6e8)) = r10;\n    *((rbp - 0x6e0)) = r9;\n    *((rbp - 0x6c8)) = rcx;\n    *((rbp - 0x6c0)) = r11d;\n    *((rbp - 0x6b0)) = rdx;\n    *((rbp - 0x6a0)) = rsi;\n    rax = nl_langinfo (0x10000);\n    rsi = *((rbp - 0x6a0));\n    rdx = *((rbp - 0x6b0));\n    eax = *(rax);\n    r11d = *((rbp - 0x6c0));\n    rcx = *((rbp - 0x6c8));\n    r9 = *((rbp - 0x6e0));\n    r10 = *((rbp - 0x6e8));\n    r8d = *((rbp - 0x6ec));\n    if (al == 0) {\n        goto label_143;\n    }\nlabel_57:\n    *((r15 + 1)) = al;\n    if (rsi == 0) {\n        goto label_36;\n    }\n    rdx = r15 + rdx + 1;\n    rax = r9;\n    do {\n        rax++;\n        *((rax - 1)) = 0x30;\n    } while (rax != rdx);\n    r9 += rsi;\n    goto label_36;\nlabel_123:\n    if (r10 == 0) {\n        goto label_39;\n    }\n    do {\n        r9++;\n        *((r9 - 1)) = 0x20;\n    } while (rdi != r9);\n    goto label_39;\nlabel_133:\n    eax = 0x6e69;\n    *((r15 + 2)) = 0x66;\n    *(r15) = ax;\n    r15d = 0;\n    goto label_36;\nlabel_122:\n    r9 = r15 + 2;\n    *((rbp - 0x6e8)) = r8d;\n    *((rbp - 0x6e0)) = r10;\n    *((rbp - 0x6c8)) = rcx;\n    *((rbp - 0x6c0)) = rdx;\n    *((rbp - 0x6b0)) = r11d;\n    *((rbp - 0x6a0)) = r9;\n    rax = nl_langinfo (0x10000);\n    esi = 0x2e;\n    rdx = *((rbp - 0x6c0));\n    r9 = *((rbp - 0x6a0));\n    eax = *(rax);\n    r11d = *((rbp - 0x6b0));\n    rcx = *((rbp - 0x6c8));\n    r10 = *((rbp - 0x6e0));\n    r8d = *((rbp - 0x6e8));\n    if (al == 0) {\n        eax = esi;\n    }\n    *((r15 + 1)) = al;\n    if (rdx == 0) {\n        goto label_36;\n    }\n    rsi = r15 + rdx + 2;\n    rax = r9;\n    do {\n        rax++;\n        *((rax - 1)) = 0x30;\n    } while (rax != rsi);\n    r9 += rdx;\n    goto label_36;\nlabel_94:\n    r10d = 0;\n    *((rbp - 0x690)) = rcx;\n    goto label_144;\nlabel_41:\n    if (rdi == rdx) {\n        goto label_10;\n    }\nlabel_144:\n    rsi = rdx + 1;\n    edx = *(rdx);\n    rcx = 0x1999999999999999;\n    r9 = 0xffffffffffffffff;\n    edx -= 0x30;\n    rdx = (int64_t) edx;\n    if (r10 <= rcx) {\n        r9 = r10 * 5;\n        r9 += r9;\n    }\n    rdx += r9;\n    r10 = rdx;\n    rdx = rsi;\n    if (rdx >= 0) {\n        goto label_41;\n    }\n    rcx = *((rbp - 0x690));\n    if (rdi == rsi) {\n        goto label_42;\n    }\nlabel_82:\n    rdx++;\n    if (*((rdx - 1)) != 0x30) {\n        goto label_43;\n    }\n    *((rbp - 0x690)) = rcx;\n    r10 = 0xffffffffffffffff;\n    goto label_41;\nlabel_84:\n    rax = rdx + 1;\n    edx = 0;\n    if (rcx == rax) {\n        goto label_86;\n    }\n    rsi = rax;\n    goto label_145;\nlabel_45:\n    if (rcx == rsi) {\n        goto label_44;\n    }\nlabel_145:\n    r9 = 0x1999999999999999;\n    rdi = rsi + 1;\n    esi = *(rsi);\n    esi -= 0x30;\n    rax = (int64_t) esi;\n    rsi = 0xffffffffffffffff;\n    if (rdx <= r9) {\n        rsi = rdx * 5;\n        rsi += rsi;\n    }\n    rax += rsi;\n    rsi = rdi;\n    rdx = rax;\n    if (rax >= 0) {\n        goto label_45;\n    }\n    if (rcx == rdi) {\n        goto label_46;\n    }\nlabel_48:\n    rsi = rdi + 1;\n    if (*((rsi - 1)) == 0x30) {\n        rdx = 0xffffffffffffffff;\n        goto label_45;\n    }\n    if (rcx == rsi) {\n        goto label_47;\n    }\n    rdi = rsi;\n    goto label_48;\n    if (rcx < rsi) {\nlabel_127:\n        goto label_5;\n    }\n    r12 += r12;\n    if (r12 >= rax) {\n        goto label_49;\n    }\nlabel_128:\n    if (rax == -1) {\n        goto label_5;\n    }\n    r12 = rax;\n    goto label_49;\nlabel_114:\n    fp_stack++;\n    r15d -= 0x41;\n    r9 = rcx + 3;\n    if (r15b > 0x19) {\n        goto label_146;\n    }\n    eax = 0x414e;\n    *((rcx + 2)) = 0x4e;\n    r15d = 0;\n    *(rcx) = ax;\n    goto label_50;\nlabel_86:\n    ecx = 0xc;\n    goto label_51;\nlabel_141:\n    if (al != 0x41) {\n        goto label_34;\n    }\n    rax = r15 + 2;\n    *(r15) = 0x30;\n    *((rbp - 0x6a0)) = rax;\n    eax = *((r14 + 0x48));\n    *((r15 + 2)) = 0x30;\n    eax += 0x17;\n    *((r15 + 1)) = al;\n    if ((r11b & 0x10) != 0) {\n        goto label_147;\n    }\n    rsi = r15 + 3;\n    al = (rdx != 0) ? 1 : 0;\n    if (al != 0) {\n        goto label_147;\n    }\nlabel_55:\n    eax = *((r14 + 0x48));\n    r15d = 0x302b;\n    r9 = rsi + 3;\n    *((rsi + 1)) = r15w;\n    r15 = *((rbp - 0x6a0));\n    eax += 0xf;\n    *(rsi) = al;\n    goto label_36;\nlabel_132:\n    rsi = r15 + 2;\n    *((rbp - 0x6e8)) = r8d;\n    *((rbp - 0x6e0)) = r10;\n    *((rbp - 0x6c8)) = rcx;\n    *((rbp - 0x6c0)) = rdx;\n    *((rbp - 0x6b0)) = r11d;\n    *((rbp - 0x6a0)) = rsi;\n    rax = nl_langinfo (0x10000);\n    edi = 0x2e;\n    rdx = *((rbp - 0x6c0));\n    rsi = *((rbp - 0x6a0));\n    eax = *(rax);\n    r11d = *((rbp - 0x6b0));\n    rcx = *((rbp - 0x6c8));\n    r10 = *((rbp - 0x6e0));\n    r8d = *((rbp - 0x6e8));\n    if (al == 0) {\n        eax = edi;\n    }\n    *((r15 + 1)) = al;\n    if (rdx == 0) {\n        goto label_52;\n    }\n    rdi = r15 + rdx + 2;\n    rax = rsi;\n    do {\n        rax++;\n        *((rax - 1)) = 0x30;\n    } while (rax != rdi);\n    rsi += rdx;\n    goto label_52;\nlabel_140:\n    rbx = r9;\n    goto label_38;\nlabel_146:\n    eax = 0x616e;\n    *((rcx + 2)) = 0x6e;\n    r15d = 0;\n    *(rcx) = ax;\n    goto label_50;\nlabel_137:\n    rax = malloc (r12);\n    rcx = rax;\n    if (rax == 0) {\n        goto label_5;\n    }\n    rdx = r15;\n    if (r15 == 0) {\n        goto label_148;\n    }\n    if (r13b == 0) {\n        goto label_148;\n    }\n    rax = memcpy (rax, rbx, rdx);\n    rbx = rax;\n    goto label_53;\n    if (r13b < 0) {\nlabel_135:\n        goto label_5;\n    }\n    r12 += r12;\n    if (r12 >= r14) {\n        goto label_54;\n    }\nlabel_136:\n    if (r14 == -1) {\n        goto label_5;\n    }\n    r12 = r14;\n    goto label_54;\nlabel_147:\n    rsi = r15 + 4;\n    *((rbp - 0x6ec)) = r8d;\n    *((rbp - 0x6e8)) = r10;\n    *((rbp - 0x6e0)) = rcx;\n    *((rbp - 0x6c8)) = rdx;\n    *((rbp - 0x6c0)) = r11d;\n    *((rbp - 0x6b0)) = rsi;\n    rax = nl_langinfo (0x10000);\n    edi = 0x2e;\n    rdx = *((rbp - 0x6c8));\n    rsi = *((rbp - 0x6b0));\n    eax = *(rax);\n    r11d = *((rbp - 0x6c0));\n    rcx = *((rbp - 0x6e0));\n    r10 = *((rbp - 0x6e8));\n    r8d = *((rbp - 0x6ec));\n    if (al == 0) {\n        eax = edi;\n    }\n    *((r15 + 3)) = al;\n    if (rdx == 0) {\n        goto label_55;\n    }\n    rdi = r15 + rdx + 4;\n    rax = rsi;\n    do {\n        rax++;\n        *((rax - 1)) = 0x30;\n    } while (rax != rdi);\n    rsi += rdx;\n    goto label_55;\nlabel_125:\n    r15 = r9;\n    goto label_56;\nlabel_148:\n    rbx = rcx;\n    goto label_53;\nlabel_142:\n    *((rbp - 0x6e0)) = r8d;\n    *((rbp - 0x6c8)) = r10;\n    *((rbp - 0x6c0)) = r9;\n    *((rbp - 0x6b0)) = rcx;\n    *((rbp - 0x6a0)) = r11d;\n    rax = nl_langinfo (0x10000);\n    edx = 0x2e;\n    r11d = *((rbp - 0x6a0));\n    rcx = *((rbp - 0x6b0));\n    eax = *(rax);\n    r9 = *((rbp - 0x6c0));\n    r10 = *((rbp - 0x6c8));\n    r8d = *((rbp - 0x6e0));\n    if (al == 0) {\n        eax = edx;\n    }\n    *((r15 + 1)) = al;\n    goto label_36;\nlabel_143:\n    eax = 0x2e;\n    goto label_57;\nlabel_134:\n    if (r12 == -1) {\n        goto label_53;\n    }\n    goto label_5;\n}\n"
        },
        {
            "funcName": "fcn_00415f90",
            "funcStartAddr": "0x415f90",
            "funcEndAddr": "0x416023",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x415f90 */\n#include <stdint.h>\n \nuint64_t fcn_00415f90 (int64_t arg2, const char * filename) {\n    rsi = arg2;\n    rdi = filename;\n    rax = fopen (rdi, rsi);\n    rbx = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    eax = fileno (rax);\n    while (rax != 0) {\nlabel_0:\n        rax = rbx;\n        return rax;\n        eax = fcn_004143d0 (eax, rsi);\n        r12d = eax;\n        if (eax < 0) {\n            goto label_1;\n        }\n        eax = fcn_004143e0 (rbx);\n        if (eax != 0) {\n            goto label_2;\n        }\n        rsi = rbp;\n        edi = r12d;\n        rax = fdopen ();\n        rbx = rax;\n    }\nlabel_2:\n    rax = errno_location ();\n    ebp = *(rax);\n    rbx = rax;\n    close (r12d);\n    *(rbx) = ebp;\n    ebx = 0;\n    goto label_0;\nlabel_1:\n    rax = errno_location ();\n    ebx = 0;\n    r12d = *(rax);\n    fcn_004143e0 (rbx);\n    *(rbp) = r12d;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00416030",
            "funcStartAddr": "0x416030",
            "funcEndAddr": "0x416249",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x416030 */\n#include <stdint.h>\n \nint64_t fcn_00416030 (int64_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rax = *((rsi + 8));\n    if (*(rsi) == 0) {\n        goto label_6;\n    }\n    edx = 0;\n    r9d = \"(NULL)\";\n    r8d = \"(NULL)\";\n    do {\n        if (*(rax) > 0x16) {\n            goto label_7;\n        }\n        ecx = *(rax);\n        /* switch table (23 cases) at 0x41ac20 */\n        ecx = *(rdi);\n        if (ecx > 0x2f) {\n            goto label_8;\n        }\n        r10d = ecx;\n        ecx += 8;\n        r10 += *((rdi + 0x10));\n        *(rdi) = ecx;\nlabel_1:\n        rcx = *(r10);\n        *((rax + 0x10)) = rcx;\nlabel_0:\n        rdx++;\n        rax += 0x20;\n    } while (*(rsi) > rdx);\nlabel_6:\n    eax = 0;\n    return rax;\n    ecx = *(rdi);\n    if (ecx > 0x2f) {\n        goto label_9;\n    }\n    r10d = ecx;\n    ecx += 8;\n    r10 += *((rdi + 0x10));\n    *(rdi) = ecx;\n    do {\n        ecx = *(r10);\n        *((rax + 0x10)) = ecx;\n        goto label_0;\n        ecx = *(rdi);\n        if (ecx > 0x2f) {\n            goto label_10;\n        }\n        r10d = ecx;\n        ecx += 8;\n        r10 += *((rdi + 0x10));\n        *(rdi) = ecx;\nlabel_3:\n        ecx = *(r10);\n        *((rax + 0x10)) = cx;\n        goto label_0;\n        ecx = *(rdi);\n        if (ecx > 0x2f) {\n            goto label_11;\n        }\n        r10d = ecx;\n        ecx += 8;\n        r10 += *((rdi + 0x10));\n        *(rdi) = ecx;\nlabel_2:\n        ecx = *(r10);\n        *((rax + 0x10)) = cl;\n        goto label_0;\nlabel_8:\n        r10 = *((rdi + 8));\n        rcx = r10 + 8;\n        *((rdi + 8)) = rcx;\n        goto label_1;\nlabel_9:\n        r10 = *((rdi + 8));\n        rcx = r10 + 8;\n        *((rdi + 8)) = rcx;\n    } while (1);\nlabel_11:\n    r10 = *((rdi + 8));\n    rcx = r10 + 8;\n    *((rdi + 8)) = rcx;\n    goto label_2;\nlabel_10:\n    r10 = *((rdi + 8));\n    rcx = r10 + 8;\n    *((rdi + 8)) = rcx;\n    goto label_3;\n    ecx = *((rdi + 4));\n    if (ecx > 0xaf) {\n        goto label_12;\n    }\n    r10d = ecx;\n    ecx += 0x10;\n    r10 += *((rdi + 0x10));\n    *((rdi + 4)) = ecx;\nlabel_4:\n    xmm0 = *(r10);\n    *((rax + 0x10)) = xmm0;\n    goto label_0;\n    rcx = *((rdi + 8));\n    rcx += 0xf;\n    rcx &= 0xfffffffffffffff0;\n    r10 = rcx + 0x10;\n    *((rdi + 8)) = r10;\n    *(fp_stack--) = fp_stack[?];\n    ? = fp_stack[0];\n    fp_stack--;\n    goto label_0;\n    ecx = *(rdi);\n    if (ecx > 0x2f) {\n        goto label_13;\n    }\n    r10d = ecx;\n    ecx += 8;\n    r10 += *((rdi + 0x10));\n    *(rdi) = ecx;\nlabel_5:\n    rcx = *(r10);\n    if (rcx == 0) {\n        rcx = r9;\n    }\n    *((rax + 0x10)) = rcx;\n    goto label_0;\n    ecx = *(rdi);\n    if (ecx > 0x2f) {\n        goto label_14;\n    }\n    r10d = ecx;\n    ecx += 8;\n    r10 += *((rdi + 0x10));\n    *(rdi) = ecx;\n    do {\n        rcx = *(r10);\n        if (rcx == 0) {\n            rcx = r8;\n        }\n        *((rax + 0x10)) = rcx;\n        goto label_0;\nlabel_7:\n        eax = 0xffffffff;\n        return rax;\nlabel_14:\n        r10 = *((rdi + 8));\n        rcx = r10 + 8;\n        *((rdi + 8)) = rcx;\n    } while (1);\nlabel_12:\n    r10 = *((rdi + 8));\n    rcx = r10 + 8;\n    *((rdi + 8)) = rcx;\n    goto label_4;\nlabel_13:\n    r10 = *((rdi + 8));\n    rcx = r10 + 8;\n    *((rdi + 8)) = rcx;\n    goto label_5;\n}\n"
        },
        {
            "funcName": "fcn_00416250",
            "funcStartAddr": "0x416250",
            "funcEndAddr": "0x416f59",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x416250 */\n#include <stdint.h>\n \nuint64_t fcn_00416250 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    void ** var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    uint32_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = rsi + 0x20;\n    rax = rdx + 0x10;\n    r8 = rsi;\n    r15 = rdx;\n    r9d = 7;\n    r11d = 7;\n    r10 = 0xffffffffffffffff;\n    r13d = 0;\n    *(rsi) = 0;\n    *((rsi + 8)) = rcx;\n    *((rsp + 0x28)) = rcx;\n    *(rdx) = 0;\n    *((rsp + 8)) = rax;\n    *((rdx + 8)) = rax;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x20)) = 0;\n    while (al != 0) {\n        rbp = rdi + 1;\n        if (al == 0x25) {\n            goto label_32;\n        }\nlabel_3:\n        rdi = rbp;\n        eax = *(rdi);\n    }\n    rax = r13 * 5;\n    rax = r13 + rax*2;\n    *((rcx + rax*8)) = rdi;\n    rax = *((rsp + 0x10));\n    *((r8 + 0x10)) = rax;\n    rax = *((rsp + 0x18));\n    *((r8 + 0x18)) = rax;\n    eax = 0;\nlabel_11:\n    return rax;\nlabel_32:\n    rax = r13 * 5;\n    r14 = r10;\n    rax = r13 + rax*2;\n    r12 = rcx + rax*8;\n    *(r12) = rdi;\n    *((r12 + 0x10)) = 0;\n    *((r12 + 0x18)) = 0;\n    *((r12 + 0x20)) = 0;\n    *((r12 + 0x28)) = r10;\n    *((r12 + 0x30)) = 0;\n    *((r12 + 0x38)) = 0;\n    *((r12 + 0x40)) = r10;\n    *((r12 + 0x50)) = r10;\n    ebx = *((rdi + 1));\n    eax = rbx - 0x30;\n    if (al > 9) {\n        goto label_4;\n    }\n    goto label_33;\n    do {\n        if (bl == 0x2d) {\n            goto label_34;\n        }\n        if (bl == 0x2b) {\n            goto label_35;\n        }\n        if (bl == 0x20) {\n            goto label_36;\n        }\n        if (bl == 0x23) {\n            goto label_37;\n        }\n        if (bl == 0x30) {\n            goto label_38;\n        }\n        if (bl != 0x49) {\n            goto label_39;\n        }\n        *((r12 + 0x10)) |= 0x40;\nlabel_0:\n        ebx = *(rcx);\nlabel_4:\n        rcx = rbp + 1;\n    } while (bl != 0x27);\n    *((r12 + 0x10)) |= 1;\n    goto label_0;\nlabel_34:\n    *((r12 + 0x10)) |= 2;\n    goto label_0;\nlabel_35:\n    *((r12 + 0x10)) |= 4;\n    goto label_0;\nlabel_36:\n    *((r12 + 0x10)) |= 8;\n    goto label_0;\nlabel_37:\n    *((r12 + 0x10)) |= 0x10;\n    goto label_0;\nlabel_38:\n    *((r12 + 0x10)) |= 0x20;\n    goto label_0;\nlabel_39:\n    if (bl == 0x2a) {\n        goto label_40;\n    }\n    eax = rbx - 0x30;\n    if (al <= 9) {\n        goto label_41;\n    }\nlabel_17:\n    if (bl == 0x2e) {\n        goto label_42;\n    }\nlabel_2:\n    eax = 0;\n    esi = 1;\n    while (bl != 0x68) {\n        if (bl == 0x4c) {\n            goto label_43;\n        }\n        if (bl != 0x6c) {\n            if (bl == 0x6a) {\n                goto label_44;\n            }\n            edx = ebx;\n            edx &= 0xffffffdf;\n            if (dl == 0x5a) {\n                goto label_44;\n            }\n            if (bl != 0x74) {\n                goto label_45;\n            }\n        }\nlabel_44:\n        eax += 8;\nlabel_1:\n        ebx = *(rbp);\n        rbp++;\n    }\n    ecx = eax;\n    edx = esi;\n    ecx &= 1;\n    edx <<= cl;\n    eax |= edx;\n    goto label_1;\nlabel_40:\n    rsi = *((rsp + 0x10));\n    eax = 1;\n    *((r12 + 0x18)) = rbp;\n    *((r12 + 0x20)) = rcx;\n    if (rsi != 0) {\n        rax = rsi;\n    }\n    *((rsp + 0x10)) = rax;\n    eax = *((rbp + 1));\n    edx = rax - 0x30;\n    if (dl <= 9) {\n        goto label_46;\n    }\nlabel_8:\n    rbx = *((r12 + 0x28));\n    if (rbx == -1) {\n        goto label_47;\n    }\nlabel_7:\n    r13 = *((r15 + 8));\n    if (r9 <= rbx) {\n        goto label_48;\n    }\n    rdx = *(r15);\nlabel_5:\n    if (rdx > rbx) {\n        goto label_49;\n    }\n    do {\n        rdx++;\n        rax = rdx;\n        rax <<= 5;\n        *((r13 + rax - 0x20)) = 0;\n    } while (rdx <= rbx);\n    *(r15) = rdx;\nlabel_49:\n    rbx <<= 5;\n    rax = r13 + rbx;\n    edx = *(rax);\n    if (edx != 0) {\n        goto label_50;\n    }\n    *(rax) = 5;\n    ebx = *(rcx);\n    rcx++;\n    if (bl != 0x2e) {\n        goto label_2;\n    }\nlabel_42:\n    *((r12 + 0x30)) = rbp;\n    if (*((rbp + 1)) != 0x2a) {\n        goto label_51;\n    }\n    rsi = *((rsp + 0x18));\n    eax = 2;\n    rcx = rbp + 2;\n    *((r12 + 0x38)) = rcx;\n    if (rsi >= 2) {\n        rax = rsi;\n    }\n    *((rsp + 0x18)) = rax;\n    eax = *((rbp + 2));\n    edx = rax - 0x30;\n    if (dl <= 9) {\n        goto label_52;\n    }\nlabel_27:\n    rbx = *((r12 + 0x40));\n    if (rbx == -1) {\n        goto label_53;\n    }\nlabel_26:\n    r13 = *((r15 + 8));\n    if (r9 <= rbx) {\n        goto label_54;\n    }\n    rdx = *(r15);\nlabel_20:\n    if (rdx > rbx) {\n        goto label_55;\n    }\n    do {\n        rdx++;\n        rax = rdx;\n        rax <<= 5;\n        *((r13 + rax - 0x20)) = 0;\n    } while (rdx <= rbx);\n    *(r15) = rdx;\nlabel_55:\n    rax = rbx;\n    rax <<= 5;\n    rax += r13;\n    edx = *(rax);\n    if (edx != 0) {\n        goto label_56;\n    }\n    *(rax) = 5;\n    ebx = *(rcx);\n    goto label_2;\nlabel_43:\n    eax |= 4;\n    goto label_1;\nlabel_45:\n    edx = rbx - 0x25;\n    if (dl > 0x53) {\n        goto label_15;\n    }\n    edx = (int32_t) dl;\n    /* switch table (84 cases) at 0x41ad00 */\n    ecx = 0;\n    cl = (eax > 7) ? 1 : 0;\n    ecx += 0xf;\nlabel_10:\n    if (r14 == -1) {\n        goto label_57;\n    }\n    *((r12 + 0x50)) = r14;\nlabel_16:\n    r13 = *((r15 + 8));\n    if (r9 <= r14) {\n        goto label_58;\n    }\nlabel_14:\n    rax = *(r15);\n    if (rax > r14) {\n        goto label_59;\n    }\n    do {\n        rax++;\n        rdx = rax;\n        rdx <<= 5;\n        *((r13 + rdx - 0x20)) = 0;\n    } while (rax <= r14);\n    *(r15) = rax;\nlabel_59:\n    r14 <<= 5;\n    rax = r13 + r14;\n    edx = *(rax);\n    if (edx != 0) {\n        goto label_60;\n    }\n    *(rax) = ecx;\nlabel_12:\n    *((r12 + 0x48)) = bl;\n    rax = *(r8);\n    *((r12 + 8)) = rbp;\n    r13 = rax + 1;\n    *(r8) = r13;\n    if (r11 > r13) {\n        rcx = *((r8 + 8));\n        goto label_3;\n    }\n    if (r11 < 0) {\n        goto label_61;\n    }\n    rax = 0x2e8ba2e8ba2e8ba;\n    rbx = r11 + r11;\n    if (rbx > rax) {\n        goto label_61;\n    }\n    rax = r11 * 5;\n    r12 = *((r8 + 8));\n    *((rsp + 0x38)) = r8;\n    rsi = r11 + rax*2;\n    *((rsp + 0x30)) = r9;\n    rsi <<= 4;\n    if (*((rsp + 0x28)) == r12) {\n        goto label_62;\n    }\n    rax = realloc (r12, rsi);\n    r9 = *((rsp + 0x30));\n    r8 = *((rsp + 0x38));\n    r10 = 0xffffffffffffffff;\n    rcx = rax;\n    if (rax == 0) {\n        goto label_61;\n    }\n    r12 = *((r8 + 8));\n    r13 = *(r8);\n    if (*((rsp + 0x28)) == r12) {\n        goto label_63;\n    }\nlabel_6:\n    *((r8 + 8)) = rcx;\n    r11 = rbx;\n    goto label_3;\nlabel_33:\n    rax = rbp;\n    do {\n        rax++;\n        edx = *(rax);\n        ecx = rdx - 0x30;\n    } while (cl <= 9);\n    if (dl == 0x24) {\n        goto label_64;\n    }\n    r14 = r10;\n    goto label_4;\nlabel_51:\n    eax = *((rbp + 1));\n    eax -= 0x30;\n    if (al > 9) {\n        goto label_65;\n    }\n    do {\n        rcx++;\n        eax = *(rcx);\n        eax -= 0x30;\n    } while (al <= 9);\n    rax = rcx;\n    rax -= rbp;\nlabel_30:\n    rsi = *((rsp + 0x18));\n    *((r12 + 0x38)) = rcx;\n    ebx = *(rcx);\n    if (rsi >= rax) {\n        rax = rsi;\n    }\n    *((rsp + 0x18)) = rax;\n    goto label_2;\nlabel_48:\n    r9 += r9;\n    rax = rbx + 1;\n    if (r9 <= rbx) {\n        r9 = rax;\n    }\n    rax = 0x7ffffffffffffff;\n    if (r9 > rax) {\n        goto label_66;\n    }\n    rsi = r9;\n    *((rsp + 0x48)) = r8;\n    rsi <<= 5;\n    *((rsp + 0x40)) = r9;\n    *((rsp + 0x38)) = r11;\n    *((rsp + 0x30)) = rcx;\n    if (*((rsp + 8)) == r13) {\n        goto label_67;\n    }\n    rax = realloc (r13, rsi);\n    rsi = *((r15 + 8));\n    rcx = *((rsp + 0x30));\n    r10 = 0xffffffffffffffff;\n    r13 = rax;\n    r11 = *((rsp + 0x38));\n    r9 = *((rsp + 0x40));\n    r8 = *((rsp + 0x48));\n    if (rax == 0) {\n        goto label_19;\n    }\n    rdx = *(r15);\n    if (*((rsp + 8)) == rsi) {\n        goto label_68;\n    }\nlabel_22:\n    *((r15 + 8)) = r13;\n    goto label_5;\nlabel_62:\n    rax = malloc (rsi);\n    r9 = *((rsp + 0x30));\n    r8 = *((rsp + 0x38));\n    rcx = rax;\n    if (rax == 0) {\n        goto label_69;\n    }\nlabel_63:\n    rax = r13 * 5;\n    *((rsp + 0x38)) = r8;\n    *((rsp + 0x30)) = r9;\n    rdx <<= 3;\n    rax = memcpy (rcx, r12, r13 + rax*2);\n    r8 = *((rsp + 0x38));\n    r9 = *((rsp + 0x30));\n    r10 = 0xffffffffffffffff;\n    rcx = rax;\n    r13 = *(r8);\n    goto label_6;\nlabel_47:\n    rsi = *((rsp + 0x20));\n    rax = rsi + 1;\n    *((r12 + 0x28)) = rsi;\n    if (rsi == -1) {\n        goto label_15;\n    }\n    rbx = *((rsp + 0x20));\n    *((rsp + 0x20)) = rax;\n    goto label_7;\nlabel_46:\n    rdx = rcx;\n    do {\n        rdx++;\n        esi = *(rdx);\n        edi = rsi - 0x30;\n    } while (dil <= 9);\n    if (sil != 0x24) {\n        goto label_8;\n    }\n    esi = 0;\n    while (rbp == 0) {\n        if (bl > 9) {\n            goto label_70;\n        }\n        rdi = 0x1999999999999999;\n        eax -= 0x30;\n        rdx = r10;\n        rax = (int64_t) eax;\n        if (rsi <= rdi) {\n            rdx = rsi * 5;\n            rdx += rdx;\n        }\n        rdi = rcx;\nlabel_9:\n        ebp = 0;\n        rdx += rax;\n        eax = *((rcx + 1));\n        bpl = (rdx < 0) ? 1 : 0;\n        rsi = rdx;\n        rcx++;\n        ebx = rax - 0x30;\n    }\n    if (bl > 9) {\n        goto label_15;\n    }\n    eax -= 0x30;\n    rdx = r10;\n    rdi = rcx;\n    rax = (int64_t) eax;\n    goto label_9;\n    ecx = 0;\n    cl = (eax > 7) ? 1 : 0;\n    ecx += 0xd;\n    goto label_10;\n    ecx = 0x16;\n    if (eax > 0xf) {\n        goto label_10;\n    }\n    if ((al & 4) != 0) {\n        goto label_10;\n    }\n    ecx = 0x15;\n    if (eax > 7) {\n        goto label_10;\n    }\n    ecx = 0x12;\n    if ((al & 2) != 0) {\n        goto label_10;\n    }\n    ecx = 0;\n    cl = ((al & 1) == 0) ? 1 : 0;\n    ecx += 0x13;\n    goto label_10;\n    ecx = 9;\n    if (eax > 0xf) {\n        goto label_10;\n    }\n    if ((al & 4) != 0) {\n        goto label_10;\n    }\n    ecx = 7;\n    if (eax > 7) {\n        goto label_10;\n    }\n    ecx = 1;\n    if ((al & 2) != 0) {\n        goto label_10;\n    }\n    eax &= 1;\n    ecx -= ecx;\n    ecx &= 2;\n    ecx += 3;\n    goto label_10;\n    ecx = 0x11;\n    goto label_10;\n    ecx = 0xc;\n    if (eax > 0xf) {\n        goto label_10;\n    }\n    ecx = 0;\n    cl = ((al & 4) != 0) ? 1 : 0;\n    ecx += 0xb;\n    goto label_10;\n    ecx = 0x10;\n    ebx = 0x73;\n    goto label_10;\n    ecx = 0xe;\n    ebx = 0x63;\n    goto label_10;\n    ecx = 0xa;\n    if (eax > 0xf) {\n        goto label_10;\n    }\n    if ((al & 4) != 0) {\n        goto label_10;\n    }\n    ecx = 8;\n    if (eax > 7) {\n        goto label_10;\n    }\n    ecx = 2;\n    if ((al & 2) != 0) {\n        goto label_10;\n    }\n    eax &= 1;\n    ecx -= ecx;\n    ecx &= 2;\n    ecx += 4;\n    goto label_10;\nlabel_15:\n    r13 = *((r15 + 8));\nlabel_13:\n    if (*((rsp + 8)) != r13) {\n        *((rsp + 8)) = r8;\n        free (r13);\n        r8 = *((rsp + 8));\n    }\n    rdi = *((r8 + 8));\n    if (*((rsp + 0x28)) != rdi) {\n        free (rdi);\n    }\n    errno_location ();\n    *(rax) = 0x16;\n    eax = 0xffffffff;\n    goto label_11;\nlabel_60:\n    if (edx == ecx) {\n        goto label_12;\n    }\n    goto label_13;\nlabel_58:\n    r9 += r9;\n    rax = r14 + 1;\n    if (r9 <= r14) {\n        r9 = rax;\n    }\n    rax = 0x7ffffffffffffff;\n    if (r9 > rax) {\n        goto label_66;\n    }\n    rsi = r9;\n    *((rsp + 0x48)) = r8;\n    rsi <<= 5;\n    *((rsp + 0x40)) = r9;\n    *((rsp + 0x38)) = r11;\n    *((rsp + 0x30)) = ecx;\n    if (*((rsp + 8)) == r13) {\n        goto label_71;\n    }\n    rax = realloc (r13, rsi);\n    ecx = *((rsp + 0x30));\n    r11 = *((rsp + 0x38));\n    r10 = 0xffffffffffffffff;\n    r13 = rax;\n    r9 = *((rsp + 0x40));\n    r8 = *((rsp + 0x48));\n    if (rax == 0) {\n        goto label_61;\n    }\n    rax = *((rsp + 8));\n    if (rax == *((r15 + 8))) {\n        goto label_72;\n    }\nlabel_18:\n    *((r15 + 8)) = r13;\n    goto label_14;\nlabel_57:\n    rsi = *((rsp + 0x20));\n    rax = rsi + 1;\n    *((r12 + 0x50)) = rsi;\n    if (rsi == -1) {\n        goto label_15;\n    }\n    r14 = *((rsp + 0x20));\n    *((rsp + 0x20)) = rax;\n    goto label_16;\nlabel_41:\n    *((r12 + 0x18)) = rbp;\n    eax = *(rbp);\n    eax -= 0x30;\n    if (al > 9) {\n        goto label_73;\n    }\n    rcx = rbp;\n    while (al <= 9) {\n        rcx = rdx;\n        eax = *((rcx + 1));\n        rdx = rcx + 1;\n        eax -= 0x30;\n    }\n    rsi = *((rsp + 0x10));\n    rax = rdx;\n    rcx += 2;\n    rax -= rbp;\n    if (rsi >= rax) {\n        rax = rsi;\n    }\n    *((rsp + 0x10)) = rax;\nlabel_73:\n    *((r12 + 0x20)) = rbp;\n    ebx = *(rbp);\n    goto label_17;\nlabel_50:\n    if (edx != 5) {\n        goto label_13;\n    }\n    ebx = *(rcx);\n    rcx++;\n    goto label_17;\nlabel_71:\n    rax = malloc (rsi);\n    ecx = *((rsp + 0x30));\n    r11 = *((rsp + 0x38));\n    r9 = *((rsp + 0x40));\n    r8 = *((rsp + 0x48));\n    if (rax == 0) {\n        goto label_21;\n    }\nlabel_31:\n    rdi = rax;\n    *((rsp + 0x48)) = r8;\n    *((rsp + 0x40)) = r9;\n    r13 = rax;\n    rdx <<= 5;\n    *((rsp + 0x38)) = r11;\n    *((rsp + 0x30)) = ecx;\n    memcpy (rdi, r13, *(r15));\n    r8 = *((rsp + 0x48));\n    ecx = *((rsp + 0x30));\n    r10 = 0xffffffffffffffff;\n    r9 = *((rsp + 0x40));\n    r11 = *((rsp + 0x38));\n    goto label_18;\n    do {\nlabel_66:\n        rsi = r13;\nlabel_19:\n        if (*((rsp + 8)) != rsi) {\nlabel_23:\n            *((rsp + 8)) = r8;\n            free (rsi);\n            r8 = *((rsp + 8));\n        }\nlabel_21:\n        rdi = *((r8 + 8));\n        if (*((rsp + 0x28)) != rdi) {\n            free (rdi);\n        }\nlabel_24:\n        errno_location ();\n        *(rax) = 0xc;\n        eax = 0xffffffff;\n        return rax;\nlabel_54:\n        r9 += r9;\n        rax = rbx + 1;\n        if (r9 <= rbx) {\n            r9 = rax;\n        }\n        rax = 0x7ffffffffffffff;\n    } while (r9 > rax);\n    rsi = r9;\n    *((rsp + 0x48)) = r8;\n    rsi <<= 5;\n    *((rsp + 0x40)) = r9;\n    *((rsp + 0x38)) = r11;\n    *((rsp + 0x30)) = rcx;\n    if (*((rsp + 8)) == r13) {\n        goto label_74;\n    }\n    rax = realloc (r13, rsi);\n    rsi = *((r15 + 8));\n    rcx = *((rsp + 0x30));\n    r10 = 0xffffffffffffffff;\n    r13 = rax;\n    r11 = *((rsp + 0x38));\n    r9 = *((rsp + 0x40));\n    r8 = *((rsp + 0x48));\n    if (rax == 0) {\n        goto label_19;\n    }\n    rdx = *(r15);\n    if (*((rsp + 8)) == rsi) {\n        goto label_75;\n    }\nlabel_29:\n    *((r15 + 8)) = r13;\n    goto label_20;\nlabel_56:\n    if (edx != 5) {\n        goto label_13;\n    }\n    ebx = *(rcx);\n    goto label_2;\nlabel_67:\n    rax = malloc (rsi);\n    rcx = *((rsp + 0x30));\n    r11 = *((rsp + 0x38));\n    r9 = *((rsp + 0x40));\n    r8 = *((rsp + 0x48));\n    if (rax == 0) {\n        goto label_21;\n    }\n    r13 = rax;\nlabel_68:\n    rdx <<= 5;\n    *((rsp + 0x48)) = r8;\n    *((rsp + 0x40)) = r9;\n    *((rsp + 0x38)) = r11;\n    *((rsp + 0x30)) = rcx;\n    eax = memcpy (r13, *((rsp + 8)), *(r15));\n    rdx = *(r15);\n    r8 = *((rsp + 0x48));\n    r10 = 0xffffffffffffffff;\n    r9 = *((rsp + 0x40));\n    r11 = *((rsp + 0x38));\n    rcx = *((rsp + 0x30));\n    goto label_22;\nlabel_69:\n    rsi = *((r15 + 8));\n    if (*((rsp + 8)) != rsi) {\n        goto label_23;\n    }\n    goto label_24;\nlabel_64:\n    eax = 0;\n    while (rdi == 0) {\n        if (sil > 9) {\n            goto label_76;\n        }\n        rdi = 0x1999999999999999;\n        edx = (int32_t) bl;\n        rsi = r10;\n        edx -= 0x30;\n        rdx = (int64_t) edx;\n        if (rax <= rdi) {\n            rsi = rax * 5;\n            rsi += rsi;\n        }\n        rcx = rbp;\nlabel_25:\n        edi = 0;\n        ebx = *((rbp + 1));\n        rdx += rsi;\n        dil = (rdx < 0) ? 1 : 0;\n        rax = rdx;\n        rbp++;\n        esi = rbx - 0x30;\n    }\n    if (sil > 9) {\n        goto label_15;\n    }\n    edx = (int32_t) bl;\n    rsi = r10;\n    rcx = rbp;\n    edx -= 0x30;\n    rdx = (int64_t) edx;\n    goto label_25;\nlabel_53:\n    rsi = *((rsp + 0x20));\n    rax = rsi + 1;\n    *((r12 + 0x40)) = rsi;\n    if (rsi == -1) {\n        goto label_15;\n    }\n    rbx = *((rsp + 0x20));\n    *((rsp + 0x20)) = rax;\n    goto label_26;\nlabel_52:\n    rdx = rcx;\n    do {\n        rdx++;\n        esi = *(rdx);\n        edi = rsi - 0x30;\n    } while (dil <= 9);\n    if (sil != 0x24) {\n        goto label_27;\n    }\n    esi = 0;\n    while (rbp == 0) {\n        if (bl > 9) {\n            goto label_77;\n        }\n        rdi = 0x1999999999999999;\n        eax -= 0x30;\n        rdx = r10;\n        rax = (int64_t) eax;\n        if (rsi <= rdi) {\n            rdx = rsi * 5;\n            rdx += rdx;\n        }\n        rdi = rcx;\nlabel_28:\n        ebp = 0;\n        rdx += rax;\n        bpl = (rdx < 0) ? 1 : 0;\n        rcx++;\n        eax = *(rcx);\n        rsi = rdx;\n        ebx = rax - 0x30;\n    }\n    if (bl > 9) {\n        goto label_15;\n    }\n    eax -= 0x30;\n    rdx = r10;\n    rdi = rcx;\n    rax = (int64_t) eax;\n    goto label_28;\nlabel_76:\n    r14 = rdx;\n    r14--;\n    if (r14 > 0xfffffffffffffffd) {\n        goto label_15;\n    }\n    rbp = rcx + 2;\n    ebx = *((rcx + 2));\n    goto label_4;\nlabel_74:\n    rax = malloc (rsi);\n    rcx = *((rsp + 0x30));\n    r11 = *((rsp + 0x38));\n    r9 = *((rsp + 0x40));\n    r8 = *((rsp + 0x48));\n    if (rax == 0) {\n        goto label_21;\n    }\n    r13 = rax;\nlabel_75:\n    rdx <<= 5;\n    *((rsp + 0x48)) = r8;\n    *((rsp + 0x40)) = r9;\n    *((rsp + 0x38)) = r11;\n    *((rsp + 0x30)) = rcx;\n    memcpy (r13, *((rsp + 8)), *(r15));\n    rdx = *(r15);\n    r8 = *((rsp + 0x48));\n    r10 = 0xffffffffffffffff;\n    r9 = *((rsp + 0x40));\n    r11 = *((rsp + 0x38));\n    rcx = *((rsp + 0x30));\n    goto label_29;\nlabel_65:\n    eax = 1;\n    goto label_30;\nlabel_70:\n    rbx = rdx - 1;\n    if (rbx > 0xfffffffffffffffd) {\n        goto label_15;\n    }\n    *((r12 + 0x28)) = rbx;\n    rcx = rdi + 2;\n    goto label_7;\nlabel_77:\n    rbx = rdx - 1;\n    if (rbx > 0xfffffffffffffffd) {\n        goto label_15;\n    }\n    *((r12 + 0x40)) = rbx;\n    rcx = rdi + 2;\n    goto label_26;\nlabel_61:\n    rsi = *((r15 + 8));\n    goto label_19;\nlabel_72:\n    rax = r13;\n    r13 = *((rsp + 8));\n    goto label_31;\n}\n"
        },
        {
            "funcName": "fcn_00416fd0",
            "funcStartAddr": "0x416fd0",
            "funcEndAddr": "0x416fe8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x416fd0 */\n#include <stdint.h>\n \nint64_t fcn_00416fd0 (void) {\n    rax = 0x61f428;\n    edx = 0;\n    if (rax != 0) {\n        rdx = *(rax);\n    }\n    esi = 0;\n    return cxa_atexit ();\n}\n"
        },
        {
            "funcName": "fcn_00416fe8",
            "funcStartAddr": "0x416fe8",
            "funcEndAddr": "0x417008",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf @ 0x416fe8 */\n#include <stdint.h>\n \nvoid fcn_00416fe8 (int64_t arg3) {\n    rdx = arg3;\n    ebx = segment.GNU_RELRO;\n    do {\n        rax = *(rbx);\n        if (rax == -1) {\n            goto label_0;\n        }\n        void (*rax)() ();\n        rbx -= 8;\n    } while (1);\nlabel_0:\n}\n"
        }
    ],
    "funcCount": 159
}