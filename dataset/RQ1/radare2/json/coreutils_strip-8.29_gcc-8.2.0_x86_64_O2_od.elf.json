{
    "binaryInfo": {
        "isStripped": true,
        "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf"
    },
    "buildInfo": {
        "decompilerName": "radare2",
        "compilerName": "gcc",
        "compilerVersion": "9.4.0",
        "optLevel": "O"
    },
    "funcInfo": [
        {
            "funcName": "main",
            "funcStartAddr": "0x401be0",
            "funcEndAddr": "0x402c5f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x401be0 */\n#include <stdint.h>\n \nint32_t main (int32_t argc, char ** argv) {\n    int64_t var_4h;\n    void * var_8h;\n    int64_t var_18h;\n    void * ptr;\n    int64_t var_28h;\n    rdi = argc;\n    rsi = argv;\n    r12d = edi;\n    fcn_004055f0 (*(rsi));\n    setlocale (6, 0x40fbbc);\n    bindtextdomain (0x40c41e, \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\");\n    textdomain (0x40c41e, rsi);\n    edi = 0x4051b0;\n    eax = fcn_0040c270 ();\n    eax = 0;\n    do {\n        *((rax*4 + 0x6123a0)) = 0;\n        rax++;\n    } while (rax != 9);\n    *(0x006123b0) = 3;\n    rax = 0x200000001;\n    *(0x006123c0) = 5;\n    *(0x006123a4) = rax;\n    eax = 0;\n    do {\n        *((rax*4 + 0x612340)) = 0;\n        rax++;\n    } while (rax != 0x11);\n    *(0x00612350) = 6;\n    ebx = 1;\n    r14d = 0;\n    r13d = 0;\n    *(0x00612380) = 8;\n    *(0x00612360) = 7;\n    *(0x006123f0) = 0;\n    *(0x006123e8) = 0;\n    *(0x006123f8) = 0;\n    *(0x00612420) = fcn.00402d50;\n    *(0x00612444) = 8;\n    *(0x00612440) = 7;\n    *(0x00612432) = 0;\n    do {\nlabel_0:\n        r8 = rsp + 0x18;\n        ecx = 0x40cf80;\n        rsi = rbp;\n        edi = r12d;\n        edx = \"A:aBbcDdeFfHhIij:LlN:OoS:st:vw::Xx\";\n        *((rsp + 0x18)) = 0xffffffff;\n        eax = fcn_00408f90 ();\n        if (eax == 0xffffffff) {\n            goto label_32;\n        }\n        eax += 0x83;\n        if (eax > 0x104) {\n            goto label_33;\n        }\n        /* switch table (261 cases) at 0x40c6c0 */\n        fcn_004050d0 (\"--endian\", *(0x006125e0), 0x40d110, 0x40d100, 4, *(0x00612260));\n        eax = *((rax*4 + 0x40d100));\n        if (eax == 0) {\n            goto label_34;\n        }\n        eax--;\n    } while (eax != 0);\n    *(0x00612321) = 1;\n    goto label_0;\n    *(0x00612431) = 1;\n    goto label_0;\n    rdi = imp.__libc_start_main;\n    if (rdi == 0) {\n        goto label_35;\n    }\n    eax = fcn_00407ce0 (rdi, 0, 0xa, rsp + 0x20, 0x40fbbc);\n    if (eax != 0) {\n        goto label_36;\n    }\n    r15 = *((rsp + 0x20));\n    r14d = 1;\n    r13d = 1;\n    goto label_0;\n    *(0x00612251) = 0;\n    r13d = 1;\n    goto label_0;\n    rdi = imp.__libc_start_main;\n    if (rdi == 0) {\n        goto label_37;\n    }\n    eax = fcn_004040c0 (rdi, rsi, rdx, rcx, r8, r9);\n    r13d = 1;\n    ebx &= eax;\n    goto label_0;\n    eax = fcn_004040c0 (0x40c45d, rsi, rdx, rcx, r8, r9);\n    ebx &= eax;\n    goto label_0;\n    eax = fcn_00407ce0 (*(0x006125e0), 0, 0, 0x612418, \"bEGKkMmPTYZ0\");\n    if (eax != 0) {\n        goto label_38;\n    }\n    do {\n        r13d = 1;\n        goto label_0;\n        eax = fcn_004040c0 (0x40c451, rsi, rdx, rcx, r8, r9);\n        ebx &= eax;\n        goto label_0;\n        eax = fcn_004040c0 (0x40c460, rsi, rdx, rcx, r8, r9);\n        ebx &= eax;\n        goto label_0;\n        eax = fcn_004040c0 (0x40c44b, rsi, rdx, rcx, r8, r9);\n        ebx &= eax;\n        goto label_0;\n        eax = fcn_004040c0 (0x40c445, rsi, rdx, rcx, r8, r9);\n        ebx &= eax;\n        goto label_0;\n        eax = fcn_004040c0 (0x40c2e1, rsi, rdx, rcx, r8, r9);\n        ebx &= eax;\n        goto label_0;\n        eax = fcn_004040c0 (0x40c43f, rsi, rdx, rcx, r8, r9);\n        ebx &= eax;\n        goto label_0;\n        eax = fcn_004040c0 (0x40c2fe, rsi, rdx, rcx, r8, r9);\n        ebx &= eax;\n        goto label_0;\n        rdi = imp.__libc_start_main;\n        if (rdi == 0) {\n            goto label_39;\n        }\n        eax = fcn_00407ce0 (rdi, 0, 0, rsp + 0x20, \"bEGKkMmPTYZ0\");\n        if (eax != 0) {\n            goto label_40;\n        }\n        rax = *((rsp + 0x20));\n        *(0x00612438) = rax;\nlabel_1:\n        *(0x00612432) = 1;\n        r13d = 1;\n        goto label_0;\n        eax = fcn_004040c0 (0x40c457, rsi, rdx, rcx, r8, r9);\n        ebx &= eax;\n        goto label_0;\n        *(0x00612410) = 1;\n        eax = fcn_00407ce0 (*(0x006125e0), 0, 0, 0x612408, \"bEGKkMmPTYZ0\");\n    } while (eax == 0);\n    r8 = imp.__libc_start_main;\n    fcn_00407c50 (eax, *((rsp + 0x18)), 0x4e, 0x40cf80);\n    eax = fcn_004040c0 (0x40c454, rsi, rdx, rcx, r8, r9);\n    ebx &= eax;\n    goto label_0;\n    eax = fcn_004040c0 (0x40c44e, rsi, rdx, rcx, r8, r9);\n    ebx &= eax;\n    goto label_0;\n    eax = fcn_004040c0 (0x40c448, rsi, rdx, rcx, r8, r9);\n    ebx &= eax;\n    goto label_0;\n    eax = fcn_004040c0 (0x40c442, rsi, rdx, rcx, r8, r9);\n    ebx &= eax;\n    goto label_0;\n    eax = fcn_004040c0 (0x40c45a, rsi, rdx, rcx, r8, r9);\n    ebx &= eax;\n    goto label_0;\n    rax = imp.__libc_start_main;\n    r13d = *(rax);\n    if (r13b == 0x6e) {\n        goto label_41;\n    }\n    if (r13b > 0x6e) {\n        if (r13b == 0x6f) {\n            goto label_42;\n        }\n        if (r13b != 0x78) {\n            goto label_43;\n        }\n        *(0x00612444) = 0x10;\n        r13d = 1;\n        *(0x00612420) = fcn.00402d50;\n        *(0x00612440) = 6;\n        goto label_0;\n        r9d = 0;\n        r8d = \"Jim Meyering\";\n        eax = 0;\n        rcx = *(str.8.29);\n        fcn_00407690 (*(obj.stdout), 0x40c3a1, \"GNU coreutils\");\n        exit (0);\n    }\n    if (r13b != 0x64) {\n        goto label_43;\n    }\n    *(0x00612444) = 0xa;\n    r13d = 1;\n    *(0x00612420) = fcn.00402d50;\n    *(0x00612440) = 7;\n    goto label_0;\nlabel_39:\n    *(0x00612438) = 3;\n    goto label_1;\nlabel_35:\n    r14d = 1;\n    r13d = 1;\n    r15d = 0x20;\n    goto label_0;\nlabel_34:\n    *(0x00612321) = 0;\n    goto label_0;\nlabel_32:\n    if (bl == 0) {\n        goto label_44;\n    }\n    if (*(0x00612432) != 0) {\n        if (*(0x006123f0) != 0) {\n            goto label_45;\n        }\n    }\n    rax = *(0x006122dc);\n    edx = *(0x00612431);\n    r12d -= eax;\n    if (r13b != 0) {\n        goto label_46;\n    }\n    if (r12d == 2) {\n        goto label_47;\n    }\n    if (r12d == 3) {\n        goto label_48;\n    }\n    if (r12d == 1) {\n        goto label_49;\n    }\nlabel_5:\n    if (r12d > 1) {\n        goto label_50;\n    }\nlabel_4:\n    if (*(0x00612430) != 0) {\n        if (*(0x00612420) == 0x402d40) {\n            goto label_51;\n        }\n        *(0x00612420) = 0x404090;\n    }\nlabel_20:\n    if (*(0x00612410) != 0) {\n        rax = imp.__libc_start_main;\n        rax += *(0x00612418);\n        *(0x00612400) = rax;\n        if (rax < 0) {\n            goto label_52;\n        }\n    }\n    if (*(0x006123f0) == 0) {\n        goto label_53;\n    }\nlabel_8:\n    eax = 0x40d170;\n    if (r12d > 0) {\n        rax = *(0x006122dc);\n        rax = rbp + rax*8;\n    }\n    *(0x006123d0) = rax;\n    eax = fcn_00403a50 ();\n    r12d = eax;\n    if (*(0x006123c8) == 0) {\n        goto label_54;\n    }\n    eax = fcn_00403b50 (*(0x00612418), rsi, rdx, rcx);\n    r12d &= eax;\n    eax = (int32_t) r12b;\n    *((rsp + 4)) = eax;\n    if (*(0x006123c8) == 0) {\n        goto label_54;\n    }\n    eax = 0;\n    if (*(0x00612430) != 0) {\n        rax = *((rsp + 8));\n        rax -= *(0x00612418);\n    }\n    r10 = imp.__libc_start_main;\n    *(0x00612428) = rax;\n    if (r10 == 0) {\n        goto label_55;\n    }\n    rax = r10 * 0x28;\n    r11 = imp.__libc_start_main;\n    r8d = 1;\n    rdi = r11 + 4;\n    r9 = r11 + rax + 4;\nlabel_2:\n    eax = *(rdi);\n    r8 = (int64_t) r8d;\n    rsi = *((rax*4 + 0x40d220));\n    rax = r8;\n    rcx = rsi;\n    while (rdx != 0) {\n        rcx = rdx;\n        edx = 0;\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rax = rcx;\n    }\n    rax = rsi;\n    edx = 0;\n    rdi += 0x28;\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    r8d *= eax;\n    if (r9 != rdi) {\n        goto label_2;\n    }\n    if (r14b == 0) {\n        goto label_56;\n    }\n    r12 = (int64_t) r8d;\n    if (r15 != 0) {\n        rax = r15;\n        edx = 0;\n        rax = rdx:rax / r12;\n        rdx = rdx:rax % r12;\n        if (rdx == 0) {\n            goto label_26;\n        }\n    }\nlabel_27:\n    edx = 5;\n    *((rsp + 8)) = r8d;\n    rax = dcgettext (0, \"warning: invalid width %lu; using %d instead\");\n    r8d = *((rsp + 8));\n    rcx = r15;\n    eax = 0;\n    error (0, 0, rax);\n    *(0x006123e0) = r12;\n    r10 = imp.__libc_start_main;\nlabel_14:\n    r11 = imp.__libc_start_main;\n    if (r10 == 0) {\n        goto label_57;\n    }\nlabel_9:\n    r10 *= 0x28;\n    rcx = r11 + 4;\n    r8 = imp.__libc_start_main;\n    edi = 0;\n    rsi = rcx;\n    r9 = r11 + r10 + 4;\n    do {\n        eax = *(rsi);\n        edx = 0;\n        r10 = *((rax*4 + 0x40d220));\n        rax = r8;\n        rax = rdx:rax / r10;\n        rdx = rdx:rax % r10;\n        edx = *((rsi + 0x18));\n        edx++;\n        edx *= eax;\n        rax = (int64_t) edx;\n        if (rdi < rax) {\n            rdi = rax;\n        }\n        rsi += 0x28;\n    } while (r9 != rsi);\n    do {\n        eax = *(rcx);\n        edx = 0;\n        rcx += 0x28;\n        rsi = *((rax*4 + 0x40d220));\n        rax = r8;\n        rax = rdx:rax / rsi;\n        rdx = rdx:rax % rsi;\n        esi = edi;\n        eax *= *((rcx - 0x10));\n        esi -= eax;\n        *((rcx - 0xc)) = esi;\n    } while (r9 != rcx);\nlabel_57:\n    r12d = *(0x00612432);\n    if (r12b == 0) {\n        goto label_58;\n    }\n    edi = 0x64;\n    if (*(0x00612438) >= 0x64) {\n        rdi = imp.__libc_start_main;\n    }\n    *((rsp + 0x20)) = rdi;\n    rax = fcn_004077d0 (rdi);\n    r13 = imp.__libc_start_main;\n    r14 = rax;\nlabel_11:\n    rsi = imp.__libc_start_main;\n    do {\nlabel_23:\n        rbx = rsi;\n        if (*(0x00612410) != 0) {\n            rax = imp.__libc_start_main;\n            if (rax < rsi) {\n                goto label_59;\n            }\n            rax -= rsi;\n            if (rax <= r13) {\n                goto label_59;\n            }\n        }\n        if (rsi == 0) {\n            goto label_60;\n        }\n        ebx = 0;\n        r15 = r13 + 1;\n        goto label_61;\nlabel_3:\n        rax = ctype_b_loc ();\n        rcx = (int64_t) ebp;\n        rsi = imp.__libc_start_main;\n        rax = *(rax);\n    } while ((*((rax + rcx*2 + 1)) & 0x40) == 0);\n    *((r14 + rbx)) = bpl;\n    rbx++;\n    if (rbx >= rsi) {\n        goto label_60;\n    }\nlabel_61:\n    r13 = r15 + rbx;\n    eax = fcn_00403d20 (rsp + 0x18);\n    ebp = *((rsp + 0x18));\n    r12d &= eax;\n    if (ebp >= 0) {\n        goto label_3;\n    }\nlabel_10:\n    free (r14);\nlabel_30:\n    r12d = (int32_t) r12b;\nlabel_19:\n    ebp = *((rsp + 4));\n    ebp &= r12d;\n    r12d = ebp;\n    r12d &= 1;\nlabel_54:\n    if (*(0x006123c4) != 0) {\n        goto label_62;\n    }\nlabel_7:\n    r12d ^= 1;\n    eax = (int32_t) r12b;\nlabel_6:\n    return rax;\nlabel_42:\n    *(0x00612444) = 8;\n    r13d = 1;\n    *(0x00612420) = fcn.00402d50;\n    *(0x00612440) = 7;\n    goto label_0;\nlabel_41:\n    *(0x00612440) = 0;\n    r13d = 1;\n    *(0x00612420) = 0x402d40;\n    goto label_0;\nlabel_46:\n    if (dl == 0) {\n        goto label_4;\n    }\n    if (r12d == 2) {\n        goto label_47;\n    }\n    if (r12d == 3) {\n        goto label_48;\n    }\n    if (r12d != 1) {\n        goto label_5;\n    }\nlabel_21:\n    al = fcn_00402e40 (*((rbp + rax*8)), rsp + 0x18, rdx);\n    if (al == 0) {\n        goto label_63;\n    }\n    rax = *((rsp + 0x18));\n    rbp += 8;\n    r12d = 0;\n    *(0x00612418) = rax;\n    goto label_4;\nlabel_44:\n    eax = 1;\n    goto label_6;\nlabel_62:\n    eax = fcn_00408120 (*(obj.stdin));\n    eax++;\n    if (eax != 0) {\n        goto label_7;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"standard input\");\n    rbx = rax;\n    rax = errno_location ();\n    eax = 0;\n    error (1, *(rax), rbx);\nlabel_53:\n    fcn_004040c0 (0x40c481, rsi, rdx, rcx, r8, r9);\n    goto label_8;\nlabel_56:\n    if (r8d <= 0xf) {\n        goto label_25;\n    }\n    r8 = (int64_t) r8d;\n    *(0x006123e0) = r8;\n    goto label_9;\nlabel_13:\n    rax = fcn_00407930 (r14, rsp + 0x20);\n    r14 = rax;\nlabel_12:\n    r13++;\n    eax = fcn_00403d20 (rsp + 0x18);\n    r15d = *((rsp + 0x18));\n    r12d &= eax;\n    if (r15d < 0) {\n        goto label_10;\n    }\n    if (r15d == 0) {\n        goto label_64;\n    }\n    rax = ctype_b_loc ();\n    rdx = (int64_t) r15d;\n    rax = *(rax);\n    if ((*((rax + rdx*2 + 1)) & 0x40) == 0) {\n        goto label_11;\n    }\n    *((r14 + rbx)) = r15b;\n    rbx++;\nlabel_60:\n    if (*(0x00612410) != 0) {\n        if (r13 >= *(0x00612400)) {\n            goto label_64;\n        }\n    }\n    if (*((rsp + 0x20)) != rbx) {\n        goto label_12;\n    }\n    goto label_13;\nlabel_25:\n    eax = 0x10;\n    edx:eax = (int64_t) eax;\n    eax = edx:eax / r8d;\n    edx = edx:eax % r8d;\n    eax *= r8d;\n    rax = (int64_t) eax;\n    *(0x006123e0) = rax;\n    goto label_14;\nlabel_50:\n    if (dl == 0) {\n        goto label_4;\n    }\nlabel_15:\n    rax = fcn_00407210 (*((rbp + rax*8 + 8)));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"extra operand %s\");\n    rcx = rbx;\n    eax = 0;\n    error (0, 0, rax);\n    edx = 5;\n    rax = dcgettext (0, \"compatibility mode supports at most one file\");\n    rcx = rax;\n    eax = 0;\n    error (0, 0, 0x40e4cc);\nlabel_33:\n    fcn_00404960 (1);\nlabel_48:\n    r12d = 3;\n    if (dl == 0) {\n        goto label_4;\n    }\n    al = fcn_00402e40 (*((rbp + rax*8 + 8)), rsp + 0x18, rdx);\n    if (al != 0) {\n        goto label_65;\n    }\nlabel_31:\n    r12d = 3;\nlabel_24:\n    if (*(0x00612431) == 0) {\n        goto label_4;\n    }\n    rax = *(0x006122dc);\n    goto label_15;\nlabel_47:\n    rdi = *((rbp + rax*8 + 8));\n    if (dl != 0) {\n        goto label_66;\n    }\n    eax = *(rdi);\n    if (al == 0x2b) {\n        goto label_66;\n    }\n    eax -= 0x30;\n    if (eax <= 9) {\n        goto label_66;\n    }\n    r12d = 2;\n    goto label_4;\n    fcn_00404960 (0);\nlabel_58:\n    rdi = imp.__libc_start_main;\n    eax = 2;\n    rdx:rax = rax * rdi;\n    __asm (\"seto dl\");\n    edx = (int32_t) dl;\n    if (rax < 0) {\n        goto label_67;\n    }\n    if (rdx != 0) {\n        goto label_67;\n    }\n    rdi += rdi;\n    rax = fcn_004077d0 (rdi);\n    r13d = *(0x00612410);\n    r14 = imp.__libc_start_main;\n    *((rsp + 0x20)) = rax;\n    rax += *(0x006123e0);\n    *((rsp + 0x28)) = rax;\n    if (r13b != 0) {\n        goto label_68;\n    }\n    r15d = 0;\n    while (rbx >= *(0x006123e0)) {\n        if (r13b != 0) {\n            goto label_69;\n        }\n        r12d ^= 1;\n        eax = (int32_t) r12b;\n        ebx = r13d;\n        r15 = rax;\n        fcn_00403d80 (r14, rbx, *((rsp + rax*8 + 0x20)), rbp);\n        r14 += *((rsp + 0x18));\n        rax = (int64_t) r15d;\n        rbp = *((rsp + rax*8 + 0x20));\n        eax = fcn_004048a0 (*(0x006123e0), *((rsp + rax*8 + 0x20)), rsp + 0x18);\n        eax &= ebx;\n        rbx = *((rsp + 0x18));\n        r13d = eax;\n    }\nlabel_17:\n    if (rbx == 0) {\n        goto label_70;\n    }\n    r9 = imp.__libc_start_main;\n    r10 = imp.__libc_start_main;\n    edi = 0;\n    r8d = 1;\nlabel_16:\n    r8 = (int64_t) r8d;\n    if (rdi == r9) {\n        goto label_71;\n    }\n    rax = rdi * 0x28;\n    eax = *((r10 + rax + 4));\n    rsi = *((rax*4 + 0x40d220));\n    rax = r8;\n    rcx = rsi;\n    while (rdx != 0) {\n        rcx = rdx;\n        edx = 0;\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rax = rcx;\n    }\n    rax = rsi;\n    edx = 0;\n    rdi++;\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    r8d *= eax;\n    goto label_16;\nlabel_18:\n    eax = (int32_t) r12b;\n    rdi -= r14;\n    rdx = rsp + 0x18;\n    rbp = *((rsp + rax*8 + 0x20));\n    r15 = rax;\n    rax = imp.__libc_start_main;\n    rsi = rbp;\n    if (rdi > rax) {\n        rdi = rax;\n    }\n    eax = fcn_004048a0 (rdi, rsi, rdx);\n    rbx = *((rsp + 0x18));\n    r13d &= eax;\n    if (rbx < *(0x006123e0)) {\n        goto label_17;\n    }\n    if (rbx != *(0x006123e0)) {\n        goto label_72;\n    }\n    r12d ^= 1;\n    eax = (int32_t) r12b;\n    fcn_00403d80 (r14, rbx, *((rsp + rax*8 + 0x20)), rbp);\n    r14 += *((rsp + 0x18));\nlabel_68:\n    rdi = imp.__libc_start_main;\n    if (rdi > r14) {\n        goto label_18;\n    }\n    do {\nlabel_70:\n        esi = 0xa;\n        rdi = r14;\n        uint64_t (*0x00612420)(uint64_t) (0);\n        if (*(0x00612410) != 0) {\n            if (r14 >= *(0x00612400)) {\n                goto label_73;\n            }\n        }\nlabel_28:\n        r12d = (int32_t) r13b;\n        free (*((rsp + 0x20)));\n        goto label_19;\nlabel_51:\n        *(0x00612444) = 8;\n        *(0x00612440) = 7;\n        *(0x00612420) = 0x404010;\n        goto label_20;\nlabel_66:\n        al = fcn_00402e40 (rdi, rsp + 0x20, rdx);\n        if (al == 0) {\n            goto label_74;\n        }\n        if (*(0x00612431) != 0) {\n            goto label_75;\n        }\nlabel_29:\n        rax = *((rsp + 0x20));\n        r12d = 1;\n        *(0x00612418) = rax;\n        rax = *(0x006122dc);\n        rdx = *((rbp + rax*8));\n        *((rbp + rax*8 + 8)) = rdx;\n        rbp += 8;\n        goto label_4;\nlabel_71:\n        rax = r8 + rbx - 1;\n        edx = 0;\n        r15 = *((rsp + r15*8 + 0x20));\n        rax = rdx:rax / r8;\n        rdx = rdx:rax % r8;\n        rax *= r8;\n        rax -= rbx;\n        memset (r15 + rbx, 0, rax);\n        eax = r12d;\n        eax ^= 1;\n        eax = (int32_t) al;\n        fcn_00403d80 (r14, rbx, *((rsp + rax*8 + 0x20)), r15);\n        r14 += *((rsp + 0x18));\n    } while (1);\nlabel_49:\n    rcx = *((rbp + rax*8));\n    if (dl != 0) {\n        goto label_21;\n    }\n    if (*(rcx) == 0x2b) {\n        goto label_21;\n    }\nlabel_63:\n    r12d = 1;\n    goto label_4;\nlabel_64:\n    *((r14 + rbx)) = 0;\n    rbx = ~rbx;\n    esi = 0x20;\n    rdi = rbx;\n    rbx = r14;\n    rdi += r13;\n    uint64_t (*0x00612420)() ();\n    do {\n        edx = *(rbx);\n        rcx = stdout;\n        eax = (int32_t) dl;\n        *((rsp + 0x18)) = eax;\n        if (eax == 0) {\n            goto label_76;\n        }\n        eax = rdx - 7;\n        if (al > 6) {\n            goto label_77;\n        }\n        eax = (int32_t) al;\n        edx = 2;\n        esi = 1;\n        /* switch table (7 cases) at 0x40cee8 */\n        edi = 0x40c2ee;\n        fwrite_unlocked ();\nlabel_22:\n        rbx++;\n    } while (1);\n    edi = 0x40c2fa;\n    fwrite_unlocked ();\n    goto label_22;\n    edi = 0x40c2f1;\n    fwrite_unlocked ();\n    goto label_22;\n    edi = 0x40c2f7;\n    fwrite_unlocked ();\n    goto label_22;\n    edi = 0x40c2eb;\n    fwrite_unlocked ();\n    goto label_22;\n    edi = 0x40c2fd;\n    fwrite_unlocked ();\n    goto label_22;\n    edi = 0x40c2f4;\n    fwrite_unlocked ();\n    goto label_22;\nlabel_77:\n    rax = *((rcx + 0x28));\n    if (rax >= *((rcx + 0x30))) {\n        goto label_78;\n    }\n    rsi = rax + 1;\n    *((rcx + 0x28)) = rsi;\n    *(rax) = dl;\n    goto label_22;\nlabel_76:\n    rax = *((rcx + 0x28));\n    if (rax >= *((rcx + 0x30))) {\n        goto label_79;\n    }\n    rdx = rax + 1;\n    rsi = imp.__libc_start_main;\n    *((rcx + 0x28)) = rdx;\n    *(rax) = 0xa;\n    goto label_23;\nlabel_26:\n    *(0x006123e0) = r15;\n    goto label_14;\nlabel_74:\n    r12d = 2;\n    goto label_24;\nlabel_55:\n    r8d = 1;\n    if (r14b == 0) {\n        goto label_25;\n    }\n    if (r15 != 0) {\n        goto label_26;\n    }\n    r12d = 1;\n    r8d = 1;\n    goto label_27;\nlabel_73:\n    eax = fcn_004038f0 (0);\n    r13d &= eax;\n    goto label_28;\nlabel_75:\n    rax = *(0x006122dc);\n    al = fcn_00402e40 (*((rbp + rax*8)), rsp + 0x18, rdx);\n    if (al == 0) {\n        goto label_29;\n    }\n    rax = *((rsp + 0x18));\n    *(0x00612430) = 1;\n    rbp += 0x10;\n    r12d = 0;\n    *(0x00612418) = rax;\n    rax = *((rsp + 0x20));\n    *((rsp + 8)) = rax;\n    goto label_4;\nlabel_59:\n    free (r14);\n    eax = fcn_004038f0 (0);\n    r12d &= eax;\n    goto label_30;\nlabel_65:\n    rax = *(0x006122dc);\n    al = fcn_00402e40 (*((rbp + rax*8 + 0x10)), rsp + 0x20, rdx);\n    if (al == 0) {\n        goto label_31;\n    }\n    rax = *((rsp + 0x18));\n    *(0x00612430) = 1;\n    r12d = 1;\n    *(0x00612418) = rax;\n    rax = *((rsp + 0x20));\n    *((rsp + 8)) = rax;\n    rax = *(0x006122dc);\n    rdx = *((rbp + rax*8));\n    *((rbp + rax*8 + 0x10)) = rdx;\n    rbp += 0x10;\n    goto label_4;\nlabel_79:\n    esi = 0xa;\n    rdi = rcx;\n    overflow ();\n    rsi = imp.__libc_start_main;\n    goto label_23;\nlabel_78:\n    esi = (int32_t) dl;\n    rdi = rcx;\n    overflow ();\n    goto label_22;\nlabel_52:\n    edx = 5;\n    rax = dcgettext (0, \"skip-bytes + read-bytes is too large\");\n    eax = 0;\n    error (1, 0, rax);\nlabel_72:\n    assert_fail (\"n_bytes_read == bytes_per_block\", \"src/od.c\", 0x575, \"dump\");\nlabel_67:\n    fcn_00407a20 ();\nlabel_69:\n    assert_fail (\"n_bytes_read == bytes_per_block\", \"src/od.c\", 0x583, \"dump\");\nlabel_45:\n    edx = 5;\n    rax = dcgettext (0, \"no type may be specified when dumping strings\");\n    eax = 0;\n    eax = error (1, 0, rax);\nlabel_36:\n    r8 = imp.__libc_start_main;\n    fcn_00407c50 (eax, *((rsp + 0x18)), 0x77, 0x40cf80);\nlabel_43:\n    edx = 5;\n    rax = dcgettext (0, \"invalid output address radix '%c'; it must be one character from [doxn]\");\n    ecx = (int32_t) r13b;\n    eax = 0;\n    error (1, 0, rax);\nlabel_37:\n    eax = assert_fail (\"s != NULL\", \"src/od.c\", 0x3d7, \"decode_format_string\");\nlabel_38:\n    r8 = imp.__libc_start_main;\n    eax = fcn_00407c50 (eax, *((rsp + 0x18)), 0x6a, 0x40cf80);\nlabel_40:\n    r8 = imp.__libc_start_main;\n    return fcn_00407c50 (eax, *((rsp + 0x18)), 0x53, 0x40cf80);\n}\n"
        },
        {
            "funcName": "fcn_00402c8b",
            "funcStartAddr": "0x402c8b",
            "funcEndAddr": "0x402caa",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x402c8b */\n#include <stdint.h>\n \nint32_t fcn_00402c8b (void) {\n    eax = __progname;\n    if (rax != obj.__progname) {\n        eax = 0;\n        if (rax == 0) {\n            goto label_0;\n        }\n        edi = __progname;\n        void (*rax)() ();\n    }\nlabel_0:\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00402ce1",
            "funcStartAddr": "0x402ce1",
            "funcEndAddr": "0x402d38",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x402ce1 */\n#include <stdint.h>\n \nint64_t fcn_00402ce1 (int32_t argc, func fini, func init, func main, func rtld_fini, void * stack_end, char ** ubp_av) {\n    rsi = argc;\n    r8 = fini;\n    rcx = init;\n    rdi = main;\n    r9 = rtld_fini;\n    xmm0 = stack_end;\n    rdx = ubp_av;\n    if (*(0x00612308) != 0) {\n        goto label_0;\n    }\n    r12d = section..dtors;\n    ebx = 0x611e48;\n    rbx -= section..dtors;\n    rbx >>= 3;\n    rbx--;\n    do {\n        rax = imp.__libc_start_main;\n        if (rax >= rbx) {\n            goto label_1;\n        }\n        rax++;\n        *(0x00612310) = rax;\n        uint64_t (*r12 + rax*8)() ();\n    } while (1);\nlabel_1:\n    fcn_00402c8b ();\n    *(0x00612308) = 1;\n    return rax;\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00402d38",
            "funcStartAddr": "0x402d38",
            "funcEndAddr": "0x402dcb",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x402d38 */\n#include <stdint.h>\n \nint64_t fcn_00402d38 (void) {\n    do {\n        esi = __progname;\n        ecx = 2;\n        rsi -= obj.__progname;\n        rsi >>= 3;\n        rax = rsi;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rsi = rax;\n        if (rax != 0) {\n            eax = 0;\n            if (rax == 0) {\n                goto label_0;\n            }\n            edi = __progname;\n            void (*rax)() ();\n        }\nlabel_0:\n        return rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00402d50",
            "funcStartAddr": "0x402d50",
            "funcEndAddr": "0x402e3d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x402d50 */\n#include <stdint.h>\n \nint64_t fcn_00402d50 (int64_t arg1, int64_t arg3) {\n    int64_t var_17h;\n    int64_t var_18h;\n    rdi = arg1;\n    rdx = arg3;\n    rax = *(0x00612440);\n    r8 = rdi;\n    rcx = rsp + 0x17;\n    *((rsp + 0x18)) = 0;\n    rdi = rcx;\n    *((rsp + 0x17)) = sil;\n    rdi -= rax;\n    eax = imp.__libc_start_main;\n    if (eax == 0xa) {\n        goto label_3;\n    }\n    if (eax == 0x10) {\n        goto label_4;\n    }\n    if (eax == 8) {\n        goto label_5;\n    }\nlabel_0:\n    if (rdi >= rcx) {\n        goto label_6;\n    }\n    do {\nlabel_1:\n        rcx--;\n        *(rcx) = 0x30;\n    } while (rdi != rcx);\nlabel_2:\n    rsi = stdout;\n    fputs_unlocked ();\n    return rax;\n    do {\nlabel_4:\n        rax = r8;\n        rcx--;\n        eax &= 0xf;\n        r8 >>= 4;\n        eax = *((rax + str.0123456789abcdef));\n        *(rcx) = al;\n    } while (r8 != 0);\n    goto label_0;\n    do {\nlabel_5:\n        eax = r8d;\n        rcx--;\n        eax &= 7;\n        eax += 0x30;\n        r8 >>= 3;\n        *(rcx) = al;\n    } while (r8 != 0);\n    goto label_0;\nlabel_3:\n    rsi = 0xcccccccccccccccd;\n    while (r8 > 9) {\n        r8 = rdx;\n        rax = rdx;\n        r9 = r8;\n        rcx--;\n        rdx:rax = rax * rsi;\n        rdx >>= 3;\n        rax = rdx * 5;\n        rax += rax;\n        r9 -= rax;\n        rax = r9;\n        eax += 0x30;\n        *(rcx) = al;\n    }\n    if (rdi < rcx) {\n        goto label_1;\n    }\nlabel_6:\n    rdi = rcx;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_00402e40",
            "funcStartAddr": "0x402e40",
            "funcEndAddr": "0x402eb2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x402e40 */\n#include <stdint.h>\n \nuint64_t fcn_00402e40 (int64_t arg1, void * arg2, int64_t arg4) {\n    rdi = arg1;\n    rsi = arg2;\n    rcx = arg4;\n    edx = *(rdi);\n    if (dl == 0) {\n        goto label_1;\n    }\n    rbx = rdi;\n    while (1) {\n        rax = strchr (rbx, 0x2e);\n        edx = 0xa;\n        if (rax == 0) {\n            goto label_2;\n        }\nlabel_0:\n        eax = fcn_00407ce0 (rbx, 0, rdx, rbp, 0x40c2d5);\n        al = (eax == 0) ? 1 : 0;\n        return rax;\n        rbx++;\n    }\nlabel_1:\n    eax = 0;\n    return rax;\nlabel_2:\n    edx = 8;\n    if (*(rbx) != 0x30) {\n        goto label_0;\n    }\n    eax = *((rbx + 1));\n    edx = 0;\n    eax &= 0xffffffdf;\n    dl = (al == 0x58) ? 1 : 0;\n    edx = rdx*8 + 8;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_004038f0",
            "funcStartAddr": "0x4038f0",
            "funcEndAddr": "0x403a45",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x4038f0 */\n#include <stdint.h>\n \nint64_t fcn_004038f0 (int64_t arg1) {\n    rdi = arg1;\n    ebx = 1;\n    rax = imp.__libc_start_main;\n    if (rax == 0) {\n        goto label_2;\n    }\n    if ((*(rax) & 0x20) != 0) {\n        goto label_3;\n    }\n    rdx = imp.__libc_start_main;\n    edi = 0x40f681;\n    ecx = 2;\n    rsi = *((rdx - 8));\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    dl = ((*(rax) & 0x20) > 0) ? 1 : 0;\n    if (dl != 0) {\n        goto label_4;\n    }\nlabel_1:\n    ebx = 1;\n    do {\nlabel_0:\n        *(0x006123c8) = 0;\nlabel_2:\n        rax = stdout;\n        if ((*(rax) & 0x20) != 0) {\n            goto label_5;\n        }\n        eax = ebx;\n        return rax;\nlabel_3:\n        rdx = imp.__libc_start_main;\n        rax = fcn_00407090 (0, 3);\n        edx = 5;\n        rbx = rax;\n        rax = dcgettext (0, \"%s: read error\");\n        rcx = rbx;\n        eax = 0;\n        error (0, ebp, rax);\n        edi = 0x40f681;\n        ecx = 2;\n        rax = imp.__libc_start_main;\n        rsi = *((rax - 8));\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        al = ((*(rax) & 0x20) > 0) ? 1 : 0;\n        ebx = 0;\n    } while (al == 0);\n    fcn_00408120 (*(0x006123c8));\n    goto label_0;\nlabel_5:\n    edx = 5;\n    ebx = 0;\n    rax = dcgettext (0, \"write error\");\n    eax = 0;\n    error (0, 0, rax);\n    eax = ebx;\n    return rax;\nlabel_4:\n    eax = fcn_00408120 (rax);\n    if (eax == 0) {\n        goto label_1;\n    }\n    rdx = imp.__libc_start_main;\n    rax = fcn_00407090 (0, 3);\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    ebx = 0;\n    error (0, *(rax), 0x40e4cc);\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00403a50",
            "funcStartAddr": "0x403a50",
            "funcEndAddr": "0x403b4f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x403a50 */\n#include <stdint.h>\n \nuint64_t fcn_00403a50 (void) {\n    ebx = 1;\n    while (al == 0) {\n        edx = 5;\n        rax = dcgettext (0, \"standard input\");\n        *(0x006123c4) = 1;\n        *(0x006123d8) = rax;\n        rax = stdin;\n        *(0x006123c8) = rax;\nlabel_0:\n        if (rax != 0) {\n            goto label_1;\n        }\n        rax = imp.__libc_start_main;\n        rdx = *(rax);\n        *(0x006123d8) = rdx;\n        if (rdx == 0) {\n            goto label_2;\n        }\n        edi = 0x40f681;\n        ecx = 2;\n        rsi = rdx;\n        rax += 8;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        *(0x006123d0) = rax;\n        al = (rax > 0) ? 1 : 0;\n    }\n    rax = fopen (rdx, 0x40c2f5);\n    *(0x006123c8) = rax;\n    if (rax == 0) {\n        goto label_3;\n    }\nlabel_1:\n    if (*(0x00612410) == 0) {\n        goto label_2;\n    }\n    while (1) {\nlabel_2:\n        eax = ebx;\n        return rax;\nlabel_3:\n        rdx = imp.__libc_start_main;\n        rax = fcn_00407090 (0, 3);\n        rbx = rax;\n        rax = errno_location ();\n        rcx = rbx;\n        eax = 0;\n        ebx = 0;\n        error (0, *(rax), 0x40e4cc);\n        rax = imp.__libc_start_main;\n        goto label_0;\n        setvbuf (rax, 0, 2, 0);\n    }\n}\n"
        },
        {
            "funcName": "fcn_00403b50",
            "funcStartAddr": "0x403b50",
            "funcEndAddr": "0x403d14",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x403b50 */\n#include <stdint.h>\n \nint64_t fcn_00403b50 (int64_t arg_30h, int64_t arg_38h, int64_t arg_90h, int64_t arg1) {\n    int64_t var_18h;\n    rdi = arg1;\n    if (rdi == 0) {\n        goto label_2;\n    }\n    rbp = imp.__libc_start_main;\n    if (rbp == 0) {\n        goto label_3;\n    }\n    rbx = rdi;\n    r12d = 1;\n    r14 = 0x1fffffffffffffff;\n    r13d = 0x200;\n    while (eax == 0) {\n        eax = *((rsp + 0x18));\n        eax &= 0xd000;\n        if (eax != 0x8000) {\n            goto label_4;\n        }\n        rax = *((rsp + 0x38));\n        rdx = rax - 1;\n        rdx = *((rsp + 0x30));\n        if (rdx > r14) {\n            rax = r13;\n        }\n        if (rdx <= rax) {\n            goto label_4;\n        }\n        if (rdx >= rbx) {\n            goto label_5;\n        }\n        rbx -= rdx;\nlabel_0:\n        eax = fcn_004038f0 (0);\n        r12d &= eax;\n        eax = fcn_00403a50 ();\n        rbp = imp.__libc_start_main;\n        r12d &= eax;\n        if (rbp == 0) {\n            goto label_3;\n        }\n        eax = fileno (rbp);\n        rdx = rsp;\n        edi = 1;\n        esi = eax;\n        eax = fxstat ();\n    }\n    rdx = imp.__libc_start_main;\n    r12d = 0;\n    rax = fcn_00407090 (0, 3);\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    rax = error (0, *(rax), 0x40e4cc);\n    goto label_0;\nlabel_4:\n    do {\n        edx = 1;\n        r8 = imp.__libc_start_main;\n        esi = 0x2000;\n        if (rbp > rbx) {\n        }\n        rdi = rsp + 0x90;\n        rcx = rbp;\n        rax = fread_unlocked_chk ();\n        rbx -= rax;\n        if (rax != rbp) {\n            rax = imp.__libc_start_main;\n            eax = *(rax);\n            if ((al & 0x20) != 0) {\n                goto label_6;\n            }\n            if ((al & 0x10) != 0) {\n                goto label_7;\n            }\n        }\n    } while (rbx != 0);\nlabel_1:\n    eax = r12d;\n    return rax;\nlabel_7:\n    if (rbx != 0) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_5:\n    eax = fcn_004081e0 (rbp, rbx, 1);\n    eax = 0;\n    if (eax != 0) {\n        r12d = eax;\n    }\n    goto label_1;\nlabel_6:\n    r12d = 0;\n    goto label_1;\nlabel_3:\n    edx = 5;\n    rax = dcgettext (0, \"cannot skip past end of combined input\");\n    eax = 0;\n    error (1, 0, rax);\nlabel_2:\n    r12d = 1;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00403d20",
            "funcStartAddr": "0x403d20",
            "funcEndAddr": "0x403d78",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x403d20 */\n#include <stdint.h>\n \nuint64_t fcn_00403d20 (int64_t arg1) {\n    rdi = arg1;\n    r12 = rdi;\n    *(rdi) = 0xffffffff;\n    rdi = imp.__libc_start_main;\n    if (rdi != 0) {\n        goto label_0;\n    }\n    goto label_1;\n    do {\n        rax = errno_location ();\n        eax = fcn_004038f0 (*(rax));\n        ebx = eax;\n        eax = fcn_00403a50 ();\n        rdi = imp.__libc_start_main;\n        ebx &= eax;\n        ebp &= ebx;\n        if (rdi == 0) {\n            goto label_1;\n        }\nlabel_0:\n        eax = fgetc (rdi);\n        *(r12) = eax;\n    } while (eax == 0xffffffff);\nlabel_1:\n    eax = ebp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00403d80",
            "funcStartAddr": "0x403d80",
            "funcEndAddr": "0x40400f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x403d80 */\n#include <stdint.h>\n \nuint64_t fcn_00403d80 (int64_t arg1, size_t n, void * s1, void * s2) {\n    signed int64_t var_ch;\n    uint32_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = n;\n    rdx = s1;\n    rcx = s2;\n    r15 = rcx;\n    r14 = rsi;\n    *((rsp + 0x18)) = rdi;\n    if (*(0x00612251) != 0) {\n        if (*(0x00612250) == 0) {\n            goto label_5;\n        }\n    }\nlabel_3:\n    *(0x00612320) = 0;\n    if (*(0x006123f0) == 0) {\n        goto label_6;\n    }\n    rax = r15 + r14;\n    ebp = 0;\n    *((rsp + 0x10)) = rax;\n    while (rbp == 0) {\n        esi = 0;\n        rdi = *((rsp + 0x18));\n        uint64_t (*0x00612420)() ();\nlabel_0:\n        rax = imp.__libc_start_main;\n        rsi = (int64_t) r12d;\n        rdi = (int64_t) r13d;\n        rdx = r15;\n        rax += rbx;\n        rcx = rax + 0x10;\n        r9d = *((rax + 0x20));\n        r8d = *((rax + 0x1c));\n        uint64_t (*rax + 8)() ();\n        rbx += *(0x006123f8);\n        if (*((rbx + 0x18)) != 0) {\n            goto label_7;\n        }\nlabel_1:\n        rdi = stdout;\n        rax = *((rdi + 0x28));\n        if (rax >= *((rdi + 0x30))) {\n            goto label_8;\n        }\n        rdx = rax + 1;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = 0xa;\nlabel_4:\n        rbp++;\n        if (*(0x006123f0) <= rbp) {\n            goto label_6;\n        }\n        rbx = rbp + rbp*4;\n        rax = imp.__libc_start_main;\n        r12 = imp.__libc_start_main;\n        edx = 0;\n        rbx <<= 3;\n        eax = *((rax + rbx + 4));\n        rcx = *((rax*4 + 0x40d220));\n        rax = r12;\n        r12 -= r14;\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        edx = 0;\n        r13 = rax;\n        *((rsp + 0xc)) = eax;\n        rax = r12;\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        r12 = rax;\n    }\n    edx = imp.__libc_start_main;\n    ecx = 0x40fbbc;\n    esi = 0x40c2dc;\n    eax = 0;\n    edi = 1;\n    printf_chk ();\n    goto label_0;\nlabel_7:\n    eax = *((rbx + 0x20));\n    ecx = 0x40fbbc;\n    esi = 0x40c2dc;\n    edi = 1;\n    eax *= r12d;\n    r12d *= *((rbx + 0x1c));\n    edx:eax = (int64_t) eax;\n    eax = *(edx:eax) / rsp + 0xc;\n    edx = *(edx:eax) % rsp + 0xc;\n    edx = rax + r12;\n    eax = 0;\n    printf_chk ();\n    edx = 3;\n    esi = 1;\n    rcx = stdout;\n    edi = 0x40c32c;\n    fwrite_unlocked ();\n    if (r14 == 0) {\n        goto label_9;\n    }\n    rax = ctype_b_loc ();\n    rbx = r15;\n    r12 = rax;\n    do {\n        rbx++;\n        ecx = *((rbx - 1));\n        rdx = *(r12);\n        rax = rcx;\n        esi = (int32_t) cl;\n        if ((*((rdx + rcx*2 + 1)) & 0x40) == 0) {\n            esi = 0x2e;\n            eax = 0x2e;\n        }\n        rdi = stdout;\n        rdx = *((rdi + 0x28));\n        if (rdx >= *((rdi + 0x30))) {\n            goto label_10;\n        }\n        rcx = rdx + 1;\n        *((rdi + 0x28)) = rcx;\n        *(rdx) = al;\nlabel_2:\n    } while (rbx != *((rsp + 0x10)));\nlabel_9:\n    rdi = stdout;\n    rax = *((rdi + 0x28));\n    if (rax >= *((rdi + 0x30))) {\n        goto label_11;\n    }\n    rdx = rax + 1;\n    *((rdi + 0x28)) = rdx;\n    *(rax) = 0x3c;\n    goto label_1;\nlabel_10:\n    overflow ();\n    goto label_2;\nlabel_5:\n    if (*(0x006123e0) != rsi) {\n        goto label_3;\n    }\n    eax = memcmp (rdx, rcx, rsi);\n    if (eax != 0) {\n        goto label_3;\n    }\n    if (*(0x00612320) == 0) {\n        puts (0x40c32a);\n        *(0x00612320) = 1;\n    }\nlabel_6:\n    *(0x00612250) = 0;\n    return rax;\nlabel_8:\n    esi = 0xa;\n    overflow ();\n    goto label_4;\nlabel_11:\n    esi = 0x3c;\n    overflow ();\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_004040c0",
            "funcStartAddr": "0x4040c0",
            "funcEndAddr": "0x404894",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x4040c0 */\n#include <stdint.h>\n \nint64_t fcn_004040c0 (int64_t arg_4h, int64_t arg_8h, int64_t arg_10h, int64_t arg_18h, int64_t arg_1ch, uint32_t arg1) {\n    int64_t var_8h;\n    rdi = arg1;\n    rax = imp.__libc_start_main;\n    if (*(rdi) == 0) {\n        goto label_10;\n    }\n    r15 = rdi;\n    r13 = rdi;\n    r12 = 0xcccccccccccccccd;\nlabel_0:\n    rcx = imp.__libc_start_main;\n    rdi = imp.__libc_start_main;\n    if (rcx <= rax) {\n        goto label_11;\n    }\nlabel_2:\n    rax *= 5;\n    rbp = rdi + rax*8;\n    if (rbp == 0) {\n        goto label_12;\n    }\n    ecx = *(r15);\n    eax = rcx - 0x61;\n    if (al > 0x17) {\n        goto label_13;\n    }\n    eax = (int32_t) al;\n    /* switch table (24 cases) at 0x40c570 */\n    eax = *((r15 + 1));\n    if (al == 0x46) {\n        goto label_14;\n    }\n    if (al == 0x4c) {\n        goto label_15;\n    }\n    if (al == 0x44) {\n        goto label_16;\n    }\n    ecx = (int32_t) al;\n    rsi = r15 + 1;\n    ecx -= 0x30;\n    if (ecx > 9) {\n        goto label_17;\n    }\n    rbx = r15 + 2;\n    rcx = (int64_t) ecx;\n    r8d = 0;\n    while (ecx <= 9) {\n        rcx = (int64_t) ecx;\n        rbx++;\n        rdx = rcx;\n        rdx = ~rdx;\n        rax = rdx;\n        rdx:rax = rax * r12;\n        rdx >>= 3;\n        if (rdx < r8) {\n            goto label_18;\n        }\n        rax = r8 * 5;\n        r8 = rcx + rax*2;\n        ecx = *(rbx);\n        ecx -= 0x30;\n    }\n    r14d = imp.__libc_start_main;\n    if (rsi == rbx) {\n        goto label_6;\n    }\n    if (r8 <= 0x10) {\n        r14d = *((r8*4 + 0x612340));\n        if (r14d != 0) {\n            goto label_6;\n        }\n    }\n    *((rsp + 8)) = r8;\n    rax = fcn_00407210 (r13);\n    edx = 5;\n    rbx = rax;\nlabel_9:\n    rax = dcgettext (0, \"invalid type string %s;\\nthis system doesn't provide a %lu-byte floating point type\");\n    r8 = *((rsp + 8));\n    rcx = rbx;\n    eax = 0;\n    eax = error (0, 0, rax);\n    eax = 0;\n    return rax;\n    eax = *((r15 + 1));\n    if (al == 0x49) {\n        goto label_19;\n    }\n    if (al <= 0x49) {\n        goto label_20;\n    }\n    if (al == 0x4c) {\n        goto label_21;\n    }\n    if (al != 0x53) {\n        goto label_22;\n    }\n    r14d = imp.__libc_start_main;\n    rbx = r15 + 2;\n    r8d = 2;\nlabel_8:\n    if (cl == 0x6f) {\n        goto label_23;\n    }\n    if (cl <= 0x6f) {\nlabel_3:\n        goto label_24;\n    }\n    if (cl != 0x75) {\n        goto label_25;\n    }\n    eax = r14 - 4;\n    rdi = rbp + 0x10;\n    ecx = \"%%*%s\";\n    r11d = *((r8*4 + 0x40d2c0));\n    r8d = 0x40c336;\n    eax = 0x40c337;\n    edx = 8;\n    if (eax >= 2) {\n        r8 = rax;\n    }\n    esi = 1;\n    eax = 0;\n    *((rsp + 8)) = r11d;\n    sprintf_chk ();\n    r11d = *((rsp + 8));\n    eax = 1;\nlabel_4:\n    if (r14d > 5) {\n        goto label_26;\n    }\n    edx = r14d;\n    /* switch table (6 cases) at 0x40c630 */\n    rbx = r15 + 1;\n    r11d = 3;\n    edx = 0x403780;\n    eax = 6;\n    r14d = 1;\nlabel_1:\n    *(rbp) = eax;\n    *((rbp + 4)) = r14d;\n    *((rbp + 8)) = rdx;\n    *((rbp + 0x1c)) = r11d;\n    al = (*(rbx) == 0x7a) ? 1 : 0;\n    *((rbp + 0x18)) = al;\n    eax = (int32_t) al;\n    rbx += rax;\n    if (rbx == r15) {\n        goto label_27;\n    }\n    rax = imp.__libc_start_main;\n    r15 = rbx;\n    rax++;\n    *(0x006123f0) = rax;\n    if (*(rbx) != 0) {\n        goto label_0;\n    }\n    eax = 1;\n    return rax;\n    rbx = r15 + 1;\n    r11d = 3;\n    edx = 0x402ec0;\n    eax = 5;\n    r14d = 1;\n    goto label_1;\nlabel_13:\n    rax = fcn_00407210 (r13);\n    ebx = *(r15);\n    edx = 5;\n    rax = dcgettext (0, \"invalid character '%c' in type string %s\");\n    r8 = rbp;\n    ecx = ebx;\n    eax = 0;\n    eax = error (0, 0, rax);\n    eax = 0;\n    return rax;\nlabel_11:\n    if (rdi == 0) {\n        goto label_28;\n    }\n    rax = 0x222222222222221;\n    if (rcx > rax) {\n        goto label_29;\n    }\n    rax = rcx;\n    rax >>= 1;\n    rcx = rcx + rax + 1;\nlabel_5:\n    rsi = rcx * 5;\n    rsi <<= 3;\nlabel_7:\n    *(0x006123e8) = rcx;\n    rax = fcn_00407830 (rdi);\n    rdi = rax;\n    *(0x006123f8) = rax;\n    rax = imp.__libc_start_main;\n    goto label_2;\nlabel_20:\n    if (al != 0x43) {\n        goto label_22;\n    }\n    rbx = r15 + 2;\n    r14d = imp.__libc_start_main;\n    r8d = 1;\n    if (cl != 0x6f) {\n        goto label_3;\n    }\nlabel_23:\n    eax = r14 - 4;\n    r11d = *((r8*4 + 0x40d380));\n    r9d = 0x40c333;\n    rdi = rbp + 0x10;\n    eax = 0x40c2e6;\n    ecx = \"%%*.%d%s\";\n    edx = 8;\n    if (eax >= 2) {\n        r9 = rax;\n    }\n    r8d = r11d;\n    esi = 1;\n    eax = 0;\n    *((rsp + 8)) = r11d;\n    sprintf_chk ();\n    eax = 2;\n    r11d = *((rsp + 8));\n    goto label_4;\nlabel_25:\n    if (cl != 0x78) {\n        goto label_26;\n    }\n    eax = r14 - 4;\n    r11d = *((r8*4 + 0x40d260));\n    r9d = 0x40c339;\n    rdi = rbp + 0x10;\n    eax = 0x40c49b;\n    ecx = \"%%*.%d%s\";\n    edx = 8;\n    if (eax >= 2) {\n        r9 = rax;\n    }\n    r8d = r11d;\n    eax = 0;\n    esi = 1;\n    *((rsp + 8)) = r11d;\n    sprintf_chk ();\n    if (r14d > 5) {\n        goto label_26;\n    }\n    eax = r14d;\n    r11d = *((rsp + 8));\n    /* switch table (6 cases) at 0x40c660 */\nlabel_24:\n    if (cl != 0x64) {\n        goto label_26;\n    }\n    eax = r14 - 4;\n    rdi = rbp + 0x10;\n    ecx = \"%%*%s\";\n    r11d = *((r8*4 + 0x40d320));\n    r8d = 0x40c330;\n    eax = 0x40f65e;\n    edx = 8;\n    if (eax >= 2) {\n        r8 = rax;\n    }\n    esi = 1;\n    eax = 0;\n    *((rsp + 8)) = r11d;\n    sprintf_chk ();\n    if (r14d > 5) {\n        goto label_26;\n    }\n    eax = r14d;\n    r11d = *((rsp + 8));\n    /* switch table (6 cases) at 0x40c690 */\nlabel_28:\n    if (rcx == 0) {\n        goto label_30;\n    }\n    edx = 0x28;\n    rax = rdx;\n    rdx:rax = rax * rcx;\n    __asm (\"seto dl\");\n    edx = (int32_t) dl;\n    if (rax < 0) {\n        goto label_29;\n    }\n    if (rdx == 0) {\n        goto label_5;\n    }\nlabel_29:\n    fcn_00407a20 ();\nlabel_16:\n    r14d = imp.__libc_start_main;\n    rbx = r15 + 2;\n    do {\nlabel_6:\n        rax = localeconv ();\n        rdi = *(rax);\n        eax = 1;\n        if (*(rdi) != 0) {\n            strlen (rdi);\n        }\n        if (r14d != 7) {\n            if (r14d == 8) {\n                r11d = rax + 0x1c;\n                edx = 0x4034a0;\n                eax = 4;\n                goto label_1;\n            }\n            if (r14d == 6) {\n                goto label_31;\n            }\nlabel_26:\n            abort ();\n        }\n        r11d = rax + 0x17;\n        edx = 0x403590;\n        eax = 4;\n        goto label_1;\nlabel_31:\n        r11d = rax + 0xe;\n        edx = 0x403680;\n        eax = 4;\n        goto label_1;\nlabel_15:\n        rbx = r15 + 2;\n        r14d = imp.__libc_start_main;\n    } while (1);\nlabel_14:\n    rbx = r15 + 2;\n    r14d = imp.__libc_start_main;\n    goto label_6;\nlabel_30:\n    esi = 0x78;\n    ecx = 3;\n    goto label_7;\nlabel_19:\n    rbx = r15 + 2;\n    r14d = imp.__libc_start_main;\n    r8d = 4;\n    goto label_8;\nlabel_22:\n    eax -= 0x30;\n    rsi = r15 + 1;\n    if (eax > 9) {\n        goto label_32;\n    }\n    rbx = r15 + 2;\n    rdi = (int64_t) eax;\n    r8d = 0;\n    while (eax <= 9) {\n        rdi = (int64_t) eax;\n        rbx++;\n        rdx = rdi;\n        rdx = ~rdx;\n        rax = rdx;\n        rdx:rax = rax * r12;\n        rdx >>= 3;\n        if (rdx < r8) {\n            goto label_18;\n        }\n        rax = r8 * 5;\n        r8 = rdi + rax*2;\n        eax = *(rbx);\n        eax -= 0x30;\n    }\n    if (rbx == rsi) {\n        goto label_33;\n    }\n    if (r8 > 8) {\n        goto label_34;\n    }\n    r14d = *((r8*4 + 0x6123a0));\n    if (r14d != 0) {\n        goto label_8;\n    }\nlabel_34:\n    *((rsp + 8)) = r8;\n    rax = fcn_00407210 (r13);\n    edx = 5;\n    esi = \"invalid type string %s;\\nthis system doesn't provide a %lu-byte integral type\";\n    rbx = rax;\n    goto label_9;\nlabel_21:\n    rbx = r15 + 2;\n    r14d = imp.__libc_start_main;\n    r8d = 8;\n    goto label_8;\n    edx = 0x403050;\n    goto label_1;\n    edx = 0x403120;\n    goto label_1;\n    edx = 0x403380;\n    goto label_1;\n    edx = 0x402f80;\n    goto label_1;\n    edx = 0x4032c0;\n    eax = 0;\n    goto label_1;\n    edx = 0x403380;\n    eax = 3;\n    goto label_1;\nlabel_18:\n    rax = fcn_00407210 (r13);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"invalid type string %s\");\n    rcx = rbx;\n    eax = 0;\n    eax = error (0, 0, rax);\n    eax = 0;\n    return rax;\n    edx = 0x403200;\n    goto label_1;\n    edx = 0x402f80;\n    eax = 3;\n    goto label_1;\n    edx = 0x403410;\n    eax = 0;\n    goto label_1;\n    edx = 0x403120;\n    eax = 3;\n    goto label_1;\n    edx = 0x403050;\n    eax = 3;\n    goto label_1;\n    edx = 0x403200;\n    eax = 3;\n    goto label_1;\n    edx = 0x403120;\n    eax = 0;\n    goto label_1;\n    edx = 0x403050;\n    eax = 0;\n    goto label_1;\n    edx = 0x402f80;\n    eax = 0;\n    goto label_1;\nlabel_33:\n    r14d = imp.__libc_start_main;\n    r8d = 4;\n    goto label_8;\nlabel_32:\n    r14d = imp.__libc_start_main;\n    rbx = rsi;\n    r8d = 4;\n    goto label_8;\nlabel_17:\n    r14d = imp.__libc_start_main;\n    rbx = rsi;\n    goto label_6;\nlabel_10:\n    eax = 1;\n    return rax;\nlabel_27:\n    assert_fail (\"s != next\", \"src/od.c\", 0x3e3, \"decode_format_string\");\nlabel_12:\n    return assert_fail (\"tspec != NULL\", \"src/od.c\", 0x285, \"decode_one_format\");\n}\n"
        },
        {
            "funcName": "fcn_004048a0",
            "funcStartAddr": "0x4048a0",
            "funcEndAddr": "0x404952",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x4048a0 */\n#include <stdint.h>\n \nuint64_t fcn_004048a0 (uint32_t arg1, uint32_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rdi == 0) {\n        goto label_0;\n    }\n    r12 = rdi;\n    if (*(0x006123e0) < rdi) {\n        goto label_0;\n    }\n    rcx = imp.__libc_start_main;\n    rbx = rdx;\n    *(rdx) = 0;\n    if (rcx == 0) {\n        goto label_1;\n    }\n    r13 = rsi;\n    edi = 0;\n    while (r14 != rax) {\n        rax = errno_location ();\n        eax = fcn_004038f0 (*(rax));\n        r14d = eax;\n        eax = fcn_00403a50 ();\n        rcx = imp.__libc_start_main;\n        r14d &= eax;\n        ebp &= r14d;\n        if (rcx == 0) {\n            goto label_2;\n        }\n        rdi = *(rbx);\n        r14 = r12;\n        esi = 1;\n        r14 -= rdi;\n        rdi += r13;\n        rdx = r14;\n        rax = fread_unlocked ();\n        *(rbx) += rax;\n    }\n    do {\nlabel_2:\n        eax = ebp;\n        return rax;\nlabel_1:\n    } while (1);\nlabel_0:\n    return assert_fail (\"0 < n && n <= bytes_per_block\", \"src/od.c\", 0x507, \"read_block\");\n}\n"
        },
        {
            "funcName": "fcn_00404960",
            "funcStartAddr": "0x404960",
            "funcEndAddr": "0x404dfd",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x404960 */\n#include <stdint.h>\n \nuint64_t fcn_00404960 (int64_t arg1) {\n    char * var_8h;\n    int64_t var_10h;\n    char * var_18h;\n    char * var_20h;\n    char * var_28h;\n    char * var_30h;\n    char * var_38h;\n    char * var_40h;\n    char * var_48h;\n    char * var_50h;\n    char * var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    rdi = arg1;\n    edx = 5;\n    ebx = edi;\n    rbp = imp.__libc_start_main;\n    if (edi != 0) {\n        rax = dcgettext (0, \"Try '%s --help' for more information.\\n\");\n        rdi = stderr;\n        rcx = rbp;\n        esi = 1;\n        rdx = rax;\n        eax = 0;\n        fprintf_chk ();\nlabel_0:\n        exit (ebx);\n    }\n    rax = dcgettext (0, \"Usage: %s [OPTION]... [FILE]...\\n  or:  %s [-abcdfilosx]... [FILE] [[+]OFFSET[.][b]]\\n  or:  %s --traditional [OPTION]... [FILE] [[+]OFFSET[.][b] [+][LABEL][.][b]]\\n\");\n    r8 = rbp;\n    rcx = rbp;\n    rdx = rbp;\n    rsi = rax;\n    edi = 1;\n    eax = 0;\n    printf_chk ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nWrite an unambiguous representation, octal bytes by default,\\nof FILE to standard output.  With more than one FILE argument,\\nconcatenate them in the listed order to form the input.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nWith no FILE, or when FILE is -, read standard input.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nIf first and second call formats both apply, the second format is assumed\\nif the last operand begins with + or (if there are 2 operands) a digit.\\nAn OFFSET operand means -j OFFSET.  LABEL is the pseudo-address\\nat first byte printed, incremented when dump is progressing.\\nFor OFFSET and LABEL, a 0x or 0X prefix indicates hexadecimal;\\nsuffixes may be . for octal and b for multiply by 512.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nMandatory arguments to long options are mandatory for short options too.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -A, --address-radix=RADIX   output format for file offsets; RADIX is one\\n                                of [doxn], for Decimal, Octal, Hex or None\\n      --endian={big|little}   swap input bytes according the specified order\\n  -j, --skip-bytes=BYTES      skip BYTES input bytes first\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -N, --read-bytes=BYTES      limit dump to BYTES input bytes\\n  -S BYTES, --strings[=BYTES]  output strings of at least BYTES graphic chars;\\n                                3 is implied when BYTES is not specified\\n  -t, --format=TYPE           select output format or formats\\n  -v, --output-duplicates     do not use * to mark line suppression\\n  -w[BYTES], --width[=BYTES]  output BYTES bytes per output line;\\n                                32 is implied when BYTES is not specified\\n      --traditional           accept arguments in third form above\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --help     display this help and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --version  output version information and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\n\\nTraditional format specifications may be intermixed; they accumulate:\\n  -a   same as -t a,  select named characters, ignoring high-order bit\\n  -b   same as -t o1, select octal bytes\\n  -c   same as -t c,  select printable characters or backslash escapes\\n  -d   same as -t u2, select unsigned decimal 2-byte units\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -f   same as -t fF, select floats\\n  -i   same as -t dI, select decimal ints\\n  -l   same as -t dL, select decimal longs\\n  -o   same as -t o2, select octal 2-byte units\\n  -s   same as -t d2, select decimal 2-byte units\\n  -x   same as -t x2, select hexadecimal 2-byte units\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\n\\nTYPE is made up of one or more of these specifications:\\n  a          named character, ignoring high-order bit\\n  c          printable character or backslash escape\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  d[SIZE]    signed decimal, SIZE bytes per integer\\n  f[SIZE]    floating point, SIZE bytes per float\\n  o[SIZE]    octal, SIZE bytes per integer\\n  u[SIZE]    unsigned decimal, SIZE bytes per integer\\n  x[SIZE]    hexadecimal, SIZE bytes per integer\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nSIZE is a number.  For TYPE in [doux], SIZE may also be C for\\nsizeof(char), S for sizeof(short), I for sizeof(int) or L for\\nsizeof(long).  If TYPE is f, SIZE may also be F for sizeof(float), D\\nfor sizeof(double) or L for sizeof(long double).\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nAdding a z suffix to any type displays printable characters at the end of\\neach output line.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\n\\nBYTES is hex with 0x or 0X prefix, and may have a multiplier suffix:\\n  b    512\\n  KB   1000\\n  K    1024\\n  MB   1000*1000\\n  M    1024*1024\\nand so on for G, T, P, E, Z, Y.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    *(rsp) = 0x40c3a4;\n    rax = rsp;\n    *((rsp + 8)) = \"test invocation\";\n    *((rsp + 0x10)) = 0x40c41e;\n    *((rsp + 0x18)) = \"Multi-call invocation\";\n    *((rsp + 0x20)) = \"sha224sum\";\n    *((rsp + 0x28)) = \"sha2 utilities\";\n    *((rsp + 0x30)) = \"sha256sum\";\n    *((rsp + 0x38)) = \"sha2 utilities\";\n    *((rsp + 0x40)) = \"sha384sum\";\n    *((rsp + 0x48)) = \"sha2 utilities\";\n    *((rsp + 0x50)) = \"sha512sum\";\n    *((rsp + 0x58)) = \"sha2 utilities\";\n    *((rsp + 0x60)) = 0;\n    *((rsp + 0x68)) = 0;\n    do {\n        rax += 0x10;\n        rdi = *(rax);\n        if (rdi == 0) {\n            goto label_2;\n        }\n        esi = 0x40c3a1;\n        ecx = 3;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        dl = (rdi > 0) ? 1 : 0;\n    } while (dl != 0);\nlabel_2:\n    rbp = *((rax + 8));\n    edx = 5;\n    esi = \"\\n%s online help: <%s>\\n\";\n    edi = 0;\n    if (rbp == 0) {\n        goto label_3;\n    }\n    rax = dcgettext (rdi, rsi);\n    edi = 1;\n    ecx = \"https://www.gnu.org/software/coreutils/\";\n    edx = \"GNU coreutils\";\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rax = setlocale (5, 0);\n    if (rax != 0) {\n        eax = strncmp (rax, 0x40c428, 3);\n        if (eax != 0) {\n            goto label_4;\n        }\n    }\nlabel_1:\n    edx = 5;\n    r12d = 0x40c3c0;\n    rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n    ecx = 0x40c3a1;\n    edx = \"https://www.gnu.org/software/coreutils/\";\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    ecx = 0x40fbbc;\n    r12 = rcx;\n    while (1) {\n        edx = 5;\n        rax = dcgettext (0, \"or available locally via: info '(coreutils) %s%s'\\n\");\n        rcx = r12;\n        rdx = rbp;\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        goto label_0;\nlabel_3:\n        rax = dcgettext (rdi, rsi);\n        edi = 1;\n        ecx = \"https://www.gnu.org/software/coreutils/\";\n        edx = \"GNU coreutils\";\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        rax = setlocale (5, 0);\n        if (rax != 0) {\n            eax = strncmp (rax, 0x40c428, 3);\n            if (eax != 0) {\n                goto label_5;\n            }\n        }\n        edx = 5;\n        rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n        ecx = 0x40c3a1;\n        edx = \"https://www.gnu.org/software/coreutils/\";\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        r12d = 0x40c3c0;\n        printf_chk ();\n    }\nlabel_5:\nlabel_4:\n    edx = 5;\n    rax = dcgettext (0, \"Report %s translation bugs to <https://translationproject.org/team/>\\n\");\n    edx = 0x40c3a1;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00404e10",
            "funcStartAddr": "0x404e10",
            "funcEndAddr": "0x404f26",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x404e10 */\n#include <stdint.h>\n \nuint64_t fcn_00404e10 (char * arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    char * s2;\n    uint32_t var_17h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r15 = rsi;\n    r13 = rcx;\n    *((rsp + 8)) = rdi;\n    *((rsp + 0x18)) = rdx;\n    rax = strlen (rdi);\n    r14 = *(r15);\n    *(rsp) = 0xffffffffffffffff;\n    if (r14 == 0) {\n        goto label_3;\n    }\n    r12 = rax;\n    *((rsp + 0x17)) = 0;\n    ebx = 0;\n    goto label_1;\nlabel_0:\n    rax = *((rsp + 0x18));\n    if (rax == 0) {\n        goto label_4;\n    }\n    rdi *= r13;\n    rdi += rax;\n    eax = memcmp (*(rsp), rbp, r13);\n    ecx = 1;\n    eax = *((rsp + 0x17));\n    if (eax != 0) {\n        eax = ecx;\n    }\n    *((rsp + 0x17)) = al;\n    do {\nlabel_2:\n        rbx++;\n        rbp += r13;\n        r14 = *((r15 + rbx*8));\n        if (r14 == 0) {\n            goto label_5;\n        }\nlabel_1:\n        eax = strncmp (r14, *((rsp + 8)), r12);\n    } while (eax != 0);\n    rax = strlen (r14);\n    if (rax == r12) {\n        goto label_6;\n    }\n    if (*(rsp) != -1) {\n        goto label_0;\n    }\n    *(rsp) = rbx;\n    rbx++;\n    rbp += r13;\n    r14 = *((r15 + rbx*8));\n    if (r14 != 0) {\n        goto label_1;\n    }\nlabel_5:\n    rax = 0xfffffffffffffffe;\n    if (*((rsp + 0x17)) == 0) {\n        rax = *(rsp);\n    }\n    *(rsp) = rax;\n    do {\nlabel_3:\n        rax = *(rsp);\n        return rax;\nlabel_4:\n        *((rsp + 0x17)) = 1;\n        goto label_2;\nlabel_6:\n        *(rsp) = rbx;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00404f30",
            "funcStartAddr": "0x404f30",
            "funcEndAddr": "0x404fa1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x404f30 */\n#include <stdint.h>\n \nuint64_t fcn_00404f30 (int64_t arg1, int64_t arg2, uint32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    edx = 5;\n    r12 = rsi;\n    if (rdx == -1) {\n        goto label_0;\n    }\n    rax = dcgettext (0, \"ambiguous argument %s for %s\");\n    rbx = rax;\n    do {\n        rax = fcn_004071f0 (1, rbp);\n        rax = fcn_00406ee0 (0, 8, r12);\n        r8 = rbp;\n        rdx = rbx;\n        esi = 0;\n        rcx = rax;\n        edi = 0;\n        eax = 0;\n        void (*0x401ae0)() ();\nlabel_0:\n        rax = dcgettext (0, \"invalid argument %s for %s\");\n        rbx = rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00404fb0",
            "funcStartAddr": "0x404fb0",
            "funcEndAddr": "0x4050c8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x404fb0 */\n#include <stdint.h>\n \nuint64_t fcn_00404fb0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r15 = rdi;\n    r14d = 0;\n    r13 = rdx;\n    edx = 5;\n    rbx = stderr;\n    rax = dcgettext (0, \"Valid arguments are:\");\n    rdi = rax;\n    rsi = rbx;\n    ebx = 0;\n    fputs_unlocked ();\n    r12 = *(r15);\n    if (r12 != 0) {\n        goto label_1;\n    }\n    goto label_2;\n    do {\nlabel_0:\n        rbx++;\n        r14 = rbp;\n        rbp += r13;\n        rax = fcn_00407210 (r12);\n        edx = \"\\n  - %s\";\n        esi = 1;\n        rdi = stderr;\n        rcx = rax;\n        eax = 0;\n        fprintf_chk ();\n        r12 = *((r15 + rbx*8));\n        if (r12 == 0) {\n            goto label_2;\n        }\nlabel_1:\n    } while (rbx == 0);\n    eax = memcmp (r14, rbp, r13);\n    if (eax != 0) {\n        goto label_0;\n    }\n    rbx++;\n    rbp += r13;\n    rax = fcn_00407210 (r12);\n    edx = \", %s\";\n    esi = 1;\n    rdi = stderr;\n    rcx = rax;\n    eax = 0;\n    fprintf_chk ();\n    r12 = *((r15 + rbx*8));\n    if (r12 != 0) {\n        goto label_1;\n    }\nlabel_2:\n    rdi = stderr;\n    rax = *((rdi + 0x28));\n    if (rax < *((rdi + 0x30))) {\n        rdx = rax + 1;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = 0xa;\n        return rax;\n    }\n    esi = 0xa;\n    return overflow ();\n}\n"
        },
        {
            "funcName": "fcn_004050d0",
            "funcStartAddr": "0x4050d0",
            "funcEndAddr": "0x405140",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x4050d0 */\n#include <stdint.h>\n \nuint64_t fcn_004050d0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r15 = r8;\n    r14 = rdi;\n    r13 = r9;\n    r12 = rsi;\n    rbx = rdx;\n    rax = fcn_00404e10 (r12, rbx, rbp, r8);\n    while (1) {\n        return rax;\n        fcn_00404f30 (r14, r12, rax);\n        fcn_00404fb0 (rbx, rbp, r15);\n        void (*r13)() ();\n        rax = 0xffffffffffffffff;\n    }\n}\n"
        },
        {
            "funcName": "fcn_00405250",
            "funcStartAddr": "0x405250",
            "funcEndAddr": "0x405388",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x405250 */\n#include <stdint.h>\n \nvoid fcn_00405250 (int64_t arg1, int64_t arg2, uint32_t arg3, int64_t arg4, int64_t arg7) {\n    int64_t var_8h;\n    int64_t var_15h;\n    int64_t var_16h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    xmm0 = arg7;\n    eax = edx;\n    __asm (\"movapd xmm3, xmm0\");\n    xmm1 = 0;\n    r14d = ecx;\n    ecx = 0x2d25;\n    eax &= 1;\n    r13 = rdi;\n    __asm (\"movapd xmm4, xmm3\");\n    r15 = 0xffffffffffffffff;\n    __asm (\"cmpltsd xmm4, xmm1\");\n    r12 = rsi;\n    ebx = 1;\n    __asm (\"movapd xmm1, xmm4\");\n    __asm (\"andnpd xmm1, xmm3\");\n    *((rsp + 0x15)) = cx;\n    ecx = edx;\n    rdi = rsp + rax + 0x16;\n    eax = edx;\n    ecx >>= 1;\n    eax >>= 2;\n    *((rsp + 8)) = xmm0;\n    __asm (\"xorpd xmm0, xmmword [0x0040e4e0]\");\n    ecx &= 1;\n    eax &= 1;\n    *(rdi) = 0x2b;\n    rsi = rdi + rcx;\n    __asm (\"andpd xmm0, xmm4\");\n    rcx = rsi + rax;\n    eax = edx;\n    edx &= 0x10;\n    *(rsi) = 0x20;\n    eax >>= 3;\n    __asm (\"orpd xmm0, xmm1\");\n    esi = 0x2e2a;\n    *(rcx) = 0x30;\n    eax &= 1;\n    xmm1 = *(0x0040e4f0);\n    rax += rcx;\n    edx -= edx;\n    *(rax) = si;\n    edx &= 0x20;\n    *((rax + 2)) = 0x2a;\n    edx += 0x47;\n    __asm (\"comisd xmm1, xmm0\");\n    *((rax + 4)) = 0;\n    *((rax + 3)) = dl;\n    eax = 0xf;\n    if (edx <= 0) {\n        ebx = eax;\n    }\n    while (rax >= r12) {\nlabel_0:\n        ebx++;\n        edx = 1;\n        r9d = r14d;\n        rcx = r15;\n        xmm0 = *((rsp + 0x18));\n        rsi = r12;\n        rdi = r13;\n        eax = 1;\n        r8 = rsp + 0x25;\n        eax = snprintf_chk ();\n        if (ebp < 0) {\n            goto label_1;\n        }\n        if (ebx > 0x10) {\n            goto label_1;\n        }\n        rax = (int64_t) ebp;\n    }\n    strtod (r13, 0);\n    __asm (\"ucomisd xmm0, qword [rsp + 8]\");\n    if (rax == r12) {\n        goto label_0;\n    }\n    if (rax != r12) {\n        goto label_0;\n    }\nlabel_1:\n    eax = ebp;\n}\n"
        },
        {
            "funcName": "fcn_00405390",
            "funcStartAddr": "0x405390",
            "funcEndAddr": "0x4054c7",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x405390 */\n#include <stdint.h>\n \nvoid fcn_00405390 (int64_t arg1, int64_t arg2, uint32_t arg3, int64_t arg4, int64_t arg7) {\n    int64_t var_10h;\n    int64_t var_ch;\n    int64_t var_15h;\n    int64_t var_16h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    xmm0 = arg7;\n    eax = edx;\n    r15d = ecx;\n    ecx = 0x2d25;\n    eax &= 1;\n    xmm2 = xmm0;\n    xmm1 = 0;\n    r13 = rdi;\n    xmm3 = xmm2;\n    xmm5 = 0;\n    __asm (\"cmpltss xmm3, xmm1\");\n    r12 = rsi;\n    __asm (\"cvtss2sd xmm5, xmm0\");\n    r14 = 0xffffffffffffffff;\n    xmm1 = xmm3;\n    __asm (\"andnps xmm1, xmm2\");\n    *((rsp + 0x15)) = cx;\n    ecx = edx;\n    rdi = rsp + rax + 0x16;\n    eax = edx;\n    ecx >>= 1;\n    eax >>= 2;\n    *((rsp + 0xc)) = xmm0;\n    __asm (\"xorps xmm0, xmmword [0x0040e500]\");\n    ecx &= 1;\n    eax &= 1;\n    *(rdi) = 0x2b;\n    rsi = rdi + rcx;\n    __asm (\"andps xmm0, xmm3\");\n    *(rsp) = xmm5;\n    rcx = rsi + rax;\n    eax = edx;\n    edx &= 0x10;\n    *(rsi) = 0x20;\n    eax >>= 3;\n    __asm (\"orps xmm0, xmm1\");\n    esi = 0x2e2a;\n    *(rcx) = 0x30;\n    eax &= 1;\n    xmm1 = *(0x0040e510);\n    rax += rcx;\n    edx -= edx;\n    ebx = 0;\n    *(rax) = si;\n    edx &= 0x20;\n    *((rax + 2)) = 0x2a;\n    edx += 0x47;\n    __asm (\"ucomiss xmm1, xmm0\");\n    *((rax + 4)) = 0;\n    *((rax + 3)) = dl;\n    bl = (edx <= 0) ? 1 : 0;\n    ebx = rbx * 5;\n    while (rax >= r12) {\nlabel_0:\n        ebx++;\n        edx = 1;\n        r9d = r15d;\n        rcx = r14;\n        xmm0 = *((rsp + 0x10));\n        rsi = r12;\n        rdi = r13;\n        eax = 1;\n        r8 = rsp + 0x25;\n        eax = snprintf_chk ();\n        if (ebp < 0) {\n            goto label_1;\n        }\n        if (ebx > 8) {\n            goto label_1;\n        }\n        rax = (int64_t) ebp;\n    }\n    strtof (r13, 0);\n    __asm (\"ucomiss xmm0, dword [rsp + 0xc]\");\n    if (rax == r12) {\n        goto label_0;\n    }\n    if (rax != r12) {\n        goto label_0;\n    }\nlabel_1:\n    eax = ebp;\n}\n"
        },
        {
            "funcName": "fcn_004054d0",
            "funcStartAddr": "0x4054d0",
            "funcEndAddr": "0x4055e4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x4054d0 */\n#include <stdint.h>\n \nint64_t fcn_004054d0 (int64_t arg_58h_2, int64_t arg_58h, int64_t arg1, int64_t arg2, uint32_t arg3, int64_t arg4) {\n    int64_t var_5h;\n    int64_t var_6h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    eax = 0x2d25;\n    r15 = 0xffffffffffffffff;\n    r14d = ecx;\n    ecx = edx;\n    r13 = rdi;\n    r12 = rsi;\n    ebx = 1;\n    *(fp_stack--) = fp_stack[?];\n    *((rsp + 5)) = ax;\n    eax = edx;\n    fp_stack[0] = -fp_stack[0];\n    *(fp_stack--) = fp_stack[?];\n    *(fp_stack--) = 0.0;\n    __asm (\"fcompi st(1)\");\n    __asm (\"fcmovnbe st(0), st(1)\");\n    fp_stack[1] = fp_stack[0];\n    fp_stack--;\n    eax &= 1;\n    ecx >>= 1;\n    rdi = rsp + rax + 6;\n    eax = edx;\n    ecx &= 1;\n    rsi = rdi + rcx;\n    *(fp_stack--) = fp_stack[?];\n    eax >>= 2;\n    *(rdi) = 0x2b;\n    eax &= 1;\n    *(rsi) = 0x20;\n    rcx = rsi + rax;\n    eax = edx;\n    edx &= 0x10;\n    eax >>= 3;\n    *(rcx) = 0x30;\n    eax &= 1;\n    rax += rcx;\n    edx -= edx;\n    *(rax) = 0x4c2a2e2a;\n    edx &= 0x20;\n    *((rax + 5)) = 0;\n    edx += 0x47;\n    __asm (\"fcompi st(1)\");\n    fp_stack++;\n    *((rax + 4)) = dl;\n    eax = 0x12;\n    if (edx <= 0) {\n        ebx = eax;\n    }\n    while (rax >= r12) {\nlabel_0:\n        ebx++;\n        r9d = r14d;\n        rcx = r15;\n        edx = 1;\n        rsi = r12;\n        rdi = r13;\n        eax = 0;\n        r8 = rsp + 0x25;\n        eax = snprintf_chk ();\n        if (eax < 0) {\n            goto label_1;\n        }\n        if (ebx > 0x14) {\n            goto label_1;\n        }\n        rax = (int64_t) eax;\n    }\n    strtold (r13, 0);\n    *(fp_stack--) = fp_stack[?];\n    fp_tmp_0 = fp_stack[1];\n    fp_stack[1] = fp_stack[0];\n    fp_stack[0] = fp_tmp_0;\n    __asm (\"fucompi st(1)\");\n    fp_stack++;\n    if (rax == r12) {\n        goto label_0;\n    }\n    if (rax != r12) {\n        goto label_0;\n    }\nlabel_1:\n    eax = ebp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004055f0",
            "funcStartAddr": "0x4055f0",
            "funcEndAddr": "0x405689",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x4055f0 */\n#include <stdint.h>\n \nuint64_t fcn_004055f0 (char ** arg1) {\n    rdi = arg1;\n    if (rdi != 0) {\n        rbx = rdi;\n        rax = strrchr (rdi, 0x2f);\n        if (rax != 0) {\n            r8 = rax + 1;\n            rdx = r8;\n            rdx -= rbx;\n            if (rdx <= 6) {\n                goto label_0;\n            }\n            rsi = rax - 6;\n            edi = \"/.libs/\";\n            ecx = 7;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (rdx > 6) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            edi = 0x40e570;\n            ecx = 3;\n            rsi = r8;\n            rbx = r8;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (dl > 0) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            rbx = rax + 4;\n            *(obj.__progname) = rbx;\n        }\nlabel_0:\n        *(0x00612458) = rbx;\n        *(obj.program_invocation_name) = rbx;\n        return rax;\n    }\n    fwrite (\"A NULL argv[0] was passed through an exec system call.\\n\", 1, 0x37, *(obj.stderr));\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_00405690",
            "funcStartAddr": "0x405690",
            "funcEndAddr": "0x405782",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x405690 */\n#include <stdint.h>\n \nuint64_t fcn_00405690 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edx = 5;\n    r12d = esi;\n    rsi = rdi;\n    rax = dcgettext (0, rsi);\n    rbx = rax;\n    while (1) {\nlabel_0:\n        rax = rbx;\n        return rax;\n        rax = fcn_00409230 ();\n        edx = *(rax);\n        edx &= 0xffffffdf;\n        if (dl != 0x55) {\n            goto label_1;\n        }\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x54) {\n            goto label_2;\n        }\n        edx = *((rax + 2));\n        edx &= 0xffffffdf;\n        if (dl != 0x46) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x2d) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0) {\n            goto label_2;\n        }\n        eax = 0x40e576;\n        ebx = 0x40e581;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n    }\nlabel_1:\n    if (dl == 0x47) {\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x42) {\n            goto label_2;\n        }\n        if (*((rax + 2)) != 0x31) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0x33) {\n            goto label_2;\n        }\n        if (*((rax + 6)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 7)) != 0) {\n            goto label_2;\n        }\n        eax = 0x40e57a;\n        ebx = 0x40e57d;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n        goto label_0;\n    }\nlabel_2:\n    eax = 0x40f6b9;\n    ebx = 0x40e574;\n    if (r12d != 9) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405790",
            "funcStartAddr": "0x405790",
            "funcEndAddr": "0x40a591",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x405790 */\n#include <stdint.h>\n \nuint64_t fcn_00405790 (int64_t arg_e8h_3, uint32_t arg_e8h_2, int64_t arg_e8h, char * arg_e0h, int64_t arg1, char * arg2, char * arg3, size_t * arg4, int64_t arg5, int64_t arg6) {\n    size_t * var_8h;\n    size_t * var_10h;\n    uint32_t var_1fh;\n    char * s;\n    size_t n;\n    size_t * var_30h;\n    size_t * var_38h;\n    size_t var_40h;\n    size_t var_48h;\n    void * s2;\n    char * var_58h;\n    uint32_t var_60h;\n    int64_t var_68h;\n    uint32_t var_6ch;\n    char * var_6dh;\n    int64_t var_6eh;\n    int64_t var_6fh;\n    int64_t var_70h;\n    int64_t var_78h;\n    wint_t wc;\n    mbstate_t * ps;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    do {\n        /* [13] -r-x section size 42744 named .text */\n        abort ();\nlabel_5:\n        r15 = rdi;\n        r14 = rsi;\n        r13d = r8d;\n        *((rsp + 0x20)) = rdx;\n        *((rsp + 8)) = rcx;\n        *((rsp + 0x68)) = r9d;\n        rax = ctype_get_mb_cur_max ();\n        ebp &= 2;\n        *((rsp + 0x60)) = rax;\n        rsp + 0x6c = (ebp != 0) ? 1 : 0;\n    } while (r13d > 0xa);\n    eax = r13d;\n    r11 = *((rsp + 8));\n    /* switch table (11 cases) at 0x40e5e0 */\nlabel_30:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    r13d = 2;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x40f6b9;\nlabel_21:\n    r9 = r11;\n    r12d = 0;\n    r11d = r13d;\n    do {\nlabel_28:\n        r13b = (r9 != r12) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            r13b = (*((rax + r12)) != 0) ? 1 : 0;\n        }\n        if (r13b == 0) {\n            goto label_47;\n        }\n        rdi = *((rsp + 0x20));\n        al = (r11d != 2) ? 1 : 0;\n        al &= *((rsp + 8));\n        r8 = rdi + r12;\n        *((rsp + 0x10)) = al;\n        if (al == 0) {\n            goto label_48;\n        }\n        rax = *((rsp + 0x28));\n        if (rax == 0) {\n            goto label_49;\n        }\n        rbp = r12 + rax;\n        if (r9 == -1) {\n            if (rax <= 1) {\n                goto label_50;\n            }\n            *((rsp + 0x40)) = r11d;\n            *((rsp + 0x38)) = r10b;\n            *((rsp + 0x30)) = r8;\n            rax = strlen (rdi);\n            r11d = *((rsp + 0x40));\n            r10d = *((rsp + 0x38));\n            r8 = *((rsp + 0x30));\n            r9 = rax;\n        }\nlabel_50:\n        if (rbp > r9) {\n            goto label_49;\n        }\n        rdi = r8;\n        *((rsp + 0x48)) = r11d;\n        *((rsp + 0x40)) = r9;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        eax = memcmp (rdi, *((rsp + 0x50)), *((rsp + 0x28)));\n        r8 = *((rsp + 0x30));\n        r10d = *((rsp + 0x38));\n        r9 = *((rsp + 0x40));\n        r11d = *((rsp + 0x48));\n        if (eax != 0) {\n            goto label_49;\n        }\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_51;\n        }\n        ebp = *(r8);\n        if (bpl > 0x7e) {\n            goto label_52;\n        }\n        eax = (int32_t) bpl;\n        /* switch table (127 cases) at 0x40e638 */\n        *((rsp + 0x10)) = 0;\n        al = (r9 != 1) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            al = (*((rax + 1)) != 0) ? 1 : 0;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        if (al != 0) {\n            goto label_7;\n        }\nlabel_17:\n        if (r12 != 0) {\n            goto label_7;\n        }\nlabel_18:\n        if (*((rsp + 0x6c)) != 0) {\n            if (dl != 0) {\n                goto label_53;\n            }\n        }\nlabel_2:\n        eax = *((rsp + 8));\n        eax ^= 1;\n        eax |= edx;\n        eax ^= 1;\n        al |= *((rsp + 0x6c));\n        if (al == 0) {\n            goto label_11;\n        }\nlabel_24:\n        eax = 0;\nlabel_10:\n        if (*((rsp + 0xd0)) == 0) {\n            goto label_11;\n        }\n        edx = ebp;\n        rcx = *((rsp + 0xd0));\n        dl >>= 5;\n        edx = (int32_t) dl;\n        edx = *((rcx + rdx*4));\n        ecx = ebp;\n        edx >>= cl;\n        edx &= 1;\n        if (edx == 0) {\n            goto label_11;\n        }\n        dl = (r11d == 2) ? 1 : 0;\nlabel_0:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_54;\n        }\nlabel_4:\n        eax = r10d;\n        eax ^= 1;\n        al &= dl;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rdx = rbx + 1;\n            if (rdx < r14) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rdx = rbx + 2;\n            if (rdx < r14) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\nlabel_9:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n        r12++;\nlabel_1:\n        if (rbx < r14) {\n            *((r15 + rbx)) = bpl;\n        }\n        edi = *((rsp + 0x1f));\n        rbx++;\n        eax = 0;\n        if (r13b == 0) {\n            edi = eax;\n        }\n        *((rsp + 0x1f)) = dil;\n    } while (1);\nlabel_3:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    if (r14 == 0) {\n        goto label_56;\n    }\n    edx = 0;\n    if (*((rsp + 0x58)) != 0) {\n        goto label_56;\n    }\nlabel_27:\n    *((rsp + 0x6d)) = r13b;\n    rbx += 3;\n    eax = 0;\n    r10d = 0;\n    *((rsp + 0x58)) = r14;\n    r14 = rdx;\nlabel_11:\n    dl = (r11d == 2) ? 1 : 0;\n    if (*((rsp + 0x10)) != 0) {\n        goto label_0;\n    }\n    eax ^= 1;\n    r12++;\n    eax &= r10d;\nlabel_16:\n    if (al == 0) {\n        goto label_1;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x27;\n    }\n    rbx += 2;\n    r10d = 0;\n    goto label_1;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_57;\n    }\n    if (r11d == 5) {\n        goto label_58;\n    }\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_3;\n    }\n    *((rsp + 0x6d)) = r13b;\n    edx = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\nlabel_15:\n    edx = *((rsp + 8));\n    dl &= *((rsp + 0x6c));\n    ecx = 0x5c;\n    al = (*((rsp + 0x28)) != 0) ? 1 : 0;\n    dl &= al;\n    if (dl != 0) {\n        goto label_59;\n    }\nlabel_8:\n    if (*((rsp + 8)) != 0) {\n        goto label_60;\n    }\nlabel_7:\n    r13d = 0;\n    goto label_2;\nlabel_6:\n    edx = 0;\n    r13d = 0;\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_4;\n    }\nlabel_54:\n    r13d = r11d;\n    eax = edx;\n    r11 = r9;\nlabel_42:\nlabel_12:\n    eax = 4;\n    if (*((rsp + 8)) != 0) {\n        r13d = eax;\n    }\nlabel_43:\n    r9d &= 0xfffffffd;\n    rax = fcn_00405790 (r15, r14, *((rsp + 0x40)), r11, r13d, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\nlabel_44:\n    rax = rbx;\n    return rax;\n    goto label_6;\n    *((rsp + 0x10)) = 0;\n    edx = 0;\n    goto label_7;\n    *((rsp + 0x10)) = 0;\n    ecx = 0x72;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    do {\nlabel_20:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_61;\n        }\nlabel_34:\n        r13d = 0;\n        goto label_9;\n    } while (1);\nlabel_14:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_62;\n    }\n    *((rsp + 0x10)) = 0;\n    eax = r10d;\n    dl = (r11d == 2) ? 1 : 0;\n    eax ^= 1;\n    al &= dl;\n    if (al == 0) {\n        goto label_63;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rcx = rbx + 1;\n    if (r14 > rcx) {\n        *((r15 + rbx + 1)) = 0x24;\n    }\n    rcx = rbx + 2;\n    if (r14 > rcx) {\n        *((r15 + rbx + 2)) = 0x27;\n    }\n    rcx = rbx + 3;\n    if (r14 <= rcx) {\n        goto label_64;\n    }\nlabel_26:\n    *((r15 + rcx)) = 0x5c;\n    r10d = eax;\nlabel_25:\n    rbx = rcx + 1;\n    if (r11d == 2) {\n        goto label_65;\n    }\n    rax = r12 + 1;\n    if (rax < r9) {\n        rax = *((rsp + 0x20));\n        eax = *((rax + r12 + 1));\n        *((rsp + 0x30)) = al;\n        eax -= 0x30;\n        if (al <= 9) {\n            goto label_66;\n        }\n    }\nlabel_35:\n    eax = *((rsp + 8));\n    eax ^= 1;\n    al |= dl;\n    eax = r13d;\n    r13d = 0;\n    if (al == 0) {\n        goto label_10;\n    }\n    goto label_11;\nlabel_19:\n    *((rsp + 0x10)) = 0;\n    do {\nlabel_52:\n        if (*((rsp + 0x60)) != 1) {\n            goto label_67;\n        }\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r9;\n        *((rsp + 0x30)) = r10b;\n        rax = ctype_b_loc ();\n        edx = (int32_t) bpl;\n        r10d = *((rsp + 0x30));\n        r9 = *((rsp + 0x38));\n        rax = *(rax);\n        r11d = *((rsp + 0x40));\n        edi = 1;\n        eax = *((rax + rdx*2));\n        ax &= 0x4000;\n        r13b = (ax != 0) ? 1 : 0;\n        dl = (ax == 0) ? 1 : 0;\n        dl &= *((rsp + 8));\nlabel_37:\n        if (dl != 0) {\n            goto label_68;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        goto label_2;\nlabel_48:\n        ebp = *(r8);\n    } while (bpl > 0x7e);\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x40ea30 */\n    ecx = 0x6e;\nlabel_13:\n    eax = *((rsp + 0x6c));\n    dl = (r11d == 2) ? 1 : 0;\n    al &= dl;\n    *((rsp + 0x10)) = al;\n    if (al == 0) {\n        goto label_8;\n    }\nlabel_53:\n    r11 = r9;\n    r13d = 2;\n    goto label_12;\n    ecx = 0x74;\n    goto label_13;\n    ecx = 0x62;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x61;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    if (*((rsp + 8)) != 0) {\n        goto label_14;\n    }\n    if ((*((rsp + 0x68)) & 1) != 0) {\n        goto label_69;\n    }\n    *((rsp + 0x10)) = 0;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    ebp = 0;\n    goto label_2;\n    if (r11d != 2) {\n        goto label_15;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_17;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_18;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_18;\n    ecx = 0x72;\n    goto label_13;\n    ecx = 0x66;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x76;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\nlabel_49:\n    ebp = *(r8);\n    if (bpl > 0x7e) {\n        goto label_19;\n    }\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x40ee28 */\n    eax = 0;\n    do {\nlabel_31:\n        r13d = *((rsp + 0x10));\n        *((rsp + 0x10)) = al;\n        eax = 0;\n        goto label_10;\n        eax = 0;\nlabel_32:\n        if (r12 != 0) {\n            goto label_70;\n        }\n        r13d = *((rsp + 0x10));\n        edx = 0;\n        *((rsp + 0x10)) = al;\n        goto label_2;\n        eax = 0;\nlabel_33:\n    } while (1);\n    goto label_6;\n    goto label_20;\nlabel_47:\n    r13d = r11d;\n    r11 = r9;\n    dl = (r13d == 2) ? 1 : 0;\n    if (rbx == 0) {\n        if ((*((rsp + 0x6c)) & dl) != 0) {\n            goto label_71;\n        }\n    }\n    eax = *((rsp + 0x6c));\n    eax ^= 1;\n    dl &= al;\n    if (dl == 0) {\n        goto label_72;\n    }\n    if (*((rsp + 0x6d)) == 0) {\n        goto label_45;\n    }\n    if (*((rsp + 0x1f)) != 0) {\n        goto label_73;\n    }\n    al = (r14 == 0) ? 1 : 0;\n    dl = (*((rsp + 0x58)) != 0) ? 1 : 0;\n    al &= dl;\n    if (al == 0) {\n        goto label_74;\n    }\n    r14 = *((rsp + 0x58));\nlabel_46:\n    *(r15) = 0x27;\n    r13d = 2;\n    ebx = 1;\n    *((rsp + 0x50)) = 0x40f6b9;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x6c)) = 0;\n    *((rsp + 0x6d)) = al;\n    goto label_21;\nlabel_58:\n    if ((*((rsp + 0x68)) & 4) != 0) {\n        rax = r12 + 2;\n        if (rax >= r9) {\n            goto label_39;\n        }\n        rsi = *((rsp + 0x20));\n        if (*((rsi + r12 + 1)) == 0x3f) {\n            goto label_75;\n        }\n    }\nlabel_39:\n    edx = 0;\n    r13d = 0;\n    goto label_2;\nlabel_57:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r13d = 0;\n    eax = 0;\n    goto label_11;\nlabel_67:\n    *((rsp + 0x88)) = 0;\n    if (r9 == -1) {\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        rax = strlen (*((rsp + 0x20)));\n        r11d = *((rsp + 0x40));\n        r10d = *((rsp + 0x38));\n        r8 = *((rsp + 0x30));\n        r9 = rax;\n    }\n    eax = 0;\n    *((rsp + 0x70)) = rbx;\n    *((rsp + 0x78)) = r8;\n    rbx = rax;\n    *((rsp + 0x6e)) = r10b;\n    *((rsp + 0x6f)) = bpl;\n    *((rsp + 0x40)) = r15;\n    *((rsp + 0x48)) = r14;\n    *((rsp + 0x30)) = r9;\n    *((rsp + 0x38)) = r11d;\n    while (*((rsp + 0x38)) != 2) {\nlabel_22:\n        eax = iswprint (*((rsp + 0x84)));\n        rdi = rsp + 0x88;\n        eax = 0;\n        if (eax == 0) {\n            r13d = eax;\n        }\n        rbx += r14;\n        eax = mbsinit (rdi);\n        if (eax != 0) {\n            goto label_76;\n        }\n        rax = *((rsp + 0x20));\n        r15 = r12 + rbx;\n        rbp = rax + r15;\n        rdx -= r15;\n        rax = fcn_00409010 (rsp + 0x84, rbp, *((rsp + 0x30)), rsp + 0x88);\n        r14 = rax;\n        if (rax == 0) {\n            goto label_76;\n        }\n        if (rax == -1) {\n            goto label_77;\n        }\n        if (rax == 0xfffffffffffffffe) {\n            goto label_78;\n        }\n    }\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_22;\n    }\n    if (rax == 1) {\n        goto label_22;\n    }\n    rsi = *((rsp + 0x20));\n    rax = rsi + r15 + 1;\n    rsi += r14;\n    rsi += r15;\n    goto label_79;\nlabel_23:\n    rax++;\n    if (rsi == rax) {\n        goto label_22;\n    }\nlabel_79:\n    ecx = *(rax);\n    ecx -= 0x5b;\n    if (cl > 0x21) {\n        goto label_23;\n    }\n    edx = 1;\n    rdx <<= cl;\n    rcx = 0x20000002b;\n    if ((rdx & rcx) == 0) {\n        goto label_23;\n    }\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r13d = 2;\n    r11 = *((rsp + 0x30));\n    goto label_12;\nlabel_70:\n    *((rsp + 0x10)) = al;\n    r13d = 0;\n    goto label_24;\nlabel_63:\n    rcx = rbx;\n    if (r14 <= rbx) {\n        goto label_25;\n    }\n    eax = r10d;\n    goto label_26;\nlabel_56:\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x5c;\n    }\n    rax = rbx + 2;\n    if (r14 <= rax) {\n        goto label_80;\n    }\n    rdx = r14;\n    *((r15 + rbx + 2)) = 0x27;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_69:\n    r12++;\n    goto label_28;\nlabel_68:\n    edx = *((rsp + 8));\n    r13d = 0;\nlabel_36:\n    rcx = rdi;\n    *((rsp + 0x30)) = r13b;\n    esi = 0;\n    r13d = *((rsp + 0x6c));\n    rcx += r12;\n    edi = *((rsp + 0x10));\n    r8 = *((rsp + 0x20));\n    while (dl != 0) {\n        al = (r11d == 2) ? 1 : 0;\n        if (r13b != 0) {\n            goto label_81;\n        }\n        esi = r10d;\n        esi ^= 1;\n        al &= sil;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rsi = rbx + 1;\n            if (r14 > rsi) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rsi = rbx + 2;\n            if (r14 > rsi) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 6;\n            eax += 0x30;\n            *((r15 + rbx + 1)) = al;\n        }\n        rax = rbx + 2;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 3;\n            eax &= 7;\n            eax += 0x30;\n            *((r15 + rbx + 2)) = al;\n        }\n        ebp &= 7;\n        r12++;\n        rbx += 3;\n        ebp += 0x30;\n        if (r12 >= rcx) {\n            goto label_82;\n        }\n        esi = edx;\nlabel_29:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = bpl;\n        }\n        ebp = *((r8 + r12));\n        rbx++;\n    }\n    eax = esi;\n    eax ^= 1;\n    eax &= r10d;\n    if (dil != 0) {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n    }\n    r12++;\n    if (r12 < rcx) {\n        if (al == 0) {\n            goto label_83;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x27;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            *((r15 + rbx + 1)) = 0x27;\n        }\n        rbx += 2;\n        edi = 0;\n        r10d = 0;\n        goto label_29;\n    }\n    r13d = *((rsp + 0x30));\n    goto label_16;\nlabel_81:\n    r13d = r11d;\n    *((rsp + 8)) = al;\n    r11 = r9;\n    goto label_12;\nlabel_64:\n    rbx += 4;\n    r10d = eax;\n    r13d = 0;\n    goto label_11;\n    if (ebp != 0) {\n        goto label_30;\n    }\n    *((rsp + 8)) = 1;\n    do {\n        if (r14 != 0) {\n            goto label_84;\n        }\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 1;\n        r13d = 2;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x40f6b9;\n        goto label_21;\n        if (ebp != 0) {\n            goto label_85;\n        }\n        if (r14 == 0) {\n            goto label_86;\n        }\n        *(r15) = 0x22;\n        r10d = 0;\n        *((rsp + 0x1f)) = 1;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\nlabel_38:\n        *((rsp + 0x6c)) = 0;\n        ebx = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x40e574;\n        goto label_21;\n        if (r14 != 0) {\n            *((rsp + 8)) = r11;\n            rax = fcn_00405690 (0x40e585, r13d);\n            *((rsp + 0xd8)) = rax;\n            rax = fcn_00405690 (0x40f6b9, r13d);\n            r11 = *((rsp + 8));\n            *((rsp + 0xe0)) = rax;\n        }\n        ebx = 0;\n        if (ebp == 0) {\n            goto label_87;\n        }\nlabel_41:\n        *((rsp + 0x10)) = r11;\n        rax = strlen (*((rsp + 0xe0)));\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        r11 = *((rsp + 0x10));\n        *((rsp + 0x28)) = rax;\n        rax = *((rsp + 0xe0));\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x50)) = rax;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 8)) = 1;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 0;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 5;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x40e574;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 2;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x40f6b9;\n        goto label_21;\n        eax = *((rsp + 0x10));\n        goto label_31;\n        eax = *((rsp + 0x10));\n        goto label_32;\n        eax = *((rsp + 0x10));\n        goto label_33;\n        edx = 0;\n        r13d = 0;\n        goto label_4;\n        goto label_34;\nlabel_66:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x30;\n        }\n        rax = rcx + 2;\n        if (r14 > rax) {\n            *((r15 + rcx + 2)) = 0x30;\n        }\n        rbx = rcx + 3;\n        goto label_35;\n        if (ebp != 0) {\n            goto label_88;\n        }\n        *((rsp + 8)) = 0;\n    } while (1);\nlabel_82:\n    r13d = *((rsp + 0x30));\n    goto label_1;\nlabel_59:\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\nlabel_83:\n    edi = 0;\n    goto label_29;\nlabel_76:\n    rdi = rbx;\n    edx = r13d;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    edx ^= 1;\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    dl &= *((rsp + 8));\nlabel_40:\n    if (rdi > 1) {\n        goto label_36;\n    }\n    goto label_37;\nlabel_86:\n    *((rsp + 0x58)) = 0;\n    r10d = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x6d)) = 0;\n    goto label_38;\nlabel_65:\n    eax = r13d;\n    r13d = 0;\n    goto label_11;\nlabel_75:\n    ebp = *((rsi + rax));\n    if (bpl > 0x3e) {\n        goto label_39;\n    }\n    rsi = 0x7000a38200000000;\n    if (((rsi >> rbp) & 1) >= 0) {\n        goto label_39;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_51;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x3f;\n    }\n    rdx = rbx + 1;\n    if (r14 > rdx) {\n        *((r15 + rbx + 1)) = 0x22;\n    }\n    rdx = rbx + 2;\n    if (r14 > rdx) {\n        *((r15 + rbx + 2)) = 0x22;\n    }\n    rdx = rbx + 3;\n    if (r14 > rdx) {\n        *((r15 + rbx + 3)) = 0x3f;\n    }\n    rbx += 4;\n    edx = 0;\n    r13d = 0;\n    r12 = rax;\n    goto label_35;\nlabel_77:\n    rdi = rbx;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r13d = 0;\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    edx = *((rsp + 8));\n    goto label_40;\nlabel_78:\n    r9 = *((rsp + 0x30));\n    rsi = r15;\n    rcx = rbp;\n    rax = rbx;\n    rdi = rbx;\n    r8 = *((rsp + 0x78));\n    r10d = *((rsp + 0x6e));\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r11d = *((rsp + 0x38));\n    if (rsi >= r9) {\n        goto label_89;\n    }\n    if (*(rcx) != 0) {\n        goto label_90;\n    }\n    goto label_89;\n    do {\n        if (*((r8 + rax)) == 0) {\n            goto label_91;\n        }\nlabel_90:\n        rax++;\n        rdx = r12 + rax;\n    } while (rdx < r9);\nlabel_91:\n    rdi = rax;\nlabel_89:\n    edx = *((rsp + 8));\n    r13d = 0;\n    goto label_40;\nlabel_87:\n    rax = *((rsp + 0xd8));\n    eax = *(rax);\n    if (al == 0) {\n        goto label_41;\n    }\n    rdx = *((rsp + 0xd8));\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = al;\n        }\n        rbx++;\n        eax = *((rdx + rbx));\n    } while (al != 0);\n    goto label_41;\nlabel_61:\n    r13d = r11d;\n    eax = 0;\n    r11 = r9;\n    goto label_42;\nlabel_85:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 1;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x40e574;\n    goto label_21;\nlabel_51:\n    r13d = r11d;\n    r11 = r9;\n    goto label_43;\nlabel_72:\n    edx = eax;\nlabel_45:\n    rax = *((rsp + 0x50));\n    if (rax == 0) {\n        goto label_92;\n    }\n    if (dl == 0) {\n        goto label_92;\n    }\n    edx = *(rax);\n    if (dl == 0) {\n        goto label_92;\n    }\n    rax -= rbx;\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = dl;\n        }\n        rbx++;\n        edx = *((rax + rbx));\n    } while (dl != 0);\nlabel_92:\n    if (r14 <= rbx) {\n        goto label_44;\n    }\n    *((r15 + rbx)) = 0;\n    goto label_44;\nlabel_55:\n    r13d = r11d;\n    r11 = r9;\n    goto label_12;\nlabel_62:\n    r13d = r11d;\n    r11 = r9;\n    rsp + 8 = (r13d == 2) ? 1 : 0;\n    goto label_12;\nlabel_73:\n    rax = fcn_00405790 (r15, *((rsp + 0x78)), *((rsp + 0x40)), r11, 5, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\n    goto label_44;\nlabel_74:\n    edx = *((rsp + 0x6d));\n    goto label_45;\nlabel_71:\n    r13d = 2;\n    goto label_12;\nlabel_84:\n    r10d = 0;\n    eax = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x58)) = 0;\n    goto label_46;\nlabel_80:\n    rdx = r14;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_88:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x40f6b9;\n    goto label_21;\nlabel_60:\n    r13d = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_004069c0",
            "funcStartAddr": "0x4069c0",
            "funcEndAddr": "0x40b969",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x4069c0 */\n#include <stdint.h>\n \nuint64_t fcn_004069c0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_30h;\n    int64_t var_18h;\n    int64_t var_24h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    do {\n        abort ();\n        r15 = (int64_t) edi;\n        r14 = rdx;\n        *((rsp + 8)) = rsi;\n        rax = errno_location ();\n        rbx = *(0x006122b8);\n        r13 = rax;\n        eax = *(rax);\n        *((rsp + 0x18)) = eax;\n    } while (r15d < 0);\n    if (*(0x006122d0) > r15d) {\n        goto label_0;\n    }\n    if (r15d == 0x7fffffff) {\n        goto label_1;\n    }\n    r12d = r15 + 1;\n    rsi = (int64_t) r12d;\n    rsi <<= 4;\n    if (rbx == 0x6122c0) {\n        goto label_2;\n    }\n    rax = fcn_00407830 (rbx);\n    *(0x006122b8) = rax;\n    rbx = rax;\n    do {\n        rdi = *(0x006122d0);\n        edx -= edi;\n        rdi <<= 4;\n        rdx = (int64_t) edx;\n        rdi += rbx;\n        rdx <<= 4;\n        memset (rdi, 0, r12d);\n        *(0x006122d0) = r12d;\nlabel_0:\n        eax = *((rbp + 4));\n        r15 <<= 4;\n        rbx += r15;\n        r15 = rbp + 8;\n        eax |= 1;\n        r11 = *(rbx);\n        r12 = *((rbx + 8));\n        *((rsp + 0x24)) = eax;\n        rsi = r11;\n        *((rsp + 0x30)) = r11;\n        rax = fcn_00405790 (r12, rsi, *((rsp + 0x28)), r14, *(rbp), eax);\n        r11 = *((rsp + 0x10));\n        if (r11 <= rax) {\n            rsi = rax + 1;\n            *(rbx) = rsi;\n            if (r12 != 0x612460) {\n                *((rsp + 0x10)) = rsi;\n                free (r12);\n                rsi = *((rsp + 0x10));\n            }\n            *((rsp + 0x10)) = rsi;\n            rax = fcn_004077d0 (*((rsp + 0x10)));\n            *((rbx + 8)) = rax;\n            rdi = rax;\n            r12 = rax;\n            fcn_00405790 (rdi, *((rsp + 0x30)), *((rsp + 0x28)), r14, *(rbp), *((rsp + 0x3c)));\n        }\n        eax = *((rsp + 0x18));\n        *(r13) = eax;\n        rax = r12;\n        return rax;\nlabel_2:\n        rax = fcn_00407830 (0);\n        __asm (\"movdqa xmm0, xmmword [0x006122c0]\");\n        rbx = rax;\n        *(0x006122b8) = rax;\n        __asm (\"movups xmmword [rax], xmm0\");\n    } while (1);\nlabel_1:\n    return fcn_00407a20 ();\n}\n"
        },
        {
            "funcName": "fcn_00406cbf",
            "funcStartAddr": "0x406cbf",
            "funcEndAddr": "0x406cc2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x406cbf */\n#include <stdint.h>\n \nvoid fcn_00406cbf (void) {\n}\n"
        },
        {
            "funcName": "fcn_00406ee0",
            "funcStartAddr": "0x406ee0",
            "funcEndAddr": "0x40c26e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x406ee0 */\n#include <stdint.h>\n \nint64_t fcn_00406ee0 (int64_t arg1, uint32_t arg2, int64_t arg3) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    do {\n        abort ();\n    } while (esi == 0xa);\n    rax = rdx;\n    *(rsp) = esi;\n    *((rsp + 4)) = 0;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x30)) = 0;\n    fcn_004069c0 (rdi, rax, 0xffffffffffffffff, rsp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00407060",
            "funcStartAddr": "0x407060",
            "funcEndAddr": "0x4070f1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x407060 */\n#include <stdint.h>\n \nint64_t fcn_00407060 (int64_t arg1, int64_t arg7, int64_t arg8, int64_t arg9) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_20h;\n    int64_t var_30h;\n    rdi = arg1;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    xmm2 = arg9;\n    do {\n        rax = imp.__libc_start_main;\n        ecx = edx;\n        __asm (\"movdqa xmm0, xmmword [0x00612560]\");\n        __asm (\"movdqa xmm1, xmmword [0x00612570]\");\n        __asm (\"movdqa xmm2, xmmword [0x00612580]\");\n        ecx &= 0x1f;\n        *((rsp + 0x30)) = rax;\n        eax = edx;\n        al >>= 5;\n        *(rsp) = xmm0;\n        eax = (int32_t) al;\n        *((rsp + 0x10)) = xmm1;\n        r8 = rsp + rax*4 + 8;\n        *((rsp + 0x20)) = xmm2;\n        edx = *(r8);\n        eax = *(r8);\n        eax >>= cl;\n        eax = ~eax;\n        eax &= 1;\n        eax <<= cl;\n        eax ^= edx;\n        *(r8) = eax;\n        fcn_004069c0 (0, rdi, rsi, rsp);\n        return rax;\n        edx = 0x3a;\n        rsi = 0xffffffffffffffff;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00407090",
            "funcStartAddr": "0x407090",
            "funcEndAddr": "0x40c5ca",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x407090 */\n#include <stdint.h>\n \nint64_t fcn_00407090 (uint32_t arg2, int64_t arg3) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rsi = arg2;\n    rdx = arg3;\n    do {\n        abort ();\n    } while (esi == 0xa);\n    rcx = 0x400000000000000;\n    rax = rdx;\n    *(rsp) = esi;\n    *((rsp + 8)) = rcx;\n    *((rsp + 4)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x30)) = 0;\n    fcn_004069c0 (rdi, rax, 0xffffffffffffffff, rsp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004071f0",
            "funcStartAddr": "0x4071f0",
            "funcEndAddr": "0x407201",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x4071f0 */\n#include <stdint.h>\n \nvoid fcn_004071f0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    ecx = 0x612280;\n    rdx = 0xffffffffffffffff;\n    return void (*0x4069c0)() ();\n}\n"
        },
        {
            "funcName": "fcn_00407210",
            "funcStartAddr": "0x407210",
            "funcEndAddr": "0x407226",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x407210 */\n#include <stdint.h>\n \nvoid fcn_00407210 (int64_t arg1) {\n    rdi = arg1;\n    rsi = rdi;\n    ecx = 0x612280;\n    rdx = 0xffffffffffffffff;\n    edi = 0;\n    return void (*0x4069c0)() ();\n}\n"
        },
        {
            "funcName": "fcn_00407230",
            "funcStartAddr": "0x407230",
            "funcEndAddr": "0x40cc74",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x407230 */\n#include <stdint.h>\n \nvoid fcn_00407230 (int64_t arg_20h, int64_t arg_30h, int64_t arg_8h_2, int64_t arg_10h, int64_t arg_8h, int64_t arg_8h_3, int64_t arg_10h_2, int64_t arg_18h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_30h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    eax = abort ();\n    r12 = r9;\n    rbx = r8;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    r9 = rcx;\n    r8 = rdx;\n    rcx = rsi;\n    edx = \"%s (%s) %s\\n\";\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    do {\n        edx = 5;\n        rax = dcgettext (0, 0x40f2cb);\n        r8d = 0x7e1;\n        edx = \"Copyright %s %d Free Software Foundation, Inc.\";\n        rdi = rbp;\n        rcx = rax;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        edx = 5;\n        rax = dcgettext (0, \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\");\n        rsi = rbp;\n        rdi = rax;\n        eax = fputs_unlocked ();\n        if (r12 > 9) {\n            goto label_2;\n        }\n        /* switch table (10 cases) at 0x40f5b8 */\nlabel_1:\n        r8 = rcx;\n        esi = 1;\n        rcx = rdx;\n        eax = 0;\n        edx = \"%s %s\\n\";\n        fprintf_chk ();\n    } while (1);\n    r9 = *((rbx + 0x38));\n    rax = *((rbx + 0x10));\n    edx = 5;\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    r15 = *((rbx + 0x20));\n    *((rsp + 0x10)) = r9;\n    r14 = *((rbx + 0x18));\n    rbx = *(rbx);\n    *(rsp) = rax;\n    *((rsp + 8)) = r8;\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n    do {\n        r9 = *((rsp + 0x18));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        r9 = *((rsp + 0x30));\n        r8 = *((rsp + 0x38));\n        fprintf_chk ();\n        return rax;\n        r10 = *((rbx + 0x40));\n        r9 = *((rbx + 0x38));\n        edx = 5;\n        rax = *((rbx + 0x10));\n        r8 = *((rbx + 8));\n        r13 = *((rbx + 0x30));\n        r12 = *((rbx + 0x28));\n        *((rsp + 0x18)) = r10;\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        *((rsp + 0x10)) = r9;\n        *(rsp) = rax;\n        rbx = *(rbx);\n        *((rsp + 8)) = r8;\nlabel_0:\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        r10 = *((rsp + 0x18));\n    } while (1);\n    rbx = *(rbx);\n    edx = 5;\n    rax = dcgettext (0, \"Written by %s.\\n\");\n    rdi = rbp;\n    esi = 1;\n    rcx = rbx;\n    rdx = rax;\n    eax = 0;\n    void (*0x401b60)() ();\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s and %s.\\n\");\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x401b60)() ();\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, and %s.\\n\");\n    r9 = r13;\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x401b60)() ();\n    edx = 5;\n    r14 = *((rbx + 0x18));\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\nand %s.\\n\");\n    do {\n        rdx = rax;\n        r9 = r13;\n        r8 = r12;\n        rcx = rbx;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r15 = *((rbx + 0x20));\n        edx = 5;\n        r14 = *((rbx + 0x18));\n        r13 = *((rbx + 0x10));\n        r12 = *((rbx + 8));\n        rbx = *(rbx);\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n    } while (1);\n    r8 = *((rbx + 8));\n    r12 = *((rbx + 0x28));\n    edx = 5;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *(rsp) = r8;\n    r13 = *((rbx + 0x10));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n    r9 = r13;\n    do {\n        r8 = *((rsp + 0x20));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r9 = *((rbx + 0x10));\n        r13 = *((rbx + 0x30));\n        edx = 5;\n        r12 = *((rbx + 0x28));\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        r8 = *((rbx + 8));\n        *((rsp + 8)) = r9;\n        rbx = *(rbx);\n        *(rsp) = r8;\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n        r9 = *((rsp + 0x28));\n    } while (1);\nlabel_2:\n    r10 = *((rbx + 0x40));\n    r9 = *((rbx + 0x38));\n    edx = 5;\n    esi = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    rax = *((rbx + 0x10));\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    *((rsp + 0x18)) = r10;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *((rsp + 0x10)) = r9;\n    *(rsp) = rax;\n    rbx = *(rbx);\n    *((rsp + 8)) = r8;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00407690",
            "funcStartAddr": "0x407690",
            "funcEndAddr": "0x40774c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x407690 */\n#include <stdint.h>\n \nuint64_t fcn_00407690 (int64_t arg_b0h, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_70h;\n    int64_t var_90h;\n    int64_t var_98h;\n    r8 = arg5;\n    r9 = arg6;\n    r11d = 0;\n    rax = rsp + 0xb0;\n    *((rsp + 0x90)) = r8;\n    r10 = rsp + 0xb0;\n    r8d = 0x20;\n    *((rsp + 0x10)) = rax;\n    rax = rsp + 0x70;\n    *((rsp + 0x98)) = r9;\n    r9d = 0;\n    *((rsp + 8)) = 0x20;\n    *((rsp + 0x18)) = rax;\n    while (r8d <= 0x2f) {\n        eax = r8d;\n        r11 = rsp + 0x70;\n        r8d += 8;\n        rax += r11;\n        r11d = 1;\n        rax = *(rax);\n        *((rsp + r9*8 + 0x20)) = rax;\n        if (rax == 0) {\n            goto label_1;\n        }\nlabel_0:\n        r9++;\n        if (r9 == 0xa) {\n            goto label_1;\n        }\n    }\n    rax = r10;\n    r10 += 8;\n    rax = *(rax);\n    *((rsp + r9*8 + 0x20)) = rax;\n    if (rax != 0) {\n        goto label_0;\n    }\nlabel_1:\n    if (r11b != 0) {\n        *((rsp + 8)) = r8d;\n    }\n    fcn_00407230 (rdi, rsi, rdx, rcx, rsp + 0x20, r9);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00407796",
            "funcStartAddr": "0x407796",
            "funcEndAddr": "0x4077c4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x407796 */\n#include <stdint.h>\n \nuint64_t fcn_00407796 (void) {\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\");\n    rsi = rbx;\n    rdi = rax;\n    return fputs_unlocked ();\n}\n"
        },
        {
            "funcName": "fcn_004077d0",
            "funcStartAddr": "0x4077d0",
            "funcEndAddr": "0x4077ea",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x4077d0 */\n#include <stdint.h>\n \nuint64_t fcn_004077d0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = malloc (rdi);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    return fcn_00407a20 ();\n}\n"
        },
        {
            "funcName": "fcn_00407830",
            "funcStartAddr": "0x407830",
            "funcEndAddr": "0x407866",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x407830 */\n#include <stdint.h>\n \nuint64_t fcn_00407830 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rsi;\n    if (rsi == 0) {\n        if (rdi != 0) {\n            goto label_0;\n        }\n    }\n    rax = realloc (rdi, rbx);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_1;\n        }\n    }\n    return rax;\nlabel_0:\n    eax = free (rdi);\n    eax = 0;\n    return rax;\nlabel_1:\n    return fcn_00407a20 ();\n}\n"
        },
        {
            "funcName": "fcn_00407930",
            "funcStartAddr": "0x407930",
            "funcEndAddr": "0x407980",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x407930 */\n#include <stdint.h>\n \nint64_t fcn_00407930 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rax = *(rsi);\n    if (rdi == 0) {\n        goto label_0;\n    }\n    rdx = 0x5555555555555553;\n    if (rax > rdx) {\n        goto label_1;\n    }\n    rdx = rax;\n    rdx >>= 1;\n    rax = rdx + rax + 1;\n    do {\n        *(rsi) = rax;\n        rsi = rax;\n        void (*0x407830)() ();\nlabel_0:\n        if (rax == 0) {\n            eax = 0x80;\n            *(rsi) = rax;\n            rsi = rax;\n            void (*0x407830)() ();\n        }\n    } while (rax >= 0);\nlabel_1:\n    return fcn_00407a20 ();\n}\n"
        },
        {
            "funcName": "fcn_004079d0",
            "funcStartAddr": "0x4079d0",
            "funcEndAddr": "0x4079f8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x4079d0 */\n#include <stdint.h>\n \nuint64_t fcn_004079d0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdi = rsi;\n    rbx = rsi;\n    rax = fcn_004077d0 (rdi);\n    rdx = rbx;\n    rsi = rbp;\n    rdi = rax;\n    return memcpy ();\n}\n"
        },
        {
            "funcName": "fcn_00407a20",
            "funcStartAddr": "0x407a20",
            "funcEndAddr": "0x407a51",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x407a20 */\n#include <stdint.h>\n \nuint64_t fcn_00407a20 (void) {\n    edx = 5;\n    rax = dcgettext (0, \"memory exhausted\");\n    rcx = rax;\n    eax = 0;\n    error (*(0x00612268), 0, 0x40e4cc);\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_00407a60",
            "funcStartAddr": "0x407a60",
            "funcEndAddr": "0x407abd",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x407a60 */\n#include <stdint.h>\n \nuint64_t fcn_00407a60 (void) {\n    eax = fcn_00409150 (rdi, rsi);\n    ebx = eax;\n    while (eax != 0) {\nlabel_0:\n        eax = ebx;\n        return eax;\n        eax = ferror (*(obj.stdout));\n    }\n    edx = 5;\n    rax = dcgettext (0, \"cannot perform formatted output\");\n    rax = errno_location ();\n    eax = 0;\n    error (*(0x00612268), *(rax), rbp);\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00407ac0",
            "funcStartAddr": "0x407ac0",
            "funcEndAddr": "0x407b54",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x407ac0 */\n#include <stdint.h>\n \nuint64_t fcn_00407ac0 (int64_t arg_e0h, int64_t arg10, int64_t arg11, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6, int64_t arg7, int64_t arg8, int64_t arg9) {\n    int64_t var_8h;\n    int64_t var_ch;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    int64_t var_50h;\n    int64_t var_60h;\n    int64_t var_70h;\n    int64_t var_80h;\n    int64_t var_90h;\n    int64_t var_a0h;\n    int64_t var_b0h;\n    int64_t var_c0h;\n    xmm3 = arg10;\n    xmm4 = arg11;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    xmm2 = arg9;\n    *((rsp + 0x28)) = rsi;\n    *((rsp + 0x30)) = rdx;\n    *((rsp + 0x38)) = rcx;\n    *((rsp + 0x40)) = r8;\n    *((rsp + 0x48)) = r9;\n    if (al != 0) {\n        *((rsp + 0x50)) = xmm0;\n        *((rsp + 0x60)) = xmm1;\n        *((rsp + 0x70)) = xmm2;\n        *((rsp + 0x80)) = xmm3;\n        *((rsp + 0x90)) = xmm4;\n        *((rsp + 0xa0)) = xmm5;\n        *((rsp + 0xb0)) = xmm6;\n        *((rsp + 0xc0)) = xmm7;\n    }\n    rax = rsp + 0xe0;\n    rsi = rsp + 8;\n    *((rsp + 8)) = 8;\n    *((rsp + 0x10)) = rax;\n    rax = rsp + 0x20;\n    *((rsp + 0xc)) = 0x30;\n    *((rsp + 0x18)) = rax;\n    fcn_00407a60 ();\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00407b60",
            "funcStartAddr": "0x407b60",
            "funcEndAddr": "0x407bb9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x407b60 */\n#include <stdint.h>\n \nuint64_t fcn_00407b60 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    eax = fcn_00409090 (rdi, rsi, rdx);\n    ebx = eax;\n    while (eax != 0) {\nlabel_0:\n        eax = ebx;\n        return eax;\n        eax = ferror (rbp);\n    }\n    edx = 5;\n    rax = dcgettext (0, \"cannot perform formatted output\");\n    rax = errno_location ();\n    eax = 0;\n    error (*(0x00612268), *(rax), rbp);\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00407c50",
            "funcStartAddr": "0x407c50",
            "funcEndAddr": "0x40dd53",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x407c50 */\n#include <stdint.h>\n \nint64_t fcn_00407c50 (uint32_t arg1, int64_t arg2, int64_t arg4, int64_t arg5) {\n    int64_t var_eh;\n    int64_t var_fh;\n    rdi = arg1;\n    rsi = arg2;\n    rcx = arg4;\n    r8 = arg5;\n    do {\n        abort ();\n        edi--;\n        ebx = *(0x00612268);\n    } while (edi > 3);\n    r10d = esi;\n    rsi = *((rdi*8 + 0x40f700));\n    rax = (int64_t) r10d;\n    if (r10d < 0) {\n        goto label_0;\n    }\n    rax <<= 5;\n    r12d = 0x40f680;\n    r13 = *((rcx + rax));\n    do {\n        edx = 5;\n        rax = dcgettext (0, rsi);\n        r9 = rbp;\n        r8 = r13;\n        rcx = r12;\n        eax = 0;\n        error (ebx, 0, rax);\n        rax = abort ();\nlabel_0:\n        r12d = 0x40f680;\n        *((rsp + 0xe)) = dl;\n        r13 = rsp + 0xe;\n        r12 -= rax;\n        *((rsp + 0xf)) = 0;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00407ce0",
            "funcStartAddr": "0x407ce0",
            "funcEndAddr": "0x408114",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x407ce0 */\n#include <stdint.h>\n \nuint64_t fcn_00407ce0 (int64_t arg1, int64_t arg2, uint32_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_8h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    if (edx > 0x24) {\n        goto label_13;\n    }\n    r15 = rsi;\n    rax = rsp + 0x18;\n    *(rsp) = edx;\n    r14 = rcx;\n    r13 = r8;\n    if (rsi == 0) {\n        r15 = rax;\n    }\n    errno_location ();\n    *(rax) = 0;\n    r12 = rax;\n    ebx = *(rbp);\n    rax = ctype_b_loc ();\n    edx = *(rsp);\n    rsi = *(rax);\n    rax = rbp;\n    while ((*((rsi + rcx*2 + 1)) & 0x20) != 0) {\n        rax++;\n        ebx = *(rax);\n        ecx = (int32_t) bl;\n    }\n    if (bl == 0x2d) {\n        goto label_1;\n    }\n    ecx = 0;\n    rsi = r15;\n    rdi = rbp;\n    rax = strtoul_internal ();\n    r8 = *(r15);\n    rbx = rax;\n    if (r8 == rbp) {\n        goto label_14;\n    }\n    eax = *(r12);\n    if (eax != 0) {\n        goto label_15;\n    }\n    ebp = 0;\n    do {\n        if (r13 != 0) {\n            r12d = *(r8);\n            if (r12b != 0) {\n                goto label_16;\n            }\n        }\nlabel_2:\n        *(r14) = rbx;\nlabel_0:\n        eax = ebp;\n        return rax;\nlabel_15:\n    } while (eax == 0x22);\n    do {\nlabel_1:\n        goto label_0;\nlabel_14:\n        *(rsp) = r8;\n    } while (r13 == 0);\n    r12d = *(rbp);\n    if (r12b == 0) {\n        goto label_1;\n    }\n    esi = (int32_t) r12b;\n    ebp = 0;\n    ebx = 1;\n    rax = strchr (r13, rsi);\n    r8 = *(rsp);\n    if (rax == 0) {\n        goto label_1;\n    }\nlabel_4:\n    edx = r12 - 0x45;\n    if (dl <= 0x2f) {\n        rax = 0x814400308945;\n        *(rsp) = dl;\n        if (((rax >> rdx) & 1) >= 0) {\n            goto label_17;\n        }\n        *((rsp + 8)) = r8;\n        rax = strchr (r13, 0x30);\n        r8 = *((rsp + 8));\n        if (rax == 0) {\n            goto label_17;\n        }\n        eax = *((r8 + 1));\n        if (al == 0x44) {\n            goto label_18;\n        }\n        if (al == 0x69) {\n            goto label_19;\n        }\n        edx = *(rsp);\n        if (al == 0x42) {\n            goto label_18;\n        }\n        /* switch table (67 cases) at 0x40f758 */\n    }\nlabel_17:\n    esi = 1;\n    edx = 0x400;\nlabel_7:\n    r12d -= 0x42;\n    if (r12b > 0x35) {\n        goto label_20;\n    }\n    r12d = (int32_t) r12b;\n    /* switch table (54 cases) at 0x40f8d8 */\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    rax = rbx;\n    rdx:rax = rax * rcx;\n    if (r12b overflow 0x35) {\n        goto label_5;\n    }\n    rdx:rax = rax * rcx;\n    if (r12b overflow 0x35) {\n        goto label_5;\n    }\n    rbx = rax;\n    do {\nlabel_3:\n        rsi = (int64_t) esi;\n        eax = ebp;\n        r8 += rsi;\n        eax |= 2;\n        *(r15) = r8;\n        if (*(r8) != 0) {\n        }\n        goto label_2;\n        esi = 1;\n        edx = 0x400;\n        rax = rbx;\n        rdx:rax = rax * rdx;\n        rbx = rax;\n    } while (*(r8) !overflow 0);\nlabel_5:\n    rbx |= 0xffffffffffffffff;\n    goto label_3;\nlabel_16:\n    esi = (int32_t) r12b;\n    *(rsp) = r8;\n    rax = strchr (r13, rsi);\n    r8 = *(rsp);\n    if (rax != 0) {\n        goto label_4;\n    }\nlabel_20:\n    *(r14) = rbx;\n    ebp |= 2;\n    goto label_0;\n    if (rbx < 0) {\n        goto label_5;\n    }\n    rbx += rbx;\n    goto label_3;\n    esi = 1;\n    rax = rbx;\n    rax >>= 0x37;\n    if (rax != 0) {\n        goto label_5;\n    }\n    rbx <<= 9;\n    goto label_3;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 7;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (rbx overflow 0) {\n            goto label_21;\n        }\nlabel_8:\n        edi--;\n    } while (edi != 0);\nlabel_6:\n    ebp |= r9d;\n    goto label_3;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 8;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (ebp overflow 0) {\n            goto label_22;\n        }\nlabel_11:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 4;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_23;\n        }\nlabel_9:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 5;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_24;\n        }\nlabel_12:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 6;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_25;\n        }\nlabel_10:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    rax = rbx;\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rbx = rax;\n    eax = 0;\n    ebp |= eax;\n    goto label_3;\n    rax = rbx;\n    rax >>= 0x36;\n    if (rax != 0) {\n        goto label_5;\n    }\n    rbx <<= 0xa;\n    goto label_3;\n    esi = 1;\n    goto label_3;\nlabel_18:\n    esi = 2;\n    edx = 0x3e8;\n    goto label_7;\nlabel_19:\n    esi = 0;\n    edx = 0x400;\n    sil = (*((r8 + 2)) == 0x42) ? 1 : 0;\n    esi = rsi + rsi + 1;\n    goto label_7;\nlabel_21:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_8;\nlabel_26:\n    eax = 1;\n    rbx |= 0xffffffffffffffff;\n    ebp |= eax;\n    goto label_3;\nlabel_23:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_9;\nlabel_25:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_10;\nlabel_22:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_11;\nlabel_24:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_12;\nlabel_13:\n    return assert_fail (\"0 <= strtol_base && strtol_base <= 36\", \"lib/xstrtol.c\", 0x60, \"xstrtoumax\");\n}\n"
        },
        {
            "funcName": "fcn_00408120",
            "funcStartAddr": "0x408120",
            "funcEndAddr": "0x40819b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x408120 */\n#include <stdint.h>\n \nuint64_t fcn_00408120 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    eax = fileno (rdi);\n    rdi = rbx;\n    if (eax < 0) {\n        goto label_1;\n    }\n    eax = freading ();\n    while (rax != -1) {\n        eax = fcn_004081a0 (rbx);\n        if (eax == 0) {\n            goto label_2;\n        }\n        rax = errno_location ();\n        r12d = *(rax);\n        fclose (rbx);\n        if (r12d != 0) {\n            goto label_3;\n        }\nlabel_0:\n        return rax;\n        eax = fileno (rbx);\n        esi = 0;\n        edx = 1;\n        edi = eax;\n        rax = lseek ();\n    }\nlabel_2:\n    rdi = rbx;\nlabel_1:\n    void (*0x401880)() ();\nlabel_3:\n    *(rbp) = r12d;\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_004081a0",
            "funcStartAddr": "0x4081a0",
            "funcEndAddr": "0x4081e0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x4081a0 */\n#include <stdint.h>\n \nuint32_t fcn_004081a0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    if (rdi != 0) {\n        eax = freading ();\n        if (eax == 0) {\n            goto label_0;\n        }\n        if ((*(rbx) & 0x100) != 0) {\n            goto label_1;\n        }\n    }\nlabel_0:\n    rdi = rbx;\n    void (*0x401a20)() ();\nlabel_1:\n    fcn_004081e0 (rbx, 0, 1);\n    rdi = rbx;\n    return fflush ();\n}\n"
        },
        {
            "funcName": "fcn_004081e0",
            "funcStartAddr": "0x4081e0",
            "funcEndAddr": "0x408237",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x4081e0 */\n#include <stdint.h>\n \nint64_t fcn_004081e0 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rax = *((rdi + 8));\n    while (*((rdi + 0x28)) != rax) {\nlabel_0:\n        void (*0x401b00)() ();\n        rax = *((rdi + 0x20));\n    }\n    if (*((rdi + 0x48)) != 0) {\n        goto label_0;\n    }\n    r12d = edx;\n    rbx = rdi;\n    eax = fileno (rdi);\n    edx = r12d;\n    rsi = rbp;\n    edi = eax;\n    rax = lseek ();\n    if (rax != -1) {\n        *(rbx) &= 0xffffffef;\n        *((rbx + 0x90)) = rax;\n        eax = 0;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00408240",
            "funcStartAddr": "0x408240",
            "funcEndAddr": "0x40831f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x408240 */\n#include <stdint.h>\n \nuint64_t fcn_00408240 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r11 = rdi + 8;\n    r12d = *((rsi + 0x2c));\n    ebp = *(rsi);\n    rbx = *((rsi + 0x30));\n    r9d = r12d;\n    r10d = ebp;\n    r8 = rbx;\nlabel_1:\n    if (r10d <= r8d) {\n        goto label_2;\n    }\nlabel_0:\n    if (r9d >= r8d) {\n        goto label_2;\n    }\n    r14d = r10d;\n    edx = r8d;\n    r14d -= r8d;\n    edx -= r9d;\n    if (r14d <= edx) {\n        goto label_3;\n    }\n    rcx = (int64_t) r9d;\n    r10d -= edx;\n    edx--;\n    rdx += rcx;\n    rax = rdi + rcx*8;\n    r13 = r11 + rdx*8;\n    rdx = (int64_t) r10d;\n    rdx -= rcx;\n    do {\n        rcx = *(rax);\n        r14 = *((rax + rdx*8));\n        *(rax) = r14;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (r13 != rax);\n    if (r10d > r8d) {\n        goto label_0;\n    }\nlabel_2:\n    eax = ebp;\n    *((rsi + 0x30)) = ebp;\n    eax -= r8d;\n    r12d += eax;\n    *((rsi + 0x2c)) = r12d;\n    r12 = rbx;\n    r13 = rbx;\n    r14 = rbx;\n    r15 = rbx;\n    return rax;\nlabel_3:\n    rdx = (int64_t) r9d;\n    ecx = r14 - 1;\n    rcx += rdx;\n    rax = rdi + rdx*8;\n    r13 = r11 + rcx*8;\n    rcx = rbx;\n    rcx -= rdx;\n    rdx = rcx;\n    do {\n        rcx = *(rax);\n        r15 = *((rax + rdx*8));\n        *(rax) = r15;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (rax != r13);\n    r9d += r14d;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00408320",
            "funcStartAddr": "0x408320",
            "funcEndAddr": "0x40893c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x408320 */\n#include <stdint.h>\n \nint64_t fcn_00408320 (int64_t arg_90h, int64_t arg_98h, int64_t arg_a0h, signed int64_t arg1, int64_t arg2, char * arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_ch;\n    int64_t var_10h;\n    void * ptr;\n    int64_t var_20h;\n    int64_t var_28h;\n    char * s;\n    int64_t var_38h;\n    int64_t c;\n    signed int64_t var_40h;\n    int64_t var_44h;\n    void * var_48h;\n    size_t nmeb;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rax = *((rsp + 0x90));\n    *((rsp + 0x40)) = edi;\n    *((rsp + 0x28)) = rsi;\n    r14 = *((rax + 0x20));\n    *((rsp + 0x30)) = rdx;\n    *(rsp) = rcx;\n    eax = *(r14);\n    *((rsp + 0x20)) = r8;\n    *((rsp + 0xc)) = r9d;\n    *((rsp + 0x3f)) = al;\n    if (al == 0x3d) {\n        goto label_11;\n    }\n    if (al == 0) {\n        goto label_11;\n    }\n    do {\n        rbp++;\n        eax = *(rbp);\n        if (al == 0) {\n            goto label_12;\n        }\n    } while (al != 0x3d);\nlabel_12:\n    r13 = rbp;\n    r13 -= r14;\nlabel_6:\n    rbx = *(rsp);\n    r12d = 0;\n    rax = *(rbx);\n    *((rsp + 0x10)) = rax;\n    r15 = rax;\n    if (rax != 0) {\n        goto label_13;\n    }\n    goto label_14;\n    do {\n        r12 = (int64_t) r8d;\nlabel_13:\n        eax = strncmp (r15, r14, r13);\n        if (eax == 0) {\n            rax = strlen (r15);\n            if (rax == r13) {\n                goto label_15;\n            }\n        }\n        rbx += 0x20;\n        r15 = *(rbx);\n        r8d = r12 + 1;\n    } while (r15 != 0);\n    rcx = *(rsp);\n    *((rsp + 0x4c)) = r8d;\n    r9d = 0;\n    ebx = 0;\n    *((rsp + 0x44)) = 0xffffffff;\n    r15 = r9;\n    *((rsp + 0x38)) = 0;\n    *((rsp + 0x48)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x10)) = rbp;\n    do {\n        eax = strncmp (*((rsp + 0x10)), r14, r13);\n        if (eax == 0) {\n            if (rbx == 0) {\n                goto label_16;\n            }\n            eax = *((rsp + 0xc));\n            if (eax == 0) {\n                goto label_17;\n            }\nlabel_0:\n            r11d = *((rsp + 0x38));\n            if (r11d != 0) {\n                goto label_1;\n            }\n            r10d = *((rsp + 0x98));\n            if (r10d == 0) {\n                goto label_18;\n            }\n            if (*((rsp + 0x18)) == 0) {\n                goto label_19;\n            }\nlabel_3:\n            rax = *((rsp + 0x18));\n            *((rax + r15)) = 1;\n        }\nlabel_1:\n        rbp += 0x20;\n        rdi = *(rbp);\n        r15++;\n    } while (rdi != 0);\n    rbp = *((rsp + 0x10));\n    if (*((rsp + 0x18)) != 0) {\n        goto label_20;\n    }\n    r9d = *((rsp + 0x38));\n    if (r9d != 0) {\n        goto label_20;\n    }\n    if (rbx == 0) {\nlabel_14:\n        eax = *((rsp + 0xc));\n        if (eax != 0) {\n            rax = *((rsp + 0x90));\n            rcx = *((rsp + 0x28));\n            rax = *(rax);\n            rax = *((rcx + rax*8));\n            if (*((rax + 1)) == 0x2d) {\n                goto label_21;\n            }\n            esi = *((rsp + 0x3f));\n            rax = strchr (*((rsp + 0x30)), rsi);\n            rdx = rax;\n            eax = 0xffffffff;\n            if (rdx != 0) {\n                goto label_5;\n            }\n        }\nlabel_21:\n        ecx = *((rsp + 0x98));\n        if (ecx != 0) {\n            goto label_22;\n        }\nlabel_4:\n        rax = *((rsp + 0x90));\n        *((rax + 0x20)) = 0;\n        *(rax)++;\n        *((rax + 8)) = 0;\n        eax = 0x3f;\n        return rax;\n    }\n    r12d = *((rsp + 0x44));\nlabel_15:\n    rax = *((rsp + 0x90));\n    rcx = *((rsp + 0x90));\n    edx = *(rax);\n    *((rcx + 0x20)) = 0;\n    eax = rdx + 1;\n    *(rcx) = eax;\n    ecx = *((rbx + 8));\n    if (*(rbp) != 0) {\n        goto label_23;\n    }\n    if (ecx == 1) {\n        goto label_24;\n    }\nlabel_2:\n    rax = *((rsp + 0x20));\n    if (rax != 0) {\n        *(rax) = r12d;\n    }\n    rdx = *((rbx + 0x10));\n    eax = *((rbx + 0x18));\n    if (rdx != 0) {\n        *(rdx) = eax;\n        eax = 0;\n    }\nlabel_5:\n    return rax;\nlabel_17:\n    eax = *((rbp + 8));\n    if (*((rbx + 8)) != eax) {\n        goto label_0;\n    }\n    rax = *((rbp + 0x10));\n    if (*((rbx + 0x10)) != rax) {\n        goto label_0;\n    }\n    eax = *((rbp + 0x18));\n    if (*((rbx + 0x18)) != eax) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_23:\n    if (ecx == 0) {\n        goto label_25;\n    }\n    rax = *((rsp + 0x90));\n    rbp++;\n    *((rax + 0x10)) = rbp;\n    goto label_2;\nlabel_16:\n    *((rsp + 0x44)) = r15d;\n    rbx = rbp;\n    goto label_1;\nlabel_18:\n    *((rsp + 0x38)) = 1;\n    if (*((rsp + 0x18)) == 0) {\n        goto label_1;\n    }\n    goto label_3;\nlabel_22:\n    rax = *((rsp + 0x28));\n    edx = 5;\n    rbx = *(rax);\n    rax = dcgettext (0, \"%s: unrecognized option '%s%s'\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r14;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbx;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_4;\nlabel_20:\n    r8d = *((rsp + 0x98));\n    if (r8d != 0) {\n        edi = *((rsp + 0x38));\n        if (edi == 0) {\n            goto label_26;\n        }\n        rax = *((rsp + 0x28));\n        edx = 5;\n        rbx = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' is ambiguous\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r14;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbx;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        rax = *((rsp + 0x90));\n        r14 = *((rax + 0x20));\n    }\nlabel_9:\n    esi = *((rsp + 0x48));\n    if (esi != 0) {\n        goto label_27;\n    }\nlabel_7:\n    rax = strlen (r14);\n    r14 += rax;\n    rax = *((rsp + 0x90));\n    *((rax + 0x20)) = r14;\n    *(rax)++;\n    *((rax + 8)) = 0;\n    eax = 0x3f;\n    goto label_5;\nlabel_24:\n    if (eax >= *((rsp + 0x40))) {\n        goto label_28;\n    }\n    rcx = *((rsp + 0x90));\n    edx += 2;\n    rax = (int64_t) eax;\n    *(rcx) = edx;\n    rcx = *((rsp + 0x28));\n    rax = *((rcx + rax*8));\n    rcx = *((rsp + 0x90));\n    *((rcx + 0x10)) = rax;\n    goto label_2;\nlabel_11:\n    r13d = 0;\n    goto label_6;\nlabel_25:\n    edx = *((rsp + 0x98));\n    while (1) {\n        eax = *((rbx + 0x18));\n        rcx = *((rsp + 0x90));\n        *((rcx + 8)) = eax;\n        eax = 0x3f;\n        goto label_5;\nlabel_19:\n        rdi = *((rsp + 0x4c));\n        rax = calloc (rdi, 1);\n        *((rsp + 0x18)) = rax;\n        if (rax == 0) {\n            goto label_29;\n        }\n        rax = *((rsp + 0x44));\n        rcx = *((rsp + 0x18));\n        *((rsp + 0x48)) = 1;\n        *((rcx + rax)) = 1;\n        goto label_3;\n        rax = *((rsp + 0x28));\n        r12 = *(rbx);\n        edx = 5;\n        rbp = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' doesn't allow an argument\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r12;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_27:\n    free (*((rsp + 0x18)));\n    goto label_7;\nlabel_28:\n    eax = *((rsp + 0x98));\n    if (eax != 0) {\n        goto label_30;\n    }\nlabel_10:\n    eax = *((rbx + 0x18));\n    rcx = *((rsp + 0x90));\n    *((rcx + 8)) = eax;\n    rax = *((rsp + 0x30));\n    al = (*(rax) != 0x3a) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = rax * 5;\n    goto label_5;\nlabel_26:\n    rdi = stderr;\n    flockfile ();\n    rax = *((rsp + 0x90));\n    edx = 5;\n    rbx = *((rax + 0x20));\n    rax = *((rsp + 0x28));\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' is ambiguous; possibilities:\");\n    rdi = stderr;\n    r9 = rbx;\n    r8 = *((rsp + 0xa0));\n    rcx = rbp;\n    rdx = rax;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    rax = *((rsp + 0x18));\n    rdi = stderr;\n    rbx = *(rsp);\n    r12 = rax + r12 + 1;\n    while (*(rbp) == 0) {\nlabel_8:\n        rbp++;\n        rbx += 0x20;\n        if (r12 == rbp) {\n            goto label_31;\n        }\n    }\n    r8 = *(rbx);\n    edx = \" '%s%s';\n    esi = 1;\n    eax = 0;\n    rcx = *((rsp + 0xa0));\n    fprintf_chk ();\n    rdi = stderr;\n    goto label_8;\nlabel_31:\n    fputc (0xa, rdi);\n    rdi = stderr;\n    funlockfile ();\n    rax = *((rsp + 0x90));\n    r14 = *((rax + 0x20));\n    goto label_9;\nlabel_30:\n    rax = *((rsp + 0x28));\n    r12 = *(rbx);\n    edx = 5;\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' requires an argument\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r12;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbp;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_10;\nlabel_29:\n    *((rsp + 0x38)) = 1;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00408940",
            "funcStartAddr": "0x408940",
            "funcEndAddr": "0x408f06",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x408940 */\n#include <stdint.h>\n \nuint64_t fcn_00408940 (int64_t arg_70h, int64_t arg_78h, int64_t arg1, int64_t arg2, int64_t arg3, uint32_t arg4, int64_t arg5, int64_t arg6) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_1ch;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rbx = *((rsp + 0x70));\n    *((rsp + 8)) = rcx;\n    *((rsp + 0x10)) = r8;\n    r13d = *((rbx + 4));\n    if (edi <= 0) {\n        goto label_16;\n    }\n    eax = *(rbx);\n    r12 = rsi;\n    r15 = rdx;\n    *((rbx + 0x10)) = 0;\n    if (eax == 0) {\n        goto label_17;\n    }\n    esi = *((rbx + 0x18));\n    if (esi == 0) {\nlabel_1:\n        *((rbx + 0x30)) = eax;\n        *((rbx + 0x2c)) = eax;\n        *((rbx + 0x20)) = 0;\n        eax = *(r15);\n        if (al == 0x2d) {\n            goto label_18;\n        }\n        if (al == 0x2b) {\n            goto label_19;\n        }\n        ecx = *((rsp + 0x78));\n        edx = 0;\n        if (ecx == 0) {\n            goto label_20;\n        }\nlabel_8:\n        *((rbx + 0x28)) = 0;\n        goto label_11;\n    }\n    eax = *(rdx);\n    rdx = *((rbx + 0x20));\n    ecx = rax - 0x2b;\n    ecx &= 0xfd;\n    if (ecx != 0) {\n        goto label_21;\n    }\n    eax = *((r15 + 1));\n    r15++;\n    eax = 0;\n    if (al == 0x3a) {\n        r13d = eax;\n    }\n    if (rdx != 0) {\n        goto label_22;\n    }\n    do {\nlabel_0:\n        eax = *(rbx);\n        if (*((rbx + 0x30)) > eax) {\n            *((rbx + 0x30)) = eax;\n        }\n        if (eax < *((rbx + 0x2c))) {\n            *((rbx + 0x2c)) = eax;\n        }\n        if (*((rbx + 0x28)) == 1) {\n            goto label_23;\n        }\nlabel_4:\n        if (ebp == eax) {\n            goto label_24;\n        }\n        rdx = (int64_t) eax;\n        ecx = 3;\n        edi = 0x40f680;\n        r14 = *((r12 + rdx*8));\n        rsi = *((r12 + rdx*8));\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (ebp > eax) ? 1 : 0;\n        if (cl != 0) {\n            goto label_25;\n        }\n        edx = *((rbx + 0x2c));\n        ecx = *((rbx + 0x30));\n        eax++;\n        *(rbx) = eax;\n        if (edx == ecx) {\n            goto label_26;\n        }\n        if (eax != ecx) {\n            fcn_00408240 (r12, rbx);\n            edx = *((rbx + 0x2c));\n        }\nlabel_12:\n        *((rbx + 0x30)) = ebp;\n        *(rbx) = ebp;\n        goto label_27;\nlabel_18:\n        *((rbx + 0x28)) = 2;\n        r15++;\n        edx = 0;\nlabel_11:\n        *((rbx + 0x18)) = 1;\n        eax = *(r15);\nlabel_21:\n        eax = 0;\n        if (al == 0x3a) {\n            r13d = eax;\n        }\n    } while (rdx == 0);\nlabel_22:\n    if (*(rdx) == 0) {\n        goto label_0;\n    }\nlabel_6:\n    r8 = rdx + 1;\n    *((rsp + 0x20)) = rdx;\n    *((rbx + 0x20)) = r8;\n    r14d = *(rdx);\n    *((rsp + 0x28)) = r8;\n    *((rsp + 0x1c)) = r14b;\n    rax = strchr (r15, r14d);\n    rdx = *((rsp + 0x20));\n    ecx = *((rsp + 0x1c));\n    r8 = *((rsp + 0x28));\n    if (*((rdx + 1)) == 0) {\n        *(rbx)++;\n    }\n    ecx -= 0x3a;\n    if (cl <= 1) {\n        goto label_28;\n    }\n    if (rax == 0) {\n        goto label_28;\n    }\n    ecx = *((rax + 1));\n    if (*(rax) == 0x57) {\n        goto label_29;\n    }\nlabel_7:\n    if (cl == 0x3a) {\n        goto label_30;\n    }\n    do {\nlabel_2:\n        eax = r14d;\n        return rax;\nlabel_25:\n        if (*(r14) == 0x2d) {\n            goto label_31;\n        }\nlabel_5:\n        edx = *((rbx + 0x28));\n        if (edx == 0) {\n            goto label_16;\n        }\n        eax++;\n        *((rbx + 0x10)) = r14;\n        r14d = 1;\n        *(rbx) = eax;\n    } while (1);\nlabel_17:\n    *(rbx) = 1;\n    eax = 1;\n    goto label_1;\nlabel_24:\n    ebp = *((rbx + 0x30));\n    edx = *((rbx + 0x2c));\nlabel_27:\n    if (edx != ebp) {\n        *(rbx) = edx;\n    }\nlabel_16:\n    r14d = 0xffffffff;\n    goto label_2;\nlabel_23:\n    edx = *((rbx + 0x30));\n    if (*((rbx + 0x2c)) == edx) {\n        goto label_32;\n    }\n    if (eax != edx) {\n        *((rsp + 0x1c)) = r9d;\n        fcn_00408240 (r12, rbx);\n        edx = *(rbx);\n        r9d = *((rsp + 0x1c));\n    }\nlabel_9:\n    if (ebp <= edx) {\n        goto label_33;\n    }\n    rax = (int64_t) edx;\n    while (*(rcx) != 0x2d) {\nlabel_3:\n        edx = rsi + 1;\n        rax++;\n        *(rbx) = edx;\n        if (ebp <= eax) {\n            goto label_33;\n        }\n        rcx = *((r12 + rax*8));\n        esi = eax;\n        edx = eax;\n    }\n    if (*((rcx + 1)) == 0) {\n        goto label_3;\n    }\n    eax = *(rbx);\nlabel_10:\n    *((rbx + 0x30)) = edx;\n    goto label_4;\nlabel_31:\n    ecx = *((r14 + 1));\n    if (cl == 0) {\n        goto label_5;\n    }\n    if (*((rsp + 8)) == 0) {\n        goto label_34;\n    }\n    if (cl == 0x2d) {\n        goto label_35;\n    }\n    if (r9d == 0) {\n        goto label_34;\n    }\n    if (*((r14 + 2)) == 0) {\n        esi = (int32_t) cl;\n        *((rsp + 0x1c)) = r9d;\n        rax = strchr (r15, rsi);\n        r9d = *((rsp + 0x1c));\n        if (rax != 0) {\n            goto label_34;\n        }\n    }\n    rdx = r14 + 1;\n    *((rbx + 0x20)) = rdx;\n    eax = fcn_00408320 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), r9);\n    r14d = eax;\n    if (eax != 0xffffffff) {\n        goto label_2;\n    }\n    rax = *(rbx);\n    r14 = *((r12 + rax*8));\nlabel_34:\n    rdx = r14 + 1;\n    goto label_6;\nlabel_29:\n    if (*((rsp + 8)) == 0) {\n        goto label_7;\n    }\n    if (cl != 0x3b) {\n        goto label_7;\n    }\n    if (*((rdx + 1)) == 0) {\n        rax = *(rbx);\n        if (eax == ebp) {\n            goto label_36;\n        }\n        r8 = *((r12 + rax*8));\n    }\n    *((rbx + 0x20)) = r8;\n    *((rbx + 0x10)) = 0;\nlabel_14:\n    eax = fcn_00408320 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), 0);\n    r14d = eax;\n    goto label_2;\nlabel_20:\n    *((rsp + 0x1c)) = r9d;\n    rax = getenv (\"POSIXLY_CORRECT\");\n    r9d = *((rsp + 0x1c));\n    if (rax == 0) {\n        goto label_37;\n    }\n    rdx = *((rbx + 0x20));\n    goto label_8;\nlabel_30:\n    edx = *((rdx + 1));\n    if (*((rax + 2)) == 0x3a) {\n        goto label_38;\n    }\n    rax = *(rbx);\n    if (dl != 0) {\n        goto label_39;\n    }\n    if (ebp == eax) {\n        goto label_40;\n    }\n    edx = rax + 1;\n    rax = *((r12 + rax*8));\n    *(rbx) = edx;\n    *((rbx + 0x10)) = rax;\nlabel_13:\n    *((rbx + 0x20)) = 0;\n    goto label_2;\nlabel_32:\n    if (eax == edx) {\n        goto label_9;\n    }\n    *((rbx + 0x2c)) = eax;\n    edx = eax;\n    goto label_9;\nlabel_33:\n    eax = edx;\n    goto label_10;\nlabel_19:\n    *((rbx + 0x28)) = 0;\n    r15++;\n    edx = 0;\n    goto label_11;\nlabel_28:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0x3f;\n        goto label_2;\nlabel_26:\n        *((rbx + 0x2c)) = eax;\n        edx = eax;\n        goto label_12;\nlabel_39:\n        eax++;\n        *((rbx + 0x10)) = r8;\n        *(rbx) = eax;\n        goto label_13;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: invalid option -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_38:\n    if (dl != 0) {\n        *((rbx + 0x10)) = r8;\n        *(rbx)++;\n        goto label_13;\nlabel_37:\n        *((rbx + 0x28)) = 1;\n        rdx = *((rbx + 0x20));\n        goto label_11;\n    }\n    *((rbx + 0x10)) = 0;\n    goto label_13;\nlabel_40:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_13;\nlabel_35:\n        rdx = r14 + 2;\n        *((rbx + 0x20)) = rdx;\n        goto label_14;\nlabel_36:\n        if (r13d != 0) {\n            goto label_41;\n        }\nlabel_15:\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_2;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_41:\n    rbp = *(r12);\n    edx = 5;\n    rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n    rdi = stderr;\n    r8d = r14d;\n    esi = 1;\n    rdx = rax;\n    rcx = rbp;\n    eax = 0;\n    fprintf_chk ();\n    goto label_15;\n}\n"
        },
        {
            "funcName": "fcn_00408f10",
            "funcStartAddr": "0x408f10",
            "funcEndAddr": "0x408f66",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x408f10 */\n#include <stdint.h>\n \nint32_t fcn_00408f10 (int64_t arg_10h) {\n    eax = *(0x006122dc);\n    *(0x006125a0) = eax;\n    eax = *(0x006122d8);\n    *(0x006125a4) = eax;\n    eax = *((rsp + 0x10));\n    fcn_00408940 (rdi, rsi, rdx, rcx, r8, r9);\n    edx = imp.__libc_start_main;\n    *(0x006122dc) = edx;\n    rdx = imp.__libc_start_main;\n    *(0x006125e0) = rdx;\n    edx = imp.__libc_start_main;\n    *(0x006122d4) = edx;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00408f90",
            "funcStartAddr": "0x408f90",
            "funcEndAddr": "0x408fa3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x408f90 */\n#include <stdint.h>\n \nvoid fcn_00408f90 (void) {\n    r9d = 0;\n    fcn_00408f10 (rdi);\n}\n"
        },
        {
            "funcName": "fcn_00409010",
            "funcStartAddr": "0x409010",
            "funcEndAddr": "0x40908a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x409010 */\n#include <stdint.h>\n \nuint64_t fcn_00409010 (wint_t arg1, int64_t arg2, size_t * arg3, mbstate_t * ps) {\n    int64_t var_ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = ps;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    rbx = 0xfffffffffffffffe;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r12 = rdi;\n    while (1) {\n        rax = mbrtowc (r12, rbp, rdx, rcx);\n        rbx = rax;\n        if (rax > 0xfffffffffffffffd) {\n            goto label_2;\n        }\nlabel_0:\n        rax = rbx;\n        return rax;\nlabel_1:\n        edx = 1;\n        r12 = rsp + 0xc;\n    }\nlabel_2:\n    al = fcn_004091d0 (0);\n    if (al != 0) {\n        goto label_0;\n    }\n    eax = *(rbp);\n    ebx = 1;\n    *(r12) = eax;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00409090",
            "funcStartAddr": "0x409090",
            "funcEndAddr": "0x40914d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x409090 */\n#include <stdint.h>\n \nuint64_t fcn_00409090 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    int64_t var_10h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13 = rdi;\n    r12 = rsp + 0x10;\n    *((rsp + 8)) = 0x7d0;\n    rax = fcn_004097b0 (r12, rsp + 8, rsi, rdx);\n    rbx = *((rsp + 8));\n    if (rax == 0) {\n        goto label_1;\n    }\n    rdi = rax;\n    rax = fwrite (rdi, 1, rbx, r13);\n    if (rax < rbx) {\n        goto label_2;\n    }\n    if (rbp != r12) {\n        free (rbp);\n    }\n    if (rbx > 0x7fffffff) {\n        goto label_3;\n    }\n    do {\nlabel_0:\n        eax = ebx;\n        return rax;\nlabel_2:\n        ebx = 0xffffffff;\n    } while (rbp == r12);\n    rax = errno_location ();\n    r13d = *(rax);\n    r12 = rax;\n    free (rbp);\n    *(r12) = r13d;\n    goto label_0;\nlabel_3:\n    errno_location ();\n    *(rax) = 0x4b;\nlabel_1:\n    ebx = 0xffffffff;\n    fcn_004097a0 (r13);\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00409150",
            "funcStartAddr": "0x409150",
            "funcEndAddr": "0x409162",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x409150 */\n#include <stdint.h>\n \nvoid fcn_00409150 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = rsi;\n    rsi = rdi;\n    rdi = stdout;\n    return void (*0x409090)() ();\n}\n"
        },
        {
            "funcName": "fcn_00409170",
            "funcStartAddr": "0x409170",
            "funcEndAddr": "0x4091cd",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x409170 */\n#include <stdint.h>\n \nuint64_t fcn_00409170 (int64_t arg1) {\n    rdi = arg1;\n    rax = fpending ();\n    ebx = *(rbp);\n    r12 = rax;\n    ebx &= 0x20;\n    eax = fcn_00408120 (rbp);\n    if (ebx != 0) {\n        goto label_1;\n    }\n    if (eax == 0) {\n        goto label_0;\n    }\n    if (r12 != 0) {\n        goto label_2;\n    }\n    rax = errno_location ();\n    al = (*(rax) != 9) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = -eax;\n    do {\nlabel_0:\n        return rax;\nlabel_1:\n        if (eax != 0) {\n            goto label_2;\n        }\n        errno_location ();\n        *(rax) = 0;\n        eax = 0xffffffff;\n    } while (1);\nlabel_2:\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_004091d0",
            "funcStartAddr": "0x4091d0",
            "funcEndAddr": "0x40922e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x4091d0 */\n#include <stdint.h>\n \nuint64_t fcn_004091d0 (int32_t category) {\n    rdi = category;\n    rax = setlocale (rdi, 0);\n    rdx = rax;\n    eax = 1;\n    if (rdx != 0) {\n        ecx = 2;\n        edi = 0x40fbc1;\n        rsi = rdx;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (rdx > 0) ? 1 : 0;\n        eax = 0;\n        if (cl != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    edi = \"POSIX\";\n    ecx = 6;\n    rsi = rdx;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (cl > 0) ? 1 : 0;\n    al = (al != 0) ? 1 : 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00409230",
            "funcStartAddr": "0x409230",
            "funcEndAddr": "0x409792",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x409230 */\n#include <stdint.h>\n \nuint64_t fcn_00409230 (void) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_60h;\n    rax = nl_langinfo (0xe);\n    r15 = imp.__libc_start_main;\n    rbx = rax;\n    eax = 0x40fbbc;\n    if (rax == 0) {\n        rbx = rax;\n    }\n    if (r15 == 0) {\n        goto label_15;\n    }\nlabel_1:\n    ebp = *(r15);\n    if (bpl != 0) {\n        goto label_16;\n    }\n    goto label_17;\n    do {\nlabel_0:\n        strlen (r15);\n        rbp = r15 + rax + 1;\n        strlen (rbp);\n        r15 = rbp + rax + 1;\n        ebp = *(r15);\n        if (bpl == 0) {\n            goto label_17;\n        }\nlabel_16:\n        eax = strcmp (rbx, r15);\n        if (eax == 0) {\n            goto label_18;\n        }\n    } while (bpl != 0x2a);\n    if (*((r15 + 1)) != 0) {\n        goto label_0;\n    }\nlabel_18:\n    strlen (r15);\n    rbx = r15 + rax + 1;\nlabel_17:\n    eax = \"ASCII\";\n    if (*(rbx) == 0) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\nlabel_15:\n    rax = getenv (\"CHARSETALIASDIR\");\n    r13 = rax;\n    if (rax == 0) {\n        goto label_19;\n    }\n    if (*(rax) == 0) {\n        goto label_19;\n    }\n    rax = strlen (rax);\n    r12 = rax;\n    r14 = rax;\n    if (rax != 0) {\n        goto label_20;\n    }\nlabel_13:\n    rax = malloc (0xe);\n    if (rax != 0) {\n        goto label_21;\n    }\n    do {\n        r15d = 0x40fbbc;\nlabel_2:\n        *(0x006125d8) = r15;\n        goto label_1;\nlabel_19:\n        r12d = 0x65;\n        r14d = 0x64;\n        r13d = \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\";\nlabel_14:\n        rax = malloc (0x73);\n    } while (rax == 0);\n    memcpy (rbp, r13, r14);\n    *((rbp + r14)) = 0x2f;\n    do {\n        r12 += rbp;\n        rax = 0x2e74657372616863;\n        *(r12) = rax;\n        eax = 0x73;\n        *((r12 + 0xc)) = ax;\n        eax = 0;\n        *((r12 + 8)) = 0x61696c61;\n        eax = open (rbp, 0, rdx);\n        r12d = eax;\n        if (eax >= 0) {\n            goto label_22;\n        }\nlabel_6:\n        r15d = 0x40fbbc;\nlabel_7:\n        free (rbp);\n        goto label_2;\nlabel_21:\n        eax = memcpy (rbp, r13, r14);\n    } while (1);\nlabel_22:\n    esi = 0x40c2f5;\n    edi = eax;\n    r15d = 0;\n    rax = fdopen ();\n    *((rsp + 8)) = 0;\n    r13 = rax;\n    if (rax == 0) {\n        goto label_23;\n    }\n    rax = rbx;\n    r12 = rsp + 0x60;\n    r14 = rsp + 0x20;\n    rbx = r13;\n    r13 = rax;\n    do {\nlabel_3:\n        rax = *((rbx + 8));\n        if (rax >= *((rbx + 0x10))) {\n            goto label_24;\n        }\nlabel_4:\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        edi = *(rax);\nlabel_5:\n        eax = rdi - 9;\n    } while (eax <= 1);\n    if (edi == 0x20) {\n        goto label_3;\n    }\n    if (edi == 0x23) {\n        goto label_25;\n    }\n    eax = ungetc (rdi, rbx);\n    eax = 0;\n    rcx = r12;\n    rdx = r14;\n    eax = fscanf (rbx, \"%50s %50s\");\n    if (eax <= 1) {\n        goto label_12;\n    }\n    rcx = r14;\n    do {\n        edx = *(rcx);\n        rcx += 4;\n        eax = rdx - 0x1010101;\n        edx = ~edx;\n        eax &= edx;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    edx = eax;\n    edx >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = edx;\n    }\n    rdx = rcx + 2;\n    if ((eax & 0x8080) == 0) {\n        rcx = rdx;\n    }\n    edx = eax;\n    dl += al;\n    rdx = r12;\n    rcx -= 3;\n    rcx -= r14;\n    do {\n        esi = *(rdx);\n        rdx += 4;\n        eax = rsi - 0x1010101;\n        esi = ~esi;\n        eax &= esi;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    esi = eax;\n    *((rsp + 0x10)) = rcx;\n    esi >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = esi;\n    }\n    rsi = rdx + 2;\n    if ((eax & 0x8080) == 0) {\n        rdx = rsi;\n    }\n    esi = eax;\n    sil += al;\n    rdx -= 3;\n    rdx -= r12;\n    rax = rcx + rdx;\n    *((rsp + 0x18)) = rdx;\n    if (*((rsp + 8)) != 0) {\n        goto label_26;\n    }\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    rax = malloc (rax + 3);\n    rcx = *((rsp + 0x10));\n    rdx = *((rsp + 0x18));\nlabel_9:\n    if (rax == 0) {\n        goto label_27;\n    }\n    rdi = *((rsp + 8));\n    rsi = 0xfffffffffffffffe;\n    rsi -= rcx;\n    rcx++;\n    rdi -= rdx;\n    rsi += rdi;\n    rsi += rax;\n    if (ecx >= 8) {\n        goto label_28;\n    }\n    if ((cl & 4) != 0) {\n        goto label_29;\n    }\n    if (ecx != 0) {\n        r9d = *(r14);\n        *(rsi) = r9b;\n        if ((cl & 2) != 0) {\n            goto label_30;\n        }\n    }\nlabel_10:\n    rdx++;\n    rcx = rax + rdi - 1;\n    if (edx >= 8) {\n        goto label_31;\n    }\n    if ((dl & 4) != 0) {\n        goto label_32;\n    }\n    if (edx != 0) {\n        esi = *(r12);\n        *(rcx) = sil;\n        if ((dl & 2) != 0) {\n            goto label_33;\n        }\n    }\nlabel_11:\n    r15 = rax;\n    rax = *((rbx + 8));\n    if (rax < *((rbx + 0x10))) {\n        goto label_4;\n    }\nlabel_24:\n    rdi = rbx;\n    eax = uflow ();\n    edi = eax;\n    if (eax != 0xffffffff) {\n        goto label_5;\n    }\nlabel_12:\n    rax = r13;\n    r13 = rbx;\n    rbx = rax;\n    fcn_00408120 (rbx);\n    rax = *((rsp + 8));\n    if (rax == 0) {\n        goto label_6;\n    }\n    *((r15 + rax)) = 0;\n    goto label_7;\n    do {\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        eax = *(rax);\n        edx = 1;\nlabel_8:\n        if (eax == 0xa) {\n            goto label_34;\n        }\n        if (dl == 0) {\n            goto label_34;\n        }\nlabel_25:\n        rax = *((rbx + 8));\n    } while (rax < *((rbx + 0x10)));\n    rdi = rbx;\n    eax = uflow ();\n    dl = (eax != 0xffffffff) ? 1 : 0;\n    goto label_8;\nlabel_26:\n    rax += *((rsp + 8));\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    eax = realloc (r15, rax + 3);\n    rdx = *((rsp + 0x18));\n    rcx = *((rsp + 0x10));\n    goto label_9;\nlabel_28:\n    r9 = *(r14);\n    *(rsi) = r9;\n    r9d = ecx;\n    r10 = *((r14 + r9 - 8));\n    *((rsi + r9 - 8)) = r10;\n    r9 = rsi + 8;\n    r10 = r14;\n    r9 &= 0xfffffffffffffff8;\n    rsi -= r9;\n    ecx += esi;\n    r10 -= rsi;\n    ecx &= 0xfffffff8;\n    if (ecx < 8) {\n        goto label_10;\n    }\n    ecx &= 0xfffffff8;\n    esi = 0;\n    do {\n        r8d = esi;\n        esi += 8;\n        r11 = *((r10 + r8));\n        *((r9 + r8)) = r11;\n    } while (esi < ecx);\n    goto label_10;\nlabel_31:\n    rsi = *(r12);\n    r9 = r12;\n    *(rcx) = rsi;\n    esi = edx;\n    rdi = *((r12 + rsi - 8));\n    *((rcx + rsi - 8)) = rdi;\n    rdi = rcx + 8;\n    rdi &= 0xfffffffffffffff8;\n    rcx -= rdi;\n    edx += ecx;\n    r9 -= rcx;\n    edx &= 0xfffffff8;\n    if (edx < 8) {\n        goto label_11;\n    }\n    edx &= 0xfffffff8;\n    ecx = 0;\n    do {\n        esi = ecx;\n        ecx += 8;\n        r8 = *((r9 + rsi));\n        *((rdi + rsi)) = r8;\n    } while (ecx < edx);\n    goto label_11;\nlabel_34:\n    if (eax == 0xffffffff) {\n        goto label_12;\n    }\n    goto label_3;\nlabel_20:\n    if (*((r13 + rax - 1)) == 0x2f) {\n        rdi = rax + 0xe;\n        goto label_13;\nlabel_23:\n        close (r12d);\n        goto label_6;\nlabel_29:\n        r9d = *(r14);\n        *(rsi) = r9d;\n        r9d = *((r14 + rcx - 4));\n        *((rsi + rcx - 4)) = r9d;\n        goto label_10;\nlabel_32:\n        esi = *(r12);\n        *(rcx) = esi;\n        esi = *((r12 + rdx - 4));\n        *((rcx + rdx - 4)) = esi;\n        goto label_11;\nlabel_27:\n        rax = r13;\n        r13 = rbx;\n        r15d = 0x40fbbc;\n        rbx = rax;\n        free (r15);\n        fcn_00408120 (r13);\n        goto label_7;\nlabel_30:\n        r9d = *((r14 + rcx - 2));\n        *((rsi + rcx - 2)) = r9w;\n        goto label_10;\nlabel_33:\n        esi = edx;\n        edx = *((r12 + rsi - 2));\n        *((rcx + rsi - 2)) = dx;\n        goto label_11;\n    }\n    rdi = rax + 0xf;\n    r12++;\n    goto label_14;\n}\n"
        },
        {
            "funcName": "fcn_004097a0",
            "funcStartAddr": "0x4097a0",
            "funcEndAddr": "0x4097a4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x4097a0 */\n#include <stdint.h>\n \nvoid fcn_004097a0 (int64_t arg1) {\n    rdi = arg1;\n    *(rdi) |= 0x20;\n}\n"
        },
        {
            "funcName": "fcn_004097b0",
            "funcStartAddr": "0x4097b0",
            "funcEndAddr": "0x412ea6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x4097b0 */\n#include <stdint.h>\n \nuint64_t fcn_004097b0 (uint32_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_6ech;\n    char ** var_6e8h;\n    char ** var_6e0h;\n    int64_t var_6d8h;\n    int64_t var_6d0h;\n    char ** var_6c8h;\n    void * var_6c0h;\n    uint32_t var_6b8h;\n    char ** var_6b0h;\n    void * var_6a8h;\n    char ** var_6a0h;\n    uint32_t var_690h;\n    uint32_t var_688h;\n    int64_t var_67ch;\n    int64_t var_678h;\n    int64_t var_674h;\n    int64_t var_670h;\n    int64_t var_668h;\n    uint32_t var_580h;\n    int64_t var_578h;\n    int64_t var_570h;\n    int64_t var_568h;\n    int64_t var_2f0h;\n    int64_t var_28h;\n    int64_t var_fh;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\nlabel_1:\n    abort ();\n    r15 = rdx;\n    rbx = rcx;\n    *((rbp - 0x688)) = rdi;\n    *((rbp - 0x6d0)) = rsi;\n    eax = fcn_0040b4f0 (r15, rbp - 0x580, rbp - 0x670);\n    if (eax < 0) {\n        goto label_58;\n    }\n    eax = fcn_0040b2d0 (rbx, rbp - 0x670);\n    if (eax < 0) {\n        goto label_59;\n    }\n    rax = *((rbp - 0x570));\n    rdx = 0xffffffffffffffff;\n    rax += 7;\n    if (rax <= 6) {\n        rax = rdx;\n    }\n    rax += *((rbp - 0x568));\n    if (rax < 0) {\n        goto label_60;\n    }\n    rdi = rax;\n    rdi += 6;\n    if (rdi < 0) {\n        goto label_60;\n    }\n    if (rdi <= 0xf9f) {\n        goto label_61;\n    }\n    if (rdi == -1) {\n        goto label_60;\n    }\n    rax = malloc (rdi);\n    *((rbp - 0x6a8)) = rax;\n    if (rax == 0) {\n        goto label_60;\n    }\n    *((rbp - 0x6d8)) = rax;\n    do {\n        r12d = 0;\n        if (*((rbp - 0x688)) != 0) {\n            rax = *((rbp - 0x6d0));\n            r12 = *(rax);\n        }\n        r14 = *((rbp - 0x578));\n        r13d = 0;\n        r8 = r15;\n        rbx = *((rbp - 0x688));\n        *((rbp - 0x6b8)) = 0;\n        r15 = r13;\n        rcx = *(r14);\n        if (rcx == r8) {\n            goto label_62;\n        }\nlabel_2:\n        rcx -= r8;\n        rax = r15;\n        rax += rcx;\n        r13 = rax;\n        if (rax < 0) {\n            goto label_63;\n        }\n        if (r12 >= rax) {\n            goto label_6;\n        }\n        if (r12 != 0) {\n            goto label_64;\n        }\n        if (rax > 0xc) {\n            goto label_65;\n        }\n        r12d = 0xc;\n        dl = (rbx == *((rbp - 0x688))) ? 1 : 0;\n        if (rbx != 0) {\n            goto label_66;\n        }\nlabel_0:\n        *((rbp - 0x6b0)) = r8;\n        *((rbp - 0x6a0)) = dl;\n        *((rbp - 0x690)) = rcx;\n        rax = malloc (r12);\n        rcx = *((rbp - 0x690));\n        edx = *((rbp - 0x6a0));\n        r9 = rax;\n        r8 = *((rbp - 0x6b0));\n        if (rax == 0) {\n            goto label_5;\n        }\n        if (r15 == 0) {\n            goto label_67;\n        }\n        if (dl == 0) {\n            goto label_67;\n        }\n        *((rbp - 0x6a0)) = r8;\n        *((rbp - 0x690)) = rcx;\n        rax = memcpy (rax, rbx, r15);\n        rcx = *((rbp - 0x690));\n        r8 = *((rbp - 0x6a0));\n        rbx = rax;\n        goto label_6;\nlabel_61:\n        *((rbp - 0x6d8)) = 0;\n        rax += 0x1d;\n        rax &= 0xfffffffffffffff0;\n        rax = rsp + 0xf;\n        rax &= 0xfffffffffffffff0;\n        *((rbp - 0x6a8)) = rax;\n    } while (1);\n    if (rax < 0) {\nlabel_64:\n        goto label_5;\n    }\n    r12 += r12;\n    if (r12 < rax) {\nlabel_65:\n        if (rax == -1) {\n            goto label_5;\n        }\n        r12 = rax;\n    }\n    dl = (rbx == *((rbp - 0x688))) ? 1 : 0;\n    if (rbx == 0) {\n        goto label_0;\n    }\nlabel_66:\n    if (dl != 0) {\n        goto label_0;\n    }\n    *((rbp - 0x6a0)) = r8;\n    *((rbp - 0x690)) = rcx;\n    rax = realloc (rbx, r12);\n    if (rax == 0) {\n        goto label_37;\n    }\n    rcx = *((rbp - 0x690));\n    r8 = *((rbp - 0x6a0));\n    rbx = rax;\nlabel_6:\n    memcpy (rbx + r15, r8, rcx);\nlabel_3:\n    rax = *((rbp - 0x6b8));\n    if (*((rbp - 0x580)) == rax) {\n        goto label_68;\n    }\n    r15d = *((r14 + 0x48));\n    rax = *((r14 + 0x50));\n    if (r15b == 0x25) {\n        goto label_69;\n    }\n    if (rax == -1) {\n        goto label_34;\n    }\n    r8 = *((rbp - 0x668));\n    rax <<= 5;\n    rdx = r8 + rax;\n    eax = *(rdx);\n    *((rbp - 0x690)) = eax;\n    if (r15b == 0x6e) {\n        goto label_70;\n    }\n    eax = r15d;\n    eax &= 0xffffffdf;\n    ecx = rax - 0x45;\n    if (cl > 2) {\n        if (al != 0x41) {\n            goto label_71;\n        }\n    }\n    if (*((rbp - 0x690)) == 0xc) {\n        goto label_72;\n    }\n    goto label_71;\nlabel_8:\n    fp_stack++;\n    goto label_71;\nlabel_9:\n    fp_stack++;\nlabel_71:\n    rsi = *((rbp - 0x6a8));\n    eax = *((r14 + 0x10));\n    r15 = rsi + 1;\n    *(rsi) = 0x25;\n    if ((al & 1) != 0) {\n        rdi = *((rbp - 0x6a8));\n        *((rdi + 1)) = 0x27;\n        r15 = rdi + 2;\n    }\n    if ((al & 2) != 0) {\n        *(r15) = 0x2d;\n        r15++;\n    }\n    if ((al & 4) != 0) {\n        *(r15) = 0x2b;\n        r15++;\n    }\n    if ((al & 8) != 0) {\n        *(r15) = 0x20;\n        r15++;\n    }\n    if ((al & 0x10) != 0) {\n        *(r15) = 0x23;\n        r15++;\n    }\n    if ((al & 0x40) != 0) {\n        *(r15) = 0x49;\n        r15++;\n    }\n    if ((al & 0x20) != 0) {\n        *(r15) = 0x30;\n        r15++;\n    }\n    rsi = *((r14 + 0x18));\n    rdx = *((r14 + 0x20));\n    if (rsi != rdx) {\n        rcx = rdx;\n        *((rbp - 0x6b0)) = r8;\n        rcx -= rsi;\n        rdx = rcx;\n        *((rbp - 0x6a0)) = rcx;\n        memcpy (r15, rsi, rdx);\n        rcx = *((rbp - 0x6a0));\n        r8 = *((rbp - 0x6b0));\n        r15 += rcx;\n    }\n    rsi = *((r14 + 0x30));\n    rdx = *((r14 + 0x38));\n    if (rsi != rdx) {\n        rcx = rdx;\n        *((rbp - 0x6b0)) = r8;\n        rcx -= rsi;\n        rdx = rcx;\n        *((rbp - 0x6a0)) = rcx;\n        memcpy (r15, rsi, rdx);\n        rcx = *((rbp - 0x6a0));\n        r8 = *((rbp - 0x6b0));\n        r15 += rcx;\n    }\n    esi = *((rbp - 0x690));\n    if (esi <= 0x10) {\n        eax = 1;\n        ecx = esi;\n        rax <<= cl;\n        if ((eax & 0x14180) != 0) {\n            goto label_73;\n        }\n        if ((ah & 0x10) != 0) {\n            goto label_74;\n        }\n        if ((ah & 6) != 0) {\n            goto label_75;\n        }\n    }\nlabel_12:\n    eax = *((r14 + 0x48));\n    *((r15 + 1)) = 0;\n    *(r15) = al;\n    rax = *((r14 + 0x28));\n    if (rax == -1) {\n        goto label_76;\n    }\n    rax <<= 5;\n    rax += r8;\n    if (*(rax) != 5) {\n        goto label_34;\n    }\n    *((rbp - 0x6b0)) = 1;\n    eax = *((rax + 0x10));\n    *((rbp - 0x678)) = eax;\nlabel_28:\n    rax = *((r14 + 0x40));\n    if (rax != -1) {\n        rax <<= 5;\n        r8 += rax;\n        if (*(r8) != 5) {\n            goto label_34;\n        }\n        eax = *((rbp - 0x6b0));\n        edx = *((r8 + 0x10));\n        *((rbp + rax*4 - 0x678)) = edx;\n        eax = rax + 1;\n        *((rbp - 0x6b0)) = eax;\n    }\n    rax = r13;\n    rax += 2;\n    if (rax < 0) {\n        goto label_77;\n    }\n    if (r12 >= rax) {\n        goto label_78;\n    }\n    if (r12 != 0) {\n        goto label_79;\n    }\n    if (rax > 0xc) {\n        goto label_80;\n    }\n    r12d = 0xc;\nlabel_20:\n    dl = (rbx == *((rbp - 0x688))) ? 1 : 0;\n    if (rbx == 0) {\n        goto label_81;\n    }\n    if (dl != 0) {\n        goto label_81;\n    }\n    rax = realloc (rbx, r12);\n    r11 = rax;\n    if (rax == 0) {\n        goto label_5;\n    }\nlabel_30:\n    *((r11 + r13)) = 0;\n    *((rbp - 0x6c0)) = r11;\n    rax = errno_location ();\n    r11 = *((rbp - 0x6c0));\n    *((rbp - 0x6c0)) = r15;\n    *((rbp - 0x6a0)) = rax;\n    eax = *(rax);\n    *((rbp - 0x6e0)) = eax;\nlabel_14:\n    rax = *((rbp - 0x6a0));\n    r15 = r12;\n    ebx = 0x7fffffff;\n    *((rbp - 0x67c)) = 0xffffffff;\n    r15 -= r13;\n    *(rax) = 0;\n    eax = *((rbp - 0x690));\n    if (r15 <= 0x7fffffff) {\n        rbx = r15;\n    }\n    if (eax > 0x11) {\n        goto label_1;\n    }\n    /* switch table (18 cases) at 0x40fc58 */\nlabel_43:\n    if (rdi != rdx) {\n        goto label_82;\n    }\nlabel_42:\n    r10 = rcx;\nlabel_10:\n    rdx = *((r14 + 0x30));\n    rcx = *((r14 + 0x38));\n    if (rdx == rcx) {\n        goto label_83;\n    }\n    rsi = *((r14 + 0x40));\n    if (rsi == -1) {\n        goto label_84;\n    }\n    rsi <<= 5;\n    r8 += rsi;\n    if (*(r8) != 5) {\n        goto label_85;\n    }\n    rdx = *((r8 + 0x10));\n    if (edx < 0) {\n        goto label_83;\n    }\nlabel_44:\n    if (rdx == 0) {\n        goto label_86;\n    }\n    rax = rdx;\n    rax += 0xc;\n    rcx = rax;\n    if (rax >= 0) {\n        goto label_51;\n    }\n    fp_stack++;\n    goto label_5;\nlabel_21:\n    fp_stack++;\n    goto label_5;\nlabel_22:\n    fp_stack++;\n    goto label_5;\nlabel_46:\n    fp_stack++;\n    goto label_5;\nlabel_47:\n    fp_stack++;\nlabel_5:\n    rax = errno_location ();\n    r15 = rbx;\n    *((rbp - 0x6a0)) = rax;\nlabel_23:\n    if (r15 != *((rbp - 0x688))) {\n        if (r15 != 0) {\n            goto label_87;\n        }\n    }\nlabel_13:\n    rax = *((rbp - 0x6d8));\n    if (rax == 0) {\n        goto label_60;\n    }\n    free (rax);\nlabel_4:\n    rax = rbp - 0x580;\n    rdi = *((rbp - 0x578));\n    rax += 0x20;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = rbp - 0x670;\n    rdi = *((rbp - 0x668));\n    rax += 0x10;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = *((rbp - 0x6a0));\n    ebx = 0;\n    *(rax) = 0xc;\nlabel_7:\n    rsp = rbp - 0x28;\n    rax = rbx;\n    return rax;\nlabel_69:\n    if (rax != -1) {\n        goto label_34;\n    }\n    rax = r13;\n    rax++;\n    r15 = rax;\n    if (rax < 0) {\n        goto label_88;\n    }\n    if (r12 < rax) {\n        if (r12 != 0) {\n            goto label_89;\n        }\n        if (rax > 0xc) {\n            goto label_90;\n        }\n        r12d = 0xc;\nlabel_31:\n        dl = (rbx == *((rbp - 0x688))) ? 1 : 0;\n        if (rbx == 0) {\n            goto label_91;\n        }\n        if (dl != 0) {\n            goto label_91;\n        }\n        rax = realloc (rbx, r12);\n        if (rax == 0) {\n            goto label_37;\n        }\n        rbx = rax;\n    }\nlabel_29:\n    *((rbx + r13)) = 0x25;\nlabel_11:\n    r8 = *((r14 + 8));\n    r14 += 0x58;\n    rcx = *(r14);\n    *((rbp - 0x6b8))++;\n    if (rcx != r8) {\n        goto label_2;\n    }\nlabel_62:\n    r13 = r15;\n    goto label_3;\nlabel_60:\n    rax = errno_location ();\n    *((rbp - 0x6a0)) = rax;\n    goto label_4;\nlabel_63:\n    if (r12 != -1) {\n        goto label_5;\n    }\n    r13 = 0xffffffffffffffff;\n    goto label_6;\nlabel_70:\n    eax -= 0x12;\n    if (eax > 4) {\n        goto label_1;\n    }\n    /* switch table (5 cases) at 0x40fce8 */\nlabel_58:\n    ebx = 0;\n    goto label_7;\nlabel_72:\n    *(fp_stack--) = fp_stack[?];\n    if (fp_stack[0] == fp_stack[0]) {\n        goto label_92;\n    }\n    *(fp_stack--) = fp_stack[0];\n    fp_stack[0] += fp_stack[1];\n    fp_tmp_0 = fp_stack[1];\n    fp_stack[1] = fp_stack[0];\n    fp_stack[0] = fp_tmp_0;\n    fp_stack[1] = fp_stack[0];\n    fp_stack--;\n    if (fp_stack[0] == fp_stack[1]) {\n        goto label_8;\n    }\n    if (fp_stack[0] != fp_stack[1]) {\n        goto label_9;\n    }\nlabel_92:\n    rdx = *((r14 + 0x18));\n    rdi = *((r14 + 0x20));\n    r11d = *((r14 + 0x10));\n    if (rdx == rdi) {\n        goto label_93;\n    }\n    rcx = *((r14 + 0x28));\n    if (rcx == -1) {\n        goto label_94;\n    }\n    rcx <<= 5;\n    rcx += r8;\n    if (*(rcx) != 5) {\n        goto label_95;\n    }\n    r10 = *((rcx + 0x10));\n    if (r10d >= 0) {\n        goto label_10;\n    }\n    r11d |= 2;\n    r10 = -r10;\n    goto label_10;\n    rax = *((rdx + 0x10));\n    r15 = r13;\n    *(rax) = r13;\n    goto label_11;\nlabel_75:\n    *(r15) = 0x6c;\n    r15++;\nlabel_73:\n    *(r15) = 0x6c;\n    r15++;\n    goto label_12;\nlabel_37:\n    rax = errno_location ();\n    r15 = rbx;\n    *((rbp - 0x6a0)) = rax;\nlabel_87:\n    free (r15);\n    goto label_13;\n    rax = *((r14 + 0x50));\n    rdi = r11 + r13;\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    r9 = *((rax + 0x10));\n    eax = *((rbp - 0x6b0));\n    *((rbp - 0x6c8)) = r11;\n    if (eax == 1) {\n        goto label_96;\n    }\n    if (eax == 2) {\n        goto label_97;\n    }\n    rax = rbp - 0x67c;\nlabel_17:\n    r8 = *((rbp - 0x6a8));\n    rsi = rbx;\n    edx = 1;\n    eax = 0;\n    rcx = 0xffffffffffffffff;\n    eax = snprintf_chk ();\n    r11 = *((rbp - 0x6c8));\nlabel_19:\n    edx = *((rbp - 0x67c));\n    if (edx < 0) {\n        goto label_98;\n    }\nlabel_15:\n    rcx = (int64_t) edx;\n    if (rcx < rbx) {\n        rcx += r11;\n        if (*((rcx + r13)) != 0) {\n            goto label_34;\n        }\n    }\n    if (edx < eax) {\nlabel_16:\n        *((rbp - 0x67c)) = eax;\n        edx = eax;\n    }\n    eax = rdx + 1;\n    if (rax < rbx) {\n        goto label_99;\n    }\n    if (r15 > 0x7ffffffe) {\n        goto label_100;\n    }\n    eax = rdx + 2;\n    ecx = 0;\n    rax += r13;\n    cl = (rax < 0) ? 1 : 0;\n    if (r12 < 0) {\n        goto label_101;\n    }\n    rdx = r12 + r12;\n    if (rcx != 0) {\n        goto label_24;\n    }\n    if (rdx >= rax) {\n        rax = rdx;\n    }\n    if (r12 >= rax) {\n        goto label_14;\n    }\n    r12 += r12;\n    if (r12 < rax) {\n        goto label_102;\n    }\nlabel_25:\n    bl = (r11 == *((rbp - 0x688))) ? 1 : 0;\n    if (r11 == 0) {\n        goto label_103;\n    }\n    if (bl != 0) {\n        goto label_103;\n    }\n    rdi = r11;\n    *((rbp - 0x6c8)) = r11;\n    rax = realloc (rdi, r12);\n    r11 = *((rbp - 0x6c8));\n    if (rax == 0) {\n        goto label_24;\n    }\n    r11 = rax;\n    goto label_14;\n    rax = *((r14 + 0x50));\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    r9d = *((rax + 0x10));\nlabel_18:\n    eax = *((rbp - 0x6b0));\n    rdi = r11 + r13;\n    *((rbp - 0x6c8)) = r11;\n    if (eax == 1) {\n        goto label_104;\n    }\n    if (eax == 2) {\n        goto label_105;\n    }\n    rax = rbp - 0x67c;\nlabel_26:\n    r8 = *((rbp - 0x6a8));\n    rcx = 0xffffffffffffffff;\n    rsi = rbx;\n    eax = 0;\n    edx = 1;\n    eax = snprintf_chk ();\n    edx = *((rbp - 0x67c));\n    r11 = *((rbp - 0x6c8));\n    if (edx >= 0) {\n        goto label_15;\n    }\nlabel_98:\n    rsi = *((rbp - 0x6c0));\n    if (*((rsi + 1)) != 0) {\n        goto label_106;\n    }\n    if (eax >= 0) {\n        goto label_16;\n    }\n    rax = *((rbp - 0x6a0));\n    r15 = r11;\n    ebx = *(rax);\n    if (ebx == 0) {\n        eax = *((r14 + 0x48));\n        ebx = 0x54;\n        eax &= 0xffffffef;\n        eax = 0x16;\n        if (al == 0x63) {\n            ebx = eax;\n            goto label_107;\n        }\n    }\nlabel_107:\n    if (r15 != *((rbp - 0x688))) {\n        if (r15 == 0) {\n            goto label_108;\n        }\n        free (r15);\n    }\nlabel_108:\n    rax = *((rbp - 0x6d8));\n    if (rax != 0) {\n        free (rax);\n    }\n    rax = rbp - 0x580;\n    rdi = *((rbp - 0x578));\n    rax += 0x20;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = rbp - 0x670;\n    rdi = *((rbp - 0x668));\n    rax += 0x10;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = *((rbp - 0x6a0));\n    *(rax) = ebx;\n    ebx = 0;\n    goto label_7;\n    rax = *((r14 + 0x50));\n    rdi = r11 + r13;\n    *((rbp - 0x6c8)) = r11;\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    *(fp_stack--) = fp_stack[?];\n    eax = *((rbp - 0x6b0));\n    if (eax == 1) {\n        goto label_109;\n    }\n    if (eax == 2) {\n        goto label_110;\n    }\n    r9 = rbp - 0x67c;\n    ? = fp_stack[0];\n    fp_stack--;\n    goto label_17;\n    rax = *((r14 + 0x50));\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    r9d = *((rax + 0x10));\n    goto label_18;\n    rax = *((r14 + 0x50));\n    rdi = r11 + r13;\n    *((rbp - 0x6c8)) = r11;\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    xmm0 = *((rax + 0x10));\n    eax = *((rbp - 0x6b0));\n    if (eax == 1) {\n        goto label_111;\n    }\n    if (eax == 2) {\n        goto label_112;\n    }\n    r8 = *((rbp - 0x6a8));\n    r9 = rbp - 0x67c;\n    edx = 1;\n    rsi = rbx;\n    rcx = 0xffffffffffffffff;\n    eax = 1;\n    snprintf_chk ();\n    r11 = *((rbp - 0x6c8));\n    goto label_19;\n    rax = *((r14 + 0x50));\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    r9d = *((rax + 0x10));\n    goto label_18;\n    rax = *((r14 + 0x50));\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    r9d = *((rax + 0x10));\n    goto label_18;\n    rax = *((r14 + 0x50));\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    r9d = *((rax + 0x10));\n    goto label_18;\n    if (rax < 0) {\nlabel_79:\n        goto label_5;\n    }\n    r12 += r12;\n    if (r12 >= rax) {\n        goto label_20;\n    }\nlabel_80:\n    if (rax == -1) {\n        goto label_5;\n    }\n    r12 = rax;\n    goto label_20;\n    rax = *((rdx + 0x10));\n    r15 = r13;\n    *(rax) = r13d;\n    goto label_11;\n    rax = *((rdx + 0x10));\n    r15 = r13;\n    *(rax) = r13w;\n    goto label_11;\n    rax = *((rdx + 0x10));\n    r15 = r13;\n    *(rax) = r13b;\n    goto label_11;\nlabel_83:\n    edx = 0x12;\n    ecx = 0xc;\n    eax = 6;\n    if (al != 0x41) {\n        rcx = rdx;\n    }\n    edx = 0;\n    if (al != 0x41) {\n        rdx = rax;\n    }\nlabel_51:\n    rax = rcx;\n    if (r10 >= rcx) {\n        rax = r10;\n    }\n    rax++;\n    *((rbp - 0x690)) = rax;\n    if (rax < 0) {\n        goto label_21;\n    }\n    if (rax <= 0x2bc) {\n        goto label_113;\n    }\n    *((rbp - 0x6c8)) = r10;\n    *((rbp - 0x6c0)) = rdx;\n    *((rbp - 0x6b0)) = r11d;\n    ? = fp_stack[0];\n    fp_stack--;\n    if (rax == -1) {\n        goto label_5;\n    }\n    rax = malloc (rax);\n    r11d = *((rbp - 0x6b0));\n    *(fp_stack--) = fp_stack[?];\n    rcx = rax;\n    rdx = *((rbp - 0x6c0));\n    r10 = *((rbp - 0x6c8));\n    if (rax == 0) {\n        goto label_22;\n    }\nlabel_33:\n    if (fp_stack[0] == fp_stack[0]) {\n        goto label_114;\n    }\n    r8d = *((rbp - 0x678));\n    eax = r8d;\n    ah |= 3;\n    *((rbp - 0x678)) = ax;\n    __asm (\"fxam\");\n    ax = fp_status;\n    if ((ah & 2) == 0) {\n        goto label_115;\n    }\n    *(rcx) = 0x2d;\n    fp_stack[0] = -fp_stack[0];\n    r15 = rcx + 1;\nlabel_35:\n    *(fp_stack--) = 0.0;\n    fp_tmp_1 = fp_stack[1];\n    fp_stack[1] = fp_stack[0];\n    fp_stack[0] = fp_tmp_1;\n    if (fp_stack[0] <= fp_stack[1]) {\n        goto label_116;\n    }\n    fp_stack[1] = fp_stack[0];\n    fp_stack--;\n    *(fp_stack--) = fp_stack[0];\n    fp_stack[0] += fp_stack[1];\n    __asm (\"fucompi st(1)\");\n    fp_stack++;\n    if (fp_stack[0] != fp_stack[1]) {\n        goto label_117;\n    }\n    goto label_34;\nlabel_85:\n    fp_stack++;\n    goto label_34;\nlabel_95:\n    fp_stack++;\nlabel_34:\n    abort ();\nlabel_101:\n    if (r12 == -1) {\n        goto label_14;\n    }\n    do {\nlabel_24:\n        r15 = r11;\n        goto label_23;\nlabel_103:\n        *((rbp - 0x6c8)) = r11;\n        rax = malloc (r12);\n        r11 = *((rbp - 0x6c8));\n        rcx = rax;\n    } while (rax == 0);\n    if (r13 == 0) {\n        goto label_118;\n    }\n    if (bl == 0) {\n        goto label_118;\n    }\n    rax = memcpy (rax, r11, r13);\n    r11 = rax;\n    goto label_14;\nlabel_102:\n    if (rax == -1) {\n        goto label_24;\n    }\n    r12 = rax;\n    goto label_25;\nlabel_105:\n    rax = rbp - 0x67c;\n    do {\n        eax = *((rbp - 0x674));\nlabel_32:\n        r9d = *((rbp - 0x678));\n        edx = 1;\n        rsi = rbx;\n        eax = 0;\n        r8 = *((rbp - 0x6a8));\n        rcx = 0xffffffffffffffff;\n        snprintf_chk ();\n        r11 = *((rbp - 0x6c8));\n        goto label_19;\nlabel_104:\n        rax = rbp - 0x67c;\nlabel_27:\n        r9d = *((rbp - 0x678));\n        goto label_26;\nlabel_97:\n        rax = rbp - 0x67c;\n    } while (1);\nlabel_96:\n    rax = rbp - 0x67c;\n    goto label_27;\nlabel_106:\n    *((rsi + 1)) = 0;\n    goto label_14;\nlabel_118:\n    r11 = rcx;\n    goto label_14;\nlabel_76:\n    *((rbp - 0x6b0)) = 0;\n    goto label_28;\nlabel_88:\n    if (r12 != -1) {\n        goto label_5;\n    }\n    r15 = 0xffffffffffffffff;\n    goto label_29;\nlabel_81:\n    *((rbp - 0x6a0)) = dl;\n    rax = malloc (r12);\n    edx = *((rbp - 0x6a0));\n    r11 = rax;\n    if (rax == 0) {\n        goto label_5;\n    }\n    if (r13 == 0) {\n        goto label_30;\n    }\n    if (dl == 0) {\n        goto label_30;\n    }\n    rax = memcpy (rax, rbx, r13);\n    r11 = rax;\n    goto label_30;\nlabel_77:\n    if (r12 != -1) {\n        goto label_5;\n    }\nlabel_78:\n    r11 = rbx;\n    goto label_30;\nlabel_91:\n    *((rbp - 0x690)) = dl;\n    rax = malloc (r12);\n    edx = *((rbp - 0x690));\n    rcx = rax;\n    if (rax == 0) {\n        goto label_5;\n    }\n    if (r13 == 0) {\n        goto label_119;\n    }\n    if (dl == 0) {\n        goto label_119;\n    }\n    rax = memcpy (rax, rbx, r13);\n    rbx = rax;\n    goto label_29;\nlabel_67:\n    rbx = r9;\n    goto label_6;\nlabel_59:\n    rax = rbp - 0x580;\n    rdi = *((rbp - 0x578));\n    rax += 0x20;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = rbp - 0x670;\n    rdi = *((rbp - 0x668));\n    rax += 0x10;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    errno_location ();\n    ebx = 0;\n    *(rax) = 0x16;\n    goto label_7;\n    if (rdi < rax) {\nlabel_89:\n        goto label_5;\n    }\n    r12 += r12;\n    if (r12 >= rax) {\n        goto label_31;\n    }\nlabel_90:\n    if (rax == -1) {\n        goto label_5;\n    }\n    r12 = rax;\n    goto label_31;\nlabel_74:\n    *(r15) = 0x4c;\n    r15++;\n    goto label_12;\nlabel_112:\n    rax = rbp - 0x67c;\n    eax = *((rbp - 0x674));\n    do {\n        r9d = *((rbp - 0x678));\n        r8 = *((rbp - 0x6a8));\n        edx = 1;\n        rsi = rbx;\n        rcx = 0xffffffffffffffff;\n        eax = 1;\n        snprintf_chk ();\n        r11 = *((rbp - 0x6c8));\n        goto label_19;\nlabel_111:\n        rax = rbp - 0x67c;\n    } while (1);\nlabel_110:\n    rax = rbp - 0x67c;\n    r9d = *((rbp - 0x678));\n    r8 = *((rbp - 0x6a8));\n    eax = *((rbp - 0x674));\n    edx = 1;\n    rsi = rbx;\n    rcx = 0xffffffffffffffff;\n    ? = fp_stack[0];\n    fp_stack--;\n    eax = 0;\n    snprintf_chk ();\n    r11 = *((rbp - 0x6c8));\n    goto label_19;\nlabel_109:\n    rax = rbp - 0x67c;\n    ? = fp_stack[0];\n    fp_stack--;\n    goto label_32;\nlabel_99:\n    rax = *((rbp - 0x6a0));\n    esi = *((rbp - 0x6e0));\n    r15 = (int64_t) edx;\n    rbx = r11;\n    r15 += r13;\n    *(rax) = esi;\n    goto label_11;\nlabel_100:\n    if (r11 != *((rbp - 0x688))) {\n        if (r11 == 0) {\n            goto label_120;\n        }\n        free (r11);\n    }\nlabel_120:\n    rax = *((rbp - 0x6d8));\n    if (rax != 0) {\n        free (rax);\n    }\n    rax = rbp - 0x580;\n    rdi = *((rbp - 0x578));\n    rax += 0x20;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = rbp - 0x670;\n    rdi = *((rbp - 0x668));\n    rax += 0x10;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = *((rbp - 0x6a0));\n    ebx = 0;\n    *(rax) = 0x4b;\n    goto label_7;\nlabel_113:\n    rcx = rbp - 0x2f0;\n    goto label_33;\nlabel_116:\n    __asm (\"fucompi st(1)\");\n    fp_stack++;\n    if (rdi == rax) {\n        goto label_34;\n    }\n    if (rdi != rax) {\n        goto label_34;\n    }\n    eax = *((r14 + 0x48));\n    eax &= 0xffffffdf;\n    if (al != 0x46) {\n        goto label_121;\n    }\n    *(r15) = 0x30;\n    if ((r11b & 0x10) != 0) {\n        goto label_122;\n    }\n    if (rdx != 0) {\n        goto label_122;\n    }\nlabel_40:\n    r9 = r15 + 1;\nlabel_36:\n    *((rbp - 0x678)) = r8w;\nlabel_50:\n    r8 = r9;\n    r8 -= rcx;\n    if (r10 <= r8) {\n        goto label_39;\n    }\n    r10 -= r8;\n    rdi = r9 + r10;\n    r8 = rdi;\n    r8 -= rcx;\n    if ((r11b & 2) != 0) {\n        goto label_123;\n    }\n    r11d &= 0x20;\n    if (r11d == 0) {\n        goto label_124;\n    }\n    if (r15 == 0) {\n        goto label_124;\n    }\n    if (r15 >= r9) {\n        goto label_125;\n    }\n    rdx = r15 - 1;\n    rax = 0xffffffffffffffff;\n    rdx -= r9;\n    do {\n        esi = *((r9 + rax));\n        *((rdi + rax)) = sil;\n        rax--;\n    } while (rax != rdx);\nlabel_56:\n    if (r10 == 0) {\n        goto label_39;\n    }\n    r10 += r15;\n    do {\n        r15++;\n        *((r15 - 1)) = 0x30;\n    } while (r15 != r10);\nlabel_39:\n    if (*((rbp - 0x690)) <= r8) {\n        goto label_34;\n    }\n    rdx = r12;\n    rax = r13;\n    esi = 0;\n    rdx -= r13;\n    rax += r8;\n    sil = (rax < 0) ? 1 : 0;\n    r15 = rax;\n    if (rdx > r8) {\n        goto label_38;\n    }\n    if (rsi != 0) {\n        goto label_126;\n    }\n    if (r12 >= rax) {\n        goto label_38;\n    }\n    if (r12 != 0) {\n        goto label_127;\n    }\n    if (rax > 0xc) {\n        goto label_128;\n    }\n    r12d = 0xc;\nlabel_49:\n    dl = (rbx == *((rbp - 0x688))) ? 1 : 0;\n    if (rbx == 0) {\n        goto label_129;\n    }\n    if (dl != 0) {\n        goto label_129;\n    }\n    *((rbp - 0x6a0)) = r8;\n    *((rbp - 0x690)) = rcx;\n    rax = realloc (rbx, r12);\n    if (rax == 0) {\n        goto label_5;\n    }\n    rcx = *((rbp - 0x690));\n    r8 = *((rbp - 0x6a0));\n    rbx = rax;\nlabel_38:\n    rsi = rcx;\n    *((rbp - 0x690)) = rcx;\n    memcpy (rbx + r13, rsi, r8);\n    rcx = *((rbp - 0x690));\n    rax = rbp - 0x2f0;\n    if (rcx == rax) {\n        goto label_11;\n    }\n    al = free (rcx);\n    goto label_11;\nlabel_115:\n    if ((r11b & 4) == 0) {\n        goto label_130;\n    }\n    r15 = rcx + 1;\n    *(rcx) = 0x2b;\n    goto label_35;\nlabel_119:\n    rbx = rcx;\n    goto label_29;\nlabel_121:\n    if (al != 0x45) {\n        goto label_131;\n    }\n    *(r15) = 0x30;\n    if ((r11b & 0x10) != 0) {\n        goto label_132;\n    }\n    rsi = r15 + 1;\n    al = (rdx != 0) ? 1 : 0;\n    if (al != 0) {\n        goto label_132;\n    }\nlabel_52:\n    eax = *((r14 + 0x48));\n    r9 = rsi + 4;\n    *((rsi + 3)) = 0x30;\n    *(rsi) = al;\n    eax = 0x302b;\n    *((rsi + 1)) = ax;\n    goto label_36;\nlabel_93:\n    r10d = 0;\n    goto label_10;\n    if (al != 0) {\nlabel_117:\n        goto label_34;\n    }\n    eax = *((r14 + 0x48));\n    r9 = r15 + 3;\n    eax -= 0x41;\n    if (al > 0x19) {\n        goto label_133;\n    }\n    eax = 0x4e49;\n    *((r15 + 2)) = 0x46;\n    *(r15) = ax;\n    r15d = 0;\n    goto label_36;\nlabel_68:\n    r14 = r13;\n    r15 = r13;\n    r14++;\n    if (r14 < 0) {\n        goto label_134;\n    }\n    if (r12 >= r14) {\n        goto label_53;\n    }\n    if (r12 != 0) {\n        goto label_135;\n    }\n    if (r14 > 0xc) {\n        goto label_136;\n    }\n    r12d = 0xc;\nlabel_54:\n    r13b = (rbx == *((rbp - 0x688))) ? 1 : 0;\n    if (rbx == 0) {\n        goto label_137;\n    }\n    if (r13b != 0) {\n        goto label_137;\n    }\n    rax = realloc (rbx, r12);\n    if (rax == 0) {\n        goto label_37;\n    }\n    rbx = rax;\nlabel_53:\n    *((rbx + r15)) = 0;\n    if (r12 > r14) {\n        if (rbx == *((rbp - 0x688))) {\n            goto label_138;\n        }\n        rax = realloc (rbx, r14);\n        if (rax == 0) {\n            rbx = rax;\n            goto label_138;\n        }\n    }\nlabel_138:\n    rax = *((rbp - 0x6d8));\n    if (rax != 0) {\n        free (rax);\n    }\n    rax = rbp - 0x580;\n    rdi = *((rbp - 0x578));\n    rax += 0x20;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = rbp - 0x670;\n    rdi = *((rbp - 0x668));\n    rax += 0x10;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = *((rbp - 0x6d0));\n    *(rax) = r15;\n    goto label_7;\nlabel_126:\n    if (r12 != -1) {\n        goto label_5;\n    }\n    goto label_38;\nlabel_130:\n    r15 = rcx;\n    if ((r11b & 8) == 0) {\n        goto label_35;\n    }\n    r15 = rcx + 1;\n    *(rcx) = 0x20;\n    goto label_35;\nlabel_124:\n    rdx = rcx - 1;\n    rax = 0xffffffffffffffff;\n    rdx -= r9;\n    if (rcx >= r9) {\n        goto label_139;\n    }\n    do {\n        esi = *((r9 + rax));\n        *((rdi + rax)) = sil;\n        rax--;\n    } while (rdx != rax);\n    r9 = rcx;\nlabel_139:\n    if (r10 == 0) {\n        goto label_39;\n    }\n    r10 += r9;\n    do {\n        r9++;\n        *((r9 - 1)) = 0x20;\n    } while (r9 != r10);\n    goto label_39;\nlabel_129:\n    *((rbp - 0x6b0)) = dl;\n    *((rbp - 0x6a0)) = r8;\n    *((rbp - 0x690)) = rcx;\n    rax = malloc (r12);\n    rcx = *((rbp - 0x690));\n    r8 = *((rbp - 0x6a0));\n    r9 = rax;\n    edx = *((rbp - 0x6b0));\n    if (rax == 0) {\n        goto label_5;\n    }\n    if (r13 == 0) {\n        goto label_140;\n    }\n    if (dl == 0) {\n        goto label_140;\n    }\n    *((rbp - 0x6a0)) = r8;\n    *((rbp - 0x690)) = rcx;\n    rax = memcpy (rax, rbx, r13);\n    rcx = *((rbp - 0x690));\n    r8 = *((rbp - 0x6a0));\n    rbx = rax;\n    goto label_38;\nlabel_131:\n    if (al != 0x47) {\n        goto label_141;\n    }\n    *(r15) = 0x30;\n    if ((r11b & 0x10) == 0) {\n        goto label_40;\n    }\n    r9 = r15 + 2;\n    if (rdx == 0) {\n        goto label_142;\n    }\n    rsi = rdx - 1;\n    *((rbp - 0x6ec)) = r8d;\n    *((rbp - 0x6e8)) = r10;\n    *((rbp - 0x6e0)) = r9;\n    *((rbp - 0x6c8)) = rcx;\n    *((rbp - 0x6c0)) = r11d;\n    *((rbp - 0x6b0)) = rdx;\n    *((rbp - 0x6a0)) = rsi;\n    rax = nl_langinfo (0x10000);\n    rsi = *((rbp - 0x6a0));\n    rdx = *((rbp - 0x6b0));\n    eax = *(rax);\n    r11d = *((rbp - 0x6c0));\n    rcx = *((rbp - 0x6c8));\n    r9 = *((rbp - 0x6e0));\n    r10 = *((rbp - 0x6e8));\n    r8d = *((rbp - 0x6ec));\n    if (al == 0) {\n        goto label_143;\n    }\nlabel_57:\n    *((r15 + 1)) = al;\n    if (rsi == 0) {\n        goto label_36;\n    }\n    rdx = r15 + rdx + 1;\n    rax = r9;\n    do {\n        rax++;\n        *((rax - 1)) = 0x30;\n    } while (rax != rdx);\n    r9 += rsi;\n    goto label_36;\nlabel_123:\n    if (r10 == 0) {\n        goto label_39;\n    }\n    do {\n        r9++;\n        *((r9 - 1)) = 0x20;\n    } while (rdi != r9);\n    goto label_39;\nlabel_133:\n    eax = 0x6e69;\n    *((r15 + 2)) = 0x66;\n    *(r15) = ax;\n    r15d = 0;\n    goto label_36;\nlabel_122:\n    r9 = r15 + 2;\n    *((rbp - 0x6e8)) = r8d;\n    *((rbp - 0x6e0)) = r10;\n    *((rbp - 0x6c8)) = rcx;\n    *((rbp - 0x6c0)) = rdx;\n    *((rbp - 0x6b0)) = r11d;\n    *((rbp - 0x6a0)) = r9;\n    rax = nl_langinfo (0x10000);\n    esi = 0x2e;\n    rdx = *((rbp - 0x6c0));\n    r9 = *((rbp - 0x6a0));\n    eax = *(rax);\n    r11d = *((rbp - 0x6b0));\n    rcx = *((rbp - 0x6c8));\n    r10 = *((rbp - 0x6e0));\n    r8d = *((rbp - 0x6e8));\n    if (al == 0) {\n        eax = esi;\n    }\n    *((r15 + 1)) = al;\n    if (rdx == 0) {\n        goto label_36;\n    }\n    rsi = r15 + rdx + 2;\n    rax = r9;\n    do {\n        rax++;\n        *((rax - 1)) = 0x30;\n    } while (rax != rsi);\n    r9 += rdx;\n    goto label_36;\nlabel_94:\n    r10d = 0;\n    *((rbp - 0x690)) = rcx;\n    goto label_144;\nlabel_41:\n    if (rdi == rdx) {\n        goto label_10;\n    }\nlabel_144:\n    rsi = rdx + 1;\n    edx = *(rdx);\n    rcx = 0x1999999999999999;\n    r9 = 0xffffffffffffffff;\n    edx -= 0x30;\n    rdx = (int64_t) edx;\n    if (r10 <= rcx) {\n        r9 = r10 * 5;\n        r9 += r9;\n    }\n    rdx += r9;\n    r10 = rdx;\n    rdx = rsi;\n    if (rdx >= 0) {\n        goto label_41;\n    }\n    rcx = *((rbp - 0x690));\n    if (rdi == rsi) {\n        goto label_42;\n    }\nlabel_82:\n    rdx++;\n    if (*((rdx - 1)) != 0x30) {\n        goto label_43;\n    }\n    *((rbp - 0x690)) = rcx;\n    r10 = 0xffffffffffffffff;\n    goto label_41;\nlabel_84:\n    rax = rdx + 1;\n    edx = 0;\n    if (rcx == rax) {\n        goto label_86;\n    }\n    rsi = rax;\n    goto label_145;\nlabel_45:\n    if (rcx == rsi) {\n        goto label_44;\n    }\nlabel_145:\n    r9 = 0x1999999999999999;\n    rdi = rsi + 1;\n    esi = *(rsi);\n    esi -= 0x30;\n    rax = (int64_t) esi;\n    rsi = 0xffffffffffffffff;\n    if (rdx <= r9) {\n        rsi = rdx * 5;\n        rsi += rsi;\n    }\n    rax += rsi;\n    rsi = rdi;\n    rdx = rax;\n    if (rax >= 0) {\n        goto label_45;\n    }\n    if (rcx == rdi) {\n        goto label_46;\n    }\nlabel_48:\n    rsi = rdi + 1;\n    if (*((rsi - 1)) == 0x30) {\n        rdx = 0xffffffffffffffff;\n        goto label_45;\n    }\n    if (rcx == rsi) {\n        goto label_47;\n    }\n    rdi = rsi;\n    goto label_48;\n    if (rcx < rsi) {\nlabel_127:\n        goto label_5;\n    }\n    r12 += r12;\n    if (r12 >= rax) {\n        goto label_49;\n    }\nlabel_128:\n    if (rax == -1) {\n        goto label_5;\n    }\n    r12 = rax;\n    goto label_49;\nlabel_114:\n    fp_stack++;\n    r15d -= 0x41;\n    r9 = rcx + 3;\n    if (r15b > 0x19) {\n        goto label_146;\n    }\n    eax = 0x414e;\n    *((rcx + 2)) = 0x4e;\n    r15d = 0;\n    *(rcx) = ax;\n    goto label_50;\nlabel_86:\n    ecx = 0xc;\n    goto label_51;\nlabel_141:\n    if (al != 0x41) {\n        goto label_34;\n    }\n    rax = r15 + 2;\n    *(r15) = 0x30;\n    *((rbp - 0x6a0)) = rax;\n    eax = *((r14 + 0x48));\n    *((r15 + 2)) = 0x30;\n    eax += 0x17;\n    *((r15 + 1)) = al;\n    if ((r11b & 0x10) != 0) {\n        goto label_147;\n    }\n    rsi = r15 + 3;\n    al = (rdx != 0) ? 1 : 0;\n    if (al != 0) {\n        goto label_147;\n    }\nlabel_55:\n    eax = *((r14 + 0x48));\n    r15d = 0x302b;\n    r9 = rsi + 3;\n    *((rsi + 1)) = r15w;\n    r15 = *((rbp - 0x6a0));\n    eax += 0xf;\n    *(rsi) = al;\n    goto label_36;\nlabel_132:\n    rsi = r15 + 2;\n    *((rbp - 0x6e8)) = r8d;\n    *((rbp - 0x6e0)) = r10;\n    *((rbp - 0x6c8)) = rcx;\n    *((rbp - 0x6c0)) = rdx;\n    *((rbp - 0x6b0)) = r11d;\n    *((rbp - 0x6a0)) = rsi;\n    rax = nl_langinfo (0x10000);\n    edi = 0x2e;\n    rdx = *((rbp - 0x6c0));\n    rsi = *((rbp - 0x6a0));\n    eax = *(rax);\n    r11d = *((rbp - 0x6b0));\n    rcx = *((rbp - 0x6c8));\n    r10 = *((rbp - 0x6e0));\n    r8d = *((rbp - 0x6e8));\n    if (al == 0) {\n        eax = edi;\n    }\n    *((r15 + 1)) = al;\n    if (rdx == 0) {\n        goto label_52;\n    }\n    rdi = r15 + rdx + 2;\n    rax = rsi;\n    do {\n        rax++;\n        *((rax - 1)) = 0x30;\n    } while (rax != rdi);\n    rsi += rdx;\n    goto label_52;\nlabel_140:\n    rbx = r9;\n    goto label_38;\nlabel_146:\n    eax = 0x616e;\n    *((rcx + 2)) = 0x6e;\n    r15d = 0;\n    *(rcx) = ax;\n    goto label_50;\nlabel_137:\n    rax = malloc (r12);\n    rcx = rax;\n    if (rax == 0) {\n        goto label_5;\n    }\n    rdx = r15;\n    if (r15 == 0) {\n        goto label_148;\n    }\n    if (r13b == 0) {\n        goto label_148;\n    }\n    rax = memcpy (rax, rbx, rdx);\n    rbx = rax;\n    goto label_53;\n    if (r13b < 0) {\nlabel_135:\n        goto label_5;\n    }\n    r12 += r12;\n    if (r12 >= r14) {\n        goto label_54;\n    }\nlabel_136:\n    if (r14 == -1) {\n        goto label_5;\n    }\n    r12 = r14;\n    goto label_54;\nlabel_147:\n    rsi = r15 + 4;\n    *((rbp - 0x6ec)) = r8d;\n    *((rbp - 0x6e8)) = r10;\n    *((rbp - 0x6e0)) = rcx;\n    *((rbp - 0x6c8)) = rdx;\n    *((rbp - 0x6c0)) = r11d;\n    *((rbp - 0x6b0)) = rsi;\n    rax = nl_langinfo (0x10000);\n    edi = 0x2e;\n    rdx = *((rbp - 0x6c8));\n    rsi = *((rbp - 0x6b0));\n    eax = *(rax);\n    r11d = *((rbp - 0x6c0));\n    rcx = *((rbp - 0x6e0));\n    r10 = *((rbp - 0x6e8));\n    r8d = *((rbp - 0x6ec));\n    if (al == 0) {\n        eax = edi;\n    }\n    *((r15 + 3)) = al;\n    if (rdx == 0) {\n        goto label_55;\n    }\n    rdi = r15 + rdx + 4;\n    rax = rsi;\n    do {\n        rax++;\n        *((rax - 1)) = 0x30;\n    } while (rax != rdi);\n    rsi += rdx;\n    goto label_55;\nlabel_125:\n    r15 = r9;\n    goto label_56;\nlabel_148:\n    rbx = rcx;\n    goto label_53;\nlabel_142:\n    *((rbp - 0x6e0)) = r8d;\n    *((rbp - 0x6c8)) = r10;\n    *((rbp - 0x6c0)) = r9;\n    *((rbp - 0x6b0)) = rcx;\n    *((rbp - 0x6a0)) = r11d;\n    rax = nl_langinfo (0x10000);\n    edx = 0x2e;\n    r11d = *((rbp - 0x6a0));\n    rcx = *((rbp - 0x6b0));\n    eax = *(rax);\n    r9 = *((rbp - 0x6c0));\n    r10 = *((rbp - 0x6c8));\n    r8d = *((rbp - 0x6e0));\n    if (al == 0) {\n        eax = edx;\n    }\n    *((r15 + 1)) = al;\n    goto label_36;\nlabel_143:\n    eax = 0x2e;\n    goto label_57;\nlabel_134:\n    if (r12 == -1) {\n        goto label_53;\n    }\n    goto label_5;\n}\n"
        },
        {
            "funcName": "fcn_0040b2d0",
            "funcStartAddr": "0x40b2d0",
            "funcEndAddr": "0x40b4e9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x40b2d0 */\n#include <stdint.h>\n \nint64_t fcn_0040b2d0 (int64_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rax = *((rsi + 8));\n    if (*(rsi) == 0) {\n        goto label_6;\n    }\n    edx = 0;\n    r9d = \"(NULL)\";\n    r8d = \"(NULL)\";\n    do {\n        if (*(rax) > 0x16) {\n            goto label_7;\n        }\n        ecx = *(rax);\n        /* switch table (23 cases) at 0x40fd20 */\n        ecx = *(rdi);\n        if (ecx > 0x2f) {\n            goto label_8;\n        }\n        r10d = ecx;\n        ecx += 8;\n        r10 += *((rdi + 0x10));\n        *(rdi) = ecx;\nlabel_1:\n        rcx = *(r10);\n        *((rax + 0x10)) = rcx;\nlabel_0:\n        rdx++;\n        rax += 0x20;\n    } while (*(rsi) > rdx);\nlabel_6:\n    eax = 0;\n    return rax;\n    ecx = *(rdi);\n    if (ecx > 0x2f) {\n        goto label_9;\n    }\n    r10d = ecx;\n    ecx += 8;\n    r10 += *((rdi + 0x10));\n    *(rdi) = ecx;\n    do {\n        ecx = *(r10);\n        *((rax + 0x10)) = ecx;\n        goto label_0;\n        ecx = *(rdi);\n        if (ecx > 0x2f) {\n            goto label_10;\n        }\n        r10d = ecx;\n        ecx += 8;\n        r10 += *((rdi + 0x10));\n        *(rdi) = ecx;\nlabel_3:\n        ecx = *(r10);\n        *((rax + 0x10)) = cx;\n        goto label_0;\n        ecx = *(rdi);\n        if (ecx > 0x2f) {\n            goto label_11;\n        }\n        r10d = ecx;\n        ecx += 8;\n        r10 += *((rdi + 0x10));\n        *(rdi) = ecx;\nlabel_2:\n        ecx = *(r10);\n        *((rax + 0x10)) = cl;\n        goto label_0;\nlabel_8:\n        r10 = *((rdi + 8));\n        rcx = r10 + 8;\n        *((rdi + 8)) = rcx;\n        goto label_1;\nlabel_9:\n        r10 = *((rdi + 8));\n        rcx = r10 + 8;\n        *((rdi + 8)) = rcx;\n    } while (1);\nlabel_11:\n    r10 = *((rdi + 8));\n    rcx = r10 + 8;\n    *((rdi + 8)) = rcx;\n    goto label_2;\nlabel_10:\n    r10 = *((rdi + 8));\n    rcx = r10 + 8;\n    *((rdi + 8)) = rcx;\n    goto label_3;\n    ecx = *((rdi + 4));\n    if (ecx > 0xaf) {\n        goto label_12;\n    }\n    r10d = ecx;\n    ecx += 0x10;\n    r10 += *((rdi + 0x10));\n    *((rdi + 4)) = ecx;\nlabel_4:\n    xmm0 = *(r10);\n    *((rax + 0x10)) = xmm0;\n    goto label_0;\n    rcx = *((rdi + 8));\n    rcx += 0xf;\n    rcx &= 0xfffffffffffffff0;\n    r10 = rcx + 0x10;\n    *((rdi + 8)) = r10;\n    *(fp_stack--) = fp_stack[?];\n    ? = fp_stack[0];\n    fp_stack--;\n    goto label_0;\n    ecx = *(rdi);\n    if (ecx > 0x2f) {\n        goto label_13;\n    }\n    r10d = ecx;\n    ecx += 8;\n    r10 += *((rdi + 0x10));\n    *(rdi) = ecx;\nlabel_5:\n    rcx = *(r10);\n    if (rcx == 0) {\n        rcx = r9;\n    }\n    *((rax + 0x10)) = rcx;\n    goto label_0;\n    ecx = *(rdi);\n    if (ecx > 0x2f) {\n        goto label_14;\n    }\n    r10d = ecx;\n    ecx += 8;\n    r10 += *((rdi + 0x10));\n    *(rdi) = ecx;\n    do {\n        rcx = *(r10);\n        if (rcx == 0) {\n            rcx = r8;\n        }\n        *((rax + 0x10)) = rcx;\n        goto label_0;\nlabel_7:\n        eax = 0xffffffff;\n        return rax;\nlabel_14:\n        r10 = *((rdi + 8));\n        rcx = r10 + 8;\n        *((rdi + 8)) = rcx;\n    } while (1);\nlabel_12:\n    r10 = *((rdi + 8));\n    rcx = r10 + 8;\n    *((rdi + 8)) = rcx;\n    goto label_4;\nlabel_13:\n    r10 = *((rdi + 8));\n    rcx = r10 + 8;\n    *((rdi + 8)) = rcx;\n    goto label_5;\n}\n"
        },
        {
            "funcName": "fcn_0040b4f0",
            "funcStartAddr": "0x40b4f0",
            "funcEndAddr": "0x40c1f9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x40b4f0 */\n#include <stdint.h>\n \nuint64_t fcn_0040b4f0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    void ** var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    uint32_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = rsi + 0x20;\n    rax = rdx + 0x10;\n    r8 = rsi;\n    r15 = rdx;\n    r9d = 7;\n    r11d = 7;\n    r10 = 0xffffffffffffffff;\n    r13d = 0;\n    *(rsi) = 0;\n    *((rsi + 8)) = rcx;\n    *((rsp + 0x28)) = rcx;\n    *(rdx) = 0;\n    *((rsp + 8)) = rax;\n    *((rdx + 8)) = rax;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x20)) = 0;\n    while (al != 0) {\n        rbp = rdi + 1;\n        if (al == 0x25) {\n            goto label_32;\n        }\nlabel_3:\n        rdi = rbp;\n        eax = *(rdi);\n    }\n    rax = r13 * 5;\n    rax = r13 + rax*2;\n    *((rcx + rax*8)) = rdi;\n    rax = *((rsp + 0x10));\n    *((r8 + 0x10)) = rax;\n    rax = *((rsp + 0x18));\n    *((r8 + 0x18)) = rax;\n    eax = 0;\nlabel_11:\n    return rax;\nlabel_32:\n    rax = r13 * 5;\n    r14 = r10;\n    rax = r13 + rax*2;\n    r12 = rcx + rax*8;\n    *(r12) = rdi;\n    *((r12 + 0x10)) = 0;\n    *((r12 + 0x18)) = 0;\n    *((r12 + 0x20)) = 0;\n    *((r12 + 0x28)) = r10;\n    *((r12 + 0x30)) = 0;\n    *((r12 + 0x38)) = 0;\n    *((r12 + 0x40)) = r10;\n    *((r12 + 0x50)) = r10;\n    ebx = *((rdi + 1));\n    eax = rbx - 0x30;\n    if (al > 9) {\n        goto label_4;\n    }\n    goto label_33;\n    do {\n        if (bl == 0x2d) {\n            goto label_34;\n        }\n        if (bl == 0x2b) {\n            goto label_35;\n        }\n        if (bl == 0x20) {\n            goto label_36;\n        }\n        if (bl == 0x23) {\n            goto label_37;\n        }\n        if (bl == 0x30) {\n            goto label_38;\n        }\n        if (bl != 0x49) {\n            goto label_39;\n        }\n        *((r12 + 0x10)) |= 0x40;\nlabel_0:\n        ebx = *(rcx);\nlabel_4:\n        rcx = rbp + 1;\n    } while (bl != 0x27);\n    *((r12 + 0x10)) |= 1;\n    goto label_0;\nlabel_34:\n    *((r12 + 0x10)) |= 2;\n    goto label_0;\nlabel_35:\n    *((r12 + 0x10)) |= 4;\n    goto label_0;\nlabel_36:\n    *((r12 + 0x10)) |= 8;\n    goto label_0;\nlabel_37:\n    *((r12 + 0x10)) |= 0x10;\n    goto label_0;\nlabel_38:\n    *((r12 + 0x10)) |= 0x20;\n    goto label_0;\nlabel_39:\n    if (bl == 0x2a) {\n        goto label_40;\n    }\n    eax = rbx - 0x30;\n    if (al <= 9) {\n        goto label_41;\n    }\nlabel_17:\n    if (bl == 0x2e) {\n        goto label_42;\n    }\nlabel_2:\n    eax = 0;\n    esi = 1;\n    while (bl != 0x68) {\n        if (bl == 0x4c) {\n            goto label_43;\n        }\n        if (bl != 0x6c) {\n            if (bl == 0x6a) {\n                goto label_44;\n            }\n            edx = ebx;\n            edx &= 0xffffffdf;\n            if (dl == 0x5a) {\n                goto label_44;\n            }\n            if (bl != 0x74) {\n                goto label_45;\n            }\n        }\nlabel_44:\n        eax += 8;\nlabel_1:\n        ebx = *(rbp);\n        rbp++;\n    }\n    ecx = eax;\n    edx = esi;\n    ecx &= 1;\n    edx <<= cl;\n    eax |= edx;\n    goto label_1;\nlabel_40:\n    rsi = *((rsp + 0x10));\n    eax = 1;\n    *((r12 + 0x18)) = rbp;\n    *((r12 + 0x20)) = rcx;\n    if (rsi != 0) {\n        rax = rsi;\n    }\n    *((rsp + 0x10)) = rax;\n    eax = *((rbp + 1));\n    edx = rax - 0x30;\n    if (dl <= 9) {\n        goto label_46;\n    }\nlabel_8:\n    rbx = *((r12 + 0x28));\n    if (rbx == -1) {\n        goto label_47;\n    }\nlabel_7:\n    r13 = *((r15 + 8));\n    if (r9 <= rbx) {\n        goto label_48;\n    }\n    rdx = *(r15);\nlabel_5:\n    if (rdx > rbx) {\n        goto label_49;\n    }\n    do {\n        rdx++;\n        rax = rdx;\n        rax <<= 5;\n        *((r13 + rax - 0x20)) = 0;\n    } while (rdx <= rbx);\n    *(r15) = rdx;\nlabel_49:\n    rbx <<= 5;\n    rax = r13 + rbx;\n    edx = *(rax);\n    if (edx != 0) {\n        goto label_50;\n    }\n    *(rax) = 5;\n    ebx = *(rcx);\n    rcx++;\n    if (bl != 0x2e) {\n        goto label_2;\n    }\nlabel_42:\n    *((r12 + 0x30)) = rbp;\n    if (*((rbp + 1)) != 0x2a) {\n        goto label_51;\n    }\n    rsi = *((rsp + 0x18));\n    eax = 2;\n    rcx = rbp + 2;\n    *((r12 + 0x38)) = rcx;\n    if (rsi >= 2) {\n        rax = rsi;\n    }\n    *((rsp + 0x18)) = rax;\n    eax = *((rbp + 2));\n    edx = rax - 0x30;\n    if (dl <= 9) {\n        goto label_52;\n    }\nlabel_27:\n    rbx = *((r12 + 0x40));\n    if (rbx == -1) {\n        goto label_53;\n    }\nlabel_26:\n    r13 = *((r15 + 8));\n    if (r9 <= rbx) {\n        goto label_54;\n    }\n    rdx = *(r15);\nlabel_20:\n    if (rdx > rbx) {\n        goto label_55;\n    }\n    do {\n        rdx++;\n        rax = rdx;\n        rax <<= 5;\n        *((r13 + rax - 0x20)) = 0;\n    } while (rdx <= rbx);\n    *(r15) = rdx;\nlabel_55:\n    rax = rbx;\n    rax <<= 5;\n    rax += r13;\n    edx = *(rax);\n    if (edx != 0) {\n        goto label_56;\n    }\n    *(rax) = 5;\n    ebx = *(rcx);\n    goto label_2;\nlabel_43:\n    eax |= 4;\n    goto label_1;\nlabel_45:\n    edx = rbx - 0x25;\n    if (dl > 0x53) {\n        goto label_15;\n    }\n    edx = (int32_t) dl;\n    /* switch table (84 cases) at 0x40fe00 */\n    ecx = 0;\n    cl = (eax > 7) ? 1 : 0;\n    ecx += 0xf;\nlabel_10:\n    if (r14 == -1) {\n        goto label_57;\n    }\n    *((r12 + 0x50)) = r14;\nlabel_16:\n    r13 = *((r15 + 8));\n    if (r9 <= r14) {\n        goto label_58;\n    }\nlabel_14:\n    rax = *(r15);\n    if (rax > r14) {\n        goto label_59;\n    }\n    do {\n        rax++;\n        rdx = rax;\n        rdx <<= 5;\n        *((r13 + rdx - 0x20)) = 0;\n    } while (rax <= r14);\n    *(r15) = rax;\nlabel_59:\n    r14 <<= 5;\n    rax = r13 + r14;\n    edx = *(rax);\n    if (edx != 0) {\n        goto label_60;\n    }\n    *(rax) = ecx;\nlabel_12:\n    *((r12 + 0x48)) = bl;\n    rax = *(r8);\n    *((r12 + 8)) = rbp;\n    r13 = rax + 1;\n    *(r8) = r13;\n    if (r11 > r13) {\n        rcx = *((r8 + 8));\n        goto label_3;\n    }\n    if (r11 < 0) {\n        goto label_61;\n    }\n    rax = 0x2e8ba2e8ba2e8ba;\n    rbx = r11 + r11;\n    if (rbx > rax) {\n        goto label_61;\n    }\n    rax = r11 * 5;\n    r12 = *((r8 + 8));\n    *((rsp + 0x38)) = r8;\n    rsi = r11 + rax*2;\n    *((rsp + 0x30)) = r9;\n    rsi <<= 4;\n    if (*((rsp + 0x28)) == r12) {\n        goto label_62;\n    }\n    rax = realloc (r12, rsi);\n    r9 = *((rsp + 0x30));\n    r8 = *((rsp + 0x38));\n    r10 = 0xffffffffffffffff;\n    rcx = rax;\n    if (rax == 0) {\n        goto label_61;\n    }\n    r12 = *((r8 + 8));\n    r13 = *(r8);\n    if (*((rsp + 0x28)) == r12) {\n        goto label_63;\n    }\nlabel_6:\n    *((r8 + 8)) = rcx;\n    r11 = rbx;\n    goto label_3;\nlabel_33:\n    rax = rbp;\n    do {\n        rax++;\n        edx = *(rax);\n        ecx = rdx - 0x30;\n    } while (cl <= 9);\n    if (dl == 0x24) {\n        goto label_64;\n    }\n    r14 = r10;\n    goto label_4;\nlabel_51:\n    eax = *((rbp + 1));\n    eax -= 0x30;\n    if (al > 9) {\n        goto label_65;\n    }\n    do {\n        rcx++;\n        eax = *(rcx);\n        eax -= 0x30;\n    } while (al <= 9);\n    rax = rcx;\n    rax -= rbp;\nlabel_30:\n    rsi = *((rsp + 0x18));\n    *((r12 + 0x38)) = rcx;\n    ebx = *(rcx);\n    if (rsi >= rax) {\n        rax = rsi;\n    }\n    *((rsp + 0x18)) = rax;\n    goto label_2;\nlabel_48:\n    r9 += r9;\n    rax = rbx + 1;\n    if (r9 <= rbx) {\n        r9 = rax;\n    }\n    rax = 0x7ffffffffffffff;\n    if (r9 > rax) {\n        goto label_66;\n    }\n    rsi = r9;\n    *((rsp + 0x48)) = r8;\n    rsi <<= 5;\n    *((rsp + 0x40)) = r9;\n    *((rsp + 0x38)) = r11;\n    *((rsp + 0x30)) = rcx;\n    if (*((rsp + 8)) == r13) {\n        goto label_67;\n    }\n    rax = realloc (r13, rsi);\n    rsi = *((r15 + 8));\n    rcx = *((rsp + 0x30));\n    r10 = 0xffffffffffffffff;\n    r13 = rax;\n    r11 = *((rsp + 0x38));\n    r9 = *((rsp + 0x40));\n    r8 = *((rsp + 0x48));\n    if (rax == 0) {\n        goto label_19;\n    }\n    rdx = *(r15);\n    if (*((rsp + 8)) == rsi) {\n        goto label_68;\n    }\nlabel_22:\n    *((r15 + 8)) = r13;\n    goto label_5;\nlabel_62:\n    rax = malloc (rsi);\n    r9 = *((rsp + 0x30));\n    r8 = *((rsp + 0x38));\n    rcx = rax;\n    if (rax == 0) {\n        goto label_69;\n    }\nlabel_63:\n    rax = r13 * 5;\n    *((rsp + 0x38)) = r8;\n    *((rsp + 0x30)) = r9;\n    rdx <<= 3;\n    rax = memcpy (rcx, r12, r13 + rax*2);\n    r8 = *((rsp + 0x38));\n    r9 = *((rsp + 0x30));\n    r10 = 0xffffffffffffffff;\n    rcx = rax;\n    r13 = *(r8);\n    goto label_6;\nlabel_47:\n    rsi = *((rsp + 0x20));\n    rax = rsi + 1;\n    *((r12 + 0x28)) = rsi;\n    if (rsi == -1) {\n        goto label_15;\n    }\n    rbx = *((rsp + 0x20));\n    *((rsp + 0x20)) = rax;\n    goto label_7;\nlabel_46:\n    rdx = rcx;\n    do {\n        rdx++;\n        esi = *(rdx);\n        edi = rsi - 0x30;\n    } while (dil <= 9);\n    if (sil != 0x24) {\n        goto label_8;\n    }\n    esi = 0;\n    while (rbp == 0) {\n        if (bl > 9) {\n            goto label_70;\n        }\n        rdi = 0x1999999999999999;\n        eax -= 0x30;\n        rdx = r10;\n        rax = (int64_t) eax;\n        if (rsi <= rdi) {\n            rdx = rsi * 5;\n            rdx += rdx;\n        }\n        rdi = rcx;\nlabel_9:\n        ebp = 0;\n        rdx += rax;\n        eax = *((rcx + 1));\n        bpl = (rdx < 0) ? 1 : 0;\n        rsi = rdx;\n        rcx++;\n        ebx = rax - 0x30;\n    }\n    if (bl > 9) {\n        goto label_15;\n    }\n    eax -= 0x30;\n    rdx = r10;\n    rdi = rcx;\n    rax = (int64_t) eax;\n    goto label_9;\n    ecx = 0;\n    cl = (eax > 7) ? 1 : 0;\n    ecx += 0xd;\n    goto label_10;\n    ecx = 0x16;\n    if (eax > 0xf) {\n        goto label_10;\n    }\n    if ((al & 4) != 0) {\n        goto label_10;\n    }\n    ecx = 0x15;\n    if (eax > 7) {\n        goto label_10;\n    }\n    ecx = 0x12;\n    if ((al & 2) != 0) {\n        goto label_10;\n    }\n    ecx = 0;\n    cl = ((al & 1) == 0) ? 1 : 0;\n    ecx += 0x13;\n    goto label_10;\n    ecx = 9;\n    if (eax > 0xf) {\n        goto label_10;\n    }\n    if ((al & 4) != 0) {\n        goto label_10;\n    }\n    ecx = 7;\n    if (eax > 7) {\n        goto label_10;\n    }\n    ecx = 1;\n    if ((al & 2) != 0) {\n        goto label_10;\n    }\n    eax &= 1;\n    ecx -= ecx;\n    ecx &= 2;\n    ecx += 3;\n    goto label_10;\n    ecx = 0x11;\n    goto label_10;\n    ecx = 0xc;\n    if (eax > 0xf) {\n        goto label_10;\n    }\n    ecx = 0;\n    cl = ((al & 4) != 0) ? 1 : 0;\n    ecx += 0xb;\n    goto label_10;\n    ecx = 0x10;\n    ebx = 0x73;\n    goto label_10;\n    ecx = 0xe;\n    ebx = 0x63;\n    goto label_10;\n    ecx = 0xa;\n    if (eax > 0xf) {\n        goto label_10;\n    }\n    if ((al & 4) != 0) {\n        goto label_10;\n    }\n    ecx = 8;\n    if (eax > 7) {\n        goto label_10;\n    }\n    ecx = 2;\n    if ((al & 2) != 0) {\n        goto label_10;\n    }\n    eax &= 1;\n    ecx -= ecx;\n    ecx &= 2;\n    ecx += 4;\n    goto label_10;\nlabel_15:\n    r13 = *((r15 + 8));\nlabel_13:\n    if (*((rsp + 8)) != r13) {\n        *((rsp + 8)) = r8;\n        free (r13);\n        r8 = *((rsp + 8));\n    }\n    rdi = *((r8 + 8));\n    if (*((rsp + 0x28)) != rdi) {\n        free (rdi);\n    }\n    errno_location ();\n    *(rax) = 0x16;\n    eax = 0xffffffff;\n    goto label_11;\nlabel_60:\n    if (edx == ecx) {\n        goto label_12;\n    }\n    goto label_13;\nlabel_58:\n    r9 += r9;\n    rax = r14 + 1;\n    if (r9 <= r14) {\n        r9 = rax;\n    }\n    rax = 0x7ffffffffffffff;\n    if (r9 > rax) {\n        goto label_66;\n    }\n    rsi = r9;\n    *((rsp + 0x48)) = r8;\n    rsi <<= 5;\n    *((rsp + 0x40)) = r9;\n    *((rsp + 0x38)) = r11;\n    *((rsp + 0x30)) = ecx;\n    if (*((rsp + 8)) == r13) {\n        goto label_71;\n    }\n    rax = realloc (r13, rsi);\n    ecx = *((rsp + 0x30));\n    r11 = *((rsp + 0x38));\n    r10 = 0xffffffffffffffff;\n    r13 = rax;\n    r9 = *((rsp + 0x40));\n    r8 = *((rsp + 0x48));\n    if (rax == 0) {\n        goto label_61;\n    }\n    rax = *((rsp + 8));\n    if (rax == *((r15 + 8))) {\n        goto label_72;\n    }\nlabel_18:\n    *((r15 + 8)) = r13;\n    goto label_14;\nlabel_57:\n    rsi = *((rsp + 0x20));\n    rax = rsi + 1;\n    *((r12 + 0x50)) = rsi;\n    if (rsi == -1) {\n        goto label_15;\n    }\n    r14 = *((rsp + 0x20));\n    *((rsp + 0x20)) = rax;\n    goto label_16;\nlabel_41:\n    *((r12 + 0x18)) = rbp;\n    eax = *(rbp);\n    eax -= 0x30;\n    if (al > 9) {\n        goto label_73;\n    }\n    rcx = rbp;\n    while (al <= 9) {\n        rcx = rdx;\n        eax = *((rcx + 1));\n        rdx = rcx + 1;\n        eax -= 0x30;\n    }\n    rsi = *((rsp + 0x10));\n    rax = rdx;\n    rcx += 2;\n    rax -= rbp;\n    if (rsi >= rax) {\n        rax = rsi;\n    }\n    *((rsp + 0x10)) = rax;\nlabel_73:\n    *((r12 + 0x20)) = rbp;\n    ebx = *(rbp);\n    goto label_17;\nlabel_50:\n    if (edx != 5) {\n        goto label_13;\n    }\n    ebx = *(rcx);\n    rcx++;\n    goto label_17;\nlabel_71:\n    rax = malloc (rsi);\n    ecx = *((rsp + 0x30));\n    r11 = *((rsp + 0x38));\n    r9 = *((rsp + 0x40));\n    r8 = *((rsp + 0x48));\n    if (rax == 0) {\n        goto label_21;\n    }\nlabel_31:\n    rdi = rax;\n    *((rsp + 0x48)) = r8;\n    *((rsp + 0x40)) = r9;\n    r13 = rax;\n    rdx <<= 5;\n    *((rsp + 0x38)) = r11;\n    *((rsp + 0x30)) = ecx;\n    memcpy (rdi, r13, *(r15));\n    r8 = *((rsp + 0x48));\n    ecx = *((rsp + 0x30));\n    r10 = 0xffffffffffffffff;\n    r9 = *((rsp + 0x40));\n    r11 = *((rsp + 0x38));\n    goto label_18;\n    do {\nlabel_66:\n        rsi = r13;\nlabel_19:\n        if (*((rsp + 8)) != rsi) {\nlabel_23:\n            *((rsp + 8)) = r8;\n            free (rsi);\n            r8 = *((rsp + 8));\n        }\nlabel_21:\n        rdi = *((r8 + 8));\n        if (*((rsp + 0x28)) != rdi) {\n            free (rdi);\n        }\nlabel_24:\n        errno_location ();\n        *(rax) = 0xc;\n        eax = 0xffffffff;\n        return rax;\nlabel_54:\n        r9 += r9;\n        rax = rbx + 1;\n        if (r9 <= rbx) {\n            r9 = rax;\n        }\n        rax = 0x7ffffffffffffff;\n    } while (r9 > rax);\n    rsi = r9;\n    *((rsp + 0x48)) = r8;\n    rsi <<= 5;\n    *((rsp + 0x40)) = r9;\n    *((rsp + 0x38)) = r11;\n    *((rsp + 0x30)) = rcx;\n    if (*((rsp + 8)) == r13) {\n        goto label_74;\n    }\n    rax = realloc (r13, rsi);\n    rsi = *((r15 + 8));\n    rcx = *((rsp + 0x30));\n    r10 = 0xffffffffffffffff;\n    r13 = rax;\n    r11 = *((rsp + 0x38));\n    r9 = *((rsp + 0x40));\n    r8 = *((rsp + 0x48));\n    if (rax == 0) {\n        goto label_19;\n    }\n    rdx = *(r15);\n    if (*((rsp + 8)) == rsi) {\n        goto label_75;\n    }\nlabel_29:\n    *((r15 + 8)) = r13;\n    goto label_20;\nlabel_56:\n    if (edx != 5) {\n        goto label_13;\n    }\n    ebx = *(rcx);\n    goto label_2;\nlabel_67:\n    rax = malloc (rsi);\n    rcx = *((rsp + 0x30));\n    r11 = *((rsp + 0x38));\n    r9 = *((rsp + 0x40));\n    r8 = *((rsp + 0x48));\n    if (rax == 0) {\n        goto label_21;\n    }\n    r13 = rax;\nlabel_68:\n    rdx <<= 5;\n    *((rsp + 0x48)) = r8;\n    *((rsp + 0x40)) = r9;\n    *((rsp + 0x38)) = r11;\n    *((rsp + 0x30)) = rcx;\n    eax = memcpy (r13, *((rsp + 8)), *(r15));\n    rdx = *(r15);\n    r8 = *((rsp + 0x48));\n    r10 = 0xffffffffffffffff;\n    r9 = *((rsp + 0x40));\n    r11 = *((rsp + 0x38));\n    rcx = *((rsp + 0x30));\n    goto label_22;\nlabel_69:\n    rsi = *((r15 + 8));\n    if (*((rsp + 8)) != rsi) {\n        goto label_23;\n    }\n    goto label_24;\nlabel_64:\n    eax = 0;\n    while (rdi == 0) {\n        if (sil > 9) {\n            goto label_76;\n        }\n        rdi = 0x1999999999999999;\n        edx = (int32_t) bl;\n        rsi = r10;\n        edx -= 0x30;\n        rdx = (int64_t) edx;\n        if (rax <= rdi) {\n            rsi = rax * 5;\n            rsi += rsi;\n        }\n        rcx = rbp;\nlabel_25:\n        edi = 0;\n        ebx = *((rbp + 1));\n        rdx += rsi;\n        dil = (rdx < 0) ? 1 : 0;\n        rax = rdx;\n        rbp++;\n        esi = rbx - 0x30;\n    }\n    if (sil > 9) {\n        goto label_15;\n    }\n    edx = (int32_t) bl;\n    rsi = r10;\n    rcx = rbp;\n    edx -= 0x30;\n    rdx = (int64_t) edx;\n    goto label_25;\nlabel_53:\n    rsi = *((rsp + 0x20));\n    rax = rsi + 1;\n    *((r12 + 0x40)) = rsi;\n    if (rsi == -1) {\n        goto label_15;\n    }\n    rbx = *((rsp + 0x20));\n    *((rsp + 0x20)) = rax;\n    goto label_26;\nlabel_52:\n    rdx = rcx;\n    do {\n        rdx++;\n        esi = *(rdx);\n        edi = rsi - 0x30;\n    } while (dil <= 9);\n    if (sil != 0x24) {\n        goto label_27;\n    }\n    esi = 0;\n    while (rbp == 0) {\n        if (bl > 9) {\n            goto label_77;\n        }\n        rdi = 0x1999999999999999;\n        eax -= 0x30;\n        rdx = r10;\n        rax = (int64_t) eax;\n        if (rsi <= rdi) {\n            rdx = rsi * 5;\n            rdx += rdx;\n        }\n        rdi = rcx;\nlabel_28:\n        ebp = 0;\n        rdx += rax;\n        bpl = (rdx < 0) ? 1 : 0;\n        rcx++;\n        eax = *(rcx);\n        rsi = rdx;\n        ebx = rax - 0x30;\n    }\n    if (bl > 9) {\n        goto label_15;\n    }\n    eax -= 0x30;\n    rdx = r10;\n    rdi = rcx;\n    rax = (int64_t) eax;\n    goto label_28;\nlabel_76:\n    r14 = rdx;\n    r14--;\n    if (r14 > 0xfffffffffffffffd) {\n        goto label_15;\n    }\n    rbp = rcx + 2;\n    ebx = *((rcx + 2));\n    goto label_4;\nlabel_74:\n    rax = malloc (rsi);\n    rcx = *((rsp + 0x30));\n    r11 = *((rsp + 0x38));\n    r9 = *((rsp + 0x40));\n    r8 = *((rsp + 0x48));\n    if (rax == 0) {\n        goto label_21;\n    }\n    r13 = rax;\nlabel_75:\n    rdx <<= 5;\n    *((rsp + 0x48)) = r8;\n    *((rsp + 0x40)) = r9;\n    *((rsp + 0x38)) = r11;\n    *((rsp + 0x30)) = rcx;\n    memcpy (r13, *((rsp + 8)), *(r15));\n    rdx = *(r15);\n    r8 = *((rsp + 0x48));\n    r10 = 0xffffffffffffffff;\n    r9 = *((rsp + 0x40));\n    r11 = *((rsp + 0x38));\n    rcx = *((rsp + 0x30));\n    goto label_29;\nlabel_65:\n    eax = 1;\n    goto label_30;\nlabel_70:\n    rbx = rdx - 1;\n    if (rbx > 0xfffffffffffffffd) {\n        goto label_15;\n    }\n    *((r12 + 0x28)) = rbx;\n    rcx = rdi + 2;\n    goto label_7;\nlabel_77:\n    rbx = rdx - 1;\n    if (rbx > 0xfffffffffffffffd) {\n        goto label_15;\n    }\n    *((r12 + 0x40)) = rbx;\n    rcx = rdi + 2;\n    goto label_26;\nlabel_61:\n    rsi = *((r15 + 8));\n    goto label_19;\nlabel_72:\n    rax = r13;\n    r13 = *((rsp + 8));\n    goto label_31;\n}\n"
        },
        {
            "funcName": "fcn_0040c270",
            "funcStartAddr": "0x40c270",
            "funcEndAddr": "0x40c288",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x40c270 */\n#include <stdint.h>\n \nint64_t fcn_0040c270 (void) {\n    rax = 0x612248;\n    edx = 0;\n    if (rax != 0) {\n        rdx = *(rax);\n    }\n    esi = 0;\n    return cxa_atexit ();\n}\n"
        },
        {
            "funcName": "fcn_0040c288",
            "funcStartAddr": "0x40c288",
            "funcEndAddr": "0x40c2a8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf @ 0x40c288 */\n#include <stdint.h>\n \nvoid fcn_0040c288 (int64_t arg3) {\n    rdx = arg3;\n    ebx = segment.GNU_RELRO;\n    do {\n        rax = *(rbx);\n        if (rax == -1) {\n            goto label_0;\n        }\n        void (*rax)() ();\n        rbx -= 8;\n    } while (1);\nlabel_0:\n}\n"
        }
    ],
    "funcCount": 64
}