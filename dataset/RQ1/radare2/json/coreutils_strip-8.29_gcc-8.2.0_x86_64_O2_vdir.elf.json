{
    "binaryInfo": {
        "isStripped": true,
        "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf"
    },
    "buildInfo": {
        "decompilerName": "radare2",
        "compilerName": "gcc",
        "compilerVersion": "9.4.0",
        "optLevel": "O"
    },
    "funcInfo": [
        {
            "funcName": "main",
            "funcStartAddr": "0x402e90",
            "funcEndAddr": "0x404719",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x402e90 */\n#include <stdint.h>\n \nint32_t main (int32_t argc, char ** argv) {\n    int64_t var_8h;\n    char * s1;\n    int64_t var_16h;\n    int64_t var_17h;\n    char * var_18h;\n    int64_t var_20h;\n    int64_t var_22h;\n    int64_t var_28h;\n    rdi = argc;\n    rsi = argv;\n    rbx = rsi;\n    fcn_00410670 (*(rsi));\n    setlocale (6, 0x41b08a);\n    bindtextdomain (0x41b1b1, \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\");\n    textdomain (0x41b1b1, rsi);\n    edi = 0x40b710;\n    *(0x006245c0) = 2;\n    fcn_00418780 ();\n    *(0x00625678) = 1;\n    rax = 0x8000000000000000;\n    *(0x00625730) = rax;\n    eax = *(0x006245ac);\n    *(0x006255d0) = 0;\n    *(0x00625740) = 0;\n    *(0x00625738) = 0xffffffffffffffff;\n    *(0x00625698) = 0;\n    if (eax == 2) {\n        goto label_45;\n    }\n    if (eax != 3) {\n        goto label_46;\n    }\n    *(0x006256f8) = 0;\n    fcn_00411c30 (0, 7);\nlabel_7:\n    *(0x006256ef) = 0;\n    *(0x006256f4) = 0;\n    *(0x006256f0) = 0;\n    *(0x006256ed) = 0;\n    *(0x006256ec) = 0;\n    *(0x006256d4) = 0;\n    *(0x006256bc) = 0;\n    *(0x006256b8) = 1;\n    *(0x006256b6) = 0;\n    *(0x006256b5) = 0;\n    *(0x006256b0) = 0;\n    *(0x006256a8) = 0;\n    *(0x006256a0) = 0;\n    *(0x00625725) = 0;\n    rax = getenv (\"QUOTING_STYLE\");\n    r12 = rax;\n    if (rax != 0) {\n        eax = fcn_0040acf0 (rax, 0x41ea00, 0x41e9c0, 4);\n        if (eax < 0) {\n            goto label_47;\n        }\n        rax = (int64_t) eax;\n        fcn_00411c30 (0, *((rax*4 + 0x41e9c0)));\n    }\nlabel_2:\n    *(0x00625670) = 0x50;\n    rax = getenv (\"COLUMNS\");\n    r12 = rax;\n    if (rax != 0) {\n        if (*(rax) != 0) {\n            goto label_48;\n        }\n    }\nlabel_3:\n    eax = 0;\n    rdx = rsp + 0x20;\n    eax = ioctl (1, 0x5413);\n    if (eax != 0xffffffff) {\n        eax = *((rsp + 0x22));\n        if (ax != 0) {\n            goto label_49;\n        }\n    }\nlabel_1:\n    rax = getenv (\"TABSIZE\");\n    *(0x00625680) = 8;\n    r12 = rax;\n    if (rax != 0) {\n        eax = fcn_00412df0 (rax, 0, 0, rsp + 0x20, 0);\n        if (eax != 0) {\n            goto label_50;\n        }\n        rax = *((rsp + 0x20));\n        *(0x00625680) = rax;\n    }\nlabel_9:\n    r15d = 0;\n    r14d = 0;\n    r12d = 0;\n    r13d = 1;\n    do {\nlabel_0:\n        r8 = rsp + 0x20;\n        ecx = 0x419900;\n        rsi = rbx;\n        edi = ebp;\n        edx = \"abcdfghiklmnopqrstuvw:xABCDFGHI:LNQRST:UXZ1\";\n        *((rsp + 0x20)) = 0xffffffff;\n        eax = fcn_00416e00 ();\n        if (eax == 0xffffffff) {\n            goto label_51;\n        }\n        eax += 0x83;\n        if (eax > 0x113) {\n            goto label_52;\n        }\n        /* switch table (276 cases) at 0x418bf0 */\nlabel_46:\n        if (eax == 1) {\n            goto label_53;\n        }\n        abort ();\n        *(0x006256ed) = r13b;\n        *(0x006256f8) = 0;\n    } while (1);\nlabel_51:\n    if (*(0x006256e0) == 0) {\n        goto label_54;\n    }\nlabel_10:\n    rax = imp.__libc_start_main;\n    ecx = 3;\n    edx = 0;\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    dl = (rdx != 0) ? 1 : 0;\n    edx = (int32_t) dl;\n    rax += rdx;\n    *(0x006255c0) = rax;\n    eax = fcn_00411c20 (0);\n    edx = imp.__libc_start_main;\n    r13d = eax;\n    if (edx == 4) {\n        goto label_55;\n    }\n    if (edx == 1) {\n        goto label_55;\n    }\n    if (*(0x00625670) == 0) {\n        eax = 0;\n        if (edx != 0) {\n            goto label_56;\n        }\n    }\n    eax = r13d;\n    eax &= 0xfffffffd;\n    eax--;\n    al = (eax == 0) ? 1 : 0;\n    dl = (r13d == 6) ? 1 : 0;\n    eax |= edx;\n    eax = (int32_t) al;\n    goto label_56;\n    r12 = imp.__libc_start_main;\n    goto label_0;\n    fcn_0040afb0 (\"--time\", *(0x00625970), 0x419800, 0x4197d0, 4, *(0x006245b8));\n    eax = *((rax*4 + 0x4197d0));\n    *(0x006256f4) = eax;\n    goto label_0;\n    r14d = 1;\n    fcn_0040afb0 (\"--sort\", *(0x00625970), 0x419860, 0x419830, 4, *(0x006245b8));\n    eax = *((rax*4 + 0x419830));\n    *(0x006256f0) = eax;\n    goto label_0;\n    *(0x006256e8) = 0x90;\n    *(0x006256dc) = 0x90;\n    *(0x006256e0) = 1;\n    *(0x006245a0) = 1;\n    goto label_0;\n    *(0x00625698) = 0;\n    goto label_0;\n    fcn_0040afb0 (\"--quoting-style\", *(0x00625970), 0x41ea00, 0x41e9c0, 4, *(0x006245b8));\n    fcn_00411c30 (0, *((rax*4 + 0x41e9c0)));\n    goto label_0;\n    fcn_0040afb0 (\"--indicator-style\", *(0x00625970), 0x419f60, 0x419f50, 4, *(0x006245b8));\n    eax = *((rax*4 + 0x419f50));\n    *(0x006256d4) = eax;\n    goto label_0;\n    rsi = imp.__libc_start_main;\n    if (rsi == 0) {\n        goto label_57;\n    }\n    eax = fcn_0040afb0 (\"--hyperlink\", rsi, 0x419780, 0x419740, 4, *(0x006245b8));\n    edx = *((rax*4 + 0x419740));\n    if (edx == 1) {\n        goto label_57;\n    }\n    eax = 0;\n    if (edx != 2) {\n        goto label_58;\n    }\n    eax = isatty (1);\n    al = (eax != 0) ? 1 : 0;\n    eax = (int32_t) al;\n    goto label_58;\n    fcn_00412980 (0x10);\n    rdx = imp.__libc_start_main;\n    *(rax) = rdx;\n    rdx = imp.__libc_start_main;\n    *(0x006256a0) = rax;\n    *((rax + 8)) = rdx;\n    goto label_0;\n    *(0x006256b4) = r13b;\n    goto label_0;\n    *(0x006256f8) = 0;\n    r12d = \"full-iso\";\n    goto label_0;\n    fcn_0040afb0 (\"--format\", *(0x00625970), 0x4198c0, 0x419890, 4, *(0x006245b8));\n    eax = *((rax*4 + 0x419890));\n    *(0x006256f8) = eax;\n    goto label_0;\n    *(0x006256d4) = 2;\n    goto label_0;\n    *(0x006256b8) = 4;\n    goto label_0;\n    rsi = imp.__libc_start_main;\n    if (rsi == 0) {\n        goto label_59;\n    }\n    fcn_0040afb0 (\"--color\", rsi, 0x419780, 0x419740, 4, *(0x006245b8));\n    eax = *((rax*4 + 0x419740));\n    if (eax == 1) {\n        goto label_59;\n    }\n    if (eax == 2) {\n        goto label_60;\n    }\nlabel_6:\n    *(0x006256d2) = 0;\n    goto label_0;\n    eax = fcn_0040dfa0 (*(0x00625970), 0x6256e8, 0x6256e0);\n    if (eax != 0) {\n        goto label_61;\n    }\n    eax = imp.__libc_start_main;\n    *(0x006256dc) = eax;\n    rax = imp.__libc_start_main;\n    *(0x006245a0) = rax;\n    goto label_0;\n    rdi = imp.__libc_start_main;\n    al = fcn_00404b40 ();\n    if (al != 0) {\n        goto label_0;\n    }\n    rax = fcn_00412290 (*(0x00625970));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"invalid line width\");\n    r8 = rbx;\n    rcx = rax;\n    eax = 0;\n    error (2, 0, \"%s: %s\");\n    *(0x006256f0) = 3;\n    r14d = 1;\n    goto label_0;\n    *(0x006256f4) = 2;\n    goto label_0;\n    *(0x006256f0) = 4;\n    r14d = 1;\n    goto label_0;\n    *(0x006256ee) = r13b;\n    goto label_0;\n    *(0x006256f8) = 3;\n    goto label_0;\n    *(0x006256ec) = r13b;\n    goto label_0;\n    *(0x006256ef) = r13b;\n    goto label_0;\n    *(0x00625698) = r13b;\n    goto label_0;\n    *(0x006256d4) = 1;\n    goto label_0;\n    *(0x006256f8) = 0;\n    *(0x006245a8) = 0;\n    goto label_0;\n    *(0x006256f8) = 4;\n    goto label_0;\n    r15d = 1;\n    goto label_0;\n    *(0x006256bc) = r13b;\n    goto label_0;\n    *(0x006256e8) = 0xb0;\n    *(0x006256dc) = 0xb0;\n    *(0x006256e0) = 1;\n    *(0x006245a0) = 1;\n    goto label_0;\n    *(0x006256f8) = 0;\n    *(0x006245a9) = 0;\n    goto label_0;\n    *(0x006256b0) = 2;\n    *(0x006256f0) = 0xffffffff;\n    if (*(0x006256f8) == 0) {\n        goto label_62;\n    }\nlabel_30:\n    *(0x006256ec) = 0;\n    r14d = 1;\n    *(0x006256d2) = 0;\n    *(0x006256d1) = 0;\n    goto label_0;\n    *(0x006256b5) = r13b;\n    goto label_0;\n    *(0x006256f4) = 1;\n    goto label_0;\n    fcn_00411c30 (0, 7);\n    goto label_0;\n    *(0x006256b0) = 2;\n    goto label_0;\n    *(0x00625725) = r13b;\n    goto label_0;\n    *(0x006256f0) = 1;\n    r14d = 1;\n    goto label_0;\n    *(0x006256f0) = 0xffffffff;\n    r14d = 1;\n    goto label_0;\n    edx = 5;\n    rax = dcgettext (0, \"invalid tab size\");\n    rcx |= 0xffffffffffffffff;\n    rax = fcn_00412c10 (*(0x00625970), 0, 0, rcx, 0x41b08a, rax);\n    *(0x00625680) = rax;\n    goto label_0;\n    *(0x006256f0) = 2;\n    r14d = 1;\n    goto label_0;\n    *(0x006256b6) = r13b;\n    goto label_0;\n    fcn_00411c30 (0, 5);\n    goto label_0;\n    fcn_00411c30 (0, 0);\n    goto label_0;\n    *(0x006256b8) = 5;\n    goto label_0;\n    rdx = imp.__libc_start_main;\n    *((rsp + 8)) = rdx;\n    fcn_00412980 (0x10);\n    rdx = *((rsp + 8));\n    *(rax) = rdx;\n    rdx = imp.__libc_start_main;\n    *((rax + 8)) = rdx;\n    *(0x006256a8) = rax;\n    goto label_0;\n    *(0x006256b8) = 3;\n    goto label_0;\n    *(0x006245a8) = 0;\n    goto label_0;\n    *(0x006256d4) = 3;\n    goto label_0;\n    *(0x006256d8) = r13b;\n    goto label_0;\n    *(0x006256f8) = 2;\n    goto label_0;\n    fcn_00412980 (0x10);\n    rdx = imp.__libc_start_main;\n    *(rax) = 0x41b204;\n    *((rax + 8)) = rdx;\n    *(0x006256a8) = rax;\n    fcn_00412980 (0x10);\n    rdx = imp.__libc_start_main;\n    *(rax) = 0x41b203;\n    *((rax + 8)) = rdx;\n    *(0x006256a8) = rax;\n    goto label_0;\n    if (*(0x006256b0) != 0) {\n        goto label_0;\n    }\n    *(0x006256b0) = 1;\n    goto label_0;\n    if (*(0x006256f8) == 0) {\n        goto label_0;\n    }\n    *(0x006256f8) = 1;\n    goto label_0;\n    eax = *(0x006245ac);\n    rcx = *(str.8.29);\n    if (eax == 1) {\n        goto label_63;\n    }\n    esi = 0x41b135;\n    eax = \"vdir\";\n    if (eax != 2) {\n        rsi = rax;\n    }\nlabel_29:\n    eax = 0;\n    r9d = \"David MacKenzie\";\n    r8d = \"Richard M. Stallman\";\n    fcn_00412840 (*(obj.stdout), rsi, \"GNU coreutils\");\n    rax = exit (0);\nlabel_49:\n    *(0x00625670) = rax;\n    goto label_1;\nlabel_47:\n    rax = fcn_00412290 (r12);\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"ignoring invalid value of environment variable QUOTING_STYLE: %s\");\n    rcx = r12;\n    eax = 0;\n    rax = error (0, 0, rax);\n    goto label_2;\nlabel_48:\n    rdi = rax;\n    al = fcn_00404b40 ();\n    if (al != 0) {\n        goto label_3;\n    }\n    rax = fcn_00412290 (r12);\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"ignoring invalid width in environment variable COLUMNS: %s\");\n    rcx = r12;\n    eax = 0;\n    eax = error (0, 0, rax);\n    goto label_3;\nlabel_55:\n    eax = 0;\nlabel_56:\n    *(0x00625768) = al;\n    *(0x00625768) &= 1;\n    rax = fcn_00411be0 (0);\n    *(0x00625690) = rax;\n    if (r13d == 7) {\n        goto label_64;\n    }\nlabel_31:\n    eax = imp.__libc_start_main;\n    if (eax <= 1) {\n        goto label_65;\n    }\n    eax -= 2;\n    esi = *((rax + str.__));\n    r13 = rax + str___;\n    if (sil == 0) {\n        goto label_65;\n    }\n    do {\n        r13++;\n        fcn_00411c40 (*(0x00625690), rsi, 1);\n        esi = *(r13);\n    } while (sil != 0);\nlabel_65:\n    rax = fcn_00411be0 (0);\n    rdi = rax;\n    *(0x00625688) = rax;\n    fcn_00411c40 (rdi, 0x3a, 1);\n    if (*(0x006256d8) != 0) {\n        if (*(0x006256f8) == 0) {\n            goto label_66;\n        }\nlabel_13:\n        *(0x006256d8) = 0;\n    }\n    eax = imp.__libc_start_main;\n    edx = imp.__libc_start_main;\n    eax--;\n    if (eax <= 1) {\n        if (r14b == 0) {\n            goto label_67;\n        }\n    }\n    if (edx != 0) {\n        goto label_17;\n    }\nlabel_12:\n    if (r12 != 0) {\n        goto label_39;\n    }\n    goto label_68;\n    do {\n        r12 += 6;\nlabel_39:\n        eax = strncmp (r12, \"posix-\", 6);\n        if (eax != 0) {\n            goto label_69;\n        }\n        al = fcn_0040c190 (2);\n    } while (al != 0);\nlabel_17:\n    r12 = *(0x0062463c);\n    if (*(0x006256d2) != 0) {\n        goto label_70;\n    }\nlabel_20:\n    if (*(0x006256b8) == 1) {\n        goto label_71;\n    }\nlabel_18:\n    if (*(0x006256b6) != 0) {\n        rax = fcn_0040ca80 (0x1e, 0, 0x404800, 0x404810, 0x404850);\n        *(0x00625788) = rax;\n        if (rax == 0) {\n            goto label_72;\n        }\n        r8d = imp.free;\n        ecx = imp.malloc;\n        edx = 0;\n        esi = 0;\n        edi = 0x6254a0;\n        _obstack_begin ();\n    }\n    rax = getenv (0x41b360);\n    rax = fcn_00417410 (rax);\n    *(0x00625668) = rax;\n    eax = imp.__libc_start_main;\n    eax -= 2;\n    eax &= 0xfffffffd;\n    if (eax != 0) {\n        if (*(0x006256f8) != 0) {\n            goto label_73;\n        }\n    }\nlabel_14:\n    *(0x00625661) = 1;\n    eax = 0;\nlabel_15:\n    *(0x00625660) = al;\n    *(0x00625660) &= 1;\n    if (*(0x006256d8) != 0) {\n        goto label_74;\n    }\nlabel_22:\n    if (*(0x006256d1) != 0) {\n        goto label_75;\n    }\nlabel_27:\n    r13d = ebp;\n    *(0x00625778) = 0x64;\n    rax = fcn_00412980 (0x4e20);\n    r13d -= r12d;\n    *(0x00625770) = 0;\n    *(0x00625780) = rax;\n    fcn_004084b0 ();\n    if (r13d <= 0) {\n        goto label_76;\n    }\n    do {\n        r12++;\n        fcn_00408580 (*((rbx + r12*8)), 0, 1, 0x41b08a);\n    } while (ebp > r12d);\n    if (*(0x00625770) != 0) {\n        goto label_77;\n    }\nlabel_23:\n    r13d--;\n    rbx = imp.__libc_start_main;\n    if (r13d > 0) {\n        goto label_8;\n    }\n    goto label_78;\n    do {\nlabel_4:\n        edx = *((rbx + 0x10));\n        fcn_004092a0 (rdi, *((rbx + 8)), rdx);\n        free (*(rbx));\n        free (*((rbx + 8)));\n        free (rbx);\n        *(0x00625678) = 1;\nlabel_5:\n        rbx = imp.__libc_start_main;\nlabel_8:\n        if (rbx == 0) {\n            goto label_24;\n        }\n        rax = *((rbx + 0x18));\n        rdi = *(rbx);\n        *(0x00625740) = rax;\n        rax = imp.__libc_start_main;\n    } while (rax == 0);\n    if (rdi != 0) {\n        goto label_4;\n    }\n    rdx = imp.__libc_start_main;\n    rcx = imp.__libc_start_main;\n    rcx -= *(0x006254b0);\n    if (rcx <= 0xf) {\n        goto label_79;\n    }\n    rcx = rdx - 0x10;\n    rsi = rsp + 0x20;\n    *(0x006254b8) = rcx;\n    rcx = *((rdx - 0x10));\n    rdx = *((rdx - 8));\n    *((rsp + 0x20)) = rcx;\n    *((rsp + 0x28)) = rdx;\n    rax = fcn_0040d260 (rax);\n    if (rax == 0) {\n        goto label_80;\n    }\n    free (rax);\n    free (*(rbx));\n    free (*((rbx + 8)));\n    free (rbx);\n    goto label_5;\nlabel_60:\n    eax = isatty (1);\n    if (eax == 0) {\n        goto label_6;\n    }\nlabel_59:\n    *(0x006256d2) = r13b;\n    *(0x00625680) = 0;\n    goto label_0;\nlabel_57:\n    eax = 1;\nlabel_58:\n    *(0x006256d1) = al;\n    *(0x006256d1) &= 1;\n    goto label_0;\n    do {\nlabel_24:\n        if (*(0x006256d2) != 0) {\n            if (*(0x006256d0) != 0) {\n                goto label_81;\n            }\n        }\nlabel_11:\n        if (*(0x006256d8) != 0) {\n            goto label_82;\n        }\nlabel_28:\n        rbx = imp.__libc_start_main;\n        if (rbx != 0) {\n            rax = fcn_0040c5f0 (rbx);\n            if (rax != 0) {\n                goto label_83;\n            }\n            fcn_0040ccc0 (rbx);\n        }\n        eax = imp.__libc_start_main;\n        return rax;\nlabel_53:\n        eax = isatty (1);\n        if (eax != 0) {\n            goto label_84;\n        }\n        *(0x006256f8) = 1;\n        goto label_7;\nlabel_45:\n        *(0x006256f8) = 2;\n        fcn_00411c30 (0, 7);\n        goto label_7;\nlabel_76:\n        if (*(0x006256b5) == 0) {\n            goto label_85;\n        }\n        fcn_00408580 (0x41d794, 3, 1, 0x41b08a);\nlabel_16:\n        if (*(0x00625770) != 0) {\n            goto label_77;\n        }\nlabel_78:\n        rbx = imp.__libc_start_main;\n    } while (rbx == 0);\n    if (*((rbx + 0x18)) != 0) {\n        goto label_8;\n    }\n    *(0x00625678) = 0;\n    goto label_8;\nlabel_50:\n    rax = fcn_00412290 (r12);\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"ignoring invalid tab size in environment variable TABSIZE: %s\");\n    rcx = r12;\n    eax = 0;\n    error (0, 0, rax);\n    goto label_9;\nlabel_54:\n    rax = getenv (\"LS_BLOCK_SIZE\");\n    r13 = rax;\n    fcn_0040dfa0 (rax, 0x6256e8, 0x6256e0);\n    if (r13 == 0) {\n        goto label_86;\n    }\nlabel_41:\n    eax = imp.__libc_start_main;\n    *(0x006256dc) = eax;\n    rax = imp.__libc_start_main;\n    *(0x006245a0) = rax;\nlabel_42:\n    if (r15b == 0) {\n        goto label_10;\n    }\n    *(0x006256e8) = 0;\n    *(0x006256e0) = 0x400;\n    goto label_10;\nlabel_81:\n    if (*(0x00624420) == 2) {\n        rax = *(0x00624428);\n        if (*(rax) == 0x5b1b) {\n            goto label_87;\n        }\n    }\nlabel_36:\n    fcn_00405d40 ();\nlabel_37:\n    rdi = stdout;\n    fflush_unlocked ();\n    edi = 0;\n    rax = fcn_00405af0 ();\n    ebx = imp.__libc_start_main;\n    if (ebx == 0) {\n        goto label_88;\n    }\n    do {\n        raise (0x13);\n        ebx--;\n    } while (ebx != 0);\nlabel_88:\n    edi = imp.__libc_start_main;\n    if (edi == 0) {\n        goto label_11;\n    }\n    raise (rdi);\n    goto label_11;\nlabel_66:\n    if (*(0x006256d1) == 0) {\n        goto label_12;\n    }\n    goto label_13;\nlabel_73:\n    if (*(0x00625725) != 0) {\n        goto label_14;\n    }\n    if (*(0x006256ec) != 0) {\n        goto label_14;\n    }\n    *(0x00625661) = 0;\n    eax = 1;\n    if (*(0x006256b6) != 0) {\n        goto label_15;\n    }\n    if (*(0x006256d2) != 0) {\n        goto label_15;\n    }\n    if (*(0x006256d4) != 0) {\n        goto label_15;\n    }\n    eax = *(0x006256b4);\n    goto label_15;\nlabel_85:\n    fcn_00404d90 (0x41d794, 0, 1);\n    goto label_16;\nlabel_67:\n    if (edx == 0) {\n        goto label_12;\n    }\n    *(0x006256f0) = 4;\n    goto label_17;\nlabel_71:\n    eax = 2;\n    if (*(0x006256b5) == 0) {\n        if (*(0x006256d4) == 3) {\n            goto label_89;\n        }\n        eax -= eax;\n        eax &= 0xfffffffe;\n        eax += 4;\n    }\nlabel_89:\n    *(0x006256b8) = eax;\n    goto label_18;\nlabel_70:\n    rax = getenv (\"LS_COLORS\");\n    *((rsp + 0x18)) = rax;\n    if (rax == 0) {\n        goto label_90;\n    }\n    if (*(rax) == 0) {\n        goto label_90;\n    }\n    *((rsp + 0x15)) = 0x3f3f;\n    *((rsp + 0x17)) = 0;\n    rax = fcn_00412bb0 (rax);\n    *(0x006256c0) = rax;\n    *((rsp + 0x20)) = rax;\nlabel_19:\n    rax = *((rsp + 0x18));\n    edx = *(rax);\n    if (dl == 0x2a) {\n        goto label_91;\n    }\n    if (dl == 0x3a) {\n        goto label_92;\n    }\n    if (dl == 0) {\n        goto label_93;\n    }\n    rdx = rax + 1;\n    *((rsp + 0x18)) = rdx;\n    edx = *(rax);\n    *((rsp + 0x15)) = dl;\n    if (*((rax + 1)) == 0) {\n        goto label_38;\n    }\n    rdx = rax + 2;\n    *((rsp + 0x18)) = rdx;\n    edx = *((rax + 1));\n    *((rsp + 0x16)) = dl;\n    rdx = rax + 3;\n    *((rsp + 0x18)) = rdx;\n    if (*((rax + 2)) != 0x3d) {\n        goto label_38;\n    }\n    r13d = 0;\n    esi = 0x41b1c8;\n    while (eax != 0) {\n        r13++;\n        rsi = *((r13*8 + 0x419e80));\n        if (rsi == 0) {\n            goto label_94;\n        }\n        eax = strcmp (rsp + 0x15, rsi);\n    }\n    rcx = (int64_t) r13d;\n    rax = *((rsp + 0x20));\n    rcx <<= 4;\n    rcx += 0x624420;\n    *((rcx + 8)) = rax;\n    al = fcn_00404860 (rsp + 0x20, rsp + 0x18, 0, rcx);\n    if (al != 0) {\n        goto label_19;\n    }\nlabel_94:\n    rax = fcn_00412290 (rsp + 0x15);\n    edx = 5;\n    r13 = rax;\n    rax = dcgettext (0, \"unrecognized prefix: %s\");\n    rcx = r13;\n    eax = 0;\n    error (0, 0, rax);\nlabel_38:\n    edx = 5;\n    rax = dcgettext (0, \"unparsable value for LS_COLORS environment variable\");\n    eax = 0;\n    error (0, 0, rax);\n    free (*(0x006256c0));\n    rdi = imp.__libc_start_main;\n    while (rdi != 0) {\n        r13 = *((rdi + 0x20));\n        free (rdi);\n        rdi = r13;\n    }\n    *(0x006256d2) = 0;\nlabel_93:\n    if (*(0x00624490) == 6) {\n        goto label_95;\n    }\nlabel_32:\n    if (*(0x006256d2) == 0) {\n        goto label_20;\n    }\n    al = fcn_00404ae0 (0xd);\n    if (al == 0) {\n        al = fcn_00404ae0 (0xe);\n        if (al == 0) {\n            goto label_96;\n        }\n        if (*(0x00625750) == 0) {\n            goto label_96;\n        }\n    }\nlabel_21:\n    *(0x006256bd) = 1;\n    goto label_20;\nlabel_96:\n    al = fcn_00404ae0 (0xc);\n    if (al == 0) {\n        goto label_20;\n    }\n    if (*(0x006256f8) != 0) {\n        goto label_20;\n    }\n    goto label_21;\nlabel_74:\n    edx = 0;\n    esi = 0;\n    r8d = imp.free;\n    ecx = imp.malloc;\n    edi = 0x625560;\n    _obstack_begin ();\n    r8d = imp.free;\n    edx = 0;\n    esi = 0;\n    ecx = imp.malloc;\n    edi = 0x625500;\n    _obstack_begin ();\n    goto label_22;\nlabel_77:\n    fcn_00404f40 ();\n    if (*(0x006256b5) == 0) {\n        goto label_97;\n    }\nlabel_35:\n    if (*(0x00625770) == 0) {\n        goto label_23;\n    }\n    fcn_00407ca0 ();\n    if (*(0x00625740) == 0) {\n        goto label_24;\n    }\n    rdi = stdout;\n    rax = *((rdi + 0x28));\n    if (*((rdi + 0x30)) <= rax) {\n        goto label_98;\n    }\n    rdx = rax + 1;\n    *((rdi + 0x28)) = rdx;\n    *(rax) = 0xa;\nlabel_44:\n    *(0x006255b8)++;\n    rbx = imp.__libc_start_main;\n    goto label_8;\nlabel_75:\n    eax = 0;\n    while (eax <= 0x5a) {\n        edx = 1;\n        if (eax < 0x41) {\n            esi = rax - 0x30;\n            if (esi <= 9) {\n                goto label_25;\n            }\n            ecx -= 0x2d;\n            if (ecx <= 1) {\n                goto label_99;\n            }\nlabel_26:\n            if (eax == 0x7e) {\n                goto label_99;\n            }\n            dl = (eax == 0x5f) ? 1 : 0;\n        }\nlabel_25:\n        *((rax + 0x6253a0)) |= dl;\n        rax++;\n        if (rax == 0x100) {\n            goto label_100;\n        }\n        ecx = eax;\n    }\n    esi = rax - 0x61;\n    edx = 1;\n    if (esi <= 0x19) {\n        goto label_25;\n    }\n    ecx -= 0x2d;\n    if (ecx > 1) {\n        goto label_26;\n    }\nlabel_99:\n    edx = 1;\n    goto label_25;\nlabel_100:\n    rax = fcn_00412d40 ();\n    edx = 0x41b08a;\n    if (rax == 0) {\n        rax = rdx;\n    }\n    *(0x00625748) = rax;\n    goto label_27;\nlabel_82:\n    esi = 0x625560;\n    fcn_00405390 (\"//DIRED//\");\n    esi = 0x625500;\n    fcn_00405390 (\"//SUBDIRED//\");\n    eax = fcn_00411c20 (*(0x00625690));\n    esi = \"//DIRED-OPTIONS// --quoting-style=%s\\n\";\n    edi = 1;\n    rdx = *((rax*8 + 0x41ea00));\n    eax = 0;\n    printf_chk ();\n    goto label_28;\nlabel_63:\n    esi = 0x41b1b8;\n    goto label_29;\nlabel_62:\n    eax = isatty (1);\n    eax -= eax;\n    eax += 2;\n    *(0x006256f8) = eax;\n    goto label_30;\nlabel_69:\n    if (*(r12) == 0x2b) {\n        goto label_101;\n    }\nlabel_40:\n    rax = fcn_0040acf0 (r12, 0x419fa0, 0x419f90, 4);\n    if (rax < 0) {\n        goto label_102;\n    }\n    if (rax == 1) {\n        goto label_103;\n    }\n    if (rax <= 1) {\n        goto label_104;\n    }\n    if (rax == 2) {\n        goto label_105;\n    }\n    if (rax == 3) {\n        al = fcn_0040c190 (2);\n        if (al == 0) {\n            goto label_34;\n        }\n        edx = 2;\n        rax = dcgettext (0, *(str._b__e___Y));\n        edx = 2;\n        *(str._b__e___Y) = rax;\n        rax = dcgettext (0, *(str._b__e__H:_M));\n        *(str._b__e__H:_M) = rax;\n    }\nlabel_34:\n    fcn_00404bb0 ();\n    goto label_17;\nlabel_84:\n    *(0x006256f8) = 2;\n    rax = fcn_00411c30 (0, 3);\n    *(0x00625698) = 1;\n    goto label_7;\nlabel_64:\n    fcn_00411c40 (rax, 0x20, 1);\n    goto label_31;\nlabel_90:\n    rax = getenv (\"COLORTERM\");\n    if (rax == 0) {\n        goto label_106;\n    }\n    if (*(rax) != 0) {\n        goto label_32;\n    }\nlabel_106:\n    rax = getenv (0x41b336);\n    r14 = rax;\n    if (rax == 0) {\n        goto label_107;\n    }\n    if (*(rax) == 0) {\n        goto label_107;\n    }\n    r15d = \"# Configuration file for dircolors, a utility to help you set the\";\n    r13 |= 0xffffffffffffffff;\n    while (eax != 0) {\nlabel_33:\n        eax = 0;\n        rdi = r15;\n        rcx = r13;\n        __asm (\"repne scasb al, byte [rdi]\");\n        rax = rcx;\n        rax = ~rax;\n        r15 += rax;\n        rax = r15;\n        rax -= str._Configuration_file_for_dircolors__a_utility_to_help_you_set_the;\n        if (rax > 0x104c) {\n            goto label_107;\n        }\n        eax = strncmp (r15, \"TERM \", 5);\n    }\n    eax = fcn_004159a0 (r15 + 5, r14, 0);\n    if (eax != 0) {\n        goto label_33;\n    }\n    goto label_32;\nlabel_104:\n    if (rax != 0) {\n        goto label_34;\n    }\n    *(str._b__e__H:_M) = 0x41b2f6;\n    *(str._b__e___Y) = 0x41b2f6;\n    goto label_34;\nlabel_97:\n    esi = 1;\n    fcn_00405140 (0);\n    goto label_35;\nlabel_87:\n    if (*(0x00624430) != 1) {\n        goto label_36;\n    }\n    rax = *(0x00624438);\n    if (*(rax) != 0x6d) {\n        goto label_36;\n    }\n    goto label_37;\nlabel_95:\n    eax = strncmp (*(str.01_36), \"target\", 6);\n    if (eax != 0) {\n        goto label_32;\n    }\n    *(0x00625750) = 1;\n    goto label_32;\nlabel_92:\n    rax++;\n    *((rsp + 0x18)) = rax;\n    goto label_19;\nlabel_91:\n    rax = fcn_00412980 (0x28);\n    rdi = rsp + 0x20;\n    r13 = rax;\n    rax = imp.__libc_start_main;\n    rcx = r13;\n    *(0x006256c8) = r13;\n    *((r13 + 0x20)) = rax;\n    rax = *((rsp + 0x20));\n    *((r13 + 8)) = rax;\n    al = fcn_00404860 (rdi, rsp + 0x18, 1, rcx);\n    if (al == 0) {\n        goto label_38;\n    }\n    rax = *((rsp + 0x18));\n    rdx = rax + 1;\n    *((rsp + 0x18)) = rdx;\n    if (*(rax) != 0x3d) {\n        goto label_38;\n    }\n    rax = *((rsp + 0x20));\n    *((r13 + 0x18)) = rax;\n    al = fcn_00404860 (rsp + 0x20, rsp + 0x18, 0, r13 + 0x10);\n    if (al != 0) {\n        goto label_19;\n    }\n    goto label_38;\n    rax = fcn_0040a530 (0);\nlabel_107:\n    *(0x006256d2) = 0;\n    goto label_32;\nlabel_102:\n    fcn_0040ae10 (\"time style\", r12, rax);\n    rbx = stderr;\n    edx = 5;\n    rax = dcgettext (0, \"Valid arguments are:\\n\");\n    rsi = rbx;\n    ebx = 0x419fa0;\n    rdi = rax;\n    eax = fputs_unlocked ();\n    ecx = \"full-iso\";\n    do {\n        rbx += 8;\n        edx = \"  - [posix-]%s\\n\";\n        esi = 1;\n        eax = 0;\n        rdi = stderr;\n        fprintf_chk ();\n        rcx = *(rbx);\n    } while (rcx != 0);\n    rbx = stderr;\n    edx = 5;\n    rax = dcgettext (0, \"  - +FORMAT (e.g., +%H:%M) for a 'date'-style format\\n\");\n    rdi = rax;\n    rsi = rbx;\n    fputs_unlocked ();\nlabel_52:\n    fcn_0040a530 (2);\nlabel_101:\n    r12++;\n    rax = strchr (r12, 0xa);\n    r13 = rax;\n    if (rax == 0) {\n        goto label_108;\n    }\n    r14 = rax + 1;\n    rax = strchr (r14, 0xa);\n    if (rax != 0) {\n        goto label_109;\n    }\n    *(r13) = 0;\nlabel_43:\n    *(str._b__e___Y) = r12;\n    *(str._b__e__H:_M) = r14;\n    goto label_34;\nlabel_68:\n    rax = getenv (\"TIME_STYLE\");\n    r12 = rax;\n    if (rax != 0) {\n        goto label_39;\n    }\n    r12d = 0x41dd6c;\n    goto label_40;\nlabel_86:\n    rax = getenv (0x41b28c);\n    if (rax != 0) {\n        goto label_41;\n    }\n    goto label_42;\nlabel_105:\n    *(str._b__e___Y) = 0x41b31d;\n    *(str._b__e__H:_M) = 0x41b311;\n    goto label_34;\nlabel_103:\n    *(str._b__e__H:_M) = 0x41b30e;\n    *(str._b__e___Y) = 0x41b30e;\n    goto label_34;\nlabel_108:\n    r14 = r12;\n    goto label_43;\nlabel_98:\n    esi = 0xa;\n    overflow ();\n    goto label_44;\nlabel_109:\n    rax = fcn_00412290 (r12);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"invalid time style format %s\");\n    rcx = rbx;\n    eax = 0;\n    error (2, 0, rax);\nlabel_80:\n    eax = assert_fail (\"found\", \"src/ls.c\", 0x638, \"main\");\nlabel_61:\n    r8 = imp.__libc_start_main;\n    fcn_00413220 (eax, *((rsp + 0x20)), 0, 0x419900);\nlabel_79:\n    assert_fail (\"dev_ino_size <= obstack_object_size (&dev_ino_obstack)\", \"src/ls.c\", 0x402, \"dev_ino_pop\");\nlabel_83:\n    assert_fail (\"hash_get_n_entries (active_dir_set) == 0\", \"src/ls.c\", 0x66c, \"main\");\nlabel_72:\n    return fcn_00412bd0 ();\n}\n"
        },
        {
            "funcName": "fcn_0040474b",
            "funcStartAddr": "0x40474b",
            "funcEndAddr": "0x40476a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40474b */\n#include <stdint.h>\n \nint32_t fcn_0040474b (void) {\n    eax = 0x624648;\n    if (rax != 0x624648) {\n        eax = 0;\n        if (rax == 0) {\n            goto label_0;\n        }\n        edi = 0x624648;\n        void (*rax)() ();\n    }\nlabel_0:\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_004047a1",
            "funcStartAddr": "0x4047a1",
            "funcEndAddr": "0x4047f8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4047a1 */\n#include <stdint.h>\n \nint64_t fcn_004047a1 (int32_t argc, func fini, func init, func main, func rtld_fini, void * stack_end, char ** ubp_av) {\n    rsi = argc;\n    r8 = fini;\n    rcx = init;\n    rdi = main;\n    r9 = rtld_fini;\n    xmm0 = stack_end;\n    rdx = ubp_av;\n    if (*(0x00624688) != 0) {\n        goto label_0;\n    }\n    r12d = section..dtors;\n    ebx = 0x623e48;\n    rbx -= section..dtors;\n    rbx >>= 3;\n    rbx--;\n    do {\n        rax = imp.__libc_start_main;\n        if (rax >= rbx) {\n            goto label_1;\n        }\n        rax++;\n        *(0x00624690) = rax;\n        uint64_t (*r12 + rax*8)() ();\n    } while (1);\nlabel_1:\n    fcn_0040474b ();\n    *(0x00624688) = 1;\n    return rax;\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004047f8",
            "funcStartAddr": "0x4047f8",
            "funcEndAddr": "0x40488b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4047f8 */\n#include <stdint.h>\n \nint64_t fcn_004047f8 (void) {\n    do {\n        esi = 0x624648;\n        ecx = 2;\n        rsi -= 0x624648;\n        rsi >>= 3;\n        rax = rsi;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rsi = rax;\n        if (rax != 0) {\n            eax = 0;\n            if (rax == 0) {\n                goto label_0;\n            }\n            edi = 0x624648;\n            void (*rax)() ();\n        }\nlabel_0:\n        return rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00404860",
            "funcStartAddr": "0x404860",
            "funcEndAddr": "0x404ada",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x404860 */\n#include <stdint.h>\n \nint32_t fcn_00404860 (int64_t arg1, char * arg2, int64_t arg3, int64_t arg4) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r11 = rcx;\n    r8 = *(rsi);\n    r10d = 0;\n    r9 = *(rdi);\n    eax = 1;\n    rbx = 0x7e000000000000;\n    while (r12b <= 0x3e) {\n        r8 += 2;\n        ecx &= 0x1f;\nlabel_0:\n        *(r9) = cl;\n        r10++;\n        r9++;\nlabel_4:\n        ecx = *(r8);\n        if (cl == 0x3d) {\n            goto label_6;\n        }\n        if (cl <= 0x3d) {\nlabel_1:\n            goto label_7;\n        }\n        if (cl == 0x5c) {\n            goto label_8;\n        }\n        if (cl != 0x5e) {\n            goto label_2;\n        }\n        ecx = *((r8 + 1));\n        r13 = r8 + 1;\n        r12d = rcx - 0x40;\n    }\n    if (cl == 0x3f) {\n        goto label_9;\n    }\n    r8 = r13;\n    eax = 0;\nlabel_3:\n    *(rdi) = r9;\n    r12 = rbx;\n    r13 = rbx;\n    *(rsi) = r8;\n    r14 = rbx;\n    *(r11) = r10;\n    return eax;\nlabel_8:\n    ecx = *((r8 + 1));\n    r8 += 2;\n    if (cl > 0x78) {\n        goto label_0;\n    }\n    r12d = (int32_t) cl;\n    /* switch table (121 cases) at 0x418800 */\nlabel_7:\n    if (cl == 0) {\n        goto label_10;\n    }\n    if (cl == 0x3a) {\n        goto label_10;\n    }\nlabel_2:\n    r8++;\n    *(r9) = cl;\n    r10++;\n    r9++;\n    ecx = *(r8);\n    if (cl != 0x3d) {\n        goto label_1;\n    }\nlabel_6:\n    if (bpl == 0) {\n        goto label_2;\n    }\n    eax = edx;\n    goto label_3;\nlabel_10:\n    eax = 1;\n    goto label_3;\nlabel_9:\n    *(r9) = 0x7f;\n    r10++;\n    r9++;\n    r8 = r13;\n    goto label_4;\n    r12d = *(r8);\n    ecx -= 0x30;\n    r13d = r12 - 0x30;\n    if (r13b > 7) {\n        goto label_0;\n    }\n    do {\n        r8++;\n        ecx = r12 + rcx*8 - 0x30;\n        r12d = *(r8);\n        r13d = r12 - 0x30;\n    } while (r13b <= 7);\n    goto label_0;\n    r13d = 0;\nlabel_5:\n    r12d = *(r8);\n    ecx = r12 - 0x30;\n    if (cl > 0x36) {\n        goto label_11;\n    }\n    do {\n        r14 = rax;\n        r14 <<= cl;\n        if ((r14d & 0x7e0000) != 0) {\n            goto label_12;\n        }\n        if ((r14 & rbx) != 0) {\n            goto label_13;\n        }\n        if ((r14d & 0x3ff) == 0) {\n            goto label_11;\n        }\n        r8++;\n        r13d <<= 4;\n        r13d = r12 + r13 - 0x30;\n        r12d = *(r8);\n        ecx = r12 - 0x30;\n    } while (cl <= 0x36);\nlabel_11:\n    *(r9) = r13b;\n    r10++;\n    r9++;\n    goto label_4;\n    ecx = 7;\n    goto label_0;\n    ecx = 0x7f;\n    goto label_0;\n    ecx = 0x20;\n    goto label_0;\n    ecx = 0xc;\n    goto label_0;\n    ecx = 0x1b;\n    goto label_0;\n    ecx = 0xb;\n    goto label_0;\n    ecx = 9;\n    goto label_0;\n    ecx = 0xd;\n    goto label_0;\n    ecx = 0xa;\n    goto label_0;\n    ecx = 8;\n    goto label_0;\nlabel_12:\n    r13d <<= 4;\n    r8++;\n    r13d = r12 + r13 - 0x37;\n    goto label_5;\nlabel_13:\n    r13d <<= 4;\n    r8++;\n    r13d = r12 + r13 - 0x57;\n    goto label_5;\n}\n"
        },
        {
            "funcName": "fcn_00404ae0",
            "funcStartAddr": "0x404ae0",
            "funcEndAddr": "0x404b37",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x404ae0 */\n#include <stdint.h>\n \nint32_t fcn_00404ae0 (int64_t arg1) {\n    rdi = arg1;\n    eax = 0;\n    rdi <<= 4;\n    rdx = *((rdi + 0x624420));\n    if (rdx != 0) {\n        rsi = *((rdi + 0x624428));\n        if (rdx == 1) {\n            goto label_0;\n        }\n        eax = 1;\n        if (rdx == 2) {\n            goto label_1;\n        }\n    }\n    return eax;\nlabel_0:\n    al = (*(rsi) != 0x30) ? 1 : 0;\n    return eax;\nlabel_1:\n    edi = 0x41b02d;\n    ecx = 2;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (*(rsi) > 0x30) ? 1 : 0;\n    al = (al != 0) ? 1 : 0;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00404b40",
            "funcStartAddr": "0x404b40",
            "funcEndAddr": "0x404ba6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x404b40 */\n#include <stdint.h>\n \nuint64_t fcn_00404b40 (void) {\n    int64_t var_8h;\n    eax = fcn_004132b0 (rdi, 0, 0, rsp + 8, 0x41b08a);\n    if (eax != 0) {\n        if (eax == 1) {\n            *(0x00625670) = 0xffffffffffffffff;\n            eax = 1;\n            return eax;\n        }\n        eax = 0;\n        return eax;\n    }\n    rax = *((rsp + 8));\n    *(0x00625670) = rax;\n    eax = 1;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00404bb0",
            "funcStartAddr": "0x404bb0",
            "funcEndAddr": "0x404d89",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x404bb0 */\n#include <stdint.h>\n \nint64_t fcn_00404bb0 (void) {\n    int64_t var_8h;\n    uint32_t var_10h;\n    uint32_t var_18h;\n    int64_t var_20h;\n    int64_t var_620h;\n    esi = 0;\nlabel_1:\n    rax = *((rsi + 0x624410));\n    edx = *(rax);\n    if (dl == 0) {\n        goto label_8;\n    }\n    do {\n        ecx = *((rax + 1));\n        if (dl == 0x25) {\n            goto label_9;\n        }\nlabel_0:\n        edx = ecx;\nlabel_3:\n        rax++;\n    } while (dl != 0);\nlabel_8:\n    eax = 0;\n    goto label_10;\nlabel_9:\n    if (cl == 0x25) {\n        goto label_11;\n    }\n    if (cl != 0x62) {\n        goto label_0;\n    }\nlabel_10:\n    *((rsp + rsi + 0x10)) = rax;\n    rsi += 8;\n    if (rsi != 0x10) {\n        goto label_1;\n    }\n    r15d = 5;\n    if (*((rsp + 0x10)) == 0) {\n        goto label_12;\n    }\nlabel_2:\n    r14 = rsp + 0x620;\n    rbx = rsp + 0x20;\n    r12d = 0x2000e;\n    ebp = 0;\n    do {\n        *((rsp + 8)) = r15;\n        rax = nl_langinfo (r12d);\n        rdi = rax;\n        r13 = rax;\n        rax = strchr (rdi, 0x25);\n        if (rax != 0) {\n            goto label_4;\n        }\n        rax = fcn_0040e570 (r13, rbx, 0x80, rsp + 8, 0, 0);\n        if (rax > 0x7f) {\n            goto label_4;\n        }\n        rax = *((rsp + 8));\n        if (rbp < rax) {\n        }\n        rbx -= 0xffffffffffffff80;\n        r12d++;\n    } while (rbx != r14);\n    if (r15 <= rbp) {\n        goto label_13;\n    }\n    r15 = rbp;\n    goto label_2;\nlabel_11:\n    edx = *((rax + 2));\n    rax++;\n    goto label_3;\nlabel_5:\n    r12 += 8;\n    rbx += 8;\n    if (r12 != 0x10) {\n        goto label_14;\n    }\n    *(0x00624788) = 1;\nlabel_4:\n    return rax;\nlabel_12:\n    if (*((rsp + 0x18)) != 0) {\n        goto label_2;\n    }\n    goto label_4;\nlabel_13:\n    rbx = rsp + 0x10;\n    r12d = 0;\nlabel_14:\n    r10 = r12 * 0xc0;\n    rbp = *((r12 + 0x624410));\n    r15 = rsp + 0x20;\n    r13 = r10 + 0x6247a0;\n    goto label_15;\nlabel_6:\n    r9 = rax;\n    r9 -= rbp;\n    if (r9 > 0x80) {\n        goto label_4;\n    }\n    rax += 2;\n    edx = 1;\n    rdi = r13;\n    r8d = \"%.*s%s%s\";\n    rcx = 0xffffffffffffffff;\n    eax = 0;\n    esi = 0x80;\n    eax = snprintf_chk ();\nlabel_7:\n    if (eax > 0x7f) {\n        goto label_4;\n    }\n    r15 -= 0xffffffffffffff80;\n    r13 -= 0xffffffffffffff80;\n    if (r15 == r14) {\n        goto label_5;\n    }\nlabel_15:\n    rax = *(rbx);\n    if (rax != 0) {\n        goto label_6;\n    }\n    snprintf (r13, 0x80, 0x41d784, rbp);\n    goto label_7;\n}\n"
        },
        {
            "funcName": "fcn_00404d90",
            "funcStartAddr": "0x404d90",
            "funcEndAddr": "0x404df6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x404d90 */\n#include <stdint.h>\n \nuint64_t fcn_00404d90 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13d = edx;\n    r12 = rsi;\n    rax = fcn_00412980 (0x20);\n    rbx = rax;\n    eax = 0;\n    if (r12 != 0) {\n        rax = fcn_00412bb0 (r12);\n    }\n    *((rbx + 8)) = rax;\n    eax = 0;\n    if (rbp != 0) {\n        rax = fcn_00412bb0 (rbp);\n    }\n    *(rbx) = rax;\n    rax = imp.__libc_start_main;\n    *((rbx + 0x10)) = r13b;\n    *((rbx + 0x18)) = rax;\n    *(0x00625740) = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00404e20",
            "funcStartAddr": "0x404e20",
            "funcEndAddr": "0x404e78",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x404e20 */\n#include <stdint.h>\n \nuint64_t fcn_00404e20 (int64_t arg1) {\n    int64_t var_eh;\n    rdi = arg1;\n    rdx = rdi;\n    rbx = rdi;\n    fcn_00411cd0 (rsp + 0xe, 2, rdx, 0xffffffffffffffff, *(0x00625690));\n    edx = *((rsp + 0xe));\n    if (*(rbx) != dl) {\n        eax = 1;\n        return eax;\n    }\n    rax = strlen (rbx);\n    al = (rax != rbp) ? 1 : 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00404e80",
            "funcStartAddr": "0x404e80",
            "funcEndAddr": "0x404f3f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x404e80 */\n#include <stdint.h>\n \nuint64_t fcn_00404e80 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r12d = esi;\n    rbx = rdi;\n    strlen (rdi);\n    rcx = rax + 1;\n    eax = 3;\n    rdx:rax = rax * rcx;\n    __asm (\"seto dl\");\n    if (rax < 0) {\n        goto label_1;\n    }\n    edx = (int32_t) dl;\n    if (rdx != 0) {\n        goto label_1;\n    }\n    r13 = 0xffffffffffffffff;\n    rax = fcn_00412980 (rcx + rcx*2);\n    r14 = rax;\nlabel_0:\n    eax = *(rbx);\n    if (al == 0) {\n        goto label_2;\n    }\n    do {\n        rbx++;\n        if (al == 0x2f) {\n            if (r12b != 0) {\n                goto label_3;\n            }\n        }\n        edx = (int32_t) al;\n        r8 = rdx;\n        if (*((rdx + 0x6253a0)) == 0) {\n            goto label_4;\n        }\n        *(rbp) = al;\n        eax = *(rbx);\n        rbp++;\n    } while (al != 0);\nlabel_2:\n    *(rbp) = 0;\n    rax = r14;\n    return rax;\nlabel_4:\n    rdi = rbp;\n    ecx = \"%%%02x\";\n    rdx = r13;\n    esi = 1;\n    eax = 0;\n    rbp += 3;\n    sprintf_chk ();\n    goto label_0;\nlabel_3:\n    *(rbp) = 0x2f;\n    rbp++;\n    goto label_0;\nlabel_1:\n    return fcn_00412bd0 ();\n}\n"
        },
        {
            "funcName": "fcn_00404f40",
            "funcStartAddr": "0x404f40",
            "funcEndAddr": "0x4050c7",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x404f40 */\n#include <stdint.h>\n \nint64_t fcn_00404f40 (void) {\n    rbx = imp.__libc_start_main;\n    rax = imp.__libc_start_main;\n    rax >>= 1;\n    rax += rbx;\n    if (rax > *(0x00625758)) {\n        goto label_1;\n    }\nlabel_0:\n    if (rbx == 0) {\n        goto label_2;\n    }\n    rax = imp.__libc_start_main;\n    rdx = imp.__libc_start_main;\n    rcx = rax + rbx*8;\n    do {\n        *(rax) = rdx;\n        rax += 8;\n        rdx += 0xc8;\n    } while (rcx != rax);\nlabel_2:\n    if (*(0x006256f0) == 0xffffffff) {\n        goto label_3;\n    }\n    eax = setjmp (0x6246c0);\n    r8d = imp.__libc_start_main;\n    if (eax == 0) {\n        goto label_4;\n    }\n    if (r8d == 3) {\n        goto label_5;\n    }\n    rsi = imp.__libc_start_main;\n    rdi = imp.__libc_start_main;\n    if (rsi == 0) {\n        goto label_6;\n    }\n    rdx = imp.__libc_start_main;\n    rax = rdi;\n    rcx = rdi + rsi*8;\n    do {\n        *(rax) = rdx;\n        rax += 8;\n        rdx += 0xc8;\n    } while (rax != rcx);\nlabel_6:\n    eax = 1;\n    do {\n        edx = 0;\n        rax = (int64_t) eax;\n        if (r8d == 4) {\n            edx = imp.__libc_start_main;\n        }\n        ecx = *(0x006256b4);\n        edx += r8d;\n        rdx = rax + rdx*2;\n        eax = *(0x006256ef);\n        rax = rax + rdx*2;\n        rax = rcx + rax*2;\n        fcn_0040edd0 (rdi, rsi, *((rax*8 + 0x419580)));\nlabel_3:\n        return rax;\nlabel_4:\n        rsi = imp.__libc_start_main;\n        rdi = imp.__libc_start_main;\n    } while (1);\nlabel_1:\n    free (*(0x00625760));\n    edx = 0x18;\n    rax = rdx;\n    rdx:rax = rax * rbx;\n    __asm (\"seto dl\");\n    eax = 1;\n    edx = (int32_t) dl;\n    __asm (\"cmovs rdx, rax\");\n    if (rdx == 0) {\n        rdi <<= 3;\n        rax = fcn_00412980 (rbx + rbx*2);\n        rbx = imp.__libc_start_main;\n        *(0x00625760) = rax;\n        rax = rbx * 3;\n        *(0x00625758) = rax;\n        goto label_0;\n    }\n    fcn_00412bd0 ();\nlabel_5:\n    return assert_fail (\"sort_type != sort_version\", \"src/ls.c\", 0xee5, \"sort_files\");\n}\n"
        },
        {
            "funcName": "fcn_004050d0",
            "funcStartAddr": "0x4050d0",
            "funcEndAddr": "0x4050f8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4050d0 */\n#include <stdint.h>\n \nint64_t fcn_004050d0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rdi;\n    errno_location ();\n    rsi = rbp;\n    rdi = rbx;\n    *(rax) = 0;\n    return strcoll ();\n}\n"
        },
        {
            "funcName": "fcn_00405140",
            "funcStartAddr": "0x405140",
            "funcEndAddr": "0x4052bb",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x405140 */\n#include <stdint.h>\n \nuint64_t fcn_00405140 (int64_t arg1) {\n    rdi = arg1;\n    r13 = rdi;\n    r12d = (int32_t) sil;\n    if (rdi != 0) {\n        if (*(0x00625788) == 0) {\n            goto label_4;\n        }\n        rax = fcn_00404d90 (0, rdi, 0);\n    }\nlabel_4:\n    rbx = imp.__libc_start_main;\n    do {\nlabel_0:\n        rbx--;\n        if (rbx == -1) {\n            goto label_5;\n        }\nlabel_1:\n        rax = imp.__libc_start_main;\n        rbp = *((rax + rbx*8));\n        eax = *((rbp + 0xa8));\n        if (eax == 3) {\n            goto label_6;\n        }\n    } while (eax != 9);\nlabel_6:\n    r14 = *(rbp);\n    if (r13 == 0) {\n        goto label_7;\n    }\n    rax = fcn_0040b870 (r14);\n    if (*(rax) == 0x2e) {\n        goto label_8;\n    }\nlabel_3:\n    if (*(r14) == 0x2f) {\n        goto label_7;\n    }\n    rsi = r14;\n    edx = 0;\n    rdi = r13;\n    rax = fcn_0040bb70 ();\n    r14 = rax;\n    fcn_00404d90 (rax, *((rbp + 8)), r12d);\n    free (r14);\nlabel_2:\n    if (*((rbp + 0xa8)) != 9) {\n        goto label_0;\n    }\n    rbx--;\n    free (*(rbp));\n    free (*((rbp + 8)));\n    free (*((rbp + 0x10)));\n    if (rbx != -1) {\n        goto label_1;\n    }\nlabel_5:\n    rdx = imp.__libc_start_main;\n    if (rdx == 0) {\n        goto label_9;\n    }\n    rsi = imp.__libc_start_main;\n    rdi = rsi + rdx*8;\n    rax = rsi;\n    edx = 0;\n    do {\n        rcx = *(rax);\n        *((rsi + rdx*8)) = rcx;\n        cl = (*((rcx + 0xa8)) != 9) ? 1 : 0;\n        rax += 8;\n        ecx = (int32_t) cl;\n        rdx += rcx;\n    } while (rdi != rax);\nlabel_9:\n    *(0x00625770) = rdx;\n    return rax;\nlabel_7:\n    fcn_00404d90 (r14, *((rbp + 8)), r12d);\n    goto label_2;\nlabel_8:\n    edx = 0;\n    dl = (*((rax + 1)) == 0x2e) ? 1 : 0;\n    eax = *((rax + rdx + 1));\n    if (al == 0) {\n        goto label_0;\n    }\n    if (al == 0x2f) {\n        goto label_0;\n    }\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_004052c0",
            "funcStartAddr": "0x4052c0",
            "funcEndAddr": "0x405381",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4052c0 */\n#include <stdint.h>\n \nint64_t fcn_004052c0 (uint32_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    if (rdi >= rsi) {\n        goto label_3;\n    }\n    r12 = rsi;\n    rbx = rdi;\n    while (rcx != 0) {\n        rax = r12;\n        edx = 0;\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        edx = 0;\n        r9 = rax;\n        rax = rbp;\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        if (r9 <= rax) {\n            goto label_4;\n        }\n        if (rsi >= r8) {\n            goto label_5;\n        }\n        rax = rsi + 1;\n        *((rdi + 0x28)) = rax;\n        *(rsi) = 9;\nlabel_2:\n        rax = rbx;\n        edx = 0;\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rcx += rbx;\n        rbx = rcx;\n        rbx -= rdx;\n        if (rbx >= r12) {\n            goto label_6;\n        }\nlabel_0:\n        rdi = stdout;\n        rcx = imp.__libc_start_main;\n        rbp = rbx + 1;\n        rsi = *((rdi + 0x28));\n        r8 = *((rdi + 0x30));\n    }\nlabel_4:\n    if (rsi >= r8) {\n        goto label_7;\n    }\n    rax = rsi + 1;\n    *((rdi + 0x28)) = rax;\n    *(rsi) = 0x20;\nlabel_1:\n    rbx = rbp;\n    if (rbx < r12) {\n        goto label_0;\n    }\nlabel_6:\n    r12 = rbx;\n    return rax;\nlabel_7:\n    esi = 0x20;\n    overflow ();\n    goto label_1;\nlabel_5:\n    esi = 9;\n    overflow ();\n    rcx = imp.__libc_start_main;\n    goto label_2;\nlabel_3:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405390",
            "funcStartAddr": "0x405390",
            "funcEndAddr": "0x405456",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x405390 */\n#include <stdint.h>\n \nvoid fcn_00405390 (int64_t arg2) {\n    rsi = arg2;\n    rax = *((rsi + 0x18));\n    rbx = *((rsi + 0x10));\n    rbp -= rbx;\n    if (rbp <= 7) {\n        goto label_1;\n    }\n    if (rax == rbx) {\n        goto label_2;\n    }\nlabel_0:\n    rdx = *((rsi + 0x30));\n    rcx = *((rsi + 8));\n    rax += rdx;\n    rdx = ~rdx;\n    rax &= rdx;\n    rdx = *((rsi + 0x20));\n    r8 = rax;\n    r9 = rdx;\n    r8 -= rcx;\n    r9 -= rcx;\n    if (r8 > r9) {\n        rax = rdx;\n    }\n    rbp &= 0xfffffffffffffff8;\n    rbp += rbx;\n    *((rsi + 0x18)) = rax;\n    *((rsi + 0x10)) = rax;\n    rsi = stdout;\n    eax = fputs_unlocked ();\n    do {\n        rdx = *(rbx);\n        esi = \" %lu\";\n        edi = 1;\n        eax = 0;\n        rbx += 8;\n        printf_chk ();\n    } while (rbp != rbx);\n    rdi = stdout;\n    rax = *((rdi + 0x28));\n    if (rax < *((rdi + 0x30))) {\n        rdx = rax + 1;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = 0xa;\nlabel_1:\n        return rax;\nlabel_2:\n        *((rsi + 0x50)) |= 2;\n        goto label_0;\n    }\n    esi = 0xa;\n    return overflow ();\n}\n"
        },
        {
            "funcName": "fcn_00405460",
            "funcStartAddr": "0x405460",
            "funcEndAddr": "0x405519",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x405460 */\n#include <stdint.h>\n \nuint64_t fcn_00405460 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    ebx = edx;\n    if (rdi == 0) {\n        goto label_1;\n    }\n    eax = fcn_0040eb70 (rdi, 0);\n    rsi = stdout;\n    rdi = rbp;\n    ebx -= eax;\n    eax = 0;\n    __asm (\"cmovs ebx, eax\");\n    fputs_unlocked ();\n    rax = strlen (rbp);\n    rbp = (int64_t) ebx;\n    rbp += rax;\n    do {\n        rdi = stdout;\n        rdx = *((rdi + 0x28));\n        if (rdx >= *((rdi + 0x30))) {\n            goto label_2;\n        }\n        rcx = rdx + 1;\n        *((rdi + 0x28)) = rcx;\n        *(rdx) = 0x20;\nlabel_0:\n        ebx--;\n    } while (ebx != 0xffffffff);\n    do {\n        rax = imp.__libc_start_main;\n        rax = rbp + rax + 1;\n        *(0x006255b8) = rax;\n        return rax;\nlabel_2:\n        esi = 0x20;\n        eax = overflow ();\n        goto label_0;\nlabel_1:\n        rcx = rsi;\n        edi = 1;\n        esi = \"%*lu \";\n        eax = 0;\n        printf_chk ();\n        rbp = (int64_t) ebx;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00405520",
            "funcStartAddr": "0x405520",
            "funcEndAddr": "0x40555f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x405520 */\n#include <stdint.h>\n \nint32_t fcn_00405520 (int64_t arg1, int64_t arg2) {\n    int64_t var_ch;\n    rdi = arg1;\n    rsi = arg2;\n    eax = 0x41b06e;\n    ebx = edi;\n    if (dl == 0) {\n        goto label_0;\n    }\n    eax = 0;\n    while (1) {\nlabel_0:\n        edx = esi;\n        rdi = rax;\n        rsi = rbx;\n        void (*0x405460)() ();\n        *((rsp + 0xc)) = esi;\n        fcn_0040e160 (rdi);\n        esi = *((rsp + 0xc));\n    }\n}\n"
        },
        {
            "funcName": "fcn_00405580",
            "funcStartAddr": "0x405580",
            "funcEndAddr": "0x4055e1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x405580 */\n#include <stdint.h>\n \nuint64_t fcn_00405580 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    ebx = edi;\n    rax = fcn_00412040 (4, rdx);\n    r12 = rax;\n    rax = errno_location ();\n    rcx = r12;\n    eax = 0;\n    error (0, *(rax), rbp);\n    if (bl == 0) {\n        goto label_0;\n    }\n    *(0x006255d0) = 2;\n    do {\n        return rax;\nlabel_0:\n        eax = imp.__libc_start_main;\n    } while (eax != 0);\n    *(0x006255d0) = 1;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004057b0",
            "funcStartAddr": "0x4057b0",
            "funcEndAddr": "0x405899",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4057b0 */\n#include <stdint.h>\n \nint32_t fcn_004057b0 (uint32_t arg2, uint32_t arg3, int64_t arg4) {\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    if (dil == 0) {\n        goto label_3;\n    }\n    eax = esi;\n    eax &= 0xf000;\n    if (eax == 0x8000) {\n        goto label_4;\n    }\n    cl = (eax == 0x4000) ? 1 : 0;\nlabel_1:\n    eax = 0x2f;\n    if (cl != 0) {\n        goto label_0;\n    }\n    eax = 0;\n    if (*(0x006256d4) == 1) {\n        goto label_0;\n    }\n    if (dil == 0) {\n        goto label_5;\n    }\n    esi &= 0xf000;\n    eax = 0x40;\n    if (esi == 0xa000) {\n        goto label_6;\n    }\n    eax = 0x7c;\n    if (esi == 0x1000) {\n        goto label_7;\n    }\n    al = (esi == 0xc000) ? 1 : 0;\nlabel_2:\n    eax = -eax;\n    eax &= 0x3d;\n    do {\nlabel_0:\n        return eax;\nlabel_4:\n        eax = 0;\n    } while (*(0x006256d4) != 3);\n    esi &= 0x49;\n    eax -= eax;\n    eax = ~eax;\n    eax &= 0x2a;\n    return eax;\nlabel_3:\n    eax = 0;\n    if (edx == 5) {\n        goto label_0;\n    }\n    cl = (edx == 3) ? 1 : 0;\n    al = (edx == 9) ? 1 : 0;\n    ecx |= eax;\n    goto label_1;\nlabel_5:\n    eax = 0x40;\n    if (edx != 6) {\n        eax = 0x7c;\n        if (edx != 1) {\n            al = (edx == 7) ? 1 : 0;\n            goto label_2;\nlabel_7:\n            return eax;\n        }\n        return eax;\nlabel_6:\n        return eax;\n    }\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_004058a0",
            "funcStartAddr": "0x4058a0",
            "funcEndAddr": "0x4058ea",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4058a0 */\n#include <stdint.h>\n \nuint64_t fcn_004058a0 (int64_t arg2, int64_t arg3) {\n    rsi = arg2;\n    rdx = arg3;\n    edi = (int32_t) dil;\n    eax = fcn_004057b0 (rdi, rsi, rdx);\n    ebx = eax;\n    if (al == 0) {\n        goto label_0;\n    }\n    rdi = stdout;\n    rax = *((rdi + 0x28));\n    if (rax >= *((rdi + 0x30))) {\n        goto label_1;\n    }\n    rdx = rax + 1;\n    *((rdi + 0x28)) = rdx;\n    *(rax) = bl;\n    do {\n        *(0x006255b8)++;\nlabel_0:\n        al = (bl != 0) ? 1 : 0;\n        return rax;\nlabel_1:\n        esi = (int32_t) bl;\n        overflow ();\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00405af0",
            "funcStartAddr": "0x405af0",
            "funcEndAddr": "0x405c6f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x405af0 */\n#include <stdint.h>\n \nuint64_t fcn_00405af0 (void) {\n    int64_t var_8h;\n    int64_t var_18h;\n    int64_t var_28h;\n    int64_t var_38h;\n    int64_t var_48h;\n    int64_t var_58h;\n    int64_t var_68h;\n    int64_t var_78h;\n    int64_t var_88h;\n    if (dil != 0) {\n        goto label_1;\n    }\n    ebx = 0x419504;\n    while (eax == 0) {\n        if (rbx == 0x419530) {\n            goto label_2;\n        }\nlabel_0:\n        ebp = *(rbx);\n        rbx += 4;\n        esi = ebp;\n        edi = 0x6255e0;\n        eax = sigismember ();\n    }\n    esi = 0;\n    signal (ebp);\n    if (rbx != 0x419530) {\n        goto label_0;\n    }\nlabel_2:\n    return eax;\nlabel_1:\n    edi = 0x6255e0;\n    ebx = 0x419504;\n    r12d = 0x14;\n    sigemptyset ();\n    while (rbp != 0x419530) {\n        r12d = *(rbp);\n        rbp += 4;\n        sigaction (r12d, 0, rsp);\n        if (*(rsp) != 1) {\n            esi = r12d;\n            edi = 0x6255e0;\n            sigaddset ();\n        }\n    }\n    __asm (\"movdqa xmm0, xmmword [0x006255e0]\");\n    __asm (\"movdqa xmm1, xmmword [0x006255f0]\");\n    *((rsp + 0x88)) = 0x10000000;\n    __asm (\"movdqa xmm2, xmmword [0x00625600]\");\n    __asm (\"movdqa xmm3, xmmword [0x00625610]\");\n    r12d = 0x405560;\n    __asm (\"movdqa xmm4, xmmword [0x00625620]\");\n    __asm (\"movdqa xmm5, xmmword [0x00625630]\");\n    __asm (\"movups xmmword [rsp + 8], xmm0\");\n    __asm (\"movdqa xmm6, xmmword [0x00625640]\");\n    __asm (\"movdqa xmm7, xmmword [0x00625650]\");\n    __asm (\"movups xmmword [rsp + 0x18], xmm1\");\n    __asm (\"movups xmmword [rsp + 0x28], xmm2\");\n    __asm (\"movups xmmword [rsp + 0x38], xmm3\");\n    __asm (\"movups xmmword [rsp + 0x48], xmm4\");\n    __asm (\"movups xmmword [rsp + 0x58], xmm5\");\n    __asm (\"movups xmmword [rsp + 0x68], xmm6\");\n    __asm (\"movups xmmword [rsp + 0x78], xmm7\");\n    while (rbx != 0x419530) {\n        ebp = *(rbx);\n        rbx += 4;\n        esi = ebp;\n        edi = 0x6255e0;\n        eax = sigismember ();\n        if (eax != 0) {\n            eax = 0x404830;\n            rsi = rsp;\n            edi = ebp;\n            if (ebp == 0x14) {\n                rax = r12;\n            }\n            *(rsp) = rax;\n            sigaction (rdi, rsi, 0);\n        }\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405c70",
            "funcStartAddr": "0x405c70",
            "funcEndAddr": "0x405cc2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x405c70 */\n#include <stdint.h>\n \nvoid fcn_00405c70 (void) {\n    if (*(0x00624448) != 0) {\n        esi = 0x624448;\n        edi = 0x624440;\n        void (*0x405cd0)() ();\n    }\n    fcn_00405cd0 (0x624420, 0x624428);\n    fcn_00405cd0 (0x624450, 0x624458);\n    esi = 0x624438;\n    edi = 0x624430;\n    return void (*0x405cd0)() ();\n}\n"
        },
        {
            "funcName": "fcn_00405cd0",
            "funcStartAddr": "0x405cd0",
            "funcEndAddr": "0x405d39",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x405cd0 */\n#include <stdint.h>\n \nuint32_t fcn_00405cd0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rsi;\n    while (1) {\nlabel_0:\n        rsi = *(rbp);\n        rdi = *(rbx);\n        edx = 1;\n        rcx = stdout;\n        void (*0x402c30)() ();\n        edi = 1;\n        *(0x006256d0) = 1;\n        eax = tcgetpgrp ();\n        if (eax >= 0) {\n            goto label_1;\n        }\n        fcn_00405c70 ();\n    }\nlabel_1:\n    edi = 1;\n    fcn_00405af0 ();\n    fcn_00405c70 ();\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00405d40",
            "funcStartAddr": "0x405d40",
            "funcEndAddr": "0x405d66",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x405d40 */\n#include <stdint.h>\n \nvoid fcn_00405d40 (void) {\n    fcn_00405cd0 (0x624420, 0x624428);\n    esi = 0x624438;\n    edi = 0x624430;\n    return void (*0x405cd0)() ();\n}\n"
        },
        {
            "funcName": "fcn_00405d70",
            "funcStartAddr": "0x405d70",
            "funcEndAddr": "0x405e21",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x405d70 */\n#include <stdint.h>\n \nint32_t fcn_00405d70 (void) {\n    eax = imp.__libc_start_main;\n    if (eax == 0) {\n        eax = imp.__libc_start_main;\n        if (eax == 0) {\n            goto label_3;\n        }\n    }\n    do {\nlabel_0:\n        if (*(0x006256d0) != 0) {\n            goto label_4;\n        }\nlabel_2:\n        rdi = stdout;\n        fflush_unlocked ();\n        rdx = rsp;\n        esi = 0x6255e0;\n        edi = 0;\n        sigprocmask ();\n        ebx = imp.__libc_start_main;\n        eax = imp.__libc_start_main;\n        if (eax == 0) {\n            goto label_5;\n        }\n        eax--;\n        ebx = 0x13;\n        *(0x006255d4) = eax;\nlabel_1:\n        raise (ebx);\n        edx = 0;\n        rsi = rsp;\n        edi = 2;\n        sigprocmask ();\n        eax = imp.__libc_start_main;\n    } while (eax != 0);\n    eax = imp.__libc_start_main;\n    if (eax != 0) {\n        goto label_0;\n    }\n    return eax;\nlabel_5:\n    esi = 0;\n    signal (ebx);\n    goto label_1;\nlabel_4:\n    fcn_00405d40 ();\n    goto label_2;\nlabel_3:\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00405e30",
            "funcStartAddr": "0x405e30",
            "funcEndAddr": "0x405e91",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x405e30 */\n#include <stdint.h>\n \nuint8_t fcn_00405e30 (void) {\n    if (*(0x006256d2) == 0) {\n        return;\n    }\n    al = fcn_00404ae0 (4);\n    if (al == 0) {\n        return al;\n    }\n    fcn_00405cd0 (0x624420, 0x624428);\n    fcn_00405cd0 (0x624460, 0x624468);\n    esi = 0x624438;\n    edi = 0x624430;\n    return void (*0x405cd0)() ();\n}\n"
        },
        {
            "funcName": "fcn_00405ea0",
            "funcStartAddr": "0x405ea0",
            "funcEndAddr": "0x4062c9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x405ea0 */\n#include <stdint.h>\n \nuint64_t fcn_00405ea0 (int64_t arg1, int64_t arg2, int64_t arg3, size_t arg4, uint32_t arg5, int64_t arg6) {\n    size_t var_8h;\n    uint32_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_34h;\n    mbstate_t * ps;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r12 = rdx;\n    r13 = *(rdi);\n    *((rsp + 0x20)) = rdi;\n    *((rsp + 8)) = ecx;\n    *((rsp + 0x10)) = r8;\n    *((rsp + 0x28)) = r9;\n    eax = fcn_00411c20 (rdx);\n    ecx = *((rsp + 8));\n    al = (eax <= 2) ? 1 : 0;\n    al &= *(0x00625698);\n    *((rsp + 0x18)) = al;\n    if (al != 0) {\n        goto label_11;\n    }\n    r10d = 0;\n    if (ecx != 0) {\nlabel_10:\n        *((rsp + 8)) = r10d;\n        rax = fcn_00411cd0 (r13, 0x2000, rbp, 0xffffffffffffffff, r12);\n        r10d = *((rsp + 8));\n        r9 = rax;\n        if (rax > 0x1fff) {\n            goto label_12;\n        }\nlabel_9:\n        *((rsp + 0x18)) = 1;\n        eax = *(r13);\n        if (*(rbp) == al) {\n            *((rsp + 0x18)) = r9;\n            *((rsp + 8)) = r10d;\n            rax = strlen (rbp);\n            r9 = *((rsp + 0x18));\n            r10d = *((rsp + 8));\n            rsp + 0x18 = (r9 != rax) ? 1 : 0;\n        }\n        if (r10d == 0) {\n            goto label_13;\n        }\n        rbx = r9;\n        goto label_14;\n    }\n    rdi = rbp;\n    r13 = rbp;\n    rax = strlen (rdi);\n    r9 = rax;\nlabel_13:\n    if (*((rsp + 0x10)) == 0) {\n        goto label_15;\n    }\n    *((rsp + 8)) = r9;\n    rax = ctype_get_mb_cur_max ();\n    r9 = *((rsp + 8));\n    if (rax > 1) {\n        goto label_16;\n    }\n    rbp = r13 + r9;\n    if (rbp <= r13) {\n        goto label_17;\n    }\n    *((rsp + 8)) = r9;\n    ebx = 0;\n    rax = ctype_b_loc ();\n    r9 = *((rsp + 8));\n    rcx = *(rax);\n    rax = r13;\n    do {\n        edx = *(rax);\n        edx = *((rcx + rdx*2));\n        dx &= 0x4000;\n        rbx -= 0xffffffffffffffff;\n        rax++;\n    } while (rbp != rax);\nlabel_7:\n    if (*(0x00625768) != 0) {\n        goto label_18;\n    }\n    rax = *((rsp + 0x28));\n    *(rax) = 0;\n    goto label_19;\nlabel_15:\n    if (*(0x00625768) != 0) {\n        goto label_18;\n    }\n    rax = *((rsp + 0x28));\n    *(rax) = 0;\n    goto label_20;\nlabel_11:\n    if (ecx != 0) {\n        goto label_21;\n    }\n    rax = strlen (rbp);\n    rbx = rax;\n    r12 = rax + 1;\n    if (rax > 0x1fff) {\n        goto label_22;\n    }\nlabel_8:\n    memcpy (r13, rbp, r12);\n    *((rsp + 0x18)) = 0;\nlabel_14:\n    rax = ctype_get_mb_cur_max ();\n    rbp = r13 + rbx;\n    if (rax > 1) {\n        goto label_23;\n    }\n    if (rbp <= r13) {\n        goto label_24;\n    }\n    rax = ctype_b_loc ();\n    rdx = r13;\n    do {\n        esi = *(rdx);\n        rcx = *(rax);\n        if ((*((rcx + rsi*2 + 1)) & 0x40) == 0) {\n            *(rdx) = 0x3f;\n        }\n        rdx++;\n    } while (rdx != rbp);\nlabel_24:\n    r9 = rbx;\nlabel_6:\n    eax = *(0x00625768);\n    if (al != 0) {\nlabel_18:\n        eax = *(0x00625769);\n        eax ^= 1;\n        al |= *((rsp + 0x18));\n        eax ^= 1;\n    }\n    rsi = *((rsp + 0x28));\n    *(rsi) = al;\n    if (*((rsp + 0x10)) != 0) {\nlabel_19:\n        rax = *((rsp + 0x10));\n        *(rax) = rbx;\n    }\nlabel_20:\n    rax = *((rsp + 0x20));\n    *(rax) = r13;\n    rax = r9;\n    return rax;\nlabel_23:\n    if (rbp <= r13) {\n        goto label_25;\n    }\n    r15 = r13;\n    r14 = r13;\n    ebx = 0;\n    while (al <= 0x3f) {\n        if (al < 0x25) {\n            edx = rax - 0x20;\n            if (dl > 3) {\n                goto label_26;\n            }\n        }\nlabel_0:\n        *(r15) = al;\n        r14++;\n        rbx++;\n        r15++;\nlabel_1:\n        if (rbp <= r14) {\n            goto label_27;\n        }\n        eax = *(r14);\n    }\n    if (al < 0x41) {\n        goto label_26;\n    }\n    if (al <= 0x5f) {\n        goto label_0;\n    }\n    edx = rax - 0x61;\n    if (dl <= 0x1d) {\n        goto label_0;\n    }\nlabel_26:\n    *((rsp + 0x38)) = 0;\n    goto label_28;\nlabel_2:\n    eax = wcwidth ();\n    rcx = *((rsp + 8));\n    rdx = r14 + rcx;\n    if (eax >= 0) {\n        goto label_29;\n    }\nlabel_3:\n    *(r15) = 0x3f;\n    rbx++;\n    r15 = r12;\n    r14 = rdx;\nlabel_4:\n    eax = mbsinit (rsp + 0x38);\n    if (eax != 0) {\n        goto label_1;\n    }\nlabel_28:\n    rdx -= r14;\n    r12 = r15 + 1;\n    rax = fcn_00416e80 (rsp + 0x34, r14, rbp, rsp + 0x38);\n    if (rax == -1) {\n        goto label_30;\n    }\n    if (rax == 0xfffffffffffffffe) {\n        goto label_31;\n    }\n    edi = *((rsp + 0x34));\n    *((rsp + 8)) = rax;\n    if (rax != 0) {\n        goto label_2;\n    }\n    eax = wcwidth ();\n    rdx = r14 + 1;\n    if (eax < 0) {\n        goto label_3;\n    }\n    ecx = *(r14);\n    r14 = rdx;\n    *(r15) = cl;\n    r15 = r12;\nlabel_5:\n    rax = (int64_t) eax;\n    rbx += rax;\n    goto label_4;\nlabel_29:\n    edx = 0;\n    do {\n        esi = *((r14 + rdx));\n        *((r15 + rdx)) = sil;\n        rdx++;\n    } while (rcx != rdx);\n    r14 += rcx;\n    r15 += rcx;\n    goto label_5;\nlabel_27:\n    r9 = r15;\n    r9 -= r13;\n    goto label_6;\nlabel_16:\n    edx = 0;\n    eax = fcn_0040e9b0 (r13, r9);\n    r9 = *((rsp + 8));\n    rbx = (int64_t) eax;\n    goto label_7;\nlabel_30:\n    *(r15) = 0x3f;\n    r14++;\n    rbx++;\n    do {\n        r15 = r12;\n        goto label_1;\nlabel_31:\n        *(r15) = 0x3f;\n        rbx++;\n        r14 = rbp;\n    } while (1);\nlabel_22:\n    rax = fcn_00412980 (r12);\n    r13 = rax;\n    goto label_8;\nlabel_12:\n    r14 = rax + 1;\n    *((rsp + 0x18)) = r10d;\n    *((rsp + 8)) = rax;\n    rax = fcn_00412980 (r14);\n    rdi = rax;\n    r13 = rax;\n    fcn_00411cd0 (rdi, r14, rbp, 0xffffffffffffffff, r12);\n    r10d = *((rsp + 0x18));\n    r9 = *((rsp + 8));\n    goto label_9;\nlabel_17:\n    ebx = 0;\n    goto label_7;\nlabel_25:\n    r9d = 0;\n    ebx = 0;\n    goto label_6;\nlabel_21:\n    r10d = 1;\n    goto label_10;\n}\n"
        },
        {
            "funcName": "fcn_004062d0",
            "funcStartAddr": "0x4062d0",
            "funcEndAddr": "0x406687",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4062d0 */\n#include <stdint.h>\n \nuint64_t fcn_004062d0 (int64_t arg_30h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    void * ptr;\n    int64_t var_10h;\n    int64_t var_18h;\n    uint32_t var_27h;\n    int64_t var_28h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r15d = r8d;\n    r14 = rdi;\n    r12 = rcx;\n    rbx = r9;\n    r13 = rsp + 0x30;\n    *((rsp + 0x28)) = r13;\n    rax = fcn_00405ea0 (rsp + 0x28, rdi, rsi, edx, 0, rsp + 0x27);\n    if (*((rsp + 0x27)) != 0) {\n        if (r15b != 0) {\n            goto label_9;\n        }\n    }\nlabel_1:\n    if (r12 != 0) {\n        al = fcn_00404ae0 (4);\n        if (al != 0) {\n            goto label_10;\n        }\nlabel_4:\n        fcn_00405cd0 (0x624420, 0x624428);\n        fcn_00405cd0 (r12, r12 + 8);\n        fcn_00405cd0 (0x624430, 0x624438);\n    }\n    if (*((rsp + 0x2070)) == 0) {\n        goto label_11;\n    }\n    r12d = *(0x00625768);\n    while (r12b == 0) {\n        r10 = rbp;\n        r9d = 0;\nlabel_0:\n        *((rsp + 0x18)) = r10;\n        *((rsp + 0x10)) = r9;\n        rax = fcn_00404e80 (*(0x00625748), 0);\n        r15 = rax;\n        rax = fcn_00404e80 (*((rsp + 0x2070)), 1);\n        ecx = 0x41b08a;\n        rdx = r15;\n        esi = \"\\e]8;;file://%s%s%s\\a\";\n        r11 = rax;\n        eax = 0x41b371;\n        edi = 1;\n        if (*(rax) != 0x2f) {\n            rcx = rax;\n        }\n        r8 = r11;\n        eax = 0;\n        *((rsp + 8)) = r11;\n        printf_chk ();\n        free (r15);\n        r11 = *((rsp + 8));\n        free (*((rsp + 8)));\n        r9 = *((rsp + 0x10));\n        r10 = *((rsp + 0x18));\n        if (rbx == 0) {\n            goto label_12;\n        }\nlabel_2:\n        if (*(0x006256d8) != 0) {\n            rdx = *((rbx + 0x18));\n            rax = *((rbx + 0x20));\n            rax -= rdx;\n            if (rax <= 7) {\n                goto label_13;\n            }\nlabel_5:\n            rax = imp.__libc_start_main;\n            *(rdx) = rax;\n            *((rbx + 0x18)) += 8;\n        }\n        rdi = *((rsp + 0x28));\n        rcx = stdout;\n        rdx = r10;\n        esi = 1;\n        rdi += r9;\n        fwrite_unlocked ();\n        rax = imp.__libc_start_main;\n        rax += rbp;\n        *(0x006255b8) = rax;\n        if (*(0x006256d8) != 0) {\n            rcx = *((rbx + 0x18));\n            rdx = *((rbx + 0x20));\n            rdx -= rcx;\n            if (rdx <= 7) {\n                goto label_14;\n            }\nlabel_6:\n            *(rcx) = rax;\n            *((rbx + 0x18)) += 8;\n        }\nlabel_3:\n        if (*((rsp + 0x2070)) != 0) {\n            edx = 6;\n            esi = 1;\n            edi = \"\\e]8;;\\a\";\n            rcx = stdout;\n            fwrite_unlocked ();\n            if (r12b == 0) {\n                goto label_7;\n            }\n            rax = *((rsp + 0x28));\n            rdi = stdout;\n            edx = *((rax + rbp - 1));\n            rax = *((rdi + 0x28));\n            if (rax >= *((rdi + 0x30))) {\n                goto label_15;\n            }\n            rcx = rax + 1;\n            *((rdi + 0x28)) = rcx;\n            *(rax) = dl;\n        }\nlabel_7:\n        rdi = *((rsp + 0x28));\n        if (rdi != r13) {\n            if (rdi == r14) {\n                goto label_16;\n            }\n            free (rdi);\n        }\nlabel_16:\n        eax = *((rsp + 0x27));\n        rax += rbp;\n        return rax;\n        r12d = *(0x00625769);\n    }\n    if (*((rsp + 0x27)) != 0) {\n        goto label_17;\n    }\n    rax = *((rsp + 0x28));\n    rdi = stdout;\n    r10 = rbp - 2;\n    edx = *(rax);\n    rax = *((rdi + 0x28));\n    if (rax >= *((rdi + 0x30))) {\n        goto label_18;\n    }\n    rcx = rax + 1;\n    r9d = 1;\n    *((rdi + 0x28)) = rcx;\n    *(rax) = dl;\n    goto label_0;\nlabel_9:\n    rdi = stdout;\n    rax = *((rdi + 0x28));\n    if (rax >= *((rdi + 0x30))) {\n        goto label_19;\n    }\n    rdx = rax + 1;\n    *((rdi + 0x28)) = rdx;\n    *(rax) = 0x20;\nlabel_8:\n    *(0x006255b8)++;\n    goto label_1;\nlabel_11:\n    r10 = rbp;\n    r9d = 0;\n    r12d = 0;\n    if (rbx != 0) {\n        goto label_2;\n    }\nlabel_12:\n    rdi = *((rsp + 0x28));\n    rcx = stdout;\n    rdx = r10;\n    esi = 1;\n    rdi += r9;\n    fwrite_unlocked ();\n    *(0x006255b8) += rbp;\n    goto label_3;\nlabel_10:\n    fcn_00405d40 ();\n    goto label_4;\nlabel_13:\n    esi = 8;\n    rdi = rbx;\n    *((rsp + 0x10)) = r10;\n    *((rsp + 8)) = r9;\n    _obstack_newchunk ();\n    rdx = *((rbx + 0x18));\n    r10 = *((rsp + 0x10));\n    r9 = *((rsp + 8));\n    goto label_5;\nlabel_14:\n    esi = 8;\n    rdi = rbx;\n    _obstack_newchunk ();\n    rcx = *((rbx + 0x18));\n    rax = imp.__libc_start_main;\n    goto label_6;\nlabel_17:\n    r10 = rbp;\n    r9d = 0;\n    r12d = 0;\n    goto label_0;\nlabel_15:\n    esi = (int32_t) dl;\n    overflow ();\n    goto label_7;\nlabel_19:\n    esi = 0x20;\n    overflow ();\n    goto label_8;\nlabel_18:\n    esi = (int32_t) dl;\n    *((rsp + 8)) = r10;\n    overflow ();\n    r9d = 1;\n    r10 = *((rsp + 8));\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00406690",
            "funcStartAddr": "0x406690",
            "funcEndAddr": "0x406ae8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x406690 */\n#include <stdint.h>\n \nvoid fcn_00406690 (uint32_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r15d = esi;\n    r14 = rdi;\n    r13 = rcx;\n    r12 = rdx;\n    eax = *(0x006256d2);\n    if (sil == 0) {\n        goto label_10;\n    }\n    rbp = *((rdi + 8));\n    while (al == 0) {\nlabel_0:\n        r15d ^= 1;\n        r8d = (int32_t) r15b;\n        rax = fcn_004062d0 (rbp, *(0x00625690), *((r14 + 0xc4)), 0, r8, r12);\n        rbx = rax;\n        fcn_00405d70 ();\nlabel_1:\n        rax = rbx;\n        return;\n        r8d = *((rdi + 0xac));\n        if (*((rdi + 0xb9)) != 0) {\n            goto label_11;\n        }\n        al = fcn_00404ae0 (0xc);\n        edx = 0xffffffff;\n        if (al == 0) {\n            goto label_5;\n        }\n        ecx = 0xc0;\n        goto label_3;\nlabel_10:\n        rbp = *(rdi);\n    }\n    edx = *((rdi + 0xb9));\n    if (*(0x00625750) != 0) {\n        goto label_12;\n    }\nlabel_4:\n    r8d = *((r14 + 0x30));\nlabel_5:\n    ecx = *((r14 + 0xb8));\n    if (cl != 0) {\n        goto label_13;\n    }\nlabel_2:\n    eax = *((r14 + 0xa8));\n    eax = *((rax*4 + 0x419540));\n    cl = (eax == 7) ? 1 : 0;\n    if (eax == 5) {\n        goto label_8;\n    }\nlabel_7:\n    if (edx != 0) {\n        goto label_14;\n    }\n    if (cl == 0) {\n        goto label_14;\n    }\n    ecx = 0xd0;\n    if (*(0x00625750) == 0) {\n        al = fcn_00404ae0 (0xd);\n        rcx -= rcx;\n        rcx &= 0xffffffffffffffa0;\n        rcx += 0xd0;\n    }\nlabel_3:\n    rcx += 0x624420;\nlabel_6:\n    if (*((rcx + 8)) != 0) {\n        goto label_15;\n    }\n    al = fcn_00404ae0 (4);\n    if (al == 0) {\n        goto label_0;\n    }\nlabel_15:\n    r15d ^= 1;\n    r8d = (int32_t) r15b;\n    rax = fcn_004062d0 (rbp, *(0x00625690), *((r14 + 0xc4)), 0, r8, r12);\n    rbx = rax;\n    fcn_00405d70 ();\n    fcn_00405c70 ();\n    rcx = imp.__libc_start_main;\n    if (rcx == 0) {\n        goto label_1;\n    }\n    rax = r13;\n    edx = 0;\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    edx = 0;\n    rsi = rax;\n    rax = rbx + r13 - 1;\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    if (rsi == rax) {\n        goto label_1;\n    }\n    fcn_00405cd0 (0x624590, 0x624598);\n    goto label_1;\nlabel_11:\n    ecx = *((r14 + 0xb8));\n    edx = 0;\n    if (cl == 0) {\n        goto label_2;\n    }\nlabel_13:\n    eax = r8d;\n    eax &= 0xf000;\n    if (eax == 0x8000) {\n        goto label_16;\n    }\n    if (eax == 0x4000) {\n        goto label_17;\n    }\n    if (eax == 0xa000) {\n        goto label_18;\n    }\n    ecx = 0x80;\n    if (eax == 0x1000) {\n        goto label_3;\n    }\n    ecx = 0x90;\n    if (eax == 0xc000) {\n        goto label_3;\n    }\n    ecx = 0xa0;\n    if (eax == 0x6000) {\n        goto label_3;\n    }\n    ecx = 0xb0;\n    ebx = 0xd0;\n    if (eax != 0x2000) {\n        rcx = rbx;\n    }\n    goto label_3;\nlabel_12:\n    if (dl == 0) {\n        goto label_4;\n    }\n    r8d = *((r14 + 0xac));\n    goto label_5;\nlabel_8:\n    rax = strlen (rbp);\n    rbx = imp.__libc_start_main;\n    rcx = rax;\n    if (rbx == 0) {\n        goto label_19;\n    }\n    do {\n        rdx = *(rbx);\n        if (rcx >= rdx) {\n            rdi = rcx;\n            *((rsp + 8)) = rcx;\n            rdi -= rdx;\n            rdi += rbp;\n            eax = strncmp (rdi, *((rbx + 8)), rdx);\n            rcx = *((rsp + 8));\n            if (eax == 0) {\n                goto label_20;\n            }\n        }\n        rbx = *((rbx + 0x20));\n    } while (rbx != 0);\nlabel_19:\n    ecx = 0x50;\n    goto label_3;\nlabel_20:\n    rcx = rbx + 0x10;\n    goto label_6;\nlabel_16:\n    if ((r8d & 0x800) != 0) {\n        al = fcn_00404ae0 (0x10);\n        if (al == 0) {\n            goto label_21;\n        }\n        ecx = 0x100;\n        goto label_3;\n    }\nlabel_21:\n    while (al == 0) {\n        al = fcn_00404ae0 (0x15);\n        if (al == 0) {\n            goto label_22;\n        }\n        if (*((r14 + 0xc0)) == 0) {\n            goto label_22;\n        }\n        ecx = 0x150;\n        goto label_3;\n        al = fcn_00404ae0 (0x11);\n    }\n    ecx = 0x110;\n    goto label_3;\nlabel_17:\n    eax = r8d;\n    eax &= 0x202;\n    if (eax == 0x202) {\n        goto label_23;\n    }\nlabel_9:\n    if ((r8b & 2) == 0) {\n        goto label_24;\n    }\n    al = fcn_00404ae0 (0x13);\n    ecx = 0x130;\n    if (al != 0) {\n        goto label_3;\n    }\nlabel_24:\n    r8d &= 0x200;\n    ecx = 0x60;\n    if (r8d == 0) {\n        goto label_3;\n    }\n    al = fcn_00404ae0 (0x12);\n    rcx -= rcx;\n    cl &= 0x40;\n    rcx += 0x120;\n    goto label_3;\nlabel_18:\n    eax = 7;\n    goto label_7;\nlabel_22:\n    r8d &= 0x49;\n    if (r8d != 0) {\n        al = fcn_00404ae0 (0xe);\n        if (al == 0) {\n            goto label_25;\n        }\n        ecx = 0xe0;\n        goto label_3;\n    }\nlabel_25:\n    if (*((r14 + 0x28)) <= 1) {\n        goto label_8;\n    }\n    al = fcn_00404ae0 (0x16);\n    if (al == 0) {\n        goto label_8;\n    }\n    ecx = 0x160;\n    goto label_3;\nlabel_23:\n    al = fcn_00404ae0 (0x14);\n    ecx = 0x140;\n    if (al != 0) {\n        goto label_3;\n    }\n    goto label_9;\nlabel_14:\n    rax <<= 4;\n    rcx = rax;\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_00406af0",
            "funcStartAddr": "0x406af0",
            "funcEndAddr": "0x406c60",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x406af0 */\n#include <stdint.h>\n \nuint64_t fcn_00406af0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rdi;\n    eax = fcn_00405e30 ();\n    if (*(0x006256bc) != 0) {\n        ecx = 0x41b06e;\n        if (*((rbx + 0xb8)) != 0) {\n            rdi = *((rbx + 0x20));\n            if (rdi != 0) {\n                goto label_1;\n            }\n        }\nlabel_0:\n        edx = 0;\n        esi = 0x41b09b;\n        edi = 1;\n        if (*(0x006256f8) != 4) {\n            edx = imp.__libc_start_main;\n        }\n        eax = 0;\n        eax = printf_chk ();\n    }\n    if (*(0x006256ec) == 0) {\n        goto label_2;\n    }\n    ecx = 0x41b06e;\n    while (1) {\n        edx = 0;\n        esi = 0x41b09b;\n        edi = 1;\n        if (*(0x006256f8) != 4) {\n            edx = imp.__libc_start_main;\n        }\n        eax = 0;\n        eax = printf_chk ();\nlabel_2:\n        if (*(0x00625725) != 0) {\n            edx = 0;\n            esi = 0x41b09b;\n            edi = 1;\n            rcx = *((rbx + 0xb0));\n            if (*(0x006256f8) != 4) {\n                edx = imp.__libc_start_main;\n            }\n            eax = 0;\n            printf_chk ();\n        }\n        rax = fcn_00406690 (rbx, 0, 0, rbp);\n        eax = imp.__libc_start_main;\n        if (eax == 0) {\n            rax = rbp;\n            return rax;\n        }\n        edx = *((rbx + 0xa8));\n        edi = *((rbx + 0xb8));\n        al = fcn_004058a0 (rdi, *((rbx + 0x30)));\n        eax = (int32_t) al;\n        rbp += rax;\n        rax = rbp;\n        return rax;\n        rax = fcn_0040d5d0 (*((rbx + 0x58)), rsp, *(0x006256e8), 0x200, *(0x006256e0));\n        rcx = rax;\n    }\nlabel_1:\n    rax = fcn_0040e520 (rdi, rsp, rdx);\n    rcx = rax;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00406c60",
            "funcStartAddr": "0x406c60",
            "funcEndAddr": "0x407622",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x406c60 */\n#include <stdint.h>\n \nint64_t fcn_00406c60 (uint32_t arg1) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_18h;\n    int64_t var_24h;\n    int64_t var_25h;\n    int64_t var_2eh;\n    int64_t var_2fh;\n    int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_60h;\n    int64_t var_70h;\n    int64_t var_a0h;\n    int64_t var_b0h;\n    int64_t var_e0h;\n    int64_t var_4d0h;\n    rdi = arg1;\n    if (*((rdi + 0xb8)) == 0) {\n        goto label_27;\n    }\n    r13 = rsp + 0x24;\n    fcn_0040bb60 (rdi + 0x18, r13);\nlabel_3:\n    if (*(0x00625724) != 0) {\n        goto label_28;\n    }\n    *((rsp + 0x2e)) = 0;\nlabel_1:\n    eax = imp.__libc_start_main;\n    if (eax == 1) {\n        goto label_29;\n    }\nlabel_2:\n    if (eax != 0) {\n        goto label_30;\n    }\n    rdx = *((rbp + 0x70));\n    rax = *((rbp + 0x78));\n    *((rsp + 0x30)) = rdx;\n    edx = *((rbp + 0xb8));\n    *((rsp + 0x38)) = rax;\n    if (*(0x006256bc) != 0) {\n        goto label_31;\n    }\nlabel_0:\n    r12 = rsp + 0x4d0;\n    rbx = r12;\nlabel_4:\n    if (*(0x006256ec) == 0) {\n        goto label_32;\n    }\n    r15d = 0x41b06e;\n    if (dl != 0) {\n        goto label_33;\n    }\nlabel_19:\n    r14d = imp.__libc_start_main;\n    eax = fcn_0040eb70 (r15, 0);\n    r14d -= eax;\n    eax = r14d;\n    if (r14d <= 0) {\n        goto label_34;\n    }\n    eax--;\n    rdx = rax;\n    rcx = rbx + rax + 1;\n    rax = rbx;\n    do {\n        rax++;\n        *((rax - 1)) = 0x20;\n    } while (rax != rcx);\n    rax = (int64_t) edx;\n    rbx = rbx + rax + 1;\n    do {\nlabel_34:\n        r15++;\n        eax = *((r15 - 1));\n        rbx++;\n        *((rbx - 1)) = al;\n    } while (al != 0);\n    *((rbx - 1)) = 0x20;\n    edx = *((rbp + 0xb8));\nlabel_32:\n    eax = 0x41b06e;\n    if (dl != 0) {\n        goto label_35;\n    }\nlabel_9:\n    r8 = r13;\n    rdi = rbx;\n    ecx = \"%s %*s \";\n    r9d = imp.__libc_start_main;\n    rdx = 0xffffffffffffffff;\n    eax = 0;\n    esi = 1;\n    sprintf_chk ();\n    rax = strlen (rbx);\n    rbx += rax;\n    if (*(0x006256d8) != 0) {\n        goto label_36;\n    }\nlabel_8:\n    if (*(0x006245a9) == 0) {\n        if (*(0x006245a8) != 0) {\n            goto label_14;\n        }\n        if (*(0x006256ee) == 0) {\n            goto label_37;\n        }\n    }\nlabel_14:\n    rsi = stdout;\n    rdi = r12;\n    rbx -= r12;\n    fputs_unlocked ();\n    *(0x006255b8) += rbx;\n    if (*(0x006245a9) != 0) {\n        goto label_38;\n    }\nlabel_13:\n    if (*(0x006245a8) != 0) {\n        goto label_39;\n    }\nlabel_12:\n    if (*(0x006256ee) != 0) {\n        goto label_40;\n    }\nlabel_11:\n    rbx = r12;\n    if (*(0x00625725) != 0) {\n        goto label_41;\n    }\nlabel_10:\n    if (*((rbp + 0xb8)) == 0) {\n        goto label_42;\n    }\n    eax = *((rbp + 0x30));\n    eax &= 0xb000;\n    if (eax == 0x2000) {\n        goto label_43;\n    }\n    rax = fcn_0040d5d0 (*((rbp + 0x48)), rsp + 0xe0, *(0x006256dc), 1, *(0x006245a0));\n    r14 = rax;\nlabel_5:\n    r13d = imp.__libc_start_main;\n    eax = fcn_0040eb70 (r14, 0);\n    r13d -= eax;\n    eax = r13d;\n    if (r13d <= 0) {\n        goto label_44;\n    }\n    eax--;\n    rdx = rax;\n    rcx = rbx + rax + 1;\n    rax = rbx;\n    do {\n        rax++;\n        *((rax - 1)) = 0x20;\n    } while (rax != rcx);\n    rax = (int64_t) edx;\n    rbx = rbx + rax + 1;\n    do {\nlabel_44:\n        r14++;\n        eax = *((r14 - 1));\n        rbx++;\n        *((rbx - 1)) = al;\n    } while (al != 0);\n    *((rbx - 1)) = 0x20;\nlabel_18:\n    *(rbx) = 1;\n    r13d = 0x41b06e;\n    if (*((rbp + 0xb8)) != 0) {\n        goto label_45;\n    }\nlabel_26:\n    r8d = *(0x00624404);\n    if (r8d < 0) {\n        goto label_46;\n    }\nlabel_20:\n    r9 = r13;\n    ecx = 0x41b09b;\n    esi = 1;\n    rdi = rbx;\n    rdx = 0xffffffffffffffff;\n    eax = 0;\n    sprintf_chk ();\n    strlen (rbx);\n    r13 = rbx + rax;\nlabel_7:\n    rsi = stdout;\n    rdi = r12;\n    r13 -= r12;\n    fputs_unlocked ();\n    *(0x006255b8) += r13;\n    rax = fcn_00406690 (rbp, 0, 0x625560, r13);\n    edx = *((rbp + 0xa8));\n    r12 = rax;\n    if (edx == 6) {\n        goto label_47;\n    }\n    eax = imp.__libc_start_main;\n    if (eax != 0) {\n        goto label_48;\n    }\nlabel_6:\n    return rax;\nlabel_30:\n    if (eax != 2) {\n        goto label_49;\n    }\n    rdx = *((rbp + 0x60));\n    rax = *((rbp + 0x68));\n    *((rsp + 0x30)) = rdx;\n    edx = *((rbp + 0xb8));\n    *((rsp + 0x38)) = rax;\n    if (*(0x006256bc) == 0) {\n        goto label_0;\n    }\n    goto label_31;\nlabel_28:\n    eax = *((rbp + 0xbc));\n    if (eax == 1) {\n        goto label_50;\n    }\n    if (eax != 2) {\n        goto label_1;\n    }\n    eax = imp.__libc_start_main;\n    *((rsp + 0x2e)) = 0x2b;\n    if (eax != 1) {\n        goto label_2;\n    }\nlabel_29:\n    rdx = *((rbp + 0x80));\n    rax = *((rbp + 0x88));\n    *((rsp + 0x30)) = rdx;\n    edx = *((rbp + 0xb8));\n    *((rsp + 0x38)) = rax;\n    if (*(0x006256bc) == 0) {\n        goto label_0;\n    }\n    goto label_31;\nlabel_27:\n    eax = *((rdi + 0xa8));\n    r13 = rsp + 0x24;\n    r10d = 0x3f3f;\n    eax = *((rax + str._pcdb_lswd));\n    *((rsp + 0x24)) = al;\n    rax = 0x3f3f3f3f3f3f3f3f;\n    *((rsp + 0x25)) = rax;\n    *((r13 + 9)) = r10w;\n    *((rsp + 0x2f)) = 0;\n    goto label_3;\nlabel_31:\n    r9d = 0x41b06e;\n    if (dl != 0) {\n        rdi = *((rbp + 0x20));\n        if (rdi != 0) {\n            goto label_51;\n        }\n    }\nlabel_16:\n    r12 = rsp + 0x4d0;\n    r8d = imp.__libc_start_main;\n    ecx = 0x41b09b;\n    eax = 0;\n    edx = 0xe3b;\n    esi = 1;\n    rdi = r12;\n    rbx = r12;\n    sprintf_chk ();\n    do {\n        eax = *(rbx);\n        rbx += 4;\n        edx = rax - 0x1010101;\n        eax = ~eax;\n        edx &= eax;\n        edx &= 0x80808080;\n    } while (edx == 0);\n    eax = edx;\n    eax >>= 0x10;\n    if ((edx & 0x8080) == 0) {\n        edx = eax;\n    }\n    rax = rbx + 2;\n    if ((edx & 0x8080) == 0) {\n        rbx = rax;\n    }\n    eax = edx;\n    al += dl;\n    edx = *((rbp + 0xb8));\n    rbx -= 3;\n    goto label_4;\nlabel_42:\n    r14d = 0x41b06e;\n    goto label_5;\nlabel_47:\n    if (*((rbp + 8)) == 0) {\n        goto label_6;\n    }\n    edx = 4;\n    esi = 1;\n    edi = \" -> \";\n    rcx = stdout;\n    fwrite_unlocked ();\n    *(0x006255b8) += 4;\n    fcn_00406690 (rbp, 1, 0, r13 + r12 + 4);\n    edx = imp.__libc_start_main;\n    if (edx == 0) {\n        goto label_6;\n    }\n    edx = 0;\n    fcn_004058a0 (1, *((rbp + 0xac)));\n    goto label_6;\nlabel_45:\n    rax = fcn_004176f0 (*(0x00625668), rsp + 0x30, rsp + 0x60);\n    if (rax != 0) {\n        rdx = imp.__libc_start_main;\n        rcx = *((rsp + 0x30));\n        rsi = imp.__libc_start_main;\n        r9 = *((rsp + 0x38));\n        if (rdx < rcx) {\n            goto label_52;\n        }\n        if (rdx > rcx) {\n            goto label_53;\n        }\n        edi = esi;\n        eax = r9d;\n        if (esi < r9d) {\n            goto label_52;\n        }\n        rdx -= 0xf0c2ac;\n        if (rdx < rcx) {\n            goto label_54;\n        }\n        eax = 0;\nlabel_17:\n        r8 = imp.__libc_start_main;\n        if (*(0x00624788) == 0) {\n            goto label_55;\n        }\n        rdx = rax + rax;\n        rax += rdx;\n        rdx = *((rsp + 0x70));\n        rdx = rdx + rax*4;\n        rdx <<= 7;\n        rdx += 0x6247a0;\nlabel_21:\n        rcx = rsp + 0x60;\n        rax = fcn_00410650 (rbx, 0x3e9);\n        if (rax != 0) {\n            rbx += rax;\n        }\n    } else {\n        if (*(rbx) != 0) {\n            goto label_56;\n        }\n    }\n    ecx = 0x20;\n    r13 = rbx + 1;\n    *(rbx) = cx;\n    goto label_7;\nlabel_36:\n    edx = 2;\n    esi = 1;\n    edi = 0x41b093;\n    rcx = stdout;\n    fwrite_unlocked ();\n    *(0x006255b8) += 2;\n    goto label_8;\nlabel_35:\n    fcn_0040e520 (*((rbp + 0x28)), rsp + 0xe0, rdx);\n    goto label_9;\nlabel_41:\n    fcn_00405460 (*((rbp + 0xb0)), 0, *(0x00625714));\n    goto label_10;\nlabel_40:\n    edx = *((rbp + 0xb8));\n    fcn_00405520 (*((rbp + 0x34)), *(0x00625708));\n    goto label_11;\nlabel_39:\n    edx = imp.__libc_start_main;\n    edi = 0x41b06e;\n    esi = *((rbp + 0x38));\n    if (*((rbp + 0xb8)) != 0) {\n        goto label_57;\n    }\nlabel_15:\n    fcn_00405460 (rdi, rsi, rdx);\n    goto label_12;\nlabel_38:\n    edx = *((rbp + 0xb8));\n    fcn_00405520 (*((rbp + 0x34)), *(0x00625710));\n    goto label_13;\nlabel_48:\n    edi = *((rbp + 0xb8));\n    fcn_004058a0 (rdi, *((rbp + 0x30)));\n    goto label_6;\nlabel_50:\n    *((rsp + 0x2e)) = 0x2e;\n    goto label_1;\nlabel_37:\n    if (*(0x00625725) == 0) {\n        goto label_10;\n    }\n    goto label_14;\nlabel_57:\n    edi = 0;\n    if (*(0x006256ed) != 0) {\n        goto label_15;\n    }\n    *((rsp + 8)) = rsi;\n    *((rsp + 4)) = edx;\n    rax = fcn_0040e2f0 (esi);\n    rsi = *((rsp + 8));\n    edx = *((rsp + 4));\n    rdi = rax;\n    goto label_15;\nlabel_51:\n    rax = fcn_0040e520 (rdi, rsp + 0xe0, rdx);\n    r9 = rax;\n    goto label_16;\nlabel_53:\n    rdi = rdx - 0xf0c2ac;\n    if (rdi < rcx) {\n        goto label_58;\n    }\nlabel_22:\n    eax = 0;\n    if (rdi > rcx) {\n        goto label_17;\n    }\n    if (esi >= r9d) {\n        goto label_17;\n    }\nlabel_23:\n    if (rcx < rdx) {\n        goto label_58;\n    }\n    eax = 0;\n    if (rcx > rdx) {\n        goto label_17;\n    }\n    eax = r9d;\n    edi = esi;\nlabel_54:\n    eax -= edi;\n    eax >>= 0x1f;\n    goto label_17;\nlabel_43:\n    eax = imp.__libc_start_main;\n    r13d = imp.__libc_start_main;\n    eax = rdx + rax + 2;\n    r13d -= eax;\n    rax = *((rbp + 0x40));\n    edx = (int32_t) al;\n    rax >>= 0xc;\n    dil = 0;\n    edi |= edx;\n    rax = fcn_0040e520 (rax, rsp + 0xe0, *(0x00625704));\n    r14d = imp.__libc_start_main;\n    r15 = rax;\n    rax = *((rbp + 0x40));\n    rdi = *((rbp + 0x40));\n    rax >>= 0x20;\n    rdi >>= 8;\n    edx &= 0xfff;\n    edi &= 0xfffff000;\n    edi |= edx;\n    rax = fcn_0040e520 (rax, rsp + 0xa0, edi);\n    r8d = 0;\n    __asm (\"cmovns r8d, r13d\");\n    rdi = rbx;\n    r9 = rax;\n    esi = 1;\n    r8d += *(0x00625704);\n    ecx = \"%*s, %*s \";\n    rdx = 0xffffffffffffffff;\n    eax = 0;\n    sprintf_chk ();\n    rax = *(0x006256fc);\n    rbx = rbx + rax + 1;\n    goto label_18;\nlabel_33:\n    rax = fcn_0040d5d0 (*((rbp + 0x58)), rsp + 0xe0, *(0x006256e8), 0x200, *(0x006256e0));\n    r15 = rax;\n    goto label_19;\nlabel_56:\n    if (*((rbp + 0xb8)) == 0) {\n        goto label_59;\n    }\n    rax = fcn_0040e480 (*((rsp + 0x30)), rsp + 0x40, rdx);\n    r8d = *(0x00624404);\n    r13 = rax;\n    if (r8d >= 0) {\n        goto label_20;\n    }\nlabel_46:\n    *((rsp + 0x18)) = 0;\n    rax = fcn_004176f0 (*(0x00625668), rsp + 0x18, rsp + 0xa0);\n    if (rax != 0) {\n        r8 = imp.__libc_start_main;\n        rdx = *(str._b__e___Y);\n        if (*(0x00624788) != 0) {\n            goto label_60;\n        }\nlabel_24:\n        r9d = 0;\n        rcx = rsp + 0xa0;\n        rax = fcn_00410650 (rsp + 0xe0, 0x3e9);\n        if (rax != 0) {\n            goto label_61;\n        }\n    }\n    r8d = *(0x00624404);\nlabel_25:\n    if (r8d >= 0) {\n        goto label_20;\n    }\n    *(0x00624404) = 0;\n    r8d = 0;\n    goto label_20;\nlabel_55:\n    rdx = *((rax*8 + 0x624410));\n    goto label_21;\nlabel_52:\n    rax = fcn_0040c150 (0x625730);\n    rcx = *((rsp + 0x30));\n    r9 = *((rsp + 0x38));\n    rdx = imp.__libc_start_main;\n    rsi = imp.__libc_start_main;\n    rdi = rdx - 0xf0c2ac;\n    if (rdi >= rcx) {\n        goto label_22;\n    }\n    goto label_23;\nlabel_60:\n    rdx = *((rsp + 0xb0));\n    rdx <<= 7;\n    rdx += 0x6247a0;\n    goto label_24;\nlabel_61:\n    edx = 0;\n    eax = fcn_0040e9b0 (rsp + 0xe0, rax);\n    r8d = eax;\n    *(0x00624404) = eax;\n    goto label_25;\nlabel_58:\n    eax = 1;\n    goto label_17;\nlabel_59:\n    r13d = 0x41b06e;\n    goto label_26;\nlabel_49:\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_00407630",
            "funcStartAddr": "0x407630",
            "funcEndAddr": "0x40768a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x407630 */\n#include <stdint.h>\n \nuint64_t fcn_00407630 (int64_t arg_10h, int64_t arg_18h, int64_t arg_20h, int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_fh;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rbx = rsp + 0x20;\n    *((rsp + 0x10)) = rbx;\n    fcn_00405ea0 (rsp + 0x10, rdi, rsi, edx, rsp + 0x18, rsp + 0xf);\n    rdi = *((rsp + 0x10));\n    if (rdi != rbx) {\n        if (rdi == rbp) {\n            goto label_0;\n        }\n        free (rdi);\n    }\nlabel_0:\n    eax = *((rsp + 0xf));\n    rax += *((rsp + 0x18));\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00407690",
            "funcStartAddr": "0x407690",
            "funcEndAddr": "0x4077fd",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x407690 */\n#include <stdint.h>\n \nint64_t fcn_00407690 (int64_t arg1) {\n    rdi = arg1;\n    if (*(0x006256bc) == 0) {\n        goto label_6;\n    }\n    if (*(0x006256f8) == 4) {\n        goto label_7;\n    }\n    rbx = *(0x00625720);\n    rbx++;\n    if (*(0x006256ec) == 0) {\n        goto label_8;\n    }\nlabel_0:\n    rax = *(0x0062571c);\n    rax++;\nlabel_1:\n    rbx += rax;\n    do {\n        if (*(0x00625725) != 0) {\n            if (*(0x006256f8) == 4) {\n                goto label_9;\n            }\nlabel_2:\n            rax = *(0x00625714);\n            rax++;\nlabel_5:\n            rbx += rax;\n        }\nlabel_3:\n        rax = fcn_00407630 (*(rbp), *(0x00625690), *((rbp + 0xc4)), rcx, r8, r9);\n        rbx += rax;\n        eax = imp.__libc_start_main;\n        if (eax != 0) {\n            edi = *((rbp + 0xb8));\n            al = fcn_004057b0 (rdi, *((rbp + 0x30)), *((rbp + 0xa8)));\n            al = (al != 0) ? 1 : 0;\n            eax = (int32_t) al;\n            rbx += rax;\n        }\n        rax = rbx;\n        return rax;\nlabel_6:\n        ebx = 0;\nlabel_4:\n    } while (*(0x006256ec) == 0);\n    if (*(0x006256f8) != 4) {\n        goto label_0;\n    }\n    eax = 2;\n    if (*((rbp + 0xb8)) == 0) {\n        goto label_1;\n    }\n    rax = fcn_0040d5d0 (*((rbp + 0x58)), rsp, *(0x006256e8), 0x200, *(0x006256e0));\n    rax = strlen (rax);\n    rax++;\n    goto label_1;\nlabel_8:\n    if (*(0x00625725) != 0) {\n        goto label_2;\n    }\n    goto label_3;\nlabel_7:\n    rax = fcn_0040e520 (*((rdi + 0x20)), rsp, rdx);\n    strlen (rax);\n    rbx = rax + 1;\n    goto label_4;\nlabel_9:\n    rax = strlen (*((rbp + 0xb0)));\n    rax++;\n    goto label_5;\n}\n"
        },
        {
            "funcName": "fcn_00407800",
            "funcStartAddr": "0x407800",
            "funcEndAddr": "0x407ae0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x407800 */\n#include <stdint.h>\n \nint64_t fcn_00407800 (int64_t arg1) {\n    rdi = arg1;\n    r12d = edi;\n    r9 = imp.__libc_start_main;\n    rcx = imp.__libc_start_main;\n    rbx = rcx;\n    if (r9 <= rcx) {\n        rbx = r9;\n    }\n    if (rbx <= *(0x006246a0)) {\n        goto label_5;\n    }\n    rax = rcx;\n    rdi = imp.__libc_start_main;\n    rax >>= 1;\n    if (rbx < rax) {\n        goto label_6;\n    }\n    edx = 0x18;\n    rax = rdx;\n    rdx:rax = rax * rcx;\n    __asm (\"seto dl\");\n    edx = (int32_t) dl;\n    if (rax < 0) {\n        goto label_7;\n    }\n    if (rdx != 0) {\n        goto label_7;\n    }\n    rsi <<= 3;\n    rax = fcn_004129e0 (rdi, rcx + rcx*2);\n    rbp = imp.__libc_start_main;\n    *(0x006255c8) = rax;\nlabel_4:\n    rax = imp.__libc_start_main;\n    rdi = rbp;\n    rdi -= rax;\n    rax++;\n    rax += rbp;\n    rsi = rdi;\n    rcx = rax;\n    al = (rax < 0) ? 1 : 0;\n    eax = (int32_t) al;\n    rsi *= rcx;\n    if (rax != 0) {\n        goto label_7;\n    }\n    rax = rsi;\n    edx = 0;\n    rax = rdx:rax / rdi;\n    rdx = rdx:rax % rdi;\n    if (rcx != rax) {\n        goto label_7;\n    }\n    rdi = rsi;\n    eax = 0;\n    rdi >>= 1;\n    rsi >>= 0x3e;\n    al = (rsi != 0) ? 1 : 0;\n    rdi <<= 3;\n    if (rdi < 0) {\n        goto label_7;\n    }\n    if (rax != 0) {\n        goto label_7;\n    }\n    rax = fcn_00412980 (rdi);\n    rdx = imp.__libc_start_main;\n    if (rbp <= rdx) {\n        goto label_8;\n    }\n    rdi = imp.__libc_start_main;\n    rdx = rdx*8 + 8;\n    rsi = rbp*8 + 8;\n    do {\n        rcx = rdx * 3;\n        *((rdi + rcx - 8)) = rax;\n        rax += rdx;\n        rdx += 8;\n    } while (rsi != rdx);\nlabel_8:\n    *(0x006246a0) = rbp;\n    r9 = imp.__libc_start_main;\nlabel_5:\n    if (rbx == 0) {\n        goto label_9;\n    }\n    rdi = imp.__libc_start_main;\n    r8 = rbx * 3;\n    esi = 0;\n    ecx = 3;\nlabel_0:\n    rax = *((rdi + rcx*8 - 8));\n    *((rdi + rcx*8 - 0x18)) = 1;\n    rsi += 8;\n    *((rdi + rcx*8 - 0x10)) = rcx;\n    rdx = rax + rsi;\n    do {\n        *(rax) = 3;\n        rax += 8;\n    } while (rdx != rax);\n    rcx += 3;\n    if (rcx != r8) {\n        goto label_0;\n    }\nlabel_9:\n    ebp = 0;\n    if (r9 == 0) {\n        goto label_10;\n    }\nlabel_3:\n    rax = imp.__libc_start_main;\n    rax = fcn_00407690 (*((rax + rbp*8)));\n    r10 = imp.__libc_start_main;\n    r9 = rax;\n    if (rbx == 0) {\n        goto label_11;\n    }\n    r11 = imp.__libc_start_main;\n    rcx = imp.__libc_start_main;\n    esi = 0;\n    rdi = rax + 2;\n    goto label_12;\nlabel_1:\n    rax = r10 + r8 - 1;\n    edx = 0;\n    rax = rdx:rax / r8;\n    rdx = rdx:rax % r8;\n    edx = 0;\n    r13 = rax;\n    rax = rbp;\n    rax = rdx:rax / r13;\n    rdx = rdx:rax % r13;\n    r13 = rax;\nlabel_2:\n    rdx = *((rcx + 0x10));\n    rax = r9;\n    if (r13 != rsi) {\n        rax = rdi;\n    }\n    rsi = rdx + r13*8;\n    rdx = *(rsi);\n    if (rdx >= rax) {\n        goto label_13;\n    }\n    r13 = *((rcx + 8));\n    r13 -= rdx;\n    rdx = r13;\n    rdx += rax;\n    *((rcx + 8)) = rdx;\n    *(rsi) = rax;\n    rcx = (*((rcx + 8)) < r11) ? 1 : 0;\n    do {\nlabel_13:\n        rcx += 0x18;\n        rsi = r8;\n        if (rbx == r8) {\n            goto label_11;\n        }\nlabel_12:\n        r8 = rsi + 1;\n    } while (*(rcx) == 0);\n    if (r12b != 0) {\n        goto label_1;\n    }\n    rax = rbp;\n    edx = 0;\n    rax = rdx:rax / r8;\n    rdx = rdx:rax % r8;\n    r13 = rdx;\n    goto label_2;\nlabel_11:\n    rbp++;\n    if (rbp < r10) {\n        goto label_3;\n    }\nlabel_10:\n    if (rbx <= 1) {\n        goto label_14;\n    }\n    rdx = imp.__libc_start_main;\n    rax = rbx * 3;\n    rax <<= 3;\n    if (*((rdx + rax - 0x18)) != 0) {\n        goto label_14;\n    }\n    rax = rdx + rax - 0x30;\n    while (rbx != 1) {\n        rax -= 0x18;\n        if (*((rax + 0x18)) != 0) {\n            goto label_14;\n        }\n        rbx--;\n    }\nlabel_14:\n    rax = rbx;\n    return rax;\nlabel_6:\n    edx = 0x30;\n    rax = rdx;\n    rdx:rax = rax * rbx;\n    __asm (\"seto dl\");\n    edx = (int32_t) dl;\n    if (rax >= 0) {\n        if (rdx != 0) {\n            goto label_7;\n        }\n        rbp = rbx + rbx;\n        rsi <<= 4;\n        rax = fcn_004129e0 (rdi, rbp + rbx);\n        *(0x006255c8) = rax;\n        goto label_4;\n    }\nlabel_7:\n    return fcn_00412bd0 ();\n}\n"
        },
        {
            "funcName": "fcn_00407ca0",
            "funcStartAddr": "0x407ca0",
            "funcEndAddr": "0x4081fa",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x407ca0 */\n#include <stdint.h>\n \nint64_t fcn_00407ca0 (void) {\n    int64_t var_8h;\n    int64_t var_10h;\n    uint32_t var_18h;\n    int64_t var_bh;\n    int64_t var_ch;\nlabel_4:\n    if (*(0x00625770) == 0) {\n        goto label_10;\n    }\n    r14d = edi;\n    r13d = 0;\n    ebx = 0;\n    r15 = 0xfffffffffffffffd;\n    while (*(0x00625670) == 0) {\n        if (rbx != 0) {\n            goto label_11;\n        }\nlabel_0:\n        rbx++;\n        fcn_00406af0 (r12, rbp);\n        if (*(0x00625770) <= rbx) {\n            goto label_10;\n        }\n        rax = imp.__libc_start_main;\n        r12 = *((rax + rbx*8));\n    }\n    rax = fcn_00407690 (r12);\n    if (rbx == 0) {\n        goto label_12;\n    }\n    rdx = imp.__libc_start_main;\n    rbp = r13 + 2;\n    rcx = rax + rbp;\n    if (rdx != 0) {\n        if (rdx <= rcx) {\n            goto label_13;\n        }\n        rdx = r15;\n        rdx -= rax;\n        if (rdx < r13) {\n            goto label_13;\n        }\n    }\n    r13 = rcx;\n    do {\n        ecx = 0x20;\n        edx = 0x20;\nlabel_1:\n        rdi = stdout;\n        rax = *((rdi + 0x28));\n        if (rax >= *((rdi + 0x30))) {\n            goto label_14;\n        }\n        rsi = rax + 1;\n        *((rdi + 0x28)) = rsi;\n        *(rax) = r14b;\nlabel_2:\n        rdi = stdout;\n        rax = *((rdi + 0x28));\n        if (rax >= *((rdi + 0x30))) {\n            goto label_15;\n        }\n        rcx = rax + 1;\n        *((rdi + 0x28)) = rcx;\n        *(rax) = dl;\n        goto label_0;\nlabel_11:\n        rbp = r13 + 2;\n        r13 = rbp;\n    } while (1);\nlabel_13:\n    r13 = rax;\n    ecx = 0xa;\n    edx = 0xa;\n    ebp = 0;\n    goto label_1;\nlabel_10:\n    rdi = stdout;\n    rax = *((rdi + 0x28));\n    if (rax < *((rdi + 0x30))) {\n        rdx = rax + 1;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = 0xa;\n        return rax;\nlabel_12:\n        r13 += rax;\n        goto label_0;\nlabel_14:\n        esi = (int32_t) r14b;\n        *((rsp + 0xc)) = ecx;\n        *((rsp + 0xb)) = dl;\n        overflow ();\n        edx = *((rsp + 0xb));\n        ecx = *((rsp + 0xc));\n        goto label_2;\nlabel_15:\n        esi = ecx;\n        overflow ();\n        goto label_0;\n    }\n    esi = 0xa;\n    void (*0x402980)() ();\n    if (*(0x006256f8) > 4) {\n        goto label_16;\n    }\n    eax = imp.__libc_start_main;\n    /* switch table (5 cases) at 0x418bc8 */\n    if (*(0x00625670) == 0) {\n        goto label_17;\n    }\n    rax = fcn_00407800 (0);\n    rdx = rax * 3;\n    r14 = rax;\n    rax = imp.__libc_start_main;\n    r15 = rax + rdx*8 - 0x18;\n    rax = imp.__libc_start_main;\n    rbx = *(rax);\n    rax = fcn_00407690 (*(rax));\n    *((rsp + 8)) = rax;\n    rax = *((r15 + 0x10));\n    r12 = *(rax);\n    fcn_00406af0 (rbx, 0);\n    if (*(0x00625770) <= 1) {\n        goto label_18;\n    }\n    r13d = 0;\n    ebx = 1;\n    rcx = *((rsp + 8));\n    while (rdx == 0) {\n        rdi = stdout;\n        rax = *((rdi + 0x28));\n        if (rax >= *((rdi + 0x30))) {\n            goto label_19;\n        }\n        rdx = rax + 1;\n        r13d = 0;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = 0xa;\nlabel_3:\n        rax = imp.__libc_start_main;\n        r12 = *((rax + rbx*8));\n        rbx++;\n        fcn_00406af0 (r12, r13);\n        rax = fcn_00407690 (r12);\n        rcx = rax;\n        rax = *((r15 + 0x10));\n        r12 = *((rax + rbp*8));\n        if (rbx >= *(0x00625770)) {\n            goto label_18;\n        }\n        rax = rbx;\n        edx = 0;\n        rax = rdx:rax / r14;\n        rdx = rdx:rax % r14;\n    }\n    r12 += r13;\n    rsi = r12;\n    r13 = r12;\n    fcn_004052c0 (r13 + rcx, rsi);\n    goto label_3;\n    edi = 0x2c;\nlabel_6:\n    goto label_4;\n    ebx = 0;\n    if (*(0x00625770) == 0) {\n        goto label_20;\n    }\n    do {\n        fcn_00405e30 ();\n        rax = imp.__libc_start_main;\n        fcn_00406c60 (*((rax + rbx*8)));\n        rdi = stdout;\n        rax = *((rdi + 0x28));\n        if (rax >= *((rdi + 0x30))) {\n            goto label_21;\n        }\n        rdx = rax + 1;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = 0xa;\nlabel_8:\n        *(0x006255b8)++;\n        rbx++;\n    } while (*(0x00625770) > rbx);\n    goto label_20;\n    ebx = 0;\n    if (*(0x00625770) == 0) {\n        goto label_20;\n    }\n    do {\n        rax = imp.__libc_start_main;\n        fcn_00406af0 (*((rax + rbx*8)), 0);\n        rdi = stdout;\n        rax = *((rdi + 0x28));\n        if (rax >= *((rdi + 0x30))) {\n            goto label_22;\n        }\n        rdx = rax + 1;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = 0xa;\nlabel_7:\n        rbx++;\n    } while (*(0x00625770) > rbx);\n    goto label_20;\n    if (*(0x00625670) == 0) {\n        goto label_17;\n    }\n    rax = fcn_00407800 (1);\n    *((rsp + 0x10)) = 0;\n    rdx = rax * 3;\n    rcx = rax;\n    rax = imp.__libc_start_main;\n    r15 = rax + rdx*8 - 0x18;\n    rax = imp.__libc_start_main;\n    edx = 0;\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    dl = (rdx != 0) ? 1 : 0;\n    edx = (int32_t) dl;\n    rdx += rax;\n    *((rsp + 0x18)) = rdx;\n    if (rdx == 0) {\n        goto label_20;\n    }\nlabel_5:\n    r14 = *((rsp + 0x10));\n    r13d = 0;\n    ebp = 0;\n    while (r14 < *(0x00625770)) {\n        rbx += rbp;\n        rsi = rbx;\n        rdi += rbp;\n        fcn_004052c0 (*((rsp + 8)), rsi);\n        rax = imp.__libc_start_main;\n        r12 = *((rax + r14*8));\n        rax = fcn_00407690 (*((rax + r14*8)));\n        *((rsp + 8)) = rax;\n        rax = *((r15 + 0x10));\n        rbx = *((rax + r13));\n        r13 += 8;\n        fcn_00406af0 (r12, rbp);\n        r14 += *((rsp + 0x18));\n    }\n    rdi = stdout;\n    rax = *((rdi + 0x28));\n    if (rax >= *((rdi + 0x30))) {\n        goto label_23;\n    }\n    rdx = rax + 1;\n    *((rdi + 0x28)) = rdx;\n    *(rax) = 0xa;\nlabel_9:\n    rax = *((rsp + 0x10));\n    if (*((rsp + 0x18)) != rax) {\n        goto label_5;\n    }\n    do {\nlabel_20:\n        return rax;\nlabel_17:\n        edi = 0x20;\n        goto label_6;\nlabel_22:\n        esi = 0xa;\n        overflow ();\n        goto label_7;\nlabel_21:\n        esi = 0xa;\n        overflow ();\n        goto label_8;\nlabel_16:\n        return rax;\nlabel_18:\n        rdi = stdout;\n        rax = *((rdi + 0x28));\n        if (rax >= *((rdi + 0x30))) {\n            goto label_24;\n        }\n        rdx = rax + 1;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = 0xa;\n    } while (1);\nlabel_23:\n    esi = 0xa;\n    overflow ();\n    goto label_9;\nlabel_19:\n    esi = 0xa;\n    r13d = 0;\n    overflow ();\n    goto label_3;\nlabel_24:\n    esi = 0xa;\n    return overflow ();\n}\n"
        },
        {
            "funcName": "fcn_00408410",
            "funcStartAddr": "0x408410",
            "funcEndAddr": "0x4084ad",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x408410 */\n#include <stdint.h>\n \nint64_t fcn_00408410 (int64_t arg1) {\n    rdi = arg1;\n    if (*(0x006256ed) == 0) {\n        goto label_1;\n    }\nlabel_0:\n    rbx = rsp;\n    r8d = ebp;\n    ecx = 0x41b064;\n    edx = 0x15;\n    esi = 1;\n    rdi = rbx;\n    eax = 0;\n    sprintf_chk ();\n    rax = rbx;\n    do {\n        ecx = *(rax);\n        rax += 4;\n        edx = rcx - 0x1010101;\n        ecx = ~ecx;\n        edx &= ecx;\n        edx &= 0x80808080;\n    } while (edx == 0);\n    ecx = edx;\n    ecx >>= 0x10;\n    if ((edx & 0x8080) == 0) {\n        edx = ecx;\n    }\n    rcx = rax + 2;\n    if ((edx & 0x8080) == 0) {\n        rax = rcx;\n    }\n    esi = edx;\n    sil += dl;\n    rax -= 3;\n    eax -= ebx;\n    return rax;\nlabel_1:\n    rax = fcn_0040e160 (rdi);\n    rdi = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    eax = fcn_0040eb70 (rdi, 0);\n    edx = 0;\n    __asm (\"cmovs eax, edx\");\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004084b0",
            "funcStartAddr": "0x4084b0",
            "funcEndAddr": "0x408579",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4084b0 */\n#include <stdint.h>\n \nint64_t fcn_004084b0 (void) {\n    rax = imp.__libc_start_main;\n    rbx = imp.__libc_start_main;\n    r12 = rbx + rax*8;\n    if (rax == 0) {\n        goto label_0;\n    }\n    do {\n        rbp = *(rbx);\n        rbx += 8;\n        free (*(rbp));\n        free (*((rbp + 8)));\n        free (*((rbp + 0x10)));\n    } while (rbx != r12);\nlabel_0:\n    *(0x00625769) = 0;\n    *(0x00625770) = 0;\n    *(0x00625724) = 0;\n    *(0x00625720) = 0;\n    *(0x0062571c) = 0;\n    *(0x00625718) = 0;\n    *(0x00625710) = 0;\n    *(0x0062570c) = 0;\n    *(0x00625708) = 0;\n    *(0x00625714) = 0;\n    *(0x00625704) = 0;\n    *(0x00625700) = 0;\n    *(0x006256fc) = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00408580",
            "funcStartAddr": "0x408580",
            "funcEndAddr": "0x40929e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x408580 */\n#include <stdint.h>\n \nint64_t fcn_00408580 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r15 = rcx;\n    r14d = esi;\n    r13d = edx;\n    rcx = imp.__libc_start_main;\n    *((rbp - 0x2e8)) = rdi;\n    rdi = imp.__libc_start_main;\n    if (rcx == *(0x00625778)) {\n        edx = 0x190;\n        rax = rdx;\n        rdx:rax = rax * rcx;\n        __asm (\"seto dl\");\n        edx = (int32_t) dl;\n        if (rax < 0) {\n            goto label_31;\n        }\n        if (rdx != 0) {\n            goto label_31;\n        }\n        rax = rcx * 5;\n        rsi <<= 4;\n        rax = fcn_004129e0 (rdi, rax + rax*4);\n        rcx = imp.__libc_start_main;\n        *(0x00625778) <<= 1;\n        *(0x00625780) = rax;\n        rdi = rax;\n    }\n    rax = rcx * 5;\n    rax *= 5;\n    rbx = rdi + rax*8;\n    eax = 0;\n    rdi = rbx + 8;\n    rcx = rbx;\n    *(rbx) = 0;\n    *((rbx + 0xbc)) = 0;\n    rdi &= 0xfffffffffffffff8;\n    rcx -= rdi;\n    ecx += 0xc4;\n    ecx >>= 3;\n    do {\n        *(rdi) = rax;\n        rcx--;\n        rdi += 8;\n    } while (rcx != 0);\n    *((rbx + 0x20)) = 0;\n    *((rbx + 0xa8)) = r14d;\n    *((rbx + 0xc4)) = 0xffffffff;\n    if (*(0x00625769) == 0) {\n        if (*(0x00625768) != 0) {\n            goto label_32;\n        }\n    }\nlabel_11:\n    r8d = *(0x006256d1);\n    if (r13b == 0) {\n        goto label_33;\n    }\n    rax = *((rbp - 0x2e8));\n    edx = *(rax);\n    r12 = rax;\n    if (dl != 0x2f) {\n        ecx = *(r15);\n        if (cl != 0) {\n            goto label_34;\n        }\n    }\nlabel_10:\n    if (r8b != 0) {\n        goto label_9;\n    }\nlabel_7:\n    ecx = imp.__libc_start_main;\n    r15 = rbx + 0x18;\n    if (ecx < 3) {\n        goto label_8;\n    }\n    if (ecx <= 4) {\n        goto label_35;\n    }\n    if (ecx != 5) {\n        goto label_8;\n    }\nlabel_1:\n    rdx = r15;\n    rsi = r12;\n    edi = 1;\n    eax = xstat ();\n    if (eax != 0) {\n        goto label_36;\n    }\nlabel_2:\n    *((rbx + 0xb8)) = 1;\n    if (r14d == 5) {\n        goto label_37;\n    }\n    eax = *((rbx + 0x30));\n    eax &= 0xf000;\n    if (eax == 0x8000) {\n        goto label_37;\n    }\nlabel_6:\n    r10d = imp.__libc_start_main;\n    if (r10d != 0) {\n        if (*(0x00625725) == 0) {\n            goto label_38;\n        }\n    }\n    rax = errno_location ();\n    r14 = *((rbx + 0x18));\n    r8 = rax;\n    *(rax) = 0x5f;\n    if (r14 != *(0x006246b0)) {\n        *(0x006246b0) = r14;\n    }\n    r9d = imp.__libc_start_main;\n    *((rbx + 0xb0)) = 0x6245aa;\n    if (r9d == 0) {\n        goto label_39;\n    }\n    *((rbx + 0xbc)) = 0;\nlabel_38:\n    eax = *((rbx + 0x30));\n    eax &= 0xf000;\n    if (eax == 0xa000) {\n        goto label_40;\n    }\nlabel_15:\n    if (eax == 0x4000) {\n        goto label_41;\n    }\n    *((rbx + 0xa8)) = 5;\nlabel_16:\n    ecx = imp.__libc_start_main;\n    r12 = *((rbx + 0x58));\n    if (ecx == 0) {\n        goto label_42;\n    }\n    if (*(0x006256ec) != 0) {\n        goto label_42;\n    }\nlabel_4:\n    if (*(0x00625725) != 0) {\n        goto label_43;\n    }\nlabel_5:\n    eax = *(0x006256bc);\n    if (al != 0) {\n        goto label_44;\n    }\n    do {\nlabel_0:\n        rax = fcn_00412bb0 (*((rbp - 0x2e8)));\n        *(0x00625770)++;\n        *(rbx) = rax;\nlabel_3:\n        rsp = rbp - 0x28;\n        rax = r12;\n        return rax;\nlabel_33:\n        if (r8b != 0) {\n            goto label_45;\n        }\n        if (*(0x00625661) != 0) {\n            goto label_22;\n        }\n        if (r14d == 3) {\n            goto label_46;\n        }\nlabel_26:\n        eax = *(0x006256bc);\n        if (al != 0) {\n            goto label_47;\n        }\n        if (*(0x00625660) == 0) {\n            goto label_48;\n        }\n        cl = (r14d == 0) ? 1 : 0;\n        edx = ecx;\n        if (r14d == 6) {\n            goto label_49;\n        }\n        if (cl != 0) {\n            goto label_49;\n        }\n        if (*(0x00625660) == 0) {\n            goto label_48;\n        }\nlabel_23:\n        r12d = 0;\n    } while (r14d != 5);\n    if (*(0x006256d4) == 3) {\n        goto label_22;\n    }\n    *((rbp - 0x2f0)) = r8b;\n    if (*(0x006256d2) == 0) {\n        goto label_0;\n    }\n    al = fcn_00404ae0 (0xe);\n    r8d = *((rbp - 0x2f0));\n    if (al != 0) {\n        goto label_22;\n    }\n    al = fcn_00404ae0 (0x10);\n    r8d = *((rbp - 0x2f0));\n    if (al != 0) {\n        goto label_22;\n    }\n    al = fcn_00404ae0 (0x11);\n    r8d = *((rbp - 0x2f0));\n    if (al != 0) {\n        goto label_22;\n    }\n    al = fcn_00404ae0 (0x15);\n    r8d = *((rbp - 0x2f0));\n    if (al == 0) {\n        goto label_0;\n    }\nlabel_22:\n    rax = *((rbp - 0x2e8));\n    edx = *(rax);\n    if (dl != 0x2f) {\n        ecx = *(r15);\n        if (cl != 0) {\n            goto label_34;\n        }\n    }\n    eax = imp.__libc_start_main;\n    r15 = rbx + 0x18;\n    r12 = *((rbp - 0x2e8));\n    if (eax < 3) {\n        goto label_8;\n    }\n    if (eax <= 4) {\n        goto label_8;\n    }\n    if (eax == 5) {\n        goto label_1;\n    }\nlabel_8:\n    rdx = r15;\n    rsi = r12;\n    edi = 1;\n    eax = lxstat ();\n    if (eax == 0) {\n        goto label_2;\n    }\nlabel_36:\n    edx = 5;\n    rax = dcgettext (0, \"cannot access %s\");\n    edi = (int32_t) r13b;\n    r12d = 0;\n    fcn_00405580 (rdi, rax, r12);\n    if (r13b != 0) {\n        goto label_3;\n    }\n    goto label_0;\nlabel_42:\n    r13 = rbp - 0x2c0;\n    rax = fcn_0040d5d0 (r12, r13, *(0x006256e8), 0x200, *(0x006256e0));\n    eax = fcn_0040eb70 (rax, 0);\n    if (eax > *(0x0062571c)) {\n        *(0x0062571c) = eax;\n    }\n    edx = imp.__libc_start_main;\n    if (edx != 0) {\n        goto label_4;\n    }\n    if (*(0x006245a9) != 0) {\n        goto label_50;\n    }\nlabel_18:\n    if (*(0x006245a8) != 0) {\n        goto label_51;\n    }\nlabel_20:\n    if (*(0x006256ee) != 0) {\n        goto label_52;\n    }\nlabel_19:\n    if (*(0x00625725) != 0) {\nlabel_43:\n        eax = strlen (*((rbx + 0xb0)));\n        if (eax > *(0x00625714)) {\n            goto label_53;\n        }\n    }\nlabel_12:\n    eax = imp.__libc_start_main;\n    if (eax != 0) {\n        goto label_5;\n    }\n    rax = fcn_0040e520 (*((rbx + 0x28)), rbp - 0x2e0, rdx);\n    eax = strlen (rax);\n    if (eax > *(0x00625718)) {\n        *(0x00625718) = eax;\n    }\n    eax = *((rbx + 0x30));\n    eax &= 0xb000;\n    if (eax != 0x2000) {\n        goto label_54;\n    }\n    rax = *((rbx + 0x40));\n    r13 = rbp - 0x2c0;\n    rdi = rax;\n    rax >>= 0x20;\n    rdi >>= 8;\n    edx &= 0xfff;\n    edi &= 0xfffff000;\n    edi |= edx;\n    rax = fcn_0040e520 (rax, r13, edi);\n    eax = strlen (rax);\n    if (eax > *(0x00625704)) {\n        *(0x00625704) = eax;\n    }\n    rax = *((rbx + 0x40));\n    edx = (int32_t) al;\n    rax >>= 0xc;\n    dil = 0;\n    edi |= edx;\n    rax = fcn_0040e520 (rax, r13, rdx);\n    eax = strlen (rax);\n    edx = imp.__libc_start_main;\n    if (eax > edx) {\n        *(0x00625700) = eax;\n        edx = eax;\n    }\n    eax = imp.__libc_start_main;\n    eax = rdx + rax + 2;\n    if (eax <= *(0x006256fc)) {\n        goto label_5;\n    }\n    goto label_55;\nlabel_37:\n    if (*(0x006256d2) == 0) {\n        goto label_6;\n    }\n    al = fcn_00404ae0 (0x15);\n    if (al == 0) {\n        goto label_6;\n    }\n    errno_location ();\n    r14 = *((rbx + 0x18));\n    *(rax) = 0x5f;\n    if (r14 != *(0x006246b8)) {\n        *(0x006246b8) = r14;\n    }\n    *((rbx + 0xc0)) = 0;\n    goto label_6;\nlabel_45:\n    rax = *((rbp - 0x2e8));\n    edx = *(rax);\n    if (dl != 0x2f) {\n        goto label_56;\n    }\n    r12 = *((rbp - 0x2e8));\nlabel_9:\n    rax = fcn_0040b070 (r12, 2);\n    *((rbx + 0x10)) = rax;\n    if (rax != 0) {\n        goto label_7;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"error canonicalizing %s\");\n    edi = (int32_t) r13b;\n    fcn_00405580 (rdi, rax, r12);\n    goto label_7;\nlabel_35:\n    if (r13b == 0) {\n        goto label_8;\n    }\n    rdx = r15;\n    rsi = r12;\n    edi = 1;\n    *((rbp - 0x2f0)) = ecx;\n    eax = xstat ();\n    ecx = *((rbp - 0x2f0));\n    if (ecx == 3) {\n        goto label_57;\n    }\n    if (eax < 0) {\n        goto label_58;\n    }\n    edx = *((rbx + 0x30));\n    edx &= 0xf000;\n    if (edx != 0x4000) {\n        goto label_8;\n    }\nlabel_57:\n    if (eax == 0) {\n        goto label_2;\n    }\n    goto label_59;\nlabel_44:\n    rax = fcn_0040e520 (*((rbx + 0x20)), rbp - 0x2c0, rdx);\n    eax = strlen (rax);\n    if (eax <= *(0x00625720)) {\n        goto label_0;\n    }\n    *(0x00625720) = eax;\n    goto label_0;\nlabel_56:\n    ecx = *(r15);\n    r12 = *((rbp - 0x2e8));\n    if (cl == 0) {\n        goto label_9;\n    }\nlabel_34:\n    *((rbp - 0x2f2)) = r8b;\n    *((rbp - 0x2f1)) = dl;\n    *((rbp - 0x2f0)) = cl;\n    rax = strlen (*((rbp - 0x2e8)));\n    r12 = rax;\n    strlen (r15);\n    ecx = *((rbp - 0x2f0));\n    r10d = *((r15 + 1));\n    rax = r12 + rax + 0x19;\n    edx = *((rbp - 0x2f1));\n    r8d = *((rbp - 0x2f2));\n    rax &= 0xfffffffffffffff0;\n    rdi = rsp + 0xf;\n    rdi &= 0xfffffffffffffff0;\n    r12 = rdi;\n    if (cl == 0x2e) {\n        goto label_60;\n    }\nlabel_14:\n    rsi = r15;\n    while (r10b != 0) {\n        ecx = r10d;\n        r10d = *((rsi + 1));\n        rdi = rax;\n        rax = rdi + 1;\n        rsi++;\n        *((rax - 1)) = cl;\n    }\n    if (r15 < rsi) {\n        if (*((rsi - 1)) == 0x2f) {\n            goto label_13;\n        }\n        *(rax) = 0x2f;\n        rax = rdi + 2;\n    }\nlabel_13:\n    if (dl == 0) {\n        goto label_61;\n    }\n    rcx = *((rbp - 0x2e8));\n    do {\n        rcx++;\n        rax++;\n        *((rax - 1)) = dl;\n        edx = *(rcx);\n    } while (dl != 0);\nlabel_61:\n    *(rax) = 0;\n    goto label_10;\nlabel_32:\n    al = fcn_00404e20 (*((rbp - 0x2e8)));\n    edx = (int32_t) al;\n    *((rbx + 0xc4)) = edx;\n    if (al == 0) {\n        goto label_11;\n    }\n    *(0x00625769) = 1;\n    goto label_11;\nlabel_53:\n    *(0x00625714) = eax;\n    goto label_12;\nlabel_54:\n    rax = fcn_0040d5d0 (*((rbx + 0x48)), rbp - 0x2c0, *(0x006256dc), 1, *(0x006245a0));\n    eax = fcn_0040eb70 (rax, 0);\n    if (eax <= *(0x006256fc)) {\n        goto label_5;\n    }\nlabel_55:\n    *(0x006256fc) = eax;\n    goto label_5;\nlabel_60:\n    rax = rdi;\n    if (r10b == 0) {\n        goto label_13;\n    }\n    goto label_14;\nlabel_39:\n    if (r14 == *(0x006246a8)) {\n        goto label_62;\n    }\n    *(r8) = 0;\n    rsi = r15;\n    rdi = r12;\n    *((rbp - 0x2f0)) = r8;\n    eax = fcn_0040b900 ();\n    if (eax <= 0) {\n        goto label_63;\n    }\n    *((rbx + 0xbc)) = 2;\n    *(0x00625724) = 1;\nlabel_24:\n    eax = *((rbx + 0x30));\n    eax &= 0xf000;\n    if (eax != 0xa000) {\n        goto label_15;\n    }\n    r8d = imp.__libc_start_main;\n    if (r8d != 0) {\nlabel_40:\n        if (*(0x006256bd) == 0) {\n            goto label_64;\n        }\n    }\nlabel_30:\n    rax = fcn_0040abf0 (r12, *((rbx + 0x48)));\n    r14 = rax;\n    *((rbx + 8)) = rax;\n    if (rax == 0) {\n        goto label_65;\n    }\nlabel_25:\n    if (*(r14) == 0x2f) {\n        goto label_66;\n    }\n    rax = fcn_0040b7b0 (r12);\n    if (rax == 0) {\n        goto label_66;\n    }\n    *((rbp - 0x2f0)) = rax;\n    strlen (r14);\n    rdx = *((rbp - 0x2f0));\n    rax = fcn_00412980 (rdx + rax + 2);\n    rdx = *((rbp - 0x2f0));\n    r15 = rax;\n    if (*((r12 + rdx - 1)) != 0x2f) {\n        rdx++;\n    }\n    rsi = r12;\n    rdi = r15;\n    rax = stpncpy ();\n    strcpy (rax, r14);\nlabel_21:\n    if (r15 == 0) {\n        goto label_67;\n    }\n    edi = *((rbx + 0xc4));\n    if (edi == 0) {\n        goto label_68;\n    }\nlabel_29:\n    if (*(0x006256d4) > 1) {\n        goto label_69;\n    }\n    if (*(0x006256bd) != 0) {\n        goto label_69;\n    }\nlabel_17:\n    free (r15);\n    eax = *((rbx + 0x30));\n    eax &= 0xf000;\n    if (eax != 0xa000) {\n        goto label_15;\n    }\nlabel_64:\n    *((rbx + 0xa8)) = 6;\n    goto label_16;\nlabel_69:\n    rdx = rbp - 0x2c0;\n    rsi = r15;\n    edi = 1;\n    eax = xstat ();\n    if (eax != 0) {\n        goto label_17;\n    }\n    *((rbx + 0xb9)) = 1;\n    eax = *((rbp - 0x2a8));\n    if (r13b == 0) {\n        goto label_70;\n    }\n    esi = imp.__libc_start_main;\n    if (esi == 0) {\n        goto label_70;\n    }\n    edx = eax;\n    edx &= 0xf000;\n    if (edx == 0x4000) {\n        goto label_17;\n    }\nlabel_70:\n    *((rbx + 0xac)) = eax;\n    goto label_17;\nlabel_41:\n    if (r13b != 0) {\n        if (*(0x006256b5) != 0) {\n            goto label_71;\n        }\n        *((rbx + 0xa8)) = 9;\n        goto label_16;\n    }\nlabel_71:\n    *((rbx + 0xa8)) = 3;\n    goto label_16;\nlabel_50:\n    eax = fcn_00408410 (*((rbx + 0x34)));\n    if (eax <= *(0x00625710)) {\n        goto label_18;\n    }\n    *(0x00625710) = eax;\n    goto label_18;\nlabel_52:\n    eax = fcn_00408410 (*((rbx + 0x34)));\n    if (eax <= *(0x00625708)) {\n        goto label_19;\n    }\n    *(0x00625708) = eax;\n    goto label_19;\nlabel_51:\n    r14d = *((rbx + 0x38));\n    if (*(0x006256ed) == 0) {\n        goto label_72;\n    }\nlabel_27:\n    r8d = r14d;\n    ecx = 0x41b064;\n    edx = 0x15;\n    rdi = r13;\n    esi = 1;\n    eax = 0;\n    sprintf_chk ();\n    rax = r13;\n    do {\n        ecx = *(rax);\n        rax += 4;\n        edx = rcx - 0x1010101;\n        ecx = ~ecx;\n        edx &= ecx;\n        edx &= 0x80808080;\n    } while (edx == 0);\n    ecx = edx;\n    ecx >>= 0x10;\n    if ((edx & 0x8080) == 0) {\n        edx = ecx;\n    }\n    rcx = rax + 2;\n    if ((edx & 0x8080) == 0) {\n        rax = rcx;\n    }\n    esi = edx;\n    sil += dl;\n    rax -= 3;\n    eax -= r13d;\nlabel_28:\n    if (*(0x0062570c) >= eax) {\n        goto label_20;\n    }\n    *(0x0062570c) = eax;\n    goto label_20;\nlabel_66:\n    rax = fcn_00412bb0 (r14);\n    r15 = rax;\n    goto label_21;\nlabel_47:\n    dl = (r14d == 0) ? 1 : 0;\n    if (r14d == 6) {\n        goto label_49;\n    }\n    if (dl == 0) {\n        goto label_22;\n    }\nlabel_49:\n    if (*(0x006256b8) == 5) {\n        goto label_22;\n    }\n    if (*(0x00625750) != 0) {\n        goto label_22;\n    }\n    if (*(0x006256bd) != 0) {\n        goto label_22;\n    }\n    if (al != 0) {\n        goto label_22;\n    }\n    if (*(0x00625660) == 0) {\n        goto label_48;\n    }\n    if (dl != 0) {\n        goto label_22;\n    }\n    goto label_23;\nlabel_58:\n    rax = errno_location ();\n    if (*(rax) == 2) {\n        goto label_8;\n    }\nlabel_59:\n    edx = 5;\n    rax = dcgettext (0, \"cannot access %s\");\n    r12d = 0;\n    eax = fcn_00405580 (1, rax, r12);\n    goto label_3;\nlabel_48:\n    r12d = 0;\n    goto label_0;\nlabel_63:\n    r8 = *((rbp - 0x2f0));\n    edx = *(r8);\n    ecx = rdx - 0x16;\n    ecx &= 0xffffffef;\n    if (ecx != 0) {\n        if (edx != 0x5f) {\n            goto label_73;\n        }\n    }\n    rdx = *((rbx + 0x18));\n    *(0x006246a8) = rdx;\nlabel_73:\n    *((rbx + 0xbc)) = 0;\n    if (eax >= 0) {\n        goto label_24;\n    }\n    *((rbp - 0x2f0)) = r8;\n    rax = fcn_00412110 (0, 3, r12);\n    r8 = *((rbp - 0x2f0));\n    rcx = rax;\n    eax = 0;\n    error (0, *(r8), 0x41d784);\n    goto label_24;\nlabel_65:\n    edx = 5;\n    rax = dcgettext (0, \"cannot read symbolic link %s\");\n    edi = (int32_t) r13b;\n    fcn_00405580 (rdi, rax, r12);\n    r14 = *((rbx + 8));\n    if (r14 != 0) {\n        goto label_25;\n    }\nlabel_67:\n    r15d = 0;\n    goto label_17;\nlabel_46:\n    if (*(0x006256d2) == 0) {\n        goto label_26;\n    }\n    *((rbp - 0x2f0)) = r8b;\n    al = fcn_00404ae0 (0x13);\n    r8d = *((rbp - 0x2f0));\n    if (al != 0) {\n        goto label_22;\n    }\n    al = fcn_00404ae0 (0x12);\n    r8d = *((rbp - 0x2f0));\n    if (al != 0) {\n        goto label_22;\n    }\n    al = fcn_00404ae0 (0x14);\n    r8d = *((rbp - 0x2f0));\n    if (al != 0) {\n        goto label_22;\n    }\n    goto label_26;\nlabel_72:\n    rax = fcn_0040e2f0 (r14d);\n    rdi = rax;\n    if (rax == 0) {\n        goto label_27;\n    }\n    eax = fcn_0040eb70 (rdi, 0);\n    edx = 0;\n    __asm (\"cmovs eax, edx\");\n    goto label_28;\nlabel_68:\n    al = fcn_00404e20 (*((rbx + 8)));\n    if (al == 0) {\n        goto label_29;\n    }\n    *((rbx + 0xc4)) = 0xffffffff;\n    goto label_29;\nlabel_62:\n    *(r8) = 0x5f;\n    eax = *((rbx + 0x30));\n    *((rbx + 0xbc)) = 0;\n    eax &= 0xf000;\n    if (eax != 0xa000) {\n        goto label_15;\n    }\n    goto label_30;\nlabel_31:\n    return fcn_00412bd0 ();\n}\n"
        },
        {
            "funcName": "fcn_004092a0",
            "funcStartAddr": "0x4092a0",
            "funcEndAddr": "0x40995a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4092a0 */\n#include <stdint.h>\n \nint64_t fcn_004092a0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_1ch;\n    int64_t var_20h;\n    int64_t var_sp_28h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r14 = rdi;\n    ebx = edx;\n    *((rsp + 0x1c)) = edx;\n    errno_location ();\n    rdi = r14;\n    *(rax) = 0;\n    r12 = rax;\n    rax = opendir ();\n    if (rax == 0) {\n        goto label_13;\n    }\n    r13 = rax;\n    if (*(0x00625788) != 0) {\n        rdi = rax;\n        eax = dirfd ();\n        rdx = rsp + 0x20;\n        if (eax < 0) {\n            goto label_14;\n        }\n        esi = eax;\n        edi = 1;\n        eax = fxstat ();\n        eax >>= 0x1f;\n        if (al != 0) {\n            goto label_15;\n        }\nlabel_3:\n        rcx = *((rsp + 0x28));\n        rdx = *((rsp + 0x20));\n        *((rsp + 0x10)) = rcx;\n        *((rsp + 8)) = rdx;\n        rax = fcn_00412980 (0x10);\n        rcx = *((rsp + 0x10));\n        rdx = *((rsp + 8));\n        rsi = rax;\n        r15 = rax;\n        *(rax) = rcx;\n        *((rax + 8)) = rdx;\n        rax = fcn_0040d220 (*(0x00625788));\n        if (rax == 0) {\n            goto label_16;\n        }\n        if (r15 != rax) {\n            free (r15);\n            rax = fcn_00412110 (0, 3, r14);\n            edx = 5;\n            rbx = rax;\n            rax = dcgettext (0, \"%s: not listing already-listed directory\");\n            rcx = rbx;\n            eax = 0;\n            error (0, 0, rax);\n            rdi = r13;\n            closedir ();\n            *(0x006255d0) = 2;\nlabel_4:\n            return rax;\n        }\n        rax = imp.__libc_start_main;\n        rdx = imp.__libc_start_main;\n        r15 = *((rsp + 0x28));\n        rcx = *((rsp + 0x20));\n        rdx -= rax;\n        if (rdx <= 0xf) {\n            esi = 0x10;\n            edi = 0x6254a0;\n            *((rsp + 8)) = rcx;\n            _obstack_newchunk ();\n            rax = imp.__libc_start_main;\n            rcx = *((rsp + 8));\n        }\n        rdx = rax + 0x10;\n        *(0x006254b8) = rdx;\n        *((rax + 8)) = rcx;\n        *(rax) = r15;\n    }\n    fcn_004084b0 ();\n    if (*(0x006256b6) == 0) {\n        goto label_17;\n    }\nlabel_2:\n    if (*(0x00624400) == 0) {\n        rdi = stdout;\n        rax = *((rdi + 0x28));\n        if (rax >= *((rdi + 0x30))) {\n            goto label_18;\n        }\n        rdx = rax + 1;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = 0xa;\nlabel_10:\n        *(0x006255b8)++;\n    }\n    *(0x00624400) = 0;\n    if (*(0x006256d8) != 0) {\n        goto label_19;\n    }\n    r15d = 0;\n    if (*(0x006256d1) != 0) {\n        goto label_20;\n    }\nlabel_9:\n    rsi = imp.__libc_start_main;\n    edx = 0xffffffff;\n    r9d = 0x625500;\n    if (rbp == 0) {\n    }\n    fcn_004062d0 (rbp, rsi, rdx, 0, 1, r9);\n    free (r15);\n    esi = 1;\n    edx = 2;\n    rcx = stdout;\n    edi = 0x41b2e3;\n    fwrite_unlocked ();\n    *(0x006255b8) += 2;\nlabel_1:\n    *((rsp + 0x10)) = 0;\n    eax = (int32_t) bl;\n    *((rsp + 8)) = eax;\nlabel_0:\n    *(r12) = 0;\n    rdi = r13;\n    rax = readdir ();\n    rbx = rax;\n    if (rax == 0) {\n        goto label_21;\n    }\n    rbp = rax + 0x13;\n    eax = imp.__libc_start_main;\n    if (eax == 2) {\n        goto label_22;\n    }\n    if (*((rbx + 0x13)) == 0x2e) {\n        goto label_23;\n    }\n    if (eax != 0) {\n        goto label_22;\n    }\n    r15 = imp.__libc_start_main;\n    if (r15 != 0) {\n        goto label_24;\n    }\n    goto label_22;\n    do {\n        r15 = *((r15 + 8));\n        if (r15 == 0) {\n            goto label_22;\n        }\nlabel_24:\n        eax = fcn_004159a0 (*(r15), rbp, 4);\n    } while (eax != 0);\nlabel_5:\n    fcn_00405d70 ();\n    goto label_0;\nlabel_17:\n    if (*(0x00625678) == 0) {\n        goto label_1;\n    }\n    goto label_2;\nlabel_14:\n    rsi = r14;\n    edi = 1;\n    eax = xstat ();\n    eax >>= 0x1f;\n    if (al == 0) {\n        goto label_3;\n    }\nlabel_15:\n    edx = 5;\n    rax = dcgettext (0, \"cannot determine device and inode of %s\");\n    edi = *((rsp + 0x1c));\n    fcn_00405580 (rdi, rax, r14);\n    rdi = r13;\n    closedir ();\n    goto label_4;\nlabel_21:\n    edx = *(r12);\n    if (edx == 0) {\n        goto label_25;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"reading directory %s\");\n    fcn_00405580 (*((rsp + 8)), rax, r14);\n    if (*(r12) == 0x4b) {\n        goto label_5;\n    }\nlabel_25:\n    rdi = r13;\n    eax = closedir ();\n    if (eax != 0) {\n        goto label_26;\n    }\nlabel_7:\n    fcn_00404f40 ();\n    if (*(0x006256b6) != 0) {\n        goto label_27;\n    }\nlabel_6:\n    eax = imp.__libc_start_main;\n    if (eax != 0) {\n        if (*(0x006256ec) == 0) {\n            goto label_28;\n        }\n    }\n    if (*(0x006256d8) != 0) {\n        goto label_29;\n    }\nlabel_8:\n    edx = 5;\n    rax = dcgettext (0, \"total\");\n    rsi = stdout;\n    rbx = rax;\n    rdi = rax;\n    fputs_unlocked ();\n    rax = strlen (rbx);\n    rdi = stdout;\n    *(0x006255b8) += rax;\n    rax = *((rdi + 0x28));\n    if (rax >= *((rdi + 0x30))) {\n        goto label_30;\n    }\n    rdx = rax + 1;\n    *((rdi + 0x28)) = rdx;\n    *(rax) = 0x20;\nlabel_11:\n    *(0x006255b8)++;\n    rax = fcn_0040d5d0 (*((rsp + 0x10)), rsp + 0x20, *(0x006256e8), 0x200, *(0x006256e0));\n    rsi = stdout;\n    rbx = rax;\n    rdi = rax;\n    fputs_unlocked ();\n    rax = strlen (rbx);\n    rdi = stdout;\n    *(0x006255b8) += rax;\n    rax = *((rdi + 0x28));\n    if (rax >= *((rdi + 0x30))) {\n        goto label_31;\n    }\n    rdx = rax + 1;\n    *((rdi + 0x28)) = rdx;\n    *(rax) = 0xa;\nlabel_12:\n    *(0x006255b8)++;\nlabel_28:\n    if (*(0x00625770) == 0) {\n        goto label_4;\n    }\n    eax = fcn_00407ca0 ();\n    goto label_4;\nlabel_23:\n    if (eax == 0) {\n        goto label_5;\n    }\n    eax = 0;\n    al = (*((rbx + 0x14)) == 0x2e) ? 1 : 0;\n    if (*((rbx + rax + 0x14)) == 0) {\n        goto label_5;\n    }\nlabel_22:\n    r15 = imp.__libc_start_main;\n    if (r15 != 0) {\n        goto label_32;\n    }\n    goto label_33;\n    do {\n        r15 = *((r15 + 8));\n        if (r15 == 0) {\n            goto label_33;\n        }\nlabel_32:\n        eax = fcn_004159a0 (*(r15), rbp, 4);\n    } while (eax != 0);\n    goto label_5;\nlabel_33:\n    eax = *((rbx + 0x12));\n    esi = 0;\n    eax--;\n    if (al <= 0xd) {\n        eax = (int32_t) al;\n    }\n    rax = fcn_00408580 (rbp, *((rax*4 + 0x4194a0)), 0, r14);\n    if (*(0x006256f8) != 1) {\n        goto label_5;\n    }\n    if (*(0x006256f0) != 0xffffffff) {\n        goto label_5;\n    }\n    if (*(0x006256ec) != 0) {\n        goto label_5;\n    }\n    if (*(0x006256b6) != 0) {\n        goto label_5;\n    }\n    fcn_00404f40 ();\n    fcn_00407ca0 ();\n    fcn_004084b0 ();\n    goto label_5;\nlabel_27:\n    esi = 0;\n    fcn_00405140 (r14);\n    goto label_6;\nlabel_26:\n    edx = 5;\n    rax = dcgettext (0, \"closing directory %s\");\n    edi = *((rsp + 0x1c));\n    fcn_00405580 (rdi, rax, r14);\n    goto label_7;\nlabel_29:\n    edx = 2;\n    esi = 1;\n    edi = 0x41b093;\n    rcx = stdout;\n    fwrite_unlocked ();\n    *(0x006255b8) += 2;\n    goto label_8;\nlabel_19:\n    rcx = stdout;\n    edx = 2;\n    esi = 1;\n    r15d = 0;\n    edi = 0x41b093;\n    fwrite_unlocked ();\n    *(0x006255b8) += 2;\n    if (*(0x006256d1) == 0) {\n        goto label_9;\n    }\nlabel_20:\n    rax = fcn_0040b070 (r14, 2);\n    r15 = rax;\n    if (rax != 0) {\n        goto label_9;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"error canonicalizing %s\");\n    edi = *((rsp + 0x1c));\n    fcn_00405580 (rdi, rax, r14);\n    goto label_9;\nlabel_13:\n    edx = 5;\n    rax = dcgettext (0, \"cannot open directory %s\");\n    edi = *((rsp + 0x1c));\n    fcn_00405580 (rdi, rax, r14);\n    goto label_4;\nlabel_18:\n    esi = 0xa;\n    overflow ();\n    goto label_10;\nlabel_30:\n    esi = 0x20;\n    overflow ();\n    goto label_11;\nlabel_31:\n    esi = 0xa;\n    overflow ();\n    goto label_12;\nlabel_16:\n    return fcn_00412bd0 ();\n}\n"
        },
        {
            "funcName": "fcn_0040a530",
            "funcStartAddr": "0x40a530",
            "funcEndAddr": "0x40abe9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40a530 */\n#include <stdint.h>\n \nuint64_t fcn_0040a530 (int64_t arg1) {\n    char * var_8h;\n    int64_t var_10h;\n    char * var_18h;\n    char * var_20h;\n    char * var_28h;\n    char * var_30h;\n    char * var_38h;\n    char * var_40h;\n    char * var_48h;\n    char * var_50h;\n    char * var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    rdi = arg1;\n    edx = 5;\n    r12d = edi;\n    rbx = imp.__libc_start_main;\n    if (edi != 0) {\n        rax = dcgettext (0, \"Try '%s --help' for more information.\\n\");\n        rdi = stderr;\n        rcx = rbx;\n        esi = 1;\n        rdx = rax;\n        eax = 0;\n        fprintf_chk ();\nlabel_0:\n        exit (r12d);\n    }\n    rax = dcgettext (0, \"Usage: %s [OPTION]... [FILE]...\\n\");\n    rdx = rbx;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"List information about the FILEs (the current directory by default).\\nSort entries alphabetically if none of -cftuvSUX nor --sort is specified.\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nMandatory arguments to long options are mandatory for short options too.\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -a, --all                  do not ignore entries starting with .\\n  -A, --almost-all           do not list implied . and ..\\n      --author               with -l, print the author of each file\\n  -b, --escape               print C-style escapes for nongraphic characters\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --block-size=SIZE      with -l, scale sizes by SIZE when printing them;\\n                               e.g., '--block-size=M'; see SIZE format below\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -B, --ignore-backups       do not list implied entries ending with ~\\n  -c                         with -lt: sort by, and show, ctime (time of last\\n                               modification of file status information);\\n                               with -l: show ctime and sort by name;\\n                               otherwise: sort by ctime, newest first\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -C                         list entries by columns\\n      --color[=WHEN]         colorize the output; WHEN can be 'always' (default\\n                               if omitted), 'auto', or 'never'; more info below\\n  -d, --directory            list directories themselves, not their contents\\n  -D, --dired                generate output designed for Emacs' dired mode\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -f                         do not sort, enable -aU, disable -ls --color\\n  -F, --classify             append indicator (one of */=>@|) to entries\\n      --file-type            likewise, except do not append '*'\\n      --format=WORD          across -x, commas -m, horizontal -x, long -l,\\n                               single-column -1, verbose -l, vertical -C\\n      --full-time            like -l --time-style=full-iso\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -g                         like -l, but do not list owner\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --group-directories-first\\n                             group directories before files;\\n                               can be augmented with a --sort option, but any\\n                               use of --sort=none (-U) disables grouping\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -G, --no-group             in a long listing, don't print group names\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -h, --human-readable       with -l and -s, print sizes like 1K 234M 2G etc.\\n      --si                   likewise, but use powers of 1000 not 1024\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -H, --dereference-command-line\\n                             follow symbolic links listed on the command line\\n      --dereference-command-line-symlink-to-dir\\n                             follow each command line symbolic link\\n                               that points to a directory\\n      --hide=PATTERN         do not list implied entries matching shell PATTERN\\n                               (overridden by -a or -A)\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --hyperlink[=WHEN]     hyperlink file names; WHEN can be 'always'\\n                               (default if omitted), 'auto', or 'never'\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --indicator-style=WORD  append indicator with style WORD to entry names:\\n                               none (default), slash (-p),\\n                               file-type (--file-type), classify (-F)\\n  -i, --inode                print the index number of each file\\n  -I, --ignore=PATTERN       do not list implied entries matching shell PATTERN\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -k, --kibibytes            default to 1024-byte blocks for disk usage;\\n                               used only with -s and per directory totals\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -l                         use a long listing format\\n  -L, --dereference          when showing file information for a symbolic\\n                               link, show information for the file the link\\n                               references rather than for the link itself\\n  -m                         fill width with a comma separated list of entries\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -n, --numeric-uid-gid      like -l, but list numeric user and group IDs\\n  -N, --literal              print entry names without quoting\\n  -o                         like -l, but do not list group information\\n  -p, --indicator-style=slash\\n                             append / indicator to directories\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -q, --hide-control-chars   print ? instead of nongraphic characters\\n      --show-control-chars   show nongraphic characters as-is (the default,\\n                               unless program is 'ls' and output is a terminal)\\n  -Q, --quote-name           enclose entry names in double quotes\\n      --quoting-style=WORD   use quoting style WORD for entry names:\\n                               literal, locale, shell, shell-always,\\n                               shell-escape, shell-escape-always, c, escape\\n                               (overrides QUOTING_STYLE environment variable)\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -r, --reverse              reverse order while sorting\\n  -R, --recursive            list subdirectories recursively\\n  -s, --size                 print the allocated size of each file, in blocks\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -S                         sort by file size, largest first\\n      --sort=WORD            sort by WORD instead of name: none (-U), size (-S),\\n                               time (-t), version (-v), extension (-X)\\n      --time=WORD            with -l, show time as WORD instead of default\\n                               modification time: atime or access or use (-u);\\n                               ctime or status (-c); also use specified time\\n                               as sort key if --sort=time (newest first)\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    edx = 5;\n    rbx = stdout;\n    rax = dcgettext (0, \"      --time-style=TIME_STYLE  time/date format with -l; see TIME_STYLE below\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -t                         sort by modification time, newest first\\n  -T, --tabsize=COLS         assume tab stops at each COLS instead of 8\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -u                         with -lt: sort by, and show, access time;\\n                               with -l: show access time and sort by name;\\n                               otherwise: sort by access time, newest first\\n  -U                         do not sort; list entries in directory order\\n  -v                         natural sort of (version) numbers within text\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -w, --width=COLS           set output width to COLS.  0 means no limit\\n  -x                         list entries by lines instead of by columns\\n  -X                         sort alphabetically by entry extension\\n  -Z, --context              print any security context of each file\\n  -1                         list one file per line.  Avoid '\\\\n' with -q or -b\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --help     display this help and exit\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --version  output version information and exit\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\\nUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nThe TIME_STYLE argument can be full-iso, long-iso, iso, locale, or +FORMAT.\\nFORMAT is interpreted like in date(1).  If FORMAT is FORMAT1<newline>FORMAT2,\\nthen FORMAT1 applies to non-recent files and FORMAT2 to recent files.\\nTIME_STYLE prefixed with 'posix-' takes effect only outside the POSIX locale.\\nAlso the TIME_STYLE environment variable sets the default style to use.\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nUsing color to distinguish file types is disabled both by default and\\nwith --color=never.  With --color=auto, ls emits color codes only when\\nstandard output is connected to a terminal.  The LS_COLORS environment\\nvariable can change the settings.  Use the dircolors command to set it.\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    rbx = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nExit status:\\n 0  if OK,\\n 1  if minor problems (e.g., cannot access subdirectory),\\n 2  if serious trouble (e.g., cannot access command-line argument).\\n\");\n    rsi = rbx;\n    rdi = rax;\n    fputs_unlocked ();\n    eax = *(0x006245ac);\n    if (eax == 1) {\n        goto label_4;\n    }\n    eax = \"vdir\";\n    if (eax != 2) {\n    }\nlabel_1:\n    *(rsp) = 0x41b568;\n    esi = 0x41b568;\n    rbx = rsp;\n    *((rsp + 8)) = \"test invocation\";\n    *((rsp + 0x10)) = 0x41b1b1;\n    *((rsp + 0x18)) = \"Multi-call invocation\";\n    *((rsp + 0x20)) = \"sha224sum\";\n    *((rsp + 0x28)) = \"sha2 utilities\";\n    *((rsp + 0x30)) = \"sha256sum\";\n    *((rsp + 0x38)) = \"sha2 utilities\";\n    *((rsp + 0x40)) = \"sha384sum\";\n    *((rsp + 0x48)) = \"sha2 utilities\";\n    *((rsp + 0x50)) = \"sha512sum\";\n    *((rsp + 0x58)) = \"sha2 utilities\";\n    *((rsp + 0x60)) = 0;\n    *((rsp + 0x68)) = 0;\n    while (eax != 0) {\n        rbx += 0x10;\n        rsi = *(rbx);\n        if (rsi == 0) {\n            goto label_5;\n        }\n        eax = strcmp (rbp, rsi);\n    }\nlabel_5:\n    rbx = *((rbx + 8));\n    edx = 5;\n    esi = \"\\n%s online help: <%s>\\n\";\n    edi = 0;\n    if (rbx == 0) {\n        goto label_6;\n    }\n    rax = dcgettext (rdi, rsi);\n    edi = 1;\n    ecx = \"https://www.gnu.org/software/coreutils/\";\n    edx = \"GNU coreutils\";\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rax = setlocale (5, 0);\n    if (rax == 0) {\n        goto label_7;\n    }\n    eax = strncmp (rax, 0x41b1bb, 3);\n    while (1) {\nlabel_7:\n        edx = 5;\n        rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n        rcx = rbp;\n        edx = \"https://www.gnu.org/software/coreutils/\";\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        ecx = 0x41b08a;\n        if (rbp != rbx) {\n        }\nlabel_3:\n        edx = 5;\n        rax = dcgettext (0, \"or available locally via: info '(coreutils) %s%s'\\n\");\n        rcx = rbp;\n        rdx = rbx;\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        goto label_0;\nlabel_4:\n        goto label_1;\nlabel_2:\n        rbx = rbp;\n        edx = 5;\n        rax = dcgettext (0, \"Report %s translation bugs to <https://translationproject.org/team/>\\n\");\n        rdx = rbp;\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n    }\nlabel_6:\n    rax = dcgettext (rdi, rsi);\n    edi = 1;\n    ecx = \"https://www.gnu.org/software/coreutils/\";\n    edx = \"GNU coreutils\";\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rax = setlocale (5, 0);\n    if (rax == 0) {\n        goto label_8;\n    }\n    eax = strncmp (rax, 0x41b1bb, 3);\n    if (eax != 0) {\n        goto label_2;\n    }\nlabel_8:\n    edx = 5;\n    rbx = rbp;\n    rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n    rcx = rbp;\n    edx = \"https://www.gnu.org/software/coreutils/\";\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_0040abf0",
            "funcStartAddr": "0x40abf0",
            "funcEndAddr": "0x40acdf",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40abf0 */\n#include <stdint.h>\n \nuint64_t fcn_0040abf0 (int64_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    eax = 0x401;\n    r15 = 0x7ffffffffffffffe;\n    r14 = 0x3fffffffffffffff;\n    r13 = rdi;\n    rbx = rsi + 1;\n    if (rsi >= 0x401) {\n        rbx = rax;\n    }\nlabel_0:\n    rax = malloc (rbx);\n    if (rax == 0) {\n        goto label_2;\n    }\n    do {\n        rdx = rbx;\n        rsi = rax;\n        rdi = r13;\n        rax = readlink ();\n        r12 = rax;\n        if (rax < 0) {\n            goto label_3;\n        }\nlabel_1:\n        if (rbx > r12) {\n            goto label_4;\n        }\n        free (rbp);\n        if (rbx > r14) {\n            goto label_5;\n        }\n        rbx += rbx;\n        rax = malloc (rbx);\n    } while (rax != 0);\nlabel_2:\n    rax = rbp;\n    return rax;\nlabel_5:\n    if (rbx > r15) {\n        goto label_6;\n    }\n    rbx = 0x7fffffffffffffff;\n    goto label_0;\nlabel_3:\n    rax = errno_location ();\n    if (*(rax) == 0x22) {\n        goto label_1;\n    }\n    ebp = 0;\n    free (rbp);\n    goto label_2;\nlabel_4:\n    *((rbp + r12)) = 0;\n    goto label_2;\nlabel_6:\n    errno_location ();\n    ebp = 0;\n    *(rax) = 0xc;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_0040acf0",
            "funcStartAddr": "0x40acf0",
            "funcEndAddr": "0x40ae06",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40acf0 */\n#include <stdint.h>\n \nuint64_t fcn_0040acf0 (char * arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    char * s2;\n    uint32_t var_17h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r15 = rsi;\n    r13 = rcx;\n    *((rsp + 8)) = rdi;\n    *((rsp + 0x18)) = rdx;\n    rax = strlen (rdi);\n    r14 = *(r15);\n    *(rsp) = 0xffffffffffffffff;\n    if (r14 == 0) {\n        goto label_3;\n    }\n    r12 = rax;\n    *((rsp + 0x17)) = 0;\n    ebx = 0;\n    goto label_1;\nlabel_0:\n    rax = *((rsp + 0x18));\n    if (rax == 0) {\n        goto label_4;\n    }\n    rdi *= r13;\n    rdi += rax;\n    eax = memcmp (*(rsp), rbp, r13);\n    ecx = 1;\n    eax = *((rsp + 0x17));\n    if (eax != 0) {\n        eax = ecx;\n    }\n    *((rsp + 0x17)) = al;\n    do {\nlabel_2:\n        rbx++;\n        rbp += r13;\n        r14 = *((r15 + rbx*8));\n        if (r14 == 0) {\n            goto label_5;\n        }\nlabel_1:\n        eax = strncmp (r14, *((rsp + 8)), r12);\n    } while (eax != 0);\n    rax = strlen (r14);\n    if (rax == r12) {\n        goto label_6;\n    }\n    if (*(rsp) != -1) {\n        goto label_0;\n    }\n    *(rsp) = rbx;\n    rbx++;\n    rbp += r13;\n    r14 = *((r15 + rbx*8));\n    if (r14 != 0) {\n        goto label_1;\n    }\nlabel_5:\n    rax = 0xfffffffffffffffe;\n    if (*((rsp + 0x17)) == 0) {\n        rax = *(rsp);\n    }\n    *(rsp) = rax;\n    do {\nlabel_3:\n        rax = *(rsp);\n        return rax;\nlabel_4:\n        *((rsp + 0x17)) = 1;\n        goto label_2;\nlabel_6:\n        *(rsp) = rbx;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040ae10",
            "funcStartAddr": "0x40ae10",
            "funcEndAddr": "0x40ae81",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40ae10 */\n#include <stdint.h>\n \nuint64_t fcn_0040ae10 (int64_t arg1, int64_t arg2, uint32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    edx = 5;\n    r12 = rsi;\n    if (rdx == -1) {\n        goto label_0;\n    }\n    rax = dcgettext (0, \"ambiguous argument %s for %s\");\n    rbx = rax;\n    do {\n        rax = fcn_00412270 (1, rbp);\n        rdx = r12;\n        rax = fcn_00411f60 (0, 8);\n        r8 = rbp;\n        rdx = rbx;\n        esi = 0;\n        rcx = rax;\n        edi = 0;\n        eax = 0;\n        void (*0x402cd0)() ();\nlabel_0:\n        rax = dcgettext (0, \"invalid argument %s for %s\");\n        rbx = rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040ae90",
            "funcStartAddr": "0x40ae90",
            "funcEndAddr": "0x40afa8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40ae90 */\n#include <stdint.h>\n \nuint64_t fcn_0040ae90 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r15 = rdi;\n    r14d = 0;\n    r13 = rdx;\n    edx = 5;\n    rbx = stderr;\n    rax = dcgettext (0, \"Valid arguments are:\");\n    rdi = rax;\n    rsi = rbx;\n    ebx = 0;\n    fputs_unlocked ();\n    r12 = *(r15);\n    if (r12 != 0) {\n        goto label_1;\n    }\n    goto label_2;\n    do {\nlabel_0:\n        rbx++;\n        r14 = rbp;\n        rbp += r13;\n        rax = fcn_00412290 (r12);\n        edx = \"\\n  - %s\";\n        esi = 1;\n        rdi = stderr;\n        rcx = rax;\n        eax = 0;\n        fprintf_chk ();\n        r12 = *((r15 + rbx*8));\n        if (r12 == 0) {\n            goto label_2;\n        }\nlabel_1:\n    } while (rbx == 0);\n    eax = memcmp (r14, rbp, r13);\n    if (eax != 0) {\n        goto label_0;\n    }\n    rbx++;\n    rbp += r13;\n    rax = fcn_00412290 (r12);\n    edx = \", %s\";\n    esi = 1;\n    rdi = stderr;\n    rcx = rax;\n    eax = 0;\n    fprintf_chk ();\n    r12 = *((r15 + rbx*8));\n    if (r12 != 0) {\n        goto label_1;\n    }\nlabel_2:\n    rdi = stderr;\n    rax = *((rdi + 0x28));\n    if (rax < *((rdi + 0x30))) {\n        rdx = rax + 1;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = 0xa;\n        return rax;\n    }\n    esi = 0xa;\n    return overflow ();\n}\n"
        },
        {
            "funcName": "fcn_0040afb0",
            "funcStartAddr": "0x40afb0",
            "funcEndAddr": "0x40b020",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40afb0 */\n#include <stdint.h>\n \nuint64_t fcn_0040afb0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r15 = r8;\n    r14 = rdi;\n    r13 = r9;\n    r12 = rsi;\n    rbx = rdx;\n    rax = fcn_0040acf0 (r12, rbx, rbp, r8);\n    while (1) {\n        return rax;\n        fcn_0040ae10 (r14, r12, rax);\n        fcn_0040ae90 (rbx, rbp, r15);\n        void (*r13)() ();\n        rax = 0xffffffffffffffff;\n    }\n}\n"
        },
        {
            "funcName": "fcn_0040b070",
            "funcStartAddr": "0x40b070",
            "funcEndAddr": "0x40b6e3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40b070 */\n#include <stdint.h>\n \nuint64_t fcn_0040b070 (int64_t arg1, int64_t arg2) {\n    uint32_t var_8h;\n    uint32_t var_14h;\n    uint32_t var_18h;\n    uint32_t var_20h;\n    void * ptr;\n    uint32_t var_30h;\n    int64_t var_38h;\n    int64_t var_3ch;\n    int64_t var_40h;\n    int64_t var_58h;\n    int64_t var_70h;\n    rdi = arg1;\n    rsi = arg2;\n    ecx = esi;\n    ecx &= 3;\n    eax = rcx - 1;\n    *((rsp + 0x14)) = ecx;\n    if ((ecx & eax) != 0) {\n        goto label_18;\n    }\n    r15 = rdi;\n    if (rdi == 0) {\n        goto label_18;\n    }\n    eax = *(rdi);\n    if (al == 0) {\n        goto label_19;\n    }\n    r14d = esi;\n    if (al == 0x2f) {\n        goto label_20;\n    }\n    rax = fcn_00412d10 ();\n    r12 = rax;\n    if (rax == 0) {\n        goto label_7;\n    }\n    rax = strlen (rax);\n    rbx = rax;\n    if (rax <= 0xfff) {\n        goto label_21;\n    }\n    rbx += r12;\nlabel_1:\n    r14d &= 4;\n    *((rsp + 0x20)) = r15;\n    eax = *(r15);\n    *((rsp + 0x38)) = r14d;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x30)) = 0;\n    *((rsp + 0x28)) = 0;\nlabel_0:\n    if (al == 0) {\n        goto label_22;\n    }\n    edx = eax;\n    if (al != 0x2f) {\n        goto label_23;\n    }\n    do {\n        r15++;\n        edx = *(r15);\n    } while (dl == 0x2f);\n    if (dl == 0) {\n        goto label_22;\n    }\nlabel_23:\n    r13 = r15;\n    while (al != 0x2f) {\n        r13 = r14;\n        eax = *((r13 + 1));\n        r14 = r13 + 1;\n        if (al == 0) {\n            goto label_24;\n        }\n    }\nlabel_24:\n    if (r14 == r15) {\n        goto label_22;\n    }\n    r8 = r14;\n    r8 -= r15;\n    if (r8 == 1) {\n        goto label_25;\n    }\n    if (dl == 0x2e) {\n        if (r8 == 2) {\n            goto label_26;\n        }\n    }\nlabel_4:\n    if (*((rbx - 1)) != 0x2f) {\n        *(rbx) = 0x2f;\n        rbx++;\n    }\n    rax = rbx + r8;\n    if (rbp <= rax) {\n        rbp -= r12;\n        rbx -= r12;\n        rdi = r12;\n        *((rsp + 8)) = r8;\n        rax = r8 + rbp + 1;\n        rbp += 0x1000;\n        if (r8 >= 0x1000) {\n        }\n        rax = fcn_004129e0 (rdi, rbp);\n        r8 = *((rsp + 8));\n        r12 = rax;\n        rbp += rax;\n        rbx += rax;\n    }\n    rdx = r8;\n    *((rsp + 8)) = r8;\n    memcpy (rbx, r15, rdx);\n    r8 = *((rsp + 8));\n    rbx = rbx + r8;\n    *(rbx) = 0;\n    if (*((rsp + 0x14)) != 2) {\n        goto label_27;\n    }\n    edx = *((rsp + 0x38));\n    while (eax != 1) {\n        *((rsp + 0x58)) = 0;\nlabel_3:\n        if (*(r14) != 0) {\n            if (*((rsp + 0x14)) != 2) {\n                goto label_28;\n            }\n        }\nlabel_2:\n        eax = *(r14);\n        r15 = r14;\n        goto label_0;\nlabel_20:\n        rax = fcn_00412980 (0x1000);\n        r12 = rax;\n        rbp = rax + 0x1000;\n        rbx = rax + 1;\n        *(rax) = 0x2f;\n        goto label_1;\nlabel_27:\n        eax = *((rsp + 0x38));\n        rdx = rsp + 0x40;\n        rsi = r12;\n        edi = 1;\n        if (eax == 0) {\n            goto label_29;\n        }\n        eax = xstat ();\n        al = (eax != 0) ? 1 : 0;\nlabel_5:\n        if (al == 0) {\n            goto label_30;\n        }\n        rax = errno_location ();\n        rdx = rax;\n        ecx = *(rax);\n        eax = *((rsp + 0x14));\n        if (eax == 0) {\n            goto label_31;\n        }\n    }\n    *((rsp + 0x3c)) = ecx;\n    *((rsp + 8)) = rdx;\n    strspn (r14, 0x41b371);\n    rdx = *((rsp + 8));\n    ecx = *((rsp + 0x3c));\n    if (*((r14 + rax)) != 0) {\n        goto label_31;\n    }\n    if (ecx != 2) {\n        goto label_31;\n    }\nlabel_6:\n    eax = *((r13 + 1));\n    r15 = r14;\n    goto label_0;\nlabel_30:\n    eax = *((rsp + 0x58));\n    eax &= 0xf000;\n    if (eax == 0xa000) {\n        goto label_32;\n    }\n    if (eax == 0x4000) {\n        goto label_2;\n    }\n    goto label_3;\nlabel_25:\n    if (dl != 0x2e) {\n        goto label_4;\n    }\nlabel_14:\n    r15 = r14;\n    goto label_0;\nlabel_22:\n    rax = r12 + 1;\n    if (rbx > rax) {\n        if (*((rbx - 1)) == 0x2f) {\n            goto label_33;\n        }\n    }\n    rax = rbx + 1;\nlabel_16:\n    *(rbx) = 0;\n    if (rbp != rax) {\n        rbx -= r12;\n        rax = fcn_004129e0 (r12, rbx + 1);\n        r12 = rax;\n    }\n    free (*((rsp + 0x28)));\n    rax = *((rsp + 0x18));\n    if (rax != 0) {\n        fcn_0040ccc0 (rax);\n    }\nlabel_7:\n    rax = r12;\n    return rax;\nlabel_29:\n    eax = lxstat ();\n    al = (eax != 0) ? 1 : 0;\n    goto label_5;\nlabel_32:\n    if (*((rsp + 0x18)) == 0) {\n        goto label_34;\n    }\nlabel_8:\n    al = fcn_0040b9a0 (*((rsp + 0x18)), *((rsp + 0x20)), rsp + 0x40);\n    if (al == 0) {\n        fcn_0040b910 (*((rsp + 0x18)), *((rsp + 0x20)), rsp + 0x40);\n        rax = fcn_0040abf0 (r12, *((rsp + 0x70)));\n        r15 = rax;\n        if (rax == 0) {\n            goto label_35;\n        }\n        rax = strlen (rax);\n        r13 = rax;\n        rax = strlen (r14);\n        rdx = rax;\n        r8 = r13 + rax + 1;\n        if (*((rsp + 0x30)) == 0) {\n            goto label_36;\n        }\n        if (r8 > *((rsp + 0x30))) {\n            goto label_37;\n        }\nlabel_11:\n        rax = *((rsp + 0x28));\n        rdx++;\n        memmove (rax + r13, r14, rdx);\n        rax = memcpy (*((rsp + 0x28)), r15, r13);\n        rdx = r12 + 1;\n        r14 = rax;\n        *((rsp + 0x20)) = rax;\n        if (*(r15) == 0x2f) {\n            goto label_38;\n        }\n        if (rbx > rdx) {\n            goto label_39;\n        }\nlabel_13:\n        free (r15);\n        goto label_2;\n    }\n    if (*((rsp + 0x14)) == 2) {\n        goto label_6;\n    }\n    rax = errno_location ();\n    ecx = 0x28;\n    rdx = rax;\nlabel_12:\n    *((rsp + 0x14)) = ecx;\n    *((rsp + 8)) = rdx;\n    free (*((rsp + 0x28)));\n    free (r12);\n    rdx = *((rsp + 8));\n    ecx = *((rsp + 0x14));\nlabel_10:\n    *((rsp + 0x14)) = ecx;\n    *((rsp + 8)) = rdx;\n    fcn_0040ccc0 (*((rsp + 0x18)));\n    ecx = *((rsp + 0x14));\n    rdx = *((rsp + 8));\nlabel_9:\n    *(rdx) = ecx;\n    r12d = 0;\n    goto label_7;\nlabel_26:\n    if (*((r15 + 1)) != 0x2e) {\n        goto label_4;\n    }\n    rdx = r12 + 1;\n    r15 = r14;\n    if (rbx <= rdx) {\n        goto label_0;\n    }\n    rdx = rbx - 1;\n    if (r12 < rdx) {\n        if (*((rbx - 2)) != 0x2f) {\n            goto label_40;\n        }\n    }\n    rbx = rdx;\n    goto label_0;\nlabel_18:\n    errno_location ();\n    r12d = 0;\n    *(rax) = 0x16;\n    goto label_7;\nlabel_34:\n    rax = fcn_0040ca80 (7, 0, 0x40d440, 0x40d4b0, 0x40d4f0);\n    *((rsp + 0x18)) = rax;\n    if (rax != 0) {\n        goto label_8;\n    }\n    fcn_00412bd0 ();\nlabel_28:\n    rax = errno_location ();\n    ecx = 0x14;\n    rdx = rax;\nlabel_31:\n    *((rsp + 0x14)) = ecx;\n    *((rsp + 8)) = rdx;\n    free (*((rsp + 0x28)));\n    rax = free (r12);\n    rdx = *((rsp + 8));\n    ecx = *((rsp + 0x14));\n    if (*((rsp + 0x18)) == 0) {\n        goto label_9;\n    }\n    goto label_10;\nlabel_36:\n    *((rsp + 8)) = rax;\n    eax = 0x1000;\n    if (r8 >= 0x1000) {\n        rax = r8;\n    }\n    rdi = rax;\n    *((rsp + 0x30)) = rax;\n    rax = fcn_00412980 (rdi);\n    rdx = *((rsp + 8));\n    *((rsp + 0x28)) = rax;\n    goto label_11;\nlabel_19:\n    errno_location ();\n    r12d = 0;\n    *(rax) = 2;\n    goto label_7;\nlabel_21:\n    rax = fcn_004129e0 (r12, 0x1000);\n    r12 = rax;\n    rbx += rax;\n    rbp = rax + 0x1000;\n    goto label_1;\nlabel_35:\n    rax = errno_location ();\n    rdx = rax;\n    ecx = *(rax);\n    if (*((rsp + 0x14)) != 2) {\n        goto label_12;\n    }\n    if (ecx != 0xc) {\n        goto label_6;\n    }\n    goto label_12;\nlabel_38:\n    *(r12) = 0x2f;\n    rbx = rdx;\n    goto label_13;\nlabel_40:\n    rbx = rdx - 1;\n    if (r12 == rbx) {\n        goto label_14;\n    }\nlabel_15:\n    if (*((rbx - 1)) == 0x2f) {\n        goto label_14;\n    }\n    rdx = rbx;\n    rbx = rdx - 1;\n    if (r12 != rbx) {\n        goto label_15;\n    }\n    goto label_14;\nlabel_37:\n    rsi = r8;\n    *((rsp + 8)) = r8;\n    *((rsp + 0x20)) = rax;\n    rax = fcn_004129e0 (*((rsp + 0x28)), rsi);\n    r8 = *((rsp + 8));\n    rdx = *((rsp + 0x20));\n    *((rsp + 0x28)) = rax;\n    *((rsp + 0x30)) = r8;\n    goto label_11;\nlabel_33:\n    rax = rbx;\n    rbx--;\n    goto label_16;\nlabel_39:\n    rdx = rbx - 1;\n    if (r12 >= rdx) {\n        goto label_41;\n    }\n    rbx = rdx;\n    if (*((rbx - 2)) == 0x2f) {\n        goto label_13;\n    }\nlabel_17:\n    rbx--;\n    if (r12 == rbx) {\n        goto label_13;\n    }\n    if (*((rbx - 1)) == 0x2f) {\n        goto label_13;\n    }\n    goto label_17;\nlabel_41:\n    rbx = rdx;\n    goto label_13;\n}\n"
        },
        {
            "funcName": "fcn_0040b7b0",
            "funcStartAddr": "0x40b7b0",
            "funcEndAddr": "0x40b80d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40b7b0 */\n#include <stdint.h>\n \nuint64_t fcn_0040b7b0 (uint32_t arg1) {\n    rdi = arg1;\n    ebp = 0;\n    rbx = rdi;\n    bpl = (*(rdi) == 0x2f) ? 1 : 0;\n    rax = fcn_0040b870 (rdi);\n    rcx = rax;\n    rcx -= rbx;\n    if (rcx <= rbp) {\n        goto label_0;\n    }\n    rdx = rcx - 1;\n    if (*((rax - 1)) == 0x2f) {\n        goto label_1;\n    }\n    goto label_0;\n    do {\n        rax = rdx - 1;\n        if (*((rbx + rdx - 1)) != 0x2f) {\n            goto label_2;\n        }\n        rdx = rax;\nlabel_1:\n    } while (rbp != rdx);\nlabel_2:\n    rax = rdx;\n    return rax;\nlabel_0:\n    rdx = rcx;\n    rax = rcx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040b810",
            "funcStartAddr": "0x40b810",
            "funcEndAddr": "0x40b86a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40b810 */\n#include <stdint.h>\n \nuint64_t fcn_0040b810 (int64_t arg1) {\n    rdi = arg1;\n    rax = fcn_0040b7b0 (rdi);\n    rbx = rax;\n    al = (rax == 0) ? 1 : 0;\n    eax = (int32_t) al;\n    rax = malloc (rbx + rax + 1);\n    rcx = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    rax = memcpy (rax, rbp, rbx);\n    rcx = rax;\n    while (1) {\n        *((rcx + rbx)) = 0;\nlabel_0:\n        rax = rcx;\n        return rax;\n        *(rax) = 0x2e;\n        ebx = 1;\n    }\n}\n"
        },
        {
            "funcName": "fcn_0040b870",
            "funcStartAddr": "0x40b870",
            "funcEndAddr": "0x40b8cb",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40b870 */\n#include <stdint.h>\n \nint64_t fcn_0040b870 (int64_t arg1) {\n    rdi = arg1;\n    edx = *(rdi);\n    rax = rdi;\n    if (dl != 0x2f) {\n        goto label_1;\n    }\n    do {\n        rax++;\n        edx = *(rax);\n    } while (dl == 0x2f);\nlabel_1:\n    if (dl == 0) {\n        goto label_2;\n    }\n    rcx = rax;\n    esi = 0;\n    while (dl != 0x2f) {\n        if (sil != 0) {\n            rax = rcx;\n            esi = 0;\n        }\n        rcx++;\n        edx = *(rcx);\n        if (dl == 0) {\n            goto label_2;\n        }\nlabel_0:\n    }\n    rcx++;\n    edx = *(rcx);\n    esi = 1;\n    if (dl != 0) {\n        goto label_0;\n    }\nlabel_2:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040b8d0",
            "funcStartAddr": "0x40b8d0",
            "funcEndAddr": "0x40b8fb",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40b8d0 */\n#include <stdint.h>\n \nuint64_t fcn_0040b8d0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = strlen (rdi);\n    while (rdx != 1) {\n        rdx = rax - 1;\n        if (*((rbx + rax - 1)) != 0x2f) {\n            return rax;\n        }\n        rax = rdx;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040b900",
            "funcStartAddr": "0x40b900",
            "funcEndAddr": "0x40b903",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40b900 */\n#include <stdint.h>\n \nint32_t fcn_0040b900 (void) {\n    eax = 0;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_0040b910",
            "funcStartAddr": "0x40b910",
            "funcEndAddr": "0x40d505",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40b910 */\n#include <stdint.h>\n \nuint64_t fcn_0040b910 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rdi != 0) {\n        r13 = rdi;\n        r12 = rsi;\n        rax = fcn_00412980 (0x18);\n        rbx = rax;\n        rax = fcn_00412bb0 (r12);\n        rsi = rbx;\n        *(rbx) = rax;\n        rax = *((rbp + 8));\n        *((rbx + 8)) = rax;\n        rax = *(rbp);\n        *((rbx + 0x10)) = rax;\n        rax = fcn_0040d220 (r13);\n        if (rax == 0) {\n            goto label_0;\n        }\n        if (rbx != rax) {\n            rdi = rbx;\n            goto label_1;\n        }\n        return rax;\n    }\n    return rax;\nlabel_0:\n    fcn_00412bd0 ();\nlabel_1:\n    rbx = rdi;\n    free (*(rdi));\n    rdi = rbx;\n    return free ();\n}\n"
        },
        {
            "funcName": "fcn_0040b9a0",
            "funcStartAddr": "0x40b9a0",
            "funcEndAddr": "0x40b9db",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40b9a0 */\n#include <stdint.h>\n \nint64_t fcn_0040b9a0 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    int64_t var_10h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rdi != 0) {\n        rax = *((rdx + 8));\n        *(rsp) = rsi;\n        *((rsp + 8)) = rax;\n        rax = *(rdx);\n        *((rsp + 0x10)) = rax;\n        rax = fcn_0040c810 (rdi, rsp);\n        al = (rax != 0) ? 1 : 0;\n        return rax;\n    }\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040bb60",
            "funcStartAddr": "0x40bb60",
            "funcEndAddr": "0x40bce8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40bb60 */\n#include <stdint.h>\n \nint32_t fcn_0040bb60 (uint32_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\nlabel_1:\n    edx = edi;\n    eax = 0x2d;\n    edx &= 0xf000;\n    if (edx != 0x8000) {\n        eax = 0x64;\n        if (edx == 0x4000) {\n            goto label_2;\n        }\n        eax = 0x62;\n        if (edx == 0x6000) {\n            goto label_2;\n        }\n        eax = 0x63;\n        if (edx == 0x2000) {\n            goto label_2;\n        }\n        eax = 0x6c;\n        if (edx == 0xa000) {\n            goto label_2;\n        }\n        eax = 0x70;\n        if (edx == 0x1000) {\n            goto label_2;\n        }\n        eax = 0x73;\n        edx = 0x3f;\n        if (edx == 0xc000) {\n            eax = edx;\n            goto label_2;\n        }\n    }\nlabel_2:\n    *(rsi) = al;\n    eax = edi;\n    eax &= 0x100;\n    eax -= eax;\n    eax &= 0xffffffbb;\n    eax += 0x72;\n    *((rsi + 1)) = al;\n    eax = edi;\n    eax &= 0x80;\n    eax -= eax;\n    eax &= 0xffffffb6;\n    eax += 0x77;\n    *((rsi + 2)) = al;\n    eax = edi;\n    eax &= 0x40;\n    eax -= eax;\n    if ((edi & 0x800) == 0) {\n        goto label_3;\n    }\n    eax &= 0xffffffe0;\n    eax += 0x73;\n    do {\n        *((rsi + 3)) = al;\n        eax = edi;\n        eax &= 0x20;\n        eax -= eax;\n        eax &= 0xffffffbb;\n        eax += 0x72;\n        *((rsi + 4)) = al;\n        eax = edi;\n        eax &= 0x10;\n        eax -= eax;\n        eax &= 0xffffffb6;\n        eax += 0x77;\n        *((rsi + 5)) = al;\n        eax = edi;\n        eax &= 8;\n        eax -= eax;\n        if ((edi & 0x400) == 0) {\n            goto label_4;\n        }\n        eax &= 0xffffffe0;\n        eax += 0x73;\nlabel_0:\n        *((rsi + 6)) = al;\n        eax = edi;\n        eax &= 4;\n        eax -= eax;\n        eax &= 0xffffffbb;\n        eax += 0x72;\n        *((rsi + 7)) = al;\n        eax = edi;\n        eax &= 2;\n        eax -= eax;\n        eax &= 0xffffffb6;\n        eax += 0x77;\n        *((rsi + 8)) = al;\n        eax = edi;\n        eax &= 1;\n        eax -= eax;\n        edi &= 0x200;\n        if (edi == 0) {\n            goto label_5;\n        }\n        eax &= 0xffffffe0;\n        eax += 0x74;\n        *((rsi + 9)) = al;\n        eax = 0x20;\n        *((rsi + 0xa)) = ax;\n        return eax;\nlabel_3:\n        eax &= 0xffffffb5;\n        eax += 0x78;\n    } while (1);\nlabel_4:\n    eax &= 0xffffffb5;\n    eax += 0x78;\n    goto label_0;\nlabel_5:\n    eax &= 0xffffffb5;\n    eax += 0x78;\n    *((rsi + 9)) = al;\n    eax = 0x20;\n    *((rsi + 0xa)) = ax;\n    return eax;\n    edi = *((rdi + 0x18));\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040bb70",
            "funcStartAddr": "0x40bb70",
            "funcEndAddr": "0x40bb88",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40bb70 */\n#include <stdint.h>\n \nuint64_t fcn_0040bb70 (void) {\n    uint32_t var_fh;\n    rax = void (*0x40bb90)() ();\n    if (rax != 0) {\n        return rax;\n    }\n    return fcn_00412bd0 ();\n}\n"
        },
        {
            "funcName": "fcn_0040bc70",
            "funcStartAddr": "0x40bc70",
            "funcEndAddr": "0x40bd33",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40bc70 */\n#include <stdint.h>\n \nint64_t fcn_0040bc70 (int64_t arg1) {\n    rdi = arg1;\n    rsi = *(rdi);\n    edx = *(rsi);\n    if (dl == 0) {\n        goto label_3;\n    }\n    ecx = 0;\n    eax = 0;\n    r9d = 0;\n    r11d = 1;\n    r10 = 0x3ffffff03ffffff;\n    while (cl != 0) {\n        ecx = (int32_t) dl;\n        ecx -= 0x41;\n        if (ecx <= 0x39) {\n            r8 = r11;\n            r8 <<= cl;\n            ecx = 0;\n            if ((r8 & r10) != 0) {\n                goto label_0;\n            }\n        }\n        ecx = 0;\n        if (dl != 0x7e) {\n            rax = r9;\n        }\nlabel_0:\n        rsi++;\n        *(rdi) = rsi;\n        edx = *(rsi);\n        if (dl == 0) {\n            goto label_4;\n        }\nlabel_1:\n    }\n    if (dl == 0x2e) {\n        goto label_5;\n    }\n    if (dl > 0x5a) {\n        goto label_6;\n    }\n    if (dl >= 0x41) {\n        goto label_0;\n    }\n    r8d = rdx - 0x30;\n    if (r8b <= 9) {\n        goto label_0;\n    }\nlabel_2:\n    if (dl != 0x7e) {\n        rax = r9;\n    }\n    rsi++;\n    *(rdi) = rsi;\n    edx = *(rsi);\n    if (dl != 0) {\n        goto label_1;\n    }\nlabel_4:\n    return rax;\nlabel_6:\n    r8d = rdx - 0x61;\n    if (r8b > 0x19) {\n        goto label_2;\n    }\n    goto label_0;\nlabel_5:\n    ecx = 1;\n    if (rax == 0) {\n        rax = rsi;\n    }\n    goto label_0;\nlabel_3:\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040c150",
            "funcStartAddr": "0x40c150",
            "funcEndAddr": "0x40c18a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40c150 */\n#include <stdint.h>\n \nuint64_t fcn_0040c150 (int64_t arg1) {\n    signed int64_t var_8h;\n    rdi = arg1;\n    rsi = rdi;\n    rbx = rdi;\n    edi = 0;\n    eax = clock_gettime ();\n    if (eax != 0) {\n        esi = 0;\n        rdi = rsp;\n        gettimeofday ();\n        rax = *(rsp);\n        *(rbx) = rax;\n        rax = *((rsp + 8)) * 0x3e8;\n        *((rbx + 8)) = rax;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040c190",
            "funcStartAddr": "0x40c190",
            "funcEndAddr": "0x40c1ee",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40c190 */\n#include <stdint.h>\n \nuint64_t fcn_0040c190 (int32_t category) {\n    rdi = category;\n    rax = setlocale (rdi, 0);\n    rdx = rax;\n    eax = 1;\n    if (rdx != 0) {\n        ecx = 2;\n        edi = 0x41d796;\n        rsi = rdx;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (rdx > 0) ? 1 : 0;\n        eax = 0;\n        if (cl != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    edi = \"POSIX\";\n    ecx = 6;\n    rsi = rdx;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (cl > 0) ? 1 : 0;\n    al = (al != 0) ? 1 : 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040c1f0",
            "funcStartAddr": "0x40c1f0",
            "funcEndAddr": "0x40c283",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40c1f0 */\n#include <stdint.h>\n \nint64_t fcn_0040c1f0 (uint32_t arg1, int64_t arg3) {\n    rdi = arg1;\n    rdx = arg3;\n    esi = 0xa;\n    r9 = 0xaaaaaaaaaaaaaaab;\n    if (rdi >= 0xa) {\n        rsi = rdi;\n    }\n    rsi |= 1;\n    if (rsi == -1) {\n        goto label_1;\n    }\nlabel_0:\n    rax = rsi;\n    rcx = rsi;\n    rdx:rax = rax * r9;\n    rax = rdx;\n    rax >>= 1;\n    rax *= 3;\n    rcx -= rax;\n    rax = rcx;\n    if (rsi <= 9) {\n        goto label_2;\n    }\n    if (rcx == 0) {\n        goto label_3;\n    }\n    r8d = 0x10;\n    edi = 9;\n    ecx = 3;\n    while (rdi < rsi) {\n        r8 += 8;\n        if (rdx == 0) {\n            goto label_3;\n        }\n        rcx += 2;\n        rax = rsi;\n        edx = 0;\n        rdi += r8;\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rax = rdx;\n    }\nlabel_2:\n    if (rax != 0) {\n        goto label_1;\n    }\nlabel_3:\n    rsi += 2;\n    if (rsi != -1) {\n        goto label_0;\n    }\nlabel_1:\n    rax = rsi;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040c2b0",
            "funcStartAddr": "0x40c2b0",
            "funcEndAddr": "0x415731",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40c2b0 */\n#include <stdint.h>\n \nuint64_t fcn_0040c2b0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    do {\n        /* [13] -r-x section size 88424 named .text */\n        abort ();\n        rbx = rdi;\n        rdi = rsi;\n        rsi = *((rbx + 0x10));\n        rax = uint64_t (*rbx + 0x30)(uint64_t) (rbx);\n    } while (*((rbx + 0x10)) <= rax);\n    rax <<= 4;\n    rax += *(rbx);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040c2e0",
            "funcStartAddr": "0x40c2e0",
            "funcEndAddr": "0x40c3f9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40c2e0 */\n#include <stdint.h>\n \nuint64_t fcn_0040c2e0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r14 = rdx;\n    r13d = ecx;\n    r12 = rdi;\n    rax = fcn_0040c2b0 (rdi, rsi);\n    *(r14) = rax;\n    rsi = *(rax);\n    if (rsi == 0) {\n        goto label_1;\n    }\n    rbx = rax;\n    if (rsi == rbp) {\n        goto label_2;\n    }\n    rdi = rbp;\n    al = uint64_t (*r12 + 0x38)() ();\n    if (al != 0) {\n        goto label_3;\n    }\n    rax = *((rbx + 8));\n    if (rax == 0) {\n        goto label_1;\n    }\n    rsi = *(rax);\n    if (rbp != rsi) {\n        goto label_4;\n    }\n    goto label_5;\n    do {\n        rbx = *((rbx + 8));\n        rax = *((rbx + 8));\n        if (rax == 0) {\n            goto label_1;\n        }\n        rsi = *(rax);\n        if (rsi == rbp) {\n            goto label_5;\n        }\nlabel_4:\n        rdi = rbp;\n        al = uint64_t (*r12 + 0x38)() ();\n    } while (al == 0);\n    rax = *((rbx + 8));\n    rsi = *(rax);\nlabel_5:\n    if (r13b == 0) {\n        goto label_0;\n    }\n    rdx = *((rax + 8));\n    *((rbx + 8)) = rdx;\n    *(rax) = 0;\n    rdx = *((r12 + 0x48));\n    *((rax + 8)) = rdx;\n    *((r12 + 0x48)) = rax;\n    do {\nlabel_0:\n        rax = rsi;\n        return rax;\nlabel_3:\n        rsi = *(rbx);\nlabel_2:\n    } while (r13b == 0);\n    rax = *((rbx + 8));\n    if (rax != 0) {\n        __asm (\"movdqu xmm0, xmmword [rax]\");\n        __asm (\"movups xmmword [rbx], xmm0\");\n        *(rax) = 0;\n        rdx = *((r12 + 0x48));\n        *((rax + 8)) = rdx;\n        *((r12 + 0x48)) = rax;\n        rax = rsi;\n        return rax;\nlabel_1:\n        esi = 0;\n        rax = rsi;\n        return rax;\n    }\n    *(rbx) = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040c400",
            "funcStartAddr": "0x40c400",
            "funcEndAddr": "0x40c47e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40c400 */\n#include <stdint.h>\n \nint64_t fcn_0040c400 (int64_t arg1) {\n    rdi = arg1;\n    rax = *(rdi);\n    if (rax != 0x41d810) {\n        xmm0 = *((rax + 8));\n        __asm (\"comiss xmm0, dword [0x0041d824]\");\n        if (rax > 0x41d810) {\n            xmm1 = *(0x0041d828);\n            __asm (\"comiss xmm1, xmm0\");\n            if (rax <= 0x41d810) {\n                goto label_0;\n            }\n            xmm1 = *((rax + 0xc));\n            __asm (\"comiss xmm1, dword [0x0041d82c]\");\n            if (rax <= 0x41d810) {\n                goto label_0;\n            }\n            xmm1 = *(rax);\n            __asm (\"comiss xmm1, dword [0x0041d830]\");\n            if (rax < 0x41d810) {\n                goto label_0;\n            }\n            __asm (\"addss xmm1, dword [0x0041d824]\");\n            xmm2 = *((rax + 4));\n            __asm (\"comiss xmm2, xmm1\");\n            if (rax <= 0x41d810) {\n                goto label_0;\n            }\n            xmm3 = *(0x0041d834);\n            __asm (\"comiss xmm3, xmm2\");\n            if (rax < 0x41d810) {\n                goto label_0;\n            }\n            __asm (\"comiss xmm0, xmm1\");\n            eax = 1;\n            if (rax > 0x41d810) {\n                goto label_1;\n            }\n        }\nlabel_0:\n        *(rdi) = 0x41d810;\n        eax = 0;\n        return rax;\n    }\n    eax = 1;\nlabel_1:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040c480",
            "funcStartAddr": "0x40c480",
            "funcEndAddr": "0x40c5ca",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40c480 */\n#include <stdint.h>\n \nuint64_t fcn_0040c480 (int64_t arg1, uint32_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r14d = edx;\n    r13 = rsi;\n    r12 = *(rsi);\n    if (r12 < *((rsi + 8))) {\n        goto label_2;\n    }\n    goto label_5;\n    do {\nlabel_1:\n        r12 += 0x10;\n        if (*((r13 + 8)) <= r12) {\n            goto label_5;\n        }\nlabel_2:\n        r15 = *(r12);\n    } while (r15 == 0);\n    rbx = *((r12 + 8));\n    if (rbx != 0) {\n        goto label_0;\n    }\n    goto label_6;\n    do {\n        rcx = *((rax + 8));\n        *((rbx + 8)) = rcx;\n        *((rax + 8)) = rbx;\n        rbx = rdx;\n        if (rdx == 0) {\n            goto label_7;\n        }\nlabel_0:\n        r15 = *(rbx);\n        rax = fcn_0040c2b0 (rbp, r15);\n        rdx = *((rbx + 8));\n    } while (*(rax) != 0);\n    *(rax) = r15;\n    *((rbp + 0x18))++;\n    *(rbx) = 0;\n    rax = *((rbp + 0x48));\n    *((rbx + 8)) = rax;\n    *((rbp + 0x48)) = rbx;\n    rbx = rdx;\n    if (rdx != 0) {\n        goto label_0;\n    }\nlabel_7:\n    r15 = *(r12);\nlabel_6:\n    *((r12 + 8)) = 0;\n    if (r14b != 0) {\n        goto label_1;\n    }\n    rax = fcn_0040c2b0 (rbp, r15);\n    rbx = rax;\n    if (*(rax) == 0) {\n        goto label_8;\n    }\n    rax = *((rbp + 0x48));\n    if (rax == 0) {\n        goto label_9;\n    }\n    rdx = *((rax + 8));\n    *((rbp + 0x48)) = rdx;\nlabel_4:\n    rdx = *((rbx + 8));\n    *(rax) = r15;\n    *((rax + 8)) = rdx;\n    *((rbx + 8)) = rax;\nlabel_3:\n    *(r12) = 0;\n    r12 += 0x10;\n    *((r13 + 0x18))--;\n    if (*((r13 + 8)) > r12) {\n        goto label_2;\n    }\nlabel_5:\n    eax = 1;\n    return rax;\nlabel_8:\n    *(rax) = r15;\n    *((rbp + 0x18))++;\n    goto label_3;\nlabel_9:\n    rax = malloc (0x10);\n    if (rax != 0) {\n        goto label_4;\n    }\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040c5f0",
            "funcStartAddr": "0x40c5f0",
            "funcEndAddr": "0x40c5f5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40c5f0 */\n#include <stdint.h>\n \nint64_t fcn_0040c5f0 (int64_t arg1) {\n    rdi = arg1;\n    rax = *((rdi + 0x20));\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040c810",
            "funcStartAddr": "0x40c810",
            "funcEndAddr": "0x40c863",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40c810 */\n#include <stdint.h>\n \nuint64_t fcn_0040c810 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r12 = rdi;\n    rax = fcn_0040c2b0 (rdi, rsi);\n    rsi = *(rax);\n    if (rsi == 0) {\n        goto label_0;\n    }\n    rbx = rax;\n    while (rbx != 0) {\n        rsi = *(rbx);\n        if (rsi == rbp) {\n            goto label_1;\n        }\n        rdi = rbp;\n        al = uint64_t (*r12 + 0x38)() ();\n        if (al != 0) {\n            goto label_2;\n        }\n        rbx = *((rbx + 8));\n    }\nlabel_0:\n    eax = 0;\n    return rax;\nlabel_2:\n    rbp = *(rbx);\nlabel_1:\n    rax = *(rbx);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040ca80",
            "funcStartAddr": "0x40ca80",
            "funcEndAddr": "0x40cc0a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40ca80 */\n#include <stdint.h>\n \nuint64_t fcn_0040ca80 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    eax = 0x40c290;\n    r15 = rsi;\n    r14 = r8;\n    r13 = rcx;\n    r12 = rdx;\n    edi = 0x50;\n    if (rdx == 0) {\n        r12 = rax;\n    }\n    eax = 0x40c2a0;\n    if (rcx == 0) {\n        r13 = rax;\n    }\n    rax = malloc (rdi);\n    rbx = rax;\n    if (rax == 0) {\n        goto label_4;\n    }\n    rdi = rax + 0x28;\n    if (r15 == 0) {\n        goto label_5;\n    }\n    *((rax + 0x28)) = r15;\n    al = fcn_0040c400 (rdi);\n    if (al == 0) {\n        goto label_0;\n    }\n    if (*((r15 + 0x10)) == 0) {\n        goto label_6;\n    }\nlabel_1:\n    rax = fcn_0040c1f0 (rbp, rsi);\n    rax >>= 0x3d;\n    al = (rax != 0) ? 1 : 0;\n    eax = (int32_t) al;\n    if (((rbp >> 0x3c) & 1) < 0) {\n        goto label_0;\n    }\n    if (rax != 0) {\n        goto label_0;\n    }\n    *((rbx + 0x10)) = rbp;\n    if (rbp == 0) {\n        goto label_0;\n    }\n    rax = calloc (rbp, 0x10);\n    *(rbx) = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    rbp <<= 4;\n    *((rbx + 0x18)) = 0;\n    rbp += rax;\n    *((rbx + 0x20)) = 0;\n    *((rbx + 8)) = rbp;\n    *((rbx + 0x30)) = r12;\n    *((rbx + 0x38)) = r13;\n    *((rbx + 0x40)) = r14;\n    *((rbx + 0x48)) = 0;\n    while (al == 0) {\nlabel_0:\n        ebx = 0;\n        free (rbx);\nlabel_4:\n        rax = rbx;\n        return rax;\nlabel_5:\n        *((rax + 0x28)) = 0x41d810;\n        al = fcn_0040c400 (rdi);\n        xmm1 = *(0x0041d838);\n    }\n    if (rbp < 0) {\n        goto label_7;\n    }\nlabel_2:\n    xmm0 = 0;\n    __asm (\"cvtsi2ss xmm0, rbp\");\nlabel_3:\n    __asm (\"divss xmm0, xmm1\");\n    __asm (\"comiss xmm0, dword [0x0041d83c]\");\n    if (rbp >= 0) {\n        goto label_0;\n    }\n    __asm (\"comiss xmm0, dword [0x0041d840]\");\n    if (rbp < 0) {\n        goto label_8;\n    }\n    __asm (\"subss xmm0, dword [0x0041d840]\");\n    __asm (\"cvttss2si rbp, xmm0\");\n    __asm (\"btc rbp, 0x3f\");\n    goto label_1;\nlabel_6:\n    xmm1 = *((r15 + 8));\n    if (rbp >= 0) {\n        goto label_2;\n    }\nlabel_7:\n    rax = rbp;\n    ebp &= 1;\n    xmm0 = 0;\n    rax >>= 1;\n    rax |= rbp;\n    __asm (\"cvtsi2ss xmm0, rax\");\n    __asm (\"addss xmm0, xmm0\");\n    goto label_3;\nlabel_8:\n    __asm (\"cvttss2si rbp, xmm0\");\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040ccc0",
            "funcStartAddr": "0x40ccc0",
            "funcEndAddr": "0x40cd96",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40ccc0 */\n#include <stdint.h>\n \nint64_t fcn_0040ccc0 (uint32_t arg1) {\n    rdi = arg1;\n    r12 = rdi;\n    rbp = *(rdi);\n    rax = *((rdi + 8));\n    if (*((rdi + 0x40)) == 0) {\n        goto label_2;\n    }\n    if (*((rdi + 0x20)) == 0) {\n        goto label_2;\n    }\n    if (rbp < rax) {\n        goto label_0;\n    }\n    goto label_3;\n    do {\n        rbp += 0x10;\n        if (rax <= rbp) {\n            goto label_4;\n        }\nlabel_0:\n        rdi = *(rbp);\n    } while (rdi == 0);\n    rbx = rbp;\n    while (rbx != 0) {\n        rdi = *(rbx);\n        uint64_t (*r12 + 0x40)() ();\n        rbx = *((rbx + 8));\n    }\n    rax = *((r12 + 8));\n    rbp += 0x10;\n    if (rax > rbp) {\n        goto label_0;\n    }\nlabel_4:\n    rbp = *(r12);\nlabel_2:\n    if (rbp >= rax) {\n        goto label_3;\n    }\nlabel_1:\n    rdi = *((rbp + 8));\n    if (rdi == 0) {\n        goto label_5;\n    }\n    do {\n        rbx = *((rdi + 8));\n        free (rdi);\n        rdi = rbx;\n    } while (rbx != 0);\nlabel_5:\n    rbp += 0x10;\n    if (*((r12 + 8)) > rbp) {\n        goto label_1;\n    }\nlabel_3:\n    rdi = *((r12 + 0x48));\n    if (rdi == 0) {\n        goto label_6;\n    }\n    do {\n        rbx = *((rdi + 8));\n        free (rdi);\n        rdi = rbx;\n    } while (rbx != 0);\nlabel_6:\n    free (*(r12));\n    rdi = r12;\n    return free ();\n}\n"
        },
        {
            "funcName": "fcn_0040cda0",
            "funcStartAddr": "0x40cda0",
            "funcEndAddr": "0x416ee0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40cda0 */\n#include <stdint.h>\n \nuint64_t fcn_0040cda0 (int64_t arg1, uint32_t arg2) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    rdi = arg1;\n    rsi = arg2;\n    do {\nlabel_0:\n        rax = abort ();\n        r12 = *((rdi + 0x28));\n        if (*((r12 + 0x10)) == 0) {\n            if (rsi < 0) {\n                goto label_3;\n            }\n            xmm0 = 0;\n            __asm (\"cvtsi2ss xmm0, rsi\");\nlabel_1:\n            __asm (\"divss xmm0, dword [r12 + 8]\");\n            __asm (\"comiss xmm0, dword [0x0041d83c]\");\n            if (rsi >= 0) {\n                goto label_4;\n            }\n            __asm (\"comiss xmm0, dword [0x0041d840]\");\n            if (rsi < 0) {\n                goto label_5;\n            }\n            __asm (\"subss xmm0, dword [0x0041d840]\");\n            __asm (\"cvttss2si rsi, xmm0\");\n            __asm (\"btc rsi, 0x3f\");\n        }\nlabel_2:\n        rax = fcn_0040c1f0 (rsi, rsi);\n        rdx = rax*8;\n        rbx = rax;\n        rax >>= 0x3d;\n        al = (rax != 0) ? 1 : 0;\n        edx = 1;\n        eax = (int32_t) al;\n        __asm (\"cmovs rax, rdx\");\n        if (rbx == 0) {\n            goto label_4;\n        }\n        if (rax != 0) {\n            goto label_4;\n        }\n        if (*((rbp + 0x10)) == rbx) {\n            goto label_6;\n        }\n        rax = calloc (rbx, 0x10);\n        *(rsp) = rax;\n        if (rax == 0) {\n            goto label_4;\n        }\n        *((rsp + 0x10)) = rbx;\n        rbx <<= 4;\n        rbx += rax;\n        rax = *((rbp + 0x30));\n        *((rsp + 0x18)) = 0;\n        *((rsp + 8)) = rbx;\n        *((rsp + 0x30)) = rax;\n        rax = *((rbp + 0x38));\n        *((rsp + 0x20)) = 0;\n        *((rsp + 0x38)) = rax;\n        rax = *((rbp + 0x40));\n        *((rsp + 0x28)) = r12;\n        *((rsp + 0x40)) = rax;\n        rax = *((rbp + 0x48));\n        *((rsp + 0x48)) = rax;\n        eax = fcn_0040c480 (rsp, rbp, 0);\n        ebx = eax;\n        if (al != 0) {\n            goto label_7;\n        }\n        rax = *((rsp + 0x48));\n        *((rbp + 0x48)) = rax;\n        al = fcn_0040c480 (rbp, rsp, 1);\n    } while (al == 0);\n    al = fcn_0040c480 (rbp, rsp, 0);\n    if (al == 0) {\n        goto label_0;\n    }\n    free (*(rsp));\n    eax = ebx;\n    return rax;\nlabel_4:\n    ebx = 0;\n    do {\n        eax = ebx;\n        return rax;\nlabel_3:\n        rax = rsi;\n        esi &= 1;\n        xmm0 = 0;\n        rax >>= 1;\n        rax |= rsi;\n        __asm (\"cvtsi2ss xmm0, rax\");\n        __asm (\"addss xmm0, xmm0\");\n        goto label_1;\nlabel_5:\n        __asm (\"cvttss2si rsi, xmm0\");\n        goto label_2;\nlabel_6:\n        ebx = 1;\n        eax = 1;\n        return rax;\nlabel_7:\n        free (*(rbp));\n        rax = *(rsp);\n        *(rbp) = rax;\n        rax = *((rsp + 8));\n        *((rbp + 8)) = rax;\n        rax = *((rsp + 0x10));\n        *((rbp + 0x10)) = rax;\n        rax = *((rsp + 0x18));\n        *((rbp + 0x18)) = rax;\n        rax = *((rsp + 0x48));\n        *((rbp + 0x48)) = rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040cfa0",
            "funcStartAddr": "0x40cfa0",
            "funcEndAddr": "0x417355",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40cfa0 */\n#include <stdint.h>\n \nuint64_t fcn_0040cfa0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    do {\nlabel_6:\n        abort ();\n    } while (rsi == 0);\n    r12 = rdx;\n    rbx = rdi;\n    rax = fcn_0040c2e0 (rdi, rsi, rsp + 8, 0);\n    rdx = rax;\n    if (rax != 0) {\n        eax = 0;\n        if (r12 != 0) {\n            *(r12) = rdx;\n        }\n        return rax;\n    }\n    rax = *((rbx + 0x18));\n    if (rax < 0) {\n        goto label_8;\n    }\n    xmm1 = 0;\n    rdx = *((rbx + 0x28));\n    __asm (\"cvtsi2ss xmm1, rax\");\n    rax = *((rbx + 0x10));\n    if (rax < 0) {\n        goto label_9;\n    }\n    do {\n        xmm0 = 0;\n        __asm (\"cvtsi2ss xmm0, rax\");\n        __asm (\"mulss xmm0, dword [rdx + 8]\");\n        __asm (\"comiss xmm1, xmm0\");\n        if (rax > 0) {\n            goto label_10;\n        }\nlabel_0:\n        r12 = *((rsp + 8));\n        if (*(r12) == 0) {\n            goto label_11;\n        }\n        rax = *((rbx + 0x48));\n        if (rax == 0) {\n            goto label_12;\n        }\n        rdx = *((rax + 8));\n        *((rbx + 0x48)) = rdx;\nlabel_1:\n        rdx = *((r12 + 8));\n        *(rax) = rbp;\n        *((rax + 8)) = rdx;\n        *((r12 + 8)) = rax;\n        eax = 1;\n        *((rbx + 0x20))++;\n        return rax;\nlabel_8:\n        rdx = rax;\n        eax &= 1;\n        xmm1 = 0;\n        rdx >>= 1;\n        rdx |= rax;\n        rax = *((rbx + 0x10));\n        __asm (\"cvtsi2ss xmm1, rdx\");\n        rdx = *((rbx + 0x28));\n        __asm (\"addss xmm1, xmm1\");\n    } while (rax >= 0);\nlabel_9:\n    rcx = rax;\n    eax &= 1;\n    xmm0 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm0, rcx\");\n    __asm (\"addss xmm0, xmm0\");\n    __asm (\"mulss xmm0, dword [rdx + 8]\");\n    __asm (\"comiss xmm1, xmm0\");\n    if (rcx <= 0) {\n        goto label_0;\n    }\nlabel_10:\n    fcn_0040c400 (rbx + 0x28);\n    rdx = *((rbx + 0x28));\n    rax = *((rbx + 0x10));\n    xmm2 = *((rdx + 8));\n    if (rax < 0) {\n        goto label_13;\n    }\n    xmm0 = 0;\n    __asm (\"cvtsi2ss xmm0, rax\");\nlabel_3:\n    rax = *((rbx + 0x18));\n    if (rax < 0) {\n        goto label_14;\n    }\n    xmm1 = 0;\n    __asm (\"cvtsi2ss xmm1, rax\");\nlabel_2:\n    xmm3 = xmm2;\n    __asm (\"mulss xmm3, xmm0\");\n    __asm (\"comiss xmm1, xmm3\");\n    if (rax <= 0) {\n        goto label_0;\n    }\n    __asm (\"mulss xmm0, dword [rdx + 0xc]\");\n    if (*((rdx + 0x10)) == 0) {\n        goto label_15;\n    }\nlabel_4:\n    __asm (\"comiss xmm0, dword [0x0041d83c]\");\n    if (*((rdx + 0x10)) < 0) {\n        goto label_16;\n    }\n    do {\nlabel_5:\n        eax = 0xffffffff;\n        return rax;\nlabel_11:\n        *(r12) = rbp;\n        eax = 1;\n        *((rbx + 0x20))++;\n        *((rbx + 0x18))++;\n        return rax;\nlabel_12:\n        rax = malloc (0x10);\n    } while (rax == 0);\n    goto label_1;\nlabel_14:\n    rcx = rax;\n    eax &= 1;\n    xmm1 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm1, rcx\");\n    __asm (\"addss xmm1, xmm1\");\n    goto label_2;\nlabel_13:\n    rcx = rax;\n    eax &= 1;\n    xmm0 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm0, rcx\");\n    __asm (\"addss xmm0, xmm0\");\n    goto label_3;\nlabel_15:\n    __asm (\"mulss xmm0, xmm2\");\n    goto label_4;\nlabel_16:\n    __asm (\"comiss xmm0, dword [0x0041d840]\");\n    if (rcx >= 0) {\n        goto label_17;\n    }\n    __asm (\"cvttss2si rsi, xmm0\");\nlabel_7:\n    al = fcn_0040cda0 (rbx, rsi);\n    if (al == 0) {\n        goto label_5;\n    }\n    rax = fcn_0040c2e0 (rbx, rbp, rsp + 8, 0);\n    if (rax == 0) {\n        goto label_0;\n    }\n    goto label_6;\nlabel_17:\n    __asm (\"subss xmm0, dword [0x0041d840]\");\n    __asm (\"cvttss2si rsi, xmm0\");\n    __asm (\"btc rsi, 0x3f\");\n    goto label_7;\n}\n"
        },
        {
            "funcName": "fcn_0040d220",
            "funcStartAddr": "0x40d220",
            "funcEndAddr": "0x40d25b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40d220 */\n#include <stdint.h>\n \nuint64_t fcn_0040d220 (int64_t arg2) {\n    int64_t var_8h;\n    rsi = arg2;\n    rbx = rsi;\n    eax = fcn_0040cfa0 (rdi, rsi, rsp + 8);\n    if (eax != 0xffffffff) {\n        if (eax == 0) {\n            rbx = *((rsp + 8));\n        }\n        rax = rbx;\n        return rax;\n    }\n    ebx = 0;\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040d260",
            "funcStartAddr": "0x40d260",
            "funcEndAddr": "0x40d437",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40d260 */\n#include <stdint.h>\n \nuint64_t fcn_0040d260 (int64_t arg1) {\n    int64_t var_8h;\n    rdi = arg1;\n    rbx = rdi;\n    rax = fcn_0040c2e0 (rdi, rsi, rsp + 8, 1);\n    if (rax == 0) {\n        goto label_0;\n    }\n    rax = *((rsp + 8));\n    *((rbx + 0x20))--;\n    while (rax <= 0) {\nlabel_0:\n        rax = rbp;\n        return rax;\n        rax = *((rbx + 0x18));\n        rax--;\n        *((rbx + 0x18)) = rax;\n        if (rax < 0) {\n            goto label_6;\n        }\n        xmm0 = 0;\n        rdx = *((rbx + 0x28));\n        __asm (\"cvtsi2ss xmm0, rax\");\n        rax = *((rbx + 0x10));\n        if (rax < 0) {\n            goto label_7;\n        }\nlabel_1:\n        xmm1 = 0;\n        __asm (\"cvtsi2ss xmm1, rax\");\nlabel_2:\n        __asm (\"mulss xmm1, dword [rdx]\");\n        __asm (\"comiss xmm1, xmm0\");\n    }\n    fcn_0040c400 (rbx + 0x28);\n    rax = *((rbx + 0x10));\n    rdx = *((rbx + 0x28));\n    if (rax < 0) {\n        goto label_8;\n    }\n    xmm0 = 0;\n    __asm (\"cvtsi2ss xmm0, rax\");\nlabel_4:\n    rax = *((rbx + 0x18));\n    if (rax < 0) {\n        goto label_9;\n    }\n    xmm1 = 0;\n    __asm (\"cvtsi2ss xmm1, rax\");\nlabel_3:\n    xmm2 = *(rdx);\n    __asm (\"mulss xmm2, xmm0\");\n    __asm (\"comiss xmm2, xmm1\");\n    if (rax <= 0) {\n        goto label_0;\n    }\n    __asm (\"mulss xmm0, dword [rdx + 4]\");\n    if (*((rdx + 0x10)) == 0) {\n        __asm (\"mulss xmm0, dword [rdx + 8]\");\n    }\n    __asm (\"comiss xmm0, dword [0x0041d840]\");\n    if (*((rdx + 0x10)) >= 0) {\n        goto label_10;\n    }\n    __asm (\"cvttss2si rsi, xmm0\");\nlabel_5:\n    al = fcn_0040cda0 (rbx, rsi);\n    if (al != 0) {\n        goto label_0;\n    }\n    rdi = *((rbx + 0x48));\n    if (rdi == 0) {\n        goto label_11;\n    }\n    do {\n        r12 = *((rdi + 8));\n        rax = free (rdi);\n        rdi = r12;\n    } while (r12 != 0);\nlabel_11:\n    *((rbx + 0x48)) = 0;\n    goto label_0;\nlabel_6:\n    rdx = rax;\n    eax &= 1;\n    xmm0 = 0;\n    rdx >>= 1;\n    rdx |= rax;\n    rax = *((rbx + 0x10));\n    __asm (\"cvtsi2ss xmm0, rdx\");\n    rdx = *((rbx + 0x28));\n    __asm (\"addss xmm0, xmm0\");\n    if (rax >= 0) {\n        goto label_1;\n    }\nlabel_7:\n    rcx = rax;\n    eax &= 1;\n    xmm1 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm1, rcx\");\n    __asm (\"addss xmm1, xmm1\");\n    goto label_2;\nlabel_9:\n    rcx = rax;\n    eax &= 1;\n    xmm1 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm1, rcx\");\n    __asm (\"addss xmm1, xmm1\");\n    goto label_3;\nlabel_8:\n    rcx = rax;\n    eax &= 1;\n    xmm0 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm0, rcx\");\n    __asm (\"addss xmm0, xmm0\");\n    goto label_4;\nlabel_10:\n    __asm (\"subss xmm0, dword [0x0041d840]\");\n    __asm (\"cvttss2si rsi, xmm0\");\n    __asm (\"btc rsi, 0x3f\");\n    goto label_5;\n}\n"
        },
        {
            "funcName": "fcn_0040d510",
            "funcStartAddr": "0x40d510",
            "funcEndAddr": "0x40d5c7",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40d510 */\n#include <stdint.h>\n \nuint64_t fcn_0040d510 (int64_t arg1) {\n    rdi = arg1;\n    *(fp_stack--) = *(0x0041d840);\n    *(fp_stack--) = fp_stack[?];\n    if (fp_stack[0] >= fp_stack[1]) {\n        goto label_0;\n    }\n    fp_stack[1] = fp_stack[0];\n    fp_stack--;\n    eax = *((rsp - 0xa));\n    ah |= 0xc;\n    *((rsp - 0xc)) = ax;\n    *(fp_stack--) = fp_stack[0];\n    *((rsp - 0x18)) = fp_stack[0];\n    fp_stack--;\n    rax = *((rsp - 0x18));\n    do {\n        *((rsp - 0x20)) = rax;\n        *(fp_stack--) = *((rsp - 0x20));\n        if (rax < 0) {\n            fp_stack[0] += *(0x0041d83c);\n        }\n        if (edi == 0) {\n            fp_tmp_0 = fp_stack[1];\n            fp_stack[1] = fp_stack[0];\n            fp_stack[0] = fp_tmp_0;\n            __asm (\"fucompi st(1)\");\n            if (edi != 0) {\n                if (edi == 0) {\n                    goto label_1;\n                }\n                fp_stack++;\n            } else {\n                fp_stack++;\n            }\n            rax++;\n            *((rsp - 0x20)) = rax;\n            *(fp_stack--) = *((rsp - 0x20));\n            if (rax < 0) {\n                goto label_2;\n            }\n        } else {\n            fp_stack[1] = fp_stack[0];\n            fp_stack--;\n        }\nlabel_1:\n        return rax;\nlabel_0:\n        fp_stack[0] -= fp_stack[1];\n        fp_tmp_1 = fp_stack[1];\n        fp_stack[1] = fp_stack[0];\n        fp_stack[0] = fp_tmp_1;\n        eax = *((rsp - 0xa));\n        ah |= 0xc;\n        *((rsp - 0xc)) = ax;\n        *((rsp - 0x18)) = fp_stack[0];\n        fp_stack--;\n        rax = *((rsp - 0x18));\n        __asm (\"btc rax, 0x3f\");\n    } while (1);\nlabel_2:\n    fp_stack[0] += *(0x0041d83c);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040d5d0",
            "funcStartAddr": "0x40d5d0",
            "funcEndAddr": "0x40df9e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40d5d0 */\n#include <stdint.h>\n \nvoid fcn_0040d5d0 (int64_t arg1, void * arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    void * s2;\n    int64_t var_10h;\n    uint32_t var_14h;\n    int64_t var_18h;\n    size_t var_20h;\n    int64_t var_30h;\n    int64_t var_34h;\n    int64_t var_38h;\n    void * var_40h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    eax = edx;\n    eax &= 0x20;\n    r14 = rcx;\n    ecx = edx;\n    ecx &= 3;\n    r13 = rsi;\n    rbx = rdi;\n    *((rsp + 0x30)) = eax;\n    eax -= eax;\n    eax &= 0xffffffe8;\n    *((rsp + 8)) = rsi;\n    eax += 0x400;\n    *((rsp + 0x10)) = edx;\n    *((rsp + 0x18)) = r8;\n    *((rsp + 0x14)) = ecx;\n    *((rsp + 0x34)) = eax;\n    rax = localeconv ();\n    r15 = *(rax);\n    r12 = rax;\n    rax = strlen (r15);\n    edx = 1;\n    r8 = rax;\n    rax--;\n    eax = 0x41d794;\n    if (rax >= 0x10) {\n        r15 = rax;\n    }\n    rax = *((r12 + 0x10));\n    r12 = *((r12 + 8));\n    if (rax >= 0x10) {\n        r8 = rdx;\n    }\n    *((rsp + 0x20)) = r8;\n    *((rsp + 0x38)) = rax;\n    rax = strlen (r12);\n    r8 = *((rsp + 0x20));\n    eax = 0x41b08a;\n    if (rax >= 0x11) {\n        r12 = rax;\n    }\n    rax = r13 + 0x287;\n    *(rsp) = rax;\n    if (rbp > r14) {\n        goto label_31;\n    }\n    rax = r14;\n    edx = 0;\n    rax = rdx:rax / rbp;\n    rdx = rdx:rax % rbp;\n    rcx = rax;\n    if (rdx == 0) {\n        rsi = rax;\n        edx = 0;\n        rsi *= rbx;\n        rax = rsi;\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        if (rax == rbx) {\n            goto label_32;\n        }\n    }\nlabel_5:\n    *((rsp + 0x20)) = r14;\n    *(fp_stack--) = *((rsp + 0x20));\n    if (r14 < 0) {\n        goto label_33;\n    }\nlabel_4:\n    rax = *((rsp + 0x18));\n    *((rsp + 0x20)) = rax;\n    *(fp_stack--) = *((rsp + 0x20));\n    if (rax < 0) {\n        goto label_34;\n    }\n    *((rsp + 0x20)) = rbx;\n    fp_stack[0] /= fp_stack[1];\n    fp_stack++;\n    *(fp_stack--) = *((rsp + 0x20));\n    if (rbx < 0) {\n        goto label_3;\n    }\nlabel_2:\n    fp_stack[0] *= fp_stack[1];\n    fp_stack++;\n    if ((*((rsp + 0x10)) & 0x10) == 0) {\n        goto label_1;\n    }\nlabel_0:\n    *(fp_stack--) = *((rsp + 0x34));\n    ebx = 0;\n    *(fp_stack--) = fp_stack[0];\n    while (ebx != 8) {\n        fp_stack[1] = fp_stack[0];\n        fp_stack--;\n        fp_tmp_0 = fp_stack[2];\n        fp_stack[2] = fp_stack[0];\n        fp_stack[0] = fp_tmp_0;\n        *(fp_stack--) = fp_stack[0];\n        ebx++;\n        fp_stack[0] *= fp_stack[2];\n        fp_tmp_1 = fp_stack[3];\n        fp_stack[3] = fp_stack[0];\n        fp_stack[0] = fp_tmp_1;\n        if (fp_stack[0] < fp_stack[3]) {\n            goto label_35;\n        }\n    }\n    fp_stack[2] = fp_stack[0];\n    fp_stack--;\n    fp_stack[2] = fp_stack[0];\n    fp_stack--;\n    goto label_36;\nlabel_35:\n    fp_stack[2] = fp_stack[0];\n    fp_stack--;\n    fp_stack[2] = fp_stack[0];\n    fp_stack--;\nlabel_36:\n    ecx = *((rsp + 0x30));\n    eax = 0;\n    edi = *((rsp + 0x14));\n    r14 = r8 + 1;\n    fp_stack[1] /= fp_stack[0];\n    fp_stack++;\n    al = (ecx == 0) ? 1 : 0;\n    r15 = r14 + rax + 1;\n    if (edi == 1) {\n        goto label_37;\n    }\n    *(fp_stack--) = fp_stack[?];\n    __asm (\"fcompi st(1)\");\n    if (edi > 1) {\n        goto label_38;\n    }\n    *(fp_stack--) = fp_stack[0];\nlabel_12:\n    ? = fp_stack[0];\n    fp_stack--;\n    esi = 1;\n    eax = 0;\n    rbp = *((rsp + 0x18));\n    ecx = \"%.1Lf\";\n    rdx = 0xffffffffffffffff;\n    rdi = rbp;\n    ? = fp_stack[0];\n    fp_stack--;\n    sprintf_chk ();\n    rax = strlen (rbp);\n    *(fp_stack--) = fp_stack[?];\n    if (rax <= r15) {\n        goto label_39;\n    }\n    *(fp_stack--) = *(0x0041d8c4);\n    fp_stack[1] *= fp_stack[0];\nlabel_26:\n    *(fp_stack--) = fp_stack[?];\n    __asm (\"fcompi st(2)\");\n    if (rax > r15) {\n        *((rsp + 0x20)) = fp_stack[0];\n        fp_stack--;\n        ? = fp_stack[0];\n        fp_stack--;\n        fcn_0040d510 (*((rsp + 0x24)));\n        *(fp_stack--) = *((rsp + 0x20));\n    }\nlabel_15:\n    fp_stack[0] /= fp_stack[1];\n    fp_stack++;\n    ecx = 0x41d850;\n    esi = 1;\n    r15 = *((rsp + 0x18));\n    rdx = 0xffffffffffffffff;\n    eax = 0;\n    rdi = r15;\n    ? = fp_stack[0];\n    fp_stack--;\n    sprintf_chk ();\n    rax = strlen (r15);\n    r14 = rax;\n    goto label_14;\nlabel_1:\n    edi = *((rsp + 0x14));\n    if (edi != 1) {\n        *(fp_stack--) = fp_stack[?];\n        __asm (\"fcompi st(1)\");\n        if (edi > 1) {\n            goto label_40;\n        }\n    }\nlabel_11:\n    esi = 1;\n    ecx = 0x41d850;\n    eax = 0;\n    rbx = *((rsp + 0x18));\n    rdx = 0xffffffffffffffff;\n    ? = fp_stack[0];\n    fp_stack--;\n    rdi = rbx;\n    sprintf_chk ();\n    ebx = 0xffffffff;\n    rax = strlen (rbx);\n    r14 = rax;\nlabel_14:\n    r15 = *(rsp);\n    r15 -= rax;\n    r14 += r15;\n    memmove (r15, *((rsp + 8)), rax);\nlabel_22:\n    if ((*((rsp + 0x10)) & 4) != 0) {\n        goto label_41;\n    }\nlabel_6:\n    if ((*((rsp + 0x10)) & 0x80) != 0) {\n        if (ebx == 0xffffffff) {\n            goto label_42;\n        }\nlabel_23:\n        eax = *((rsp + 0x10));\n        eax &= 0x100;\n        ecx = eax;\n        ecx |= ebx;\n        if (ecx != 0) {\n            goto label_43;\n        }\n    }\nlabel_7:\n    rax = *(rsp);\n    *(rax) = 0;\n    rax = r15;\n    return;\nlabel_3:\n    fp_stack[0] += *(0x0041d83c);\n    fp_stack[0] *= fp_stack[1];\n    fp_stack++;\n    if ((*((rsp + 0x10)) & 0x10) != 0) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_34:\n    fp_stack[0] += *(0x0041d83c);\n    *((rsp + 0x20)) = rbx;\n    fp_stack[0] /= fp_stack[1];\n    fp_stack++;\n    *(fp_stack--) = *((rsp + 0x20));\n    if (rbx >= 0) {\n        goto label_2;\n    }\n    goto label_3;\nlabel_33:\n    fp_stack[0] += *(0x0041d83c);\n    goto label_4;\nlabel_31:\n    if (r14 == 0) {\n        goto label_5;\n    }\n    rax = *((rsp + 0x18));\n    edx = 0;\n    rax = rdx:rax / r14;\n    rdx = rdx:rax % r14;\n    rcx = rax;\n    if (rdx != 0) {\n        goto label_5;\n    }\n    rax = rbx;\n    edx = 0;\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    rbx = rax;\n    rax = rdx * 5;\n    edx = 0;\n    rax += rax;\n    rsi = rbx;\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    rdx += rdx;\n    r9d = eax;\n    if (rcx <= rdx) {\n        goto label_44;\n    }\n    edi = 0;\n    dil = (rdx != 0) ? 1 : 0;\nlabel_18:\n    ecx = *((rsp + 0x10));\n    ecx &= 0x10;\n    if (ecx == 0) {\n        goto label_45;\n    }\nlabel_13:\n    r10d = *((rsp + 0x34));\n    ebx = 0;\n    if (r10 <= rsi) {\n        goto label_46;\n    }\nlabel_8:\n    r14 = *(rsp);\n    if (*((rsp + 0x14)) == 1) {\n        goto label_47;\n    }\nlabel_24:\n    r10d = *((rsp + 0x14));\n    if (r10d == 0) {\n        edi += r9d;\n        if (edi <= 0) {\n            goto label_16;\n        }\nlabel_17:\n        rsi++;\n        if (ecx == 0) {\n            goto label_16;\n        }\n        eax = *((rsp + 0x34));\n        if (rax == rsi) {\n            goto label_48;\n        }\n    }\nlabel_16:\n    rcx = 0xcccccccccccccccd;\n    r15 = r14;\n    while (rsi > 9) {\n        rsi = rdx;\n        rax = rdx;\n        rdi = rsi;\n        r15--;\n        rdx:rax = rax * rcx;\n        rdx >>= 3;\n        rax = rdx * 5;\n        rax += rax;\n        rdi -= rax;\n        rax = rdi;\n        eax += 0x30;\n        *(r15) = al;\n    }\n    if ((*((rsp + 0x10)) & 4) == 0) {\n        goto label_6;\n    }\nlabel_41:\n    r13 = 0xffffffffffffffff;\n    rax = strlen (r12);\n    rbp -= r15;\n    rsi = r15;\n    ecx = 0x29;\n    rdx = rbp;\n    rdi = rsp + 0x40;\n    *((rsp + 0x20)) = rax;\n    memcpy_chk ();\n    *((rsp + 0x14)) = ebx;\n    r15 = *((rsp + 0x38));\n    rbx = rbp;\n    r13 = r12;\n    r12 = *((rsp + 0x20));\n    do {\n        edx = *(r15);\n        if (dl != 0) {\n            eax = (int32_t) dl;\n            if (dl >= 0x7f) {\n                rax = rbx;\n            }\n            r15++;\n        }\n        if (rbp > rbx) {\n            r15 = r14;\n            ebx = *((rsp + 0x14));\n            r15 -= rbp;\n            memcpy (r15, rsp + 0x40, rbp);\n            goto label_6;\n        }\n        r14 -= rbp;\n        rbx -= rbp;\n        rax = rsp + 0x40;\n        memcpy (r14, rax + rbx, rbp);\n        if (rbx == 0) {\n            goto label_49;\n        }\n        r14 -= r12;\n        memcpy (r14, r13, r12);\n    } while (1);\nlabel_42:\n    rcx = *((rsp + 0x18));\n    if (rcx <= 1) {\n        goto label_50;\n    }\n    edx = *((rsp + 0x34));\n    ebx = 1;\n    eax = 1;\n    do {\n        rax *= rdx;\n        if (rcx <= rax) {\n            goto label_51;\n        }\n        ebx++;\n    } while (ebx != 8);\nlabel_51:\n    ecx = *((rsp + 0x10));\n    eax = *((rsp + 0x10));\n    eax &= 0x100;\n    ecx &= 0x40;\n    if (ecx != 0) {\nlabel_20:\n        rcx = *((rsp + 8));\n        rdi = rcx + 0x288;\n        *((rcx + 0x287)) = 0x20;\n        *(rsp) = rdi;\nlabel_19:\n        if (ebx == 0) {\n            goto label_52;\n        }\n    }\n    r9d = *((rsp + 0x30));\n    if (r9d == 0) {\n        if (ebx == 1) {\n            goto label_53;\n        }\n    }\n    rbx = (int64_t) ebx;\n    rdi = *(rsp);\n    ecx = *((rbx + 0x41d8b8));\n    rdx = rdi + 1;\n    *(rdi) = cl;\n    if (eax == 0) {\n        goto label_54;\n    }\n    r8d = *((rsp + 0x30));\n    if (r8d != 0) {\n        goto label_55;\n    }\nlabel_21:\n    rax = rdx + 1;\n    *(rdx) = 0x42;\n    *(rsp) = rax;\n    goto label_7;\nlabel_9:\n    dil = (edi != 0) ? 1 : 0;\n    edi = (int32_t) dil;\nlabel_10:\n    ebx++;\n    if (r10 > r11) {\n        goto label_56;\n    }\n    if (ebx == 8) {\n        goto label_8;\n    }\nlabel_46:\n    rax = rsi;\n    edx = 0;\n    esi = edi;\n    rax = rdx:rax / r10;\n    rdx = rdx:rax % r10;\n    esi >>= 1;\n    r11 = rax;\n    eax = rdx * 5;\n    edx = 0;\n    eax = r9 + rax*2;\n    eax = edx:eax / ebp;\n    edx = edx:eax % ebp;\n    edx = rsi + rdx*2;\n    r9d = eax;\n    rsi = r11;\n    edi += edx;\n    if (ebp > edx) {\n        goto label_9;\n    }\n    dil = (ebp < edi) ? 1 : 0;\n    edi = (int32_t) dil;\n    edi += 2;\n    goto label_10;\nlabel_40:\n    ? = fp_stack[0];\n    fp_stack--;\n    fcn_0040d510 (rdi);\n    goto label_11;\nlabel_38:\n    *(fp_stack--) = fp_stack[0];\n    ? = fp_stack[0];\n    fp_stack--;\n    ? = fp_stack[0];\n    fp_stack--;\n    fcn_0040d510 (rdi);\n    *(fp_stack--) = fp_stack[?];\n    goto label_12;\nlabel_32:\n    ecx = *((rsp + 0x10));\n    edi = 0;\n    r9d = 0;\n    ecx &= 0x10;\n    if (ecx != 0) {\n        goto label_13;\n    }\nlabel_45:\n    ebx = 0xffffffff;\n    goto label_8;\n    do {\nlabel_39:\n        if ((*((rsp + 0x10)) & 8) != 0) {\n            rcx = *((rsp + 8));\n            if (*((rcx + rax - 1)) == 0x30) {\n                goto label_57;\n            }\n            fp_stack++;\n        } else {\n            fp_stack++;\n        }\n        rcx = rax;\n        rcx -= r14;\n        r14 = rcx;\n        goto label_14;\nlabel_37:\n        ecx = \"%.1Lf\";\n        esi = 1;\n        eax = 0;\n        *(fp_stack--) = fp_stack[0];\n        ? = fp_stack[0];\n        fp_stack--;\n        rbp = *((rsp + 0x18));\n        rdx = 0xffffffffffffffff;\n        rdi = rbp;\n        ? = fp_stack[0];\n        fp_stack--;\n        sprintf_chk ();\n        rax = strlen (rbp);\n        *(fp_stack--) = fp_stack[?];\n    } while (rax <= r15);\n    *(fp_stack--) = *(0x0041d8c4);\n    fp_stack[1] *= fp_stack[0];\n    goto label_15;\nlabel_47:\n    rax = rsi;\n    rdi = (int64_t) edi;\n    eax &= 1;\n    rax += rdi;\n    al = (rax != 0) ? 1 : 0;\n    eax = (int32_t) al;\n    r9d += eax;\n    if (r9d <= 5) {\n        goto label_16;\n    }\n    r14 = *(rsp);\n    goto label_17;\nlabel_44:\n    dil = (r9d < 5) ? 1 : 0;\n    edi = (int32_t) dil;\n    edi += 2;\n    goto label_18;\nlabel_43:\n    if ((*((rsp + 0x10)) & 0x40) == 0) {\n        goto label_19;\n    }\n    goto label_20;\nlabel_55:\n    rdx = rdi + 2;\n    *((rdi + 1)) = 0x69;\n    goto label_21;\nlabel_48:\n    if (ebx == 8) {\n        goto label_16;\n    }\n    ebx++;\n    if ((*((rsp + 0x10)) & 8) == 0) {\n        goto label_58;\n    }\nlabel_30:\n    r15 = r14 - 1;\n    *((r14 - 1)) = 0x31;\n    goto label_22;\nlabel_50:\n    ebx = 0;\n    goto label_23;\nlabel_53:\n    rcx = *(rsp);\n    rdx = rcx + 1;\n    *(rcx) = 0x6b;\n    if (eax != 0) {\n        goto label_21;\n    }\nlabel_54:\n    *(rsp) = rdx;\n    goto label_7;\nlabel_56:\n    if (r11 > 9) {\n        goto label_8;\n    }\n    if (*((rsp + 0x14)) == 1) {\n        goto label_59;\n    }\n    ebp = *((rsp + 0x14));\n    dl = (ebp == 0) ? 1 : 0;\n    r9b = (edi > 0) ? 1 : 0;\n    edx &= r9d;\nlabel_28:\n    if (dl != 0) {\n        goto label_60;\n    }\n    if (eax != 0) {\n        goto label_61;\n    }\nlabel_29:\n    r14 = *(rsp);\n    if ((*((rsp + 0x10)) & 8) == 0) {\n        eax = 0x30;\nlabel_27:\n        rdi = *((rsp + 8));\n        r14 = rdi + 0x286;\n        *((rdi + 0x286)) = al;\n        eax = r8d;\n        r14 -= r8;\n        if (r8d >= 8) {\n            goto label_62;\n        }\n        if ((r8b & 4) != 0) {\n            goto label_63;\n        }\n        if (eax != 0) {\n            edx = *(r15);\n            *(r14) = dl;\n            if ((al & 2) != 0) {\n                goto label_64;\n            }\n        }\nlabel_25:\n        edi = 0;\n    }\n    if (*((rsp + 0x14)) == 1) {\n        goto label_16;\n    }\n    r9d = 0;\n    goto label_24;\nlabel_64:\n    edx = *((r15 + rax - 2));\n    *((r14 + rax - 2)) = dx;\n    goto label_25;\nlabel_57:\n    *(fp_stack--) = *(0x0041d8c4);\n    fp_stack[1] *= fp_stack[0];\n    if (*((rsp + 0x14)) != 1) {\n        goto label_26;\n    }\n    goto label_15;\nlabel_60:\n    eax++;\n    if (eax == 0xa) {\n        goto label_65;\n    }\nlabel_61:\n    eax += 0x30;\n    goto label_27;\nlabel_59:\n    edx = eax;\n    edx &= 1;\n    edx += edi;\n    dl = (edx > 2) ? 1 : 0;\n    goto label_28;\nlabel_62:\n    rax = *(r15);\n    r9 = r14 + 8;\n    r10 = r15;\n    r9 &= 0xfffffffffffffff8;\n    *(r14) = rax;\n    eax = r8d;\n    rdx = *((r15 + rax - 8));\n    *((r14 + rax - 8)) = rdx;\n    rax = r14;\n    rax -= r9;\n    r10 -= rax;\n    eax += r8d;\n    eax &= 0xfffffff8;\n    if (eax < 8) {\n        goto label_25;\n    }\n    eax &= 0xfffffff8;\n    edx = 0;\n    do {\n        edi = edx;\n        edx += 8;\n        r11 = *((r10 + rdi));\n        *((r9 + rdi)) = r11;\n    } while (edx < eax);\n    goto label_25;\nlabel_65:\n    rsi = r11 + 1;\n    if (rsi == 0xa) {\n        goto label_66;\n    }\n    edi = 0;\n    goto label_29;\nlabel_58:\n    rax = r8;\n    *((r14 - 1)) = 0x30;\n    rax = ~rax;\n    r14 += rax;\n    eax = r8d;\n    if (r8d >= 8) {\n        goto label_67;\n    }\n    r8d &= 4;\n    if (r8d != 0) {\n        goto label_68;\n    }\n    if (eax == 0) {\n        goto label_30;\n    }\n    edx = *(r15);\n    *(r14) = dl;\n    if ((al & 2) == 0) {\n        goto label_30;\n    }\n    edx = *((r15 + rax - 2));\n    *((r14 + rax - 2)) = dx;\n    goto label_30;\nlabel_66:\n    r14 = *(rsp);\n    goto label_25;\nlabel_67:\n    rax = *(r15);\n    rcx = r14 + 8;\n    rcx &= 0xfffffffffffffff8;\n    *(r14) = rax;\n    eax = r8d;\n    rdx = *((r15 + rax - 8));\n    *((r14 + rax - 8)) = rdx;\n    rax = r14;\n    rax -= rcx;\n    r15 -= rax;\n    eax += r8d;\n    eax &= 0xfffffff8;\n    if (eax < 8) {\n        goto label_30;\n    }\n    eax &= 0xfffffff8;\n    edx = 0;\n    do {\n        esi = edx;\n        edx += 8;\n        rdi = *((r15 + rsi));\n        *((rcx + rsi)) = rdi;\n    } while (edx < eax);\n    goto label_30;\nlabel_63:\n    edx = *(r15);\n    *(r14) = edx;\n    edx = *((r15 + rax - 4));\n    *((r14 + rax - 4)) = edx;\n    goto label_25;\nlabel_68:\n    edx = *(r15);\n    *(r14) = edx;\n    edx = *((r15 + rax - 4));\n    *((r14 + rax - 4)) = edx;\n    goto label_30;\nlabel_49:\n    ebx = *((rsp + 0x14));\n    r15 = r14;\n    goto label_6;\nlabel_52:\n    rdx = *(rsp);\n    if (eax != 0) {\n        goto label_21;\n    }\n    goto label_7;\n}\n"
        },
        {
            "funcName": "fcn_0040dfa0",
            "funcStartAddr": "0x40dfa0",
            "funcEndAddr": "0x40e157",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40dfa0 */\n#include <stdint.h>\n \nint64_t fcn_0040dfa0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13 = rsi;\n    r12 = rdx;\n    rbx = rdi;\n    if (rdi == 0) {\n        goto label_4;\n    }\nlabel_1:\n    ebp = 0;\n    if (*(rbx) == 0x27) {\n        rbx++;\n    }\n    eax = fcn_0040acf0 (rbx, 0x41d8a0, 0x41d890, 4);\n    if (eax >= 0) {\n        rax = (int64_t) eax;\n        *(r12) = 1;\n        ebp |= *((rax*4 + 0x41d890));\n        eax = 0;\n        *(r13) = ebp;\nlabel_0:\n        return rax;\n    }\n    eax = fcn_004132b0 (rbx, rsp + 8, 0, r12, \"eEgGkKmMpPtTyYzZ0\");\n    if (eax != 0) {\n        goto label_5;\n    }\n    edi = *(rbx);\n    edx = rdi - 0x30;\n    if (dl <= 9) {\n        goto label_2;\n    }\n    rcx = *((rsp + 8));\n    if (rbx != rcx) {\n        goto label_6;\n    }\n    goto label_7;\n    do {\n        if (rbx == rcx) {\n            goto label_7;\n        }\nlabel_6:\n        rbx++;\n        esi = *(rbx);\n        edx = rsi - 0x30;\n    } while (dl > 9);\nlabel_2:\n    rdx = *(r12);\n    *(r13) = ebp;\n    goto label_8;\nlabel_5:\n    *(r13) = 0;\n    rdx = *(r12);\nlabel_8:\n    if (rdx != 0) {\n        goto label_0;\n    }\n    rax = getenv (\"POSIXLY_CORRECT\");\n    rax -= rax;\n    eax &= 0x200;\n    rax += 0x200;\n    *(r12) = rax;\n    eax = 4;\n    return rax;\nlabel_4:\n    rax = getenv (0x41b28c);\n    rbx = rax;\n    if (rax != 0) {\n        goto label_1;\n    }\n    rax = getenv (\"BLOCKSIZE\");\n    rbx = rax;\n    if (rax != 0) {\n        goto label_1;\n    }\n    rax = getenv (\"POSIXLY_CORRECT\");\n    if (rax == 0) {\n        goto label_9;\n    }\n    *(r12) = 0x200;\n    eax = 0;\n    *(r13) = 0;\n    goto label_0;\nlabel_7:\n    if (*((rcx - 1)) != 0x42) {\n        bpl |= 0x80;\nlabel_3:\n        ebp |= 0x20;\n        goto label_2;\n    }\n    ebp |= 0x180;\n    if (*((rcx - 2)) != 0x69) {\n        goto label_2;\n    }\n    goto label_3;\nlabel_9:\n    *(r12) = 0x400;\n    *(r13) = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040e160",
            "funcStartAddr": "0x40e160",
            "funcEndAddr": "0x40e1f0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40e160 */\n#include <stdint.h>\n \nuint64_t fcn_0040e160 (uint32_t arg1) {\n    rdi = arg1;\n    rbx = imp.__libc_start_main;\n    if (rbx == 0) {\n        goto label_0;\n    }\n    if (edi != *(rbx)) {\n        goto label_1;\n    }\n    goto label_2;\n    do {\n        if (*(rbx) == edi) {\n            goto label_2;\n        }\nlabel_1:\n        rbx = *((rbx + 8));\n    } while (rbx != 0);\nlabel_0:\n    r12d = 0x41b08a;\n    rax = getpwuid ();\n    edi = 0x18;\n    if (rax != 0) {\n        r12 = *(rax);\n        strlen (*(rax));\n        rdi &= 0xfffffffffffffff8;\n    }\n    fcn_00412980 (rax + 0x18);\n    *(rax) = ebp;\n    rbx = rax;\n    strcpy (rax + 0x10, r12);\n    rax = imp.__libc_start_main;\n    *(0x006257b8) = rbx;\n    *((rbx + 8)) = rax;\nlabel_2:\n    eax = 0;\n    if (*((rbx + 0x10)) != 0) {\n        rax = rbx + 0x10;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040e2f0",
            "funcStartAddr": "0x40e2f0",
            "funcEndAddr": "0x40e380",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40e2f0 */\n#include <stdint.h>\n \nuint64_t fcn_0040e2f0 (uint32_t arg1) {\n    rdi = arg1;\n    rbx = imp.__libc_start_main;\n    if (rbx == 0) {\n        goto label_0;\n    }\n    if (edi != *(rbx)) {\n        goto label_1;\n    }\n    goto label_2;\n    do {\n        if (*(rbx) == edi) {\n            goto label_2;\n        }\nlabel_1:\n        rbx = *((rbx + 8));\n    } while (rbx != 0);\nlabel_0:\n    r12d = 0x41b08a;\n    rax = getgrgid ();\n    edi = 0x18;\n    if (rax != 0) {\n        r12 = *(rax);\n        strlen (*(rax));\n        rdi &= 0xfffffffffffffff8;\n    }\n    fcn_00412980 (rax + 0x18);\n    *(rax) = ebp;\n    rbx = rax;\n    strcpy (rax + 0x10, r12);\n    rax = imp.__libc_start_main;\n    *(0x006257a8) = rbx;\n    *((rbx + 8)) = rax;\nlabel_2:\n    eax = 0;\n    if (*((rbx + 0x10)) != 0) {\n        rax = rbx + 0x10;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040e480",
            "funcStartAddr": "0x40e480",
            "funcEndAddr": "0x40e51c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40e480 */\n#include <stdint.h>\n \nint64_t fcn_0040e480 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = rsi + 0x14;\n    *((rsi + 0x14)) = 0;\n    r8d = 0x30;\n    rsi = 0xcccccccccccccccd;\n    r9 = 0x6666666666666667;\n    if (rdi < 0) {\n        goto label_0;\n    }\n    do {\n        rax = rdi;\n        rcx--;\n        rdx:rax = rax * rsi;\n        rdx >>= 3;\n        rax = rdx * 5;\n        rax += rax;\n        rdi -= rax;\n        edi += 0x30;\n        *(rcx) = dil;\n        rdi = rdx;\n    } while (rdx != 0);\n    rax = rcx;\n    return rax;\n    do {\n        rcx = rsi;\nlabel_0:\n        rax = rdi;\n        rsi = rcx - 1;\n        rdx:rax = rax * r9;\n        rax = rdi;\n        rax >>= 0x3f;\n        rdx >>= 2;\n        rdx -= rax;\n        rax = rdx * 5;\n        eax = r8 + rax*2;\n        eax -= edi;\n        rdi = rdx;\n        *((rcx - 1)) = al;\n    } while (rdx != 0);\n    rcx -= 2;\n    *((rsi - 1)) = 0x2d;\n    rax = rcx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040e520",
            "funcStartAddr": "0x40e520",
            "funcEndAddr": "0x40e568",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40e520 */\n#include <stdint.h>\n \nint64_t fcn_0040e520 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = rsi + 0x14;\n    *((rsi + 0x14)) = 0;\n    rsi = 0xcccccccccccccccd;\n    while (rdi > 9) {\n        rdi = rdx;\n        rax = rdx;\n        r8 = rdi;\n        rcx--;\n        rdx:rax = rax * rsi;\n        rdx >>= 3;\n        rax = rdx * 5;\n        rax += rax;\n        r8 -= rax;\n        rax = r8;\n        eax += 0x30;\n        *(rcx) = al;\n    }\n    rax = rcx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040e570",
            "funcStartAddr": "0x40e570",
            "funcEndAddr": "0x40e90b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40e570 */\n#include <stdint.h>\n \nuint64_t fcn_0040e570 (char * arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_14h;\n    char * s;\n    size_t size;\n    int64_t var_28h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r13 = rcx;\n    rbx = rsi;\n    *((rsp + 0x18)) = rdi;\n    *((rsp + 8)) = rdx;\n    *((rsp + 0x14)) = r8d;\n    rax = strlen (rdi);\n    r14 = rax;\n    if ((bpl & 2) == 0) {\n        goto label_10;\n    }\nlabel_2:\n    *(rsp) = 0;\n    r15 = r14;\n    r12d = 0;\nlabel_5:\n    rdx = *(r13);\n    if (rdx >= r15) {\n        goto label_11;\n    }\n    r14 = rdx;\n    eax = 0;\nlabel_9:\n    esi = *((rsp + 0x14));\n    *(r13) = rdx;\n    if (esi == 0) {\n        goto label_12;\n    }\nlabel_0:\n    r13d = 0;\n    if (esi != 1) {\n        r13 = rax;\n        eax &= 1;\n        r13 >>= 1;\n        rax += r13;\n    }\nlabel_1:\n    r15 = rax + r14;\n    if ((bpl & 4) != 0) {\n        r15 = r14;\n        eax = 0;\n    }\n    rsi = *((rsp + 8));\n    ebp &= 8;\n    edx = 0;\n    if (ebp != 0) {\n        r13 = rdx;\n    }\n    if (rsi == 0) {\n        goto label_13;\n    }\n    rbp = rbx + rsi - 1;\n    rdi = rbx;\n    if (rbx >= rbp) {\n        goto label_14;\n    }\n    if (rax != 0) {\n        goto label_15;\n    }\n    goto label_14;\n    do {\n        if (rbp <= rdi) {\n            goto label_14;\n        }\nlabel_15:\n        rdi++;\n        rdx = rbx;\n        *((rdi - 1)) = 0x20;\n        rdx -= rdi;\n        rdx += rax;\n    } while (rdx != 0);\nlabel_14:\n    rdx = rbp;\n    *(rdi) = 0;\n    rsi = *((rsp + 0x18));\n    rdx -= rdi;\n    if (rdx > r14) {\n        rdx = r14;\n    }\n    rax = mempcpy ();\n    rdx = rax;\n    if (rbp <= rax) {\n        goto label_16;\n    }\n    if (r13 != 0) {\n        goto label_17;\n    }\n    goto label_16;\n    do {\n        if (rbp <= rdx) {\n            goto label_16;\n        }\nlabel_17:\n        rdx++;\n        rcx = r13;\n        *((rdx - 1)) = 0x20;\n        rcx -= rdx;\n        rcx += rax;\n    } while (rcx != 0);\nlabel_16:\n    *(rdx) = 0;\nlabel_13:\n    r13 += r15;\nlabel_3:\n    free (*(rsp));\n    free (r12);\n    rax = r13;\n    return rax;\nlabel_7:\n    r12d = 0;\nlabel_11:\n    if (r15 >= rdx) {\n        goto label_18;\n    }\n    esi = *((rsp + 0x14));\n    rax = rdx;\n    rdx = r15;\n    rax -= r15;\n    *(r13) = rdx;\n    if (esi != 0) {\n        goto label_0;\n    }\nlabel_12:\n    r13 = rax;\n    eax = 0;\n    goto label_1;\nlabel_10:\n    r12 = rax;\n    rax = ctype_get_mb_cur_max ();\n    if (rax <= 1) {\n        goto label_2;\n    }\n    rax = mbstowcs (0, *((rsp + 0x18)), 0);\n    if (rax != -1) {\n        goto label_19;\n    }\n    if ((bpl & 1) != 0) {\n        goto label_2;\n    }\nlabel_6:\n    *(rsp) = 0;\n    r12d = 0;\n    r13 = 0xffffffffffffffff;\n    goto label_3;\nlabel_19:\n    r15 = rax + 1;\n    rax = r15*4;\n    rdi = rax;\n    *((rsp + 0x20)) = rax;\n    rax = malloc (rdi);\n    *(rsp) = rax;\n    if (rax == 0) {\n        goto label_20;\n    }\n    rax = mbstowcs (*(rsp), *((rsp + 0x18)), r15);\n    if (rax == 0) {\n        goto label_21;\n    }\n    rax = *(rsp);\n    rsi = *((rsp + 0x20));\n    *((rax + rsi - 4)) = 0;\n    edi = *(rax);\n    rdx = rax;\n    if (edi == 0) {\n        goto label_22;\n    }\n    *((rsp + 0x20)) = 0;\n    do {\n        *((rsp + 0x28)) = rdx;\n        eax = iswprint (rdi);\n        rdx = *((rsp + 0x28));\n        if (eax == 0) {\n            *(rdx) = 0xfffd;\n            *((rsp + 0x20)) = 1;\n        }\n        rdx += 4;\n        edi = *(rdx);\n    } while (edi != 0);\n    rdi = *(rsp);\n    rsi = r15;\n    eax = wcswidth ();\n    r15 = (int64_t) eax;\n    if (*((rsp + 0x20)) == 0) {\n        goto label_23;\n    }\n    rax = wcstombs (0, *(rsp), 0);\n    rax++;\n    *((rsp + 0x20)) = rax;\nlabel_8:\n    rax = malloc (*((rsp + 0x20)));\n    r12 = rax;\n    if (rax == 0) {\n        goto label_24;\n    }\n    r14 = *(rsp);\n    rax = *(r13);\n    edi = *(r14);\n    *((rsp + 0x18)) = rax;\n    if (edi == 0) {\n        goto label_25;\n    }\n    r15d = 0;\n    while (eax != 0xffffffff) {\n        rax = (int64_t) eax;\nlabel_4:\n        rax += r15;\n        if (*((rsp + 0x18)) < rax) {\n            goto label_26;\n        }\n        r14 += 4;\n        edi = *(r14);\n        r15 = rax;\n        if (edi == 0) {\n            goto label_26;\n        }\n        eax = wcwidth ();\n    }\n    *(r14) = 0xfffd;\n    eax = 1;\n    goto label_4;\nlabel_20:\n    r15 = r14;\n    r12d = 0;\n    if ((bpl & 1) != 0) {\n        goto label_5;\n    }\n    goto label_6;\nlabel_22:\n    rdi = *(rsp);\n    rsi = r15;\n    eax = wcswidth ();\n    r15 = (int64_t) eax;\nlabel_23:\n    rdx = *(r13);\n    if (rdx >= r15) {\n        goto label_7;\n    }\n    rax = r12 + 1;\n    *((rsp + 0x20)) = rax;\n    goto label_8;\nlabel_25:\n    r14 = *(rsp);\n    r15d = 0;\nlabel_26:\n    *(r14) = 0;\n    rax = wcstombs (r12, *(rsp), *((rsp + 0x20)));\n    *((rsp + 0x18)) = r12;\n    r14 = rax;\n    goto label_5;\nlabel_24:\n    if ((bpl & 1) != 0) {\n        goto label_5;\n    }\n    r13 = 0xffffffffffffffff;\n    goto label_3;\nlabel_21:\n    r15 = r14;\n    r12d = 0;\n    goto label_5;\nlabel_18:\n    rdx = r15;\n    eax = 0;\n    goto label_9;\n}\n"
        },
        {
            "funcName": "fcn_0040e9b0",
            "funcStartAddr": "0x40e9b0",
            "funcEndAddr": "0x40eb63",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40e9b0 */\n#include <stdint.h>\n \nuint64_t fcn_0040e9b0 (int64_t arg1, int64_t arg3) {\n    wint_t wc;\n    mbstate_t * ps;\n    rdi = arg1;\n    rdx = arg3;\n    r15d = edx;\n    r13 = rdi + rsi;\n    rbx = rdi;\n    rax = ctype_get_mb_cur_max ();\n    if (rax <= 1) {\n        goto label_7;\n    }\n    r12d = 0;\n    if (rbx >= r13) {\n        goto label_5;\n    }\n    r14d = 1;\n    while (al <= 0x3f) {\n        if (al < 0x25) {\n            eax -= 0x20;\n            if (al > 3) {\n                goto label_8;\n            }\n        }\nlabel_0:\n        rbx++;\n        r12d++;\nlabel_1:\n        if (rbx >= r13) {\n            goto label_5;\n        }\n        eax = *(rbx);\n    }\n    if (al < 0x41) {\n        goto label_8;\n    }\n    if (al <= 0x5f) {\n        goto label_0;\n    }\n    eax -= 0x61;\n    if (al <= 0x1d) {\n        goto label_0;\n    }\nlabel_8:\n    *((rsp + 8)) = 0;\n    goto label_9;\nlabel_2:\n    edx = 0x7fffffff;\n    edx -= r12d;\n    if (edx < eax) {\n        goto label_10;\n    }\n    r12d += eax;\nlabel_3:\n    rbx += rbp;\n    eax = mbsinit (rsp + 8);\n    if (eax != 0) {\n        goto label_1;\n    }\nlabel_9:\n    rdx -= rbx;\n    rax = fcn_00416e80 (rsp + 4, rbx, r13, rsp + 8);\n    if (rax == -1) {\n        goto label_11;\n    }\n    if (rax == 0xfffffffffffffffe) {\n        goto label_12;\n    }\n    edi = *((rsp + 4));\n    if (rax == 0) {\n    }\n    eax = wcwidth ();\n    if (eax >= 0) {\n        goto label_2;\n    }\n    if ((r15b & 2) != 0) {\n        goto label_4;\n    }\n    eax = iswcntrl (*((rsp + 4)));\n    if (eax != 0) {\n        goto label_3;\n    }\n    if (r12d == 0x7fffffff) {\n        goto label_10;\n    }\n    r12d++;\n    goto label_3;\nlabel_11:\n    if ((r15b & 1) == 0) {\n        goto label_0;\n    }\nlabel_4:\n    r12d = 0xffffffff;\n    do {\nlabel_5:\n        eax = r12d;\n        return rax;\nlabel_7:\n        r12d = 0;\n    } while (rbx >= r13);\n    rax = ctype_b_loc ();\n    r12d = 0;\n    r15d &= 2;\n    rdx = *(rax);\nlabel_6:\n    rbx++;\n    eax = *((rbx - 1));\n    eax = *((rdx + rax*2));\n    if ((ah & 0x40) != 0) {\n        goto label_13;\n    }\n    if (r15d != 0) {\n        goto label_4;\n    }\n    if ((al & 2) != 0) {\n        goto label_14;\n    }\nlabel_13:\n    if (r12d == 0x7fffffff) {\n        goto label_5;\n    }\n    r12d++;\nlabel_14:\n    if (r13 != rbx) {\n        goto label_6;\n    }\n    goto label_5;\nlabel_12:\n    if ((r15b & 1) != 0) {\n        goto label_4;\n    }\n    r12d++;\n    rbx = r13;\n    goto label_1;\nlabel_10:\n    r12d = 0x7fffffff;\n    goto label_5;\n}\n"
        },
        {
            "funcName": "fcn_0040eb70",
            "funcStartAddr": "0x40eb70",
            "funcEndAddr": "0x40eb93",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40eb70 */\n#include <stdint.h>\n \nuint64_t fcn_0040eb70 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rdi;\n    rax = strlen (rdi);\n    edx = ebp;\n    rdi = rbx;\n    rsi = rax;\n    return void (*0x40e9b0)() ();\n}\n"
        },
        {
            "funcName": "fcn_0040edd0",
            "funcStartAddr": "0x40edd0",
            "funcEndAddr": "0x40f00f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40edd0 */\n#include <stdint.h>\n \nuint64_t fcn_0040edd0 (int64_t arg1, uint32_t arg2, uint32_t arg3) {\n    uint32_t var_8h;\n    uint32_t var_10h;\n    uint32_t var_18h;\n    size_t n;\n    int64_t var_28h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\nlabel_0:\n    r13 = rcx;\n    rbx = rdi;\n    *((rsp + 8)) = rsi;\n    *((rsp + 0x18)) = rdx;\n    if (rsi > 2) {\n        goto label_5;\n    }\n    while (eax <= 0) {\nlabel_1:\n        return;\n        r12 = *((rdi + 8));\n        rbp = *(rdi);\n        rsi = r12;\n        rdi = rbp;\n        eax = void (*rcx)() ();\n    }\n    *(rbx) = r12;\n    *((rbx + 8)) = rbp;\n    return eax;\nlabel_5:\n    r14 = *((rsp + 8));\n    r15 = *((rsp + 0x18));\n    rcx = r14;\n    rcx >>= 1;\n    rsi -= rcx;\n    *((rsp + 0x10)) = rcx;\n    rcx = r13;\n    *((rsp + 0x28)) = rdi;\n    void (*0x40eba0)(uint64_t, uint64_t, uint64_t) (rdi + rcx*8, r14, r15);\n    goto label_0;\n    if (r14 != 3) {\n        goto label_6;\n    }\n    rbp = *(rbx);\n    *(r15) = rbp;\nlabel_4:\n    rax = *((rsp + 0x28));\n    r15d = 0;\n    r14 = *((rsp + 0x10));\n    r12 = *(rax);\n    do {\nlabel_2:\n        rsi = r12;\n        rdi = rbp;\n        r15++;\n        eax = void (*r13)(uint64_t) (0);\n        if (eax <= 0) {\n            goto label_7;\n        }\n        *((rbx + r15*8 - 8)) = r12;\n        r14++;\n        if (*((rsp + 8)) == r14) {\n            goto label_8;\n        }\n        r12 = *((rbx + r14*8));\n    } while (1);\nlabel_7:\n    rax = *(rsp);\n    *((rbx + r15*8 - 8)) = rbp;\n    if (*((rsp + 0x10)) == rax) {\n        goto label_1;\n    }\n    rdx = *((rsp + 0x18));\n    rbp = *((rdx + rax*8));\n    goto label_2;\nlabel_8:\n    rax = *(rsp);\n    rdi = rbx + r15*8;\n    r15 = *((rsp + 0x10));\n    rcx = *((rsp + 0x18));\n    r15 -= rax;\n    rdx = r15*8;\n    rsi = rcx + rax*8;\n    void (*0x402b40)() ();\nlabel_6:\n    r14 = *((rsp + 8));\n    r15 = *((rsp + 0x18));\n    rcx = r13;\n    r14 >>= 2;\n    r12 = rbx + r14*8;\n    rsi -= r14;\n    *((rsp + 0x20)) = r14;\n    void (*0x40eba0)(uint64_t, uint64_t*, uint64_t) (r12, *((rsp + 0x10)), r15);\n    goto label_0;\n    rcx = r13;\n    rax = void (*0x40eba0)(uint64_t, uint64_t, uint64_t) (rbx, r14, r15);\n    goto label_0;\n    rbp = *(rbx);\n    r12 = *(r12);\n    do {\nlabel_3:\n        rsi = r12;\n        rdi = rbp;\n        r15 += 8;\n        eax = void (*r13)(uint64_t) (0);\n        if (eax <= 0) {\n            goto label_9;\n        }\n        *((r15 - 8)) = r12;\n        r14++;\n        if (*((rsp + 0x10)) == r14) {\n            goto label_10;\n        }\n        r12 = *((rbx + r14*8));\n    } while (1);\nlabel_9:\n    rax = *(rsp);\n    *((r15 - 8)) = rbp;\n    if (*((rsp + 0x20)) != rax) {\n        rbp = *((rbx + rax*8));\n        goto label_3;\n    }\n    rax = *((rsp + 0x10));\n    *(rsp) = r14;\n    *((rsp + 0x20)) = rax;\nlabel_10:\n    rax = *(rsp);\n    rdx -= rax;\n    rdx <<= 3;\n    memcpy (r15, rbx + rax*8, *((rsp + 0x20)));\n    rax = *((rsp + 0x18));\n    rbp = *(rax);\n    goto label_4;\n    rax = rdi + rsi*8;\n    rcx = rdx;\n    rdx = rax;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040ede0",
            "funcStartAddr": "0x40ede0",
            "funcEndAddr": "0x40ee21",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40ede0 */\n#include <stdint.h>\n \nuint64_t fcn_0040ede0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r12 = rsi;\n    rbx = rdx - 1;\n    rax = ctype_tolower_loc ();\n    do {\n        ecx = *((r12 + rbx));\n        rdx = *(rax);\n        edx = *((rdx + rcx*4));\n        *((rbp + rbx)) = dl;\n        rbx--;\n    } while (rbx != -1);\nlabel_0:\n    rax = rbp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040ee30",
            "funcStartAddr": "0x40ee30",
            "funcEndAddr": "0x40ee71",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40ee30 */\n#include <stdint.h>\n \nuint64_t fcn_0040ee30 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r12 = rsi;\n    rbx = rdx - 1;\n    rax = ctype_toupper_loc ();\n    do {\n        ecx = *((r12 + rbx));\n        rdx = *(rax);\n        edx = *((rdx + rcx*4));\n        *((rbp + rbx)) = dl;\n        rbx--;\n    } while (rbx != -1);\nlabel_0:\n    rax = rbp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040ee80",
            "funcStartAddr": "0x40ee80",
            "funcEndAddr": "0x410645",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x40ee80 */\n#include <stdint.h>\n \nvoid fcn_0040ee80 (int64_t arg_4d8h_2, tm * arg_4d0h, int64_t arg_4d8h, int64_t arg1, char * arg11, int64_t arg2, char * arg3, tm * arg4, int64_t arg6, char * arg7, int64_t arg9) {\n    tm * timeptr;\n    int64_t var_10h;\n    int64_t var_18h;\n    char * var_20h;\n    int64_t var_2bh;\n    int64_t var_2ch;\n    char * var_30h;\n    char * var_40h;\n    char * var_48h;\n    char * var_50h;\n    char * var_58h;\n    char * var_60h;\n    char * var_68h;\n    char * format;\n    int64_t var_72h;\n    int64_t var_73h;\n    int64_t var_87h;\n    char * s;\n    int64_t var_91h;\n    int64_t var_a0h;\n    int64_t var_b0h;\n    int64_t var_c0h;\n    rdi = arg1;\n    xmm4 = arg11;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r9 = arg6;\n    xmm0 = arg7;\n    xmm2 = arg9;\nlabel_12:\n    eax = 0x41b08a;\n    r15 = rdi;\n    rbx = rdx;\n    r12 = *((rcx + 0x30));\n    r11d = *((rcx + 8));\n    *(rsp) = rsi;\n    *((rsp + 8)) = rcx;\n    *((rsp + 0x18)) = r9;\n    if (r12 == 0) {\n        r12 = rax;\n    }\n    *((rsp + 0x2b)) = r8b;\n    if (r11d <= 0xc) {\n        goto label_52;\n    }\n    r11d -= 0xc;\nlabel_0:\n    eax = *(rbx);\n    r14d = 0;\n    if (al == 0) {\n        goto label_53;\n    }\n    rdi = rsp + 0x72;\n    *((rsp + 0x2c)) = r11d;\n    *((rsp + 0x10)) = rdi;\n    *((rsp + 0x20)) = r12;\n    do {\n        if (al == 0x25) {\n            goto label_54;\n        }\n        rdx = *(rsp);\n        rdx -= r14;\n        if (rdx <= 1) {\n            goto label_8;\n        }\n        if (r15 != 0) {\n            *(r15) = al;\n            r15++;\n        }\n        r14++;\n        r8 = rbx;\nlabel_7:\n        eax = *((r8 + 1));\n        rbx = r8 + 1;\n    } while (al != 0);\nlabel_53:\n    if (r15 != 0) {\n        if (*(rsp) == 0) {\n            goto label_55;\n        }\n        *(r15) = 0;\n        goto label_55;\nlabel_8:\n        r14d = 0;\n    }\nlabel_55:\n    rax = r14;\n    return rax;\nlabel_52:\n    eax = 0xc;\n    if (r11d == 0) {\n        r11d = eax;\n    }\n    goto label_0;\nlabel_54:\n    r11d = *((rsp + 0x2b));\n    r8d = 0;\n    r12d = 0;\nlabel_1:\n    rbx++;\n    eax = *(rbx);\n    ecx = eax;\n    r9d = eax;\n    if (al == 0x30) {\n        goto label_2;\n    }\n    if (al > 0x30) {\n        do {\n            goto label_56;\n        }\n        if (al != 0x23) {\n            goto label_57;\n        }\n        rbx++;\n        eax = *(rbx);\n        r8d = 1;\n        ecx = eax;\n        r9d = eax;\n    } while (al != 0x30);\n    do {\nlabel_2:\n        r12d = eax;\n        goto label_1;\nlabel_57:\n    } while (al == 0x2d);\n    eax -= 0x30;\n    if (eax <= 9) {\n        goto label_58;\n    }\nlabel_3:\n    if (cl == 0x45) {\n        goto label_59;\n    }\n    if (cl == 0x4f) {\n        goto label_59;\n    }\n    r9d = 0;\nlabel_4:\n    if (cl > 0x7a) {\n        goto label_25;\n    }\n    eax = (int32_t) cl;\n    /* switch table (123 cases) at 0x41d900 */\nlabel_56:\n    if (al == 0x5e) {\n        r11d = 1;\n        goto label_1;\n    }\n    if (al == 0x5f) {\n        goto label_2;\n    }\n    eax -= 0x30;\n    if (eax > 9) {\n        goto label_3;\n    }\nlabel_58:\n    ebp = 0;\n    do {\n        eax = *((rbx + 1));\n        rsi = rbx + 1;\n        ecx = eax;\n        edx = rax - 0x30;\n        if (ebp > 0xccccccc) {\n            goto label_60;\n        }\n        edi = *(rbx);\n        if (ebp == 0xccccccc) {\n            goto label_61;\n        }\nlabel_5:\n        r9d = rbp + rbp*4;\n        rbx = rsi;\n        ebp = rdi + r9*2 - 0x30;\nlabel_6:\n    } while (edx <= 9);\n    r9d = eax;\n    goto label_3;\nlabel_59:\n    ecx = *((rbx + 1));\n    rbx++;\n    goto label_4;\nlabel_61:\n    if (dil <= 0x37) {\n        goto label_5;\n    }\nlabel_60:\n    if (edx <= 9) {\n        eax = *((rbx + 2));\n        rbx += 2;\n        ecx = eax;\n        edx = rax - 0x30;\n        goto label_6;\n    }\n    r9d = eax;\n    rbx = rsi;\n    goto label_3;\n    if (r9d != 0) {\n        goto label_25;\n    }\n    if (r8b != 0) {\n        r11d = r8d;\n    }\nlabel_23:\n    edx = 0x2520;\n    rax = *((rsp + 0x10));\n    r8 = rbx;\n    r13d = 0;\n    *((rsp + 0x70)) = dx;\n    r9d = 0;\nlabel_9:\n    *(rax) = cl;\n    *((rax + 1)) = 0;\n    *((rsp + 0x30)) = r8;\n    *((rsp + 0x48)) = r9d;\n    *((rsp + 0x40)) = r11b;\n    rax = strftime (rsp + 0x90, 0x400, rsp + 0x70, *((rsp + 8)));\n    r8 = *((rsp + 0x30));\n    if (rax == 0) {\n        goto label_7;\n    }\n    rcx = rax - 1;\n    eax = 0;\n    rdx = *(rsp);\n    __asm (\"cmovns eax, ebp\");\n    rax = (int64_t) eax;\n    rbx = rax;\n    if (rcx >= rax) {\n        rbx = rcx;\n    }\n    rdx -= r14;\n    if (rdx <= rbx) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        r9d = *((rsp + 0x48));\n        r11d = *((rsp + 0x40));\n        if (r9d == 0) {\n            if (rcx >= rax) {\n                goto label_34;\n            }\n            rdx = (int64_t) ebp;\n            *((rsp + 0x48)) = rcx;\n            rdx -= rcx;\n            *((rsp + 0x40)) = r8;\n            rbp = r15 + rdx;\n            *((rsp + 0x30)) = r11b;\n            if (r12d == 0x30) {\n                goto label_62;\n            }\n            r15 = rbp;\n            memset (r15, 0x20, rdx);\n            rcx = *((rsp + 0x48));\n            r8 = *((rsp + 0x40));\n            r11d = *((rsp + 0x30));\n        }\nlabel_34:\n        *((rsp + 0x40)) = r8;\n        rsi = rsp + 0x91;\n        rdx = rcx;\n        rdi = r15;\n        *((rsp + 0x30)) = rcx;\n        if (r13b != 0) {\n            goto label_63;\n        }\nlabel_11:\n        if (r11b == 0) {\n            goto label_64;\n        }\n        fcn_0040ee30 (rdi, rsi, rdx);\n        rcx = *((rsp + 0x30));\n        r8 = *((rsp + 0x40));\nlabel_31:\n        r15 += rcx;\n    }\nlabel_10:\n    r14 += rbx;\n    goto label_7;\n    if (r9d == 0x4f) {\n        goto label_25;\n    }\n    r13d = 0;\nlabel_15:\n    edi = 0x2520;\n    *((rsp + 0x70)) = di;\n    if (r9d != 0) {\n        goto label_65;\n    }\n    r8 = rbx;\n    rax = *((rsp + 0x10));\n    goto label_9;\n    rax = *((rsp + 8));\n    *((rsp + 0x40)) = r11b;\n    r13 = rsp + 0x87;\n    __asm (\"movdqu xmm4, xmmword [rax + 0x20]\");\n    __asm (\"movdqu xmm0, xmmword [rax]\");\n    __asm (\"movdqu xmm2, xmmword [rax + 0x10]\");\n    rax = *((rax + 0x30));\n    *((rsp + 0x90)) = xmm0;\n    *((rsp + 0xa0)) = xmm2;\n    *((rsp + 0x30)) = xmm4;\n    *((rsp + 0xb0)) = xmm4;\n    *((rsp + 0xc0)) = rax;\n    rax = fcn_004177a0 (*((rsp + 0x4d0)), rsp + 0x90);\n    r11d = *((rsp + 0x40));\n    edi = 0x30;\n    rsi = rax;\n    rcx = rax;\n    do {\n        rax = 0x6666666666666667;\n        rdx:rax = rax * rcx;\n        rax = rcx;\n        rax >>= 0x3f;\n        rdx >>= 2;\n        rdx -= rax;\n        rax = rdx;\n        rdx *= 5;\n        rdx += rdx;\n        rcx -= rdx;\n        rdx = rcx;\n        rcx = rax;\n        eax = edi;\n        eax -= edx;\n        edx += 0x30;\n        __asm (\"cmovs edx, eax\");\n        r13--;\n        *(r13) = dl;\n    } while (rcx != 0);\n    r10d = 1;\n    if (ebp > 0) {\n        r10d = ebp;\n    }\n    if (rsi < 0) {\n        goto label_66;\n    }\nlabel_19:\n    rax = *(rsp);\n    rcx = rsp + 0x87;\n    rcx -= r13;\n    rax -= r14;\n    if (r12d != 0x2d) {\n        r9d = r10d;\n        r9d -= ecx;\n        if (r9d > 0) {\n            goto label_67;\n        }\n    }\n    r9d = 0;\n    r8 = rbx;\n    __asm (\"cmovns r9d, ebp\");\n    r9 = (int64_t) r9d;\nlabel_20:\n    rbx = r9;\n    if (rcx >= r9) {\n        rbx = rcx;\n    }\n    if (rbx >= rax) {\n        goto label_8;\n    }\n    if (r15 == 0) {\n        goto label_10;\n    }\n    if (r10d == 0) {\n        if (rcx >= r9) {\n            goto label_35;\n        }\n        rdx = (int64_t) ebp;\n        *((rsp + 0x48)) = rcx;\n        rdx -= rcx;\n        *((rsp + 0x40)) = r8;\n        rbp = r15 + rdx;\n        *((rsp + 0x30)) = r11b;\n        if (r12d == 0x30) {\n            goto label_68;\n        }\n        r15 = rbp;\n        memset (r15, 0x20, rdx);\n        rcx = *((rsp + 0x48));\n        r8 = *((rsp + 0x40));\n        r11d = *((rsp + 0x30));\n    }\nlabel_35:\n    *((rsp + 0x40)) = r8;\n    rdx = rcx;\n    rsi = r13;\n    rdi = r15;\n    *((rsp + 0x30)) = rcx;\n    goto label_11;\n    if (r9d != 0) {\n        goto label_25;\n    }\n    *((rsp + 0x30)) = \"%m/%d/%y\";\nlabel_13:\n    eax = *((rsp + 0x4d8));\n    r13d = (int32_t) r11b;\n    rax = fcn_0040ee80 (0, 0xffffffffffffffff, *((rsp + 0x40)), *((rsp + 0x18)), r13d, *((rsp + 0x28)));\n    goto label_12;\n    r10 = rax;\n    eax = 0;\n    r11 = *(rsp);\n    __asm (\"cmovns eax, ebp\");\n    rax = (int64_t) eax;\n    rsi = rax;\n    if (r10 >= rax) {\n        rsi = r10;\n    }\n    r11 -= r14;\n    *((rsp + 0x40)) = rsi;\n    if (r11 <= rsi) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        if (r10 < rax) {\n            rdx = (int64_t) ebp;\n            *((rsp + 0x50)) = r10;\n            rdx -= r10;\n            *((rsp + 0x48)) = r11;\n            rbp = r15 + rdx;\n            if (r12d == 0x30) {\n                goto label_69;\n            }\n            r15 = rbp;\n            memset (r15, 0x20, rdx);\n            r10 = *((rsp + 0x50));\n            r11 = *((rsp + 0x48));\n        }\nlabel_38:\n        eax = *((rsp + 0x4d8));\n        *((rsp + 0x48)) = r10;\n        fcn_0040ee80 (r15, r11, *((rsp + 0x40)), *((rsp + 0x18)), r13d, *((rsp + 0x28)));\n        goto label_12;\n        r10 = *((rsp + 0x58));\n        r15 += r10;\n    }\n    r14 += *((rsp + 0x40));\n    r8 = rbx;\n    goto label_7;\n    if (r9d != 0) {\n        goto label_25;\n    }\n    *((rsp + 0x30)) = \"%Y-%m-%d\";\n    goto label_13;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rdx = *((rsp + 8));\n    esi = *((rdx + 0x14));\n    r10d = *((rdx + 0x1c));\n    r13d = *((rdx + 0x18));\n    edx = 0x92492493;\n    eax = esi;\n    *((rsp + 0x30)) = esi;\n    eax >>= 0x1f;\n    eax &= 0x190;\n    edi = rsi + rax - 0x64;\n    esi = r10d;\n    esi -= r13d;\n    esi += 0x17e;\n    eax = esi;\n    edx:eax = eax * edx;\n    eax = rdx + rsi;\n    edx = esi;\n    edx >>= 0x1f;\n    eax >>= 2;\n    eax -= edx;\n    edx = rax*8;\n    edx -= eax;\n    eax = edx;\n    edx = r10d;\n    edx -= esi;\n    r8d = rdx + rax + 3;\n    if (r8d < 0) {\n        goto label_70;\n    }\n    eax = 0x16d;\n    if ((dil & 3) == 0) {\n        esi = 0x51eb851f;\n        eax = edi;\n        edx:eax = eax * esi;\n        eax = edi;\n        eax >>= 0x1f;\n        *((rsp + 0x40)) = eax;\n        esi = edx;\n        edx >>= 5;\n        edx -= eax;\n        eax = 0x16e;\n        edx *= 0x64;\n        if (edi != edx) {\n            goto label_71;\n        }\n        esi >>= 7;\n        eax = esi;\n        eax -= *((rsp + 0x40));\n        eax *= 0x190;\n        al = (edi == eax) ? 1 : 0;\n        eax = (int32_t) al;\n        eax += 0x16d;\n    }\nlabel_71:\n    esi = r10d;\n    edx = 0x92492493;\n    esi -= eax;\n    edi = esi;\n    edi -= r13d;\n    edi += 0x17e;\n    eax = edi;\n    esi -= edi;\n    edx:eax = eax * edx;\n    eax = rdx + rdi;\n    edx = edi;\n    edx >>= 0x1f;\n    eax >>= 2;\n    eax -= edx;\n    edx = rax*8;\n    edx -= eax;\n    r13d = rsi + rdx + 3;\n    __asm (\"cmovns r8d, r13d\");\n    r13d >>= 0x1f;\n    r13d++;\nlabel_39:\n    if (cl == 0x47) {\n        goto label_72;\n    }\n    if (cl != 0x67) {\n        goto label_73;\n    }\n    eax = *((rsp + 0x30));\n    esi = 0x51eb851f;\n    r8d = *((rsp + 0x30));\n    r10d = 2;\n    edx:eax = eax * esi;\n    edi = r8d;\n    edx >>= 5;\n    eax = edx;\n    edx = r8d;\n    edx >>= 0x1f;\n    eax -= edx;\n    eax *= 0x64;\n    edi -= eax;\n    edi += r13d;\n    eax = edi;\n    edx:eax = eax * esi;\n    eax = edi;\n    eax >>= 0x1f;\n    esi = edx;\n    esi >>= 5;\n    esi -= eax;\n    esi *= 0x64;\n    edi -= esi;\n    esi = edi;\n    if (edi < 0) {\n        eax = 0xfffff894;\n        edx = edi;\n        esi += 0x64;\n        eax -= r13d;\n        edx = -edx;\n        if (r8d < eax) {\n            esi = edx;\n        }\n    }\nlabel_14:\n    eax = esi;\n    *((rsp + 0x30)) = 0;\n    edi = 0;\n    eax >>= 0x1f;\n    r8d = eax;\nlabel_17:\n    if (r9d != 0x4f) {\n        goto label_74;\n    }\n    if (r8b != 0) {\n        goto label_75;\n    }\nlabel_18:\n    eax = 0x2520;\n    r13d = 0;\n    *((rsp + 0x70)) = ax;\nlabel_51:\n    *((rsp + 0x72)) = r9b;\n    r8 = rbx;\n    r9d = r10d;\n    rax = rsp + 0x73;\n    goto label_9;\n    eax = 0;\n    rdi = *((rsp + 0x20));\n    *((rsp + 0x48)) = r8b;\n    if (r8b != 0) {\n        r11d = eax;\n    }\n    *((rsp + 0x40)) = r11b;\n    rax = strlen (rdi);\n    rdx = *(rsp);\n    r13 = rax;\n    eax = 0;\n    __asm (\"cmovns eax, ebp\");\n    rax = (int64_t) eax;\n    rsi = rax;\n    if (r13 >= rax) {\n        rsi = r13;\n    }\n    rdx -= r14;\n    *((rsp + 0x30)) = rsi;\n    if (rdx <= rsi) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        r11d = *((rsp + 0x40));\n        r8d = *((rsp + 0x48));\n        if (r13 < rax) {\n            rdx = (int64_t) ebp;\n            rdx -= r13;\n            rbp = r15 + rdx;\n            if (r12d == 0x30) {\n                goto label_76;\n            }\n            *((rsp + 0x48)) = r8b;\n            r15 = rbp;\n            *((rsp + 0x40)) = r11b;\n            memset (r15, 0x20, rdx);\n            r8d = *((rsp + 0x48));\n            r11d = *((rsp + 0x40));\n        }\nlabel_48:\n        rdx = r13;\n        rsi = *((rsp + 0x20));\n        rdi = r15;\n        if (r8b != 0) {\n            goto label_77;\n        }\n        if (r11b == 0) {\n            goto label_78;\n        }\n        fcn_0040ee30 (rdi, rsi, rdx);\nlabel_42:\n        r15 += r13;\n    }\n    r14 += *((rsp + 0x30));\n    r8 = rbx;\n    goto label_7;\n    *((rsp + 0x30)) = 0x41b317;\n    goto label_13;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    r10d = 2;\n    esi = *((rax + 8));\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    esi = *((rsp + 0x2c));\n    r10d = 2;\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    r10d = 2;\n    esi = *((rax + 4));\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    if (ebp != 0xffffffff) {\n        goto label_79;\n    }\n    esi = *((rsp + 0x4d8));\n    r10d = 9;\n    goto label_14;\n    r13d = 1;\nlabel_28:\n    eax = 0;\n    ecx = 0x70;\n    if (r8b != 0) {\n        r13d = r8d;\n    }\n    if (r8b != 0) {\n        r11d = eax;\n    }\n    goto label_15;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    esi = *((rax + 8));\nlabel_16:\n    r10d = 2;\n    if (r12d == 0x30) {\n        goto label_14;\n    }\n    if (r12d == 0x2d) {\n        goto label_14;\n    }\n    r12d = 0x5f;\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    esi = *((rsp + 0x2c));\n    goto label_16;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    *((rsp + 0x30)) = 0;\n    r10d = 2;\n    esi = *((rax + 0x10));\n    r8b = (esi < 0xffffffff) ? 1 : 0;\n    esi++;\n    edi = 0;\n    goto label_17;\n    r13d = 0;\n    eax = 1;\n    __asm (\"cmovns r13d, ebp\");\n    r13 = (int64_t) r13d;\n    if (r13 == 0) {\n        r13 = rax;\n    }\n    rax = *(rsp);\n    rax -= r14;\n    if (rax <= r13) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        if (ebp > 1) {\n            rdx = (int64_t) ebp;\n            rdx--;\n            rbp = r15 + rdx;\n            if (r12d == 0x30) {\n                goto label_80;\n            }\n            r15 = rbp;\n            memset (r15, 0x20, rdx);\n        }\nlabel_44:\n        *(r15) = 0xa;\n        r15++;\n    }\nlabel_21:\n    r14 += r13;\n    r8 = rbx;\n    goto label_7;\n    rax = *((rsp + 8));\n    r10d = 1;\n    eax = *((rax + 0x10));\n    if (r9d == 0x4f) {\n        goto label_18;\n    }\n    edx = rax * 5;\n    *((rsp + 0x30)) = 0;\n    r8d = 0;\n    edi = 0;\n    esi = rax + rdx*2;\n    esi >>= 5;\n    esi++;\nlabel_22:\n    *((rsp + 0x40)) = r8b;\n    rcx = rsp + 0x87;\n    r9d = 0xcccccccd;\n    do {\n        r13 = rcx - 1;\n        if ((dil & 1) != 0) {\n            rax = rcx - 2;\n            *((rcx - 1)) = 0x3a;\n            rcx = r13;\n            r13 = rax;\n        }\n        eax = esi;\n        r8d = esi;\n        edi >>= 1;\n        edx:eax = eax * r9d;\n        edx >>= 3;\n        eax = rdx * 5;\n        eax += eax;\n        r8d -= eax;\n        eax = r8d;\n        eax += 0x30;\n        *((rcx - 1)) = al;\n        rcx = r13;\n        if (esi <= 9) {\n            if (edi == 0) {\n                goto label_81;\n            }\n        }\n        esi = edx;\n    } while (1);\nlabel_81:\n    r8d = *((rsp + 0x40));\n    if (r10d < ebp) {\n        r10d = ebp;\n    }\n    if (r8b != 0) {\n        goto label_66;\n    }\n    if (*((rsp + 0x30)) == 0) {\n        goto label_19;\n    }\n    if (r12d == 0x2d) {\n        goto label_82;\n    }\n    *((rsp + 0x30)) = 0x2b;\nlabel_32:\n    rcx = rsp + 0x87;\n    r9d = r10 - 1;\n    rax = *(rsp);\n    rcx -= r13;\n    r9d -= ecx;\n    rax -= r14;\n    if (r9d <= 0) {\n        goto label_83;\n    }\n    if (r12d == 0x5f) {\n        goto label_84;\n    }\n    rdx = (int64_t) r10d;\n    if (rdx >= rax) {\n        goto label_8;\n    }\n    edx = 0;\n    esi = 1;\n    __asm (\"cmovns edx, ebp\");\n    rdx = (int64_t) edx;\n    if (rdx != 0) {\n        rsi = rdx;\n    }\n    if (rsi >= rax) {\n        goto label_8;\n    }\n    r14 += rsi;\n    r9 = (int64_t) r9d;\n    r8 = rbx;\n    if (r15 != 0) {\n        if (r10d == 0) {\n            if (rdx <= 1) {\n                goto label_49;\n            }\n            rdx = (int64_t) ebp;\n            *((rsp + 0x58)) = r9;\n            rdx--;\n            *((rsp + 0x50)) = rcx;\n            rbp = r15 + rdx;\n            *((rsp + 0x48)) = r10d;\n            *((rsp + 0x40)) = r11b;\n            if (r12d == 0x30) {\n                goto label_85;\n            }\n            r15 = rbp;\n            memset (r15, 0x20, rdx);\n            r9 = *((rsp + 0x58));\n            rcx = *((rsp + 0x50));\n            r10d = *((rsp + 0x48));\n            r11d = *((rsp + 0x40));\n        }\nlabel_49:\n        eax = *((rsp + 0x30));\n        r15++;\n        r8 = rbx;\n        *((r15 - 1)) = al;\nlabel_41:\n        if (r15 == 0) {\n            goto label_86;\n        }\n        rdx = r9;\n        *((rsp + 0x58)) = rcx;\n        *((rsp + 0x50)) = r10d;\n        *((rsp + 0x48)) = r8;\n        *((rsp + 0x40)) = r11b;\n        *((rsp + 0x30)) = r9;\n        memset (r15, 0x30, rdx);\n        r9 = *((rsp + 0x30));\n        rcx = *((rsp + 0x58));\n        r10d = *((rsp + 0x50));\n        r8 = *((rsp + 0x48));\n        r11d = *((rsp + 0x40));\n        r15 += r9;\n    }\nlabel_86:\n    rax = *(rsp);\n    r14 += r9;\n    ebp = 0;\n    r9d = 0;\n    rax -= r14;\n    goto label_20;\n    r13d = 0;\n    eax = 1;\n    __asm (\"cmovns r13d, ebp\");\n    r13 = (int64_t) r13d;\n    if (r13 == 0) {\n        r13 = rax;\n    }\n    rax = *(rsp);\n    rax -= r14;\n    if (rax <= r13) {\n        goto label_8;\n    }\n    if (r15 == 0) {\n        goto label_21;\n    }\n    if (ebp > 1) {\n        rdx = (int64_t) ebp;\n        rdx--;\n        rbp = r15 + rdx;\n        if (r12d == 0x30) {\n            goto label_87;\n        }\n        r15 = rbp;\n        memset (r15, 0x20, rdx);\n    }\nlabel_45:\n    *(r15) = 9;\n    r15++;\n    goto label_21;\n    rax = *((rsp + 8));\n    edx = 0x92492493;\n    r10d = 1;\n    eax = *((rax + 0x18));\n    esi = rax + 6;\n    *((rsp + 0x30)) = eax;\n    eax = esi;\n    edx:eax = eax * edx;\n    eax = rdx + rsi;\n    edx = esi;\n    edx >>= 0x1f;\n    eax >>= 2;\n    eax -= edx;\n    edx = rax*8;\n    edx -= eax;\n    esi -= edx;\n    esi++;\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_88;\n    }\n    if (r9d == 0x4f) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    *((rsp + 0x30)) = 0;\n    r10d = 4;\n    esi = *((rax + 0x14));\n    r8b = (esi < 0xfffff894) ? 1 : 0;\n    esi += 0x76c;\n    edi = 0;\nlabel_74:\n    if (r8b == 0) {\n        goto label_22;\n    }\nlabel_75:\n    esi = -esi;\n    goto label_22;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    r10d = 2;\n    esi = *(rax);\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    edx = 0x92492493;\n    edi = *((rax + 0x1c));\n    edi -= *((rax + 0x18));\n    edi += 7;\n    eax = edi;\n    edx:eax = eax * edx;\n    do {\n        esi = rdx + rdi;\n        edi >>= 0x1f;\n        r10d = 2;\n        esi >>= 2;\n        esi -= edi;\n        goto label_14;\n        if (r9d == 0x45) {\n            goto label_88;\n        }\n        rax = *((rsp + 8));\n        edx = 0x51eb851f;\n        *((rsp + 0x30)) = 0;\n        r10d = 2;\n        edi = *((rax + 0x14));\n        eax = *((rax + 0x14));\n        edx:eax = eax * edx;\n        eax = edx;\n        edx = edi;\n        edx >>= 0x1f;\n        eax >>= 5;\n        eax -= edx;\n        edx = edi;\n        esi = rax + 0x13;\n        eax *= 0x64;\n        edx -= eax;\n        eax = edx;\n        eax >>= 0x1f;\n        dl = (esi > 0) ? 1 : 0;\n        eax &= edx;\n        r8b = (edi < 0xfffff894) ? 1 : 0;\n        esi -= eax;\n        edi = 0;\n        goto label_17;\n        if (r9d == 0x45) {\n            goto label_25;\n        }\n        r10 = *((rsp + 8));\n        esi = 0x92492493;\n        eax = *((r10 + 0x18));\n        edi = rax + 6;\n        *((rsp + 0x30)) = eax;\n        eax = edi;\n        edx:eax = eax * esi;\n        eax = rdx + rdi;\n        edx = edi;\n        edx >>= 0x1f;\n        eax >>= 2;\n        eax -= edx;\n        edx = rax*8;\n        edx -= eax;\n        eax = edx;\n        edx = *((r10 + 0x1c));\n        eax -= edi;\n        edi = rax + rdx + 7;\n        eax = edi;\n        edx:eax = eax * esi;\n    } while (1);\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    r10d = 1;\n    esi = *((rax + 0x18));\n    goto label_14;\n    if (r8b != 0) {\n        r11d = r8d;\n    }\n    if (r9d == 0) {\n        goto label_23;\n    }\nlabel_25:\n    rax = rbx - 1;\n    edx = rax + 2;\n    do {\n        ecx = edx;\n        r9 = rax;\n        ecx -= eax;\n        rax = rax - 1;\n    } while (*((rax + 1)) != 0x25);\n    rdx = *(rsp);\n    eax = 0;\n    rcx = (int64_t) ecx;\n    r8 = rbx;\n    rdx -= r14;\n    __asm (\"cmovns eax, ebp\");\n    rax = (int64_t) eax;\n    r13 = rax;\n    if (rcx >= rax) {\n        r13 = rcx;\n    }\nlabel_24:\n    if (rdx <= r13) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        if (rcx < rax) {\n            rdx = (int64_t) ebp;\n            *((rsp + 0x50)) = rcx;\n            rdx -= rcx;\n            *((rsp + 0x48)) = r8;\n            rbx = r15 + rdx;\n            *((rsp + 0x40)) = r9;\n            *((rsp + 0x30)) = r11b;\n            if (r12d == 0x30) {\n                goto label_89;\n            }\n            r15 = rbx;\n            memset (r15, 0x20, rdx);\n            rcx = *((rsp + 0x50));\n            r8 = *((rsp + 0x48));\n            r9 = *((rsp + 0x40));\n            r11d = *((rsp + 0x30));\n        }\nlabel_36:\n        *((rsp + 0x40)) = r8;\n        rdx = rcx;\n        rsi = r9;\n        rdi = r15;\n        *((rsp + 0x30)) = rcx;\n        if (r11b == 0) {\n            goto label_90;\n        }\n        fcn_0040ee30 (rdi, rsi, rdx);\n        rcx = *((rsp + 0x30));\n        r8 = *((rsp + 0x40));\nlabel_33:\n        r15 += rcx;\n    }\n    r14 += r13;\n    goto label_7;\n    r13d = 0;\nlabel_27:\n    rax = *((rsp + 8));\n    esi = *((rax + 0x20));\n    if (esi < 0) {\n        goto label_91;\n    }\n    rsi = *((rax + 0x28));\n    r8d = 1;\n    if (esi >= 0) {\n        r8d = 0;\n        if (esi != 0) {\n            goto label_92;\n        }\n        rax = *((rsp + 0x20));\n        r8b = (*(rax) == 0x2d) ? 1 : 0;\n    }\nlabel_92:\n    eax = esi;\n    edx = 0x91a2b3c5;\n    edi = 0x88888889;\n    edx:eax = eax * edx;\n    eax = esi;\n    eax >>= 0x1f;\n    *((rsp + 0x40)) = eax;\n    edx += esi;\n    edx >>= 0xb;\n    edx -= eax;\n    eax = esi;\n    *((rsp + 0x30)) = edx;\n    edx:eax = eax * edi;\n    r10d = rdx + rsi;\n    r10d >>= 5;\n    r10d -= *((rsp + 0x40));\n    eax = r10d;\n    edx:eax = eax * edi;\n    eax = r10d;\n    eax >>= 0x1f;\n    edi = rdx + r10;\n    edi >>= 5;\n    edi -= eax;\n    eax = r10d;\n    edi *= 0x3c;\n    r10d *= 0x3c;\n    eax -= edi;\n    edi = eax;\n    esi -= r10d;\n    if (r13 == 1) {\n        goto label_43;\n    }\n    if (r13 == 0) {\n        goto label_93;\n    }\n    if (r13 == 2) {\n        goto label_94;\n    }\n    if (r13 == 3) {\n        goto label_95;\n    }\n    ecx = *(rbx);\n    r9 = rbx;\nlabel_26:\n    rdx = *(rsp);\n    eax = 0;\n    rdx -= r14;\n    __asm (\"cmovns eax, ebp\");\n    rax = (int64_t) eax;\n    if (cl != 0x25) {\n        goto label_96;\n    }\n    r13d = 1;\n    r8 = r9;\n    ecx = 1;\n    if (rax != 0) {\n        r13 = rax;\n    }\n    goto label_24;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    r10d = 2;\n    esi = *((rax + 0xc));\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    esi = *((rax + 0xc));\n    goto label_16;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    *((rsp + 0x30)) = 0;\n    r10d = 3;\n    esi = *((rax + 0x1c));\n    r8b = (esi < 0xffffffff) ? 1 : 0;\n    esi++;\n    edi = 0;\n    goto label_17;\n    rdx = *(rsp);\n    eax = 0;\n    r13d = 1;\n    rdx -= r14;\n    __asm (\"cmovns eax, ebp\");\n    rax = (int64_t) eax;\n    if (rax != 0) {\n        r13 = rax;\n    }\n    if (r9d != 0) {\n        goto label_97;\n    }\n    if (r13 >= rdx) {\n        goto label_8;\n    }\n    if (r15 == 0) {\n        goto label_21;\n    }\n    if (ebp > 1) {\n        rdx = (int64_t) ebp;\n        rdx--;\n        rbp = r15 + rdx;\n        if (r12d == 0x30) {\n            goto label_98;\n        }\n        r15 = rbp;\n        memset (r15, 0x20, rdx);\n        ecx = *(rbx);\n    }\nlabel_47:\n    *(r15) = cl;\n    r15++;\n    goto label_21;\n    r9 = rbx - 1;\n    ecx = *((rbx - 1));\n    goto label_26;\n    if (r9d == 0x45) {\n        goto label_88;\n    }\n    rax = *((rsp + 8));\n    edx = 0x51eb851f;\n    r10d = 2;\n    edi = *((rax + 0x14));\n    eax = *((rax + 0x14));\n    edx:eax = eax * edx;\n    eax = edi;\n    eax >>= 0x1f;\n    esi = edx;\n    esi >>= 5;\n    esi -= eax;\n    eax = edi;\n    esi *= 0x64;\n    eax -= esi;\n    esi = eax;\n    if (eax >= 0) {\n        goto label_14;\n    }\n    eax = -eax;\n    esi += 0x64;\n    if (edi <= 0xfffff893) {\n        esi = eax;\n    }\n    goto label_14;\n    eax = *((rbx + 1));\n    rdx = rbx + 1;\n    r13d = 1;\n    if (al == 0x3a) {\n        goto label_30;\n    }\nlabel_29:\n    if (al != 0x7a) {\n        goto label_25;\n    }\n    rbx = rdx;\n    goto label_27;\n    r13d = 0;\n    goto label_28;\n    *((rsp + 0x30)) = \"%H:%M:%S\";\n    goto label_13;\nlabel_30:\n    r13++;\n    eax = *((rbx + r13));\n    rdx = rbx + r13;\n    if (al != 0x3a) {\n        goto label_29;\n    }\n    goto label_30;\nlabel_64:\n    memcpy (rdi, rsi, rdx);\n    r8 = *((rsp + 0x40));\n    rcx = *((rsp + 0x30));\n    goto label_31;\nlabel_66:\n    *((rsp + 0x30)) = 0x2d;\n    ecx = 0x2d;\n    if (r12d != 0x2d) {\n        goto label_32;\n    }\nlabel_37:\n    r9d = 0;\n    r12d = 1;\n    rax = *(rsp);\n    __asm (\"cmovns r9d, ebp\");\n    r9 = (int64_t) r9d;\n    if (r9 != 0) {\n        r12 = r9;\n    }\n    rax -= r14;\n    if (rax <= r12) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        if (r10d == 0) {\n            if (r9 <= 1) {\n                goto label_99;\n            }\n            r8 = (int64_t) ebp;\n            *((rsp + 0x58)) = cl;\n            r8--;\n            *((rsp + 0x50)) = r9;\n            rdx = r8;\n            *((rsp + 0x48)) = r10d;\n            *((rsp + 0x40)) = r11b;\n            *((rsp + 0x30)) = r8;\n            memset (r15, 0x20, rdx);\n            r8 = *((rsp + 0x30));\n            ecx = *((rsp + 0x58));\n            r9 = *((rsp + 0x50));\n            r10d = *((rsp + 0x48));\n            r11d = *((rsp + 0x40));\n            r15 += r8;\n        }\nlabel_99:\n        *(r15) = cl;\n        r15++;\n    }\n    rax = *(rsp);\n    r14 += r12;\n    r8 = rbx;\n    r12d = 0x2d;\n    rcx = rsp + 0x87;\n    rcx -= r13;\n    rax -= r14;\n    goto label_20;\nlabel_90:\n    memcpy (rdi, rsi, rdx);\n    r8 = *((rsp + 0x40));\n    rcx = *((rsp + 0x30));\n    goto label_33;\nlabel_63:\n    fcn_0040ede0 (rdi, rsi, rdx);\n    rcx = *((rsp + 0x30));\n    r8 = *((rsp + 0x40));\n    goto label_31;\nlabel_62:\n    r15 = rbp;\n    rax = memset (r15, 0x30, rdx);\n    r11d = *((rsp + 0x30));\n    r8 = *((rsp + 0x40));\n    rcx = *((rsp + 0x48));\n    goto label_34;\nlabel_83:\n    r9d = 0;\n    r8d = 1;\n    __asm (\"cmovns r9d, ebp\");\n    r9 = (int64_t) r9d;\n    if (r9 != 0) {\n        r8 = r9;\n    }\n    if (r8 >= rax) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        if (r10d == 0) {\n            if (r9 <= 1) {\n                goto label_46;\n            }\n            rdx = (int64_t) ebp;\n            *((rsp + 0x68)) = rcx;\n            rdx--;\n            *((rsp + 0x60)) = r8;\n            rax = r15 + rdx;\n            *((rsp + 0x58)) = r9;\n            *((rsp + 0x40)) = rax;\n            *((rsp + 0x50)) = r10d;\n            *((rsp + 0x48)) = r11b;\n            if (r12d == 0x30) {\n                goto label_100;\n            }\n            memset (r15, 0x20, rdx);\n            r15 = *((rsp + 0x40));\n            rcx = *((rsp + 0x68));\n            r8 = *((rsp + 0x60));\n            r9 = *((rsp + 0x58));\n            r10d = *((rsp + 0x50));\n            r11d = *((rsp + 0x48));\n        }\nlabel_46:\n        eax = *((rsp + 0x30));\n        r15++;\n        *((r15 - 1)) = al;\n    }\n    rax = *(rsp);\n    r14 += r8;\n    r8 = rbx;\n    rax -= r14;\n    goto label_20;\nlabel_40:\n    *((rsp + 0x30)) = 0;\nlabel_84:\n    r12 = (int64_t) r9d;\n    if (r12 >= rax) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        *((rsp + 0x50)) = r9d;\n        *((rsp + 0x48)) = r10d;\n        r15 += r12;\n        *((rsp + 0x40)) = r11b;\n        memset (r15, 0x20, r12);\n        r9d = *((rsp + 0x50));\n        r10d = *((rsp + 0x48));\n        r11d = *((rsp + 0x40));\n    }\n    eax = ebp;\n    r14 += r12;\n    eax -= r9d;\n    if (r9d < ebp) {\n    }\n    rax = *(rsp);\n    rax -= r14;\n    if (*((rsp + 0x30)) == 0) {\n        rcx = rsp + 0x87;\n        r9 = (int64_t) ebp;\n        r8 = rbx;\n        r12d = 0x5f;\n        rcx -= r13;\n        goto label_20;\nlabel_68:\n        r15 = rbp;\n        memset (r15, 0x30, rdx);\n        r11d = *((rsp + 0x30));\n        r8 = *((rsp + 0x40));\n        rcx = *((rsp + 0x48));\n        goto label_35;\nlabel_88:\n        r10d = 0;\n        goto label_18;\nlabel_89:\n        r15 = rbx;\n        rax = memset (r15, 0x30, rdx);\n        r11d = *((rsp + 0x30));\n        r9 = *((rsp + 0x40));\n        r8 = *((rsp + 0x48));\n        rcx = *((rsp + 0x50));\n        goto label_36;\nlabel_82:\n        ecx = 0x2b;\n        goto label_37;\nlabel_91:\n        r8 = rbx;\n        goto label_7;\n    }\n    r9 = (int64_t) ebp;\n    ecx = 1;\n    if (r9 != 0) {\n        rcx = r9;\n    }\n    if (rcx >= rax) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        if (r10d == 0) {\n            if (r9 <= 1) {\n                goto label_101;\n            }\n            r12 = r9 - 1;\n            *((rsp + 0x58)) = rcx;\n            *((rsp + 0x50)) = r10d;\n            r15 += r12;\n            *((rsp + 0x48)) = r11b;\n            *((rsp + 0x40)) = r9;\n            memset (r15, 0x20, r12);\n            rcx = *((rsp + 0x58));\n            r10d = *((rsp + 0x50));\n            r11d = *((rsp + 0x48));\n            r9 = *((rsp + 0x40));\n        }\nlabel_101:\n        eax = *((rsp + 0x30));\n        r15++;\n        *((r15 - 1)) = al;\n    }\n    rax = *(rsp);\n    r14 += rcx;\n    r8 = rbx;\n    r12d = 0x5f;\n    rcx = rsp + 0x87;\n    rcx -= r13;\n    rax -= r14;\n    goto label_20;\nlabel_69:\n    r15 = rbp;\n    memset (r15, 0x30, rdx);\n    r11 = *((rsp + 0x48));\n    r10 = *((rsp + 0x50));\n    goto label_38;\nlabel_70:\n    esi = rdi - 1;\n    edx = 0x16d;\n    if ((sil & 3) == 0) {\n        eax = esi;\n        edx = 0x51eb851f;\n        edx:eax = eax * edx;\n        eax = edx;\n        edx = esi;\n        edx >>= 0x1f;\n        eax >>= 5;\n        eax -= edx;\n        edx = 0x16e;\n        eax *= 0x64;\n        if (esi != eax) {\n            goto label_102;\n        }\n        eax = esi;\n        edi = 0x190;\n        edx:eax = (int64_t) eax;\n        eax = edx:eax / edi;\n        edx = edx:eax % edi;\n        edx -= edx;\n        edx = ~edx;\n        edx += 0x16e;\n    }\nlabel_102:\n    r10d += edx;\n    edx = 0x92492493;\n    esi = r10d;\n    esi -= r13d;\n    r13d = 0xffffffff;\n    esi += 0x17e;\n    eax = esi;\n    r10d -= esi;\n    edx:eax = eax * edx;\n    eax = rdx + rsi;\n    edx = esi;\n    edx >>= 0x1f;\n    eax >>= 2;\n    eax -= edx;\n    edx = rax*8;\n    edx -= eax;\n    r8d = r10 + rdx + 3;\n    goto label_39;\nlabel_79:\n    if (ebp > 8) {\n        goto label_103;\n    }\n    esi = *((rsp + 0x4d8));\n    edi = ebp;\n    r8d = 0x66666667;\n    do {\n        eax = esi;\n        esi >>= 0x1f;\n        edi++;\n        edx:eax = eax * r8d;\n        edx >>= 2;\n        edx -= esi;\n        esi = edx;\n    } while (edi != 9);\nlabel_50:\n    r10d = ebp;\n    goto label_14;\nlabel_73:\n    eax = r8d;\n    edx = 0x92492493;\n    r10d = 2;\n    edx:eax = eax * edx;\n    esi = rdx + r8;\n    r8d >>= 0x1f;\n    esi >>= 2;\n    esi -= r8d;\n    esi++;\n    goto label_14;\nlabel_72:\n    esi = *((rsp + 0x30));\n    eax = 0xfffff894;\n    *((rsp + 0x30)) = 0;\n    r10d = 4;\n    eax -= r13d;\n    esi = rsi + r13 + 0x76c;\n    r8b = (esi < eax) ? 1 : 0;\n    edi = 0;\n    goto label_17;\nlabel_67:\n    if (r12d == 0x5f) {\n        goto label_40;\n    }\n    rdx = (int64_t) r10d;\n    if (rdx >= rax) {\n        goto label_8;\n    }\n    r9 = (int64_t) r9d;\n    r8 = rbx;\n    goto label_41;\n    do {\nlabel_94:\n        eax = *((rsp + 0x30)) * 0x2710;\n        r10d = 9;\n        *((rsp + 0x30)) = 1;\n        edi *= 0x64;\n        eax += edi;\n        edi = 0x14;\n        esi += eax;\n        goto label_17;\nlabel_43:\n        esi = *((rsp + 0x30)) * 0x64;\n        r10d = 6;\n        *((rsp + 0x30)) = 1;\n        esi += edi;\n        edi = 4;\n        goto label_17;\nlabel_78:\n        memcpy (rdi, rsi, rdx);\n        goto label_42;\nlabel_77:\n        fcn_0040ede0 (rdi, rsi, rdx);\n        goto label_42;\nlabel_93:\n        esi = *((rsp + 0x30)) * 0x64;\n        edi = 0;\n        *((rsp + 0x30)) = 1;\n        r10d = 5;\n        esi += eax;\n        goto label_17;\nlabel_95:\n    } while (esi != 0);\n    if (eax != 0) {\n        goto label_43;\n    }\n    esi = *((rsp + 0x30));\n    r10d = 3;\n    *((rsp + 0x30)) = 1;\n    goto label_17;\nlabel_97:\n    r8 = rbx;\n    r9 = rbx;\n    ecx = 1;\n    goto label_24;\nlabel_80:\n    r15 = rbp;\n    memset (r15, 0x30, rdx);\n    goto label_44;\nlabel_87:\n    r15 = rbp;\n    memset (r15, 0x30, rdx);\n    goto label_45;\nlabel_100:\n    memset (r15, 0x30, rdx);\n    r15 = *((rsp + 0x40));\n    r11d = *((rsp + 0x48));\n    r10d = *((rsp + 0x50));\n    r9 = *((rsp + 0x58));\n    r8 = *((rsp + 0x60));\n    rcx = *((rsp + 0x68));\n    goto label_46;\nlabel_98:\n    r15 = rbp;\n    memset (r15, 0x30, rdx);\n    ecx = *(rbx);\n    goto label_47;\nlabel_76:\n    r15 = rbp;\n    memset (r15, 0x30, rdx);\n    r11d = *((rsp + 0x40));\n    r8d = *((rsp + 0x48));\n    goto label_48;\nlabel_85:\n    r15 = rbp;\n    memset (r15, 0x30, rdx);\n    r11d = *((rsp + 0x40));\n    r10d = *((rsp + 0x48));\n    rcx = *((rsp + 0x50));\n    r9 = *((rsp + 0x58));\n    goto label_49;\nlabel_103:\n    esi = *((rsp + 0x4d8));\n    goto label_50;\nlabel_65:\n    r10d = 0;\n    goto label_51;\nlabel_96:\n    rbx = r9;\n    goto label_25;\n}\n"
        },
        {
            "funcName": "fcn_00410650",
            "funcStartAddr": "0x410650",
            "funcEndAddr": "0x41066f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x410650 */\n#include <stdint.h>\n \nvoid fcn_00410650 (int64_t arg5, int64_t arg6) {\n    int64_t var_fh;\n    r8 = arg5;\n    r9 = arg6;\n    *((rsp + 0xf)) = 0;\n    fcn_0040ee80 (rdi, rsi, rdx, rcx, 0, rsp + 0x1f);\n}\n"
        },
        {
            "funcName": "fcn_00410670",
            "funcStartAddr": "0x410670",
            "funcEndAddr": "0x410709",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x410670 */\n#include <stdint.h>\n \nuint64_t fcn_00410670 (char ** arg1) {\n    rdi = arg1;\n    if (rdi != 0) {\n        rbx = rdi;\n        rax = strrchr (rdi, 0x2f);\n        if (rax != 0) {\n            r8 = rax + 1;\n            rdx = r8;\n            rdx -= rbx;\n            if (rdx <= 6) {\n                goto label_0;\n            }\n            rsi = rax - 6;\n            edi = \"/.libs/\";\n            ecx = 7;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (rdx > 6) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            edi = 0x41dd18;\n            ecx = 3;\n            rsi = r8;\n            rbx = r8;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (dl > 0) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            rbx = rax + 4;\n            *(obj.__progname) = rbx;\n        }\nlabel_0:\n        *(0x006257c0) = rbx;\n        *(obj.program_invocation_name) = rbx;\n        return rax;\n    }\n    fwrite (\"A NULL argv[0] was passed through an exec system call.\\n\", 1, 0x37, *(obj.stderr));\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_00410710",
            "funcStartAddr": "0x410710",
            "funcEndAddr": "0x410802",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x410710 */\n#include <stdint.h>\n \nuint64_t fcn_00410710 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edx = 5;\n    r12d = esi;\n    rsi = rdi;\n    rax = dcgettext (0, rsi);\n    rbx = rax;\n    while (1) {\nlabel_0:\n        rax = rbx;\n        return rax;\n        rax = fcn_004179a0 ();\n        edx = *(rax);\n        edx &= 0xffffffdf;\n        if (dl != 0x55) {\n            goto label_1;\n        }\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x54) {\n            goto label_2;\n        }\n        edx = *((rax + 2));\n        edx &= 0xffffffdf;\n        if (dl != 0x46) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x2d) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0) {\n            goto label_2;\n        }\n        eax = 0x41dd1e;\n        ebx = 0x41dd29;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n    }\nlabel_1:\n    if (dl == 0x47) {\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x42) {\n            goto label_2;\n        }\n        if (*((rax + 2)) != 0x31) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0x33) {\n            goto label_2;\n        }\n        if (*((rax + 6)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 7)) != 0) {\n            goto label_2;\n        }\n        eax = 0x41dd22;\n        ebx = 0x41dd25;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n        goto label_0;\n    }\nlabel_2:\n    eax = 0x41f1aa;\n    ebx = 0x41dd1c;\n    if (r12d != 9) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00410810",
            "funcStartAddr": "0x410810",
            "funcEndAddr": "0x41f3dd",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x410810 */\n#include <stdint.h>\n \nuint64_t fcn_00410810 (int64_t arg_e8h_3, uint32_t arg_e8h_2, int64_t arg_e8h, char * arg_e0h, int64_t arg1, char * arg2, char * arg3, size_t * arg4, int64_t arg5, int64_t arg6) {\n    size_t * var_8h;\n    size_t * var_10h;\n    uint32_t var_1fh;\n    char * s;\n    size_t n;\n    size_t * var_30h;\n    size_t * var_38h;\n    size_t var_40h;\n    size_t var_48h;\n    void * s2;\n    char * var_58h;\n    uint32_t var_60h;\n    int64_t var_68h;\n    uint32_t var_6ch;\n    char * var_6dh;\n    int64_t var_6eh;\n    int64_t var_6fh;\n    int64_t var_70h;\n    int64_t var_78h;\n    wint_t wc;\n    mbstate_t * ps;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    do {\n        abort ();\nlabel_5:\n        r15 = rdi;\n        r14 = rsi;\n        r13d = r8d;\n        *((rsp + 0x20)) = rdx;\n        *((rsp + 8)) = rcx;\n        *((rsp + 0x68)) = r9d;\n        rax = ctype_get_mb_cur_max ();\n        ebp &= 2;\n        *((rsp + 0x60)) = rax;\n        rsp + 0x6c = (ebp != 0) ? 1 : 0;\n    } while (r13d > 0xa);\n    eax = r13d;\n    r11 = *((rsp + 8));\n    /* switch table (11 cases) at 0x41dd80 */\nlabel_30:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    r13d = 2;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x41f1aa;\nlabel_21:\n    r9 = r11;\n    r12d = 0;\n    r11d = r13d;\n    do {\nlabel_28:\n        r13b = (r9 != r12) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            r13b = (*((rax + r12)) != 0) ? 1 : 0;\n        }\n        if (r13b == 0) {\n            goto label_47;\n        }\n        rdi = *((rsp + 0x20));\n        al = (r11d != 2) ? 1 : 0;\n        al &= *((rsp + 8));\n        r8 = rdi + r12;\n        *((rsp + 0x10)) = al;\n        if (al == 0) {\n            goto label_48;\n        }\n        rax = *((rsp + 0x28));\n        if (rax == 0) {\n            goto label_49;\n        }\n        rbp = r12 + rax;\n        if (r9 == -1) {\n            if (rax <= 1) {\n                goto label_50;\n            }\n            *((rsp + 0x40)) = r11d;\n            *((rsp + 0x38)) = r10b;\n            *((rsp + 0x30)) = r8;\n            rax = strlen (rdi);\n            r11d = *((rsp + 0x40));\n            r10d = *((rsp + 0x38));\n            r8 = *((rsp + 0x30));\n            r9 = rax;\n        }\nlabel_50:\n        if (rbp > r9) {\n            goto label_49;\n        }\n        rdi = r8;\n        *((rsp + 0x48)) = r11d;\n        *((rsp + 0x40)) = r9;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        eax = memcmp (rdi, *((rsp + 0x50)), *((rsp + 0x28)));\n        r8 = *((rsp + 0x30));\n        r10d = *((rsp + 0x38));\n        r9 = *((rsp + 0x40));\n        r11d = *((rsp + 0x48));\n        if (eax != 0) {\n            goto label_49;\n        }\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_51;\n        }\n        ebp = *(r8);\n        if (bpl > 0x7e) {\n            goto label_52;\n        }\n        eax = (int32_t) bpl;\n        /* switch table (127 cases) at 0x41ddd8 */\n        *((rsp + 0x10)) = 0;\n        al = (r9 != 1) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            al = (*((rax + 1)) != 0) ? 1 : 0;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        if (al != 0) {\n            goto label_7;\n        }\nlabel_17:\n        if (r12 != 0) {\n            goto label_7;\n        }\nlabel_18:\n        if (*((rsp + 0x6c)) != 0) {\n            if (dl != 0) {\n                goto label_53;\n            }\n        }\nlabel_2:\n        eax = *((rsp + 8));\n        eax ^= 1;\n        eax |= edx;\n        eax ^= 1;\n        al |= *((rsp + 0x6c));\n        if (al == 0) {\n            goto label_11;\n        }\nlabel_24:\n        eax = 0;\nlabel_10:\n        if (*((rsp + 0xd0)) == 0) {\n            goto label_11;\n        }\n        edx = ebp;\n        rcx = *((rsp + 0xd0));\n        dl >>= 5;\n        edx = (int32_t) dl;\n        edx = *((rcx + rdx*4));\n        ecx = ebp;\n        edx >>= cl;\n        edx &= 1;\n        if (edx == 0) {\n            goto label_11;\n        }\n        dl = (r11d == 2) ? 1 : 0;\nlabel_0:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_54;\n        }\nlabel_4:\n        eax = r10d;\n        eax ^= 1;\n        al &= dl;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rdx = rbx + 1;\n            if (rdx < r14) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rdx = rbx + 2;\n            if (rdx < r14) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\nlabel_9:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n        r12++;\nlabel_1:\n        if (rbx < r14) {\n            *((r15 + rbx)) = bpl;\n        }\n        edi = *((rsp + 0x1f));\n        rbx++;\n        eax = 0;\n        if (r13b == 0) {\n            edi = eax;\n        }\n        *((rsp + 0x1f)) = dil;\n    } while (1);\nlabel_3:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    if (r14 == 0) {\n        goto label_56;\n    }\n    edx = 0;\n    if (*((rsp + 0x58)) != 0) {\n        goto label_56;\n    }\nlabel_27:\n    *((rsp + 0x6d)) = r13b;\n    rbx += 3;\n    eax = 0;\n    r10d = 0;\n    *((rsp + 0x58)) = r14;\n    r14 = rdx;\nlabel_11:\n    dl = (r11d == 2) ? 1 : 0;\n    if (*((rsp + 0x10)) != 0) {\n        goto label_0;\n    }\n    eax ^= 1;\n    r12++;\n    eax &= r10d;\nlabel_16:\n    if (al == 0) {\n        goto label_1;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x27;\n    }\n    rbx += 2;\n    r10d = 0;\n    goto label_1;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_57;\n    }\n    if (r11d == 5) {\n        goto label_58;\n    }\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_3;\n    }\n    *((rsp + 0x6d)) = r13b;\n    edx = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\nlabel_15:\n    edx = *((rsp + 8));\n    dl &= *((rsp + 0x6c));\n    ecx = 0x5c;\n    al = (*((rsp + 0x28)) != 0) ? 1 : 0;\n    dl &= al;\n    if (dl != 0) {\n        goto label_59;\n    }\nlabel_8:\n    if (*((rsp + 8)) != 0) {\n        goto label_60;\n    }\nlabel_7:\n    r13d = 0;\n    goto label_2;\nlabel_6:\n    edx = 0;\n    r13d = 0;\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_4;\n    }\nlabel_54:\n    r13d = r11d;\n    eax = edx;\n    r11 = r9;\nlabel_42:\nlabel_12:\n    eax = 4;\n    if (*((rsp + 8)) != 0) {\n        r13d = eax;\n    }\nlabel_43:\n    r9d &= 0xfffffffd;\n    rax = fcn_00410810 (r15, r14, *((rsp + 0x40)), r11, r13d, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\nlabel_44:\n    rax = rbx;\n    return rax;\n    goto label_6;\n    *((rsp + 0x10)) = 0;\n    edx = 0;\n    goto label_7;\n    *((rsp + 0x10)) = 0;\n    ecx = 0x72;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    do {\nlabel_20:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_61;\n        }\nlabel_34:\n        r13d = 0;\n        goto label_9;\n    } while (1);\nlabel_14:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_62;\n    }\n    *((rsp + 0x10)) = 0;\n    eax = r10d;\n    dl = (r11d == 2) ? 1 : 0;\n    eax ^= 1;\n    al &= dl;\n    if (al == 0) {\n        goto label_63;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rcx = rbx + 1;\n    if (r14 > rcx) {\n        *((r15 + rbx + 1)) = 0x24;\n    }\n    rcx = rbx + 2;\n    if (r14 > rcx) {\n        *((r15 + rbx + 2)) = 0x27;\n    }\n    rcx = rbx + 3;\n    if (r14 <= rcx) {\n        goto label_64;\n    }\nlabel_26:\n    *((r15 + rcx)) = 0x5c;\n    r10d = eax;\nlabel_25:\n    rbx = rcx + 1;\n    if (r11d == 2) {\n        goto label_65;\n    }\n    rax = r12 + 1;\n    if (rax < r9) {\n        rax = *((rsp + 0x20));\n        eax = *((rax + r12 + 1));\n        *((rsp + 0x30)) = al;\n        eax -= 0x30;\n        if (al <= 9) {\n            goto label_66;\n        }\n    }\nlabel_35:\n    eax = *((rsp + 8));\n    eax ^= 1;\n    al |= dl;\n    eax = r13d;\n    r13d = 0;\n    if (al == 0) {\n        goto label_10;\n    }\n    goto label_11;\nlabel_19:\n    *((rsp + 0x10)) = 0;\n    do {\nlabel_52:\n        if (*((rsp + 0x60)) != 1) {\n            goto label_67;\n        }\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r9;\n        *((rsp + 0x30)) = r10b;\n        rax = ctype_b_loc ();\n        edx = (int32_t) bpl;\n        r10d = *((rsp + 0x30));\n        r9 = *((rsp + 0x38));\n        rax = *(rax);\n        r11d = *((rsp + 0x40));\n        edi = 1;\n        eax = *((rax + rdx*2));\n        ax &= 0x4000;\n        r13b = (ax != 0) ? 1 : 0;\n        dl = (ax == 0) ? 1 : 0;\n        dl &= *((rsp + 8));\nlabel_37:\n        if (dl != 0) {\n            goto label_68;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        goto label_2;\nlabel_48:\n        ebp = *(r8);\n    } while (bpl > 0x7e);\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x41e1d0 */\n    ecx = 0x6e;\nlabel_13:\n    eax = *((rsp + 0x6c));\n    dl = (r11d == 2) ? 1 : 0;\n    al &= dl;\n    *((rsp + 0x10)) = al;\n    if (al == 0) {\n        goto label_8;\n    }\nlabel_53:\n    r11 = r9;\n    r13d = 2;\n    goto label_12;\n    ecx = 0x74;\n    goto label_13;\n    ecx = 0x62;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x61;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    if (*((rsp + 8)) != 0) {\n        goto label_14;\n    }\n    if ((*((rsp + 0x68)) & 1) != 0) {\n        goto label_69;\n    }\n    *((rsp + 0x10)) = 0;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    ebp = 0;\n    goto label_2;\n    if (r11d != 2) {\n        goto label_15;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_17;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_18;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_18;\n    ecx = 0x72;\n    goto label_13;\n    ecx = 0x66;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x76;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\nlabel_49:\n    ebp = *(r8);\n    if (bpl > 0x7e) {\n        goto label_19;\n    }\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x41e5c8 */\n    eax = 0;\n    do {\nlabel_31:\n        r13d = *((rsp + 0x10));\n        *((rsp + 0x10)) = al;\n        eax = 0;\n        goto label_10;\n        eax = 0;\nlabel_32:\n        if (r12 != 0) {\n            goto label_70;\n        }\n        r13d = *((rsp + 0x10));\n        edx = 0;\n        *((rsp + 0x10)) = al;\n        goto label_2;\n        eax = 0;\nlabel_33:\n    } while (1);\n    goto label_6;\n    goto label_20;\nlabel_47:\n    r13d = r11d;\n    r11 = r9;\n    dl = (r13d == 2) ? 1 : 0;\n    if (rbx == 0) {\n        if ((*((rsp + 0x6c)) & dl) != 0) {\n            goto label_71;\n        }\n    }\n    eax = *((rsp + 0x6c));\n    eax ^= 1;\n    dl &= al;\n    if (dl == 0) {\n        goto label_72;\n    }\n    if (*((rsp + 0x6d)) == 0) {\n        goto label_45;\n    }\n    if (*((rsp + 0x1f)) != 0) {\n        goto label_73;\n    }\n    al = (r14 == 0) ? 1 : 0;\n    dl = (*((rsp + 0x58)) != 0) ? 1 : 0;\n    al &= dl;\n    if (al == 0) {\n        goto label_74;\n    }\n    r14 = *((rsp + 0x58));\nlabel_46:\n    *(r15) = 0x27;\n    r13d = 2;\n    ebx = 1;\n    *((rsp + 0x50)) = 0x41f1aa;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x6c)) = 0;\n    *((rsp + 0x6d)) = al;\n    goto label_21;\nlabel_58:\n    if ((*((rsp + 0x68)) & 4) != 0) {\n        rax = r12 + 2;\n        if (rax >= r9) {\n            goto label_39;\n        }\n        rsi = *((rsp + 0x20));\n        if (*((rsi + r12 + 1)) == 0x3f) {\n            goto label_75;\n        }\n    }\nlabel_39:\n    edx = 0;\n    r13d = 0;\n    goto label_2;\nlabel_57:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r13d = 0;\n    eax = 0;\n    goto label_11;\nlabel_67:\n    *((rsp + 0x88)) = 0;\n    if (r9 == -1) {\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        rax = strlen (*((rsp + 0x20)));\n        r11d = *((rsp + 0x40));\n        r10d = *((rsp + 0x38));\n        r8 = *((rsp + 0x30));\n        r9 = rax;\n    }\n    eax = 0;\n    *((rsp + 0x70)) = rbx;\n    *((rsp + 0x78)) = r8;\n    rbx = rax;\n    *((rsp + 0x6e)) = r10b;\n    *((rsp + 0x6f)) = bpl;\n    *((rsp + 0x40)) = r15;\n    *((rsp + 0x48)) = r14;\n    *((rsp + 0x30)) = r9;\n    *((rsp + 0x38)) = r11d;\n    while (*((rsp + 0x38)) != 2) {\nlabel_22:\n        eax = iswprint (*((rsp + 0x84)));\n        rdi = rsp + 0x88;\n        eax = 0;\n        if (eax == 0) {\n            r13d = eax;\n        }\n        rbx += r14;\n        eax = mbsinit (rdi);\n        if (eax != 0) {\n            goto label_76;\n        }\n        rax = *((rsp + 0x20));\n        r15 = r12 + rbx;\n        rbp = rax + r15;\n        rdx -= r15;\n        rax = fcn_00416e80 (rsp + 0x84, rbp, *((rsp + 0x30)), rsp + 0x88);\n        r14 = rax;\n        if (rax == 0) {\n            goto label_76;\n        }\n        if (rax == -1) {\n            goto label_77;\n        }\n        if (rax == 0xfffffffffffffffe) {\n            goto label_78;\n        }\n    }\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_22;\n    }\n    if (rax == 1) {\n        goto label_22;\n    }\n    rsi = *((rsp + 0x20));\n    rax = rsi + r15 + 1;\n    rsi += r14;\n    rsi += r15;\n    goto label_79;\nlabel_23:\n    rax++;\n    if (rsi == rax) {\n        goto label_22;\n    }\nlabel_79:\n    ecx = *(rax);\n    ecx -= 0x5b;\n    if (cl > 0x21) {\n        goto label_23;\n    }\n    edx = 1;\n    rdx <<= cl;\n    rcx = 0x20000002b;\n    if ((rdx & rcx) == 0) {\n        goto label_23;\n    }\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r13d = 2;\n    r11 = *((rsp + 0x30));\n    goto label_12;\nlabel_70:\n    *((rsp + 0x10)) = al;\n    r13d = 0;\n    goto label_24;\nlabel_63:\n    rcx = rbx;\n    if (r14 <= rbx) {\n        goto label_25;\n    }\n    eax = r10d;\n    goto label_26;\nlabel_56:\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x5c;\n    }\n    rax = rbx + 2;\n    if (r14 <= rax) {\n        goto label_80;\n    }\n    rdx = r14;\n    *((r15 + rbx + 2)) = 0x27;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_69:\n    r12++;\n    goto label_28;\nlabel_68:\n    edx = *((rsp + 8));\n    r13d = 0;\nlabel_36:\n    rcx = rdi;\n    *((rsp + 0x30)) = r13b;\n    esi = 0;\n    r13d = *((rsp + 0x6c));\n    rcx += r12;\n    edi = *((rsp + 0x10));\n    r8 = *((rsp + 0x20));\n    while (dl != 0) {\n        al = (r11d == 2) ? 1 : 0;\n        if (r13b != 0) {\n            goto label_81;\n        }\n        esi = r10d;\n        esi ^= 1;\n        al &= sil;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rsi = rbx + 1;\n            if (r14 > rsi) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rsi = rbx + 2;\n            if (r14 > rsi) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 6;\n            eax += 0x30;\n            *((r15 + rbx + 1)) = al;\n        }\n        rax = rbx + 2;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 3;\n            eax &= 7;\n            eax += 0x30;\n            *((r15 + rbx + 2)) = al;\n        }\n        ebp &= 7;\n        r12++;\n        rbx += 3;\n        ebp += 0x30;\n        if (r12 >= rcx) {\n            goto label_82;\n        }\n        esi = edx;\nlabel_29:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = bpl;\n        }\n        ebp = *((r8 + r12));\n        rbx++;\n    }\n    eax = esi;\n    eax ^= 1;\n    eax &= r10d;\n    if (dil != 0) {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n    }\n    r12++;\n    if (r12 < rcx) {\n        if (al == 0) {\n            goto label_83;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x27;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            *((r15 + rbx + 1)) = 0x27;\n        }\n        rbx += 2;\n        edi = 0;\n        r10d = 0;\n        goto label_29;\n    }\n    r13d = *((rsp + 0x30));\n    goto label_16;\nlabel_81:\n    r13d = r11d;\n    *((rsp + 8)) = al;\n    r11 = r9;\n    goto label_12;\nlabel_64:\n    rbx += 4;\n    r10d = eax;\n    r13d = 0;\n    goto label_11;\n    if (ebp != 0) {\n        goto label_30;\n    }\n    *((rsp + 8)) = 1;\n    do {\n        if (r14 != 0) {\n            goto label_84;\n        }\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 1;\n        r13d = 2;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x41f1aa;\n        goto label_21;\n        if (ebp != 0) {\n            goto label_85;\n        }\n        if (r14 == 0) {\n            goto label_86;\n        }\n        *(r15) = 0x22;\n        r10d = 0;\n        *((rsp + 0x1f)) = 1;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\nlabel_38:\n        *((rsp + 0x6c)) = 0;\n        ebx = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x41dd1c;\n        goto label_21;\n        if (r14 != 0) {\n            *((rsp + 8)) = r11;\n            rax = fcn_00410710 (0x41dd2d, r13d);\n            *((rsp + 0xd8)) = rax;\n            rax = fcn_00410710 (0x41f1aa, r13d);\n            r11 = *((rsp + 8));\n            *((rsp + 0xe0)) = rax;\n        }\n        ebx = 0;\n        if (ebp == 0) {\n            goto label_87;\n        }\nlabel_41:\n        *((rsp + 0x10)) = r11;\n        rax = strlen (*((rsp + 0xe0)));\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        r11 = *((rsp + 0x10));\n        *((rsp + 0x28)) = rax;\n        rax = *((rsp + 0xe0));\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x50)) = rax;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 8)) = 1;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 0;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 5;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x41dd1c;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 2;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x41f1aa;\n        goto label_21;\n        eax = *((rsp + 0x10));\n        goto label_31;\n        eax = *((rsp + 0x10));\n        goto label_32;\n        eax = *((rsp + 0x10));\n        goto label_33;\n        edx = 0;\n        r13d = 0;\n        goto label_4;\n        goto label_34;\nlabel_66:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x30;\n        }\n        rax = rcx + 2;\n        if (r14 > rax) {\n            *((r15 + rcx + 2)) = 0x30;\n        }\n        rbx = rcx + 3;\n        goto label_35;\n        if (ebp != 0) {\n            goto label_88;\n        }\n        *((rsp + 8)) = 0;\n    } while (1);\nlabel_82:\n    r13d = *((rsp + 0x30));\n    goto label_1;\nlabel_59:\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\nlabel_83:\n    edi = 0;\n    goto label_29;\nlabel_76:\n    rdi = rbx;\n    edx = r13d;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    edx ^= 1;\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    dl &= *((rsp + 8));\nlabel_40:\n    if (rdi > 1) {\n        goto label_36;\n    }\n    goto label_37;\nlabel_86:\n    *((rsp + 0x58)) = 0;\n    r10d = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x6d)) = 0;\n    goto label_38;\nlabel_65:\n    eax = r13d;\n    r13d = 0;\n    goto label_11;\nlabel_75:\n    ebp = *((rsi + rax));\n    if (bpl > 0x3e) {\n        goto label_39;\n    }\n    rsi = 0x7000a38200000000;\n    if (((rsi >> rbp) & 1) >= 0) {\n        goto label_39;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_51;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x3f;\n    }\n    rdx = rbx + 1;\n    if (r14 > rdx) {\n        *((r15 + rbx + 1)) = 0x22;\n    }\n    rdx = rbx + 2;\n    if (r14 > rdx) {\n        *((r15 + rbx + 2)) = 0x22;\n    }\n    rdx = rbx + 3;\n    if (r14 > rdx) {\n        *((r15 + rbx + 3)) = 0x3f;\n    }\n    rbx += 4;\n    edx = 0;\n    r13d = 0;\n    r12 = rax;\n    goto label_35;\nlabel_77:\n    rdi = rbx;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r13d = 0;\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    edx = *((rsp + 8));\n    goto label_40;\nlabel_78:\n    r9 = *((rsp + 0x30));\n    rsi = r15;\n    rcx = rbp;\n    rax = rbx;\n    rdi = rbx;\n    r8 = *((rsp + 0x78));\n    r10d = *((rsp + 0x6e));\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r11d = *((rsp + 0x38));\n    if (rsi >= r9) {\n        goto label_89;\n    }\n    if (*(rcx) != 0) {\n        goto label_90;\n    }\n    goto label_89;\n    do {\n        if (*((r8 + rax)) == 0) {\n            goto label_91;\n        }\nlabel_90:\n        rax++;\n        rdx = r12 + rax;\n    } while (rdx < r9);\nlabel_91:\n    rdi = rax;\nlabel_89:\n    edx = *((rsp + 8));\n    r13d = 0;\n    goto label_40;\nlabel_87:\n    rax = *((rsp + 0xd8));\n    eax = *(rax);\n    if (al == 0) {\n        goto label_41;\n    }\n    rdx = *((rsp + 0xd8));\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = al;\n        }\n        rbx++;\n        eax = *((rdx + rbx));\n    } while (al != 0);\n    goto label_41;\nlabel_61:\n    r13d = r11d;\n    eax = 0;\n    r11 = r9;\n    goto label_42;\nlabel_85:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 1;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x41dd1c;\n    goto label_21;\nlabel_51:\n    r13d = r11d;\n    r11 = r9;\n    goto label_43;\nlabel_72:\n    edx = eax;\nlabel_45:\n    rax = *((rsp + 0x50));\n    if (rax == 0) {\n        goto label_92;\n    }\n    if (dl == 0) {\n        goto label_92;\n    }\n    edx = *(rax);\n    if (dl == 0) {\n        goto label_92;\n    }\n    rax -= rbx;\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = dl;\n        }\n        rbx++;\n        edx = *((rax + rbx));\n    } while (dl != 0);\nlabel_92:\n    if (r14 <= rbx) {\n        goto label_44;\n    }\n    *((r15 + rbx)) = 0;\n    goto label_44;\nlabel_55:\n    r13d = r11d;\n    r11 = r9;\n    goto label_12;\nlabel_62:\n    r13d = r11d;\n    r11 = r9;\n    rsp + 8 = (r13d == 2) ? 1 : 0;\n    goto label_12;\nlabel_73:\n    rax = fcn_00410810 (r15, *((rsp + 0x78)), *((rsp + 0x40)), r11, 5, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\n    goto label_44;\nlabel_74:\n    edx = *((rsp + 0x6d));\n    goto label_45;\nlabel_71:\n    r13d = 2;\n    goto label_12;\nlabel_84:\n    r10d = 0;\n    eax = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x58)) = 0;\n    goto label_46;\nlabel_80:\n    rdx = r14;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_88:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x41f1aa;\n    goto label_21;\nlabel_60:\n    r13d = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00411a40",
            "funcStartAddr": "0x411a40",
            "funcEndAddr": "0x4207b5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x411a40 */\n#include <stdint.h>\n \nuint64_t fcn_00411a40 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_30h;\n    int64_t var_18h;\n    int64_t var_24h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    do {\n        abort ();\n        r15 = (int64_t) edi;\n        r14 = rdx;\n        *((rsp + 8)) = rsi;\n        rax = errno_location ();\n        rbx = *(0x00624618);\n        r13 = rax;\n        eax = *(rax);\n        *((rsp + 0x18)) = eax;\n    } while (r15d < 0);\n    if (*(0x00624630) > r15d) {\n        goto label_0;\n    }\n    if (r15d == 0x7fffffff) {\n        goto label_1;\n    }\n    r12d = r15 + 1;\n    rsi = (int64_t) r12d;\n    rsi <<= 4;\n    if (rbx == 0x624620) {\n        goto label_2;\n    }\n    rax = fcn_004129e0 (rbx, rsi);\n    *(0x00624618) = rax;\n    rbx = rax;\n    do {\n        rdi = *(0x00624630);\n        edx -= edi;\n        rdi <<= 4;\n        rdx = (int64_t) edx;\n        rdi += rbx;\n        rdx <<= 4;\n        memset (rdi, 0, r12d);\n        *(0x00624630) = r12d;\nlabel_0:\n        eax = *((rbp + 4));\n        r15 <<= 4;\n        rbx += r15;\n        r15 = rbp + 8;\n        eax |= 1;\n        r11 = *(rbx);\n        r12 = *((rbx + 8));\n        *((rsp + 0x24)) = eax;\n        rsi = r11;\n        *((rsp + 0x30)) = r11;\n        rax = fcn_00410810 (r12, rsi, *((rsp + 0x28)), r14, *(rbp), eax);\n        r11 = *((rsp + 0x10));\n        if (r11 <= rax) {\n            rsi = rax + 1;\n            *(rbx) = rsi;\n            if (r12 != 0x6257e0) {\n                *((rsp + 0x10)) = rsi;\n                free (r12);\n                rsi = *((rsp + 0x10));\n            }\n            *((rsp + 0x10)) = rsi;\n            rax = fcn_00412980 (*((rsp + 0x10)));\n            *((rbx + 8)) = rax;\n            rdi = rax;\n            r12 = rax;\n            fcn_00410810 (rdi, *((rsp + 0x30)), *((rsp + 0x28)), r14, *(rbp), *((rsp + 0x3c)));\n        }\n        eax = *((rsp + 0x18));\n        *(r13) = eax;\n        rax = r12;\n        return rax;\nlabel_2:\n        rax = fcn_004129e0 (0, rsi);\n        __asm (\"movdqa xmm0, xmmword [0x00624620]\");\n        rbx = rax;\n        *(0x00624618) = rax;\n        __asm (\"movups xmmword [rax], xmm0\");\n    } while (1);\nlabel_1:\n    return fcn_00412bd0 ();\n}\n"
        },
        {
            "funcName": "fcn_00411be0",
            "funcStartAddr": "0x411be0",
            "funcEndAddr": "0x411c14",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x411be0 */\n#include <stdint.h>\n \nuint64_t fcn_00411be0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = errno_location ();\n    esi = 0x38;\n    r12d = *(rax);\n    eax = 0x6258e0;\n    if (rbx == 0) {\n        rbx = rax;\n    }\n    fcn_00412b80 (rbx, rsi);\n    *(rbp) = r12d;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00411c20",
            "funcStartAddr": "0x411c20",
            "funcEndAddr": "0x411c2f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x411c20 */\n#include <stdint.h>\n \nint32_t fcn_00411c20 (int64_t arg1) {\n    rdi = arg1;\n    eax = 0x6258e0;\n    if (rdi == 0) {\n        rdi = rax;\n    }\n    eax = *(rdi);\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00411c30",
            "funcStartAddr": "0x411c30",
            "funcEndAddr": "0x411c3f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x411c30 */\n#include <stdint.h>\n \nint32_t fcn_00411c30 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    eax = 0x6258e0;\n    if (rdi == 0) {\n        rdi = rax;\n    }\n    *(rdi) = esi;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00411c40",
            "funcStartAddr": "0x411c40",
            "funcEndAddr": "0x411c73",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x411c40 */\n#include <stdint.h>\n \nint32_t fcn_00411c40 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    eax = 0x6258e0;\n    ecx = esi;\n    if (rdi == 0) {\n        rdi = rax;\n    }\n    eax = esi;\n    ecx &= 0x1f;\n    al >>= 5;\n    eax = (int32_t) al;\n    rdi = rdi + rax*4 + 8;\n    esi = *(rdi);\n    eax = *(rdi);\n    eax >>= cl;\n    edx ^= eax;\n    eax &= 1;\n    edx &= 1;\n    edx <<= cl;\n    edx ^= esi;\n    *(rdi) = edx;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00411cd0",
            "funcStartAddr": "0x411cd0",
            "funcEndAddr": "0x411d42",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x411cd0 */\n#include <stdint.h>\n \nuint64_t fcn_00411cd0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    eax = 0x6258e0;\n    r15 = rdx;\n    r14 = rsi;\n    r13 = rdi;\n    rbx = r8;\n    if (r8 == 0) {\n        rbx = rax;\n    }\n    *((rsp + 8)) = rcx;\n    rax = errno_location ();\n    r12d = *(rax);\n    rax = rbx + 8;\n    fcn_00410810 (r13, r14, r15, *((rsp + 0x28)), *(rbx), *((rbx + 4)));\n    *(rbp) = r12d;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00411f60",
            "funcStartAddr": "0x411f60",
            "funcEndAddr": "0x4210ba",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x411f60 */\n#include <stdint.h>\n \nint64_t fcn_00411f60 (uint32_t arg2, int64_t arg3) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rsi = arg2;\n    rdx = arg3;\n    do {\n        abort ();\n    } while (esi == 0xa);\n    rax = rdx;\n    *(rsp) = esi;\n    *((rsp + 4)) = 0;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x30)) = 0;\n    fcn_00411a40 (rdi, rax, 0xffffffffffffffff, rsp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00412040",
            "funcStartAddr": "0x412040",
            "funcEndAddr": "0x41204c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x412040 */\n#include <stdint.h>\n \nvoid fcn_00412040 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = rsi;\n    esi = edi;\n    edi = 0;\n    return void (*0x411f60)() ();\n}\n"
        },
        {
            "funcName": "fcn_004120e0",
            "funcStartAddr": "0x4120e0",
            "funcEndAddr": "0x412171",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4120e0 */\n#include <stdint.h>\n \nint64_t fcn_004120e0 (int64_t arg1, int64_t arg7, int64_t arg8, int64_t arg9) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_20h;\n    int64_t var_30h;\n    rdi = arg1;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    xmm2 = arg9;\n    do {\n        rax = imp.__libc_start_main;\n        ecx = edx;\n        __asm (\"movdqa xmm0, xmmword [0x006258e0]\");\n        __asm (\"movdqa xmm1, xmmword [0x006258f0]\");\n        __asm (\"movdqa xmm2, xmmword [0x00625900]\");\n        ecx &= 0x1f;\n        *((rsp + 0x30)) = rax;\n        eax = edx;\n        al >>= 5;\n        *(rsp) = xmm0;\n        eax = (int32_t) al;\n        *((rsp + 0x10)) = xmm1;\n        r8 = rsp + rax*4 + 8;\n        *((rsp + 0x20)) = xmm2;\n        edx = *(r8);\n        eax = *(r8);\n        eax >>= cl;\n        eax = ~eax;\n        eax &= 1;\n        eax <<= cl;\n        eax ^= edx;\n        *(r8) = eax;\n        fcn_00411a40 (0, rdi, rsi, rsp);\n        return rax;\n        edx = 0x3a;\n        rsi = 0xffffffffffffffff;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00412110",
            "funcStartAddr": "0x412110",
            "funcEndAddr": "0x421416",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x412110 */\n#include <stdint.h>\n \nint64_t fcn_00412110 (int64_t arg1, uint32_t arg2, int64_t arg3) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    do {\n        abort ();\n    } while (esi == 0xa);\n    rcx = 0x400000000000000;\n    rax = rdx;\n    *(rsp) = esi;\n    *((rsp + 8)) = rcx;\n    *((rsp + 4)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x30)) = 0;\n    fcn_00411a40 (rdi, rax, 0xffffffffffffffff, rsp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00412270",
            "funcStartAddr": "0x412270",
            "funcEndAddr": "0x412281",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x412270 */\n#include <stdint.h>\n \nvoid fcn_00412270 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    ecx = 0x6245e0;\n    rdx = 0xffffffffffffffff;\n    return void (*0x411a40)() ();\n}\n"
        },
        {
            "funcName": "fcn_00412290",
            "funcStartAddr": "0x412290",
            "funcEndAddr": "0x4122a6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x412290 */\n#include <stdint.h>\n \nvoid fcn_00412290 (char * arg1) {\n    rdi = arg1;\n    rsi = rdi;\n    ecx = 0x6245e0;\n    rdx = 0xffffffffffffffff;\n    edi = 0;\n    return void (*0x411a40)() ();\n}\n"
        },
        {
            "funcName": "fcn_004123e0",
            "funcStartAddr": "0x4123e0",
            "funcEndAddr": "0x421d20",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4123e0 */\n#include <stdint.h>\n \nvoid fcn_004123e0 (int64_t arg_20h, int64_t arg_30h, int64_t arg_8h_2, int64_t arg_10h, int64_t arg_8h, int64_t arg_8h_3, int64_t arg_10h_2, int64_t arg_18h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_30h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    eax = abort ();\n    r12 = r9;\n    rbx = r8;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    r9 = rcx;\n    r8 = rdx;\n    rcx = rsi;\n    edx = \"%s (%s) %s\\n\";\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    do {\n        edx = 5;\n        rax = dcgettext (0, 0x41ea6b);\n        r8d = 0x7e1;\n        edx = \"Copyright %s %d Free Software Foundation, Inc.\";\n        rdi = rbp;\n        rcx = rax;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        edx = 5;\n        rax = dcgettext (0, \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\");\n        rsi = rbp;\n        rdi = rax;\n        eax = fputs_unlocked ();\n        if (r12 > 9) {\n            goto label_2;\n        }\n        /* switch table (10 cases) at 0x41ed58 */\nlabel_1:\n        r8 = rcx;\n        esi = 1;\n        rcx = rdx;\n        eax = 0;\n        edx = \"%s %s\\n\";\n        fprintf_chk ();\n    } while (1);\n    r9 = *((rbx + 0x38));\n    rax = *((rbx + 0x10));\n    edx = 5;\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    r15 = *((rbx + 0x20));\n    *((rsp + 0x10)) = r9;\n    r14 = *((rbx + 0x18));\n    rbx = *(rbx);\n    *(rsp) = rax;\n    *((rsp + 8)) = r8;\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n    do {\n        r9 = *((rsp + 0x18));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        r9 = *((rsp + 0x30));\n        r8 = *((rsp + 0x38));\n        fprintf_chk ();\n        return rax;\n        r10 = *((rbx + 0x40));\n        r9 = *((rbx + 0x38));\n        edx = 5;\n        rax = *((rbx + 0x10));\n        r8 = *((rbx + 8));\n        r13 = *((rbx + 0x30));\n        r12 = *((rbx + 0x28));\n        *((rsp + 0x18)) = r10;\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        *((rsp + 0x10)) = r9;\n        *(rsp) = rax;\n        rbx = *(rbx);\n        *((rsp + 8)) = r8;\nlabel_0:\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        r10 = *((rsp + 0x18));\n    } while (1);\n    rbx = *(rbx);\n    edx = 5;\n    rax = dcgettext (0, \"Written by %s.\\n\");\n    rdi = rbp;\n    esi = 1;\n    rcx = rbx;\n    rdx = rax;\n    eax = 0;\n    void (*0x402db0)() ();\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s and %s.\\n\");\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x402db0)() ();\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, and %s.\\n\");\n    r9 = r13;\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x402db0)() ();\n    edx = 5;\n    r14 = *((rbx + 0x18));\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\nand %s.\\n\");\n    do {\n        rdx = rax;\n        r9 = r13;\n        r8 = r12;\n        rcx = rbx;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r15 = *((rbx + 0x20));\n        edx = 5;\n        r14 = *((rbx + 0x18));\n        r13 = *((rbx + 0x10));\n        r12 = *((rbx + 8));\n        rbx = *(rbx);\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n    } while (1);\n    r8 = *((rbx + 8));\n    r12 = *((rbx + 0x28));\n    edx = 5;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *(rsp) = r8;\n    r13 = *((rbx + 0x10));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n    r9 = r13;\n    do {\n        r8 = *((rsp + 0x20));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r9 = *((rbx + 0x10));\n        r13 = *((rbx + 0x30));\n        edx = 5;\n        r12 = *((rbx + 0x28));\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        r8 = *((rbx + 8));\n        *((rsp + 8)) = r9;\n        rbx = *(rbx);\n        *(rsp) = r8;\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n        r9 = *((rsp + 0x28));\n    } while (1);\nlabel_2:\n    r10 = *((rbx + 0x40));\n    r9 = *((rbx + 0x38));\n    edx = 5;\n    esi = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    rax = *((rbx + 0x10));\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    *((rsp + 0x18)) = r10;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *((rsp + 0x10)) = r9;\n    *(rsp) = rax;\n    rbx = *(rbx);\n    *((rsp + 8)) = r8;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00412840",
            "funcStartAddr": "0x412840",
            "funcEndAddr": "0x4128fc",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x412840 */\n#include <stdint.h>\n \nuint64_t fcn_00412840 (int64_t arg_b0h, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_70h;\n    int64_t var_90h;\n    int64_t var_98h;\n    r8 = arg5;\n    r9 = arg6;\n    r11d = 0;\n    rax = rsp + 0xb0;\n    *((rsp + 0x90)) = r8;\n    r10 = rsp + 0xb0;\n    r8d = 0x20;\n    *((rsp + 0x10)) = rax;\n    rax = rsp + 0x70;\n    *((rsp + 0x98)) = r9;\n    r9d = 0;\n    *((rsp + 8)) = 0x20;\n    *((rsp + 0x18)) = rax;\n    while (r8d <= 0x2f) {\n        eax = r8d;\n        r11 = rsp + 0x70;\n        r8d += 8;\n        rax += r11;\n        r11d = 1;\n        rax = *(rax);\n        *((rsp + r9*8 + 0x20)) = rax;\n        if (rax == 0) {\n            goto label_1;\n        }\nlabel_0:\n        r9++;\n        if (r9 == 0xa) {\n            goto label_1;\n        }\n    }\n    rax = r10;\n    r10 += 8;\n    rax = *(rax);\n    *((rsp + r9*8 + 0x20)) = rax;\n    if (rax != 0) {\n        goto label_0;\n    }\nlabel_1:\n    if (r11b != 0) {\n        *((rsp + 8)) = r8d;\n    }\n    fcn_004123e0 (rdi, rsi, rdx, rcx, rsp + 0x20, r9);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00412980",
            "funcStartAddr": "0x412980",
            "funcEndAddr": "0x41299a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x412980 */\n#include <stdint.h>\n \nuint64_t fcn_00412980 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = malloc (rdi);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    return fcn_00412bd0 ();\n}\n"
        },
        {
            "funcName": "fcn_004129e0",
            "funcStartAddr": "0x4129e0",
            "funcEndAddr": "0x412a16",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4129e0 */\n#include <stdint.h>\n \nuint64_t fcn_004129e0 (void * arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rsi;\n    if (rsi == 0) {\n        if (rdi != 0) {\n            goto label_0;\n        }\n    }\n    rax = realloc (rdi, rbx);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_1;\n        }\n    }\n    return rax;\nlabel_0:\n    eax = free (rdi);\n    eax = 0;\n    return rax;\nlabel_1:\n    return fcn_00412bd0 ();\n}\n"
        },
        {
            "funcName": "fcn_00412ae0",
            "funcStartAddr": "0x412ae0",
            "funcEndAddr": "0x412b30",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x412ae0 */\n#include <stdint.h>\n \nint64_t fcn_00412ae0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rax = *(rsi);\n    if (rdi == 0) {\n        goto label_0;\n    }\n    rdx = 0x5555555555555553;\n    if (rax > rdx) {\n        goto label_1;\n    }\n    rdx = rax;\n    rdx >>= 1;\n    rax = rdx + rax + 1;\n    do {\n        *(rsi) = rax;\n        rsi = rax;\n        void (*0x4129e0)() ();\nlabel_0:\n        if (rax == 0) {\n            eax = 0x80;\n            *(rsi) = rax;\n            rsi = rax;\n            void (*0x4129e0)() ();\n        }\n    } while (rax >= 0);\nlabel_1:\n    return fcn_00412bd0 ();\n}\n"
        },
        {
            "funcName": "fcn_00412b80",
            "funcStartAddr": "0x412b80",
            "funcEndAddr": "0x412ba8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x412b80 */\n#include <stdint.h>\n \nuint64_t fcn_00412b80 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdi = rsi;\n    rbx = rsi;\n    rax = fcn_00412980 (rdi);\n    rdx = rbx;\n    rsi = rbp;\n    rdi = rax;\n    return memcpy ();\n}\n"
        },
        {
            "funcName": "fcn_00412bb0",
            "funcStartAddr": "0x412bb0",
            "funcEndAddr": "0x412bc3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x412bb0 */\n#include <stdint.h>\n \nvoid fcn_00412bb0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    strlen (rdi);\n    rdi = rbx;\n    rsi = rax + 1;\n    return void (*0x412b80)() ();\n}\n"
        },
        {
            "funcName": "fcn_00412bd0",
            "funcStartAddr": "0x412bd0",
            "funcEndAddr": "0x412c01",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x412bd0 */\n#include <stdint.h>\n \nuint64_t fcn_00412bd0 (void) {\n    edx = 5;\n    rax = dcgettext (0, \"memory exhausted\");\n    rcx = rax;\n    eax = 0;\n    error (*(0x006245c0), 0, 0x41d784);\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_00412c10",
            "funcStartAddr": "0x412c10",
            "funcEndAddr": "0x412ce0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x412c10 */\n#include <stdint.h>\n \nuint64_t fcn_00412c10 (int64_t arg_50h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg6) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r9 = arg6;\n    r15 = rcx;\n    r14 = rdx;\n    edx = esi;\n    r13 = r9;\n    r12 = rdi;\n    ebx = *((rsp + 0x50));\n    eax = fcn_004132b0 (rdi, 0, edx, rsp + 8, r8);\n    if (eax != 0) {\n        goto label_1;\n    }\n    rbp = *((rsp + 8));\n    if (rbp >= r14) {\n        if (rbp <= r15) {\n            goto label_2;\n        }\n    }\n    rax = errno_location ();\n    r14 = rax;\n    eax -= eax;\n    eax &= 0xffffffd7;\n    eax += 0x4b;\n    *(r14) = eax;\n    do {\nlabel_0:\n        rax = fcn_00412290 (r12);\n        esi = *(r14);\n        rcx = r13;\n        edx = \"%s: %s\";\n        r8 = rax;\n        eax = 0;\n        if (esi == 0x16) {\n            esi = eax;\n        }\n        eax = 1;\n        if (ebx == 0) {\n            ebx = eax;\n        }\n        eax = 0;\n        error (ebx, rsi, rdx);\n        rbp = *((rsp + 8));\nlabel_2:\n        rax = rbp;\n        return rax;\nlabel_1:\n        rax = errno_location ();\n        r14 = rax;\n        if (ebp == 1) {\n            goto label_3;\n        }\n    } while (ebp != 3);\n    *(rax) = 0;\n    goto label_0;\nlabel_3:\n    *(rax) = 0x4b;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00412d10",
            "funcStartAddr": "0x412d10",
            "funcEndAddr": "0x412d3f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x412d10 */\n#include <stdint.h>\n \nuint64_t fcn_00412d10 (void) {\n    int64_t var_8h;\n    rax = fcn_00415be0 (0, 0);\n    rbx = rax;\n    while (*(rax) != 0xc) {\n        rax = rbx;\n        return rax;\n        rax = errno_location ();\n    }\n    return fcn_00412bd0 ();\n}\n"
        },
        {
            "funcName": "fcn_00412d40",
            "funcStartAddr": "0x412d40",
            "funcEndAddr": "0x412df0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x412d40 */\n#include <stdint.h>\n \nuint64_t fcn_00412d40 (void) {\n    int64_t var_8h;\n    r13 = 0x1000401001;\n    ebx = 0;\n    *((rsp + 8)) = 0x22;\n    rax = errno_location ();\n    r12 = rax;\n    do {\nlabel_0:\n        rax = fcn_00412ae0 (rbx, rsp + 8);\n        rsi = *((rsp + 8));\n        rdi = rax;\n        rbx = rax;\n        rbp = rax + rsi - 2;\n        rsi--;\n        *(rbp) = 0;\n        *(r12) = 0;\n        eax = gethostname ();\n        if (eax != 0) {\n            goto label_2;\n        }\n    } while (*(rbp) != 0);\n    rax = rbx;\n    return rax;\nlabel_2:\n    ebp = *(r12);\n    if (ebp > 0x24) {\nlabel_1:\n        ebx = 0;\n        free (rbx);\n        *(r12) = ebp;\n        rax = rbx;\n        return rax;\n    }\n    if (((r13 >> rbp) & 1) < 0) {\n        goto label_0;\n    }\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00412df0",
            "funcStartAddr": "0x412df0",
            "funcEndAddr": "0x413214",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x412df0 */\n#include <stdint.h>\n \nuint64_t fcn_00412df0 (int64_t arg1, int64_t arg2, uint32_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_8h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    if (edx > 0x24) {\n        goto label_13;\n    }\n    r15 = rsi;\n    rax = rsp + 0x18;\n    *(rsp) = edx;\n    r14 = rcx;\n    r13 = r8;\n    if (rsi == 0) {\n        r15 = rax;\n    }\n    errno_location ();\n    *(rax) = 0;\n    r12 = rax;\n    ebx = *(rbp);\n    rax = ctype_b_loc ();\n    edx = *(rsp);\n    rsi = *(rax);\n    rax = rbp;\n    while ((*((rsi + rcx*2 + 1)) & 0x20) != 0) {\n        rax++;\n        ebx = *(rax);\n        ecx = (int32_t) bl;\n    }\n    if (bl == 0x2d) {\n        goto label_1;\n    }\n    rax = strtoul (rbp, r15, rdx);\n    r8 = *(r15);\n    rbx = rax;\n    if (r8 == rbp) {\n        goto label_14;\n    }\n    eax = *(r12);\n    if (eax != 0) {\n        goto label_15;\n    }\n    ebp = 0;\n    do {\n        if (r13 != 0) {\n            r12d = *(r8);\n            if (r12b != 0) {\n                goto label_16;\n            }\n        }\nlabel_2:\n        *(r14) = rbx;\nlabel_0:\n        eax = ebp;\n        return rax;\nlabel_15:\n    } while (eax == 0x22);\n    do {\nlabel_1:\n        goto label_0;\nlabel_14:\n        *(rsp) = r8;\n    } while (r13 == 0);\n    r12d = *(rbp);\n    if (r12b == 0) {\n        goto label_1;\n    }\n    esi = (int32_t) r12b;\n    ebp = 0;\n    ebx = 1;\n    rax = strchr (r13, rsi);\n    r8 = *(rsp);\n    if (rax == 0) {\n        goto label_1;\n    }\nlabel_4:\n    edx = r12 - 0x45;\n    if (dl <= 0x2f) {\n        rax = 0x814400308945;\n        *(rsp) = dl;\n        if (((rax >> rdx) & 1) >= 0) {\n            goto label_17;\n        }\n        *((rsp + 8)) = r8;\n        rax = strchr (r13, 0x30);\n        r8 = *((rsp + 8));\n        if (rax == 0) {\n            goto label_17;\n        }\n        eax = *((r8 + 1));\n        if (al == 0x44) {\n            goto label_18;\n        }\n        if (al == 0x69) {\n            goto label_19;\n        }\n        edx = *(rsp);\n        if (al == 0x42) {\n            goto label_18;\n        }\n        /* switch table (67 cases) at 0x41ee38 */\n    }\nlabel_17:\n    esi = 1;\n    edx = 0x400;\nlabel_7:\n    r12d -= 0x42;\n    if (r12b > 0x35) {\n        goto label_20;\n    }\n    r12d = (int32_t) r12b;\n    /* switch table (54 cases) at 0x41efb8 */\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    rax = rbx;\n    rdx:rax = rax * rcx;\n    if (r12b overflow 0x35) {\n        goto label_5;\n    }\n    rdx:rax = rax * rcx;\n    if (r12b overflow 0x35) {\n        goto label_5;\n    }\n    rbx = rax;\n    do {\nlabel_3:\n        rsi = (int64_t) esi;\n        eax = ebp;\n        r8 += rsi;\n        eax |= 2;\n        *(r15) = r8;\n        if (*(r8) != 0) {\n        }\n        goto label_2;\n        esi = 1;\n        edx = 0x400;\n        rax = rbx;\n        rdx:rax = rax * rdx;\n        rbx = rax;\n    } while (*(r8) !overflow 0);\nlabel_5:\n    rbx |= 0xffffffffffffffff;\n    goto label_3;\nlabel_16:\n    esi = (int32_t) r12b;\n    *(rsp) = r8;\n    rax = strchr (r13, rsi);\n    r8 = *(rsp);\n    if (rax != 0) {\n        goto label_4;\n    }\nlabel_20:\n    *(r14) = rbx;\n    ebp |= 2;\n    goto label_0;\n    if (rbx < 0) {\n        goto label_5;\n    }\n    rbx += rbx;\n    goto label_3;\n    esi = 1;\n    rax = rbx;\n    rax >>= 0x37;\n    if (rax != 0) {\n        goto label_5;\n    }\n    rbx <<= 9;\n    goto label_3;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 7;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (rbx overflow 0) {\n            goto label_21;\n        }\nlabel_8:\n        edi--;\n    } while (edi != 0);\nlabel_6:\n    ebp |= r9d;\n    goto label_3;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 8;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (ebp overflow 0) {\n            goto label_22;\n        }\nlabel_11:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 4;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_23;\n        }\nlabel_9:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 5;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_24;\n        }\nlabel_12:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 6;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_25;\n        }\nlabel_10:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    rax = rbx;\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rbx = rax;\n    eax = 0;\n    ebp |= eax;\n    goto label_3;\n    rax = rbx;\n    rax >>= 0x36;\n    if (rax != 0) {\n        goto label_5;\n    }\n    rbx <<= 0xa;\n    goto label_3;\n    esi = 1;\n    goto label_3;\nlabel_18:\n    esi = 2;\n    edx = 0x3e8;\n    goto label_7;\nlabel_19:\n    esi = 0;\n    edx = 0x400;\n    sil = (*((r8 + 2)) == 0x42) ? 1 : 0;\n    esi = rsi + rsi + 1;\n    goto label_7;\nlabel_21:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_8;\nlabel_26:\n    eax = 1;\n    rbx |= 0xffffffffffffffff;\n    ebp |= eax;\n    goto label_3;\nlabel_23:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_9;\nlabel_25:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_10;\nlabel_22:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_11;\nlabel_24:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_12;\nlabel_13:\n    return assert_fail (\"0 <= strtol_base && strtol_base <= 36\", \"lib/xstrtol.c\", 0x60, \"xstrtoul\");\n}\n"
        },
        {
            "funcName": "fcn_00413220",
            "funcStartAddr": "0x413220",
            "funcEndAddr": "0x42363f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x413220 */\n#include <stdint.h>\n \nint64_t fcn_00413220 (uint32_t arg1, int64_t arg2, int64_t arg4, int64_t arg5) {\n    int64_t var_eh;\n    int64_t var_fh;\n    rdi = arg1;\n    rsi = arg2;\n    rcx = arg4;\n    r8 = arg5;\n    do {\n        abort ();\n        edi--;\n        ebx = *(0x006245c0);\n    } while (edi > 3);\n    r10d = esi;\n    rsi = *((rdi*8 + 0x41f1e0));\n    rax = (int64_t) r10d;\n    if (r10d < 0) {\n        goto label_0;\n    }\n    rax <<= 5;\n    r12d = 0x41f171;\n    r13 = *((rcx + rax));\n    do {\n        edx = 5;\n        rax = dcgettext (0, rsi);\n        r9 = rbp;\n        r8 = r13;\n        rcx = r12;\n        eax = 0;\n        error (ebx, 0, rax);\n        rax = abort ();\nlabel_0:\n        r12d = 0x41f171;\n        *((rsp + 0xe)) = dl;\n        r13 = rsp + 0xe;\n        r12 -= rax;\n        *((rsp + 0xf)) = 0;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_004132b0",
            "funcStartAddr": "0x4132b0",
            "funcEndAddr": "0x4136e4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4132b0 */\n#include <stdint.h>\n \nuint64_t fcn_004132b0 (int64_t arg1, int64_t arg2, uint32_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_8h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    if (edx > 0x24) {\n        goto label_13;\n    }\n    r15 = rsi;\n    rax = rsp + 0x18;\n    *(rsp) = edx;\n    r14 = rcx;\n    r13 = r8;\n    if (rsi == 0) {\n        r15 = rax;\n    }\n    errno_location ();\n    *(rax) = 0;\n    r12 = rax;\n    ebx = *(rbp);\n    rax = ctype_b_loc ();\n    edx = *(rsp);\n    rsi = *(rax);\n    rax = rbp;\n    while ((*((rsi + rcx*2 + 1)) & 0x20) != 0) {\n        rax++;\n        ebx = *(rax);\n        ecx = (int32_t) bl;\n    }\n    if (bl == 0x2d) {\n        goto label_1;\n    }\n    ecx = 0;\n    rsi = r15;\n    rdi = rbp;\n    rax = strtoul_internal ();\n    r8 = *(r15);\n    rbx = rax;\n    if (r8 == rbp) {\n        goto label_14;\n    }\n    eax = *(r12);\n    if (eax != 0) {\n        goto label_15;\n    }\n    ebp = 0;\n    do {\n        if (r13 != 0) {\n            r12d = *(r8);\n            if (r12b != 0) {\n                goto label_16;\n            }\n        }\nlabel_2:\n        *(r14) = rbx;\nlabel_0:\n        eax = ebp;\n        return rax;\nlabel_15:\n    } while (eax == 0x22);\n    do {\nlabel_1:\n        goto label_0;\nlabel_14:\n        *(rsp) = r8;\n    } while (r13 == 0);\n    r12d = *(rbp);\n    if (r12b == 0) {\n        goto label_1;\n    }\n    esi = (int32_t) r12b;\n    ebp = 0;\n    ebx = 1;\n    rax = strchr (r13, rsi);\n    r8 = *(rsp);\n    if (rax == 0) {\n        goto label_1;\n    }\nlabel_4:\n    edx = r12 - 0x45;\n    if (dl <= 0x2f) {\n        rax = 0x814400308945;\n        *(rsp) = dl;\n        if (((rax >> rdx) & 1) >= 0) {\n            goto label_17;\n        }\n        *((rsp + 8)) = r8;\n        rax = strchr (r13, 0x30);\n        r8 = *((rsp + 8));\n        if (rax == 0) {\n            goto label_17;\n        }\n        eax = *((r8 + 1));\n        if (al == 0x44) {\n            goto label_18;\n        }\n        if (al == 0x69) {\n            goto label_19;\n        }\n        edx = *(rsp);\n        if (al == 0x42) {\n            goto label_18;\n        }\n        /* switch table (67 cases) at 0x41f200 */\n    }\nlabel_17:\n    esi = 1;\n    edx = 0x400;\nlabel_7:\n    r12d -= 0x42;\n    if (r12b > 0x35) {\n        goto label_20;\n    }\n    r12d = (int32_t) r12b;\n    /* switch table (54 cases) at 0x41f380 */\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    rax = rbx;\n    rdx:rax = rax * rcx;\n    if (r12b overflow 0x35) {\n        goto label_5;\n    }\n    rdx:rax = rax * rcx;\n    if (r12b overflow 0x35) {\n        goto label_5;\n    }\n    rbx = rax;\n    do {\nlabel_3:\n        rsi = (int64_t) esi;\n        eax = ebp;\n        r8 += rsi;\n        eax |= 2;\n        *(r15) = r8;\n        if (*(r8) != 0) {\n        }\n        goto label_2;\n        esi = 1;\n        edx = 0x400;\n        rax = rbx;\n        rdx:rax = rax * rdx;\n        rbx = rax;\n    } while (*(r8) !overflow 0);\nlabel_5:\n    rbx |= 0xffffffffffffffff;\n    goto label_3;\nlabel_16:\n    esi = (int32_t) r12b;\n    *(rsp) = r8;\n    rax = strchr (r13, rsi);\n    r8 = *(rsp);\n    if (rax != 0) {\n        goto label_4;\n    }\nlabel_20:\n    *(r14) = rbx;\n    ebp |= 2;\n    goto label_0;\n    if (rbx < 0) {\n        goto label_5;\n    }\n    rbx += rbx;\n    goto label_3;\n    esi = 1;\n    rax = rbx;\n    rax >>= 0x37;\n    if (rax != 0) {\n        goto label_5;\n    }\n    rbx <<= 9;\n    goto label_3;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 7;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (rbx overflow 0) {\n            goto label_21;\n        }\nlabel_8:\n        edi--;\n    } while (edi != 0);\nlabel_6:\n    ebp |= r9d;\n    goto label_3;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 8;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (ebp overflow 0) {\n            goto label_22;\n        }\nlabel_11:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 4;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_23;\n        }\nlabel_9:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 5;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_24;\n        }\nlabel_12:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 6;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_25;\n        }\nlabel_10:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    rax = rbx;\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rbx = rax;\n    eax = 0;\n    ebp |= eax;\n    goto label_3;\n    rax = rbx;\n    rax >>= 0x36;\n    if (rax != 0) {\n        goto label_5;\n    }\n    rbx <<= 0xa;\n    goto label_3;\n    esi = 1;\n    goto label_3;\nlabel_18:\n    esi = 2;\n    edx = 0x3e8;\n    goto label_7;\nlabel_19:\n    esi = 0;\n    edx = 0x400;\n    sil = (*((r8 + 2)) == 0x42) ? 1 : 0;\n    esi = rsi + rsi + 1;\n    goto label_7;\nlabel_21:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_8;\nlabel_26:\n    eax = 1;\n    rbx |= 0xffffffffffffffff;\n    ebp |= eax;\n    goto label_3;\nlabel_23:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_9;\nlabel_25:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_10;\nlabel_22:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_11;\nlabel_24:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_12;\nlabel_13:\n    return assert_fail (\"0 <= strtol_base && strtol_base <= 36\", \"lib/xstrtol.c\", 0x60, \"xstrtoumax\");\n}\n"
        },
        {
            "funcName": "fcn_004136f0",
            "funcStartAddr": "0x4136f0",
            "funcEndAddr": "0x4137e9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4136f0 */\n#include <stdint.h>\n \nint64_t fcn_004136f0 (int64_t arg1) {\n    rdi = arg1;\nlabel_3:\n    r12d = 0xc0000601;\n    rbx = rdi;\nlabel_0:\n    edx = *((rbx + 4));\n    if (edx == 0) {\n        goto label_2;\n    }\n    do {\n        if (edx == 0x5b) {\n            goto label_6;\n        }\n        ecx = rdx - 0x21;\n        if (ecx <= 0x1f) {\n            if (((r12 >> rcx) & 1) < 0) {\n                if (*((rbx + 8)) == 0x28) {\n                    goto label_7;\n                }\n            }\n            if (edx == 0x29) {\n                goto label_8;\n            }\n        }\n        rbx += 4;\n        edx = *((rbx + 4));\n    } while (edx != 0);\nlabel_2:\n    rax = rbp;\n    r12 = rbx;\n    return rax;\nlabel_6:\n    edx = imp.__libc_start_main;\n    if (edx == 0) {\n        goto label_9;\n    }\nlabel_5:\n    edx = *((rbx + 8));\n    if (edx == 0x21) {\n        goto label_10;\n    }\n    eax = imp.__libc_start_main;\n    if (eax < 0) {\n        if (edx == 0x5e) {\n            goto label_10;\n        }\n    }\n    rbx += 8;\nlabel_4:\n    if (edx == 0x5d) {\n        edx = *((rbx + 4));\n        rbx += 4;\n        goto label_11;\nlabel_1:\n        edx = *(rcx);\n        rbx = rcx;\n    }\nlabel_11:\n    rcx = rbx + 4;\n    if (edx == 0x5d) {\n        goto label_0;\n    }\n    if (edx != 0) {\n        goto label_1;\n    }\n    goto label_2;\nlabel_7:\n    rax = fcn_004136f0 (rbx + 8);\n    goto label_3;\n    rbx = rax;\n    goto label_0;\nlabel_10:\n    edx = *((rbx + 0xc));\n    rbx += 0xc;\n    goto label_4;\nlabel_9:\n    rax = getenv (\"POSIXLY_CORRECT\");\n    eax -= eax;\n    eax |= 1;\n    *(0x00625918) = eax;\n    goto label_5;\nlabel_8:\n    rax = rbx + 8;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004137f0",
            "funcStartAddr": "0x4137f0",
            "funcEndAddr": "0x4138e9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4137f0 */\n#include <stdint.h>\n \nint64_t fcn_004137f0 (int64_t arg1) {\n    rdi = arg1;\nlabel_3:\n    r12d = 0xc0000601;\n    rbx = rdi;\nlabel_0:\n    edx = *((rbx + 1));\n    if (dl == 0) {\n        goto label_2;\n    }\n    do {\n        if (dl == 0x5b) {\n            goto label_6;\n        }\n        ecx = rdx - 0x21;\n        if (cl <= 0x1f) {\n            if (((r12 >> rcx) & 1) < 0) {\n                if (*((rbx + 2)) == 0x28) {\n                    goto label_7;\n                }\n            }\n            if (dl == 0x29) {\n                goto label_8;\n            }\n        }\n        rbx++;\n        edx = *((rbx + 1));\n    } while (dl != 0);\nlabel_2:\n    rax = rbp;\n    r12 = rbx;\n    return rax;\nlabel_6:\n    edx = imp.__libc_start_main;\n    if (edx == 0) {\n        goto label_9;\n    }\nlabel_5:\n    edx = *((rbx + 2));\n    if (dl == 0x21) {\n        goto label_10;\n    }\n    eax = imp.__libc_start_main;\n    if (eax < 0) {\n        if (dl == 0x5e) {\n            goto label_10;\n        }\n    }\n    rbx += 2;\nlabel_4:\n    if (dl == 0x5d) {\n        edx = *((rbx + 1));\n        rbx++;\n        goto label_11;\nlabel_1:\n        edx = *(rcx);\n        rbx = rcx;\n    }\nlabel_11:\n    rcx = rbx + 1;\n    if (dl == 0x5d) {\n        goto label_0;\n    }\n    if (dl != 0) {\n        goto label_1;\n    }\n    goto label_2;\nlabel_7:\n    rax = fcn_004137f0 (rbx + 2);\n    goto label_3;\n    rbx = rax;\n    goto label_0;\nlabel_10:\n    edx = *((rbx + 3));\n    rbx += 3;\n    goto label_4;\nlabel_9:\n    rax = getenv (\"POSIXLY_CORRECT\");\n    eax -= eax;\n    eax |= 1;\n    *(0x00625918) = eax;\n    goto label_5;\nlabel_8:\n    rax = rbx + 2;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004138f0",
            "funcStartAddr": "0x4138f0",
            "funcEndAddr": "0x413e73",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4138f0 */\n#include <stdint.h>\n \nuint64_t fcn_004138f0 (int64_t arg1, uint32_t arg3, wchar_t* arg4, int64_t arg5, uint32_t arg6, wchar_t * s) {\n    int64_t var_78h;\n    size_t var_70h;\n    uint32_t var_68h;\n    int64_t var_5dh;\n    uint32_t var_5ch;\n    wchar_t* var_58h;\n    int64_t var_50h;\n    size_t var_48h;\n    int64_t var_38h;\n    int64_t var_28h;\n    int64_t var_fh;\n    rdi = arg1;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rsi = s;\n    r12d = r8d;\n    rbx = rsi;\n    *((rbp - 0x50)) = edi;\n    *((rbp - 0x68)) = rdx;\n    *((rbp - 0x58)) = rcx;\n    *((rbp - 0x5c)) = r9d;\n    *((rbp - 0x5d)) = r8b;\n    *((rbp - 0x38)) = 0;\n    rax = wcslen (rsi);\n    *((rbp - 0x48)) = rax;\n    eax = *((rbx + 4));\n    if (eax == 0) {\n        goto label_6;\n    }\n    r14 = rbx + 4;\n    r13 = rbp - 0x38;\n    r8d = 0;\n    *((rbp - 0x70)) = rbx;\n    rsi = r14;\n    rbx = r13;\n    r15d = 0xc0000601;\n    r13 = r8;\n    while (edx > 0x1f) {\n        if (eax == 0x7c) {\n            if (r13 == 0) {\n                goto label_18;\n            }\n        }\nlabel_0:\n        eax = *((r14 + 4));\n        r14 += 4;\nlabel_4:\n        if (eax == 0) {\n            goto label_6;\n        }\nlabel_1:\n        if (eax == 0x5b) {\n            goto label_19;\n        }\nlabel_2:\n        edx = rax - 0x21;\n    }\n    if (((r15 >> rdx) & 1) < 0) {\n        if (*((r14 + 4)) == 0x28) {\n            goto label_20;\n        }\n    }\n    if (eax != 0x29) {\n        goto label_0;\n    }\n    rdx = r13 - 1;\n    if (r13 == 0) {\n        goto label_21;\n    }\n    eax = *((r14 + 4));\n    r13 = rdx;\n    r14 += 4;\n    if (eax != 0) {\n        goto label_1;\n    }\n    do {\nlabel_6:\n        eax = 0xffffffff;\nlabel_10:\n        rsp = rbp - 0x28;\n        return rax;\nlabel_20:\n        r13++;\n        r14 += 4;\n        eax = 0x28;\n        goto label_2;\nlabel_19:\n        ecx = imp.__libc_start_main;\n        if (ecx == 0) {\n            goto label_22;\n        }\nlabel_7:\n        eax = *((r14 + 4));\n        if (eax == 0x21) {\n            goto label_23;\n        }\n        edx = imp.__libc_start_main;\n        if (edx < 0) {\n            if (eax == 0x5e) {\n                goto label_23;\n            }\n        }\n        rdx = r14 + 4;\nlabel_5:\n        if (eax != 0x5d) {\n            goto label_24;\n        }\n        eax = *((rdx + 4));\n        rdx += 4;\n        goto label_24;\nlabel_3:\n    } while (eax == 0);\n    eax = *(r14);\n    rdx = r14;\nlabel_24:\n    r14 = rdx + 4;\n    if (eax != 0x5d) {\n        goto label_3;\n    }\n    eax = *((rdx + 4));\n    goto label_4;\nlabel_23:\n    rdx = r14 + 8;\n    eax = *((r14 + 8));\n    goto label_5;\nlabel_18:\n    eax = *((rbp - 0x50));\n    rdx = *((rbp - 0x48));\n    eax -= 0x3f;\n    if (eax > 1) {\n        rdx = r14;\n        rdx -= rsi;\n        rdx >>= 2;\n        rdx++;\n    }\n    rax = rdx*4 + 0xf;\n    rax &= 0xfffffffffffffff8;\n    rdi = rax - 8;\n    if (rdi > 0x1f37) {\n        goto label_6;\n    }\n    rcx = 0x3fffffffffffffff;\n    if (rdx > rcx) {\n        goto label_6;\n    }\n    rax += 0x17;\n    rdx = r14;\n    rax &= 0xfffffffffffffff0;\n    rdx -= rsi;\n    rdx >>= 2;\n    r13 = rsp + 0xf;\n    r13 &= 0xfffffffffffffff0;\n    rdi = r13 + 8;\n    wmempcpy ();\n    rsi = r14 + 4;\n    *(rax) = 0;\n    eax = *((r14 + 4));\n    r14 = rsi;\n    *(r13) = 0;\n    *(rbx) = r13;\n    rbx = r13;\n    r13d = 0;\n    goto label_4;\nlabel_22:\n    *((rbp - 0x78)) = rsi;\n    rax = getenv (\"POSIXLY_CORRECT\");\n    rsi = *((rbp - 0x78));\n    eax -= eax;\n    eax |= 1;\n    *(0x00625918) = eax;\n    goto label_7;\nlabel_21:\n    eax = *((rbp - 0x50));\n    r13 = rbx;\n    rbx = *((rbp - 0x70));\n    eax -= 0x3f;\n    if (eax > 1) {\n        rax = r14;\n        rax -= rsi;\n        rax >>= 2;\n        rax++;\n        *((rbp - 0x48)) = rax;\n    }\n    rcx = *((rbp - 0x48));\n    rax = rcx*4 + 0xf;\n    rax &= 0xfffffffffffffff8;\n    rdx = rax - 8;\n    if (rdx > 0x1f37) {\n        goto label_6;\n    }\n    rdx = 0x3fffffffffffffff;\n    if (rcx > rdx) {\n        goto label_6;\n    }\n    rax += 0x17;\n    rdx = r14;\n    rax &= 0xfffffffffffffff0;\n    rdx -= rsi;\n    rdx >>= 2;\n    rax = rsp + 0xf;\n    rax &= 0xfffffffffffffff0;\n    rdi = rax + 8;\n    r15 = rax;\n    wmempcpy ();\n    *(rax) = 0;\n    *(r13) = r15;\n    r13 = *((rbp - 0x38));\n    *(r15) = 0;\n    if (r13 == 0) {\n        goto label_25;\n    }\n    if (*((r14 - 4)) != 0x29) {\n        goto label_26;\n    }\n    r15d = *((rbp - 0x50));\n    r15d -= 0x21;\n    if (r15d > 0x1f) {\n        goto label_27;\n    }\n    /* switch table (32 cases) at 0x41f5b0 */\n    ecx = (int32_t) r12b;\n    eax = fcn_00413e80 (r14, *((rbp - 0x68)), *((rbp - 0x58)), rcx, *((rbp - 0x5c)));\n    if (eax == 0) {\n        goto label_11;\n    }\n    eax = *((rbp - 0x5c));\n    *((rbp - 0x70)) = r14;\n    r14 = *((rbp - 0x68));\n    r12d = eax;\n    r15d = eax;\n    r12d &= 0xfffffffb;\n    r15d &= 1;\n    if (r15d != 0) {\n        r12d = eax;\n    }\n    rax = rbx - 4;\n    *((rbp - 0x50)) = r15d;\n    rbx = *((rbp - 0x58));\n    *((rbp - 0x78)) = rax;\nlabel_15:\n    if (r14 > rbx) {\n        goto label_28;\n    }\n    eax = *((rbp - 0x5d));\n    r15 = r14;\n    *((rbp - 0x48)) = eax;\n    goto label_29;\nlabel_8:\n    ecx = 0;\n    if (*((r15 - 4)) == 0x2f) {\n        eax = *((rbp - 0x5c));\n        eax &= 5;\n        cl = (eax == 5) ? 1 : 0;\n    }\n    eax = fcn_00413e80 (*((rbp - 0x70)), r15, rbx, 0, r12d);\n    if (eax == 0) {\n        goto label_11;\n    }\n    ecx = 0;\n    if (*((r15 - 4)) == 0x2f) {\n        eax = *((rbp - 0x5c));\n        eax &= 5;\n        cl = (eax == 5) ? 1 : 0;\n    }\n    eax = fcn_00413e80 (*((rbp - 0x78)), r15, rbx, 0, r12d);\n    if (eax == 0) {\n        goto label_11;\n    }\nlabel_9:\n    r13 = *((rbp - 0x38));\n    do {\n        r15 += 4;\n        if (rbx < r15) {\n            goto label_28;\n        }\nlabel_29:\n        eax = fcn_00413e80 (r13 + 8, r14, r15, *((rbp - 0x48)), r12d);\n    } while (eax != 0);\n    if (r14 != r15) {\n        goto label_8;\n    }\n    eax = fcn_00413e80 (*((rbp - 0x70)), r14, rbx, *((rbp - 0x48)), r12d);\n    if (eax != 0) {\n        goto label_9;\n    }\nlabel_11:\n    eax = 0;\n    goto label_10;\n    rcx = *((rbp - 0x58));\n    if (*((rbp - 0x68)) > rcx) {\n        goto label_16;\n    }\n    eax = *((rbp - 0x5c));\n    r15 = *((rbp - 0x68));\n    *((rbp - 0x48)) = r13;\n    r12d = (int32_t) r12b;\n    *((rbp - 0x50)) = r14;\n    ebx = eax;\n    r14 = r15;\n    ebx &= 0xfffffffb;\n    if ((al & 1) != 0) {\n        ebx = eax;\n    }\nlabel_12:\n    r13 = *((rbp - 0x48));\n    do {\n        eax = fcn_00413e80 (r13 + 8, r15, r14, r12d, ebx);\n        if (eax == 0) {\n            goto label_30;\n        }\n        r13 = *(r13);\n    } while (r13 != 0);\n    if (r15 == r14) {\n        goto label_31;\n    }\n    ecx = 0;\n    if (*((r14 - 4)) == 0x2f) {\n        eax = *((rbp - 0x5c));\n        eax &= 5;\n        cl = (eax == 5) ? 1 : 0;\n    }\nlabel_17:\n    eax = fcn_00413e80 (*((rbp - 0x50)), r14, *((rbp - 0x58)), 0, ebx);\n    if (eax == 0) {\n        goto label_11;\n    }\nlabel_30:\n    r14 += 4;\n    if (*((rbp - 0x58)) >= r14) {\n        goto label_12;\n    }\n    do {\nlabel_16:\n        eax = 1;\n        goto label_10;\n        r12d = (int32_t) r12b;\nlabel_14:\n        eax = *((rbp - 0x5c));\n        r15 = *((rbp - 0x68));\n        ebx = eax;\n        ebx &= 0xfffffffb;\n        if ((al & 1) != 0) {\n            ebx = eax;\n        }\n        goto label_32;\nlabel_13:\n        r13 = *(r13);\n        *((rbp - 0x38)) = r13;\n    } while (r13 == 0);\nlabel_32:\n    rax = wcscat (r13 + 8, r14);\n    eax = fcn_00413e80 (rax, r15, *((rbp - 0x58)), r12d, ebx);\n    if (eax != 0) {\n        goto label_13;\n    }\n    eax = 0;\n    goto label_10;\n    r12d = (int32_t) r12b;\n    eax = fcn_00413e80 (r14, *((rbp - 0x68)), *((rbp - 0x58)), r12d, *((rbp - 0x5c)));\n    if (eax != 0) {\n        goto label_14;\n    }\n    eax = 0;\n    goto label_10;\nlabel_28:\n    r13 = *(r13);\n    *((rbp - 0x38)) = r13;\n    if (r13 != 0) {\n        goto label_15;\n    }\n    goto label_16;\nlabel_31:\n    ecx = r12d;\n    goto label_17;\nlabel_27:\n    assert_fail (\"! \\\"Invalid extended matching operator\\\", \"lib/fnmatch_loop.c\", 0x4ad, \"ext_wmatch\");\nlabel_26:\n    assert_fail (\"p[-1] == L_(')')\", \"lib/fnmatch_loop.c\", 0x455, \"ext_wmatch\");\nlabel_25:\n    return assert_fail (\"list != NULL\", \"lib/fnmatch_loop.c\", 0x454, \"ext_wmatch\");\n}\n"
        },
        {
            "funcName": "fcn_00413e80",
            "funcStartAddr": "0x413e80",
            "funcEndAddr": "0x41495c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x413e80 */\n#include <stdint.h>\n \nuint64_t fcn_00413e80 (size_t arg1, uint32_t arg2, wchar_t* arg3, int64_t arg4, uint32_t arg5) {\n    wchar_t* var_8h;\n    wchar_t* var_10h;\n    uint32_t var_18h;\n    wint_t * var_1ch;\n    uint32_t var_20h;\n    int64_t var_24h;\n    int64_t var_28h;\n    char * property;\n    int64_t var_140h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\nlabel_7:\n    rax = rdi + 4;\n    r14 = rdx;\n    rbx = rsi;\n    r15d = *(rdi);\n    *((rsp + 0x18)) = r8d;\n    *((rsp + 8)) = rax;\n    if (r15d == 0) {\n        goto label_44;\n    }\n    r12d = r8d;\n    r8d &= 5;\n    *((rsp + 0x10)) = rdx;\n    *((rsp + 0x20)) = r8d;\n    ebp &= 0x10;\n    r10d = ecx;\n    r12d &= 2;\n    r13d = ebp;\nlabel_1:\n    if (r13d != 0) {\n        *((rsp + 0x1c)) = r10b;\n        eax = towlower (r15d);\n        r10d = *((rsp + 0x1c));\n        r15d = eax;\n    }\n    eax = r15 - 0x21;\n    if (eax > 0x3b) {\n        goto label_2;\n    }\n    /* switch table (60 cases) at 0x41f6b0 */\n    if (r12d != 0) {\n        goto label_45;\n    }\n    r15d = *((rbp + 4));\n    rax = rbp + 8;\n    *((rsp + 8)) = rax;\n    if (r15d == 0) {\n        goto label_4;\n    }\n    if (r13d == 0) {\n        goto label_46;\n    }\n    eax = towlower (r15d);\n    r15d = eax;\n    if (*((rsp + 0x10)) == rbx) {\n        goto label_4;\n    }\nlabel_8:\n    towlower (*(rbx));\n    rbp = *((rsp + 8));\n    goto label_47;\n    r8d = imp.__libc_start_main;\n    if (r8d == 0) {\n        goto label_48;\n    }\nlabel_23:\n    if (*((rsp + 0x10)) == rbx) {\n        goto label_4;\n    }\n    r8d = *(rbx);\n    if (r8d == 0x2e) {\n        goto label_49;\n    }\n    if (r8d == 0x2f) {\n        if ((*((rsp + 0x18)) & 1) != 0) {\n            goto label_4;\n        }\n    }\nlabel_22:\n    eax = *((rbp + 4));\n    if (eax == 0x21) {\n        goto label_50;\n    }\n    edi = imp.__libc_start_main;\n    if (edi < 0) {\n        if (eax == 0x5e) {\n            goto label_50;\n        }\n    }\n    *((rsp + 0x1c)) = 0;\n    r14 = *((rsp + 8));\nlabel_19:\n    if (r13d != 0) {\n        eax = towlower (r8d);\n        r8d = eax;\n    }\n    *((rsp + 0x24)) = r15d;\n    rbp = r14 + 4;\n    r15 = rbx;\n    eax = *(r14);\n    ebx = r8d;\n    while (r14d != 0x2d) {\n        if (eax == ebx) {\n            goto label_51;\n        }\n        eax = r14d;\nlabel_0:\n        if (eax == 0x5d) {\n            goto label_52;\n        }\nlabel_13:\n        if (r12d == 0) {\n            if (eax == 0x5c) {\n                goto label_53;\n            }\n        }\n        if (eax == 0x5b) {\n            goto label_54;\n        }\n        if (eax == 0) {\n            goto label_55;\n        }\n        r14d = *(rbp);\nlabel_11:\n        if (r13d != 0) {\n            eax = towlower (eax);\n        }\nlabel_15:\n        rsi = rbp + 4;\n    }\n    edx = *((rbp + 4));\n    if (edx == 0x5d) {\n        goto label_56;\n    }\n    if (edx == 0) {\n        goto label_56;\n    }\nlabel_14:\n    rsi = rbp + 8;\n    if (edx == 0x5c) {\n        if (r12d == 0) {\n            goto label_57;\n        }\n    }\nlabel_20:\n    if (edx == 0) {\n        goto label_4;\n    }\n    r14d = *(rsi);\n    rbp = rsi + 4;\n    dil = (eax <= ebx) ? 1 : 0;\n    dl = (edx >= ebx) ? 1 : 0;\n    eax = r14d;\n    if ((dil & dl) == 0) {\n        goto label_0;\n    }\n    rbx = r15;\n    rsi = rsi + 4;\n    goto label_41;\n    if ((*((rsp + 0x18)) & 0x20) != 0) {\n        goto label_58;\n    }\nlabel_29:\n    if (*((rsp + 0x10)) == rbx) {\n        goto label_4;\n    }\n    eax = *(rbx);\n    if (eax == 0x2f) {\n        goto label_59;\n    }\n    al = (eax == 0x2e) ? 1 : 0;\n    r10b &= al;\n    if (r10b != 0) {\n        goto label_4;\n    }\n    rbp = *((rsp + 8));\n    goto label_9;\n    if (*((rsp + 0x20)) == 5) {\n        goto label_60;\n    }\nlabel_2:\n    if (*((rsp + 0x10)) == rbx) {\n        goto label_4;\n    }\nlabel_35:\n    eax = *(rbx);\n    if (r13d != 0) {\n        eax = towlower (eax);\n    }\n    if (eax != r15d) {\n        goto label_4;\n    }\nlabel_21:\n    rbp = *((rsp + 8));\n    r10d = 0;\nlabel_9:\n    r15d = *(rbp);\n    rax = rbp + 4;\n    rbx += 4;\n    *((rsp + 8)) = rax;\n    if (r15d != 0) {\n        goto label_1;\n    }\n    r14 = *((rsp + 0x10));\nlabel_44:\n    if (rbx == r14) {\n        goto label_26;\n    }\n    if ((*((rsp + 0x18)) & 8) != 0) {\n        goto label_61;\n    }\nlabel_4:\n    eax = 1;\nlabel_3:\n    return rax;\n    if ((*((rsp + 0x18)) & 0x20) == 0) {\n        goto label_2;\n    }\n    if (*((rbp + 4)) != 0x28) {\n        goto label_2;\n    }\n    r8d = (int32_t) r10b;\n    eax = fcn_004138f0 (r15d, *((rsp + 8)), rbx, *((rsp + 0x10)), r8, *((rsp + 0x18)));\n    if (eax == 0xffffffff) {\n        goto label_2;\n    }\n    goto label_3;\n    rax = rbp;\n    r14 = *((rsp + 0x10));\n    r13 = rax;\n    eax = *((rsp + 0x18));\n    eax &= 0x20;\n    *((rsp + 0x20)) = eax;\n    if (eax != 0) {\n        goto label_62;\n    }\nlabel_28:\n    if (r14 == rbx) {\n        goto label_63;\n    }\n    if (*(rbx) != 0x2e) {\n        goto label_63;\n    }\n    if (r10b != 0) {\n        goto label_4;\n    }\nlabel_63:\n    r11d = *((r13 + 4));\n    r15 = r13 + 8;\n    if (r11d != 0x2a) {\n        if (r11d != 0x3f) {\n            goto label_64;\n        }\n    }\n    eax = *((rsp + 0x20));\n    r13d = *((rsp + 0x18));\n    dl = (eax != 0) ? 1 : 0;\n    r13d &= 1;\n    do {\nlabel_5:\n        if (*(r15) == 0x28) {\n            if (dl != 0) {\n                goto label_65;\n            }\n        }\nlabel_17:\n        if (r11d == 0x3f) {\n            goto label_66;\n        }\nlabel_10:\n        rax = r15;\nlabel_16:\n        r11d = *(rax);\n        r15 = rax + 4;\n    } while (r11d == 0x3f);\n    if (r11d == 0x2a) {\n        goto label_5;\n    }\nlabel_64:\n    ecx = *((rsp + 0x18));\n    ecx &= 1;\n    if (r11d == 0) {\n        goto label_67;\n    }\n    esi = ecx;\n    *((rsp + 0x1c)) = r10b;\n    rdx -= rbx;\n    esi = -esi;\n    *((rsp + 0x10)) = r11d;\n    rdx >>= 2;\n    esi &= 0x2f;\n    *((rsp + 8)) = ecx;\n    rax = wmemchr (rbx, esi, r14);\n    r11d = *((rsp + 0x10));\n    ecx = *((rsp + 8));\n    r9 = rax;\n    r10d = *((rsp + 0x1c));\n    if (rax == 0) {\n        r9 = r14;\n    }\n    if (r11d == 0x5b) {\n        goto label_68;\n    }\n    r13d = *((rsp + 0x20));\n    if (r13d != 0) {\n        goto label_69;\n    }\nlabel_25:\n    if (r11d == 0x2f) {\n        goto label_70;\n    }\n    if (ecx == 0) {\n        goto label_71;\n    }\nlabel_40:\n    r13d = (int32_t) r10b;\n    if (r11d == 0x5c) {\n        goto label_72;\n    }\nlabel_43:\n    if (ebp != 0) {\n        *((rsp + 8)) = r9;\n        eax = towlower (r11d);\n        r9 = *((rsp + 8));\n        r11d = eax;\n    }\n    r15 -= 4;\n    if (r9 <= rbx) {\n        goto label_4;\n    }\n    *((rsp + 8)) = r14;\n    r12d = r11d;\n    r14d = r13d;\n    r13 = rbx;\n    rbx = r9;\n    goto label_73;\nlabel_6:\n    r13 += 4;\n    r14d = 0;\n    if (rbx <= r13) {\n        goto label_4;\n    }\nlabel_73:\n    eax = *(r13);\n    if (ebp != 0) {\n        eax = towlower (eax);\n    }\n    if (r12d != eax) {\n        goto label_6;\n    }\n    eax = fcn_00413e80 (r15, r13, *((rsp + 8)), r14d, *((rsp + 0x18)));\n    goto label_7;\n    if (eax != 0) {\n        goto label_6;\n    }\nlabel_26:\n    eax = 0;\n    goto label_3;\nlabel_45:\n    if (*((rsp + 0x10)) == rbx) {\n        goto label_4;\n    }\n    if (r13d != 0) {\n        goto label_8;\n    }\nlabel_24:\n    eax = *(rbx);\n    rbp = *((rsp + 8));\nlabel_47:\n    if (eax != r15d) {\n        goto label_4;\n    }\nlabel_34:\n    r10d = 0;\n    goto label_9;\nlabel_66:\n    if (rbx == r14) {\n        goto label_4;\n    }\n    if (*(rbx) == 0x2f) {\n        goto label_74;\n    }\nlabel_18:\n    rbx += 4;\n    goto label_10;\nlabel_54:\n    r14d = *(rbp);\n    if (r14d != 0x3a) {\n        goto label_11;\n    }\n    r14 = rbp;\n    edx = 0;\n    goto label_75;\nlabel_12:\n    ecx = rax - 0x61;\n    if (ecx > 0x18) {\n        goto label_76;\n    }\n    rdx++;\n    r14 = r8;\n    *((rsp + rdx*4 + 0x13c)) = eax;\n    if (rdx == 0x100) {\n        goto label_4;\n    }\nlabel_75:\n    eax = *((r14 + 4));\n    r8 = r14 + 4;\n    if (eax != 0x3a) {\n        goto label_12;\n    }\n    if (*((r8 + 4)) == 0x5d) {\n        goto label_77;\n    }\nlabel_76:\n    rsi = rbp + 4;\n    if (ebx == 0x5b) {\n        goto label_51;\n    }\n    eax = 0x3a;\n    goto label_13;\nlabel_56:\n    if (eax == ebx) {\n        goto label_78;\n    }\n    if (edx != 0x5d) {\n        goto label_14;\n    }\n    r14d = 0x5d;\n    eax = 0x2d;\n    goto label_11;\nlabel_53:\n    eax = *(rbp);\n    if (eax == 0) {\n        goto label_4;\n    }\n    if (r13d != 0) {\n        towlower (eax);\n    }\n    r14d = *((rbp + 4));\n    rbp += 4;\n    goto label_15;\nlabel_65:\n    *((rsp + 0x10)) = r10b;\n    *((rsp + 8)) = dl;\n    *((rsp + 0x1c)) = r11d;\n    rax = fcn_004136f0 (r15);\n    edx = *((rsp + 8));\n    r10d = *((rsp + 0x10));\n    if (rax != r15) {\n        goto label_16;\n    }\n    r11d = *((rsp + 0x1c));\n    goto label_17;\nlabel_74:\n    if (r13d == 0) {\n        goto label_18;\n    }\n    goto label_4;\nlabel_50:\n    r14 = rbp + 8;\n    *((rsp + 0x1c)) = 1;\n    goto label_19;\nlabel_57:\n    rsi = rbp + 0xc;\n    edx = *((rbp + 8));\n    goto label_20;\nlabel_60:\n    if (*((rsp + 0x10)) == rbx) {\n        goto label_4;\n    }\n    if (*(rbx) != 0x2f) {\n        goto label_4;\n    }\n    rbp = *((rsp + 8));\n    r10d = 1;\n    goto label_9;\nlabel_59:\n    if ((*((rsp + 0x18)) & 1) == 0) {\n        goto label_21;\n    }\n    goto label_4;\nlabel_49:\n    if (r10b == 0) {\n        goto label_22;\n    }\n    goto label_4;\nlabel_48:\n    *((rsp + 0x1c)) = r10b;\n    rax = getenv (\"POSIXLY_CORRECT\");\n    r10d = *((rsp + 0x1c));\n    eax -= eax;\n    eax |= 1;\n    *(0x00625918) = eax;\n    goto label_23;\nlabel_46:\n    if (*((rsp + 0x10)) != rbx) {\n        goto label_24;\n    }\n    goto label_4;\nlabel_69:\n    eax = r11 - 0x21;\n    if (eax > 0x1f) {\n        goto label_25;\n    }\n    edx = 0x80000401;\n    if (((rdx >> rax) & 1) >= 0) {\n        goto label_25;\n    }\n    if (*(r15) != 0x28) {\n        goto label_25;\n    }\nlabel_68:\n    edi = *((rsp + 0x18));\n    eax = *((rsp + 0x18));\n    eax &= 0xfffffffb;\n    if (ecx != 0) {\n        eax = edi;\n    }\n    r15 -= 4;\n    if (r9 <= rbx) {\n        goto label_4;\n    }\n    r12 = r9;\nlabel_27:\n    ecx = (int32_t) r10b;\n    eax = fcn_00413e80 (r15, rbx, r14, rcx, ebp);\n    goto label_7;\n    if (eax == 0) {\n        goto label_26;\n    }\n    rbx += 4;\n    r10d = 0;\n    if (r12 > rbx) {\n        goto label_27;\n    }\n    goto label_4;\nlabel_62:\n    if (*((r13 + 4)) != 0x28) {\n        goto label_28;\n    }\n    r8d = (int32_t) r10b;\n    *((rsp + 0x10)) = r10b;\n    eax = fcn_004138f0 (0x2a, *((rsp + 8)), rbx, r14, r8, *((rsp + 0x18)));\n    if (eax != 0xffffffff) {\n        goto label_3;\n    }\n    r10d = *((rsp + 0x10));\n    goto label_28;\nlabel_58:\n    if (*((rbp + 4)) != 0x28) {\n        goto label_29;\n    }\n    r8d = (int32_t) r10b;\n    *((rsp + 0x1c)) = r10b;\n    eax = fcn_004138f0 (0x3f, *((rsp + 8)), rbx, *((rsp + 0x10)), r8, *((rsp + 0x18)));\n    r10d = *((rsp + 0x1c));\n    if (eax == 0xffffffff) {\n        goto label_29;\n    }\n    goto label_3;\nlabel_51:\n    rbx = r15;\n    r14d = *(rbp);\n    goto label_41;\nlabel_30:\n    if (edx == 0x5d) {\n        goto label_79;\n    }\n    r14d = *(r8);\nlabel_31:\n    rsi = rbp + 4;\nlabel_41:\n    r8 = rsi;\n    edx = r14d;\n    if (r14d == 0) {\n        goto label_4;\n    }\n    r10b = (r14d == 0x5c) ? 1 : 0;\n    al = (r12d == 0) ? 1 : 0;\n    r10b &= al;\n    if (r10b != 0) {\n        goto label_80;\n    }\n    if (r14d != 0x5b) {\n        goto label_30;\n    }\n    r14d = *((rbp + 4));\n    if (r14d == 0x3a) {\n        goto label_81;\n    }\n    if (r14d == 0x3d) {\n        goto label_82;\n    }\n    rbp += 8;\n    if (r14d != 0x2e) {\nlabel_37:\n        goto label_31;\nlabel_33:\n        if (*((rdx + 4)) == 0x5d) {\n            goto label_83;\n        }\nlabel_32:\n    }\n    eax = *((rbp + 4));\n    rdx = rbp + 4;\n    if (eax == 0) {\n        goto label_4;\n    }\n    if (eax != 0x2e) {\n        goto label_32;\n    }\n    goto label_33;\nlabel_80:\n    ecx = *((rbp + 4));\n    if (ecx == 0) {\n        goto label_4;\n    }\n    r14d = *((rbp + 8));\n    rbp += 8;\n    goto label_31;\nlabel_82:\n    edx = *((rbp + 8));\n    if (edx == 0) {\n        goto label_4;\n    }\n    if (*((rbp + 0xc)) != 0x3d) {\n        goto label_4;\n    }\n    if (*((rbp + 0x10)) != 0x5d) {\n        goto label_4;\n    }\n    r8 = rbp + 0x18;\n    edx = *((rbp + 0x14));\n    goto label_30;\nlabel_52:\n    esi = *((rsp + 0x1c));\n    rbx = r15;\n    if (esi != 0) {\n        goto label_34;\n    }\n    goto label_4;\nlabel_55:\n    rbx = r15;\n    r15d = *((rsp + 0x24));\n    goto label_35;\nlabel_67:\n    if (ecx == 0) {\n        goto label_26;\n    }\n    if ((*((rsp + 0x18)) & 8) != 0) {\n        goto label_26;\n    }\n    rdx -= rbx;\n    rdx >>= 2;\n    rax = wmemchr (rbx, 0x2f, r14);\n    al = (rax != 0) ? 1 : 0;\n    eax = (int32_t) al;\n    goto label_3;\nlabel_81:\n    rax = rbp + 8;\n    r14d = *((rbp + 8));\n    rbp += 0x404;\n    goto label_84;\nlabel_36:\n    r14d -= 0x61;\n    if (r14d > 0x18) {\n        goto label_85;\n    }\n    rax += 4;\n    r14d = *(rax);\n    if (rbp == rax) {\n        goto label_4;\n    }\nlabel_84:\n    if (r14d != 0x3a) {\n        goto label_36;\n    }\n    if (*((rax + 4)) != 0x5d) {\n        goto label_37;\n    }\n    r8 = rax + 0xc;\n    edx = *((rax + 8));\n    goto label_30;\nlabel_77:\n    *((rsp + rdx*4 + 0x140)) = 0;\n    rsi = rsp + 0x30;\n    rdx = rsp + 0x140;\n    eax = *((rsp + 0x140));\n    r9 = rdx + 0x400;\n    goto label_86;\nlabel_38:\n    if (eax >= 0x25) {\n        goto label_39;\n    }\n    ecx = rax - 0x20;\n    if (ecx > 3) {\n        goto label_4;\n    }\nlabel_39:\n    if (rdx == r9) {\n        goto label_4;\n    }\n    rdx += 4;\n    rsi++;\n    *((rsi - 1)) = al;\n    eax = *(rdx);\n    if (eax == 0) {\n        goto label_87;\n    }\nlabel_86:\n    if (eax <= 0x3f) {\n        goto label_38;\n    }\n    if (eax < 0x41) {\n        goto label_4;\n    }\n    if (eax <= 0x5f) {\n        goto label_39;\n    }\n    ecx = rax - 0x61;\n    if (ecx <= 0x1d) {\n        goto label_39;\n    }\n    goto label_4;\n    do {\nlabel_71:\n        goto label_40;\nlabel_61:\n        eax = 0;\n        al = (*(rbx) != 0x2f) ? 1 : 0;\n        goto label_3;\nlabel_83:\n        r8 = rbp + 0x10;\n        edx = *((rbp + 0xc));\n        goto label_30;\nlabel_78:\n        rbx = r15;\n        goto label_41;\nlabel_70:\n    } while (ecx == 0);\n    if (r14 > rbx) {\n        goto label_88;\n    }\n    goto label_4;\nlabel_42:\n    rbx += 4;\n    if (r14 <= rbx) {\n        goto label_4;\n    }\nlabel_88:\n    if (*(rbx) != 0x2f) {\n        goto label_42;\n    }\n    ecx >>= 2;\n    ecx &= 1;\n    eax = fcn_00413e80 (r15, rbx + 4, r14, r8d, *((rsp + 0x18)));\n    goto label_7;\n    al = (eax != 0) ? 1 : 0;\n    eax = (int32_t) al;\n    goto label_3;\nlabel_72:\n    if (r12d != 0) {\n        goto label_43;\n    }\n    r11d = *(r15);\n    goto label_43;\nlabel_79:\n    eax = *((rsp + 0x1c));\n    if (eax != 0) {\n        goto label_4;\n    }\n    goto label_9;\nlabel_87:\n    *(rsi) = 0;\n    *((rsp + 0x28)) = r8;\n    rax = wctype (rsp + 0x30);\n    r8 = *((rsp + 0x28));\n    rsi = rax;\n    if (rax == 0) {\n        goto label_4;\n    }\n    *((rsp + 0x28)) = r8;\n    eax = iswctype (*(r15), rsi);\n    r8 = *((rsp + 0x28));\n    if (eax == 0) {\n        rbp = r8 + 0xc;\n        eax = *((r8 + 8));\n        goto label_0;\n    }\n    r9 = r14;\n    rbp = r14 + 0xc;\n    rbx = r15;\n    r14d = *((r14 + 0xc));\n    rsi = r9 + 0x10;\n    goto label_41;\nlabel_85:\n    r14d = 0x3a;\n    goto label_31;\n}\n"
        },
        {
            "funcName": "fcn_00414960",
            "funcStartAddr": "0x414960",
            "funcEndAddr": "0x414ea3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x414960 */\n#include <stdint.h>\n \nuint64_t fcn_00414960 (int64_t arg1, uint32_t arg3, size_t arg4, int64_t arg5, signed int64_t arg6, char * s) {\n    int64_t var_80h;\n    int64_t var_78h;\n    int64_t var_6dh;\n    signed int64_t var_6ch;\n    size_t var_68h;\n    uint32_t var_60h;\n    uint32_t var_58h;\n    size_t var_50h;\n    int64_t var_48h;\n    int64_t var_38h;\n    int64_t var_28h;\n    int64_t var_fh;\n    rdi = arg1;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rsi = s;\n    r12d = r8d;\n    rbx = rsi;\n    *((rbp - 0x48)) = edi;\n    *((rbp - 0x60)) = rdx;\n    *((rbp - 0x68)) = rcx;\n    *((rbp - 0x6c)) = r9d;\n    *((rbp - 0x6d)) = r8b;\n    *((rbp - 0x38)) = 0;\n    rax = strlen (rsi);\n    *((rbp - 0x50)) = rax;\n    eax = *((rbx + 1));\n    if (al == 0) {\n        goto label_6;\n    }\n    edi = *((rbp - 0x48));\n    r14 = rbx + 1;\n    r15 = rbp - 0x38;\n    edx = 0;\n    *((rbp - 0x78)) = rbx;\n    rsi = r14;\n    rbx = r15;\n    r13d = 0xc0000601;\n    edi -= 0x3f;\n    r15 = rdx;\n    *((rbp - 0x58)) = edi;\n    while (dl > 0x1f) {\n        if (al == 0x7c) {\n            if (r15 == 0) {\n                goto label_18;\n            }\n        }\nlabel_0:\n        eax = *((r14 + 1));\n        r14++;\nlabel_4:\n        if (al == 0) {\n            goto label_6;\n        }\nlabel_1:\n        if (al == 0x5b) {\n            goto label_19;\n        }\nlabel_2:\n        edx = rax - 0x21;\n    }\n    if (((r13 >> rdx) & 1) < 0) {\n        if (*((r14 + 1)) == 0x28) {\n            goto label_20;\n        }\n    }\n    if (al != 0x29) {\n        goto label_0;\n    }\n    rdx = r15 - 1;\n    if (r15 == 0) {\n        goto label_21;\n    }\n    eax = *((r14 + 1));\n    r15 = rdx;\n    r14++;\n    if (al != 0) {\n        goto label_1;\n    }\n    do {\nlabel_6:\n        eax = 0xffffffff;\nlabel_10:\n        rsp = rbp - 0x28;\n        return rax;\nlabel_20:\n        r15++;\n        r14++;\n        eax = 0x28;\n        goto label_2;\nlabel_19:\n        ecx = imp.__libc_start_main;\n        if (ecx == 0) {\n            goto label_22;\n        }\nlabel_7:\n        eax = *((r14 + 1));\n        if (al == 0x21) {\n            goto label_23;\n        }\n        edx = imp.__libc_start_main;\n        if (edx < 0) {\n            if (al == 0x5e) {\n                goto label_23;\n            }\n        }\n        rcx = r14 + 1;\nlabel_5:\n        if (al != 0x5d) {\n            goto label_24;\n        }\n        eax = *((rcx + 1));\n        rcx++;\n        r14 = rcx + 1;\n        if (al == 0x5d) {\n            goto label_25;\n        }\nlabel_3:\n    } while (al == 0);\n    eax = *(r14);\n    rcx = r14;\nlabel_24:\n    r14 = rcx + 1;\n    if (al != 0x5d) {\n        goto label_3;\n    }\nlabel_25:\n    eax = *((rcx + 1));\n    goto label_4;\nlabel_23:\n    rcx = r14 + 2;\n    eax = *((r14 + 2));\n    goto label_5;\nlabel_18:\n    rdx = r14;\n    rdx -= rsi;\n    rax = rdx + 1;\n    if (*((rbp - 0x58)) <= 1) {\n        rax = *((rbp - 0x50));\n    }\n    rax += 0xf;\n    rax &= 0xfffffffffffffff8;\n    rcx = rax - 8;\n    if (rcx > 0x1f37) {\n        goto label_6;\n    }\n    rax += 0x17;\n    rax &= 0xfffffffffffffff0;\n    r15 = rsp + 0xf;\n    r15 &= 0xfffffffffffffff0;\n    rdi = r15 + 8;\n    mempcpy ();\n    rsi = r14 + 1;\n    *(rax) = 0;\n    eax = *((r14 + 1));\n    r14 = rsi;\n    *(r15) = 0;\n    *(rbx) = r15;\n    rbx = r15;\n    r15d = 0;\n    goto label_4;\nlabel_22:\n    *((rbp - 0x80)) = rsi;\n    rax = getenv (\"POSIXLY_CORRECT\");\n    rsi = *((rbp - 0x80));\n    eax -= eax;\n    eax |= 1;\n    *(0x00625918) = eax;\n    goto label_7;\nlabel_21:\n    eax = *((rbp - 0x48));\n    rdx = r14;\n    r15 = rbx;\n    rbx = *((rbp - 0x78));\n    rdx -= rsi;\n    ecx = rax - 0x3f;\n    rax = rdx + 1;\n    if (ecx <= 1) {\n        rax = *((rbp - 0x50));\n    }\n    rax += 0xf;\n    rax &= 0xfffffffffffffff8;\n    rcx = rax - 8;\n    if (rcx > 0x1f37) {\n        goto label_6;\n    }\n    rax += 0x17;\n    rax &= 0xfffffffffffffff0;\n    rax = rsp + 0xf;\n    rax &= 0xfffffffffffffff0;\n    rdi = rax + 8;\n    r13 = rax;\n    mempcpy ();\n    *(r15) = r13;\n    *(rax) = 0;\n    rax = *((rbp - 0x38));\n    *(r13) = 0;\n    *((rbp - 0x50)) = rax;\n    if (rax == 0) {\n        goto label_26;\n    }\n    if (*((r14 - 1)) != 0x29) {\n        goto label_27;\n    }\n    r13d = *((rbp - 0x48));\n    r13d -= 0x21;\n    if (r13d > 0x1f) {\n        goto label_28;\n    }\n    /* switch table (32 cases) at 0x41f890 */\n    ecx = (int32_t) r12b;\n    eax = fcn_00414eb0 (r14, *((rbp - 0x60)), *((rbp - 0x68)), rcx, *((rbp - 0x6c)));\n    if (eax == 0) {\n        goto label_11;\n    }\n    eax = *((rbp - 0x6c));\n    r15 = *((rbp - 0x60));\n    *((rbp - 0x58)) = r14;\n    r14 = *((rbp - 0x50));\n    r12d = eax;\n    r13d = eax;\n    r12d &= 0xfffffffb;\n    r13d &= 1;\n    if (r13d != 0) {\n        r12d = eax;\n    }\n    rax = rbx - 1;\n    *((rbp - 0x50)) = r13d;\n    rbx = *((rbp - 0x68));\n    *((rbp - 0x78)) = rax;\nlabel_15:\n    if (r15 > rbx) {\n        goto label_29;\n    }\n    eax = *((rbp - 0x6d));\n    r13 = r15;\n    *((rbp - 0x48)) = eax;\n    goto label_30;\nlabel_8:\n    ecx = 0;\n    if (*((r13 - 1)) == 0x2f) {\n        eax = *((rbp - 0x6c));\n        eax &= 5;\n        cl = (eax == 5) ? 1 : 0;\n    }\n    eax = fcn_00414eb0 (*((rbp - 0x58)), r13, rbx, 0, r12d);\n    if (eax == 0) {\n        goto label_11;\n    }\n    ecx = 0;\n    if (*((r13 - 1)) == 0x2f) {\n        eax = *((rbp - 0x6c));\n        eax &= 5;\n        cl = (eax == 5) ? 1 : 0;\n    }\n    eax = fcn_00414eb0 (*((rbp - 0x78)), r13, rbx, 0, r12d);\n    if (eax == 0) {\n        goto label_11;\n    }\nlabel_9:\n    r14 = *((rbp - 0x38));\n    do {\n        r13++;\n        if (rbx < r13) {\n            goto label_29;\n        }\nlabel_30:\n        eax = fcn_00414eb0 (r14 + 8, r15, r13, *((rbp - 0x48)), r12d);\n    } while (eax != 0);\n    if (r15 != r13) {\n        goto label_8;\n    }\n    eax = fcn_00414eb0 (*((rbp - 0x58)), r15, rbx, *((rbp - 0x48)), r12d);\n    if (eax != 0) {\n        goto label_9;\n    }\nlabel_11:\n    eax = 0;\n    goto label_10;\n    rdi = *((rbp - 0x68));\n    if (*((rbp - 0x60)) > rdi) {\n        goto label_16;\n    }\n    eax = *((rbp - 0x6c));\n    r15 = *((rbp - 0x60));\n    *((rbp - 0x48)) = r14;\n    r12d = (int32_t) r12b;\n    ebx = eax;\n    r13 = r15;\n    ebx &= 0xfffffffb;\n    if ((al & 1) != 0) {\n        ebx = eax;\n    }\nlabel_12:\n    r14 = *((rbp - 0x50));\n    do {\n        eax = fcn_00414eb0 (r14 + 8, r15, r13, r12d, ebx);\n        if (eax == 0) {\n            goto label_31;\n        }\n        r14 = *(r14);\n    } while (r14 != 0);\n    if (r15 == r13) {\n        goto label_32;\n    }\n    ecx = 0;\n    if (*((r13 - 1)) == 0x2f) {\n        eax = *((rbp - 0x6c));\n        eax &= 5;\n        cl = (eax == 5) ? 1 : 0;\n    }\nlabel_17:\n    eax = fcn_00414eb0 (*((rbp - 0x48)), r13, *((rbp - 0x68)), 0, ebx);\n    if (eax == 0) {\n        goto label_11;\n    }\nlabel_31:\n    r13++;\n    if (*((rbp - 0x68)) >= r13) {\n        goto label_12;\n    }\n    do {\nlabel_16:\n        eax = 1;\n        goto label_10;\n        r12d = (int32_t) r12b;\nlabel_14:\n        eax = *((rbp - 0x6c));\n        r13 = *((rbp - 0x50));\n        r15 = *((rbp - 0x68));\n        ebx = eax;\n        ebx &= 0xfffffffb;\n        if ((al & 1) != 0) {\n            ebx = eax;\n        }\n        goto label_33;\nlabel_13:\n        r13 = *(r13);\n        *((rbp - 0x38)) = r13;\n    } while (r13 == 0);\nlabel_33:\n    rax = strcat (r13 + 8, r14);\n    eax = fcn_00414eb0 (rax, *((rbp - 0x60)), r15, r12d, ebx);\n    if (eax != 0) {\n        goto label_13;\n    }\n    eax = 0;\n    goto label_10;\n    r12d = (int32_t) r12b;\n    eax = fcn_00414eb0 (r14, *((rbp - 0x60)), *((rbp - 0x68)), r12d, *((rbp - 0x6c)));\n    if (eax != 0) {\n        goto label_14;\n    }\n    eax = 0;\n    goto label_10;\nlabel_29:\n    r14 = *(r14);\n    *((rbp - 0x38)) = r14;\n    if (r14 != 0) {\n        goto label_15;\n    }\n    goto label_16;\nlabel_32:\n    ecx = r12d;\n    goto label_17;\nlabel_28:\n    assert_fail (\"! \\\"Invalid extended matching operator\\\", \"lib/fnmatch_loop.c\", 0x4ad, \"ext_match\");\nlabel_27:\n    assert_fail (\"p[-1] == L_(')')\", \"lib/fnmatch_loop.c\", 0x455, \"ext_match\");\nlabel_26:\n    return assert_fail (\"list != NULL\", \"lib/fnmatch_loop.c\", 0x454, \"ext_match\");\n}\n"
        },
        {
            "funcName": "fcn_00414eb0",
            "funcStartAddr": "0x414eb0",
            "funcEndAddr": "0x415993",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x414eb0 */\n#include <stdint.h>\n \nuint64_t fcn_00414eb0 (size_t arg1, uint32_t arg2, size_t arg3, int64_t arg4, signed int64_t arg5) {\n    size_t var_8h;\n    size_t var_10h;\n    int64_t var_18h;\n    signed int64_t var_20h;\n    signed int64_t var_24h;\n    uint32_t var_28h;\n    int64_t var_2ch;\n    char * property;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\nlabel_7:\n    rax = rdi + 1;\n    r14 = rsi;\n    r12d = *(rdi);\n    *((rsp + 8)) = rdx;\n    *((rsp + 0x20)) = r8d;\n    *((rsp + 0x10)) = rax;\n    if (r12b == 0) {\n        goto label_43;\n    }\n    ebx = r8d;\n    r8d &= 5;\n    r13 = rdi;\n    *((rsp + 0x28)) = r8d;\n    r15d = ecx;\n    ebp &= 2;\n    ebx &= 0x10;\nlabel_1:\n    if (ebx != 0) {\n        rax = ctype_tolower_loc ();\n        rax = *(rax);\n        r12d = *((rax + r12*4));\n    }\n    eax = r12 - 0x21;\n    if (al > 0x3b) {\n        goto label_2;\n    }\n    eax = (int32_t) al;\n    /* switch table (60 cases) at 0x41f990 */\n    if (ebp != 0) {\n        goto label_44;\n    }\n    r12d = *((r13 + 1));\n    r15 = r13 + 2;\n    *((rsp + 0x10)) = r15;\n    if (r12b == 0) {\n        goto label_4;\n    }\n    if (ebx != 0) {\n        goto label_45;\n    }\n    if (r14 == *((rsp + 8))) {\n        goto label_4;\n    }\n    eax = (int32_t) r12b;\nlabel_29:\n    edx = *(r14);\n    r13 = *((rsp + 0x10));\nlabel_8:\n    if (edx != eax) {\n        goto label_4;\n    }\nlabel_37:\n    r15d = 0;\n    goto label_25;\n    esi = imp.__libc_start_main;\n    if (esi == 0) {\n        goto label_46;\n    }\nlabel_28:\n    if (r14 == *((rsp + 8))) {\n        goto label_4;\n    }\n    r12d = *(r14);\n    if (r12b == 0x2e) {\n        goto label_47;\n    }\n    if (r12b == 0x2f) {\n        if ((*((rsp + 0x20)) & 1) != 0) {\n            goto label_4;\n        }\n    }\nlabel_26:\n    eax = *((r13 + 1));\n    if (al == 0x21) {\n        goto label_48;\n    }\n    ecx = imp.__libc_start_main;\n    if (ecx < 0) {\n        if (al == 0x5e) {\n            goto label_48;\n        }\n    }\n    *((rsp + 0x2c)) = 0;\n    r15 = *((rsp + 0x10));\nlabel_24:\n    if (ebx != 0) {\n        rax = ctype_tolower_loc ();\n        rax = *(rax);\n        r12d = *((rax + r12*4));\n    }\n    eax = (int32_t) r12b;\n    r13 = r15 + 1;\n    r15d = *(r15);\n    *((rsp + 0x24)) = eax;\n    while (sil != 0x2d) {\n        if (r12b == r15b) {\n            goto label_49;\n        }\n        r15d = (int32_t) sil;\n        r13 = rax;\nlabel_0:\n        if (r15b == 0x5d) {\n            goto label_50;\n        }\nlabel_12:\n        if (ebp == 0) {\n            if (r15b == 0x5c) {\n                goto label_51;\n            }\n        }\n        if (r15b == 0x5b) {\n            goto label_52;\n        }\n        if (r15b == 0) {\n            goto label_53;\n        }\n        esi = *(r13);\nlabel_10:\n        if (ebx != 0) {\n            *((rsp + 0x18)) = sil;\n            rax = ctype_tolower_loc ();\n            esi = *((rsp + 0x18));\n            rax = *(rax);\n            r15d = *((rax + r15*4));\n        }\nlabel_15:\n        rax = r13 + 1;\n    }\n    edx = *((r13 + 1));\n    if (dl == 0x5d) {\n        goto label_54;\n    }\n    if (dl == 0) {\n        goto label_54;\n    }\n    ecx = (int32_t) r15b;\nlabel_14:\n    rax = r13 + 2;\n    if (ebp == 0) {\n        if (dl == 0x5c) {\n            goto label_55;\n        }\n    }\nlabel_23:\n    if (dl == 0) {\n        goto label_4;\n    }\n    esi = *(rax);\n    r13 = rax + 1;\n    r15d = (int32_t) sil;\n    if (ecx > *((rsp + 0x24))) {\n        goto label_0;\n    }\n    if (r12b > dl) {\n        goto label_0;\n    }\nlabel_19:\n    r13 = rax;\nlabel_22:\n    rax = r13 + 1;\n    do {\nlabel_13:\n        r8 = rax;\n        ecx = esi;\n        if (sil == 0) {\n            goto label_4;\n        }\n        r15b = (sil == 0x5c) ? 1 : 0;\n        dl = (ebp == 0) ? 1 : 0;\n        r15b &= dl;\n        if (r15b != 0) {\n            goto label_56;\n        }\n        if (sil == 0x5b) {\n            goto label_57;\n        }\nlabel_36:\n        if (cl == 0x5d) {\n            goto label_58;\n        }\n        r13 = r8;\n        esi = *(r8);\n        rax = r13 + 1;\n    } while (1);\n    if ((*((rsp + 0x20)) & 0x20) != 0) {\n        goto label_59;\n    }\nlabel_34:\n    if (r14 == *((rsp + 8))) {\n        goto label_4;\n    }\n    eax = *(r14);\n    if (al == 0x2f) {\n        goto label_60;\n    }\n    al = (al == 0x2e) ? 1 : 0;\n    r15b &= al;\n    if (r15b != 0) {\n        goto label_4;\n    }\n    r13 = *((rsp + 0x10));\n    goto label_25;\n    if (*((rsp + 0x28)) == 5) {\n        goto label_61;\n    }\nlabel_2:\n    if (r14 == *((rsp + 8))) {\n        goto label_4;\n    }\nlabel_38:\n    eax = *(r14);\n    r13 = rax;\n    if (ebx != 0) {\n        rax = ctype_tolower_loc ();\n        rax = *(rax);\n        eax = *((rax + r13*4));\n    }\n    if (eax != r12d) {\n        goto label_4;\n    }\nlabel_27:\n    r13 = *((rsp + 0x10));\n    r15d = 0;\nlabel_25:\n    r12d = *(r13);\n    rax = r13 + 1;\n    r14++;\n    *((rsp + 0x10)) = rax;\n    if (r12b != 0) {\n        goto label_1;\n    }\nlabel_43:\n    if (*((rsp + 8)) == r14) {\n        goto label_32;\n    }\n    if ((*((rsp + 0x20)) & 8) != 0) {\n        goto label_62;\n    }\nlabel_4:\n    eax = 1;\nlabel_3:\n    return rax;\n    if ((*((rsp + 0x20)) & 0x20) == 0) {\n        goto label_2;\n    }\n    if (*((r13 + 1)) != 0x28) {\n        goto label_2;\n    }\n    edi = (int32_t) r12b;\n    r8d = (int32_t) r15b;\n    eax = fcn_00414960 (rdi, *((rsp + 0x10)), r14, *((rsp + 8)), r8, *((rsp + 0x20)));\n    if (eax == 0xffffffff) {\n        goto label_2;\n    }\n    goto label_3;\n    eax = *((rsp + 0x20));\n    eax &= 0x20;\n    *((rsp + 0x24)) = eax;\n    if (eax != 0) {\n        goto label_63;\n    }\nlabel_35:\n    if (r14 == *((rsp + 8))) {\n        goto label_64;\n    }\n    if (*(r14) != 0x2e) {\n        goto label_64;\n    }\n    if (r15b != 0) {\n        goto label_4;\n    }\nlabel_64:\n    r8d = *((r13 + 1));\n    r9 = r13 + 2;\n    if (r8b != 0x2a) {\n        if (r8b != 0x3f) {\n            goto label_65;\n        }\n    }\n    r10d = *((rsp + 0x24));\n    r13d = *((rsp + 0x20));\n    r12b = (r10d != 0) ? 1 : 0;\n    r13d &= 1;\n    do {\nlabel_5:\n        if (*(r9) == 0x28) {\n            if (r12b != 0) {\n                goto label_66;\n            }\n        }\nlabel_17:\n        if (r8b == 0x3f) {\n            goto label_67;\n        }\nlabel_9:\n        rax = r9;\nlabel_16:\n        r8d = *(rax);\n        r9 = rax + 1;\n    } while (r8b == 0x3f);\n    if (r8b == 0x2a) {\n        goto label_5;\n    }\nlabel_65:\n    ecx = *((rsp + 0x20));\n    ecx &= 1;\n    if (r8b == 0) {\n        goto label_68;\n    }\n    r13 = *((rsp + 8));\n    esi = ecx;\n    *((rsp + 0x28)) = r8b;\n    esi = -esi;\n    *((rsp + 0x18)) = r9;\n    esi &= 0x2f;\n    *((rsp + 0x10)) = ecx;\n    rdx -= r14;\n    rax = fcn_00416f00 (r14, esi, r13);\n    r8d = *((rsp + 0x28));\n    ecx = *((rsp + 0x10));\n    r12 = rax;\n    r9 = *((rsp + 0x18));\n    if (rax == 0) {\n        r12 = r13;\n    }\n    if (r8b == 0x5b) {\n        goto label_69;\n    }\n    edi = *((rsp + 0x24));\n    if (edi != 0) {\n        goto label_70;\n    }\nlabel_31:\n    if (r8b == 0x2f) {\n        goto label_71;\n    }\n    if (ecx == 0) {\n        goto label_72;\n    }\nlabel_40:\n    r15d = (int32_t) r15b;\n    if (r8b == 0x5c) {\n        goto label_73;\n    }\nlabel_42:\n    if (ebx != 0) {\n        *((rsp + 0x18)) = r8b;\n        *((rsp + 0x10)) = r9;\n        rax = ctype_tolower_loc ();\n        r8d = *((rsp + 0x18));\n        r9 = *((rsp + 0x10));\n        rax = *(rax);\n        r8d = *((rax + r8*4));\n    }\n    rax = r9 - 1;\n    *((rsp + 0x10)) = rax;\n    if (r12 <= r14) {\n        goto label_4;\n    }\n    ebp = (int32_t) r8b;\n    r13d = r15d;\n    goto label_74;\nlabel_6:\n    r14++;\n    r13d = 0;\n    if (r12 == r14) {\n        goto label_4;\n    }\nlabel_74:\n    eax = *(r14);\n    r15d = eax;\n    if (ebx != 0) {\n        rax = ctype_tolower_loc ();\n        edx = (int32_t) r15b;\n        rax = *(rax);\n        eax = *((rax + rdx*4));\n    }\n    if (eax != ebp) {\n        goto label_6;\n    }\n    eax = fcn_00414eb0 (*((rsp + 0x10)), r14, *((rsp + 8)), r13d, *((rsp + 0x20)));\n    goto label_7;\n    if (eax != 0) {\n        goto label_6;\n    }\nlabel_32:\n    eax = 0;\n    goto label_3;\nlabel_44:\n    if (r14 == *((rsp + 8))) {\n        goto label_4;\n    }\n    if (ebx == 0) {\n        goto label_75;\n    }\n    rax = ctype_tolower_loc ();\n    r13 = *((rsp + 0x10));\n    rdx = *(rax);\n    eax = 0x5c;\nlabel_30:\n    esi = *(r14);\n    edx = *((rdx + rsi*4));\n    goto label_8;\nlabel_67:\n    if (r14 == *((rsp + 8))) {\n        goto label_4;\n    }\n    if (*(r14) == 0x2f) {\n        goto label_76;\n    }\nlabel_18:\n    r14++;\n    goto label_9;\nlabel_52:\n    esi = *(r13);\n    if (sil != 0x3a) {\n        goto label_10;\n    }\n    r15 = r13;\n    edx = 0;\n    goto label_77;\nlabel_11:\n    esi = rax - 0x61;\n    if (sil > 0x18) {\n        goto label_78;\n    }\n    rdx++;\n    r15 = rcx;\n    *((rsp + rdx + 0x2f)) = al;\n    if (rdx == 0x100) {\n        goto label_4;\n    }\nlabel_77:\n    eax = *((r15 + 1));\n    rcx = r15 + 1;\n    if (al != 0x3a) {\n        goto label_11;\n    }\n    if (*((rcx + 1)) == 0x5d) {\n        goto label_79;\n    }\nlabel_78:\n    rax = r13 + 1;\n    if (r12b == 0x5b) {\n        goto label_49;\n    }\n    r13 = rax;\n    r15d = 0x3a;\n    goto label_12;\nlabel_54:\n    if (r12b == r15b) {\n        goto label_13;\n    }\n    ecx = (int32_t) r15b;\n    if (dl != 0x5d) {\n        goto label_14;\n    }\n    esi = 0x5d;\n    r13 = rax;\n    r15d = 0x2d;\n    goto label_10;\nlabel_51:\n    r15d = *(r13);\n    if (r15b == 0) {\n        goto label_4;\n    }\n    if (ebx != 0) {\n        rax = ctype_tolower_loc ();\n        rax = *(rax);\n        r15d = *((rax + r15*4));\n    }\n    esi = *((r13 + 1));\n    r13++;\n    goto label_15;\nlabel_66:\n    rdi = r9;\n    *((rsp + 0x10)) = r9;\n    *((rsp + 0x18)) = r8b;\n    rax = fcn_004137f0 (rdi);\n    r9 = *((rsp + 0x10));\n    if (rax != r9) {\n        goto label_16;\n    }\n    r8d = *((rsp + 0x18));\n    goto label_17;\nlabel_76:\n    if (r13d == 0) {\n        goto label_18;\n    }\n    goto label_4;\nlabel_57:\n    esi = *((r13 + 1));\n    if (sil == 0x3a) {\n        goto label_80;\n    }\n    if (sil == 0x3d) {\n        goto label_81;\n    }\n    r13 += 2;\n    if (sil != 0x2e) {\n        goto label_19;\n    }\n    goto label_82;\nlabel_21:\n    if (*((rdx + 1)) == 0x5d) {\n        goto label_83;\n    }\nlabel_20:\n    r13 = rdx;\nlabel_82:\n    eax = *((r13 + 1));\n    rdx = r13 + 1;\n    if (al == 0) {\n        goto label_4;\n    }\n    if (al != 0x2e) {\n        goto label_20;\n    }\n    goto label_21;\nlabel_56:\n    if (*((r13 + 1)) == 0) {\n        goto label_4;\n    }\n    esi = *((r13 + 2));\n    r13 += 2;\n    goto label_22;\nlabel_55:\n    rax = r13 + 3;\n    edx = *((r13 + 2));\n    goto label_23;\nlabel_48:\n    r15 = r13 + 2;\n    *((rsp + 0x2c)) = 1;\n    goto label_24;\nlabel_61:\n    if (r14 == *((rsp + 8))) {\n        goto label_4;\n    }\n    if (*(r14) != 0x2f) {\n        goto label_4;\n    }\n    r13 = *((rsp + 0x10));\n    r15d = 1;\n    goto label_25;\nlabel_47:\n    if (r15b == 0) {\n        goto label_26;\n    }\n    goto label_4;\nlabel_60:\n    if ((*((rsp + 0x20)) & 1) == 0) {\n        goto label_27;\n    }\n    goto label_4;\nlabel_46:\n    rax = getenv (\"POSIXLY_CORRECT\");\n    eax -= eax;\n    eax |= 1;\n    *(0x00625918) = eax;\n    goto label_28;\nlabel_75:\n    eax = 0x5c;\n    goto label_29;\nlabel_45:\n    rax = ctype_tolower_loc ();\n    rdx = *(rax);\n    eax = (int32_t) r12b;\n    eax = *((rdx + rax*4));\n    if (r14 == *((rsp + 8))) {\n        goto label_4;\n    }\n    eax = (int32_t) al;\n    r13 = r15;\n    goto label_30;\nlabel_70:\n    eax = r8 - 0x21;\n    if (al > 0x1f) {\n        goto label_31;\n    }\n    edx = 0x80000401;\n    if (((rdx >> rax) & 1) >= 0) {\n        goto label_31;\n    }\n    if (*(r9) != 0x28) {\n        goto label_31;\n    }\nlabel_69:\n    edi = *((rsp + 0x20));\n    rbx = r9 - 1;\n    eax = edi;\n    eax &= 0xfffffffb;\n    if (ecx != 0) {\n        eax = edi;\n    }\n    r13d = eax;\n    if (r12 <= r14) {\n        goto label_4;\n    }\n    rbp = *((rsp + 8));\nlabel_33:\n    ecx = (int32_t) r15b;\n    eax = fcn_00414eb0 (rbx, r14, rbp, rcx, r13d);\n    goto label_7;\n    if (eax == 0) {\n        goto label_32;\n    }\n    r14++;\n    r15d = 0;\n    if (r12 != r14) {\n        goto label_33;\n    }\n    goto label_4;\nlabel_59:\n    if (*((r13 + 1)) != 0x28) {\n        goto label_34;\n    }\n    r8d = (int32_t) r15b;\n    eax = fcn_00414960 (0x3f, *((rsp + 0x10)), r14, *((rsp + 8)), r8, *((rsp + 0x20)));\n    if (eax == 0xffffffff) {\n        goto label_34;\n    }\n    goto label_3;\nlabel_63:\n    if (*((r13 + 1)) != 0x28) {\n        goto label_35;\n    }\n    r8d = (int32_t) r15b;\n    eax = fcn_00414960 (0x2a, *((rsp + 0x10)), r14, *((rsp + 8)), r8, *((rsp + 0x20)));\n    if (eax != 0xffffffff) {\n        goto label_3;\n    }\n    goto label_35;\nlabel_81:\n    if (*((r13 + 2)) == 0) {\n        goto label_4;\n    }\n    if (*((r13 + 3)) != 0x3d) {\n        goto label_4;\n    }\n    if (*((r13 + 4)) != 0x5d) {\n        goto label_4;\n    }\n    r8 = r13 + 6;\n    ecx = *((r13 + 5));\n    goto label_36;\nlabel_50:\n    edx = *((rsp + 0x2c));\n    if (edx != 0) {\n        goto label_37;\n    }\n    goto label_4;\nlabel_53:\n    r12d = 0x5b;\n    goto label_38;\nlabel_68:\n    if (ecx == 0) {\n        goto label_32;\n    }\n    if ((*((rsp + 0x20)) & 8) != 0) {\n        goto label_32;\n    }\n    rdx -= r14;\n    rax = fcn_00416f00 (r14, 0x2f, *((rsp + 8)));\n    al = (rax != 0) ? 1 : 0;\n    eax = (int32_t) al;\n    goto label_3;\nlabel_49:\n    esi = *(r13);\n    goto label_13;\nlabel_80:\n    rdx = r13 + 2;\n    esi = *((r13 + 2));\n    r13 += 0x101;\n    goto label_84;\nlabel_39:\n    esi -= 0x61;\n    if (sil > 0x18) {\n        goto label_85;\n    }\n    rdx++;\n    esi = *(rdx);\n    if (r13 == rdx) {\n        goto label_4;\n    }\nlabel_84:\n    if (sil != 0x3a) {\n        goto label_39;\n    }\n    if (*((rdx + 1)) != 0x5d) {\n        goto label_19;\n    }\n    r8 = rdx + 3;\n    ecx = *((rdx + 2));\n    goto label_36;\nlabel_79:\n    *((rsp + 0x18)) = rcx;\n    *((rsp + rdx + 0x30)) = 0;\n    rax = wctype (rsp + 0x30);\n    rcx = *((rsp + 0x18));\n    r13 = rax;\n    if (rax == 0) {\n        goto label_4;\n    }\n    edi = *(r14);\n    *((rsp + 0x18)) = rcx;\n    eax = btowc (rdi);\n    eax = iswctype (eax, r13);\n    rcx = *((rsp + 0x18));\n    if (eax != 0) {\n        goto label_86;\n    }\n    r13 = r15 + 4;\n    r15d = *((rcx + 2));\n    goto label_0;\n    do {\nlabel_72:\n        goto label_40;\nlabel_62:\n        eax = 0;\n        al = (*(r14) != 0x2f) ? 1 : 0;\n        goto label_3;\nlabel_83:\n        r8 = r13 + 4;\n        ecx = *((r13 + 3));\n        goto label_36;\nlabel_71:\n    } while (ecx == 0);\n    rax = *((rsp + 8));\n    if (rax > r14) {\n        goto label_87;\n    }\n    goto label_4;\nlabel_41:\n    r14++;\n    if (rax == r14) {\n        goto label_4;\n    }\nlabel_87:\n    if (*(r14) != 0x2f) {\n        goto label_41;\n    }\n    ecx >>= 2;\n    ecx &= 1;\n    eax = fcn_00414eb0 (r9, r14 + 1, *((rsp + 8)), r8d, *((rsp + 0x20)));\n    goto label_7;\n    al = (eax != 0) ? 1 : 0;\n    eax = (int32_t) al;\n    goto label_3;\nlabel_73:\n    if (ebp != 0) {\n        goto label_42;\n    }\n    r8d = *(r9);\n    goto label_42;\nlabel_58:\n    eax = *((rsp + 0x2c));\n    if (eax != 0) {\n        goto label_4;\n    }\n    r13 = r8;\n    goto label_25;\nlabel_86:\n    r13 = r15 + 3;\n    esi = *((r15 + 3));\n    rax = r15 + 4;\n    goto label_13;\nlabel_85:\n    esi = 0x3a;\n    r13 = rax;\n    goto label_22;\n}\n"
        },
        {
            "funcName": "fcn_004159a0",
            "funcStartAddr": "0x4159a0",
            "funcEndAddr": "0x415bd8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4159a0 */\n#include <stdint.h>\n \nuint64_t fcn_004159a0 (char * * arg1, char * arg2, int64_t arg3) {\n    int64_t var_54h;\n    char * s;\n    char * * src;\n    mbstate_t * ps;\n    int64_t var_28h;\n    wchar_t * dst;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r12d = edx;\n    *((rbp - 0x48)) = rdi;\n    *((rbp - 0x50)) = rsi;\n    rax = ctype_get_mb_cur_max ();\n    while (rax == 0) {\nlabel_0:\n        rbx = *((rbp - 0x50));\n        strlen (*((rbp - 0x50)));\n        ecx = r12d;\n        ecx >>= 2;\n        ecx &= 1;\n        fcn_00414eb0 (*((rbp - 0x48)), rbx, rbx + rax, ecx, r12d);\nlabel_1:\n        rsp = rbp - 0x28;\n        return rax;\n        *((rbp - 0x38)) = 0;\n        rax = mbsrtowcs (0, rbp - 0x48, 0, rbp - 0x38);\n        rax++;\n        rbx = rax;\n    }\n    eax = mbsinit (rbp - 0x38);\n    if (eax == 0) {\n        goto label_2;\n    }\n    rax = mbsrtowcs (0, rbp - 0x50, 0, rbp - 0x38);\n    rax++;\n    r13 = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    eax = mbsinit (rbp - 0x38);\n    if (eax == 0) {\n        goto label_3;\n    }\n    rax = rbx;\n    rax += r13;\n    if (rax < 0) {\n        goto label_4;\n    }\n    rdx = 0x3fffffffffffffff;\n    if (rax > rdx) {\n        goto label_4;\n    }\n    rdi = rax*4;\n    if (rax > 0x7cf) {\n        goto label_5;\n    }\n    rdi += 0x17;\n    rdi &= 0xfffffffffffffff0;\n    r14 = rsp + 0xf;\n    r14 &= 0xfffffffffffffff0;\n    r15 = r14 + rbx*4;\n    mbsrtowcs (r14, rbp - 0x48, rbx, rbp - 0x38);\n    eax = mbsinit (rbp - 0x38);\n    if (eax == 0) {\n        goto label_6;\n    }\n    mbsrtowcs (r15, rbp - 0x50, r13, rbp - 0x38);\n    ecx = r12d;\n    ecx >>= 2;\n    ecx &= 1;\n    fcn_00413e80 (r14, r15, r15 + r13*4 - 4, ecx, r12d);\n    goto label_1;\n    do {\nlabel_4:\n        errno_location ();\n        *(rax) = 0xc;\n        eax = 0xffffffff;\n        goto label_1;\nlabel_5:\n        rax = malloc (rdi);\n        r14 = rax;\n    } while (rax == 0);\n    r15 = rax + rbx*4;\n    mbsrtowcs (rax, rbp - 0x48, rbx, rbp - 0x38);\n    eax = mbsinit (rbp - 0x38);\n    if (eax != 0) {\n        mbsrtowcs (r15, rbp - 0x50, r13, rbp - 0x38);\n        ecx = r12d;\n        ecx >>= 2;\n        ecx &= 1;\n        eax = fcn_00413e80 (r14, r15, r15 + r13*4 - 4, ecx, r12d);\n        *((rbp - 0x54)) = eax;\n        free (r14);\n        eax = *((rbp - 0x54));\n        goto label_1;\n    }\nlabel_6:\n    assert_fail (\"mbsinit (&ps)\", \"lib/fnmatch.c\", 0x147, \"gnu_fnmatch\");\nlabel_3:\n    assert_fail (\"mbsinit (&ps)\", \"lib/fnmatch.c\", 0x12d, \"gnu_fnmatch\");\nlabel_2:\n    return assert_fail (\"mbsinit (&ps)\", \"lib/fnmatch.c\", 0x129, \"gnu_fnmatch\");\n}\n"
        },
        {
            "funcName": "fcn_00415be0",
            "funcStartAddr": "0x415be0",
            "funcEndAddr": "0x4160a2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x415be0 */\n#include <stdint.h>\n \nuint64_t fcn_00415be0 (void * arg1, uint32_t arg2) {\n    int64_t var_8h;\n    uint32_t var_10h;\n    void * ptr;\n    void * var_20h;\n    size_t size;\n    uint32_t var_30h;\n    int64_t var_3fh;\n    void * s2;\n    uint32_t var_48h;\n    uint32_t var_50h;\n    void ** var_58h;\n    uint32_t var_60h;\n    uint32_t var_68h;\n    int64_t var_78h;\n    rdi = arg1;\n    rsi = arg2;\n    *((rsp + 0x20)) = rdi;\n    *((rsp + 0x30)) = rsi;\n    if (rsi != 0) {\n        goto label_11;\n    }\n    *((rsp + 0x28)) = 0x1000;\n    if (rdi != 0) {\n        goto label_12;\n    }\n    do {\n        rax = malloc (*((rsp + 0x28)));\n        *((rsp + 0x18)) = rax;\n        if (rax != 0) {\n            goto label_13;\n        }\nlabel_2:\n        rax = *((rsp + 0x18));\n        return rax;\nlabel_11:\n        rax = *((rsp + 0x30));\n        *((rsp + 0x28)) = rax;\n    } while (*((rsp + 0x20)) == 0);\n    rax = *((rsp + 0x20));\n    *((rsp + 0x18)) = rax;\nlabel_13:\n    rbx = *((rsp + 0x18));\n    rbx += *((rsp + 0x28));\n    rdx = rsp + 0x60;\n    esi = 0x41d794;\n    *((rbx - 1)) = 0;\n    edi = 1;\n    eax = lxstat ();\n    if (eax < 0) {\n        goto label_14;\n    }\n    r15 = *((rsp + 0x60));\n    rdx = rsp + 0x60;\n    esi = 0x41b371;\n    edi = 1;\n    r14 = *((rsp + 0x68));\n    *((rsp + 8)) = r15;\n    eax = lxstat ();\n    if (eax < 0) {\n        goto label_14;\n    }\n    rax = rbx - 1;\n    rsi = *((rsp + 0x68));\n    *((rsp + 0x40)) = rax;\n    rax = *((rsp + 0x60));\n    *((rsp + 0x50)) = rsi;\n    *((rsp + 0x48)) = rax;\n    dl = (r15 != rax) ? 1 : 0;\n    al = (r14 != rsi) ? 1 : 0;\n    dl |= al;\n    *((rsp + 0x3f)) = dl;\n    if (dl == 0) {\n        goto label_15;\n    }\n    rax = errno_location ();\n    ebp = 0;\n    r15d = 0xffffff9c;\n    r12 = rax;\nlabel_1:\n    eax = 0;\n    eax = openat (r15d, 0x41d793, 0);\n    r15d = eax;\n    if (eax < 0) {\n        goto label_16;\n    }\n    rdx = rsp + 0x60;\n    esi = eax;\n    edi = 1;\n    eax = fxstat ();\n    if (eax != 0) {\n        goto label_17;\n    }\n    if (rbp != 0) {\n        rdi = rbp;\n        eax = closedir ();\n        if (eax != 0) {\n            goto label_18;\n        }\n    }\n    rax = *((rsp + 0x60));\n    edi = r15d;\n    *((rsp + 0x10)) = rax;\n    rax = *((rsp + 0x68));\n    *((rsp + 0x58)) = rax;\n    rax = fdopendir ();\n    if (rax == 0) {\n        goto label_18;\n    }\n    r13d = *((rsp + 0x3f));\n    do {\nlabel_0:\n        *(r12) = 0;\n        rdi = rbp;\n        rax = readdir ();\n        if (rax == 0) {\n            goto label_19;\n        }\n        if (*((rax + 0x13)) == 0x2e) {\n            goto label_20;\n        }\nlabel_4:\n        if (r13b == 0) {\n            goto label_3;\n        }\n        rcx = *((rsp + 8));\n        dl = (*(rax) == r14) ? 1 : 0;\n        cl = (*((rsp + 0x10)) != rcx) ? 1 : 0;\n        dl |= cl;\n    } while (dl == 0);\n    r13d = edx;\nlabel_3:\n    rbx = rax + 0x13;\n    rcx = rsp + 0x60;\n    esi = r15d;\n    edi = 1;\n    r8d = 0x100;\n    rdx = rbx;\n    eax = fxstatat ();\n    if (eax != 0) {\n        goto label_0;\n    }\n    eax = *((rsp + 0x78));\n    eax &= 0xf000;\n    if (eax != 0x4000) {\n        goto label_0;\n    }\n    rax = *((rsp + 8));\n    if (*((rsp + 0x60)) != rax) {\n        goto label_0;\n    }\n    if (*((rsp + 0x68)) != r14) {\n        goto label_0;\n    }\n    r13 = *((rsp + 0x40));\n    r13 -= *((rsp + 0x18));\n    rax = strlen (rbx);\n    r14 = rax;\n    if (r13 <= rax) {\n        if (*((rsp + 0x30)) != 0) {\n            goto label_21;\n        }\n        rax = *((rsp + 0x28));\n        rdx = rax;\n        if (r14 >= rax) {\n            rdx = r14;\n        }\n        rax += rdx;\n        *((rsp + 0x40)) = rdx;\n        *((rsp + 8)) = rax;\n        if (rax < 0) {\n            goto label_22;\n        }\n        rax = realloc (*((rsp + 0x18)), rax);\n        rdx = *((rsp + 0x40));\n        if (rax == 0) {\n            goto label_22;\n        }\n        rdx += r13;\n        *((rsp + 0x18)) = rax;\n        rdx -= r13;\n        rax = memcpy (rax + rdx, rax + r13, *((rsp + 0x28)));\n        *((rsp + 0x40)) = rax;\n        rax = *((rsp + 8));\n        *((rsp + 0x28)) = rax;\n    }\n    r8 = *((rsp + 0x40));\n    r8 -= r14;\n    rax = memcpy (r8, rbx, r14);\n    rsi = *((rsp + 0x58));\n    r8 = rax;\n    rax = rax - 1;\n    *((rsp + 0x40)) = rax;\n    rax = *((rsp + 0x10));\n    r14 = rsi;\n    *((r8 - 1)) = 0x2f;\n    *((rsp + 8)) = rax;\n    if (*((rsp + 0x48)) != rax) {\n        goto label_1;\n    }\n    if (*((rsp + 0x50)) != rsi) {\n        goto label_1;\n    }\n    rdi = rbp;\n    eax = closedir ();\n    if (eax != 0) {\n        goto label_23;\n    }\n    rbx = *((rsp + 0x18));\n    rbx += *((rsp + 0x28));\nlabel_15:\n    rax = *((rsp + 0x18));\n    rsi = *((rsp + 0x28));\n    rax = rax + rsi - 1;\n    if (*((rsp + 0x40)) == rax) {\n        goto label_24;\n    }\nlabel_10:\n    rbx -= rsi;\n    memmove (*((rsp + 0x18)), *((rsp + 0x40)), rbx);\n    if (*((rsp + 0x30)) == 0) {\n        goto label_25;\n    }\nlabel_9:\n    rax = *((rsp + 0x20));\n    if (rax == 0) {\n        rax = *((rsp + 0x18));\n    }\n    *((rsp + 0x18)) = rax;\n    goto label_2;\nlabel_19:\n    ebx = *(r12);\n    if (ebx != 0) {\n        goto label_26;\n    }\n    if (r13b == 0) {\n        goto label_26;\n    }\n    rdi = rbp;\n    rewinddir ();\n    rdi = rbp;\n    rax = readdir ();\n    if (rax == 0) {\n        goto label_27;\n    }\n    r13d = 0;\n    if (*((rax + 0x13)) != 0x2e) {\n        goto label_3;\n    }\nlabel_20:\n    if (*((rax + 0x14)) == 0) {\n        goto label_0;\n    }\n    if (*((rax + 0x14)) != 0x2e) {\n        goto label_4;\n    }\n    goto label_0;\nlabel_27:\n    ebx = *(r12);\nlabel_26:\n    if (ebx == 0) {\n        *(r12) = 2;\n        ebx = 2;\n    }\nlabel_7:\n    rdi = rbp;\n    closedir ();\nlabel_6:\n    if (*((rsp + 0x20)) == 0) {\n        goto label_28;\n    }\n    do {\nlabel_5:\n        *(r12) = ebx;\n        *((rsp + 0x18)) = 0;\n        goto label_2;\nlabel_14:\n        rax = errno_location ();\n        r12 = rax;\nlabel_23:\n        ebx = *(r12);\n    } while (*((rsp + 0x20)) != 0);\nlabel_28:\n    free (*((rsp + 0x18)));\n    goto label_5;\nlabel_12:\n    errno_location ();\n    *((rsp + 0x18)) = 0;\n    *(rax) = 0x16;\n    goto label_2;\nlabel_18:\n    ebx = *(r12);\nlabel_8:\n    close (r15d);\n    goto label_6;\nlabel_16:\n    ebx = *(r12);\n    if (rbp == 0) {\n        goto label_6;\n    }\n    goto label_7;\nlabel_17:\n    ebx = *(r12);\n    if (rbp == 0) {\n        goto label_8;\n    }\n    rdi = rbp;\n    closedir ();\n    goto label_8;\nlabel_25:\n    rax = realloc (*((rsp + 0x18)), rbx);\n    *((rsp + 0x20)) = rax;\n    goto label_9;\nlabel_24:\n    rax = *((rsp + 0x40));\n    *((rax - 1)) = 0x2f;\n    rax--;\n    *((rsp + 0x40)) = rax;\n    goto label_10;\nlabel_22:\n    *(r12) = 0xc;\n    ebx = 0xc;\n    goto label_7;\nlabel_21:\n    *(r12) = 0x22;\n    ebx = 0x22;\n    goto label_7;\n}\n"
        },
        {
            "funcName": "fcn_004160b0",
            "funcStartAddr": "0x4160b0",
            "funcEndAddr": "0x41618f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4160b0 */\n#include <stdint.h>\n \nuint64_t fcn_004160b0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r11 = rdi + 8;\n    r12d = *((rsi + 0x2c));\n    ebp = *(rsi);\n    rbx = *((rsi + 0x30));\n    r9d = r12d;\n    r10d = ebp;\n    r8 = rbx;\nlabel_1:\n    if (r10d <= r8d) {\n        goto label_2;\n    }\nlabel_0:\n    if (r9d >= r8d) {\n        goto label_2;\n    }\n    r14d = r10d;\n    edx = r8d;\n    r14d -= r8d;\n    edx -= r9d;\n    if (r14d <= edx) {\n        goto label_3;\n    }\n    rcx = (int64_t) r9d;\n    r10d -= edx;\n    edx--;\n    rdx += rcx;\n    rax = rdi + rcx*8;\n    r13 = r11 + rdx*8;\n    rdx = (int64_t) r10d;\n    rdx -= rcx;\n    do {\n        rcx = *(rax);\n        r14 = *((rax + rdx*8));\n        *(rax) = r14;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (r13 != rax);\n    if (r10d > r8d) {\n        goto label_0;\n    }\nlabel_2:\n    eax = ebp;\n    *((rsi + 0x30)) = ebp;\n    eax -= r8d;\n    r12d += eax;\n    *((rsi + 0x2c)) = r12d;\n    r12 = rbx;\n    r13 = rbx;\n    r14 = rbx;\n    r15 = rbx;\n    return rax;\nlabel_3:\n    rdx = (int64_t) r9d;\n    ecx = r14 - 1;\n    rcx += rdx;\n    rax = rdi + rdx*8;\n    r13 = r11 + rcx*8;\n    rcx = rbx;\n    rcx -= rdx;\n    rdx = rcx;\n    do {\n        rcx = *(rax);\n        r15 = *((rax + rdx*8));\n        *(rax) = r15;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (rax != r13);\n    r9d += r14d;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00416190",
            "funcStartAddr": "0x416190",
            "funcEndAddr": "0x4167ac",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x416190 */\n#include <stdint.h>\n \nint64_t fcn_00416190 (int64_t arg_90h, int64_t arg_98h, int64_t arg_a0h, signed int64_t arg1, int64_t arg2, char * arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_ch;\n    int64_t var_10h;\n    void * ptr;\n    int64_t var_20h;\n    int64_t var_28h;\n    char * s;\n    int64_t var_38h;\n    int64_t c;\n    signed int64_t var_40h;\n    int64_t var_44h;\n    void * var_48h;\n    size_t nmeb;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rax = *((rsp + 0x90));\n    *((rsp + 0x40)) = edi;\n    *((rsp + 0x28)) = rsi;\n    r14 = *((rax + 0x20));\n    *((rsp + 0x30)) = rdx;\n    *(rsp) = rcx;\n    eax = *(r14);\n    *((rsp + 0x20)) = r8;\n    *((rsp + 0xc)) = r9d;\n    *((rsp + 0x3f)) = al;\n    if (al == 0x3d) {\n        goto label_11;\n    }\n    if (al == 0) {\n        goto label_11;\n    }\n    do {\n        rbp++;\n        eax = *(rbp);\n        if (al == 0) {\n            goto label_12;\n        }\n    } while (al != 0x3d);\nlabel_12:\n    r13 = rbp;\n    r13 -= r14;\nlabel_6:\n    rbx = *(rsp);\n    r12d = 0;\n    rax = *(rbx);\n    *((rsp + 0x10)) = rax;\n    r15 = rax;\n    if (rax != 0) {\n        goto label_13;\n    }\n    goto label_14;\n    do {\n        r12 = (int64_t) r8d;\nlabel_13:\n        eax = strncmp (r15, r14, r13);\n        if (eax == 0) {\n            rax = strlen (r15);\n            if (rax == r13) {\n                goto label_15;\n            }\n        }\n        rbx += 0x20;\n        r15 = *(rbx);\n        r8d = r12 + 1;\n    } while (r15 != 0);\n    rcx = *(rsp);\n    *((rsp + 0x4c)) = r8d;\n    r9d = 0;\n    ebx = 0;\n    *((rsp + 0x44)) = 0xffffffff;\n    r15 = r9;\n    *((rsp + 0x38)) = 0;\n    *((rsp + 0x48)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x10)) = rbp;\n    do {\n        eax = strncmp (*((rsp + 0x10)), r14, r13);\n        if (eax == 0) {\n            if (rbx == 0) {\n                goto label_16;\n            }\n            eax = *((rsp + 0xc));\n            if (eax == 0) {\n                goto label_17;\n            }\nlabel_0:\n            r11d = *((rsp + 0x38));\n            if (r11d != 0) {\n                goto label_1;\n            }\n            r10d = *((rsp + 0x98));\n            if (r10d == 0) {\n                goto label_18;\n            }\n            if (*((rsp + 0x18)) == 0) {\n                goto label_19;\n            }\nlabel_3:\n            rax = *((rsp + 0x18));\n            *((rax + r15)) = 1;\n        }\nlabel_1:\n        rbp += 0x20;\n        rdi = *(rbp);\n        r15++;\n    } while (rdi != 0);\n    rbp = *((rsp + 0x10));\n    if (*((rsp + 0x18)) != 0) {\n        goto label_20;\n    }\n    r9d = *((rsp + 0x38));\n    if (r9d != 0) {\n        goto label_20;\n    }\n    if (rbx == 0) {\nlabel_14:\n        eax = *((rsp + 0xc));\n        if (eax != 0) {\n            rax = *((rsp + 0x90));\n            rcx = *((rsp + 0x28));\n            rax = *(rax);\n            rax = *((rcx + rax*8));\n            if (*((rax + 1)) == 0x2d) {\n                goto label_21;\n            }\n            esi = *((rsp + 0x3f));\n            rax = strchr (*((rsp + 0x30)), rsi);\n            rdx = rax;\n            eax = 0xffffffff;\n            if (rdx != 0) {\n                goto label_5;\n            }\n        }\nlabel_21:\n        ecx = *((rsp + 0x98));\n        if (ecx != 0) {\n            goto label_22;\n        }\nlabel_4:\n        rax = *((rsp + 0x90));\n        *((rax + 0x20)) = 0;\n        *(rax)++;\n        *((rax + 8)) = 0;\n        eax = 0x3f;\n        return rax;\n    }\n    r12d = *((rsp + 0x44));\nlabel_15:\n    rax = *((rsp + 0x90));\n    rcx = *((rsp + 0x90));\n    edx = *(rax);\n    *((rcx + 0x20)) = 0;\n    eax = rdx + 1;\n    *(rcx) = eax;\n    ecx = *((rbx + 8));\n    if (*(rbp) != 0) {\n        goto label_23;\n    }\n    if (ecx == 1) {\n        goto label_24;\n    }\nlabel_2:\n    rax = *((rsp + 0x20));\n    if (rax != 0) {\n        *(rax) = r12d;\n    }\n    rdx = *((rbx + 0x10));\n    eax = *((rbx + 0x18));\n    if (rdx != 0) {\n        *(rdx) = eax;\n        eax = 0;\n    }\nlabel_5:\n    return rax;\nlabel_17:\n    eax = *((rbp + 8));\n    if (*((rbx + 8)) != eax) {\n        goto label_0;\n    }\n    rax = *((rbp + 0x10));\n    if (*((rbx + 0x10)) != rax) {\n        goto label_0;\n    }\n    eax = *((rbp + 0x18));\n    if (*((rbx + 0x18)) != eax) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_23:\n    if (ecx == 0) {\n        goto label_25;\n    }\n    rax = *((rsp + 0x90));\n    rbp++;\n    *((rax + 0x10)) = rbp;\n    goto label_2;\nlabel_16:\n    *((rsp + 0x44)) = r15d;\n    rbx = rbp;\n    goto label_1;\nlabel_18:\n    *((rsp + 0x38)) = 1;\n    if (*((rsp + 0x18)) == 0) {\n        goto label_1;\n    }\n    goto label_3;\nlabel_22:\n    rax = *((rsp + 0x28));\n    edx = 5;\n    rbx = *(rax);\n    rax = dcgettext (0, \"%s: unrecognized option '%s%s'\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r14;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbx;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_4;\nlabel_20:\n    r8d = *((rsp + 0x98));\n    if (r8d != 0) {\n        edi = *((rsp + 0x38));\n        if (edi == 0) {\n            goto label_26;\n        }\n        rax = *((rsp + 0x28));\n        edx = 5;\n        rbx = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' is ambiguous\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r14;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbx;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        rax = *((rsp + 0x90));\n        r14 = *((rax + 0x20));\n    }\nlabel_9:\n    esi = *((rsp + 0x48));\n    if (esi != 0) {\n        goto label_27;\n    }\nlabel_7:\n    rax = strlen (r14);\n    r14 += rax;\n    rax = *((rsp + 0x90));\n    *((rax + 0x20)) = r14;\n    *(rax)++;\n    *((rax + 8)) = 0;\n    eax = 0x3f;\n    goto label_5;\nlabel_24:\n    if (eax >= *((rsp + 0x40))) {\n        goto label_28;\n    }\n    rcx = *((rsp + 0x90));\n    edx += 2;\n    rax = (int64_t) eax;\n    *(rcx) = edx;\n    rcx = *((rsp + 0x28));\n    rax = *((rcx + rax*8));\n    rcx = *((rsp + 0x90));\n    *((rcx + 0x10)) = rax;\n    goto label_2;\nlabel_11:\n    r13d = 0;\n    goto label_6;\nlabel_25:\n    edx = *((rsp + 0x98));\n    while (1) {\n        eax = *((rbx + 0x18));\n        rcx = *((rsp + 0x90));\n        *((rcx + 8)) = eax;\n        eax = 0x3f;\n        goto label_5;\nlabel_19:\n        rdi = *((rsp + 0x4c));\n        rax = calloc (rdi, 1);\n        *((rsp + 0x18)) = rax;\n        if (rax == 0) {\n            goto label_29;\n        }\n        rax = *((rsp + 0x44));\n        rcx = *((rsp + 0x18));\n        *((rsp + 0x48)) = 1;\n        *((rcx + rax)) = 1;\n        goto label_3;\n        rax = *((rsp + 0x28));\n        r12 = *(rbx);\n        edx = 5;\n        rbp = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' doesn't allow an argument\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r12;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_27:\n    free (*((rsp + 0x18)));\n    goto label_7;\nlabel_28:\n    eax = *((rsp + 0x98));\n    if (eax != 0) {\n        goto label_30;\n    }\nlabel_10:\n    eax = *((rbx + 0x18));\n    rcx = *((rsp + 0x90));\n    *((rcx + 8)) = eax;\n    rax = *((rsp + 0x30));\n    al = (*(rax) != 0x3a) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = rax * 5;\n    goto label_5;\nlabel_26:\n    rdi = stderr;\n    flockfile ();\n    rax = *((rsp + 0x90));\n    edx = 5;\n    rbx = *((rax + 0x20));\n    rax = *((rsp + 0x28));\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' is ambiguous; possibilities:\");\n    rdi = stderr;\n    r9 = rbx;\n    r8 = *((rsp + 0xa0));\n    rcx = rbp;\n    rdx = rax;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    rax = *((rsp + 0x18));\n    rdi = stderr;\n    rbx = *(rsp);\n    r12 = rax + r12 + 1;\n    while (*(rbp) == 0) {\nlabel_8:\n        rbp++;\n        rbx += 0x20;\n        if (r12 == rbp) {\n            goto label_31;\n        }\n    }\n    r8 = *(rbx);\n    edx = \" '%s%s';\n    esi = 1;\n    eax = 0;\n    rcx = *((rsp + 0xa0));\n    fprintf_chk ();\n    rdi = stderr;\n    goto label_8;\nlabel_31:\n    fputc (0xa, rdi);\n    rdi = stderr;\n    funlockfile ();\n    rax = *((rsp + 0x90));\n    r14 = *((rax + 0x20));\n    goto label_9;\nlabel_30:\n    rax = *((rsp + 0x28));\n    r12 = *(rbx);\n    edx = 5;\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' requires an argument\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r12;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbp;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_10;\nlabel_29:\n    *((rsp + 0x38)) = 1;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_004167b0",
            "funcStartAddr": "0x4167b0",
            "funcEndAddr": "0x416d76",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4167b0 */\n#include <stdint.h>\n \nuint64_t fcn_004167b0 (int64_t arg_70h, int64_t arg_78h, int64_t arg1, int64_t arg2, int64_t arg3, uint32_t arg4, int64_t arg5, int64_t arg6) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_1ch;\n    int64_t var_20h;\n    int64_t var_28h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rbx = *((rsp + 0x70));\n    *((rsp + 8)) = rcx;\n    *((rsp + 0x10)) = r8;\n    r13d = *((rbx + 4));\n    if (edi <= 0) {\n        goto label_16;\n    }\n    eax = *(rbx);\n    r12 = rsi;\n    r15 = rdx;\n    *((rbx + 0x10)) = 0;\n    if (eax == 0) {\n        goto label_17;\n    }\n    esi = *((rbx + 0x18));\n    if (esi == 0) {\nlabel_1:\n        *((rbx + 0x30)) = eax;\n        *((rbx + 0x2c)) = eax;\n        *((rbx + 0x20)) = 0;\n        eax = *(r15);\n        if (al == 0x2d) {\n            goto label_18;\n        }\n        if (al == 0x2b) {\n            goto label_19;\n        }\n        ecx = *((rsp + 0x78));\n        edx = 0;\n        if (ecx == 0) {\n            goto label_20;\n        }\nlabel_8:\n        *((rbx + 0x28)) = 0;\n        goto label_11;\n    }\n    eax = *(rdx);\n    rdx = *((rbx + 0x20));\n    ecx = rax - 0x2b;\n    ecx &= 0xfd;\n    if (ecx != 0) {\n        goto label_21;\n    }\n    eax = *((r15 + 1));\n    r15++;\n    eax = 0;\n    if (al == 0x3a) {\n        r13d = eax;\n    }\n    if (rdx != 0) {\n        goto label_22;\n    }\n    do {\nlabel_0:\n        eax = *(rbx);\n        if (*((rbx + 0x30)) > eax) {\n            *((rbx + 0x30)) = eax;\n        }\n        if (eax < *((rbx + 0x2c))) {\n            *((rbx + 0x2c)) = eax;\n        }\n        if (*((rbx + 0x28)) == 1) {\n            goto label_23;\n        }\nlabel_4:\n        if (ebp == eax) {\n            goto label_24;\n        }\n        rdx = (int64_t) eax;\n        ecx = 3;\n        edi = 0x41f171;\n        r14 = *((r12 + rdx*8));\n        rsi = *((r12 + rdx*8));\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (ebp > eax) ? 1 : 0;\n        if (cl != 0) {\n            goto label_25;\n        }\n        edx = *((rbx + 0x2c));\n        ecx = *((rbx + 0x30));\n        eax++;\n        *(rbx) = eax;\n        if (edx == ecx) {\n            goto label_26;\n        }\n        if (eax != ecx) {\n            fcn_004160b0 (r12, rbx);\n            edx = *((rbx + 0x2c));\n        }\nlabel_12:\n        *((rbx + 0x30)) = ebp;\n        *(rbx) = ebp;\n        goto label_27;\nlabel_18:\n        *((rbx + 0x28)) = 2;\n        r15++;\n        edx = 0;\nlabel_11:\n        *((rbx + 0x18)) = 1;\n        eax = *(r15);\nlabel_21:\n        eax = 0;\n        if (al == 0x3a) {\n            r13d = eax;\n        }\n    } while (rdx == 0);\nlabel_22:\n    if (*(rdx) == 0) {\n        goto label_0;\n    }\nlabel_6:\n    r8 = rdx + 1;\n    *((rsp + 0x20)) = rdx;\n    *((rbx + 0x20)) = r8;\n    r14d = *(rdx);\n    *((rsp + 0x28)) = r8;\n    *((rsp + 0x1c)) = r14b;\n    rax = strchr (r15, r14d);\n    rdx = *((rsp + 0x20));\n    ecx = *((rsp + 0x1c));\n    r8 = *((rsp + 0x28));\n    if (*((rdx + 1)) == 0) {\n        *(rbx)++;\n    }\n    ecx -= 0x3a;\n    if (cl <= 1) {\n        goto label_28;\n    }\n    if (rax == 0) {\n        goto label_28;\n    }\n    ecx = *((rax + 1));\n    if (*(rax) == 0x57) {\n        goto label_29;\n    }\nlabel_7:\n    if (cl == 0x3a) {\n        goto label_30;\n    }\n    do {\nlabel_2:\n        eax = r14d;\n        return rax;\nlabel_25:\n        if (*(r14) == 0x2d) {\n            goto label_31;\n        }\nlabel_5:\n        edx = *((rbx + 0x28));\n        if (edx == 0) {\n            goto label_16;\n        }\n        eax++;\n        *((rbx + 0x10)) = r14;\n        r14d = 1;\n        *(rbx) = eax;\n    } while (1);\nlabel_17:\n    *(rbx) = 1;\n    eax = 1;\n    goto label_1;\nlabel_24:\n    ebp = *((rbx + 0x30));\n    edx = *((rbx + 0x2c));\nlabel_27:\n    if (edx != ebp) {\n        *(rbx) = edx;\n    }\nlabel_16:\n    r14d = 0xffffffff;\n    goto label_2;\nlabel_23:\n    edx = *((rbx + 0x30));\n    if (*((rbx + 0x2c)) == edx) {\n        goto label_32;\n    }\n    if (eax != edx) {\n        *((rsp + 0x1c)) = r9d;\n        fcn_004160b0 (r12, rbx);\n        edx = *(rbx);\n        r9d = *((rsp + 0x1c));\n    }\nlabel_9:\n    if (ebp <= edx) {\n        goto label_33;\n    }\n    rax = (int64_t) edx;\n    while (*(rcx) != 0x2d) {\nlabel_3:\n        edx = rsi + 1;\n        rax++;\n        *(rbx) = edx;\n        if (ebp <= eax) {\n            goto label_33;\n        }\n        rcx = *((r12 + rax*8));\n        esi = eax;\n        edx = eax;\n    }\n    if (*((rcx + 1)) == 0) {\n        goto label_3;\n    }\n    eax = *(rbx);\nlabel_10:\n    *((rbx + 0x30)) = edx;\n    goto label_4;\nlabel_31:\n    ecx = *((r14 + 1));\n    if (cl == 0) {\n        goto label_5;\n    }\n    if (*((rsp + 8)) == 0) {\n        goto label_34;\n    }\n    if (cl == 0x2d) {\n        goto label_35;\n    }\n    if (r9d == 0) {\n        goto label_34;\n    }\n    if (*((r14 + 2)) == 0) {\n        esi = (int32_t) cl;\n        *((rsp + 0x1c)) = r9d;\n        rax = strchr (r15, rsi);\n        r9d = *((rsp + 0x1c));\n        if (rax != 0) {\n            goto label_34;\n        }\n    }\n    rdx = r14 + 1;\n    *((rbx + 0x20)) = rdx;\n    eax = fcn_00416190 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), r9);\n    r14d = eax;\n    if (eax != 0xffffffff) {\n        goto label_2;\n    }\n    rax = *(rbx);\n    r14 = *((r12 + rax*8));\nlabel_34:\n    rdx = r14 + 1;\n    goto label_6;\nlabel_29:\n    if (*((rsp + 8)) == 0) {\n        goto label_7;\n    }\n    if (cl != 0x3b) {\n        goto label_7;\n    }\n    if (*((rdx + 1)) == 0) {\n        rax = *(rbx);\n        if (eax == ebp) {\n            goto label_36;\n        }\n        r8 = *((r12 + rax*8));\n    }\n    *((rbx + 0x20)) = r8;\n    *((rbx + 0x10)) = 0;\nlabel_14:\n    eax = fcn_00416190 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), 0);\n    r14d = eax;\n    goto label_2;\nlabel_20:\n    *((rsp + 0x1c)) = r9d;\n    rax = getenv (\"POSIXLY_CORRECT\");\n    r9d = *((rsp + 0x1c));\n    if (rax == 0) {\n        goto label_37;\n    }\n    rdx = *((rbx + 0x20));\n    goto label_8;\nlabel_30:\n    edx = *((rdx + 1));\n    if (*((rax + 2)) == 0x3a) {\n        goto label_38;\n    }\n    rax = *(rbx);\n    if (dl != 0) {\n        goto label_39;\n    }\n    if (ebp == eax) {\n        goto label_40;\n    }\n    edx = rax + 1;\n    rax = *((r12 + rax*8));\n    *(rbx) = edx;\n    *((rbx + 0x10)) = rax;\nlabel_13:\n    *((rbx + 0x20)) = 0;\n    goto label_2;\nlabel_32:\n    if (eax == edx) {\n        goto label_9;\n    }\n    *((rbx + 0x2c)) = eax;\n    edx = eax;\n    goto label_9;\nlabel_33:\n    eax = edx;\n    goto label_10;\nlabel_19:\n    *((rbx + 0x28)) = 0;\n    r15++;\n    edx = 0;\n    goto label_11;\nlabel_28:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0x3f;\n        goto label_2;\nlabel_26:\n        *((rbx + 0x2c)) = eax;\n        edx = eax;\n        goto label_12;\nlabel_39:\n        eax++;\n        *((rbx + 0x10)) = r8;\n        *(rbx) = eax;\n        goto label_13;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: invalid option -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_38:\n    if (dl != 0) {\n        *((rbx + 0x10)) = r8;\n        *(rbx)++;\n        goto label_13;\nlabel_37:\n        *((rbx + 0x28)) = 1;\n        rdx = *((rbx + 0x20));\n        goto label_11;\n    }\n    *((rbx + 0x10)) = 0;\n    goto label_13;\nlabel_40:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_13;\nlabel_35:\n        rdx = r14 + 2;\n        *((rbx + 0x20)) = rdx;\n        goto label_14;\nlabel_36:\n        if (r13d != 0) {\n            goto label_41;\n        }\nlabel_15:\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_2;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_41:\n    rbp = *(r12);\n    edx = 5;\n    rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n    rdi = stderr;\n    r8d = r14d;\n    esi = 1;\n    rdx = rax;\n    rcx = rbp;\n    eax = 0;\n    fprintf_chk ();\n    goto label_15;\n}\n"
        },
        {
            "funcName": "fcn_00416d80",
            "funcStartAddr": "0x416d80",
            "funcEndAddr": "0x416dd6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x416d80 */\n#include <stdint.h>\n \nint32_t fcn_00416d80 (int64_t arg_10h) {\n    eax = *(0x0062463c);\n    *(0x00625920) = eax;\n    eax = *(0x00624638);\n    *(0x00625924) = eax;\n    eax = *((rsp + 0x10));\n    fcn_004167b0 (rdi, rsi, rdx, rcx, r8, r9);\n    edx = imp.__libc_start_main;\n    *(0x0062463c) = edx;\n    rdx = imp.__libc_start_main;\n    *(0x00625970) = rdx;\n    edx = imp.__libc_start_main;\n    *(0x00624634) = edx;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00416e00",
            "funcStartAddr": "0x416e00",
            "funcEndAddr": "0x416e13",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x416e00 */\n#include <stdint.h>\n \nvoid fcn_00416e00 (void) {\n    r9d = 0;\n    fcn_00416d80 (rdi);\n}\n"
        },
        {
            "funcName": "fcn_00416e80",
            "funcStartAddr": "0x416e80",
            "funcEndAddr": "0x416efa",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x416e80 */\n#include <stdint.h>\n \nuint64_t fcn_00416e80 (wint_t arg1, int64_t arg2, size_t * arg3, mbstate_t * ps) {\n    int64_t var_ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = ps;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    rbx = 0xfffffffffffffffe;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r12 = rdi;\n    while (1) {\n        rax = mbrtowc (r12, rbp, rdx, rcx);\n        rbx = rax;\n        if (rax > 0xfffffffffffffffd) {\n            goto label_2;\n        }\nlabel_0:\n        rax = rbx;\n        return rax;\nlabel_1:\n        edx = 1;\n        r12 = rsp + 0xc;\n    }\nlabel_2:\n    al = fcn_0040c190 (0);\n    if (al != 0) {\n        goto label_0;\n    }\n    eax = *(rbp);\n    ebx = 1;\n    *(r12) = eax;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00416f00",
            "funcStartAddr": "0x416f00",
            "funcEndAddr": "0x417004",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x416f00 */\n#include <stdint.h>\n \nint64_t fcn_00416f00 (uint32_t arg1, int64_t arg2, size_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r8d = esi;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    if ((dil & 7) == 0) {\n        goto label_1;\n    }\n    if (sil != *(rdi)) {\n        goto label_2;\n    }\n    goto label_3;\n    do {\n        if ((dil & 7) == 0) {\n            goto label_1;\n        }\n        if (*(rdi) == r8b) {\n            goto label_3;\n        }\nlabel_2:\n        rdi++;\n        rdx--;\n    } while (rdx != 0);\nlabel_0:\n    eax = 0;\n    return eax;\nlabel_1:\n    r9d = esi;\n    eax = (int32_t) sil;\n    r9d <<= 8;\n    r9d = (int32_t) r9w;\n    r9d |= eax;\n    r9 = (int64_t) r9d;\n    rax = r9;\n    rax <<= 0x10;\n    r9 |= rax;\n    rax = r9;\n    rax <<= 0x20;\n    r9 |= rax;\n    if (rdx <= 7) {\n        goto label_4;\n    }\n    r11 = 0xfefefefefefefeff;\n    rax = *(rdi);\n    r10 = 0x8080808080808080;\n    rax ^= r9;\n    rcx = rax + r11;\n    rax = ~rax;\n    rax &= rcx;\n    if ((rax & r10) == 0) {\n        goto label_5;\n    }\n    goto label_4;\n    do {\n        rax = *(rdi);\n        rax ^= r9;\n        rcx = rax + r11;\n        rax = ~rax;\n        rax &= rcx;\n        if ((rax & r10) != 0) {\n            goto label_4;\n        }\nlabel_5:\n        rdx -= 8;\n        rdi += 8;\n    } while (rdx > 7);\n    if (rdx == 0) {\n        goto label_0;\n    }\nlabel_4:\n    if (sil == *(rdi)) {\n        goto label_3;\n    }\n    rcx = rdi + 1;\n    rdi += rdx;\n    while (rcx != rdi) {\n        rcx++;\n        if (*((rcx - 1)) == r8b) {\n            goto label_6;\n        }\n        rax = rcx;\n    }\n    goto label_0;\nlabel_3:\n    rax = rdi;\nlabel_6:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00417050",
            "funcStartAddr": "0x417050",
            "funcEndAddr": "0x417065",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x417050 */\n#include <stdint.h>\n \nint64_t fcn_00417050 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rax = *((rdi + 0x38));\n    if ((*((rdi + 0x50)) & 1) != 0) {\n        rdi = *((rdi + 0x48));\n        rax = void (*rax)() ();\n    }\n    rdi = rsi;\n    return void (*rax)() ();\n}\n"
        },
        {
            "funcName": "fcn_00417070",
            "funcStartAddr": "0x417070",
            "funcEndAddr": "0x417085",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x417070 */\n#include <stdint.h>\n \nint64_t fcn_00417070 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rax = *((rdi + 0x40));\n    if ((*((rdi + 0x50)) & 1) != 0) {\n        rdi = *((rdi + 0x48));\n        rax = void (*rax)() ();\n    }\n    rdi = rsi;\n    return void (*rax)() ();\n}\n"
        },
        {
            "funcName": "obstack_begin",
            "funcStartAddr": "0x417120",
            "funcEndAddr": "0x4171c1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x417120 */\n#include <stdint.h>\n \nuint64_t obstack_begin (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\nlabel_0:\n    rbx = rdi;\n    if (rdx == 0) {\n        goto label_1;\n    }\n    r12 = rdx - 1;\n    do {\n        eax = 0xfe0;\n        *((rbx + 0x30)) = r12;\n        rdi = rbx;\n        if (rsi == 0) {\n            rsi = rax;\n        }\n        *(rbx) = rsi;\n        rax = fcn_00417050 (rdi, rsi);\n        *((rbx + 8)) = rax;\n        if (rax == 0) {\n            goto label_2;\n        }\n        rdx = rax + r12 + 0x10;\n        rbp = -rbp;\n        rbp &= rdx;\n        rdx = *(rbx);\n        *((rbx + 0x10)) = rbp;\n        rdx += rax;\n        *((rbx + 0x18)) = rbp;\n        *(rax) = rdx;\n        *((rbx + 0x20)) = rdx;\n        *((rax + 8)) = 0;\n        eax = 1;\n        *((rbx + 0x50)) &= 0xf9;\n        return rax;\nlabel_1:\n        r12d = 0xf;\n    } while (1);\nlabel_2:\n    rax = uint64_t (*obstack_alloc_failed_handler)() ();\n    *((rdi + 0x50)) &= 0xfe;\n    *((rdi + 0x38)) = rcx;\n    *((rdi + 0x40)) = r8;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "obstack_begin_1",
            "funcStartAddr": "0x417140",
            "funcEndAddr": "0x417155",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x417140 */\n#include <stdint.h>\n \nvoid obstack_begin_1 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    *((rdi + 0x50)) |= 1;\n    *((rdi + 0x38)) = rcx;\n    *((rdi + 0x40)) = r8;\n    *((rdi + 0x48)) = r9;\n    return void (*0x417090)() ();\n}\n"
        },
        {
            "funcName": "obstack_newchunk",
            "funcStartAddr": "0x417160",
            "funcEndAddr": "0x417260",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x417160 */\n#include <stdint.h>\n \nuint64_t obstack_newchunk (int64_t arg_8h, int64_t arg_10h, uint32_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    eax = 0;\n    r13 = *((rdi + 0x18));\n    r13 -= *((rdi + 0x10));\n    rbp = *((rdi + 8));\n    rsi += r13;\n    rdx = r13;\n    al = (rsi < 0) ? 1 : 0;\n    rsi += *((rdi + 0x30));\n    cl = (rsi < 0) ? 1 : 0;\n    rdx >>= 3;\n    rbx = rsi + rdx + 0x64;\n    if (*(rdi) >= rsi) {\n        rsi = *(rdi);\n    }\n    if (rsi >= rbx) {\n        rbx = rsi;\n    }\n    if (rax != 0) {\n        goto label_0;\n    }\n    ecx = (int32_t) cl;\n    if (rcx != 0) {\n        goto label_0;\n    }\n    r12 = rdi;\n    rax = fcn_00417050 (rdi, rbx);\n    r14 = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    rsi = rax + rbx;\n    *((r12 + 8)) = rax;\n    *((rax + 8)) = rbp;\n    *((r12 + 0x20)) = rsi;\n    *(rax) = rsi;\n    rax = *((r12 + 0x30));\n    rbx = r14 + rax + 0x10;\n    rax = ~rax;\n    rbx &= rax;\n    memcpy (rbx, *((r12 + 0x10)), r13);\n    if ((*((r12 + 0x50)) & 2) != 0) {\n        goto label_1;\n    }\n    rax = *((r12 + 0x30));\n    rdx = rbp + rax + 0x10;\n    rax = ~rax;\n    rax &= rdx;\n    while (1) {\nlabel_1:\n        r13 += rbx;\n        *((r12 + 0x10)) = rbx;\n        *((r12 + 0x18)) = r13;\n        *((r12 + 0x50)) &= 0xfd;\n        return rax;\n        rax = *((rbp + 8));\n        *((r14 + 8)) = rax;\n        fcn_00417070 (r12, rbp);\n    }\nlabel_0:\n    uint64_t (*obstack_alloc_failed_handler)() ();\n}\n"
        },
        {
            "funcName": "obstack_allocated_p",
            "funcStartAddr": "0x417260",
            "funcEndAddr": "0x417297",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x417260 */\n#include <stdint.h>\n \nint64_t obstack_allocated_p (int64_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rax = *((rdi + 8));\n    if (rax == 0) {\n        goto label_0;\n    }\n    do {\n        if (rsi > rax) {\n            if (*(rax) >= rsi) {\n                goto label_1;\n            }\n        }\n        rax = *((rax + 8));\n    } while (rax != 0);\n    eax = 0;\n    return rax;\nlabel_1:\n    eax = 1;\n    return rax;\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "obstack_free",
            "funcStartAddr": "0x4172a0",
            "funcEndAddr": "0x42b71e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4172a0 */\n#include <stdint.h>\n \nint64_t obstack_free (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\nlabel_0:\n    abort ();\n    rsi = *((rdi + 8));\n    rbx = rdi;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    do {\n        if (rsi < rbp) {\n            rax = *(rsi);\n            if (rax >= rbp) {\n                goto label_2;\n            }\n        }\n        r12 = *((rsi + 8));\n        rax = fcn_00417070 (rbx, rsi);\n        *((rbx + 0x50)) |= 2;\n        rsi = r12;\n    } while (r12 != 0);\nlabel_1:\n    if (rbp != 0) {\n        goto label_0;\n    }\n    return rax;\nlabel_2:\n    *((rbx + 0x18)) = rbp;\n    *((rbx + 0x10)) = rbp;\n    *((rbx + 0x20)) = rax;\n    *((rbx + 8)) = rsi;\n    return rax;\n}\n"
        },
        {
            "funcName": "obstack_memory_used",
            "funcStartAddr": "0x417310",
            "funcEndAddr": "0x417339",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x417310 */\n#include <stdint.h>\n \nint64_t obstack_memory_used (int64_t arg1) {\n    rdi = arg1;\n    rdx = *((rdi + 8));\n    eax = 0;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    do {\n        rcx = *(rdx);\n        rcx -= rdx;\n        rdx = *((rdx + 8));\n        rax += rcx;\n    } while (rdx != 0);\n    return rax;\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00417340",
            "funcStartAddr": "0x417340",
            "funcEndAddr": "0x417385",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x417340 */\n#include <stdint.h>\n \nuint32_t fcn_00417340 (char * value) {\n    rdi = value;\n    if (*((rdi + 8)) != 0) {\n        goto label_0;\n    }\n    edi = 0x41b360;\n    eax = unsetenv ();\n    do {\n        edx = 0;\n        if (eax == 0) {\n            tzset ();\n            edx = 1;\n        }\n        eax = 1;\n        return eax;\nlabel_0:\n        setenv (0x41b360, rdi + 9, 1);\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00417390",
            "funcStartAddr": "0x417390",
            "funcEndAddr": "0x4173b9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x417390 */\n#include <stdint.h>\n \nvoid fcn_00417390 (int64_t arg1) {\n    rdi = arg1;\n    if (rdi == 0) {\n        goto label_0;\n    }\n    do {\n        rbx = *(rdi);\n        free (rdi);\n        rdi = rbx;\n    } while (rbx != 0);\n    return;\nlabel_0:\n}\n"
        },
        {
            "funcName": "fcn_004173c0",
            "funcStartAddr": "0x4173c0",
            "funcEndAddr": "0x417401",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4173c0 */\n#include <stdint.h>\n \nuint64_t fcn_004173c0 (int64_t arg1) {\n    rdi = arg1;\n    r12 = rdi;\n    rax = errno_location ();\n    rbx = rax;\n    r13d = *(rax);\n    eax = fcn_00417340 (r12);\n    if (al == 0) {\n        r13d = *(rbx);\n    }\n    fcn_00417390 (r12);\n    *(rbx) = r13d;\n    eax = ebp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00417410",
            "funcStartAddr": "0x417410",
            "funcEndAddr": "0x41749f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x417410 */\n#include <stdint.h>\n \nuint64_t fcn_00417410 (int64_t arg1) {\n    rdi = arg1;\n    if (rdi == 0) {\n        goto label_0;\n    }\n    r12 = rdi;\n    strlen (rdi);\n    edi = 0x76;\n    rbp = rax + 1;\n    if (rbp >= 0x76) {\n        rdi = rbp;\n    }\n    rdi += 0x11;\n    rdi &= 0xfffffffffffffff8;\n    rax = malloc (rdi);\n    rbx = rax;\n    if (rax == 0) {\n        goto label_1;\n    }\n    *(rax) = 0;\n    eax = 1;\n    *((rbx + 8)) = ax;\n    memcpy (rbx + 9, r12, rbp);\n    *((rbx + rbp + 9)) = 0;\n    do {\nlabel_1:\n        rax = rbx;\n        return rax;\nlabel_0:\n        rax = malloc (0x80);\n        rbx = rax;\n    } while (rax == 0);\n    edx = 0;\n    *(rbx) = 0;\n    rax = rbx;\n    *((rbx + 8)) = dx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004174a0",
            "funcStartAddr": "0x4174a0",
            "funcEndAddr": "0x417615",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4174a0 */\n#include <stdint.h>\n \nint64_t fcn_004174a0 (int64_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r12 = *((rsi + 0x30));\n    if (r12 == 0) {\n        goto label_4;\n    }\n    r13 = rsi;\n    if (rsi <= r12) {\n        rdx = rsi + 0x38;\n        eax = 1;\n        if (r12 < rdx) {\n            goto label_2;\n        }\n    }\n    rbx = rbp + 9;\n    if (*(r12) == 0) {\n        goto label_5;\n    }\n    do {\nlabel_0:\n        eax = strcmp (rbx, r12);\n        if (eax == 0) {\n            goto label_3;\n        }\nlabel_1:\n        if (*(rbx) == 0) {\n            r14 = rbp + 9;\n            if (r14 != rbx) {\n                goto label_6;\n            }\n            if (*((rbp + 8)) == 0) {\n                goto label_7;\n            }\n        }\n        strlen (rbx);\n        rbx = rbx + rax + 1;\n    } while (*(rbx) != 0);\n    rax = *(rbp);\n    if (rax == 0) {\n        goto label_0;\n    }\n    rbx = rax + 9;\n    eax = strcmp (rbx, r12);\n    if (eax != 0) {\n        goto label_1;\n    }\n    do {\nlabel_3:\n        *((r13 + 0x30)) = rbx;\n        eax = 1;\nlabel_2:\n        return rax;\nlabel_5:\n        ebx = 0x41b08a;\n    } while (1);\nlabel_4:\n    eax = 1;\n    return rax;\nlabel_6:\n    strlen (r12);\n    r15 = rax + 1;\n    rax = rbx;\n    rax -= r14;\n    rdx = rax;\n    rdx = ~rdx;\n    if (rdx < r15) {\n        errno_location ();\n        *(rax) = 0xc;\n        eax = 0;\n        goto label_2;\nlabel_7:\n        eax = strlen (r12);\n        r15 = rax + 1;\n        eax = 0;\n    }\n    rax += r15;\n    if (rax <= 0x76) {\n        memcpy (rbx, r12, r15);\n        *((rbx + r15)) = 0;\n        goto label_3;\n    }\n    rax = fcn_00417410 (r12);\n    *(rbp) = rax;\n    if (rax != 0) {\n        *((rax + 8)) = 0;\n        rbx = rax + 9;\n        goto label_3;\n    }\n    eax = 0;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_00417620",
            "funcStartAddr": "0x417620",
            "funcEndAddr": "0x4176cf",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x417620 */\n#include <stdint.h>\n \nuint64_t fcn_00417620 (int64_t arg1) {\n    rdi = arg1;\n    r12 = rdi;\n    rax = getenv (0x41b360);\n    if (rax == 0) {\n        goto label_1;\n    }\n    while (eax != 0) {\nlabel_0:\n        rax = fcn_00417410 (rbp);\n        rbx = rax;\n        if (rax != 0) {\n            al = fcn_00417340 (r12);\n            if (al == 0) {\n                goto label_2;\n            }\n        }\n        rax = rbx;\n        return rax;\n        ebx = 1;\n        eax = strcmp (r12 + 9, rax);\n    }\n    rax = rbx;\n    return rax;\nlabel_1:\n    ebx = 1;\n    if (*((r12 + 8)) != 0) {\n        goto label_0;\n    }\n    rax = rbx;\n    return rax;\nlabel_2:\n    rax = errno_location ();\n    r12d = *(rax);\n    if (rbx != 1) {\n        fcn_00417390 (rbx);\n    }\n    ebx = 0;\n    *(rbp) = r12d;\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004176f0",
            "funcStartAddr": "0x4176f0",
            "funcEndAddr": "0x417795",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4176f0 */\n#include <stdint.h>\n \nuint64_t fcn_004176f0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r12 = rsi;\n    if (rdi == 0) {\n        goto label_1;\n    }\n    rbx = rdx;\n    rax = fcn_00417620 (rdi);\n    r13 = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    rsi = rbx;\n    rdi = r12;\n    rax = localtime_r ();\n    if (rax == 0) {\n        goto label_2;\n    }\n    al = fcn_004174a0 (rbp, rbx);\n    if (al == 0) {\n        goto label_2;\n    }\n    while (al != 0) {\n        rax = rbx;\n        return rax;\nlabel_2:\n        if (r13 != 1) {\n            eax = fcn_004173c0 (r13);\n        }\nlabel_0:\n        eax = 0;\n        return rax;\n        al = fcn_004173c0 (r13);\n    }\n    goto label_0;\nlabel_1:\n    rdi = r12;\n    rsi = rdx;\n    return gmtime_r ();\n}\n"
        },
        {
            "funcName": "fcn_004177a0",
            "funcStartAddr": "0x4177a0",
            "funcEndAddr": "0x4178bc",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4177a0 */\n#include <stdint.h>\n \nuint64_t fcn_004177a0 (tm * arg1, char * arg2) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_14h;\n    int64_t var_18h;\n    int64_t var_1ch;\n    int64_t var_20h;\n    int64_t var_24h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rsi;\n    if (rdi == 0) {\n        goto label_3;\n    }\n    rax = fcn_00417620 (rdi);\n    r12 = rax;\n    if (rax == 0) {\n        goto label_4;\n    }\n    rax = fcn_004186f0 (rbx);\n    *((rsp + 8)) = rax;\n    if (rax == -1) {\n        goto label_5;\n    }\nlabel_1:\n    al = fcn_004174a0 (rbp, rbx);\n    if (al != 0) {\n        goto label_0;\n    }\n    *((rsp + 8)) = 0xffffffffffffffff;\n    do {\nlabel_0:\n        if (r12 != 1) {\n            al = fcn_004173c0 (r12);\n            if (al == 0) {\n                goto label_4;\n            }\n        }\n        rax = *((rsp + 8));\nlabel_2:\n        return rax;\nlabel_5:\n        rsi = rsp + 0x10;\n        rdi = rsp + 8;\n        rax = localtime_r ();\n    } while (rax == 0);\n    eax = *((rbx + 0x20));\n    edx = *((rsp + 0x30));\n    sil = (eax == 0) ? 1 : 0;\n    cl = (edx == 0) ? 1 : 0;\n    if (sil == cl) {\n        goto label_6;\n    }\n    if (eax < 0) {\n        goto label_6;\n    }\n    if (edx >= 0) {\n        goto label_0;\n    }\nlabel_6:\n    eax = *((rbx + 0x10));\n    edx = *((rbx + 0x14));\n    eax ^= *((rsp + 0x20));\n    edx ^= *((rsp + 0x24));\n    eax |= edx;\n    edx = *((rbx + 0xc));\n    edx ^= *((rsp + 0x1c));\n    eax |= edx;\n    edx = *((rbx + 8));\n    edx ^= *((rsp + 0x18));\n    eax |= edx;\n    edx = *((rbx + 4));\n    edx ^= *((rsp + 0x14));\n    eax |= edx;\n    edx = *(rbx);\n    edx ^= *((rsp + 0x10));\n    eax |= edx;\n    if (eax == 0) {\n        goto label_1;\n    }\n    goto label_0;\nlabel_3:\n    fcn_004178c0 (rsi);\n    return rax;\nlabel_4:\n    rax = 0xffffffffffffffff;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_004178c0",
            "funcStartAddr": "0x4178c0",
            "funcEndAddr": "0x4178d6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4178c0 */\n#include <stdint.h>\n \nvoid fcn_004178c0 (int64_t arg1) {\n    rdi = arg1;\n    *((rdi + 0x20)) = 0;\n    edx = 0x625958;\n    esi = imp.gmtime_r;\n    return void (*0x4182b0)() ();\n}\n"
        },
        {
            "funcName": "fcn_004178e0",
            "funcStartAddr": "0x4178e0",
            "funcEndAddr": "0x41793d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4178e0 */\n#include <stdint.h>\n \nuint64_t fcn_004178e0 (int64_t arg1) {\n    rdi = arg1;\n    rax = fpending ();\n    ebx = *(rbp);\n    r12 = rax;\n    ebx &= 0x20;\n    eax = fcn_00417f10 (rbp);\n    if (ebx != 0) {\n        goto label_1;\n    }\n    if (eax == 0) {\n        goto label_0;\n    }\n    if (r12 != 0) {\n        goto label_2;\n    }\n    rax = errno_location ();\n    al = (*(rax) != 9) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = -eax;\n    do {\nlabel_0:\n        return rax;\nlabel_1:\n        if (eax != 0) {\n            goto label_2;\n        }\n        errno_location ();\n        *(rax) = 0;\n        eax = 0xffffffff;\n    } while (1);\nlabel_2:\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00417940",
            "funcStartAddr": "0x417940",
            "funcEndAddr": "0x417958",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x417940 */\n#include <stdint.h>\n \nuint64_t fcn_00417940 (void) {\n    rax = fcn_0040b810 (rdi);\n    if (rax != 0) {\n        return rax;\n    }\n    return fcn_00412bd0 ();\n}\n"
        },
        {
            "funcName": "fcn_00417960",
            "funcStartAddr": "0x417960",
            "funcEndAddr": "0x417996",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x417960 */\n#include <stdint.h>\n \nuint64_t rotate_left64 (uint64_t value, uint32_t count) {\n    const uint64_t mask = (CHAR_BIT * sizeof (value)) - 1;\n    count &= mask;\n    return (value << count) | (value >> (-count & mask));\n}\n \nint64_t fcn_00417960 (int64_t arg1) {\n    rdi = arg1;\n    rcx = *(rdi);\n    if (cl == 0) {\n        goto label_0;\n    }\n    eax = 0;\n    do {\n        rax = rotate_left64 (rax, 9);\n        rdi++;\n        rax += rcx;\n        rcx = *(rdi);\n    } while (cl != 0);\n    edx = 0;\n    rax = rdx:rax / rsi;\n    rdx = rdx:rax % rsi;\n    rax = rdx;\n    return rax;\nlabel_0:\n    edx = 0;\n    rax = rdx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004179a0",
            "funcStartAddr": "0x4179a0",
            "funcEndAddr": "0x417f02",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4179a0 */\n#include <stdint.h>\n \nuint64_t fcn_004179a0 (void) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_60h;\n    rax = nl_langinfo (0xe);\n    r15 = imp.__libc_start_main;\n    rbx = rax;\n    eax = 0x41b08a;\n    if (rax == 0) {\n        rbx = rax;\n    }\n    if (r15 == 0) {\n        goto label_15;\n    }\nlabel_1:\n    ebp = *(r15);\n    if (bpl != 0) {\n        goto label_16;\n    }\n    goto label_17;\n    do {\nlabel_0:\n        strlen (r15);\n        rbp = r15 + rax + 1;\n        strlen (rbp);\n        r15 = rbp + rax + 1;\n        ebp = *(r15);\n        if (bpl == 0) {\n            goto label_17;\n        }\nlabel_16:\n        eax = strcmp (rbx, r15);\n        if (eax == 0) {\n            goto label_18;\n        }\n    } while (bpl != 0x2a);\n    if (*((r15 + 1)) != 0) {\n        goto label_0;\n    }\nlabel_18:\n    strlen (r15);\n    rbx = r15 + rax + 1;\nlabel_17:\n    eax = \"ASCII\";\n    if (*(rbx) == 0) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\nlabel_15:\n    rax = getenv (\"CHARSETALIASDIR\");\n    r13 = rax;\n    if (rax == 0) {\n        goto label_19;\n    }\n    if (*(rax) == 0) {\n        goto label_19;\n    }\n    rax = strlen (rax);\n    r12 = rax;\n    r14 = rax;\n    if (rax != 0) {\n        goto label_20;\n    }\nlabel_13:\n    rax = malloc (0xe);\n    if (rax != 0) {\n        goto label_21;\n    }\n    do {\n        r15d = 0x41b08a;\nlabel_2:\n        *(0x00625960) = r15;\n        goto label_1;\nlabel_19:\n        r12d = 0x65;\n        r14d = 0x64;\n        r13d = \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\";\nlabel_14:\n        rax = malloc (0x73);\n    } while (rax == 0);\n    memcpy (rbp, r13, r14);\n    *((rbp + r14)) = 0x2f;\n    do {\n        r12 += rbp;\n        rax = 0x2e74657372616863;\n        *(r12) = rax;\n        eax = 0x73;\n        *((r12 + 0xc)) = ax;\n        eax = 0;\n        *((r12 + 8)) = 0x61696c61;\n        eax = open (rbp, 0, rdx);\n        r12d = eax;\n        if (eax >= 0) {\n            goto label_22;\n        }\nlabel_6:\n        r15d = 0x41b08a;\nlabel_7:\n        free (rbp);\n        goto label_2;\nlabel_21:\n        eax = memcpy (rbp, r13, r14);\n    } while (1);\nlabel_22:\n    esi = 0x41b38e;\n    edi = eax;\n    r15d = 0;\n    rax = fdopen ();\n    *((rsp + 8)) = 0;\n    r13 = rax;\n    if (rax == 0) {\n        goto label_23;\n    }\n    rax = rbx;\n    r12 = rsp + 0x60;\n    r14 = rsp + 0x20;\n    rbx = r13;\n    r13 = rax;\n    do {\nlabel_3:\n        rax = *((rbx + 8));\n        if (rax >= *((rbx + 0x10))) {\n            goto label_24;\n        }\nlabel_4:\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        edi = *(rax);\nlabel_5:\n        eax = rdi - 9;\n    } while (eax <= 1);\n    if (edi == 0x20) {\n        goto label_3;\n    }\n    if (edi == 0x23) {\n        goto label_25;\n    }\n    eax = ungetc (rdi, rbx);\n    eax = 0;\n    rcx = r12;\n    rdx = r14;\n    eax = fscanf (rbx, \"%50s %50s\");\n    if (eax <= 1) {\n        goto label_12;\n    }\n    rcx = r14;\n    do {\n        edx = *(rcx);\n        rcx += 4;\n        eax = rdx - 0x1010101;\n        edx = ~edx;\n        eax &= edx;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    edx = eax;\n    edx >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = edx;\n    }\n    rdx = rcx + 2;\n    if ((eax & 0x8080) == 0) {\n        rcx = rdx;\n    }\n    edx = eax;\n    dl += al;\n    rdx = r12;\n    rcx -= 3;\n    rcx -= r14;\n    do {\n        esi = *(rdx);\n        rdx += 4;\n        eax = rsi - 0x1010101;\n        esi = ~esi;\n        eax &= esi;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    esi = eax;\n    *((rsp + 0x10)) = rcx;\n    esi >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = esi;\n    }\n    rsi = rdx + 2;\n    if ((eax & 0x8080) == 0) {\n        rdx = rsi;\n    }\n    esi = eax;\n    sil += al;\n    rdx -= 3;\n    rdx -= r12;\n    rax = rcx + rdx;\n    *((rsp + 0x18)) = rdx;\n    if (*((rsp + 8)) != 0) {\n        goto label_26;\n    }\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    rax = malloc (rax + 3);\n    rcx = *((rsp + 0x10));\n    rdx = *((rsp + 0x18));\nlabel_9:\n    if (rax == 0) {\n        goto label_27;\n    }\n    rdi = *((rsp + 8));\n    rsi = 0xfffffffffffffffe;\n    rsi -= rcx;\n    rcx++;\n    rdi -= rdx;\n    rsi += rdi;\n    rsi += rax;\n    if (ecx >= 8) {\n        goto label_28;\n    }\n    if ((cl & 4) != 0) {\n        goto label_29;\n    }\n    if (ecx != 0) {\n        r9d = *(r14);\n        *(rsi) = r9b;\n        if ((cl & 2) != 0) {\n            goto label_30;\n        }\n    }\nlabel_10:\n    rdx++;\n    rcx = rax + rdi - 1;\n    if (edx >= 8) {\n        goto label_31;\n    }\n    if ((dl & 4) != 0) {\n        goto label_32;\n    }\n    if (edx != 0) {\n        esi = *(r12);\n        *(rcx) = sil;\n        if ((dl & 2) != 0) {\n            goto label_33;\n        }\n    }\nlabel_11:\n    r15 = rax;\n    rax = *((rbx + 8));\n    if (rax < *((rbx + 0x10))) {\n        goto label_4;\n    }\nlabel_24:\n    rdi = rbx;\n    eax = uflow ();\n    edi = eax;\n    if (eax != 0xffffffff) {\n        goto label_5;\n    }\nlabel_12:\n    rax = r13;\n    r13 = rbx;\n    rbx = rax;\n    fcn_00417f10 (rbx);\n    rax = *((rsp + 8));\n    if (rax == 0) {\n        goto label_6;\n    }\n    *((r15 + rax)) = 0;\n    goto label_7;\n    do {\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        eax = *(rax);\n        edx = 1;\nlabel_8:\n        if (eax == 0xa) {\n            goto label_34;\n        }\n        if (dl == 0) {\n            goto label_34;\n        }\nlabel_25:\n        rax = *((rbx + 8));\n    } while (rax < *((rbx + 0x10)));\n    rdi = rbx;\n    eax = uflow ();\n    dl = (eax != 0xffffffff) ? 1 : 0;\n    goto label_8;\nlabel_26:\n    rax += *((rsp + 8));\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    eax = realloc (r15, rax + 3);\n    rdx = *((rsp + 0x18));\n    rcx = *((rsp + 0x10));\n    goto label_9;\nlabel_28:\n    r9 = *(r14);\n    *(rsi) = r9;\n    r9d = ecx;\n    r10 = *((r14 + r9 - 8));\n    *((rsi + r9 - 8)) = r10;\n    r9 = rsi + 8;\n    r10 = r14;\n    r9 &= 0xfffffffffffffff8;\n    rsi -= r9;\n    ecx += esi;\n    r10 -= rsi;\n    ecx &= 0xfffffff8;\n    if (ecx < 8) {\n        goto label_10;\n    }\n    ecx &= 0xfffffff8;\n    esi = 0;\n    do {\n        r8d = esi;\n        esi += 8;\n        r11 = *((r10 + r8));\n        *((r9 + r8)) = r11;\n    } while (esi < ecx);\n    goto label_10;\nlabel_31:\n    rsi = *(r12);\n    r9 = r12;\n    *(rcx) = rsi;\n    esi = edx;\n    rdi = *((r12 + rsi - 8));\n    *((rcx + rsi - 8)) = rdi;\n    rdi = rcx + 8;\n    rdi &= 0xfffffffffffffff8;\n    rcx -= rdi;\n    edx += ecx;\n    r9 -= rcx;\n    edx &= 0xfffffff8;\n    if (edx < 8) {\n        goto label_11;\n    }\n    edx &= 0xfffffff8;\n    ecx = 0;\n    do {\n        esi = ecx;\n        ecx += 8;\n        r8 = *((r9 + rsi));\n        *((rdi + rsi)) = r8;\n    } while (ecx < edx);\n    goto label_11;\nlabel_34:\n    if (eax == 0xffffffff) {\n        goto label_12;\n    }\n    goto label_3;\nlabel_20:\n    if (*((r13 + rax - 1)) == 0x2f) {\n        rdi = rax + 0xe;\n        goto label_13;\nlabel_23:\n        close (r12d);\n        goto label_6;\nlabel_29:\n        r9d = *(r14);\n        *(rsi) = r9d;\n        r9d = *((r14 + rcx - 4));\n        *((rsi + rcx - 4)) = r9d;\n        goto label_10;\nlabel_32:\n        esi = *(r12);\n        *(rcx) = esi;\n        esi = *((r12 + rdx - 4));\n        *((rcx + rdx - 4)) = esi;\n        goto label_11;\nlabel_27:\n        rax = r13;\n        r13 = rbx;\n        r15d = 0x41b08a;\n        rbx = rax;\n        free (r15);\n        fcn_00417f10 (r13);\n        goto label_7;\nlabel_30:\n        r9d = *((r14 + rcx - 2));\n        *((rsi + rcx - 2)) = r9w;\n        goto label_10;\nlabel_33:\n        esi = edx;\n        edx = *((r12 + rsi - 2));\n        *((rcx + rsi - 2)) = dx;\n        goto label_11;\n    }\n    rdi = rax + 0xf;\n    r12++;\n    goto label_14;\n}\n"
        },
        {
            "funcName": "fcn_00417f10",
            "funcStartAddr": "0x417f10",
            "funcEndAddr": "0x417f8b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x417f10 */\n#include <stdint.h>\n \nuint64_t fcn_00417f10 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    eax = fileno (rdi);\n    rdi = rbx;\n    if (eax < 0) {\n        goto label_1;\n    }\n    eax = freading ();\n    while (rax != -1) {\n        eax = fcn_00417f90 (rbx);\n        if (eax == 0) {\n            goto label_2;\n        }\n        rax = errno_location ();\n        r12d = *(rax);\n        fclose (rbx);\n        if (r12d != 0) {\n            goto label_3;\n        }\nlabel_0:\n        return rax;\n        eax = fileno (rbx);\n        esi = 0;\n        edx = 1;\n        edi = eax;\n        rax = lseek ();\n    }\nlabel_2:\n    rdi = rbx;\nlabel_1:\n    void (*0x402890)() ();\nlabel_3:\n    *(rbp) = r12d;\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00417f90",
            "funcStartAddr": "0x417f90",
            "funcEndAddr": "0x417fd0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x417f90 */\n#include <stdint.h>\n \nuint32_t fcn_00417f90 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    if (rdi != 0) {\n        eax = freading ();\n        if (eax == 0) {\n            goto label_0;\n        }\n        if ((*(rbx) & 0x100) != 0) {\n            goto label_1;\n        }\n    }\nlabel_0:\n    rdi = rbx;\n    void (*0x402bd0)() ();\nlabel_1:\n    fcn_00417fd0 (rbx, 0, 1);\n    rdi = rbx;\n    return fflush ();\n}\n"
        },
        {
            "funcName": "fcn_00417fd0",
            "funcStartAddr": "0x417fd0",
            "funcEndAddr": "0x418027",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x417fd0 */\n#include <stdint.h>\n \nint64_t fcn_00417fd0 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rax = *((rdi + 8));\n    while (*((rdi + 0x28)) != rax) {\nlabel_0:\n        void (*0x402cf0)() ();\n        rax = *((rdi + 0x20));\n    }\n    if (*((rdi + 0x48)) != 0) {\n        goto label_0;\n    }\n    r12d = edx;\n    rbx = rdi;\n    eax = fileno (rdi);\n    edx = r12d;\n    rsi = rbp;\n    edi = eax;\n    rax = lseek ();\n    if (rax != -1) {\n        *(rbx) &= 0xffffffef;\n        *((rbx + 0x90)) = rax;\n        eax = 0;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00418030",
            "funcStartAddr": "0x418030",
            "funcEndAddr": "0x418147",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x418030 */\n#include <stdint.h>\n \nuint64_t fcn_00418030 (int64_t arg_20h, int64_t arg_28h, int64_t arg_30h, int64_t arg_38h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r10 = rdi;\n    eax = 0;\n    r11 = (int64_t) edx;\n    r10 >>= 2;\n    rcx = (int64_t) ecx;\n    r8 = (int64_t) r8d;\n    rbx = (int64_t) r9d;\n    r10d += 0x1db;\n    r12 = rbx;\n    al = ((dil & 3) == 0) ? 1 : 0;\n    r12 >>= 2;\n    r10d -= eax;\n    eax = 0;\n    r12d += 0x1db;\n    r9d &= 3;\n    r9d = 0x51eb851f;\n    al = (r9d == 0) ? 1 : 0;\n    rdi -= rbx;\n    r12d -= eax;\n    eax = r10d;\n    edx:eax = eax * r9d;\n    eax = r10d;\n    eax >>= 0x1f;\n    edx >>= 3;\n    edx = r10d;\n    r10d -= r12d;\n    ebp -= eax;\n    eax = rbp + rbp*4;\n    eax = rax * 5;\n    edx -= eax;\n    eax = edx;\n    eax >>= 0x1f;\n    ebp -= eax;\n    eax = r12d;\n    edx:eax = eax * r9d;\n    eax = r12d;\n    r9d = r12d;\n    eax >>= 0x1f;\n    edx >>= 3;\n    edx -= eax;\n    eax = rdx * 5;\n    eax = rax * 5;\n    r9d -= eax;\n    eax = r9d;\n    eax >>= 0x1f;\n    edx -= eax;\n    eax = ebp;\n    eax -= edx;\n    rdx = (int64_t) edx;\n    r10d -= eax;\n    rdx >>= 2;\n    eax = r10d;\n    r10 = (int64_t) ebp;\n    r10 >>= 2;\n    r10d -= edx;\n    rdx = *((rsp + 0x28));\n    r10d += eax;\n    rax = rdi * 9;\n    rax = rdi + rax*8;\n    r10 = (int64_t) r10d;\n    rax *= 5;\n    rsi += rax;\n    rax = *((rsp + 0x20));\n    rsi -= rax;\n    rsi += r10;\n    rax = rsi * 3;\n    rax = r11 + rax*8;\n    rax -= rdx;\n    rdx = rax;\n    rdx <<= 4;\n    rdx -= rax;\n    rax = rcx + rdx*4;\n    rdx = *((rsp + 0x30));\n    rax -= rdx;\n    rdx = rax;\n    rdx <<= 4;\n    rdx -= rax;\n    rax = r8 + rdx*4;\n    rdx = *((rsp + 0x38));\n    r12 = rbx;\n    rax -= rdx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00418150",
            "funcStartAddr": "0x418150",
            "funcEndAddr": "0x4181e1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x418150 */\n#include <stdint.h>\n \nint64_t fcn_00418150 (int64_t arg_10h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rax = *((rsp + 0x10));\n    rbx = r9;\n    if (rax != 0) {\n        r9d = *(rax);\n        r9d = *((rax + 4));\n        r9d = *((rax + 8));\n        r9d = *((rax + 0x1c));\n        rax = fcn_00418030 (rdi, rsi, rdx, rcx, r8, *((rax + 0x14)));\n        rax += rbx;\n        if (rax overflow 0) {\n            goto label_0;\n        }\n        return rax;\n    }\nlabel_0:\n    if (rbx >= 0) {\n        rcx = 0x7ffffffffffffffd;\n        rdx = rbx - 1;\n        rax = 0x7fffffffffffffff;\n        if (rbx > rcx) {\n            rax = rdx;\n        }\n        return rax;\n    }\n    rax = 0x8000000000000002;\n    if (rbx < rax) {\n        rax = rbx + 1;\n        return rax;\n    }\n    rax = 0x8000000000000000;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004181f0",
            "funcStartAddr": "0x4181f0",
            "funcEndAddr": "0x4182af",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4181f0 */\n#include <stdint.h>\n \nint64_t fcn_004181f0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13 = rdx;\n    r12 = rdi;\n    rbx = rsi;\n    rax = *(rsi);\n    rsi = rdx;\n    rdi = rsp + 8;\n    rax = void (*r12)(uint64_t, uint64_t, uint64_t, uint64_t) (rbx, rbp, r12, r13);\n    while (1) {\nlabel_1:\n        return rax;\n        r14 = *(rbx);\n        ebp = 0;\n        if (r14 != 0) {\n            goto label_2;\n        }\n    }\n    do {\nlabel_0:\nlabel_2:\n        rdx = r14;\n        rbx >>= 1;\n        rdx >>= 1;\n        rdx += rbx;\n        rbx = rbp;\n        rbx |= r14;\n        ebx &= 1;\n        rbx += rdx;\n        if (rbp != rbx) {\n            if (r14 != rbx) {\n                goto label_3;\n            }\n        }\n        rsi = r13;\n        rdi = rsp + 8;\n        rax = void (*r12)(uint64_t) (rbx);\n    } while (rax != 0);\n    r14 = rbx;\n    rbx = rbp;\n    goto label_0;\nlabel_3:\n    if (rax != 0) {\n        goto label_1;\n    }\n    if (rbp == 0) {\n        goto label_1;\n    }\n    rsi = r13;\n    rdi = rsp + 8;\n    void (*r12)(uint64_t) (rbp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004186f0",
            "funcStartAddr": "0x4186f0",
            "funcEndAddr": "0x418b4c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x4186f0 */\n#include <stdint.h>\n \nint64_t fcn_004186f0 (int64_t arg1) {\n    int64_t var_ch;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_1ch;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_44h;\n    int64_t var_48h;\n    int64_t var_50h;\n    int64_t var_58h;\n    int64_t var_60h;\n    int64_t var_70h;\n    int64_t var_80h;\n    int64_t var_90h;\n    int64_t var_a0h;\n    int64_t var_c0h;\n    rdi = arg1;\nlabel_6:\n    r14 = rdi;\n    eax = *(rdi);\n    *((rsp + 0x10)) = rsi;\n    rsi = *((rdi + 0xc));\n    *((rsp + 0x40)) = eax;\n    eax = *((rdi + 4));\n    *((rsp + 0x30)) = rdx;\n    edx = 0x2aaaaaab;\n    *((rsp + 0xc)) = eax;\n    eax = *((rdi + 8));\n    edi = *((rdi + 0x10));\n    *((rsp + 0x18)) = eax;\n    eax = *((r14 + 0x20));\n    *((rsp + 0x28)) = eax;\n    eax = edi;\n    edx:eax = eax * edx;\n    eax = edi;\n    eax >>= 0x1f;\n    edx >>= 1;\n    ecx = edx;\n    edx = 0;\n    ecx -= eax;\n    eax = rcx * 3;\n    ebx = ecx;\n    eax <<= 2;\n    edi -= eax;\n    eax = edi;\n    ecx = edi;\n    eax >>= 0x1f;\n    ebx -= eax;\n    rax = *((r14 + 0x14));\n    rbx = (int64_t) ebx;\n    rbx += rax;\n    if ((bl & 3) == 0) {\n        rdx = 0xa3d70a3d70a3d70b;\n        rax = rbx;\n        rdx:rax = rax * rdx;\n        rax = rdx + rbx;\n        rdx = rbx;\n        rdx >>= 0x3f;\n        rax >>= 6;\n        rax -= rdx;\n        rdx = rax * 5;\n        rdi = rdx * 5;\n        edx = 1;\n        rdi <<= 2;\n        if (rbx == rdi) {\n            goto label_7;\n        }\n    }\nlabel_1:\n    eax = ecx;\n    r12d = 0x3b;\n    rdi = rbx;\n    eax >>= 0x1f;\n    r9d = 0x46;\n    eax &= 0xc;\n    ecx += eax;\n    rax = (int64_t) edx;\n    rdx = rax + rax;\n    rcx = (int64_t) ecx;\n    rdx += rax;\n    rax = rax + rdx*4;\n    rcx += rax;\n    eax = *((rcx + rcx + 0x41fd60));\n    eax--;\n    rax = (int64_t) eax;\n    rsi += rax;\n    eax = *((rsp + 0x40));\n    *((rsp + 0x20)) = rsi;\n    if (eax <= 0x3b) {\n        r12d = eax;\n    }\n    eax = 0;\n    __asm (\"cmovns eax, r12d\");\n    *((rsp + 0x1c)) = eax;\n    r8d = eax;\n    rax = *((rsp + 0x30));\n    rax = *(rax);\n    *((rsp + 0x38)) = rax;\n    eax = *((rsp + 0x38));\n    eax = -eax;\n    *((rsp + 0x44)) = eax;\n    rax = fcn_00418030 (rdi, rsi, *((rsp + 0x38)), *((rsp + 0x2c)), r8d, r9);\n    r13 = rax;\n    *((rsp + 0x38)) = rax;\n    *((rsp + 0x50)) = rax;\n    eax = 0;\n    *((rsp + 0x48)) = r14;\n    r12d = eax;\n    r14 = r13;\n    while (r15 != r13) {\nlabel_0:\n        ebp--;\n        if (ebp == 0) {\n            goto label_8;\n        }\n        r8d = *((rsp + 0x80));\n        *((rsp + 0x50)) = rax;\n        r12d = 0;\n        r13 = r14;\n        r14 = r15;\n        r12b = (r8d != 0) ? 1 : 0;\n        rax = fcn_004181f0 (*((rsp + 0x10)), rsp + 0x50, rsp + 0x60);\n        r15 = *((rsp + 0x50));\n        rax = fcn_00418150 (rbx, *((rsp + 0x30)), *((rsp + 0x28)), *((rsp + 0x1c)), *((rsp + 0x2c)), r15);\n        if (r15 == rax) {\n            goto label_9;\n        }\n    }\n    if (r15 == r14) {\n        goto label_0;\n    }\n    r10d = *((rsp + 0x80));\n    if (r10d < 0) {\n        goto label_2;\n    }\n    r9d = *((rsp + 0x28));\n    dl = (r10d != 0) ? 1 : 0;\n    if (r9d < 0) {\n        goto label_10;\n    }\n    cl = (r9d != 0) ? 1 : 0;\n    if (cl == dl) {\n        goto label_0;\n    }\nlabel_2:\n    r14 = *((rsp + 0x48));\n    rax = r15;\nlabel_3:\n    rdx = *((rsp + 0x44));\n    rcx = rax;\n    rdx += *((rsp + 0x38));\n    rcx -= rdx;\n    esi = *((rsp + 0x60));\n    edi = *((rsp + 0x40));\n    rdx = rcx;\n    rcx = *((rsp + 0x30));\n    *(rcx) = rdx;\n    if (esi != edi) {\n        r12 = *((rsp + 0x1c));\n        cl = (edi <= 0) ? 1 : 0;\n        edx = 0;\n        dl = (esi == 0x3c) ? 1 : 0;\n        rdx &= rcx;\n        rcx = rdx;\n        rdx = (int64_t) edi;\n        rcx -= r12;\n        rdx += rcx;\n        rax += rdx;\n        *((rsp + 0x50)) = rax;\n        if (rax overflow 0) {\n            goto label_8;\n        }\n        rsi = rsp + 0x60;\n        rdi = rsp + 0xa0;\n        rax = *((rsp + 0x10));\n        rax = void (*rax)(uint64_t) (rax);\n        if (rax == 0) {\n            goto label_8;\n        }\n        rax = *((rsp + 0x50));\n    }\n    __asm (\"movdqa xmm0, xmmword [rsp + 0x60]\");\n    __asm (\"movdqa xmm1, xmmword [rsp + 0x70]\");\n    __asm (\"movdqa xmm2, xmmword [rsp + 0x80]\");\n    rdx = *((rsp + 0x90));\n    __asm (\"movups xmmword [r14], xmm0\");\n    __asm (\"movups xmmword [r14 + 0x10], xmm1\");\n    __asm (\"movups xmmword [r14 + 0x20], xmm2\");\n    *((r14 + 0x30)) = rdx;\n    goto label_11;\nlabel_8:\n    rax = 0xffffffffffffffff;\nlabel_11:\n    return rax;\nlabel_7:\n    eax &= 3;\n    edx = 0;\n    dl = (rax == 1) ? 1 : 0;\n    goto label_1;\nlabel_10:\n    edx = (int32_t) dl;\n    if (edx < r12d) {\n        goto label_0;\n    }\n    goto label_2;\nlabel_9:\n    esi = *((rsp + 0x28));\n    edx = *((rsp + 0x80));\n    r14 = *((rsp + 0x48));\n    rsp + 0x28 = (esi == 0) ? 1 : 0;\n    ebp = *((rsp + 0x28));\n    cl = (edx == 0) ? 1 : 0;\n    if (bpl == cl) {\n        goto label_3;\n    }\n    if (esi < 0) {\n        goto label_3;\n    }\n    if (edx < 0) {\n        goto label_3;\n    }\n    r13d = 0x92c70;\n    *((rsp + 0x28)) = rbx;\n    goto label_12;\nlabel_4:\n    r13d += 0x92c70;\n    if (r13d == 0x100dc400) {\n        goto label_3;\n    }\nlabel_12:\n    r15d = r13d;\n    ebx = r13 + r13;\n    r12d = 2;\n    r15d = -r15d;\n    rdx = (int64_t) r15d;\n    rdx += rax;\n    *((rsp + 0x58)) = rdx;\n    if (rdx !overflow 0) {\n        goto label_13;\n    }\nlabel_5:\n    r15d += ebx;\n    if (r12d == 1) {\n        goto label_4;\n    }\n    rdx = (int64_t) r15d;\n    r12d = 1;\n    rdx += rax;\n    *((rsp + 0x58)) = rdx;\n    if (rdx overflow 0) {\n        goto label_5;\n    }\nlabel_13:\n    fcn_004181f0 (*((rsp + 0x10)), rsp + 0x58, rsp + 0xa0);\n    eax = *((rsp + 0xc0));\n    dl = (eax == 0) ? 1 : 0;\n    if (bpl != dl) {\n        if (eax >= 0) {\n            goto label_14;\n        }\n    }\n    rbx = *((rsp + 0x28));\n    rax = rsp + 0xa8;\n    rax = fcn_00418150 (rbx, *((rsp + 0x30)), *((rsp + 0x28)), *((rsp + 0x1c)), *((rsp + 0x2c)), *((rsp + 0x68)));\n    *((rsp + 0x50)) = rax;\n    fcn_004181f0 (*((rsp + 0x10)), rsp + 0x50, rsp + 0x60);\n    rax = *((rsp + 0x50));\n    goto label_3;\nlabel_14:\n    rax = *((rsp + 0x50));\n    goto label_5;\n    rbx = rdi;\n    tzset ();\n    rdi = rbx;\n    edx = 0x625968;\n    esi = imp.localtime_r;\n    goto label_6;\n}\n"
        },
        {
            "funcName": "fcn_00418780",
            "funcStartAddr": "0x418780",
            "funcEndAddr": "0x418798",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x418780 */\n#include <stdint.h>\n \nint64_t fcn_00418780 (void) {\n    rax = 0x6243e8;\n    edx = 0;\n    if (rax != 0) {\n        rdx = *(rax);\n    }\n    esi = 0;\n    return cxa_atexit ();\n}\n"
        },
        {
            "funcName": "fcn_00418798",
            "funcStartAddr": "0x418798",
            "funcEndAddr": "0x4187b8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf @ 0x418798 */\n#include <stdint.h>\n \nvoid fcn_00418798 (int64_t arg3) {\n    rdx = arg3;\n    ebx = segment.GNU_RELRO;\n    do {\n        rax = *(rbx);\n        if (rax == -1) {\n            goto label_0;\n        }\n        void (*rax)() ();\n        rbx -= 8;\n    } while (1);\nlabel_0:\n}\n"
        }
    ],
    "funcCount": 161
}