{
    "binaryInfo": {
        "isStripped": true,
        "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf"
    },
    "buildInfo": {
        "decompilerName": "radare2",
        "compilerName": "gcc",
        "compilerVersion": "9.4.0",
        "optLevel": "O"
    },
    "funcInfo": [
        {
            "funcName": "main",
            "funcStartAddr": "0x402dd0",
            "funcEndAddr": "0x403430",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x402dd0 */\n#include <stdint.h>\n \nint32_t main (int32_t argc, char ** argv) {\n    int64_t errname;\n    int64_t var_10h;\n    int64_t var_14h;\n    uint32_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_2ch;\n    int64_t var_34h;\n    int64_t var_3ch;\n    int64_t var_3dh;\n    int64_t var_3eh;\n    int64_t var_3fh;\n    int64_t var_40h;\n    int64_t var_44h;\n    int64_t var_48h;\n    int64_t var_50h;\n    int64_t var_60h;\n    int64_t var_78h;\n    rdi = argc;\n    rsi = argv;\n    rbx = rsi;\n    fcn_0040c350 (*(rsi));\n    setlocale (6, 0x4182d7);\n    bindtextdomain (0x415260, \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\");\n    textdomain (0x415260, rsi);\n    edi = 0x40a6c0;\n    fcn_00415170 ();\n    fcn_004053c0 (rsp + 0x10);\n    rax = 0x101000001010100;\n    *((rsp + 0x44)) = 1;\n    *((rsp + 0x2c)) = rax;\n    rax = 0x1000001000000;\n    *((rsp + 0x34)) = rax;\n    rax = 0x200000004;\n    *((rsp + 0x18)) = rax;\n    eax = 1;\n    *((rsp + 0x3c)) = 0;\n    *((rsp + 0x14)) = 2;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = ax;\n    eax = isatty (0);\n    *((rsp + 0x40)) = 0;\n    *((rsp + 0x48)) = 0;\n    rsp + 0x3f = (eax != 0) ? 1 : 0;\n    edx = 0;\n    r12d = 0;\n    r13d = 0;\n    *((rsp + 0x3d)) = dx;\n    r15d = 0;\n    r14d = 0;\n    *((rsp + 0x50)) = 0;\n    *((rsp + 8)) = 0;\n    do {\nlabel_0:\n        r8d = 0;\n        ecx = 0x415dc0;\n        edx = \"bfint:uvS:TZ\";\n        rsi = rbx;\n        edi = ebp;\n        eax = fcn_00413690 ();\n        if (eax == 0xffffffff) {\n            goto label_8;\n        }\n        if (eax == 0x66) {\n            goto label_9;\n        }\n        if (eax <= 0x66) {\n            goto label_10;\n        }\n        if (eax == 0x74) {\n            goto label_11;\n        }\n        if (eax <= 0x74) {\n            goto label_12;\n        }\n        if (eax == 0x76) {\n            goto label_13;\n        }\n        if (eax >= 0x76) {\n            goto label_14;\n        }\n        *((rsp + 0x3d)) = 1;\n    } while (1);\nlabel_10:\n    if (eax == 0x53) {\n        goto label_15;\n    }\n    if (eax <= 0x53) {\n        goto label_16;\n    }\n    if (eax == 0x5a) {\n        goto label_0;\n    }\n    if (eax == 0x62) {\n        rax = imp.__libc_start_main;\n        r14d = 1;\n        if (rax != 0) {\n            r15 = rax;\n        }\n        goto label_0;\nlabel_14:\n        if (eax != 0x80) {\n            goto label_1;\n        }\n        *(0x0061d4f0) = 1;\n        goto label_0;\nlabel_12:\n        if (eax != 0x69) {\n            goto label_17;\n        }\n        *((rsp + 0x18)) = 3;\n        goto label_0;\n    }\n    if (eax == 0x54) {\n        goto label_18;\n    }\n    do {\nlabel_1:\n        eax = fcn_004036b0 (1);\nlabel_16:\n        if (eax != 0xffffff7d) {\n            goto label_19;\n        }\n        eax = 0;\n        rcx = *(str.8.29);\n        r9d = \"David MacKenzie\";\n        r8d = \"Mike Parker\";\n        fcn_0040ff60 (*(obj.stdout), 0x4151e3, \"GNU coreutils\");\n        eax = exit (0);\nlabel_17:\n    } while (eax != 0x6e);\n    *((rsp + 0x18)) = 2;\n    goto label_0;\nlabel_19:\n    if (eax != 0xffffff7e) {\n        goto label_1;\n    }\n    fcn_004036b0 (0);\nlabel_18:\n    r12d = 1;\n    goto label_0;\nlabel_13:\n    *((rsp + 0x3e)) = 1;\n    goto label_0;\nlabel_15:\n    rax = imp.__libc_start_main;\n    r14d = 1;\n    *((rsp + 8)) = rax;\n    goto label_0;\nlabel_9:\n    *((rsp + 0x18)) = 1;\n    goto label_0;\nlabel_11:\n    if (r13 != 0) {\n        goto label_20;\n    }\n    rsi = imp.__libc_start_main;\n    rdx = rsp + 0x60;\n    edi = 1;\n    eax = xstat ();\n    if (eax != 0) {\n        goto label_21;\n    }\n    eax = *((rsp + 0x78));\n    r13 = imp.__libc_start_main;\n    eax &= 0xf000;\n    if (eax == 0x4000) {\n        goto label_0;\n    }\n    rax = fcn_0040dd80 (4, r13);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"target %s is not a directory\");\n    rcx = rbx;\n    eax = 0;\n    error (1, 0, rax);\nlabel_8:\n    rax = *(0x0061d47c);\n    ebp -= eax;\n    rbx = rbx + rax*8;\n    eax = 0;\n    al = (r13 == 0) ? 1 : 0;\n    if (eax >= ebp) {\n        goto label_22;\n    }\n    if (r12b == 0) {\n        goto label_23;\n    }\n    if (r13 != 0) {\n        goto label_24;\n    }\n    if (ebp > 2) {\n        goto label_25;\n    }\nlabel_4:\n    r13d = 0;\n    if (r14b == 0) {\n        goto label_26;\n    }\n    do {\nlabel_6:\n        edx = 5;\n        if (*((rsp + 0x18)) == 2) {\n            goto label_27;\n        }\n        rax = dcgettext (0, \"backup type\");\n        rsi = r15;\n        eax = fcn_0040a5f0 (rax);\nlabel_7:\n        *((rsp + 0x10)) = eax;\n        fcn_0040a040 (*((rsp + 8)));\n        fcn_00409750 ();\n        if (r13 == 0) {\n            goto label_28;\n        }\nlabel_2:\n        if (ebp != 1) {\n            goto label_29;\n        }\n        eax = fcn_00403620 (*(rbx), r13, 1, rsp + 0x10);\nlabel_3:\n        ebp ^= 1;\n        eax = (int32_t) bpl;\n        return rax;\nlabel_23:\n        if (r13 == 0) {\n            goto label_30;\n        }\n    } while (r14b != 0);\n    *((rsp + 0x10)) = 0;\n    fcn_0040a040 (*((rsp + 8)));\n    fcn_00409750 ();\n    goto label_2;\nlabel_29:\n    fcn_00405360 (rsp + 0x10);\n    eax = rbp - 1;\n    r12 = rbx + rax*8 + 8;\n    do {\n        rbx += 8;\n        eax = fcn_00403620 (*(rbx), r13, 1, rsp + 0x10);\n        ebp &= eax;\n    } while (rbx != r12);\n    goto label_3;\nlabel_26:\n    *((rsp + 0x10)) = 0;\n    fcn_0040a040 (*((rsp + 8)));\n    fcn_00409750 ();\nlabel_28:\n    eax = fcn_00403620 (*(rbx), *((rbx + 8)), 0, rsp + 0x10);\n    goto label_3;\nlabel_30:\n    if (ebp == 1) {\n        goto label_31;\n    }\n    rax = (int64_t) ebp;\n    rdx = rsp + 0x60;\n    edi = 1;\n    r13 = rbx + rax*8 - 8;\n    r12 = *(r13);\n    rsi = *(r13);\n    eax = xstat ();\n    if (eax == 0) {\n        goto label_32;\n    }\n    rax = errno_location ();\n    r8d = *(rax);\n    if (r8d == 0) {\n        goto label_32;\n    }\n    if (r8d != 2) {\n        goto label_33;\n    }\nlabel_5:\n    if (ebp == 2) {\n        goto label_4;\n    }\n    rax = fcn_0040dd80 (4, *(r13));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"target %s is not a directory\");\n    rcx = rbx;\n    eax = 0;\n    error (1, 0, rax);\nlabel_32:\n    eax = *((rsp + 0x78));\n    eax &= 0xf000;\n    if (eax != 0x4000) {\n        goto label_5;\n    }\n    ebp--;\n    rax = (int64_t) ebp;\n    r13 = *((rbx + rax*8));\n    eax = 0;\n    if (r14b != 0) {\n        goto label_6;\n    }\n    goto label_7;\nlabel_31:\n    assert_fail (\"2 <= n_files\", \"src/mv.c\", 0x1c6, \"main\");\nlabel_24:\n    edx = 5;\n    rax = dcgettext (0, \"cannot combine --target-directory (-t) and --no-target-directory (-T)\");\n    eax = 0;\n    error (1, 0, rax);\nlabel_22:\n    ebp--;\n    if (ebp == 0) {\n        rax = fcn_0040dd80 (4, *(rbx));\n        edx = 5;\n        rbx = rax;\n        rax = dcgettext (0, \"missing destination file operand after %s\");\n        rcx = rbx;\n        eax = 0;\n        error (0, 0, rax);\n        goto label_1;\nlabel_21:\n        rax = fcn_0040dd80 (4, *(0x0061db00));\n        edx = 5;\n        rax = dcgettext (0, \"failed to access %s\");\n        rbx = rax;\n        rax = errno_location ();\n        rcx = rbp;\n        eax = 0;\n        error (1, *(rax), rbx);\n    }\n    edx = 5;\n    do {\n        rax = dcgettext (0, \"missing file operand\");\n        eax = 0;\n        error (0, 0, rax);\n        goto label_1;\nlabel_25:\n        rax = fcn_0040dd80 (4, *((rbx + 0x10)));\n        edx = 5;\n        rbx = rax;\n        rax = dcgettext (0, \"extra operand %s\");\n        rcx = rbx;\n        eax = 0;\n        error (0, 0, rax);\n        fcn_004036b0 (1);\nlabel_27:\n        esi = \"options --backup and --no-clobber are mutually exclusive\";\n    } while (1);\nlabel_20:\n    edx = 5;\n    rax = dcgettext (0, \"multiple target directories specified\");\n    eax = 0;\n    error (1, 0, rax);\nlabel_33:\n    *((rsp + 8)) = r8d;\n    rax = fcn_0040dd80 (4, r12);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"failed to access %s\");\n    r8d = *((rsp + 8));\n    rcx = rbx;\n    eax = 0;\n    error (1, r8d, rax);\n}\n"
        },
        {
            "funcName": "fcn_0040345b",
            "funcStartAddr": "0x40345b",
            "funcEndAddr": "0x40347a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40345b */\n#include <stdint.h>\n \nint32_t fcn_0040345b (void) {\n    eax = 0x61d488;\n    if (rax != 0x61d488) {\n        eax = 0;\n        if (rax == 0) {\n            goto label_0;\n        }\n        edi = 0x61d488;\n        void (*rax)() ();\n    }\nlabel_0:\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_004034b1",
            "funcStartAddr": "0x4034b1",
            "funcEndAddr": "0x403508",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4034b1 */\n#include <stdint.h>\n \nint64_t fcn_004034b1 (int32_t argc, func fini, func init, func main, func rtld_fini, void * stack_end, char ** ubp_av) {\n    rsi = argc;\n    r8 = fini;\n    rcx = init;\n    rdi = main;\n    r9 = rtld_fini;\n    xmm0 = stack_end;\n    rdx = ubp_av;\n    if (*(0x0061d4c8) != 0) {\n        goto label_0;\n    }\n    r12d = section..dtors;\n    ebx = 0x61ce48;\n    rbx -= section..dtors;\n    rbx >>= 3;\n    rbx--;\n    do {\n        rax = imp.__libc_start_main;\n        if (rax >= rbx) {\n            goto label_1;\n        }\n        rax++;\n        *(0x0061d4d0) = rax;\n        uint64_t (*r12 + rax*8)() ();\n    } while (1);\nlabel_1:\n    fcn_0040345b ();\n    *(0x0061d4c8) = 1;\n    return rax;\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00403508",
            "funcStartAddr": "0x403508",
            "funcEndAddr": "0x40359b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x403508 */\n#include <stdint.h>\n \nint64_t fcn_00403508 (void) {\n    do {\n        esi = 0x61d488;\n        ecx = 2;\n        rsi -= 0x61d488;\n        rsi >>= 3;\n        rax = rsi;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rsi = rax;\n        if (rax != 0) {\n            eax = 0;\n            if (rax == 0) {\n                goto label_0;\n            }\n            edi = 0x61d488;\n            void (*rax)() ();\n        }\nlabel_0:\n        return rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00403620",
            "funcStartAddr": "0x403620",
            "funcEndAddr": "0x4037bf",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x403620 */\n#include <stdint.h>\n \nuint64_t fcn_00403620 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    uint32_t var_eh;\n    uint32_t var_fh;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_24h;\n    int64_t var_28h;\n    int64_t var_2ah;\n    int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_39h;\n    int64_t var_3ah;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\nlabel_1:\n    rcx = rdx;\n    rbx = rdi;\n    r9 = rsp + 0xf;\n    al = fcn_004094d0 (rdi, rsi, 0, rcx, rsp + 0xe);\n    if (al == 0) {\n        goto label_0;\n    }\n    if (*((rsp + 0xe)) == 0) {\n        goto label_2;\n    }\n    eax = 0;\n    do {\nlabel_0:\n        return eax;\nlabel_2:\n    } while (*((rsp + 0xf)) == 1);\n    if (rbx == 0) {\n        goto label_0;\n    }\n    eax = 0x100;\n    edx = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x24)) = 5;\n    *((rsp + 0x28)) = ax;\n    *((rsp + 0x2a)) = 1;\n    *((rsp + 0x38)) = dx;\n    *((rsp + 0x3a)) = 1;\n    rax = fcn_0040e240 (0x61d4e0);\n    *((rsp + 0x30)) = rax;\n    if (rax != 0) {\n        eax = *((rbp + 0x2e));\n        *((rsp + 0x10)) = rbx;\n        *((rsp + 0x18)) = 0;\n        *((rsp + 0x39)) = al;\n        eax = fcn_004041b0 (rsp + 0x10, rsp + 0x20);\n        edx = rax - 2;\n        if (edx > 2) {\n            goto label_3;\n        }\n        al = (eax != 4) ? 1 : 0;\n        goto label_0;\n    }\n    rax = fcn_0040dd80 (4, 0x416f8e);\n    edx = 5;\n    rax = dcgettext (0, \"failed to get attributes of %s\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    error (1, *(rax), rbx);\nlabel_3:\n    assert_fail (\"VALID_STATUS (status)\", \"src/mv.c\", 0xec, \"do_move\");\n    r13d = edx;\n    r12 = rcx;\n    rbx = rdi;\n    while (1) {\n        if (r13b == 0) {\n            rdx = r12;\n            rsi = rbp;\n            rdi = rbx;\n            goto label_1;\n        }\n        rax = fcn_0040aa00 (rbx);\n        edx = 0;\n        rdi = rbp;\n        rsi = rax;\n        rax = fcn_0040aeb0 ();\n        fcn_0040aa90 (rax);\n        eax = void (*0x403510)(uint64_t, uint64_t, uint64_t, uint64_t) (rbx, rbp, r12, rcx);\n        goto label_1;\n        ebx = eax;\n        free (rbp);\n        eax = ebx;\n        return rax;\n        fcn_0040aa90 (rdi);\n    }\n}\n"
        },
        {
            "funcName": "fcn_004036b0",
            "funcStartAddr": "0x4036b0",
            "funcEndAddr": "0x403a75",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4036b0 */\n#include <stdint.h>\n \nuint64_t fcn_004036b0 (int64_t arg1) {\n    char * var_8h;\n    int64_t var_10h;\n    char * var_18h;\n    char * var_20h;\n    char * var_28h;\n    char * var_30h;\n    char * var_38h;\n    char * var_40h;\n    char * var_48h;\n    char * var_50h;\n    char * var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    rdi = arg1;\n    edx = 5;\n    ebx = edi;\n    rbp = imp.__libc_start_main;\n    if (edi != 0) {\n        rax = dcgettext (0, \"Try '%s --help' for more information.\\n\");\n        rdi = stderr;\n        rcx = rbp;\n        esi = 1;\n        rdx = rax;\n        eax = 0;\n        fprintf_chk ();\nlabel_0:\n        exit (ebx);\n    }\n    rax = dcgettext (0, \"Usage: %s [OPTION]... [-T] SOURCE DEST\\n  or:  %s [OPTION]... SOURCE... DIRECTORY\\n  or:  %s [OPTION]... -t DIRECTORY SOURCE...\\n\");\n    r8 = rbp;\n    rcx = rbp;\n    rdx = rbp;\n    rsi = rax;\n    edi = 1;\n    eax = 0;\n    printf_chk ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"Rename SOURCE to DEST, or move SOURCE(s) to DIRECTORY.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nMandatory arguments to long options are mandatory for short options too.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --backup[=CONTROL]       make a backup of each existing destination file\\n  -b                           like --backup but does not accept an argument\\n  -f, --force                  do not prompt before overwriting\\n  -i, --interactive            prompt before overwrite\\n  -n, --no-clobber             do not overwrite an existing file\\nIf you specify more than one of -i, -f, -n, only the final one takes effect.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --strip-trailing-slashes  remove any trailing slashes from each SOURCE\\n                                 argument\\n  -S, --suffix=SUFFIX          override the usual backup suffix\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -t, --target-directory=DIRECTORY  move all SOURCE arguments into DIRECTORY\\n  -T, --no-target-directory    treat DEST as a normal file\\n  -u, --update                 move only when the SOURCE file is newer\\n                                 than the destination file or when the\\n                                 destination file is missing\\n  -v, --verbose                explain what is being done\\n  -Z, --context                set SELinux security context of destination\\n                                 file to default type\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --help     display this help and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --version  output version information and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\\nThe version control method may be selected via the --backup option or through\\nthe VERSION_CONTROL environment variable.  Here are the values:\\n\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  none, off       never make backups (even if --backup is given)\\n  numbered, t     make numbered backups\\n  existing, nil   numbered if numbered backups exist, simple otherwise\\n  simple, never   always make simple backups\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    *(rsp) = 0x4151e6;\n    rax = rsp;\n    *((rsp + 8)) = \"test invocation\";\n    *((rsp + 0x10)) = 0x415260;\n    *((rsp + 0x18)) = \"Multi-call invocation\";\n    *((rsp + 0x20)) = \"sha224sum\";\n    *((rsp + 0x28)) = \"sha2 utilities\";\n    *((rsp + 0x30)) = \"sha256sum\";\n    *((rsp + 0x38)) = \"sha2 utilities\";\n    *((rsp + 0x40)) = \"sha384sum\";\n    *((rsp + 0x48)) = \"sha2 utilities\";\n    *((rsp + 0x50)) = \"sha512sum\";\n    *((rsp + 0x58)) = \"sha2 utilities\";\n    *((rsp + 0x60)) = 0;\n    *((rsp + 0x68)) = 0;\n    do {\n        rax += 0x10;\n        rdi = *(rax);\n        if (rdi == 0) {\n            goto label_2;\n        }\n        esi = 0x4151e3;\n        ecx = 3;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        dl = (rdi > 0) ? 1 : 0;\n    } while (dl != 0);\nlabel_2:\n    rbp = *((rax + 8));\n    edx = 5;\n    esi = \"\\n%s online help: <%s>\\n\";\n    edi = 0;\n    if (rbp == 0) {\n        goto label_3;\n    }\n    rax = dcgettext (rdi, rsi);\n    edi = 1;\n    ecx = \"https://www.gnu.org/software/coreutils/\";\n    edx = \"GNU coreutils\";\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rax = setlocale (5, 0);\n    if (rax != 0) {\n        eax = strncmp (rax, 0x41526a, 3);\n        if (eax != 0) {\n            goto label_4;\n        }\n    }\nlabel_1:\n    edx = 5;\n    r12d = 0x415202;\n    rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n    ecx = 0x4151e3;\n    edx = \"https://www.gnu.org/software/coreutils/\";\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    ecx = 0x4182d7;\n    r12 = rcx;\n    while (1) {\n        edx = 5;\n        rax = dcgettext (0, \"or available locally via: info '(coreutils) %s%s'\\n\");\n        rcx = r12;\n        rdx = rbp;\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        goto label_0;\nlabel_3:\n        rax = dcgettext (rdi, rsi);\n        edi = 1;\n        ecx = \"https://www.gnu.org/software/coreutils/\";\n        edx = \"GNU coreutils\";\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        rax = setlocale (5, 0);\n        if (rax != 0) {\n            eax = strncmp (rax, 0x41526a, 3);\n            if (eax != 0) {\n                goto label_5;\n            }\n        }\n        edx = 5;\n        rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n        ecx = 0x4151e3;\n        edx = \"https://www.gnu.org/software/coreutils/\";\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        r12d = 0x415202;\n        printf_chk ();\n    }\nlabel_5:\nlabel_4:\n    edx = 5;\n    rax = dcgettext (0, \"Report %s translation bugs to <https://translationproject.org/team/>\\n\");\n    edx = 0x4151e3;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00403a80",
            "funcStartAddr": "0x403a80",
            "funcEndAddr": "0x403c89",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x403a80 */\n#include <stdint.h>\n \nuint64_t fcn_00403a80 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r13d = ecx;\n    r12 = rdx;\n    edx = 0;\n    rbx = rsi;\n    rsi = *((rsi + 0x30));\n    edi = *((rdi + 0x2c));\n    dl = (cl != 0) ? 1 : 0;\n    edx <<= 9;\n    eax = unlinkat ();\n    if (eax == 0) {\n        goto label_3;\n    }\n    rax = errno_location ();\n    edx = *(rax);\n    r13 = rax;\n    if (edx == 0x1e) {\n        goto label_4;\n    }\n    if (*(r12) != 0) {\n        eax = 2;\n        if (edx == 0x14) {\n            goto label_1;\n        }\n        if (edx <= 0x14) {\n            goto label_5;\n        }\n        if (edx == 0x16) {\n            goto label_1;\n        }\n        if (edx == 0x54) {\n            goto label_1;\n        }\n    }\n    if (*((rbx + 0x70)) == 4) {\n        goto label_6;\n    }\nlabel_0:\n    rax = fcn_0040dd80 (4, *((rbx + 0x38)));\n    edx = 5;\n    rax = dcgettext (0, \"cannot remove %s\");\n    rcx = rbp;\n    eax = 0;\n    error (0, *(r13), rax);\n    rax = *((rbx + 8));\n    if (*((rax + 0x58)) >= 0) {\n        goto label_7;\n    }\n    goto label_8;\n    do {\n        *((rax + 0x20)) = 1;\n        rax = *((rax + 8));\n        if (*((rax + 0x58)) < 0) {\n            goto label_8;\n        }\nlabel_7:\n    } while (*((rax + 0x20)) == 0);\nlabel_8:\n    eax = 4;\n    do {\nlabel_1:\n        return rax;\nlabel_5:\n    } while (edx == 2);\n    if (*((rbx + 0x70)) != 4) {\n        goto label_0;\n    }\nlabel_6:\n    if (edx > 0x27) {\n        goto label_0;\n    }\nlabel_2:\n    rax = 0x8000320000;\n    if (((rax >> rdx) & 1) >= 0) {\n        goto label_0;\n    }\n    eax = *((rbx + 0x40));\n    if (eax == 1) {\n        goto label_9;\n    }\n    if (eax != 0xd) {\n        goto label_0;\n    }\nlabel_9:\n    *(r13) = eax;\n    goto label_0;\nlabel_3:\n    eax = 2;\n    if (*((r12 + 0x19)) == 0) {\n        goto label_1;\n    }\n    rax = fcn_0040dd80 (4, *((rbx + 0x38)));\n    edx = 5;\n    rbx = rax;\n    if (r13b == 0) {\n        goto label_10;\n    }\n    rax = dcgettext (0, \"removed directory %s\\n\");\n    rsi = rax;\n    do {\n        rdx = rbx;\n        edi = 1;\n        eax = 0;\n        printf_chk ();\n        eax = 2;\n        return rax;\nlabel_4:\n        rdx = *((rbx + 0x30));\n        esi = *((rbp + 0x2c));\n        r8d = 0x100;\n        rcx = rsp;\n        edi = 1;\n        eax = fxstatat ();\n        if (eax != 0) {\n            edx = *(r13);\n            if (edx == 2) {\n                goto label_11;\n            }\n        }\n        *(r13) = 0x1e;\n        goto label_0;\nlabel_10:\n        rax = dcgettext (0, \"removed %s\\n\");\n        rsi = rax;\n    } while (1);\nlabel_11:\n    eax = 2;\n    if (*(r12) != 0) {\n        goto label_1;\n    }\n    if (*((rbx + 0x70)) != 4) {\n        goto label_0;\n    }\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_00403c90",
            "funcStartAddr": "0x403c90",
            "funcEndAddr": "0x403d00",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x403c90 */\n#include <stdint.h>\n \nint64_t fcn_00403c90 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rax = *((rdx + 0x30));\n    rbx = rdx;\n    while (1) {\n        if (rax < 0) {\n            goto label_1;\n        }\n        eax = 0;\n        return rax;\n        rcx = rdx;\n        r8d = 0x100;\n        rdx = rsi;\n        esi = edi;\n        edi = 1;\n        eax = fxstatat ();\n        if (eax != 0) {\n            *((rbx + 0x30)) = 0xfffffffffffffffe;\n            rax = errno_location ();\n            rcx = *(rax);\n            *((rbx + 8)) = rcx;\n            rdx = rcx;\nlabel_0:\n            *(rax) = edx;\n            eax = 0xffffffff;\n            return rax;\n        }\n        rax = *((rbx + 0x30));\n    }\nlabel_1:\n    errno_location ();\n    edx = *((rbx + 8));\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00403d00",
            "funcStartAddr": "0x403d00",
            "funcEndAddr": "0x4041a2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x403d00 */\n#include <stdint.h>\n \nint64_t fcn_00403d00 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, uint32_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    uint32_t var_14h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_38h;\n    int64_t var_50h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r15 = rsi;\n    edi = *((rdi + 0x2c));\n    rax = *((rsi + 0x38));\n    *((rsp + 0x14)) = r8d;\n    r13 = *((rsi + 0x30));\n    *((rsp + 0x10)) = edi;\n    *((rsp + 8)) = rax;\n    if (r9 == 0) {\n        goto label_15;\n    }\n    *(r9) = 2;\n    ebx = 0;\n    bl = (dl != 0) ? 1 : 0;\n    eax = 0;\n    r12 = r9;\n    *((rsp + 0x50)) = 0xffffffffffffffff;\n    ebx <<= 2;\n    eax = openat (rdi, r13, 0x30900);\n    if (eax >= 0) {\n        edi = eax;\n        *((rsp + 0x18)) = eax;\n        rax = fdopendir ();\n        edx = *((rsp + 0x18));\n        r14 = rax;\n        if (rax == 0) {\n            goto label_16;\n        }\n        rax = errno_location ();\n        *((rsp + 0x18)) = rax;\n        *(rax) = 0;\nlabel_5:\n        rdi = r14;\n        rax = readdir ();\n        if (rax == 0) {\n            goto label_17;\n        }\n        if (*((rax + 0x13)) == 0x2e) {\n            goto label_18;\n        }\nlabel_6:\n        rdi = r14;\n        closedir ();\n    }\nlabel_7:\n    r14d = 0;\n    eax = 3;\nlabel_8:\n    *(r12) = eax;\nlabel_2:\n    if (*((r15 + 0x20)) != 0) {\n        goto label_19;\n    }\n    eax = *((rbp + 4));\n    if (eax != 5) {\n        if (*(rbp) != 0) {\n            goto label_20;\n        }\n        if (eax != 3) {\n            if (*((rbp + 0x18)) == 0) {\n                goto label_0;\n            }\n        }\n        al = fcn_004100a0 ();\n        if (al != 0) {\n            goto label_21;\n        }\n        r12 = rsp + 0x20;\n        eax = fcn_00403c90 (*((rsp + 0x10)), r13, r12);\n        if (eax != 0) {\n            goto label_22;\n        }\n        eax = *((rsp + 0x38));\n        eax &= 0xf000;\n        if (eax == 0xa000) {\n            goto label_21;\n        }\n        edi = *((rsp + 0x10));\n        ecx = 0x200;\n        edx = 2;\n        rsi = r13;\n        eax = faccessat ();\n        if (eax == 0) {\n            goto label_21;\n        }\n        rax = errno_location ();\n        r12d = *(rax);\n        if (r12d != 0xd) {\n            goto label_23;\n        }\n        r15d = 1;\n        goto label_24;\nlabel_3:\n        r12 = rsp + 0x20;\nlabel_10:\n        eax = fcn_00403c90 (*((rsp + 0x10)), r13, r12);\n        if (eax != 0) {\n            goto label_25;\n        }\n        rax = fcn_0040ac30 (r12);\n        rbp = imp.__libc_start_main;\n        edx = 5;\n        r12 = rax;\n        if (r15d != 0) {\n            goto label_26;\n        }\n        rax = dcgettext (0, \"%s: remove %s %s? \");\nlabel_12:\n        rdi = stderr;\n        rdx = rax;\n        r9 = rbx;\n        r8 = r12;\n        rcx = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\nlabel_4:\n        al = fcn_004103f0 ();\n        if (al == 0) {\n            goto label_19;\n        }\n    }\nlabel_0:\n    eax = 2;\n    do {\nlabel_1:\n        return rax;\nlabel_19:\n        eax = 3;\n    } while (1);\nlabel_21:\n    eax = *((rbp + 4));\nlabel_20:\n    if (eax != 3) {\n        goto label_0;\n    }\n    r15d = 0;\nlabel_24:\n    if (ebx == 0) {\n        goto label_27;\n    }\n    if (ebx != 4) {\n        goto label_28;\n    }\nlabel_9:\n    if (*((rbp + 9)) == 0) {\n        if (*((rbp + 0xa)) != 0) {\n            if (r14b != 0) {\n                goto label_28;\n            }\n        }\n        r12d = 0x15;\n        rax = fcn_0040dd80 (4, *((rsp + 8)));\n        rbx = rax;\nlabel_11:\n        edx = 5;\n        rax = dcgettext (0, \"cannot remove %s\");\n        rcx = rbx;\n        eax = 0;\n        error (0, r12d, rax);\n        eax = 4;\n        goto label_1;\nlabel_15:\n        r14d = edx;\n        eax = 0;\n        *((rsp + 0x50)) = 0xffffffffffffffff;\n        ebx -= ebx;\n        ebx = ~ebx;\n        ebx &= 4;\n        if (dl != 0) {\n            r14d = eax;\n        }\n        goto label_2;\n    }\n    rax = fcn_0040dd80 (4, *((rsp + 8)));\n    rbx = rax;\n    if (*((rsp + 0x14)) != 2) {\n        goto label_3;\n    }\n    if (r14b != 0) {\n        goto label_3;\n    }\n    rbp = imp.__libc_start_main;\n    edx = 5;\n    if (r15d != 0) {\n        goto label_29;\n    }\n    rax = dcgettext (0, \"%s: descend into directory %s? \");\n    rdx = rax;\nlabel_13:\n    rdi = stderr;\n    r8 = rbx;\n    rcx = rbp;\n    eax = 0;\n    esi = 1;\n    fprintf_chk ();\n    goto label_4;\nlabel_18:\n    edx = 0;\n    dl = (*((rax + 0x14)) == 0x2e) ? 1 : 0;\n    eax = *((rax + rdx + 0x14));\n    if (al == 0) {\n        goto label_5;\n    }\n    if (al == 0x2f) {\n        goto label_5;\n    }\n    goto label_6;\nlabel_17:\n    rax = *((rsp + 0x18));\n    rdi = r14;\n    edx = *(rax);\n    *((rsp + 0x18)) = edx;\n    closedir ();\n    edx = *((rsp + 0x18));\n    if (edx != 0) {\n        goto label_7;\n    }\n    r14d = 1;\n    eax = 4;\n    goto label_8;\nlabel_27:\n    r12 = rsp + 0x20;\n    eax = fcn_00403c90 (*((rsp + 0x10)), r13, r12);\n    if (eax != 0) {\n        goto label_22;\n    }\n    eax = *((rsp + 0x38));\n    eax &= 0xf000;\n    if (eax == 0xa000) {\n        goto label_30;\n    }\n    if (eax == 0x4000) {\n        goto label_9;\n    }\nlabel_14:\n    rax = fcn_0040dd80 (4, *((rsp + 8)));\n    rbx = rax;\n    goto label_10;\nlabel_22:\n    rax = errno_location ();\n    r12d = *(rax);\nlabel_23:\n    rax = fcn_0040dd80 (4, *((rsp + 8)));\n    rbx = rax;\n    goto label_11;\nlabel_16:\n    close (edx);\n    eax = 3;\n    goto label_8;\nlabel_26:\n    dcgettext (0, \"%s: remove write-protected %s %s? \");\n    goto label_12;\nlabel_29:\n    rax = dcgettext (0, \"%s: descend into write-protected directory %s? \");\n    rdx = rax;\n    goto label_13;\nlabel_30:\n    if (*((rbp + 4)) != 3) {\n        goto label_0;\n    }\n    goto label_14;\nlabel_25:\n    edx = 5;\n    rax = dcgettext (0, \"cannot remove %s\");\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    error (0, *(rax), rbp);\n    eax = 4;\n    goto label_1;\nlabel_28:\n    r12 = rsp + 0x20;\n    goto label_14;\n}\n"
        },
        {
            "funcName": "fcn_004041b0",
            "funcStartAddr": "0x4041b0",
            "funcEndAddr": "0x404886",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4041b0 */\n#include <stdint.h>\n \nuint64_t fcn_004041b0 (uint32_t arg1, uint32_t arg2) {\n    uint32_t var_ch;\n    rdi = arg1;\n    rsi = arg2;\n    if (*(rdi) == 0) {\n        goto label_13;\n    }\n    r13 = rsi;\n    r12d = 2;\n    esi -= esi;\n    edx = 0;\n    esi &= 0xffffffc0;\n    esi += 0x258;\n    rax = fcn_00410370 (rdi);\nlabel_0:\n    rdi = rbp;\n    rax = fts_read ();\n    rbx = rax;\n    if (rax == 0) {\n        goto label_14;\n    }\n    do {\n        eax = *((rax + 0x70));\n        if (ax > 0xd) {\n            goto label_15;\n        }\n        edx = (int32_t) ax;\n        /* switch table (14 cases) at 0x4162b8 */\n        rax = fcn_0040de50 (0, 3, *((rbx + 0x38)));\n        edx = 5;\n        r12 = rax;\n        rax = dcgettext (0, \"traversal failed: %s\");\n        rcx = r12;\nlabel_1:\n        eax = 0;\n        error (0, *((rbx + 0x40)), rax);\nlabel_4:\n        rsi = rbx;\n        edx = 4;\n        rdi = rbp;\n        r12d = 4;\n        fts_set ();\n        rdi = rbp;\n        fts_read ();\n        rdi = rbp;\n        rax = fts_read ();\n        rbx = rax;\n    } while (rax != 0);\nlabel_14:\n    rax = errno_location ();\n    rbx = rax;\n    eax = *(rax);\n    if (eax != 0) {\n        goto label_16;\n    }\n    rdi = rbp;\n    eax = fts_close ();\n    if (eax != 0) {\n        goto label_17;\n    }\nlabel_10:\n    eax = r12d;\n    return rax;\n    if (ax == 6) {\n        if (*((r13 + 8)) == 0) {\n            goto label_18;\n        }\n        if (*((rbx + 0x58)) <= 0) {\n            goto label_18;\n        }\n        rcx = *((rbp + 0x18));\n        if (*((rbx + 0x78)) != rcx) {\n            goto label_19;\n        }\n    }\nlabel_18:\n    eax &= 0xfffffffd;\n    r15d = 0;\n    r15b = (ax == 4) ? 1 : 0;\n    eax = fcn_00403d00 (rbp, rbx, r15d, r13, 3, 0);\n    r14d = eax;\n    if (eax == 2) {\n        goto label_20;\n    }\nlabel_2:\n    eax = r14 - 2;\n    if (eax > 2) {\n        goto label_21;\n    }\n    if (r14d == 4) {\n        goto label_22;\n    }\n    if (r14d != 3) {\n        goto label_0;\n    }\n    eax = 3;\n    if (r12d == 2) {\n        r12d = eax;\n    }\n    goto label_0;\n    rax = fcn_0040de50 (0, 3, *((rbx + 0x38)));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"WARNING: Circular directory structure.\\nThis almost certainly means that you have a corrupted file system.\\nNOTIFY YOUR SYSTEM MANAGER.\\nThe following directory is part of the cycle:\\n  %s\\n\");\n    rcx = r12;\n    esi = 0;\n    rdx = rax;\n    goto label_1;\n    if (*((r13 + 9)) != 0) {\n        goto label_23;\n    }\n    if (*((r13 + 0xa)) == 0) {\n        goto label_24;\n    }\n    eax = 0;\n    eax = openat (*((rbp + 0x2c)), *((rbx + 0x30)), 0x30900);\n    r14d = eax;\n    if (eax < 0) {\n        goto label_11;\n    }\n    edi = eax;\n    rax = fdopendir ();\n    r15 = rax;\n    if (rax == 0) {\n        goto label_25;\n    }\n    errno_location ();\n    *(rax) = 0;\n    r14 = rax;\nlabel_7:\n    rdi = r15;\n    rax = readdir ();\n    if (rax == 0) {\n        goto label_26;\n    }\n    if (*((rax + 0x13)) == 0x2e) {\n        goto label_27;\n    }\nlabel_8:\n    rdi = r15;\n    closedir ();\n    do {\nlabel_11:\n        if (*((r13 + 0xa)) == 0) {\n            goto label_24;\n        }\n        r12d = 0x27;\n        goto label_28;\nlabel_26:\n        r14d = *(r14);\n        rdi = r15;\n        closedir ();\n    } while (r14d != 0);\nlabel_23:\n    if (*((rbx + 0x58)) == 0) {\n        rax = fcn_0040aa00 (*((rbx + 0x30)));\n        if (*(rax) == 0x2e) {\n            goto label_29;\n        }\nlabel_6:\n        rax = *((r13 + 0x10));\n        if (rax == 0) {\n            goto label_9;\n        }\n        rcx = *(rax);\n        if (*((rbx + 0x80)) == rcx) {\n            goto label_30;\n        }\n    }\nlabel_9:\n    eax = fcn_00403d00 (rbp, rbx, 1, r13, 2, rsp + 0xc);\n    r14d = eax;\n    if (eax == 2) {\n        goto label_31;\n    }\nlabel_3:\n    rax = *((rbx + 8));\n    if (*((rax + 0x58)) >= 0) {\n        goto label_32;\n    }\n    goto label_33;\n    do {\n        *((rax + 0x20)) = 1;\n        rax = *((rax + 8));\n        if (*((rax + 0x58)) < 0) {\n            goto label_33;\n        }\nlabel_32:\n    } while (*((rax + 0x20)) == 0);\nlabel_33:\n    rdi = rbp;\n    edx = 4;\n    rsi = rbx;\n    fts_set ();\n    rdi = rbp;\n    fts_read ();\n    goto label_2;\nlabel_20:\n    eax = fcn_00403a80 (rbp, rbx, r13, r15d);\n    r14d = eax;\n    goto label_2;\nlabel_31:\n    if (*((rsp + 0xc)) != 4) {\n        goto label_0;\n    }\n    eax = fcn_00403a80 (rbp, rbx, r13, 1);\n    rdi = rbp;\n    edx = 4;\n    rsi = rbx;\n    r14d = eax;\n    fts_set ();\n    rdi = rbp;\n    fts_read ();\n    if (r14d == 2) {\n        goto label_0;\n    }\n    goto label_3;\nlabel_24:\n    r12d = 0x15;\nlabel_28:\n    rax = fcn_0040dd80 (4, *((rbx + 0x38)));\n    edx = 5;\n    r14 = rax;\n    rax = dcgettext (0, \"cannot remove %s\");\n    rcx = r14;\n    eax = 0;\n    error (0, r12d, rax);\n    rax = *((rbx + 8));\n    if (*((rax + 0x58)) >= 0) {\n        goto label_34;\n    }\n    goto label_4;\nlabel_5:\n    *((rax + 0x20)) = 1;\n    rax = *((rax + 8));\n    if (*((rax + 0x58)) < 0) {\n        goto label_4;\n    }\nlabel_34:\n    if (*((rax + 0x20)) == 0) {\n        goto label_5;\n    }\n    goto label_4;\nlabel_29:\n    edx = 0;\n    dl = (*((rax + 1)) == 0x2e) ? 1 : 0;\n    eax = *((rax + rdx + 1));\n    if (al == 0) {\n        goto label_35;\n    }\n    if (al != 0x2f) {\n        goto label_6;\n    }\nlabel_35:\n    rax = fcn_0040dca0 (2, 4, *((rbx + 0x38)));\n    r15 = rax;\n    rax = fcn_0040dca0 (1, 4, 0x415fd6);\n    r14 = rax;\n    rax = fcn_0040dca0 (0, 4, 0x415fd7);\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"refusing to remove %s or %s directory: skipping %s\");\n    r9 = r15;\n    r8 = r14;\n    rcx = r12;\n    eax = 0;\n    error (0, 0, rax);\n    goto label_4;\nlabel_27:\n    edx = 0;\n    dl = (*((rax + 0x14)) == 0x2e) ? 1 : 0;\n    eax = *((rax + rdx + 0x14));\n    if (al == 0) {\n        goto label_7;\n    }\n    if (al == 0x2f) {\n        goto label_7;\n    }\n    goto label_8;\nlabel_30:\n    rax = *((rax + 8));\n    if (*((rbx + 0x78)) != rax) {\n        goto label_9;\n    }\n    rdx = *((rbx + 0x38));\n    edi = 0x416f8e;\n    ecx = 2;\n    rsi = rdx;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (*((rbx + 0x78)) > rax) ? 1 : 0;\n    if (al != 0) {\n        goto label_36;\n    }\n    rax = fcn_0040dd80 (4, rdx);\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"it is dangerous to operate recursively on %s\");\n    rcx = r12;\n    eax = 0;\n    error (0, 0, rax);\nlabel_12:\n    edx = 5;\n    rax = dcgettext (0, \"use --no-preserve-root to override this failsafe\");\n    eax = 0;\n    error (0, 0, rax);\n    goto label_4;\nlabel_16:\n    edx = 5;\n    r12d = 4;\n    rax = dcgettext (0, \"fts_read failed\");\n    eax = 0;\n    error (0, *(rbx), rax);\n    rdi = rbp;\n    eax = fts_close ();\n    if (eax == 0) {\n        goto label_10;\n    }\nlabel_17:\n    edx = 5;\n    r12d = 4;\n    rax = dcgettext (0, \"fts_close failed\");\n    eax = 0;\n    error (0, *(rbx), rax);\n    goto label_10;\nlabel_19:\n    rax = *((rbx + 8));\n    if (*((rax + 0x58)) >= 0) {\n        goto label_37;\n    }\n    goto label_38;\n    do {\n        *((rax + 0x20)) = 1;\n        rax = *((rax + 8));\n        if (*((rax + 0x58)) < 0) {\n            goto label_38;\n        }\nlabel_37:\n    } while (*((rax + 0x20)) == 0);\nlabel_38:\n    edi = 4;\n    r12d = 4;\n    rax = fcn_0040dd80 (edi, *((rbx + 0x38)));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"skipping %s, since it's on a different device\");\n    rcx = rbx;\n    eax = 0;\n    error (0, 0, rax);\n    goto label_0;\nlabel_13:\n    r12d = 2;\n    goto label_10;\nlabel_25:\n    close (r14d);\n    goto label_11;\nlabel_15:\n    rax = fcn_0040de50 (0, 3, *((rbx + 0x38)));\n    ebx = *((rbx + 0x70));\n    edx = 5;\n    rax = dcgettext (0, \"unexpected failure: fts_info=%d: %s\\nplease report to %s\");\n    r9d = \"bug-coreutils@gnu.org\";\n    r8 = rbp;\n    ecx = ebx;\n    eax = 0;\n    error (0, 0, rax);\n    abort ();\nlabel_36:\n    rax = fcn_0040dca0 (1, 4, 0x416f8e);\n    r14 = rax;\n    rax = fcn_0040dca0 (0, 4, *((rbx + 0x38)));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"it is dangerous to operate recursively on %s (same as %s)\");\n    r8 = r14;\n    rcx = r12;\n    eax = 0;\n    error (0, 0, rax);\n    goto label_12;\nlabel_21:\n    assert_fail (\"VALID_STATUS (s)\", \"src/remove.c\", 0x23e, 0x416328);\nlabel_22:\n    r12d = 4;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00404890",
            "funcStartAddr": "0x404890",
            "funcEndAddr": "0x4048d4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x404890 */\n#include <stdint.h>\n \nint32_t fcn_00404890 (char * arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    esi &= 0xf000;\n    if (esi == 0xa000) {\n        eax = 1;\n        return eax;\n    }\n    rbx = rdi;\n    al = fcn_004100a0 ();\n    if (al != 0) {\n        eax = 1;\n        return eax;\n    }\n    rdi = rbx;\n    esi = 2;\n    eax = euidaccess ();\n    al = (eax == 0) ? 1 : 0;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_004048e0",
            "funcStartAddr": "0x4048e0",
            "funcEndAddr": "0x404982",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4048e0 */\n#include <stdint.h>\n \nuint64_t fcn_004048e0 (char *** arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r12d = edi;\n    rbx = rsi;\n    if (*(0x0061d900) == 0) {\n        goto label_1;\n    }\nlabel_0:\n    if (rbx != 0) {\n        goto label_2;\n    }\n    goto label_3;\n    do {\n        rbx -= rax;\n        if (rbx == 0) {\n            goto label_3;\n        }\nlabel_2:\n        rsi = imp.__libc_start_main;\n        edi = r12d;\n        if (*(0x0061d3f8) <= rbx) {\n            rbp = *(0x0061d3f8);\n        }\n        rax = fcn_0040afb0 (rdi, rsi, rbp);\n    } while (rax == rbp);\n    eax = 0;\n    return rax;\nlabel_3:\n    eax = 1;\n    return rax;\nlabel_1:\n    rax = calloc (*(0x0061d3f8), 1);\n    if (rax != 0) {\n        *(0x0061d900) = rax;\n        goto label_0;\n    }\n    *(0x0061d900) = 0x61d500;\n    *(0x0061d3f8) = 0x400;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00404990",
            "funcStartAddr": "0x404990",
            "funcEndAddr": "0x4049c7",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x404990 */\n#include <stdint.h>\n \nuint64_t fcn_00404990 (int64_t arg2, uint32_t arg3) {\n    rsi = arg2;\n    rdx = arg3;\n    rcx = rdx;\n    rdx = rsi;\n    esi = 3;\n    eax = fallocate ();\n    ebx = eax;\n    while (eax != 0x5f) {\n        eax = ebx;\n        return eax;\n        rax = errno_location ();\n        eax = *(rax);\n        if (eax == 0x26) {\n            goto label_0;\n        }\n    }\nlabel_0:\n    ebx = 0;\n    eax = ebx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004049d0",
            "funcStartAddr": "0x4049d0",
            "funcEndAddr": "0x4049ed",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4049d0 */\n#include <stdint.h>\n \nint64_t fcn_004049d0 (char * arg1, char * arg2, uint32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rax = rsi;\n    esi = edx;\n    if (edi < 0) {\n        rdi = rax;\n        void (*0x402be0)() ();\n    }\n    return fchmod ();\n}\n"
        },
        {
            "funcName": "fcn_004049f0",
            "funcStartAddr": "0x4049f0",
            "funcEndAddr": "0x404a30",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4049f0 */\n#include <stdint.h>\n \nint64_t fcn_004049f0 (void) {\n    errno_location ();\n    edx = 5;\n    *(rax) = 0x5f;\n    rbx = rax;\n    rax = dcgettext (0, \"failed to restore the default file creation context\");\n    eax = 0;\n    error (1, *(rbx), rax);\n}\n"
        },
        {
            "funcName": "fcn_00404a30",
            "funcStartAddr": "0x404a30",
            "funcEndAddr": "0x404ade",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x404a30 */\n#include <stdint.h>\n \nuint64_t fcn_00404a30 (int64_t arg1, char * arg2, size_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r12 = rdi;\n    rbx = rdx;\n    rax = fcn_0040dca0 (1, 4, rsi);\n    rax = fcn_0040dca0 (0, 4, r12);\n    rcx = rbp;\n    esi = \"%s -> %s\";\n    edi = 1;\n    rdx = rax;\n    eax = 0;\n    printf_chk ();\n    if (rbx != 0) {\n        rax = fcn_0040dd80 (4, rbx);\n        edx = 5;\n        rbx = rax;\n        rax = dcgettext (0, \" (backup: %s)\");\n        rdx = rbx;\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n    }\n    rdi = stdout;\n    rax = *((rdi + 0x28));\n    if (rax < *((rdi + 0x30))) {\n        rdx = rax + 1;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = 0xa;\n        return rax;\n    }\n    esi = 0xa;\n    return overflow ();\n}\n"
        },
        {
            "funcName": "fcn_00404ae0",
            "funcStartAddr": "0x404ae0",
            "funcEndAddr": "0x404c0c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x404ae0 */\n#include <stdint.h>\n \nvoid fcn_00404ae0 (int64_t arg1, char * arg2, int64_t arg3) {\n    int64_t var_4h;\n    int64_t var_dh;\n    int64_t var_eh;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r12 = rdi;\n    rbx = rsi;\n    al = fcn_00404890 (rsi, *(rdx));\n    if (al != 0) {\n        goto label_0;\n    }\n    fcn_0040ad20 (*(rbp), rsp + 4);\n    ebp = *(rbp);\n    *((rsp + 0xe)) = 0;\n    rax = fcn_0040dd80 (4, rbx);\n    ebp &= 0xfff;\n    rbx = imp.__libc_start_main;\n    r13 = rax;\n    edx = 5;\n    if (*((r12 + 0x18)) == 0) {\n        if ((*((r12 + 0x14)) & 0xffff00) == 0) {\n            goto label_1;\n        }\n    }\n    rax = dcgettext (0, \"%s: replace %s, overriding mode %04lo (%s)? \");\n    rdx = rax;\n    do {\n        rdi = stderr;\n        r9 = rbp;\n        eax = 0;\n        rsi = rsp + 0xd;\n        r8 = r13;\n        rcx = rbx;\n        esi = 1;\n        fprintf_chk ();\n        fcn_004103f0 ();\n        return;\nlabel_0:\n        rax = fcn_0040dd80 (4, rbx);\n        rbx = imp.__libc_start_main;\n        edx = 5;\n        rax = dcgettext (0, \"%s: overwrite %s? \");\n        r8 = rbp;\n        rcx = rbx;\n        esi = 1;\n        rdi = stderr;\n        rdx = rax;\n        eax = 0;\n        fprintf_chk ();\n        fcn_004103f0 ();\n        return;\nlabel_1:\n        rax = dcgettext (0, \"%s: unwritable %s (mode %04lo, %s); try anyway? \");\n        rdx = rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00404c10",
            "funcStartAddr": "0x404c10",
            "funcEndAddr": "0x404d13",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x404c10 */\n#include <stdint.h>\n \nuint64_t fcn_00404c10 (char * arg1, char * arg2, int64_t arg4) {\n    rdi = arg1;\n    rsi = arg2;\n    rcx = arg4;\n    r9d = (int32_t) dl;\n    r12 = rsi;\n    rsi = rdi;\n    rbx = rdi;\n    r8b = (r8b != 0) ? 1 : 0;\n    r8d = (int32_t) r8b;\n    r8d <<= 0xa;\n    eax = fcn_00409b50 (edx, rsi, 0xffffff9c, rsi, r8, r9);\n    if (eax >= 0) {\n        bl = (eax > 0) ? 1 : 0;\n        bl &= bpl;\n        if (bl == 0) {\n            ebx = 1;\n            eax = 1;\n            return eax;\n        }\n        rax = fcn_0040dd80 (4, r12);\n        edx = 5;\n        rax = dcgettext (0, \"removed %s\\n\");\n        rdx = rbp;\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        eax = ebx;\n        return rax;\n    }\n    rax = fcn_0040dca0 (1, 4, rbx);\n    r13 = rax;\n    rax = fcn_0040dca0 (0, 4, r12);\n    edx = 5;\n    rax = dcgettext (0, \"cannot create hard link %s to %s\");\n    rbx = rax;\n    rax = errno_location ();\n    r8 = r13;\n    rcx = rbp;\n    eax = 0;\n    ebx = 0;\n    error (0, *(rax), rbx);\n    eax = ebx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00404d20",
            "funcStartAddr": "0x404d20",
            "funcEndAddr": "0x404dd7",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x404d20 */\n#include <stdint.h>\n \nuint64_t fcn_00404d20 (uint32_t arg1, char * arg2, int64_t arg3, int64_t arg4) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r13 = rsi;\n    rsi = rcx;\n    r12d = edx;\n    edx = 1;\n    rbx = rcx;\n    rax = lseek ();\n    if (rax < 0) {\n        goto label_0;\n    }\n    while (eax >= 0) {\n        eax = 1;\n        return rax;\n        rax -= rbx;\n        rdx = rbx;\n        eax = fcn_00404990 (ebp, rax);\n    }\n    rax = fcn_0040dd80 (4, r13);\n    edx = 5;\n    esi = \"error deallocating %s\";\n    goto label_1;\nlabel_0:\n    rax = fcn_0040dd80 (4, r13);\n    edx = 5;\nlabel_1:\n    rax = dcgettext (0, \"cannot lseek %s\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    eax = error (0, *(rax), rbx);\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00404de0",
            "funcStartAddr": "0x404de0",
            "funcEndAddr": "0x405203",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x404de0 */\n#include <stdint.h>\n \nint64_t fcn_00404de0 (int64_t arg_b0h, int64_t arg_b8h, int64_t arg_c0h, int64_t arg_c8h, int64_t arg_d0h, char *** arg1, uint32_t arg2, uint32_t arg3, int64_t arg4, uint32_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    uint32_t var_18h;\n    int64_t var_1dh;\n    int64_t var_1eh;\n    int64_t var_1fh;\n    uint32_t buf;\n    size_t nbyte;\n    ssize_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    ssize_t var_50h;\n    uint32_t var_58h;\n    int64_t var_60h;\n    char *** fildes;\n    int64_t var_6ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rax = *((rsp + 0xb0));\n    rbx = *((rsp + 0xc8));\n    *((rsp + 0x1f)) = r9b;\n    r10 = *((rsp + 0xd0));\n    *((rsp + 0x40)) = rax;\n    rax = *((rsp + 0xb8));\n    *(r10) = 0;\n    *((rsp + 0x10)) = rax;\n    rax = *((rsp + 0xc0));\n    *((rsp + 0x48)) = rbx;\n    *((rsp + 0x28)) = rax;\n    *((rsp + 0x60)) = r10;\n    *(rbx) = 0;\n    if (rax == 0) {\n        goto label_8;\n    }\n    *((rsp + 0x58)) = r8;\n    if (r8 == 0) {\n        r8 = rcx;\n    }\n    *((rsp + 0x6c)) = r9d;\n    r15d = 0;\n    r13d = 0;\n    *((rsp + 0x38)) = rcx;\n    r14d = r15d;\n    r15 = r13;\n    *((rsp + 0x20)) = rdx;\n    *((rsp + 0x18)) = esi;\n    *((rsp + 0x68)) = edi;\n    *((rsp + 0x50)) = r8;\n    do {\nlabel_4:\n        rax = *((rsp + 0x38));\n        rdx = *((rsp + 0x28));\n        rsi = *((rsp + 0x20));\n        edi = *((rsp + 0x68));\n        if (rax <= rdx) {\n            rdx = rax;\n        }\n        rax = read (rdi, rsi, rdx);\n        *((rsp + 0x30)) = rax;\n        if (rax >= 0) {\n            goto label_9;\n        }\n        rax = errno_location ();\n    } while (*(rax) == 4);\n    rbx = rax;\n    r15d = 0;\n    rax = fcn_0040dd80 (4, *((rsp + 0x40)));\n    edx = 5;\n    rax = dcgettext (0, \"error reading %s\");\n    rcx = rbp;\n    eax = 0;\n    error (0, *(rbx), rax);\nlabel_2:\n    eax = r15d;\n    return rax;\n    if (*(rax) == 4) {\nlabel_9:\n        goto label_10;\n    }\n    rax = *((rsp + 0x48));\n    r13 = *((rsp + 0x20));\n    r12 = *((rsp + 0x30));\n    rbx = *((rsp + 0x50));\n    *(rax) += r12;\n    r11 = r13;\n    rsp + 0x1d = (*((rsp + 0x58)) != 0) ? 1 : 0;\nlabel_0:\n    if (rbx > r12) {\n        rbx = r12;\n    }\n    bpl = (rbx != 0) ? 1 : 0;\n    bpl &= *((rsp + 0x1d));\n    if (bpl == 0) {\n        goto label_11;\n    }\n    rsi = r13;\n    rdx = rbx;\n    do {\n        if (*(rsi) != 0) {\n            goto label_12;\n        }\n        rsi++;\n        rdx--;\n        if (rdx == 0) {\n            goto label_13;\n        }\n    } while ((dl & 0xf) != 0);\n    *((rsp + 8)) = r11;\n    eax = memcmp (r13, rsi, rdx);\n    r11 = *((rsp + 8));\n    bpl = (eax == 0) ? 1 : 0;\n    edx = ebp;\n    edx ^= r14d;\n    al = (eax != 0) ? 1 : 0;\nlabel_5:\n    r9b = (r15 != 0) ? 1 : 0;\n    r9d &= edx;\n    if (rbx != r12) {\n        goto label_14;\n    }\n    if (al == 0) {\n        goto label_14;\n    }\n    if (r9b == 0) {\n        goto label_15;\n    }\n    *((rsp + 8)) = 1;\n    ebp = 0;\nlabel_7:\n    *((rsp + 0x1e)) = r9b;\n    if (r14b != 0) {\n        goto label_16;\n    }\n    do {\n        rax = fcn_0040afb0 (*((rsp + 0x18)), r11, r15);\n        r9d = *((rsp + 0x1e));\n        if (r15 != rax) {\n            goto label_17;\n        }\nlabel_1:\n        eax = *((rsp + 8));\n        if (eax == 0) {\n            goto label_18;\n        }\n        if (rbx == 0) {\n            goto label_19;\n        }\n        if (r9b == 0) {\n            goto label_20;\n        }\n        r15 = rbx;\n        r11 = r13;\n        r14d = ebp;\n        ebx = 0;\n        goto label_0;\nlabel_11:\n        eax = r14d;\n        dl = (rbx == r12) ? 1 : 0;\n        eax ^= 1;\n        if ((dl & al) == 0) {\n            if (rbx != 0) {\n                goto label_21;\n            }\n        }\nlabel_6:\n        r9d = 0;\n        r15 += rbx;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x1e)) = r9b;\n    } while (r14b == 0);\nlabel_16:\n    edx = *((rsp + 0x1f));\n    al = fcn_00404d20 (*((rsp + 0x18)), *((rsp + 0x10)), rdx, r15);\n    r9d = *((rsp + 0x1e));\n    if (al != 0) {\n        goto label_1;\n    }\n    r15d = eax;\n    goto label_2;\nlabel_13:\n    r9d = r14d;\n    r9d ^= 1;\n    al = (r15 != 0) ? 1 : 0;\n    r9d &= eax;\nlabel_14:\n    if (r9b != 0) {\n        goto label_22;\n    }\nlabel_21:\n    rax = 0x7fffffffffffffff;\n    rax -= rbx;\n    if (rax < r15) {\n        goto label_23;\n    }\n    r15 += rbx;\n    r12 -= rbx;\n    r13 += rbx;\n    r14d = ebp;\nlabel_3:\n    if (r12 != 0) {\n        goto label_0;\n    }\n    goto label_24;\nlabel_18:\n    r11 = r13;\n    r12 -= rbx;\n    r14d = ebp;\n    r13 += rbx;\n    r15 = rbx;\n    goto label_3;\nlabel_19:\n    r15d = 0;\nlabel_24:\n    rcx = *((rsp + 0x30));\n    rax = *((rsp + 0x60));\n    *(rax) = bpl;\n    if (r13 != 0) {\n        r14d = ebp;\n        goto label_4;\nlabel_20:\n        r11 = r13;\n        r12 -= rbx;\n        r14d = ebp;\n        r13 += rbx;\n        r15d = 0;\n        goto label_3;\nlabel_23:\n        r15d = 0;\n        rax = fcn_0040dd80 (4, *((rsp + 0x40)));\n        edx = 5;\n        rbx = rax;\n        rax = dcgettext (0, \"overflow reading %s\");\n        rcx = rbx;\n        eax = 0;\n        error (0, 0, rax);\n        goto label_2;\nlabel_12:\n        eax = ebp;\n        edx = r14d;\n        ebp = 0;\n        goto label_5;\nlabel_17:\n        r15d = r14d;\n        rax = fcn_0040dd80 (4, *((rsp + 0x10)));\n        edx = 5;\n        rax = dcgettext (0, \"error writing %s\");\n        rbx = rax;\n        rax = errno_location ();\n        rcx = rbp;\n        eax = 0;\n        error (0, *(rax), rbx);\n        goto label_2;\n    }\n    r13 = r15;\n    do {\n        if (bpl != 0) {\n            edx = *((rsp + 0x6c));\n            rsi = *((rsp + 0x10));\n            rcx = r13;\n            edi = *((rsp + 0x18));\n            void (*0x404d20)() ();\n        }\nlabel_8:\n        r15d = 1;\n        goto label_2;\nlabel_10:\n        r13 = r15;\n    } while (1);\nlabel_15:\n    ebp = 0;\n    goto label_6;\nlabel_22:\n    *((rsp + 8)) = 0;\n    goto label_7;\n}\n"
        },
        {
            "funcName": "fcn_00405210",
            "funcStartAddr": "0x405210",
            "funcEndAddr": "0x4052d8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x405210 */\n#include <stdint.h>\n \nuint64_t fcn_00405210 (int64_t arg1, int64_t arg4, uint32_t arg5) {\n    rdi = arg1;\n    rcx = arg4;\n    r8 = arg5;\n    if (*((r8 + 0x25)) == 0) {\n        goto label_1;\n    }\n    r12 = rdi;\n    rax = errno_location ();\n    r13 = rax;\n    while (bl != 0) {\n        *(r13) = 0x5f;\n        rax = fcn_0040dd80 (4, r12);\n        edx = 5;\n        rbx = rax;\n        rax = dcgettext (0, \"failed to get security context of %s\");\n        rcx = rbx;\n        eax = 0;\n        error (0, *(r13), rax);\n        ebx = *((rbp + 0x26));\nlabel_0:\n        ebx ^= 1;\n        eax = ebx;\n        return rax;\n        ebx = *((rbp + 0x26));\n    }\n    *(rax) = 0x5f;\n    goto label_0;\nlabel_1:\n    ebx = ecx;\n    bl &= *((r8 + 0x21));\n    if (bl == 0) {\n        ebx = 1;\n        eax = 1;\n        return rax;\n    }\n    errno_location ();\n    *(rax) = 0x5f;\n    eax = ebx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004052e0",
            "funcStartAddr": "0x4052e0",
            "funcEndAddr": "0x405353",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4052e0 */\n#include <stdint.h>\n \nuint64_t fcn_004052e0 (char * arg1, int64_t arg4) {\n    rdi = arg1;\n    rcx = arg4;\n    r12 = rdi;\n    rbx = rcx;\n    rax = errno_location ();\n    while (*((rbx + 0x26)) != 0) {\n        *(rbp) = 0x5f;\n        rax = fcn_0040dca0 (0, 4, r12);\n        edx = 5;\n        rbx = rax;\n        rax = dcgettext (0, \"failed to set the security context of %s\");\n        rcx = rbx;\n        eax = 0;\n        eax = error (0, *(rbp), rax);\n        eax = 0;\n        return rax;\n    }\n    *(rax) = 0x5f;\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405360",
            "funcStartAddr": "0x405360",
            "funcEndAddr": "0x405386",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x405360 */\n#include <stdint.h>\n \nuint64_t fcn_00405360 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = fcn_0040b8c0 (0x3d, 0, 0x40c280, 0x40c2c0, 0x40c330);\n    *((rbx + 0x38)) = rax;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004053c0",
            "funcStartAddr": "0x4053c0",
            "funcEndAddr": "0x4053f1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4053c0 */\n#include <stdint.h>\n \nuint32_t fcn_004053c0 (int64_t arg1) {\n    rdi = arg1;\n    xmm0 = 0;\n    rbx = rdi;\n    *((rdi + 0x40)) = 0;\n    __asm (\"movups xmmword [rdi], xmm0\");\n    __asm (\"movups xmmword [rdi + 0x10], xmm0\");\n    __asm (\"movups xmmword [rdi + 0x20], xmm0\");\n    __asm (\"movups xmmword [rdi + 0x30], xmm0\");\n    eax = geteuid ();\n    al = (eax == 0) ? 1 : 0;\n    *((rbx + 0x1b)) = al;\n    *((rbx + 0x1a)) = al;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00405400",
            "funcStartAddr": "0x405400",
            "funcEndAddr": "0x405424",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x405400 */\n#include <stdint.h>\n \nuint64_t fcn_00405400 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = errno_location ();\n    edx = *(rax);\n    al = (edx == 1) ? 1 : 0;\n    dl = (edx == 0x16) ? 1 : 0;\n    al |= dl;\n    if (al != 0) {\n        eax = *((rbx + 0x1a));\n        eax ^= 1;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405430",
            "funcStartAddr": "0x405430",
            "funcEndAddr": "0x40561b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x405430 */\n#include <stdint.h>\n \nint64_t fcn_00405430 (uint32_t arg1, char * arg2, uint32_t arg3, int64_t arg4, int64_t arg6) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r9 = arg6;\n    r12 = rsi;\n    ebx = edx;\n    r14d = *((rcx + 0x1c));\n    r13d = *((rcx + 0x20));\n    if (r8b != 0) {\n        goto label_5;\n    }\n    rax = 0xff0000000000ff;\n    if ((*((rdi + 0x18)) & rax) == 0) {\n        goto label_6;\n    }\n    esi = *((r9 + 0x18));\n    edx = *((rcx + 0x18));\nlabel_0:\n    eax = *((rcx + 0x18));\n    eax = ~eax;\n    ah |= 0xe;\n    eax &= esi;\n    if ((eax & 0xfff) == 0) {\n        goto label_5;\n    }\n    edx &= esi;\n    edx &= 0x1c0;\n    eax = fcn_0040c430 (r12, ebx, rdx);\n    if (eax != 0) {\n        goto label_7;\n    }\n    do {\nlabel_5:\n        edx = r13d;\n        esi = r14d;\n        if (ebx == 0xffffffff) {\n            goto label_8;\n        }\n        edi = ebx;\n        eax = fchown ();\n        if (eax == 0) {\n            goto label_9;\n        }\n        rax = errno_location ();\n        r14d = *(rax);\n        r15 = rax;\n        if (r14d == 1) {\n            goto label_10;\n        }\n        if (r14d == 0x16) {\n            goto label_10;\n        }\nlabel_2:\n        al = fcn_00405400 (rbp);\n        edx = 0;\n        if (al == 0) {\n            goto label_11;\n        }\nlabel_1:\n        eax = edx;\n        return rax;\nlabel_6:\n    } while (*((rdi + 0x2b)) == 0);\n    esi = *((r9 + 0x18));\n    edx = *((rdi + 0x10));\n    goto label_0;\n    do {\nlabel_9:\n        edx = 1;\n        goto label_1;\nlabel_8:\n        rdi = r12;\n        eax = lchown ();\n    } while (eax == 0);\n    rax = errno_location ();\n    ebx = *(rax);\n    r14 = rax;\n    if (ebx == 1) {\n        goto label_12;\n    }\n    if (ebx != 0x16) {\n        goto label_2;\n    }\nlabel_12:\n    edx = r13d;\n    esi = 0xffffffff;\n    rdi = r12;\n    lchown ();\n    *(r14) = ebx;\n    goto label_2;\nlabel_11:\n    rax = fcn_0040dd80 (4, r12);\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"failed to preserve ownership for %s\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = r12;\n    eax = 0;\n    error (0, *(rax), rbx);\n    do {\nlabel_4:\n        edx = *((rbp + 0x24));\n        edx = -edx;\n        goto label_1;\nlabel_10:\n        edx = r13d;\n        esi = 0xffffffff;\n        edi = ebx;\n        fchown ();\n        *(r15) = r14d;\n        goto label_2;\nlabel_7:\n        rax = errno_location ();\n        rbx = rax;\n        eax = *(rax);\n        if (eax == 1) {\n            goto label_13;\n        }\n        if (eax == 0x16) {\n            goto label_13;\n        }\nlabel_3:\n        rax = fcn_0040dd80 (4, r12);\n        edx = 5;\n        r12 = rax;\n        rax = dcgettext (0, \"clearing permissions for %s\");\n        rcx = r12;\n        eax = 0;\n        error (0, *(rbx), rax);\n    } while (1);\nlabel_13:\n    if (*((rbp + 0x1b)) != 0) {\n        goto label_3;\n    }\n    goto label_4;\n}\n"
        },
        {
            "funcName": "fcn_00405620",
            "funcStartAddr": "0x405620",
            "funcEndAddr": "0x40564a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x405620 */\n#include <stdint.h>\n \nint32_t fcn_00405620 (void) {\n    ebx = *(0x0061d3f0);\n    if (ebx != 0xffffffff) {\n        eax = ebx;\n        return eax;\n    }\n    eax = umask (0);\n    ebx = eax;\n    edi = eax;\n    *(0x0061d3f0) = eax;\n    umask (edi);\n    eax = ebx;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00405650",
            "funcStartAddr": "0x405650",
            "funcEndAddr": "0x4094cc",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x405650 */\n#include <stdint.h>\n \nuint64_t fcn_00405650 (int64_t arg_10h, int64_t arg_18h, int64_t arg_20h, uint32_t arg_28h, int64_t arg1, char * arg2, int64_t arg3, uint32_t arg4, char *** arg5, uint32_t arg6) {\n    uint32_t var_368h;\n    uint32_t var_360h;\n    uint32_t var_358h;\n    int64_t var_354h;\n    uint32_t var_350h;\n    size_t var_348h;\n    int64_t var_344h;\n    uint32_t var_340h;\n    uint32_t var_338h;\n    uint32_t ptr;\n    uint32_t var_328h;\n    uint32_t var_323h;\n    uint32_t var_322h;\n    int64_t var_321h;\n    func * rtld_fini;\n    func * fini;\n    char * var_310h;\n    size_t s1;\n    size_t s2;\n    uint32_t var_2f8h;\n    char * var_2f0h;\n    char *** fd;\n    char ** format;\n    func * init;\n    size_t src;\n    char *** var_2c8h;\n    uint32_t var_2c4h;\n    char *** errname;\n    char * newpath;\n    int64_t var_2a9h;\n    int64_t var_2a8h;\n    uint32_t var_2a0h;\n    uint32_t var_288h;\n    uint32_t var_280h;\n    uint32_t var_27fh;\n    void * var_278h;\n    uint32_t var_270h;\n    uint32_t var_268h;\n    uint32_t var_260h;\n    int64_t var_258h;\n    char *** var_254h;\n    char *** var_250h;\n    int64_t var_248h;\n    int64_t var_240h;\n    uint32_t var_1e0h;\n    uint32_t var_1d8h;\n    uint32_t var_1d0h;\n    int64_t var_1c8h;\n    int64_t var_1b0h;\n    uint32_t var_150h;\n    uint32_t var_148h;\n    int64_t var_140h;\n    int64_t var_138h;\n    int64_t var_130h;\n    int64_t var_120h;\n    int64_t var_118h;\n    uint32_t var_110h;\n    int64_t var_100h;\n    int64_t var_f0h;\n    int64_t var_e0h;\n    int64_t var_d0h;\n    uint32_t var_c0h;\n    int64_t var_bch;\n    uint32_t var_b8h;\n    int64_t var_b0h;\n    int64_t var_a8h;\n    int64_t var_a0h;\n    int64_t var_90h;\n    int64_t var_88h;\n    int64_t var_80h;\n    int64_t var_70h;\n    int64_t var_60h;\n    int64_t var_50h;\n    int64_t var_40h;\n    int64_t var_fh;\n    void * var_fh_2;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\nlabel_17:\n    r14 = rdi;\n    r13 = r9;\n    r12d = edx;\n    *((rbp - 0x2b8)) = rsi;\n    rbp - 0x2c0 = (*((rbp + 0x28)) != 0) ? 1 : 0;\n    ebx = *((rbp + 0x10));\n    *((rbp - 0x2f8)) = rcx;\n    eax = *((rbp - 0x2c0));\n    *((rbp - 0x2e8)) = r8;\n    if (*((r9 + 0x18)) != 0) {\n        if (al == 0) {\n            goto label_95;\n        }\n        rax = *((rbp + 0x28));\n        *(rax) = 0;\n    }\nlabel_95:\n    rax = *((rbp + 0x20));\n    rsi = r14;\n    edi = 1;\n    *(rax) = 0;\n    rax = rbp - 0x270;\n    *((rbp - 0x2d8)) = rax;\n    rdx = rax;\n    if (*((r13 + 4)) == 2) {\n        goto label_96;\n    }\n    eax = xstat ();\n    rsi = r14;\n    r15b = (eax != 0) ? 1 : 0;\n    if (r15b != 0) {\n        void (*0x405ef7)() ();\n    }\nlabel_2:\n    eax = *((rbp - 0x258));\n    *((rbp - 0x2c8)) = eax;\n    eax &= 0xf000;\n    *((rbp - 0x2c4)) = eax;\n    if (eax == 0x4000) {\n        goto label_97;\n    }\n    if (bl != 0) {\n        r10d = *(r13);\n        rdi = *((r13 + 0x40));\n        if (r10d == 0) {\n            goto label_98;\n        }\n        fcn_0040ab60 (rdi, r14, *((rbp - 0x2d8)));\n    }\nlabel_3:\n    *((rbp - 0x2e0)) = 1;\n    eax = *((r13 + 4));\n    if (eax != 4) {\n        al = (eax == 3) ? 1 : 0;\n        eax = (int32_t) al;\n        eax &= ebx;\n        *((rbp - 0x2e0)) = eax;\n    }\n    if (r12b == 0) {\n        eax = *((rbp - 0x2c4));\n        if (eax != 0x8000) {\n            if (*((r13 + 0x14)) == 0) {\n                goto label_99;\n            }\n            if (eax == 0x4000) {\n                goto label_99;\n            }\n            if (eax == 0xa000) {\n                goto label_99;\n            }\n        }\n        if (*((r13 + 0x18)) != 0) {\n            goto label_99;\n        }\n        if (*((r13 + 0x2c)) != 0) {\n            goto label_99;\n        }\n        if (*((r13 + 0x17)) != 0) {\n            goto label_99;\n        }\n        r9d = *(r13);\n        if (r9d != 0) {\n            goto label_99;\n        }\n        if (*((r13 + 0x15)) != 0) {\n            goto label_99;\n        }\n        rax = rbp - 0x1e0;\n        rsi = *((rbp - 0x2b8));\n        edi = 1;\n        rdx = rax;\n        *((rbp - 0x2f0)) = rax;\n        eax = xstat ();\n        r8d = 1;\n        rbp - 0x2d0 = (eax != 0) ? 1 : 0;\n        if (*((rbp - 0x2d0)) != 0) {\n            goto label_100;\n        }\nlabel_8:\n        rax = *((rbp - 0x1d8));\n        if (*((rbp - 0x268)) == rax) {\n            goto label_101;\n        }\nlabel_26:\n        if (*((r13 + 4)) == 2) {\n            goto label_102;\n        }\nlabel_23:\n        if (*((rbp - 0x2c4)) == 0x4000) {\n            goto label_103;\n        }\n        if (*((r13 + 0x2d)) != 0) {\n            goto label_104;\n        }\nlabel_21:\n        eax = *((r13 + 8));\n        if (*((r13 + 0x18)) != 0) {\n            goto label_105;\n        }\n        if (eax == 2) {\n            goto label_22;\n        }\n        if (eax == 3) {\n            goto label_106;\n        }\nlabel_28:\n        if (*((rbp - 0x2d0)) != 0) {\n            goto label_22;\n        }\n        eax = *((rbp - 0x1c8));\n        ecx = r8d;\n        ecx ^= 1;\n        edx = eax;\n        edx &= 0xf000;\n        if (edx == 0x4000) {\n            goto label_107;\n        }\n        if (*((rbp - 0x2c4)) == 0x4000) {\n            goto label_108;\n        }\n        r12d = *(r13);\n        if (bl != 0) {\nlabel_44:\n            if (r12d == 3) {\n                goto label_109;\n            }\n            *((rbp - 0x300)) = cl;\n            al = fcn_0040abf0 (*((r13 + 0x38)), *((rbp - 0x2b8)), *((rbp - 0x2f0)));\n            ecx = *((rbp - 0x300));\n            if (al != 0) {\n                goto label_110;\n            }\n            if (*((rbp - 0x2c4)) != 0x4000) {\n                eax = *((rbp - 0x1c8));\n                edx = *((rbp - 0x1c8));\n                edx &= 0xf000;\n                if (edx == 0x4000) {\n                    goto label_111;\n                }\n            }\nlabel_41:\n            r12d = *(r13);\n        }\n        eax = *((r13 + 0x18));\n        if (al != 0) {\n            goto label_112;\n        }\n        if (r12d != 0) {\n            goto label_113;\n        }\nlabel_57:\n        edx = *((rbp - 0x1c8));\n        *((rbp - 0x300)) = 0;\n        edx &= 0xf000;\n        dl = (edx == 0x4000) ? 1 : 0;\n        dl |= al;\n        if (dl != 0) {\n            goto label_42;\n        }\n        eax = *((r13 + 0x15));\n        *((rbp - 0x2d0)) = al;\n        if (al == 0) {\n            if (*((r13 + 0x22)) == 0) {\n                goto label_114;\n            }\n            if (*((rbp - 0x1d0)) <= 1) {\n                goto label_114;\n            }\n        }\nlabel_56:\n        *((rbp - 0x2d0)) = cl;\n        eax = unlink (*((rbp - 0x2b8)));\n        ecx = *((rbp - 0x2d0));\n        if (eax != 0) {\n            rax = errno_location ();\n            ecx = *((rbp - 0x2d0));\n            r12 = rax;\n            if (*(rax) != 2) {\n                goto label_115;\n            }\n        }\n        eax = *((r13 + 0x2e));\n        *((rbp - 0x2d0)) = al;\n        if (al != 0) {\n            goto label_116;\n        }\n        if (bl == 0) {\n            goto label_117;\n        }\n        *((rbp - 0x2d0)) = bl;\n        *((rbp - 0x300)) = 0;\n        if (*((r13 + 0x38)) == 0) {\n            goto label_118;\n        }\nlabel_0:\n        if (*((r13 + 0x18)) != 0) {\n            goto label_119;\n        }\n        esi = *(r13);\n        if (esi != 0) {\n            goto label_120;\n        }\n        rdx = rbp - 0x1e0;\n        if (cl == 0) {\n            goto label_121;\n        }\nlabel_31:\n        eax = *((rdx + 0x18));\n        eax &= 0xf000;\n        if (eax != 0xa000) {\n            goto label_1;\n        }\n        al = fcn_0040abf0 (*((r13 + 0x38)), *((rbp - 0x2b8)), rdx);\n        if (al == 0) {\n            goto label_1;\n        }\n        rax = fcn_0040dca0 (1, 4, *((rbp - 0x2b8)));\n        r12 = rax;\n        rax = fcn_0040dca0 (0, 4, r14);\n        edx = 5;\n        rbx = rax;\nlabel_24:\n        rax = dcgettext (0, \"will not copy %s through just-created symlink %s\");\n        r8 = r12;\n        rcx = rbx;\nlabel_80:\n        eax = 0;\n        error (0, 0, rax);\n    }\nlabel_9:\n    *((rbp - 0x2d0)) = 1;\n    ecx = 0;\n    *((rbp - 0x300)) = 0;\nlabel_42:\n    if (bl != 0) {\n        goto label_122;\n    }\nlabel_1:\n    if (*((r13 + 0x2e)) == 0) {\n        goto label_118;\n    }\n    if (*((r13 + 0x18)) != 0) {\n        goto label_123;\n    }\nlabel_15:\n    if (*((rbp - 0x2c4)) == 0x4000) {\n        goto label_124;\n    }\n    fcn_00404a30 (r14, *((rbp - 0x2b8)), *((rbp - 0x300)));\nlabel_4:\n    if (*((r13 + 0x18)) != 0) {\n        goto label_125;\n    }\nlabel_16:\n    if (*((r13 + 0x22)) != 0) {\n        goto label_7;\n    }\n    eax = *((rbp - 0x2d0));\n    *((rbp - 0x2f0)) = 0;\n    *((rbp - 0x2c0)) = eax;\nlabel_5:\n    r12d = *((rbp - 0x2c8));\n    r12d &= 0xfff;\n    if (*((r13 + 0x2b)) != 0) {\n        r12d = *((r13 + 0x10));\n        r12d &= 0xfff;\n    }\n    if (*((r13 + 0x1d)) != 0) {\n        goto label_126;\n    }\n    if (*((rbp - 0x2c4)) == 0x4000) {\n        goto label_127;\n    }\n    ecx = *((rbp - 0x2c0));\n    r8 = r13;\n    al = fcn_00405210 (r14, *((rbp - 0x2b8)), *((rbp - 0x2c8)));\n    *((rbp - 0x308)) = 0;\n    if (al == 0) {\n        void (*0x405f31)() ();\n    }\nlabel_13:\n    eax = *((r13 + 0x2c));\n    *((rbp - 0x2e8)) = al;\n    if (al == 0) {\n        goto label_128;\n    }\n    if (*(r14) != 0x2f) {\n        rdi = *((rbp - 0x2b8));\n        rax = fcn_0040a920 ();\n        esi = 0x415fd7;\n        ecx = 2;\n        rdi = rax;\n        r12 = rax;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        al = (*(r14) > 0x2f) ? 1 : 0;\n        if (al != 0) {\n            goto label_129;\n        }\nlabel_33:\n        free (r12);\n    }\n    ecx = *((r13 + 0x16));\n    eax = fcn_00409c90 (r14, 0xffffff9c, *((rbp - 0x2b8)), rcx);\n    if (eax < 0) {\n        goto label_130;\n    }\n    eax = *((rbp - 0x2e8));\n    *((rbp - 0x321)) = 0;\n    r8d = 0;\n    *((rbp - 0x2e0)) = al;\nlabel_122:\n    if (*((r13 + 0x38)) != 0) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_96:\n    eax = lxstat ();\n    rsi = r14;\n    r15b = (eax != 0) ? 1 : 0;\n    if (r15b == 0) {\n        goto label_2;\n    }\nlabel_97:\n    if (*((r13 + 0x2a)) == 0) {\n        goto label_131;\n    }\n    if (bl == 0) {\n        goto label_3;\n    }\n    goto label_132;\nlabel_119:\n    if (*((r13 + 0x2e)) != 0) {\n        goto label_123;\n    }\nlabel_118:\n    if (*((r13 + 0x2a)) == 0) {\n        goto label_4;\n    }\n    if (*((rbp - 0x2c4)) != 0x4000) {\n        goto label_4;\n    }\nlabel_6:\n    rdx = *((rbp - 0x270));\n    rdi = *((rbp - 0x268));\n    if (bl == 0) {\n        goto label_133;\n    }\n    rax = fcn_004096d0 (*((rbp - 0x2b8)), rdi, rdx);\n    *((rbp - 0x2f0)) = rax;\nlabel_19:\n    if (*((rbp - 0x2f0)) == 0) {\n        goto label_10;\n    }\nlabel_11:\n    al = fcn_0040e2f0 (r14, *((rbp - 0x2f0)));\n    if (al != 0) {\n        goto label_134;\n    }\n    al = fcn_0040e2f0 (*((rbp - 0x2b8)), *((rbp - 0x2f0)));\n    if (al != 0) {\n        goto label_135;\n    }\n    eax = *((r13 + 4));\n    if (eax == 4) {\n        goto label_10;\n    }\n    if (eax == 3) {\n        if (bl != 0) {\n            goto label_10;\n        }\n    }\n    rax = fcn_0040dca0 (1, 4, *((rbp - 0x2f0)));\n    r12 = rax;\n    rax = fcn_0040dca0 (0, 4, *((rbp - 0x2b8)));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"will not create hard link %s to directory %s\");\n    r8 = r12;\n    rcx = rbx;\n    eax = 0;\n    rax = error (0, 0, rax);\nlabel_12:\n    if (*((r13 + 0x25)) != 0) {\n        void (*0x406acd)() ();\n    }\nlabel_7:\n    if (*((r13 + 0x17)) == 0) {\n        goto label_136;\n    }\n    *((rbp - 0x2f0)) = 0;\nlabel_10:\n    if (*((r13 + 0x18)) != 0) {\n        goto label_137;\n    }\n    eax = *((rbp - 0x2d0));\n    *((rbp - 0x2c0)) = eax;\n    goto label_5;\nlabel_123:\n    if (*((rbp - 0x2c4)) != 0x4000) {\n        goto label_125;\n    }\n    if (*((r13 + 0x2a)) != 0) {\n        goto label_6;\n    }\nlabel_125:\n    if (*((rbp - 0x260)) == 1) {\n        goto label_138;\n    }\n    if (*((r13 + 0x22)) != 0) {\n        goto label_7;\n    }\n    *((rbp - 0x2f0)) = 0;\nlabel_137:\n    eax = rename (r14, *((rbp - 0x2b8)));\n    if (eax == 0) {\n        goto label_139;\n    }\n    rax = errno_location ();\n    r12 = rax;\n    eax = *(rax);\n    if (eax == 0x16) {\n        goto label_140;\n    }\n    if (eax != 0x12) {\n        goto label_141;\n    }\n    rdi = *((rbp - 0x2b8));\n    if (*((rbp - 0x2c4)) == 0x4000) {\n        goto label_142;\n    }\n    eax = unlink (rdi);\n    if (eax != 0) {\n        if (*(r12) != 2) {\n            goto label_143;\n        }\n    }\n    al = (*((rbp - 0x2c4)) != 0x4000) ? 1 : 0;\n    al &= *((r13 + 0x2e));\n    *((rbp - 0x2d0)) = al;\n    if (al != 0) {\n        goto label_144;\n    }\nlabel_25:\n    *((rbp - 0x2c0)) = 1;\n    *((rbp - 0x2d0)) = 1;\n    goto label_5;\nlabel_99:\n    rax = rbp - 0x1e0;\n    rsi = *((rbp - 0x2b8));\n    edi = 1;\n    rdx = rax;\n    *((rbp - 0x2f0)) = rax;\n    eax = lxstat ();\n    r8d = r12d;\n    rbp - 0x2d0 = (eax != 0) ? 1 : 0;\n    if (*((rbp - 0x2d0)) == 0) {\n        goto label_8;\n    }\nlabel_100:\n    rax = errno_location ();\n    if (*(rax) == 2) {\n        goto label_9;\n    }\n    *((rbp - 0x2c0)) = rax;\n    r15d = r12d;\n    rax = fcn_0040dd80 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"cannot stat %s\");\n    r8 = *((rbp - 0x2c0));\n    rcx = rbx;\n    eax = 0;\n    error (0, *(r8), rax);\n    void (*0x405f31)() ();\nlabel_136:\n    if (*((rbp - 0x260)) > 1) {\n        goto label_145;\n    }\n    eax = *((r13 + 4));\n    if (bl != 0) {\n        if (eax == 3) {\n            goto label_145;\n        }\n    }\n    *((rbp - 0x2f0)) = 0;\n    if (eax != 4) {\n        goto label_10;\n    }\nlabel_145:\n    rax = fcn_004096d0 (*((rbp - 0x2b8)), *((rbp - 0x268)), *((rbp - 0x270)));\n    *((rbp - 0x2f0)) = rax;\nlabel_20:\n    if (*((rbp - 0x2f0)) == 0) {\n        goto label_10;\n    }\n    if (*((rbp - 0x2c4)) == 0x4000) {\n        goto label_11;\n    }\n    ecx = *((r13 + 0x2e));\n    r8d = *((rbp - 0x2e0));\n    al = fcn_00404c10 (*((rbp - 0x2f0)), *((rbp - 0x2b8)), 1);\n    if (al == 0) {\n        goto label_12;\n    }\nlabel_22:\n    r15d = 1;\n    void (*0x405f31)() ();\nlabel_98:\n    al = fcn_0040abf0 (rdi, r14, *((rbp - 0x2d8)));\n    if (al != 0) {\n        goto label_146;\n    }\nlabel_132:\n    fcn_0040ab60 (*((r13 + 0x40)), r14, *((rbp - 0x2d8)));\n    goto label_3;\nlabel_126:\n    ecx = *((rbp - 0x2c0));\n    r8 = r13;\n    al = fcn_00405210 (r14, *((rbp - 0x2b8)), *((rbp - 0x2c8)));\n    if (al == 0) {\n        void (*0x405f31)() ();\n    }\n    eax = r12d;\n    eax &= 0x3f;\n    *((rbp - 0x308)) = eax;\n    if (*((rbp - 0x2c4)) != 0x4000) {\n        goto label_13;\n    }\nlabel_18:\n    rdx = *((rbp - 0x268));\n    rcx = *((rbp - 0x270));\n    rax = *((rbp - 0x2e8));\n    if (*((rbp - 0x2e8)) != 0) {\n        goto label_147;\n    }\n    goto label_148;\n    do {\nlabel_14:\n        rax = *(rax);\n        if (rax == 0) {\n            goto label_148;\n        }\nlabel_147:\n    } while (*((rax + 8)) != rdx);\n    if (*((rax + 0x10)) != rcx) {\n        goto label_14;\n    }\n    rax = fcn_0040dd80 (4, r14);\n    edx = 5;\n    rbx = rax;\nlabel_34:\n    rax = dcgettext (0, \"cannot copy cyclic symbolic link %s\");\n    rcx = rbx;\n    eax = 0;\n    error (0, 0, rax);\n    void (*0x4065d0)() ();\nlabel_120:\n    if (*((r13 + 0x2e)) != 0) {\n        goto label_15;\n    }\n    if (*((rbp - 0x2c4)) != 0x4000) {\n        goto label_16;\n    }\nlabel_124:\n    if (*((r13 + 0x2a)) == 0) {\n        goto label_16;\n    }\n    goto label_6;\nlabel_128:\n    eax = *((r13 + 0x17));\n    *((rbp - 0x321)) = al;\n    if (al != 0) {\n        goto label_149;\n    }\n    eax = *((rbp - 0x2c4));\n    if (eax == 0x8000) {\n        goto label_150;\n    }\n    r8b = (eax != 0xa000) ? 1 : 0;\n    r8b &= *((r13 + 0x14));\n    if (r8b != 0) {\n        goto label_150;\n    }\n    *((rbp - 0x2c0)) = r8b;\n    if (*((rbp - 0x2c4)) == 0x1000) {\n        goto label_151;\n    }\n    ecx = *((rbp - 0x2c8));\n    eax = *((rbp - 0x2c8));\n    eax &= 0xb000;\n    r12b = (eax == 0x2000) ? 1 : 0;\n    al = (*((rbp - 0x2c4)) == 0xc000) ? 1 : 0;\n    r12b |= al;\n    *((rbp - 0x2e0)) = r12b;\n    if (r12b == 0) {\n        goto label_152;\n    }\n    edx = *((rbp - 0x308));\n    rax = *((rbp - 0x248));\n    edi = 0;\n    rsi = *((rbp - 0x2b8));\n    edx = ~edx;\n    *((rbp - 0xc0)) = rax;\n    edx &= ecx;\n    rcx = rbp - 0xc0;\n    eax = xmknod ();\n    r8d = *((rbp - 0x2c0));\n    *((rbp - 0x2e8)) = r8b;\n    *((rbp - 0x321)) = r8b;\n    if (eax == 0) {\n        void (*0x405c05)() ();\n    }\n    rax = fcn_0040dd80 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    rbx = rax;\nlabel_40:\n    rax = dcgettext (0, \"cannot create special file %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    error (0, *(rax), r12);\nlabel_148:\n    rsi = *((rbp - 0x2e8));\n    rax = rsp + 0xf;\n    rax &= 0xfffffffffffffff0;\n    *((rbp - 0x318)) = rax;\n    *(rax) = rsi;\n    *((rax + 8)) = rdx;\n    *((rax + 0x10)) = rcx;\n    if (*((rbp - 0x2d0)) == 0) {\n        eax = *((rbp - 0x1c8));\n        eax &= 0xf000;\n        if (eax == 0x4000) {\n            goto label_153;\n        }\n    }\n    esi = *((rbp - 0x308));\n    rdi = *((rbp - 0x2b8));\n    esi = ~esi;\n    esi &= r12d;\n    eax = mkdir ();\n    if (eax != 0) {\n        goto label_154;\n    }\n    rsi = *((rbp - 0x2b8));\n    rdx = rbp - 0x1e0;\n    edi = 1;\n    eax = lxstat ();\n    if (eax != 0) {\n        goto label_155;\n    }\n    r12d = *((rbp - 0x1c8));\n    *((rbp - 0x321)) = 0;\n    eax = r12d;\n    eax &= 0x1c0;\n    if (eax != 0x1c0) {\n        esi |= 0x1c0;\n        eax = chmod (*((rbp - 0x2b8)), r12d);\n        *((rbp - 0x344)) = r12d;\n        *((rbp - 0x321)) = 1;\n        if (eax != 0) {\n            goto label_156;\n        }\n    }\n    rax = *((rbp + 0x18));\n    if (*(rax) == 0) {\n        goto label_157;\n    }\nlabel_48:\n    if (*((r13 + 0x2e)) != 0) {\n        if (*((r13 + 0x18)) == 0) {\n            goto label_158;\n        }\n        rax = fcn_0040dd80 (4, *((rbp - 0x2b8)));\n        edx = 5;\n        r12 = rax;\n        rax = dcgettext (0, \"created directory %s\\n\");\n        rdx = r12;\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n    }\nlabel_43:\n    rax = *((rbp - 0x2f8));\n    r12b = (rax != 0) ? 1 : 0;\n    r12b &= *((r13 + 0x1c));\n    *((rbp - 0x2e0)) = r12b;\n    if (r12b != 0) {\n        goto label_159;\n    }\nlabel_32:\n    __asm (\"movdqu xmm0, xmmword [r13]\");\n    __asm (\"movdqu xmm1, xmmword [r13 + 0x10]\");\n    esi = 2;\n    __asm (\"movdqu xmm2, xmmword [r13 + 0x20]\");\n    __asm (\"movdqu xmm3, xmmword [r13 + 0x30]\");\n    rax = *((r13 + 0x40));\n    *((rbp - 0xc0)) = xmm0;\n    *((rbp - 0xb0)) = xmm1;\n    *((rbp - 0xa0)) = xmm2;\n    *((rbp - 0x90)) = xmm3;\n    *((rbp - 0x80)) = rax;\n    rax = fcn_0040e7f0 (r14);\n    *((rbp - 0x330)) = rax;\n    if (rax == 0) {\n        goto label_160;\n    }\n    if (*((r13 + 4)) == 3) {\n        *((rbp - 0xbc)) = 2;\n    }\n    rax = *((rbp - 0x330));\n    if (*(rax) == 0) {\n        goto label_161;\n    }\n    rax = rbp - 0x150;\n    ecx = 0;\n    *((rbp - 0x338)) = r15b;\n    r12 = *((rbp - 0x330));\n    *((rbp - 0x310)) = rax;\n    rax = rbp - 0xc0;\n    r15d = ecx;\n    *((rbp - 0x320)) = rax;\n    rax = rbp - 0x2a0;\n    *((rbp - 0x340)) = r13;\n    r13 = *((rbp + 0x20));\n    *((rbp - 0x2e0)) = 1;\n    *((rbp - 0x2f8)) = rax;\n    *((rbp - 0x2e8)) = r14;\n    *((rbp - 0x328)) = ebx;\n    while (*((rbp - 0x2a0)) == 0) {\n        r15b |= *((rbp - 0x150));\n        strlen (r12);\n        r12 = r12 + rax + 1;\n        if (*(r12) == 0) {\n            goto label_162;\n        }\n        rdi = *((rbp - 0x2e8));\n        edx = 0;\n        rsi = r12;\n        rax = fcn_0040aeb0 ();\n        rdi = *((rbp - 0x2b8));\n        edx = 0;\n        rsi = r12;\n        rbx = rax;\n        rax = fcn_0040aeb0 ();\n        r14 = rax;\n        rax = *((rbp + 0x18));\n        eax = *(rax);\n        *((rbp - 0x150)) = al;\n        al = fcn_00405650 (rbx, r14, *((rbp - 0x2c0)), *((rbp - 0x2d8)), *((rbp - 0x318)), *((rbp - 0x320)));\n        goto label_17;\n        *((rbp - 0x2e0)) &= al;\n        eax = *((rbp - 0x2a0));\n        *(r13) |= al;\n        free (r14);\n        free (rbx);\n    }\nlabel_162:\n    r12d = r15d;\n    r14 = *((rbp - 0x2e8));\n    r15d = *((rbp - 0x338));\n    r13 = *((rbp - 0x340));\n    ebx = *((rbp - 0x328));\nlabel_66:\n    free (*((rbp - 0x330)));\n    rax = *((rbp + 0x18));\n    *(rax) = r12b;\nlabel_61:\n    *((rbp - 0x2e8)) = 0;\n    r8d = 0;\n    void (*0x405c05)() ();\nlabel_127:\n    ecx = *((rbp - 0x2c0));\n    r8 = r13;\n    al = fcn_00405210 (r14, *((rbp - 0x2b8)), *((rbp - 0x2c8)));\n    if (al == 0) {\n        void (*0x405f31)() ();\n    }\n    eax = r12d;\n    eax &= 0x12;\n    *((rbp - 0x308)) = eax;\n    goto label_18;\nlabel_131:\n    rax = fcn_0040dd80 (4, rsi);\n    edx = 5;\n    rbx = rax;\n    if (*((r13 + 0x19)) == 0) {\n        void (*0x406ad8)() ();\n    }\nlabel_55:\n    dcgettext (0, \"omitting directory %s\");\nlabel_67:\n    rdx = *((rbp - 0x270));\n    *((rbp - 0x300)) = 0;\nlabel_133:\n    rax = fcn_00409690 (*((rbp - 0x268)), rdx);\n    *((rbp - 0x2f0)) = rax;\n    goto label_19;\nlabel_138:\n    rax = fcn_00409690 (*((rbp - 0x268)), *((rbp - 0x270)));\n    *((rbp - 0x2f0)) = rax;\n    goto label_20;\nlabel_104:\n    ecx = 0;\n    if (*((r13 + 0x1f)) != 0) {\n        ecx = 1;\n        if (*((r13 + 0x18)) == 0) {\n            goto label_163;\n        }\n        rax = *((rbp - 0x270));\n        cl = (*((rbp - 0x1e0)) != rax) ? 1 : 0;\n    }\nlabel_163:\n    *((rbp - 0x300)) = r8b;\n    eax = fcn_0040eb60 (*((rbp - 0x2b8)), *((rbp - 0x2f0)), *((rbp - 0x2d8)), 0);\n    r8d = *((rbp - 0x300));\n    if (eax < 0) {\n        goto label_21;\n    }\n    if (*((rbp + 0x28)) != 0) {\n        rax = *((rbp + 0x28));\n        *(rax) = 1;\n    }\n    rax = fcn_004096d0 (*((rbp - 0x2b8)), *((rbp - 0x268)), *((rbp - 0x270)));\n    if (rax == 0) {\n        goto label_22;\n    }\n    ecx = *((r13 + 0x2e));\n    r8d = *((rbp - 0x2e0));\n    al = fcn_00404c10 (rax, *((rbp - 0x2b8)), 1);\n    if (al != 0) {\n        goto label_22;\n    }\n    if (*((r13 + 0x25)) == 0) {\n        void (*0x405f31)() ();\n    }\nlabel_102:\n    r12d = 0;\n    ecx = 0;\nlabel_47:\n    eax = *((rbp - 0x258));\n    r9 = *((rbp - 0x2f0));\n    rdx = *((rbp - 0x2d8));\n    eax &= 0xf000;\n    if (eax == 0xa000) {\n        goto label_164;\n    }\nlabel_27:\n    edi = *(r13);\n    if (edi == 0) {\n        goto label_165;\n    }\n    if (r12b != 0) {\n        goto label_166;\n    }\n    if (*((r13 + 0x18)) != 0) {\n        goto label_23;\n    }\n    if (*((r13 + 4)) == 2) {\n        goto label_23;\n    }\n    eax = *((rdx + 0x18));\n    eax &= 0xf000;\n    if (eax != 0xa000) {\n        goto label_23;\n    }\n    eax = *((r9 + 0x18));\n    eax &= 0xf000;\n    if (eax == 0xa000) {\n        goto label_23;\n    }\nlabel_30:\n    rax = fcn_0040dca0 (1, 4, *((rbp - 0x2b8)));\n    r12 = rax;\n    rax = fcn_0040dca0 (0, 4, r14);\n    edx = 5;\n    esi = \"%s and %s are the same file\";\n    rbx = rax;\n    goto label_24;\nlabel_149:\n    r8d = *((rbp - 0x2e0));\n    edx = *((r13 + 0x16));\n    ecx = 0;\n    al = fcn_00404c10 (r14, *((rbp - 0x2b8)), rdx);\n    r8d = 0;\n    *((rbp - 0x321)) = 0;\n    *((rbp - 0x2e0)) = al;\n    if (al != 0) {\n        void (*0x405c05)() ();\n    }\n    void (*0x4065d0)() ();\nlabel_142:\n    eax = rmdir ();\n    if (eax == 0) {\n        goto label_25;\n    }\n    if (*(r12) == 2) {\n        goto label_25;\n    }\nlabel_143:\n    rax = fcn_0040dca0 (1, 4, *((rbp - 0x2b8)));\n    r13 = rax;\n    rax = fcn_0040dca0 (0, 4, r14);\n    edx = 5;\n    rbx = rax;\nlabel_29:\n    rax = dcgettext (0, \"inter-device move failed: %s to %s; unable to remove target\");\n    r8 = r13;\n    rcx = rbx;\n    eax = 0;\n    error (0, *(r12), rax);\n    fcn_00409640 (*((rbp - 0x268)), *((rbp - 0x270)));\n    void (*0x405f31)() ();\nlabel_139:\n    if (*((r13 + 0x2e)) != 0) {\n        goto label_167;\n    }\nlabel_39:\n    if (*((r13 + 0x21)) != 0) {\n        goto label_168;\n    }\nlabel_38:\n    if (*((rbp + 0x28)) != 0) {\n        rax = *((rbp + 0x28));\n        *(rax) = 1;\n    }\n    if (bl == 0) {\n        goto label_22;\n    }\n    r15d = ebx;\n    fcn_0040ab60 (*((r13 + 0x38)), *((rbp - 0x2b8)), *((rbp - 0x2d8)));\n    void (*0x405f31)() ();\nlabel_101:\n    rax = *((rbp - 0x1e0));\n    if (*((rbp - 0x270)) != rax) {\n        goto label_26;\n    }\n    r12d = *((r13 + 0x17));\n    if (r12b != 0) {\n        goto label_37;\n    }\n    if (*((r13 + 4)) == 2) {\n        goto label_169;\n    }\n    rax = rbp - 0x150;\n    rsi = *((rbp - 0x2b8));\n    edi = 1;\n    *((rbp - 0x300)) = r8b;\n    rdx = rax;\n    *((rbp - 0x310)) = rax;\n    eax = lxstat ();\n    r8d = *((rbp - 0x300));\n    if (eax != 0) {\n        goto label_23;\n    }\n    rax = rbp - 0xc0;\n    rsi = r14;\n    edi = 1;\n    rdx = rax;\n    *((rbp - 0x320)) = rax;\n    eax = lxstat ();\n    r8d = *((rbp - 0x300));\n    if (eax != 0) {\n        goto label_23;\n    }\n    rax = *((rbp - 0x148));\n    if (*((rbp - 0xb8)) == rax) {\n        rax = *((rbp - 0x150));\n        r12b = (*((rbp - 0xc0)) == rax) ? 1 : 0;\n    }\n    eax = *((rbp - 0xa8));\n    r9 = *((rbp - 0x310));\n    rdx = *((rbp - 0x320));\n    eax &= 0xf000;\n    if (eax != 0xa000) {\n        goto label_27;\n    }\n    eax = *((rbp - 0x138));\n    eax &= 0xf000;\n    if (eax != 0xa000) {\n        goto label_27;\n    }\n    if (*((r13 + 0x15)) == 0) {\n        goto label_27;\n    }\n    goto label_23;\nlabel_103:\n    if (*((r13 + 0x18)) == 0) {\n        goto label_28;\n    }\n    eax = *((r13 + 8));\nlabel_105:\n    if (eax == 2) {\n        goto label_170;\n    }\n    if (eax == 3) {\n        goto label_171;\n    }\n    if (eax != 4) {\n        goto label_28;\n    }\n    if (*((r13 + 0x2f)) == 0) {\n        goto label_28;\n    }\n    *((rbp - 0x300)) = r8b;\n    al = fcn_00404890 (*((rbp - 0x2b8)), *((rbp - 0x1c8)));\n    r8d = *((rbp - 0x300));\n    if (al != 0) {\n        goto label_28;\n    }\nlabel_171:\n    rax = *((rbp - 0x2f0));\n    *((rbp - 0x300)) = r8b;\n    al = fcn_00404ae0 (r13, *((rbp - 0x2b8)), rax + 0x18);\n    r8d = *((rbp - 0x300));\n    if (al != 0) {\n        goto label_28;\n    }\nlabel_170:\n    if (*((rbp + 0x28)) == 0) {\n        goto label_22;\n    }\nlabel_51:\n    rax = *((rbp + 0x28));\n    r15d = 1;\n    *(rax) = 1;\n    void (*0x405f31)() ();\nlabel_141:\n    rax = fcn_0040dca0 (1, 4, *((rbp - 0x2b8)));\n    r13 = rax;\n    rax = fcn_0040dca0 (0, 4, r14);\n    edx = 5;\n    esi = \"cannot move %s to %s\";\n    rbx = rax;\n    goto label_29;\nlabel_150:\n    eax = *((rbp - 0x258));\n    sil = (*((r13 + 4)) == 2) ? 1 : 0;\n    *((rbp - 0x318)) = eax;\n    eax = *((r13 + 0x23));\n    esi <<= 0x11;\n    *((rbp - 0x310)) = al;\n    eax = 0;\n    eax = fcn_0040ab10 (r14, 0, rdx, rcx);\n    *((rbp - 0x2c0)) = eax;\n    if (eax < 0) {\n        goto label_172;\n    }\n    esi = *((rbp - 0x2c0));\n    rdx = rbp - 0x150;\n    edi = 1;\n    eax = fxstat ();\n    if (eax != 0) {\n        goto label_173;\n    }\n    rax = *((rbp - 0x148));\n    if (*((rbp - 0x268)) != rax) {\n        goto label_174;\n    }\n    rax = *((rbp - 0x150));\n    if (*((rbp - 0x270)) != rax) {\n        goto label_174;\n    }\n    r12d &= 0x1ff;\n    *((rbp - 0x354)) = r12d;\n    if (*((rbp - 0x2d0)) != 0) {\n        goto label_88;\n    }\n    r12 = *((rbp - 0x2b8));\n    esi -= esi;\n    eax = 0;\n    esi &= 0xfffffe00;\n    esi += 0x201;\n    eax = fcn_0040ab10 (r12, rsi, rdx, rcx);\n    ecx = eax;\n    *((rbp - 0x2e8)) = eax;\n    rax = 0xff000000ff00;\n    if ((*((r13 + 0x20)) & rax) == 0) {\n        goto label_175;\n    }\n    if (ecx >= 0) {\n        goto label_176;\n    }\nlabel_68:\n    rax = errno_location ();\n    r12 = rax;\n    if (*((r13 + 0x16)) == 0) {\n        goto label_177;\n    }\n    eax = unlink (*((rbp - 0x2b8)));\n    if (eax != 0) {\n        goto label_178;\n    }\n    if (*((r13 + 0x2e)) != 0) {\n        goto label_179;\n    }\nlabel_91:\n    eax = *((r13 + 0x21));\n    ecx = *((rbp - 0x308));\n    *((rbp - 0x2d0)) = al;\n    *((rbp - 0x348)) = ecx;\n    if (al != 0) {\n        goto label_180;\n    }\nlabel_62:\n    r12d = *((rbp - 0x348));\n    eax = 0;\n    r12d = ~r12d;\n    r12d &= *((rbp - 0x354));\n    edx = r12d;\n    *((rbp - 0x2e0)) = r12d;\n    eax = fcn_0040ab10 (*((rbp - 0x2b8)), 0xc1, edx, rcx);\n    *((rbp - 0x2e8)) = eax;\n    rax = errno_location ();\n    edx = *((rbp - 0x2e8));\n    r12d = *(rax);\n    *((rbp - 0x2f8)) = rax;\n    edx >>= 0x1f;\n    al = (r12d == 0x11) ? 1 : 0;\n    al &= dl;\n    *((rbp - 0x320)) = al;\n    if (al == 0) {\n        goto label_181;\n    }\n    eax = *((r13 + 0x18));\n    r12d = 0x11;\n    *((rbp - 0x2d0)) = al;\n    if (al == 0) {\n        goto label_182;\n    }\nlabel_70:\n    rax = fcn_0040dd80 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    *((rbp - 0x2e0)) = rax;\n    rax = dcgettext (0, \"cannot create regular file %s\");\n    rcx = *((rbp - 0x2e0));\nlabel_46:\n    eax = 0;\n    error (0, r12d, rax);\n    r8d = 0;\n    *((rbp - 0x2e0)) = 0;\nlabel_165:\n    ecx = *((r13 + 0x18));\n    if (cl != 0) {\n        goto label_183;\n    }\n    if (*((r13 + 0x15)) != 0) {\n        goto label_183;\n    }\n    eax = *((rdx + 0x18));\n    eax &= 0xf000;\n    if (eax != 0xa000) {\nlabel_59:\n        eax = *((r9 + 0x18));\n        eax &= 0xf000;\n        if (eax != 0xa000) {\n            goto label_184;\n        }\nlabel_36:\n        ecx = *((r13 + 0x18));\nlabel_35:\n        if (cl == 0) {\n            goto label_63;\n        }\n        eax = *((rbp - 0x258));\n        eax &= 0xf000;\n        if (eax == 0xa000) {\n            goto label_185;\n        }\n    }\nlabel_63:\n    if (*((r13 + 0x2c)) != 0) {\n        goto label_186;\n    }\n    if ((*((r13 + 0x14)) & 0xff00ff00) != 0) {\n        eax = *((r9 + 0x18));\n        eax &= 0xf000;\n        if (eax == 0xa000) {\n            goto label_186;\n        }\n    }\n    if (*((r13 + 4)) != 2) {\n        goto label_30;\n    }\n    eax = *((rdx + 0x18));\n    eax &= 0xf000;\n    if (eax == 0xa000) {\n        goto label_187;\n    }\n    __asm (\"movdqa xmm4, xmmword [rdx]\");\n    *((rbp - 0xc0)) = xmm4;\n    __asm (\"movdqa xmm5, xmmword [rdx + 0x10]\");\n    *((rbp - 0xb0)) = xmm5;\n    __asm (\"movdqa xmm6, xmmword [rdx + 0x20]\");\n    *((rbp - 0xa0)) = xmm6;\n    __asm (\"movdqa xmm7, xmmword [rdx + 0x30]\");\n    *((rbp - 0x90)) = xmm7;\n    __asm (\"movdqa xmm4, xmmword [rdx + 0x40]\");\n    *((rbp - 0x80)) = xmm4;\n    __asm (\"movdqa xmm5, xmmword [rdx + 0x50]\");\n    *((rbp - 0x70)) = xmm5;\n    __asm (\"movdqa xmm6, xmmword [rdx + 0x60]\");\n    *((rbp - 0x60)) = xmm6;\n    __asm (\"movdqa xmm7, xmmword [rdx + 0x70]\");\n    *((rbp - 0x50)) = xmm7;\n    __asm (\"movdqa xmm4, xmmword [rdx + 0x80]\");\n    *((rbp - 0x40)) = xmm4;\nlabel_74:\n    eax = *((r9 + 0x18));\n    eax &= 0xf000;\n    if (eax == 0xa000) {\n        goto label_188;\n    }\n    __asm (\"movdqa xmm5, xmmword [r9]\");\n    *((rbp - 0x150)) = xmm5;\n    __asm (\"movdqa xmm6, xmmword [r9 + 0x10]\");\n    *((rbp - 0x140)) = xmm6;\n    __asm (\"movdqa xmm7, xmmword [r9 + 0x20]\");\n    *((rbp - 0x130)) = xmm7;\n    __asm (\"movdqa xmm4, xmmword [r9 + 0x30]\");\n    *((rbp - 0x120)) = xmm4;\n    __asm (\"movdqa xmm5, xmmword [r9 + 0x40]\");\n    *((rbp - 0x110)) = xmm5;\n    __asm (\"movdqa xmm6, xmmword [r9 + 0x50]\");\n    *((rbp - 0x100)) = xmm6;\n    __asm (\"movdqa xmm7, xmmword [r9 + 0x60]\");\n    *((rbp - 0xf0)) = xmm7;\n    __asm (\"movdqa xmm4, xmmword [r9 + 0x70]\");\n    *((rbp - 0xe0)) = xmm4;\n    __asm (\"movdqa xmm5, xmmword [r9 + 0x80]\");\n    *((rbp - 0xd0)) = xmm5;\nlabel_73:\n    rax = *((rbp - 0x148));\n    if (*((rbp - 0xb8)) != rax) {\n        goto label_23;\n    }\n    rax = *((rbp - 0x150));\n    if (*((rbp - 0xc0)) != rax) {\n        goto label_23;\n    }\n    if (*((r13 + 0x17)) == 0) {\n        goto label_30;\n    }\nlabel_37:\n    *((rbp - 0x2d0)) = 1;\n    goto label_23;\nlabel_146:\n    *((rbp - 0x2b8)) = al;\n    rax = fcn_0040dd80 (4, r14);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"warning: source file %s specified more than once\");\n    rcx = rbx;\n    eax = 0;\n    error (0, 0, rax);\n    r8d = *((rbp - 0x2b8));\n    r15d = r8d;\n    void (*0x405f31)() ();\nlabel_134:\n    rax = fcn_0040dca0 (1, 4, *(0x0061d908));\n    rbx = rax;\n    rax = fcn_0040dca0 (0, 4, *(0x0061d910));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"cannot copy a directory, %s, into itself, %s\");\n    r8 = rbx;\n    rcx = r12;\n    eax = 0;\n    error (0, 0, rax);\n    rax = *((rbp + 0x20));\n    *(rax) = 1;\n    goto label_12;\nlabel_121:\n    rax = rbp - 0xc0;\n    rsi = *((rbp - 0x2b8));\n    edi = 1;\n    rdx = rax;\n    r12 = rax;\n    eax = lxstat ();\n    if (eax != 0) {\n        goto label_1;\n    }\n    rdx = r12;\n    goto label_31;\nlabel_159:\n    *((rbp - 0x2e8)) = 0;\n    r8d = 0;\n    rcx = *((rbp - 0x270));\n    if (*(rax) != rcx) {\n        void (*0x405c05)() ();\n    }\n    goto label_32;\nlabel_129:\n    rdx = rbp - 0x150;\n    esi = 0x415fd7;\n    edi = 1;\n    eax = xstat ();\n    if (eax != 0) {\n        goto label_33;\n    }\n    rdx = rbp - 0xc0;\n    rsi = r12;\n    edi = 1;\n    eax = xstat ();\n    if (eax != 0) {\n        goto label_33;\n    }\n    rax = *((rbp - 0xb8));\n    if (*((rbp - 0x148)) == rax) {\n        goto label_189;\n    }\nlabel_69:\n    free (r12);\n    rax = fcn_0040de50 (0, 3, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"%s: can make relative symbolic links only in current directory\";\n    rbx = rax;\n    goto label_34;\nlabel_183:\n    eax = *((r9 + 0x18));\n    eax &= 0xf000;\n    if (eax == 0xa000) {\n        goto label_23;\n    }\n    if (r12b != 0) {\n        if (*((r9 + 0x10)) > 1) {\n            goto label_190;\n        }\n    }\n    eax = *((rdx + 0x18));\n    eax &= 0xf000;\n    if (eax == 0xa000) {\n        goto label_35;\n    }\nlabel_184:\n    rax = *((r9 + 8));\n    if (*((rdx + 8)) != rax) {\n        goto label_23;\n    }\n    rax = *(r9);\n    if (*(rdx) != rax) {\n        goto label_23;\n    }\n    if (*((r13 + 0x17)) == 0) {\n        goto label_36;\n    }\n    goto label_37;\nlabel_168:\n    rcx = r13;\n    edx = 1;\n    fcn_004052e0 (*((rbp - 0x2b8)), 0);\n    goto label_38;\nlabel_167:\n    edx = 5;\n    rax = dcgettext (0, \"renamed \");\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    fcn_00404a30 (r14, *((rbp - 0x2b8)), *((rbp - 0x300)));\n    goto label_39;\nlabel_154:\n    rax = fcn_0040dd80 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"cannot create directory %s\";\n    rbx = rax;\n    goto label_40;\nlabel_107:\n    if (*((rbp - 0x2c4)) == 0x4000) {\n        goto label_41;\n    }\nlabel_111:\n    if (*((r13 + 0x18)) == 0) {\n        goto label_191;\n    }\n    r12d = *(r13);\n    if (r12d == 0) {\n        goto label_191;\n    }\nlabel_45:\n    edx = *((rbp - 0x258));\n    edx &= 0xf000;\n    if (edx == 0x4000) {\n        goto label_192;\n    }\nlabel_50:\n    *((rbp - 0x2f0)) = cl;\n    rax = fcn_0040aa00 (r14);\n    ecx = *((rbp - 0x2f0));\n    r8 = rax;\n    if (*(rax) == 0x2e) {\n        goto label_193;\n    }\nlabel_49:\n    if (r12d != 3) {\n        rdi = r8;\n        *((rbp - 0x2f0)) = cl;\n        *((rbp - 0x308)) = r8;\n        rax = strlen (rdi);\n        *((rbp - 0x2d0)) = rax;\n        rax = fcn_0040aa00 (*((rbp - 0x2b8)));\n        rdi = rax;\n        *((rbp - 0x300)) = rax;\n        rax = strlen (rdi);\n        rcx = imp.__libc_start_main;\n        r12 = rax;\n        rdi = rcx;\n        *((rbp - 0x310)) = rcx;\n        rax = strlen (rdi);\n        ecx = *((rbp - 0x2f0));\n        r9 = rax;\n        rax = r12 + rax;\n        *((rbp - 0x318)) = r9;\n        if (*((rbp - 0x2d0)) != rax) {\n            goto label_79;\n        }\n        r8 = *((rbp - 0x308));\n        *((rbp - 0x2d0)) = cl;\n        rdi = r8;\n        *((rbp - 0x2f0)) = r8;\n        eax = memcmp (rdi, *((rbp - 0x300)), r12);\n        ecx = *((rbp - 0x2d0));\n        if (eax != 0) {\n            goto label_79;\n        }\n        r8 = *((rbp - 0x2f0));\n        eax = strcmp (r8 + r12, *((rbp - 0x310)));\n        ecx = *((rbp - 0x2d0));\n        if (eax != 0) {\n            goto label_79;\n        }\n        *((rbp - 0x300)) = cl;\n        rax = strlen (*((rbp - 0x2b8)));\n        r9 = *((rbp - 0x318));\n        *((rbp - 0x2f0)) = rax;\n        rax = fcn_004100e0 (r9 + rax + 1);\n        rdx = *((rbp - 0x2f0));\n        rsi = *((rbp - 0x2b8));\n        r12 = rax;\n        rax = imp.__libc_start_main;\n        rdi = r12;\n        *((rbp - 0x2d0)) = rax;\n        rax = mempcpy ();\n        strcpy (rax, *((rbp - 0x2d0)));\n        rax = rbp - 0xc0;\n        rsi = r12;\n        edi = 1;\n        rdx = rax;\n        eax = xstat ();\n        *((rbp - 0x2d0)) = eax;\n        free (r12);\n        eax = *((rbp - 0x2d0));\n        ecx = *((rbp - 0x300));\n        if (eax != 0) {\n            goto label_79;\n        }\n        rax = *((rbp - 0xb8));\n        if (*((rbp - 0x268)) == rax) {\n            goto label_194;\n        }\n    }\nlabel_79:\n    *((rbp - 0x2d0)) = cl;\n    rax = fcn_0040a570 (*((rbp - 0x2b8)), *(r13));\n    ecx = *((rbp - 0x2d0));\n    r12 = rax;\n    *((rbp - 0x300)) = rax;\n    *((rbp - 0x2f0)) = cl;\n    if (rax == 0) {\n        goto label_195;\n    }\n    rax = strlen (rax);\n    rax += 0x18;\n    rax &= 0xfffffffffffffff0;\n    rdi &= 0xfffffffffffffff0;\n    rax = memcpy (rsp + 0xf, r12, rax + 1);\n    r12 = rax;\n    free (*((rbp - 0x300)));\n    *((rbp - 0x300)) = r12;\n    ecx = *((rbp - 0x2f0));\n    *((rbp - 0x2d0)) = 1;\n    goto label_42;\nlabel_153:\n    rax = 0xff000000ff00;\n    if ((*((r13 + 0x20)) & rax) != 0) {\n        goto label_196;\n    }\nlabel_53:\n    *((rbp - 0x321)) = 0;\n    *((rbp - 0x308)) = 0;\n    goto label_43;\nlabel_164:\n    eax = *((rbp - 0x1c8));\n    eax &= 0xf000;\n    if (eax != 0xa000) {\n        goto label_27;\n    }\n    *((rbp - 0x308)) = ecx;\n    *((rbp - 0x300)) = r8b;\n    al = fcn_0040e2f0 (r14, *((rbp - 0x2b8)));\n    if (al != 0) {\n        goto label_30;\n    }\n    r8d = *(r13);\n    r8d = *((rbp - 0x300));\n    if (r8d != 0) {\n        goto label_23;\n    }\n    ecx = *((rbp - 0x308));\n    if (ecx == 0) {\n        goto label_23;\n    }\n    r12d = *((r13 + 0x18));\n    eax = 1;\n    r12d ^= 1;\nlabel_54:\n    if (r12b == 0) {\n        goto label_30;\n    }\n    *((rbp - 0x2d0)) = al;\n    goto label_23;\nlabel_144:\n    edx = 5;\n    rax = dcgettext (0, \"copied \");\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    fcn_00404a30 (r14, *((rbp - 0x2b8)), *((rbp - 0x300)));\n    *((rbp - 0x2c0)) = 1;\n    goto label_5;\nlabel_140:\n    edi = 1;\n    r15d = 1;\n    rax = fcn_0040dca0 (edi, 4, *(0x0061d908));\n    r12 = rax;\n    rax = fcn_0040dca0 (0, 4, *(0x0061d910));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"cannot move %s to a subdirectory of itself, %s\");\n    r8 = r12;\n    rcx = rbx;\n    eax = 0;\n    error (0, 0, rax);\n    rax = *((rbp + 0x20));\n    *(rax) = 1;\n    void (*0x405f31)() ();\nlabel_130:\n    rax = fcn_0040dca0 (1, 4, r14);\n    rbx = rax;\n    rax = fcn_0040dca0 (0, 4, *((rbp - 0x2b8)));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"cannot create symbolic link %s to %s\");\n    r14 = rax;\n    rax = errno_location ();\n    r8 = rbx;\n    rcx = r12;\n    eax = 0;\n    error (0, *(rax), r14);\n    void (*0x4065d0)() ();\nlabel_152:\n    if (*((rbp - 0x2c4)) != 0xa000) {\n        goto label_197;\n    }\n    rax = fcn_00409e80 (r14, *((rbp - 0x240)));\n    r12 = rax;\n    if (rax == 0) {\n        goto label_198;\n    }\n    ecx = *((r13 + 0x16));\n    eax = fcn_00409c90 (rax, 0xffffff9c, *((rbp - 0x2b8)), rcx);\n    if (eax < 0) {\n        goto label_199;\n    }\nlabel_65:\n    free (r12);\n    eax = *((r13 + 0x25));\n    *((rbp - 0x321)) = al;\n    if (al != 0) {\n        void (*0x406acd)() ();\n    }\n    r8d = *((r13 + 0x1d));\n    if (r8b != 0) {\n        goto label_200;\n    }\n    *((rbp - 0x321)) = r8b;\n    *((rbp - 0x2e8)) = 1;\n    *((rbp - 0x2e0)) = 1;\n    void (*0x405c05)() ();\nlabel_108:\n    if (*((r13 + 0x18)) == 0) {\n        goto label_201;\n    }\n    r12d = *(r13);\n    if (r12d == 0) {\n        goto label_201;\n    }\n    if (bl != 0) {\n        goto label_44;\n    }\n    goto label_45;\nlabel_174:\n    rax = fcn_0040dd80 (4, r14);\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"skipping file %s, as it was replaced while being copied\");\n    rcx = r12;\n    esi = 0;\n    rdx = rax;\n    goto label_46;\nlabel_169:\n    r12d = 1;\n    ecx = 1;\n    goto label_47;\nlabel_157:\n    fcn_004096d0 (*((rbp - 0x2b8)), *((rbp - 0x1d8)), *((rbp - 0x1e0)));\n    rax = *((rbp + 0x18));\n    *(rax) = 1;\n    goto label_48;\nlabel_109:\n    if (*((r13 + 0x18)) != 0) {\n        goto label_45;\n    }\nlabel_113:\n    *((rbp - 0x2f0)) = cl;\n    rax = fcn_0040aa00 (r14);\n    ecx = *((rbp - 0x2f0));\n    r8 = rax;\n    if (*(rax) == 0x2e) {\n        goto label_202;\n    }\nlabel_58:\n    eax = *((rbp - 0x1c8));\n    eax &= 0xf000;\n    if (eax != 0x4000) {\n        goto label_49;\n    }\n    do {\n        *((rbp - 0x300)) = 0;\n        goto label_42;\nlabel_112:\n        eax = *((rbp - 0x258));\n        eax &= 0xf000;\n        if (eax == 0x4000) {\n            goto label_203;\n        }\nlabel_52:\n    } while (r12d == 0);\n    goto label_50;\nlabel_135:\n    rax = fcn_0040dd80 (4, *(0x0061d910));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"warning: source directory %s specified more than once\");\n    rcx = rbx;\n    eax = 0;\n    error (0, 0, rax);\n    if (*((r13 + 0x18)) == 0) {\n        goto label_22;\n    }\n    if (*((rbp - 0x2c0)) != 0) {\n        goto label_51;\n    }\n    goto label_22;\nlabel_155:\n    rax = fcn_0040dd80 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"cannot stat %s\";\n    rbx = rax;\n    goto label_40;\nlabel_172:\n    rax = fcn_0040dd80 (4, r14);\n    edx = 5;\n    esi = \"cannot open %s for reading\";\n    rbx = rax;\n    goto label_40;\nlabel_106:\n    rax = *((rbp - 0x2f0));\n    *((rbp - 0x300)) = r8b;\n    al = fcn_00404ae0 (r13, *((rbp - 0x2b8)), rax + 0x18);\n    r8d = *((rbp - 0x300));\n    if (al != 0) {\n        goto label_28;\n    }\n    goto label_22;\nlabel_158:\n    fcn_00404a30 (r14, *((rbp - 0x2b8)), 0);\n    goto label_43;\nlabel_151:\n    eax = *((rbp - 0x308));\n    rsi = *((rbp - 0x2b8));\n    edi = 0;\n    rcx = rbp - 0xc0;\n    *((rbp - 0xc0)) = 0;\n    eax = ~eax;\n    eax &= *((rbp - 0x2c8));\n    edx = eax;\n    r12d = eax;\n    eax = xmknod ();\n    r8d = *((rbp - 0x2c0));\n    if (eax != 0) {\n        goto label_204;\n    }\nlabel_64:\n    *((rbp - 0x2e8)) = r8b;\n    *((rbp - 0x321)) = r8b;\n    *((rbp - 0x2e0)) = 1;\n    void (*0x405c05)() ();\nlabel_203:\n    eax = *((rbp - 0x1c8));\nlabel_192:\n    eax &= 0xf000;\n    if (eax == 0x4000) {\n        goto label_52;\n    }\n    if (r12d != 0) {\n        goto label_50;\n    }\n    rax = fcn_0040de50 (0, 3, *((rbp - 0x2b8)));\n    r12 = rax;\n    rax = fcn_0040de50 (0, 3, r14);\n    edx = 5;\n    esi = \"cannot move directory onto non-directory: %s -> %s\";\n    rbx = rax;\n    goto label_24;\nlabel_197:\n    rax = fcn_0040dd80 (4, r14);\n    edx = 5;\n    esi = \"%s has unknown file type\";\n    rbx = rax;\n    goto label_34;\nlabel_196:\n    esi = *((r13 + 0x25));\n    edx = 0;\n    rcx = r13;\n    al = fcn_004052e0 (*((rbp - 0x2b8)), rsi);\n    if (al != 0) {\n        goto label_53;\n    }\n    if (*((r13 + 0x26)) == 0) {\n        goto label_53;\n    }\n    void (*0x4065d0)() ();\nlabel_166:\n    *((rbp - 0x2d0)) = r8b;\n    eax = fcn_0040e2f0 (r14, *((rbp - 0x2b8)));\n    r8d = *((rbp - 0x2d0));\n    eax ^= 1;\n    r12d = eax;\n    eax = 0;\n    goto label_54;\nlabel_186:\n    rax = *(rdx);\n    r12b = (*(r9) == rax) ? 1 : 0;\n    eax = 0;\n    goto label_54;\nlabel_201:\n    rax = fcn_0040dca0 (1, 4, r14);\n    r12 = rax;\n    rax = fcn_0040dca0 (0, 4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"cannot overwrite non-directory %s with directory %s\";\n    rbx = rax;\n    goto label_24;\nlabel_195:\n    rax = errno_location ();\n    *((rbp - 0x2d0)) = 1;\n    ecx = *((rbp - 0x2f0));\n    r12 = rax;\n    if (*(rax) == 2) {\n        goto label_42;\n    }\n    rax = fcn_0040dd80 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    rbx = rax;\nlabel_71:\n    r15d = 0;\n    rax = dcgettext (0, \"cannot backup %s\");\n    rcx = rbx;\n    eax = 0;\n    error (0, *(r12), rax);\n    void (*0x405f31)() ();\nlabel_191:\n    rax = fcn_0040dd80 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"cannot overwrite directory %s with non-directory\";\n    rbx = rax;\n    goto label_55;\nlabel_173:\n    rax = fcn_0040dd80 (4, r14);\n    edx = 5;\n    *((rbp - 0x2e0)) = rax;\n    rax = dcgettext (0, \"cannot fstat %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = *((rbp - 0x2e0));\n    rdx = r12;\n    esi = *(rax);\n    goto label_46;\nlabel_114:\n    *((rbp - 0x300)) = 0;\n    if (*((r13 + 4)) != 2) {\n        goto label_42;\n    }\n    eax = *((rbp - 0x258));\n    eax &= 0xf000;\n    if (eax != 0x8000) {\n        goto label_56;\n    }\n    goto label_42;\nlabel_193:\n    eax = 1;\nlabel_60:\n    edx = 0;\n    dl = (*((r8 + 1)) == 0x2e) ? 1 : 0;\n    edx = *((r8 + rdx + 1));\n    if (dl == 0) {\n        goto label_57;\n    }\n    if (dl == 0x2f) {\n        goto label_57;\n    }\n    if (al == 0) {\n        goto label_58;\n    }\n    goto label_49;\nlabel_190:\n    *((rbp - 0x310)) = r8b;\n    *((rbp - 0x308)) = r9;\n    *((rbp - 0x300)) = rdx;\n    al = fcn_0040e2f0 (r14, *((rbp - 0x2b8)));\n    rdx = *((rbp - 0x300));\n    r9 = *((rbp - 0x308));\n    r8d = *((rbp - 0x310));\n    if (al == 0) {\n        goto label_205;\n    }\n    eax = *((rdx + 0x18));\n    eax &= 0xf000;\n    if (eax != 0xa000) {\n        goto label_59;\n    }\n    goto label_36;\nlabel_202:\n    eax = 0;\n    goto label_60;\nlabel_160:\n    rax = fcn_0040dd80 (4, r14);\n    edx = 5;\n    *((rbp - 0x2c0)) = rax;\n    rax = dcgettext (0, \"cannot access %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = *((rbp - 0x2c0));\n    eax = 0;\n    error (0, *(rax), r12);\n    *((rbp - 0x2e0)) = 0;\n    goto label_61;\nlabel_156:\n    rax = fcn_0040dd80 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"setting permissions for %s\";\n    rbx = rax;\n    goto label_40;\nlabel_88:\n    eax = *((rbp - 0x308));\n    *((rbp - 0x348)) = eax;\n    goto label_62;\nlabel_185:\n    if (*((r9 + 0x10)) <= 1) {\n        goto label_63;\n    }\n    rdi = r14;\n    *((rbp - 0x310)) = r8b;\n    *((rbp - 0x308)) = r9;\n    *((rbp - 0x300)) = rdx;\n    rax = canonicalize_file_name ();\n    rdx = *((rbp - 0x300));\n    r9 = *((rbp - 0x308));\n    r8d = *((rbp - 0x310));\n    if (rax == 0) {\n        goto label_63;\n    }\n    rdi = rax;\n    *((rbp - 0x300)) = r8b;\n    *((rbp - 0x2d0)) = rax;\n    eax = fcn_0040e2f0 (rdi, *((rbp - 0x2b8)));\n    rcx = *((rbp - 0x2d0));\n    eax ^= 1;\n    r12d = eax;\n    eax = free (rcx);\n    eax = 0;\n    r8d = *((rbp - 0x300));\n    goto label_54;\nlabel_204:\n    esi = r12d;\n    rdi = *((rbp - 0x2b8));\n    esi &= 0xffffefff;\n    eax = mkfifo ();\n    r8d = *((rbp - 0x2c0));\n    if (eax == 0) {\n        goto label_64;\n    }\n    rax = fcn_0040dd80 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"cannot create fifo %s\";\n    rbx = rax;\n    goto label_40;\nlabel_199:\n    rax = errno_location ();\n    eax = *(rax);\n    *((rbp - 0x2c0)) = eax;\n    if (eax == 0) {\n        goto label_65;\n    }\n    if (*((r13 + 0x2d)) == 1) {\n        if (*((rbp - 0x2d0)) == 0) {\n            goto label_206;\n        }\n    }\nlabel_87:\n    free (r12);\n    rax = fcn_0040dd80 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"cannot create symbolic link %s\");\n    rcx = r12;\n    eax = 0;\n    error (0, *((rbp - 0x2c0)), rax);\n    void (*0x4065d0)() ();\nlabel_161:\n    r12d = 0;\n    *((rbp - 0x2e0)) = 1;\n    goto label_66;\nlabel_110:\n    rax = fcn_0040dca0 (1, 4, r14);\n    r12 = rax;\n    rax = fcn_0040dca0 (0, 4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"will not overwrite just-created %s with %s\";\n    rbx = rax;\n    goto label_24;\nlabel_117:\n    al = (*((rbp - 0x2c4)) == 0x4000) ? 1 : 0;\n    al &= *((r13 + 0x2a));\n    *((rbp - 0x2d0)) = al;\n    if (al != 0) {\n        goto label_67;\n    }\n    *((rbp - 0x2d0)) = 1;\n    *((rbp - 0x300)) = 0;\n    goto label_4;\nlabel_116:\n    *((rbp - 0x2f0)) = cl;\n    rax = fcn_0040dd80 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"removed %s\\n\");\n    rdx = r12;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    ecx = *((rbp - 0x2f0));\n    *((rbp - 0x300)) = 0;\n    goto label_42;\nlabel_175:\n    ecx = *((rbp - 0x2e8));\n    if (ecx < 0) {\n        goto label_68;\n    }\nlabel_72:\n    *((rbp - 0x348)) = 0;\nlabel_78:\n    rax = rbp - 0xc0;\n    esi = *((rbp - 0x2e8));\n    edi = 1;\n    rdx = rax;\n    *((rbp - 0x320)) = rax;\n    eax = fxstat ();\n    *((rbp - 0x2f8)) = eax;\n    if (eax != 0) {\n        goto label_207;\n    }\n    if (*((rbp - 0x310)) == 0) {\n        goto label_85;\n    }\n    if (*((r13 + 0x34)) != 0) {\n        goto label_208;\n    }\nlabel_86:\n    eax = getpagesize ();\n    r12 = (int64_t) eax;\n    rax = *((rbp - 0x88));\n    *((rbp - 0x340)) = rax;\n    rdx = rax - 0x20000;\n    *((rbp - 0x330)) = rax;\n    rax = 0x1ffffffffffe0000;\n    if (rdx > rax) {\n        rcx = *((rbp - 0x340));\n        rax = 0x1fffffffffffffff;\n        *((rbp - 0x330)) = 0x20000;\n        rdx = rcx - 1;\n        eax = 0x200;\n        if (rdx <= rax) {\n            rax = rcx;\n        }\n        *((rbp - 0x340)) = rax;\n    }\n    edi = *((rbp - 0x2c0));\n    ecx = 2;\n    edx = 0;\n    esi = 0;\n    fcn_0040aad0 ();\n    r9d = *((rbp - 0x138));\n    r9d &= 0xf000;\n    if (r9d == 0x8000) {\n        rax = *((rbp - 0x120));\n        ecx = 0x200;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        al = (*((rbp - 0x110)) < rax) ? 1 : 0;\n        eax = (int32_t) al;\n        *((rbp - 0x2f8)) = eax;\n    }\n    rax = r12 - 1;\n    *((rbp - 0x2e0)) = rax;\n    eax = *((rbp - 0xa8));\n    eax &= 0xf000;\n    if (eax == 0x8000) {\n        goto label_209;\n    }\nlabel_83:\n    rdi = *((rbp - 0x118));\n    rsi = *((rbp - 0x330));\n    rax = 0x1ffffffffffe0000;\n    r8 = 0x7fffffffffffffff;\n    r8 -= r12;\n    *((rbp - 0x338)) = r9d;\n    rdx = rdi - 0x20000;\n    *((rbp - 0x2e0)) = r8;\n    eax = 0x20000;\n    rdx = r8;\n    if (rdx > rax) {\n        rdi = rax;\n    }\n    rax = fcn_0040a640 (rdi, rsi, rdx);\n    r9d = *((rbp - 0x338));\n    r8 = *((rbp - 0x2e0));\n    rcx = rax;\n    if (r9d == 0x8000) {\n        goto label_210;\n    }\nlabel_82:\n    rax = *((rbp - 0x330));\n    edx = 0;\n    rsi = rcx + rax - 1;\n    rax = rsi;\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    rsi -= rdx;\n    *((rbp - 0x330)) = rsi;\n    if (rsi == 0) {\n        goto label_211;\n    }\n    if (r8 < rsi) {\n        goto label_211;\n    }\nlabel_81:\n    rax = *((rbp - 0x330));\n    rax = fcn_004100e0 (r12 + rax);\n    rcx = r12 - 1;\n    edx = 0;\n    rcx += rax;\n    *((rbp - 0x2e0)) = rax;\n    rax = rcx;\n    rax = rdx:rax / r12;\n    rdx = rdx:rax % r12;\n    rcx -= rdx;\n    *((rbp - 0x350)) = rcx;\n    if (*((rbp - 0x2f8)) != 0) {\n        goto label_212;\n    }\n    rax = rbp - 0x2a0;\n    r9d = 0;\n    *((rbp - 0x340)) = 0;\n    *((rbp - 0x2f8)) = rax;\n    r9b = (*((r13 + 0xc)) == 3) ? 1 : 0;\nlabel_90:\n    rax = rbp - 0x2a8;\n    r8 = *((rbp - 0x340));\n    rcx = *((rbp - 0x330));\n    rdx = *((rbp - 0x350));\n    esi = *((rbp - 0x2e8));\n    edi = *((rbp - 0x2c0));\nlabel_200:\n    edx = *((rbp - 0x250));\n    esi = *((rbp - 0x254));\n    *((rbp - 0x2c0)) = r8b;\n    rdi = *((rbp - 0x2b8));\n    eax = lchown ();\n    r8d = *((rbp - 0x2c0));\n    if (eax == 0) {\n        goto label_213;\n    }\n    al = fcn_00405400 (r13);\n    *((rbp - 0x2e8)) = al;\n    if (al == 0) {\n        goto label_214;\n    }\n    eax = *((rbp - 0x2e8));\n    r8d = 0;\n    *((rbp - 0x2e0)) = al;\n    void (*0x405c05)() ();\nlabel_189:\n    rax = *((rbp - 0xc0));\n    if (*((rbp - 0x150)) != rax) {\n        goto label_69;\n    }\n    goto label_33;\nlabel_182:\n    rsi = *((rbp - 0x2b8));\n    rdx = rbp - 0xc0;\n    edi = 1;\n    eax = lxstat ();\n    if (eax == 0) {\n        eax = *((rbp - 0xa8));\n        eax &= 0xf000;\n        if (eax != 0xa000) {\n            goto label_181;\n        }\n        r8d = *((r13 + 0x30));\n        if (r8b == 0) {\n            goto label_215;\n        }\n        eax = 0;\n        eax = fcn_0040ab10 (*((rbp - 0x2b8)), 0x41, *((rbp - 0x2e0)), rcx);\n        *((rbp - 0x2e8)) = eax;\n        rax = *((rbp - 0x2f8));\n        r12d = *(rax);\n    }\nlabel_181:\n    eax = *((rbp - 0x2e8));\n    eax >>= 0x1f;\n    dl = (r12d == 0x15) ? 1 : 0;\n    dl &= al;\n    *((rbp - 0x2d0)) = dl;\n    if (dl == 0) {\n        goto label_216;\n    }\n    rsi = *((rbp - 0x2b8));\n    r12d = 0x15;\n    rdi = rsi;\n    if (*(rsi) == 0) {\n        goto label_70;\n    }\n    eax = 0;\n    rcx |= 0xffffffffffffffff;\n    r12d = 0;\n    __asm (\"repne scasb al, byte [rdi]\");\n    rax = rcx;\n    rax = ~rax;\n    r12b = (*((rsi + rax - 2)) != 0x2f) ? 1 : 0;\n    r12d += 0x14;\n    goto label_70;\nlabel_205:\n    r12d = *((r13 + 0x18));\n    r12d ^= 1;\n    goto label_54;\nlabel_85:\n    *((rbp - 0x2e0)) = 0;\n    void (*0x40853f)() ();\nlabel_198:\n    rax = fcn_0040dd80 (4, r14);\n    edx = 5;\n    esi = \"cannot read symbolic link %s\";\n    rbx = rax;\n    goto label_40;\nlabel_115:\n    rax = fcn_0040dd80 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"cannot remove %s\";\n    rbx = rax;\n    goto label_71;\nlabel_213:\n    *((rbp - 0x2e8)) = r8b;\n    *((rbp - 0x2e0)) = r8b;\n    r8d = 0;\n    void (*0x405c05)() ();\nlabel_176:\n    esi = *((r13 + 0x25));\n    rcx = r13;\n    edx = 0;\n    eax = fcn_004052e0 (r12, rsi);\n    r8d = eax;\n    if (al != 0) {\n        goto label_72;\n    }\n    eax = *((r13 + 0x26));\n    *((rbp - 0x2d0)) = al;\n    if (al == 0) {\n        goto label_72;\n    }\n    *((rbp - 0x2d0)) = 0;\n    *((rbp - 0x2e0)) = 0;\n    void (*0x408600)() ();\nlabel_188:\n    rax = rbp - 0x150;\n    rsi = *((rbp - 0x2b8));\n    edi = 1;\n    *((rbp - 0x300)) = r8b;\n    rdx = rax;\n    eax = xstat ();\n    r8d = *((rbp - 0x300));\n    if (eax == 0) {\n        goto label_73;\n    }\n    goto label_23;\nlabel_187:\n    rax = rbp - 0xc0;\n    rsi = r14;\n    edi = 1;\n    *((rbp - 0x308)) = r8b;\n    rdx = rax;\n    *((rbp - 0x300)) = r9;\n    eax = xstat ();\n    r9 = *((rbp - 0x300));\n    r8d = *((rbp - 0x308));\n    if (eax == 0) {\n        goto label_74;\n    }\n    goto label_23;\nlabel_207:\n    rax = fcn_0040dd80 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    *((rbp - 0x2e0)) = rax;\n    rax = dcgettext (0, \"cannot fstat %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = *((rbp - 0x2e0));\n    eax = 0;\n    error (0, *(rax), r12);\n    r8d = 0;\n    *((rbp - 0x2e0)) = 0;\n    void (*0x408600)() ();\nlabel_177:\n    r12d = *(r12);\n    if (r12d == 2) {\n        if (*((r13 + 0x18)) == 0) {\n            goto label_217;\n        }\n    }\n    *((rbp - 0x2d0)) = 0;\n    goto label_70;\nlabel_217:\n    *((rbp - 0x348)) = 0;\n    goto label_62;\nlabel_212:\n    *((rbp - 0x323)) = 0;\n    *((rbp - 0x328)) = 1;\nlabel_84:\n    rcx = rbp - 0x2a0;\n    rax = *((rbp - 0x120));\n    r12d = 0;\n    rsi = rcx;\n    *((rbp - 0x2f8)) = rcx;\n    *((rbp - 0x368)) = rax;\n    fcn_004097a0 (*((rbp - 0x2c0)), rsi);\n    r10d = 0;\n    *((rbp - 0x358)) = ebx;\n    ecx = 0;\n    *((rbp - 0x360)) = r13;\n    rbx = *((rbp - 0x368));\n    *((rbp - 0x322)) = r15b;\n    r15d = *((rbp - 0x310));\n    *((rbp - 0x338)) = r14;\n    r14 = r10;\nlabel_77:\n    *((rbp - 0x310)) = rcx;\n    al = fcn_004097d0 (*((rbp - 0x2f8)));\n    rcx = *((rbp - 0x310));\n    if (al == 0) {\n        goto label_218;\n    }\n    if (*((rbp - 0x288)) == 0) {\n        goto label_219;\n    }\n    rdx = r14;\n    rsi = r12;\n    r13d = 0;\n    eax = 0;\n    while (rcx == 0) {\nlabel_75:\n        r8d = 0;\n        if (*((rbp - 0x328)) == 3) {\n            r8 = *((rbp - 0x340));\n        }\nlabel_76:\n        rax = rbp - 0x2a9;\n        rax = rbp - 0x2a8;\n        al = fcn_00404de0 (*((rbp - 0x2c0)), *((rbp - 0x2e8)), *((rbp - 0x350)), *((rbp - 0x330)), r8, 1);\n        if (al == 0) {\n            goto label_220;\n        }\n        rax = *((rbp - 0x2a8));\n        rcx = r12 + rax;\n        if (rax != 0) {\n            r15d = *((rbp - 0x2a9));\n        }\n        if (rbx == rcx) {\n            goto label_221;\n        }\n        eax = r13 + 1;\n        rsi = r12;\n        rdx = r14;\n        r13 = rax;\n        if (rax >= *((rbp - 0x288))) {\n            goto label_219;\n        }\n        rcx = rax * 3;\n        rax = *((rbp - 0x278));\n        rax = rax + rcx*8;\n        r12 = *(rax);\n        r14 = *((rax + 8));\n        rax = r12 + r14;\n        if (rbx < rax) {\n            r14 = rbx;\n            if (r12 > rbx) {\n                r12 = rbx;\n            }\n            r14 -= r12;\n        }\n        rcx = r12;\n        r15d = 0;\n        rcx -= rsi;\n        rcx -= rdx;\n    }\n    edi = *((rbp - 0x2c0));\n    edx = 0;\n    rsi = r12;\n    *((rbp - 0x310)) = rcx;\n    rax = lseek ();\n    rcx = *((rbp - 0x310));\n    if (rax < 0) {\n        goto label_222;\n    }\n    eax = *((rbp - 0x328));\n    if (eax == 1) {\n        goto label_223;\n    }\n    dl = (eax == 3) ? 1 : 0;\n    eax = fcn_00404d20 (*((rbp - 0x2e8)), *((rbp - 0x2b8)), 0, rcx);\n    r15d = eax;\n    if (al != 0) {\n        goto label_75;\n    }\nlabel_220:\n    r15d = *((rbp - 0x322));\n    r14 = *((rbp - 0x338));\n    r13 = *((rbp - 0x360));\n    ebx = *((rbp - 0x358));\nlabel_92:\n    free (*((rbp - 0x278)));\n    void (*0x4088ee)() ();\nlabel_223:\n    al = fcn_004048e0 (*((rbp - 0x2e8)), rcx);\n    if (al == 0) {\n        goto label_224;\n    }\n    r8d = 0;\n    goto label_76;\nlabel_221:\n    *((rbp - 0x27f)) = 1;\nlabel_219:\n    *((rbp - 0x310)) = rcx;\n    free (*((rbp - 0x278)));\n    *((rbp - 0x278)) = 0;\n    *((rbp - 0x288)) = 0;\n    rcx = *((rbp - 0x310));\n    if (*((rbp - 0x27f)) == 0) {\n        goto label_77;\n    }\n    *((rbp - 0x310)) = r15b;\n    r14 = *((rbp - 0x338));\n    r15d = *((rbp - 0x322));\n    r13 = *((rbp - 0x360));\n    ebx = *((rbp - 0x358));\nlabel_93:\n    r12b = (*((rbp - 0x368)) > rcx) ? 1 : 0;\n    if (*((rbp - 0x368)) > rcx) {\n        goto label_225;\n    }\n    if (*((rbp - 0x310)) == 0) {\n        void (*0x40853f)() ();\n    }\nlabel_225:\n    if (*((rbp - 0x328)) == 1) {\n        goto label_226;\n    }\n    rsi = *((rbp - 0x368));\n    edi = *((rbp - 0x2e8));\n    *((rbp - 0x2f8)) = rcx;\n    eax = ftruncate ();\n    rcx = *((rbp - 0x2f8));\n    if (eax != 0) {\n        void (*0x4091c4)() ();\n    }\n    if (*((rbp - 0x328)) != 3) {\n        void (*0x40853f)() ();\n    }\n    if (r12b == 0) {\n        void (*0x40853f)() ();\n    }\n    rdx = *((rbp - 0x368));\n    rdx -= rcx;\n    eax = fcn_00404990 (*((rbp - 0x2e8)), rcx);\n    if (eax >= 0) {\n        void (*0x40853f)() ();\n    }\n    rax = fcn_0040dd80 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"error deallocating %s\";\n    *((rbp - 0x2f8)) = rax;\nlabel_216:\n    *((rbp - 0x2d0)) = 1;\n    if (*((rbp - 0x2e8)) < 0) {\n        goto label_70;\n    }\n    goto label_78;\nlabel_194:\n    rax = *((rbp - 0xc0));\n    if (*((rbp - 0x270)) != rax) {\n        goto label_79;\n    }\n    if (*((r13 + 0x18)) == 0) {\n        goto label_227;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"backing up %s might destroy source;  %s not moved\");\n    rbx = rax;\n    do {\n        rax = fcn_0040dca0 (1, 4, r14);\n        r12 = rax;\n        rax = fcn_0040dca0 (0, 4, *((rbp - 0x2b8)));\n        r8 = r12;\n        rdx = rbx;\n        rcx = rax;\n        goto label_80;\nlabel_227:\n        edx = 5;\n        rax = dcgettext (0, \"backing up %s might destroy source;  %s not copied\");\n        rbx = rax;\n    } while (1);\nlabel_211:\n    *((rbp - 0x330)) = rcx;\n    goto label_81;\nlabel_210:\n    rax = *((rbp - 0x120));\n    if (*((rbp - 0x330)) <= rax) {\n        goto label_82;\n    }\n    rax++;\n    *((rbp - 0x330)) = rax;\n    goto label_82;\nlabel_209:\n    eax = *((r13 + 0xc));\n    if (eax == 3) {\n        goto label_228;\n    }\n    if (eax != 2) {\n        goto label_83;\n    }\n    if ((*((rbp - 0x2f8)) & 1) == 0) {\n        goto label_83;\n    }\n    rax = *((rbp - 0x330));\n    rax = fcn_004100e0 (rax + r12);\n    rcx = r12 - 1;\n    edx = 0;\n    rcx += rax;\n    *((rbp - 0x2e0)) = rax;\n    rax = rcx;\n    rax = rdx:rax / r12;\n    rdx = rdx:rax % r12;\n    rcx -= rdx;\n    *((rbp - 0x350)) = rcx;\nlabel_89:\n    eax = *((r13 + 0xc));\n    *((rbp - 0x328)) = eax;\n    eax = *((rbp - 0x310));\n    *((rbp - 0x323)) = al;\n    goto label_84;\nlabel_208:\n    edx = *((rbp - 0x2c0));\n    eax = 0;\n    eax = ioctl (*((rbp - 0x2e8)), 0x40049409);\n    if (eax == 0) {\n        goto label_85;\n    }\n    if (*((r13 + 0x34)) != 2) {\n        goto label_86;\n    }\n    rax = fcn_0040dca0 (1, 4, r14);\n    *((rbp - 0x2f8)) = rax;\n    rax = fcn_0040dca0 (0, 4, *((rbp - 0x2b8)));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"failed to clone %s from %s\");\n    *((rbp - 0x2e0)) = rax;\n    rax = errno_location ();\n    r8 = *((rbp - 0x2f8));\n    rcx = r12;\n    eax = 0;\n    error (0, *(rax), *((rbp - 0x2e0)));\n    r8d = 0;\n    *((rbp - 0x2e0)) = 0;\n    void (*0x408600)() ();\nlabel_214:\n    edx = 5;\n    rax = dcgettext (0, \"failed to preserve ownership for %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = *((rbp - 0x2b8));\n    eax = 0;\n    error (0, *(rax), r12);\n    eax = *((r13 + 0x24));\n    *((rbp - 0x321)) = al;\n    if (al != 0) {\n        void (*0x4065d0)() ();\n    }\n    r8d = *((rbp - 0x2c0));\n    *((rbp - 0x2e8)) = r8b;\n    *((rbp - 0x2e0)) = r8b;\n    r8d = 0;\n    void (*0x405c05)() ();\nlabel_206:\n    eax = *((rbp - 0x1c8));\n    eax &= 0xf000;\n    if (eax != 0xa000) {\n        goto label_87;\n    }\n    eax = *((rbp - 0x2d0));\n    rcx |= 0xffffffffffffffff;\n    rdi = r12;\n    rsi = *((rbp - 0x1b0));\n    __asm (\"repne scasb al, byte [rdi]\");\n    rcx = ~rcx;\n    rax = rcx - 1;\n    if (rsi != rax) {\n        goto label_87;\n    }\n    rax = fcn_00409e80 (*((rbp - 0x2b8)), rsi);\n    if (rax == 0) {\n        goto label_87;\n    }\n    rdi = rax;\n    *((rbp - 0x2e0)) = rax;\n    eax = strcmp (rdi, r12);\n    rdx = *((rbp - 0x2e0));\n    rdi = rdx;\n    if (eax != 0) {\n        goto label_229;\n    }\n    free (rdi);\n    goto label_65;\nlabel_180:\n    r8 = r13;\n    ecx = 1;\n    eax = fcn_00405210 (r14, *((rbp - 0x2b8)), *((rbp - 0x354)));\n    r8d = eax;\n    if (al != 0) {\n        goto label_88;\n    }\n    *((rbp - 0x2e0)) = 0;\n    void (*0x407107)() ();\nlabel_228:\n    rax = *((rbp - 0x330));\n    rax = fcn_004100e0 (rax + r12);\n    rcx = r12 - 1;\n    edx = 0;\n    rcx += rax;\n    *((rbp - 0x2e0)) = rax;\n    rax = rcx;\n    rax = rdx:rax / r12;\n    rdx = rdx:rax % r12;\n    rcx -= rdx;\n    *((rbp - 0x350)) = rcx;\n    if (*((rbp - 0x2f8)) != 0) {\n        goto label_89;\n    }\n    r9d = 0;\n    rax = rbp - 0x2a0;\n    r9b = (*((r13 + 0xc)) == 3) ? 1 : 0;\n    *((rbp - 0x2f8)) = rax;\n    goto label_90;\nlabel_179:\n    rax = fcn_0040dd80 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"removed %s\\n\");\n    rdx = r12;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    goto label_91;\nlabel_222:\n    r14 = *((rbp - 0x338));\n    r15d = *((rbp - 0x322));\n    r13 = *((rbp - 0x360));\n    ebx = *((rbp - 0x358));\n    rax = fcn_0040dd80 (4, r14);\n    edx = 5;\n    *((rbp - 0x2f8)) = rax;\nlabel_94:\n    rax = dcgettext (0, \"cannot lseek %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = *((rbp - 0x2f8));\n    eax = 0;\n    error (0, *(rax), r12);\n    goto label_92;\nlabel_178:\n    rax = fcn_0040dd80 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    *((rbp - 0x2e0)) = rax;\n    rax = dcgettext (0, \"cannot remove %s\");\n    rcx = *((rbp - 0x2e0));\n    esi = *(r12);\n    rdx = rax;\n    goto label_46;\nlabel_218:\n    *((rbp - 0x310)) = r15b;\n    r14 = *((rbp - 0x338));\n    r15d = *((rbp - 0x322));\n    r13 = *((rbp - 0x360));\n    ebx = *((rbp - 0x358));\n    if (*((rbp - 0x27f)) != 0) {\n        goto label_93;\n    }\n    if (*((rbp - 0x280)) != 0) {\n        r9d = 0;\n        eax = 0;\n        r9b = (*((r13 + 0xc)) == 3) ? 1 : 0;\n        if (*((rbp - 0x323)) != 0) {\n            rax = *((rbp - 0x340));\n        }\n        *((rbp - 0x340)) = rax;\n        goto label_90;\nlabel_224:\n        r15d = *((rbp - 0x322));\n        r14 = *((rbp - 0x338));\n        r13 = *((rbp - 0x360));\n        ebx = *((rbp - 0x358));\n        rax = fcn_0040de50 (0, 3, *((rbp - 0x2b8)));\n        edx = 5;\n        esi = \"%s: write failed\";\n        *((rbp - 0x2f8)) = rax;\n        goto label_94;\n    }\n    rax = fcn_0040de50 (0, 3, r14);\n    edx = 5;\n    esi = \"%s: failed to get extents info\";\n    *((rbp - 0x2f8)) = rax;\n    void (*0x408dc1)() ();\nlabel_226:\n    rsi -= rcx;\n    al = fcn_004048e0 (*((rbp - 0x2e8)), *((rbp - 0x368)));\n    if (al != 0) {\n        void (*0x40853f)() ();\n    }\n    void (*0x4091c4)() ();\nlabel_229:\n    free (rdi);\n    goto label_87;\nlabel_215:\n    *((rbp - 0x2e8)) = r8b;\n    rax = fcn_0040dd80 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"not writing through dangling symlink %s\");\n    rcx = r12;\n    eax = 0;\n    error (0, 0, rax);\n    eax = *((rbp - 0x320));\n    *((rbp - 0x2e0)) = 0;\n    r8d = *((rbp - 0x2e8));\n    *((rbp - 0x2d0)) = al;\n    return void (*0x407107)() ();\n}\n"
        },
        {
            "funcName": "fcn_00408517",
            "funcStartAddr": "0x408517",
            "funcEndAddr": "0x40be03",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x408517 */\n#include <stdint.h>\n \nint64_t fcn_00408517 (void) {\n    int64_t var_354h;\n    uint32_t var_348h;\n    int64_t mode;\n    uint32_t var_321h;\n    int64_t var_320h;\n    int64_t var_318h;\n    int64_t var_308h;\n    int64_t var_300h;\n    int64_t var_2f8h;\n    uint32_t var_2f0h;\n    char * var_2e8h;\n    void * ptr;\n    int64_t var_2d8h;\n    uint32_t var_2d0h;\n    int64_t var_2c8h;\n    uint32_t var_2c4h;\n    char * fildes;\n    char * newpath;\n    uint32_t var_2a8h;\n    int64_t var_2a0h;\n    int64_t var_298h;\n    int64_t var_290h;\n    int64_t var_288h;\n    int64_t var_270h;\n    int64_t var_268h;\n    uint32_t var_254h;\n    uint32_t var_250h;\n    int64_t var_228h;\n    int64_t var_220h;\n    int64_t var_218h;\n    int64_t var_210h;\n    int64_t var_1e0h;\n    int64_t var_1c8h;\n    int64_t var_1c4h;\n    int64_t var_1c0h;\n    int64_t var_c0h;\n    int64_t var_b8h;\n    int64_t var_b0h;\n    int64_t var_a8h;\n    int64_t var_a4h;\n    int64_t var_a0h;\n    int64_t var_28h;\n    do {\nlabel_0:\n        r15d = 0;\n        goto label_1;\nlabel_5:\n        r12b = (*((rbp - 0x2c4)) != 0x4000) ? 1 : 0;\n        if (*((rbp - 0x2d0)) == 0) {\n            if (*((r13 + 0x14)) == 1) {\n                goto label_24;\n            }\n            if (r12b == 0) {\n                goto label_24;\n            }\n            rax = 0xff000000ff00;\n            if ((*((r13 + 0x20)) & rax) == 0) {\n                goto label_24;\n            }\n            esi = *((r13 + 0x25));\n            edx = 0;\n            rcx = r13;\n            *((rbp - 0x2c0)) = r8b;\n            al = fcn_004052e0 (*((rbp - 0x2b8)), rsi);\n            r8d = *((rbp - 0x2c0));\n            if (al != 0) {\n                goto label_24;\n            }\n            if (*((r13 + 0x26)) != 0) {\n                goto label_6;\n            }\n        }\nlabel_24:\n        if (bl != 0) {\n            if (*((r13 + 0x38)) == 0) {\n                goto label_25;\n            }\n            rsi = *((rbp - 0x2b8));\n            rdx = rbp - 0xc0;\n            edi = 1;\n            *((rbp - 0x2c0)) = r8b;\n            eax = lxstat ();\n            r8d = *((rbp - 0x2c0));\n            if (eax != 0) {\n                goto label_25;\n            }\n            rax = fcn_0040ab60 (*((r13 + 0x38)), *((rbp - 0x2b8)), rbp - 0xc0);\n            r8d = *((rbp - 0x2c0));\n        }\nlabel_25:\n        if (*((r13 + 0x17)) != 0) {\n            if (r12b != 0) {\n                goto label_9;\n            }\n        }\n        if (r8b != 0) {\n            goto label_9;\n        }\n        if (*((r13 + 0x1f)) == 0) {\n            goto label_26;\n        }\n        rax = *((rbp - 0x228));\n        rsi = rbp - 0xc0;\n        rdi = *((rbp - 0x2b8));\n        *((rbp - 0xc0)) = rax;\n        rax = *((rbp - 0x220));\n        *((rbp - 0xb8)) = rax;\n        rax = *((rbp - 0x218));\n        *((rbp - 0xb0)) = rax;\n        rax = *((rbp - 0x210));\n        *((rbp - 0xa8)) = rax;\n        if (*((rbp - 0x2e8)) == 0) {\n            goto label_27;\n        }\n        eax = fcn_0040f8b0 (rdi, rsi, rdx, rcx);\n        if (eax == 0) {\n            goto label_26;\n        }\n        rax = errno_location ();\n        if (*(rax) == 0x26) {\n            goto label_26;\n        }\nlabel_8:\n        rax = fcn_0040dd80 (4, *((rbp - 0x2b8)));\n        edx = 5;\n        r12 = rax;\n        rax = dcgettext (0, \"preserving times for %s\");\n        rbx = rax;\n        rax = errno_location ();\n        rcx = r12;\n        eax = 0;\n        error (0, *(rax), rbx);\n    } while (*((r13 + 0x24)) != 0);\nlabel_26:\n    if (*((rbp - 0x2e8)) != 0) {\n        goto label_9;\n    }\nlabel_7:\n    if (*((r13 + 0x1d)) == 0) {\n        goto label_12;\n    }\n    if (*((rbp - 0x2d0)) == 0) {\n        eax = *((rbp - 0x1c4));\n        if (*((rbp - 0x254)) == eax) {\n            goto label_28;\n        }\n    }\nlabel_11:\n    r8d = *((rbp - 0x2d0));\n    r9 = rbp - 0x1e0;\n    eax = fcn_00405430 (r13, *((rbp - 0x2b8)), 0xffffffff, *((rbp - 0x2d8)), r8);\n    if (eax == 0xffffffff) {\n        goto label_0;\n    }\n    ebx = *((rbp - 0x2c8));\n    edx = *((rbp - 0x2c8));\n    dh &= 0xf1;\n    if (eax != 0) {\n        edx = ebx;\n    }\n    *((rbp - 0x2c8)) = edx;\nlabel_12:\n    rax = 0xff0000000000ff;\n    if ((*((r13 + 0x18)) & rax) != 0) {\n        goto label_29;\n    }\n    if (*((r13 + 0x2b)) != 0) {\n        goto label_30;\n    }\n    if (*((r13 + 0x20)) != 0) {\n        goto label_31;\n    }\n    eax = *((rbp - 0x308));\n    if (eax != 0) {\n        goto label_32;\n    }\nlabel_2:\n    if (*((rbp - 0x321)) == 0) {\n        goto label_9;\n    }\nlabel_3:\n    esi |= *((rbp - 0x308));\n    eax = chmod (*((rbp - 0x2b8)), *((rbp - 0x344)));\n    if (eax == 0) {\n        goto label_9;\n    }\n    rax = fcn_0040dd80 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"preserving permissions for %s\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = r12;\n    eax = 0;\n    error (0, *(rax), rbx);\nlabel_10:\n    eax = *((rbp - 0x2e0));\n    if (*((r13 + 0x24)) != 0) {\n        eax = r15d;\n    }\n    r15d = eax;\n    goto label_1;\nlabel_15:\n    r15d = 0;\n    rax = fcn_0040dd80 (4, rsi);\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"cannot stat %s\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = r12;\n    eax = 0;\n    error (0, *(rax), rbx);\n    do {\nlabel_1:\n        rsp = rbp - 0x28;\n        eax = r15d;\n        return rax;\nlabel_4:\n        rdi = *((rbp - 0x300));\n    } while (rdi == 0);\n    eax = rename (rdi, *((rbp - 0x2b8)));\n    if (eax != 0) {\n        goto label_33;\n    }\n    if (*((r13 + 0x2e)) == 0) {\n        goto label_1;\n    }\n    rax = fcn_0040dca0 (1, 4, *((rbp - 0x2b8)));\n    r12 = rax;\n    rax = fcn_0040dca0 (0, 4, *((rbp - 0x300)));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"%s -> %s (unbackup)\\n\");\n    rcx = r12;\n    rdx = rbx;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    goto label_1;\nlabel_32:\n    eax = fcn_00405620 ();\n    eax = ~eax;\n    *((rbp - 0x308)) &= eax;\n    if (*((rbp - 0x308)) == 0) {\n        goto label_2;\n    }\n    if (*((rbp - 0x321)) == 1) {\n        goto label_3;\n    }\n    if (*((rbp - 0x2d0)) != 0) {\n        goto label_34;\n    }\nlabel_14:\n    eax = *((rbp - 0x1c8));\n    *((rbp - 0x344)) = eax;\n    eax = ~eax;\n    if ((*((rbp - 0x308)) & eax) != 0) {\n        goto label_3;\n    }\nlabel_9:\n    r15d = *((rbp - 0x2e0));\n    goto label_1;\nlabel_6:\n    if (*((r13 + 0x25)) != 0) {\n        goto label_35;\n    }\n    if (*((rbp - 0x2f0)) != 0) {\n        goto label_4;\n    }\n    rax = fcn_00409640 (*((rbp - 0x268)), *((rbp - 0x270)));\n    goto label_4;\n    do {\n        rcx = rbx;\n        eax = 0;\n        r15d = 0;\n        error (0, 0, rax);\n        goto label_1;\nlabel_35:\n        fcn_004049f0 ();\n        dcgettext (0, \"-r not specified; omitting directory %s\");\n    } while (1);\nlabel_33:\n    rax = fcn_0040dd80 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"cannot un-backup %s\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = r12;\n    eax = 0;\n    error (0, *(rax), rbx);\n    goto label_1;\nlabel_13:\n    *((rbp - 0x2e8)) = r8b;\n    eax = close (*((rbp - 0x2c0)));\n    r8d = *((rbp - 0x2e8));\n    if (eax < 0) {\n        goto label_36;\n    }\n    *((rbp - 0x2c0)) = r8b;\n    free (*((rbp - 0x2e0)));\n    r8d = *((rbp - 0x2c0));\n    *((rbp - 0x2e8)) = 0;\n    *((rbp - 0x2e0)) = r8b;\n    if (r8b != 0) {\n        goto label_5;\n    }\n    goto label_6;\nlabel_27:\n    eax = fcn_0040f8a0 (rdi, rsi, rdx, rcx);\n    if (eax == 0) {\n        goto label_7;\n    }\n    goto label_8;\nlabel_29:\n    ecx = 0xffffffff;\n    r8d = *((rbp - 0x2c8));\n    rdx = *((rbp - 0x2b8));\n    eax = fcn_00409d90 (r14, ecx);\n    if (eax == 0) {\n        goto label_9;\n    }\n    goto label_10;\nlabel_30:\n    do {\n        eax = fcn_00409e20 (*((rbp - 0x2b8)), 0xffffffff, *((r13 + 0x10)));\n        eax = *((rbp - 0x2e0));\n        if (eax != 0) {\n            eax = r15d;\n        }\n        r15d = eax;\n        goto label_1;\nlabel_31:\n        eax = fcn_00405620 ();\n        eax = ~eax;\n        edx = eax;\n        edx &= 0x1ff;\n    } while (1);\nlabel_36:\n    rax = fcn_0040dd80 (4, r14);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"failed to close %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    error (0, *(rax), r12);\n    free (*((rbp - 0x2e0)));\n    goto label_6;\nlabel_28:\n    eax = *((rbp - 0x1c0));\n    if (*((rbp - 0x250)) != eax) {\n        goto label_11;\n    }\n    goto label_12;\n    al = fcn_00404de0 (rdi, rsi, rdx, rcx, r8, r9);\n    if (al == 0) {\n        goto label_18;\n    }\n    if (*((rbp - 0x2a8)) != 0) {\n        goto label_37;\n    }\nlabel_20:\n    if (*((r13 + 0x1f)) != 0) {\n        goto label_38;\n    }\nlabel_16:\n    if (*((r13 + 0x1d)) != 0) {\n        eax = *((rbp - 0xa4));\n        if (*((rbp - 0x254)) == eax) {\n            eax = *((rbp - 0xa0));\n            if (*((rbp - 0x250)) == eax) {\n                goto label_39;\n            }\n        }\n        r9 = *((rbp - 0x320));\n        r8d = *((rbp - 0x2d0));\n        eax = fcn_00405430 (r13, *((rbp - 0x2b8)), *((rbp - 0x2e8)), *((rbp - 0x2d8)), r8);\n        if (eax == 0xffffffff) {\n            goto label_18;\n        }\n        if (eax != 0) {\n            goto label_39;\n        }\n        *((rbp - 0x318)) &= 0xfffff1ff;\n    }\nlabel_39:\n    if (*((r13 + 0x27)) != 0) {\n        if ((*((rbp - 0xa8)) & 0x80) == 0) {\n            goto label_40;\n        }\n    }\nlabel_19:\n    rax = 0xff0000000000ff;\n    if ((*((r13 + 0x18)) & rax) != 0) {\n        goto label_41;\n    }\n    if (*((r13 + 0x2b)) != 0) {\n        goto label_42;\n    }\n    if (*((r13 + 0x20)) != 0) {\n        goto label_43;\n    }\n    r8d = 1;\n    if (*((rbp - 0x348)) != 0) {\n        goto label_44;\n    }\nlabel_17:\n    *((rbp - 0x2f8)) = r8b;\n    eax = close (*((rbp - 0x2e8)));\n    r8d = *((rbp - 0x2f8));\n    if (eax >= 0) {\n        goto label_13;\n    }\n    rax = fcn_0040dd80 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    *((rbp - 0x2e8)) = rax;\n    rax = dcgettext (0, \"failed to close %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = *((rbp - 0x2e8));\n    eax = 0;\n    error (0, *(rax), r12);\n    r8d = 0;\n    goto label_13;\nlabel_34:\n    rsi = *((rbp - 0x2b8));\n    rdx = rbp - 0x1e0;\n    edi = 1;\n    eax = lxstat ();\n    if (eax == 0) {\n        goto label_14;\n    }\n    rsi = *((rbp - 0x2b8));\n    goto label_15;\nlabel_38:\n    rax = *((rbp - 0x228));\n    *((rbp - 0x2a0)) = rax;\n    rax = *((rbp - 0x220));\n    *((rbp - 0x298)) = rax;\n    rax = *((rbp - 0x218));\n    *((rbp - 0x290)) = rax;\n    rax = *((rbp - 0x210));\n    *((rbp - 0x288)) = rax;\n    eax = fcn_0040f460 (*((rbp - 0x2e8)), *((rbp - 0x2b8)), rbp - 0x2a0, rcx, r8);\n    if (eax == 0) {\n        goto label_16;\n    }\n    rax = fcn_0040dd80 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    *((rbp - 0x2f8)) = rax;\n    rax = dcgettext (0, \"preserving times for %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = *((rbp - 0x2f8));\n    eax = 0;\n    error (0, *(rax), r12);\n    if (*((r13 + 0x24)) == 0) {\n        goto label_16;\n    }\nlabel_18:\n    r8d = 0;\n    goto label_17;\nlabel_41:\n    r8d = *((rbp - 0x318));\n    ecx = *((rbp - 0x2e8));\n    rdx = *((rbp - 0x2b8));\n    eax = fcn_00409d90 (r14, *((rbp - 0x2c0)));\n    r8d = 1;\n    if (eax == 0) {\n        goto label_17;\n    }\nlabel_22:\n    r8d = *((r13 + 0x24));\n    r8d ^= 1;\n    goto label_17;\nlabel_21:\n    rax = dcgettext (0, rsi);\n    r12 = rax;\n    rax = errno_location ();\n    rcx = *((rbp - 0x2f8));\n    eax = 0;\n    error (0, *(rax), r12);\n    goto label_18;\nlabel_42:\nlabel_23:\n    eax = fcn_00409e20 (*((rbp - 0x2b8)), *((rbp - 0x2e8)), *((r13 + 0x10)));\n    r8b = (eax == 0) ? 1 : 0;\n    goto label_17;\nlabel_40:\n    eax = geteuid ();\n    if (eax == 0) {\n        goto label_19;\n    }\n    eax = fcn_004049d0 (*((rbp - 0x2e8)), *((rbp - 0x2b8)), 0x180);\n    if (eax != 0) {\n        goto label_19;\n    }\n    edx = ~edx;\n    edx &= *((rbp - 0x354));\n    fcn_004049d0 (*((rbp - 0x2e8)), *((rbp - 0x2b8)), *((rbp - 0x348)));\n    goto label_19;\nlabel_37:\n    rsi = *((rbp - 0x2a0));\n    edi = *((rbp - 0x2e8));\n    eax = ftruncate ();\n    if (eax >= 0) {\n        goto label_20;\n    }\n    rax = fcn_0040dd80 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    esi = \"failed to extend %s\";\n    *((rbp - 0x2f8)) = rax;\n    goto label_21;\nlabel_44:\n    *((rbp - 0x2f8)) = r8b;\n    eax = fcn_00405620 ();\n    r8d = *((rbp - 0x2f8));\n    eax = ~eax;\n    if ((*((rbp - 0x348)) & eax) == 0) {\n        goto label_17;\n    }\n    eax = fcn_004049d0 (*((rbp - 0x2e8)), *((rbp - 0x2b8)), *((rbp - 0x354)));\n    r8d = *((rbp - 0x2f8));\n    if (eax == 0) {\n        goto label_17;\n    }\n    rax = fcn_0040dd80 (4, *((rbp - 0x2b8)));\n    edx = 5;\n    *((rbp - 0x2f8)) = rax;\n    rax = dcgettext (0, \"preserving permissions for %s\");\n    r12 = rax;\n    rax = errno_location ();\n    rcx = *((rbp - 0x2f8));\n    eax = 0;\n    error (0, *(rax), r12);\n    goto label_22;\nlabel_43:\n    eax = fcn_00405620 ();\n    eax = ~eax;\n    edx = eax;\n    edx &= 0x1b6;\n    goto label_23;\n}\n"
        },
        {
            "funcName": "fcn_004094d0",
            "funcStartAddr": "0x4094d0",
            "funcEndAddr": "0x4095ec",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4094d0 */\n#include <stdint.h>\n \nuint64_t fcn_004094d0 (int64_t arg1, int64_t arg2, uint32_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_fh;\n    rdi = arg1;\n    rsi = arg2;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    if (rcx == 0) {\n        goto label_0;\n    }\n    if (*(rcx) > 3) {\n        goto label_1;\n    }\n    eax = *((rcx + 0xc));\n    r10d = rax - 1;\n    if (r10d > 2) {\n        goto label_2;\n    }\n    r10d = *((rcx + 0x34));\n    if (r10d > 2) {\n        goto label_3;\n    }\n    while (*((rcx + 0x2c)) == 0) {\n        if (eax != 2) {\n            if (r10d == 2) {\n                goto label_4;\n            }\n        }\n        *((rsp + 0xf)) = 0;\n        edx = (int32_t) dl;\n        *(0x0061d910) = rdi;\n        *(0x0061d908) = rsi;\n        rax = rsp + 0x1f;\n        fcn_00405650 (rdi, rsi, rdx, 0, 0, rcx);\n        return rax;\n    }\n    assert_fail (\"!(co->hard_link && co->symbolic_link)\", \"src/copy.c\", 0xb64, \"valid_options\");\nlabel_4:\n    assert_fail (\"! (co->reflink_mode == REFLINK_ALWAYS && co->sparse_mode != SPARSE_AUTO)\", \"src/copy.c\", 0xb67, \"valid_options\");\nlabel_3:\n    assert_fail (\"VALID_REFLINK_MODE (co->reflink_mode)\", \"src/copy.c\", 0xb63, \"valid_options\");\nlabel_0:\n    assert_fail (\"co != NULL\", \"src/copy.c\", 0xb60, \"valid_options\");\nlabel_2:\n    assert_fail (\"VALID_SPARSE_MODE (co->sparse_mode)\", \"src/copy.c\", 0xb62, \"valid_options\");\nlabel_1:\n    return assert_fail (\"VALID_BACKUP_TYPE (co->backup_type)\", \"src/copy.c\", 0xb61, \"valid_options\");\n}\n"
        },
        {
            "funcName": "fcn_00409640",
            "funcStartAddr": "0x409640",
            "funcEndAddr": "0x409685",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x409640 */\n#include <stdint.h>\n \nuint64_t fcn_00409640 (uint32_t arg1, uint32_t arg2) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    rdi = arg1;\n    rsi = arg2;\n    *(rsp) = rdi;\n    *((rsp + 8)) = rsi;\n    rsi = rsp;\n    *((rsp + 0x10)) = 0;\n    rax = fcn_0040c0a0 (*(0x0061d918));\n    if (rax != 0) {\n        rbx = rax;\n        free (*((rax + 0x10)));\n        free (rbx);\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00409690",
            "funcStartAddr": "0x409690",
            "funcEndAddr": "0x4096c7",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x409690 */\n#include <stdint.h>\n \nuint64_t fcn_00409690 (uint32_t arg1, uint32_t arg2) {\n    uint32_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    *(rsp) = rdi;\n    *((rsp + 8)) = rsi;\n    rax = fcn_0040b650 (*(0x0061d918), rsp);\n    if (rax != 0) {\n        rax = *((rax + 0x10));\n        return rax;\n    }\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004096d0",
            "funcStartAddr": "0x4096d0",
            "funcEndAddr": "0x409746",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4096d0 */\n#include <stdint.h>\n \nuint64_t fcn_004096d0 (char * arg1, uint32_t arg2, uint32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13 = rdi;\n    r12 = rsi;\n    rax = fcn_004100e0 (0x18);\n    rbx = rax;\n    rax = fcn_00410310 (r13);\n    rsi = rbx;\n    *(rbx) = r12;\n    *((rbx + 0x10)) = rax;\n    *((rbx + 8)) = rbp;\n    rax = fcn_0040c060 (*(0x0061d918));\n    if (rax != 0) {\n        eax = 0;\n        if (rbx != rbp) {\n            free (*((rbx + 0x10)));\n            free (rbx);\n            rax = *((rbp + 0x10));\n        }\n        return rax;\n    }\n    return fcn_00410330 ();\n}\n"
        },
        {
            "funcName": "fcn_00409750",
            "funcStartAddr": "0x409750",
            "funcEndAddr": "0x409786",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x409750 */\n#include <stdint.h>\n \nuint64_t fcn_00409750 (void) {\n    rax = fcn_0040b8c0 (0x67, 0, 0x4095f0, 0x409600, 0x409620);\n    *(0x0061d918) = rax;\n    if (rax != 0) {\n        return rax;\n    }\n    return fcn_00410330 ();\n}\n"
        },
        {
            "funcName": "fcn_004097a0",
            "funcStartAddr": "0x4097a0",
            "funcEndAddr": "0x4097c8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4097a0 */\n#include <stdint.h>\n \nint32_t fcn_004097a0 (char *** arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    eax = 0;\n    *(rsi) = edi;\n    *((rsi + 0x28)) = 0;\n    *((rsi + 8)) = 0;\n    *((rsi + 0x18)) = 0;\n    *((rsi + 0x20)) = ax;\n    *((rsi + 0x10)) = 1;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_004097d0",
            "funcStartAddr": "0x4097d0",
            "funcEndAddr": "0x409a95",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4097d0 */\n#include <stdint.h>\n \nint64_t fcn_004097d0 (uint32_t arg1) {\n    int64_t var_20h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_14h;\n    int64_t var_18h;\n    int64_t var_30h;\n    rdi = arg1;\n    r15 = 0x7fffffffffffffff;\n    r13d = 0;\n    r12 = rdi;\n    rbx = *((rdi + 0x28));\n    rdx = *((rdi + 8));\n    r14 = rbp + 0x20;\nlabel_6:\n    eax = 0;\n    ecx = 0x200;\n    rdi = rbp;\n    esi = 0xc020660b;\n    do {\n        *(rdi) = rax;\n        rcx--;\n        rdi += 8;\n    } while (rcx != 0);\n    eax = *((r12 + 0x10));\n    *(rsp) = rdx;\n    rdx = ~rdx;\n    *((rsp + 0x18)) = 0x48;\n    *((rsp + 0x10)) = eax;\n    eax = 0;\n    *((rsp + 8)) = rdx;\n    rdx = rbp;\n    eax = ioctl (*(r12), rsi);\n    if (eax < 0) {\n        goto label_7;\n    }\n    eax = *((rsp + 0x14));\n    if (eax == 0) {\n        goto label_8;\n    }\n    rdx = rax;\n    rcx = *((r12 + 0x18));\n    rdx = ~rdx;\n    if (rcx > rdx) {\n        goto label_9;\n    }\n    edx = 0x18;\n    rdi = *((r12 + 0x28));\n    rcx += rax;\n    rax = rdx;\n    *((r12 + 0x18)) = rcx;\n    rbx -= rdi;\n    rdx:rax = rax * rcx;\n    __asm (\"seto dl\");\n    edx = (int32_t) dl;\n    if (rax < 0) {\n        goto label_10;\n    }\n    if (rdx != 0) {\n        goto label_10;\n    }\n    rsi <<= 3;\n    rax = fcn_00410140 (rdi, rcx + rcx*2);\n    r8d = *((rsp + 0x14));\n    *((r12 + 0x28)) = rax;\n    rbx += rax;\n    if (r8d == 0) {\n        goto label_11;\n    }\n    rax = *((rsp + 0x30));\n    rcx = r15;\n    rdx = *((rsp + 0x20));\n    rcx -= rax;\n    if (rdx > rcx) {\n        goto label_12;\n    }\n    edi = 0;\n    rcx = r14;\n    do {\n        if (r13d == 0) {\n            goto label_13;\n        }\n        r9d = *((rcx + 0x28));\n        r10 = *((rbx + 8));\n        rsi = *(rbx);\n        r11d = r9d;\n        rsi += r10;\n        r11d &= 0xfffffffe;\n        if (*((rbx + 0x10)) == r11d) {\n            goto label_14;\n        }\nlabel_3:\n        if (rsi <= rdx) {\n            goto label_15;\n        }\nlabel_0:\n        r9 = rsi;\n        r9 -= rdx;\n        if (r9 < rax) {\n            goto label_7;\n        }\n        rdx += rax;\n        *(rcx) = rsi;\n        rdx -= rsi;\n        *((rcx + 0x10)) = rdx;\nlabel_4:\n        if (edi >= r8d) {\n            goto label_11;\n        }\nlabel_1:\n        edx = edi;\n        rsi = r15;\n        rax = rdx*8;\n        rax -= rdx;\n        rcx = r14 + rax*8;\n        rax = *((rcx + 0x10));\n        rdx = *(rcx);\n        rsi -= rax;\n    } while (rdx <= rsi);\nlabel_12:\n    rax = assert_fail (\"fm_extents[i].fe_logical <= OFF_T_MAX - fm_extents[i].fe_length\", \"src/extent-scan.c\", 0x8d, \"extent_scan_read\");\nlabel_13:\n    rsi = *((r12 + 8));\n    if (rsi > rdx) {\n        goto label_0;\n    }\n    r9d = *((rcx + 0x28));\nlabel_15:\n    ecx = r13d;\n    edi++;\n    r13d++;\n    rsi = rcx * 3;\n    rcx = *((r12 + 0x28));\n    rbx = rcx + rsi*8;\n    *(rbx) = rdx;\n    *((rbx + 8)) = rax;\n    *((rbx + 0x10)) = r9d;\n    if (edi < r8d) {\n        goto label_1;\n    }\nlabel_11:\n    if ((*((rbx + 0x10)) & 1) != 0) {\n        goto label_16;\n    }\n    eax = *((r12 + 0x21));\n    if (r13d <= 0x48) {\n        goto label_17;\n    }\n    if (al != 0) {\n        goto label_18;\n    }\n    eax = r13 - 1;\n    rdx = *((r12 + 0x28));\n    rcx = rax * 3;\n    *((r12 + 0x18)) = rax;\n    rax = *((rdx + rcx*8 - 0x10));\n    rax += *((rdx + rcx*8 - 0x18));\n    *((r12 + 8)) = rax;\nlabel_5:\n    eax = 1;\n    do {\nlabel_2:\n        return rax;\nlabel_7:\n        eax = 0;\n    } while (*((r12 + 8)) != 0);\n    *((r12 + 0x20)) = 1;\n    eax = 0;\n    goto label_2;\nlabel_14:\n    if (rdx != rsi) {\n        goto label_3;\n    }\n    rax += r10;\n    *((rbx + 0x10)) = r9d;\n    edi++;\n    *((rbx + 8)) = rax;\n    goto label_4;\nlabel_17:\n    edi = r13d;\n    *((r12 + 0x18)) = rdi;\n    if (al != 0) {\n        goto label_5;\n    }\n    rdx = *((rbx + 8));\n    rdx += *(rbx);\n    *((r12 + 8)) = rdx;\n    if (r13d != 0x48) {\n        goto label_6;\n    }\n    goto label_5;\nlabel_16:\n    *((r12 + 0x21)) = 1;\nlabel_18:\n    eax = r13d;\n    *((r12 + 0x18)) = rax;\n    goto label_5;\nlabel_8:\n    *((r12 + 0x21)) = 1;\n    al = (*((r12 + 8)) != 0) ? 1 : 0;\n    goto label_2;\nlabel_10:\n    fcn_00410330 ();\nlabel_9:\n    return assert_fail (\"scan->ei_count <= SIZE_MAX - fiemap->fm_mapped_extents\", \"src/extent-scan.c\", 0x7e, \"extent_scan_read\");\n}\n"
        },
        {
            "funcName": "fcn_00409ac0",
            "funcStartAddr": "0x409ac0",
            "funcEndAddr": "0x409b24",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x409ac0 */\n#include <stdint.h>\n \nuint64_t fcn_00409ac0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r12 = rdi;\n    rbx = rsi;\n    rax = fcn_0040aa00 (rdi);\n    rax -= r12;\n    rdi = rax + 9;\n    if (rdi > 0x100) {\n        rax = malloc (rdi);\n        rbx = rax;\n        if (rax == 0) {\n            goto label_0;\n        }\n    }\n    rdx = rbp;\n    rsi = r12;\n    rdi = rbx;\n    mempcpy ();\n    rdx = \"CuXXXXXX\";\n    *(rax) = rdx;\n    edx = *(0x00416d30);\n    *((rax + 8)) = dl;\n    rax = rbx;\n    do {\n        return rax;\nlabel_0:\n        eax = 0;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00409b50",
            "funcStartAddr": "0x409b50",
            "funcEndAddr": "0x409c85",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x409b50 */\n#include <stdint.h>\n \nuint64_t fcn_00409b50 (int64_t arg1, char * arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_24h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r15d = edi;\n    r14 = rsi;\n    r13d = r8d;\n    r12 = rcx;\n    *((rsp + 8)) = r9d;\n    eax = linkat ();\n    r9d = *((rsp + 8));\n    ebx = eax;\n    if (r9b != 1) {\n        goto label_0;\n    }\n    if (eax == 0) {\n        goto label_0;\n    }\n    rax = errno_location ();\n    while (r12d == 0) {\nlabel_0:\n        eax = ebx;\n        return rax;\n        *((rsp + 8)) = rax;\n        rax = fcn_00409ac0 (r12, rsp + 0x30);\n        rbx = rax;\n        if (rax == 0) {\n            goto label_2;\n        }\n        *((rsp + 0x10)) = r15d;\n        *((rsp + 0x18)) = r14;\n        *((rsp + 0x20)) = ebp;\n        *((rsp + 0x24)) = r13d;\n        eax = fcn_0040e910 (rax, 0, rsp + 0x10, 0x409aa0, 6);\n        r9 = *((rsp + 8));\n        if (eax == 0) {\n            goto label_3;\n        }\n        r12d = *(r9);\nlabel_1:\n        rax = rsp + 0x30;\n        if (rbx != rax) {\n            *((rsp + 8)) = r9;\n            free (rbx);\n            r9 = *((rsp + 8));\n        }\n        ebx = 1;\n    }\n    *(r9) = r12d;\n    ebx = 0xffffffff;\n    goto label_0;\nlabel_3:\n    rcx = r12;\n    edx = ebp;\n    rsi = rbx;\n    edi = ebp;\n    *((rsp + 8)) = r9;\n    eax = renameat ();\n    r9 = *((rsp + 8));\n    r12d = eax;\n    if (eax != 0) {\n        r12d = *(r9);\n    }\n    edx = 0;\n    rsi = rbx;\n    edi = ebp;\n    *((rsp + 8)) = r9;\n    unlinkat ();\n    r9 = *((rsp + 8));\n    goto label_1;\nlabel_2:\n    ebx = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00409c90",
            "funcStartAddr": "0x409c90",
            "funcEndAddr": "0x409d90",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x409c90 */\n#include <stdint.h>\n \nuint64_t fcn_00409c90 (int64_t arg1, int64_t arg2, char * arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_10h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r14d = ecx;\n    r13 = rdi;\n    r12 = rdx;\n    eax = symlinkat ();\n    ebx = eax;\n    if (r14b != 1) {\n        goto label_2;\n    }\n    if (eax == 0) {\n        goto label_2;\n    }\n    rax = errno_location ();\n    r14 = rax;\n    while (1) {\nlabel_2:\n        eax = ebx;\n        return rax;\n        r15 = rsp + 0x10;\n        rax = fcn_00409ac0 (r12, r15);\n        rbx = rax;\n        if (rax == 0) {\n            goto label_3;\n        }\n        *(rsp) = r13;\n        *((rsp + 8)) = ebp;\n        eax = fcn_0040e910 (rax, 0, rsp, 0x409b30, 6);\n        if (eax == 0) {\n            goto label_4;\n        }\n        r12d = *(r14);\nlabel_1:\n        if (rbx != r15) {\n            free (rbx);\n        }\n        if (r12d != 0) {\n            goto label_5;\n        }\nlabel_0:\n        ebx = 1;\n    }\nlabel_4:\n    rcx = r12;\n    edx = ebp;\n    rsi = rbx;\n    edi = ebp;\n    eax = renameat ();\n    if (eax != 0) {\n        goto label_6;\n    }\n    if (rbx == r15) {\n        goto label_0;\n    }\n    free (rbx);\n    goto label_0;\nlabel_6:\n    edx = 0;\n    rsi = rbx;\n    edi = ebp;\n    r12d = *(r14);\n    unlinkat ();\n    goto label_1;\nlabel_5:\n    *(r14) = r12d;\n    ebx = 0xffffffff;\n    goto label_2;\nlabel_3:\n    ebx = 0xffffffff;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_00409d90",
            "funcStartAddr": "0x409d90",
            "funcEndAddr": "0x409e1a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x409d90 */\n#include <stdint.h>\n \nuint64_t fcn_00409d90 (int64_t arg1, int64_t arg3) {\n    rdi = arg1;\n    rdx = arg3;\n    r12 = rdi;\n    eax = fcn_0040c3f0 (rdi, rsi, rdx);\n    ebx = eax;\n    if (eax != 0xfffffffe) {\n        if (eax == 0xffffffff) {\n            rax = fcn_0040dfd0 (rbp);\n            edx = 5;\n            r12 = rax;\n            rax = dcgettext (0, \"preserving permissions for %s\");\n            rax = errno_location ();\n            rcx = r12;\n            eax = 0;\n            error (0, *(rax), rbp);\n        }\n        eax = ebx;\n        return rax;\n    }\n    rax = fcn_0040dfd0 (r12);\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    error (0, *(rax), 0x418333);\n    eax = ebx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00409e20",
            "funcStartAddr": "0x409e20",
            "funcEndAddr": "0x409e7c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x409e20 */\n#include <stdint.h>\n \nuint64_t fcn_00409e20 (char * arg1, uint32_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    eax = fcn_0040c430 (rdi, rsi, rdx);\n    ebx = eax;\n    if (eax == 0) {\n        eax = ebx;\n        return eax;\n    }\n    rax = fcn_0040dfd0 (rbp);\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"setting permissions for %s\");\n    rax = errno_location ();\n    rcx = r12;\n    eax = 0;\n    error (0, *(rax), rbp);\n    eax = ebx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00409e80",
            "funcStartAddr": "0x409e80",
            "funcEndAddr": "0x409f6f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x409e80 */\n#include <stdint.h>\n \nuint64_t fcn_00409e80 (char * arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    eax = 0x401;\n    r15 = 0x7ffffffffffffffe;\n    r14 = 0x3fffffffffffffff;\n    r13 = rdi;\n    rbx = rsi + 1;\n    if (rsi >= 0x401) {\n        rbx = rax;\n    }\nlabel_0:\n    rax = malloc (rbx);\n    if (rax == 0) {\n        goto label_2;\n    }\n    do {\n        rdx = rbx;\n        rsi = rax;\n        rdi = r13;\n        rax = readlink ();\n        r12 = rax;\n        if (rax < 0) {\n            goto label_3;\n        }\nlabel_1:\n        if (rbx > r12) {\n            goto label_4;\n        }\n        free (rbp);\n        if (rbx > r14) {\n            goto label_5;\n        }\n        rbx += rbx;\n        rax = malloc (rbx);\n    } while (rax != 0);\nlabel_2:\n    rax = rbp;\n    return rax;\nlabel_5:\n    if (rbx > r15) {\n        goto label_6;\n    }\n    rbx = 0x7fffffffffffffff;\n    goto label_0;\nlabel_3:\n    rax = errno_location ();\n    if (*(rax) == 0x22) {\n        goto label_1;\n    }\n    ebp = 0;\n    free (rbp);\n    goto label_2;\nlabel_4:\n    *((rbp + r12)) = 0;\n    goto label_2;\nlabel_6:\n    errno_location ();\n    ebp = 0;\n    *(rax) = 0xc;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_00409f70",
            "funcStartAddr": "0x409f70",
            "funcEndAddr": "0x40a03e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x409f70 */\n#include <stdint.h>\n \nuint64_t fcn_00409f70 (int64_t arg1, void ** arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r13 = rsi;\n    rbx = rdi;\n    rax = fcn_0040aa00 (rdi);\n    rdi = rax;\n    rax = fcn_0040aa60 (rdi);\n    while (r12 <= rdx) {\n        return rax;\n        esi = 0x2e;\n        r14d = *(rbp);\n        r12 = rax;\n        *(rbp) = si;\n        errno_location ();\n        esi = 3;\n        rdi = rbx;\n        *(rax) = 0;\n        r15 = rax;\n        rax = pathconf ();\n        if (rax < 0) {\n            goto label_2;\n        }\nlabel_1:\n        rdx = rax;\nlabel_0:\n        *(rbp) = r14w;\n    }\n    rsi = rbx + r13;\n    rax = rsi;\n    rax -= rbp;\n    if (rax >= rdx) {\n        goto label_3;\n    }\n    rdx = rax + 1;\n    do {\n        *(rsi) = 0x7e;\n        *((rbp + rdx)) = 0;\n        return rax;\nlabel_3:\n        rsi = rbp + rdx - 1;\n    } while (1);\nlabel_2:\n    ecx = *(r15);\n    edx = 0xff;\n    if (ecx != 0) {\n        goto label_0;\n    }\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040a040",
            "funcStartAddr": "0x40a040",
            "funcEndAddr": "0x40a094",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40a040 */\n#include <stdint.h>\n \nuint64_t fcn_0040a040 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    if (rdi == 0) {\n        goto label_2;\n    }\nlabel_1:\n    while (rax != rbx) {\nlabel_0:\n        ebx = 0x416d36;\n        *(0x0061d920) = rbx;\n        return;\n        rax = fcn_0040aa00 (rbx);\n    }\n    *(0x0061d920) = rbx;\n    return rax;\nlabel_2:\n    rax = getenv (\"SIMPLE_BACKUP_SUFFIX\");\n    rbx = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040a0a0",
            "funcStartAddr": "0x40a0a0",
            "funcEndAddr": "0x40a561",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40a0a0 */\n#include <stdint.h>\n \nuint64_t fcn_0040a0a0 (void * arg1, uint32_t arg2) {\n    void ** s1;\n    void * s2;\n    int64_t var_18h;\n    int64_t var_20h;\n    size_t size;\n    uint32_t var_30h;\n    size_t n;\n    uint32_t var_40h;\n    uint32_t var_47h;\n    int64_t var_48h;\n    int64_t var_50h;\n    size_t * var_58h;\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rdi;\n    *((rsp + 0x10)) = rdi;\n    *((rsp + 0x40)) = esi;\n    *((rsp + 0x47)) = dl;\n    rax = fcn_0040aa00 (rdi);\n    r14 = rax;\n    rax = strlen (rax);\n    r14 -= rbx;\n    rdi = imp.__libc_start_main;\n    rax += r14;\n    *((rsp + 8)) = rax;\n    if (rdi == 0) {\n        goto label_11;\n    }\nlabel_10:\n    rax = strlen (rdi);\n    rsi = *((rsp + 8));\n    rax++;\n    rbx = rsi + 1;\n    *((rsp + 0x58)) = rax;\n    rsi = rax;\n    eax = 9;\n    *((rsp + 0x38)) = rbx;\n    if (rax >= 9) {\n        rax = rsi;\n    }\n    rax += rbx;\n    rdi = rax;\n    *((rsp + 0x48)) = rax;\n    rax = malloc (rdi);\n    r15 = rax;\n    if (rax == 0) {\n        goto label_9;\n    }\n    r12d = 0;\nlabel_2:\n    memcpy (r15, *((rsp + 0x10)), *((rsp + 0x38)));\n    if (*((rsp + 0x40)) == 1) {\n        goto label_12;\n    }\n    rbx = r15 + r14;\n    rax = fcn_0040aa60 (rbx);\n    r13 = rax;\n    if (r12 == 0) {\n        goto label_13;\n    }\n    rdi = r12;\n    rewinddir ();\nlabel_5:\n    rax = *((rsp + 0x48));\n    *((rsp + 0x20)) = 1;\n    *((rsp + 0x28)) = rax;\n    rax = r13 + 4;\n    *((rsp + 0x30)) = rax;\n    do {\nlabel_0:\n        rdi = r12;\n        rax = readdir ();\n        if (rax == 0) {\n            goto label_8;\n        }\nlabel_1:\n        rbx = rax + 0x13;\n        rax = strlen (rbx);\n    } while (rax < *((rsp + 0x30)));\n    rcx = r13 + 2;\n    rdx = rcx;\n    *((rsp + 0x18)) = rcx;\n    eax = memcmp (r15 + r14, rbx, rdx);\n    if (eax != 0) {\n        goto label_0;\n    }\n    rcx = *((rsp + 0x18));\n    rbx += rcx;\n    eax = *(rbx);\n    edx = rax - 0x31;\n    if (dl > 8) {\n        goto label_0;\n    }\n    edx = *((rbx + 1));\n    ecx = 1;\n    r8b = (al == 0x39) ? 1 : 0;\n    eax = edx;\n    edx -= 0x30;\n    if (edx > 9) {\n        goto label_14;\n    }\n    do {\n        al = (al == 0x39) ? 1 : 0;\n        rcx++;\n        edx = *((rbx + rcx));\n        r8d &= eax;\n        eax = edx;\n        edx -= 0x30;\n    } while (edx <= 9);\nlabel_14:\n    if (al != 0x7e) {\n        goto label_0;\n    }\n    if (*((rbx + rcx + 1)) != 0) {\n        goto label_0;\n    }\n    rdx = *((rsp + 0x20));\n    if (rdx < rcx) {\n        goto label_15;\n    }\n    *((rsp + 0x50)) = rcx;\n    *((rsp + 0x18)) = r8b;\n    if (rdx != rcx) {\n        goto label_0;\n    }\n    rax = *((rsp + 8));\n    eax = memcmp (r15 + rax + 2, rbx, rdx);\n    r8d = *((rsp + 0x18));\n    rcx = *((rsp + 0x50));\n    if (eax > 0) {\n        goto label_0;\n    }\nlabel_15:\n    edx = (int32_t) r8b;\n    rsi = *((rsp + 8));\n    ebp = (int32_t) r8b;\n    rax = rdx + rcx;\n    *((rsp + 0x20)) = rax;\n    rax = rsi + rax + 4;\n    if (rax <= *((rsp + 0x28))) {\n        goto label_16;\n    }\n    esi = 0;\n    rdi = rax;\n    __asm (\"sets sil\");\n    rdi += rdi;\n    if (rdi < 0) {\n        goto label_17;\n    }\n    if (rsi != 0) {\n        goto label_17;\n    }\n    *((rsp + 0x28)) = rdi;\nlabel_6:\n    *((rsp + 0x50)) = rdx;\n    *((rsp + 0x18)) = rcx;\n    rax = realloc (r15, *((rsp + 0x28)));\n    rcx = *((rsp + 0x18));\n    rdx = *((rsp + 0x50));\n    r8 = rax;\n    if (rax == 0) {\n        goto label_18;\n    }\nlabel_7:\n    rax = *((rsp + 8));\n    esi = 0x7e2e;\n    *((rsp + 0x50)) = r8;\n    *((rsp + 0x18)) = rcx;\n    rax += r8;\n    *(rax) = si;\n    r9 = rax + rdx + 2;\n    *((rax + 2)) = 0x30;\n    rax = memcpy (r9, rbx, rcx + 2);\n    rcx = *((rsp + 0x18));\n    r8 = *((rsp + 0x50));\n    rcx += rax;\n    edx = *((rcx - 1));\n    rax = rcx - 1;\n    if (dl != 0x39) {\n        goto label_19;\n    }\n    do {\n        *(rax) = 0x30;\n        rax--;\n        edx = *(rax);\n    } while (dl == 0x39);\nlabel_19:\n    edx++;\n    rdi = r12;\n    r15 = r8;\n    *(rax) = dl;\n    rax = readdir ();\n    if (rax != 0) {\n        goto label_1;\n    }\nlabel_8:\n    if (ebp == 2) {\n        goto label_20;\n    }\n    if (ebp == 3) {\n        goto label_18;\n    }\n    if (ebp == 1) {\n        goto label_21;\n    }\nlabel_4:\n    if (*((rsp + 0x47)) == 0) {\n        goto label_22;\n    }\n    if (r12 == 0) {\n        goto label_23;\n    }\n    rdi = r12;\n    eax = dirfd ();\n    rcx = r15 + r14;\n    edx = eax;\n    if (eax < 0) {\n        goto label_23;\n    }\nlabel_3:\n    r8b = (*((rsp + 0x40)) != 1) ? 1 : 0;\n    eax = fcn_0040dff0 (0xffffff9c, *((rsp + 0x10)), rdx, rcx, 0);\n    if (eax == 0) {\n        goto label_22;\n    }\n    rax = errno_location ();\n    ebp = *(rax);\n    if (ebp == 0x11) {\n        goto label_2;\n    }\n    rbx = rax;\n    if (r12 != 0) {\n        rdi = r12;\n        closedir ();\n    }\n    r15d = 0;\n    free (r15);\n    *(rbx) = ebp;\n    do {\nlabel_9:\n        rax = r15;\n        return rax;\nlabel_23:\n        rcx = r15;\n        edx = 0xffffff9c;\n        r14d = 0;\n        goto label_3;\nlabel_12:\n        rax = *((rsp + 8));\n        memcpy (r15 + rax, *(0x0061d920), *((rsp + 0x58)));\n        goto label_4;\nlabel_20:\n        if (*((rsp + 0x40)) == 2) {\n            rax = *((rsp + 8));\n            rax = memcpy (r15 + rax, *(0x0061d920), *((rsp + 0x58)));\n            *((rsp + 0x40)) = 1;\n        }\nlabel_21:\n        fcn_00409f70 (r15, *((rsp + 8)));\n        goto label_4;\nlabel_13:\n        edi = 0x2e;\n        eax = *(rbx);\n        *(rbx) = di;\n        rdi = r15;\n        *((rsp + 0x18)) = ax;\n        rax = fcn_0040a880 ();\n        rcx = rbx + r13;\n        r12 = rax;\n        if (rax == 0) {\n            goto label_24;\n        }\n        eax = *((rsp + 0x18));\n        *(rbx) = ax;\n        *(rcx) = 0x7e317e2e;\n        *((rcx + 4)) = 0;\n        goto label_5;\nlabel_18:\n        r15d = 0;\n        free (r15);\n        errno_location ();\n        *(rax) = 0xc;\n    } while (1);\nlabel_17:\n    *((rsp + 0x28)) = rax;\n    goto label_6;\nlabel_16:\n    r8 = r15;\n    goto label_7;\nlabel_24:\n    *((rsp + 0x20)) = rcx;\n    ebp = 0;\n    rax = errno_location ();\n    rcx = *((rsp + 0x20));\n    eax = *((rsp + 0x18));\n    bpl = (*(rax) == 0xc) ? 1 : 0;\n    *(rbx) = ax;\n    ebp += 2;\n    *(rcx) = 0x7e317e2e;\n    *((rcx + 4)) = 0;\n    goto label_8;\nlabel_22:\n    if (r12 == 0) {\n        goto label_9;\n    }\n    rdi = r12;\n    closedir ();\n    goto label_9;\nlabel_11:\n    fcn_0040a040 (rdi);\n    rdi = imp.__libc_start_main;\n    goto label_10;\n}\n"
        },
        {
            "funcName": "fcn_0040a570",
            "funcStartAddr": "0x40a570",
            "funcEndAddr": "0x40a57a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40a570 */\n#include <stdint.h>\n \nvoid fcn_0040a570 (char * arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edx = 1;\n    return void (*0x40a0a0)() ();\n}\n"
        },
        {
            "funcName": "fcn_0040a5f0",
            "funcStartAddr": "0x40a5f0",
            "funcEndAddr": "0x40a6a1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40a5f0 */\n#include <stdint.h>\n \nuint64_t fcn_0040a5f0 (uint32_t arg2) {\n    rsi = arg2;\n    do {\n        fcn_00413ac0 (rdi, rsi, 0x416dc0, 0x416da0, 4, *(0x0061d480));\n        eax = *((rax*4 + 0x416da0));\n        return eax;\n        if (rsi != 0) {\n            if (*(rsi) != 0) {\n                goto label_0;\n            }\n        }\n        rax = getenv (0x416d4e);\n        if (rax != 0) {\n            if (*(rax) != 0) {\n                goto label_1;\n            }\n        }\n        eax = 2;\n        return rax;\nlabel_1:\n        rsi = rax;\n        edi = \"$VERSION_CONTROL\";\nlabel_0:\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040a640",
            "funcStartAddr": "0x40a640",
            "funcEndAddr": "0x40a6b0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40a640 */\n#include <stdint.h>\n \nint64_t fcn_0040a640 (uint32_t arg1, void * arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = rdx;\n    if (rdi != 0) {\n        goto label_3;\n    }\n    edi = 0x2000;\n    rdi = rsi;\n    while (rsi == 0) {\nlabel_0:\n        if (rdi <= rcx) {\n            rcx = rdi;\n        }\n        r8 = rcx;\nlabel_1:\n        rax = rcx;\n        return rax;\nlabel_3:\n    }\n    r8 = rsi;\n    rax = rdi;\nlabel_2:\n    edx = 0;\n    rax = rdx:rax / r8;\n    rdx = rdx:rax % r8;\n    if (rdx != 0) {\n        goto label_4;\n    }\n    rax = rdi;\n    edx = 0;\n    rax = rdx:rax / r8;\n    rdx = rdx:rax % r8;\n    r8 = rsi;\n    r8 *= rax;\n    r9 = rax;\n    if (r8 > rcx) {\n        goto label_0;\n    }\n    rax = r8;\n    edx = 0;\n    rax = rdx:rax / rsi;\n    rdx = rdx:rax % rsi;\n    if (rax != r9) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_4:\n    rax = r8;\n    r8 = rdx;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_0040a7e0",
            "funcStartAddr": "0x40a7e0",
            "funcEndAddr": "0x40a87e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40a7e0 */\n#include <stdint.h>\n \nuint64_t fcn_0040a7e0 (void) {\n    eax = fcn_00413b80 (*(obj.stdout));\n    if (eax != 0) {\n        rax = errno_location ();\n        rbx = rax;\n        if (*(0x0061d930) == 0) {\n            goto label_0;\n        }\n        if (*(rax) != 0x20) {\n            goto label_0;\n        }\n    }\n    eax = fcn_00413b80 (*(obj.stderr));\n    if (eax != 0) {\n        goto label_1;\n    }\n    return rax;\nlabel_0:\n    edx = 5;\n    rax = dcgettext (0, \"write error\");\n    rdi = imp.__libc_start_main;\n    if (rdi == 0) {\n        goto label_2;\n    }\n    rax = fcn_0040de20 (rdi, rsi, rdx, rcx);\n    r8 = rbp;\n    rcx = rax;\n    eax = 0;\n    error (0, *(rbx), \"%s: %s\");\n    do {\nlabel_1:\n        rax = exit (*(0x0061d408));\nlabel_2:\n        rcx = rax;\n        eax = 0;\n        error (0, *(rbx), 0x418333);\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040a880",
            "funcStartAddr": "0x40a880",
            "funcEndAddr": "0x40a916",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40a880 */\n#include <stdint.h>\n \nuint64_t fcn_0040a880 (void) {\n    rax = opendir ();\n    rbx = rax;\n    if (rax != 0) {\n        rdi = rax;\n        eax = dirfd ();\n        if (eax <= 2) {\n            goto label_1;\n        }\n    }\n    rax = rbx;\n    return rax;\nlabel_1:\n    edi = eax;\n    eax = 0;\n    eax = fcn_00410460 (edi, 0x406, 3, rcx, r8);\n    r12d = eax;\n    rax = errno_location ();\n    if (r12d >= 0) {\n        goto label_2;\n    }\n    r14d = *(rax);\n    r13d = 0;\n    do {\nlabel_0:\n        rdi = rbx;\n        rbx = r13;\n        closedir ();\n        *(rbp) = r14d;\n        rax = rbx;\n        return rax;\nlabel_2:\n        edi = r12d;\n        rax = fdopendir ();\n        r14d = *(rbp);\n        r13 = rax;\n    } while (rax != 0);\n    close (r12d);\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040a920",
            "funcStartAddr": "0x40a920",
            "funcEndAddr": "0x40a938",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40a920 */\n#include <stdint.h>\n \nuint64_t fcn_0040a920 (void) {\n    rax = fcn_0040a9a0 (rdi);\n    if (rax != 0) {\n        return rax;\n    }\n    return fcn_00410330 ();\n}\n"
        },
        {
            "funcName": "fcn_0040a940",
            "funcStartAddr": "0x40a940",
            "funcEndAddr": "0x40a99d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40a940 */\n#include <stdint.h>\n \nuint64_t fcn_0040a940 (uint32_t arg1) {\n    rdi = arg1;\n    ebp = 0;\n    rbx = rdi;\n    bpl = (*(rdi) == 0x2f) ? 1 : 0;\n    rax = fcn_0040aa00 (rdi);\n    rcx = rax;\n    rcx -= rbx;\n    if (rcx <= rbp) {\n        goto label_0;\n    }\n    rdx = rcx - 1;\n    if (*((rax - 1)) == 0x2f) {\n        goto label_1;\n    }\n    goto label_0;\n    do {\n        rax = rdx - 1;\n        if (*((rbx + rdx - 1)) != 0x2f) {\n            goto label_2;\n        }\n        rdx = rax;\nlabel_1:\n    } while (rbp != rdx);\nlabel_2:\n    rax = rdx;\n    return rax;\nlabel_0:\n    rdx = rcx;\n    rax = rcx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040a9a0",
            "funcStartAddr": "0x40a9a0",
            "funcEndAddr": "0x40a9fa",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40a9a0 */\n#include <stdint.h>\n \nuint64_t fcn_0040a9a0 (int64_t arg1) {\n    rdi = arg1;\n    rax = fcn_0040a940 (rdi);\n    rbx = rax;\n    al = (rax == 0) ? 1 : 0;\n    eax = (int32_t) al;\n    rax = malloc (rbx + rax + 1);\n    rcx = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    rax = memcpy (rax, rbp, rbx);\n    rcx = rax;\n    while (1) {\n        *((rcx + rbx)) = 0;\nlabel_0:\n        rax = rcx;\n        return rax;\n        *(rax) = 0x2e;\n        ebx = 1;\n    }\n}\n"
        },
        {
            "funcName": "fcn_0040aa00",
            "funcStartAddr": "0x40aa00",
            "funcEndAddr": "0x40aa5b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40aa00 */\n#include <stdint.h>\n \nint64_t fcn_0040aa00 (char * arg1) {\n    rdi = arg1;\n    edx = *(rdi);\n    rax = rdi;\n    if (dl != 0x2f) {\n        goto label_1;\n    }\n    do {\n        rax++;\n        edx = *(rax);\n    } while (dl == 0x2f);\nlabel_1:\n    if (dl == 0) {\n        goto label_2;\n    }\n    rcx = rax;\n    esi = 0;\n    while (dl != 0x2f) {\n        if (sil != 0) {\n            rax = rcx;\n            esi = 0;\n        }\n        rcx++;\n        edx = *(rcx);\n        if (dl == 0) {\n            goto label_2;\n        }\nlabel_0:\n    }\n    rcx++;\n    edx = *(rcx);\n    esi = 1;\n    if (dl != 0) {\n        goto label_0;\n    }\nlabel_2:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040aa60",
            "funcStartAddr": "0x40aa60",
            "funcEndAddr": "0x40aa8b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40aa60 */\n#include <stdint.h>\n \nuint64_t fcn_0040aa60 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = strlen (rdi);\n    while (rdx != 1) {\n        rdx = rax - 1;\n        if (*((rbx + rax - 1)) != 0x2f) {\n            return rax;\n        }\n        rax = rdx;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040aa90",
            "funcStartAddr": "0x40aa90",
            "funcEndAddr": "0x40aac3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40aa90 */\n#include <stdint.h>\n \nuint64_t fcn_0040aa90 (int64_t arg1) {\n    rdi = arg1;\n    rax = fcn_0040aa00 (rdi);\n    rbx = rax;\n    if (*(rax) == 0) {\n        rbx = rbp;\n    }\n    rax = fcn_0040aa60 (rbx);\n    rbx += rax;\n    *(rbx) = 0;\n    al = (*(rbx) != 0) ? 1 : 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040aad0",
            "funcStartAddr": "0x40aad0",
            "funcEndAddr": "0x40aad5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40aad0 */\n#include <stdint.h>\n \nvoid fcn_0040aad0 (void) {\n    return posix_fadvise ();\n}\n"
        },
        {
            "funcName": "fcn_0040ab10",
            "funcStartAddr": "0x40ab10",
            "funcEndAddr": "0x40ab5a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40ab10 */\n#include <stdint.h>\n \nuint64_t fcn_0040ab10 (int64_t arg_60h, uint32_t arg3, int32_t oflag, const char * path) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    uint32_t var_30h;\n    rdx = arg3;\n    rsi = oflag;\n    rdi = path;\n    *((rsp + 0x30)) = rdx;\n    edx = 0;\n    while (1) {\n        eax = 0;\n        eax = open (rdi, rsi, rdx);\n        fcn_0040eaf0 (eax);\n        return eax;\n        rax = rsp + 0x60;\n        *((rsp + 8)) = 0x10;\n        edx = *((rsp + 0x30));\n        *((rsp + 0x10)) = rax;\n        rax = rsp + 0x20;\n        *((rsp + 0x18)) = rax;\n    }\n}\n"
        },
        {
            "funcName": "fcn_0040ab60",
            "funcStartAddr": "0x40ab60",
            "funcEndAddr": "0x40c345",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40ab60 */\n#include <stdint.h>\n \nuint64_t fcn_0040ab60 (int64_t arg1, char * arg2, func * arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rdi != 0) {\n        r13 = rdi;\n        r12 = rsi;\n        rax = fcn_004100e0 (0x18);\n        rbx = rax;\n        rax = fcn_00410310 (r12);\n        rsi = rbx;\n        *(rbx) = rax;\n        rax = *((rbp + 8));\n        *((rbx + 8)) = rax;\n        rax = *(rbp);\n        *((rbx + 0x10)) = rax;\n        rax = fcn_0040c060 (r13);\n        if (rax == 0) {\n            goto label_0;\n        }\n        if (rbx != rax) {\n            rdi = rbx;\n            goto label_1;\n        }\n        return rax;\n    }\n    return rax;\nlabel_0:\n    fcn_00410330 ();\nlabel_1:\n    rbx = rdi;\n    free (*(rdi));\n    rdi = rbx;\n    return free ();\n}\n"
        },
        {
            "funcName": "fcn_0040abf0",
            "funcStartAddr": "0x40abf0",
            "funcEndAddr": "0x40ac2b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40abf0 */\n#include <stdint.h>\n \nint64_t fcn_0040abf0 (int64_t arg1, char * arg2, int64_t arg3) {\n    int64_t var_8h;\n    int64_t var_10h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rdi != 0) {\n        rax = *((rdx + 8));\n        *(rsp) = rsi;\n        *((rsp + 8)) = rax;\n        rax = *(rdx);\n        *((rsp + 0x10)) = rax;\n        rax = fcn_0040b650 (rdi, rsp);\n        al = (rax != 0) ? 1 : 0;\n        return rax;\n    }\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040ac30",
            "funcStartAddr": "0x40ac30",
            "funcEndAddr": "0x40ad14",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40ac30 */\n#include <stdint.h>\n \nint32_t fcn_0040ac30 (uint32_t arg1) {\n    rdi = arg1;\n    eax = *((rdi + 0x18));\n    edx = 5;\n    eax &= 0xf000;\n    if (eax != 0x8000) {\n        if (eax == 0x4000) {\n            goto label_0;\n        }\n        if (eax == 0xa000) {\n            goto label_1;\n        }\n        if (eax == 0x6000) {\n            goto label_2;\n        }\n        if (eax == 0x2000) {\n            goto label_3;\n        }\n        if (eax == 0x1000) {\n            goto label_4;\n        }\n        if (eax == 0xc000) {\n            goto label_5;\n        }\n        esi = \"weird file\";\n        edi = 0;\n        void (*0x402820)() ();\n    }\n    if (*((rdi + 0x30)) == 0) {\n        esi = \"regular empty file\";\n        edi = 0;\n        void (*0x402820)() ();\n    }\n    esi = \"regular file\";\n    edi = 0;\n    void (*0x402820)() ();\nlabel_3:\n    esi = \"character special file\";\n    edi = 0;\n    void (*0x402820)() ();\nlabel_0:\n    esi = 0x415295;\n    edi = 0;\n    void (*0x402820)() ();\nlabel_5:\n    esi = \"socket\";\n    edi = 0;\n    void (*0x402820)() ();\nlabel_1:\n    esi = \"symbolic link\";\n    edi = 0;\n    void (*0x402820)() ();\nlabel_2:\n    esi = \"block special file\";\n    edi = 0;\n    void (*0x402820)() ();\nlabel_4:\n    esi = \"fifo\";\n    edi = 0;\n    return dcgettext ();\n}\n"
        },
        {
            "funcName": "fcn_0040ad20",
            "funcStartAddr": "0x40ad20",
            "funcEndAddr": "0x40ae93",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40ad20 */\n#include <stdint.h>\n \nint32_t fcn_0040ad20 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edx = edi;\n    eax = 0x2d;\n    edx &= 0xf000;\n    if (edx != 0x8000) {\n        eax = 0x64;\n        if (edx == 0x4000) {\n            goto label_1;\n        }\n        eax = 0x62;\n        if (edx == 0x6000) {\n            goto label_1;\n        }\n        eax = 0x63;\n        if (edx == 0x2000) {\n            goto label_1;\n        }\n        eax = 0x6c;\n        if (edx == 0xa000) {\n            goto label_1;\n        }\n        eax = 0x70;\n        if (edx == 0x1000) {\n            goto label_1;\n        }\n        eax = 0x73;\n        edx = 0x3f;\n        if (edx == 0xc000) {\n            eax = edx;\n            goto label_1;\n        }\n    }\nlabel_1:\n    *(rsi) = al;\n    eax = edi;\n    eax &= 0x100;\n    eax -= eax;\n    eax &= 0xffffffbb;\n    eax += 0x72;\n    *((rsi + 1)) = al;\n    eax = edi;\n    eax &= 0x80;\n    eax -= eax;\n    eax &= 0xffffffb6;\n    eax += 0x77;\n    *((rsi + 2)) = al;\n    eax = edi;\n    eax &= 0x40;\n    eax -= eax;\n    if ((edi & 0x800) == 0) {\n        goto label_2;\n    }\n    eax &= 0xffffffe0;\n    eax += 0x73;\n    do {\n        *((rsi + 3)) = al;\n        eax = edi;\n        eax &= 0x20;\n        eax -= eax;\n        eax &= 0xffffffbb;\n        eax += 0x72;\n        *((rsi + 4)) = al;\n        eax = edi;\n        eax &= 0x10;\n        eax -= eax;\n        eax &= 0xffffffb6;\n        eax += 0x77;\n        *((rsi + 5)) = al;\n        eax = edi;\n        eax &= 8;\n        eax -= eax;\n        if ((edi & 0x400) == 0) {\n            goto label_3;\n        }\n        eax &= 0xffffffe0;\n        eax += 0x73;\nlabel_0:\n        *((rsi + 6)) = al;\n        eax = edi;\n        eax &= 4;\n        eax -= eax;\n        eax &= 0xffffffbb;\n        eax += 0x72;\n        *((rsi + 7)) = al;\n        eax = edi;\n        eax &= 2;\n        eax -= eax;\n        eax &= 0xffffffb6;\n        eax += 0x77;\n        *((rsi + 8)) = al;\n        eax = edi;\n        eax &= 1;\n        eax -= eax;\n        edi &= 0x200;\n        if (edi == 0) {\n            goto label_4;\n        }\n        eax &= 0xffffffe0;\n        eax += 0x74;\n        *((rsi + 9)) = al;\n        eax = 0x20;\n        *((rsi + 0xa)) = ax;\n        return eax;\nlabel_2:\n        eax &= 0xffffffb5;\n        eax += 0x78;\n    } while (1);\nlabel_3:\n    eax &= 0xffffffb5;\n    eax += 0x78;\n    goto label_0;\nlabel_4:\n    eax &= 0xffffffb5;\n    eax += 0x78;\n    *((rsi + 9)) = al;\n    eax = 0x20;\n    *((rsi + 0xa)) = ax;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_0040aeb0",
            "funcStartAddr": "0x40aeb0",
            "funcEndAddr": "0x40aec8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40aeb0 */\n#include <stdint.h>\n \nuint64_t fcn_0040aeb0 (void) {\n    uint32_t var_fh;\n    rax = void (*0x40aed0)() ();\n    if (rax != 0) {\n        return rax;\n    }\n    return fcn_00410330 ();\n}\n"
        },
        {
            "funcName": "fcn_0040afb0",
            "funcStartAddr": "0x40afb0",
            "funcEndAddr": "0x40b026",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40afb0 */\n#include <stdint.h>\n \nuint64_t fcn_0040afb0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r13d = edi;\n    rbx = rdx;\n    r12d = 0;\n    while (rax != -1) {\n        if (rax == 0) {\n            goto label_1;\n        }\n        r12 += rax;\n        rbp += rax;\n        rbx -= rax;\n        if (rbx == 0) {\n            goto label_2;\n        }\n        rax = fcn_0040e290 (r13d, rbp, rbx);\n    }\n    do {\nlabel_2:\n        rax = r12;\n        return rax;\nlabel_1:\n        errno_location ();\n        *(rax) = 0x1c;\n        rax = r12;\n        return rax;\nlabel_0:\n        r12d = 0;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040b030",
            "funcStartAddr": "0x40b030",
            "funcEndAddr": "0x40b0c3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40b030 */\n#include <stdint.h>\n \nint64_t fcn_0040b030 (uint32_t arg1, int64_t arg3) {\n    rdi = arg1;\n    rdx = arg3;\n    esi = 0xa;\n    r9 = 0xaaaaaaaaaaaaaaab;\n    if (rdi >= 0xa) {\n        rsi = rdi;\n    }\n    rsi |= 1;\n    if (rsi == -1) {\n        goto label_1;\n    }\nlabel_0:\n    rax = rsi;\n    rcx = rsi;\n    rdx:rax = rax * r9;\n    rax = rdx;\n    rax >>= 1;\n    rax *= 3;\n    rcx -= rax;\n    rax = rcx;\n    if (rsi <= 9) {\n        goto label_2;\n    }\n    if (rcx == 0) {\n        goto label_3;\n    }\n    r8d = 0x10;\n    edi = 9;\n    ecx = 3;\n    while (rdi < rsi) {\n        r8 += 8;\n        if (rdx == 0) {\n            goto label_3;\n        }\n        rcx += 2;\n        rax = rsi;\n        edx = 0;\n        rdi += r8;\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rax = rdx;\n    }\nlabel_2:\n    if (rax != 0) {\n        goto label_1;\n    }\nlabel_3:\n    rsi += 2;\n    if (rsi != -1) {\n        goto label_0;\n    }\nlabel_1:\n    rax = rsi;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040b0f0",
            "funcStartAddr": "0x40b0f0",
            "funcEndAddr": "0x413481",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40b0f0 */\n#include <stdint.h>\n \nuint64_t fcn_0040b0f0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    do {\n        /* [13] -r-x section size 74792 named .text */\n        abort ();\n        rbx = rdi;\n        rdi = rsi;\n        rsi = *((rbx + 0x10));\n        rax = uint64_t (*rbx + 0x30)(uint64_t) (rbx);\n    } while (*((rbx + 0x10)) <= rax);\n    rax <<= 4;\n    rax += *(rbx);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040b120",
            "funcStartAddr": "0x40b120",
            "funcEndAddr": "0x40b239",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40b120 */\n#include <stdint.h>\n \nuint64_t fcn_0040b120 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r14 = rdx;\n    r13d = ecx;\n    r12 = rdi;\n    rax = fcn_0040b0f0 (rdi, rsi);\n    *(r14) = rax;\n    rsi = *(rax);\n    if (rsi == 0) {\n        goto label_1;\n    }\n    rbx = rax;\n    if (rsi == rbp) {\n        goto label_2;\n    }\n    rdi = rbp;\n    al = uint64_t (*r12 + 0x38)() ();\n    if (al != 0) {\n        goto label_3;\n    }\n    rax = *((rbx + 8));\n    if (rax == 0) {\n        goto label_1;\n    }\n    rsi = *(rax);\n    if (rbp != rsi) {\n        goto label_4;\n    }\n    goto label_5;\n    do {\n        rbx = *((rbx + 8));\n        rax = *((rbx + 8));\n        if (rax == 0) {\n            goto label_1;\n        }\n        rsi = *(rax);\n        if (rsi == rbp) {\n            goto label_5;\n        }\nlabel_4:\n        rdi = rbp;\n        al = uint64_t (*r12 + 0x38)() ();\n    } while (al == 0);\n    rax = *((rbx + 8));\n    rsi = *(rax);\nlabel_5:\n    if (r13b == 0) {\n        goto label_0;\n    }\n    rdx = *((rax + 8));\n    *((rbx + 8)) = rdx;\n    *(rax) = 0;\n    rdx = *((r12 + 0x48));\n    *((rax + 8)) = rdx;\n    *((r12 + 0x48)) = rax;\n    do {\nlabel_0:\n        rax = rsi;\n        return rax;\nlabel_3:\n        rsi = *(rbx);\nlabel_2:\n    } while (r13b == 0);\n    rax = *((rbx + 8));\n    if (rax != 0) {\n        __asm (\"movdqu xmm0, xmmword [rax]\");\n        __asm (\"movups xmmword [rbx], xmm0\");\n        *(rax) = 0;\n        rdx = *((r12 + 0x48));\n        *((rax + 8)) = rdx;\n        *((r12 + 0x48)) = rax;\n        rax = rsi;\n        return rax;\nlabel_1:\n        esi = 0;\n        rax = rsi;\n        return rax;\n    }\n    *(rbx) = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040b240",
            "funcStartAddr": "0x40b240",
            "funcEndAddr": "0x40b2be",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40b240 */\n#include <stdint.h>\n \nint64_t fcn_0040b240 (int64_t arg1) {\n    rdi = arg1;\n    rax = *(rdi);\n    if (rax != 0x416f10) {\n        xmm0 = *((rax + 8));\n        __asm (\"comiss xmm0, dword [0x00416f24]\");\n        if (rax > 0x416f10) {\n            xmm1 = *(0x00416f28);\n            __asm (\"comiss xmm1, xmm0\");\n            if (rax <= 0x416f10) {\n                goto label_0;\n            }\n            xmm1 = *((rax + 0xc));\n            __asm (\"comiss xmm1, dword [0x00416f2c]\");\n            if (rax <= 0x416f10) {\n                goto label_0;\n            }\n            xmm1 = *(rax);\n            __asm (\"comiss xmm1, dword [0x00416f30]\");\n            if (rax < 0x416f10) {\n                goto label_0;\n            }\n            __asm (\"addss xmm1, dword [0x00416f24]\");\n            xmm2 = *((rax + 4));\n            __asm (\"comiss xmm2, xmm1\");\n            if (rax <= 0x416f10) {\n                goto label_0;\n            }\n            xmm3 = *(0x00416f34);\n            __asm (\"comiss xmm3, xmm2\");\n            if (rax < 0x416f10) {\n                goto label_0;\n            }\n            __asm (\"comiss xmm0, xmm1\");\n            eax = 1;\n            if (rax > 0x416f10) {\n                goto label_1;\n            }\n        }\nlabel_0:\n        *(rdi) = 0x416f10;\n        eax = 0;\n        return rax;\n    }\n    eax = 1;\nlabel_1:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040b2c0",
            "funcStartAddr": "0x40b2c0",
            "funcEndAddr": "0x40b40a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40b2c0 */\n#include <stdint.h>\n \nuint64_t fcn_0040b2c0 (int64_t arg1, uint32_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r14d = edx;\n    r13 = rsi;\n    r12 = *(rsi);\n    if (r12 < *((rsi + 8))) {\n        goto label_2;\n    }\n    goto label_5;\n    do {\nlabel_1:\n        r12 += 0x10;\n        if (*((r13 + 8)) <= r12) {\n            goto label_5;\n        }\nlabel_2:\n        r15 = *(r12);\n    } while (r15 == 0);\n    rbx = *((r12 + 8));\n    if (rbx != 0) {\n        goto label_0;\n    }\n    goto label_6;\n    do {\n        rcx = *((rax + 8));\n        *((rbx + 8)) = rcx;\n        *((rax + 8)) = rbx;\n        rbx = rdx;\n        if (rdx == 0) {\n            goto label_7;\n        }\nlabel_0:\n        r15 = *(rbx);\n        rax = fcn_0040b0f0 (rbp, r15);\n        rdx = *((rbx + 8));\n    } while (*(rax) != 0);\n    *(rax) = r15;\n    *((rbp + 0x18))++;\n    *(rbx) = 0;\n    rax = *((rbp + 0x48));\n    *((rbx + 8)) = rax;\n    *((rbp + 0x48)) = rbx;\n    rbx = rdx;\n    if (rdx != 0) {\n        goto label_0;\n    }\nlabel_7:\n    r15 = *(r12);\nlabel_6:\n    *((r12 + 8)) = 0;\n    if (r14b != 0) {\n        goto label_1;\n    }\n    rax = fcn_0040b0f0 (rbp, r15);\n    rbx = rax;\n    if (*(rax) == 0) {\n        goto label_8;\n    }\n    rax = *((rbp + 0x48));\n    if (rax == 0) {\n        goto label_9;\n    }\n    rdx = *((rax + 8));\n    *((rbp + 0x48)) = rdx;\nlabel_4:\n    rdx = *((rbx + 8));\n    *(rax) = r15;\n    *((rax + 8)) = rdx;\n    *((rbx + 8)) = rax;\nlabel_3:\n    *(r12) = 0;\n    r12 += 0x10;\n    *((r13 + 0x18))--;\n    if (*((r13 + 8)) > r12) {\n        goto label_2;\n    }\nlabel_5:\n    eax = 1;\n    return rax;\nlabel_8:\n    *(rax) = r15;\n    *((rbp + 0x18))++;\n    goto label_3;\nlabel_9:\n    rax = malloc (0x10);\n    if (rax != 0) {\n        goto label_4;\n    }\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040b650",
            "funcStartAddr": "0x40b650",
            "funcEndAddr": "0x40b6a3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40b650 */\n#include <stdint.h>\n \nuint64_t fcn_0040b650 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r12 = rdi;\n    rax = fcn_0040b0f0 (rdi, rsi);\n    rsi = *(rax);\n    if (rsi == 0) {\n        goto label_0;\n    }\n    rbx = rax;\n    while (rbx != 0) {\n        rsi = *(rbx);\n        if (rsi == rbp) {\n            goto label_1;\n        }\n        rdi = rbp;\n        al = uint64_t (*r12 + 0x38)() ();\n        if (al != 0) {\n            goto label_2;\n        }\n        rbx = *((rbx + 8));\n    }\nlabel_0:\n    eax = 0;\n    return rax;\nlabel_2:\n    rbp = *(rbx);\nlabel_1:\n    rax = *(rbx);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040b8c0",
            "funcStartAddr": "0x40b8c0",
            "funcEndAddr": "0x40ba4a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40b8c0 */\n#include <stdint.h>\n \nuint64_t fcn_0040b8c0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    eax = 0x40b0d0;\n    r15 = rsi;\n    r14 = r8;\n    r13 = rcx;\n    r12 = rdx;\n    edi = 0x50;\n    if (rdx == 0) {\n        r12 = rax;\n    }\n    eax = 0x40b0e0;\n    if (rcx == 0) {\n        r13 = rax;\n    }\n    rax = malloc (rdi);\n    rbx = rax;\n    if (rax == 0) {\n        goto label_4;\n    }\n    rdi = rax + 0x28;\n    if (r15 == 0) {\n        goto label_5;\n    }\n    *((rax + 0x28)) = r15;\n    al = fcn_0040b240 (rdi);\n    if (al == 0) {\n        goto label_0;\n    }\n    if (*((r15 + 0x10)) == 0) {\n        goto label_6;\n    }\nlabel_1:\n    rax = fcn_0040b030 (rbp, rsi);\n    rax >>= 0x3d;\n    al = (rax != 0) ? 1 : 0;\n    eax = (int32_t) al;\n    if (((rbp >> 0x3c) & 1) < 0) {\n        goto label_0;\n    }\n    if (rax != 0) {\n        goto label_0;\n    }\n    *((rbx + 0x10)) = rbp;\n    if (rbp == 0) {\n        goto label_0;\n    }\n    rax = calloc (rbp, 0x10);\n    *(rbx) = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    rbp <<= 4;\n    *((rbx + 0x18)) = 0;\n    rbp += rax;\n    *((rbx + 0x20)) = 0;\n    *((rbx + 8)) = rbp;\n    *((rbx + 0x30)) = r12;\n    *((rbx + 0x38)) = r13;\n    *((rbx + 0x40)) = r14;\n    *((rbx + 0x48)) = 0;\n    while (al == 0) {\nlabel_0:\n        ebx = 0;\n        free (rbx);\nlabel_4:\n        rax = rbx;\n        return rax;\nlabel_5:\n        *((rax + 0x28)) = 0x416f10;\n        al = fcn_0040b240 (rdi);\n        xmm1 = *(0x00416f38);\n    }\n    if (rbp < 0) {\n        goto label_7;\n    }\nlabel_2:\n    xmm0 = 0;\n    __asm (\"cvtsi2ss xmm0, rbp\");\nlabel_3:\n    __asm (\"divss xmm0, xmm1\");\n    __asm (\"comiss xmm0, dword [0x00416f3c]\");\n    if (rbp >= 0) {\n        goto label_0;\n    }\n    __asm (\"comiss xmm0, dword [0x00416f40]\");\n    if (rbp < 0) {\n        goto label_8;\n    }\n    __asm (\"subss xmm0, dword [0x00416f40]\");\n    __asm (\"cvttss2si rbp, xmm0\");\n    __asm (\"btc rbp, 0x3f\");\n    goto label_1;\nlabel_6:\n    xmm1 = *((r15 + 8));\n    if (rbp >= 0) {\n        goto label_2;\n    }\nlabel_7:\n    rax = rbp;\n    ebp &= 1;\n    xmm0 = 0;\n    rax >>= 1;\n    rax |= rbp;\n    __asm (\"cvtsi2ss xmm0, rax\");\n    __asm (\"addss xmm0, xmm0\");\n    goto label_3;\nlabel_8:\n    __asm (\"cvttss2si rbp, xmm0\");\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040bb00",
            "funcStartAddr": "0x40bb00",
            "funcEndAddr": "0x40bbd6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40bb00 */\n#include <stdint.h>\n \nint64_t fcn_0040bb00 (uint32_t arg1) {\n    rdi = arg1;\n    r12 = rdi;\n    rbp = *(rdi);\n    rax = *((rdi + 8));\n    if (*((rdi + 0x40)) == 0) {\n        goto label_2;\n    }\n    if (*((rdi + 0x20)) == 0) {\n        goto label_2;\n    }\n    if (rbp < rax) {\n        goto label_0;\n    }\n    goto label_3;\n    do {\n        rbp += 0x10;\n        if (rax <= rbp) {\n            goto label_4;\n        }\nlabel_0:\n        rdi = *(rbp);\n    } while (rdi == 0);\n    rbx = rbp;\n    while (rbx != 0) {\n        rdi = *(rbx);\n        uint64_t (*r12 + 0x40)() ();\n        rbx = *((rbx + 8));\n    }\n    rax = *((r12 + 8));\n    rbp += 0x10;\n    if (rax > rbp) {\n        goto label_0;\n    }\nlabel_4:\n    rbp = *(r12);\nlabel_2:\n    if (rbp >= rax) {\n        goto label_3;\n    }\nlabel_1:\n    rdi = *((rbp + 8));\n    if (rdi == 0) {\n        goto label_5;\n    }\n    do {\n        rbx = *((rdi + 8));\n        free (rdi);\n        rdi = rbx;\n    } while (rbx != 0);\nlabel_5:\n    rbp += 0x10;\n    if (*((r12 + 8)) > rbp) {\n        goto label_1;\n    }\nlabel_3:\n    rdi = *((r12 + 0x48));\n    if (rdi == 0) {\n        goto label_6;\n    }\n    do {\n        rbx = *((rdi + 8));\n        free (rdi);\n        rdi = rbx;\n    } while (rbx != 0);\nlabel_6:\n    free (*(r12));\n    rdi = r12;\n    return free ();\n}\n"
        },
        {
            "funcName": "fcn_0040bbe0",
            "funcStartAddr": "0x40bbe0",
            "funcEndAddr": "0x414c30",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40bbe0 */\n#include <stdint.h>\n \nuint64_t fcn_0040bbe0 (int64_t arg1, uint32_t arg2) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    rdi = arg1;\n    rsi = arg2;\n    do {\nlabel_0:\n        rax = abort ();\n        r12 = *((rdi + 0x28));\n        if (*((r12 + 0x10)) == 0) {\n            if (rsi < 0) {\n                goto label_3;\n            }\n            xmm0 = 0;\n            __asm (\"cvtsi2ss xmm0, rsi\");\nlabel_1:\n            __asm (\"divss xmm0, dword [r12 + 8]\");\n            __asm (\"comiss xmm0, dword [0x00416f3c]\");\n            if (rsi >= 0) {\n                goto label_4;\n            }\n            __asm (\"comiss xmm0, dword [0x00416f40]\");\n            if (rsi < 0) {\n                goto label_5;\n            }\n            __asm (\"subss xmm0, dword [0x00416f40]\");\n            __asm (\"cvttss2si rsi, xmm0\");\n            __asm (\"btc rsi, 0x3f\");\n        }\nlabel_2:\n        rax = fcn_0040b030 (rsi, rsi);\n        rdx = rax*8;\n        rbx = rax;\n        rax >>= 0x3d;\n        al = (rax != 0) ? 1 : 0;\n        edx = 1;\n        eax = (int32_t) al;\n        __asm (\"cmovs rax, rdx\");\n        if (rbx == 0) {\n            goto label_4;\n        }\n        if (rax != 0) {\n            goto label_4;\n        }\n        if (*((rbp + 0x10)) == rbx) {\n            goto label_6;\n        }\n        rax = calloc (rbx, 0x10);\n        *(rsp) = rax;\n        if (rax == 0) {\n            goto label_4;\n        }\n        *((rsp + 0x10)) = rbx;\n        rbx <<= 4;\n        rbx += rax;\n        rax = *((rbp + 0x30));\n        *((rsp + 0x18)) = 0;\n        *((rsp + 8)) = rbx;\n        *((rsp + 0x30)) = rax;\n        rax = *((rbp + 0x38));\n        *((rsp + 0x20)) = 0;\n        *((rsp + 0x38)) = rax;\n        rax = *((rbp + 0x40));\n        *((rsp + 0x28)) = r12;\n        *((rsp + 0x40)) = rax;\n        rax = *((rbp + 0x48));\n        *((rsp + 0x48)) = rax;\n        eax = fcn_0040b2c0 (rsp, rbp, 0);\n        ebx = eax;\n        if (al != 0) {\n            goto label_7;\n        }\n        rax = *((rsp + 0x48));\n        *((rbp + 0x48)) = rax;\n        al = fcn_0040b2c0 (rbp, rsp, 1);\n    } while (al == 0);\n    al = fcn_0040b2c0 (rbp, rsp, 0);\n    if (al == 0) {\n        goto label_0;\n    }\n    free (*(rsp));\n    eax = ebx;\n    return rax;\nlabel_4:\n    ebx = 0;\n    do {\n        eax = ebx;\n        return rax;\nlabel_3:\n        rax = rsi;\n        esi &= 1;\n        xmm0 = 0;\n        rax >>= 1;\n        rax |= rsi;\n        __asm (\"cvtsi2ss xmm0, rax\");\n        __asm (\"addss xmm0, xmm0\");\n        goto label_1;\nlabel_5:\n        __asm (\"cvttss2si rsi, xmm0\");\n        goto label_2;\nlabel_6:\n        ebx = 1;\n        eax = 1;\n        return rax;\nlabel_7:\n        free (*(rbp));\n        rax = *(rsp);\n        *(rbp) = rax;\n        rax = *((rsp + 8));\n        *((rbp + 8)) = rax;\n        rax = *((rsp + 0x10));\n        *((rbp + 0x10)) = rax;\n        rax = *((rsp + 0x18));\n        *((rbp + 0x18)) = rax;\n        rax = *((rsp + 0x48));\n        *((rbp + 0x48)) = rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040bde0",
            "funcStartAddr": "0x40bde0",
            "funcEndAddr": "0x4150a5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40bde0 */\n#include <stdint.h>\n \nuint64_t fcn_0040bde0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    do {\nlabel_6:\n        abort ();\n    } while (rsi == 0);\n    r12 = rdx;\n    rbx = rdi;\n    rax = fcn_0040b120 (rdi, rsi, rsp + 8, 0);\n    rdx = rax;\n    if (rax != 0) {\n        eax = 0;\n        if (r12 != 0) {\n            *(r12) = rdx;\n        }\n        return rax;\n    }\n    rax = *((rbx + 0x18));\n    if (rax < 0) {\n        goto label_8;\n    }\n    xmm1 = 0;\n    rdx = *((rbx + 0x28));\n    __asm (\"cvtsi2ss xmm1, rax\");\n    rax = *((rbx + 0x10));\n    if (rax < 0) {\n        goto label_9;\n    }\n    do {\n        xmm0 = 0;\n        __asm (\"cvtsi2ss xmm0, rax\");\n        __asm (\"mulss xmm0, dword [rdx + 8]\");\n        __asm (\"comiss xmm1, xmm0\");\n        if (rax > 0) {\n            goto label_10;\n        }\nlabel_0:\n        r12 = *((rsp + 8));\n        if (*(r12) == 0) {\n            goto label_11;\n        }\n        rax = *((rbx + 0x48));\n        if (rax == 0) {\n            goto label_12;\n        }\n        rdx = *((rax + 8));\n        *((rbx + 0x48)) = rdx;\nlabel_1:\n        rdx = *((r12 + 8));\n        *(rax) = rbp;\n        *((rax + 8)) = rdx;\n        *((r12 + 8)) = rax;\n        eax = 1;\n        *((rbx + 0x20))++;\n        return rax;\nlabel_8:\n        rdx = rax;\n        eax &= 1;\n        xmm1 = 0;\n        rdx >>= 1;\n        rdx |= rax;\n        rax = *((rbx + 0x10));\n        __asm (\"cvtsi2ss xmm1, rdx\");\n        rdx = *((rbx + 0x28));\n        __asm (\"addss xmm1, xmm1\");\n    } while (rax >= 0);\nlabel_9:\n    rcx = rax;\n    eax &= 1;\n    xmm0 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm0, rcx\");\n    __asm (\"addss xmm0, xmm0\");\n    __asm (\"mulss xmm0, dword [rdx + 8]\");\n    __asm (\"comiss xmm1, xmm0\");\n    if (rcx <= 0) {\n        goto label_0;\n    }\nlabel_10:\n    fcn_0040b240 (rbx + 0x28);\n    rdx = *((rbx + 0x28));\n    rax = *((rbx + 0x10));\n    xmm2 = *((rdx + 8));\n    if (rax < 0) {\n        goto label_13;\n    }\n    xmm0 = 0;\n    __asm (\"cvtsi2ss xmm0, rax\");\nlabel_3:\n    rax = *((rbx + 0x18));\n    if (rax < 0) {\n        goto label_14;\n    }\n    xmm1 = 0;\n    __asm (\"cvtsi2ss xmm1, rax\");\nlabel_2:\n    xmm3 = xmm2;\n    __asm (\"mulss xmm3, xmm0\");\n    __asm (\"comiss xmm1, xmm3\");\n    if (rax <= 0) {\n        goto label_0;\n    }\n    __asm (\"mulss xmm0, dword [rdx + 0xc]\");\n    if (*((rdx + 0x10)) == 0) {\n        goto label_15;\n    }\nlabel_4:\n    __asm (\"comiss xmm0, dword [0x00416f3c]\");\n    if (*((rdx + 0x10)) < 0) {\n        goto label_16;\n    }\n    do {\nlabel_5:\n        eax = 0xffffffff;\n        return rax;\nlabel_11:\n        *(r12) = rbp;\n        eax = 1;\n        *((rbx + 0x20))++;\n        *((rbx + 0x18))++;\n        return rax;\nlabel_12:\n        rax = malloc (0x10);\n    } while (rax == 0);\n    goto label_1;\nlabel_14:\n    rcx = rax;\n    eax &= 1;\n    xmm1 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm1, rcx\");\n    __asm (\"addss xmm1, xmm1\");\n    goto label_2;\nlabel_13:\n    rcx = rax;\n    eax &= 1;\n    xmm0 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm0, rcx\");\n    __asm (\"addss xmm0, xmm0\");\n    goto label_3;\nlabel_15:\n    __asm (\"mulss xmm0, xmm2\");\n    goto label_4;\nlabel_16:\n    __asm (\"comiss xmm0, dword [0x00416f40]\");\n    if (rcx >= 0) {\n        goto label_17;\n    }\n    __asm (\"cvttss2si rsi, xmm0\");\nlabel_7:\n    al = fcn_0040bbe0 (rbx, rsi);\n    if (al == 0) {\n        goto label_5;\n    }\n    rax = fcn_0040b120 (rbx, rbp, rsp + 8, 0);\n    if (rax == 0) {\n        goto label_0;\n    }\n    goto label_6;\nlabel_17:\n    __asm (\"subss xmm0, dword [0x00416f40]\");\n    __asm (\"cvttss2si rsi, xmm0\");\n    __asm (\"btc rsi, 0x3f\");\n    goto label_7;\n}\n"
        },
        {
            "funcName": "fcn_0040c060",
            "funcStartAddr": "0x40c060",
            "funcEndAddr": "0x40c09b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40c060 */\n#include <stdint.h>\n \nuint64_t fcn_0040c060 (int64_t arg2) {\n    int64_t var_8h;\n    rsi = arg2;\n    rbx = rsi;\n    eax = fcn_0040bde0 (rdi, rsi, rsp + 8);\n    if (eax != 0xffffffff) {\n        if (eax == 0) {\n            rbx = *((rsp + 8));\n        }\n        rax = rbx;\n        return rax;\n    }\n    ebx = 0;\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040c0a0",
            "funcStartAddr": "0x40c0a0",
            "funcEndAddr": "0x40c277",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40c0a0 */\n#include <stdint.h>\n \nuint64_t fcn_0040c0a0 (int64_t arg1) {\n    int64_t var_8h;\n    rdi = arg1;\n    rbx = rdi;\n    rax = fcn_0040b120 (rdi, rsi, rsp + 8, 1);\n    if (rax == 0) {\n        goto label_0;\n    }\n    rax = *((rsp + 8));\n    *((rbx + 0x20))--;\n    while (rax <= 0) {\nlabel_0:\n        rax = rbp;\n        return rax;\n        rax = *((rbx + 0x18));\n        rax--;\n        *((rbx + 0x18)) = rax;\n        if (rax < 0) {\n            goto label_6;\n        }\n        xmm0 = 0;\n        rdx = *((rbx + 0x28));\n        __asm (\"cvtsi2ss xmm0, rax\");\n        rax = *((rbx + 0x10));\n        if (rax < 0) {\n            goto label_7;\n        }\nlabel_1:\n        xmm1 = 0;\n        __asm (\"cvtsi2ss xmm1, rax\");\nlabel_2:\n        __asm (\"mulss xmm1, dword [rdx]\");\n        __asm (\"comiss xmm1, xmm0\");\n    }\n    fcn_0040b240 (rbx + 0x28);\n    rax = *((rbx + 0x10));\n    rdx = *((rbx + 0x28));\n    if (rax < 0) {\n        goto label_8;\n    }\n    xmm0 = 0;\n    __asm (\"cvtsi2ss xmm0, rax\");\nlabel_4:\n    rax = *((rbx + 0x18));\n    if (rax < 0) {\n        goto label_9;\n    }\n    xmm1 = 0;\n    __asm (\"cvtsi2ss xmm1, rax\");\nlabel_3:\n    xmm2 = *(rdx);\n    __asm (\"mulss xmm2, xmm0\");\n    __asm (\"comiss xmm2, xmm1\");\n    if (rax <= 0) {\n        goto label_0;\n    }\n    __asm (\"mulss xmm0, dword [rdx + 4]\");\n    if (*((rdx + 0x10)) == 0) {\n        __asm (\"mulss xmm0, dword [rdx + 8]\");\n    }\n    __asm (\"comiss xmm0, dword [0x00416f40]\");\n    if (*((rdx + 0x10)) >= 0) {\n        goto label_10;\n    }\n    __asm (\"cvttss2si rsi, xmm0\");\nlabel_5:\n    al = fcn_0040bbe0 (rbx, rsi);\n    if (al != 0) {\n        goto label_0;\n    }\n    rdi = *((rbx + 0x48));\n    if (rdi == 0) {\n        goto label_11;\n    }\n    do {\n        r12 = *((rdi + 8));\n        rax = free (rdi);\n        rdi = r12;\n    } while (r12 != 0);\nlabel_11:\n    *((rbx + 0x48)) = 0;\n    goto label_0;\nlabel_6:\n    rdx = rax;\n    eax &= 1;\n    xmm0 = 0;\n    rdx >>= 1;\n    rdx |= rax;\n    rax = *((rbx + 0x10));\n    __asm (\"cvtsi2ss xmm0, rdx\");\n    rdx = *((rbx + 0x28));\n    __asm (\"addss xmm0, xmm0\");\n    if (rax >= 0) {\n        goto label_1;\n    }\nlabel_7:\n    rcx = rax;\n    eax &= 1;\n    xmm1 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm1, rcx\");\n    __asm (\"addss xmm1, xmm1\");\n    goto label_2;\nlabel_9:\n    rcx = rax;\n    eax &= 1;\n    xmm1 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm1, rcx\");\n    __asm (\"addss xmm1, xmm1\");\n    goto label_3;\nlabel_8:\n    rcx = rax;\n    eax &= 1;\n    xmm0 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm0, rcx\");\n    __asm (\"addss xmm0, xmm0\");\n    goto label_4;\nlabel_10:\n    __asm (\"subss xmm0, dword [0x00416f40]\");\n    __asm (\"cvttss2si rsi, xmm0\");\n    __asm (\"btc rsi, 0x3f\");\n    goto label_5;\n}\n"
        },
        {
            "funcName": "fcn_0040c350",
            "funcStartAddr": "0x40c350",
            "funcEndAddr": "0x40c3e9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40c350 */\n#include <stdint.h>\n \nuint64_t fcn_0040c350 (char ** arg1) {\n    rdi = arg1;\n    if (rdi != 0) {\n        rbx = rdi;\n        rax = strrchr (rdi, 0x2f);\n        if (rax != 0) {\n            r8 = rax + 1;\n            rdx = r8;\n            rdx -= rbx;\n            if (rdx <= 6) {\n                goto label_0;\n            }\n            rsi = rax - 6;\n            edi = \"/.libs/\";\n            ecx = 7;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (rdx > 6) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            edi = 0x416f90;\n            ecx = 3;\n            rsi = r8;\n            rbx = r8;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (dl > 0) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            rbx = rax + 4;\n            *(obj.__progname) = rbx;\n        }\nlabel_0:\n        *(0x0061d940) = rbx;\n        *(obj.program_invocation_name) = rbx;\n        return rax;\n    }\n    fwrite (0x416f50, 1, 0x37, *(obj.stderr));\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_0040c3f0",
            "funcStartAddr": "0x40c3f0",
            "funcEndAddr": "0x40c42f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40c3f0 */\n#include <stdint.h>\n \nuint32_t fcn_0040c3f0 (int64_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_ch;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    rbx = rdx;\n    edx = r8d;\n    rcx = rsp + 0xc;\n    eax = fcn_00413790 (rdi, rsi);\n    if (eax != 0) {\n        goto label_0;\n    }\n    fcn_004137c0 (rsp + 0xc, rbx, ebp);\n    do {\n        return eax;\nlabel_0:\n        eax = 0xfffffffe;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040c430",
            "funcStartAddr": "0x40c430",
            "funcEndAddr": "0x40c44c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40c430 */\n#include <stdint.h>\n \nvoid fcn_0040c430 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    *((rsp + 0xc)) = edx;\n    fcn_004137c0 (rsp + 0xc, rdi, esi);\n}\n"
        },
        {
            "funcName": "fcn_0040c450",
            "funcStartAddr": "0x40c450",
            "funcEndAddr": "0x40c542",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40c450 */\n#include <stdint.h>\n \nuint64_t fcn_0040c450 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edx = 5;\n    r12d = esi;\n    rsi = rdi;\n    rax = dcgettext (0, rsi);\n    rbx = rax;\n    while (1) {\nlabel_0:\n        rax = rbx;\n        return rax;\n        rax = fcn_00413e10 ();\n        edx = *(rax);\n        edx &= 0xffffffdf;\n        if (dl != 0x55) {\n            goto label_1;\n        }\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x54) {\n            goto label_2;\n        }\n        edx = *((rax + 2));\n        edx &= 0xffffffdf;\n        if (dl != 0x46) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x2d) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0) {\n            goto label_2;\n        }\n        eax = 0x416f96;\n        ebx = 0x416fa1;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n    }\nlabel_1:\n    if (dl == 0x47) {\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x42) {\n            goto label_2;\n        }\n        if (*((rax + 2)) != 0x31) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0x33) {\n            goto label_2;\n        }\n        if (*((rax + 6)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 7)) != 0) {\n            goto label_2;\n        }\n        eax = 0x416f9a;\n        ebx = 0x416f9d;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n        goto label_0;\n    }\nlabel_2:\n    eax = 0x4182a7;\n    ebx = 0x416f94;\n    if (r12d != 9) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040c550",
            "funcStartAddr": "0x40c550",
            "funcEndAddr": "0x416f2d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40c550 */\n#include <stdint.h>\n \nuint64_t fcn_0040c550 (int64_t arg_e8h_3, uint32_t arg_e8h_2, int64_t arg_e8h, char * arg_e0h, int64_t arg1, char * arg2, char * arg3, size_t * arg4, int64_t arg5, int64_t arg6) {\n    size_t * var_8h;\n    size_t * var_10h;\n    uint32_t var_1fh;\n    char * s;\n    size_t n;\n    size_t * var_30h;\n    size_t * var_38h;\n    size_t var_40h;\n    size_t var_48h;\n    void * s2;\n    char * var_58h;\n    uint32_t var_60h;\n    int64_t var_68h;\n    uint32_t var_6ch;\n    char * var_6dh;\n    int64_t var_6eh;\n    int64_t var_6fh;\n    int64_t var_70h;\n    int64_t var_78h;\n    wint_t wc;\n    mbstate_t * ps;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    do {\n        abort ();\nlabel_5:\n        r15 = rdi;\n        r14 = rsi;\n        r13d = r8d;\n        *((rsp + 0x20)) = rdx;\n        *((rsp + 8)) = rcx;\n        *((rsp + 0x68)) = r9d;\n        rax = ctype_get_mb_cur_max ();\n        ebp &= 2;\n        *((rsp + 0x60)) = rax;\n        rsp + 0x6c = (ebp != 0) ? 1 : 0;\n    } while (r13d > 0xa);\n    eax = r13d;\n    r11 = *((rsp + 8));\n    /* switch table (11 cases) at 0x417000 */\nlabel_30:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    r13d = 2;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x4182a7;\nlabel_21:\n    r9 = r11;\n    r12d = 0;\n    r11d = r13d;\n    do {\nlabel_28:\n        r13b = (r9 != r12) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            r13b = (*((rax + r12)) != 0) ? 1 : 0;\n        }\n        if (r13b == 0) {\n            goto label_47;\n        }\n        rdi = *((rsp + 0x20));\n        al = (r11d != 2) ? 1 : 0;\n        al &= *((rsp + 8));\n        r8 = rdi + r12;\n        *((rsp + 0x10)) = al;\n        if (al == 0) {\n            goto label_48;\n        }\n        rax = *((rsp + 0x28));\n        if (rax == 0) {\n            goto label_49;\n        }\n        rbp = r12 + rax;\n        if (r9 == -1) {\n            if (rax <= 1) {\n                goto label_50;\n            }\n            *((rsp + 0x40)) = r11d;\n            *((rsp + 0x38)) = r10b;\n            *((rsp + 0x30)) = r8;\n            rax = strlen (rdi);\n            r11d = *((rsp + 0x40));\n            r10d = *((rsp + 0x38));\n            r8 = *((rsp + 0x30));\n            r9 = rax;\n        }\nlabel_50:\n        if (rbp > r9) {\n            goto label_49;\n        }\n        rdi = r8;\n        *((rsp + 0x48)) = r11d;\n        *((rsp + 0x40)) = r9;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        eax = memcmp (rdi, *((rsp + 0x50)), *((rsp + 0x28)));\n        r8 = *((rsp + 0x30));\n        r10d = *((rsp + 0x38));\n        r9 = *((rsp + 0x40));\n        r11d = *((rsp + 0x48));\n        if (eax != 0) {\n            goto label_49;\n        }\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_51;\n        }\n        ebp = *(r8);\n        if (bpl > 0x7e) {\n            goto label_52;\n        }\n        eax = (int32_t) bpl;\n        /* switch table (127 cases) at 0x417058 */\n        *((rsp + 0x10)) = 0;\n        al = (r9 != 1) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            al = (*((rax + 1)) != 0) ? 1 : 0;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        if (al != 0) {\n            goto label_7;\n        }\nlabel_17:\n        if (r12 != 0) {\n            goto label_7;\n        }\nlabel_18:\n        if (*((rsp + 0x6c)) != 0) {\n            if (dl != 0) {\n                goto label_53;\n            }\n        }\nlabel_2:\n        eax = *((rsp + 8));\n        eax ^= 1;\n        eax |= edx;\n        eax ^= 1;\n        al |= *((rsp + 0x6c));\n        if (al == 0) {\n            goto label_11;\n        }\nlabel_24:\n        eax = 0;\nlabel_10:\n        if (*((rsp + 0xd0)) == 0) {\n            goto label_11;\n        }\n        edx = ebp;\n        rcx = *((rsp + 0xd0));\n        dl >>= 5;\n        edx = (int32_t) dl;\n        edx = *((rcx + rdx*4));\n        ecx = ebp;\n        edx >>= cl;\n        edx &= 1;\n        if (edx == 0) {\n            goto label_11;\n        }\n        dl = (r11d == 2) ? 1 : 0;\nlabel_0:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_54;\n        }\nlabel_4:\n        eax = r10d;\n        eax ^= 1;\n        al &= dl;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rdx = rbx + 1;\n            if (rdx < r14) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rdx = rbx + 2;\n            if (rdx < r14) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\nlabel_9:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n        r12++;\nlabel_1:\n        if (rbx < r14) {\n            *((r15 + rbx)) = bpl;\n        }\n        edi = *((rsp + 0x1f));\n        rbx++;\n        eax = 0;\n        if (r13b == 0) {\n            edi = eax;\n        }\n        *((rsp + 0x1f)) = dil;\n    } while (1);\nlabel_3:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    if (r14 == 0) {\n        goto label_56;\n    }\n    edx = 0;\n    if (*((rsp + 0x58)) != 0) {\n        goto label_56;\n    }\nlabel_27:\n    *((rsp + 0x6d)) = r13b;\n    rbx += 3;\n    eax = 0;\n    r10d = 0;\n    *((rsp + 0x58)) = r14;\n    r14 = rdx;\nlabel_11:\n    dl = (r11d == 2) ? 1 : 0;\n    if (*((rsp + 0x10)) != 0) {\n        goto label_0;\n    }\n    eax ^= 1;\n    r12++;\n    eax &= r10d;\nlabel_16:\n    if (al == 0) {\n        goto label_1;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x27;\n    }\n    rbx += 2;\n    r10d = 0;\n    goto label_1;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_57;\n    }\n    if (r11d == 5) {\n        goto label_58;\n    }\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_3;\n    }\n    *((rsp + 0x6d)) = r13b;\n    edx = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\nlabel_15:\n    edx = *((rsp + 8));\n    dl &= *((rsp + 0x6c));\n    ecx = 0x5c;\n    al = (*((rsp + 0x28)) != 0) ? 1 : 0;\n    dl &= al;\n    if (dl != 0) {\n        goto label_59;\n    }\nlabel_8:\n    if (*((rsp + 8)) != 0) {\n        goto label_60;\n    }\nlabel_7:\n    r13d = 0;\n    goto label_2;\nlabel_6:\n    edx = 0;\n    r13d = 0;\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_4;\n    }\nlabel_54:\n    r13d = r11d;\n    eax = edx;\n    r11 = r9;\nlabel_42:\nlabel_12:\n    eax = 4;\n    if (*((rsp + 8)) != 0) {\n        r13d = eax;\n    }\nlabel_43:\n    r9d &= 0xfffffffd;\n    rax = fcn_0040c550 (r15, r14, *((rsp + 0x40)), r11, r13d, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\nlabel_44:\n    rax = rbx;\n    return rax;\n    goto label_6;\n    *((rsp + 0x10)) = 0;\n    edx = 0;\n    goto label_7;\n    *((rsp + 0x10)) = 0;\n    ecx = 0x72;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    do {\nlabel_20:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_61;\n        }\nlabel_34:\n        r13d = 0;\n        goto label_9;\n    } while (1);\nlabel_14:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_62;\n    }\n    *((rsp + 0x10)) = 0;\n    eax = r10d;\n    dl = (r11d == 2) ? 1 : 0;\n    eax ^= 1;\n    al &= dl;\n    if (al == 0) {\n        goto label_63;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rcx = rbx + 1;\n    if (r14 > rcx) {\n        *((r15 + rbx + 1)) = 0x24;\n    }\n    rcx = rbx + 2;\n    if (r14 > rcx) {\n        *((r15 + rbx + 2)) = 0x27;\n    }\n    rcx = rbx + 3;\n    if (r14 <= rcx) {\n        goto label_64;\n    }\nlabel_26:\n    *((r15 + rcx)) = 0x5c;\n    r10d = eax;\nlabel_25:\n    rbx = rcx + 1;\n    if (r11d == 2) {\n        goto label_65;\n    }\n    rax = r12 + 1;\n    if (rax < r9) {\n        rax = *((rsp + 0x20));\n        eax = *((rax + r12 + 1));\n        *((rsp + 0x30)) = al;\n        eax -= 0x30;\n        if (al <= 9) {\n            goto label_66;\n        }\n    }\nlabel_35:\n    eax = *((rsp + 8));\n    eax ^= 1;\n    al |= dl;\n    eax = r13d;\n    r13d = 0;\n    if (al == 0) {\n        goto label_10;\n    }\n    goto label_11;\nlabel_19:\n    *((rsp + 0x10)) = 0;\n    do {\nlabel_52:\n        if (*((rsp + 0x60)) != 1) {\n            goto label_67;\n        }\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r9;\n        *((rsp + 0x30)) = r10b;\n        rax = ctype_b_loc ();\n        edx = (int32_t) bpl;\n        r10d = *((rsp + 0x30));\n        r9 = *((rsp + 0x38));\n        rax = *(rax);\n        r11d = *((rsp + 0x40));\n        edi = 1;\n        eax = *((rax + rdx*2));\n        ax &= 0x4000;\n        r13b = (ax != 0) ? 1 : 0;\n        dl = (ax == 0) ? 1 : 0;\n        dl &= *((rsp + 8));\nlabel_37:\n        if (dl != 0) {\n            goto label_68;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        goto label_2;\nlabel_48:\n        ebp = *(r8);\n    } while (bpl > 0x7e);\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x417450 */\n    ecx = 0x6e;\nlabel_13:\n    eax = *((rsp + 0x6c));\n    dl = (r11d == 2) ? 1 : 0;\n    al &= dl;\n    *((rsp + 0x10)) = al;\n    if (al == 0) {\n        goto label_8;\n    }\nlabel_53:\n    r11 = r9;\n    r13d = 2;\n    goto label_12;\n    ecx = 0x74;\n    goto label_13;\n    ecx = 0x62;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x61;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    if (*((rsp + 8)) != 0) {\n        goto label_14;\n    }\n    if ((*((rsp + 0x68)) & 1) != 0) {\n        goto label_69;\n    }\n    *((rsp + 0x10)) = 0;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    ebp = 0;\n    goto label_2;\n    if (r11d != 2) {\n        goto label_15;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_17;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_18;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_18;\n    ecx = 0x72;\n    goto label_13;\n    ecx = 0x66;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x76;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\nlabel_49:\n    ebp = *(r8);\n    if (bpl > 0x7e) {\n        goto label_19;\n    }\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x417848 */\n    eax = 0;\n    do {\nlabel_31:\n        r13d = *((rsp + 0x10));\n        *((rsp + 0x10)) = al;\n        eax = 0;\n        goto label_10;\n        eax = 0;\nlabel_32:\n        if (r12 != 0) {\n            goto label_70;\n        }\n        r13d = *((rsp + 0x10));\n        edx = 0;\n        *((rsp + 0x10)) = al;\n        goto label_2;\n        eax = 0;\nlabel_33:\n    } while (1);\n    goto label_6;\n    goto label_20;\nlabel_47:\n    r13d = r11d;\n    r11 = r9;\n    dl = (r13d == 2) ? 1 : 0;\n    if (rbx == 0) {\n        if ((*((rsp + 0x6c)) & dl) != 0) {\n            goto label_71;\n        }\n    }\n    eax = *((rsp + 0x6c));\n    eax ^= 1;\n    dl &= al;\n    if (dl == 0) {\n        goto label_72;\n    }\n    if (*((rsp + 0x6d)) == 0) {\n        goto label_45;\n    }\n    if (*((rsp + 0x1f)) != 0) {\n        goto label_73;\n    }\n    al = (r14 == 0) ? 1 : 0;\n    dl = (*((rsp + 0x58)) != 0) ? 1 : 0;\n    al &= dl;\n    if (al == 0) {\n        goto label_74;\n    }\n    r14 = *((rsp + 0x58));\nlabel_46:\n    *(r15) = 0x27;\n    r13d = 2;\n    ebx = 1;\n    *((rsp + 0x50)) = 0x4182a7;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x6c)) = 0;\n    *((rsp + 0x6d)) = al;\n    goto label_21;\nlabel_58:\n    if ((*((rsp + 0x68)) & 4) != 0) {\n        rax = r12 + 2;\n        if (rax >= r9) {\n            goto label_39;\n        }\n        rsi = *((rsp + 0x20));\n        if (*((rsi + r12 + 1)) == 0x3f) {\n            goto label_75;\n        }\n    }\nlabel_39:\n    edx = 0;\n    r13d = 0;\n    goto label_2;\nlabel_57:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r13d = 0;\n    eax = 0;\n    goto label_11;\nlabel_67:\n    *((rsp + 0x88)) = 0;\n    if (r9 == -1) {\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        rax = strlen (*((rsp + 0x20)));\n        r11d = *((rsp + 0x40));\n        r10d = *((rsp + 0x38));\n        r8 = *((rsp + 0x30));\n        r9 = rax;\n    }\n    eax = 0;\n    *((rsp + 0x70)) = rbx;\n    *((rsp + 0x78)) = r8;\n    rbx = rax;\n    *((rsp + 0x6e)) = r10b;\n    *((rsp + 0x6f)) = bpl;\n    *((rsp + 0x40)) = r15;\n    *((rsp + 0x48)) = r14;\n    *((rsp + 0x30)) = r9;\n    *((rsp + 0x38)) = r11d;\n    while (*((rsp + 0x38)) != 2) {\nlabel_22:\n        eax = iswprint (*((rsp + 0x84)));\n        rdi = rsp + 0x88;\n        eax = 0;\n        if (eax == 0) {\n            r13d = eax;\n        }\n        rbx += r14;\n        eax = mbsinit (rdi);\n        if (eax != 0) {\n            goto label_76;\n        }\n        rax = *((rsp + 0x20));\n        r15 = r12 + rbx;\n        rbp = rax + r15;\n        rdx -= r15;\n        rax = fcn_00413710 (rsp + 0x84, rbp, *((rsp + 0x30)), rsp + 0x88);\n        r14 = rax;\n        if (rax == 0) {\n            goto label_76;\n        }\n        if (rax == -1) {\n            goto label_77;\n        }\n        if (rax == 0xfffffffffffffffe) {\n            goto label_78;\n        }\n    }\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_22;\n    }\n    if (rax == 1) {\n        goto label_22;\n    }\n    rsi = *((rsp + 0x20));\n    rax = rsi + r15 + 1;\n    rsi += r14;\n    rsi += r15;\n    goto label_79;\nlabel_23:\n    rax++;\n    if (rsi == rax) {\n        goto label_22;\n    }\nlabel_79:\n    ecx = *(rax);\n    ecx -= 0x5b;\n    if (cl > 0x21) {\n        goto label_23;\n    }\n    edx = 1;\n    rdx <<= cl;\n    rcx = 0x20000002b;\n    if ((rdx & rcx) == 0) {\n        goto label_23;\n    }\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r13d = 2;\n    r11 = *((rsp + 0x30));\n    goto label_12;\nlabel_70:\n    *((rsp + 0x10)) = al;\n    r13d = 0;\n    goto label_24;\nlabel_63:\n    rcx = rbx;\n    if (r14 <= rbx) {\n        goto label_25;\n    }\n    eax = r10d;\n    goto label_26;\nlabel_56:\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x5c;\n    }\n    rax = rbx + 2;\n    if (r14 <= rax) {\n        goto label_80;\n    }\n    rdx = r14;\n    *((r15 + rbx + 2)) = 0x27;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_69:\n    r12++;\n    goto label_28;\nlabel_68:\n    edx = *((rsp + 8));\n    r13d = 0;\nlabel_36:\n    rcx = rdi;\n    *((rsp + 0x30)) = r13b;\n    esi = 0;\n    r13d = *((rsp + 0x6c));\n    rcx += r12;\n    edi = *((rsp + 0x10));\n    r8 = *((rsp + 0x20));\n    while (dl != 0) {\n        al = (r11d == 2) ? 1 : 0;\n        if (r13b != 0) {\n            goto label_81;\n        }\n        esi = r10d;\n        esi ^= 1;\n        al &= sil;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rsi = rbx + 1;\n            if (r14 > rsi) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rsi = rbx + 2;\n            if (r14 > rsi) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 6;\n            eax += 0x30;\n            *((r15 + rbx + 1)) = al;\n        }\n        rax = rbx + 2;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 3;\n            eax &= 7;\n            eax += 0x30;\n            *((r15 + rbx + 2)) = al;\n        }\n        ebp &= 7;\n        r12++;\n        rbx += 3;\n        ebp += 0x30;\n        if (r12 >= rcx) {\n            goto label_82;\n        }\n        esi = edx;\nlabel_29:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = bpl;\n        }\n        ebp = *((r8 + r12));\n        rbx++;\n    }\n    eax = esi;\n    eax ^= 1;\n    eax &= r10d;\n    if (dil != 0) {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n    }\n    r12++;\n    if (r12 < rcx) {\n        if (al == 0) {\n            goto label_83;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x27;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            *((r15 + rbx + 1)) = 0x27;\n        }\n        rbx += 2;\n        edi = 0;\n        r10d = 0;\n        goto label_29;\n    }\n    r13d = *((rsp + 0x30));\n    goto label_16;\nlabel_81:\n    r13d = r11d;\n    *((rsp + 8)) = al;\n    r11 = r9;\n    goto label_12;\nlabel_64:\n    rbx += 4;\n    r10d = eax;\n    r13d = 0;\n    goto label_11;\n    if (ebp != 0) {\n        goto label_30;\n    }\n    *((rsp + 8)) = 1;\n    do {\n        if (r14 != 0) {\n            goto label_84;\n        }\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 1;\n        r13d = 2;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x4182a7;\n        goto label_21;\n        if (ebp != 0) {\n            goto label_85;\n        }\n        if (r14 == 0) {\n            goto label_86;\n        }\n        *(r15) = 0x22;\n        r10d = 0;\n        *((rsp + 0x1f)) = 1;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\nlabel_38:\n        *((rsp + 0x6c)) = 0;\n        ebx = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x416f94;\n        goto label_21;\n        if (r14 != 0) {\n            *((rsp + 8)) = r11;\n            rax = fcn_0040c450 (0x416fa5, r13d);\n            *((rsp + 0xd8)) = rax;\n            rax = fcn_0040c450 (0x4182a7, r13d);\n            r11 = *((rsp + 8));\n            *((rsp + 0xe0)) = rax;\n        }\n        ebx = 0;\n        if (ebp == 0) {\n            goto label_87;\n        }\nlabel_41:\n        *((rsp + 0x10)) = r11;\n        rax = strlen (*((rsp + 0xe0)));\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        r11 = *((rsp + 0x10));\n        *((rsp + 0x28)) = rax;\n        rax = *((rsp + 0xe0));\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x50)) = rax;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 8)) = 1;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 0;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 5;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x416f94;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 2;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x4182a7;\n        goto label_21;\n        eax = *((rsp + 0x10));\n        goto label_31;\n        eax = *((rsp + 0x10));\n        goto label_32;\n        eax = *((rsp + 0x10));\n        goto label_33;\n        edx = 0;\n        r13d = 0;\n        goto label_4;\n        goto label_34;\nlabel_66:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x30;\n        }\n        rax = rcx + 2;\n        if (r14 > rax) {\n            *((r15 + rcx + 2)) = 0x30;\n        }\n        rbx = rcx + 3;\n        goto label_35;\n        if (ebp != 0) {\n            goto label_88;\n        }\n        *((rsp + 8)) = 0;\n    } while (1);\nlabel_82:\n    r13d = *((rsp + 0x30));\n    goto label_1;\nlabel_59:\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\nlabel_83:\n    edi = 0;\n    goto label_29;\nlabel_76:\n    rdi = rbx;\n    edx = r13d;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    edx ^= 1;\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    dl &= *((rsp + 8));\nlabel_40:\n    if (rdi > 1) {\n        goto label_36;\n    }\n    goto label_37;\nlabel_86:\n    *((rsp + 0x58)) = 0;\n    r10d = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x6d)) = 0;\n    goto label_38;\nlabel_65:\n    eax = r13d;\n    r13d = 0;\n    goto label_11;\nlabel_75:\n    ebp = *((rsi + rax));\n    if (bpl > 0x3e) {\n        goto label_39;\n    }\n    rsi = 0x7000a38200000000;\n    if (((rsi >> rbp) & 1) >= 0) {\n        goto label_39;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_51;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x3f;\n    }\n    rdx = rbx + 1;\n    if (r14 > rdx) {\n        *((r15 + rbx + 1)) = 0x22;\n    }\n    rdx = rbx + 2;\n    if (r14 > rdx) {\n        *((r15 + rbx + 2)) = 0x22;\n    }\n    rdx = rbx + 3;\n    if (r14 > rdx) {\n        *((r15 + rbx + 3)) = 0x3f;\n    }\n    rbx += 4;\n    edx = 0;\n    r13d = 0;\n    r12 = rax;\n    goto label_35;\nlabel_77:\n    rdi = rbx;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r13d = 0;\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    edx = *((rsp + 8));\n    goto label_40;\nlabel_78:\n    r9 = *((rsp + 0x30));\n    rsi = r15;\n    rcx = rbp;\n    rax = rbx;\n    rdi = rbx;\n    r8 = *((rsp + 0x78));\n    r10d = *((rsp + 0x6e));\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r11d = *((rsp + 0x38));\n    if (rsi >= r9) {\n        goto label_89;\n    }\n    if (*(rcx) != 0) {\n        goto label_90;\n    }\n    goto label_89;\n    do {\n        if (*((r8 + rax)) == 0) {\n            goto label_91;\n        }\nlabel_90:\n        rax++;\n        rdx = r12 + rax;\n    } while (rdx < r9);\nlabel_91:\n    rdi = rax;\nlabel_89:\n    edx = *((rsp + 8));\n    r13d = 0;\n    goto label_40;\nlabel_87:\n    rax = *((rsp + 0xd8));\n    eax = *(rax);\n    if (al == 0) {\n        goto label_41;\n    }\n    rdx = *((rsp + 0xd8));\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = al;\n        }\n        rbx++;\n        eax = *((rdx + rbx));\n    } while (al != 0);\n    goto label_41;\nlabel_61:\n    r13d = r11d;\n    eax = 0;\n    r11 = r9;\n    goto label_42;\nlabel_85:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 1;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x416f94;\n    goto label_21;\nlabel_51:\n    r13d = r11d;\n    r11 = r9;\n    goto label_43;\nlabel_72:\n    edx = eax;\nlabel_45:\n    rax = *((rsp + 0x50));\n    if (rax == 0) {\n        goto label_92;\n    }\n    if (dl == 0) {\n        goto label_92;\n    }\n    edx = *(rax);\n    if (dl == 0) {\n        goto label_92;\n    }\n    rax -= rbx;\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = dl;\n        }\n        rbx++;\n        edx = *((rax + rbx));\n    } while (dl != 0);\nlabel_92:\n    if (r14 <= rbx) {\n        goto label_44;\n    }\n    *((r15 + rbx)) = 0;\n    goto label_44;\nlabel_55:\n    r13d = r11d;\n    r11 = r9;\n    goto label_12;\nlabel_62:\n    r13d = r11d;\n    r11 = r9;\n    rsp + 8 = (r13d == 2) ? 1 : 0;\n    goto label_12;\nlabel_73:\n    rax = fcn_0040c550 (r15, *((rsp + 0x78)), *((rsp + 0x40)), r11, 5, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\n    goto label_44;\nlabel_74:\n    edx = *((rsp + 0x6d));\n    goto label_45;\nlabel_71:\n    r13d = 2;\n    goto label_12;\nlabel_84:\n    r10d = 0;\n    eax = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x58)) = 0;\n    goto label_46;\nlabel_80:\n    rdx = r14;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_88:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x4182a7;\n    goto label_21;\nlabel_60:\n    r13d = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040d780",
            "funcStartAddr": "0x40d780",
            "funcEndAddr": "0x418305",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40d780 */\n#include <stdint.h>\n \nuint64_t fcn_0040d780 (int64_t arg1, char * arg2, int64_t arg3, int64_t arg4) {\n    char * var_8h;\n    char * var_30h;\n    int64_t var_18h;\n    int64_t var_24h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    do {\n        abort ();\n        r15 = (int64_t) edi;\n        r14 = rdx;\n        *((rsp + 8)) = rsi;\n        rax = errno_location ();\n        rbx = *(0x0061d458);\n        r13 = rax;\n        eax = *(rax);\n        *((rsp + 0x18)) = eax;\n    } while (r15d < 0);\n    if (*(0x0061d470) > r15d) {\n        goto label_0;\n    }\n    if (r15d == 0x7fffffff) {\n        goto label_1;\n    }\n    r12d = r15 + 1;\n    rsi = (int64_t) r12d;\n    rsi <<= 4;\n    if (rbx == 0x61d460) {\n        goto label_2;\n    }\n    rax = fcn_00410140 (rbx, rsi);\n    *(0x0061d458) = rax;\n    rbx = rax;\n    do {\n        rdi = *(0x0061d470);\n        edx -= edi;\n        rdi <<= 4;\n        rdx = (int64_t) edx;\n        rdi += rbx;\n        rdx <<= 4;\n        memset (rdi, 0, r12d);\n        *(0x0061d470) = r12d;\nlabel_0:\n        eax = *((rbp + 4));\n        r15 <<= 4;\n        rbx += r15;\n        r15 = rbp + 8;\n        eax |= 1;\n        r11 = *(rbx);\n        r12 = *((rbx + 8));\n        *((rsp + 0x24)) = eax;\n        rsi = r11;\n        *((rsp + 0x30)) = r11;\n        rax = fcn_0040c550 (r12, rsi, *((rsp + 0x28)), r14, *(rbp), eax);\n        r11 = *((rsp + 0x10));\n        if (r11 <= rax) {\n            rsi = rax + 1;\n            *(rbx) = rsi;\n            if (r12 != 0x61d960) {\n                *((rsp + 0x10)) = rsi;\n                free (r12);\n                rsi = *((rsp + 0x10));\n            }\n            *((rsp + 0x10)) = rsi;\n            rax = fcn_004100e0 (*((rsp + 0x10)));\n            *((rbx + 8)) = rax;\n            rdi = rax;\n            r12 = rax;\n            fcn_0040c550 (rdi, *((rsp + 0x30)), *((rsp + 0x28)), r14, *(rbp), *((rsp + 0x3c)));\n        }\n        eax = *((rsp + 0x18));\n        *(r13) = eax;\n        rax = r12;\n        return rax;\nlabel_2:\n        rax = fcn_00410140 (0, rsi);\n        __asm (\"movdqa xmm0, xmmword [0x0061d460]\");\n        rbx = rax;\n        *(0x0061d458) = rax;\n        __asm (\"movups xmmword [rax], xmm0\");\n    } while (1);\nlabel_1:\n    return fcn_00410330 ();\n}\n"
        },
        {
            "funcName": "fcn_0040dca0",
            "funcStartAddr": "0x40dca0",
            "funcEndAddr": "0x418c0a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40dca0 */\n#include <stdint.h>\n \nint64_t fcn_0040dca0 (int64_t arg1, uint32_t arg2, char * arg3) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    do {\n        abort ();\n    } while (esi == 0xa);\n    rax = rdx;\n    *(rsp) = esi;\n    *((rsp + 4)) = 0;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x30)) = 0;\n    fcn_0040d780 (rdi, rax, 0xffffffffffffffff, rsp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040dd80",
            "funcStartAddr": "0x40dd80",
            "funcEndAddr": "0x40dd8c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40dd80 */\n#include <stdint.h>\n \nvoid fcn_0040dd80 (int64_t arg1, char * arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = rsi;\n    esi = edi;\n    edi = 0;\n    return void (*0x40dca0)() ();\n}\n"
        },
        {
            "funcName": "fcn_0040de20",
            "funcStartAddr": "0x40de20",
            "funcEndAddr": "0x40deb1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40de20 */\n#include <stdint.h>\n \nint64_t fcn_0040de20 (int64_t arg1, int64_t arg7, int64_t arg8, int64_t arg9) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_20h;\n    int64_t var_30h;\n    rdi = arg1;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    xmm2 = arg9;\n    do {\n        rax = imp.__libc_start_main;\n        ecx = edx;\n        __asm (\"movdqa xmm0, xmmword [0x0061da60]\");\n        __asm (\"movdqa xmm1, xmmword [0x0061da70]\");\n        __asm (\"movdqa xmm2, xmmword [0x0061da80]\");\n        ecx &= 0x1f;\n        *((rsp + 0x30)) = rax;\n        eax = edx;\n        al >>= 5;\n        *(rsp) = xmm0;\n        eax = (int32_t) al;\n        *((rsp + 0x10)) = xmm1;\n        r8 = rsp + rax*4 + 8;\n        *((rsp + 0x20)) = xmm2;\n        edx = *(r8);\n        eax = *(r8);\n        eax >>= cl;\n        eax = ~eax;\n        eax &= 1;\n        eax <<= cl;\n        eax ^= edx;\n        *(r8) = eax;\n        fcn_0040d780 (0, rdi, rsi, rsp);\n        return rax;\n        edx = 0x3a;\n        rsi = 0xffffffffffffffff;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040de50",
            "funcStartAddr": "0x40de50",
            "funcEndAddr": "0x418f66",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40de50 */\n#include <stdint.h>\n \nint64_t fcn_0040de50 (int64_t arg1, uint32_t arg2, char * arg3) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    do {\n        abort ();\n    } while (esi == 0xa);\n    rcx = 0x400000000000000;\n    rax = rdx;\n    *(rsp) = esi;\n    *((rsp + 8)) = rcx;\n    *((rsp + 4)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x30)) = 0;\n    fcn_0040d780 (rdi, rax, 0xffffffffffffffff, rsp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040dfb0",
            "funcStartAddr": "0x40dfb0",
            "funcEndAddr": "0x40dfc1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40dfb0 */\n#include <stdint.h>\n \nvoid fcn_0040dfb0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    ecx = 0x61d420;\n    rdx = 0xffffffffffffffff;\n    return void (*0x40d780)() ();\n}\n"
        },
        {
            "funcName": "fcn_0040dfd0",
            "funcStartAddr": "0x40dfd0",
            "funcEndAddr": "0x40dfe6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40dfd0 */\n#include <stdint.h>\n \nvoid fcn_0040dfd0 (int64_t arg1) {\n    rdi = arg1;\n    rsi = rdi;\n    ecx = 0x61d420;\n    rdx = 0xffffffffffffffff;\n    edi = 0;\n    return void (*0x40d780)() ();\n}\n"
        },
        {
            "funcName": "fcn_0040dff0",
            "funcStartAddr": "0x40dff0",
            "funcEndAddr": "0x40e232",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40dff0 */\n#include <stdint.h>\n \nuint64_t fcn_0040dff0 (int64_t arg1, void * arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_28h;\n    int64_t var_a0h;\n    int64_t var_b8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9d = r8d;\n    eax = 0;\n    r14d = edi;\n    r13d = edx;\n    r12 = rcx;\n    r8 = rcx;\n    ecx = edx;\n    rdx = rsi;\n    rbx = rsi;\n    esi = edi;\n    edi = 0x13c;\n    eax = syscall ();\n    edx = eax;\n    if (eax >= 0) {\n        goto label_0;\n    }\n    *((rsp + 8)) = eax;\n    rax = errno_location ();\n    edx = *((rsp + 8));\n    r9 = rax;\n    eax = *(rax);\n    ecx = rax - 0x16;\n    ecx &= 0xffffffef;\n    r15b = (ecx != 0) ? 1 : 0;\n    al = (eax != 0x5f) ? 1 : 0;\n    r15b &= al;\n    if (r15b != 0) {\n        goto label_0;\n    }\n    if (ebp == 0) {\n        goto label_2;\n    }\n    ebp &= 0xfffffffe;\n    if (ebp == 0) {\n        goto label_3;\n    }\n    *(r9) = 0x5f;\n    edx = 0xffffffff;\n    do {\nlabel_0:\n        eax = edx;\n        return rax;\nlabel_3:\n        rdx = r12;\n        esi = r13d;\n        edi = 1;\n        *((rsp + 8)) = r9;\n        r8d = 0x100;\n        rcx = rsp + 0xa0;\n        eax = fxstatat ();\n        r9 = *((rsp + 8));\n        if (eax == 0) {\n            goto label_4;\n        }\n        eax = *(r9);\n        if (eax == 0x4b) {\n            goto label_4;\n        }\n        if (eax != 2) {\n            goto label_1;\n        }\n        r15d = 1;\nlabel_2:\n        *((rsp + 8)) = r9;\n        rax = strlen (rbx);\n        rax = strlen (r12);\n        if (rbp == 0) {\n            goto label_5;\n        }\n        r9 = *((rsp + 8));\n        if (rax == 0) {\n            goto label_5;\n        }\n        if (*((rbx + rbp - 1)) != 0x2f) {\n            if (*((r12 + rax - 1)) != 0x2f) {\n                goto label_5;\n            }\n        }\n        rcx = rsp + 0x10;\n        rdx = rbx;\n        esi = r14d;\n        edi = 1;\n        r8d = 0x100;\n        *((rsp + 8)) = r9;\n        eax = fxstatat ();\n        if (eax != 0) {\n            goto label_1;\n        }\n        r9 = *((rsp + 8));\n        if (r15b == 0) {\n            goto label_6;\n        }\n        eax = *((rsp + 0x28));\n        eax &= 0xf000;\n        if (eax == 0x4000) {\n            goto label_5;\n        }\n        *(r9) = 2;\n        edx = 0xffffffff;\n    } while (1);\n    do {\n        eax = *((rsp + 0xb8));\n        eax &= 0xf000;\n        if (eax == 0x4000) {\n            goto label_7;\n        }\n        *(r9) = 0x14;\nlabel_1:\n        edx = 0xffffffff;\n        goto label_0;\nlabel_6:\n        rdx = r12;\n        esi = r13d;\n        edi = 1;\n        *((rsp + 8)) = r9;\n        r8d = 0x100;\n        rcx = rsp + 0xa0;\n        eax = fxstatat ();\n        r9 = *((rsp + 8));\n    } while (eax == 0);\n    if (*(r9) != 2) {\n        goto label_1;\n    }\n    eax = *((rsp + 0x28));\n    eax &= 0xf000;\n    if (eax != 0x4000) {\n        goto label_1;\n    }\n    do {\nlabel_5:\n        edx = r13d;\n        rcx = r12;\n        rsi = rbx;\n        edi = r14d;\n        eax = renameat ();\n        edx = eax;\n        goto label_0;\nlabel_4:\n        *(r9) = 0x11;\n        edx = 0xffffffff;\n        goto label_0;\nlabel_7:\n        eax = *((rsp + 0x28));\n        eax &= 0xf000;\n    } while (eax == 0x4000);\n    *(r9) = 0x15;\n    edx = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040e240",
            "funcStartAddr": "0x40e240",
            "funcEndAddr": "0x40e28b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40e240 */\n#include <stdint.h>\n \nuint64_t fcn_0040e240 (int64_t arg1) {\n    int64_t var_8h;\n    rdi = arg1;\n    esi = 0x416f8e;\n    rbx = rdi;\n    edi = 1;\n    rdx = rsp;\n    eax = lxstat ();\n    if (eax == 0) {\n        rax = *((rsp + 8));\n        *(rbx) = rax;\n        rax = *(rsp);\n        *((rbx + 8)) = rax;\n        rax = rbx;\n        return rax;\n    }\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040e290",
            "funcStartAddr": "0x40e290",
            "funcEndAddr": "0x40e2ee",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40e290 */\n#include <stdint.h>\n \nuint64_t fcn_0040e290 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13d = edi;\n    r12 = rsi;\n    rbx = rdx;\n    do {\nlabel_0:\n        rax = write (r13d, r12, rbx);\n        if (rax >= 0) {\n            goto label_1;\n        }\n        rax = errno_location ();\n        eax = *(rax);\n    } while (eax == 4);\n    if (eax == 0x16) {\n        if (rbx <= 0x7fffe000) {\n            goto label_1;\n        }\n        ebx = 0x7fffe000;\n        goto label_0;\n    }\nlabel_1:\n    rax = rbp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040e2f0",
            "funcStartAddr": "0x40e2f0",
            "funcEndAddr": "0x40e420",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40e2f0 */\n#include <stdint.h>\n \nuint64_t fcn_0040e2f0 (char * arg1, char * arg2) {\n    uint32_t var_8h;\n    int64_t var_90h;\n    int64_t var_98h;\n    rdi = arg1;\n    rsi = arg2;\n    r15 = rdi;\n    r14 = rsi;\n    ebx = 0;\n    rax = fcn_0040aa00 (rdi);\n    rax = fcn_0040aa00 (r14);\n    r12 = rax;\n    rax = fcn_0040aa60 (rbp);\n    r13 = rax;\n    rax = fcn_0040aa60 (r12);\n    while (eax != 0) {\nlabel_0:\n        eax = ebx;\n        return rax;\n        eax = memcmp (rbp, r12, r13);\n    }\n    rdi = r15;\n    rax = fcn_0040a920 ();\n    rdi = r14;\n    rax = fcn_0040a920 ();\n    rdx = rsp;\n    rsi = rbp;\n    edi = 1;\n    r12 = rax;\n    eax = xstat ();\n    if (eax != 0) {\n        goto label_2;\n    }\nlabel_1:\n    rdx = rsp + 0x90;\n    rsi = r12;\n    edi = 1;\n    eax = xstat ();\n    while (1) {\n        ebx = 0;\n        rax = *((rsp + 0x98));\n        if (*((rsp + 8)) == rax) {\n            rax = *((rsp + 0x90));\n            bl = (*(rsp) == rax) ? 1 : 0;\n        }\n        free (rbp);\n        free (r12);\n        goto label_0;\n        rax = errno_location ();\n        rcx = r12;\n        eax = 0;\n        error (1, *(rax), 0x418333);\n    }\nlabel_2:\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    error (1, *(rax), 0x418333);\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040e450",
            "funcStartAddr": "0x40e450",
            "funcEndAddr": "0x40e7e4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40e450 */\n#include <stdint.h>\n \nint64_t fcn_0040e450 (int64_t arg1, int64_t arg2) {\n    uint32_t const void *);\n    uint32_t var_10h;\n    int64_t var_18h;\n    uint32_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    rdi = arg1;\n    rsi = arg2;\n    rax = *((rsi*8 + 0x417ce0));\n    *((rsp + 8)) = rax;\n    if (rdi == 0) {\n        goto label_9;\n    }\n    rbx = rdi;\n    r15d = 0;\n    r12d = 0;\n    r14d = 0;\n    rax = errno_location ();\n    r13d = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x10)) = 0;\n    while (al != 0x2e) {\nlabel_1:\n        if (al != 0) {\n            goto label_10;\n        }\nlabel_0:\n        *(rbp) = 0;\n        rdi = rbx;\n        rax = readdir ();\n        rcx = rax;\n        if (rax == 0) {\n            goto label_11;\n        }\n        r8 = rax + 0x13;\n        eax = *((rax + 0x13));\n    }\n    if (*((rcx + 0x14)) == 0x2e) {\n        goto label_12;\n    }\n    eax = *((rcx + 0x14));\n    if (al == 0) {\n        goto label_0;\n    }\nlabel_10:\n    rdi = r8;\n    *((rsp + 0x18)) = r8;\n    *((rsp + 0x28)) = rcx;\n    strlen (rdi);\n    r8 = *((rsp + 0x18));\n    rdx = rax + 1;\n    if (*((rsp + 8)) == 0) {\n        goto label_13;\n    }\n    rax = r12 + 1;\n    rcx = *((rsp + 0x28));\n    *((rsp + 0x18)) = rax;\n    if (r12 == *((rsp + 0x20))) {\n        goto label_14;\n    }\nlabel_2:\n    *((rsp + 0x30)) = rdx;\n    r12 <<= 4;\n    *((rsp + 0x28)) = rcx;\n    r12 += r14;\n    rax = fcn_00410310 (r8);\n    rcx = *((rsp + 0x28));\n    rdx = *((rsp + 0x30));\n    *(r12) = rax;\n    rax = *(rcx);\n    r15 += rdx;\n    *((r12 + 8)) = rax;\n    r12 = *((rsp + 0x18));\n    goto label_0;\nlabel_12:\n    eax = *((rcx + 0x15));\n    goto label_1;\nlabel_11:\n    ebx = *(rbp);\n    if (ebx != 0) {\n        goto label_15;\n    }\n    if (*((rsp + 8)) == 0) {\n        goto label_16;\n    }\n    rbx = r15 + 1;\n    if (r12 == 0) {\n        rax = fcn_004100e0 (rbx);\n        r13 = rax;\n        goto label_17;\n    }\n    rcx = *((rsp + 8));\n    rsi = r12;\n    edx = 0x10;\n    rdi = r14;\n    r12 <<= 4;\n    ebp = 0;\n    qsort ();\n    r12 += r14;\n    rbx = r14;\n    rax = fcn_004100e0 (rbx);\n    r13 = rax;\n    do {\n        r15 = r13 + rbp;\n        rsi = *(rbx);\n        rbx += 0x10;\n        rdi = r15;\n        rax = stpcpy ();\n        rax -= r15;\n        rbp = rbp + rax + 1;\n        free (*((rbx - 0x10)));\n    } while (rbx != r12);\n    rbp += r13;\nlabel_17:\n    free (r14);\n    do {\nlabel_3:\n        *(rbp) = 0;\nlabel_4:\n        rax = r13;\n        return rax;\nlabel_13:\n        rax = *((rsp + 0x10));\n        rsi = r15;\n        rax -= r15;\n        rsi += rdx;\n        cl = (rsi < 0) ? 1 : 0;\n        *((rsp + 0x18)) = rsi;\n        ecx = (int32_t) cl;\n        if (rax <= rdx) {\n            if (rcx != 0) {\n                goto label_8;\n            }\n            if (r13 == 0) {\n                goto label_18;\n            }\n            rax = 0x5555555555555553;\n            rsi = *((rsp + 0x18));\n            if (rsi > rax) {\n                goto label_8;\n            }\n            rax = rsi;\n            rax >>= 1;\n            rax = rsi + rax + 1;\nlabel_5:\n            *((rsp + 0x10)) = rax;\nlabel_6:\n            *((rsp + 0x30)) = rdx;\n            *((rsp + 0x28)) = r8;\n            rax = fcn_00410140 (r13, *((rsp + 0x10)));\n            r8 = *((rsp + 0x28));\n            r13 = rax;\n        }\n        memcpy (r13 + r15, r8, *((rsp + 0x30)));\n        r15 = *((rsp + 0x18));\n        goto label_0;\nlabel_16:\n        if (*((rsp + 0x10)) == r15) {\n            goto label_19;\n        }\n        rbp = r13 + r15;\n    } while (1);\nlabel_14:\n    if (r14 == 0) {\n        goto label_20;\n    }\n    rax = 0x555555555555554;\n    if (r12 > rax) {\n        goto label_8;\n    }\n    rax = r12;\n    rax >>= 1;\n    rax += *((rsp + 0x18));\n    *((rsp + 0x20)) = rax;\n    rsi <<= 4;\nlabel_7:\n    *((rsp + 0x38)) = rdx;\n    *((rsp + 0x30)) = r8;\n    *((rsp + 0x28)) = rcx;\n    rax = fcn_00410140 (r14, rax);\n    rdx = *((rsp + 0x38));\n    r8 = *((rsp + 0x30));\n    r14 = rax;\n    rcx = *((rsp + 0x28));\n    goto label_2;\nlabel_19:\n    rbx = *((rsp + 0x10));\n    rax = fcn_00410140 (r13, rbx + 1);\n    r13 = rax;\n    rbp = rax + rbx;\n    goto label_3;\nlabel_15:\n    free (r14);\n    r13d = 0;\n    free (r13);\n    *(rbp) = ebx;\n    goto label_4;\nlabel_9:\n    r13d = 0;\n    goto label_4;\nlabel_18:\n    rax = rsi;\n    if (rsi == 0) {\n        goto label_21;\n    }\n    if (rsi >= 0) {\n        goto label_5;\n    }\n    do {\nlabel_8:\n        fcn_00410330 ();\nlabel_21:\n        *((rsp + 0x10)) = 0x80;\n        goto label_6;\nlabel_20:\n        if (r12 == 0) {\n            goto label_22;\n        }\n        rax = r12;\n        rsi = r12;\n        rax >>= 0x3c;\n        al = (rax != 0) ? 1 : 0;\n        rsi <<= 4;\n        eax = (int32_t) al;\n    } while (rsi < 0);\n    if (rax == 0) {\n        goto label_7;\n    }\n    goto label_8;\nlabel_22:\n    *((rsp + 0x20)) = 8;\n    esi = 0x80;\n    *((rsp + 0x18)) = 1;\n    goto label_7;\n}\n"
        },
        {
            "funcName": "fcn_0040e7f0",
            "funcStartAddr": "0x40e7f0",
            "funcEndAddr": "0x40e858",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40e7f0 */\n#include <stdint.h>\n \nuint64_t fcn_0040e7f0 (int64_t arg2) {\n    rsi = arg2;\n    rax = fcn_0040a880 ();\n    if (rax != 0) {\n        rbx = rax;\n        rax = fcn_0040e450 (rax, ebp);\n        rdi = rbx;\n        eax = closedir ();\n        if (eax != 0) {\n            goto label_0;\n        }\n        rax = rbp;\n        return rax;\n    }\n    ebp = 0;\n    rax = rbp;\n    return rax;\nlabel_0:\n    rax = errno_location ();\n    ebp = 0;\n    r12d = *(rax);\n    rbx = rax;\n    free (rbp);\n    rax = rbp;\n    *(rbx) = r12d;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040e8f0",
            "funcStartAddr": "0x40e8f0",
            "funcEndAddr": "0x40e90d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40e8f0 */\n#include <stdint.h>\n \nvoid fcn_0040e8f0 (void) {\n    return assert_fail (\"! \\\"invalid KIND in __gen_tempname\\\", \"lib/tempname.c\", 0x147, \"gen_tempname_len\");\n}\n"
        },
        {
            "funcName": "fcn_0040e910",
            "funcStartAddr": "0x40e910",
            "funcEndAddr": "0x40ea6d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40e910 */\n#include <stdint.h>\n \nuint64_t fcn_0040e910 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_2ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r14 = rdi;\n    r13 = r8;\n    *((rsp + 0x18)) = rdx;\n    *((rsp + 8)) = rdi;\n    *((rsp + 0x20)) = rcx;\n    rax = errno_location ();\n    r15 = rax;\n    eax = *(rax);\n    *((rsp + 0x2c)) = eax;\n    rax = strlen (r14);\n    rdx = (int64_t) ebp;\n    rdx += r13;\n    if (rdx > rax) {\n        goto label_2;\n    }\n    rax -= rdx;\n    rbx = rax;\n    rax = r14 + rax;\n    rdi = rax;\n    *((rsp + 0x10)) = rax;\n    rax = strspn (rdi, 0x416d4b);\n    if (r13 > rax) {\n        goto label_2;\n    }\n    rsi = r13;\n    edi = 0;\n    rax = fcn_00414400 ();\n    if (rax == 0) {\n        goto label_3;\n    }\n    rax = *((rsp + 8));\n    r12d = 0x3a2f8;\n    rax += r13;\n    rbx += rax;\nlabel_0:\n    r14 = *((rsp + 0x10));\n    if (r13 == 0) {\n        goto label_4;\n    }\n    do {\n        r14++;\n        fcn_00414440 (rbp, 0x3d);\n        eax = *((rax + str.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789));\n        *((r14 - 1)) = al;\n    } while (r14 != rbx);\nlabel_4:\n    rsi = *((rsp + 0x18));\n    rdi = *((rsp + 8));\n    rax = *((rsp + 0x20));\n    eax = void (*rax)() ();\n    edx = eax;\n    if (eax >= 0) {\n        goto label_5;\n    }\n    ecx = *(r15);\n    if (ecx != 0x11) {\n        goto label_6;\n    }\n    r12d--;\n    if (r12d != 0) {\n        goto label_0;\n    }\n    fcn_00414560 (rbp);\n    *(r15) = 0x11;\n    edx = 0xffffffff;\n    goto label_1;\nlabel_5:\n    eax = *((rsp + 0x2c));\n    *(r15) = eax;\n    ecx = eax;\n    do {\n        *((rsp + 0x10)) = edx;\n        *((rsp + 8)) = ecx;\n        fcn_00414560 (rbp);\n        ecx = *((rsp + 8));\n        edx = *((rsp + 0x10));\n        *(r15) = ecx;\nlabel_1:\n        eax = edx;\n        return rax;\nlabel_6:\n        edx = 0xffffffff;\n    } while (1);\nlabel_2:\n    *(r15) = 0x16;\n    edx = 0xffffffff;\n    goto label_1;\nlabel_3:\n    edx = 0xffffffff;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040eaf0",
            "funcStartAddr": "0x40eaf0",
            "funcEndAddr": "0x40eb3e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40eaf0 */\n#include <stdint.h>\n \nuint64_t fcn_0040eaf0 (uint32_t arg1) {\n    rdi = arg1;\n    ebx = edi;\n    if (edi > 2) {\n        eax = ebx;\n        return eax;\n    }\n    eax = fcn_00414fd0 (rdi, rsi);\n    r12d = eax;\n    rax = errno_location ();\n    ebx = r12d;\n    r13d = *(rax);\n    close (ebx);\n    eax = ebx;\n    *(rbp) = r13d;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040eb60",
            "funcStartAddr": "0x40eb60",
            "funcEndAddr": "0x40f2c9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40eb60 */\n#include <stdint.h>\n \nuint64_t fcn_0040eb60 (char * arg1, char * arg2, func * arg3, int64_t arg4) {\n    int64_t var_8h;\n    char * var_10h;\n    uint32_t var_18h;\n    char * var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    int64_t var_3ch;\n    int64_t var_40h;\n    int64_t var_48h;\n    int64_t var_50h;\n    int64_t var_58h;\n    int64_t var_5ch;\n    int64_t var_60h;\n    int64_t var_68h;\n    int64_t var_70h;\n    int64_t var_78h;\n    int64_t var_80h;\n    int64_t var_d8h;\n    int64_t var_e0h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    ebx = ecx;\n    r13 = *((rdx + 0x60));\n    r12 = *((rsi + 0x58));\n    rbp = *((rdx + 0x58));\n    r14 = *((rsi + 0x60));\n    r15d = r13d;\n    ebx &= 1;\n    if (ebx != 0) {\n        rsp = (r12 == rbp) ? 1 : 0;\n        ecx = *(rsp);\n        al = (r14d == r13d) ? 1 : 0;\n        al &= cl;\n        *((rsp + 8)) = al;\n        if (al != 0) {\n            goto label_15;\n        }\n        rax = rbp - 1;\n        if (rax > r12) {\n            goto label_2;\n        }\n        rax = r12 - 1;\n        if (rax > rbp) {\n            goto label_0;\n        }\n        rdx = imp.__libc_start_main;\n        *((rsp + 0x10)) = rsi;\n        *((rsp + 0x20)) = rdi;\n        if (rdx == 0) {\n            goto label_16;\n        }\nlabel_1:\n        rsi = imp.__libc_start_main;\n        if (rsi == 0) {\n            goto label_17;\n        }\nlabel_5:\n        rax = *((rsp + 0x10));\n        rax = *(rax);\n        *(rsi) = rax;\n        rax = fcn_0040c060 (rdx);\n        r9 = rax;\n        if (rax == 0) {\n            goto label_18;\n        }\n        if (*(0x0061da98) == rax) {\n            goto label_19;\n        }\nlabel_7:\n        edi = *((r9 + 8));\n        *((rsp + 0x18)) = edi;\n        if (*((r9 + 0xc)) == 0) {\n            goto label_20;\n        }\n        eax = 0;\n        al = (edi == 0x77359400) ? 1 : 0;\n        eax = ~eax;\n        rax = (int64_t) eax;\n        rbp &= rax;\n        eax = r15d;\n        r15d = r13d;\n        edx:eax = (int64_t) eax;\n        eax = edx:eax / edi;\n        edx = edx:eax % edi;\n        r15d -= edx;\n    }\nlabel_4:\n    if (rbp > r12) {\n        goto label_2;\n    }\n    ebx = 1;\n    if (rbp != r12) {\n        goto label_0;\n    }\n    if (r15d > r14d) {\n        goto label_2;\n    }\n    bl = (r15d < r14d) ? 1 : 0;\n    ebx = (int32_t) bl;\n    do {\nlabel_0:\n        eax = ebx;\n        return rax;\nlabel_15:\n        ebx = 0;\n    } while (1);\nlabel_3:\n    eax = r15d;\n    edx:eax = (int64_t) eax;\n    eax = edx:eax / r8d;\n    edx = edx:eax % r8d;\n    eax = r13d;\n    eax -= edx;\n    if (eax <= r14d) {\n        goto label_21;\n    }\nlabel_2:\n    ebx = 0xffffffff;\n    goto label_0;\nlabel_16:\n    rax = fcn_0040b8c0 (0x10, 0, 0x40eb40, 0x40eb50, sym.imp.free);\n    rdx = rax;\n    *(0x0061daa0) = rax;\n    if (rax != 0) {\n        goto label_1;\n    }\nlabel_6:\n    rdx = rsp + 0x50;\nlabel_8:\n    *((rsp + 0x58)) = 0x77359400;\n    r9 = rdx;\n    *((rsp + 0x5c)) = 0;\n    *((rsp + 0x18)) = 0x77359400;\nlabel_20:\n    rax = *((rsp + 0x10));\n    r8d = 0x66666667;\n    rdi = *((rax + 0x50));\n    rcx = *((rax + 0x70));\n    eax = edi;\n    esi = edi;\n    *((rsp + 0x30)) = rdi;\n    edx:eax = eax * r8d;\n    esi >>= 0x1f;\n    edx >>= 2;\n    edx -= esi;\n    esi = edi;\n    edi = ecx;\n    eax = rdx * 5;\n    r11d = edx;\n    edi >>= 0x1f;\n    eax += eax;\n    esi -= eax;\n    eax = ecx;\n    edx:eax = eax * r8d;\n    edx >>= 2;\n    edx -= edi;\n    edi = r14d;\n    eax = rdx * 5;\n    r10d = edx;\n    edi >>= 0x1f;\n    eax += eax;\n    ecx -= eax;\n    eax = r14d;\n    edx:eax = eax * r8d;\n    ecx |= esi;\n    esi = r14d;\n    edx >>= 2;\n    edx -= edi;\n    eax = rdx * 5;\n    edi = edx;\n    *((rsp + 0x28)) = edx;\n    eax += eax;\n    esi -= eax;\n    ecx |= esi;\n    if (ecx != 0) {\n        goto label_22;\n    }\n    rax = *((rsp + 0x10));\n    ecx = r11d;\n    esi = r10d;\n    rax = *((rax + 0x48));\n    *((rsp + 0x48)) = rax;\n    if (*((rsp + 0x18)) <= 0xa) {\n        goto label_23;\n    }\n    eax = r11d;\n    edx:eax = eax * r8d;\n    eax = r11d;\n    eax >>= 0x1f;\n    edx >>= 2;\n    edx -= eax;\n    eax = rdx * 5;\n    eax += eax;\n    r11d -= eax;\n    eax = r10d;\n    edx:eax = eax * r8d;\n    eax = r10d;\n    eax >>= 0x1f;\n    edx >>= 2;\n    edx -= eax;\n    eax = rdx * 5;\n    eax += eax;\n    r10d -= eax;\n    eax = *((rsp + 0x28));\n    r11d |= r10d;\n    r10d = 0x66666667;\n    edx:eax = eax * r8d;\n    r8d = *((rsp + 0x28));\n    eax = *((rsp + 0x28));\n    eax >>= 0x1f;\n    edx >>= 2;\n    edx -= eax;\n    eax = rdx * 5;\n    edx = r8d;\n    r8d = 0xa;\n    eax += eax;\n    edx -= eax;\n    eax = 8;\n    r11d |= edx;\n    if (r11d != 0) {\n        goto label_24;\n    }\n    *((rsp + 0x28)) = rbp;\n    *((rsp + 0x40)) = r9;\n    r9d = *((rsp + 0x18));\n    *((rsp + 0x3c)) = r15d;\n    r15d = eax;\n    do {\n        eax = ecx;\n        ecx >>= 0x1f;\n        r11d = r8 * 5;\n        edx:eax = eax * r10d;\n        eax = esi;\n        esi >>= 0x1f;\n        r11d += r11d;\n        r8d = r11d;\n        edx >>= 2;\n        edx -= ecx;\n        ecx = edx;\n        edx:eax = eax * r10d;\n        eax = edi;\n        edi >>= 0x1f;\n        edx >>= 2;\n        edx -= esi;\n        esi = edx;\n        edx:eax = eax * r10d;\n        edx >>= 2;\n        edx -= edi;\n        edi = edx;\n        if (r11d >= r9d) {\n            goto label_25;\n        }\n        eax = ecx;\n        edx:eax = eax * r10d;\n        eax = ecx;\n        eax >>= 0x1f;\n        edx >>= 2;\n        edx -= eax;\n        eax = rdx * 5;\n        eax += eax;\n        ebp -= eax;\n        eax = esi;\n        edx:eax = eax * r10d;\n        eax = esi;\n        eax >>= 0x1f;\n        edx >>= 2;\n        edx -= eax;\n        eax = rdx * 5;\n        edx = esi;\n        eax += eax;\n        edx -= eax;\n        eax = edi;\n        ebp |= edx;\n        edx:eax = eax * r10d;\n        eax = edi;\n        eax >>= 0x1f;\n        edx >>= 2;\n        edx -= eax;\n        eax = rdx * 5;\n        edx = edi;\n        eax += eax;\n        edx -= eax;\n        ebp |= edx;\n        if (ebp != 0) {\n            goto label_25;\n        }\n        r15d--;\n    } while (r15d != 0);\n    rax = *((rsp + 0x48));\n    rdi = *((rsp + 0x10));\n    rbp = *((rsp + 0x28));\n    r15d = *((rsp + 0x3c));\n    rax |= r12;\n    rax |= *((rdi + 0x68));\n    r9 = *((rsp + 0x40));\n    if ((al & 1) == 0) {\n        goto label_26;\n    }\n    *((r9 + 8)) = 0x3b9aca00;\n    rax = rbp;\n    r8d = 0x3b9aca00;\nlabel_9:\n    if (r12 > rbp) {\n        goto label_0;\n    }\n    if (r14d < r13d) {\n        goto label_27;\n    }\n    if (*(rsp) != 0) {\n        goto label_0;\n    }\nlabel_27:\n    if (r12 < rax) {\n        goto label_2;\n    }\n    if (r12 == rax) {\n        goto label_3;\n    }\nlabel_21:\n    rax = *((rsp + 0x48));\n    edx = 0x38e38e39;\n    *((rsp + 0x18)) = r8d;\n    rdi = *((rsp + 0x20));\n    *((rsp + 0x60)) = rax;\n    rax = *((rsp + 0x30));\n    *((rsp + 0x68)) = rax;\n    eax = *((rsp + 8));\n    rax |= r12;\n    *((rsp + 0x70)) = rax;\n    eax = r8d;\n    edx:eax = eax * edx;\n    edx >>= 1;\n    eax = rdx + r14;\n    rax = (int64_t) eax;\n    *((rsp + 0x78)) = rax;\n    rax = *((rsp + 0x10));\n    eax = *((rax + 0x18));\n    *(rsp) = eax;\n    eax &= 0xf000;\n    rax = rsp + 0x60;\n    *(rsp) = r9;\n    *((rsp + 8)) = rax;\n    rsi = rax;\n    if (eax == 0xa000) {\n        goto label_28;\n    }\n    eax = fcn_0040f8a0 (rdi, rsi, rdx, rcx);\n    r8d = *((rsp + 0x18));\n    r9 = *(rsp);\n    al = (eax != 0) ? 1 : 0;\nlabel_11:\n    if (al == 0) {\n        rax = *((rsp + 0x10));\n        *((rsp + 0x18)) = r8d;\n        edi = 1;\n        rdx = rsp + 0x80;\n        rsi = *((rsp + 0x20));\n        eax = *((rax + 0x18));\n        *(rsp) = eax;\n        eax &= 0xf000;\n        *(rsp) = r9;\n        if (eax == 0xa000) {\n            goto label_29;\n        }\n        eax = xstat ();\n        r8d = *((rsp + 0x18));\n        r9 = *(rsp);\n        r10d = eax;\nlabel_12:\n        rax = *((rsp + 0xd8));\n        rcx = *((rsp + 0xe0));\n        rdi = (int64_t) r14d;\n        rdx = rdi;\n        rsi = rax;\n        rdx ^= rcx;\n        rsi ^= r12;\n        rdx |= rsi;\n        rsi = (int64_t) r10d;\n        rdx |= rsi;\n        if (rdx == 0) {\n            goto label_30;\n        }\n        rax = *((rsp + 0x10));\n        *((rsp + 0x78)) = rdi;\n        *((rsp + 0x70)) = r12;\n        rsi = *((rsp + 8));\n        eax = *((rax + 0x18));\n        rdi = *((rsp + 0x20));\n        *((rsp + 0x18)) = r8d;\n        *((rsp + 0x10)) = r10d;\n        eax &= 0xf000;\n        *(rsp) = r9;\n        if (eax == 0xa000) {\n            goto label_31;\n        }\n        fcn_0040f8a0 (rdi, rsi, rdx, rcx);\n        r8d = *((rsp + 0x18));\n        r10d = *((rsp + 0x10));\n        r9 = *(rsp);\nlabel_14:\n        if (r10d == 0) {\n            goto label_32;\n        }\n    }\n    ebx = 0xfffffffe;\n    goto label_0;\nlabel_32:\n    rax = *((rsp + 0xd8));\n    rcx = *((rsp + 0xe0));\nlabel_30:\n    eax &= 1;\n    edx = 0x66666667;\n    eax *= 0x3b9aca00;\n    ecx += eax;\n    eax = ecx;\n    edx:eax = eax * edx;\n    eax = edx;\n    edx = ecx;\n    eax >>= 2;\n    edx >>= 0x1f;\n    eax -= edx;\n    eax = rax * 5;\n    eax += eax;\n    if (ecx != eax) {\n        goto label_33;\n    }\n    if (r8d == 0xa) {\n        goto label_34;\n    }\n    esi = 9;\n    ebx = 0xa;\n    edi = 0x66666667;\n    while (esi != 0) {\n        ebx = rbx * 5;\n        ebx += ebx;\n        if (ebx == r8d) {\n            goto label_35;\n        }\n        eax = ecx;\n        ecx >>= 0x1f;\n        edx:eax = eax * edi;\n        edx >>= 2;\n        edx -= ecx;\n        eax = edx;\n        ecx = edx;\n        edx:eax = eax * edi;\n        eax = ecx;\n        eax >>= 0x1f;\n        edx >>= 2;\n        edx -= eax;\n        eax = rdx * 5;\n        eax += eax;\n        if (ecx != eax) {\n            goto label_35;\n        }\n        esi--;\n    }\n    rax = 0xfffffffffffffffe;\n    ebx = 0x77359400;\nlabel_13:\n    rbp &= rax;\n    eax = r15d;\n    r15d = r13d;\n    edx:eax = (int64_t) eax;\n    eax = edx:eax / ebx;\n    edx = edx:eax % ebx;\n    r15d -= edx;\nlabel_22:\n    *((r9 + 8)) = ebx;\n    *((r9 + 0xc)) = 1;\n    goto label_4;\nlabel_17:\n    *((rsp + 0x18)) = rdx;\n    rax = malloc (0x10);\n    rsi = rax;\n    *(0x0061da98) = rax;\n    if (rax == 0) {\n        goto label_36;\n    }\n    *((rax + 8)) = 0x77359400;\n    rdx = *((rsp + 0x18));\n    *((rax + 0xc)) = 0;\n    goto label_5;\nlabel_18:\n    rdi = imp.__libc_start_main;\n    if (rdi == 0) {\n        goto label_6;\n    }\nlabel_10:\n    rax = *((rsp + 0x10));\n    rdx = rsp + 0x50;\n    rsi = rdx;\n    *((rsp + 0x18)) = rdx;\n    rax = *(rax);\n    *((rsp + 0x50)) = rax;\n    rax = fcn_0040b650 (rdi, rsi);\n    rdx = *((rsp + 0x18));\n    r9 = rax;\n    if (rax != 0) {\n        goto label_7;\n    }\n    goto label_8;\nlabel_19:\n    *(0x0061da98) = 0;\n    goto label_7;\nlabel_25:\n    rbp = *((rsp + 0x28));\n    r9 = *((rsp + 0x40));\n    rsp + 8 = (r11d == 0x77359400) ? 1 : 0;\n    eax = *((rsp + 8));\n    r15d = *((rsp + 0x3c));\n    *((r9 + 8)) = r11d;\n    eax = ~eax;\n    rax = (int64_t) eax;\n    rax &= rbp;\n    goto label_9;\nlabel_26:\n    rax = rbp;\n    *((r9 + 8)) = 0x77359400;\n    r8d = 0x77359400;\n    rax &= 0xfffffffffffffffe;\n    *((rsp + 8)) = 1;\n    goto label_9;\nlabel_36:\n    rdi = imp.__libc_start_main;\n    goto label_10;\nlabel_28:\n    eax = fcn_0040f8b0 (rdi, rsi, rdx, rcx);\n    r9 = *(rsp);\n    r8d = *((rsp + 0x18));\n    al = (eax != 0) ? 1 : 0;\n    goto label_11;\nlabel_24:\n    *((r9 + 8)) = 0xa;\n    rax = rbp;\n    goto label_9;\nlabel_23:\n    *((r9 + 8)) = 0xa;\n    rax = rbp;\n    r8d = 0xa;\n    goto label_9;\nlabel_29:\n    eax = lxstat ();\n    r9 = *(rsp);\n    r8d = *((rsp + 0x18));\n    r10d = eax;\n    goto label_12;\nlabel_35:\n    eax = 0;\n    al = (ebx == 0x77359400) ? 1 : 0;\n    eax = ~eax;\n    rax = (int64_t) eax;\n    goto label_13;\nlabel_31:\n    rax = fcn_0040f8b0 (rdi, rsi, rdx, rcx);\n    r9 = *(rsp);\n    r10d = *((rsp + 0x10));\n    r8d = *((rsp + 0x18));\n    goto label_14;\nlabel_34:\n    ebx = 0xa;\nlabel_33:\n    rax |= 0xffffffffffffffff;\n    goto label_13;\n}\n"
        },
        {
            "funcName": "fcn_0040f2d0",
            "funcStartAddr": "0x40f2d0",
            "funcEndAddr": "0x40f39e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40f2d0 */\n#include <stdint.h>\n \nint64_t fcn_0040f2d0 (int64_t arg1, uint32_t arg2) {\n    int64_t var_fh;\n    rdi = arg1;\n    rsi = arg2;\n    rbx = *(rsi);\n    rax = *((rbx + 8));\n    rdx = *((rbx + 0x18));\n    if (rax == 0x3ffffffe) {\n        goto label_3;\n    }\n    if (rax == 0x3fffffff) {\n        goto label_4;\n    }\n    if (rdx != 0x3ffffffe) {\n        goto label_2;\n    }\nlabel_1:\n    rdx = *((rbp + 0x58));\n    rax = *((rbp + 0x60));\n    *((rbx + 0x10)) = rdx;\n    *((rbx + 0x18)) = rax;\n    eax = 0;\n    do {\nlabel_0:\n        return rax;\nlabel_3:\n        eax = 1;\n    } while (rdx == 0x3ffffffe);\n    rcx = *((rdi + 0x48));\n    rax = *((rdi + 0x50));\n    *(rbx) = rcx;\n    *((rbx + 8)) = rax;\nlabel_2:\n    eax = 0;\n    if (rdx != 0x3fffffff) {\n        goto label_0;\n    }\n    *((rsp + 0xf)) = al;\n    fcn_00413c70 (rbx + 0x10);\n    eax = *((rsp + 0xf));\n    return rax;\nlabel_4:\n    if (rdx == 0x3fffffff) {\n        goto label_5;\n    }\n    eax = fcn_00413c70 (rbx);\n    rdx = *((rbx + 0x18));\n    if (rdx == 0x3ffffffe) {\n        goto label_1;\n    }\n    goto label_2;\nlabel_5:\n    *(rsi) = 0;\n    eax = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040f3a0",
            "funcStartAddr": "0x40f3a0",
            "funcEndAddr": "0x40f449",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40f3a0 */\n#include <stdint.h>\n \nint64_t fcn_0040f3a0 (int64_t arg1) {\n    rdi = arg1;\n    r9 = *((rdi + 8));\n    rsi = r9 - 0x3ffffffe;\n    if (rsi > 1) {\n        if (r9 > 0x3b9ac9ff) {\n            goto label_0;\n        }\n    }\n    rdx = *((rdi + 0x18));\n    r8 = rdx - 0x3ffffffe;\n    if (r8 > 1) {\n        if (rdx > 0x3b9ac9ff) {\n            goto label_0;\n        }\n    }\n    ecx = 0;\n    r10d = 0;\n    if (rsi <= 1) {\n        *(rdi) = 0;\n        ecx = 0;\n        r10d = 1;\n        cl = (r9 == 0x3ffffffe) ? 1 : 0;\n    }\n    if (r8 <= 1) {\n        eax = 0;\n        *((rdi + 0x10)) = 0;\n        r10d = 1;\n        al = (rdx == 0x3ffffffe) ? 1 : 0;\n        ecx += eax;\n    }\n    eax = 0;\n    al = (ecx == 1) ? 1 : 0;\n    eax += r10d;\n    return eax;\nlabel_0:\n    errno_location ();\n    *(rax) = 0x16;\n    eax = 0xffffffff;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040f460",
            "funcStartAddr": "0x40f460",
            "funcEndAddr": "0x40f89e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40f460 */\n#include <stdint.h>\n \nuint64_t fcn_0040f460 (uint32_t arg1, char * arg2, uint32_t arg3, int64_t arg7, int64_t arg8) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_20h;\n    int64_t var_30h;\n    uint32_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    int64_t var_50h;\n    int64_t var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    int64_t var_70h;\n    uint32_t var_b8h;\n    uint32_t var_c0h;\n    int64_t var_c8h;\n    uint32_t var_d0h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    ebx = edi;\n    if (rdx == 0) {\n        goto label_10;\n    }\n    __asm (\"movdqu xmm0, xmmword [rdx]\");\n    __asm (\"movdqu xmm1, xmmword [rdx + 0x10]\");\n    *((rsp + 8)) = rdi;\n    *((rsp + 0x10)) = xmm0;\n    *((rsp + 0x20)) = xmm1;\n    eax = fcn_0040f3a0 (rsp + 0x10);\n    r13d = eax;\n    if (eax < 0) {\n        goto label_11;\n    }\nlabel_1:\n    if (ebx < 0) {\n        if (rbp == 0) {\n            goto label_12;\n        }\n    }\n    eax = imp.__libc_start_main;\n    if (eax >= 0) {\n        if (r13d == 2) {\n            goto label_13;\n        }\n        rsi = *((rsp + 8));\nlabel_2:\n        if (ebx < 0) {\n            goto label_14;\n        }\n        edi = ebx;\n        eax = futimens ();\n        r12d = eax;\n        if (eax <= 0) {\n            goto label_15;\n        }\nlabel_4:\n        errno_location ();\n        *(rax) = 0x26;\n    }\nlabel_7:\n    *(0x0061daac) = 0xffffffff;\n    *(0x0061daa8) = 0xffffffff;\n    if (r13d != 0) {\n        if (r13d != 3) {\n            rdx = rsp + 0x70;\n            if (ebx < 0) {\n                goto label_16;\n            }\n            esi = ebx;\n            edi = 1;\n            eax = fxstat ();\n            al = (eax != 0) ? 1 : 0;\nlabel_3:\n            if (al != 0) {\n                goto label_11;\n            }\n        }\n        if (*((rsp + 8)) == 0) {\n            goto label_17;\n        }\n        r12d = 0;\n        al = fcn_0040f2d0 (rsp + 0x70, rsp + 8);\n        if (al != 0) {\n            goto label_0;\n        }\n    }\n    rsi = *((rsp + 8));\n    if (rsi == 0) {\n        goto label_17;\n    }\n    rax = *(rsi);\n    rdi = *((rsi + 8));\n    r13 = rsp + 0x30;\n    rcx = 0x20c49ba5e353f7cf;\n    *((rsp + 0x30)) = rax;\n    rax = rdi;\n    rdi >>= 0x3f;\n    rdx:rax = rax * rcx;\n    rax = *((rsi + 0x10));\n    rsi = *((rsi + 0x18));\n    *((rsp + 0x40)) = rax;\n    rax = rsi;\n    rsi >>= 0x3f;\n    rdx >>= 7;\n    rdx -= rdi;\n    *((rsp + 0x38)) = rdx;\n    rdx:rax = rax * rcx;\n    rcx = rdx;\n    rdx = r13;\n    rcx >>= 7;\n    rcx -= rsi;\n    *((rsp + 0x48)) = rcx;\n    if (ebx < 0) {\n        goto label_18;\n    }\n    do {\n        esi = 0;\n        edi = ebx;\n        eax = futimesat ();\n        r12d = eax;\n        if (eax == 0) {\n            goto label_19;\n        }\n        r12d = 0xffffffff;\n        if (rbp != 0) {\n            rax = *((rsp + 8));\n            esi = 0;\n            if (rax != 0) {\n                rdx = *(rax);\n                rax = *((rax + 0x10));\n                rsi = rsp + 0x50;\n                *((rsp + 0x50)) = rdx;\n                *((rsp + 0x58)) = rax;\n            }\n            rdi = rbp;\n            eax = utime ();\n            r12d = eax;\n        }\nlabel_0:\n        eax = r12d;\n        return rax;\nlabel_17:\n        r13d = 0;\n        rdx = r13;\n    } while (ebx >= 0);\nlabel_18:\n    rsi = rbp;\n    edi = 0xffffff9c;\n    eax = futimesat ();\n    r12d = eax;\n    goto label_0;\nlabel_10:\n    *((rsp + 8)) = 0;\n    r13d = 0;\n    goto label_1;\nlabel_13:\n    rdx = rsp + 0x70;\n    if (ebx < 0) {\n        goto label_20;\n    }\n    esi = ebx;\n    edi = 1;\n    eax = fxstat ();\n    al = (eax != 0) ? 1 : 0;\nlabel_5:\n    if (al != 0) {\n        goto label_11;\n    }\n    rsi = *((rsp + 8));\n    if (*((rsi + 8)) == 0x3ffffffe) {\n        goto label_21;\n    }\n    r13d = 3;\n    if (*((rsi + 0x18)) != 0x3ffffffe) {\n        goto label_2;\n    }\n    rax = *((rsp + 0xd0));\n    rdx = *((rsp + 0xc8));\n    *((rsi + 0x18)) = rax;\n    *((rsi + 0x10)) = rdx;\n    goto label_2;\nlabel_16:\n    rsi = rbp;\n    edi = 1;\n    eax = xstat ();\n    al = (eax != 0) ? 1 : 0;\n    goto label_3;\nlabel_14:\n    rdx = rsi;\n    ecx = 0;\n    rsi = rbp;\n    edi = 0xffffff9c;\n    eax = utimensat ();\n    r12d = eax;\n    if (eax > 0) {\n        goto label_4;\n    }\n    if (eax != 0) {\nlabel_15:\n        goto label_22;\n    }\nlabel_6:\n    *(0x0061daac) = 1;\n    goto label_0;\nlabel_19:\n    if (r13 == 0) {\n        goto label_0;\n    }\n    bpl = (*((r13 + 8)) > 0x7a11f) ? 1 : 0;\n    r14b = (*((r13 + 0x18)) > 0x7a11f) ? 1 : 0;\n    if (bpl != 0) {\n        goto label_23;\n    }\n    if (r14b == 0) {\n        goto label_0;\n    }\nlabel_23:\n    rdx = rsp + 0x70;\n    esi = ebx;\n    edi = 1;\n    eax = fxstat ();\n    if (eax != 0) {\n        goto label_0;\n    }\n    rdx = *((rsp + 0xc8));\n    rdx -= *((r13 + 0x10));\n    rax = *((rsp + 0xb8));\n    __asm (\"movdqa xmm2, xmmword [r13]\");\n    rax -= *(r13);\n    __asm (\"movdqa xmm3, xmmword [r13 + 0x10]\");\n    dl = (rdx == 1) ? 1 : 0;\n    *((rsp + 0x50)) = xmm2;\n    *((rsp + 0x60)) = xmm3;\n    r14d &= edx;\n    if (rax != 1) {\n        goto label_24;\n    }\n    if (bpl == 0) {\n        goto label_24;\n    }\n    if (*((rsp + 0xc0)) != 0) {\n        goto label_24;\n    }\n    *((rsp + 0x58)) = 0;\n    if (r14b != 0) {\n        if (*((rsp + 0xd0)) == 0) {\n            goto label_25;\n        }\n    }\nlabel_9:\n    rdx = rsp + 0x50;\n    esi = 0;\n    edi = ebx;\n    futimesat ();\nlabel_8:\n    r12d = 0;\n    goto label_0;\nlabel_20:\n    rsi = rbp;\n    edi = 1;\n    eax = xstat ();\n    al = (eax != 0) ? 1 : 0;\n    goto label_5;\nlabel_21:\n    rax = *((rsp + 0xc0));\n    rdx = *((rsp + 0xb8));\n    r13d = 3;\n    *(rsi) = rdx;\n    *((rsi + 8)) = rax;\n    goto label_2;\nlabel_12:\n    errno_location ();\n    *(rax) = 9;\nlabel_11:\n    r12d = 0xffffffff;\n    goto label_0;\nlabel_22:\n    rax = errno_location ();\n    if (*(rax) != 0x26) {\n        goto label_6;\n    }\n    goto label_7;\nlabel_24:\n    if (r14b == 0) {\n        goto label_8;\n    }\n    if (*((rsp + 0xd0)) != 0) {\n        goto label_8;\n    }\nlabel_25:\n    *((rsp + 0x68)) = 0;\n    goto label_9;\n}\n"
        },
        {
            "funcName": "fcn_0040f8a0",
            "funcStartAddr": "0x40f8a0",
            "funcEndAddr": "0x40f8b0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40f8a0 */\n#include <stdint.h>\n \nvoid fcn_0040f8a0 (int64_t arg1, int64_t arg2, int64_t arg7, int64_t arg8) {\n    rdi = arg1;\n    rsi = arg2;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    rdx = rsi;\n    rsi = rdi;\n    edi = 0xffffffff;\n    return void (*0x40f460)() ();\n}\n"
        },
        {
            "funcName": "fcn_0040f8b0",
            "funcStartAddr": "0x40f8b0",
            "funcEndAddr": "0x40faf8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40f8b0 */\n#include <stdint.h>\n \nuint64_t fcn_0040f8b0 (int64_t arg1, int64_t arg2, int64_t arg7, int64_t arg8) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_20h;\n    int64_t var_30h;\n    int64_t var_48h;\n    int64_t var_78h;\n    int64_t var_80h;\n    int64_t var_88h;\n    int64_t var_90h;\n    rdi = arg1;\n    rsi = arg2;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    r12 = rdi;\n    if (rsi == 0) {\n        goto label_7;\n    }\n    __asm (\"movdqu xmm0, xmmword [rsi]\");\n    __asm (\"movdqu xmm1, xmmword [rsi + 0x10]\");\n    *((rsp + 8)) = rdi;\n    *((rsp + 0x10)) = xmm0;\n    *((rsp + 0x20)) = xmm1;\n    eax = fcn_0040f3a0 (rsp + 0x10);\n    ebx = eax;\n    if (eax < 0) {\n        goto label_3;\n    }\n    eax = imp.__libc_start_main;\n    if (eax < 0) {\n        goto label_6;\n    }\n    if (ebx == 2) {\n        goto label_8;\n    }\n    rdx = *((rsp + 8));\n    do {\nlabel_4:\n        ecx = 0x100;\n        rsi = r12;\n        edi = 0xffffff9c;\n        eax = utimensat ();\n        if (eax <= 0) {\n            goto label_9;\n        }\n        errno_location ();\n        *(rax) = 0x26;\nlabel_6:\n        *(0x0061daa8) = 0xffffffff;\n        if (ebx == 0) {\n            goto label_10;\n        }\n        if (ebx != 3) {\n            goto label_11;\n        }\n        if (*((rsp + 8)) != 0) {\nlabel_2:\n            ebp = 0;\n            al = fcn_0040f2d0 (rsp + 0x30, rsp + 8);\n            if (al != 0) {\n                goto label_1;\n            }\n        }\nlabel_0:\n        eax = *((rsp + 0x48));\n        eax &= 0xf000;\n        if (eax == 0xa000) {\n            goto label_12;\n        }\n        eax = fcn_0040f460 (0xffffffff, r12, *((rsp + 8)), rcx, r8);\nlabel_1:\n        eax = ebp;\n        return rax;\nlabel_7:\n        ecx = imp.__libc_start_main;\n        edx = 0;\n        ebx = 0;\n        *((rsp + 8)) = 0;\n    } while (ecx >= 0);\n    *(0x0061daa8) = 0xffffffff;\nlabel_10:\n    rdx = rsp + 0x30;\n    rsi = r12;\n    edi = 1;\n    eax = lxstat ();\n    if (eax == 0) {\n        goto label_0;\n    }\n    do {\nlabel_3:\n        goto label_1;\n        if (eax != 0) {\nlabel_9:\n            goto label_13;\n        }\nlabel_5:\n        *(0x0061daac) = 1;\n        eax = ebp;\n        *(0x0061daa8) = 1;\n        return rax;\nlabel_11:\n        rdx = rsp + 0x30;\n        rsi = r12;\n        edi = 1;\n        eax = lxstat ();\n    } while (eax != 0);\n    if (*((rsp + 8)) != 0) {\n        goto label_2;\n    }\n    goto label_0;\nlabel_8:\n    rdx = rsp + 0x30;\n    rsi = r12;\n    edi = 1;\n    eax = lxstat ();\n    if (eax != 0) {\n        goto label_3;\n    }\n    rdx = *((rsp + 8));\n    if (*((rdx + 8)) == 0x3ffffffe) {\n        goto label_14;\n    }\n    ebx = 3;\n    if (*((rdx + 0x18)) != 0x3ffffffe) {\n        goto label_4;\n    }\n    rax = *((rsp + 0x90));\n    rcx = *((rsp + 0x88));\n    *((rdx + 0x18)) = rax;\n    *((rdx + 0x10)) = rcx;\n    goto label_4;\nlabel_14:\n    rax = *((rsp + 0x80));\n    rcx = *((rsp + 0x78));\n    ebx = 3;\n    *(rdx) = rcx;\n    *((rdx + 8)) = rax;\n    goto label_4;\nlabel_13:\n    rax = errno_location ();\n    if (*(rax) != 0x26) {\n        goto label_5;\n    }\n    goto label_6;\nlabel_12:\n    errno_location ();\n    *(rax) = 0x26;\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_0040fb00",
            "funcStartAddr": "0x40fb00",
            "funcEndAddr": "0x41cc30",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40fb00 */\n#include <stdint.h>\n \nvoid fcn_0040fb00 (int64_t arg_20h, int64_t arg_30h, int64_t arg_8h_2, int64_t arg_10h, int64_t arg_8h, int64_t arg_8h_3, int64_t arg_10h_2, int64_t arg_18h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_30h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    eax = abort ();\n    r12 = r9;\n    rbx = r8;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    r9 = rcx;\n    r8 = rdx;\n    rcx = rsi;\n    edx = \"%s (%s) %s\\n\";\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    do {\n        edx = 5;\n        rax = dcgettext (0, 0x417dd2);\n        r8d = 0x7e1;\n        edx = \"Copyright %s %d Free Software Foundation, Inc.\";\n        rdi = rbp;\n        rcx = rax;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        edx = 5;\n        rax = dcgettext (0, \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\");\n        rsi = rbp;\n        rdi = rax;\n        eax = fputs_unlocked ();\n        if (r12 > 9) {\n            goto label_2;\n        }\n        /* switch table (10 cases) at 0x4180a8 */\nlabel_1:\n        r8 = rcx;\n        esi = 1;\n        rcx = rdx;\n        eax = 0;\n        edx = \"%s %s\\n\";\n        fprintf_chk ();\n    } while (1);\n    r9 = *((rbx + 0x38));\n    rax = *((rbx + 0x10));\n    edx = 5;\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    r15 = *((rbx + 0x20));\n    *((rsp + 0x10)) = r9;\n    r14 = *((rbx + 0x18));\n    rbx = *(rbx);\n    *(rsp) = rax;\n    *((rsp + 8)) = r8;\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n    do {\n        r9 = *((rsp + 0x18));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        r9 = *((rsp + 0x30));\n        r8 = *((rsp + 0x38));\n        fprintf_chk ();\n        return rax;\n        r10 = *((rbx + 0x40));\n        r9 = *((rbx + 0x38));\n        edx = 5;\n        rax = *((rbx + 0x10));\n        r8 = *((rbx + 8));\n        r13 = *((rbx + 0x30));\n        r12 = *((rbx + 0x28));\n        *((rsp + 0x18)) = r10;\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        *((rsp + 0x10)) = r9;\n        *(rsp) = rax;\n        rbx = *(rbx);\n        *((rsp + 8)) = r8;\nlabel_0:\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        r10 = *((rsp + 0x18));\n    } while (1);\n    rbx = *(rbx);\n    edx = 5;\n    rax = dcgettext (0, \"Written by %s.\\n\");\n    rdi = rbp;\n    esi = 1;\n    rcx = rbx;\n    rdx = rax;\n    eax = 0;\n    void (*0x402d20)() ();\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s and %s.\\n\");\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x402d20)() ();\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, and %s.\\n\");\n    r9 = r13;\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x402d20)() ();\n    edx = 5;\n    r14 = *((rbx + 0x18));\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\nand %s.\\n\");\n    do {\n        rdx = rax;\n        r9 = r13;\n        r8 = r12;\n        rcx = rbx;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r15 = *((rbx + 0x20));\n        edx = 5;\n        r14 = *((rbx + 0x18));\n        r13 = *((rbx + 0x10));\n        r12 = *((rbx + 8));\n        rbx = *(rbx);\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n    } while (1);\n    r8 = *((rbx + 8));\n    r12 = *((rbx + 0x28));\n    edx = 5;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *(rsp) = r8;\n    r13 = *((rbx + 0x10));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n    r9 = r13;\n    do {\n        r8 = *((rsp + 0x20));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r9 = *((rbx + 0x10));\n        r13 = *((rbx + 0x30));\n        edx = 5;\n        r12 = *((rbx + 0x28));\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        r8 = *((rbx + 8));\n        *((rsp + 8)) = r9;\n        rbx = *(rbx);\n        *(rsp) = r8;\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n        r9 = *((rsp + 0x28));\n    } while (1);\nlabel_2:\n    r10 = *((rbx + 0x40));\n    r9 = *((rbx + 0x38));\n    edx = 5;\n    esi = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    rax = *((rbx + 0x10));\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    *((rsp + 0x18)) = r10;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *((rsp + 0x10)) = r9;\n    *(rsp) = rax;\n    rbx = *(rbx);\n    *((rsp + 8)) = r8;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040ff60",
            "funcStartAddr": "0x40ff60",
            "funcEndAddr": "0x41001c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x40ff60 */\n#include <stdint.h>\n \nuint64_t fcn_0040ff60 (int64_t arg_b0h, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_70h;\n    int64_t var_90h;\n    int64_t var_98h;\n    r8 = arg5;\n    r9 = arg6;\n    r11d = 0;\n    rax = rsp + 0xb0;\n    *((rsp + 0x90)) = r8;\n    r10 = rsp + 0xb0;\n    r8d = 0x20;\n    *((rsp + 0x10)) = rax;\n    rax = rsp + 0x70;\n    *((rsp + 0x98)) = r9;\n    r9d = 0;\n    *((rsp + 8)) = 0x20;\n    *((rsp + 0x18)) = rax;\n    while (r8d <= 0x2f) {\n        eax = r8d;\n        r11 = rsp + 0x70;\n        r8d += 8;\n        rax += r11;\n        r11d = 1;\n        rax = *(rax);\n        *((rsp + r9*8 + 0x20)) = rax;\n        if (rax == 0) {\n            goto label_1;\n        }\nlabel_0:\n        r9++;\n        if (r9 == 0xa) {\n            goto label_1;\n        }\n    }\n    rax = r10;\n    r10 += 8;\n    rax = *(rax);\n    *((rsp + r9*8 + 0x20)) = rax;\n    if (rax != 0) {\n        goto label_0;\n    }\nlabel_1:\n    if (r11b != 0) {\n        *((rsp + 8)) = r8d;\n    }\n    fcn_0040fb00 (rdi, rsi, rdx, rcx, rsp + 0x20, r9);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004100a0",
            "funcStartAddr": "0x4100a0",
            "funcEndAddr": "0x4100d8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4100a0 */\n#include <stdint.h>\n \nuint32_t fcn_004100a0 (void) {\n    if (*(0x0061dab1) != 0) {\n        eax = *(0x0061dab0);\n        return eax;\n    }\n    eax = geteuid ();\n    *(0x0061dab1) = 1;\n    al = (eax == 0) ? 1 : 0;\n    *(0x0061dab0) = al;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_004100e0",
            "funcStartAddr": "0x4100e0",
            "funcEndAddr": "0x4100fa",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4100e0 */\n#include <stdint.h>\n \nuint64_t fcn_004100e0 (void * arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = malloc (rdi);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    return fcn_00410330 ();\n}\n"
        },
        {
            "funcName": "fcn_00410140",
            "funcStartAddr": "0x410140",
            "funcEndAddr": "0x410176",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x410140 */\n#include <stdint.h>\n \nuint64_t fcn_00410140 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rsi;\n    if (rsi == 0) {\n        if (rdi != 0) {\n            goto label_0;\n        }\n    }\n    rax = realloc (rdi, rbx);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_1;\n        }\n    }\n    return rax;\nlabel_0:\n    eax = free (rdi);\n    eax = 0;\n    return rax;\nlabel_1:\n    return fcn_00410330 ();\n}\n"
        },
        {
            "funcName": "fcn_004102e0",
            "funcStartAddr": "0x4102e0",
            "funcEndAddr": "0x410308",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4102e0 */\n#include <stdint.h>\n \nuint64_t fcn_004102e0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdi = rsi;\n    rbx = rsi;\n    rax = fcn_004100e0 (rdi);\n    rdx = rbx;\n    rsi = rbp;\n    rdi = rax;\n    return memcpy ();\n}\n"
        },
        {
            "funcName": "fcn_00410310",
            "funcStartAddr": "0x410310",
            "funcEndAddr": "0x410323",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x410310 */\n#include <stdint.h>\n \nvoid fcn_00410310 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    strlen (rdi);\n    rdi = rbx;\n    rsi = rax + 1;\n    return void (*0x4102e0)() ();\n}\n"
        },
        {
            "funcName": "fcn_00410330",
            "funcStartAddr": "0x410330",
            "funcEndAddr": "0x410361",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x410330 */\n#include <stdint.h>\n \nuint64_t fcn_00410330 (void) {\n    edx = 5;\n    rax = dcgettext (0, \"memory exhausted\");\n    rcx = rax;\n    eax = 0;\n    error (*(0x0061d408), 0, 0x418333);\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_00410370",
            "funcStartAddr": "0x410370",
            "funcEndAddr": "0x4103b9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x410370 */\n#include <stdint.h>\n \nuint64_t fcn_00410370 (int64_t arg2) {\n    rsi = arg2;\n    esi |= 0x200;\n    rax = fts_open ();\n    if (rax != 0) {\n        return rax;\n    }\n    rax = errno_location ();\n    if (*(rax) != 0x16) {\n        fcn_00410330 ();\n    }\n    return assert_fail (\"errno != EINVAL\", \"lib/xfts.c\", 0x29, \"xfts_open\");\n}\n"
        },
        {
            "funcName": "fcn_004103f0",
            "funcStartAddr": "0x4103f0",
            "funcEndAddr": "0x410459",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4103f0 */\n#include <stdint.h>\n \nuint64_t fcn_004103f0 (void) {\n    int64_t var_8h;\n    edx = 0xa;\n    ebx = 0;\n    rcx = stdin;\n    rsi = rsp + 8;\n    rdi = rsp;\n    *(rsp) = 0;\n    *((rsp + 8)) = 0;\n    rax = getdelim ();\n    if (rax <= 0) {\n        goto label_0;\n    }\n    rdi = *(rsp);\n    rax = rdi + rax - 1;\n    while (1) {\n        eax = rpmatch ();\n        bl = (eax > 0) ? 1 : 0;\nlabel_0:\n        free (*(rsp));\n        eax = ebx;\n        return rax;\n        *(rax) = 0;\n        rdi = *(rsp);\n    }\n}\n"
        },
        {
            "funcName": "fcn_00410460",
            "funcStartAddr": "0x410460",
            "funcEndAddr": "0x410595",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x410460 */\n#include <stdint.h>\n \nuint64_t fcn_00410460 (int64_t arg_70h, int64_t arg1, uint32_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_30h;\n    int64_t var_38h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    do {\nlabel_2:\n        rax = rsp + 0x70;\n        *((rsp + 0x30)) = rdx;\n        *((rsp + 0x10)) = rax;\n        rax = rsp + 0x20;\n        *((rsp + 0x38)) = rcx;\n        *((rsp + 8)) = 0x10;\n        *((rsp + 0x18)) = rax;\n        if (esi != 0x406) {\n            goto label_4;\n        }\n        r12d = *((rax + 0x10));\n        eax = imp.__libc_start_main;\n        *((rsp + 8)) = 0x18;\n        edx = r12d;\n        if (eax >= 0) {\n            eax = 0;\n            eax = fcntl ();\n            ebx = eax;\n            if (eax < 0) {\n                goto label_5;\n            }\nlabel_1:\n            *(0x0061dab4) = 1;\nlabel_0:\n            eax = ebx;\n            return rax;\n        }\n        eax = 0;\n        eax = fcn_00410460 (rdi, 0, rdx, rcx, r8);\n    } while (1);\n    ebx = eax;\n    if (eax < 0) {\n        goto label_0;\n    }\n    if (*(0x0061dab4) != 0xffffffff) {\n        goto label_0;\n    }\nlabel_3:\n    eax = 0;\n    esi = 1;\n    edi = ebx;\n    eax = fcntl ();\n    if (eax < 0) {\n        goto label_6;\n    }\n    eax |= 1;\n    esi = 2;\n    edi = ebx;\n    edx = eax;\n    eax = 0;\n    eax = fcntl ();\n    if (eax != 0xffffffff) {\n        goto label_0;\n    }\nlabel_6:\n    rax = errno_location ();\n    ebx = 0xffffffff;\n    r12d = *(rax);\n    close (ebx);\n    *(rbp) = r12d;\n    goto label_0;\nlabel_4:\n    rax = *((rsp + 0x18));\n    rdx = *((rax + 0x10));\n    eax = 0;\n    eax = fcntl ();\n    ebx = eax;\n    return rax;\nlabel_5:\n    rax = errno_location ();\n    if (*(rax) != 0x16) {\n        goto label_1;\n    }\n    eax = 0;\n    eax = fcn_00410460 (ebp, 0, r12d, rcx, r8);\n    goto label_2;\n    ebx = eax;\n    if (eax < 0) {\n        goto label_0;\n    }\n    *(0x0061dab4) = 0xffffffff;\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_004105a0",
            "funcStartAddr": "0x4105a0",
            "funcEndAddr": "0x4105e0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4105a0 */\n#include <stdint.h>\n \nuint32_t fcn_004105a0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    if (rdi != 0) {\n        eax = freading ();\n        if (eax == 0) {\n            goto label_0;\n        }\n        if ((*(rbx) & 0x100) != 0) {\n            goto label_1;\n        }\n    }\nlabel_0:\n    rdi = rbx;\n    void (*0x402b00)() ();\nlabel_1:\n    fcn_00410610 (rbx, 0, 1);\n    rdi = rbx;\n    return fflush ();\n}\n"
        },
        {
            "funcName": "fcn_004105e0",
            "funcStartAddr": "0x4105e0",
            "funcEndAddr": "0x410608",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4105e0 */\n#include <stdint.h>\n \nint64_t fcn_004105e0 (uint32_t arg1) {\n    rdi = arg1;\n    eax = 0;\n    rcx = *((rdi + 0x20));\n    if (*((rdi + 0x28)) <= rcx) {\n        rax = *((rdi + 0x10));\n        rax -= *((rdi + 8));\n        if ((*(rdi) & 0x100) == 0) {\n            goto label_0;\n        }\n        rdx = *((rdi + 0x58));\n        rdx -= *((rdi + 0x48));\n        rax += rdx;\n    }\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00410610",
            "funcStartAddr": "0x410610",
            "funcEndAddr": "0x410667",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x410610 */\n#include <stdint.h>\n \nint64_t fcn_00410610 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rax = *((rdi + 8));\n    while (*((rdi + 0x28)) != rax) {\nlabel_0:\n        void (*0x402c40)() ();\n        rax = *((rdi + 0x20));\n    }\n    if (*((rdi + 0x48)) != 0) {\n        goto label_0;\n    }\n    r12d = edx;\n    rbx = rdi;\n    eax = fileno (rdi);\n    edx = r12d;\n    rsi = rbp;\n    edi = eax;\n    rax = lseek ();\n    if (rax != -1) {\n        *(rbx) &= 0xffffffef;\n        *((rbx + 0x90)) = rax;\n        eax = 0;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004106f0",
            "funcStartAddr": "0x4106f0",
            "funcEndAddr": "0x41089a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4106f0 */\n#include <stdint.h>\n \nuint64_t fcn_004106f0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r12 = rdi;\n    rbp = rsi + 0x78;\n    rbx = rsi;\n    eax = *((rdi + 0x48));\n    rsi = *((rsi + 0x30));\n    if (*((rbx + 0x58)) != 0) {\n        goto label_4;\n    }\n    while ((al & 2) != 0) {\nlabel_0:\n        rdx = rbp;\n        edi = 1;\n        eax = xstat ();\n        if (eax == 0) {\n            goto label_5;\n        }\n        rax = errno_location ();\n        r12 = rax;\n        eax = *(rax);\n        if (eax != 2) {\n            goto label_2;\n        }\n        rsi = *((rbx + 0x30));\n        rdx = rbp;\n        edi = 1;\n        eax = lxstat ();\n        if (eax != 0) {\n            goto label_6;\n        }\n        *(r12) = 0;\n        eax = 0xd;\n        return rax;\nlabel_4:\n    }\n    if (dl != 0) {\n        goto label_0;\n    }\n    rdx = rsi;\n    esi = *((r12 + 0x2c));\n    r8d = 0x100;\n    rcx = rbp;\n    edi = 1;\n    eax = fxstatat ();\n    if (eax != 0) {\n        goto label_7;\n    }\nlabel_5:\n    eax = *((rbx + 0x90));\n    eax &= 0xf000;\n    if (eax == 0x4000) {\n        goto label_8;\n    }\n    if (eax == 0xa000) {\n        goto label_9;\n    }\n    al = (eax == 0x8000) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = rax * 5;\n    do {\nlabel_1:\n        return rax;\nlabel_7:\n        rax = errno_location ();\n        eax = *(rax);\nlabel_2:\n        rdi = rbp + 8;\n        *((rbx + 0x40)) = eax;\n        eax = 0;\n        rdi &= 0xfffffffffffffff8;\n        *((rbx + 0x78)) = 0;\n        *((rbp + 0x88)) = 0;\n        rbp -= rdi;\n        ecx = rbp + 0x90;\n        ecx >>= 3;\n        *(rdi) = rax;\n        rcx--;\n        rdi += 8;\n        eax = 0xa;\n        return rax;\nlabel_8:\n        rax = *((rbx + 0x88));\n        if (rax <= 1) {\n            goto label_10;\n        }\n        if (*((rbx + 0x58)) <= 0) {\n            goto label_10;\n        }\n        rdx = rax - 2;\n        if ((*((r12 + 0x48)) & 0x20) == 0) {\n            rax = rdx;\n        }\nlabel_3:\n        *((rbx + 0x68)) = rax;\n        eax = 1;\n    } while (*((rbx + 0x108)) != 0x2e);\n    if (*((rbx + 0x109)) == 0) {\n        goto label_11;\n    }\n    edx = *((rbx + 0x108));\n    edx &= 0xffff00;\n    if (edx != 0x2e00) {\n        goto label_1;\n    }\nlabel_11:\n    eax -= eax;\n    eax &= 0xfffffffc;\n    eax += 5;\n    goto label_1;\nlabel_6:\n    eax = *(r12);\n    goto label_2;\nlabel_10:\n    rax = 0xffffffffffffffff;\n    goto label_3;\nlabel_9:\n    eax = 0xc;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_004108a0",
            "funcStartAddr": "0x4108a0",
            "funcEndAddr": "0x41099d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4108a0 */\n#include <stdint.h>\n \nint64_t fcn_004108a0 (int64_t arg1, uint32_t arg2, uint32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r12 = rdx;\n    rbx = rsi;\n    r13 = *((rdi + 0x40));\n    rdi = *((rdi + 0x10));\n    if (*((rbp + 0x38)) < rdx) {\n        rax = 0x1fffffffffffffff;\n        rsi = rdx + 0x28;\n        *((rbp + 0x38)) = rsi;\n        if (rsi > rax) {\n            goto label_0;\n        }\n        rsi <<= 3;\n        rax = realloc (rdi, rsi);\n        rdi = rax;\n        if (rax == 0) {\n            goto label_1;\n        }\n        *((rbp + 0x10)) = rax;\n    }\n    rdx = rdi;\n    if (rbx == 0) {\n        goto label_2;\n    }\n    do {\n        rdx += 8;\n        *((rdx - 8)) = rbx;\n        rbx = *((rbx + 0x10));\n    } while (rbx != 0);\nlabel_2:\n    rcx = r13;\n    edx = 8;\n    rsi = r12;\n    qsort ();\n    r8 = *((rbp + 0x10));\n    rcx = r12;\n    rax = *(r8);\n    rdx = r8;\n    rsi = rax;\n    rcx--;\n    if (rcx != 0) {\n        goto label_3;\n    }\n    goto label_4;\n    do {\n        rsi = *(rdx);\nlabel_3:\n        rdi = *((rdx + 8));\n        rdx += 8;\n        *((rsi + 0x10)) = rdi;\n        rcx--;\n    } while (rcx != 0);\n    rdx = *((r8 + r12*8 - 8));\n    do {\n        *((rdx + 0x10)) = 0;\n        return rax;\nlabel_1:\nlabel_0:\n        free (*((rbp + 0x10)));\n        *((rbp + 0x10)) = 0;\n        rax = rbx;\n        *((rbp + 0x38)) = 0;\n        return rax;\nlabel_4:\n        rdx = rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_004109a0",
            "funcStartAddr": "0x4109a0",
            "funcEndAddr": "0x410a2a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4109a0 */\n#include <stdint.h>\n \nuint64_t fcn_004109a0 (int64_t arg1, int64_t arg2, size_t size) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = size;\n    r13 = rsi;\n    r12 = rdi;\n    rdi &= 0xfffffffffffffff8;\n    rax = malloc (rdx + 0x110);\n    rbx = rax;\n    if (rax != 0) {\n        memcpy (rax + 0x108, r13, rbp);\n        rax = *((r12 + 0x20));\n        *((rbx + rbp + 0x108)) = 0;\n        *((rbx + 0x60)) = rbp;\n        *((rbx + 0x50)) = r12;\n        *((rbx + 0x38)) = rax;\n        *((rbx + 0x40)) = 0;\n        *((rbx + 0x18)) = 0;\n        *((rbx + 0x72)) = 0x30000;\n        *((rbx + 0x20)) = 0;\n        *((rbx + 0x28)) = 0;\n    }\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00410a30",
            "funcStartAddr": "0x410a30",
            "funcEndAddr": "0x410a71",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x410a30 */\n#include <stdint.h>\n \nvoid fcn_00410a30 (uint32_t arg1) {\n    rdi = arg1;\n    if (rdi == 0) {\n        goto label_0;\n    }\n    rbx = rdi;\n    do {\n        rdi = *((rbx + 0x18));\n        rbp = *((rbx + 0x10));\n        if (rdi != 0) {\n            closedir ();\n        }\n        rbx = rbp;\n        free (rbx);\n    } while (rbp != 0);\n    return;\nlabel_0:\n}\n"
        },
        {
            "funcName": "fcn_00410a80",
            "funcStartAddr": "0x410a80",
            "funcEndAddr": "0x410ab9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x410a80 */\n#include <stdint.h>\n \nuint32_t fcn_00410a80 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    while (al == 0) {\n        eax = fcn_00413dc0 (rbx);\n        if (eax >= 0) {\n            goto label_1;\n        }\nlabel_0:\n        al = fcn_00413d70 (rbx);\n    }\n    return eax;\nlabel_1:\n    close (eax);\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00410ac0",
            "funcStartAddr": "0x410ac0",
            "funcEndAddr": "0x41e8df",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x410ac0 */\n#include <stdint.h>\n \nint64_t fcn_00410ac0 (int64_t arg1) {\n    rdi = arg1;\nlabel_0:\n    abort ();\n    rbx = *((rdi + 0x50));\n    if ((*((rbx + 0x49)) & 2) == 0) {\n        goto label_4;\n    }\n    r12 = *((rbx + 0x50));\n    if (r12 == 0) {\n        goto label_5;\n    }\nlabel_1:\n    rax = *((rbp + 0x78));\n    *(rsp) = rax;\n    rax = fcn_0040b650 (r12, rsp);\n    if (rax == 0) {\n        goto label_6;\n    }\n    rax = *((rax + 8));\n    do {\nlabel_3:\n        return rax;\nlabel_6:\n        rax = *((rbp + 0x50));\n        rsi = rsp;\n        edi = *((rax + 0x2c));\n        eax = fstatfs ();\n        if (eax != 0) {\n            goto label_4;\n        }\n        rax = malloc (0x10);\n        rbx = rax;\n        rax = *(rsp);\n    } while (rbx == 0);\n    rdx = *((rbp + 0x78));\n    *((rbx + 8)) = rax;\n    rsi = rbx;\n    *(rbx) = rdx;\n    rax = fcn_0040c060 (r12);\n    if (rax == 0) {\n        goto label_7;\n    }\n    if (rbx != rax) {\n        goto label_0;\n    }\nlabel_2:\n    rax = *(rsp);\n    return rax;\nlabel_5:\n    rax = fcn_0040b8c0 (0xd, 0, 0x4106a0, 0x4106b0, sym.imp.free);\n    r12 = rax;\n    *((rbx + 0x50)) = rax;\n    if (rax != 0) {\n        goto label_1;\n    }\n    rax = *((rbp + 0x50));\n    rsi = rsp;\n    edi = *((rax + 0x2c));\n    eax = fstatfs ();\n    if (eax == 0) {\n        goto label_2;\n    }\nlabel_4:\n    eax = 0;\n    return rax;\nlabel_7:\n    free (rbx);\n    rax = *(rsp);\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_00410be0",
            "funcStartAddr": "0x410be0",
            "funcEndAddr": "0x410c44",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x410be0 */\n#include <stdint.h>\n \nuint64_t fcn_00410be0 (void) {\n    rax = fcn_00410ac0 (rdi);\n    if (rax == 0x9fa0) {\n        goto label_1;\n    }\n    if (rax <= 0x9fa0) {\n        goto label_2;\n    }\n    if (rax == 0x5346414f) {\n        goto label_1;\n    }\n    edx = 2;\n    if (rax == 0x58465342) {\n        goto label_0;\n    }\n    edx = 0;\n    dl = (rax == 0x52654973) ? 1 : 0;\n    edx++;\n    do {\nlabel_0:\n        eax = edx;\n        return rax;\nlabel_2:\n        edx = 0;\n    } while (rax == 0);\n    edx = 0;\n    dl = (rax != 0x6969) ? 1 : 0;\n    eax = edx;\n    return rax;\nlabel_1:\n    edx = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00410c50",
            "funcStartAddr": "0x410c50",
            "funcEndAddr": "0x410cb6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x410c50 */\n#include <stdint.h>\n \nuint32_t fcn_00410c50 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rdi;\n    esi = *((rdi + 0x2c));\n    if (esi == ebp) {\n        if (esi != 0xffffff9c) {\n            goto label_0;\n        }\n    }\n    if (dl != 0) {\n        goto label_1;\n    }\n    if ((*((rbx + 0x48)) & 4) != 0) {\n        goto label_2;\n    }\n    if (esi >= 0) {\n        goto label_3;\n    }\n    do {\nlabel_2:\n        *((rbx + 0x2c)) = ebp;\n        return;\nlabel_1:\n        eax = fcn_00413d80 (rbx + 0x60, rsi);\n    } while (eax < 0);\n    close (eax);\n    *((rbx + 0x2c)) = ebp;\n    return eax;\nlabel_3:\n    close (esi);\n    *((rbx + 0x2c)) = ebp;\n    return eax;\nlabel_0:\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_00410cc0",
            "funcStartAddr": "0x410cc0",
            "funcEndAddr": "0x410d1a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x410cc0 */\n#include <stdint.h>\n \nint32_t fcn_00410cc0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    edx = *((rdi + 0x48));\n    ebp &= 4;\n    if (ebp == 0) {\n        dh &= 2;\n        if (dh == 0) {\n            goto label_0;\n        }\n        edx = 1;\n        fcn_00410c50 (rdi, 0xffffff9c);\n    } else {\n        ebp = 0;\n    }\n    do {\n        fcn_00410a80 (rbx + 0x60);\n        eax = ebp;\n        return eax;\nlabel_0:\n        edi = *((rdi + 0x28));\n        ebp = 0;\n        eax = fchdir ();\n        bpl = (eax != 0) ? 1 : 0;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00410d20",
            "funcStartAddr": "0x410d20",
            "funcEndAddr": "0x410d8b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x410d20 */\n#include <stdint.h>\n \nuint64_t fcn_00410d20 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rcx = *(rsi);\n    rbx = rdi;\n    rdi = *(rdi);\n    rax = rcx + rdx + 0x100;\n    if (rcx <= rax) {\n        *(rsi) = rax;\n        rax = realloc (rdi, rax);\n        if (rax == 0) {\n            goto label_0;\n        }\n        *(rbx) = rax;\n        eax = 1;\n        return rax;\n    }\n    free (rdi);\n    *(rbx) = 0;\n    errno_location ();\n    *(rax) = 0x24;\n    eax = 0;\n    return rax;\nlabel_0:\n    eax = free (*(rbx));\n    *(rbx) = 0;\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00410d90",
            "funcStartAddr": "0x410d90",
            "funcEndAddr": "0x410deb",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x410d90 */\n#include <stdint.h>\n \nuint64_t fcn_00410d90 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edi &= 0x102;\n    rbx = rsi;\n    if (edi == 0) {\n        goto label_0;\n    }\n    rax = fcn_0040b8c0 (0x1f, 0, 0x410690, 0x410670, sym.imp.free);\n    *(rbx) = rax;\n    al = (rax != 0) ? 1 : 0;\n    do {\n        return rax;\nlabel_0:\n        rax = malloc (0x20);\n        rdi = rax;\n        *(rbx) = rax;\n        eax = 0;\n    } while (rdi == 0);\n    fcn_00413be0 (rdi);\n    eax = 1;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00410df0",
            "funcStartAddr": "0x410df0",
            "funcEndAddr": "0x410e34",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x410df0 */\n#include <stdint.h>\n \nint32_t fcn_00410df0 (int64_t arg2, int64_t arg3, int32_t fd) {\n    rsi = arg2;\n    rdx = arg3;\n    rdi = fd;\n    eax = esi;\n    rcx = rdx;\n    edx = esi;\n    edx <<= 0xd;\n    eax <<= 7;\n    edx &= 0x20000;\n    eax &= 0x40000;\n    edx |= eax;\n    edx |= 0x90900;\n    esi &= 0x200;\n    if (esi != 0) {\n        rsi = rcx;\n        eax = 0;\n        void (*0x414380)() ();\n    }\n    esi = edx;\n    rdi = rcx;\n    eax = 0;\n    return void (*0x40ab10)() ();\n}\n"
        },
        {
            "funcName": "fcn_00410e40",
            "funcStartAddr": "0x410e40",
            "funcEndAddr": "0x411006",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x410e40 */\n#include <stdint.h>\n \nuint64_t fcn_00410e40 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r15 = rdi;\n    r13 = rsi;\n    rbx = rcx;\n    r12d = *((rdi + 0x48));\n    edx = *((rdi + 0x48));\n    edx &= 4;\n    if (rcx != 0) {\n        edi = 0x415fd6;\n        ecx = 3;\n        rsi = rbx;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        al = (rcx > 0) ? 1 : 0;\n        if (al == 0) {\n            if (edx != 0) {\n                goto label_4;\n            }\n            if (ebp >= 0) {\n                goto label_5;\n            }\n            if ((r12d & 0x200) == 0) {\n                goto label_6;\n            }\n            rdx = r15 + 0x60;\n            rdi = rdx;\n            *((rsp + 8)) = rdx;\n            al = fcn_00413d70 (rdi);\n            rdx = *((rsp + 8));\n            r14d = eax;\n            if (al != 0) {\n                goto label_2;\n            }\n            eax = fcn_00413dc0 (rdx);\n            r12d = eax;\n            if (eax < 0) {\n                goto label_7;\n            }\n            r14d = 1;\n        }\n    } else {\n        if (edx != 0) {\n            goto label_4;\n        }\n        if (ebp < 0) {\n            goto label_8;\n        }\n        r12d = ebp;\n        r14d = 0;\n    }\n    do {\nlabel_3:\n        rdx = rsp + 0x10;\n        esi = r12d;\n        edi = 1;\n        eax = fxstat ();\n        ebx = eax;\n        if (eax == 0) {\n            rax = *((rsp + 0x10));\n            if (*((r13 + 0x78)) == rax) {\n                rax = *((rsp + 0x18));\n                if (*((r13 + 0x80)) == rax) {\n                    goto label_9;\n                }\n            }\n            errno_location ();\n            *(rax) = 2;\n        }\n        ebx = 0xffffffff;\nlabel_1:\n        if (ebp < 0) {\n            rax = errno_location ();\n            r13d = *(rax);\n            close (r12d);\n            *(rbp) = r13d;\n            goto label_0;\nlabel_4:\n            r12d &= 0x200;\n            if (r12d != 0) {\n                if (ebp >= 0) {\n                    goto label_10;\n                }\n            }\n            ebx = 0;\n        }\nlabel_0:\n        eax = ebx;\n        return rax;\nlabel_6:\n        r14d = 1;\nlabel_2:\n        eax = fcn_00410df0 (*((r15 + 0x2c)), r12d, rbx);\n        r12d = eax;\n    } while (eax >= 0);\n    ebx = 0xffffffff;\n    goto label_0;\nlabel_9:\n    if ((*((r15 + 0x49)) & 2) == 0) {\n        edi = r12d;\n        eax = fchdir ();\n        ebx = eax;\n        goto label_1;\nlabel_10:\n        ebx = 0;\n        close (ebp);\n        goto label_0;\nlabel_7:\n        r12d = *((r15 + 0x48));\n        r14d = 1;\n        goto label_2;\n    }\n    r14d ^= 1;\n    edx = (int32_t) r14b;\n    fcn_00410c50 (r15, r12d);\n    goto label_0;\nlabel_5:\n    r12d = ebp;\n    r14d = 1;\n    goto label_3;\nlabel_8:\n    r14d = 0;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_00411010",
            "funcStartAddr": "0x411010",
            "funcEndAddr": "0x4110bf",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x411010 */\n#include <stdint.h>\n \nuint64_t fcn_00411010 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    edi &= 0x102;\n    r12 = rsi;\n    rbx = rdx;\n    if (edi == 0) {\n        goto label_0;\n    }\n    rax = malloc (0x18);\n    if (rax == 0) {\n        goto label_1;\n    }\n    rax = *((rbx + 0x78));\n    rsi = rbp;\n    *((rbp + 0x10)) = rbx;\n    *(rbp) = rax;\n    rax = *((rbx + 0x80));\n    *((rbp + 8)) = rax;\n    rax = fcn_0040c060 (*(r12));\n    r12 = rax;\n    if (rbp == rax) {\n        goto label_2;\n    }\n    free (rbp);\n    if (r12 == 0) {\n        goto label_1;\n    }\n    rax = *((r12 + 0x10));\n    ecx = 2;\n    *((rbx + 0x70)) = cx;\n    *(rbx) = rax;\n    do {\nlabel_2:\n        eax = 1;\n        return rax;\nlabel_0:\n        al = fcn_00413bf0 (*(r12), rdx + 0x78);\n    } while (al == 0);\n    edx = 2;\n    *(rbx) = rbx;\n    *((rbx + 0x70)) = dx;\n    return rax;\nlabel_1:\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004110c0",
            "funcStartAddr": "0x4110c0",
            "funcEndAddr": "0x41f45f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4110c0 */\n#include <stdint.h>\n \nint64_t fcn_004110c0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    do {\nlabel_0:\n        abort ();\n        edi &= 0x102;\n        rcx = rsi;\n        if (edi != 0) {\n            goto label_2;\n        }\n        rax = *((rdx + 8));\n        if (rax == 0) {\n            goto label_1;\n        }\n        if (*((rax + 0x58)) < 0) {\n            goto label_1;\n        }\n        rcx = *(rsi);\n    } while (*((rcx + 0x10)) == 0);\n    rsi = *((rdx + 0x80));\n    if (*(rcx) == rsi) {\n        goto label_3;\n    }\nlabel_1:\n    return rax;\nlabel_2:\n    rax = *((rdx + 0x78));\n    rsi = rsp;\n    *(rsp) = rax;\n    rax = *((rdx + 0x80));\n    *((rsp + 8)) = rax;\n    rax = fcn_0040c0a0 (*(rcx));\n    if (rax == 0) {\n        goto label_0;\n    }\n    free (rax);\n    return rax;\nlabel_3:\n    rsi = *((rdx + 0x78));\n    if (*((rcx + 8)) != rsi) {\n        goto label_1;\n    }\n    rdx = *((rax + 0x78));\n    rax = *((rax + 0x80));\n    *((rcx + 8)) = rdx;\n    *(rcx) = rax;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00411160",
            "funcStartAddr": "0x411160",
            "funcEndAddr": "0x411b13",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x411160 */\n#include <stdint.h>\n \nuint64_t fcn_00411160 (int64_t arg1, uint32_t arg2) {\n    int64_t var_8h;\n    int64_t var_10h;\n    uint32_t var_18h;\n    uint32_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    uint32_t var_38h;\n    void ** s1;\n    int64_t var_48h;\n    uint32_t var_50h;\n    uint32_t var_58h;\n    uint32_t var_5eh;\n    uint32_t var_5fh;\n    rdi = arg1;\n    rsi = arg2;\n    r15 = rdi;\n    r13 = *(rdi);\n    *((rsp + 0x58)) = esi;\n    rdi = *((r13 + 0x18));\n    *((rsp + 0x50)) = rdi;\n    if (rdi == 0) {\n        goto label_26;\n    }\n    eax = dirfd ();\n    if (eax < 0) {\n        goto label_27;\n    }\n    if (*((r15 + 0x40)) == 0) {\n        goto label_28;\n    }\n    *((rsp + 0x38)) = 0xffffffffffffffff;\nlabel_9:\n    *((rsp + 0x5f)) = 1;\n    edi = *((r15 + 0x48));\nlabel_10:\n    rcx = *((r13 + 0x48));\n    rax = rcx - 1;\n    *((rsp + 0x10)) = rcx;\n    *((rsp + 0x48)) = rax;\n    rax = *((r13 + 0x38));\n    if (*((rax + rcx - 1)) != 0x2f) {\n        rax = rcx + 1;\n        *((rsp + 0x48)) = rcx;\n        *((rsp + 0x10)) = rax;\n    }\n    *((rsp + 0x40)) = 0;\n    edi &= 4;\n    if (edi != 0) {\n        rax = *((rsp + 0x48));\n        rax += *((r15 + 0x20));\n        rcx = rax + 1;\n        *(rax) = 0x2f;\n        *((rsp + 0x40)) = rcx;\n    }\n    rax = *((r15 + 0x30));\n    rax -= *((rsp + 0x10));\n    *((rsp + 0x5e)) = 0;\n    ebp = 0;\n    *((rsp + 0x20)) = rax;\n    rax = *((r13 + 0x58));\n    rbx = r15;\n    *((rsp + 8)) = 0;\n    rax++;\n    *((rsp + 0x28)) = r13;\n    *((rsp + 0x30)) = rax;\n    *((rsp + 0x18)) = 0;\n    while (edx > 0xb) {\n        *((r15 + 0x90)) = 0;\n        eax = 2;\nlabel_0:\n        *((r15 + 0xa8)) = rax;\nlabel_7:\n        *((r15 + 0x10)) = 0;\n        if (*((rsp + 0x18)) == 0) {\n            goto label_29;\n        }\n        rax = *((rsp + 8));\n        rbp++;\n        *((rax + 0x10)) = r15;\n        if (rbp >= *((rsp + 0x38))) {\n            goto label_30;\n        }\nlabel_3:\n        *((rsp + 8)) = r15;\n        rax = *((rsp + 0x28));\n        r15 = *((rax + 0x18));\n        if (r15 == 0) {\n            goto label_31;\n        }\n        errno_location ();\n        rdi = r15;\n        *(rax) = 0;\n        r12 = rax;\n        rax = readdir ();\n        r14 = rax;\n        if (rax == 0) {\n            goto label_32;\n        }\n        if ((*((rbx + 0x48)) & 0x20) == 0) {\n            if (*((rax + 0x13)) == 0x2e) {\n                goto label_33;\n            }\n        }\nlabel_5:\n        r15 = r14 + 0x13;\n        rax = strlen (r15);\n        rdx = rax;\n        r13 = rax;\n        rax = fcn_004109a0 (rbx, r15, rdx);\n        r15 = rax;\n        if (rax == 0) {\n            goto label_34;\n        }\n        if (*((rsp + 0x20)) <= r13) {\n            goto label_35;\n        }\nlabel_1:\n        r8 = r13;\n        r8 += *((rsp + 0x10));\n        if (r8 < 0) {\n            goto label_36;\n        }\n        rax = *((rsp + 0x30));\n        rsi = r15 + 0x108;\n        *((r15 + 0x58)) = rax;\n        rax = *(rbx);\n        *((r15 + 0x48)) = r8;\n        *((r15 + 8)) = rax;\n        rax = *(r14);\n        *((r15 + 0x80)) = rax;\n        eax = *((rbx + 0x48));\n        if ((al & 4) != 0) {\n            goto label_37;\n        }\n        *((r15 + 0x30)) = rsi;\nlabel_2:\n        if (*((rbx + 0x40)) != 0) {\n            if ((ah & 4) == 0) {\n                goto label_38;\n            }\n        }\n        edx = *((r14 + 0x12));\n        eax &= 0x18;\n        esi = edx;\n        edx--;\n        if (eax == 0x18) {\n            goto label_39;\n        }\nlabel_6:\n        eax = 0xb;\n        *((r15 + 0x70)) = ax;\n    }\n    eax = *((rdx*4 + 0x418180));\n    *((r15 + 0x90)) = eax;\n    eax = 2;\n    goto label_0;\nlabel_35:\n    rax = *((rbx + 0x20));\n    *((rsp + 0x20)) = rax;\n    rax = *((rsp + 0x48));\n    rdx = rax + r13 + 2;\n    al = fcn_00410d20 (rbx + 0x20, rbx + 0x30);\n    if (al == 0) {\n        goto label_34;\n    }\n    rdx = *((rbx + 0x20));\n    if (rdx == *((rsp + 0x20))) {\n        goto label_40;\n    }\n    rdx += *((rsp + 0x10));\n    if ((*((rbx + 0x48)) & 4) == 0) {\n        rdx = *((rsp + 0x40));\n    }\n    *((rsp + 0x40)) = rdx;\nlabel_8:\n    rcx = *((rbx + 0x30));\n    rcx -= *((rsp + 0x10));\n    *((rsp + 0x5e)) = al;\n    *((rsp + 0x20)) = rcx;\n    goto label_1;\nlabel_37:\n    rax = *((r15 + 0x38));\n    *((r15 + 0x30)) = rax;\n    rax = *((r15 + 0x60));\n    memmove (*((rsp + 0x40)), rsi, rax + 1);\n    eax = *((rbx + 0x48));\n    goto label_2;\nlabel_29:\n    *((rsp + 0x18)) = r15;\n    rbp++;\n    if (rbp < *((rsp + 0x38))) {\n        goto label_3;\n    }\nlabel_30:\n    r13 = *((rsp + 0x28));\n    r15 = rbx;\n    if (*((rsp + 0x5e)) == 0) {\n        goto label_41;\n    }\nlabel_14:\n    rax = *((r15 + 8));\n    rcx = *((r15 + 0x20));\n    if (rax == 0) {\n        goto label_42;\n    }\n    do {\n        rdx = *((rax + 0x30));\n        rsi = rax + 0x108;\n        if (rdx != rsi) {\n            rdx -= *((rax + 0x38));\n            rdx += rcx;\n            *((rax + 0x30)) = rdx;\n        }\n        *((rax + 0x38)) = rcx;\n        rax = *((rax + 0x10));\n    } while (rax != 0);\nlabel_42:\n    rax = *((rsp + 0x18));\n    while (rdx != 0) {\nlabel_4:\n        rax = rdx;\n        if (*((rax + 0x58)) < 0) {\n            goto label_41;\n        }\n        rdx = *((rax + 0x30));\n        rsi = rax + 0x108;\n        if (rdx != rsi) {\n            rdx -= *((rax + 0x38));\n            rdx += rcx;\n            *((rax + 0x30)) = rdx;\n        }\n        rdx = *((rax + 0x10));\n        *((rax + 0x38)) = rcx;\n    }\n    rdx = *((rax + 8));\n    goto label_4;\nlabel_33:\n    if (*((rax + 0x14)) == 0) {\n        goto label_43;\n    }\n    if (*((rax + 0x14)) != 0x2e) {\n        goto label_5;\n    }\nlabel_43:\n    r15 = *((rsp + 8));\n    goto label_3;\nlabel_39:\n    esi &= 0xfb;\n    if (esi == 0) {\n        goto label_6;\n    }\n    ecx = 0xb;\n    *((r15 + 0x70)) = cx;\n    if (edx <= 0xb) {\n        goto label_44;\n    }\n    *((r15 + 0x90)) = 0;\n    eax = 1;\n    goto label_0;\nlabel_38:\n    edx = 0;\n    ax = fcn_004106f0 (rbx, r15);\n    *((r15 + 0x70)) = ax;\n    goto label_7;\nlabel_40:\n    eax = *((rsp + 0x5e));\n    goto label_8;\nlabel_26:\n    eax = *((r15 + 0x48));\n    ecx = *((r15 + 0x48));\n    ecx &= 0x10;\n    if (ecx != 0) {\n        ecx = 0x20000;\n        if ((al & 1) != 0) {\n            goto label_45;\n        }\n    }\nlabel_11:\n    edx = eax;\n    eax &= 0x204;\n    rsi = *((r13 + 0x30));\n    edi = 0xffffff9c;\n    edx <<= 7;\n    edx &= 0x40000;\n    edx |= ecx;\n    if (eax == 0x200) {\n    }\n    edx |= 0x90900;\n    eax = 0;\n    eax = fcn_00414380 (*((r15 + 0x2c)), rsi, rdx, rcx, r8);\n    ebx = eax;\n    if (eax < 0) {\n        goto label_46;\n    }\n    edi = eax;\n    rax = fdopendir ();\n    if (rax == 0) {\n        goto label_47;\n    }\n    *((r13 + 0x18)) = rax;\n    if (*((r13 + 0x70)) == 0xb) {\n        goto label_48;\n    }\n    edi = *((r15 + 0x48));\n    if ((edi & 0x100) != 0) {\n        goto label_49;\n    }\nlabel_18:\n    rax -= rax;\n    eax &= 0x186a1;\n    rax--;\n    *((rsp + 0x38)) = rax;\n    if (*((rsp + 0x58)) == 2) {\n        goto label_50;\n    }\n    eax = *((r15 + 0x48));\n    eax &= 0x38;\n    if (eax == 0x18) {\n        goto label_51;\n    }\nlabel_12:\n    r14d = 1;\n    r12b = (*((rsp + 0x58)) == 3) ? 1 : 0;\nlabel_13:\n    if ((*((r15 + 0x49)) & 2) != 0) {\n        goto label_52;\n    }\nlabel_19:\n    eax = fcn_00410e40 (r15, r13, ebx, 0);\n    if (eax == 0) {\n        goto label_9;\n    }\n    ebp = *((r13 + 0x72));\n    rdi = *((r13 + 0x18));\n    ebp |= 1;\n    if (r12b != 0) {\n        if (r14b == 0) {\n            goto label_53;\n        }\nlabel_20:\n        *((rsp + 8)) = rdi;\n        rax = errno_location ();\n        rdi = *((rsp + 8));\n        eax = *(rax);\n        *((r13 + 0x40)) = eax;\n    }\nlabel_53:\n    *((r13 + 0x72)) = bp;\n    closedir ();\n    edi = *((r15 + 0x48));\n    *((r13 + 0x18)) = 0;\n    if ((edi & 0x200) != 0) {\n        if (ebx < 0) {\n            goto label_21;\n        }\n        close (ebx);\n        edi = *((r15 + 0x48));\n    }\nlabel_21:\n    *((r13 + 0x18)) = 0;\n    *((rsp + 0x5f)) = 0;\n    goto label_10;\nlabel_44:\n    eax = *((rdx*4 + 0x418180));\n    *((r15 + 0x90)) = eax;\n    eax = 1;\n    goto label_0;\nlabel_34:\n    rcx = r15;\n    r13 = *((rsp + 0x28));\n    r15 = rbx;\n    ebx = *(r12);\n    free (rcx);\n    fcn_00410a30 (*((rsp + 0x18)));\n    rdi = *((r13 + 0x18));\n    closedir ();\n    r9d = 7;\n    *((r13 + 0x18)) = 0;\n    *((r13 + 0x70)) = r9w;\n    *((rsp + 0x18)) = 0;\n    *((r15 + 0x48)) |= 0x4000;\n    *(r12) = ebx;\nlabel_15:\n    rax = *((rsp + 0x18));\n    return rax;\nlabel_45:\n    ecx = 0;\n    cl = (*((r13 + 0x58)) != 0) ? 1 : 0;\n    ecx <<= 0x11;\n    goto label_11;\nlabel_51:\n    if (*((r13 + 0x88)) != 2) {\n        goto label_12;\n    }\n    rdi = r13;\n    eax = fcn_00410be0 ();\n    if (eax == 0) {\n        goto label_12;\n    }\n    if (*((rsp + 0x58)) != 3) {\n        goto label_50;\n    }\n    r14d = 0;\n    r12d = 1;\n    goto label_13;\nlabel_31:\n    r13 = rax;\n    r15 = rbx;\nlabel_17:\n    if (*((rsp + 0x5e)) != 0) {\n        goto label_14;\n    }\nlabel_41:\n    if ((*((r15 + 0x48)) & 4) != 0) {\n        rax = *((rsp + 0x10));\n        if (*((r15 + 0x30)) != rax) {\n            if (rbp != 0) {\n                goto label_54;\n            }\n        }\nlabel_54:\n        rax = *((rsp + 0x40));\n        *(rax) = 0;\n    }\n    if (*((rsp + 0x50)) != 0) {\n        goto label_55;\n    }\n    if (*((rsp + 0x5f)) == 0) {\n        goto label_55;\n    }\n    if (*((rsp + 0x58)) == 1) {\n        goto label_56;\n    }\n    while (rbp != 0) {\n        rax = *((r15 + 0x40));\n        if (rbp <= 0x2710) {\n            goto label_57;\n        }\n        if (rax == 0) {\n            goto label_58;\n        }\nlabel_16:\n        rsi = *((rsp + 0x18));\n        rdx = rbp;\n        rdi = r15;\n        void (*0x4108a0)() ();\nlabel_56:\n        if (*((r13 + 0x58)) != 0) {\n            goto label_59;\n        }\n        eax = fcn_00410cc0 (r15);\n        al = (eax != 0) ? 1 : 0;\nlabel_22:\n        if (al != 0) {\n            goto label_60;\n        }\nlabel_55:\n    }\n    if (*((rsp + 0x58)) == 3) {\n        goto label_61;\n    }\nlabel_25:\n    fcn_00410a30 (*((rsp + 0x18)));\n    *((rsp + 0x18)) = 0;\n    goto label_15;\nlabel_24:\n    rax = *((r15 + 0x40));\nlabel_57:\n    if (rax == 0) {\n        goto label_15;\n    }\n    if (rbp == 1) {\n        goto label_15;\n    }\n    goto label_16;\nlabel_32:\n    eax = *(r12);\n    r13 = *((rsp + 0x28));\n    r15 = rbx;\n    if (eax != 0) {\n        *((r13 + 0x40)) = eax;\n        rax = *((rsp + 0x50));\n        rax |= rbp;\n        eax -= eax;\n        eax &= 0xfffffffd;\n        eax += 7;\n        *((r13 + 0x70)) = ax;\n    }\n    rdi = *((r13 + 0x18));\n    if (rdi == 0) {\n        goto label_17;\n    }\n    closedir ();\n    *((r13 + 0x18)) = 0;\n    goto label_17;\nlabel_47:\n    rax = errno_location ();\n    r12d = *(rax);\n    close (ebx);\n    *(rbp) = r12d;\nlabel_46:\n    *((r13 + 0x18)) = 0;\n    if (*((rsp + 0x58)) == 3) {\n        goto label_62;\n    }\nlabel_23:\n    *((rsp + 0x18)) = 0;\n    goto label_15;\nlabel_28:\n    *((rsp + 0x38)) = 0x186a0;\n    edi = *((r15 + 0x48));\n    *((rsp + 0x5f)) = 1;\n    goto label_10;\nlabel_50:\n    *((rsp + 0x5f)) = 0;\n    edi = *((r15 + 0x48));\n    goto label_10;\nlabel_49:\n    rbp = r15 + 0x58;\n    fcn_004110c0 (rdi, rbp, r13);\n    edx = 0;\n    fcn_004106f0 (r15, r13);\n    al = fcn_00411010 (*((r15 + 0x48)), rbp, r13);\n    if (al != 0) {\n        goto label_18;\n    }\n    errno_location ();\n    *((rsp + 0x18)) = 0;\n    *(rax) = 0xc;\n    goto label_15;\nlabel_48:\n    edx = 0;\n    ax = fcn_004106f0 (r15, r13);\n    *((r13 + 0x70)) = ax;\n    goto label_18;\nlabel_52:\n    eax = 0;\n    eax = fcn_00410460 (ebx, 0x406, 3, rcx, r8);\n    ebx = eax;\n    if (eax >= 0) {\n        goto label_19;\n    }\n    ebp = *((r13 + 0x72));\n    rdi = *((r13 + 0x18));\n    ebp |= 1;\n    if (r12b == 0) {\n        goto label_63;\n    }\n    if (r14b != 0) {\n        goto label_20;\n    }\nlabel_63:\n    *((r13 + 0x72)) = bp;\n    closedir ();\n    edi = *((r15 + 0x48));\n    goto label_21;\nlabel_59:\n    eax = fcn_00410e40 (r15, *((r13 + 8)), 0xffffffff, 0x415fd6);\n    al = (eax != 0) ? 1 : 0;\n    goto label_22;\nlabel_27:\n    rdi = *((r13 + 0x18));\n    closedir ();\n    *((r13 + 0x18)) = 0;\n    if (*((rsp + 0x58)) != 3) {\n        goto label_23;\n    }\nlabel_62:\n    r10d = 4;\n    *((r13 + 0x70)) = r10w;\n    rax = errno_location ();\n    eax = *(rax);\n    *((r13 + 0x40)) = eax;\n    goto label_23;\nlabel_60:\n    edi = 7;\n    *((r13 + 0x70)) = di;\n    *((r15 + 0x48)) |= 0x4000;\n    fcn_00410a30 (*((rsp + 0x18)));\n    *((rsp + 0x18)) = 0;\n    goto label_15;\nlabel_58:\n    rax = fcn_00410ac0 (r13);\n    if (rax == 0x6969) {\n        goto label_24;\n    }\n    if (rax == 0x1021994) {\n        goto label_24;\n    }\n    *((r15 + 0x40)) = 0x4106c0;\n    rax = fcn_004108a0 (r15, *((rsp + 0x18)), rbp);\n    *((r15 + 0x40)) = 0;\n    *((rsp + 0x18)) = rax;\n    goto label_15;\nlabel_61:\n    eax = *((r13 + 0x70));\n    if (ax == 4) {\n        goto label_25;\n    }\n    if (ax == 7) {\n        goto label_25;\n    }\n    esi = 6;\n    *((r13 + 0x70)) = si;\n    goto label_25;\nlabel_36:\n    rcx = r15;\n    r13 = *((rsp + 0x28));\n    free (rcx);\n    fcn_00410a30 (*((rsp + 0x18)));\n    rdi = *((r13 + 0x18));\n    closedir ();\n    r8d = 7;\n    *((r13 + 0x18)) = 0;\n    *((r13 + 0x70)) = r8w;\n    *((rsp + 0x18)) = 0;\n    *((rbx + 0x48)) |= 0x4000;\n    *(r12) = 0x24;\n    goto label_15;\n}\n"
        },
        {
            "funcName": "fts_open",
            "funcStartAddr": "0x411b20",
            "funcEndAddr": "0x411eb9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x411b20 */\n#include <stdint.h>\n \nuint64_t fts_open (int64_t arg1, int64_t arg2, int64_t arg3) {\n    void * ptr;\n    uint32_t var_16h;\n    uint32_t var_17h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if ((esi & 0xffffe000) != 0) {\n        goto label_10;\n    }\n    eax = esi;\n    eax &= 0x204;\n    if (eax == 0x204) {\n        goto label_10;\n    }\n    if ((sil & 0x12) == 0) {\n        goto label_10;\n    }\n    r13 = rdi;\n    r14 = rdx;\n    rax = calloc (0x80, 1);\n    rbx = rax;\n    if (rax == 0) {\n        goto label_2;\n    }\n    *((rax + 0x40)) = r14;\n    if ((bpl & 2) != 0) {\n        goto label_11;\n    }\n    *((rax + 0x48)) = ebp;\nlabel_3:\n    rdi = *(r13);\n    *((rbx + 0x2c)) = 0xffffff9c;\n    if (rdi == 0) {\n        goto label_12;\n    }\n    r15 = r13;\n    r12d = 0;\n    do {\n        rax = strlen (rdi);\n        if (r12 < rax) {\n            r12 = rax;\n        }\n        r15 += 8;\n        rdi = *(r15);\n    } while (rdi != 0);\n    rdx = r12 + 1;\n    eax = 0x1000;\n    if (rdx < 0x1000) {\n        rdx = rax;\n    }\nlabel_8:\n    al = fcn_00410d20 (rbx + 0x20, rbx + 0x30);\n    *((rsp + 0x16)) = al;\n    if (al == 0) {\n        goto label_13;\n    }\n    r15 = *(r13);\n    if (r15 == 0) {\n        goto label_14;\n    }\n    rax = fcn_004109a0 (rbx, 0x4182d7, 0);\n    rcx = rax;\n    *((rsp + 8)) = rax;\n    if (rax == 0) {\n        goto label_15;\n    }\n    rax = 0xffffffffffffffff;\n    r15 = *(r13);\n    *((rcx + 0x58)) = rax;\n    *((rcx + 0x68)) = rax;\n    if (r14 != 0) {\nlabel_4:\n        eax = *((rbx + 0x48));\n        eax >>= 0xa;\n        eax &= 1;\n        *((rsp + 0x16)) = al;\n    }\n    if (r15 == 0) {\n        goto label_16;\n    }\n    *((rsp + 0x18)) = 0;\n    ebp >>= 0xc;\n    r12d = 0;\n    ebp ^= 1;\n    eax = ebp;\n    ebp = 0;\n    eax &= 1;\n    *((rsp + 0x17)) = al;\n    while (rax <= 2) {\nlabel_0:\n        rax = fcn_004109a0 (rbx, r15, rax);\n        r15 = rax;\n        if (rax == 0) {\n            goto label_17;\n        }\n        *((rax + 0x58)) = 0;\n        rax = *((rsp + 8));\n        *((r15 + 8)) = rax;\n        rax = r15 + 0x108;\n        *((r15 + 0x30)) = rax;\n        if (r12 == 0) {\n            goto label_18;\n        }\n        if (*((rsp + 0x16)) == 0) {\n            goto label_18;\n        }\n        *((r15 + 0xa8)) = 2;\n        ecx = 0xb;\n        *((r15 + 0x70)) = cx;\n        if (r14 == 0) {\n            goto label_19;\n        }\nlabel_6:\n        *((r15 + 0x10)) = r12;\n        r12 = r15;\nlabel_7:\n        rbp++;\n        r15 = *((r13 + rbp*8));\n        if (r15 == 0) {\n            goto label_20;\n        }\n        rax = strlen (r15);\n    }\n    if (*((rsp + 0x17)) == 0) {\n        goto label_0;\n    }\n    if (*((r15 + rax - 1)) != 0x2f) {\n        goto label_0;\n    }\nlabel_1:\n    if (*((r15 + rax - 2)) != 0x2f) {\n        goto label_0;\n    }\n    rax--;\n    if (rax != 1) {\n        goto label_1;\n    }\n    goto label_0;\nlabel_20:\n    if (r14 != 0) {\n        if (rbp <= 1) {\n            goto label_5;\n        }\n        rax = fcn_004108a0 (rbx, r12, rbp);\n        r12 = rax;\n    }\nlabel_5:\n    rax = fcn_004109a0 (rbx, 0x4182d7, 0);\n    *(rbx) = rax;\n    if (rax == 0) {\n        goto label_17;\n    }\n    edx = 9;\n    *((rax + 0x10)) = r12;\n    *((rax + 0x70)) = dx;\n    al = fcn_00410d90 (*((rbx + 0x48)), rbx + 0x58);\n    if (al == 0) {\n        goto label_17;\n    }\n    esi = *((rbx + 0x48));\n    if ((esi & 0x204) == 0) {\n        goto label_21;\n    }\nlabel_9:\n    fcn_00413d50 (rbx + 0x60, 0xffffffff);\n    do {\nlabel_2:\n        rax = rbx;\n        return rax;\nlabel_10:\n        errno_location ();\n        ebx = 0;\n        *(rax) = 0x16;\n    } while (1);\nlabel_17:\n    fcn_00410a30 (r12);\n    free (*((rsp + 8)));\nlabel_15:\n    free (*((rbx + 0x20)));\nlabel_13:\n    ebx = 0;\n    free (rbx);\n    goto label_2;\nlabel_11:\n    eax = ebp;\n    ah &= 0xfd;\n    eax |= 4;\n    *((rbx + 0x48)) = eax;\n    goto label_3;\nlabel_14:\n    *((rsp + 8)) = 0;\n    if (r14 != 0) {\n        goto label_4;\n    }\nlabel_16:\n    r12d = 0;\n    goto label_5;\nlabel_18:\n    edx = 0;\n    ax = fcn_004106f0 (rbx, r15);\n    *((r15 + 0x70)) = ax;\n    if (r14 != 0) {\n        goto label_6;\n    }\n    *((r15 + 0x10)) = 0;\n    if (r12 == 0) {\n        *((rsp + 0x18)) = r15;\n        r12 = r15;\n        goto label_7;\nlabel_19:\n        *((r15 + 0x10)) = 0;\n    }\n    rax = *((rsp + 0x18));\n    *((rsp + 0x18)) = r15;\n    *((rax + 0x10)) = r15;\n    goto label_7;\nlabel_12:\n    edx = 0x1000;\n    goto label_8;\nlabel_21:\n    eax = fcn_00410df0 (*((rbx + 0x2c)), rsi, 0x415fd7);\n    *((rbx + 0x28)) = eax;\n    if (eax >= 0) {\n        goto label_9;\n    }\n    *((rbx + 0x48)) |= 4;\n    goto label_9;\n}\n"
        },
        {
            "funcName": "fts_close",
            "funcStartAddr": "0x411ec0",
            "funcEndAddr": "0x412039",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x411ec0 */\n#include <stdint.h>\n \nuint64_t fts_close (int64_t arg_8h, void * ptr, void * arg_20h, int64_t fildes, int64_t arg_2ch, int64_t arg_48h, int64_t arg_50h, int64_t arg_58h, int64_t arg_60h, uint32_t arg1) {\n    rdi = arg1;\n    rdi = *(rdi);\n    if (rdi == 0) {\n        goto label_6;\n    }\n    if (*((rdi + 0x58)) >= 0) {\n        goto label_0;\n    }\n    goto label_7;\n    do {\n        free (rdi);\n        rdi = rbx;\n        if (*((rbx + 0x58)) < 0) {\n            goto label_4;\n        }\nlabel_0:\n        rbx = *((rdi + 0x10));\n    } while (rbx != 0);\n    rbx = *((rdi + 8));\n    free (rdi);\n    rdi = rbx;\n    if (*((rbx + 0x58)) >= 0) {\n        goto label_0;\n    }\nlabel_4:\n    free (rbx);\nlabel_6:\n    rdi = *((rbp + 8));\n    if (rdi != 0) {\n        fcn_00410a30 (rdi);\n    }\n    free (*((rbp + 0x10)));\n    free (*((rbp + 0x20)));\n    eax = *((rbp + 0x48));\n    if ((ah & 2) == 0) {\n        goto label_8;\n    }\n    edi = *((rbp + 0x2c));\n    if (edi >= 0) {\n        goto label_9;\n    }\n    do {\nlabel_1:\n        ebx = 0;\nlabel_2:\n        fcn_00410a80 (rbp + 0x60);\n        rdi = *((rbp + 0x50));\n        if (rdi != 0) {\n            fcn_0040bb00 (rdi);\n        }\n        rdi = *((rbp + 0x58));\n        if ((*((rbp + 0x48)) & 0x102) == 0) {\n            goto label_10;\n        }\n        if (rdi != 0) {\n            fcn_0040bb00 (rdi);\n        }\nlabel_3:\n        free (rbp);\n        if (ebx != 0) {\n            goto label_11;\n        }\nlabel_5:\n        eax = ebx;\n        return eax;\nlabel_8:\n    } while ((al & 4) != 0);\n    edi = *((rbp + 0x28));\n    eax = fchdir ();\n    if (eax != 0) {\n        goto label_12;\n    }\n    eax = close (*((rbp + 0x28)));\n    if (eax == 0) {\n        goto label_1;\n    }\n    rax = errno_location ();\n    r12 = rax;\n    goto label_13;\nlabel_9:\n    eax = close (rdi);\n    if (eax == 0) {\n        goto label_1;\n    }\n    rax = errno_location ();\n    ebx = *(rax);\n    goto label_2;\nlabel_10:\n    free (rdi);\n    goto label_3;\nlabel_12:\n    rax = errno_location ();\n    r12 = rax;\n    ebx = *(rax);\n    eax = close (*((rbp + 0x28)));\n    if (eax == 0) {\n        goto label_2;\n    }\n    if (ebx != 0) {\n        goto label_2;\n    }\nlabel_13:\n    ebx = *(r12);\n    goto label_2;\nlabel_7:\n    rbx = rdi;\n    goto label_4;\nlabel_11:\n    errno_location ();\n    *(rax) = ebx;\n    ebx = 0xffffffff;\n    goto label_5;\n}\n"
        },
        {
            "funcName": "fts_read",
            "funcStartAddr": "0x412040",
            "funcEndAddr": "0x421a1d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x412040 */\n#include <stdint.h>\n \nuint64_t fts_read (uint32_t arg_1h, int64_t arg_8h, int64_t arg_10h, int64_t arg_30h, int64_t arg_40h, int64_t fildes, uint32_t arg_68h, uint32_t arg_70h, int64_t arg_72h, int64_t arg_74h, uint32_t arg_78h, int64_t arg1) {\n    rdi = arg1;\nlabel_0:\n    abort ();\n    rbp = *(rdi);\n    if (rbp == 0) {\n        goto label_5;\n    }\n    edx = *((rdi + 0x48));\n    if ((dh & 0x40) != 0) {\n        goto label_5;\n    }\n    eax = *((rbp + 0x74));\n    ebx = 3;\n    r12 = rdi;\n    *((rbp + 0x74)) = bx;\n    if (ax == 1) {\n        goto label_26;\n    }\n    ecx = *((rbp + 0x70));\n    if (ax == 2) {\n        goto label_27;\n    }\n    if (cx != 1) {\n        goto label_1;\n    }\n    goto label_28;\n    do {\n        *(r12) = rbx;\n        free (rbp);\n        if (*((rbx + 0x58)) == 0) {\n            goto label_29;\n        }\n        eax = *((rbx + 0x74));\n        if (ax != 4) {\n            goto label_30;\n        }\nlabel_1:\n        rbx = *((rbp + 0x10));\n    } while (rbx != 0);\n    rbx = *((rbp + 8));\n    if (*((rbx + 0x18)) != 0) {\n        goto label_31;\n    }\nlabel_14:\n    *(r12) = rbx;\n    free (rbp);\n    if (*((rbx + 0x58)) == -1) {\n        goto label_32;\n    }\n    if (*((rbx + 0x70)) == 0xb) {\n        goto label_0;\n    }\n    rdx = *((r12 + 0x20));\n    rax = *((rbx + 0x48));\n    *((rdx + rax)) = 0;\n    if (*((rbx + 0x58)) == 0) {\n        goto label_33;\n    }\n    eax = *((rbx + 0x72));\n    if ((al & 2) != 0) {\n        goto label_34;\n    }\n    if ((al & 1) == 0) {\n        goto label_35;\n    }\nlabel_6:\n    edi = *((r12 + 0x48));\n    if (*((rbx + 0x70)) != 2) {\nlabel_10:\n        ecx = *((rbx + 0x40));\n        if (ecx != 0) {\n            goto label_36;\n        }\n        edx = 6;\n        *((rbx + 0x70)) = dx;\n        rax = fcn_004110c0 (rdi, r12 + 0x58, rbx);\n        edi = *((r12 + 0x48));\n    }\nlabel_9:\n    edi &= 0x4000;\n    if (edi == 0) {\n        goto label_13;\n    }\nlabel_5:\n    ebp = 0;\nlabel_3:\n    rax = rbp;\n    return rax;\nlabel_27:\n    eax = rcx - 0xc;\n    if (ax <= 1) {\n        goto label_37;\n    }\n    if (cx != 1) {\n        goto label_1;\n    }\nlabel_2:\n    if ((dl & 0x40) != 0) {\n        rax = *((r12 + 0x18));\n        if (*((rbp + 0x78)) != rax) {\n            goto label_38;\n        }\n    }\n    rdi = *((r12 + 8));\n    if (rdi == 0) {\n        goto label_39;\n    }\n    if ((dh & 0x20) != 0) {\n        goto label_40;\n    }\n    eax = fcn_00410e40 (r12, rbp, 0xffffffff, *((rbp + 0x30)));\n    if (eax == 0) {\n        goto label_41;\n    }\n    rax = errno_location ();\n    rbx = *((r12 + 8));\n    eax = *(rax);\n    *((rbp + 0x72)) |= 1;\n    *((rbp + 0x40)) = eax;\n    if (rbx == 0) {\n        goto label_4;\n    }\n    rax = rbx;\n    do {\n        rdx = *((rax + 8));\n        rdx = *((rdx + 0x30));\n        *((rax + 0x30)) = rdx;\n        rax = *((rax + 0x10));\n    } while (rax != 0);\nlabel_4:\n    *((r12 + 8)) = 0;\n    goto label_17;\nlabel_28:\n    if (ax != 4) {\n        goto label_2;\n    }\nlabel_38:\n    if ((*((rbp + 0x72)) & 2) != 0) {\n        goto label_42;\n    }\nlabel_16:\n    rdi = *((r12 + 8));\n    if (rdi != 0) {\n        fcn_00410a30 (rdi);\n        *((r12 + 8)) = 0;\n    }\n    r10d = 6;\n    *((rbp + 0x70)) = r10w;\n    fcn_004110c0 (*((r12 + 0x48)), r12 + 0x58, rbp);\n    goto label_3;\nlabel_29:\n    eax = fcn_00410cc0 (r12);\n    if (eax != 0) {\n        goto label_43;\n    }\n    rdi = *((r12 + 0x58));\n    if ((*((r12 + 0x48)) & 0x102) == 0) {\n        goto label_44;\n    }\n    if (rdi != 0) {\n        fcn_0040bb00 (rdi);\n    }\nlabel_15:\n    rbp = rbx + 0x108;\n    *((rbx + 0x48)) = rdx;\n    rdx++;\n    memmove (*((r12 + 0x20)), rbp, *((rbx + 0x60)));\n    rax = strrchr (rbp, 0x2f);\n    if (rax != 0) {\n        if (rbp == rax) {\n            goto label_45;\n        }\nlabel_8:\n        r13 = rax + 1;\n        rax = strlen (r13);\n        r14 = rax;\n        memmove (rbp, r13, rax + 1);\n        *((rbx + 0x60)) = r14;\n    }\nlabel_7:\n    rax = *((r12 + 0x20));\n    *((rbx + 0x38)) = rax;\n    *((rbx + 0x30)) = rax;\n    fcn_00410d90 (*((r12 + 0x48)), r12 + 0x58);\n    eax = *((rbx + 0x70));\n    goto label_24;\nlabel_30:\n    if (ax == 2) {\n        goto label_46;\n    }\nlabel_17:\n    rcx = *((rbx + 8));\n    rdx = *((rcx + 0x48));\n    rcx = *((rcx + 0x38));\n    rax = rdx - 1;\n    if (*((rcx + rdx - 1)) != 0x2f) {\n        rax = rdx;\n    }\n    rax += *((r12 + 0x20));\n    *(rax) = 0x2f;\n    rsi = *((rbx + 0x60));\n    memmove (rax + 1, rbx + 0x108, rsi + 1);\n    eax = *((rbx + 0x70));\nlabel_24:\n    *(r12) = rbx;\n    if (ax == 0xb) {\n        goto label_47;\n    }\nlabel_11:\n    if (ax != 1) {\n        goto label_3;\n    }\nlabel_20:\n    if (*((rbx + 0x58)) == 0) {\nlabel_22:\n        rax = *((rbx + 0x78));\n        *((r12 + 0x18)) = rax;\n    }\nlabel_12:\n    rdx = rbx;\n    al = fcn_00411010 (*((r12 + 0x48)), r12 + 0x58, rdx);\n    if (al != 0) {\n        goto label_3;\n    }\n    errno_location ();\n    ebp = 0;\n    *(rax) = 0xc;\n    goto label_3;\nlabel_37:\n    edx = 1;\n    ax = fcn_004106f0 (rdi, rbp);\n    *((rbp + 0x70)) = ax;\n    if (ax == 1) {\n        goto label_48;\n    }\n    *(r12) = rbp;\n    if (ax != 0xb) {\n        goto label_3;\n    }\n    rbx = rbp;\nlabel_47:\n    rax = *((rbx + 0xa8));\n    if (rax == 2) {\n        goto label_49;\n    }\n    if (rax != 1) {\n        goto label_0;\n    }\nlabel_13:\n    rax = rbp;\n    return rax;\nlabel_26:\n    edx = 0;\n    ax = fcn_004106f0 (rdi, rbp);\n    *((rbp + 0x70)) = ax;\n    goto label_3;\nlabel_40:\n    dh &= 0xdf;\n    *((r12 + 0x48)) = edx;\n    fcn_00410a30 (rdi);\n    *((r12 + 8)) = 0;\nlabel_39:\n    rax = fcn_00411160 (r12, 3);\n    rbx = rax;\n    *((r12 + 8)) = rax;\n    if (rax != 0) {\n        goto label_4;\n    }\n    edi = *((r12 + 0x48));\n    if ((edi & 0x4000) != 0) {\n        goto label_5;\n    }\n    r9d = *((rbp + 0x40));\n    if (r9d != 0) {\n        if (*((rbp + 0x70)) == 4) {\n            goto label_50;\n        }\n        r8d = 7;\n        *((rbp + 0x70)) = r8w;\n    }\nlabel_50:\n    fcn_004110c0 (rdi, r12 + 0x58, rbp);\n    goto label_3;\nlabel_34:\n    eax = *((r12 + 0x48));\n    edi = *((rbx + 0x44));\n    if ((al & 4) == 0) {\n        if ((ah & 2) == 0) {\n            goto label_51;\n        }\n        edx = 1;\n        fcn_00410c50 (r12, edi);\n    }\nlabel_19:\n    close (*((rbx + 0x44)));\n    goto label_6;\nlabel_41:\n    rbx = *((r12 + 8));\n    goto label_4;\nlabel_45:\n    if (*((rbp + 1)) == 0) {\n        goto label_7;\n    }\n    goto label_8;\nlabel_32:\n    ebp = 0;\n    free (rbx);\n    errno_location ();\n    *(rax) = 0;\n    *(r12) = 0;\n    goto label_3;\nlabel_36:\n    eax = 7;\n    *((rbx + 0x70)) = ax;\n    goto label_9;\nlabel_33:\n    eax = fcn_00410cc0 (r12);\n    if (eax == 0) {\n        goto label_6;\n    }\nlabel_18:\n    rax = errno_location ();\n    eax = *(rax);\n    *((rbx + 0x40)) = eax;\n    *((r12 + 0x48)) |= 0x4000;\n    if (*((rbx + 0x70)) == 2) {\n        goto label_5;\n    }\n    edi = *((r12 + 0x48));\n    goto label_10;\nlabel_49:\n    rbp = *((rbx + 8));\n    if (*((rbp + 0x68)) == 0) {\n        eax = *((r12 + 0x48));\n        eax &= 0x18;\n        if (eax == 0x18) {\n            goto label_52;\n        }\n    }\nlabel_23:\n    edx = 0;\n    ax = fcn_004106f0 (r12, rbx);\n    edx = *((rbx + 0x90));\n    *((rbx + 0x70)) = ax;\n    edx &= 0xf000;\n    if (edx != 0x4000) {\n        goto label_11;\n    }\n    if (*((rbx + 0x58)) == 0) {\n        goto label_53;\n    }\n    rcx = *((rbp + 0x68));\n    rdx = rcx - 1;\n    if (rdx <= 0xfffffffffffffffd) {\n        goto label_54;\n    }\nlabel_25:\n    if (ax == 1) {\n        goto label_12;\n    }\n    goto label_13;\nlabel_31:\n    rax = *((rbx + 0x48));\n    rdx = *((r12 + 0x20));\n    *(r12) = rbx;\n    *((rdx + rax)) = 0;\n    rax = fcn_00411160 (r12, 3);\n    rbx = rax;\n    if (rax != 0) {\n        goto label_55;\n    }\n    if ((*((r12 + 0x49)) & 0x40) != 0) {\n        goto label_5;\n    }\n    rbx = *((rbp + 8));\n    goto label_14;\nlabel_43:\n    *((r12 + 0x48)) |= 0x4000;\n    goto label_5;\nlabel_44:\n    free (rdi);\n    goto label_15;\nlabel_42:\n    close (*((rbp + 0x44)));\n    goto label_16;\nlabel_46:\n    edx = 1;\n    ax = fcn_004106f0 (r12, rbx);\n    *((rbx + 0x70)) = ax;\n    if (ax == 1) {\n        goto label_56;\n    }\nlabel_21:\n    esi = 3;\n    *((rbx + 0x74)) = si;\n    goto label_17;\nlabel_35:\n    eax = fcn_00410e40 (r12, *((rbx + 8)), 0xffffffff, 0x415fd6);\n    if (eax == 0) {\n        goto label_6;\n    }\n    goto label_18;\nlabel_55:\n    free (rbp);\n    goto label_17;\nlabel_51:\n    eax = fchdir ();\n    if (eax != 0) {\n        rax = errno_location ();\n        eax = *(rax);\n        *((rbx + 0x40)) = eax;\n        *((r12 + 0x48)) |= 0x4000;\n    }\n    edi = *((rbx + 0x44));\n    goto label_19;\nlabel_48:\n    esi = *((r12 + 0x48));\n    if ((sil & 4) == 0) {\n        goto label_57;\n    }\n    *(r12) = rbp;\n    rbx = rbp;\n    goto label_20;\nlabel_56:\n    esi = *((r12 + 0x48));\n    if ((sil & 4) != 0) {\n        goto label_21;\n    }\n    eax = fcn_00410df0 (*((r12 + 0x2c)), rsi, 0x415fd7);\n    *((rbx + 0x44)) = eax;\n    if (eax < 0) {\n        goto label_58;\n    }\n    *((rbx + 0x72)) |= 2;\n    goto label_21;\nlabel_53:\n    if (ax == 1) {\n        goto label_22;\n    }\n    goto label_13;\nlabel_52:\n    rdi = rbp;\n    eax = fcn_00410be0 ();\n    if (eax != 2) {\n        goto label_23;\n    }\n    eax = *((rbx + 0x70));\n    goto label_11;\nlabel_57:\n    eax = fcn_00410df0 (*((r12 + 0x2c)), rsi, 0x415fd7);\n    *((rbp + 0x44)) = eax;\n    if (eax >= 0) {\n        *((rbp + 0x72)) |= 2;\n        eax = *((rbp + 0x70));\n        rbx = rbp;\n        goto label_24;\nlabel_54:\n        *((rbp + 0x68)) = rdx;\n        goto label_25;\n    }\n    rax = errno_location ();\n    r11d = 7;\n    eax = *(rax);\n    *((rbp + 0x70)) = r11w;\n    *((rbp + 0x40)) = eax;\n    *(r12) = rbp;\n    goto label_3;\nlabel_58:\n    rax = errno_location ();\n    edi = 7;\n    eax = *(rax);\n    *((rbx + 0x70)) = di;\n    *((rbx + 0x40)) = eax;\n    goto label_21;\n}\n"
        },
        {
            "funcName": "fts_set",
            "funcStartAddr": "0x4127a0",
            "funcEndAddr": "0x4127c9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4127a0 */\n#include <stdint.h>\n \nint64_t fts_set (int64_t arg2, uint32_t arg3) {\n    rsi = arg2;\n    rdx = arg3;\n    if (edx <= 4) {\n        *((rsi + 0x74)) = dx;\n        eax = 0;\n        return eax;\n    }\n    errno_location ();\n    *(rax) = 0x16;\n    eax = 1;\n    return rax;\n}\n"
        },
        {
            "funcName": "fts_children",
            "funcStartAddr": "0x4127d0",
            "funcEndAddr": "0x41293d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4127d0 */\n#include <stdint.h>\n \nuint64_t fts_children (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rdi;\n    rax = errno_location ();\n    r13 = rax;\n    if ((ebp & 0xffffdfff) != 0) {\n        goto label_2;\n    }\n    r12 = *(rbx);\n    *(rax) = 0;\n    if ((*((rbx + 0x49)) & 0x40) != 0) {\n        goto label_3;\n    }\n    edx = *((r12 + 0x70));\n    if (dx == 9) {\n        goto label_4;\n    }\n    eax = 0;\n    if (dx != 1) {\n        goto label_1;\n    }\n    rdi = *((rbx + 8));\n    if (rdi != 0) {\n        fcn_00410a30 (rdi);\n    }\n    r14d = 1;\n    if (ebp == 0x2000) {\n        *((rbx + 0x48)) |= 0x2000;\n        r14d = 2;\n    }\n    if (*((r12 + 0x58)) == 0) {\n        rax = *((r12 + 0x30));\n        if (*(rax) == 0x2f) {\n            goto label_5;\n        }\n        esi = *((rbx + 0x48));\n        if ((sil & 4) == 0) {\n            goto label_6;\n        }\n    }\nlabel_5:\n    rax = fcn_00411160 (rbx, r14d);\n    *((rbx + 8)) = rax;\n    do {\nlabel_1:\n        return rax;\nlabel_6:\n        eax = fcn_00410df0 (*((rbx + 0x2c)), rsi, 0x415fd7);\n        if (eax < 0) {\n            goto label_7;\n        }\n        rax = fcn_00411160 (rbx, r14d);\n        *((rbx + 8)) = rax;\n        if ((*((rbx + 0x49)) & 2) != 0) {\n            goto label_8;\n        }\n        edi = ebp;\n        eax = fchdir ();\n        if (eax != 0) {\n            goto label_9;\n        }\n        close (ebp);\nlabel_0:\n        rax = *((rbx + 8));\n    } while (1);\nlabel_2:\n    *(rax) = 0x16;\n    eax = 0;\n    return rax;\nlabel_3:\n    eax = 0;\n    return rax;\nlabel_4:\n    rax = *((r12 + 0x10));\n    return rax;\nlabel_8:\n    edx = 1;\n    eax = fcn_00410c50 (rbx, ebp);\n    goto label_0;\nlabel_7:\n    *((rbx + 8)) = 0;\n    eax = 0;\n    goto label_1;\nlabel_9:\n    ebx = *(r13);\n    eax = close (ebp);\n    eax = 0;\n    *(r13) = ebx;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00412940",
            "funcStartAddr": "0x412940",
            "funcEndAddr": "0x412a1f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x412940 */\n#include <stdint.h>\n \nuint64_t fcn_00412940 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r11 = rdi + 8;\n    r12d = *((rsi + 0x2c));\n    ebp = *(rsi);\n    rbx = *((rsi + 0x30));\n    r9d = r12d;\n    r10d = ebp;\n    r8 = rbx;\nlabel_1:\n    if (r10d <= r8d) {\n        goto label_2;\n    }\nlabel_0:\n    if (r9d >= r8d) {\n        goto label_2;\n    }\n    r14d = r10d;\n    edx = r8d;\n    r14d -= r8d;\n    edx -= r9d;\n    if (r14d <= edx) {\n        goto label_3;\n    }\n    rcx = (int64_t) r9d;\n    r10d -= edx;\n    edx--;\n    rdx += rcx;\n    rax = rdi + rcx*8;\n    r13 = r11 + rdx*8;\n    rdx = (int64_t) r10d;\n    rdx -= rcx;\n    do {\n        rcx = *(rax);\n        r14 = *((rax + rdx*8));\n        *(rax) = r14;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (r13 != rax);\n    if (r10d > r8d) {\n        goto label_0;\n    }\nlabel_2:\n    eax = ebp;\n    *((rsi + 0x30)) = ebp;\n    eax -= r8d;\n    r12d += eax;\n    *((rsi + 0x2c)) = r12d;\n    r12 = rbx;\n    r13 = rbx;\n    r14 = rbx;\n    r15 = rbx;\n    return rax;\nlabel_3:\n    rdx = (int64_t) r9d;\n    ecx = r14 - 1;\n    rcx += rdx;\n    rax = rdi + rdx*8;\n    r13 = r11 + rcx*8;\n    rcx = rbx;\n    rcx -= rdx;\n    rdx = rcx;\n    do {\n        rcx = *(rax);\n        r15 = *((rax + rdx*8));\n        *(rax) = r15;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (rax != r13);\n    r9d += r14d;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00412a20",
            "funcStartAddr": "0x412a20",
            "funcEndAddr": "0x41303c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x412a20 */\n#include <stdint.h>\n \nint64_t fcn_00412a20 (int64_t arg_90h, int64_t arg_98h, int64_t arg_a0h, signed int64_t arg1, int64_t arg2, char * arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_ch;\n    int64_t var_10h;\n    void * ptr;\n    int64_t var_20h;\n    int64_t var_28h;\n    char * s;\n    int64_t var_38h;\n    int64_t c;\n    signed int64_t var_40h;\n    int64_t var_44h;\n    void * var_48h;\n    size_t nmeb;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rax = *((rsp + 0x90));\n    *((rsp + 0x40)) = edi;\n    *((rsp + 0x28)) = rsi;\n    r14 = *((rax + 0x20));\n    *((rsp + 0x30)) = rdx;\n    *(rsp) = rcx;\n    eax = *(r14);\n    *((rsp + 0x20)) = r8;\n    *((rsp + 0xc)) = r9d;\n    *((rsp + 0x3f)) = al;\n    if (al == 0x3d) {\n        goto label_11;\n    }\n    if (al == 0) {\n        goto label_11;\n    }\n    do {\n        rbp++;\n        eax = *(rbp);\n        if (al == 0) {\n            goto label_12;\n        }\n    } while (al != 0x3d);\nlabel_12:\n    r13 = rbp;\n    r13 -= r14;\nlabel_6:\n    rbx = *(rsp);\n    r12d = 0;\n    rax = *(rbx);\n    *((rsp + 0x10)) = rax;\n    r15 = rax;\n    if (rax != 0) {\n        goto label_13;\n    }\n    goto label_14;\n    do {\n        r12 = (int64_t) r8d;\nlabel_13:\n        eax = strncmp (r15, r14, r13);\n        if (eax == 0) {\n            rax = strlen (r15);\n            if (rax == r13) {\n                goto label_15;\n            }\n        }\n        rbx += 0x20;\n        r15 = *(rbx);\n        r8d = r12 + 1;\n    } while (r15 != 0);\n    rcx = *(rsp);\n    *((rsp + 0x4c)) = r8d;\n    r9d = 0;\n    ebx = 0;\n    *((rsp + 0x44)) = 0xffffffff;\n    r15 = r9;\n    *((rsp + 0x38)) = 0;\n    *((rsp + 0x48)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x10)) = rbp;\n    do {\n        eax = strncmp (*((rsp + 0x10)), r14, r13);\n        if (eax == 0) {\n            if (rbx == 0) {\n                goto label_16;\n            }\n            eax = *((rsp + 0xc));\n            if (eax == 0) {\n                goto label_17;\n            }\nlabel_0:\n            r11d = *((rsp + 0x38));\n            if (r11d != 0) {\n                goto label_1;\n            }\n            r10d = *((rsp + 0x98));\n            if (r10d == 0) {\n                goto label_18;\n            }\n            if (*((rsp + 0x18)) == 0) {\n                goto label_19;\n            }\nlabel_3:\n            rax = *((rsp + 0x18));\n            *((rax + r15)) = 1;\n        }\nlabel_1:\n        rbp += 0x20;\n        rdi = *(rbp);\n        r15++;\n    } while (rdi != 0);\n    rbp = *((rsp + 0x10));\n    if (*((rsp + 0x18)) != 0) {\n        goto label_20;\n    }\n    r9d = *((rsp + 0x38));\n    if (r9d != 0) {\n        goto label_20;\n    }\n    if (rbx == 0) {\nlabel_14:\n        eax = *((rsp + 0xc));\n        if (eax != 0) {\n            rax = *((rsp + 0x90));\n            rcx = *((rsp + 0x28));\n            rax = *(rax);\n            rax = *((rcx + rax*8));\n            if (*((rax + 1)) == 0x2d) {\n                goto label_21;\n            }\n            esi = *((rsp + 0x3f));\n            rax = strchr (*((rsp + 0x30)), rsi);\n            rdx = rax;\n            eax = 0xffffffff;\n            if (rdx != 0) {\n                goto label_5;\n            }\n        }\nlabel_21:\n        ecx = *((rsp + 0x98));\n        if (ecx != 0) {\n            goto label_22;\n        }\nlabel_4:\n        rax = *((rsp + 0x90));\n        *((rax + 0x20)) = 0;\n        *(rax)++;\n        *((rax + 8)) = 0;\n        eax = 0x3f;\n        return rax;\n    }\n    r12d = *((rsp + 0x44));\nlabel_15:\n    rax = *((rsp + 0x90));\n    rcx = *((rsp + 0x90));\n    edx = *(rax);\n    *((rcx + 0x20)) = 0;\n    eax = rdx + 1;\n    *(rcx) = eax;\n    ecx = *((rbx + 8));\n    if (*(rbp) != 0) {\n        goto label_23;\n    }\n    if (ecx == 1) {\n        goto label_24;\n    }\nlabel_2:\n    rax = *((rsp + 0x20));\n    if (rax != 0) {\n        *(rax) = r12d;\n    }\n    rdx = *((rbx + 0x10));\n    eax = *((rbx + 0x18));\n    if (rdx != 0) {\n        *(rdx) = eax;\n        eax = 0;\n    }\nlabel_5:\n    return rax;\nlabel_17:\n    eax = *((rbp + 8));\n    if (*((rbx + 8)) != eax) {\n        goto label_0;\n    }\n    rax = *((rbp + 0x10));\n    if (*((rbx + 0x10)) != rax) {\n        goto label_0;\n    }\n    eax = *((rbp + 0x18));\n    if (*((rbx + 0x18)) != eax) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_23:\n    if (ecx == 0) {\n        goto label_25;\n    }\n    rax = *((rsp + 0x90));\n    rbp++;\n    *((rax + 0x10)) = rbp;\n    goto label_2;\nlabel_16:\n    *((rsp + 0x44)) = r15d;\n    rbx = rbp;\n    goto label_1;\nlabel_18:\n    *((rsp + 0x38)) = 1;\n    if (*((rsp + 0x18)) == 0) {\n        goto label_1;\n    }\n    goto label_3;\nlabel_22:\n    rax = *((rsp + 0x28));\n    edx = 5;\n    rbx = *(rax);\n    rax = dcgettext (0, \"%s: unrecognized option '%s%s'\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r14;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbx;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_4;\nlabel_20:\n    r8d = *((rsp + 0x98));\n    if (r8d != 0) {\n        edi = *((rsp + 0x38));\n        if (edi == 0) {\n            goto label_26;\n        }\n        rax = *((rsp + 0x28));\n        edx = 5;\n        rbx = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' is ambiguous\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r14;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbx;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        rax = *((rsp + 0x90));\n        r14 = *((rax + 0x20));\n    }\nlabel_9:\n    esi = *((rsp + 0x48));\n    if (esi != 0) {\n        goto label_27;\n    }\nlabel_7:\n    rax = strlen (r14);\n    r14 += rax;\n    rax = *((rsp + 0x90));\n    *((rax + 0x20)) = r14;\n    *(rax)++;\n    *((rax + 8)) = 0;\n    eax = 0x3f;\n    goto label_5;\nlabel_24:\n    if (eax >= *((rsp + 0x40))) {\n        goto label_28;\n    }\n    rcx = *((rsp + 0x90));\n    edx += 2;\n    rax = (int64_t) eax;\n    *(rcx) = edx;\n    rcx = *((rsp + 0x28));\n    rax = *((rcx + rax*8));\n    rcx = *((rsp + 0x90));\n    *((rcx + 0x10)) = rax;\n    goto label_2;\nlabel_11:\n    r13d = 0;\n    goto label_6;\nlabel_25:\n    edx = *((rsp + 0x98));\n    while (1) {\n        eax = *((rbx + 0x18));\n        rcx = *((rsp + 0x90));\n        *((rcx + 8)) = eax;\n        eax = 0x3f;\n        goto label_5;\nlabel_19:\n        rdi = *((rsp + 0x4c));\n        rax = calloc (rdi, 1);\n        *((rsp + 0x18)) = rax;\n        if (rax == 0) {\n            goto label_29;\n        }\n        rax = *((rsp + 0x44));\n        rcx = *((rsp + 0x18));\n        *((rsp + 0x48)) = 1;\n        *((rcx + rax)) = 1;\n        goto label_3;\n        rax = *((rsp + 0x28));\n        r12 = *(rbx);\n        edx = 5;\n        rbp = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' doesn't allow an argument\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r12;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_27:\n    free (*((rsp + 0x18)));\n    goto label_7;\nlabel_28:\n    eax = *((rsp + 0x98));\n    if (eax != 0) {\n        goto label_30;\n    }\nlabel_10:\n    eax = *((rbx + 0x18));\n    rcx = *((rsp + 0x90));\n    *((rcx + 8)) = eax;\n    rax = *((rsp + 0x30));\n    al = (*(rax) != 0x3a) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = rax * 5;\n    goto label_5;\nlabel_26:\n    rdi = stderr;\n    flockfile ();\n    rax = *((rsp + 0x90));\n    edx = 5;\n    rbx = *((rax + 0x20));\n    rax = *((rsp + 0x28));\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' is ambiguous; possibilities:\");\n    rdi = stderr;\n    r9 = rbx;\n    r8 = *((rsp + 0xa0));\n    rcx = rbp;\n    rdx = rax;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    rax = *((rsp + 0x18));\n    rdi = stderr;\n    rbx = *(rsp);\n    r12 = rax + r12 + 1;\n    while (*(rbp) == 0) {\nlabel_8:\n        rbp++;\n        rbx += 0x20;\n        if (r12 == rbp) {\n            goto label_31;\n        }\n    }\n    r8 = *(rbx);\n    edx = \" '%s%s';\n    esi = 1;\n    eax = 0;\n    rcx = *((rsp + 0xa0));\n    fprintf_chk ();\n    rdi = stderr;\n    goto label_8;\nlabel_31:\n    fputc (0xa, rdi);\n    rdi = stderr;\n    funlockfile ();\n    rax = *((rsp + 0x90));\n    r14 = *((rax + 0x20));\n    goto label_9;\nlabel_30:\n    rax = *((rsp + 0x28));\n    r12 = *(rbx);\n    edx = 5;\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' requires an argument\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r12;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbp;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_10;\nlabel_29:\n    *((rsp + 0x38)) = 1;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00413040",
            "funcStartAddr": "0x413040",
            "funcEndAddr": "0x413606",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x413040 */\n#include <stdint.h>\n \nuint64_t fcn_00413040 (int64_t arg_70h, int64_t arg_78h, int64_t arg1, int64_t arg2, int64_t arg3, uint32_t arg4, int64_t arg5, int64_t arg6) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_1ch;\n    int64_t var_20h;\n    int64_t var_28h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rbx = *((rsp + 0x70));\n    *((rsp + 8)) = rcx;\n    *((rsp + 0x10)) = r8;\n    r13d = *((rbx + 4));\n    if (edi <= 0) {\n        goto label_16;\n    }\n    eax = *(rbx);\n    r12 = rsi;\n    r15 = rdx;\n    *((rbx + 0x10)) = 0;\n    if (eax == 0) {\n        goto label_17;\n    }\n    esi = *((rbx + 0x18));\n    if (esi == 0) {\nlabel_1:\n        *((rbx + 0x30)) = eax;\n        *((rbx + 0x2c)) = eax;\n        *((rbx + 0x20)) = 0;\n        eax = *(r15);\n        if (al == 0x2d) {\n            goto label_18;\n        }\n        if (al == 0x2b) {\n            goto label_19;\n        }\n        ecx = *((rsp + 0x78));\n        edx = 0;\n        if (ecx == 0) {\n            goto label_20;\n        }\nlabel_8:\n        *((rbx + 0x28)) = 0;\n        goto label_11;\n    }\n    eax = *(rdx);\n    rdx = *((rbx + 0x20));\n    ecx = rax - 0x2b;\n    ecx &= 0xfd;\n    if (ecx != 0) {\n        goto label_21;\n    }\n    eax = *((r15 + 1));\n    r15++;\n    eax = 0;\n    if (al == 0x3a) {\n        r13d = eax;\n    }\n    if (rdx != 0) {\n        goto label_22;\n    }\n    do {\nlabel_0:\n        eax = *(rbx);\n        if (*((rbx + 0x30)) > eax) {\n            *((rbx + 0x30)) = eax;\n        }\n        if (eax < *((rbx + 0x2c))) {\n            *((rbx + 0x2c)) = eax;\n        }\n        if (*((rbx + 0x28)) == 1) {\n            goto label_23;\n        }\nlabel_4:\n        if (ebp == eax) {\n            goto label_24;\n        }\n        rdx = (int64_t) eax;\n        ecx = 3;\n        edi = 0x4182b9;\n        r14 = *((r12 + rdx*8));\n        rsi = *((r12 + rdx*8));\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (ebp > eax) ? 1 : 0;\n        if (cl != 0) {\n            goto label_25;\n        }\n        edx = *((rbx + 0x2c));\n        ecx = *((rbx + 0x30));\n        eax++;\n        *(rbx) = eax;\n        if (edx == ecx) {\n            goto label_26;\n        }\n        if (eax != ecx) {\n            fcn_00412940 (r12, rbx);\n            edx = *((rbx + 0x2c));\n        }\nlabel_12:\n        *((rbx + 0x30)) = ebp;\n        *(rbx) = ebp;\n        goto label_27;\nlabel_18:\n        *((rbx + 0x28)) = 2;\n        r15++;\n        edx = 0;\nlabel_11:\n        *((rbx + 0x18)) = 1;\n        eax = *(r15);\nlabel_21:\n        eax = 0;\n        if (al == 0x3a) {\n            r13d = eax;\n        }\n    } while (rdx == 0);\nlabel_22:\n    if (*(rdx) == 0) {\n        goto label_0;\n    }\nlabel_6:\n    r8 = rdx + 1;\n    *((rsp + 0x20)) = rdx;\n    *((rbx + 0x20)) = r8;\n    r14d = *(rdx);\n    *((rsp + 0x28)) = r8;\n    *((rsp + 0x1c)) = r14b;\n    rax = strchr (r15, r14d);\n    rdx = *((rsp + 0x20));\n    ecx = *((rsp + 0x1c));\n    r8 = *((rsp + 0x28));\n    if (*((rdx + 1)) == 0) {\n        *(rbx)++;\n    }\n    ecx -= 0x3a;\n    if (cl <= 1) {\n        goto label_28;\n    }\n    if (rax == 0) {\n        goto label_28;\n    }\n    ecx = *((rax + 1));\n    if (*(rax) == 0x57) {\n        goto label_29;\n    }\nlabel_7:\n    if (cl == 0x3a) {\n        goto label_30;\n    }\n    do {\nlabel_2:\n        eax = r14d;\n        return rax;\nlabel_25:\n        if (*(r14) == 0x2d) {\n            goto label_31;\n        }\nlabel_5:\n        edx = *((rbx + 0x28));\n        if (edx == 0) {\n            goto label_16;\n        }\n        eax++;\n        *((rbx + 0x10)) = r14;\n        r14d = 1;\n        *(rbx) = eax;\n    } while (1);\nlabel_17:\n    *(rbx) = 1;\n    eax = 1;\n    goto label_1;\nlabel_24:\n    ebp = *((rbx + 0x30));\n    edx = *((rbx + 0x2c));\nlabel_27:\n    if (edx != ebp) {\n        *(rbx) = edx;\n    }\nlabel_16:\n    r14d = 0xffffffff;\n    goto label_2;\nlabel_23:\n    edx = *((rbx + 0x30));\n    if (*((rbx + 0x2c)) == edx) {\n        goto label_32;\n    }\n    if (eax != edx) {\n        *((rsp + 0x1c)) = r9d;\n        fcn_00412940 (r12, rbx);\n        edx = *(rbx);\n        r9d = *((rsp + 0x1c));\n    }\nlabel_9:\n    if (ebp <= edx) {\n        goto label_33;\n    }\n    rax = (int64_t) edx;\n    while (*(rcx) != 0x2d) {\nlabel_3:\n        edx = rsi + 1;\n        rax++;\n        *(rbx) = edx;\n        if (ebp <= eax) {\n            goto label_33;\n        }\n        rcx = *((r12 + rax*8));\n        esi = eax;\n        edx = eax;\n    }\n    if (*((rcx + 1)) == 0) {\n        goto label_3;\n    }\n    eax = *(rbx);\nlabel_10:\n    *((rbx + 0x30)) = edx;\n    goto label_4;\nlabel_31:\n    ecx = *((r14 + 1));\n    if (cl == 0) {\n        goto label_5;\n    }\n    if (*((rsp + 8)) == 0) {\n        goto label_34;\n    }\n    if (cl == 0x2d) {\n        goto label_35;\n    }\n    if (r9d == 0) {\n        goto label_34;\n    }\n    if (*((r14 + 2)) == 0) {\n        esi = (int32_t) cl;\n        *((rsp + 0x1c)) = r9d;\n        rax = strchr (r15, rsi);\n        r9d = *((rsp + 0x1c));\n        if (rax != 0) {\n            goto label_34;\n        }\n    }\n    rdx = r14 + 1;\n    *((rbx + 0x20)) = rdx;\n    eax = fcn_00412a20 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), r9);\n    r14d = eax;\n    if (eax != 0xffffffff) {\n        goto label_2;\n    }\n    rax = *(rbx);\n    r14 = *((r12 + rax*8));\nlabel_34:\n    rdx = r14 + 1;\n    goto label_6;\nlabel_29:\n    if (*((rsp + 8)) == 0) {\n        goto label_7;\n    }\n    if (cl != 0x3b) {\n        goto label_7;\n    }\n    if (*((rdx + 1)) == 0) {\n        rax = *(rbx);\n        if (eax == ebp) {\n            goto label_36;\n        }\n        r8 = *((r12 + rax*8));\n    }\n    *((rbx + 0x20)) = r8;\n    *((rbx + 0x10)) = 0;\nlabel_14:\n    eax = fcn_00412a20 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), 0);\n    r14d = eax;\n    goto label_2;\nlabel_20:\n    *((rsp + 0x1c)) = r9d;\n    rax = getenv (\"POSIXLY_CORRECT\");\n    r9d = *((rsp + 0x1c));\n    if (rax == 0) {\n        goto label_37;\n    }\n    rdx = *((rbx + 0x20));\n    goto label_8;\nlabel_30:\n    edx = *((rdx + 1));\n    if (*((rax + 2)) == 0x3a) {\n        goto label_38;\n    }\n    rax = *(rbx);\n    if (dl != 0) {\n        goto label_39;\n    }\n    if (ebp == eax) {\n        goto label_40;\n    }\n    edx = rax + 1;\n    rax = *((r12 + rax*8));\n    *(rbx) = edx;\n    *((rbx + 0x10)) = rax;\nlabel_13:\n    *((rbx + 0x20)) = 0;\n    goto label_2;\nlabel_32:\n    if (eax == edx) {\n        goto label_9;\n    }\n    *((rbx + 0x2c)) = eax;\n    edx = eax;\n    goto label_9;\nlabel_33:\n    eax = edx;\n    goto label_10;\nlabel_19:\n    *((rbx + 0x28)) = 0;\n    r15++;\n    edx = 0;\n    goto label_11;\nlabel_28:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0x3f;\n        goto label_2;\nlabel_26:\n        *((rbx + 0x2c)) = eax;\n        edx = eax;\n        goto label_12;\nlabel_39:\n        eax++;\n        *((rbx + 0x10)) = r8;\n        *(rbx) = eax;\n        goto label_13;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: invalid option -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_38:\n    if (dl != 0) {\n        *((rbx + 0x10)) = r8;\n        *(rbx)++;\n        goto label_13;\nlabel_37:\n        *((rbx + 0x28)) = 1;\n        rdx = *((rbx + 0x20));\n        goto label_11;\n    }\n    *((rbx + 0x10)) = 0;\n    goto label_13;\nlabel_40:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_13;\nlabel_35:\n        rdx = r14 + 2;\n        *((rbx + 0x20)) = rdx;\n        goto label_14;\nlabel_36:\n        if (r13d != 0) {\n            goto label_41;\n        }\nlabel_15:\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_2;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_41:\n    rbp = *(r12);\n    edx = 5;\n    rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n    rdi = stderr;\n    r8d = r14d;\n    esi = 1;\n    rdx = rax;\n    rcx = rbp;\n    eax = 0;\n    fprintf_chk ();\n    goto label_15;\n}\n"
        },
        {
            "funcName": "fcn_00413610",
            "funcStartAddr": "0x413610",
            "funcEndAddr": "0x413666",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x413610 */\n#include <stdint.h>\n \nint32_t fcn_00413610 (int64_t arg_10h) {\n    eax = *(0x0061d47c);\n    *(0x0061dac0) = eax;\n    eax = *(0x0061d478);\n    *(0x0061dac4) = eax;\n    eax = *((rsp + 0x10));\n    fcn_00413040 (rdi, rsi, rdx, rcx, r8, r9);\n    edx = imp.__libc_start_main;\n    *(0x0061d47c) = edx;\n    rdx = imp.__libc_start_main;\n    *(0x0061db00) = rdx;\n    edx = imp.__libc_start_main;\n    *(0x0061d474) = edx;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00413690",
            "funcStartAddr": "0x413690",
            "funcEndAddr": "0x4136a3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x413690 */\n#include <stdint.h>\n \nvoid fcn_00413690 (void) {\n    r9d = 0;\n    fcn_00413610 (rdi);\n}\n"
        },
        {
            "funcName": "fcn_00413710",
            "funcStartAddr": "0x413710",
            "funcEndAddr": "0x41378a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x413710 */\n#include <stdint.h>\n \nuint64_t fcn_00413710 (wint_t arg1, int64_t arg2, size_t * arg3, mbstate_t * ps) {\n    int64_t var_ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = ps;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    rbx = 0xfffffffffffffffe;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r12 = rdi;\n    while (1) {\n        rax = mbrtowc (r12, rbp, rdx, rcx);\n        rbx = rax;\n        if (rax > 0xfffffffffffffffd) {\n            goto label_2;\n        }\nlabel_0:\n        rax = rbx;\n        return rax;\nlabel_1:\n        edx = 1;\n        r12 = rsp + 0xc;\n    }\nlabel_2:\n    al = fcn_00413cb0 (0);\n    if (al != 0) {\n        goto label_0;\n    }\n    eax = *(rbp);\n    ebx = 1;\n    *(r12) = eax;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00413790",
            "funcStartAddr": "0x413790",
            "funcEndAddr": "0x413795",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x413790 */\n#include <stdint.h>\n \nint32_t fcn_00413790 (int64_t arg3, int64_t arg4) {\n    rdx = arg3;\n    rcx = arg4;\n    *(rcx) = edx;\n    eax = 0;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_004137a0",
            "funcStartAddr": "0x4137a0",
            "funcEndAddr": "0x4137b5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4137a0 */\n#include <stdint.h>\n \nint32_t fcn_004137a0 (int64_t arg2, int64_t arg3) {\n    rsi = arg2;\n    rdx = arg3;\n    eax = esi;\n    esi = edx;\n    if (eax != 0xffffffff) {\n        edi = eax;\n        void (*0x402bc0)() ();\n    }\n    return chmod ();\n}\n"
        },
        {
            "funcName": "fcn_004137c0",
            "funcStartAddr": "0x4137c0",
            "funcEndAddr": "0x4137e2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4137c0 */\n#include <stdint.h>\n \nint64_t fcn_004137c0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rax = rsi;\n    edx = *(rdi);\n    eax = fcn_004137a0 (rax, edx);\n    al = (eax != 0) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = -eax;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00413800",
            "funcStartAddr": "0x413800",
            "funcEndAddr": "0x413916",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x413800 */\n#include <stdint.h>\n \nuint64_t fcn_00413800 (char * arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    char * s2;\n    uint32_t var_17h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r15 = rsi;\n    r13 = rcx;\n    *((rsp + 8)) = rdi;\n    *((rsp + 0x18)) = rdx;\n    rax = strlen (rdi);\n    r14 = *(r15);\n    *(rsp) = 0xffffffffffffffff;\n    if (r14 == 0) {\n        goto label_3;\n    }\n    r12 = rax;\n    *((rsp + 0x17)) = 0;\n    ebx = 0;\n    goto label_1;\nlabel_0:\n    rax = *((rsp + 0x18));\n    if (rax == 0) {\n        goto label_4;\n    }\n    rdi *= r13;\n    rdi += rax;\n    eax = memcmp (*(rsp), rbp, r13);\n    ecx = 1;\n    eax = *((rsp + 0x17));\n    if (eax != 0) {\n        eax = ecx;\n    }\n    *((rsp + 0x17)) = al;\n    do {\nlabel_2:\n        rbx++;\n        rbp += r13;\n        r14 = *((r15 + rbx*8));\n        if (r14 == 0) {\n            goto label_5;\n        }\nlabel_1:\n        eax = strncmp (r14, *((rsp + 8)), r12);\n    } while (eax != 0);\n    rax = strlen (r14);\n    if (rax == r12) {\n        goto label_6;\n    }\n    if (*(rsp) != -1) {\n        goto label_0;\n    }\n    *(rsp) = rbx;\n    rbx++;\n    rbp += r13;\n    r14 = *((r15 + rbx*8));\n    if (r14 != 0) {\n        goto label_1;\n    }\nlabel_5:\n    rax = 0xfffffffffffffffe;\n    if (*((rsp + 0x17)) == 0) {\n        rax = *(rsp);\n    }\n    *(rsp) = rax;\n    do {\nlabel_3:\n        rax = *(rsp);\n        return rax;\nlabel_4:\n        *((rsp + 0x17)) = 1;\n        goto label_2;\nlabel_6:\n        *(rsp) = rbx;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00413920",
            "funcStartAddr": "0x413920",
            "funcEndAddr": "0x413991",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x413920 */\n#include <stdint.h>\n \nuint64_t fcn_00413920 (int64_t arg1, int64_t arg2, uint32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    edx = 5;\n    r12 = rsi;\n    if (rdx == -1) {\n        goto label_0;\n    }\n    rax = dcgettext (0, \"ambiguous argument %s for %s\");\n    rbx = rax;\n    do {\n        rax = fcn_0040dfb0 (1, rbp);\n        rax = fcn_0040dca0 (0, 8, r12);\n        r8 = rbp;\n        rdx = rbx;\n        esi = 0;\n        rcx = rax;\n        edi = 0;\n        eax = 0;\n        void (*0x402c10)() ();\nlabel_0:\n        rax = dcgettext (0, \"invalid argument %s for %s\");\n        rbx = rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_004139a0",
            "funcStartAddr": "0x4139a0",
            "funcEndAddr": "0x413ab8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x4139a0 */\n#include <stdint.h>\n \nuint64_t fcn_004139a0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r15 = rdi;\n    r14d = 0;\n    r13 = rdx;\n    edx = 5;\n    rbx = stderr;\n    rax = dcgettext (0, \"Valid arguments are:\");\n    rdi = rax;\n    rsi = rbx;\n    ebx = 0;\n    fputs_unlocked ();\n    r12 = *(r15);\n    if (r12 != 0) {\n        goto label_1;\n    }\n    goto label_2;\n    do {\nlabel_0:\n        rbx++;\n        r14 = rbp;\n        rbp += r13;\n        rax = fcn_0040dfd0 (r12);\n        edx = \"\\n  - %s\";\n        esi = 1;\n        rdi = stderr;\n        rcx = rax;\n        eax = 0;\n        fprintf_chk ();\n        r12 = *((r15 + rbx*8));\n        if (r12 == 0) {\n            goto label_2;\n        }\nlabel_1:\n    } while (rbx == 0);\n    eax = memcmp (r14, rbp, r13);\n    if (eax != 0) {\n        goto label_0;\n    }\n    rbx++;\n    rbp += r13;\n    rax = fcn_0040dfd0 (r12);\n    edx = \", %s\";\n    esi = 1;\n    rdi = stderr;\n    rcx = rax;\n    eax = 0;\n    fprintf_chk ();\n    r12 = *((r15 + rbx*8));\n    if (r12 != 0) {\n        goto label_1;\n    }\nlabel_2:\n    rdi = stderr;\n    rax = *((rdi + 0x28));\n    if (rax < *((rdi + 0x30))) {\n        rdx = rax + 1;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = 0xa;\n        return rax;\n    }\n    esi = 0xa;\n    return overflow ();\n}\n"
        },
        {
            "funcName": "fcn_00413ac0",
            "funcStartAddr": "0x413ac0",
            "funcEndAddr": "0x413b30",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x413ac0 */\n#include <stdint.h>\n \nuint64_t fcn_00413ac0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r15 = r8;\n    r14 = rdi;\n    r13 = r9;\n    r12 = rsi;\n    rbx = rdx;\n    rax = fcn_00413800 (r12, rbx, rbp, r8);\n    while (1) {\n        return rax;\n        fcn_00413920 (r14, r12, rax);\n        fcn_004139a0 (rbx, rbp, r15);\n        void (*r13)() ();\n        rax = 0xffffffffffffffff;\n    }\n}\n"
        },
        {
            "funcName": "fcn_00413b80",
            "funcStartAddr": "0x413b80",
            "funcEndAddr": "0x413bdd",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x413b80 */\n#include <stdint.h>\n \nuint64_t fcn_00413b80 (int64_t arg1) {\n    rdi = arg1;\n    rax = fpending ();\n    ebx = *(rbp);\n    r12 = rax;\n    ebx &= 0x20;\n    eax = fcn_00414fe0 (rbp);\n    if (ebx != 0) {\n        goto label_1;\n    }\n    if (eax == 0) {\n        goto label_0;\n    }\n    if (r12 != 0) {\n        goto label_2;\n    }\n    rax = errno_location ();\n    al = (*(rax) != 9) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = -eax;\n    do {\nlabel_0:\n        return rax;\nlabel_1:\n        if (eax != 0) {\n            goto label_2;\n        }\n        errno_location ();\n        *(rax) = 0;\n        eax = 0xffffffff;\n    } while (1);\nlabel_2:\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00413be0",
            "funcStartAddr": "0x413be0",
            "funcEndAddr": "0x413bf0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x413be0 */\n#include <stdint.h>\n \nvoid fcn_00413be0 (int64_t arg1) {\n    rdi = arg1;\n    *((rdi + 0x10)) = 0;\n    *((rdi + 0x18)) = 0x95f616;\n}\n"
        },
        {
            "funcName": "fcn_00413bf0",
            "funcStartAddr": "0x413bf0",
            "funcEndAddr": "0x413c6c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x413bf0 */\n#include <stdint.h>\n \nint64_t fcn_00413bf0 (uint32_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    if (*((rdi + 0x18)) != 0x95f616) {\n        goto label_1;\n    }\n    rax = *((rdi + 0x10));\n    rdx = *((rsi + 8));\n    if (rax == 0) {\n        goto label_2;\n    }\n    while (*(rsi) != rcx) {\n        rcx = rax + 1;\n        *((rdi + 0x10)) = rcx;\n        if ((rax & rcx) == 0) {\n            goto label_3;\n        }\n        eax = 0;\n        return rax;\nlabel_2:\n        *((rdi + 0x10)) = 1;\nlabel_0:\n        rax = *(rsi);\n        *(rdi) = rdx;\n        *((rdi + 8)) = rax;\n        eax = 0;\n        return rax;\n        rcx = *((rdi + 8));\n    }\n    eax = 1;\n    return rax;\nlabel_3:\n    if (rcx != 0) {\n        goto label_0;\n    }\n    eax = 1;\n    return rax;\nlabel_1:\n    return assert_fail (\"state->magic == 9827862\", \"lib/cycle-check.c\", 0x3c, \"cycle_check\");\n}\n"
        },
        {
            "funcName": "fcn_00413c70",
            "funcStartAddr": "0x413c70",
            "funcEndAddr": "0x413caa",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x413c70 */\n#include <stdint.h>\n \nuint64_t fcn_00413c70 (int64_t arg1) {\n    signed int64_t var_8h;\n    rdi = arg1;\n    rsi = rdi;\n    rbx = rdi;\n    edi = 0;\n    eax = clock_gettime ();\n    if (eax != 0) {\n        esi = 0;\n        rdi = rsp;\n        gettimeofday ();\n        rax = *(rsp);\n        *(rbx) = rax;\n        rax = *((rsp + 8)) * 0x3e8;\n        *((rbx + 8)) = rax;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00413cb0",
            "funcStartAddr": "0x413cb0",
            "funcEndAddr": "0x413d0e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x413cb0 */\n#include <stdint.h>\n \nuint64_t fcn_00413cb0 (int32_t category) {\n    rdi = category;\n    rax = setlocale (rdi, 0);\n    rdx = rax;\n    eax = 1;\n    if (rdx != 0) {\n        ecx = 2;\n        edi = 0x41836c;\n        rsi = rdx;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (rdx > 0) ? 1 : 0;\n        eax = 0;\n        if (cl != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    edi = \"POSIX\";\n    ecx = 6;\n    rsi = rdx;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (cl > 0) ? 1 : 0;\n    al = (al != 0) ? 1 : 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00413d10",
            "funcStartAddr": "0x413d10",
            "funcEndAddr": "0x413d46",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x413d10 */\n#include <stdint.h>\n \nuint64_t rotate_left64 (uint64_t value, uint32_t count) {\n    const uint64_t mask = (CHAR_BIT * sizeof (value)) - 1;\n    count &= mask;\n    return (value << count) | (value >> (-count & mask));\n}\n \nint64_t fcn_00413d10 (int64_t arg1) {\n    rdi = arg1;\n    rcx = *(rdi);\n    if (cl == 0) {\n        goto label_0;\n    }\n    eax = 0;\n    do {\n        rax = rotate_left64 (rax, 9);\n        rdi++;\n        rax += rcx;\n        rcx = *(rdi);\n    } while (cl != 0);\n    edx = 0;\n    rax = rdx:rax / rsi;\n    rdx = rdx:rax % rsi;\n    rax = rdx;\n    return rax;\nlabel_0:\n    edx = 0;\n    rax = rdx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00413d50",
            "funcStartAddr": "0x413d50",
            "funcEndAddr": "0x413d6b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x413d50 */\n#include <stdint.h>\n \nvoid fcn_00413d50 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    *((rdi + 0x14)) = 0;\n    *((rdi + 0x1c)) = 1;\n    *(rdi) = esi;\n    *((rdi + 4)) = esi;\n    *((rdi + 8)) = esi;\n    *((rdi + 0xc)) = esi;\n    *((rdi + 0x10)) = esi;\n}\n"
        },
        {
            "funcName": "fcn_00413d70",
            "funcStartAddr": "0x413d70",
            "funcEndAddr": "0x413d75",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x413d70 */\n#include <stdint.h>\n \nuint32_t fcn_00413d70 (int64_t arg1) {\n    rdi = arg1;\n    eax = *((rdi + 0x1c));\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00413d80",
            "funcStartAddr": "0x413d80",
            "funcEndAddr": "0x413db5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x413d80 */\n#include <stdint.h>\n \nint32_t fcn_00413d80 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edx = *((rdi + 0x1c));\n    ecx = *((rdi + 0x14));\n    edx ^= 1;\n    edx = (int32_t) dl;\n    ecx += edx;\n    ecx &= 3;\n    eax = ecx;\n    r8 = rdi + rax*4;\n    eax = *(r8);\n    *(r8) = esi;\n    esi = *((rdi + 0x18));\n    *((rdi + 0x14)) = ecx;\n    if (esi == ecx) {\n        edx += esi;\n        edx &= 3;\n        *((rdi + 0x18)) = edx;\n    }\n    *((rdi + 0x1c)) = 0;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00413dc0",
            "funcStartAddr": "0x413dc0",
            "funcEndAddr": "0x424e00",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x413dc0 */\n#include <stdint.h>\n \nint32_t fcn_00413dc0 (uint32_t arg1) {\n    rdi = arg1;\n    do {\n        abort ();\n    } while (*((rdi + 0x1c)) != 0);\n    eax = *((rdi + 0x14));\n    esi = *((rdi + 0x10));\n    rcx = rdi + rax*4;\n    rdx = rax;\n    eax = *(rcx);\n    *(rcx) = esi;\n    if (edx != *((rdi + 0x18))) {\n        edx += 3;\n        edx &= 3;\n        *((rdi + 0x14)) = edx;\n        return eax;\n    }\n    *((rdi + 0x1c)) = 1;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00413e10",
            "funcStartAddr": "0x413e10",
            "funcEndAddr": "0x414372",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x413e10 */\n#include <stdint.h>\n \nuint64_t fcn_00413e10 (void) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_60h;\n    rax = nl_langinfo (0xe);\n    r15 = imp.__libc_start_main;\n    rbx = rax;\n    eax = 0x4182d7;\n    if (rax == 0) {\n        rbx = rax;\n    }\n    if (r15 == 0) {\n        goto label_15;\n    }\nlabel_1:\n    ebp = *(r15);\n    if (bpl != 0) {\n        goto label_16;\n    }\n    goto label_17;\n    do {\nlabel_0:\n        strlen (r15);\n        rbp = r15 + rax + 1;\n        strlen (rbp);\n        r15 = rbp + rax + 1;\n        ebp = *(r15);\n        if (bpl == 0) {\n            goto label_17;\n        }\nlabel_16:\n        eax = strcmp (rbx, r15);\n        if (eax == 0) {\n            goto label_18;\n        }\n    } while (bpl != 0x2a);\n    if (*((r15 + 1)) != 0) {\n        goto label_0;\n    }\nlabel_18:\n    strlen (r15);\n    rbx = r15 + rax + 1;\nlabel_17:\n    eax = \"ASCII\";\n    if (*(rbx) == 0) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\nlabel_15:\n    rax = getenv (\"CHARSETALIASDIR\");\n    r13 = rax;\n    if (rax == 0) {\n        goto label_19;\n    }\n    if (*(rax) == 0) {\n        goto label_19;\n    }\n    rax = strlen (rax);\n    r12 = rax;\n    r14 = rax;\n    if (rax != 0) {\n        goto label_20;\n    }\nlabel_13:\n    rax = malloc (0xe);\n    if (rax != 0) {\n        goto label_21;\n    }\n    do {\n        r15d = 0x4182d7;\nlabel_2:\n        *(0x0061daf8) = r15;\n        goto label_1;\nlabel_19:\n        r12d = 0x65;\n        r14d = 0x64;\n        r13d = \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\";\nlabel_14:\n        rax = malloc (0x73);\n    } while (rax == 0);\n    memcpy (rbp, r13, r14);\n    *((rbp + r14)) = 0x2f;\n    do {\n        r12 += rbp;\n        rax = 0x2e74657372616863;\n        *(r12) = rax;\n        eax = 0x73;\n        *((r12 + 0xc)) = ax;\n        eax = 0;\n        *((r12 + 8)) = 0x61696c61;\n        eax = open (rbp, 0, rdx);\n        r12d = eax;\n        if (eax >= 0) {\n            goto label_22;\n        }\nlabel_6:\n        r15d = 0x4182d7;\nlabel_7:\n        free (rbp);\n        goto label_2;\nlabel_21:\n        eax = memcpy (rbp, r13, r14);\n    } while (1);\nlabel_22:\n    esi = 0x41533e;\n    edi = eax;\n    r15d = 0;\n    rax = fdopen ();\n    *((rsp + 8)) = 0;\n    r13 = rax;\n    if (rax == 0) {\n        goto label_23;\n    }\n    rax = rbx;\n    r12 = rsp + 0x60;\n    r14 = rsp + 0x20;\n    rbx = r13;\n    r13 = rax;\n    do {\nlabel_3:\n        rax = *((rbx + 8));\n        if (rax >= *((rbx + 0x10))) {\n            goto label_24;\n        }\nlabel_4:\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        edi = *(rax);\nlabel_5:\n        eax = rdi - 9;\n    } while (eax <= 1);\n    if (edi == 0x20) {\n        goto label_3;\n    }\n    if (edi == 0x23) {\n        goto label_25;\n    }\n    eax = ungetc (rdi, rbx);\n    eax = 0;\n    rcx = r12;\n    rdx = r14;\n    eax = fscanf (rbx, \"%50s %50s\");\n    if (eax <= 1) {\n        goto label_12;\n    }\n    rcx = r14;\n    do {\n        edx = *(rcx);\n        rcx += 4;\n        eax = rdx - 0x1010101;\n        edx = ~edx;\n        eax &= edx;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    edx = eax;\n    edx >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = edx;\n    }\n    rdx = rcx + 2;\n    if ((eax & 0x8080) == 0) {\n        rcx = rdx;\n    }\n    edx = eax;\n    dl += al;\n    rdx = r12;\n    rcx -= 3;\n    rcx -= r14;\n    do {\n        esi = *(rdx);\n        rdx += 4;\n        eax = rsi - 0x1010101;\n        esi = ~esi;\n        eax &= esi;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    esi = eax;\n    *((rsp + 0x10)) = rcx;\n    esi >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = esi;\n    }\n    rsi = rdx + 2;\n    if ((eax & 0x8080) == 0) {\n        rdx = rsi;\n    }\n    esi = eax;\n    sil += al;\n    rdx -= 3;\n    rdx -= r12;\n    rax = rcx + rdx;\n    *((rsp + 0x18)) = rdx;\n    if (*((rsp + 8)) != 0) {\n        goto label_26;\n    }\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    rax = malloc (rax + 3);\n    rcx = *((rsp + 0x10));\n    rdx = *((rsp + 0x18));\nlabel_9:\n    if (rax == 0) {\n        goto label_27;\n    }\n    rdi = *((rsp + 8));\n    rsi = 0xfffffffffffffffe;\n    rsi -= rcx;\n    rcx++;\n    rdi -= rdx;\n    rsi += rdi;\n    rsi += rax;\n    if (ecx >= 8) {\n        goto label_28;\n    }\n    if ((cl & 4) != 0) {\n        goto label_29;\n    }\n    if (ecx != 0) {\n        r9d = *(r14);\n        *(rsi) = r9b;\n        if ((cl & 2) != 0) {\n            goto label_30;\n        }\n    }\nlabel_10:\n    rdx++;\n    rcx = rax + rdi - 1;\n    if (edx >= 8) {\n        goto label_31;\n    }\n    if ((dl & 4) != 0) {\n        goto label_32;\n    }\n    if (edx != 0) {\n        esi = *(r12);\n        *(rcx) = sil;\n        if ((dl & 2) != 0) {\n            goto label_33;\n        }\n    }\nlabel_11:\n    r15 = rax;\n    rax = *((rbx + 8));\n    if (rax < *((rbx + 0x10))) {\n        goto label_4;\n    }\nlabel_24:\n    rdi = rbx;\n    eax = uflow ();\n    edi = eax;\n    if (eax != 0xffffffff) {\n        goto label_5;\n    }\nlabel_12:\n    rax = r13;\n    r13 = rbx;\n    rbx = rax;\n    fcn_00414fe0 (rbx);\n    rax = *((rsp + 8));\n    if (rax == 0) {\n        goto label_6;\n    }\n    *((r15 + rax)) = 0;\n    goto label_7;\n    do {\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        eax = *(rax);\n        edx = 1;\nlabel_8:\n        if (eax == 0xa) {\n            goto label_34;\n        }\n        if (dl == 0) {\n            goto label_34;\n        }\nlabel_25:\n        rax = *((rbx + 8));\n    } while (rax < *((rbx + 0x10)));\n    rdi = rbx;\n    eax = uflow ();\n    dl = (eax != 0xffffffff) ? 1 : 0;\n    goto label_8;\nlabel_26:\n    rax += *((rsp + 8));\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    eax = realloc (r15, rax + 3);\n    rdx = *((rsp + 0x18));\n    rcx = *((rsp + 0x10));\n    goto label_9;\nlabel_28:\n    r9 = *(r14);\n    *(rsi) = r9;\n    r9d = ecx;\n    r10 = *((r14 + r9 - 8));\n    *((rsi + r9 - 8)) = r10;\n    r9 = rsi + 8;\n    r10 = r14;\n    r9 &= 0xfffffffffffffff8;\n    rsi -= r9;\n    ecx += esi;\n    r10 -= rsi;\n    ecx &= 0xfffffff8;\n    if (ecx < 8) {\n        goto label_10;\n    }\n    ecx &= 0xfffffff8;\n    esi = 0;\n    do {\n        r8d = esi;\n        esi += 8;\n        r11 = *((r10 + r8));\n        *((r9 + r8)) = r11;\n    } while (esi < ecx);\n    goto label_10;\nlabel_31:\n    rsi = *(r12);\n    r9 = r12;\n    *(rcx) = rsi;\n    esi = edx;\n    rdi = *((r12 + rsi - 8));\n    *((rcx + rsi - 8)) = rdi;\n    rdi = rcx + 8;\n    rdi &= 0xfffffffffffffff8;\n    rcx -= rdi;\n    edx += ecx;\n    r9 -= rcx;\n    edx &= 0xfffffff8;\n    if (edx < 8) {\n        goto label_11;\n    }\n    edx &= 0xfffffff8;\n    ecx = 0;\n    do {\n        esi = ecx;\n        ecx += 8;\n        r8 = *((r9 + rsi));\n        *((rdi + rsi)) = r8;\n    } while (ecx < edx);\n    goto label_11;\nlabel_34:\n    if (eax == 0xffffffff) {\n        goto label_12;\n    }\n    goto label_3;\nlabel_20:\n    if (*((r13 + rax - 1)) == 0x2f) {\n        rdi = rax + 0xe;\n        goto label_13;\nlabel_23:\n        close (r12d);\n        goto label_6;\nlabel_29:\n        r9d = *(r14);\n        *(rsi) = r9d;\n        r9d = *((r14 + rcx - 4));\n        *((rsi + rcx - 4)) = r9d;\n        goto label_10;\nlabel_32:\n        esi = *(r12);\n        *(rcx) = esi;\n        esi = *((r12 + rdx - 4));\n        *((rcx + rdx - 4)) = esi;\n        goto label_11;\nlabel_27:\n        rax = r13;\n        r13 = rbx;\n        r15d = 0x4182d7;\n        rbx = rax;\n        free (r15);\n        fcn_00414fe0 (r13);\n        goto label_7;\nlabel_30:\n        r9d = *((r14 + rcx - 2));\n        *((rsi + rcx - 2)) = r9w;\n        goto label_10;\nlabel_33:\n        esi = edx;\n        edx = *((r12 + rsi - 2));\n        *((rcx + rsi - 2)) = dx;\n        goto label_11;\n    }\n    rdi = rax + 0xf;\n    r12++;\n    goto label_14;\n}\n"
        },
        {
            "funcName": "fcn_00414380",
            "funcStartAddr": "0x414380",
            "funcEndAddr": "0x4143ca",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x414380 */\n#include <stdint.h>\n \nuint64_t fcn_00414380 (int64_t arg_60h, int64_t arg4, int32_t fd, int32_t oflag, const char * path) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_38h;\n    rcx = arg4;\n    rdi = fd;\n    rdx = oflag;\n    rsi = path;\n    *((rsp + 0x38)) = rcx;\n    ecx = 0;\n    while (1) {\n        eax = 0;\n        eax = openat (rdi, rsi, rdx);\n        fcn_0040eaf0 (eax);\n        return eax;\n        rax = rsp + 0x60;\n        *((rsp + 8)) = 0x18;\n        ecx = *((rsp + 0x38));\n        *((rsp + 0x10)) = rax;\n        rax = rsp + 0x20;\n        *((rsp + 0x18)) = rax;\n    }\n}\n"
        },
        {
            "funcName": "fcn_00414400",
            "funcStartAddr": "0x414400",
            "funcEndAddr": "0x41442f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x414400 */\n#include <stdint.h>\n \nuint64_t fcn_00414400 (void) {\n    rax = fcn_00414620 (rdi, rsi);\n    rbx = rax;\n    eax = 0;\n    if (rbx != 0) {\n        fcn_004100e0 (0x18);\n        *(rax) = rbx;\n        *((rax + 0x10)) = 0;\n        *((rax + 8)) = 0;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00414440",
            "funcStartAddr": "0x414440",
            "funcEndAddr": "0x414535",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x414440 */\n#include <stdint.h>\n \nint64_t fcn_00414440 (int64_t arg1, int64_t arg2) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    r15 = rdi;\n    r14 = rsi + 1;\n    r13 = rsi;\n    r12 = *(rdi);\n    rbp = *((rdi + 8));\n    rbx = *((rdi + 0x10));\n    while (rbx >= r13) {\n        if (rbx == r13) {\n            goto label_1;\n        }\nlabel_0:\n        rax = rbx;\n        edx = 0;\n        rax -= r13;\n        rax = rdx:rax / r14;\n        rdx = rdx:rax % r14;\n        rsi = rdx;\n        rcx = rax;\n        rbx -= rdx;\n        rax = rbp;\n        edx = 0;\n        rax = rdx:rax / r14;\n        rdx = rdx:rax % r14;\n        if (rbp <= rbx) {\n            goto label_2;\n        }\n        rbx = rsi - 1;\n    }\n    rax = rbx;\n    edx = 0;\n    do {\n        rax <<= 8;\n        rdx++;\n        rax += 0xff;\n    } while (r13 > rax);\n    fcn_00414930 (r12, rsp + 8, rdx);\n    rax = rsp + 8;\n    do {\n        edx = *(rax);\n        rbx <<= 8;\n        rbp <<= 8;\n        rax++;\n        rbx += 0xff;\n        rbp += rdx;\n    } while (r13 > rbx);\n    if (rbx != r13) {\n        goto label_0;\n    }\nlabel_1:\n    *((r15 + 0x10)) = 0;\n    *((r15 + 8)) = 0;\n    do {\n        rax = rbp;\n        return rax;\nlabel_2:\n        *((r15 + 8)) = rax;\n        *((r15 + 0x10)) = rcx;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00414560",
            "funcStartAddr": "0x414560",
            "funcEndAddr": "0x4145b1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x414560 */\n#include <stdint.h>\n \nuint64_t fcn_00414560 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    eax = fcn_00414a90 (*(rdi));\n    r12d = eax;\n    rax = errno_location ();\n    rdi = rbx;\n    esi = 0x18;\n    rdx = 0xffffffffffffffff;\n    r13d = *(rax);\n    explicit_bzero_chk ();\n    free (rbx);\n    *(rbp) = r13d;\n    eax = r12d;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00414620",
            "funcStartAddr": "0x414620",
            "funcEndAddr": "0x41490f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x414620 */\n#include <stdint.h>\n \nuint64_t fcn_00414620 (int64_t arg1, int64_t arg2) {\n    int64_t var_8h;\n    uid_t var_10h;\n    rdi = arg1;\n    rsi = arg2;\n    if (rsi == 0) {\n        goto label_3;\n    }\n    r12 = rdi;\n    if (rdi == 0) {\n        goto label_4;\n    }\n    rax = fcn_00415060 (rdi, 0x41842c);\n    r13 = rax;\n    if (rax == 0) {\n        goto label_5;\n    }\n    fcn_004100e0 (0x1038);\n    ecx = 0x1000;\n    rdi = r13;\n    *(rax) = r13;\n    if (rbp <= 0x1000) {\n        rcx = rbp;\n    }\n    *((rax + 8)) = 0x4145c0;\n    rbx = rax;\n    *((rax + 0x10)) = r12;\n    setvbuf (rdi, rax + 0x18, 0, rcx);\n    do {\nlabel_0:\n        rax = rbx;\n        return rax;\nlabel_4:\n        fcn_004100e0 (0x1038);\n        *(rax) = 0;\n        rbx = rax;\n        r13 = rax + 0x20;\n        *((rax + 8)) = 0x4145c0;\n        *((rax + 0x10)) = 0;\n        *((rax + 0x18)) = 0;\n        eax = 0;\n        eax = open (\"/dev/urandom\", 0, rdx);\n        r15d = eax;\n        if (eax < 0) {\n            goto label_6;\n        }\n        rdx = rbp;\n        edi = eax;\n        rsi = r13;\n        r14d = 0x800;\n        ecx = 0x1018;\n        if (rbp > 0x800) {\n            rdx = r14;\n        }\n        rax = read_chk ();\n        close (r15d);\n        if (rbp <= 0x7ff) {\n            goto label_7;\n        }\nlabel_1:\n        fcn_00414d90 (r13);\n    } while (1);\nlabel_3:\n    rax = fcn_004100e0 (0x1038);\n    rbx = rax;\n    *(rax) = 0;\n    *((rax + 8)) = 0x4145c0;\n    *((rax + 0x10)) = 0;\n    goto label_0;\nlabel_6:\n    r12 = rsp + 0x10;\n    esi = 0;\n    r14d = 0x14;\n    rdi = r12;\n    gettimeofday ();\n    __asm (\"movdqa xmm0, xmmword [rsp + 0x10]\");\n    __asm (\"movups xmmword [rbx + 0x20], xmm0\");\n    eax = getpid ();\n    *((rsp + 0x10)) = eax;\n    *((rbx + 0x30)) = eax;\nlabel_2:\n    eax = 4;\n    rbp -= r14;\n    if (rbp > 4) {\n    }\n    eax = getppid ();\n    rsi = r13 + r14;\n    *((rsp + 0x10)) = eax;\n    edi = ebp;\n    if (ebp == 0) {\n        goto label_8;\n    }\n    eax = 0;\n    do {\n        edx = eax;\n        eax++;\n        ecx = *((r12 + rdx));\n        *((rsi + rdx)) = cl;\n    } while (eax < edi);\nlabel_8:\n    rbp += r14;\n    if (rbp > 0x7ff) {\n        goto label_1;\n    }\n    r14d = 0x800;\n    eax = 4;\n    r14 -= rbp;\n    if (r14 > 4) {\n        r14 = rax;\n    }\n    eax = getuid ();\n    rsi = r13 + rbp;\n    *((rsp + 0x10)) = eax;\n    edi = r14d;\n    if (r14d == 0) {\n        goto label_9;\n    }\n    eax = 0;\n    do {\n        edx = eax;\n        eax++;\n        ecx = *((r12 + rdx));\n        *((rsi + rdx)) = cl;\n    } while (eax < edi);\nlabel_9:\n    rbp += r14;\n    if (rbp > 0x7ff) {\n        goto label_1;\n    }\n    eax = getgid ();\n    edx = 4;\n    rsi = r13 + rbp;\n    *((rsp + 0x10)) = eax;\n    eax = 0x800;\n    rax -= rbp;\n    if (rax > 4) {\n        rax = rdx;\n    }\n    edi = eax;\n    if (eax == 0) {\n        goto label_1;\n    }\n    eax = 0;\n    do {\n        edx = eax;\n        eax++;\n        ecx = *((r12 + rdx));\n        *((rsi + rdx)) = cl;\n    } while (eax < edi);\n    goto label_1;\nlabel_5:\n    ebx = 0;\n    goto label_0;\nlabel_7:\n    rcx = r14;\n    eax = 0x10;\n    __asm (\"cmovs rbp, r12\");\n    r12 = rsp + 0x10;\n    rdi = r12;\n    rcx -= rbp;\n    r15 = r13 + rbp;\n    if (rcx > 0x10) {\n        rcx = rax;\n    }\n    esi = 0;\n    rbp += rcx;\n    *((rsp + 8)) = rcx;\n    gettimeofday ();\n    rcx = *((rsp + 8));\n    rdi = r15;\n    rsi = r12;\n    *(rdi) = *(rsi);\n    rcx--;\n    rsi++;\n    rdi++;\n    if (rbp > 0x7ff) {\n        goto label_1;\n    }\n    r14 -= rbp;\n    eax = 4;\n    if (r14 > 4) {\n        r14 = rax;\n    }\n    eax = getpid ();\n    rsi = r12;\n    *((rsp + 0x10)) = eax;\n    ecx = r14d;\n    rax = r13 + rbp;\n    r14 += rbp;\n    rdi = rax;\n    *(rdi) = *(rsi);\n    rcx--;\n    rsi++;\n    rdi++;\n    if (r14 <= 0x7ff) {\n        goto label_2;\n    }\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00414930",
            "funcStartAddr": "0x414930",
            "funcEndAddr": "0x414a8c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x414930 */\n#include <stdint.h>\n \nuint64_t fcn_00414930 (int64_t arg1, int64_t arg2, uint32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r12 = rdi;\n    rbx = rdx;\n    r13 = *(rdi);\n    if (r13 == 0) {\n        goto label_1;\n    }\n    rax = errno_location ();\n    r15d = 0;\n    r14 = rax;\n    while (rbx != 0) {\n        rax = *(r12);\n        rdi = *((r12 + 0x10));\n        if ((*(rax) & 0x20) == 0) {\n            edx = r15d;\n        }\n        *(r14) = edx;\n        uint64_t (*r12 + 8)() ();\n        r13 = *(r12);\n        rdx = rbx;\n        rdi = rbp;\n        rcx = r13;\n        esi = 1;\n        rax = fread_unlocked ();\n        edx = *(r14);\n        rbp += rax;\n        rbx -= rax;\n    }\nlabel_0:\n    return rax;\nlabel_1:\n    r15 = *((rdi + 0x18));\n    r13 = rdi + 0x838;\n    r14 = rdi + 0x20;\n    if (rdx <= r15) {\n        goto label_2;\n    }\n    do {\n        rbp += r15;\n        rsi -= r15;\n        rbx -= r15;\n        rsi += r13;\n        memcpy (rbp, 0x800, r15);\n        if ((bpl & 7) == 0) {\n            goto label_3;\n        }\n        r15d = 0x800;\n        fcn_00414ae0 (r14, r13);\n    } while (rbx > 0x800);\n    goto label_4;\n    do {\n        rbp += 0x800;\n        fcn_00414ae0 (r14, rbp);\n        rbx -= 0x800;\n        if (rbx == 0) {\n            goto label_5;\n        }\nlabel_3:\n    } while (rbx > 0x7ff);\n    fcn_00414ae0 (r14, r13);\nlabel_4:\n    r15d = 0x800;\n    do {\n        memcpy (rbp, r13, rbx);\n        rcx = r15;\n        rcx -= rbx;\n        *((r12 + 0x18)) = rcx;\n        goto label_0;\nlabel_5:\n        *((r12 + 0x18)) = 0;\n        return rax;\nlabel_2:\n        r13 -= r15;\n        r13 += 0x800;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00414a90",
            "funcStartAddr": "0x414a90",
            "funcEndAddr": "0x414ad9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x414a90 */\n#include <stdint.h>\n \nuint32_t fcn_00414a90 (int64_t arg1) {\n    rdi = arg1;\n    rdx = 0xffffffffffffffff;\n    esi = 0x1038;\n    rbx = rdi;\n    rbp = *(rdi);\n    explicit_bzero_chk ();\n    eax = free (rbx);\n    if (rbp != 0) {\n        rdi = rbp;\n        void (*0x414fe0)() ();\n    }\n    eax = 0;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00414ae0",
            "funcStartAddr": "0x414ae0",
            "funcEndAddr": "0x414d85",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x414ae0 */\n#include <stdint.h>\n \nint64_t fcn_00414ae0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rax = *((rdi + 0x810));\n    r11 = *((rdi + 0x808));\n    r10 = rdi + 0x400;\n    rdx = *((rdi + 0x800));\n    r9 = rsi;\n    r8 = rax + 1;\n    rax = rdi;\n    *((rdi + 0x810)) = r8;\n    r11 += r8;\n    do {\n        rcx = rdx;\n        rcx <<= 0x15;\n        rdx ^= rcx;\n        rcx = *(rax);\n        rdx = ~rdx;\n        rdx += *((rax + 0x400));\n        r8 = rcx;\n        r8d &= 0x7f8;\n        rbx = *((rdi + r8));\n        rbx += rdx;\n        r8 = rbx;\n        r8 += r11;\n        r11 = rdx;\n        *(rax) = r8;\n        r8 >>= 8;\n        r11 >>= 5;\n        r8d &= 0x7f8;\n        rdx ^= r11;\n        rbx = *((rdi + r8));\n        rbx += rcx;\n        *(r9) = rbx;\n        r8 = *((rax + 8));\n        rdx += *((rax + 0x408));\n        r11 = rdx;\n        rdx = r8;\n        edx &= 0x7f8;\n        rcx = *((rdi + rdx));\n        rdx = r11;\n        rdx <<= 0xc;\n        rcx += r11;\n        rdx ^= r11;\n        rcx += rbx;\n        *((rax + 8)) = rcx;\n        rcx >>= 8;\n        ecx &= 0x7f8;\n        rbx = *((rdi + rcx));\n        rbx += r8;\n        *((r9 + 8)) = rbx;\n        rcx = *((rax + 0x10));\n        rdx += *((rax + 0x410));\n        r8 = rcx;\n        r8d &= 0x7f8;\n        r11 = *((rdi + r8));\n        r11 += rdx;\n        r8 = r11;\n        r8 += rbx;\n        *((rax + 0x10)) = r8;\n        r8 >>= 8;\n        r8d &= 0x7f8;\n        rcx += *((rdi + r8));\n        *((r9 + 0x10)) = rcx;\n        r11 = rcx;\n        r8 = *((rax + 0x18));\n        rcx = rdx;\n        rcx >>= 0x21;\n        rdx ^= rcx;\n        rcx = r8;\n        rdx += *((rax + 0x418));\n        ecx &= 0x7f8;\n        rbx = *((rdi + rcx));\n        rbx += rdx;\n        rcx = rbx;\n        rcx += r11;\n        rax += 0x20;\n        r9 += 0x20;\n        *((rax - 8)) = rcx;\n        rcx >>= 8;\n        ecx &= 0x7f8;\n        r11 = *((rdi + rcx));\n        r11 += r8;\n        *((r9 - 8)) = r11;\n    } while (rax != r10);\n    rsi += 0x400;\n    r9 = rdi + 0x800;\n    do {\n        rcx = rdx;\n        rcx <<= 0x15;\n        rdx ^= rcx;\n        rcx = *(rax);\n        rdx = ~rdx;\n        rdx += *((rax - 0x400));\n        r8 = rcx;\n        r10 = rdx;\n        r8d &= 0x7f8;\n        r10 >>= 5;\n        rbx = *((rdi + r8));\n        rbx += rdx;\n        rdx ^= r10;\n        r8 = rbx;\n        r8 += r11;\n        *(rax) = r8;\n        r8 >>= 8;\n        r8d &= 0x7f8;\n        rcx += *((rdi + r8));\n        *(rsi) = rcx;\n        r8 = *((rax + 8));\n        r11 = rcx;\n        rdx += *((rax - 0x3f8));\n        r10 = rdx;\n        rdx = r8;\n        edx &= 0x7f8;\n        rcx = *((rdi + rdx));\n        rdx = r10;\n        rdx <<= 0xc;\n        rcx += r10;\n        rdx ^= r10;\n        rcx += r11;\n        *((rax + 8)) = rcx;\n        rcx >>= 8;\n        ecx &= 0x7f8;\n        r11 = *((rdi + rcx));\n        r11 += r8;\n        *((rsi + 8)) = r11;\n        rcx = *((rax + 0x10));\n        rdx += *((rax - 0x3f0));\n        r8 = rcx;\n        r8d &= 0x7f8;\n        rbx = *((rdi + r8));\n        rbx += rdx;\n        r8 = rbx;\n        r8 += r11;\n        *((rax + 0x10)) = r8;\n        r8 >>= 8;\n        r8d &= 0x7f8;\n        rcx += *((rdi + r8));\n        *((rsi + 0x10)) = rcx;\n        r10 = rcx;\n        r8 = *((rax + 0x18));\n        rcx = rdx;\n        rcx >>= 0x21;\n        rdx ^= rcx;\n        rcx = r8;\n        rdx += *((rax - 0x3e8));\n        ecx &= 0x7f8;\n        rbx = *((rdi + rcx));\n        rbx += rdx;\n        rcx = rbx;\n        rcx += r10;\n        rax += 0x20;\n        rsi += 0x20;\n        *((rax - 8)) = rcx;\n        rcx >>= 8;\n        ecx &= 0x7f8;\n        r11 = *((rdi + rcx));\n        r11 += r8;\n        *((rsi - 8)) = r11;\n    } while (rax != r9);\n    *((rdi + 0x800)) = rdx;\n    *((rdi + 0x808)) = r11;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00414d90",
            "funcStartAddr": "0x414d90",
            "funcEndAddr": "0x414fc4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x414d90 */\n#include <stdint.h>\n \nint64_t fcn_00414d90 (int64_t arg1) {\n    rdi = arg1;\n    rdx = rdi;\n    rax = rdi;\n    rcx = 0x98f5704f6c44c0ab;\n    rsi = 0x82f053db8355e0ce;\n    r11 = 0xb29b2e824a595524;\n    r12 = 0xae985bf2cbfc89ed;\n    r10 = 0x8c0ea5053d4712a0;\n    r9 = 0xb9f8b322c73ac862;\n    rbp = rdi + 0x800;\n    r8 = 0x647c4677a2884b7c;\n    rbx = 0x48fe4a0fa5a09315;\n    do {\n        r13 = *(rax);\n        rsi += *((rax + 0x20));\n        rcx += *((rax + 0x38));\n        rbx += *((rax + 0x28));\n        r13 -= rsi;\n        r12 += *((rax + 0x30));\n        r8 += r13;\n        r13 = rcx;\n        r13 >>= 9;\n        rcx += r8;\n        rbx ^= r13;\n        r13 = *((rax + 8));\n        r13 -= rbx;\n        r9 += r13;\n        r13 = r8;\n        r13 <<= 9;\n        r8 += r9;\n        r12 ^= r13;\n        r13 = *((rax + 0x10));\n        r13 -= r12;\n        r10 += r13;\n        r13 = r9;\n        r13 >>= 0x17;\n        r9 += r10;\n        rcx ^= r13;\n        r13 = *((rax + 0x18));\n        r13 -= rcx;\n        r11 += r13;\n        r13 = r10;\n        r13 <<= 0xf;\n        r10 += r11;\n        r8 ^= r13;\n        r13 = r11;\n        rsi -= r8;\n        r13 >>= 0xe;\n        *(rax) = r8;\n        r9 ^= r13;\n        r13 = rsi;\n        r11 += rsi;\n        rbx -= r9;\n        r13 <<= 0x14;\n        *((rax + 8)) = r9;\n        r10 ^= r13;\n        r13 = rsi + rbx;\n        rsi = rbx;\n        r12 -= r10;\n        rsi >>= 0x11;\n        *((rax + 0x10)) = r10;\n        rax += 0x40;\n        r11 ^= rsi;\n        rsi = r12;\n        rbx += r12;\n        rcx -= r11;\n        rsi <<= 0xe;\n        *((rax - 0x28)) = r11;\n        rsi ^= r13;\n        r12 += rcx;\n        *((rax - 0x18)) = rbx;\n        *((rax - 0x20)) = rsi;\n        *((rax - 0x10)) = r12;\n        *((rax - 8)) = rcx;\n    } while (rbp != rax);\n    do {\n        rcx += *((rdx + 0x38));\n        rsi += *((rdx + 0x20));\n        r8 += *(rdx);\n        rax = rcx;\n        rbx += *((rdx + 0x28));\n        r8 -= rsi;\n        rax >>= 9;\n        r9 += *((rdx + 8));\n        r12 += *((rdx + 0x30));\n        rbx ^= rax;\n        rax = r8;\n        r10 += *((rdx + 0x10));\n        rcx += r8;\n        r9 -= rbx;\n        rax <<= 9;\n        r11 += *((rdx + 0x18));\n        r12 ^= rax;\n        rax = r9;\n        r8 += r9;\n        r10 -= r12;\n        rax >>= 0x17;\n        rcx ^= rax;\n        rax = r10;\n        r9 += r10;\n        r11 -= rcx;\n        rax <<= 0xf;\n        r8 ^= rax;\n        rax = r11;\n        r10 += r11;\n        rsi -= r8;\n        rax >>= 0xe;\n        *(rdx) = r8;\n        r9 ^= rax;\n        rax = rsi;\n        r11 += rsi;\n        rbx -= r9;\n        rax <<= 0x14;\n        *((rdx + 8)) = r9;\n        r10 ^= rax;\n        rax = rsi + rbx;\n        rsi = rbx;\n        r12 -= r10;\n        rsi >>= 0x11;\n        *((rdx + 0x10)) = r10;\n        rdx += 0x40;\n        r11 ^= rsi;\n        rsi = r12;\n        rbx += r12;\n        rcx -= r11;\n        rsi <<= 0xe;\n        *((rdx - 0x28)) = r11;\n        rsi ^= rax;\n        r12 += rcx;\n        *((rdx - 0x18)) = rbx;\n        *((rdx - 0x20)) = rsi;\n        *((rdx - 0x10)) = r12;\n        *((rdx - 8)) = rcx;\n    } while (rbp != rdx);\n    *((rdi + 0x810)) = 0;\n    *((rdi + 0x808)) = 0;\n    *((rdi + 0x800)) = 0;\n    r12 = rbx;\n    r13 = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00414fd0",
            "funcStartAddr": "0x414fd0",
            "funcEndAddr": "0x414fde",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x414fd0 */\n#include <stdint.h>\n \nint32_t fcn_00414fd0 (int64_t arg1, int64_t arg4) {\n    rdi = arg1;\n    rcx = arg4;\n    edx = 3;\n    esi = 0;\n    eax = 0;\n    return void (*0x410460)() ();\n}\n"
        },
        {
            "funcName": "fcn_00414fe0",
            "funcStartAddr": "0x414fe0",
            "funcEndAddr": "0x41505b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x414fe0 */\n#include <stdint.h>\n \nuint64_t fcn_00414fe0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    eax = fileno (rdi);\n    rdi = rbx;\n    if (eax < 0) {\n        goto label_1;\n    }\n    eax = freading ();\n    while (rax != -1) {\n        eax = fcn_004105a0 (rbx);\n        if (eax == 0) {\n            goto label_2;\n        }\n        rax = errno_location ();\n        r12d = *(rax);\n        fclose (rbx);\n        if (r12d != 0) {\n            goto label_3;\n        }\nlabel_0:\n        return rax;\n        eax = fileno (rbx);\n        esi = 0;\n        edx = 1;\n        edi = eax;\n        rax = lseek ();\n    }\nlabel_2:\n    rdi = rbx;\nlabel_1:\n    void (*0x4027d0)() ();\nlabel_3:\n    *(rbp) = r12d;\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00415060",
            "funcStartAddr": "0x415060",
            "funcEndAddr": "0x4150f3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x415060 */\n#include <stdint.h>\n \nuint64_t fcn_00415060 (int64_t arg2, const char * filename) {\n    rsi = arg2;\n    rdi = filename;\n    rax = fopen (rdi, rsi);\n    rbx = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    eax = fileno (rax);\n    while (rax != 0) {\nlabel_0:\n        rax = rbx;\n        return rax;\n        eax = fcn_00414fd0 (eax, rsi);\n        r12d = eax;\n        if (eax < 0) {\n            goto label_1;\n        }\n        eax = fcn_00414fe0 (rbx);\n        if (eax != 0) {\n            goto label_2;\n        }\n        rsi = rbp;\n        edi = r12d;\n        rax = fdopen ();\n        rbx = rax;\n    }\nlabel_2:\n    rax = errno_location ();\n    ebp = *(rax);\n    rbx = rax;\n    close (r12d);\n    *(rbx) = ebp;\n    ebx = 0;\n    goto label_0;\nlabel_1:\n    rax = errno_location ();\n    ebx = 0;\n    r12d = *(rax);\n    fcn_00414fe0 (rbx);\n    *(rbp) = r12d;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00415170",
            "funcStartAddr": "0x415170",
            "funcEndAddr": "0x415188",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x415170 */\n#include <stdint.h>\n \nint64_t fcn_00415170 (void) {\n    rax = 0x61d3e8;\n    edx = 0;\n    if (rax != 0) {\n        rdx = *(rax);\n    }\n    esi = 0;\n    return cxa_atexit ();\n}\n"
        },
        {
            "funcName": "fcn_00415188",
            "funcStartAddr": "0x415188",
            "funcEndAddr": "0x4151a8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_mv.elf @ 0x415188 */\n#include <stdint.h>\n \nvoid fcn_00415188 (int64_t arg3) {\n    rdx = arg3;\n    ebx = segment.GNU_RELRO;\n    do {\n        rax = *(rbx);\n        if (rax == -1) {\n            goto label_0;\n        }\n        void (*rax)() ();\n        rbx -= 8;\n    } while (1);\nlabel_0:\n}\n"
        }
    ],
    "funcCount": 176
}