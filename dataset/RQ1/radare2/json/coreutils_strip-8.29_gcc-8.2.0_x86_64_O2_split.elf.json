{
    "binaryInfo": {
        "isStripped": true,
        "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf"
    },
    "buildInfo": {
        "decompilerName": "radare2",
        "compilerName": "gcc",
        "compilerVersion": "9.4.0",
        "optLevel": "O"
    },
    "funcInfo": [
        {
            "funcName": "main",
            "funcStartAddr": "0x401ea0",
            "funcEndAddr": "0x403bd4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x401ea0 */\n#include <stdint.h>\n \nint32_t main (int32_t argc, char ** argv) {\n    void * var_8h;\n    uint32_t var_10h;\n    void * ptr;\n    uint32_t var_20h;\n    uint32_t var_28h;\n    void * errname;\n    void * var_38h;\n    void * var_40h;\n    uint32_t var_48h;\n    uint32_t s2;\n    void * var_58h;\n    int64_t var_60h;\n    int64_t var_6eh;\n    uint32_t var_6fh;\n    struct sigaction * oldact;\n    rdi = argc;\n    rsi = argv;\n    r15d = 0;\n    r13d = 0;\n    r12d = 1;\n    rbx = rsi;\n    rax = getpagesize ();\n    rax = (int64_t) eax;\n    *((rsp + 0x10)) = rax;\n    fcn_004053a0 (*(rbx));\n    setlocale (6, 0x40c29f);\n    bindtextdomain (0x409b13, \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\");\n    textdomain (0x409b13, rsi);\n    edi = 0x4050e0;\n    rax = fcn_00409900 ();\n    *(0x0060e5f0) = 0x40c282;\n    *(0x0060e620) = 0x409ce8;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x48)) = 0;\n    *((rsp + 0x28)) = 0;\n    do {\nlabel_0:\n        ecx = 0x40aaa0;\n        edx = \"0123456789C:a:b:del:n:t:ux\";\n        rsi = rbx;\n        edi = ebp;\n        r14d = *(0x0060e31c);\n        if (r14d == 0) {\n            r14d = r12d;\n        }\n        r8d = 0;\n        eax = fcn_00408cd0 ();\n        r8d = eax;\n        if (eax == 0xffffffff) {\n            goto label_46;\n        }\n        if (eax == 0x65) {\n            goto label_47;\n        }\n        if (eax <= 0x65) {\n            goto label_48;\n        }\n        if (eax == 0x78) {\n            goto label_49;\n        }\n        if (eax > 0x78) {\n            goto label_50;\n        }\n        if (eax == 0x6e) {\n            goto label_51;\n        }\n        if (eax <= 0x6e) {\n            goto label_52;\n        }\n        if (eax != 0x74) {\n            goto label_53;\n        }\n        r14 = imp.__libc_start_main;\n        eax = *(r14);\n        if (al == 0) {\n            goto label_54;\n        }\n        if (*((r14 + 1)) != 0) {\n            eax = strcmp (r14, 0x409be9);\n            if (eax != 0) {\n                goto label_55;\n            }\n            eax = 0;\n        }\n        edx = *(0x0060e290);\n        if (edx >= 0) {\n            if (edx != eax) {\n                goto label_56;\n            }\n        }\n        *(0x0060e290) = eax;\n    } while (1);\nlabel_53:\n    if (eax != 0x75) {\n        goto label_57;\n    }\n    *(0x0060e540) = 1;\n    goto label_0;\nlabel_52:\n    if (eax != 0x6c) {\n        goto label_57;\n    }\n    if (r13d != 0) {\n        goto label_58;\n    }\n    edx = 5;\n    r13d = 3;\n    rax = dcgettext (0, \"invalid number of lines\");\n    r9d = 0;\n    rax = fcn_004079f0 (*(0x0060e908), 1, 0xffffffffffffffff, 0x40c29f, rax);\n    *((rsp + 8)) = rax;\n    goto label_0;\nlabel_50:\n    if (eax == 0x81) {\n        goto label_59;\n    }\n    if (eax > 0x81) {\n        if (eax == 0x82) {\n            edx = 5;\n            rax = dcgettext (0, \"invalid IO block size\");\n            r9d = 0;\n            rdx = ~rdx;\n            rax = fcn_004079f0 (*(0x0060e908), 1, *((rsp + 0x10)), \"bEGKkMmPTYZ0\", rax);\n            *((rsp + 0x28)) = rax;\n            goto label_0;\nlabel_48:\n            if (eax <= 0x39) {\n                goto label_60;\n            }\n            if (eax == 0x61) {\n                goto label_61;\n            }\n            if (eax <= 0x61) {\n                goto label_62;\n            }\n            if (eax != 0x62) {\n                goto label_63;\n            }\n            if (r13d != 0) {\n                goto label_58;\n            }\n            edx = 5;\n            r13d = 1;\n            rax = dcgettext (0, \"invalid number of bytes\");\n            r9d = 0;\n            rdx = 0x7fffffffffffffff;\n            rax = fcn_004079f0 (*(0x0060e908), 1, rdx, \"bEGKkMmPTYZ0\", rax);\n            *((rsp + 8)) = rax;\n            goto label_0;\n        }\n        if (eax != 0x83) {\n            goto label_57;\n        }\n        r14 = imp.__libc_start_main;\n        rax = fcn_00405180 (*(0x0060e908));\n        if (r14 != rax) {\n            goto label_64;\n        }\n        *(0x0060e5f8) = r14;\n        goto label_0;\n    }\n    if (eax != 0x80) {\n        goto label_57;\n    }\n    *(0x0060e542) = 1;\n    goto label_0;\nlabel_63:\n    if (eax != 0x64) {\n        goto label_57;\n    }\n    esi = \"0123456789\";\nlabel_41:\n    r14 = imp.__libc_start_main;\n    *((rsp + 0x18)) = r8d;\n    *(str.abcdefghijklmnopqrstuvwxyz) = rsi;\n    if (r14 == 0) {\n        goto label_0;\n    }\n    eax = 0;\n    rcx |= 0xffffffffffffffff;\n    rdi = r14;\n    __asm (\"repne scasb al, byte [rdi]\");\n    rcx = ~rcx;\n    rax = rcx - 1;\n    *((rsp + 0x20)) = rax;\n    rax = strspn (r14, rsi);\n    r8d = *((rsp + 0x18));\n    if (*((rsp + 0x20)) != rax) {\n        goto label_65;\n    }\n    if (*(r14) != 0x30) {\n        goto label_66;\n    }\n    rax = r14 + 1;\n    if (*((r14 + 1)) != 0) {\n        goto label_67;\n    }\n    goto label_66;\n    do {\n        rax++;\n        if (*(rax) == 0) {\n            goto label_66;\n        }\nlabel_67:\n        *(0x0060e908) = rax;\n        r14 = rax;\n    } while (*(rax) == 0x30);\nlabel_66:\n    *(0x0060e600) = r14;\n    goto label_0;\nlabel_62:\n    if (eax != 0x43) {\n        goto label_57;\n    }\n    if (r13d != 0) {\n        goto label_58;\n    }\n    edx = 5;\n    r13d = 2;\n    rax = dcgettext (0, \"invalid number of bytes\");\n    r9d = 0;\n    rdx = 0x7fffffffffffffff;\n    rax = fcn_004079f0 (*(0x0060e908), 1, rdx, \"bEGKkMmPTYZ0\", rax);\n    *((rsp + 8)) = rax;\n    goto label_0;\nlabel_60:\n    if (eax < 0x30) {\n        if (eax == 0xffffff7d) {\n            eax = 0;\n            rcx = *(str.8.29);\n            r9d = \"Richard M. Stallman\";\n            r8d = \"Torbjorn Granlund\";\n            fcn_00407550 (*(obj.stdout), \"split\", \"GNU coreutils\");\n            eax = exit (0);\n        }\n        if (eax != 0xffffff7e) {\n            goto label_57;\n        }\n        fcn_00404cf0 (0);\n    }\n    if (r13d != 0) {\n        if (r13d != 4) {\n            goto label_58;\n        }\n        if (r15d == 0) {\n            goto label_68;\n        }\n        if (r15d == r14d) {\n            goto label_68;\n        }\n    }\n    r8d -= 0x30;\n    r15d = r14d;\n    r13d = 4;\n    rax = (int64_t) r8d;\n    *((rsp + 8)) = rax;\n    goto label_0;\nlabel_59:\n    rax = imp.__libc_start_main;\n    *(0x0060e760) = rax;\n    goto label_0;\nlabel_61:\n    edx = 5;\n    rax = dcgettext (0, \"invalid suffix length\");\n    r9d = 0;\n    rdx = 0x1fffffffffffffff;\n    rax = fcn_004079f0 (*(0x0060e908), 0, rdx, 0x40c29f, rax);\n    *(0x0060e608) = rax;\n    goto label_0;\nlabel_51:\n    if (r13d != 0) {\n        goto label_58;\n    }\n    rax = ctype_b_loc ();\n    rcx = *(rax);\n    rax = imp.__libc_start_main;\n    while ((*((rcx + rdx*2 + 1)) & 0x20) != 0) {\n        *(0x0060e908) = rax;\n        r14 = rax;\n        rax++;\n        edx = *(r14);\n    }\n    edi = 0x409b9e;\n    ecx = 2;\n    rsi = r14;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = ((*((rcx + rdx*2 + 1)) & 0x20) > 0) ? 1 : 0;\n    if (al != 0) {\n        goto label_69;\n    }\n    r14 += 2;\n    r13d = 7;\n    *(0x0060e908) = r14;\nlabel_1:\n    rax = strchr (*(0x0060e908), 0x2f);\n    edx = 5;\n    esi = \"invalid number of chunks\";\n    edi = 0;\n    r14 = rax;\n    if (rax == 0) {\n        goto label_70;\n    }\n    rax = dcgettext (rdi, rsi);\n    r9d = 0;\n    rdx |= 0xffffffffffffffff;\n    rax = fcn_004079f0 (r14 + 1, 1, rdx, 0x40c29f, rax);\n    *((rsp + 8)) = rax;\n    if (r14 == *(0x0060e908)) {\n        goto label_0;\n    }\n    *(r14) = 0;\n    edx = 5;\n    rax = dcgettext (0, \"invalid chunk number\");\n    r9d = 0;\n    rax = fcn_004079f0 (*(0x0060e908), 1, *((rsp + 8)), 0x40c29f, rax);\n    *((rsp + 0x48)) = rax;\n    goto label_0;\nlabel_47:\n    *(0x0060e541) = 1;\n    goto label_0;\nlabel_69:\n    r13d = 5;\n    eax = strncmp (r14, 0x409ba1, 2);\n    if (eax != 0) {\n        goto label_1;\n    }\n    r14 += 2;\n    r13d = 6;\n    *(0x0060e908) = r14;\n    goto label_1;\nlabel_46:\n    if (*((rsp + 0x48)) != 0) {\n        if (*(0x0060e760) != 0) {\n            goto label_71;\n        }\n    }\n    if (r13d == 0) {\n        goto label_72;\n    }\n    if (*((rsp + 8)) == 0) {\n        goto label_73;\n    }\n    do {\n        if (*(0x0060e290) < 0) {\n            *(0x0060e290) = 0xa;\n        }\n        rdi = imp.__libc_start_main;\n        r12d = r13 - 5;\n        if (rdi == 0) {\n            goto label_74;\n        }\n        *(0x0060e2a0) = 0;\n        if (r12d <= 2) {\n            goto label_75;\n        }\nlabel_2:\n        r14d = 0;\n        if (*(0x0060e608) != 0) {\n            goto label_76;\n        }\nlabel_3:\n        edi = 2;\n        if (r14 >= 2) {\n            rdi = r14;\n        }\n        *(0x0060e608) = rdi;\nlabel_4:\n        eax = *(0x0060e31c);\n        if (eax < ebp) {\n            rcx = (int64_t) eax;\n            edx = rax + 1;\n            rsi = rcx*8;\n            rcx = *((rbx + rcx*8));\n            *(0x0060e31c) = edx;\n            *(0x0060e5f0) = rcx;\n            if (edx >= ebp) {\n                goto label_77;\n            }\n            rdx = *((rbx + rsi + 8));\n            eax += 2;\n            *(0x0060e31c) = eax;\n            *(0x0060e620) = rdx;\n            if (eax < ebp) {\n                goto label_78;\n            }\n        }\nlabel_77:\n        rdi = imp.__libc_start_main;\n        if (rdi != 0) {\n            eax = 0;\n            rcx |= 0xffffffffffffffff;\n            edx = 5;\n            esi = \"numerical suffix start value is too large for the suffix length\";\n            __asm (\"repne scasb al, byte [rdi]\");\n            rax = rcx;\n            rax = ~rax;\n            rax--;\n            if (rax > *(0x0060e608)) {\n                goto label_40;\n            }\n        }\n        rbx = imp.__libc_start_main;\n        eax = strcmp (rbx, 0x40c282);\n        if (eax != 0) {\n            eax = fcn_00405260 (0, rbx, 0, 0);\n            if (eax < 0) {\n                goto label_79;\n            }\n        }\n        esi = 0;\n        edx = 0x60e560;\n        edi = 1;\n        eax = fxstat ();\n        if (eax != 0) {\n            goto label_80;\n        }\n        if (*((rsp + 0x28)) == 0) {\n            rbx = imp.__libc_start_main;\n            rax = 0x1ffffffffffe0000;\n            rdx = rbx - 0x20000;\n            eax = 0x20000;\n            if (rdx <= rax) {\n                rax = rbx;\n            }\n            *((rsp + 0x28)) = rax;\n        }\n        rbx = *((rsp + 0x10));\n        rbp |= 0xffffffffffffffff;\n        rdi += rbx;\n        fcn_00407690 (*((rsp + 0x28)));\n        edx = 0;\n        rcx = rax + rbx - 1;\n        rax = rcx;\n        rax = rdx:rax / rbx;\n        rdx = rdx:rax % rbx;\n        rax = 0x7fffffffffffffff;\n        *((rsp + 0x10)) = rax;\n        rcx -= rdx;\n        *((rsp + 0x50)) = rcx;\n        if (r12d <= 1) {\n            goto label_81;\n        }\nlabel_6:\n        if (*(0x0060e760) != 0) {\n            edi = 0x60e640;\n            sigemptyset ();\n            sigaction (0xd, 0, rsp + 0x70);\n            if (*((rsp + 0x70)) != 1) {\n                esi = 0xd;\n                edi = 0x60e640;\n                sigaddset ();\n            }\n            edx = 0x60e6c0;\n            esi = 0x60e640;\n            edi = 0;\n            sigprocmask ();\n        }\n        r13d -= 2;\n        if (r13d > 5) {\n            goto label_82;\n        }\n        /* switch table (6 cases) at 0x40aa00 */\nlabel_70:\n        rax = dcgettext (rdi, rsi);\n        r9d = 0;\n        rdx |= 0xffffffffffffffff;\n        rax = fcn_004079f0 (*(0x0060e908), 1, rdx, 0x40c29f, rax);\n        *((rsp + 8)) = rax;\n        goto label_0;\nlabel_72:\n        *((rsp + 8)) = 0x3e8;\n        r13d = 3;\n    } while (1);\nlabel_68:\n    rax = 0x1999999999999999;\n    rsi = *((rsp + 8));\n    if (rsi > rax) {\n        goto label_83;\n    }\n    rax = rsi * 0xa;\n    edx = r8 - 0x30;\n    rdx = (int64_t) edx;\n    rax += rdx;\n    if (rax < rsi) {\n        goto label_83;\n    }\n    *((rsp + 8)) = rax;\n    r15d = r14d;\n    goto label_0;\nlabel_74:\n    r9 = *((rsp + 8));\n    if (r12d > 2) {\n        goto label_2;\n    }\nlabel_5:\n    rdi = *(str.abcdefghijklmnopqrstuvwxyz);\n    eax = 0;\n    rcx |= 0xffffffffffffffff;\n    edx = 0;\n    __asm (\"repne scasb al, byte [rdi]\");\n    rax = rcx;\n    rax = ~rax;\n    rsi = rax - 1;\n    rax = r9;\n    rax = rdx:rax / rsi;\n    rdx = rdx:rax % rsi;\n    rcx = rax;\n    r8b = (rdx != 0) ? 1 : 0;\n    edi = 0;\n    if (rsi <= r9) {\n        goto label_84;\n    }\n    goto label_85;\n    do {\n        rcx = rax;\nlabel_84:\n        edx = 0;\n        rdi++;\n        rax = rdx:rax / rsi;\n        rdx = rdx:rax % rsi;\n    } while (rsi <= rcx);\nlabel_85:\n    rax = imp.__libc_start_main;\n    r8d = (int32_t) r8b;\n    *(0x0060e2a0) = 0;\n    r14 = r8 + rdi;\n    if (rax == 0) {\n        goto label_3;\n    }\n    if (r14 > rax) {\n        goto label_86;\n    }\nlabel_76:\n    *(0x0060e2a0) = 0;\n    goto label_4;\nlabel_75:\n    eax = fcn_00407a20 (rdi, 0, 0xa, rsp + 0x70, 0x40c29f);\n    rsi = *((rsp + 8));\n    r9 = *((rsp + 8));\n    if (eax != 0) {\n        goto label_5;\n    }\n    rax = rsi;\n    r9 = *((rsp + 0x70));\n    rax = ~rax;\n    if (rax >= r9) {\n        if (r9 < rsi) {\n            goto label_87;\n        }\n    }\n    r9 = *((rsp + 8));\n    goto label_5;\nlabel_81:\n    edx = 1;\n    esi = 0;\n    edi = 0;\n    r12d = 0;\n    rax = lseek ();\n    rbx = rax;\n    if (rax < 0) {\n        goto label_88;\n    }\n    rbp = *((rsp + 0x28));\n    r14 = *((rsp + 0x50));\n    while (rax != 0) {\n        if (rax == -1) {\n            goto label_43;\n        }\n        rax += r12;\n        r12 = rax;\n        if (rbp <= rax) {\n            goto label_89;\n        }\n        rdx -= r12;\n        rax = fcn_00406fe0 (0, r14 + r12, rbp);\n    }\nlabel_34:\n    if (r12 < 0) {\n        goto label_43;\n    }\n    rax = *((rsp + 0x28));\n    if (r12 <= rax) {\n    }\n    if (*((rsp + 8)) < 0) {\n        goto label_90;\n    }\n    rax = *((rsp + 8));\n    if (r12 < rax) {\n        r12 = rax;\n    }\n    *((rsp + 0x10)) = r12;\n    goto label_6;\n    r15 = *((rsp + 8));\n    r14d = 0;\n    r12d = 1;\nlabel_25:\n    rax = fcn_00406fe0 (0, *((rsp + 0x50)), *((rsp + 0x28)));\n    *((rsp + 0x10)) = rax;\n    if (rax == -1) {\n        goto label_91;\n    }\n    rax = *((rsp + 0x50));\n    rbx = *((rsp + 0x10));\n    ebp = *(0x0060e290);\n    rbx += rax;\n    r13 = rax;\n    rcx = rax;\n    *(rbx) = bpl;\n    do {\nlabel_7:\n        rdx -= rcx;\n        rdx++;\n        rax = fcn_00408dd0 (rcx, ebp, rbx);\n        if (rbx == rax) {\n            goto label_92;\n        }\n        r14++;\n        rcx = rax + 1;\n    } while (r14 < r15);\n    rdx = rcx;\n    edi = (int32_t) r12b;\n    *((rsp + 8)) = rcx;\n    rdx -= r13;\n    r14d = 0;\n    r12d = 1;\n    fcn_004049a0 (rdi, r13);\n    rcx = *((rsp + 8));\n    ebp = *(0x0060e290);\n    r13 = rcx;\n    goto label_7;\n    *((rsp + 0x10)) = 0;\n    r12d = 0;\n    r13d = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x18)) = 0;\n    do {\nlabel_22:\n        rax = fcn_00406fe0 (0, *((rsp + 0x50)), *((rsp + 0x28)));\n        if (rax == -1) {\n            goto label_93;\n        }\n        if (rax == 0) {\n            goto label_94;\n        }\n        rbx = *((rsp + 0x50));\n        goto label_95;\nlabel_8:\n        rdx = r15;\n        rdi = rbx;\n        r14 = rbx + r15 - 1;\n        rax = memrchr ();\n        r8 = rax;\n        if (r12 == 0) {\n            goto label_18;\n        }\nlabel_9:\n        dil = (r13 == 0) ? 1 : 0;\n        if (r8 != 0) {\n            goto label_96;\n        }\n        if (dil != 0) {\n            goto label_96;\n        }\nlabel_20:\n        if (*((rsp + 0x10)) != 0) {\n            goto label_97;\n        }\n        edi = 0;\n        dil = (r13 == 0) ? 1 : 0;\n        if (r14 == 0) {\n            goto label_98;\n        }\n        rdx = r15;\n        rbp -= r15;\n        rbx += r15;\n        fcn_004049a0 (rdi, rbx);\n        r13d = 0;\nlabel_10:\n    } while (rbp == 0);\nlabel_95:\n    r15 = *((rsp + 8));\n    rax = r12 + r13;\n    esi = *(0x0060e290);\n    *((rsp + 0x30)) = rax;\n    r15 -= rax;\n    if (rbp >= r15) {\n        goto label_8;\n    }\n    rdx = rbp;\n    rdi = rbx;\n    r14d = 0;\n    r15d = 0;\n    rax = memrchr ();\n    r8 = rax;\n    if (r12 != 0) {\n        goto label_9;\n    }\nlabel_18:\n    if (r8 == 0) {\n        goto label_99;\n    }\nlabel_19:\n    r8 -= rbx;\n    r12 = r8 + 1;\n    dil = (r13 == 0) ? 1 : 0;\n    rdx = r12;\n    r13 += r12;\n    rbp -= r12;\n    rbx += r12;\n    fcn_004049a0 (0, rbx);\n    if (r14 == 0) {\n        goto label_100;\n    }\n    r15 -= r12;\n    rsp + 0x10 = (r15 != 0) ? 1 : 0;\n    if (r15 == 0) {\n        goto label_101;\n    }\nlabel_21:\n    r12d = 0;\nlabel_44:\n    rcx = *((rsp + 0x20));\n    rax = *((rsp + 0x20));\n    rax -= r12;\n    if (rax < r15) {\n        rsi = *((rsp + 0x28));\n        rax = *((rsp + 0x28));\n        rax = ~rax;\n        if (rax < rcx) {\n            goto label_102;\n        }\n        rcx += rsi;\n        rsi = rcx;\n        *((rsp + 0x20)) = rcx;\n        rax = fcn_004076f0 (*((rsp + 0x18)), rsi);\n        *((rsp + 0x18)) = rax;\n    }\n    rax = *((rsp + 0x18));\n    rbp -= r15;\n    rbx += r15;\n    r12 += r15;\n    memcpy (rax + r12, rbx, r15);\nlabel_45:\n    edx = *((rsp + 0x10));\n    eax = 0;\n    if (r14 != 0) {\n        edx = eax;\n    }\n    eax = 0;\n    if (r14 != 0) {\n        r13 = rax;\n    }\n    *((rsp + 0x10)) = dl;\n    goto label_10;\n    rax = *((rsp + 8));\n    if (*((rsp + 0x48)) > rax) {\n        goto label_103;\n    }\n    if (*((rsp + 0x10)) < rax) {\n        goto label_103;\n    }\n    rax = *((rsp + 0x10));\n    edx = 0;\n    rax = *(rdx:rax) / rsp + 8;\n    rdx = *(rdx:rax) % rsp + 8;\n    r10 = rax;\n    rax = *((rsp + 0x48));\n    if (rax <= 1) {\n        goto label_104;\n    }\n    r12 = rax - 1;\n    rbx = r10;\n    *((rsp + 0x20)) = r10;\n    rbx *= r12;\n    rbx--;\n    r13 = rbx;\n    if (rbp <= rbx) {\n        goto label_105;\n    }\n    rbp -= rbx;\n    memmove (*((rsp + 0x50)), rdi + rbx, rbp);\n    *((rsp + 0x18)) = rbx;\n    r10 = *((rsp + 0x20));\nlabel_35:\n    rax = *((rsp + 0x10));\n    *((rsp + 0x6f)) = 0;\n    r15d = 1;\n    r14 = *((rsp + 0x48));\n    *((rsp + 0x20)) = r15b;\n    r15 = r10;\n    rbx = rax - 1;\n    rax = rbp;\n    r11 = rbx;\nlabel_39:\n    rsi = *((rsp + 0x18));\n    if (*((rsp + 0x10)) <= rsi) {\n        goto label_106;\n    }\n    if (rax == -1) {\n        goto label_107;\n    }\nlabel_38:\n    if (rax == 0) {\n        goto label_106;\n    }\n    rdx = *((rsp + 0x10));\n    rdx -= *((rsp + 0x18));\n    *((rsp + 0x6f)) = 0;\n    r10 = r15;\n    rbp = *((rsp + 0x50));\n    ebx = *((rsp + 0x20));\n    if (rdx <= rax) {\n        rax = rdx;\n    }\n    r8 = *((rsp + 8));\n    r9 = rbp;\n    *((rsp + 0x60)) = rax;\n    r9 += rax;\n    r15 = r9;\nlabel_27:\n    rax |= 0xffffffffffffffff;\n    if (r15 == rbp) {\n        goto label_108;\n    }\n    edx = 0;\n    rax = r13;\n    rax -= *((rsp + 0x18));\n    rcx = *((rsp + 0x60));\n    __asm (\"cmovs rax, rdx\");\n    esi = *(0x0060e290);\n    *((rsp + 0x38)) = r11;\n    *((rsp + 0x30)) = r10;\n    *((rsp + 0x20)) = r8;\n    if (rax > rcx) {\n        rax = rcx;\n    }\n    rcx -= rax;\n    rax = fcn_00408dd0 (rbp + rax, rsi, rcx);\n    r8 = *((rsp + 0x20));\n    r10 = *((rsp + 0x30));\n    r11 = *((rsp + 0x38));\n    if (rax == 0) {\n        goto label_109;\n    }\n    *((rsp + 0x6e)) = 1;\n    rcx = rax + 1;\nlabel_28:\n    rax = rcx;\n    rax -= rbp;\n    *((rsp + 0x20)) = rax;\n    if (r12 == r14) {\n        goto label_110;\n    }\n    if (r14 == 0) {\n        goto label_111;\n    }\nlabel_29:\n    rbp = *((rsp + 0x18));\n    rbp += *((rsp + 0x20));\n    *((rsp + 0x18)) = rbp;\n    ebx = *((rsp + 0x6e));\n    do {\nlabel_11:\n        if (rbp <= r13) {\n            if (bl == 0) {\n                goto label_112;\n            }\n        }\n        eax = ebx;\n        eax ^= 1;\n        dl = (r15 == rcx) ? 1 : 0;\n        al &= dl;\n        if (al != 0) {\n            goto label_113;\n        }\n        r12++;\n        dl = (r14 != 0) ? 1 : 0;\n        al = (r12 > r14) ? 1 : 0;\n        if ((dl & al) != 0) {\n            goto label_26;\n        }\n        r13 += r10;\n        if (r12 == r8) {\n            r13 = r11;\n        }\n        if (rbp <= r13) {\n            goto label_114;\n        }\n    } while (r14 != 0);\n    edx = 0;\n    *((rsp + 0x58)) = r11;\n    *((rsp + 0x40)) = r10;\n    *((rsp + 0x38)) = r8;\n    *((rsp + 0x30)) = rcx;\n    fcn_004049a0 (1, 0);\n    rcx = *((rsp + 0x30));\n    r8 = *((rsp + 0x38));\n    r10 = *((rsp + 0x40));\n    r11 = *((rsp + 0x58));\n    goto label_11;\n    if (*((rsp + 0x48)) != 0) {\n        goto label_115;\n    }\n    edx = 0x20;\n    r12 = *((rsp + 8));\n    rax = rdx;\n    rdx:rax = rax * r12;\n    __asm (\"seto dl\");\n    edx = (int32_t) dl;\n    if (rax < 0) {\n        goto label_102;\n    }\n    if (rdx != 0) {\n        goto label_102;\n    }\n    ebp = 0;\n    rdi <<= 5;\n    rax = fcn_00407690 (r12);\n    *((rsp + 0x40)) = rax;\n    rbx = rax;\n    do {\n        fcn_00403cc0 ();\n        rbp++;\n        rbx += 0x20;\n        rax = fcn_004078c0 (*(0x0060e618));\n        *((rbx - 0x18)) = 0xffffffff;\n        *((rbx - 0x20)) = rax;\n        *((rbx - 0x10)) = 0;\n        *((rbx - 8)) = 0;\n    } while (rbp != r12);\nlabel_115:\n    *((rsp + 0x18)) = 0;\n    r12d = 1;\n    *((rsp + 0x38)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x58)) = 0;\n    do {\nlabel_12:\n        rax = fcn_00406fe0 (0, *((rsp + 0x50)), *((rsp + 0x28)));\n        if (rax == -1) {\n            goto label_116;\n        }\n        if (rax == 0) {\n            goto label_117;\n        }\n        rbx = *((rsp + 0x50));\n        rax += rbx;\n        *((rsp + 0x10)) = rax;\n    } while (rbx == rax);\n    r15 = rbx;\n    goto label_118;\nlabel_13:\n    if (rax == r12) {\n        goto label_119;\n    }\nlabel_16:\n    if (r13b != 0) {\n        rax = r12 + 1;\n        r12d = 1;\n        if (*((rsp + 8)) == r12) {\n            r12 = rax;\n            goto label_14;\n        }\n    }\nlabel_14:\n    r15 = rbx;\n    if (*((rsp + 0x10)) == rbx) {\n        goto label_12;\n    }\nlabel_118:\n    rbp = *((rsp + 0x10));\n    rbp -= r15;\n    rax = fcn_00408dd0 (r15, *(0x0060e290), rbp);\n    if (rax == 0) {\n        goto label_120;\n    }\n    rbx = rax + 1;\n    r13d = 1;\n    rbp -= r15;\nlabel_15:\n    rax = *((rsp + 0x48));\n    if (rax != 0) {\n        goto label_13;\n    }\n    r14 = *((rsp + 0x18));\n    r14 <<= 5;\n    al = fcn_00404500 (*((rsp + 0x40)), r14, *((rsp + 8)));\n    r14 += *((rsp + 0x40));\n    rax = errno_location ();\n    *((rsp + 0x30)) = rax;\n    if (*(0x0060e540) != 0) {\n        goto label_121;\n    }\n    rcx = *((r14 + 0x10));\n    edx = 1;\n    rsi = rbp;\n    rdi = r15;\n    rax = fwrite_unlocked ();\n    if (rax != 1) {\n        goto label_122;\n    }\n    rcx = *((rsp + 0x30));\n    al = (*(0x0060e760) != 0) ? 1 : 0;\n    dl = (*(rcx) == 0x20) ? 1 : 0;\n    eax &= edx;\nlabel_24:\n    eax = *((rsp + 0x20));\n    esi = 1;\n    if (al == 0) {\n        eax = esi;\n    }\n    *((rsp + 0x20)) = al;\nlabel_17:\n    if (*((rsp + 0x38)) != 0) {\n        goto label_123;\n    }\nlabel_23:\n    if (r13b == 0) {\n        goto label_14;\n    }\n    rax = *((rsp + 0x18));\n    if (rax != *((rsp + 8))) {\n        goto label_14;\n    }\n    if (*((rsp + 0x20)) == 0) {\n        goto label_124;\n    }\n    *((rsp + 0x18)) = 0;\n    eax = *((rsp + 0x20));\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x58)) = al;\n    goto label_14;\n    if (*((rsp + 0x48)) != 0) {\n        goto label_125;\n    }\n    rax = *((rsp + 0x10));\n    edx = 0;\n    rax = rdx:rax / r8;\n    rdx = rdx:rax % r8;\n    fcn_00404ab0 (rax, *((rsp + 0x50)), *((rsp + 0x28)), rbp, *((rsp + 8)));\nlabel_26:\n    eax = close (0);\n    if (eax != 0) {\n        goto label_126;\n    }\n    eax = fcn_004046f0 (0, *(0x0060e294), *(0x0060e758), *(0x0060e618));\n    eax = 0;\n    return rax;\nlabel_120:\n    rbx = *((rsp + 0x10));\n    r13d = 0;\n    goto label_15;\nlabel_119:\n    if (*(0x0060e540) != 0) {\n        goto label_127;\n    }\n    rcx = stdout;\n    edx = 1;\n    rsi = rbp;\n    rdi = r15;\n    rax = fwrite_unlocked ();\n    if (rax == 1) {\n        goto label_16;\n    }\n    rdi = stdout;\n    clearerr_unlocked ();\n    edx = 5;\n    rax = dcgettext (0, \"write error\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    rax = error (1, *(rax), 0x409c49);\nlabel_122:\n    rax = *((rsp + 0x30));\n    if (*(rax) != 0x20) {\n        goto label_128;\n    }\n    if (*(0x0060e760) != 0) {\n        goto label_17;\n    }\nlabel_128:\n    rax = fcn_00406e40 (0, 3, *(r14));\n    rcx = rax;\n    rax = *((rsp + 0x30));\n    eax = 0;\n    error (1, *(rax), 0x409c49);\nlabel_96:\n    edi = (int32_t) dil;\n    rdx = r12;\n    *((rsp + 0x38)) = r8;\n    fcn_004049a0 (rdi, *((rsp + 0x18)));\n    rax = *((rsp + 0x28));\n    r13 = *((rsp + 0x30));\n    r8 = *((rsp + 0x38));\n    *((rsp + 0x20)) = rax;\n    if (r12 <= rax) {\n        goto label_18;\n    }\n    rsi = rax;\n    *((rsp + 0x30)) = r8;\n    r12 = rax;\n    rax = fcn_004076f0 (*((rsp + 0x18)), rsi);\n    r8 = *((rsp + 0x30));\n    *((rsp + 0x20)) = r12;\n    *((rsp + 0x18)) = rax;\n    if (r8 != 0) {\n        goto label_19;\n    }\nlabel_99:\n    r12d = 0;\n    goto label_20;\nlabel_100:\n    rsp + 0x10 = (rbp != 0) ? 1 : 0;\n    if (rbp == 0) {\n        goto label_129;\n    }\n    r15 = rbp;\n    goto label_21;\nlabel_98:\n    rdx = rbp;\n    r13 += rbp;\n    fcn_004049a0 (rdi, rbx);\n    goto label_22;\nlabel_121:\n    rax = fcn_004052d0 (*((r14 + 8)), r15, rbp);\n    rax = *((rsp + 0x30));\n    if (rbp == rax) {\n        goto label_130;\n    }\n    if (*(rax) != 0x20) {\n        goto label_131;\n    }\n    if (*(0x0060e760) != 0) {\n        goto label_17;\n    }\nlabel_131:\n    rax = fcn_00406e40 (0, 3, *(r14));\n    rcx = rax;\n    rax = *((rsp + 0x30));\n    eax = 0;\n    error (1, *(rax), 0x409c49);\nlabel_123:\n    eax = fcn_00407e60 (*((r14 + 0x10)));\n    if (eax != 0) {\n        goto label_132;\n    }\n    *((r14 + 0x10)) = 0;\n    *((r14 + 8)) = 0xfffffffe;\n    goto label_23;\nlabel_127:\n    rax = fcn_004052d0 (1, r15, rbp);\n    if (rbp == rax) {\n        goto label_16;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"write error\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    rax = error (1, *(rax), 0x409c49);\nlabel_130:\n    al = (*(rax) == 0x20) ? 1 : 0;\n    dl = (*(0x0060e760) != 0) ? 1 : 0;\n    eax &= edx;\n    goto label_24;\nlabel_92:\n    if (rbx != r13) {\n        rbx -= r13;\n        edi = (int32_t) r12b;\n        r12d = 0;\n        rdx = rbx;\n        fcn_004049a0 (rdi, r13);\n    }\n    if (*((rsp + 0x10)) != 0) {\n        goto label_25;\n    }\n    goto label_26;\nlabel_114:\n    ebx = 0;\n    goto label_11;\nlabel_112:\n    eax = *((rsp + 0x6f));\nlabel_113:\n    rsi = *((rsp + 0x20));\n    *((rsp + 0x6f)) = al;\n    ebx = *((rsp + 0x6e));\n    goto label_27;\nlabel_82:\n    rcx |= 0xffffffffffffffff;\n    fcn_00404ab0 (*((rsp + 8)), *((rsp + 0x50)), *((rsp + 0x28)), rcx, 0);\n    goto label_26;\nlabel_109:\n    rcx = r15;\n    *((rsp + 0x6e)) = 0;\n    goto label_28;\nlabel_94:\n    if (r12 != 0) {\n        goto label_133;\n    }\nlabel_36:\n    free (*((rsp + 0x18)));\n    goto label_26;\nlabel_111:\n    rdx = *((rsp + 0x20));\n    edi = (int32_t) bl;\n    *((rsp + 0x58)) = r11;\n    *((rsp + 0x40)) = r10;\n    *((rsp + 0x38)) = r8;\n    *((rsp + 0x30)) = rcx;\n    fcn_004049a0 (rdi, rbp);\n    r11 = *((rsp + 0x58));\n    r10 = *((rsp + 0x40));\n    r8 = *((rsp + 0x38));\n    rcx = *((rsp + 0x30));\n    goto label_29;\nlabel_117:\n    if (*((rsp + 0x48)) != 0) {\n        goto label_26;\n    }\n    if (*((rsp + 0x58)) != 0) {\n        goto label_124;\n    }\n    rbx = *((rsp + 0x18));\nlabel_31:\n    rbp = *((rsp + 0x40));\n    r12d = 0;\n    r13 = *((rsp + 8));\n    goto label_134;\nlabel_30:\n    esi = *((rbp + 8));\n    if (esi >= 0) {\n        fcn_004046f0 (*((rbp + 0x10)), rsi, *((rbp + 0x18)), *(rbp));\n    }\n    r12++;\n    *((rbp + 8)) = 0xfffffffe;\n    rbp += 0x20;\n    if (r12 == r13) {\n        goto label_26;\n    }\nlabel_134:\n    if (rbx > r12) {\n        goto label_30;\n    }\n    if (*(0x0060e541) != 0) {\n        goto label_30;\n    }\n    rax = fcn_00404500 (*((rsp + 0x40)), r12, r13);\n    goto label_30;\nlabel_124:\n    rbx = *((rsp + 8));\n    goto label_31;\nlabel_110:\n    rdx = rax;\n    *((rsp + 0x58)) = r11;\n    *((rsp + 0x40)) = r10;\n    rbx = rax;\n    *((rsp + 0x38)) = r8;\n    *((rsp + 0x30)) = rcx;\n    rax = fcn_004052d0 (1, rbp, rdx);\n    rcx = *((rsp + 0x30));\n    r8 = *((rsp + 0x38));\n    r10 = *((rsp + 0x40));\n    r11 = *((rsp + 0x58));\n    if (rbx == rax) {\n        goto label_29;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"write error\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    error (1, *(rax), 0x409c49);\nlabel_125:\n    rax = *((rsp + 8));\n    if (*((rsp + 0x48)) > rax) {\n        goto label_135;\n    }\n    if (*((rsp + 0x10)) < rax) {\n        goto label_135;\n    }\n    rax = *((rsp + 0x10));\n    rdi = *((rsp + 8));\n    edx = 0;\n    rcx = *((rsp + 0x48));\n    rax = rdx:rax / rdi;\n    rdx = rdx:rax % rdi;\n    rsi = rcx - 1;\n    rsi *= rax;\n    rbx = rsi;\n    if (rcx != rdi) {\n        rax *= rcx;\n        *((rsp + 0x10)) = rax;\n    }\n    if (rbp <= rsi) {\n        goto label_136;\n    }\n    rbp -= rsi;\n    rsi += rdi;\n    memmove (*((rsp + 0x50)), rsi, rbp);\nlabel_37:\n    r13 = *((rsp + 0x28));\n    r14 = *((rsp + 0x10));\n    r12 |= 0xffffffffffffffff;\n    rax = rbp;\n    r15 = *((rsp + 0x50));\nlabel_32:\n    if (r14 <= rbx) {\n        goto label_26;\n    }\n    if (rax == -1) {\n        goto label_137;\n    }\nlabel_33:\n    if (rax == 0) {\n        goto label_26;\n    }\n    rsi = r15;\n    edi = 1;\n    rbp -= rbx;\n    if (rbp > rax) {\n    }\n    rax = fcn_004052d0 (rdi, rsi, rbp);\n    if (rbp != rax) {\n        rax = errno_location ();\n        if (*(0x0060e760) != 0) {\n            if (*(rax) == 0x20) {\n                goto label_138;\n            }\n        }\n        r13 = rax;\n        rax = fcn_00406e40 (0, 3, 0x40c282);\n        rcx = rax;\n        eax = 0;\n        error (1, *(r13), 0x409c49);\n    }\nlabel_138:\n    rbx += rbp;\n    rax = r12;\n    goto label_32;\nlabel_137:\n    rax = fcn_00406fe0 (0, r15, r13);\n    if (rax != -1) {\n        goto label_33;\n    }\n    rax = fcn_00406e40 (0, 3, *(0x0060e5f0));\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    rax = error (1, *(rax), 0x409c49);\nlabel_89:\n    r14 = imp.__libc_start_main;\n    if (r14 == 0) {\n        goto label_139;\n    }\n    rbx += rax;\n    eax = imp.__libc_start_main;\n    eax &= 0xd000;\n    if (eax == 0x8000) {\n        if (r14 >= rbx) {\n            goto label_140;\n        }\n    }\n    edx = 2;\n    esi = 0;\n    edi = 0;\n    rax = lseek ();\n    r14 = rax;\n    if (rax < 0) {\n        goto label_43;\n    }\n    if (rbx != rax) {\n        edx = 0;\n        edi = 0;\n        rsi = rbx;\n        rax = lseek ();\n        if (rax < 0) {\n            goto label_43;\n        }\n        if (r14 >= rbx) {\n            r14 = rbx;\n            goto label_140;\n        }\n    }\nlabel_140:\n    rax = 0x7fffffffffffffff;\n    r14 -= rbx;\n    r12 = r14;\n    r12 += rbp;\n    if (r12 != rax) {\n        goto label_34;\n    }\nlabel_139:\n    errno_location ();\n    *(rax) = 0x4b;\nlabel_43:\n    rax = fcn_00406e40 (0, 3, *(0x0060e5f0));\n    edx = 5;\n    rax = dcgettext (0, \"%s: cannot determine file size\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    error (1, *(rax), rbx);\nlabel_104:\n    r13 = r10 - 1;\n    r12d = 1;\n    *((rsp + 0x18)) = 0;\n    goto label_35;\nlabel_105:\n    rsi = rbx;\n    edi = 0;\n    edx = 1;\n    rsi -= rbp;\n    rbp |= 0xffffffffffffffff;\n    rax = lseek ();\n    *((rsp + 0x18)) = rbx;\n    r10 = *((rsp + 0x20));\n    if (rax >= 0) {\n        goto label_35;\n    }\n    rax = fcn_00406e40 (0, 3, *(0x0060e5f0));\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    error (1, *(rax), 0x409c49);\nlabel_133:\n    rdx = r12;\n    dil = (r13 == 0) ? 1 : 0;\n    fcn_004049a0 (0, *((rsp + 0x18)));\n    goto label_36;\nlabel_136:\n    edx = 1;\n    edi = 0;\n    rbp |= 0xffffffffffffffff;\n    rax = lseek ();\n    if (rax >= 0) {\n        goto label_37;\n    }\n    rax = fcn_00406e40 (0, 3, *(0x0060e5f0));\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    error (1, *(rax), 0x409c49);\nlabel_107:\n    *((rsp + 0x30)) = r11;\n    rax = fcn_00406fe0 (0, *((rsp + 0x50)), *((rsp + 0x28)));\n    r11 = *((rsp + 0x30));\n    if (rax != -1) {\n        goto label_38;\n    }\n    rax = fcn_00406e40 (0, 3, *(0x0060e5f0));\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    error (1, *(rax), 0x409c49);\nlabel_87:\n    r9 += rsi;\n    goto label_5;\nlabel_71:\n    edx = 5;\nlabel_40:\n    rax = dcgettext (0, \"--filter does not process a chunk extracted to stdout\");\n    eax = 0;\n    error (0, 0, rax);\nlabel_57:\n    fcn_00404cf0 (1);\nlabel_108:\n    *((rsp + 0x20)) = bl;\n    r15 = r10;\n    goto label_39;\nlabel_102:\n    fcn_004078e0 ();\nlabel_106:\n    r12 -= 0xffffffffffffffff;\n    if (*((rsp + 0x48)) == 0) {\n        goto label_141;\n    }\n    goto label_26;\n    do {\n        edx = 0;\n        r12++;\n        fcn_004049a0 (1, 0);\nlabel_141:\n    } while (r12 <= *((rsp + 8)));\n    goto label_26;\nlabel_132:\n    rax = fcn_00406e40 (0, 3, *(r14));\n    rcx = rax;\n    rax = *((rsp + 0x30));\n    eax = 0;\n    error (1, *(rax), 0x409c49);\nlabel_83:\n    *((rsp + 0x10)) = r8d;\n    rax = fcn_00405350 (*((rsp + 8)), rsp + 0x70, rdx);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"line count option -%s%c... is too large\");\n    r8d = *((rsp + 0x10));\n    rcx = rbx;\n    eax = 0;\n    error (1, 0, rax);\nlabel_58:\n    edx = 5;\n    esi = \"cannot split in more than one way\";\n    goto label_40;\nlabel_65:\n    *((rsp + 8)) = r8d;\n    rax = fcn_00406fc0 (r14);\n    r8d = *((rsp + 8));\n    edx = 5;\n    esi = \"%s: invalid start value for hexadecimal suffix\";\n    rbx = rax;\n    if (r8d == 0x64) {\n        goto label_142;\n    }\nlabel_42:\n    rax = dcgettext (0, rsi);\n    do {\n        rcx = rbx;\n        eax = 0;\n        error (0, 0, rax);\n        fcn_00404cf0 (1);\nlabel_90:\n        rax = fcn_00405350 (*((rsp + 8)), rsp + 0x70, rdx);\n        rax = fcn_00406fc0 (rax);\n        edx = 5;\n        rbx = rax;\n        rax = dcgettext (0, \"invalid number of chunks\");\n        r8 = rbx;\n        rcx = rax;\n        eax = 0;\n        error (1, 0x4b, \"%s: %s\");\nlabel_142:\n        dcgettext (0, \"%s: invalid start value for numerical suffix\");\n    } while (1);\nlabel_49:\n    esi = \"0123456789abcdef\";\n    goto label_41;\nlabel_56:\n    edx = 5;\n    rax = dcgettext (0, \"multiple separator characters specified\");\n    eax = 0;\n    error (1, 0, rax);\nlabel_55:\n    rax = fcn_00406fc0 (r14);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"multi-character separator %s\");\n    rcx = rbx;\n    eax = 0;\n    error (1, 0, rax);\nlabel_64:\n    rax = fcn_00406fc0 (r14);\n    edx = 5;\n    esi = \"invalid suffix %s, contains directory separator\";\n    rbx = rax;\n    goto label_42;\nlabel_80:\n    rax = fcn_00406e40 (0, 3, *(0x0060e5f0));\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    error (1, *(rax), 0x409c49);\nlabel_79:\n    rax = fcn_00406d70 (4, *(0x0060e5f0));\n    edx = 5;\n    rax = dcgettext (0, \"cannot open %s for reading\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    error (1, *(rax), rbx);\nlabel_88:\n    rax = errno_location ();\n    if (*(rax) != 0x1d) {\n        goto label_43;\n    }\n    *(rax) = 0;\n    goto label_43;\nlabel_126:\n    rax = fcn_00406e40 (0, 3, *(0x0060e5f0));\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    error (1, *(rax), 0x409c49);\nlabel_135:\n    assert_fail (\"k && n && k <= n && n <= file_size\", \"src/split.c\", 0x3df, \"bytes_chunk_extract\");\nlabel_103:\n    assert_fail (\"n && k <= n && n <= file_size\", \"src/split.c\", 0x361, \"lines_chunk_split\");\nlabel_97:\n    if (r14 == 0) {\n        goto label_143;\n    }\n    if (r15 != 0) {\n        goto label_44;\n    }\nlabel_143:\n    if (r14 != 0) {\n        goto label_45;\n    }\n    if (rbp == 0) {\n        goto label_45;\n    }\n    r15 = rbp;\n    goto label_44;\nlabel_129:\n    r12d = 0;\n    *((rsp + 0x10)) = 1;\n    goto label_10;\nlabel_86:\n    edx = 5;\n    rax = dcgettext (0, \"the suffix length needs to be at least %lu\");\n    rcx = r14;\n    eax = 0;\n    error (1, 0, rax);\nlabel_78:\n    rax = fcn_00406fc0 (*((rbx + rsi + 0x10)));\n    edx = 5;\n    esi = \"extra operand %s\";\n    rbx = rax;\n    goto label_42;\nlabel_73:\n    rax = fcn_00406fc0 (0x409bea);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"invalid number of lines\");\n    r8 = rbx;\n    rcx = rax;\n    eax = 0;\n    error (0, 0, \"%s: %s\");\n    fcn_00404cf0 (1);\nlabel_54:\n    edx = 5;\n    rax = dcgettext (0, \"empty record separator\");\n    eax = 0;\n    error (1, 0, rax);\nlabel_91:\n    rax = fcn_00406e40 (0, 3, *(0x0060e5f0));\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    error (1, *(rax), 0x409c49);\nlabel_116:\n    rax = fcn_00406e40 (0, 3, *(0x0060e5f0));\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    error (1, *(rax), 0x409c49);\nlabel_93:\n    rax = fcn_00406e40 (0, 3, *(0x0060e5f0));\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    error (1, *(rax), 0x409c49);\nlabel_101:\n    *((rsp + 0x10)) = 1;\n    r12d = 0;\n    goto label_45;\n}\n"
        },
        {
            "funcName": "fcn_00403c0b",
            "funcStartAddr": "0x403c0b",
            "funcEndAddr": "0x403c2a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x403c0b */\n#include <stdint.h>\n \nint32_t fcn_00403c0b (void) {\n    eax = 0x60e4c8;\n    if (rax != 0x60e4c8) {\n        eax = 0;\n        if (rax == 0) {\n            goto label_0;\n        }\n        edi = 0x60e4c8;\n        void (*rax)() ();\n    }\nlabel_0:\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00403c61",
            "funcStartAddr": "0x403c61",
            "funcEndAddr": "0x403cb8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x403c61 */\n#include <stdint.h>\n \nint64_t fcn_00403c61 (int32_t argc, func fini, func init, func main, func rtld_fini, void * stack_end, char ** ubp_av) {\n    rsi = argc;\n    r8 = fini;\n    rcx = init;\n    rdi = main;\n    r9 = rtld_fini;\n    xmm0 = stack_end;\n    rdx = ubp_av;\n    if (*(0x0060e508) != 0) {\n        goto label_0;\n    }\n    r12d = section..dtors;\n    ebx = 0x60de48;\n    rbx -= section..dtors;\n    rbx >>= 3;\n    rbx--;\n    do {\n        rax = imp.__libc_start_main;\n        if (rax >= rbx) {\n            goto label_1;\n        }\n        rax++;\n        *(0x0060e510) = rax;\n        uint64_t (*r12 + rax*8)() ();\n    } while (1);\nlabel_1:\n    fcn_00403c0b ();\n    *(0x0060e508) = 1;\n    return rax;\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00403cb8",
            "funcStartAddr": "0x403cb8",
            "funcEndAddr": "0x403d4b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x403cb8 */\n#include <stdint.h>\n \nint64_t fcn_00403cb8 (void) {\n    do {\n        esi = 0x60e4c8;\n        ecx = 2;\n        rsi -= 0x60e4c8;\n        rsi >>= 3;\n        rax = rsi;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rsi = rax;\n        if (rax != 0) {\n            eax = 0;\n            if (rax == 0) {\n                goto label_0;\n            }\n            edi = 0x60e4c8;\n            void (*rax)() ();\n        }\nlabel_0:\n        return rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00403cc0",
            "funcStartAddr": "0x403cc0",
            "funcEndAddr": "0x403fb9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x403cc0 */\n#include <stdint.h>\n \nuint64_t fcn_00403cc0 (void) {\n    rbp = imp.__libc_start_main;\n    rbx = imp.__libc_start_main;\n    if (rbp == 0) {\n        goto label_2;\n    }\n    rax = rbx - 1;\n    if (rbx == 0) {\n        goto label_3;\n    }\n    r9 = imp.__libc_start_main;\n    r8d = *(0x0060e2a0);\n    rsi = *(str.abcdefghijklmnopqrstuvwxyz);\n    rdi = imp.__libc_start_main;\n    rcx = r9 + rbx*8 - 8;\n    while (rax != 0) {\nlabel_0:\n        edx = *((rsi + rdx));\n        *((rdi + rax)) = dl;\n        if (dl != 0) {\n            goto label_1;\n        }\n        *(rcx) = 0;\n        edx = *(rsi);\n        rcx -= 8;\n        *((rdi + rax)) = dl;\n        rax--;\n        if (rax == -1) {\n            goto label_3;\n        }\n        rdx = *(rcx);\n        rdx++;\n        *(rcx) = rdx;\n    }\n    if (r8b == 0) {\n        goto label_0;\n    }\n    rax = *(r9);\n    if (*((rsi + rax + 1)) == 0) {\n        goto label_2;\n    }\n    eax = *((rsi + rdx));\n    *(rdi) = al;\n    if (al == 0) {\n        goto label_4;\n    }\n    do {\nlabel_1:\n        return rax;\nlabel_2:\n        r12 = imp.__libc_start_main;\n        if (r12 == 0) {\n            rax = strlen (*(0x0060e620));\n            rdi = imp.__libc_start_main;\n            r13 = rax;\n            *(0x0060e530) = rax;\n            eax = 0;\n            if (rdi != 0) {\n                rax = strlen (rdi);\n            }\n            rbx += r13;\n            *(0x0060e528) = rax;\n            rax += rbx;\n            rsi = rax + 1;\n            *(0x0060e538) = rax;\n            if (r13 > rsi) {\n                goto label_5;\n            }\n            rax = fcn_004076f0 (rbp, rsi);\n            rbx = imp.__libc_start_main;\n            rdi = rax;\n            *(0x0060e618) = rax;\n            memcpy (rdi, *(0x0060e620), rbx);\n            rax = *(str.abcdefghijklmnopqrstuvwxyz);\n            r13 = imp.__libc_start_main;\n        } else {\n            rbx++;\n            rax = r12 + 2;\n            rsi = r12 + 3;\n            *(0x0060e538) = rax;\n            *(0x0060e608) = rbx;\n            if (rsi < *(0x0060e530)) {\n                goto label_5;\n            }\n            rax = fcn_004076f0 (rbp, rsi);\n            r13 = imp.__libc_start_main;\n            rcx = imp.__libc_start_main;\n            *(0x0060e618) = rax;\n            rax = *(str.abcdefghijklmnopqrstuvwxyz);\n            rdx = *(r13);\n            rbx = rcx + 1;\n            *(0x0060e530) = rbx;\n            edx = *((rax + rdx));\n            *((rbp + rcx)) = dl;\n        }\n        rcx = rbp + rbx;\n        rbx = imp.__libc_start_main;\n        esi = *(rax);\n        rdi = rcx;\n        *(0x0060e610) = rcx;\n        memset (rdi, rsi, rbx);\n        rsi = imp.__libc_start_main;\n        if (rsi != 0) {\n            memcpy (rax + rbx, rsi, *(0x0060e528));\n        }\n        rax = imp.__libc_start_main;\n        *((rbp + rax)) = 0;\n        free (r13);\n        rax = fcn_00407860 (rbx, 8);\n        r13 = imp.__libc_start_main;\n        rbx = rax;\n        *(0x0060e520) = rax;\n    } while (r13 == 0);\n    if (r12 != 0) {\n        goto label_6;\n    }\n    rax = strlen (r13);\n    r12 = imp.__libc_start_main;\n    r12 <<= 3;\n    rdi -= rax;\n    rdi += *(0x0060e610);\n    memcpy (r12, r13, rax);\n    rcx = rbp - 1;\n    if (rbp == 0) {\n        goto label_1;\n    }\n    rbp = -rbp;\n    rax = r12 + rbp*8;\n    rax += rbx;\n    do {\n        edx = *((r13 + rcx));\n        edx -= 0x30;\n        rdx = (int64_t) edx;\n        *((rax + rcx*8)) = rdx;\n        rcx--;\n    } while (rcx != -1);\n    return rax;\nlabel_5:\n    fcn_004078e0 ();\nlabel_4:\n    *(rcx) = 0;\n    eax = *(rsi);\n    *(rdi) = al;\nlabel_3:\n    edx = 5;\n    rax = dcgettext (0, \"output file suffixes exhausted\");\n    eax = 0;\n    error (1, 0, rax);\nlabel_6:\n    return assert_fail (\"! widen\", \"src/split.c\", 0x198, \"next_file_name\");\n}\n"
        },
        {
            "funcName": "fcn_00403fc0",
            "funcStartAddr": "0x403fc0",
            "funcEndAddr": "0x404500",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x403fc0 */\n#include <stdint.h>\n \nuint64_t fcn_00403fc0 (int64_t arg1) {\n    int64_t fildes;\n    int64_t var_8h;\n    rdi = arg1;\n    r12 = rdi;\n    if (*(0x0060e760) == 0) {\n        goto label_5;\n    }\n    rax = getenv (\"SHELL\");\n    edx = 1;\n    rsi = r12;\n    edi = \"FILE\";\n    eax = \"/bin/sh\";\n    if (rax == 0) {\n    }\n    eax = setenv (rdi, rsi, rdx);\n    if (eax != 0) {\n        goto label_6;\n    }\n    if (*(0x0060e542) != 0) {\n        goto label_7;\n    }\nlabel_1:\n    rdi = rsp;\n    eax = pipe ();\n    if (eax != 0) {\n        goto label_8;\n    }\n    eax = fork ();\n    ebx = eax;\n    if (eax != 0) {\n        if (eax == 0xffffffff) {\n            goto label_9;\n        }\n        eax = close (*(rsp));\n        if (eax != 0) {\n            goto label_10;\n        }\n        rdx = imp.__libc_start_main;\n        rcx = imp.__libc_start_main;\n        *(0x0060e758) = ebx;\n        rax = imp.__libc_start_main;\n        if (rdx == rcx) {\n            goto label_11;\n        }\nlabel_3:\n        rcx = rdx + 1;\n        *(0x0060e740) = rcx;\n        ecx = *((rsp + 4));\n        *((rax + rdx*4)) = ecx;\n        ebx = *((rsp + 4));\nlabel_0:\n        eax = ebx;\n        return rax;\n    }\n    ebx = 0;\n    if (*(0x0060e740) == 0) {\n        goto label_12;\n    }\n    do {\n        rax = imp.__libc_start_main;\n        eax = close (*((rax + rbx*4)));\n        if (eax != 0) {\n            goto label_13;\n        }\n        rbx++;\n    } while (*(0x0060e740) > rbx);\nlabel_12:\n    eax = close (*((rsp + 4)));\n    r12d = eax;\n    rax = errno_location ();\n    rbx = rax;\n    if (r12d != 0) {\n        goto label_14;\n    }\n    edi = *(rsp);\n    if (edi != 0) {\n        esi = 0;\n        eax = dup2 ();\n        if (eax != 0) {\n            goto label_15;\n        }\n        eax = close (*(rsp));\n        if (eax != 0) {\n            goto label_16;\n        }\n    }\n    edx = 0;\n    esi = 0x60e6c0;\n    edi = 2;\n    sigprocmask ();\n    r12 = imp.__libc_start_main;\n    rax = fcn_00405180 (rbp);\n    r8d = 0;\n    edx = 0x409a3e;\n    rdi = rbp;\n    rcx = r12;\n    rsi = rax;\n    eax = 0;\n    execl ();\n    edx = 5;\n    rax = dcgettext (0, \"failed to run command: \\\"%s -c %s\\\");\n    r8 = r12;\n    rcx = rbp;\n    eax = 0;\n    eax = error (1, *(rbx), rax);\nlabel_5:\n    if (*(0x0060e542) != 0) {\n        goto label_17;\n    }\nlabel_2:\n    eax = 0;\n    eax = fcn_00405210 (r12, 0x41, 0x1b6, rcx);\n    ebx = eax;\n    if (eax < 0) {\n        goto label_0;\n    }\n    rdx = rsp;\n    esi = eax;\n    edi = 1;\n    eax = fxstat ();\n    if (eax != 0) {\n        goto label_18;\n    }\n    rax = *((rsp + 8));\n    if (*(0x0060e568) == rax) {\n        rax = *(rsp);\n        if (*(0x0060e560) == rax) {\n            goto label_19;\n        }\n    }\n    esi = 0;\n    edi = ebx;\n    eax = ftruncate ();\n    if (eax == 0) {\n        goto label_0;\n    }\n    rax = fcn_00406e40 (0, 3, r12);\n    edx = 5;\n    rax = dcgettext (0, \"%s: error truncating\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    rax = error (1, *(rax), rbx);\nlabel_7:\n    rax = fcn_00406e40 (0, 3, r12);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"executing with FILE=%s\\n\");\n    rdi = stdout;\n    rcx = rbx;\n    esi = 1;\n    rdx = rax;\n    eax = 0;\n    fprintf_chk ();\n    goto label_1;\nlabel_16:\n    edx = 5;\n    rax = dcgettext (0, \"closing input pipe\");\n    eax = 0;\n    error (1, *(rbx), rax);\nlabel_17:\n    rax = fcn_00406d70 (4, rdi);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"creating file %s\\n\");\n    rdi = stdout;\n    rcx = rbx;\n    esi = 1;\n    rdx = rax;\n    eax = 0;\n    rax = fprintf_chk ();\n    goto label_2;\nlabel_11:\n    if (rax == 0) {\n        goto label_20;\n    }\n    rdx = 0x1555555555555554;\n    if (rcx > rdx) {\n        goto label_21;\n    }\n    rdx = rcx;\n    rdx >>= 1;\n    rcx = rcx + rdx + 1;\n    do {\nlabel_4:\n        *(0x0060e748) = rcx;\n        rax = fcn_004076f0 (rax, rcx*4);\n        rdx = imp.__libc_start_main;\n        *(0x0060e750) = rax;\n        goto label_3;\nlabel_20:\n        if (rcx == 0) {\n            goto label_22;\n        }\n        rsi = rcx;\n        edx = 0;\n        rsi >>= 0x3e;\n        rsi = rcx;\n        dl = (rsi != 0) ? 1 : 0;\n        rsi <<= 2;\n        if (rsi < 0) {\n            goto label_21;\n        }\n    } while (rdx == 0);\nlabel_21:\n    fcn_004078e0 ();\nlabel_22:\n    esi = 0x80;\n    ecx = 0x20;\n    goto label_4;\nlabel_13:\n    edx = 5;\n    rax = dcgettext (0, \"closing prior pipe\");\n    rbx = rax;\n    rax = errno_location ();\n    eax = 0;\n    error (1, *(rax), rbx);\nlabel_10:\n    edx = 5;\n    rax = dcgettext (0, \"failed to close input pipe\");\n    rbx = rax;\n    rax = errno_location ();\n    eax = 0;\n    error (1, *(rax), rbx);\nlabel_19:\n    rax = fcn_00406d70 (4, r12);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"%s would overwrite input; aborting\");\n    rcx = rbx;\n    eax = 0;\n    error (1, 0, rax);\nlabel_9:\n    edx = 5;\n    rax = dcgettext (0, \"fork system call failed\");\n    rbx = rax;\n    rax = errno_location ();\n    eax = 0;\n    error (1, *(rax), rbx);\nlabel_14:\n    edx = 5;\n    rax = dcgettext (0, \"closing output pipe\");\n    eax = 0;\n    error (1, *(rbx), rax);\nlabel_8:\n    edx = 5;\n    rax = dcgettext (0, \"failed to create pipe\");\n    rbx = rax;\n    rax = errno_location ();\n    eax = 0;\n    error (1, *(rax), rbx);\nlabel_18:\n    rax = fcn_00406d70 (4, r12);\n    edx = 5;\n    rax = dcgettext (0, \"failed to stat %s\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    error (1, *(rax), rbx);\nlabel_15:\n    edx = 5;\n    rax = dcgettext (0, \"moving input pipe\");\n    eax = 0;\n    error (1, *(rbx), rax);\nlabel_6:\n    edx = 5;\n    rax = dcgettext (0, \"failed to set FILE environment variable\");\n    rbx = rax;\n    rax = errno_location ();\n    eax = 0;\n    error (1, *(rax), rbx);\n}\n"
        },
        {
            "funcName": "fcn_00404500",
            "funcStartAddr": "0x404500",
            "funcEndAddr": "0x4046f0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x404500 */\n#include <stdint.h>\n \nuint64_t fcn_00404500 (void * arg1, int64_t arg2, int32_t arg3) {\n    int64_t errname;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13 = rsi;\n    r13 <<= 5;\n    r13 += rdi;\n    ebp = 0;\n    eax = *((r13 + 8));\n    if (eax >= 0) {\nlabel_2:\n        eax = ebp;\n        return eax;\n    }\n    rbx = rsi - 1;\n    r14 = rdx - 1;\n    r12 = rdi;\n    r15 = rsi;\n    if (rsi == 0) {\n        rbx = r14;\n    }\n    rdi = *(r13);\n    if (eax == 0xffffffff) {\n        goto label_3;\n    }\nlabel_0:\n    eax = 0;\n    eax = fcn_00405210 (rdi, 0xc01, rdx, rcx);\n    if (eax >= 0) {\n        goto label_4;\n    }\nlabel_1:\n    rax = errno_location ();\n    r8 = rax;\n    eax = *(rax);\n    eax -= 0x17;\n    if (eax <= 1) {\n        goto label_5;\n    }\n    goto label_6;\n    do {\n        rax = rbx - 1;\n        if (rbx == 0) {\n            rax = r14;\n        }\n        rbx = rax;\n        if (rax == r15) {\n            goto label_7;\n        }\nlabel_5:\n        rbp <<= 5;\n        rbp += r12;\n        eax = *((rbp + 8));\n    } while (eax < 0);\n    *((rsp + 8)) = r8;\n    eax = fcn_00407e60 (*((rbp + 0x10)));\n    if (eax != 0) {\n        goto label_8;\n    }\n    *((rbp + 8)) = 0xfffffffe;\n    eax = *((r13 + 8));\n    *((rbp + 0x10)) = 0;\n    rdi = *(r13);\n    if (eax != 0xffffffff) {\n        goto label_0;\n    }\nlabel_3:\n    eax = fcn_00403fc0 (rdi);\n    if (eax < 0) {\n        goto label_1;\n    }\nlabel_4:\n    *((r13 + 8)) = eax;\n    esi = 0x409a74;\n    edi = eax;\n    rax = fdopen ();\n    *((r13 + 0x10)) = rax;\n    if (rax != 0) {\n        eax = imp.__libc_start_main;\n        *(0x0060e758) = 0;\n        *((r13 + 0x18)) = eax;\n        goto label_2;\nlabel_7:\n        *((rsp + 8)) = r8;\n        rax = fcn_00406e40 (0, 3, *(r13));\n        r8 = *((rsp + 8));\n        rcx = rax;\n        eax = 0;\n        error (1, *(r8), 0x409c49);\nlabel_6:\n        *((rsp + 8)) = r8;\n        rax = fcn_00406e40 (0, 3, *(r13));\n        r8 = *((rsp + 8));\n        rcx = rax;\n        eax = 0;\n        error (1, *(r8), 0x409c49);\nlabel_8:\n        rax = fcn_00406e40 (0, 3, *(rbp));\n        r8 = *((rsp + 8));\n        rcx = rax;\n        eax = 0;\n        error (1, *(r8), 0x409c49);\n    }\n    rax = fcn_00406e40 (0, 3, *(r13));\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    error (1, *(rax), 0x409c49);\n}\n"
        },
        {
            "funcName": "fcn_004046f0",
            "funcStartAddr": "0x4046f0",
            "funcEndAddr": "0x4049a0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x4046f0 */\n#include <stdint.h>\n \nuint64_t fcn_004046f0 (void * arg1, int64_t arg2, void * arg3, int64_t arg4) {\n    int64_t var_ch;\n    int64_t wstatus;\n    int64_t var_20h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r12d = edx;\n    rbx = rcx;\n    if (rdi == 0) {\n        goto label_5;\n    }\n    eax = fcn_00407e60 (rdi);\n    if (eax != 0) {\n        rax = errno_location ();\n        r13 = rax;\n        if (*(0x0060e760) != 0) {\n            if (*(rax) == 0x20) {\n                goto label_6;\n            }\n        }\n        rax = fcn_00406e40 (0, 3, rbx);\n        rcx = rax;\n        eax = 0;\n        eax = error (1, *(r13), 0x409c49);\n    }\nlabel_6:\n    if (ebp < 0) {\n        goto label_2;\n    }\nlabel_0:\n    rdi = imp.__libc_start_main;\n    if (rdi == 0) {\n        goto label_2;\n    }\n    rsi = imp.__libc_start_main;\n    if (ebp == *(rsi)) {\n        goto label_7;\n    }\n    rdx = rsi + 4;\n    rdi--;\n    eax = 0;\n    while (rdi != rax) {\n        rcx = rdx;\n        rax++;\n        rdx += 4;\n        if (*(rcx) == ebp) {\n            goto label_8;\n        }\n    }\n    do {\nlabel_2:\n        if (r12d > 0) {\n            goto label_9;\n        }\nlabel_1:\n        return rax;\nlabel_5:\n    } while (esi < 0);\n    eax = close (ebp);\n    if (eax >= 0) {\n        goto label_0;\n    }\n    rax = fcn_00406e40 (0, 3, rbx);\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    rax = error (1, *(rax), 0x409c49);\nlabel_9:\n    *((rsp + 0x1c)) = 0;\n    eax = waitpid (r12d, rsp + 0x1c, 0);\n    if (eax == 0xffffffff) {\n        goto label_10;\n    }\nlabel_3:\n    ecx = *((rsp + 0x1c));\n    ebp &= 0x7f;\n    eax = rbp + 1;\n    if (al <= 1) {\n        goto label_11;\n    }\n    if (ebp == 0xd) {\n        goto label_1;\n    }\n    eax = fcn_00409040 (ebp, rsp + 0x20);\n    if (eax != 0) {\n        goto label_12;\n    }\nlabel_4:\n    r12 = imp.__libc_start_main;\n    rax = fcn_00406e40 (0, 3, rbx);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"with FILE=%s, signal %s from command: %s\");\n    r9 = r12;\n    r8 = rsp + 0x20;\n    rcx = rbx;\n    eax = 0;\n    error (rbp + 0x80, 0, rax);\n    return rax;\nlabel_7:\n    rcx = rsi;\n    rdi--;\nlabel_8:\n    eax = *((rsi + rdi*4));\n    *(0x0060e740) = rdi;\n    *(rcx) = eax;\n    goto label_2;\nlabel_11:\n    if (ebp != 0) {\n        goto label_13;\n    }\n    ebp = (int32_t) ch;\n    if (ebp == 0) {\n        goto label_1;\n    }\n    r12 = imp.__libc_start_main;\n    rax = fcn_00406e40 (0, 3, rbx);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"with FILE=%s, exit %d from command: %s\");\n    r9 = r12;\n    r8d = ebp;\n    rcx = rbx;\n    eax = 0;\n    error (ebp, 0, rax);\n    goto label_1;\nlabel_10:\n    rax = errno_location ();\n    if (*(rax) == 0xa) {\n        goto label_3;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"waiting for child process\");\n    eax = 0;\n    rax = error (1, *(rbp), rax);\nlabel_12:\n    r8d = ebp;\n    ecx = 0x409a90;\n    edx = 0x13;\n    eax = 0;\n    esi = 1;\n    rdi = rsp + 0x20;\n    sprintf_chk ();\n    goto label_4;\nlabel_13:\n    edx = 5;\n    *((rsp + 0xc)) = ecx;\n    rax = dcgettext (0, \"unknown status from command (0x%X)\");\n    ecx = *((rsp + 0xc));\n    eax = 0;\n    rax = error (1, 0, rax);\n}\n"
        },
        {
            "funcName": "fcn_004049a0",
            "funcStartAddr": "0x4049a0",
            "funcEndAddr": "0x404ab0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x4049a0 */\n#include <stdint.h>\n \nint64_t fcn_004049a0 (void * arg2, int64_t arg3) {\n    rsi = arg2;\n    rdx = arg3;\n    rbx = rdx;\n    if (dil == 0) {\n        goto label_0;\n    }\n    rax = rsi;\n    rax |= rdx;\n    if (rax == 0) {\n        if (*(0x0060e541) != 0) {\n            goto label_1;\n        }\n    }\n    fcn_004046f0 (0, *(0x0060e294), *(0x0060e758), *(0x0060e618));\n    fcn_00403cc0 ();\n    eax = fcn_00403fc0 (*(0x0060e618));\n    edi = eax;\n    *(0x0060e294) = eax;\n    if (eax < 0) {\n        goto label_2;\n    }\n    do {\n        rax = fcn_004052d0 (rdi, rbp, rbx);\n        if (rax != rbx) {\n            rax = errno_location ();\n            rbx = rax;\n            if (*(0x0060e760) != 0) {\n                eax = 0;\n                if (*(rbx) == 0x20) {\n                    goto label_3;\n                }\n            }\n            rax = fcn_00406e40 (0, 3, *(0x0060e618));\n            rcx = rax;\n            eax = 0;\n            error (1, *(rbx), 0x409c49);\n        }\nlabel_1:\n        eax = 1;\nlabel_3:\n        return rax;\nlabel_0:\n        edi = *(0x0060e294);\n    } while (1);\nlabel_2:\n    rax = fcn_00406e40 (0, 3, *(0x0060e618));\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    error (1, *(rax), 0x409c49);\n}\n"
        },
        {
            "funcName": "fcn_00404ab0",
            "funcStartAddr": "0x404ab0",
            "funcEndAddr": "0x404cf0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x404ab0 */\n#include <stdint.h>\n \nuint64_t fcn_00404ab0 (int32_t arg1, uint32_t arg2, uint32_t arg3, uint32_t arg4, int32_t arg5) {\n    int32_t var_8h;\n    int64_t var_10h;\n    int64_t var_1eh;\n    uint32_t var_1fh;\n    uint32_t var_20h;\n    uint32_t var_28h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r15 = rdi;\n    r14d = 0;\n    r12 = rdi;\n    ebx = 1;\n    *((rsp + 0x20)) = rsi;\n    *((rsp + 0x28)) = rdx;\n    if (rcx == -1) {\n        goto label_5;\n    }\n    r13 = rcx;\n    rsp + 0x1f = (rcx < rdx) ? 1 : 0;\n    if (r13 < r12) {\n        goto label_6;\n    }\nlabel_1:\n    r9 = *((rsp + 0x20));\n    r11b = (r8 == 0) ? 1 : 0;\n    while (bpl == 0) {\nlabel_0:\n        ebx = (int32_t) bl;\n        r14 += rbx;\n        bl = (r14 < r8) ? 1 : 0;\n        bl |= r11b;\n        if (bl == 0) {\n            if (bpl == 0) {\n                goto label_4;\n            }\n        }\n        r13 -= r12;\n        r9 += r12;\n        r12 = r15;\n        if (r15 > r13) {\n            goto label_7;\n        }\n        bpl |= bl;\n    }\n    rsi = r9;\n    edi = (int32_t) bl;\n    rdx = r12;\n    *((rsp + 0x10)) = r8;\n    *((rsp + 0x1e)) = r11b;\n    *((rsp + 8)) = r9;\n    eax = fcn_004049a0 (rdi, rsi);\n    r8 = *((rsp + 0x10));\n    r11d = *((rsp + 0x1e));\n    r9 = *((rsp + 8));\n    goto label_0;\nlabel_7:\n    if (r13 != 0) {\n        goto label_8;\n    }\nlabel_2:\n    if (*((rsp + 0x1f)) != 0) {\n        goto label_9;\n    }\nlabel_5:\n    if (bpl == 0) {\n        goto label_10;\n    }\nlabel_3:\n    *((rsp + 8)) = r8;\n    rax = fcn_00406fe0 (0, *((rsp + 0x20)), *((rsp + 0x28)));\n    r8 = *((rsp + 8));\n    r13 = rax;\n    if (rax == -1) {\n        goto label_11;\n    }\n    rsp + 0x1f = (rax == 0) ? 1 : 0;\n    if (r13 >= r12) {\n        goto label_1;\n    }\nlabel_6:\n    if (r13 == 0) {\n        goto label_2;\n    }\n    eax = ebp;\n    al |= bl;\n    if (al != 0) {\n        goto label_12;\n    }\n    eax = (int32_t) al;\n    ebp = 0;\n    edx = 1;\n    r14 += rax;\n    bl = (r8 == r14) ? 1 : 0;\n    bl &= dl;\n    if (bl == 0) {\n        goto label_13;\n    }\n    do {\nlabel_4:\n        return rax;\nlabel_12:\n        r9 = *((rsp + 0x20));\nlabel_8:\n        edi = (int32_t) bl;\n        rdx = r13;\n        *((rsp + 8)) = r8;\n        eax = fcn_004049a0 (rdi, r9);\n        r8 = *((rsp + 8));\n        edx = eax;\n        eax = ebx;\n        eax = (int32_t) al;\n        edx ^= 1;\n        r14 += rax;\n        bl = (r8 == r14) ? 1 : 0;\n        bl &= dl;\n    } while (bl != 0);\nlabel_13:\n    r12 -= r13;\n    goto label_2;\nlabel_10:\n    rsi = r12;\n    edi = 0;\n    edx = 1;\n    *((rsp + 8)) = r8;\n    rax = lseek ();\n    r8 = *((rsp + 8));\n    eax = 1;\n    if (rax != -1) {\n        r12 = r15;\n    }\n    if (rax != -1) {\n        ebx = eax;\n    }\n    goto label_3;\nlabel_9:\n    rbx = r14 + 1;\n    if (r14 < r8) {\n        goto label_14;\n    }\n    goto label_4;\n    do {\n        rbx = rax;\nlabel_14:\n        edx = 0;\n        *((rsp + 8)) = r8;\n        fcn_004049a0 (1, 0);\n        r8 = *((rsp + 8));\n        rax = rbx + 1;\n    } while (r8 != rbx);\n    return rax;\nlabel_11:\n    rax = fcn_00406e40 (0, 3, *(0x0060e5f0));\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    error (1, *(rax), 0x409c49);\n}\n"
        },
        {
            "funcName": "fcn_00404cf0",
            "funcStartAddr": "0x404cf0",
            "funcEndAddr": "0x4050bd",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x404cf0 */\n#include <stdint.h>\n \nuint64_t fcn_00404cf0 (int64_t arg1) {\n    char * var_8h;\n    int64_t var_10h;\n    char * var_18h;\n    char * var_20h;\n    char * var_28h;\n    char * var_30h;\n    char * var_38h;\n    char * var_40h;\n    char * var_48h;\n    char * var_50h;\n    char * var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    rdi = arg1;\n    edx = 5;\n    ebx = edi;\n    rbp = imp.__libc_start_main;\n    if (edi != 0) {\n        rax = dcgettext (0, \"Try '%s --help' for more information.\\n\");\n        rdi = stderr;\n        rcx = rbp;\n        esi = 1;\n        rdx = rax;\n        eax = 0;\n        fprintf_chk ();\nlabel_0:\n        exit (ebx);\n    }\n    rax = dcgettext (0, \"Usage: %s [OPTION]... [FILE [PREFIX]]\\n\");\n    rdx = rbp;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"Output pieces of FILE to PREFIXaa, PREFIXab, ...;\\ndefault size is 1000 lines, and default PREFIX is 'x'.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nWith no FILE, or when FILE is -, read standard input.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nMandatory arguments to long options are mandatory for short options too.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    edx = 5;\n    rax = dcgettext (0, \"  -a, --suffix-length=N   generate suffixes of length N (default %d)\\n      --additional-suffix=SUFFIX  append an additional SUFFIX to file names\\n  -b, --bytes=SIZE        put SIZE bytes per output file\\n  -C, --line-bytes=SIZE   put at most SIZE bytes of records per output file\\n  -d                      use numeric suffixes starting at 0, not alphabetic\\n      --numeric-suffixes[=FROM]  same as -d, but allow setting the start value\\n  -x                      use hex suffixes starting at 0, not alphabetic\\n      --hex-suffixes[=FROM]  same as -x, but allow setting the start value\\n  -e, --elide-empty-files  do not generate empty output files with '-n'\\n      --filter=COMMAND    write to shell COMMAND; file name is $FILE\\n  -l, --lines=NUMBER      put NUMBER lines/records per output file\\n  -n, --number=CHUNKS     generate CHUNKS output files; see explanation below\\n  -t, --separator=SEP     use SEP instead of newline as the record separator;\\n                            '\\\\0' (zero) specifies the NUL character\\n  -u, --unbuffered        immediately copy input to output with '-n r/...'\\n\");\n    ecx = 2;\n    esi = 1;\n    rdi = stdout;\n    rdx = rax;\n    eax = 0;\n    fprintf_chk ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --verbose           print a diagnostic just before each\\n                            output file is opened\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --help     display this help and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --version  output version information and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\\nUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nCHUNKS may be:\\n  N       split into N files based on size of input\\n  K/N     output Kth of N to stdout\\n  l/N     split into N files without splitting lines/records\\n  l/K/N   output Kth of N to stdout without splitting lines/records\\n  r/N     like 'l' but use round robin distribution\\n  r/K/N   likewise but only output Kth of N to stdout\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    *(rsp) = 0x409a99;\n    rax = rsp;\n    *((rsp + 8)) = \"test invocation\";\n    *((rsp + 0x10)) = 0x409b13;\n    *((rsp + 0x18)) = \"Multi-call invocation\";\n    *((rsp + 0x20)) = \"sha224sum\";\n    *((rsp + 0x28)) = \"sha2 utilities\";\n    *((rsp + 0x30)) = \"sha256sum\";\n    *((rsp + 0x38)) = \"sha2 utilities\";\n    *((rsp + 0x40)) = \"sha384sum\";\n    *((rsp + 0x48)) = \"sha2 utilities\";\n    *((rsp + 0x50)) = \"sha512sum\";\n    *((rsp + 0x58)) = \"sha2 utilities\";\n    *((rsp + 0x60)) = 0;\n    *((rsp + 0x68)) = 0;\n    do {\n        rax += 0x10;\n        rdi = *(rax);\n        if (rdi == 0) {\n            goto label_2;\n        }\n        esi = \"split\";\n        ecx = 6;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        dl = (rdi > 0) ? 1 : 0;\n    } while (dl != 0);\nlabel_2:\n    rbp = *((rax + 8));\n    edx = 5;\n    esi = \"\\n%s online help: <%s>\\n\";\n    edi = 0;\n    if (rbp == 0) {\n        goto label_3;\n    }\n    rax = dcgettext (rdi, rsi);\n    edi = 1;\n    ecx = \"https://www.gnu.org/software/coreutils/\";\n    edx = \"GNU coreutils\";\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rax = setlocale (5, 0);\n    if (rax != 0) {\n        eax = strncmp (rax, 0x409b1d, 3);\n        if (eax != 0) {\n            goto label_4;\n        }\n    }\nlabel_1:\n    edx = 5;\n    r12d = 0x409ab5;\n    rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n    ecx = \"split\";\n    edx = \"https://www.gnu.org/software/coreutils/\";\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    ecx = 0x40c29f;\n    r12 = rcx;\n    while (1) {\n        edx = 5;\n        rax = dcgettext (0, \"or available locally via: info '(coreutils) %s%s'\\n\");\n        rcx = r12;\n        rdx = rbp;\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        goto label_0;\nlabel_3:\n        rax = dcgettext (rdi, rsi);\n        edi = 1;\n        ecx = \"https://www.gnu.org/software/coreutils/\";\n        edx = \"GNU coreutils\";\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        rax = setlocale (5, 0);\n        if (rax != 0) {\n            eax = strncmp (rax, 0x409b1d, 3);\n            if (eax != 0) {\n                goto label_5;\n            }\n        }\n        edx = 5;\n        rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n        ecx = \"split\";\n        edx = \"https://www.gnu.org/software/coreutils/\";\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        r12d = 0x409ab5;\n        printf_chk ();\n    }\nlabel_5:\nlabel_4:\n    edx = 5;\n    rax = dcgettext (0, \"Report %s translation bugs to <https://translationproject.org/team/>\\n\");\n    edx = \"split\";\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00405180",
            "funcStartAddr": "0x405180",
            "funcEndAddr": "0x4051db",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x405180 */\n#include <stdint.h>\n \nint64_t fcn_00405180 (int64_t arg1) {\n    rdi = arg1;\n    edx = *(rdi);\n    rax = rdi;\n    if (dl != 0x2f) {\n        goto label_1;\n    }\n    do {\n        rax++;\n        edx = *(rax);\n    } while (dl == 0x2f);\nlabel_1:\n    if (dl == 0) {\n        goto label_2;\n    }\n    rcx = rax;\n    esi = 0;\n    while (dl != 0x2f) {\n        if (sil != 0) {\n            rax = rcx;\n            esi = 0;\n        }\n        rcx++;\n        edx = *(rcx);\n        if (dl == 0) {\n            goto label_2;\n        }\nlabel_0:\n    }\n    rcx++;\n    edx = *(rcx);\n    esi = 1;\n    if (dl != 0) {\n        goto label_0;\n    }\nlabel_2:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405210",
            "funcStartAddr": "0x405210",
            "funcEndAddr": "0x40525a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x405210 */\n#include <stdint.h>\n \nuint64_t fcn_00405210 (int64_t arg_60h, int64_t arg3, int32_t oflag, const char * path) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_30h;\n    rdx = arg3;\n    rsi = oflag;\n    rdi = path;\n    *((rsp + 0x30)) = rdx;\n    edx = 0;\n    while (1) {\n        eax = 0;\n        eax = open (rdi, rsi, rdx);\n        fcn_004070a0 (eax);\n        return eax;\n        rax = rsp + 0x60;\n        *((rsp + 8)) = 0x10;\n        edx = *((rsp + 0x30));\n        *((rsp + 0x10)) = rax;\n        rax = rsp + 0x20;\n        *((rsp + 0x18)) = rax;\n    }\n}\n"
        },
        {
            "funcName": "fcn_00405260",
            "funcStartAddr": "0x405260",
            "funcEndAddr": "0x4052ca",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x405260 */\n#include <stdint.h>\n \nuint64_t fcn_00405260 (int64_t arg1, int64_t arg4, int64_t oflag, char * path) {\n    rdi = arg1;\n    rcx = arg4;\n    rdx = oflag;\n    rsi = path;\n    eax = 0;\n    eax = open (rsi, edx, ecx);\n    ebx = eax;\n    if (ebp != eax) {\n        if (eax >= 0) {\n            goto label_0;\n        }\n    }\n    eax = ebx;\n    return eax;\nlabel_0:\n    esi = ebp;\n    edi = eax;\n    eax = dup2 ();\n    r12d = eax;\n    rax = errno_location ();\n    ebx = r12d;\n    r13d = *(rax);\n    close (ebx);\n    eax = ebx;\n    *(rbp) = r13d;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004052d0",
            "funcStartAddr": "0x4052d0",
            "funcEndAddr": "0x405346",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x4052d0 */\n#include <stdint.h>\n \nuint64_t fcn_004052d0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r13d = edi;\n    rbx = rdx;\n    r12d = 0;\n    while (rax != -1) {\n        if (rax == 0) {\n            goto label_1;\n        }\n        r12 += rax;\n        rbp += rax;\n        rbx -= rax;\n        if (rbx == 0) {\n            goto label_2;\n        }\n        rax = fcn_00407040 (r13d, rbp, rbx);\n    }\n    do {\nlabel_2:\n        rax = r12;\n        return rax;\nlabel_1:\n        errno_location ();\n        *(rax) = 0x1c;\n        rax = r12;\n        return rax;\nlabel_0:\n        r12d = 0;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00405350",
            "funcStartAddr": "0x405350",
            "funcEndAddr": "0x405398",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x405350 */\n#include <stdint.h>\n \nint64_t fcn_00405350 (void * arg1, struct sigaction * arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = rsi + 0x14;\n    *((rsi + 0x14)) = 0;\n    rsi = 0xcccccccccccccccd;\n    while (rdi > 9) {\n        rdi = rdx;\n        rax = rdx;\n        r8 = rdi;\n        rcx--;\n        rdx:rax = rax * rsi;\n        rdx >>= 3;\n        rax = rdx * 5;\n        rax += rax;\n        r8 -= rax;\n        rax = r8;\n        eax += 0x30;\n        *(rcx) = al;\n    }\n    rax = rcx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004053a0",
            "funcStartAddr": "0x4053a0",
            "funcEndAddr": "0x405439",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x4053a0 */\n#include <stdint.h>\n \nuint64_t fcn_004053a0 (int64_t arg1) {\n    rdi = arg1;\n    if (rdi != 0) {\n        rbx = rdi;\n        rax = strrchr (rdi, 0x2f);\n        if (rax != 0) {\n            r8 = rax + 1;\n            rdx = r8;\n            rdx -= rbx;\n            if (rdx <= 6) {\n                goto label_0;\n            }\n            rsi = rax - 6;\n            edi = \"/.libs/\";\n            ecx = 7;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (rdx > 6) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            edi = 0x40ad08;\n            ecx = 3;\n            rsi = r8;\n            rbx = r8;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (dl > 0) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            rbx = rax + 4;\n            *(obj.__progname) = rbx;\n        }\nlabel_0:\n        *(0x0060e778) = rbx;\n        *(obj.program_invocation_name) = rbx;\n        return rax;\n    }\n    fwrite (\"A NULL argv[0] was passed through an exec system call.\\n\", 1, 0x37, *(obj.stderr));\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_00405440",
            "funcStartAddr": "0x405440",
            "funcEndAddr": "0x405532",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x405440 */\n#include <stdint.h>\n \nuint64_t fcn_00405440 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edx = 5;\n    r12d = esi;\n    rsi = rdi;\n    rax = dcgettext (0, rsi);\n    rbx = rax;\n    while (1) {\nlabel_0:\n        rax = rbx;\n        return rax;\n        rax = fcn_004091d0 ();\n        edx = *(rax);\n        edx &= 0xffffffdf;\n        if (dl != 0x55) {\n            goto label_1;\n        }\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x54) {\n            goto label_2;\n        }\n        edx = *((rax + 2));\n        edx &= 0xffffffdf;\n        if (dl != 0x46) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x2d) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0) {\n            goto label_2;\n        }\n        eax = 0x40ad0e;\n        ebx = 0x40ad19;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n    }\nlabel_1:\n    if (dl == 0x47) {\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x42) {\n            goto label_2;\n        }\n        if (*((rax + 2)) != 0x31) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0x33) {\n            goto label_2;\n        }\n        if (*((rax + 6)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 7)) != 0) {\n            goto label_2;\n        }\n        eax = 0x40ad12;\n        ebx = 0x40ad15;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n        goto label_0;\n    }\nlabel_2:\n    eax = 0x40c26f;\n    ebx = 0x40ad0c;\n    if (r12d != 9) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405540",
            "funcStartAddr": "0x405540",
            "funcEndAddr": "0x409e21",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x405540 */\n#include <stdint.h>\n \nuint64_t fcn_00405540 (int64_t arg_e8h_3, uint32_t arg_e8h_2, int64_t arg_e8h, char * arg_e0h, int64_t arg1, char * arg2, char * arg3, size_t * arg4, int64_t arg5, int64_t arg6) {\n    size_t * var_8h;\n    size_t * var_10h;\n    uint32_t var_1fh;\n    char * s;\n    size_t n;\n    size_t * var_30h;\n    size_t * var_38h;\n    size_t var_40h;\n    size_t var_48h;\n    void * s2;\n    char * var_58h;\n    uint32_t var_60h;\n    int64_t var_68h;\n    uint32_t var_6ch;\n    char * var_6dh;\n    int64_t var_6eh;\n    int64_t var_6fh;\n    int64_t var_70h;\n    int64_t var_78h;\n    wint_t wc;\n    mbstate_t * ps;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    do {\n        /* [13] -r-x section size 31416 named .text */\n        abort ();\nlabel_5:\n        r15 = rdi;\n        r14 = rsi;\n        r13d = r8d;\n        *((rsp + 0x20)) = rdx;\n        *((rsp + 8)) = rcx;\n        *((rsp + 0x68)) = r9d;\n        rax = ctype_get_mb_cur_max ();\n        ebp &= 2;\n        *((rsp + 0x60)) = rax;\n        rsp + 0x6c = (ebp != 0) ? 1 : 0;\n    } while (r13d > 0xa);\n    eax = r13d;\n    r11 = *((rsp + 8));\n    /* switch table (11 cases) at 0x40ad80 */\nlabel_30:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    r13d = 2;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x40c26f;\nlabel_21:\n    r9 = r11;\n    r12d = 0;\n    r11d = r13d;\n    do {\nlabel_28:\n        r13b = (r9 != r12) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            r13b = (*((rax + r12)) != 0) ? 1 : 0;\n        }\n        if (r13b == 0) {\n            goto label_47;\n        }\n        rdi = *((rsp + 0x20));\n        al = (r11d != 2) ? 1 : 0;\n        al &= *((rsp + 8));\n        r8 = rdi + r12;\n        *((rsp + 0x10)) = al;\n        if (al == 0) {\n            goto label_48;\n        }\n        rax = *((rsp + 0x28));\n        if (rax == 0) {\n            goto label_49;\n        }\n        rbp = r12 + rax;\n        if (r9 == -1) {\n            if (rax <= 1) {\n                goto label_50;\n            }\n            *((rsp + 0x40)) = r11d;\n            *((rsp + 0x38)) = r10b;\n            *((rsp + 0x30)) = r8;\n            rax = strlen (rdi);\n            r11d = *((rsp + 0x40));\n            r10d = *((rsp + 0x38));\n            r8 = *((rsp + 0x30));\n            r9 = rax;\n        }\nlabel_50:\n        if (rbp > r9) {\n            goto label_49;\n        }\n        rdi = r8;\n        *((rsp + 0x48)) = r11d;\n        *((rsp + 0x40)) = r9;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        eax = memcmp (rdi, *((rsp + 0x50)), *((rsp + 0x28)));\n        r8 = *((rsp + 0x30));\n        r10d = *((rsp + 0x38));\n        r9 = *((rsp + 0x40));\n        r11d = *((rsp + 0x48));\n        if (eax != 0) {\n            goto label_49;\n        }\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_51;\n        }\n        ebp = *(r8);\n        if (bpl > 0x7e) {\n            goto label_52;\n        }\n        eax = (int32_t) bpl;\n        /* switch table (127 cases) at 0x40add8 */\n        *((rsp + 0x10)) = 0;\n        al = (r9 != 1) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            al = (*((rax + 1)) != 0) ? 1 : 0;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        if (al != 0) {\n            goto label_7;\n        }\nlabel_17:\n        if (r12 != 0) {\n            goto label_7;\n        }\nlabel_18:\n        if (*((rsp + 0x6c)) != 0) {\n            if (dl != 0) {\n                goto label_53;\n            }\n        }\nlabel_2:\n        eax = *((rsp + 8));\n        eax ^= 1;\n        eax |= edx;\n        eax ^= 1;\n        al |= *((rsp + 0x6c));\n        if (al == 0) {\n            goto label_11;\n        }\nlabel_24:\n        eax = 0;\nlabel_10:\n        if (*((rsp + 0xd0)) == 0) {\n            goto label_11;\n        }\n        edx = ebp;\n        rcx = *((rsp + 0xd0));\n        dl >>= 5;\n        edx = (int32_t) dl;\n        edx = *((rcx + rdx*4));\n        ecx = ebp;\n        edx >>= cl;\n        edx &= 1;\n        if (edx == 0) {\n            goto label_11;\n        }\n        dl = (r11d == 2) ? 1 : 0;\nlabel_0:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_54;\n        }\nlabel_4:\n        eax = r10d;\n        eax ^= 1;\n        al &= dl;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rdx = rbx + 1;\n            if (rdx < r14) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rdx = rbx + 2;\n            if (rdx < r14) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\nlabel_9:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n        r12++;\nlabel_1:\n        if (rbx < r14) {\n            *((r15 + rbx)) = bpl;\n        }\n        edi = *((rsp + 0x1f));\n        rbx++;\n        eax = 0;\n        if (r13b == 0) {\n            edi = eax;\n        }\n        *((rsp + 0x1f)) = dil;\n    } while (1);\nlabel_3:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    if (r14 == 0) {\n        goto label_56;\n    }\n    edx = 0;\n    if (*((rsp + 0x58)) != 0) {\n        goto label_56;\n    }\nlabel_27:\n    *((rsp + 0x6d)) = r13b;\n    rbx += 3;\n    eax = 0;\n    r10d = 0;\n    *((rsp + 0x58)) = r14;\n    r14 = rdx;\nlabel_11:\n    dl = (r11d == 2) ? 1 : 0;\n    if (*((rsp + 0x10)) != 0) {\n        goto label_0;\n    }\n    eax ^= 1;\n    r12++;\n    eax &= r10d;\nlabel_16:\n    if (al == 0) {\n        goto label_1;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x27;\n    }\n    rbx += 2;\n    r10d = 0;\n    goto label_1;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_57;\n    }\n    if (r11d == 5) {\n        goto label_58;\n    }\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_3;\n    }\n    *((rsp + 0x6d)) = r13b;\n    edx = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\nlabel_15:\n    edx = *((rsp + 8));\n    dl &= *((rsp + 0x6c));\n    ecx = 0x5c;\n    al = (*((rsp + 0x28)) != 0) ? 1 : 0;\n    dl &= al;\n    if (dl != 0) {\n        goto label_59;\n    }\nlabel_8:\n    if (*((rsp + 8)) != 0) {\n        goto label_60;\n    }\nlabel_7:\n    r13d = 0;\n    goto label_2;\nlabel_6:\n    edx = 0;\n    r13d = 0;\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_4;\n    }\nlabel_54:\n    r13d = r11d;\n    eax = edx;\n    r11 = r9;\nlabel_42:\nlabel_12:\n    eax = 4;\n    if (*((rsp + 8)) != 0) {\n        r13d = eax;\n    }\nlabel_43:\n    r9d &= 0xfffffffd;\n    rax = fcn_00405540 (r15, r14, *((rsp + 0x40)), r11, r13d, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\nlabel_44:\n    rax = rbx;\n    return rax;\n    goto label_6;\n    *((rsp + 0x10)) = 0;\n    edx = 0;\n    goto label_7;\n    *((rsp + 0x10)) = 0;\n    ecx = 0x72;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    do {\nlabel_20:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_61;\n        }\nlabel_34:\n        r13d = 0;\n        goto label_9;\n    } while (1);\nlabel_14:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_62;\n    }\n    *((rsp + 0x10)) = 0;\n    eax = r10d;\n    dl = (r11d == 2) ? 1 : 0;\n    eax ^= 1;\n    al &= dl;\n    if (al == 0) {\n        goto label_63;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rcx = rbx + 1;\n    if (r14 > rcx) {\n        *((r15 + rbx + 1)) = 0x24;\n    }\n    rcx = rbx + 2;\n    if (r14 > rcx) {\n        *((r15 + rbx + 2)) = 0x27;\n    }\n    rcx = rbx + 3;\n    if (r14 <= rcx) {\n        goto label_64;\n    }\nlabel_26:\n    *((r15 + rcx)) = 0x5c;\n    r10d = eax;\nlabel_25:\n    rbx = rcx + 1;\n    if (r11d == 2) {\n        goto label_65;\n    }\n    rax = r12 + 1;\n    if (rax < r9) {\n        rax = *((rsp + 0x20));\n        eax = *((rax + r12 + 1));\n        *((rsp + 0x30)) = al;\n        eax -= 0x30;\n        if (al <= 9) {\n            goto label_66;\n        }\n    }\nlabel_35:\n    eax = *((rsp + 8));\n    eax ^= 1;\n    al |= dl;\n    eax = r13d;\n    r13d = 0;\n    if (al == 0) {\n        goto label_10;\n    }\n    goto label_11;\nlabel_19:\n    *((rsp + 0x10)) = 0;\n    do {\nlabel_52:\n        if (*((rsp + 0x60)) != 1) {\n            goto label_67;\n        }\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r9;\n        *((rsp + 0x30)) = r10b;\n        rax = ctype_b_loc ();\n        edx = (int32_t) bpl;\n        r10d = *((rsp + 0x30));\n        r9 = *((rsp + 0x38));\n        rax = *(rax);\n        r11d = *((rsp + 0x40));\n        edi = 1;\n        eax = *((rax + rdx*2));\n        ax &= 0x4000;\n        r13b = (ax != 0) ? 1 : 0;\n        dl = (ax == 0) ? 1 : 0;\n        dl &= *((rsp + 8));\nlabel_37:\n        if (dl != 0) {\n            goto label_68;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        goto label_2;\nlabel_48:\n        ebp = *(r8);\n    } while (bpl > 0x7e);\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x40b1d0 */\n    ecx = 0x6e;\nlabel_13:\n    eax = *((rsp + 0x6c));\n    dl = (r11d == 2) ? 1 : 0;\n    al &= dl;\n    *((rsp + 0x10)) = al;\n    if (al == 0) {\n        goto label_8;\n    }\nlabel_53:\n    r11 = r9;\n    r13d = 2;\n    goto label_12;\n    ecx = 0x74;\n    goto label_13;\n    ecx = 0x62;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x61;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    if (*((rsp + 8)) != 0) {\n        goto label_14;\n    }\n    if ((*((rsp + 0x68)) & 1) != 0) {\n        goto label_69;\n    }\n    *((rsp + 0x10)) = 0;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    ebp = 0;\n    goto label_2;\n    if (r11d != 2) {\n        goto label_15;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_17;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_18;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_18;\n    ecx = 0x72;\n    goto label_13;\n    ecx = 0x66;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x76;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\nlabel_49:\n    ebp = *(r8);\n    if (bpl > 0x7e) {\n        goto label_19;\n    }\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x40b5c8 */\n    eax = 0;\n    do {\nlabel_31:\n        r13d = *((rsp + 0x10));\n        *((rsp + 0x10)) = al;\n        eax = 0;\n        goto label_10;\n        eax = 0;\nlabel_32:\n        if (r12 != 0) {\n            goto label_70;\n        }\n        r13d = *((rsp + 0x10));\n        edx = 0;\n        *((rsp + 0x10)) = al;\n        goto label_2;\n        eax = 0;\nlabel_33:\n    } while (1);\n    goto label_6;\n    goto label_20;\nlabel_47:\n    r13d = r11d;\n    r11 = r9;\n    dl = (r13d == 2) ? 1 : 0;\n    if (rbx == 0) {\n        if ((*((rsp + 0x6c)) & dl) != 0) {\n            goto label_71;\n        }\n    }\n    eax = *((rsp + 0x6c));\n    eax ^= 1;\n    dl &= al;\n    if (dl == 0) {\n        goto label_72;\n    }\n    if (*((rsp + 0x6d)) == 0) {\n        goto label_45;\n    }\n    if (*((rsp + 0x1f)) != 0) {\n        goto label_73;\n    }\n    al = (r14 == 0) ? 1 : 0;\n    dl = (*((rsp + 0x58)) != 0) ? 1 : 0;\n    al &= dl;\n    if (al == 0) {\n        goto label_74;\n    }\n    r14 = *((rsp + 0x58));\nlabel_46:\n    *(r15) = 0x27;\n    r13d = 2;\n    ebx = 1;\n    *((rsp + 0x50)) = 0x40c26f;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x6c)) = 0;\n    *((rsp + 0x6d)) = al;\n    goto label_21;\nlabel_58:\n    if ((*((rsp + 0x68)) & 4) != 0) {\n        rax = r12 + 2;\n        if (rax >= r9) {\n            goto label_39;\n        }\n        rsi = *((rsp + 0x20));\n        if (*((rsi + r12 + 1)) == 0x3f) {\n            goto label_75;\n        }\n    }\nlabel_39:\n    edx = 0;\n    r13d = 0;\n    goto label_2;\nlabel_57:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r13d = 0;\n    eax = 0;\n    goto label_11;\nlabel_67:\n    *((rsp + 0x88)) = 0;\n    if (r9 == -1) {\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        rax = strlen (*((rsp + 0x20)));\n        r11d = *((rsp + 0x40));\n        r10d = *((rsp + 0x38));\n        r8 = *((rsp + 0x30));\n        r9 = rax;\n    }\n    eax = 0;\n    *((rsp + 0x70)) = rbx;\n    *((rsp + 0x78)) = r8;\n    rbx = rax;\n    *((rsp + 0x6e)) = r10b;\n    *((rsp + 0x6f)) = bpl;\n    *((rsp + 0x40)) = r15;\n    *((rsp + 0x48)) = r14;\n    *((rsp + 0x30)) = r9;\n    *((rsp + 0x38)) = r11d;\n    while (*((rsp + 0x38)) != 2) {\nlabel_22:\n        eax = iswprint (*((rsp + 0x84)));\n        rdi = rsp + 0x88;\n        eax = 0;\n        if (eax == 0) {\n            r13d = eax;\n        }\n        rbx += r14;\n        eax = mbsinit (rdi);\n        if (eax != 0) {\n            goto label_76;\n        }\n        rax = *((rsp + 0x20));\n        r15 = r12 + rbx;\n        rbp = rax + r15;\n        rdx -= r15;\n        rax = fcn_00408d50 (rsp + 0x84, rbp, *((rsp + 0x30)), rsp + 0x88);\n        r14 = rax;\n        if (rax == 0) {\n            goto label_76;\n        }\n        if (rax == -1) {\n            goto label_77;\n        }\n        if (rax == 0xfffffffffffffffe) {\n            goto label_78;\n        }\n    }\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_22;\n    }\n    if (rax == 1) {\n        goto label_22;\n    }\n    rsi = *((rsp + 0x20));\n    rax = rsi + r15 + 1;\n    rsi += r14;\n    rsi += r15;\n    goto label_79;\nlabel_23:\n    rax++;\n    if (rsi == rax) {\n        goto label_22;\n    }\nlabel_79:\n    ecx = *(rax);\n    ecx -= 0x5b;\n    if (cl > 0x21) {\n        goto label_23;\n    }\n    edx = 1;\n    rdx <<= cl;\n    rcx = 0x20000002b;\n    if ((rdx & rcx) == 0) {\n        goto label_23;\n    }\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r13d = 2;\n    r11 = *((rsp + 0x30));\n    goto label_12;\nlabel_70:\n    *((rsp + 0x10)) = al;\n    r13d = 0;\n    goto label_24;\nlabel_63:\n    rcx = rbx;\n    if (r14 <= rbx) {\n        goto label_25;\n    }\n    eax = r10d;\n    goto label_26;\nlabel_56:\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x5c;\n    }\n    rax = rbx + 2;\n    if (r14 <= rax) {\n        goto label_80;\n    }\n    rdx = r14;\n    *((r15 + rbx + 2)) = 0x27;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_69:\n    r12++;\n    goto label_28;\nlabel_68:\n    edx = *((rsp + 8));\n    r13d = 0;\nlabel_36:\n    rcx = rdi;\n    *((rsp + 0x30)) = r13b;\n    esi = 0;\n    r13d = *((rsp + 0x6c));\n    rcx += r12;\n    edi = *((rsp + 0x10));\n    r8 = *((rsp + 0x20));\n    while (dl != 0) {\n        al = (r11d == 2) ? 1 : 0;\n        if (r13b != 0) {\n            goto label_81;\n        }\n        esi = r10d;\n        esi ^= 1;\n        al &= sil;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rsi = rbx + 1;\n            if (r14 > rsi) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rsi = rbx + 2;\n            if (r14 > rsi) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 6;\n            eax += 0x30;\n            *((r15 + rbx + 1)) = al;\n        }\n        rax = rbx + 2;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 3;\n            eax &= 7;\n            eax += 0x30;\n            *((r15 + rbx + 2)) = al;\n        }\n        ebp &= 7;\n        r12++;\n        rbx += 3;\n        ebp += 0x30;\n        if (r12 >= rcx) {\n            goto label_82;\n        }\n        esi = edx;\nlabel_29:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = bpl;\n        }\n        ebp = *((r8 + r12));\n        rbx++;\n    }\n    eax = esi;\n    eax ^= 1;\n    eax &= r10d;\n    if (dil != 0) {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n    }\n    r12++;\n    if (r12 < rcx) {\n        if (al == 0) {\n            goto label_83;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x27;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            *((r15 + rbx + 1)) = 0x27;\n        }\n        rbx += 2;\n        edi = 0;\n        r10d = 0;\n        goto label_29;\n    }\n    r13d = *((rsp + 0x30));\n    goto label_16;\nlabel_81:\n    r13d = r11d;\n    *((rsp + 8)) = al;\n    r11 = r9;\n    goto label_12;\nlabel_64:\n    rbx += 4;\n    r10d = eax;\n    r13d = 0;\n    goto label_11;\n    if (ebp != 0) {\n        goto label_30;\n    }\n    *((rsp + 8)) = 1;\n    do {\n        if (r14 != 0) {\n            goto label_84;\n        }\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 1;\n        r13d = 2;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x40c26f;\n        goto label_21;\n        if (ebp != 0) {\n            goto label_85;\n        }\n        if (r14 == 0) {\n            goto label_86;\n        }\n        *(r15) = 0x22;\n        r10d = 0;\n        *((rsp + 0x1f)) = 1;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\nlabel_38:\n        *((rsp + 0x6c)) = 0;\n        ebx = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x40ad0c;\n        goto label_21;\n        if (r14 != 0) {\n            *((rsp + 8)) = r11;\n            rax = fcn_00405440 (0x40ad1d, r13d);\n            *((rsp + 0xd8)) = rax;\n            rax = fcn_00405440 (0x40c26f, r13d);\n            r11 = *((rsp + 8));\n            *((rsp + 0xe0)) = rax;\n        }\n        ebx = 0;\n        if (ebp == 0) {\n            goto label_87;\n        }\nlabel_41:\n        *((rsp + 0x10)) = r11;\n        rax = strlen (*((rsp + 0xe0)));\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        r11 = *((rsp + 0x10));\n        *((rsp + 0x28)) = rax;\n        rax = *((rsp + 0xe0));\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x50)) = rax;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 8)) = 1;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 0;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 5;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x40ad0c;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 2;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x40c26f;\n        goto label_21;\n        eax = *((rsp + 0x10));\n        goto label_31;\n        eax = *((rsp + 0x10));\n        goto label_32;\n        eax = *((rsp + 0x10));\n        goto label_33;\n        edx = 0;\n        r13d = 0;\n        goto label_4;\n        goto label_34;\nlabel_66:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x30;\n        }\n        rax = rcx + 2;\n        if (r14 > rax) {\n            *((r15 + rcx + 2)) = 0x30;\n        }\n        rbx = rcx + 3;\n        goto label_35;\n        if (ebp != 0) {\n            goto label_88;\n        }\n        *((rsp + 8)) = 0;\n    } while (1);\nlabel_82:\n    r13d = *((rsp + 0x30));\n    goto label_1;\nlabel_59:\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\nlabel_83:\n    edi = 0;\n    goto label_29;\nlabel_76:\n    rdi = rbx;\n    edx = r13d;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    edx ^= 1;\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    dl &= *((rsp + 8));\nlabel_40:\n    if (rdi > 1) {\n        goto label_36;\n    }\n    goto label_37;\nlabel_86:\n    *((rsp + 0x58)) = 0;\n    r10d = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x6d)) = 0;\n    goto label_38;\nlabel_65:\n    eax = r13d;\n    r13d = 0;\n    goto label_11;\nlabel_75:\n    ebp = *((rsi + rax));\n    if (bpl > 0x3e) {\n        goto label_39;\n    }\n    rsi = 0x7000a38200000000;\n    if (((rsi >> rbp) & 1) >= 0) {\n        goto label_39;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_51;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x3f;\n    }\n    rdx = rbx + 1;\n    if (r14 > rdx) {\n        *((r15 + rbx + 1)) = 0x22;\n    }\n    rdx = rbx + 2;\n    if (r14 > rdx) {\n        *((r15 + rbx + 2)) = 0x22;\n    }\n    rdx = rbx + 3;\n    if (r14 > rdx) {\n        *((r15 + rbx + 3)) = 0x3f;\n    }\n    rbx += 4;\n    edx = 0;\n    r13d = 0;\n    r12 = rax;\n    goto label_35;\nlabel_77:\n    rdi = rbx;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r13d = 0;\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    edx = *((rsp + 8));\n    goto label_40;\nlabel_78:\n    r9 = *((rsp + 0x30));\n    rsi = r15;\n    rcx = rbp;\n    rax = rbx;\n    rdi = rbx;\n    r8 = *((rsp + 0x78));\n    r10d = *((rsp + 0x6e));\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r11d = *((rsp + 0x38));\n    if (rsi >= r9) {\n        goto label_89;\n    }\n    if (*(rcx) != 0) {\n        goto label_90;\n    }\n    goto label_89;\n    do {\n        if (*((r8 + rax)) == 0) {\n            goto label_91;\n        }\nlabel_90:\n        rax++;\n        rdx = r12 + rax;\n    } while (rdx < r9);\nlabel_91:\n    rdi = rax;\nlabel_89:\n    edx = *((rsp + 8));\n    r13d = 0;\n    goto label_40;\nlabel_87:\n    rax = *((rsp + 0xd8));\n    eax = *(rax);\n    if (al == 0) {\n        goto label_41;\n    }\n    rdx = *((rsp + 0xd8));\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = al;\n        }\n        rbx++;\n        eax = *((rdx + rbx));\n    } while (al != 0);\n    goto label_41;\nlabel_61:\n    r13d = r11d;\n    eax = 0;\n    r11 = r9;\n    goto label_42;\nlabel_85:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 1;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x40ad0c;\n    goto label_21;\nlabel_51:\n    r13d = r11d;\n    r11 = r9;\n    goto label_43;\nlabel_72:\n    edx = eax;\nlabel_45:\n    rax = *((rsp + 0x50));\n    if (rax == 0) {\n        goto label_92;\n    }\n    if (dl == 0) {\n        goto label_92;\n    }\n    edx = *(rax);\n    if (dl == 0) {\n        goto label_92;\n    }\n    rax -= rbx;\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = dl;\n        }\n        rbx++;\n        edx = *((rax + rbx));\n    } while (dl != 0);\nlabel_92:\n    if (r14 <= rbx) {\n        goto label_44;\n    }\n    *((r15 + rbx)) = 0;\n    goto label_44;\nlabel_55:\n    r13d = r11d;\n    r11 = r9;\n    goto label_12;\nlabel_62:\n    r13d = r11d;\n    r11 = r9;\n    rsp + 8 = (r13d == 2) ? 1 : 0;\n    goto label_12;\nlabel_73:\n    rax = fcn_00405540 (r15, *((rsp + 0x78)), *((rsp + 0x40)), r11, 5, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\n    goto label_44;\nlabel_74:\n    edx = *((rsp + 0x6d));\n    goto label_45;\nlabel_71:\n    r13d = 2;\n    goto label_12;\nlabel_84:\n    r10d = 0;\n    eax = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x58)) = 0;\n    goto label_46;\nlabel_80:\n    rdx = r14;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_88:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x40c26f;\n    goto label_21;\nlabel_60:\n    r13d = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00406770",
            "funcStartAddr": "0x406770",
            "funcEndAddr": "0x40b1f9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x406770 */\n#include <stdint.h>\n \nuint64_t fcn_00406770 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_30h;\n    int64_t var_18h;\n    int64_t var_24h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    do {\n        abort ();\n        r15 = (int64_t) edi;\n        r14 = rdx;\n        *((rsp + 8)) = rsi;\n        rax = errno_location ();\n        rbx = *(0x0060e2f8);\n        r13 = rax;\n        eax = *(rax);\n        *((rsp + 0x18)) = eax;\n    } while (r15d < 0);\n    if (*(0x0060e310) > r15d) {\n        goto label_0;\n    }\n    if (r15d == 0x7fffffff) {\n        goto label_1;\n    }\n    r12d = r15 + 1;\n    rsi = (int64_t) r12d;\n    rsi <<= 4;\n    if (rbx == 0x60e300) {\n        goto label_2;\n    }\n    rax = fcn_004076f0 (rbx, rsi);\n    *(0x0060e2f8) = rax;\n    rbx = rax;\n    do {\n        rdi = *(0x0060e310);\n        edx -= edi;\n        rdi <<= 4;\n        rdx = (int64_t) edx;\n        rdi += rbx;\n        rdx <<= 4;\n        memset (rdi, 0, r12d);\n        *(0x0060e310) = r12d;\nlabel_0:\n        eax = *((rbp + 4));\n        r15 <<= 4;\n        rbx += r15;\n        r15 = rbp + 8;\n        eax |= 1;\n        r11 = *(rbx);\n        r12 = *((rbx + 8));\n        *((rsp + 0x24)) = eax;\n        rsi = r11;\n        *((rsp + 0x30)) = r11;\n        rax = fcn_00405540 (r12, rsi, *((rsp + 0x28)), r14, *(rbp), eax);\n        r11 = *((rsp + 0x10));\n        if (r11 <= rax) {\n            rsi = rax + 1;\n            *(rbx) = rsi;\n            if (r12 != 0x60e780) {\n                *((rsp + 0x10)) = rsi;\n                free (r12);\n                rsi = *((rsp + 0x10));\n            }\n            *((rsp + 0x10)) = rsi;\n            rax = fcn_00407690 (*((rsp + 0x10)));\n            *((rbx + 8)) = rax;\n            rdi = rax;\n            r12 = rax;\n            fcn_00405540 (rdi, *((rsp + 0x30)), *((rsp + 0x28)), r14, *(rbp), *((rsp + 0x3c)));\n        }\n        eax = *((rsp + 0x18));\n        *(r13) = eax;\n        rax = r12;\n        return rax;\nlabel_2:\n        rax = fcn_004076f0 (0, rsi);\n        __asm (\"movdqa xmm0, xmmword [0x0060e300]\");\n        rbx = rax;\n        *(0x0060e2f8) = rax;\n        __asm (\"movups xmmword [rax], xmm0\");\n    } while (1);\nlabel_1:\n    return fcn_004078e0 ();\n}\n"
        },
        {
            "funcName": "fcn_00406d70",
            "funcStartAddr": "0x406d70",
            "funcEndAddr": "0x40bc62",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x406d70 */\n#include <stdint.h>\n \nint64_t fcn_00406d70 (int64_t arg1, int64_t arg2) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    do {\n        abort ();\nlabel_0:\n    } while (esi == 0xa);\n    rax = rdx;\n    *(rsp) = esi;\n    *((rsp + 4)) = 0;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x30)) = 0;\n    fcn_00406770 (rdi, rax, 0xffffffffffffffff, rsp);\n    return rax;\n    rdx = rsi;\n    esi = edi;\n    edi = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00406d99",
            "funcStartAddr": "0x406d99",
            "funcEndAddr": "0x406e00",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x406d99 */\n#include <stdint.h>\n \nint64_t fcn_00406d99 (int64_t arg_8h, int64_t arg_10h, int64_t arg_20h, int64_t arg_30h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg7, int64_t arg8, int64_t arg9) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    xmm2 = arg9;\n    *(rax) &= al;\n    ecx = edx;\n    __asm (\"movdqa xmm0, xmmword [0x0060e880]\");\n    __asm (\"movdqa xmm1, xmmword [0x0060e890]\");\n    __asm (\"movdqa xmm2, xmmword [0x0060e8a0]\");\n    ecx &= 0x1f;\n    *((rsp + 0x30)) = rax;\n    eax = edx;\n    al >>= 5;\n    *(rsp) = xmm0;\n    eax = (int32_t) al;\n    *((rsp + 0x10)) = xmm1;\n    r8 = rsp + rax*4 + 8;\n    *((rsp + 0x20)) = xmm2;\n    edx = *(r8);\n    eax = *(r8);\n    eax >>= cl;\n    eax = ~eax;\n    eax &= 1;\n    eax <<= cl;\n    eax ^= edx;\n    *(r8) = eax;\n    fcn_00406770 (0, rdi, rsi, rsp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00406e10",
            "funcStartAddr": "0x406e10",
            "funcEndAddr": "0x406ea1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x406e10 */\n#include <stdint.h>\n \nint64_t fcn_00406e10 (int64_t arg1, int64_t arg7, int64_t arg8, int64_t arg9) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_20h;\n    int64_t var_30h;\n    rdi = arg1;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    xmm2 = arg9;\n    do {\n        rax = imp.__libc_start_main;\n        *(rax) &= al;\n        edx = 0x3a;\n        rsi = 0xffffffffffffffff;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00406e40",
            "funcStartAddr": "0x406e40",
            "funcEndAddr": "0x40be5a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x406e40 */\n#include <stdint.h>\n \nint64_t fcn_00406e40 (int64_t arg1, uint32_t arg2, int64_t arg3) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    do {\n        abort ();\n    } while (esi == 0xa);\n    rcx = 0x400000000000000;\n    rax = rdx;\n    *(rsp) = esi;\n    *((rsp + 8)) = rcx;\n    *((rsp + 4)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x30)) = 0;\n    fcn_00406770 (rdi, rax, 0xffffffffffffffff, rsp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00406fc0",
            "funcStartAddr": "0x406fc0",
            "funcEndAddr": "0x406fd6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x406fc0 */\n#include <stdint.h>\n \nvoid fcn_00406fc0 (int64_t arg1) {\n    rdi = arg1;\n    rsi = rdi;\n    ecx = 0x60e2c0;\n    rdx = 0xffffffffffffffff;\n    edi = 0;\n    return void (*0x406770)() ();\n}\n"
        },
        {
            "funcName": "fcn_00406fe0",
            "funcStartAddr": "0x406fe0",
            "funcEndAddr": "0x40703e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x406fe0 */\n#include <stdint.h>\n \nuint64_t fcn_00406fe0 (int64_t arg1, uint32_t arg2, uint32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13d = edi;\n    r12 = rsi;\n    rbx = rdx;\n    do {\nlabel_0:\n        rax = read (r13d, r12, rbx);\n        if (rax >= 0) {\n            goto label_1;\n        }\n        rax = errno_location ();\n        eax = *(rax);\n    } while (eax == 4);\n    if (rbx > 0x7fffe000) {\n        if (eax != 0x16) {\n            goto label_1;\n        }\n        ebx = 0x7fffe000;\n        goto label_0;\n    }\nlabel_1:\n    rax = rbp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00407040",
            "funcStartAddr": "0x407040",
            "funcEndAddr": "0x40709e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x407040 */\n#include <stdint.h>\n \nuint64_t fcn_00407040 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13d = edi;\n    r12 = rsi;\n    rbx = rdx;\n    do {\nlabel_0:\n        rax = write (r13d, r12, rbx);\n        if (rax >= 0) {\n            goto label_1;\n        }\n        rax = errno_location ();\n        eax = *(rax);\n    } while (eax == 4);\n    if (eax == 0x16) {\n        if (rbx <= 0x7fffe000) {\n            goto label_1;\n        }\n        ebx = 0x7fffe000;\n        goto label_0;\n    }\nlabel_1:\n    rax = rbp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004070a0",
            "funcStartAddr": "0x4070a0",
            "funcEndAddr": "0x4070ee",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x4070a0 */\n#include <stdint.h>\n \nuint64_t fcn_004070a0 (uint32_t arg1) {\n    rdi = arg1;\n    ebx = edi;\n    if (edi > 2) {\n        eax = ebx;\n        return eax;\n    }\n    eax = fcn_00409740 (rdi, rsi, rdx);\n    r12d = eax;\n    rax = errno_location ();\n    ebx = r12d;\n    r13d = *(rax);\n    close (ebx);\n    eax = ebx;\n    *(rbp) = r13d;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004070f0",
            "funcStartAddr": "0x4070f0",
            "funcEndAddr": "0x40c724",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x4070f0 */\n#include <stdint.h>\n \nvoid fcn_004070f0 (int64_t arg_20h, int64_t arg_30h, int64_t arg_8h_2, int64_t arg_10h, int64_t arg_8h, int64_t arg_8h_3, int64_t arg_10h_2, int64_t arg_18h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_30h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    eax = abort ();\n    r12 = r9;\n    rbx = r8;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    r9 = rcx;\n    r8 = rdx;\n    rcx = rsi;\n    edx = \"%s (%s) %s\\n\";\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    do {\n        edx = 5;\n        rax = dcgettext (0, 0x40ba6b);\n        r8d = 0x7e1;\n        edx = \"Copyright %s %d Free Software Foundation, Inc.\";\n        rdi = rbp;\n        rcx = rax;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        edx = 5;\n        rax = dcgettext (0, \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\");\n        rsi = rbp;\n        rdi = rax;\n        eax = fputs_unlocked ();\n        if (r12 > 9) {\n            goto label_2;\n        }\n        /* switch table (10 cases) at 0x40bd58 */\nlabel_1:\n        r8 = rcx;\n        esi = 1;\n        rcx = rdx;\n        eax = 0;\n        edx = \"%s %s\\n\";\n        fprintf_chk ();\n    } while (1);\n    r9 = *((rbx + 0x38));\n    rax = *((rbx + 0x10));\n    edx = 5;\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    r15 = *((rbx + 0x20));\n    *((rsp + 0x10)) = r9;\n    r14 = *((rbx + 0x18));\n    rbx = *(rbx);\n    *(rsp) = rax;\n    *((rsp + 8)) = r8;\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n    do {\n        r9 = *((rsp + 0x18));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        r9 = *((rsp + 0x30));\n        r8 = *((rsp + 0x38));\n        fprintf_chk ();\n        return rax;\n        r10 = *((rbx + 0x40));\n        r9 = *((rbx + 0x38));\n        edx = 5;\n        rax = *((rbx + 0x10));\n        r8 = *((rbx + 8));\n        r13 = *((rbx + 0x30));\n        r12 = *((rbx + 0x28));\n        *((rsp + 0x18)) = r10;\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        *((rsp + 0x10)) = r9;\n        *(rsp) = rax;\n        rbx = *(rbx);\n        *((rsp + 8)) = r8;\nlabel_0:\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        r10 = *((rsp + 0x18));\n    } while (1);\n    rbx = *(rbx);\n    edx = 5;\n    rax = dcgettext (0, \"Written by %s.\\n\");\n    rdi = rbp;\n    esi = 1;\n    rcx = rbx;\n    rdx = rax;\n    eax = 0;\n    void (*0x401df0)() ();\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s and %s.\\n\");\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x401df0)() ();\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, and %s.\\n\");\n    r9 = r13;\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x401df0)() ();\n    edx = 5;\n    r14 = *((rbx + 0x18));\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\nand %s.\\n\");\n    do {\n        rdx = rax;\n        r9 = r13;\n        r8 = r12;\n        rcx = rbx;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r15 = *((rbx + 0x20));\n        edx = 5;\n        r14 = *((rbx + 0x18));\n        r13 = *((rbx + 0x10));\n        r12 = *((rbx + 8));\n        rbx = *(rbx);\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n    } while (1);\n    r8 = *((rbx + 8));\n    r12 = *((rbx + 0x28));\n    edx = 5;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *(rsp) = r8;\n    r13 = *((rbx + 0x10));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n    r9 = r13;\n    do {\n        r8 = *((rsp + 0x20));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r9 = *((rbx + 0x10));\n        r13 = *((rbx + 0x30));\n        edx = 5;\n        r12 = *((rbx + 0x28));\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        r8 = *((rbx + 8));\n        *((rsp + 8)) = r9;\n        rbx = *(rbx);\n        *(rsp) = r8;\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n        r9 = *((rsp + 0x28));\n    } while (1);\nlabel_2:\n    r10 = *((rbx + 0x40));\n    r9 = *((rbx + 0x38));\n    edx = 5;\n    esi = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    rax = *((rbx + 0x10));\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    *((rsp + 0x18)) = r10;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *((rsp + 0x10)) = r9;\n    *(rsp) = rax;\n    rbx = *(rbx);\n    *((rsp + 8)) = r8;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00407550",
            "funcStartAddr": "0x407550",
            "funcEndAddr": "0x40760c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x407550 */\n#include <stdint.h>\n \nuint64_t fcn_00407550 (int64_t arg_b0h, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_70h;\n    int64_t var_90h;\n    int64_t var_98h;\n    r8 = arg5;\n    r9 = arg6;\n    r11d = 0;\n    rax = rsp + 0xb0;\n    *((rsp + 0x90)) = r8;\n    r10 = rsp + 0xb0;\n    r8d = 0x20;\n    *((rsp + 0x10)) = rax;\n    rax = rsp + 0x70;\n    *((rsp + 0x98)) = r9;\n    r9d = 0;\n    *((rsp + 8)) = 0x20;\n    *((rsp + 0x18)) = rax;\n    while (r8d <= 0x2f) {\n        eax = r8d;\n        r11 = rsp + 0x70;\n        r8d += 8;\n        rax += r11;\n        r11d = 1;\n        rax = *(rax);\n        *((rsp + r9*8 + 0x20)) = rax;\n        if (rax == 0) {\n            goto label_1;\n        }\nlabel_0:\n        r9++;\n        if (r9 == 0xa) {\n            goto label_1;\n        }\n    }\n    rax = r10;\n    r10 += 8;\n    rax = *(rax);\n    *((rsp + r9*8 + 0x20)) = rax;\n    if (rax != 0) {\n        goto label_0;\n    }\nlabel_1:\n    if (r11b != 0) {\n        *((rsp + 8)) = r8d;\n    }\n    fcn_004070f0 (rdi, rsi, rdx, rcx, rsp + 0x20, r9);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00407690",
            "funcStartAddr": "0x407690",
            "funcEndAddr": "0x4076aa",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x407690 */\n#include <stdint.h>\n \nuint64_t fcn_00407690 (uint32_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = malloc (rdi);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    return fcn_004078e0 ();\n}\n"
        },
        {
            "funcName": "fcn_004076f0",
            "funcStartAddr": "0x4076f0",
            "funcEndAddr": "0x407726",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x4076f0 */\n#include <stdint.h>\n \nuint64_t fcn_004076f0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rsi;\n    if (rsi == 0) {\n        if (rdi != 0) {\n            goto label_0;\n        }\n    }\n    rax = realloc (rdi, rbx);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_1;\n        }\n    }\n    return rax;\nlabel_0:\n    eax = free (rdi);\n    eax = 0;\n    return rax;\nlabel_1:\n    return fcn_004078e0 ();\n}\n"
        },
        {
            "funcName": "fcn_00407860",
            "funcStartAddr": "0x407860",
            "funcEndAddr": "0x40788e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x407860 */\n#include <stdint.h>\n \nint64_t fcn_00407860 (int64_t arg1, size_t size) {\n    rdi = arg1;\n    rsi = size;\n    rax = rdi;\n    rdx:rax = rax * rsi;\n    __asm (\"seto dl\");\n    if (rax >= 0) {\n        edx = (int32_t) dl;\n        if (rdx != 0) {\n            goto label_0;\n        }\n        rax = calloc (rdi, rsi);\n        if (rax == 0) {\n            goto label_0;\n        }\n        return rax;\n    }\nlabel_0:\n    return fcn_004078e0 ();\n}\n"
        },
        {
            "funcName": "fcn_00407890",
            "funcStartAddr": "0x407890",
            "funcEndAddr": "0x4078b8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x407890 */\n#include <stdint.h>\n \nuint64_t fcn_00407890 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdi = rsi;\n    rbx = rsi;\n    rax = fcn_00407690 (rdi);\n    rdx = rbx;\n    rsi = rbp;\n    rdi = rax;\n    return memcpy ();\n}\n"
        },
        {
            "funcName": "fcn_004078c0",
            "funcStartAddr": "0x4078c0",
            "funcEndAddr": "0x4078d3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x4078c0 */\n#include <stdint.h>\n \nvoid fcn_004078c0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    strlen (rdi);\n    rdi = rbx;\n    rsi = rax + 1;\n    return void (*0x407890)() ();\n}\n"
        },
        {
            "funcName": "fcn_004078e0",
            "funcStartAddr": "0x4078e0",
            "funcEndAddr": "0x407911",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x4078e0 */\n#include <stdint.h>\n \nuint64_t fcn_004078e0 (void) {\n    edx = 5;\n    rax = dcgettext (0, \"memory exhausted\");\n    rcx = rax;\n    eax = 0;\n    error (*(0x0060e2b0), 0, 0x409c49);\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_00407920",
            "funcStartAddr": "0x407920",
            "funcEndAddr": "0x4079f0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x407920 */\n#include <stdint.h>\n \nuint64_t fcn_00407920 (int64_t arg_50h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg6) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r9 = arg6;\n    r15 = rcx;\n    r14 = rdx;\n    edx = esi;\n    r13 = r9;\n    r12 = rdi;\n    ebx = *((rsp + 0x50));\n    eax = fcn_00407a20 (rdi, 0, edx, rsp + 8, r8);\n    if (eax != 0) {\n        goto label_1;\n    }\n    rbp = *((rsp + 8));\n    if (rbp >= r14) {\n        if (rbp <= r15) {\n            goto label_2;\n        }\n    }\n    rax = errno_location ();\n    r14 = rax;\n    eax -= eax;\n    eax &= 0xffffffd7;\n    eax += 0x4b;\n    *(r14) = eax;\n    do {\nlabel_0:\n        rax = fcn_00406fc0 (r12);\n        esi = *(r14);\n        rcx = r13;\n        edx = \"%s: %s\";\n        r8 = rax;\n        eax = 0;\n        if (esi == 0x16) {\n            esi = eax;\n        }\n        eax = 1;\n        if (ebx == 0) {\n            ebx = eax;\n        }\n        eax = 0;\n        error (ebx, rsi, rdx);\n        rbp = *((rsp + 8));\nlabel_2:\n        rax = rbp;\n        return rax;\nlabel_1:\n        rax = errno_location ();\n        r14 = rax;\n        if (ebp == 1) {\n            goto label_3;\n        }\n    } while (ebp != 3);\n    *(rax) = 0;\n    goto label_0;\nlabel_3:\n    *(rax) = 0x4b;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_004079f0",
            "funcStartAddr": "0x4079f0",
            "funcEndAddr": "0x407a11",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x4079f0 */\n#include <stdint.h>\n \nvoid fcn_004079f0 (int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    fcn_00407920 (rdi, 0xa, rsi, rdx, rcx, r8);\n}\n"
        },
        {
            "funcName": "fcn_00407a20",
            "funcStartAddr": "0x407a20",
            "funcEndAddr": "0x407e54",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x407a20 */\n#include <stdint.h>\n \nuint64_t fcn_00407a20 (int64_t arg1, int64_t arg2, uint32_t arg3, struct sigaction * arg4, int64_t arg5) {\n    int64_t var_8h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    if (edx > 0x24) {\n        goto label_13;\n    }\n    r15 = rsi;\n    rax = rsp + 0x18;\n    *(rsp) = edx;\n    r14 = rcx;\n    r13 = r8;\n    if (rsi == 0) {\n        r15 = rax;\n    }\n    errno_location ();\n    *(rax) = 0;\n    r12 = rax;\n    ebx = *(rbp);\n    rax = ctype_b_loc ();\n    edx = *(rsp);\n    rsi = *(rax);\n    rax = rbp;\n    while ((*((rsi + rcx*2 + 1)) & 0x20) != 0) {\n        rax++;\n        ebx = *(rax);\n        ecx = (int32_t) bl;\n    }\n    if (bl == 0x2d) {\n        goto label_1;\n    }\n    ecx = 0;\n    rsi = r15;\n    rdi = rbp;\n    rax = strtoul_internal ();\n    r8 = *(r15);\n    rbx = rax;\n    if (r8 == rbp) {\n        goto label_14;\n    }\n    eax = *(r12);\n    if (eax != 0) {\n        goto label_15;\n    }\n    ebp = 0;\n    do {\n        if (r13 != 0) {\n            r12d = *(r8);\n            if (r12b != 0) {\n                goto label_16;\n            }\n        }\nlabel_2:\n        *(r14) = rbx;\nlabel_0:\n        eax = ebp;\n        return rax;\nlabel_15:\n    } while (eax == 0x22);\n    do {\nlabel_1:\n        goto label_0;\nlabel_14:\n        *(rsp) = r8;\n    } while (r13 == 0);\n    r12d = *(rbp);\n    if (r12b == 0) {\n        goto label_1;\n    }\n    esi = (int32_t) r12b;\n    ebp = 0;\n    ebx = 1;\n    rax = strchr (r13, rsi);\n    r8 = *(rsp);\n    if (rax == 0) {\n        goto label_1;\n    }\nlabel_4:\n    edx = r12 - 0x45;\n    if (dl <= 0x2f) {\n        rax = 0x814400308945;\n        *(rsp) = dl;\n        if (((rax >> rdx) & 1) >= 0) {\n            goto label_17;\n        }\n        *((rsp + 8)) = r8;\n        rax = strchr (r13, 0x30);\n        r8 = *((rsp + 8));\n        if (rax == 0) {\n            goto label_17;\n        }\n        eax = *((r8 + 1));\n        if (al == 0x44) {\n            goto label_18;\n        }\n        if (al == 0x69) {\n            goto label_19;\n        }\n        edx = *(rsp);\n        if (al == 0x42) {\n            goto label_18;\n        }\n        /* switch table (67 cases) at 0x40be38 */\n    }\nlabel_17:\n    esi = 1;\n    edx = 0x400;\nlabel_7:\n    r12d -= 0x42;\n    if (r12b > 0x35) {\n        goto label_20;\n    }\n    r12d = (int32_t) r12b;\n    /* switch table (54 cases) at 0x40bfb8 */\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    rax = rbx;\n    rdx:rax = rax * rcx;\n    if (r12b overflow 0x35) {\n        goto label_5;\n    }\n    rdx:rax = rax * rcx;\n    if (r12b overflow 0x35) {\n        goto label_5;\n    }\n    rbx = rax;\n    do {\nlabel_3:\n        rsi = (int64_t) esi;\n        eax = ebp;\n        r8 += rsi;\n        eax |= 2;\n        *(r15) = r8;\n        if (*(r8) != 0) {\n        }\n        goto label_2;\n        esi = 1;\n        edx = 0x400;\n        rax = rbx;\n        rdx:rax = rax * rdx;\n        rbx = rax;\n    } while (*(r8) !overflow 0);\nlabel_5:\n    rbx |= 0xffffffffffffffff;\n    goto label_3;\nlabel_16:\n    esi = (int32_t) r12b;\n    *(rsp) = r8;\n    rax = strchr (r13, rsi);\n    r8 = *(rsp);\n    if (rax != 0) {\n        goto label_4;\n    }\nlabel_20:\n    *(r14) = rbx;\n    ebp |= 2;\n    goto label_0;\n    if (rbx < 0) {\n        goto label_5;\n    }\n    rbx += rbx;\n    goto label_3;\n    esi = 1;\n    rax = rbx;\n    rax >>= 0x37;\n    if (rax != 0) {\n        goto label_5;\n    }\n    rbx <<= 9;\n    goto label_3;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 7;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (rbx overflow 0) {\n            goto label_21;\n        }\nlabel_8:\n        edi--;\n    } while (edi != 0);\nlabel_6:\n    ebp |= r9d;\n    goto label_3;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 8;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (ebp overflow 0) {\n            goto label_22;\n        }\nlabel_11:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 4;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_23;\n        }\nlabel_9:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 5;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_24;\n        }\nlabel_12:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 6;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_25;\n        }\nlabel_10:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    rax = rbx;\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rbx = rax;\n    eax = 0;\n    ebp |= eax;\n    goto label_3;\n    rax = rbx;\n    rax >>= 0x36;\n    if (rax != 0) {\n        goto label_5;\n    }\n    rbx <<= 0xa;\n    goto label_3;\n    esi = 1;\n    goto label_3;\nlabel_18:\n    esi = 2;\n    edx = 0x3e8;\n    goto label_7;\nlabel_19:\n    esi = 0;\n    edx = 0x400;\n    sil = (*((r8 + 2)) == 0x42) ? 1 : 0;\n    esi = rsi + rsi + 1;\n    goto label_7;\nlabel_21:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_8;\nlabel_26:\n    eax = 1;\n    rbx |= 0xffffffffffffffff;\n    ebp |= eax;\n    goto label_3;\nlabel_23:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_9;\nlabel_25:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_10;\nlabel_22:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_11;\nlabel_24:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_12;\nlabel_13:\n    return assert_fail (\"0 <= strtol_base && strtol_base <= 36\", \"lib/xstrtol.c\", 0x60, \"xstrtoumax\");\n}\n"
        },
        {
            "funcName": "fcn_00407e60",
            "funcStartAddr": "0x407e60",
            "funcEndAddr": "0x407edb",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x407e60 */\n#include <stdint.h>\n \nuint64_t fcn_00407e60 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    eax = fileno (rdi);\n    rdi = rbx;\n    if (eax < 0) {\n        goto label_1;\n    }\n    eax = freading ();\n    while (rax != -1) {\n        eax = fcn_00407ee0 (rbx);\n        if (eax == 0) {\n            goto label_2;\n        }\n        rax = errno_location ();\n        r12d = *(rax);\n        fclose (rbx);\n        if (r12d != 0) {\n            goto label_3;\n        }\nlabel_0:\n        return rax;\n        eax = fileno (rbx);\n        esi = 0;\n        edx = 1;\n        edi = eax;\n        rax = lseek ();\n    }\nlabel_2:\n    rdi = rbx;\nlabel_1:\n    void (*0x401ac0)() ();\nlabel_3:\n    *(rbp) = r12d;\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00407ee0",
            "funcStartAddr": "0x407ee0",
            "funcEndAddr": "0x407f20",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x407ee0 */\n#include <stdint.h>\n \nuint32_t fcn_00407ee0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    if (rdi != 0) {\n        eax = freading ();\n        if (eax == 0) {\n            goto label_0;\n        }\n        if ((*(rbx) & 0x100) != 0) {\n            goto label_1;\n        }\n    }\nlabel_0:\n    rdi = rbx;\n    void (*0x401ca0)() ();\nlabel_1:\n    fcn_00407f20 (rbx, 0, 1);\n    rdi = rbx;\n    return fflush ();\n}\n"
        },
        {
            "funcName": "fcn_00407f20",
            "funcStartAddr": "0x407f20",
            "funcEndAddr": "0x407f77",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x407f20 */\n#include <stdint.h>\n \nint64_t fcn_00407f20 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rax = *((rdi + 8));\n    while (*((rdi + 0x28)) != rax) {\nlabel_0:\n        void (*0x401d90)() ();\n        rax = *((rdi + 0x20));\n    }\n    if (*((rdi + 0x48)) != 0) {\n        goto label_0;\n    }\n    r12d = edx;\n    rbx = rdi;\n    eax = fileno (rdi);\n    edx = r12d;\n    rsi = rbp;\n    edi = eax;\n    rax = lseek ();\n    if (rax != -1) {\n        *(rbx) &= 0xffffffef;\n        *((rbx + 0x90)) = rax;\n        eax = 0;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00407f80",
            "funcStartAddr": "0x407f80",
            "funcEndAddr": "0x40805f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x407f80 */\n#include <stdint.h>\n \nuint64_t fcn_00407f80 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r11 = rdi + 8;\n    r12d = *((rsi + 0x2c));\n    ebp = *(rsi);\n    rbx = *((rsi + 0x30));\n    r9d = r12d;\n    r10d = ebp;\n    r8 = rbx;\nlabel_1:\n    if (r10d <= r8d) {\n        goto label_2;\n    }\nlabel_0:\n    if (r9d >= r8d) {\n        goto label_2;\n    }\n    r14d = r10d;\n    edx = r8d;\n    r14d -= r8d;\n    edx -= r9d;\n    if (r14d <= edx) {\n        goto label_3;\n    }\n    rcx = (int64_t) r9d;\n    r10d -= edx;\n    edx--;\n    rdx += rcx;\n    rax = rdi + rcx*8;\n    r13 = r11 + rdx*8;\n    rdx = (int64_t) r10d;\n    rdx -= rcx;\n    do {\n        rcx = *(rax);\n        r14 = *((rax + rdx*8));\n        *(rax) = r14;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (r13 != rax);\n    if (r10d > r8d) {\n        goto label_0;\n    }\nlabel_2:\n    eax = ebp;\n    *((rsi + 0x30)) = ebp;\n    eax -= r8d;\n    r12d += eax;\n    *((rsi + 0x2c)) = r12d;\n    r12 = rbx;\n    r13 = rbx;\n    r14 = rbx;\n    r15 = rbx;\n    return rax;\nlabel_3:\n    rdx = (int64_t) r9d;\n    ecx = r14 - 1;\n    rcx += rdx;\n    rax = rdi + rdx*8;\n    r13 = r11 + rcx*8;\n    rcx = rbx;\n    rcx -= rdx;\n    rdx = rcx;\n    do {\n        rcx = *(rax);\n        r15 = *((rax + rdx*8));\n        *(rax) = r15;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (rax != r13);\n    r9d += r14d;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00408060",
            "funcStartAddr": "0x408060",
            "funcEndAddr": "0x40867c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x408060 */\n#include <stdint.h>\n \nint64_t fcn_00408060 (int64_t arg_90h, int64_t arg_98h, int64_t arg_a0h, signed int64_t arg1, int64_t arg2, char * arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_ch;\n    int64_t var_10h;\n    void * ptr;\n    int64_t var_20h;\n    int64_t var_28h;\n    char * s;\n    int64_t var_38h;\n    int64_t c;\n    signed int64_t var_40h;\n    int64_t var_44h;\n    void * var_48h;\n    size_t nmeb;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rax = *((rsp + 0x90));\n    *((rsp + 0x40)) = edi;\n    *((rsp + 0x28)) = rsi;\n    r14 = *((rax + 0x20));\n    *((rsp + 0x30)) = rdx;\n    *(rsp) = rcx;\n    eax = *(r14);\n    *((rsp + 0x20)) = r8;\n    *((rsp + 0xc)) = r9d;\n    *((rsp + 0x3f)) = al;\n    if (al == 0x3d) {\n        goto label_11;\n    }\n    if (al == 0) {\n        goto label_11;\n    }\n    do {\n        rbp++;\n        eax = *(rbp);\n        if (al == 0) {\n            goto label_12;\n        }\n    } while (al != 0x3d);\nlabel_12:\n    r13 = rbp;\n    r13 -= r14;\nlabel_6:\n    rbx = *(rsp);\n    r12d = 0;\n    rax = *(rbx);\n    *((rsp + 0x10)) = rax;\n    r15 = rax;\n    if (rax != 0) {\n        goto label_13;\n    }\n    goto label_14;\n    do {\n        r12 = (int64_t) r8d;\nlabel_13:\n        eax = strncmp (r15, r14, r13);\n        if (eax == 0) {\n            rax = strlen (r15);\n            if (rax == r13) {\n                goto label_15;\n            }\n        }\n        rbx += 0x20;\n        r15 = *(rbx);\n        r8d = r12 + 1;\n    } while (r15 != 0);\n    rcx = *(rsp);\n    *((rsp + 0x4c)) = r8d;\n    r9d = 0;\n    ebx = 0;\n    *((rsp + 0x44)) = 0xffffffff;\n    r15 = r9;\n    *((rsp + 0x38)) = 0;\n    *((rsp + 0x48)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x10)) = rbp;\n    do {\n        eax = strncmp (*((rsp + 0x10)), r14, r13);\n        if (eax == 0) {\n            if (rbx == 0) {\n                goto label_16;\n            }\n            eax = *((rsp + 0xc));\n            if (eax == 0) {\n                goto label_17;\n            }\nlabel_0:\n            r11d = *((rsp + 0x38));\n            if (r11d != 0) {\n                goto label_1;\n            }\n            r10d = *((rsp + 0x98));\n            if (r10d == 0) {\n                goto label_18;\n            }\n            if (*((rsp + 0x18)) == 0) {\n                goto label_19;\n            }\nlabel_3:\n            rax = *((rsp + 0x18));\n            *((rax + r15)) = 1;\n        }\nlabel_1:\n        rbp += 0x20;\n        rdi = *(rbp);\n        r15++;\n    } while (rdi != 0);\n    rbp = *((rsp + 0x10));\n    if (*((rsp + 0x18)) != 0) {\n        goto label_20;\n    }\n    r9d = *((rsp + 0x38));\n    if (r9d != 0) {\n        goto label_20;\n    }\n    if (rbx == 0) {\nlabel_14:\n        eax = *((rsp + 0xc));\n        if (eax != 0) {\n            rax = *((rsp + 0x90));\n            rcx = *((rsp + 0x28));\n            rax = *(rax);\n            rax = *((rcx + rax*8));\n            if (*((rax + 1)) == 0x2d) {\n                goto label_21;\n            }\n            esi = *((rsp + 0x3f));\n            rax = strchr (*((rsp + 0x30)), rsi);\n            rdx = rax;\n            eax = 0xffffffff;\n            if (rdx != 0) {\n                goto label_5;\n            }\n        }\nlabel_21:\n        ecx = *((rsp + 0x98));\n        if (ecx != 0) {\n            goto label_22;\n        }\nlabel_4:\n        rax = *((rsp + 0x90));\n        *((rax + 0x20)) = 0;\n        *(rax)++;\n        *((rax + 8)) = 0;\n        eax = 0x3f;\n        return rax;\n    }\n    r12d = *((rsp + 0x44));\nlabel_15:\n    rax = *((rsp + 0x90));\n    rcx = *((rsp + 0x90));\n    edx = *(rax);\n    *((rcx + 0x20)) = 0;\n    eax = rdx + 1;\n    *(rcx) = eax;\n    ecx = *((rbx + 8));\n    if (*(rbp) != 0) {\n        goto label_23;\n    }\n    if (ecx == 1) {\n        goto label_24;\n    }\nlabel_2:\n    rax = *((rsp + 0x20));\n    if (rax != 0) {\n        *(rax) = r12d;\n    }\n    rdx = *((rbx + 0x10));\n    eax = *((rbx + 0x18));\n    if (rdx != 0) {\n        *(rdx) = eax;\n        eax = 0;\n    }\nlabel_5:\n    return rax;\nlabel_17:\n    eax = *((rbp + 8));\n    if (*((rbx + 8)) != eax) {\n        goto label_0;\n    }\n    rax = *((rbp + 0x10));\n    if (*((rbx + 0x10)) != rax) {\n        goto label_0;\n    }\n    eax = *((rbp + 0x18));\n    if (*((rbx + 0x18)) != eax) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_23:\n    if (ecx == 0) {\n        goto label_25;\n    }\n    rax = *((rsp + 0x90));\n    rbp++;\n    *((rax + 0x10)) = rbp;\n    goto label_2;\nlabel_16:\n    *((rsp + 0x44)) = r15d;\n    rbx = rbp;\n    goto label_1;\nlabel_18:\n    *((rsp + 0x38)) = 1;\n    if (*((rsp + 0x18)) == 0) {\n        goto label_1;\n    }\n    goto label_3;\nlabel_22:\n    rax = *((rsp + 0x28));\n    edx = 5;\n    rbx = *(rax);\n    rax = dcgettext (0, \"%s: unrecognized option '%s%s'\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r14;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbx;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_4;\nlabel_20:\n    r8d = *((rsp + 0x98));\n    if (r8d != 0) {\n        edi = *((rsp + 0x38));\n        if (edi == 0) {\n            goto label_26;\n        }\n        rax = *((rsp + 0x28));\n        edx = 5;\n        rbx = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' is ambiguous\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r14;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbx;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        rax = *((rsp + 0x90));\n        r14 = *((rax + 0x20));\n    }\nlabel_9:\n    esi = *((rsp + 0x48));\n    if (esi != 0) {\n        goto label_27;\n    }\nlabel_7:\n    rax = strlen (r14);\n    r14 += rax;\n    rax = *((rsp + 0x90));\n    *((rax + 0x20)) = r14;\n    *(rax)++;\n    *((rax + 8)) = 0;\n    eax = 0x3f;\n    goto label_5;\nlabel_24:\n    if (eax >= *((rsp + 0x40))) {\n        goto label_28;\n    }\n    rcx = *((rsp + 0x90));\n    edx += 2;\n    rax = (int64_t) eax;\n    *(rcx) = edx;\n    rcx = *((rsp + 0x28));\n    rax = *((rcx + rax*8));\n    rcx = *((rsp + 0x90));\n    *((rcx + 0x10)) = rax;\n    goto label_2;\nlabel_11:\n    r13d = 0;\n    goto label_6;\nlabel_25:\n    edx = *((rsp + 0x98));\n    while (1) {\n        eax = *((rbx + 0x18));\n        rcx = *((rsp + 0x90));\n        *((rcx + 8)) = eax;\n        eax = 0x3f;\n        goto label_5;\nlabel_19:\n        rdi = *((rsp + 0x4c));\n        rax = calloc (rdi, 1);\n        *((rsp + 0x18)) = rax;\n        if (rax == 0) {\n            goto label_29;\n        }\n        rax = *((rsp + 0x44));\n        rcx = *((rsp + 0x18));\n        *((rsp + 0x48)) = 1;\n        *((rcx + rax)) = 1;\n        goto label_3;\n        rax = *((rsp + 0x28));\n        r12 = *(rbx);\n        edx = 5;\n        rbp = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' doesn't allow an argument\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r12;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_27:\n    free (*((rsp + 0x18)));\n    goto label_7;\nlabel_28:\n    eax = *((rsp + 0x98));\n    if (eax != 0) {\n        goto label_30;\n    }\nlabel_10:\n    eax = *((rbx + 0x18));\n    rcx = *((rsp + 0x90));\n    *((rcx + 8)) = eax;\n    rax = *((rsp + 0x30));\n    al = (*(rax) != 0x3a) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = rax * 5;\n    goto label_5;\nlabel_26:\n    rdi = stderr;\n    flockfile ();\n    rax = *((rsp + 0x90));\n    edx = 5;\n    rbx = *((rax + 0x20));\n    rax = *((rsp + 0x28));\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' is ambiguous; possibilities:\");\n    rdi = stderr;\n    r9 = rbx;\n    r8 = *((rsp + 0xa0));\n    rcx = rbp;\n    rdx = rax;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    rax = *((rsp + 0x18));\n    rdi = stderr;\n    rbx = *(rsp);\n    r12 = rax + r12 + 1;\n    while (*(rbp) == 0) {\nlabel_8:\n        rbp++;\n        rbx += 0x20;\n        if (r12 == rbp) {\n            goto label_31;\n        }\n    }\n    r8 = *(rbx);\n    edx = \" '%s%s';\n    esi = 1;\n    eax = 0;\n    rcx = *((rsp + 0xa0));\n    fprintf_chk ();\n    rdi = stderr;\n    goto label_8;\nlabel_31:\n    fputc (0xa, rdi);\n    rdi = stderr;\n    funlockfile ();\n    rax = *((rsp + 0x90));\n    r14 = *((rax + 0x20));\n    goto label_9;\nlabel_30:\n    rax = *((rsp + 0x28));\n    r12 = *(rbx);\n    edx = 5;\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' requires an argument\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r12;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbp;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_10;\nlabel_29:\n    *((rsp + 0x38)) = 1;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00408680",
            "funcStartAddr": "0x408680",
            "funcEndAddr": "0x408c46",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x408680 */\n#include <stdint.h>\n \nuint64_t fcn_00408680 (int64_t arg_70h, int64_t arg_78h, int64_t arg1, int64_t arg2, int64_t arg3, uint32_t arg4, int64_t arg5, int64_t arg6) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_1ch;\n    int64_t var_20h;\n    int64_t var_28h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rbx = *((rsp + 0x70));\n    *((rsp + 8)) = rcx;\n    *((rsp + 0x10)) = r8;\n    r13d = *((rbx + 4));\n    if (edi <= 0) {\n        goto label_16;\n    }\n    eax = *(rbx);\n    r12 = rsi;\n    r15 = rdx;\n    *((rbx + 0x10)) = 0;\n    if (eax == 0) {\n        goto label_17;\n    }\n    esi = *((rbx + 0x18));\n    if (esi == 0) {\nlabel_1:\n        *((rbx + 0x30)) = eax;\n        *((rbx + 0x2c)) = eax;\n        *((rbx + 0x20)) = 0;\n        eax = *(r15);\n        if (al == 0x2d) {\n            goto label_18;\n        }\n        if (al == 0x2b) {\n            goto label_19;\n        }\n        ecx = *((rsp + 0x78));\n        edx = 0;\n        if (ecx == 0) {\n            goto label_20;\n        }\nlabel_8:\n        *((rbx + 0x28)) = 0;\n        goto label_11;\n    }\n    eax = *(rdx);\n    rdx = *((rbx + 0x20));\n    ecx = rax - 0x2b;\n    ecx &= 0xfd;\n    if (ecx != 0) {\n        goto label_21;\n    }\n    eax = *((r15 + 1));\n    r15++;\n    eax = 0;\n    if (al == 0x3a) {\n        r13d = eax;\n    }\n    if (rdx != 0) {\n        goto label_22;\n    }\n    do {\nlabel_0:\n        eax = *(rbx);\n        if (*((rbx + 0x30)) > eax) {\n            *((rbx + 0x30)) = eax;\n        }\n        if (eax < *((rbx + 0x2c))) {\n            *((rbx + 0x2c)) = eax;\n        }\n        if (*((rbx + 0x28)) == 1) {\n            goto label_23;\n        }\nlabel_4:\n        if (ebp == eax) {\n            goto label_24;\n        }\n        rdx = (int64_t) eax;\n        ecx = 3;\n        edi = 0x40c281;\n        r14 = *((r12 + rdx*8));\n        rsi = *((r12 + rdx*8));\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (ebp > eax) ? 1 : 0;\n        if (cl != 0) {\n            goto label_25;\n        }\n        edx = *((rbx + 0x2c));\n        ecx = *((rbx + 0x30));\n        eax++;\n        *(rbx) = eax;\n        if (edx == ecx) {\n            goto label_26;\n        }\n        if (eax != ecx) {\n            fcn_00407f80 (r12, rbx);\n            edx = *((rbx + 0x2c));\n        }\nlabel_12:\n        *((rbx + 0x30)) = ebp;\n        *(rbx) = ebp;\n        goto label_27;\nlabel_18:\n        *((rbx + 0x28)) = 2;\n        r15++;\n        edx = 0;\nlabel_11:\n        *((rbx + 0x18)) = 1;\n        eax = *(r15);\nlabel_21:\n        eax = 0;\n        if (al == 0x3a) {\n            r13d = eax;\n        }\n    } while (rdx == 0);\nlabel_22:\n    if (*(rdx) == 0) {\n        goto label_0;\n    }\nlabel_6:\n    r8 = rdx + 1;\n    *((rsp + 0x20)) = rdx;\n    *((rbx + 0x20)) = r8;\n    r14d = *(rdx);\n    *((rsp + 0x28)) = r8;\n    *((rsp + 0x1c)) = r14b;\n    rax = strchr (r15, r14d);\n    rdx = *((rsp + 0x20));\n    ecx = *((rsp + 0x1c));\n    r8 = *((rsp + 0x28));\n    if (*((rdx + 1)) == 0) {\n        *(rbx)++;\n    }\n    ecx -= 0x3a;\n    if (cl <= 1) {\n        goto label_28;\n    }\n    if (rax == 0) {\n        goto label_28;\n    }\n    ecx = *((rax + 1));\n    if (*(rax) == 0x57) {\n        goto label_29;\n    }\nlabel_7:\n    if (cl == 0x3a) {\n        goto label_30;\n    }\n    do {\nlabel_2:\n        eax = r14d;\n        return rax;\nlabel_25:\n        if (*(r14) == 0x2d) {\n            goto label_31;\n        }\nlabel_5:\n        edx = *((rbx + 0x28));\n        if (edx == 0) {\n            goto label_16;\n        }\n        eax++;\n        *((rbx + 0x10)) = r14;\n        r14d = 1;\n        *(rbx) = eax;\n    } while (1);\nlabel_17:\n    *(rbx) = 1;\n    eax = 1;\n    goto label_1;\nlabel_24:\n    ebp = *((rbx + 0x30));\n    edx = *((rbx + 0x2c));\nlabel_27:\n    if (edx != ebp) {\n        *(rbx) = edx;\n    }\nlabel_16:\n    r14d = 0xffffffff;\n    goto label_2;\nlabel_23:\n    edx = *((rbx + 0x30));\n    if (*((rbx + 0x2c)) == edx) {\n        goto label_32;\n    }\n    if (eax != edx) {\n        *((rsp + 0x1c)) = r9d;\n        fcn_00407f80 (r12, rbx);\n        edx = *(rbx);\n        r9d = *((rsp + 0x1c));\n    }\nlabel_9:\n    if (ebp <= edx) {\n        goto label_33;\n    }\n    rax = (int64_t) edx;\n    while (*(rcx) != 0x2d) {\nlabel_3:\n        edx = rsi + 1;\n        rax++;\n        *(rbx) = edx;\n        if (ebp <= eax) {\n            goto label_33;\n        }\n        rcx = *((r12 + rax*8));\n        esi = eax;\n        edx = eax;\n    }\n    if (*((rcx + 1)) == 0) {\n        goto label_3;\n    }\n    eax = *(rbx);\nlabel_10:\n    *((rbx + 0x30)) = edx;\n    goto label_4;\nlabel_31:\n    ecx = *((r14 + 1));\n    if (cl == 0) {\n        goto label_5;\n    }\n    if (*((rsp + 8)) == 0) {\n        goto label_34;\n    }\n    if (cl == 0x2d) {\n        goto label_35;\n    }\n    if (r9d == 0) {\n        goto label_34;\n    }\n    if (*((r14 + 2)) == 0) {\n        esi = (int32_t) cl;\n        *((rsp + 0x1c)) = r9d;\n        rax = strchr (r15, rsi);\n        r9d = *((rsp + 0x1c));\n        if (rax != 0) {\n            goto label_34;\n        }\n    }\n    rdx = r14 + 1;\n    *((rbx + 0x20)) = rdx;\n    eax = fcn_00408060 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), r9);\n    r14d = eax;\n    if (eax != 0xffffffff) {\n        goto label_2;\n    }\n    rax = *(rbx);\n    r14 = *((r12 + rax*8));\nlabel_34:\n    rdx = r14 + 1;\n    goto label_6;\nlabel_29:\n    if (*((rsp + 8)) == 0) {\n        goto label_7;\n    }\n    if (cl != 0x3b) {\n        goto label_7;\n    }\n    if (*((rdx + 1)) == 0) {\n        rax = *(rbx);\n        if (eax == ebp) {\n            goto label_36;\n        }\n        r8 = *((r12 + rax*8));\n    }\n    *((rbx + 0x20)) = r8;\n    *((rbx + 0x10)) = 0;\nlabel_14:\n    eax = fcn_00408060 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), 0);\n    r14d = eax;\n    goto label_2;\nlabel_20:\n    *((rsp + 0x1c)) = r9d;\n    rax = getenv (\"POSIXLY_CORRECT\");\n    r9d = *((rsp + 0x1c));\n    if (rax == 0) {\n        goto label_37;\n    }\n    rdx = *((rbx + 0x20));\n    goto label_8;\nlabel_30:\n    edx = *((rdx + 1));\n    if (*((rax + 2)) == 0x3a) {\n        goto label_38;\n    }\n    rax = *(rbx);\n    if (dl != 0) {\n        goto label_39;\n    }\n    if (ebp == eax) {\n        goto label_40;\n    }\n    edx = rax + 1;\n    rax = *((r12 + rax*8));\n    *(rbx) = edx;\n    *((rbx + 0x10)) = rax;\nlabel_13:\n    *((rbx + 0x20)) = 0;\n    goto label_2;\nlabel_32:\n    if (eax == edx) {\n        goto label_9;\n    }\n    *((rbx + 0x2c)) = eax;\n    edx = eax;\n    goto label_9;\nlabel_33:\n    eax = edx;\n    goto label_10;\nlabel_19:\n    *((rbx + 0x28)) = 0;\n    r15++;\n    edx = 0;\n    goto label_11;\nlabel_28:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0x3f;\n        goto label_2;\nlabel_26:\n        *((rbx + 0x2c)) = eax;\n        edx = eax;\n        goto label_12;\nlabel_39:\n        eax++;\n        *((rbx + 0x10)) = r8;\n        *(rbx) = eax;\n        goto label_13;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: invalid option -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_38:\n    if (dl != 0) {\n        *((rbx + 0x10)) = r8;\n        *(rbx)++;\n        goto label_13;\nlabel_37:\n        *((rbx + 0x28)) = 1;\n        rdx = *((rbx + 0x20));\n        goto label_11;\n    }\n    *((rbx + 0x10)) = 0;\n    goto label_13;\nlabel_40:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_13;\nlabel_35:\n        rdx = r14 + 2;\n        *((rbx + 0x20)) = rdx;\n        goto label_14;\nlabel_36:\n        if (r13d != 0) {\n            goto label_41;\n        }\nlabel_15:\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_2;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_41:\n    rbp = *(r12);\n    edx = 5;\n    rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n    rdi = stderr;\n    r8d = r14d;\n    esi = 1;\n    rdx = rax;\n    rcx = rbp;\n    eax = 0;\n    fprintf_chk ();\n    goto label_15;\n}\n"
        },
        {
            "funcName": "fcn_00408c50",
            "funcStartAddr": "0x408c50",
            "funcEndAddr": "0x408ca6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x408c50 */\n#include <stdint.h>\n \nint32_t fcn_00408c50 (int64_t arg_10h) {\n    eax = *(0x0060e31c);\n    *(0x0060e8c0) = eax;\n    eax = *(0x0060e318);\n    *(0x0060e8c4) = eax;\n    eax = *((rsp + 0x10));\n    fcn_00408680 (rdi, rsi, rdx, rcx, r8, r9);\n    edx = imp.__libc_start_main;\n    *(0x0060e31c) = edx;\n    rdx = imp.__libc_start_main;\n    *(0x0060e908) = rdx;\n    edx = imp.__libc_start_main;\n    *(0x0060e314) = edx;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00408cd0",
            "funcStartAddr": "0x408cd0",
            "funcEndAddr": "0x408ce3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x408cd0 */\n#include <stdint.h>\n \nvoid fcn_00408cd0 (void) {\n    r9d = 0;\n    fcn_00408c50 (rdi);\n}\n"
        },
        {
            "funcName": "fcn_00408d50",
            "funcStartAddr": "0x408d50",
            "funcEndAddr": "0x408dca",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x408d50 */\n#include <stdint.h>\n \nuint64_t fcn_00408d50 (wint_t arg1, int64_t arg2, size_t * arg3, mbstate_t * ps) {\n    int64_t var_ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = ps;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    rbx = 0xfffffffffffffffe;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r12 = rdi;\n    while (1) {\n        rax = mbrtowc (r12, rbp, rdx, rcx);\n        rbx = rax;\n        if (rax > 0xfffffffffffffffd) {\n            goto label_2;\n        }\nlabel_0:\n        rax = rbx;\n        return rax;\nlabel_1:\n        edx = 1;\n        r12 = rsp + 0xc;\n    }\nlabel_2:\n    al = fcn_00409170 (0);\n    if (al != 0) {\n        goto label_0;\n    }\n    eax = *(rbp);\n    ebx = 1;\n    *(r12) = eax;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00408dd0",
            "funcStartAddr": "0x408dd0",
            "funcEndAddr": "0x408ed4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x408dd0 */\n#include <stdint.h>\n \nint64_t fcn_00408dd0 (uint32_t arg1, int64_t arg2, int32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r8d = esi;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    if ((dil & 7) == 0) {\n        goto label_1;\n    }\n    if (sil != *(rdi)) {\n        goto label_2;\n    }\n    goto label_3;\n    do {\n        if ((dil & 7) == 0) {\n            goto label_1;\n        }\n        if (*(rdi) == r8b) {\n            goto label_3;\n        }\nlabel_2:\n        rdi++;\n        rdx--;\n    } while (rdx != 0);\nlabel_0:\n    eax = 0;\n    return eax;\nlabel_1:\n    r9d = esi;\n    eax = (int32_t) sil;\n    r9d <<= 8;\n    r9d = (int32_t) r9w;\n    r9d |= eax;\n    r9 = (int64_t) r9d;\n    rax = r9;\n    rax <<= 0x10;\n    r9 |= rax;\n    rax = r9;\n    rax <<= 0x20;\n    r9 |= rax;\n    if (rdx <= 7) {\n        goto label_4;\n    }\n    r11 = 0xfefefefefefefeff;\n    rax = *(rdi);\n    r10 = 0x8080808080808080;\n    rax ^= r9;\n    rcx = rax + r11;\n    rax = ~rax;\n    rax &= rcx;\n    if ((rax & r10) == 0) {\n        goto label_5;\n    }\n    goto label_4;\n    do {\n        rax = *(rdi);\n        rax ^= r9;\n        rcx = rax + r11;\n        rax = ~rax;\n        rax &= rcx;\n        if ((rax & r10) != 0) {\n            goto label_4;\n        }\nlabel_5:\n        rdx -= 8;\n        rdi += 8;\n    } while (rdx > 7);\n    if (rdx == 0) {\n        goto label_0;\n    }\nlabel_4:\n    if (sil == *(rdi)) {\n        goto label_3;\n    }\n    rcx = rdi + 1;\n    rdi += rdx;\n    while (rcx != rdi) {\n        rcx++;\n        if (*((rcx - 1)) == r8b) {\n            goto label_6;\n        }\n        rax = rcx;\n    }\n    goto label_0;\nlabel_3:\n    rax = rdi;\nlabel_6:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00409040",
            "funcStartAddr": "0x409040",
            "funcEndAddr": "0x40910c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x409040 */\n#include <stdint.h>\n \nuint64_t fcn_00409040 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    ecx = 0x60e320;\n    edx = 0;\n    ebx = edi;\n    while (*(rcx) != ebx) {\n        edx++;\n        rcx += 0xc;\n        if (edx == 0x23) {\n            goto label_2;\n        }\n    }\n    rax = rdx * 3;\n    eax = strcpy (rbp, rax*4 + 0x60e324);\n    eax = 0;\n    do {\nlabel_1:\n        return rax;\nlabel_2:\n        eax = libc_current_sigrtmin ();\n        r12d = eax;\n        eax = libc_current_sigrtmax ();\n        if (ebx < r12d) {\n            goto label_3;\n        }\n        if (ebx > eax) {\n            goto label_3;\n        }\n        edx = eax;\n        edx -= r12d;\n        edx >>= 1;\n        edx += r12d;\n        if (edx >= ebx) {\n            goto label_4;\n        }\n        edx = 0x58;\n        *(rbp) = 0x414d5452;\n        r12d = eax;\n        *((rbp + 4)) = dx;\nlabel_0:\n        eax = ebx;\n        eax -= r12d;\n    } while (eax == 0);\n    rdi = rbp + 5;\n    r8d = eax;\n    eax = 0;\n    ecx = 0x40c2b0;\n    rdx = 0xffffffffffffffff;\n    esi = 1;\n    eax = sprintf_chk ();\n    eax = 0;\n    return rax;\nlabel_4:\n    ecx = 0x4e;\n    *(rbp) = 0x494d5452;\n    *((rbp + 4)) = cx;\n    goto label_0;\nlabel_3:\n    eax = 0xffffffff;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00409110",
            "funcStartAddr": "0x409110",
            "funcEndAddr": "0x40916d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x409110 */\n#include <stdint.h>\n \nuint64_t fcn_00409110 (int64_t arg1) {\n    rdi = arg1;\n    rax = fpending ();\n    ebx = *(rbp);\n    r12 = rax;\n    ebx &= 0x20;\n    eax = fcn_00407e60 (rbp);\n    if (ebx != 0) {\n        goto label_1;\n    }\n    if (eax == 0) {\n        goto label_0;\n    }\n    if (r12 != 0) {\n        goto label_2;\n    }\n    rax = errno_location ();\n    al = (*(rax) != 9) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = -eax;\n    do {\nlabel_0:\n        return rax;\nlabel_1:\n        if (eax != 0) {\n            goto label_2;\n        }\n        errno_location ();\n        *(rax) = 0;\n        eax = 0xffffffff;\n    } while (1);\nlabel_2:\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00409170",
            "funcStartAddr": "0x409170",
            "funcEndAddr": "0x4091ce",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x409170 */\n#include <stdint.h>\n \nuint64_t fcn_00409170 (int32_t category) {\n    rdi = category;\n    rax = setlocale (rdi, 0);\n    rdx = rax;\n    eax = 1;\n    if (rdx != 0) {\n        ecx = 2;\n        edi = 0x40c2b4;\n        rsi = rdx;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (rdx > 0) ? 1 : 0;\n        eax = 0;\n        if (cl != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    edi = \"POSIX\";\n    ecx = 6;\n    rsi = rdx;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (cl > 0) ? 1 : 0;\n    al = (al != 0) ? 1 : 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004091d0",
            "funcStartAddr": "0x4091d0",
            "funcEndAddr": "0x409732",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x4091d0 */\n#include <stdint.h>\n \nuint64_t fcn_004091d0 (void) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_60h;\n    rax = nl_langinfo (0xe);\n    r15 = imp.__libc_start_main;\n    rbx = rax;\n    eax = 0x40c29f;\n    if (rax == 0) {\n        rbx = rax;\n    }\n    if (r15 == 0) {\n        goto label_15;\n    }\nlabel_1:\n    ebp = *(r15);\n    if (bpl != 0) {\n        goto label_16;\n    }\n    goto label_17;\n    do {\nlabel_0:\n        strlen (r15);\n        rbp = r15 + rax + 1;\n        strlen (rbp);\n        r15 = rbp + rax + 1;\n        ebp = *(r15);\n        if (bpl == 0) {\n            goto label_17;\n        }\nlabel_16:\n        eax = strcmp (rbx, r15);\n        if (eax == 0) {\n            goto label_18;\n        }\n    } while (bpl != 0x2a);\n    if (*((r15 + 1)) != 0) {\n        goto label_0;\n    }\nlabel_18:\n    strlen (r15);\n    rbx = r15 + rax + 1;\nlabel_17:\n    eax = \"ASCII\";\n    if (*(rbx) == 0) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\nlabel_15:\n    rax = getenv (\"CHARSETALIASDIR\");\n    r13 = rax;\n    if (rax == 0) {\n        goto label_19;\n    }\n    if (*(rax) == 0) {\n        goto label_19;\n    }\n    rax = strlen (rax);\n    r12 = rax;\n    r14 = rax;\n    if (rax != 0) {\n        goto label_20;\n    }\nlabel_13:\n    rax = malloc (0xe);\n    if (rax != 0) {\n        goto label_21;\n    }\n    do {\n        r15d = 0x40c29f;\nlabel_2:\n        *(0x0060e8f8) = r15;\n        goto label_1;\nlabel_19:\n        r12d = 0x65;\n        r14d = 0x64;\n        r13d = \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\";\nlabel_14:\n        rax = malloc (0x73);\n    } while (rax == 0);\n    memcpy (rbp, r13, r14);\n    *((rbp + r14)) = 0x2f;\n    do {\n        r12 += rbp;\n        rax = 0x2e74657372616863;\n        *(r12) = rax;\n        eax = 0x73;\n        *((r12 + 0xc)) = ax;\n        eax = 0;\n        *((r12 + 8)) = 0x61696c61;\n        eax = open (rbp, 0, rdx);\n        r12d = eax;\n        if (eax >= 0) {\n            goto label_22;\n        }\nlabel_6:\n        r15d = 0x40c29f;\nlabel_7:\n        free (rbp);\n        goto label_2;\nlabel_21:\n        eax = memcpy (rbp, r13, r14);\n    } while (1);\nlabel_22:\n    esi = 0x409bd0;\n    edi = eax;\n    r15d = 0;\n    rax = fdopen ();\n    *((rsp + 8)) = 0;\n    r13 = rax;\n    if (rax == 0) {\n        goto label_23;\n    }\n    rax = rbx;\n    r12 = rsp + 0x60;\n    r14 = rsp + 0x20;\n    rbx = r13;\n    r13 = rax;\n    do {\nlabel_3:\n        rax = *((rbx + 8));\n        if (rax >= *((rbx + 0x10))) {\n            goto label_24;\n        }\nlabel_4:\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        edi = *(rax);\nlabel_5:\n        eax = rdi - 9;\n    } while (eax <= 1);\n    if (edi == 0x20) {\n        goto label_3;\n    }\n    if (edi == 0x23) {\n        goto label_25;\n    }\n    eax = ungetc (rdi, rbx);\n    eax = 0;\n    rcx = r12;\n    rdx = r14;\n    eax = fscanf (rbx, \"%50s %50s\");\n    if (eax <= 1) {\n        goto label_12;\n    }\n    rcx = r14;\n    do {\n        edx = *(rcx);\n        rcx += 4;\n        eax = rdx - 0x1010101;\n        edx = ~edx;\n        eax &= edx;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    edx = eax;\n    edx >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = edx;\n    }\n    rdx = rcx + 2;\n    if ((eax & 0x8080) == 0) {\n        rcx = rdx;\n    }\n    edx = eax;\n    dl += al;\n    rdx = r12;\n    rcx -= 3;\n    rcx -= r14;\n    do {\n        esi = *(rdx);\n        rdx += 4;\n        eax = rsi - 0x1010101;\n        esi = ~esi;\n        eax &= esi;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    esi = eax;\n    *((rsp + 0x10)) = rcx;\n    esi >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = esi;\n    }\n    rsi = rdx + 2;\n    if ((eax & 0x8080) == 0) {\n        rdx = rsi;\n    }\n    esi = eax;\n    sil += al;\n    rdx -= 3;\n    rdx -= r12;\n    rax = rcx + rdx;\n    *((rsp + 0x18)) = rdx;\n    if (*((rsp + 8)) != 0) {\n        goto label_26;\n    }\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    rax = malloc (rax + 3);\n    rcx = *((rsp + 0x10));\n    rdx = *((rsp + 0x18));\nlabel_9:\n    if (rax == 0) {\n        goto label_27;\n    }\n    rdi = *((rsp + 8));\n    rsi = 0xfffffffffffffffe;\n    rsi -= rcx;\n    rcx++;\n    rdi -= rdx;\n    rsi += rdi;\n    rsi += rax;\n    if (ecx >= 8) {\n        goto label_28;\n    }\n    if ((cl & 4) != 0) {\n        goto label_29;\n    }\n    if (ecx != 0) {\n        r9d = *(r14);\n        *(rsi) = r9b;\n        if ((cl & 2) != 0) {\n            goto label_30;\n        }\n    }\nlabel_10:\n    rdx++;\n    rcx = rax + rdi - 1;\n    if (edx >= 8) {\n        goto label_31;\n    }\n    if ((dl & 4) != 0) {\n        goto label_32;\n    }\n    if (edx != 0) {\n        esi = *(r12);\n        *(rcx) = sil;\n        if ((dl & 2) != 0) {\n            goto label_33;\n        }\n    }\nlabel_11:\n    r15 = rax;\n    rax = *((rbx + 8));\n    if (rax < *((rbx + 0x10))) {\n        goto label_4;\n    }\nlabel_24:\n    rdi = rbx;\n    eax = uflow ();\n    edi = eax;\n    if (eax != 0xffffffff) {\n        goto label_5;\n    }\nlabel_12:\n    rax = r13;\n    r13 = rbx;\n    rbx = rax;\n    fcn_00407e60 (rbx);\n    rax = *((rsp + 8));\n    if (rax == 0) {\n        goto label_6;\n    }\n    *((r15 + rax)) = 0;\n    goto label_7;\n    do {\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        eax = *(rax);\n        edx = 1;\nlabel_8:\n        if (eax == 0xa) {\n            goto label_34;\n        }\n        if (dl == 0) {\n            goto label_34;\n        }\nlabel_25:\n        rax = *((rbx + 8));\n    } while (rax < *((rbx + 0x10)));\n    rdi = rbx;\n    eax = uflow ();\n    dl = (eax != 0xffffffff) ? 1 : 0;\n    goto label_8;\nlabel_26:\n    rax += *((rsp + 8));\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    eax = realloc (r15, rax + 3);\n    rdx = *((rsp + 0x18));\n    rcx = *((rsp + 0x10));\n    goto label_9;\nlabel_28:\n    r9 = *(r14);\n    *(rsi) = r9;\n    r9d = ecx;\n    r10 = *((r14 + r9 - 8));\n    *((rsi + r9 - 8)) = r10;\n    r9 = rsi + 8;\n    r10 = r14;\n    r9 &= 0xfffffffffffffff8;\n    rsi -= r9;\n    ecx += esi;\n    r10 -= rsi;\n    ecx &= 0xfffffff8;\n    if (ecx < 8) {\n        goto label_10;\n    }\n    ecx &= 0xfffffff8;\n    esi = 0;\n    do {\n        r8d = esi;\n        esi += 8;\n        r11 = *((r10 + r8));\n        *((r9 + r8)) = r11;\n    } while (esi < ecx);\n    goto label_10;\nlabel_31:\n    rsi = *(r12);\n    r9 = r12;\n    *(rcx) = rsi;\n    esi = edx;\n    rdi = *((r12 + rsi - 8));\n    *((rcx + rsi - 8)) = rdi;\n    rdi = rcx + 8;\n    rdi &= 0xfffffffffffffff8;\n    rcx -= rdi;\n    edx += ecx;\n    r9 -= rcx;\n    edx &= 0xfffffff8;\n    if (edx < 8) {\n        goto label_11;\n    }\n    edx &= 0xfffffff8;\n    ecx = 0;\n    do {\n        esi = ecx;\n        ecx += 8;\n        r8 = *((r9 + rsi));\n        *((rdi + rsi)) = r8;\n    } while (ecx < edx);\n    goto label_11;\nlabel_34:\n    if (eax == 0xffffffff) {\n        goto label_12;\n    }\n    goto label_3;\nlabel_20:\n    if (*((r13 + rax - 1)) == 0x2f) {\n        rdi = rax + 0xe;\n        goto label_13;\nlabel_23:\n        close (r12d);\n        goto label_6;\nlabel_29:\n        r9d = *(r14);\n        *(rsi) = r9d;\n        r9d = *((r14 + rcx - 4));\n        *((rsi + rcx - 4)) = r9d;\n        goto label_10;\nlabel_32:\n        esi = *(r12);\n        *(rcx) = esi;\n        esi = *((r12 + rdx - 4));\n        *((rcx + rdx - 4)) = esi;\n        goto label_11;\nlabel_27:\n        rax = r13;\n        r13 = rbx;\n        r15d = 0x40c29f;\n        rbx = rax;\n        free (r15);\n        fcn_00407e60 (r13);\n        goto label_7;\nlabel_30:\n        r9d = *((r14 + rcx - 2));\n        *((rsi + rcx - 2)) = r9w;\n        goto label_10;\nlabel_33:\n        esi = edx;\n        edx = *((r12 + rsi - 2));\n        *((rcx + rsi - 2)) = dx;\n        goto label_11;\n    }\n    rdi = rax + 0xf;\n    r12++;\n    goto label_14;\n}\n"
        },
        {
            "funcName": "fcn_00409740",
            "funcStartAddr": "0x409740",
            "funcEndAddr": "0x409885",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x409740 */\n#include <stdint.h>\n \nuint64_t fcn_00409740 (int64_t arg_70h, int64_t arg1, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_30h;\n    int64_t var_38h;\n    rdi = arg1;\n    rcx = arg4;\n    edx = 3;\n    esi = 0;\n    eax = 0;\n    while (1) {\nlabel_2:\n        rax = rsp + 0x70;\n        *((rsp + 0x30)) = rdx;\n        *((rsp + 0x10)) = rax;\n        rax = rsp + 0x20;\n        *((rsp + 0x38)) = rcx;\n        *((rsp + 8)) = 0x10;\n        *((rsp + 0x18)) = rax;\n        if (esi != 0x406) {\n            goto label_4;\n        }\n        r12d = *((rax + 0x10));\n        eax = imp.__libc_start_main;\n        *((rsp + 8)) = 0x18;\n        edx = r12d;\n        if (eax >= 0) {\n            eax = 0;\n            eax = fcntl ();\n            ebx = eax;\n            if (eax < 0) {\n                goto label_5;\n            }\nlabel_1:\n            *(0x0060e900) = 1;\nlabel_0:\n            eax = ebx;\n            return rax;\n        }\n        eax = 0;\n        eax = void (*0x409750)(uint64_t, uint64_t, uint64_t) (rdi, 0, rdx);\n    }\n    ebx = eax;\n    if (eax < 0) {\n        goto label_0;\n    }\n    if (*(0x0060e900) != 0xffffffff) {\n        goto label_0;\n    }\nlabel_3:\n    eax = 0;\n    esi = 1;\n    edi = ebx;\n    eax = fcntl ();\n    if (eax < 0) {\n        goto label_6;\n    }\n    eax |= 1;\n    esi = 2;\n    edi = ebx;\n    edx = eax;\n    eax = 0;\n    eax = fcntl ();\n    if (eax != 0xffffffff) {\n        goto label_0;\n    }\nlabel_6:\n    rax = errno_location ();\n    ebx = 0xffffffff;\n    r12d = *(rax);\n    close (ebx);\n    *(rbp) = r12d;\n    goto label_0;\nlabel_4:\n    rax = *((rsp + 0x18));\n    rdx = *((rax + 0x10));\n    eax = 0;\n    eax = fcntl ();\n    ebx = eax;\n    return rax;\nlabel_5:\n    rax = errno_location ();\n    if (*(rax) != 0x16) {\n        goto label_1;\n    }\n    eax = 0;\n    eax = void (*0x409750)(uint64_t, uint64_t, uint64_t) (ebp, 0, r12d);\n    goto label_2;\n    ebx = eax;\n    if (eax < 0) {\n        goto label_0;\n    }\n    *(0x0060e900) = 0xffffffff;\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_00409900",
            "funcStartAddr": "0x409900",
            "funcEndAddr": "0x409918",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x409900 */\n#include <stdint.h>\n \nint64_t fcn_00409900 (void) {\n    rax = 0x60e288;\n    edx = 0;\n    if (rax != 0) {\n        rdx = *(rax);\n    }\n    esi = 0;\n    return cxa_atexit ();\n}\n"
        },
        {
            "funcName": "fcn_00409918",
            "funcStartAddr": "0x409918",
            "funcEndAddr": "0x409938",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf @ 0x409918 */\n#include <stdint.h>\n \nvoid fcn_00409918 (int64_t arg3) {\n    rdx = arg3;\n    ebx = segment.GNU_RELRO;\n    do {\n        rax = *(rbx);\n        if (rax == -1) {\n            goto label_0;\n        }\n        void (*rax)() ();\n        rbx -= 8;\n    } while (1);\nlabel_0:\n}\n"
        }
    ],
    "funcCount": 56
}