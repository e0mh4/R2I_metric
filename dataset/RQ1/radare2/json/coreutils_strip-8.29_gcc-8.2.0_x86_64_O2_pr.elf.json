{
    "binaryInfo": {
        "isStripped": true,
        "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf"
    },
    "buildInfo": {
        "decompilerName": "radare2",
        "compilerName": "gcc",
        "compilerVersion": "9.4.0",
        "optLevel": "O"
    },
    "funcInfo": [
        {
            "funcName": "main",
            "funcStartAddr": "0x401d40",
            "funcEndAddr": "0x4025d0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x401d40 */\n#include <stdint.h>\n \nint32_t main (int32_t argc, char ** argv) {\n    int64_t var_1h;\n    int64_t var_dh_2;\n    int64_t var_eh_2;\n    int64_t var_fh_2;\n    int64_t var_14h_2;\n    int64_t var_18h_2;\n    int64_t var_8h;\n    uint32_t var_dh;\n    uint32_t var_eh;\n    uint32_t var_fh;\n    int64_t var_14h;\n    char ** var_18h;\n    rdi = argc;\n    rsi = argv;\n    r15d = 0;\n    r12 = rsi;\n    *((rsp + 0x18)) = 0;\n    fcn_00407110 (*(rsi));\n    setlocale (6, 0x40ce63);\n    bindtextdomain (0x40cef7, \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\");\n    textdomain (0x40cef7, rsi);\n    edi = 0x4053d0;\n    fcn_0040cd90 ();\n    if (ebp > 1) {\n        rdi = (int64_t) edi;\n        rdi <<= 3;\n        rax = fcn_00409300 (rbp - 1);\n        r15 = rax;\n    }\n    *((rsp + 0xf)) = 0;\n    ebx = 0;\n    r13d = 0;\n    r14d = 0;\n    *((rsp + 0xe)) = 0;\n    *((rsp + 0xd)) = 0;\n    do {\nlabel_0:\n        edx = \"-0123456789D:FJN:S::TW:abcde::fh:i::l:mn::o:rs::tvw:\";\n        r8 = rsp + 0x14;\n        rsi = r12;\n        edi = ebp;\n        ecx = 0x40ebe0;\n        *((rsp + 0x14)) = 0xffffffff;\n        eax = fcn_0040b9d0 ();\n        edx = eax;\n        if (eax == 0xffffffff) {\n            goto label_7;\n        }\n        eax = rax - 0x30;\n        if (eax <= 9) {\n            goto label_8;\n        }\n        edx += 0x83;\n        if (edx > 0x104) {\n            goto label_9;\n        }\n        /* switch table (261 cases) at 0x40e3a0 */\n        rdx = imp.__libc_start_main;\n        if (rdx == 0) {\n            goto label_10;\n        }\n        al = fcn_00402820 (*((rsp + 0x14)), 0, rdx);\n        if (al == 0) {\n            goto label_11;\n        }\nlabel_1:\n        ebx = 0;\n    } while (1);\n    ebx = 0;\n    fcn_00402950 (*(0x00614630));\n    r13d = 0;\n    free (r13);\n    *((rsp + 0x18)) = 0;\n    goto label_0;\n    edx = 5;\n    rax = dcgettext (0, '-w PAGE_WIDTH' invalid number of characters\");\n    r9d = 0;\n    eax = fcn_00409680 (*(0x00614630), 1, 0x7fffffff, 0x40ce63, rax);\n    ebx = *(0x0061443d);\n    *((rsp + 0xd)) = bl;\n    *((rsp + 0xe)) = bl;\n    if (bl != 0) {\n        goto label_1;\n    }\n    *(0x006142ac) = eax;\n    ebx = 0;\n    *((rsp + 0xe)) = 1;\n    *((rsp + 0xd)) = 1;\n    goto label_0;\n    *(0x006143ea) = 1;\n    ebx = 0;\n    goto label_0;\n    *(0x006142b5) = 0;\n    ebx = 0;\n    *(0x0061444a) = 1;\n    goto label_0;\n    eax = *(0x006143e0);\n    *((rsp + 0xd)) = al;\n    *((rsp + 0xf)) = al;\n    if (al != 0) {\n        goto label_1;\n    }\n    rdi = imp.__libc_start_main;\n    if (rdi == 0) {\n        goto label_12;\n    }\n    fcn_00402920 (rdi);\n    ebx = 0;\n    *((rsp + 0xf)) = 1;\n    *((rsp + 0xd)) = 1;\n    goto label_0;\n    *(0x006143e1) = 1;\n    ebx = 0;\n    goto label_0;\n    edx = 5;\n    ebx = 0;\n    rax = dcgettext (0, '-o MARGIN' invalid line offset\");\n    r9d = 0;\n    eax = fcn_00409680 (*(0x00614630), 0, 0x7fffffff, 0x40ce63, rax);\n    *(0x0061442c) = eax;\n    goto label_0;\n    rdi = imp.__libc_start_main;\n    *(0x006143fc) = 1;\n    if (rdi == 0) {\n        goto label_1;\n    }\n    ebx = 0;\n    fcn_004052e0 (rdi, 0x6e, 0x614288, 0x614278);\n    goto label_0;\n    *(0x0061444f) = 1;\n    ebx = 0;\n    *(0x006142b4) = 0;\n    goto label_0;\n    edx = 5;\n    ebx = 0;\n    rax = dcgettext (0, '-l PAGE_LENGTH' invalid number of lines\");\n    r9d = 0;\n    eax = fcn_00409680 (*(0x00614630), 1, 0x7fffffff, 0x40ce63, rax);\n    *(0x006142b0) = eax;\n    goto label_0;\n    rdi = imp.__libc_start_main;\n    if (rdi != 0) {\n        fcn_004052e0 (rdi, 0x69, 0x6142a0, \"\\b\\t\\b\\tHB\\xc4\\x81\");\n    }\n    *(0x00614434) = 1;\n    ebx = 0;\n    goto label_0;\n    rax = imp.__libc_start_main;\n    ebx = 0;\n    *(0x006143c8) = rax;\n    goto label_0;\n    rdi = imp.__libc_start_main;\n    *(0x006143e0) = 1;\n    *(0x00614270) = 0x40ce63;\n    *(0x006143dc) = 0;\n    *((rsp + 0xf)) = 0;\n    if (rdi == 0) {\n        goto label_1;\n    }\n    fcn_00402920 (rdi);\n    ebx = 0;\n    goto label_0;\n    edx = 5;\n    ebx = 0;\n    *(0x00614280) = 0;\n    rax = dcgettext (0, '-N NUMBER' invalid starting line number\");\n    r9d = 0;\n    eax = fcn_00409680 (*(0x00614630), 0xffffffff80000000, 0x7fffffff, 0x40ce63, rax);\n    *(0x0061427c) = eax;\n    goto label_0;\n    *(0x0061443c) = 1;\n    ebx = 0;\n    goto label_0;\n    *(0x00614447) = 1;\n    ebx = 0;\n    goto label_0;\n    rax = imp.__libc_start_main;\n    ebx = 0;\n    *(0x006143c0) = rax;\n    goto label_0;\n    rax = imp.__libc_start_main;\n    if (*(0x00614418) == 0) {\n        goto label_13;\n    }\nlabel_2:\n    edx = r14d;\n    ebx = 0;\n    r14d++;\n    *((r15 + rdx*8)) = rax;\n    goto label_0;\n    eax = 0;\n    r9d = \"Roland Huebner\";\n    r8d = \"Pete TerMaat\";\n    rcx = *(str.8.29);\n    fcn_004091c0 (*(obj.stdout), 0x40ce7a, \"GNU coreutils\");\n    exit (0);\n    *(0x00614444) = 1;\n    ebx = 0;\n    goto label_0;\n    *(0x00614445) = 1;\n    ebx = 0;\n    *(0x006142b4) = 0;\n    goto label_0;\n    edx = 5;\n    ebx = 0;\n    *(0x0061443d) = 1;\n    rax = dcgettext (0, '-W PAGE_WIDTH' invalid number of characters\");\n    r9d = 0;\n    eax = fcn_00409680 (*(0x00614630), 1, 0x7fffffff, 0x40ce63, rax);\n    *((rsp + 0xe)) = 0;\n    *(0x006142ac) = eax;\n    goto label_0;\n    *(0x006142b5) = 0;\n    ebx = 0;\n    *(0x0061444a) = 0;\n    goto label_0;\n    *(0x006143e8) = 1;\n    ebx = 0;\n    goto label_0;\n    *(0x006143e9) = 1;\n    ebx = 0;\n    goto label_0;\n    rdi = imp.__libc_start_main;\n    if (rdi != 0) {\n        fcn_004052e0 (rdi, 0x65, 0x6142a8, 0x6142a4);\n    }\n    *(0x00614435) = 1;\n    ebx = 0;\n    goto label_0;\nlabel_8:\n    rcx = rbx + 1;\n    while (1) {\n        *((r13 + rbx)) = dl;\n        rbx = rcx;\n        *((r13 + rcx)) = 0;\n        goto label_0;\n        *((rsp + 8)) = edx;\n        *(rsp) = rcx;\n        rax = fcn_00409460 (r13, rsp + 0x18);\n        edx = *((rsp + 8));\n        rcx = *(rsp);\n        r13 = rax;\n    }\nlabel_13:\n    if (*(rax) != 0x2b) {\n        goto label_2;\n    }\n    al = fcn_00402820 (0xfffffffe, 0x2b, rax + 1);\n    if (al != 0) {\n        goto label_1;\n    }\n    rax = imp.__libc_start_main;\n    goto label_2;\nlabel_7:\n    if (r13 != 0) {\n        fcn_00402950 (r13);\n        free (r13);\n    }\n    if (*(0x006143c0) == 0) {\n        goto label_14;\n    }\nlabel_6:\n    rax = getenv (0x40cf65);\n    rax = fcn_0040bba0 (rax);\n    *(0x006143b8) = rax;\n    if (*(0x00614418) == 0) {\n        *(0x00614418) = 1;\n    }\n    edi = *(0x0061444f);\n    if (dil != 0) {\n        if (*(0x0061444b) != 0) {\n            goto label_15;\n        }\n        if (*(0x00614445) != 0) {\n            goto label_16;\n        }\n    }\n    if (*((rsp + 0xd)) != 0) {\n        if (*((rsp + 0xe)) == 0) {\n            goto label_17;\n        }\n        if (dil == 0) {\n            if (*(0x0061444b) == 0) {\n                goto label_18;\n            }\n        }\n        *(0x0061443d) = 1;\n        if (*((rsp + 0xf)) != 0) {\n            goto label_19;\n        }\n    }\nlabel_3:\n    edx = *(0x0061433c);\n    if (ebp <= edx) {\n        goto label_20;\n    }\n    esi = ebp;\n    rax = (int64_t) edx;\n    esi -= edx;\n    rax = r12 + rax*8;\n    esi += r14d;\n    do {\n        rcx = *(rax);\n        edx = r14d;\n        r14d++;\n        rax += 8;\n        *((r15 + rdx*8)) = rcx;\n    } while (r14d != esi);\n    *(0x0061433c) = ebp;\nlabel_20:\n    if (r14d == 0) {\n        goto label_21;\n    }\n    if (dil != 0) {\n        goto label_22;\n    }\n    eax = r14 - 1;\n    rbx = r15 + rax*8 + 8;\n    do {\n        r15 += 8;\n        fcn_00403e40 (1, r15);\n    } while (rbx != r15);\nlabel_4:\n    free (*(0x006143f0));\n    free (*(0x00614398));\n    free (*(0x00614478));\n    free (*(0x00614458));\n    free (*(0x00614450));\n    free (*(0x00614470));\n    if (*(0x00614446) != 0) {\n        goto label_23;\n    }\nlabel_5:\n    eax = *(0x00614420);\n    return rax;\nlabel_12:\n    *((rsp + 0xf)) = 1;\n    ebx = 0;\n    *((rsp + 0xd)) = 1;\n    goto label_0;\nlabel_17:\n    if (*(0x006143e0) == 1) {\n        goto label_3;\n    }\n    if (*((rsp + 0xf)) == 0) {\n        goto label_3;\n    }\n    if (dil != 0) {\n        goto label_24;\n    }\n    if (*(0x0061444b) == 0) {\n        goto label_3;\n    }\nlabel_24:\n    if (*(0x0061443d) != 0) {\n        goto label_19;\n    }\n    *(0x0061443c) = 1;\n    if (*(0x006143dc) <= 0) {\n        goto label_3;\n    }\nlabel_19:\n    *(0x006143e0) = 1;\n    goto label_3;\nlabel_22:\n    fcn_00403e40 (r14d, r15);\n    goto label_4;\nlabel_21:\n    fcn_00403e40 (0, 0);\n    goto label_4;\nlabel_23:\n    eax = fcn_0040aa20 (*(obj.stdin));\n    eax++;\n    if (eax != 0) {\n        goto label_5;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"standard input\");\n    rbx = rax;\n    rax = errno_location ();\n    eax = 0;\n    error (1, *(rax), rbx);\nlabel_14:\n    rax = getenv (\"POSIXLY_CORRECT\");\n    if (rax != 0) {\n        al = fcn_00405590 (2);\n        if (al == 0) {\n            eax = \"%b %e %H:%M %Y\";\n        }\n    } else {\n        eax = \"%Y-%m-%d %H:%M\";\n    }\n    *(0x006143c0) = rax;\n    goto label_6;\nlabel_18:\n    *(0x0061443c) = 1;\n    goto label_3;\n    fcn_00404de0 (0);\nlabel_9:\n    fcn_00404de0 (1);\nlabel_11:\n    rax = fcn_00408d30 (*(0x00614630));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"invalid page range %s\");\n    rcx = rbx;\n    eax = 0;\n    error (1, 0, rax);\nlabel_10:\n    edx = 5;\n    rax = dcgettext (0, '--pages=FIRST_PAGE[:LAST_PAGE]' missing argument\");\n    eax = 0;\n    error (1, 0, rax);\nlabel_15:\n    edx = 5;\n    rax = dcgettext (0, \"cannot specify number of columns when printing in parallel\");\n    eax = 0;\n    error (1, 0, rax);\nlabel_16:\n    edx = 5;\n    rax = dcgettext (0, \"cannot specify both printing across and printing in parallel\");\n    eax = 0;\n    error (1, 0, rax);\n}\n"
        },
        {
            "funcName": "fcn_004025fb",
            "funcStartAddr": "0x4025fb",
            "funcEndAddr": "0x40261a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x4025fb */\n#include <stdint.h>\n \nint32_t fcn_004025fb (void) {\n    eax = __progname;\n    if (rax != obj.__progname) {\n        eax = 0;\n        if (rax == 0) {\n            goto label_0;\n        }\n        edi = __progname;\n        void (*rax)() ();\n    }\nlabel_0:\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00402651",
            "funcStartAddr": "0x402651",
            "funcEndAddr": "0x4026a8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x402651 */\n#include <stdint.h>\n \nint64_t fcn_00402651 (int32_t argc, func fini, func init, func main, func rtld_fini, void * stack_end, char ** ubp_av) {\n    rsi = argc;\n    r8 = fini;\n    rcx = init;\n    rdi = main;\n    r9 = rtld_fini;\n    xmm0 = stack_end;\n    rdx = ubp_av;\n    if (*(0x00614368) != 0) {\n        goto label_0;\n    }\n    r12d = section..dtors;\n    ebx = 0x613e48;\n    rbx -= section..dtors;\n    rbx >>= 3;\n    rbx--;\n    do {\n        rax = imp.__libc_start_main;\n        if (rax >= rbx) {\n            goto label_1;\n        }\n        rax++;\n        *(0x00614370) = rax;\n        uint64_t (*r12 + rax*8)() ();\n    } while (1);\nlabel_1:\n    fcn_004025fb ();\n    *(0x00614368) = 1;\n    return rax;\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004026a8",
            "funcStartAddr": "0x4026a8",
            "funcEndAddr": "0x40273b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x4026a8 */\n#include <stdint.h>\n \nint64_t fcn_004026a8 (void) {\n    do {\n        esi = __progname;\n        ecx = 2;\n        rsi -= obj.__progname;\n        rsi >>= 3;\n        rax = rsi;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rsi = rax;\n        if (rax != 0) {\n            eax = 0;\n            if (rax == 0) {\n                goto label_0;\n            }\n            edi = __progname;\n            void (*rax)() ();\n        }\nlabel_0:\n        return rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_004026b0",
            "funcStartAddr": "0x4026b0",
            "funcEndAddr": "0x402708",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x4026b0 */\n#include <stdint.h>\n \nint32_t fcn_004026b0 (void) {\n    eax = *(0x00614298);\n    rdx = imp.__libc_start_main;\n    if (eax == 0) {\n        goto label_0;\n    }\n    ecx = rax - 1;\n    esi = *(0x006142b4);\n    eax = 0;\n    rcx++;\n    rcx <<= 6;\n    rcx += rdx;\n    do {\n        if (*((rdx + 0x10)) > 1) {\n            if (sil == 0) {\n                goto label_1;\n            }\n            r8d = *((rdx + 0x2c));\n            if (r8d <= 0) {\n                goto label_1;\n            }\n            edi = *((rdx + 0x30));\n            if (edi <= 0) {\n                goto label_1;\n            }\n        }\n        eax++;\nlabel_1:\n        rdx += 0x40;\n    } while (rdx != rcx);\nlabel_0:\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00402710",
            "funcStartAddr": "0x402710",
            "funcEndAddr": "0x402782",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x402710 */\n#include <stdint.h>\n \nint64_t fcn_00402710 (void) {\n    eax = *(0x00614298);\n    rdi = imp.__libc_start_main;\n    if (eax == 0) {\n        goto label_0;\n    }\n    edx = rax - 1;\n    ecx = imp.__libc_start_main;\n    rax = rdi;\n    esi = 0;\n    rdx++;\n    rdx <<= 6;\n    rdx += rdi;\n    do {\n        if (*((rax + 0x10)) == 2) {\n            *((rax + 0x10)) = 0;\n            ecx++;\n            esi = 1;\n        }\n        rax += 0x40;\n    } while (rax != rdx);\n    if (sil != 0) {\n        *(0x00614410) = ecx;\n    }\nlabel_0:\n    if (*(0x006142b4) != 0) {\n        eax = 0;\n        al = (*((rdi + 0x10)) != 3) ? 1 : 0;\n        *(0x00614410) = eax;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004027f0",
            "funcStartAddr": "0x4027f0",
            "funcEndAddr": "0x402820",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x4027f0 */\n#include <stdint.h>\n \nuint64_t fcn_004027f0 (void) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    edx = 5;\n    rax = dcgettext (0, \"integer overflow\");\n    eax = 0;\n    error (1, 0, rax);\n}\n"
        },
        {
            "funcName": "fcn_00402820",
            "funcStartAddr": "0x402820",
            "funcEndAddr": "0x402919",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x402820 */\n#include <stdint.h>\n \nuint64_t fcn_00402820 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    uint32_t var_10h;\n    uint32_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13d = edi;\n    r12d = esi;\n    rbx = rdx;\n    *((rsp + 0x18)) = 0xffffffffffffffff;\n    eax = fcn_0040a5e0 (rbx, rsp + 8, 0xa, rsp + 0x10, 0x40ce63);\n    if ((eax & 0xfffffffd) != 0) {\n        goto label_2;\n    }\n    rdi = *((rsp + 8));\n    if (rdi == rbx) {\n        goto label_0;\n    }\n    if (*((rsp + 0x10)) == 0) {\n        goto label_0;\n    }\n    eax = *(rdi);\n    if (al == 0x3a) {\n        goto label_3;\n    }\nlabel_1:\n    if (al != 0) {\n        goto label_0;\n    }\n    rax = *((rsp + 0x10));\n    *(0x00614418) = rax;\n    rax = *((rsp + 0x18));\n    *(0x00614290) = rax;\n    eax = 1;\n    return rax;\n    do {\nlabel_0:\n        eax = 0;\n        return rax;\nlabel_3:\n        rbp = rdi + 1;\n        eax = fcn_0040a5e0 (rbp, rsp + 8, 0xa, rsp + 0x18, 0x40ce63);\n        if (eax != 0) {\n            goto label_2;\n        }\n        rax = *((rsp + 8));\n    } while (rax == rbp);\n    rdx = *((rsp + 0x10));\n    if (*((rsp + 0x18)) < rdx) {\n        goto label_0;\n    }\n    eax = *(rax);\n    goto label_1;\nlabel_2:\n    edx = (int32_t) r12b;\n    r8 = rbx;\n    return fcn_0040a550 (eax, r13d, rdx, 0x40ebe0);\n}\n"
        },
        {
            "funcName": "fcn_00402920",
            "funcStartAddr": "0x402920",
            "funcEndAddr": "0x402950",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x402920 */\n#include <stdint.h>\n \nuint64_t fcn_00402920 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = strlen (rdi);\n    if (rax <= 0x7fffffff) {\n        *(0x00614270) = rbx;\n        *(0x006143dc) = eax;\n        return rax;\n    }\n    fcn_004027f0 ();\n}\n"
        },
        {
            "funcName": "fcn_00402950",
            "funcStartAddr": "0x402950",
            "funcEndAddr": "0x402991",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x402950 */\n#include <stdint.h>\n \nuint64_t fcn_00402950 (int64_t arg1) {\n    rdi = arg1;\n    edx = 5;\n    rbx = rdi;\n    rax = dcgettext (0, \"invalid number of columns\");\n    r9d = 0;\n    eax = fcn_00409680 (rbx, 1, 0x7fffffff, 0x40ce63, rax);\n    *(0x0061444b) = 1;\n    *(0x00614298) = eax;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004029a0",
            "funcStartAddr": "0x4029a0",
            "funcEndAddr": "0x402ab0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x4029a0 */\n#include <stdint.h>\n \nuint64_t fcn_004029a0 (uint32_t arg1) {\n    rdi = arg1;\n    if (*((rdi + 0x10)) == 3) {\n        goto label_1;\n    }\n    rbx = rdi;\n    rdi = *(rdi);\n    if ((*(rdi) & 0x20) != 0) {\n        goto label_2;\n    }\n    eax = fileno (rdi);\n    if (eax != 0) {\n        goto label_3;\n    }\nlabel_0:\n    if (*(0x0061444f) != 0) {\n        goto label_4;\n    }\n    edx = *(0x00614298);\n    rax = imp.__libc_start_main;\n    if (edx == 0) {\n        goto label_5;\n    }\n    edx--;\n    rdx++;\n    rdx <<= 6;\n    rdx += rax;\n    do {\n        ecx = *((rax + 0x2c));\n        *((rax + 0x10)) = 3;\n        if (ecx == 0) {\n            *((rax + 0x30)) = 0;\n        }\n        rax += 0x40;\n    } while (rax != rdx);\n    *(0x00614410)--;\n    return rax;\nlabel_4:\n    *((rbx + 0x10)) = 3;\n    *((rbx + 0x30)) = 0;\nlabel_5:\n    *(0x00614410)--;\n    return rax;\nlabel_3:\n    eax = fcn_0040aa20 (*(rbx));\n    if (eax == 0) {\n        goto label_0;\n    }\n    rdx = *((rbx + 8));\n    rax = fcn_00408bb0 (0, 3);\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    error (1, *(rax), 0x40ef8a);\nlabel_1:\n    return rax;\nlabel_2:\n    rdx = *((rbx + 8));\n    rax = fcn_00408bb0 (0, 3);\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    error (1, *(rax), 0x40ef8a);\n}\n"
        },
        {
            "funcName": "fcn_00402ab0",
            "funcStartAddr": "0x402ab0",
            "funcEndAddr": "0x402c97",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x402ab0 */\n#include <stdint.h>\n \nuint64_t fcn_00402ab0 (int64_t arg1, int64_t arg2, int64_t arg7) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_30h;\n    int64_t var_70h;\n    int64_t var_c8h;\n    int64_t var_d0h;\n    rdi = arg1;\n    rsi = arg2;\n    xmm0 = arg7;\n    ecx = 2;\n    r12d = esi;\n    rbx = rdi;\n    edi = 0x410b71;\n    rsi = rbx;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (? > ?) ? 1 : 0;\n    if (al == 0) {\n        goto label_5;\n    }\n    if (r12d >= 0) {\n        goto label_6;\n    }\nlabel_1:\n    if (*(0x00614380) == 0) {\n        goto label_7;\n    }\n    do {\nlabel_0:\n        __asm (\"movdqa xmm0, xmmword [0x00614380]\");\n        *(rsp) = xmm0;\n        r14 = *((rsp + 8));\nlabel_2:\n        rax = fcn_0040be80 (*(0x006143b8), rsp, rsp + 0x30);\n        if (rax == 0) {\n            goto label_8;\n        }\n        r8 = imp.__libc_start_main;\n        r9d = r14d;\n        rcx = rsp + 0x30;\n        rdx = imp.__libc_start_main;\n        fcn_004070f0 (0, 0xffffffffffffffff);\n        r13 = rax + 1;\n        rax = fcn_00409300 (r13);\n        r9d = r14d;\n        rcx = rsp + 0x30;\n        r8 = imp.__libc_start_main;\n        rdx = imp.__libc_start_main;\n        rdi = rax;\n        fcn_004070f0 (rdi, r13);\nlabel_4:\n        free (*(0x006143b0));\n        rax = imp.__libc_start_main;\n        *(0x006143b0) = rbp;\n        if (rax == 0) {\n            goto label_9;\n        }\nlabel_3:\n        ebx = *(0x006142ac);\n        *(0x006143a8) = rax;\n        eax = fcn_00405850 (rbp, 0);\n        ebx -= eax;\n        eax = fcn_00405850 (*(0x006143a8), 0);\n        ebx -= eax;\n        *(0x006143a0) = ebx;\n        return rax;\nlabel_5:\n        r12d = 0xffffffff;\n    } while (*(0x00614380) != 0);\nlabel_7:\n    fcn_00405550 (0x614380);\n    goto label_0;\nlabel_6:\n    rdx = rsp + 0x70;\n    esi = r12d;\n    edi = 1;\n    eax = fxstat ();\n    if (eax != 0) {\n        goto label_1;\n    }\n    r14 = *((rsp + 0xd0));\n    rax = *((rsp + 0xc8));\n    *((rsp + 8)) = r14;\n    *(rsp) = rax;\n    goto label_2;\nlabel_9:\n    eax = 0x40ce63;\n    __asm (\"cmovns rax, rbx\");\n    goto label_3;\nlabel_8:\n    rax = fcn_00409300 (0x21);\n    rax = fcn_004055f0 (*(rsp), rsp + 0x10, rdx);\n    r9d = r14d;\n    ecx = \"%s.%09d\";\n    rdi = rbp;\n    r8 = rax;\n    edx = 0x21;\n    esi = 1;\n    eax = 0;\n    sprintf_chk ();\n    goto label_4;\n}\n"
        },
        {
            "funcName": "fcn_00402ca0",
            "funcStartAddr": "0x402ca0",
            "funcEndAddr": "0x402d0c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x402ca0 */\n#include <stdint.h>\n \nint64_t fcn_00402ca0 (int64_t arg1) {\n    rdi = arg1;\n    ebx = imp.__libc_start_main;\n    if (*(0x00614434) == 0) {\n        goto label_0;\n    }\n    ebp -= ebx;\n    *(0x00614430) = ebp;\n    return;\n    do {\n        rdi = stdout;\n        rax = *((rdi + 0x28));\n        if (rax >= *((rdi + 0x30))) {\n            goto label_1;\n        }\n        rdx = rax + 1;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = 0x20;\nlabel_0:\n        ebx++;\n    } while (ebp >= ebx);\n    *(0x00614428) = ebp;\n    return rax;\nlabel_1:\n    esi = 0x20;\n    overflow ();\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00402d10",
            "funcStartAddr": "0x402d10",
            "funcEndAddr": "0x402dcc",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x402d10 */\n#include <stdint.h>\n \nint64_t fcn_00402d10 (int64_t arg3) {\n    rdx = arg3;\n    r12d = imp.__libc_start_main;\n    ebp = imp.__libc_start_main;\n    r12d += ebp;\n    do {\nlabel_0:\n        eax = r12d;\n        eax -= ebp;\n        if (eax <= 1) {\n            goto label_1;\n        }\n        ecx = \"\\b\\t\\b\\tHB\\xc4\\x81\";\n        eax = ebp;\n        edx:eax = (int64_t) eax;\n        eax = edx:eax / ecx;\n        edx = edx:eax % ecx;\n        ecx -= edx;\n        ebx = rcx + rbp;\n        if (r12d < ebx) {\n            goto label_1;\n        }\n        rdi = stdout;\n        esi = *(0x006142a0);\n        rax = *((rdi + 0x28));\n        if (rax >= *((rdi + 0x30))) {\n            goto label_2;\n        }\n        rdx = rax + 1;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = sil;\n    } while (1);\n    do {\n        rdi = stdout;\n        rax = *((rdi + 0x28));\n        if (rax >= *((rdi + 0x30))) {\n            goto label_3;\n        }\n        rdx = rax + 1;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = 0x20;\nlabel_1:\n        ebp++;\n    } while (r12d >= ebp);\n    *(0x00614428) = r12d;\n    *(0x00614430) = 0;\n    r12 = rbx;\n    return rax;\nlabel_2:\n    overflow ();\n    goto label_0;\nlabel_3:\n    esi = 0x20;\n    overflow ();\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00402dd0",
            "funcStartAddr": "0x402dd0",
            "funcEndAddr": "0x402ed3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x402dd0 */\n#include <stdint.h>\n \nint64_t fcn_00402dd0 (int64_t arg1) {\n    rdi = arg1;\n    edx = imp.__libc_start_main;\n    eax = imp.__libc_start_main;\n    if (edx <= 0) {\n        goto label_3;\n    }\n    r13d = 0;\n    r12 = *(0x00614270);\n    ebp = imp.__libc_start_main;\nlabel_0:\n    rbx = r12;\n    r14d = rbp + r12;\nlabel_1:\n    edx = r14d;\n    edx -= ebx;\n    if (edx <= 0) {\n        goto label_4;\n    }\n    do {\n        esi = *(rbx);\n        rbx++;\n        if (sil == 0x20) {\n            goto label_5;\n        }\n        if (eax > 0) {\n            fcn_00402d10 (rdi);\n            esi = *((rbx - 1));\n        }\n        rdi = stdout;\n        rax = *((rdi + 0x28));\n        if (rax >= *((rdi + 0x30))) {\n            goto label_6;\n        }\n        rdx = rax + 1;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = sil;\nlabel_2:\n        edx = r14d;\n        *(0x00614428)++;\n        eax = imp.__libc_start_main;\n        edx -= ebx;\n    } while (edx > 0);\nlabel_4:\n    edx = r13d;\n    __asm (\"cmovns edx, ebp\");\n    ebp--;\n    rcx = (int64_t) edx;\n    ebp -= edx;\n    r12 += rcx;\n    if (eax > 0) {\n        fcn_00402d10 (rdi);\n    }\n    eax = imp.__libc_start_main;\n    eax--;\n    *(0x006143d8) = eax;\n    if (eax > 0) {\n        eax = imp.__libc_start_main;\n        goto label_0;\nlabel_5:\n        eax++;\n        *(0x00614430) = eax;\n        goto label_1;\nlabel_6:\n        eax = overflow ();\n        goto label_2;\n    }\n    return rax;\nlabel_3:\n    if (eax <= 0) {\n        return rax;\n    }\n    return void (*0x402d10)() ();\n}\n"
        },
        {
            "funcName": "fcn_00402ee0",
            "funcStartAddr": "0x402ee0",
            "funcEndAddr": "0x402fe0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x402ee0 */\n#include <stdint.h>\n \nuint64_t fcn_00402ee0 (void) {\n    *(0x00614428) = 0;\n    fcn_00402ca0 (*(0x0061442c));\n    fcn_00402d10 (rdi);\n    rbx = imp.__libc_start_main;\n    if (rbx != 0) {\n        edx = 5;\n        rax = dcgettext (0, \"Page %lu\");\n        r8 = rbx;\n        edx = 0x114;\n        rdi = rbp;\n        rcx = rax;\n        esi = 1;\n        eax = 0;\n        sprintf_chk ();\n        ebx = imp.__libc_start_main;\n        eax = fcn_00405850 (rbp, 0);\n        edx = imp.__libc_start_main;\n        ecx = 0x40ce63;\n        r8 = imp.__libc_start_main;\n        ebx -= eax;\n        eax = 0;\n        esi = \"\\n\\n%*s%s%*s%s%*s%s\\n\\n\\n\";\n        edi = 1;\n        __asm (\"cmovs ebx, eax\");\n        r9d = ebx;\n        r9d >>= 1;\n        ebx -= r9d;\n        printf_chk ();\n        *(0x00614448) = 0;\n        *(0x00614428) = 0;\n        return rax;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"page number overflow\");\n    eax = 0;\n    error (1, 0, rax);\n}\n"
        },
        {
            "funcName": "fcn_00402fe0",
            "funcStartAddr": "0x402fe0",
            "funcEndAddr": "0x4031d7",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x402fe0 */\n#include <stdint.h>\n \nuint64_t fcn_00402fe0 (int64_t arg1, int64_t arg3) {\n    int64_t var_ch;\n    int64_t var_dh;\n    int64_t var_eh;\n    rdi = arg1;\n    rdx = arg3;\n    rbx = imp.__libc_start_main;\n    if (*(0x006142a8) == dil) {\n        goto label_4;\n    }\n    if (dil != 9) {\n        ebp = (int32_t) dil;\n        r12d = edi;\n        rax = ctype_b_loc ();\n        rax = *(rax);\n        if ((*((rax + rbp*2 + 1)) & 0x40) != 0) {\n            goto label_5;\n        }\n        if (*(0x006143ea) != 0) {\n            goto label_6;\n        }\n        if (*(0x006143e9) == 0) {\n            goto label_7;\n        }\n        if (r12b < 0) {\n            goto label_6;\n        }\n        eax = imp.__libc_start_main;\n        edi = r12d;\n        *(rbx) = 0x5e;\n        edi ^= 0x40;\n        esi = rax + 2;\n        *((rbx + 1)) = dil;\n        eax = 2;\n        goto label_2;\n    }\n    esi = imp.__libc_start_main;\n    eax = imp.__libc_start_main;\n    eax >>= 0x1f;\n    eax >>= 0x1d;\n    edx = rsi + rax;\n    edx &= 7;\n    eax -= edx;\n    eax += 8;\n    edx = eax;\n    if (*(0x00614435) != 0) {\n        goto label_8;\n    }\nlabel_0:\n    *(rbx) = dil;\n    eax = 1;\nlabel_1:\n    while (ecx < esi) {\n        esi += edx;\nlabel_2:\n        *(0x00614424) = esi;\n        return rax;\n        if (esi == 0) {\n            goto label_9;\n        }\n        ecx = edx;\n        ecx = -ecx;\nlabel_3:\n    }\n    *(0x00614424) = 0;\n    return rax;\nlabel_4:\n    esi = imp.__libc_start_main;\n    ecx = *(0x006142a4);\n    eax = esi;\n    edx:eax = (int64_t) eax;\n    eax = edx:eax / ecx;\n    edx = edx:eax % ecx;\n    ecx -= edx;\n    edx = ecx;\n    if (*(0x00614435) == 0) {\n        goto label_0;\n    }\n    if (ecx == 0) {\n        goto label_10;\n    }\n    eax = ecx;\nlabel_8:\n    edx = rax - 1;\n    rdx = rbx + rdx + 1;\n    do {\n        rbx++;\n        *((rbx - 1)) = 0x20;\n    } while (rbx != rdx);\n    edx = eax;\n    goto label_1;\nlabel_5:\n    eax = imp.__libc_start_main;\n    *(rbx) = r12b;\n    esi = rax + 1;\n    eax = 1;\n    goto label_2;\n    do {\nlabel_9:\n        *(0x00614424) = 0;\n        eax = 0;\n        return rax;\nlabel_6:\n        *(rbx) = 0x5c;\n        esi = 1;\n        r8d = (int32_t) r12b;\n        eax = 0;\n        ecx = \"%03o\";\n        edx = 4;\n        rdi = rsp + 0xc;\n        sprintf_chk ();\n        eax = *((rsp + 0xc));\n        *((rbx + 1)) = al;\n        eax = *((rsp + 0xd));\n        *((rbx + 2)) = al;\n        eax = *((rsp + 0xe));\n        *((rbx + 3)) = al;\n        eax = imp.__libc_start_main;\n        esi = rax + 4;\n        eax = 4;\n        goto label_2;\nlabel_7:\n        esi = imp.__libc_start_main;\n        if (r12b != 8) {\n            *(rbx) = r12b;\n            eax = 1;\n            goto label_2;\n        }\n        *(rbx) = 8;\n    } while (esi == 0);\n    ecx = 1;\n    edx = 0xffffffff;\n    eax = 1;\n    goto label_3;\nlabel_10:\n    eax = 0;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_004031e0",
            "funcStartAddr": "0x4031e0",
            "funcEndAddr": "0x40327e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x4031e0 */\n#include <stdint.h>\n \nuint64_t fcn_004031e0 (int64_t arg1) {\n    rdi = arg1;\n    ebx = edi;\n    if (*(0x00614434) == 0) {\n        goto label_0;\n    }\n    eax = imp.__libc_start_main;\n    if (dil == 0x20) {\n        goto label_1;\n    }\n    ebp = (int32_t) dil;\n    if (eax > 0) {\n        fcn_00402d10 (rdi);\n    }\n    rax = ctype_b_loc ();\n    rax = *(rax);\n    if ((*((rax + rbp*2 + 1)) & 0x40) != 0) {\n        goto label_2;\n    }\n    if (bl != 8) {\n        goto label_0;\n    }\n    *(0x00614428)--;\n    do {\nlabel_0:\n        rdi = stdout;\n        rax = *((rdi + 0x28));\n        if (rax >= *((rdi + 0x30))) {\n            goto label_3;\n        }\n        rdx = rax + 1;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = bl;\n        return rax;\nlabel_2:\n        *(0x00614428)++;\n    } while (1);\nlabel_1:\n    eax++;\n    *(0x00614430) = eax;\n    return rax;\nlabel_3:\n    esi = (int32_t) bl;\n    return overflow ();\n}\n"
        },
        {
            "funcName": "fcn_00403410",
            "funcStartAddr": "0x403410",
            "funcEndAddr": "0x403484",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x403410 */\n#include <stdint.h>\n \nint64_t fcn_00403410 (int64_t arg1, int64_t arg2, int64_t arg4) {\n    rdi = arg1;\n    rsi = arg2;\n    rcx = arg4;\n    if (*(0x0061444f) != 0) {\n        goto label_0;\n    }\n    edx = *(0x00614298);\n    rax = imp.__libc_start_main;\n    if (edx == 0) {\n        goto label_1;\n    }\n    ecx -= ecx;\n    edx--;\n    rdx++;\n    ecx = ~ecx;\n    rdx <<= 6;\n    ecx += 2;\n    rdx += rax;\n    do {\n        *((rax + 0x10)) = ecx;\n        rax += 0x40;\n    } while (rax != rdx);\nlabel_1:\n    *(rsi) = 0;\n    *(0x00614410)--;\n    return rax;\nlabel_0:\n    *(rdi) = 2;\n    *(0x00614410)--;\n    *(rsi) = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00403490",
            "funcStartAddr": "0x403490",
            "funcEndAddr": "0x4036b4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x403490 */\n#include <stdint.h>\n \nint64_t fcn_00403490 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r13 = rdi;\n    r12d = esi;\n    rbx = *(rdi);\n    rax = *((rbx + 8));\n    if (rax >= *((rbx + 0x10))) {\n        goto label_10;\n    }\n    rdx = rax + 1;\n    *((rbx + 8)) = rdx;\n    eax = *(rax);\nlabel_5:\n    if (eax == 0xc) {\n        goto label_11;\n    }\n    *((r13 + 0x39)) = 0;\n    ebp = 0;\nlabel_2:\n    if (*(0x00614390) == 0) {\n        goto label_1;\n    }\n    *((r13 + 0x39)) = 1;\n    if (eax != 0xa) {\n        goto label_12;\n    }\n    do {\nlabel_3:\n        if (*(0x00614280) != 0) {\n            if (*(0x0061444f) == 1) {\n                if (r12d != 1) {\n                    goto label_13;\n                }\n            }\n            if (bpl != 0) {\n                goto label_13;\n            }\n            *(0x00614284)++;\n        }\nlabel_13:\n        return rax;\nlabel_0:\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        eax = *(rax);\nlabel_1:\n    } while (eax == 0xa);\nlabel_12:\n    if (eax == 0xc) {\n        goto label_14;\n    }\n    if (eax == 0xffffffff) {\n        goto label_15;\n    }\n    rax = *((rbx + 8));\n    if (rax < *((rbx + 0x10))) {\n        goto label_0;\n    }\n    rdi = rbx;\n    uflow ();\n    goto label_1;\nlabel_11:\n    if (*((r13 + 0x39)) == 0) {\n        goto label_16;\n    }\n    rax = *((rbx + 8));\n    if (rax >= *((rbx + 0x10))) {\n        goto label_17;\n    }\n    rdx = rax + 1;\n    *((rbx + 8)) = rdx;\n    eax = *(rax);\nlabel_9:\n    if (eax == 0xa) {\n        goto label_18;\n    }\nlabel_7:\n    *((r13 + 0x39)) = 0;\n    bpl = (eax == 0xc) ? 1 : 0;\n    goto label_2;\nlabel_15:\n    fcn_004029a0 (r13);\n    goto label_3;\nlabel_14:\n    eax = *(0x00614390);\nlabel_4:\n    if (al == 0) {\n        goto label_6;\n    }\n    if (*(0x0061444f) != 0) {\n        goto label_19;\n    }\n    edx = *(0x00614298);\n    rax = imp.__libc_start_main;\n    if (edx == 0) {\n        goto label_6;\n    }\n    edx--;\n    rdx++;\n    rdx <<= 6;\n    rdx += rax;\n    do {\n        *((rax + 0x39)) = 0;\n        rax += 0x40;\n    } while (rax != rdx);\n    do {\nlabel_6:\n        rax = *((rbx + 8));\n        if (rax >= *((rbx + 0x10))) {\n            goto label_20;\n        }\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        edi = *(rax);\nlabel_8:\n        if (edi == 0xa) {\n            fcn_00403410 (r13 + 0x10, r13 + 0x30, rdx);\n            goto label_3;\nlabel_16:\n            ebp = *(0x00614390);\n            eax = ebp;\n            if (bpl == 0) {\n                goto label_21;\n            }\n            *((r13 + 0x39)) = 1;\n            goto label_4;\n        }\n        ungetc (rdi, rbx);\n        fcn_00403410 (r13 + 0x10, r13 + 0x30, rdx);\n        goto label_3;\nlabel_10:\n        rdi = rbx;\n        uflow ();\n        goto label_5;\nlabel_21:\n    } while (1);\nlabel_19:\n    *((r13 + 0x39)) = 0;\n    goto label_6;\nlabel_18:\n    rax = *((rbx + 8));\n    if (rax < *((rbx + 0x10))) {\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        eax = *(rax);\n        goto label_7;\nlabel_20:\n        rdi = rbx;\n        eax = uflow ();\n        edi = eax;\n        goto label_8;\nlabel_17:\n        rdi = rbx;\n        uflow ();\n        goto label_9;\n    }\n    rdi = rbx;\n    uflow ();\n    goto label_7;\n}\n"
        },
        {
            "funcName": "fcn_004036c0",
            "funcStartAddr": "0x4036c0",
            "funcEndAddr": "0x4037dd",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x4036c0 */\n#include <stdint.h>\n \nint32_t fcn_004036c0 (int64_t arg1) {\n    rdi = arg1;\n    r9d = imp.__libc_start_main;\n    ecx = 0x40ce4f;\n    eax = 0;\n    r8d = *(0x00614278);\n    rdx = 0xffffffffffffffff;\n    rdi = imp.__libc_start_main;\n    esi = 1;\n    eax = sprintf_chk ();\n    edx = *(0x00614278);\n    *(0x00614400)++;\n    eax -= edx;\n    rbx = (int64_t) eax;\n    eax = rdx - 1;\n    rbx += *(0x006143f0);\n    r12 = rbx + rax + 1;\n    if (edx <= 0) {\n        goto label_2;\n    }\n    do {\n        rbx++;\n        edi = *((rbx - 1));\n        uint64_t (*rbp)() ();\n    } while (rbx != r12);\nlabel_2:\n    edi = *(0x00614288);\n    if (*(0x00614298) <= 1) {\n        goto label_3;\n    }\n    if (dil == 9) {\n        goto label_4;\n    }\n    uint64_t (*rbp)() ();\n    do {\nlabel_0:\n        if (*(0x0061443d) != 0) {\n            if (*(0x0061444f) != 0) {\n                goto label_5;\n            }\n            eax = imp.__libc_start_main;\n            *(0x00614424) += eax;\n        }\nlabel_5:\n        return eax;\nlabel_4:\n        eax = imp.__libc_start_main;\n        eax -= *(0x00614278);\n        ebx = rax - 1;\n    } while (eax <= 0);\nlabel_1:\n    ebx--;\n    edi = 0x20;\n    uint64_t (*rbp)() ();\n    if (ebx == 0xffffffff) {\n        goto label_0;\n    }\n    ebx--;\n    edi = 0x20;\n    uint64_t (*rbp)() ();\n    if (ebx != 0xffffffff) {\n        goto label_1;\n    }\n    goto label_0;\nlabel_3:\n    uint64_t (*rbp)() ();\n    if (*(0x00614288) != 9) {\n        goto label_0;\n    }\n    esi = imp.__libc_start_main;\n    ecx = \"\\b\\t\\b\\tHB\\xc4\\x81\";\n    eax = esi;\n    edx:eax = (int64_t) eax;\n    eax = edx:eax / ecx;\n    edx = edx:eax % ecx;\n    ecx -= edx;\n    eax = rcx + rsi;\n    *(0x00614428) = eax;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_004037e0",
            "funcStartAddr": "0x4037e0",
            "funcEndAddr": "0x40383f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x4037e0 */\n#include <stdint.h>\n \nint32_t fcn_004037e0 (signed int64_t arg1) {\n    rdi = arg1;\n    eax = imp.__libc_start_main;\n    rbx = rdi;\n    edi = *((rdi + 0x34));\n    *(0x006143d4) = edi;\n    if (edi > eax) {\n        goto label_1;\n    }\n    if (*(0x006143e0) != 0) {\n        goto label_2;\n    }\n    do {\n        if (*((rbx + 0x38)) != 0) {\n            goto label_3;\n        }\nlabel_0:\n        return eax;\nlabel_1:\n        edi -= eax;\n        fcn_00402ca0 (rdi);\n        *(0x006143d4) = 0;\n    } while (*(0x006143e0) == 0);\nlabel_2:\n    fcn_00402dd0 (rdi);\n    if (*((rbx + 0x38)) == 0) {\n        goto label_0;\n    }\nlabel_3:\n    rdi = rbx + 0x20;\n    return void (*0x4036c0)() ();\n}\n"
        },
        {
            "funcName": "fcn_00403840",
            "funcStartAddr": "0x403840",
            "funcEndAddr": "0x403c7f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x403840 */\n#include <stdint.h>\n \nint64_t fcn_00403840 (uint32_t arg1) {\n    rdi = arg1;\n    rdi = *(rdi);\n    rax = *((rdi + 8));\n    if (rax >= *((rdi + 0x10))) {\n        goto label_17;\n    }\n    rdx = rax + 1;\n    *((rdi + 8)) = rdx;\n    ebx = *(rax);\nlabel_10:\n    r13d = imp.__libc_start_main;\n    if (ebx == 0xc) {\n        goto label_18;\n    }\nlabel_2:\n    *((rbp + 0x39)) = 0;\n    if (ebx != 0xa) {\n        if (ebx == 0xc) {\n            goto label_19;\n        }\n        if (ebx == 0xffffffff) {\n            goto label_0;\n        }\n        edi = (int32_t) bl;\n        eax = fcn_00402fe0 (rdi, rsi);\n        r12d = eax;\n    }\n    if (*(0x0061443d) != 0) {\n        eax = imp.__libc_start_main;\n        if (*(0x00614424) > eax) {\n            goto label_20;\n        }\n    }\n    if (*((rbp + 0x20)) == 0x402790) {\n        goto label_5;\n    }\n    *(0x006143d0) = 1;\n    if (*(0x00614448) != 0) {\n        if (*(0x006142b4) == 0) {\n            goto label_21;\n        }\n    }\nlabel_11:\n    if (*(0x0061444f) == 0) {\n        goto label_22;\n    }\n    if (*(0x0061444e) == 0) {\n        goto label_22;\n    }\n    eax = imp.__libc_start_main;\n    r13 = imp.__libc_start_main;\n    *(0x006143d8) = 0;\n    if (eax <= 0) {\n        goto label_23;\n    }\n    r14d = rax - 1;\n    r14++;\n    r14 <<= 6;\n    r14 += r13;\n    do {\n        r13 += 0x40;\n        fcn_004037e0 (r13);\n        *(0x006143d8)++;\n    } while (r14 != r13);\nlabel_23:\n    edi = *((rbp + 0x34));\n    eax = 0;\n    *(0x0061444e) = 0;\n    if (*(0x0061443d) != 0) {\n        eax = imp.__libc_start_main;\n    }\n    *(0x006143d4) = edi;\n    *(0x00614430) = eax;\n    goto label_24;\nlabel_0:\n    fcn_004029a0 (rbp);\n    eax = 1;\n    do {\nlabel_6:\n        return rax;\nlabel_22:\n        edi = imp.__libc_start_main;\nlabel_24:\n        eax = imp.__libc_start_main;\n        if (eax < edi) {\n            goto label_25;\n        }\nlabel_4:\n        if (*(0x006143e0) != 0) {\n            goto label_26;\n        }\nlabel_5:\n        if (*((rbp + 0x38)) != 0) {\n            goto label_27;\n        }\nlabel_8:\n        *(0x0061444d) = 0;\n        eax = 1;\n    } while (ebx == 0xa);\n    rbx = imp.__libc_start_main;\n    eax = r12 - 1;\n    r13 = rbx + rax + 1;\n    if (r12d == 0) {\n        goto label_1;\n    }\n    do {\n        rbx++;\n        edi = *((rbx - 1));\n        uint64_t (*rbp + 0x20)() ();\n    } while (r13 != rbx);\nlabel_1:\n    rdi = *(rbp);\n    rax = *((rdi + 8));\n    if (rax >= *((rdi + 0x10))) {\n        goto label_28;\n    }\n    rdx = rax + 1;\n    *((rdi + 8)) = rdx;\n    eax = *(rax);\nlabel_13:\n    if (eax == 0xa) {\n        goto label_29;\n    }\n    if (eax == 0xc) {\n        goto label_30;\n    }\n    if (eax == 0xffffffff) {\n        goto label_0;\n    }\n    edi = (int32_t) al;\n    ebx = imp.__libc_start_main;\n    eax = fcn_00402fe0 (rdi, rsi);\n    if (*(0x0061443d) != 0) {\n        goto label_31;\n    }\nlabel_7:\n    rbx = imp.__libc_start_main;\n    edx = rax - 1;\n    r12 = rbx + rdx + 1;\n    if (eax == 0) {\n        goto label_1;\n    }\n    do {\n        rbx++;\n        edi = *((rbx - 1));\n        uint64_t (*rbp + 0x20)() ();\n    } while (rbx != r12);\n    goto label_1;\nlabel_18:\n    rdi = *(rbp);\n    rax = *((rdi + 8));\n    rdx = *((rdi + 0x10));\n    if (*((rbp + 0x39)) == 0) {\n        goto label_32;\n    }\n    if (rax >= rdx) {\n        goto label_33;\n    }\n    rdx = rax + 1;\n    *((rdi + 8)) = rdx;\n    ebx = *(rax);\nlabel_15:\n    if (ebx != 0xa) {\n        goto label_2;\n    }\n    rdi = *(rbp);\n    rax = *((rdi + 8));\n    if (rax >= *((rdi + 0x10))) {\n        goto label_34;\n    }\n    rdx = rax + 1;\n    *((rdi + 8)) = rdx;\n    ebx = *(rax);\n    goto label_2;\nlabel_19:\n    rdi = *(rbp);\n    rax = *((rdi + 8));\n    rdx = *((rdi + 0x10));\nlabel_32:\n    if (rdx <= rax) {\n        goto label_35;\n    }\n    rdx = rax + 1;\n    *((rdi + 8)) = rdx;\n    edi = *(rax);\nlabel_14:\n    if (edi != 0xa) {\n        goto label_36;\n    }\n    *(0x0061444c) = 1;\n    if (*(0x00614448) == 0) {\n        goto label_9;\n    }\nlabel_3:\n    if (*(0x006142b4) == 0) {\n        goto label_37;\n    }\n    do {\nlabel_9:\n        if (*(0x0061444a) != 0) {\n            *(0x00614449) = 1;\n        }\nlabel_12:\n        fcn_00403410 (rbp + 0x10, rbp + 0x30, rdx);\n        eax = 1;\n        return rax;\nlabel_36:\n        eax = ungetc (rdi, *(rbp));\n        *(0x0061444c) = 1;\n    } while (*(0x00614448) == 0);\n    goto label_3;\nlabel_25:\n    edi -= eax;\n    fcn_00402ca0 (rdi);\n    *(0x006143d4) = 0;\n    goto label_4;\nlabel_26:\n    eax = fcn_00402dd0 (rdi);\n    goto label_5;\nlabel_20:\n    *(0x00614424) = r13d;\n    eax = 0;\n    goto label_6;\nlabel_31:\n    ecx = imp.__libc_start_main;\n    if (*(0x00614424) <= ecx) {\n        goto label_7;\n    }\n    *(0x00614424) = ebx;\n    eax = 0;\n    goto label_6;\nlabel_27:\n    fcn_004036c0 (rbp + 0x20);\n    goto label_8;\nlabel_29:\n    eax = 1;\n    return rax;\nlabel_30:\n    rdi = *(rbp);\n    rax = *((rdi + 8));\n    if (rax >= *((rdi + 0x10))) {\n        goto label_38;\n    }\n    rdx = rax + 1;\n    *((rdi + 8)) = rdx;\n    edi = *(rax);\nlabel_16:\n    if (edi == 0xa) {\n        goto label_9;\n    }\n    ungetc (rdi, *(rbp));\n    goto label_9;\nlabel_17:\n    eax = uflow ();\n    ebx = eax;\n    goto label_10;\nlabel_21:\n    fcn_00402ee0 ();\n    goto label_11;\nlabel_37:\n    *(0x006143d0) = 1;\n    fcn_00402ee0 ();\n    goto label_12;\nlabel_28:\n    uflow ();\n    goto label_13;\nlabel_35:\n    eax = uflow ();\n    edi = eax;\n    goto label_14;\nlabel_33:\n    eax = uflow ();\n    ebx = eax;\n    goto label_15;\nlabel_38:\n    eax = uflow ();\n    edi = eax;\n    goto label_16;\nlabel_34:\n    eax = uflow ();\n    ebx = eax;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_00403c80",
            "funcStartAddr": "0x403c80",
            "funcEndAddr": "0x403d71",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x403c80 */\n#include <stdint.h>\n \nuint64_t fcn_00403c80 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    ecx = 2;\n    edi = 0x410b71;\n    rbx = rsi;\n    rsi = rbp;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (? > ?) ? 1 : 0;\n    if (al != 0) {\n        goto label_0;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"standard input\");\n    rdi = stdin;\n    *(0x00614446) = 1;\n    *((rbx + 8)) = rax;\n    *(rbx) = rdi;\n    if (rdi == 0) {\n        goto label_1;\n    }\n    do {\n        fcn_00405480 (rdi, 2);\n        *((rbx + 0x10)) = 0;\n        *((rbx + 0x39)) = 0;\n        ebx = 1;\n        *(0x006143e4)++;\n        eax = ebx;\n        return rax;\nlabel_0:\n        *((rbx + 8)) = rbp;\n        rax = fcn_004054b0 (rbp, 0x40cff8);\n        rdi = rax;\n        *(rbx) = rax;\n    } while (rdi != 0);\nlabel_1:\n    ebx = *(0x006143e1);\n    *(0x00614420) = 1;\n    if (bl != 0) {\n        ebx = 0;\n        eax = ebx;\n        return rax;\n    }\n    rdx = rbp;\n    rax = fcn_00408bb0 (rdi, 3);\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    error (0, *(rax), 0x40ef8a);\n    eax = ebx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00403d80",
            "funcStartAddr": "0x403d80",
            "funcEndAddr": "0x403e3f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x403d80 */\n#include <stdint.h>\n \nuint64_t fcn_00403d80 (int64_t arg1) {\n    rdi = arg1;\n    rbx = *(rdi);\n    while (rax < *((rbx + 0x10))) {\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        eax = *(rax);\n        if (eax == 0xa) {\n            goto label_3;\n        }\nlabel_0:\n        if (eax == 0xc) {\n            goto label_4;\n        }\n        if (eax == 0xffffffff) {\n            goto label_5;\n        }\n        rax = *((rbx + 8));\n    }\n    rdi = rbx;\n    eax = uflow ();\n    if (eax != 0xa) {\n        goto label_0;\n    }\nlabel_3:\n    return rax;\nlabel_4:\n    rax = *((rbx + 8));\n    if (rax >= *((rbx + 0x10))) {\n        goto label_6;\n    }\n    rdx = rax + 1;\n    *((rbx + 8)) = rdx;\n    edi = *(rax);\nlabel_2:\n    if (edi != 0xa) {\n        goto label_7;\n    }\n    if (*(0x0061444a) == 0) {\n        goto label_8;\n    }\nlabel_1:\n    *(0x00614449) = 1;\n    do {\nlabel_8:\n        rsi = rbp + 0x30;\n        rdi = rbp + 0x10;\n        void (*0x403410)() ();\nlabel_5:\n        rdi = rbp;\n        void (*0x4029a0)() ();\nlabel_7:\n        ungetc (rdi, rbx);\n    } while (*(0x0061444a) == 0);\n    goto label_1;\nlabel_6:\n    rdi = rbx;\n    eax = uflow ();\n    edi = eax;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_00403e40",
            "funcStartAddr": "0x403e40",
            "funcEndAddr": "0x404ddb",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x403e40 */\n#include <stdint.h>\n \nuint64_t fcn_00403e40 (int64_t arg1, int64_t arg2) {\n    int64_t var_8h;\n    signed int64_t var_ch;\n    rdi = arg1;\n    rsi = arg2;\n    r12d = edi;\n    rbx = rsi;\n    edx = *(0x006142b0);\n    eax = rdx - 0xa;\n    *(0x00614440) = eax;\n    if (eax <= 0) {\n        goto label_34;\n    }\n    if (*(0x006142b5) == 0) {\n        goto label_35;\n    }\nlabel_2:\n    if (*(0x006143e8) != 0) {\n        edx = imp.__libc_start_main;\n        eax = imp.__libc_start_main;\n        eax >>= 0x1f;\n        eax += edx;\n        eax >>= 1;\n        *(0x00614440) = eax;\n    }\n    if (r12d != 0) {\n        goto label_36;\n    }\n    *(0x0061444f) = 0;\n    ecx = *(0x00614298);\nlabel_5:\n    if (*(0x006142b4) != 0) {\n        *(0x00614444) = 1;\n    }\n    edx = *(0x0061443c);\n    if (ecx <= 1) {\n        goto label_37;\n    }\n    if (*(0x006143e0) != 0) {\n        goto label_38;\n    }\n    eax = 0x411057;\n    esi = 0x40ce62;\n    *(0x006143dc) = 1;\n    if (dl != 0) {\n        rax = rsi;\n    }\n    *(0x006143e0) = 1;\n    *(0x00614270) = rax;\n    eax = 1;\nlabel_3:\n    *(0x0061443d) = 1;\n    *(0x00614434) = 1;\nlabel_16:\n    if (dl != 0) {\n        *(0x0061443d) = 0;\n    }\n    esi = *(0x006143fc);\n    if (sil == 0) {\n        goto label_39;\n    }\n    edx = *(0x0061427c);\n    *(0x00614284) = edx;\n    edx = *(0x00614278);\n    edi = rdx + 1;\n    if (*(0x00614288) == 9) {\n        edi = edx;\n        edi >>= 0x1f;\n        edi >>= 0x1d;\n        r8d = rdx + rdi;\n        r8d &= 7;\n        edi -= r8d;\n        edi = rdx + rdi + 8;\n    }\n    *(0x006143f8) = edi;\n    if (*(0x0061444f) == 0) {\n        goto label_39;\n    }\nlabel_4:\n    edx = rcx - 1;\n    edx *= eax;\n    if (*(0x0061444f) overflow 0) {\n        goto label_40;\n    }\nlabel_33:\n    eax = *(0x006142ac);\n    eax -= edi;\n    eax -= edx;\n    if (eax overflow 0) {\n        goto label_41;\n    }\n    edx:eax = (int64_t) eax;\n    eax = edx:eax / ecx;\n    edx = edx:eax % ecx;\n    *(0x00614438) = eax;\n    if (eax <= 0) {\n        goto label_42;\n    }\n    if (sil != 0) {\n        goto label_43;\n    }\nlabel_17:\n    free (*(0x00614398));\n    edi = 8;\n    if (*(0x006142a4) >= 8) {\n        edi = *(0x006142a4);\n    }\n    rdi = (int64_t) edi;\n    rax = fcn_00409300 (rdi);\n    *(0x006143e4) = 0;\n    *(0x00614398) = rax;\n    free (*(0x00614478));\n    rdi = *(0x00614298);\n    rax = rdi;\n    rax >>= 0x3a;\n    al = (rax != 0) ? 1 : 0;\n    rdi <<= 6;\n    eax = (int32_t) al;\n    if (rdi < 0) {\n        goto label_44;\n    }\n    if (rax != 0) {\n        goto label_44;\n    }\n    rax = fcn_00409300 (rdi);\n    *(0x00614478) = rax;\n    if (*(0x0061444f) == 0) {\n        goto label_45;\n    }\n    if (r12d == 0) {\n        goto label_46;\n    }\n    eax = r12 - 1;\n    r12 = rbx + rax*8 + 8;\n    while (al != 0) {\n        rbx += 8;\n        rbp += 0x40;\n        if (rbx == r12) {\n            goto label_46;\n        }\nlabel_0:\n        al = fcn_00403c80 (*(rbx), rbp);\n    }\n    rbx += 8;\n    *(0x00614298)--;\n    if (rbx != r12) {\n        goto label_0;\n    }\nlabel_46:\n    eax = *(0x00614298);\n    if (eax == 0) {\n        goto label_7;\n    }\n    fcn_00402ab0 (0x40ce63, 0xffffffff, rdx);\nlabel_25:\n    eax = imp.__libc_start_main;\n    *(0x00614410) = eax;\n    if (*(0x006142b4) != 0) {\n        goto label_47;\n    }\nlabel_24:\n    r13 = imp.__libc_start_main;\n    if (r13 > 1) {\n        goto label_48;\n    }\n    *(0x00614408) = 1;\nlabel_23:\n    ebp = *(0x0061443d);\n    esi = imp.__libc_start_main;\n    r8d = 0;\n    if (bpl != 0) {\n        r8d = imp.__libc_start_main;\n        r8d += esi;\n        if (*(0x0061444f) != 0) {\n            goto label_49;\n        }\n    }\nlabel_27:\n    r12d = imp.__libc_start_main;\n    r10 = imp.__libc_start_main;\n    r9d = *(0x00614298);\n    r11d = *(0x006142b4);\n    esi += r12d;\n    rdx = r10;\n    ebx = r9d;\n    eax = r11d;\n    if (r9d <= 1) {\n        goto label_50;\n    }\n    r13d = *(0x0061444f);\n    edi = *(0x006143fc);\n    rax = r10;\n    edx = 1;\n    r14d = imp.__libc_start_main;\n    r13d ^= 1;\n    while (r11b != 0) {\n        *((rax + 0x20)) = 0x402790;\n        *((rax + 0x18)) = 0x403280;\nlabel_1:\n        ecx = 0;\n        if (dil != 0) {\n            cl = (edx == 1) ? 1 : 0;\n            ecx |= r13d;\n        }\n        *((rax + 0x38)) = cl;\n        *((rax + 0x34)) = esi;\n        if (bpl == 0) {\n            goto label_51;\n        }\n        esi = r12 + r8;\n        edx++;\n        rax += 0x40;\n        r8d = rsi + r14;\n        if (edx == r9d) {\n            goto label_52;\n        }\nlabel_6:\n    }\n    *((rax + 0x20)) = fcn.004031e0;\n    *((rax + 0x18)) = fcn.00403840;\n    goto label_1;\nlabel_34:\n    *(0x006142b5) = 0;\n    *(0x0061444a) = 1;\nlabel_35:\n    *(0x00614440) = edx;\n    goto label_2;\nlabel_38:\n    eax = imp.__libc_start_main;\n    if (dl != 0) {\n        goto label_3;\n    }\n    if (eax != 1) {\n        goto label_3;\n    }\n    rsi = *(0x00614270);\n    if (*(rsi) != 9) {\n        goto label_3;\n    }\n    *(0x00614270) = 0x411057;\n    goto label_3;\nlabel_39:\n    edi = 0;\n    goto label_4;\nlabel_36:\n    if (*(0x0061444f) == 0) {\n        goto label_53;\n    }\n    *(0x00614298) = r12d;\n    ecx = r12d;\n    goto label_5;\nlabel_45:\n    if (r12d <= 0) {\n        goto label_54;\n    }\n    al = fcn_00403c80 (*(rbx), rax);\n    if (al != 0) {\n        goto label_55;\n    }\nlabel_7:\n    return rax;\nlabel_51:\n    edx++;\n    r8d = 0;\n    esi = 0;\n    rax += 0x40;\n    if (edx != r9d) {\n        goto label_6;\n    }\nlabel_52:\n    edx = r9 - 2;\n    eax = r11d;\n    rdx++;\n    rdx <<= 6;\n    rdx += r10;\nlabel_32:\n    if (r11b != 0) {\n        if (*(0x00614444) != 0) {\n            goto label_56;\n        }\n    }\n    *((rdx + 0x20)) = fcn.004031e0;\n    *((rdx + 0x18)) = fcn.00403840;\nlabel_28:\n    if (dil != 0) {\n        edi = *(0x0061444f);\n        edi ^= 1;\n        cl = (ebx == 1) ? 1 : 0;\n        edi |= ecx;\n    }\n    *((rdx + 0x38)) = dil;\n    r12d = 0;\n    rbx = r10;\n    *((rdx + 0x34)) = esi;\n    edx = *(0x00614284);\n    *(0x00614400) = edx;\n    if (al != 0) {\n        goto label_57;\n    }\nlabel_8:\n    if (r9d == 0) {\n        goto label_14;\n    }\n    eax = r9 - 1;\n    ecx = imp.__libc_start_main;\n    rax++;\n    rax <<= 6;\n    rax += r10;\n    do {\n        edi = *((rbx + 0x10));\n        edx = r12d;\n        if (edi == 0) {\n            edx = ecx;\n        }\n        rbx += 0x40;\n        *((rbx - 0x10)) = edx;\n    } while (rax != rbx);\nlabel_14:\n    eax = fcn_004026b0 ();\n    if (eax == 0) {\n        goto label_7;\n    }\n    if (*(0x006142b5) != 0) {\n        *(0x00614448) = 1;\n    }\n    ebp = imp.__libc_start_main;\n    *(0x006143d0) = 0;\n    eax = rbp + rbp;\n    if (*(0x006143e8) != 0) {\n    }\n    r13d = 0;\n    if (ebp <= 0) {\n        goto label_58;\n    }\n    eax = fcn_004026b0 ();\n    if (eax == 0) {\n        goto label_59;\n    }\n    esi = *(0x00614298);\n    *(0x00614428) = r12d;\n    *(0x00614430) = r12d;\n    rbx = imp.__libc_start_main;\n    *(0x006143d8) = r12d;\n    *(0x006143d0) = 0;\n    *(0x0061444e) = 0;\n    *(0x0061444d) = 1;\n    if (esi <= 0) {\n        goto label_60;\n    }\n    r14d = 1;\n    ecx = *((rbx + 0x30));\n    *(0x00614424) = r12d;\n    if (ecx > 0) {\n        void (*0x4043d0)() ();\n    }\nlabel_60:\n    eax = fcn_004026b0 ();\n    if (eax == 0) {\n        goto label_61;\n    }\nlabel_12:\n    if (*(0x006143e8) == 0) {\n        void (*0x404502)() ();\n    }\nlabel_31:\n    eax = r9 - 1;\n    rax++;\n    rax <<= 6;\n    rax += r10;\n    do {\n        edx = *((r10 + 0x10));\n        if (edx == 0) {\n            *((r10 + 0x39)) = 1;\n        }\n        r10 += 0x40;\n    } while (r10 != rax);\nlabel_59:\n    *(0x006143d0) = r13b;\n    if (r13b != 0) {\n        if (*(0x006142b5) != 0) {\n            goto label_62;\n        }\n    }\nlabel_30:\n    if (*(0x0061444a) == 0) {\n        goto label_63;\n    }\n    if (*(0x00614449) == 0) {\n        goto label_63;\n    }\n    rdi = stdout;\n    rax = *((rdi + 0x28));\n    if (rax >= *((rdi + 0x30))) {\n        void (*0x404d58)() ();\n    }\nlabel_63:\n    rax = imp.__libc_start_main;\n    rax++;\n    *(0x00614408) = rax;\n    if (rax > *(0x00614290)) {\n        goto label_7;\n    }\n    fcn_00402710 ();\n    r10 = imp.__libc_start_main;\n    eax = *(0x006142b4);\n    r9d = *(0x00614298);\n    rbx = r10;\n    if (al == 0) {\n        goto label_8;\n    }\nlabel_57:\n    r8d = *(0x00614444);\n    eax = r9d;\n    *(0x00614468) = r12d;\n    *((rsp + 0xc)) = eax;\n    if (eax <= 0) {\n        goto label_64;\n    }\n    edx = rax - 1;\n    rax = r10;\n    rdx++;\n    rdx <<= 6;\n    rdx += r10;\n    do {\n        *((rax + 0x2c)) = 0;\n        rax += 0x40;\n    } while (rax != rdx);\n    eax = imp.__libc_start_main;\n    if (eax == 0) {\n        goto label_65;\n    }\n    *((rsp + 8)) = 1;\n    r13d = 0;\n    ebp = 0;\n    r15d = 0;\nlabel_11:\n    r14d = imp.__libc_start_main;\n    *((rbx + 0x28)) = ebp;\n    if (r14d != 0) {\n        goto label_10;\n    }\n    goto label_66;\n    do {\nlabel_9:\n        r14d--;\n        if (r14d == 0) {\n            goto label_66;\n        }\nlabel_10:\n        eax = imp.__libc_start_main;\n        if (eax == 0) {\n            goto label_67;\n        }\n        r11d = *((rbx + 0x10));\n    } while (r11d != 0);\n    *(0x00614424) = r12d;\n    al = fcn_00403840 (rbx);\n    if (al == 0) {\n        goto label_68;\n    }\nlabel_13:\n    r10d = *((rbx + 0x10));\n    eax = imp.__libc_start_main;\n    if (r10d == 0) {\n        goto label_69;\n    }\n    if (eax == r13d) {\n        goto label_9;\n    }\nlabel_69:\n    rsi = imp.__libc_start_main;\n    *((rbx + 0x2c))++;\n    ebp++;\n    rdx = imp.__libc_start_main;\n    *((rsi + r15*4)) = r13d;\n    esi = imp.__libc_start_main;\n    r13d = eax;\n    *((rdx + r15*4)) = esi;\n    r15d = ebp;\n    r14d--;\n    if (r14d != 0) {\n        goto label_10;\n    }\nlabel_66:\n    rbx += 0x40;\n    ecx = *((rsp + 8));\n    eax = r13d;\n    rsi = r15*4;\n    if (*((rsp + 0xc)) < ecx) {\n        goto label_70;\n    }\n    r9d = imp.__libc_start_main;\n    if (r9d != 0) {\n        goto label_11;\n    }\nlabel_70:\n    rbx = imp.__libc_start_main;\n    r9d = *(0x00614298);\n    r8d = *(0x00614444);\n    r10 = rbx;\n    goto label_18;\nlabel_61:\n    if (*(0x006142b5) != 0) {\n        goto label_12;\n    }\nlabel_68:\n    fcn_00403d80 (rbx);\n    goto label_13;\nlabel_67:\n    r10 = imp.__libc_start_main;\n    r9d = *(0x00614298);\n    eax = r13d;\n    rsi = r15*4;\n    r8d = *(0x00614444);\n    rbx = r10;\nlabel_18:\n    rdx = imp.__libc_start_main;\n    r14d = r9 - 1;\n    *((rdx + rsi)) = eax;\n    if (r8b == 0) {\n        goto label_71;\n    }\n    if (r9d <= 0) {\n        goto label_72;\n    }\n    eax = ebp;\n    r13d = r9 + 1;\n    edi = 0;\n    rsi = r10;\n    edx:eax = (int64_t) eax;\n    ecx = 1;\n    eax = edx:eax / r9d;\n    edx = edx:eax % r9d;\n    r15d = rax + 1;\n    do {\n        r11d = eax;\n        *((rsi + 0x28)) = edi;\n        if (edx >= ecx) {\n            r11d = r15d;\n        }\n        ecx++;\n        rsi += 0x40;\n        *((rsi - 0x14)) = r11d;\n        edi += r11d;\n    } while (ecx != r13d);\nlabel_72:\n    if (r14d == 0) {\n        goto label_73;\n    }\nlabel_15:\n    edx = r9 - 2;\n    rax = r10;\n    rbx = rdx;\n    rdx++;\n    rdx <<= 6;\n    rdx += r10;\n    do {\n        ecx = *((rax + 0x2c));\n        rax += 0x40;\n        *((rax - 0x10)) = ecx;\n    } while (rax != rdx);\n    rbx++;\n    rbx <<= 6;\n    rbx += r10;\n    if (r8b == 0) {\n        goto label_74;\n    }\nlabel_73:\n    eax = *((rbx + 0x2c));\n    *((rbx + 0x30)) = eax;\n    goto label_14;\nlabel_71:\n    if (r14d != 0) {\n        goto label_15;\n    }\nlabel_74:\n    r8d = *((rbx + 0x10));\n    if (r8d != 0) {\n        goto label_75;\n    }\n    eax = imp.__libc_start_main;\n    *((rbx + 0x30)) = eax;\n    goto label_14;\nlabel_62:\n    if (*(0x00614447) != 0) {\n        void (*0x404970)() ();\n    }\nlabel_75:\n    *((rbx + 0x30)) = 0;\n    goto label_14;\nlabel_37:\n    *(0x006142b4) = 0;\n    eax = imp.__libc_start_main;\n    goto label_16;\nlabel_43:\n    free (*(0x006143f0));\n    rdi = *(0x00614278);\n    rax = rdi;\n    rdi++;\n    eax = 0xc;\n    if (eax <= 0xb) {\n        rdi = rax;\n    }\n    rax = fcn_00409300 (rdi);\n    *(0x006143f0) = rax;\n    goto label_17;\nlabel_64:\n    eax = 0;\nlabel_65:\n    esi = 0;\n    ebp = 0;\n    goto label_18;\nlabel_48:\n    r12d = 1;\nlabel_22:\n    rbx = imp.__libc_start_main;\n    r14d = 1;\n    r9d = *(0x00614298);\n    if (*(0x00614440) <= 1) {\n        goto label_76;\n    }\nlabel_20:\n    if (r9d <= 0) {\n        goto label_77;\n    }\n    while (eax != 0) {\n        ebp++;\n        rbx += 0x40;\n        if (ebp > r9d) {\n            goto label_78;\n        }\nlabel_19:\n        eax = *((rbx + 0x10));\n    }\n    ebp++;\n    rbx += 0x40;\n    fcn_00403490 (rbx, ebp);\n    r9d = *(0x00614298);\n    if (ebp <= r9d) {\n        goto label_19;\n    }\nlabel_78:\n    rbx = imp.__libc_start_main;\nlabel_77:\n    r14d++;\n    if (r14d < *(0x00614440)) {\n        goto label_20;\n    }\nlabel_76:\n    *(0x00614390) = 1;\n    if (r9d <= 0) {\n        goto label_79;\n    }\n    while (eax != 0) {\n        ebp++;\n        rbx += 0x40;\n        if (ebp > r9d) {\n            goto label_80;\n        }\nlabel_21:\n        eax = *((rbx + 0x10));\n    }\n    ebp++;\n    rbx += 0x40;\n    fcn_00403490 (rbx, ebp);\n    r9d = *(0x00614298);\n    if (ebp <= r9d) {\n        goto label_21;\n    }\nlabel_80:\n    if (*(0x006142b4) == 0) {\n        goto label_79;\n    }\n    rax = imp.__libc_start_main;\n    if (r9d <= 0) {\n        goto label_79;\n    }\n    edx = r9 - 1;\n    rdx++;\n    rdx <<= 6;\n    rdx += rax;\n    do {\n        if (*((rax + 0x10)) != 3) {\n            *((rax + 0x10)) = 2;\n        }\n        rax += 0x40;\n    } while (rax != rdx);\nlabel_79:\n    fcn_00402710 ();\n    eax = imp.__libc_start_main;\n    *(0x00614390) = 0;\n    if (eax <= 0) {\n        goto label_81;\n    }\n    r12++;\n    if (r13 != r12) {\n        goto label_22;\n    }\nlabel_29:\n    rax = imp.__libc_start_main;\n    *(0x00614408) = rax;\n    goto label_23;\nlabel_47:\n    ebx = imp.__libc_start_main;\n    ebx *= *(0x00614298);\n    if (r13 overflow r12) {\n        goto label_82;\n    }\n    r12d = ebx;\n    r12d++;\n    if (r12d overflow 0) {\n        goto label_82;\n    }\n    ebp = imp.__libc_start_main;\n    ebp++;\n    if (ebp overflow 0) {\n        goto label_82;\n    }\n    ebp *= ebx;\n    if (ebp overflow 0) {\n        goto label_82;\n    }\n    free (*(0x00614458));\n    rdi = (int64_t) r12d;\n    rax = rdi;\n    rax >>= 0x3e;\n    al = (rax != 0) ? 1 : 0;\n    rdi <<= 2;\n    eax = (int32_t) al;\n    if (rdi < 0) {\n        goto label_44;\n    }\n    if (rax != 0) {\n        goto label_44;\n    }\n    rax = fcn_00409300 (rdi);\n    *(0x00614458) = rax;\n    free (*(0x00614450));\n    rdi = (int64_t) ebx;\n    rax = rdi;\n    rax >>= 0x3e;\n    al = (rax != 0) ? 1 : 0;\n    rdi <<= 2;\n    eax = (int32_t) al;\n    if (rdi < 0) {\n        goto label_44;\n    }\n    if (rax != 0) {\n        goto label_44;\n    }\n    rax = fcn_00409300 (rdi);\n    rbx = (int64_t) ebp;\n    *(0x00614450) = rax;\n    free (*(0x00614470));\n    eax = *(0x006143e0);\n    rdi = rax + 1;\n    rax = rbx;\n    rdx:rax = rax * rdi;\n    __asm (\"seto dl\");\n    edx = (int32_t) dl;\n    if (rax < 0) {\n        goto label_44;\n    }\n    if (rdx != 0) {\n        goto label_44;\n    }\n    rax = fcn_00409300 (rax);\n    *(0x00614470) = rax;\n    eax = *(0x006143e0);\n    rax++;\n    rbx *= rax;\n    *(0x00614460) = rbx;\n    goto label_24;\nlabel_54:\n    edx = 5;\n    rax = dcgettext (0, \"standard input\");\n    *((rbp + 0x39)) = 0;\n    *((rbp + 8)) = rax;\n    rax = stdin;\n    *((rbp + 0x10)) = 0;\n    *(rbp) = rax;\n    *(0x00614446) = 1;\n    *(0x006143e4)++;\n    fcn_00402ab0 (0x40ce63, 0xffffffff, rdx);\n    *((rbp + 0x2c)) = 0;\nlabel_26:\n    esi = *(0x00614298);\n    rax = *((rbp + 8));\n    rdx = rbp + 0x40;\n    rcx = *(rbp);\n    if (esi == 1) {\n        goto label_25;\n    }\n    esi -= 2;\n    rsi += 2;\n    rsi <<= 6;\n    rbp += rsi;\n    do {\n        *((rdx + 8)) = rax;\n        rdx += 0x40;\n        *((rdx - 0x40)) = rcx;\n        *((rdx - 0x30)) = 0;\n        *((rdx - 7)) = 0;\n        *((rdx - 0x14)) = 0;\n    } while (rdx != rbp);\n    goto label_25;\nlabel_55:\n    eax = fileno (*(rbp));\n    fcn_00402ab0 (*(rbx), eax, rdx);\n    *((rbp + 0x2c)) = 0;\n    goto label_26;\nlabel_49:\n    if (*(0x006143fc) == 0) {\n        goto label_27;\n    }\n    r8d += *(0x006143f8);\n    goto label_27;\nlabel_56:\n    *((rdx + 0x20)) = 0x402790;\n    *((rdx + 0x18)) = 0x403280;\n    goto label_28;\nlabel_81:\n    edx = 5;\n    rax = dcgettext (0, \"starting page number %lu exceeds page count %lu\");\n    r8 = r12;\n    rcx = r13;\n    eax = 0;\n    error (0, 0, rax);\n    eax = imp.__libc_start_main;\n    if (eax <= 0) {\n        goto label_7;\n    }\n    goto label_29;\n    if (eax != 0) {\nlabel_58:\n        goto label_30;\n    }\n    if (r9d > 0) {\n        goto label_31;\n    }\n    goto label_30;\nlabel_50:\n    ebx = 1;\n    edi = *(0x006143fc);\n    goto label_32;\nlabel_82:\n    fcn_004027f0 ();\nlabel_41:\n    *(0x00614438) = 0;\nlabel_42:\n    edx = 5;\n    rax = dcgettext (0, \"page width too narrow\");\n    eax = 0;\n    error (1, 0, rax);\nlabel_44:\n    fcn_00409550 ();\nlabel_40:\n    edx = 0x7fffffff;\n    goto label_33;\nlabel_53:\n    ecx = *(0x00614298);\n    goto label_5;\n}\n"
        },
        {
            "funcName": "fcn_00404de0",
            "funcStartAddr": "0x404de0",
            "funcEndAddr": "0x4052dd",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x404de0 */\n#include <stdint.h>\n \nuint64_t fcn_00404de0 (int64_t arg1) {\n    char * var_8h;\n    int64_t var_10h;\n    char * var_18h;\n    char * var_20h;\n    char * var_28h;\n    char * var_30h;\n    char * var_38h;\n    char * var_40h;\n    char * var_48h;\n    char * var_50h;\n    char * var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    rdi = arg1;\n    edx = 5;\n    ebx = edi;\n    rbp = imp.__libc_start_main;\n    if (edi != 0) {\n        rax = dcgettext (0, \"Try '%s --help' for more information.\\n\");\n        rdi = stderr;\n        rcx = rbp;\n        esi = 1;\n        rdx = rax;\n        eax = 0;\n        fprintf_chk ();\nlabel_0:\n        exit (ebx);\n    }\n    rax = dcgettext (0, \"Usage: %s [OPTION]... [FILE]...\\n\");\n    rdx = rbp;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"Paginate or columnate FILE(s) for printing.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nWith no FILE, or when FILE is -, read standard input.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nMandatory arguments to long options are mandatory for short options too.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  +FIRST_PAGE[:LAST_PAGE], --pages=FIRST_PAGE[:LAST_PAGE]\\n                    begin [stop] printing with page FIRST_[LAST_]PAGE\\n  -COLUMN, --columns=COLUMN\\n                    output COLUMN columns and print columns down,\\n                    unless -a is used. Balance number of lines in the\\n                    columns on each page\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -a, --across      print columns across rather than down, used together\\n                    with -COLUMN\\n  -c, --show-control-chars\\n                    use hat notation (^G) and octal backslash notation\\n  -d, --double-space\\n                    double space the output\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -D, --date-format=FORMAT\\n                    use FORMAT for the header date\\n  -e[CHAR[WIDTH]], --expand-tabs[=CHAR[WIDTH]]\\n                    expand input CHARs (TABs) to tab WIDTH (8)\\n  -F, -f, --form-feed\\n                    use form feeds instead of newlines to separate pages\\n                    (by a 3-line page header with -F or a 5-line header\\n                    and trailer without -F)\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -h, --header=HEADER\\n                    use a centered HEADER instead of filename in page header,\\n                    -h \\\"\\\" prints a blank line, don't use -h\\\"\\\"\\n  -i[CHAR[WIDTH]], --output-tabs[=CHAR[WIDTH]]\\n                    replace spaces with CHARs (TABs) to tab WIDTH (8)\\n  -J, --join-lines  merge full lines, turns off -W line truncation, no column\\n                    alignment, --sep-string[=STRING] sets separators\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -l, --length=PAGE_LENGTH\\n                    set the page length to PAGE_LENGTH (66) lines\\n                    (default number of lines of text 56, and with -F 63).\\n                    implies -t if PAGE_LENGTH <= 10\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -m, --merge       print all files in parallel, one in each column,\\n                    truncate lines, but join lines of full length with -J\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -n[SEP[DIGITS]], --number-lines[=SEP[DIGITS]]\\n                    number lines, use DIGITS (5) digits, then SEP (TAB),\\n                    default counting starts with 1st line of input file\\n  -N, --first-line-number=NUMBER\\n                    start counting with NUMBER at 1st line of first\\n                    page printed (see +FIRST_PAGE)\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -o, --indent=MARGIN\\n                    offset each line with MARGIN (zero) spaces, do not\\n                    affect -w or -W, MARGIN will be added to PAGE_WIDTH\\n  -r, --no-file-warnings\\n                    omit warning when a file cannot be opened\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -s[CHAR], --separator[=CHAR]\\n                    separate columns by a single character, default for CHAR\\n                    is the <TAB> character without -w and 'no char' with -w.\\n                    -s[CHAR] turns off line truncation of all 3 column\\n                    options (-COLUMN|-a -COLUMN|-m) except -w is set\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -S[STRING], --sep-string[=STRING]\\n                    separate columns by STRING,\\n                    without -S: Default separator <TAB> with -J and <space>\\n                    otherwise (same as -S\\\" \\\"), no effect on column options\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -t, --omit-header  omit page headers and trailers;\\n                     implied if PAGE_LENGTH <= 10\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -T, --omit-pagination\\n                    omit page headers and trailers, eliminate any pagination\\n                    by form feeds set in input files\\n  -v, --show-nonprinting\\n                    use octal backslash notation\\n  -w, --width=PAGE_WIDTH\\n                    set page width to PAGE_WIDTH (72) characters for\\n                    multiple text-column output only, -s[char] turns off (72)\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -W, --page-width=PAGE_WIDTH\\n                    set page width to PAGE_WIDTH (72) characters always,\\n                    truncate lines, except -J option is set, no interference\\n                    with -S or -s\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --help     display this help and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --version  output version information and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    *(rsp) = 0x40ce7d;\n    rax = rsp;\n    *((rsp + 8)) = \"test invocation\";\n    *((rsp + 0x10)) = 0x40cef7;\n    *((rsp + 0x18)) = \"Multi-call invocation\";\n    *((rsp + 0x20)) = \"sha224sum\";\n    *((rsp + 0x28)) = \"sha2 utilities\";\n    *((rsp + 0x30)) = \"sha256sum\";\n    *((rsp + 0x38)) = \"sha2 utilities\";\n    *((rsp + 0x40)) = \"sha384sum\";\n    *((rsp + 0x48)) = \"sha2 utilities\";\n    *((rsp + 0x50)) = \"sha512sum\";\n    *((rsp + 0x58)) = \"sha2 utilities\";\n    *((rsp + 0x60)) = 0;\n    *((rsp + 0x68)) = 0;\n    do {\n        rax += 0x10;\n        rdi = *(rax);\n        if (rdi == 0) {\n            goto label_2;\n        }\n        esi = 0x40ce7a;\n        ecx = 3;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        dl = (rdi > 0) ? 1 : 0;\n    } while (dl != 0);\nlabel_2:\n    rbp = *((rax + 8));\n    edx = 5;\n    esi = \"\\n%s online help: <%s>\\n\";\n    edi = 0;\n    if (rbp == 0) {\n        goto label_3;\n    }\n    rax = dcgettext (rdi, rsi);\n    edi = 1;\n    ecx = \"https://www.gnu.org/software/coreutils/\";\n    edx = \"GNU coreutils\";\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rax = setlocale (5, 0);\n    if (rax != 0) {\n        eax = strncmp (rax, 0x40cf01, 3);\n        if (eax != 0) {\n            goto label_4;\n        }\n    }\nlabel_1:\n    edx = 5;\n    r12d = 0x40ce99;\n    rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n    ecx = 0x40ce7a;\n    edx = \"https://www.gnu.org/software/coreutils/\";\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    ecx = 0x40ce63;\n    r12 = rcx;\n    while (1) {\n        edx = 5;\n        rax = dcgettext (0, \"or available locally via: info '(coreutils) %s%s'\\n\");\n        rcx = r12;\n        rdx = rbp;\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        goto label_0;\nlabel_3:\n        rax = dcgettext (rdi, rsi);\n        edi = 1;\n        ecx = \"https://www.gnu.org/software/coreutils/\";\n        edx = \"GNU coreutils\";\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        rax = setlocale (5, 0);\n        if (rax != 0) {\n            eax = strncmp (rax, 0x40cf01, 3);\n            if (eax != 0) {\n                goto label_5;\n            }\n        }\n        edx = 5;\n        rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n        ecx = 0x40ce7a;\n        edx = \"https://www.gnu.org/software/coreutils/\";\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        r12d = 0x40ce99;\n        printf_chk ();\n    }\nlabel_5:\nlabel_4:\n    edx = 5;\n    rax = dcgettext (0, \"Report %s translation bugs to <https://translationproject.org/team/>\\n\");\n    edx = 0x40ce7a;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_004052e0",
            "funcStartAddr": "0x4052e0",
            "funcEndAddr": "0x4053aa",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x4052e0 */\n#include <stdint.h>\n \nint64_t fcn_004052e0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    uint32_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r12d = esi;\n    rbx = rdi;\n    esi = *(rdi);\n    eax = esi;\n    esi -= 0x30;\n    if (esi > 9) {\n        *(rdx) = al;\n        eax = *((rdi + 1));\n        rbx++;\n    }\n    if (al == 0) {\n        return eax;\n    }\n    eax = fcn_00409e00 (rbx, 0, 0xa, rsp + 8, 0x40ce63);\n    if (eax == 0) {\n        rax = *((rsp + 8));\n        rdx = rax - 1;\n        if (rdx > 0x7ffffffe) {\n            goto label_0;\n        }\n        *(rbp) = eax;\n        return rax;\n    }\nlabel_0:\n    r12d = (int32_t) r12b;\n    rax = fcn_00408d30 (rbx);\n    edx = 5;\n    rax = dcgettext (0, '-%c' extra characters or invalid number in the argument: %s\");\n    esi = 0x4b;\n    rbx = rax;\n    if (*((rsp + 8)) <= 0x7fffffff) {\n        rax = errno_location ();\n    }\n    r8 = rbp;\n    ecx = r12d;\n    eax = 0;\n    error (0, *(rax), rbx);\n    return fcn_00404de0 (1);\n}\n"
        },
        {
            "funcName": "fcn_00405480",
            "funcStartAddr": "0x405480",
            "funcEndAddr": "0x4054a1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x405480 */\n#include <stdint.h>\n \nuint32_t fcn_00405480 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    if (rdi != 0) {\n        ebx = esi;\n        eax = fileno (rdi);\n        ecx = ebx;\n        edx = 0;\n        esi = 0;\n        edi = eax;\n        void (*0x401ad0)() ();\n    }\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_004054b0",
            "funcStartAddr": "0x4054b0",
            "funcEndAddr": "0x405543",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x4054b0 */\n#include <stdint.h>\n \nuint64_t fcn_004054b0 (int64_t arg2, const char * filename) {\n    rsi = arg2;\n    rdi = filename;\n    rax = fopen (rdi, rsi);\n    rbx = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    eax = fileno (rax);\n    while (rax != 0) {\nlabel_0:\n        rax = rbx;\n        return rax;\n        eax = fcn_00408d50 (eax, rsi, rdx);\n        r12d = eax;\n        if (eax < 0) {\n            goto label_1;\n        }\n        eax = fcn_0040aa20 (rbx);\n        if (eax != 0) {\n            goto label_2;\n        }\n        rsi = rbp;\n        edi = r12d;\n        rax = fdopen ();\n        rbx = rax;\n    }\nlabel_2:\n    rax = errno_location ();\n    ebp = *(rax);\n    rbx = rax;\n    close (r12d);\n    *(rbx) = ebp;\n    ebx = 0;\n    goto label_0;\nlabel_1:\n    rax = errno_location ();\n    ebx = 0;\n    r12d = *(rax);\n    fcn_0040aa20 (rbx);\n    *(rbp) = r12d;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00405550",
            "funcStartAddr": "0x405550",
            "funcEndAddr": "0x40558a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x405550 */\n#include <stdint.h>\n \nuint64_t fcn_00405550 (int64_t arg1) {\n    signed int64_t var_8h;\n    rdi = arg1;\n    rsi = rdi;\n    rbx = rdi;\n    edi = 0;\n    eax = clock_gettime ();\n    if (eax != 0) {\n        esi = 0;\n        rdi = rsp;\n        gettimeofday ();\n        rax = *(rsp);\n        *(rbx) = rax;\n        rax = *((rsp + 8)) * 0x3e8;\n        *((rbx + 8)) = rax;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405590",
            "funcStartAddr": "0x405590",
            "funcEndAddr": "0x4055ee",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x405590 */\n#include <stdint.h>\n \nuint64_t fcn_00405590 (int32_t category) {\n    rdi = category;\n    rax = setlocale (rdi, 0);\n    rdx = rax;\n    eax = 1;\n    if (rdx != 0) {\n        ecx = 2;\n        edi = 0x40ef8d;\n        rsi = rdx;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (rdx > 0) ? 1 : 0;\n        eax = 0;\n        if (cl != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    edi = \"POSIX\";\n    ecx = 6;\n    rsi = rdx;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (cl > 0) ? 1 : 0;\n    al = (al != 0) ? 1 : 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004055f0",
            "funcStartAddr": "0x4055f0",
            "funcEndAddr": "0x40568c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x4055f0 */\n#include <stdint.h>\n \nint64_t fcn_004055f0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = rsi + 0x14;\n    *((rsi + 0x14)) = 0;\n    r8d = 0x30;\n    rsi = 0xcccccccccccccccd;\n    r9 = 0x6666666666666667;\n    if (rdi < 0) {\n        goto label_0;\n    }\n    do {\n        rax = rdi;\n        rcx--;\n        rdx:rax = rax * rsi;\n        rdx >>= 3;\n        rax = rdx * 5;\n        rax += rax;\n        rdi -= rax;\n        edi += 0x30;\n        *(rcx) = dil;\n        rdi = rdx;\n    } while (rdx != 0);\n    rax = rcx;\n    return rax;\n    do {\n        rcx = rsi;\nlabel_0:\n        rax = rdi;\n        rsi = rcx - 1;\n        rdx:rax = rax * r9;\n        rax = rdi;\n        rax >>= 0x3f;\n        rdx >>= 2;\n        rdx -= rax;\n        rax = rdx * 5;\n        eax = r8 + rax*2;\n        eax -= edi;\n        rdi = rdx;\n        *((rcx - 1)) = al;\n    } while (rdx != 0);\n    rcx -= 2;\n    *((rsi - 1)) = 0x2d;\n    rax = rcx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405850",
            "funcStartAddr": "0x405850",
            "funcEndAddr": "0x405a33",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x405850 */\n#include <stdint.h>\n \nuint64_t fcn_00405850 (int64_t arg1, int64_t arg2) {\n    wint_t wc;\n    mbstate_t * ps;\n    rdi = arg1;\n    rsi = arg2;\nlabel_7:\n    r15d = edx;\n    r13 = rdi + rsi;\n    rbx = rdi;\n    rax = ctype_get_mb_cur_max ();\n    if (rax <= 1) {\n        goto label_8;\n    }\n    r12d = 0;\n    if (rbx >= r13) {\n        goto label_5;\n    }\n    r14d = 1;\n    while (al <= 0x3f) {\n        if (al < 0x25) {\n            eax -= 0x20;\n            if (al > 3) {\n                goto label_9;\n            }\n        }\nlabel_0:\n        rbx++;\n        r12d++;\nlabel_1:\n        if (rbx >= r13) {\n            goto label_5;\n        }\n        eax = *(rbx);\n    }\n    if (al < 0x41) {\n        goto label_9;\n    }\n    if (al <= 0x5f) {\n        goto label_0;\n    }\n    eax -= 0x61;\n    if (al <= 0x1d) {\n        goto label_0;\n    }\nlabel_9:\n    *((rsp + 8)) = 0;\n    goto label_10;\nlabel_2:\n    edx = 0x7fffffff;\n    edx -= r12d;\n    if (edx < eax) {\n        goto label_11;\n    }\n    r12d += eax;\nlabel_3:\n    rbx += rbp;\n    eax = mbsinit (rsp + 8);\n    if (eax != 0) {\n        goto label_1;\n    }\nlabel_10:\n    rdx -= rbx;\n    rax = fcn_0040ba50 (rsp + 4, rbx, r13, rsp + 8);\n    if (rax == -1) {\n        goto label_12;\n    }\n    if (rax == 0xfffffffffffffffe) {\n        goto label_13;\n    }\n    edi = *((rsp + 4));\n    if (rax == 0) {\n    }\n    eax = wcwidth ();\n    if (eax >= 0) {\n        goto label_2;\n    }\n    if ((r15b & 2) != 0) {\n        goto label_4;\n    }\n    eax = iswcntrl (*((rsp + 4)));\n    if (eax != 0) {\n        goto label_3;\n    }\n    if (r12d == 0x7fffffff) {\n        goto label_11;\n    }\n    r12d++;\n    goto label_3;\nlabel_12:\n    if ((r15b & 1) == 0) {\n        goto label_0;\n    }\nlabel_4:\n    r12d = 0xffffffff;\n    do {\nlabel_5:\n        eax = r12d;\n        return rax;\nlabel_8:\n        r12d = 0;\n    } while (rbx >= r13);\n    rax = ctype_b_loc ();\n    r12d = 0;\n    r15d &= 2;\n    rdx = *(rax);\nlabel_6:\n    rbx++;\n    eax = *((rbx - 1));\n    eax = *((rdx + rax*2));\n    if ((ah & 0x40) != 0) {\n        goto label_14;\n    }\n    if (r15d != 0) {\n        goto label_4;\n    }\n    if ((al & 2) != 0) {\n        goto label_15;\n    }\nlabel_14:\n    if (r12d == 0x7fffffff) {\n        goto label_5;\n    }\n    r12d++;\nlabel_15:\n    if (r13 != rbx) {\n        goto label_6;\n    }\n    goto label_5;\nlabel_13:\n    if ((r15b & 1) != 0) {\n        goto label_4;\n    }\n    r12d++;\n    rbx = r13;\n    goto label_1;\nlabel_11:\n    r12d = 0x7fffffff;\n    goto label_5;\n    rbx = rdi;\n    rax = strlen (rdi);\n    edx = ebp;\n    rdi = rbx;\n    rsi = rax;\n    goto label_7;\n}\n"
        },
        {
            "funcName": "fcn_00405880",
            "funcStartAddr": "0x405880",
            "funcEndAddr": "0x4058c1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x405880 */\n#include <stdint.h>\n \nuint64_t fcn_00405880 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r12 = rsi;\n    rbx = rdx - 1;\n    rax = ctype_tolower_loc ();\n    do {\n        ecx = *((r12 + rbx));\n        rdx = *(rax);\n        edx = *((rdx + rcx*4));\n        *((rbp + rbx)) = dl;\n        rbx--;\n    } while (rbx != -1);\nlabel_0:\n    rax = rbp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004058d0",
            "funcStartAddr": "0x4058d0",
            "funcEndAddr": "0x405911",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x4058d0 */\n#include <stdint.h>\n \nuint64_t fcn_004058d0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r12 = rsi;\n    rbx = rdx - 1;\n    rax = ctype_toupper_loc ();\n    do {\n        ecx = *((r12 + rbx));\n        rdx = *(rax);\n        edx = *((rdx + rcx*4));\n        *((rbp + rbx)) = dl;\n        rbx--;\n    } while (rbx != -1);\nlabel_0:\n    rax = rbp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405920",
            "funcStartAddr": "0x405920",
            "funcEndAddr": "0x4070e5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x405920 */\n#include <stdint.h>\n \nvoid fcn_00405920 (int64_t arg_4d8h_2, tm * arg_4d0h, int64_t arg_4d8h, int64_t arg1, char * arg11, int64_t arg2, char * arg3, tm * arg4, int64_t arg6, char * arg7, int64_t arg9) {\n    tm * timeptr;\n    int64_t var_10h;\n    int64_t var_18h;\n    char * var_20h;\n    int64_t var_2bh;\n    int64_t var_2ch;\n    char * var_30h;\n    char * var_40h;\n    char * var_48h;\n    char * var_50h;\n    char * var_58h;\n    char * var_60h;\n    char * var_68h;\n    char * format;\n    int64_t var_72h;\n    int64_t var_73h;\n    int64_t var_87h;\n    char * s;\n    int64_t var_91h;\n    int64_t var_a0h;\n    int64_t var_b0h;\n    int64_t var_c0h;\n    rdi = arg1;\n    xmm4 = arg11;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r9 = arg6;\n    xmm0 = arg7;\n    xmm2 = arg9;\nlabel_12:\n    eax = 0x40ce63;\n    r15 = rdi;\n    rbx = rdx;\n    r12 = *((rcx + 0x30));\n    r11d = *((rcx + 8));\n    *(rsp) = rsi;\n    *((rsp + 8)) = rcx;\n    *((rsp + 0x18)) = r9;\n    if (r12 == 0) {\n        r12 = rax;\n    }\n    *((rsp + 0x2b)) = r8b;\n    if (r11d <= 0xc) {\n        goto label_52;\n    }\n    r11d -= 0xc;\nlabel_0:\n    eax = *(rbx);\n    r14d = 0;\n    if (al == 0) {\n        goto label_53;\n    }\n    rdi = rsp + 0x72;\n    *((rsp + 0x2c)) = r11d;\n    *((rsp + 0x10)) = rdi;\n    *((rsp + 0x20)) = r12;\n    do {\n        if (al == 0x25) {\n            goto label_54;\n        }\n        rdx = *(rsp);\n        rdx -= r14;\n        if (rdx <= 1) {\n            goto label_8;\n        }\n        if (r15 != 0) {\n            *(r15) = al;\n            r15++;\n        }\n        r14++;\n        r8 = rbx;\nlabel_7:\n        eax = *((r8 + 1));\n        rbx = r8 + 1;\n    } while (al != 0);\nlabel_53:\n    if (r15 != 0) {\n        if (*(rsp) == 0) {\n            goto label_55;\n        }\n        *(r15) = 0;\n        goto label_55;\nlabel_8:\n        r14d = 0;\n    }\nlabel_55:\n    rax = r14;\n    return rax;\nlabel_52:\n    eax = 0xc;\n    if (r11d == 0) {\n        r11d = eax;\n    }\n    goto label_0;\nlabel_54:\n    r11d = *((rsp + 0x2b));\n    r8d = 0;\n    r12d = 0;\nlabel_1:\n    rbx++;\n    eax = *(rbx);\n    ecx = eax;\n    r9d = eax;\n    if (al == 0x30) {\n        goto label_2;\n    }\n    do {\n        if (al > 0x30) {\n            goto label_56;\n        }\n        if (al != 0x23) {\n            goto label_57;\n        }\n        rbx++;\n        eax = *(rbx);\n        r8d = 1;\n        ecx = eax;\n        r9d = eax;\n    } while (al != 0x30);\n    do {\nlabel_2:\n        r12d = eax;\n        goto label_1;\nlabel_57:\n    } while (al == 0x2d);\n    eax -= 0x30;\n    if (eax <= 9) {\n        goto label_58;\n    }\nlabel_3:\n    if (cl == 0x45) {\n        goto label_59;\n    }\n    if (cl == 0x4f) {\n        goto label_59;\n    }\n    r9d = 0;\nlabel_4:\n    if (cl > 0x7a) {\n        goto label_25;\n    }\n    eax = (int32_t) cl;\n    /* switch table (123 cases) at 0x40efb0 */\nlabel_56:\n    if (al == 0x5e) {\n        r11d = 1;\n        goto label_1;\n    }\n    if (al == 0x5f) {\n        goto label_2;\n    }\n    eax -= 0x30;\n    if (eax > 9) {\n        goto label_3;\n    }\nlabel_58:\n    ebp = 0;\n    do {\n        eax = *((rbx + 1));\n        rsi = rbx + 1;\n        ecx = eax;\n        edx = rax - 0x30;\n        if (ebp > 0xccccccc) {\n            goto label_60;\n        }\n        edi = *(rbx);\n        if (ebp == 0xccccccc) {\n            goto label_61;\n        }\nlabel_5:\n        r9d = rbp + rbp*4;\n        rbx = rsi;\n        ebp = rdi + r9*2 - 0x30;\nlabel_6:\n    } while (edx <= 9);\n    r9d = eax;\n    goto label_3;\nlabel_59:\n    ecx = *((rbx + 1));\n    rbx++;\n    goto label_4;\nlabel_61:\n    if (dil <= 0x37) {\n        goto label_5;\n    }\nlabel_60:\n    if (edx <= 9) {\n        eax = *((rbx + 2));\n        rbx += 2;\n        ecx = eax;\n        edx = rax - 0x30;\n        goto label_6;\n    }\n    r9d = eax;\n    rbx = rsi;\n    goto label_3;\n    if (r9d != 0) {\n        goto label_25;\n    }\n    if (r8b != 0) {\n        r11d = r8d;\n    }\nlabel_23:\n    edx = 0x2520;\n    rax = *((rsp + 0x10));\n    r8 = rbx;\n    r13d = 0;\n    *((rsp + 0x70)) = dx;\n    r9d = 0;\nlabel_9:\n    *(rax) = cl;\n    *((rax + 1)) = 0;\n    *((rsp + 0x30)) = r8;\n    *((rsp + 0x48)) = r9d;\n    *((rsp + 0x40)) = r11b;\n    rax = strftime (rsp + 0x90, 0x400, rsp + 0x70, *((rsp + 8)));\n    r8 = *((rsp + 0x30));\n    if (rax == 0) {\n        goto label_7;\n    }\n    rcx = rax - 1;\n    eax = 0;\n    rdx = *(rsp);\n    __asm (\"cmovns eax, ebp\");\n    rax = (int64_t) eax;\n    rbx = rax;\n    if (rcx >= rax) {\n        rbx = rcx;\n    }\n    rdx -= r14;\n    if (rdx <= rbx) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        r9d = *((rsp + 0x48));\n        r11d = *((rsp + 0x40));\n        if (r9d == 0) {\n            if (rcx >= rax) {\n                goto label_34;\n            }\n            rdx = (int64_t) ebp;\n            *((rsp + 0x48)) = rcx;\n            rdx -= rcx;\n            *((rsp + 0x40)) = r8;\n            rbp = r15 + rdx;\n            *((rsp + 0x30)) = r11b;\n            if (r12d == 0x30) {\n                goto label_62;\n            }\n            r15 = rbp;\n            memset (r15, 0x20, rdx);\n            rcx = *((rsp + 0x48));\n            r8 = *((rsp + 0x40));\n            r11d = *((rsp + 0x30));\n        }\nlabel_34:\n        *((rsp + 0x40)) = r8;\n        rsi = rsp + 0x91;\n        rdx = rcx;\n        rdi = r15;\n        *((rsp + 0x30)) = rcx;\n        if (r13b != 0) {\n            goto label_63;\n        }\nlabel_11:\n        if (r11b == 0) {\n            goto label_64;\n        }\n        fcn_004058d0 (rdi, rsi, rdx);\n        rcx = *((rsp + 0x30));\n        r8 = *((rsp + 0x40));\nlabel_31:\n        r15 += rcx;\n    }\nlabel_10:\n    r14 += rbx;\n    goto label_7;\n    if (r9d == 0x4f) {\n        goto label_25;\n    }\n    r13d = 0;\nlabel_15:\n    edi = 0x2520;\n    *((rsp + 0x70)) = di;\n    if (r9d != 0) {\n        goto label_65;\n    }\n    r8 = rbx;\n    rax = *((rsp + 0x10));\n    goto label_9;\n    rax = *((rsp + 8));\n    *((rsp + 0x40)) = r11b;\n    r13 = rsp + 0x87;\n    __asm (\"movdqu xmm4, xmmword [rax + 0x20]\");\n    __asm (\"movdqu xmm0, xmmword [rax]\");\n    __asm (\"movdqu xmm2, xmmword [rax + 0x10]\");\n    rax = *((rax + 0x30));\n    *((rsp + 0x90)) = xmm0;\n    *((rsp + 0xa0)) = xmm2;\n    *((rsp + 0x30)) = xmm4;\n    *((rsp + 0xb0)) = xmm4;\n    *((rsp + 0xc0)) = rax;\n    rax = fcn_0040bf30 (*((rsp + 0x4d0)), rsp + 0x90);\n    r11d = *((rsp + 0x40));\n    edi = 0x30;\n    rsi = rax;\n    rcx = rax;\n    do {\n        rax = 0x6666666666666667;\n        rdx:rax = rax * rcx;\n        rax = rcx;\n        rax >>= 0x3f;\n        rdx >>= 2;\n        rdx -= rax;\n        rax = rdx;\n        rdx *= 5;\n        rdx += rdx;\n        rcx -= rdx;\n        rdx = rcx;\n        rcx = rax;\n        eax = edi;\n        eax -= edx;\n        edx += 0x30;\n        __asm (\"cmovs edx, eax\");\n        r13--;\n        *(r13) = dl;\n    } while (rcx != 0);\n    r10d = 1;\n    if (ebp > 0) {\n        r10d = ebp;\n    }\n    if (rsi < 0) {\n        goto label_66;\n    }\nlabel_19:\n    rax = *(rsp);\n    rcx = rsp + 0x87;\n    rcx -= r13;\n    rax -= r14;\n    if (r12d != 0x2d) {\n        r9d = r10d;\n        r9d -= ecx;\n        if (r9d > 0) {\n            goto label_67;\n        }\n    }\n    r9d = 0;\n    r8 = rbx;\n    __asm (\"cmovns r9d, ebp\");\n    r9 = (int64_t) r9d;\nlabel_20:\n    rbx = r9;\n    if (rcx >= r9) {\n        rbx = rcx;\n    }\n    if (rbx >= rax) {\n        goto label_8;\n    }\n    if (r15 == 0) {\n        goto label_10;\n    }\n    if (r10d == 0) {\n        if (rcx >= r9) {\n            goto label_35;\n        }\n        rdx = (int64_t) ebp;\n        *((rsp + 0x48)) = rcx;\n        rdx -= rcx;\n        *((rsp + 0x40)) = r8;\n        rbp = r15 + rdx;\n        *((rsp + 0x30)) = r11b;\n        if (r12d == 0x30) {\n            goto label_68;\n        }\n        r15 = rbp;\n        memset (r15, 0x20, rdx);\n        rcx = *((rsp + 0x48));\n        r8 = *((rsp + 0x40));\n        r11d = *((rsp + 0x30));\n    }\nlabel_35:\n    *((rsp + 0x40)) = r8;\n    rdx = rcx;\n    rsi = r13;\n    rdi = r15;\n    *((rsp + 0x30)) = rcx;\n    goto label_11;\n    if (r9d != 0) {\n        goto label_25;\n    }\n    *((rsp + 0x30)) = \"%m/%d/%y\";\nlabel_13:\n    eax = *((rsp + 0x4d8));\n    r13d = (int32_t) r11b;\n    rax = fcn_00405920 (0, 0xffffffffffffffff, *((rsp + 0x40)), *((rsp + 0x18)), r13d, *((rsp + 0x28)));\n    goto label_12;\n    r10 = rax;\n    eax = 0;\n    r11 = *(rsp);\n    __asm (\"cmovns eax, ebp\");\n    rax = (int64_t) eax;\n    rsi = rax;\n    if (r10 >= rax) {\n        rsi = r10;\n    }\n    r11 -= r14;\n    *((rsp + 0x40)) = rsi;\n    if (r11 <= rsi) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        if (r10 < rax) {\n            rdx = (int64_t) ebp;\n            *((rsp + 0x50)) = r10;\n            rdx -= r10;\n            *((rsp + 0x48)) = r11;\n            rbp = r15 + rdx;\n            if (r12d == 0x30) {\n                goto label_69;\n            }\n            r15 = rbp;\n            memset (r15, 0x20, rdx);\n            r10 = *((rsp + 0x50));\n            r11 = *((rsp + 0x48));\n        }\nlabel_38:\n        eax = *((rsp + 0x4d8));\n        *((rsp + 0x48)) = r10;\n        fcn_00405920 (r15, r11, *((rsp + 0x40)), *((rsp + 0x18)), r13d, *((rsp + 0x28)));\n        goto label_12;\n        r10 = *((rsp + 0x58));\n        r15 += r10;\n    }\n    r14 += *((rsp + 0x40));\n    r8 = rbx;\n    goto label_7;\n    if (r9d != 0) {\n        goto label_25;\n    }\n    *((rsp + 0x30)) = \"%Y-%m-%d\";\n    goto label_13;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rdx = *((rsp + 8));\n    esi = *((rdx + 0x14));\n    r10d = *((rdx + 0x1c));\n    r13d = *((rdx + 0x18));\n    edx = 0x92492493;\n    eax = esi;\n    *((rsp + 0x30)) = esi;\n    eax >>= 0x1f;\n    eax &= 0x190;\n    edi = rsi + rax - 0x64;\n    esi = r10d;\n    esi -= r13d;\n    esi += 0x17e;\n    eax = esi;\n    edx:eax = eax * edx;\n    eax = rdx + rsi;\n    edx = esi;\n    edx >>= 0x1f;\n    eax >>= 2;\n    eax -= edx;\n    edx = rax*8;\n    edx -= eax;\n    eax = edx;\n    edx = r10d;\n    edx -= esi;\n    r8d = rdx + rax + 3;\n    if (r8d < 0) {\n        goto label_70;\n    }\n    eax = 0x16d;\n    if ((dil & 3) == 0) {\n        esi = 0x51eb851f;\n        eax = edi;\n        edx:eax = eax * esi;\n        eax = edi;\n        eax >>= 0x1f;\n        *((rsp + 0x40)) = eax;\n        esi = edx;\n        edx >>= 5;\n        edx -= eax;\n        eax = 0x16e;\n        edx *= 0x64;\n        if (edi != edx) {\n            goto label_71;\n        }\n        esi >>= 7;\n        eax = esi;\n        eax -= *((rsp + 0x40));\n        eax *= 0x190;\n        al = (edi == eax) ? 1 : 0;\n        eax = (int32_t) al;\n        eax += 0x16d;\n    }\nlabel_71:\n    esi = r10d;\n    edx = 0x92492493;\n    esi -= eax;\n    edi = esi;\n    edi -= r13d;\n    edi += 0x17e;\n    eax = edi;\n    esi -= edi;\n    edx:eax = eax * edx;\n    eax = rdx + rdi;\n    edx = edi;\n    edx >>= 0x1f;\n    eax >>= 2;\n    eax -= edx;\n    edx = rax*8;\n    edx -= eax;\n    r13d = rsi + rdx + 3;\n    __asm (\"cmovns r8d, r13d\");\n    r13d >>= 0x1f;\n    r13d++;\nlabel_39:\n    if (cl == 0x47) {\n        goto label_72;\n    }\n    if (cl != 0x67) {\n        goto label_73;\n    }\n    eax = *((rsp + 0x30));\n    esi = 0x51eb851f;\n    r8d = *((rsp + 0x30));\n    r10d = 2;\n    edx:eax = eax * esi;\n    edi = r8d;\n    edx >>= 5;\n    eax = edx;\n    edx = r8d;\n    edx >>= 0x1f;\n    eax -= edx;\n    eax *= 0x64;\n    edi -= eax;\n    edi += r13d;\n    eax = edi;\n    edx:eax = eax * esi;\n    eax = edi;\n    eax >>= 0x1f;\n    esi = edx;\n    esi >>= 5;\n    esi -= eax;\n    esi *= 0x64;\n    edi -= esi;\n    esi = edi;\n    if (edi < 0) {\n        eax = 0xfffff894;\n        edx = edi;\n        esi += 0x64;\n        eax -= r13d;\n        edx = -edx;\n        if (r8d < eax) {\n            esi = edx;\n        }\n    }\nlabel_14:\n    eax = esi;\n    *((rsp + 0x30)) = 0;\n    edi = 0;\n    eax >>= 0x1f;\n    r8d = eax;\nlabel_17:\n    if (r9d != 0x4f) {\n        goto label_74;\n    }\n    if (r8b != 0) {\n        goto label_75;\n    }\nlabel_18:\n    eax = 0x2520;\n    r13d = 0;\n    *((rsp + 0x70)) = ax;\nlabel_51:\n    *((rsp + 0x72)) = r9b;\n    r8 = rbx;\n    r9d = r10d;\n    rax = rsp + 0x73;\n    goto label_9;\n    eax = 0;\n    rdi = *((rsp + 0x20));\n    *((rsp + 0x48)) = r8b;\n    if (r8b != 0) {\n        r11d = eax;\n    }\n    *((rsp + 0x40)) = r11b;\n    rax = strlen (rdi);\n    rdx = *(rsp);\n    r13 = rax;\n    eax = 0;\n    __asm (\"cmovns eax, ebp\");\n    rax = (int64_t) eax;\n    rsi = rax;\n    if (r13 >= rax) {\n        rsi = r13;\n    }\n    rdx -= r14;\n    *((rsp + 0x30)) = rsi;\n    if (rdx <= rsi) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        r11d = *((rsp + 0x40));\n        r8d = *((rsp + 0x48));\n        if (r13 < rax) {\n            rdx = (int64_t) ebp;\n            rdx -= r13;\n            rbp = r15 + rdx;\n            if (r12d == 0x30) {\n                goto label_76;\n            }\n            *((rsp + 0x48)) = r8b;\n            r15 = rbp;\n            *((rsp + 0x40)) = r11b;\n            memset (r15, 0x20, rdx);\n            r8d = *((rsp + 0x48));\n            r11d = *((rsp + 0x40));\n        }\nlabel_48:\n        rdx = r13;\n        rsi = *((rsp + 0x20));\n        rdi = r15;\n        if (r8b != 0) {\n            goto label_77;\n        }\n        if (r11b == 0) {\n            goto label_78;\n        }\n        fcn_004058d0 (rdi, rsi, rdx);\nlabel_42:\n        r15 += r13;\n    }\n    r14 += *((rsp + 0x30));\n    r8 = rbx;\n    goto label_7;\n    *((rsp + 0x30)) = 0x40cf0e;\n    goto label_13;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    r10d = 2;\n    esi = *((rax + 8));\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    esi = *((rsp + 0x2c));\n    r10d = 2;\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    r10d = 2;\n    esi = *((rax + 4));\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    if (ebp != 0xffffffff) {\n        goto label_79;\n    }\n    esi = *((rsp + 0x4d8));\n    r10d = 9;\n    goto label_14;\n    r13d = 1;\nlabel_28:\n    eax = 0;\n    ecx = 0x70;\n    if (r8b != 0) {\n        r13d = r8d;\n    }\n    if (r8b != 0) {\n        r11d = eax;\n    }\n    goto label_15;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    esi = *((rax + 8));\nlabel_16:\n    r10d = 2;\n    if (r12d == 0x30) {\n        goto label_14;\n    }\n    if (r12d == 0x2d) {\n        goto label_14;\n    }\n    r12d = 0x5f;\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    esi = *((rsp + 0x2c));\n    goto label_16;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    *((rsp + 0x30)) = 0;\n    r10d = 2;\n    esi = *((rax + 0x10));\n    r8b = (esi < 0xffffffff) ? 1 : 0;\n    esi++;\n    edi = 0;\n    goto label_17;\n    r13d = 0;\n    eax = 1;\n    __asm (\"cmovns r13d, ebp\");\n    r13 = (int64_t) r13d;\n    if (r13 == 0) {\n        r13 = rax;\n    }\n    rax = *(rsp);\n    rax -= r14;\n    if (rax <= r13) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        if (ebp > 1) {\n            rdx = (int64_t) ebp;\n            rdx--;\n            rbp = r15 + rdx;\n            if (r12d == 0x30) {\n                goto label_80;\n            }\n            r15 = rbp;\n            memset (r15, 0x20, rdx);\n        }\nlabel_44:\n        *(r15) = 0xa;\n        r15++;\n    }\nlabel_21:\n    r14 += r13;\n    r8 = rbx;\n    goto label_7;\n    rax = *((rsp + 8));\n    r10d = 1;\n    eax = *((rax + 0x10));\n    if (r9d == 0x4f) {\n        goto label_18;\n    }\n    edx = rax * 5;\n    *((rsp + 0x30)) = 0;\n    r8d = 0;\n    edi = 0;\n    esi = rax + rdx*2;\n    esi >>= 5;\n    esi++;\nlabel_22:\n    *((rsp + 0x40)) = r8b;\n    rcx = rsp + 0x87;\n    r9d = 0xcccccccd;\n    do {\n        r13 = rcx - 1;\n        if ((dil & 1) != 0) {\n            rax = rcx - 2;\n            *((rcx - 1)) = 0x3a;\n            rcx = r13;\n            r13 = rax;\n        }\n        eax = esi;\n        r8d = esi;\n        edi >>= 1;\n        edx:eax = eax * r9d;\n        edx >>= 3;\n        eax = rdx * 5;\n        eax += eax;\n        r8d -= eax;\n        eax = r8d;\n        eax += 0x30;\n        *((rcx - 1)) = al;\n        rcx = r13;\n        if (esi <= 9) {\n            if (edi == 0) {\n                goto label_81;\n            }\n        }\n        esi = edx;\n    } while (1);\nlabel_81:\n    r8d = *((rsp + 0x40));\n    if (r10d < ebp) {\n        r10d = ebp;\n    }\n    if (r8b != 0) {\n        goto label_66;\n    }\n    if (*((rsp + 0x30)) == 0) {\n        goto label_19;\n    }\n    if (r12d == 0x2d) {\n        goto label_82;\n    }\n    *((rsp + 0x30)) = 0x2b;\nlabel_32:\n    rcx = rsp + 0x87;\n    r9d = r10 - 1;\n    rax = *(rsp);\n    rcx -= r13;\n    r9d -= ecx;\n    rax -= r14;\n    if (r9d <= 0) {\n        goto label_83;\n    }\n    if (r12d == 0x5f) {\n        goto label_84;\n    }\n    rdx = (int64_t) r10d;\n    if (rdx >= rax) {\n        goto label_8;\n    }\n    edx = 0;\n    esi = 1;\n    __asm (\"cmovns edx, ebp\");\n    rdx = (int64_t) edx;\n    if (rdx != 0) {\n        rsi = rdx;\n    }\n    if (rsi >= rax) {\n        goto label_8;\n    }\n    r14 += rsi;\n    r9 = (int64_t) r9d;\n    r8 = rbx;\n    if (r15 != 0) {\n        if (r10d == 0) {\n            if (rdx <= 1) {\n                goto label_49;\n            }\n            rdx = (int64_t) ebp;\n            *((rsp + 0x58)) = r9;\n            rdx--;\n            *((rsp + 0x50)) = rcx;\n            rbp = r15 + rdx;\n            *((rsp + 0x48)) = r10d;\n            *((rsp + 0x40)) = r11b;\n            if (r12d == 0x30) {\n                goto label_85;\n            }\n            r15 = rbp;\n            memset (r15, 0x20, rdx);\n            r9 = *((rsp + 0x58));\n            rcx = *((rsp + 0x50));\n            r10d = *((rsp + 0x48));\n            r11d = *((rsp + 0x40));\n        }\nlabel_49:\n        eax = *((rsp + 0x30));\n        r15++;\n        r8 = rbx;\n        *((r15 - 1)) = al;\nlabel_41:\n        if (r15 == 0) {\n            goto label_86;\n        }\n        rdx = r9;\n        *((rsp + 0x58)) = rcx;\n        *((rsp + 0x50)) = r10d;\n        *((rsp + 0x48)) = r8;\n        *((rsp + 0x40)) = r11b;\n        *((rsp + 0x30)) = r9;\n        memset (r15, 0x30, rdx);\n        r9 = *((rsp + 0x30));\n        rcx = *((rsp + 0x58));\n        r10d = *((rsp + 0x50));\n        r8 = *((rsp + 0x48));\n        r11d = *((rsp + 0x40));\n        r15 += r9;\n    }\nlabel_86:\n    rax = *(rsp);\n    r14 += r9;\n    ebp = 0;\n    r9d = 0;\n    rax -= r14;\n    goto label_20;\n    r13d = 0;\n    eax = 1;\n    __asm (\"cmovns r13d, ebp\");\n    r13 = (int64_t) r13d;\n    if (r13 == 0) {\n        r13 = rax;\n    }\n    rax = *(rsp);\n    rax -= r14;\n    if (rax <= r13) {\n        goto label_8;\n    }\n    if (r15 == 0) {\n        goto label_21;\n    }\n    if (ebp > 1) {\n        rdx = (int64_t) ebp;\n        rdx--;\n        rbp = r15 + rdx;\n        if (r12d == 0x30) {\n            goto label_87;\n        }\n        r15 = rbp;\n        memset (r15, 0x20, rdx);\n    }\nlabel_45:\n    *(r15) = 9;\n    r15++;\n    goto label_21;\n    rax = *((rsp + 8));\n    edx = 0x92492493;\n    r10d = 1;\n    eax = *((rax + 0x18));\n    esi = rax + 6;\n    *((rsp + 0x30)) = eax;\n    eax = esi;\n    edx:eax = eax * edx;\n    eax = rdx + rsi;\n    edx = esi;\n    edx >>= 0x1f;\n    eax >>= 2;\n    eax -= edx;\n    edx = rax*8;\n    edx -= eax;\n    esi -= edx;\n    esi++;\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_88;\n    }\n    if (r9d == 0x4f) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    *((rsp + 0x30)) = 0;\n    r10d = 4;\n    esi = *((rax + 0x14));\n    r8b = (esi < 0xfffff894) ? 1 : 0;\n    esi += 0x76c;\n    edi = 0;\nlabel_74:\n    if (r8b == 0) {\n        goto label_22;\n    }\nlabel_75:\n    esi = -esi;\n    goto label_22;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    r10d = 2;\n    esi = *(rax);\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    edx = 0x92492493;\n    edi = *((rax + 0x1c));\n    edi -= *((rax + 0x18));\n    edi += 7;\n    eax = edi;\n    edx:eax = eax * edx;\n    do {\n        esi = rdx + rdi;\n        edi >>= 0x1f;\n        r10d = 2;\n        esi >>= 2;\n        esi -= edi;\n        goto label_14;\n        if (r9d == 0x45) {\n            goto label_88;\n        }\n        rax = *((rsp + 8));\n        edx = 0x51eb851f;\n        *((rsp + 0x30)) = 0;\n        r10d = 2;\n        edi = *((rax + 0x14));\n        eax = *((rax + 0x14));\n        edx:eax = eax * edx;\n        eax = edx;\n        edx = edi;\n        edx >>= 0x1f;\n        eax >>= 5;\n        eax -= edx;\n        edx = edi;\n        esi = rax + 0x13;\n        eax *= 0x64;\n        edx -= eax;\n        eax = edx;\n        eax >>= 0x1f;\n        dl = (esi > 0) ? 1 : 0;\n        eax &= edx;\n        r8b = (edi < 0xfffff894) ? 1 : 0;\n        esi -= eax;\n        edi = 0;\n        goto label_17;\n        if (r9d == 0x45) {\n            goto label_25;\n        }\n        r10 = *((rsp + 8));\n        esi = 0x92492493;\n        eax = *((r10 + 0x18));\n        edi = rax + 6;\n        *((rsp + 0x30)) = eax;\n        eax = edi;\n        edx:eax = eax * esi;\n        eax = rdx + rdi;\n        edx = edi;\n        edx >>= 0x1f;\n        eax >>= 2;\n        eax -= edx;\n        edx = rax*8;\n        edx -= eax;\n        eax = edx;\n        edx = *((r10 + 0x1c));\n        eax -= edi;\n        edi = rax + rdx + 7;\n        eax = edi;\n        edx:eax = eax * esi;\n    } while (1);\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    r10d = 1;\n    esi = *((rax + 0x18));\n    goto label_14;\n    if (r8b != 0) {\n        r11d = r8d;\n    }\n    if (r9d == 0) {\n        goto label_23;\n    }\nlabel_25:\n    rax = rbx - 1;\n    edx = rax + 2;\n    do {\n        ecx = edx;\n        r9 = rax;\n        ecx -= eax;\n        rax = rax - 1;\n    } while (*((rax + 1)) != 0x25);\n    rdx = *(rsp);\n    eax = 0;\n    rcx = (int64_t) ecx;\n    r8 = rbx;\n    rdx -= r14;\n    __asm (\"cmovns eax, ebp\");\n    rax = (int64_t) eax;\n    r13 = rax;\n    if (rcx >= rax) {\n        r13 = rcx;\n    }\nlabel_24:\n    if (rdx <= r13) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        if (rcx < rax) {\n            rdx = (int64_t) ebp;\n            *((rsp + 0x50)) = rcx;\n            rdx -= rcx;\n            *((rsp + 0x48)) = r8;\n            rbx = r15 + rdx;\n            *((rsp + 0x40)) = r9;\n            *((rsp + 0x30)) = r11b;\n            if (r12d == 0x30) {\n                goto label_89;\n            }\n            r15 = rbx;\n            memset (r15, 0x20, rdx);\n            rcx = *((rsp + 0x50));\n            r8 = *((rsp + 0x48));\n            r9 = *((rsp + 0x40));\n            r11d = *((rsp + 0x30));\n        }\nlabel_36:\n        *((rsp + 0x40)) = r8;\n        rdx = rcx;\n        rsi = r9;\n        rdi = r15;\n        *((rsp + 0x30)) = rcx;\n        if (r11b == 0) {\n            goto label_90;\n        }\n        fcn_004058d0 (rdi, rsi, rdx);\n        rcx = *((rsp + 0x30));\n        r8 = *((rsp + 0x40));\nlabel_33:\n        r15 += rcx;\n    }\n    r14 += r13;\n    goto label_7;\n    r13d = 0;\nlabel_27:\n    rax = *((rsp + 8));\n    esi = *((rax + 0x20));\n    if (esi < 0) {\n        goto label_91;\n    }\n    rsi = *((rax + 0x28));\n    r8d = 1;\n    if (esi >= 0) {\n        r8d = 0;\n        if (esi != 0) {\n            goto label_92;\n        }\n        rax = *((rsp + 0x20));\n        r8b = (*(rax) == 0x2d) ? 1 : 0;\n    }\nlabel_92:\n    eax = esi;\n    edx = 0x91a2b3c5;\n    edi = 0x88888889;\n    edx:eax = eax * edx;\n    eax = esi;\n    eax >>= 0x1f;\n    *((rsp + 0x40)) = eax;\n    edx += esi;\n    edx >>= 0xb;\n    edx -= eax;\n    eax = esi;\n    *((rsp + 0x30)) = edx;\n    edx:eax = eax * edi;\n    r10d = rdx + rsi;\n    r10d >>= 5;\n    r10d -= *((rsp + 0x40));\n    eax = r10d;\n    edx:eax = eax * edi;\n    eax = r10d;\n    eax >>= 0x1f;\n    edi = rdx + r10;\n    edi >>= 5;\n    edi -= eax;\n    eax = r10d;\n    edi *= 0x3c;\n    r10d *= 0x3c;\n    eax -= edi;\n    edi = eax;\n    esi -= r10d;\n    if (r13 == 1) {\n        goto label_43;\n    }\n    if (r13 == 0) {\n        goto label_93;\n    }\n    if (r13 == 2) {\n        goto label_94;\n    }\n    if (r13 == 3) {\n        goto label_95;\n    }\n    ecx = *(rbx);\n    r9 = rbx;\nlabel_26:\n    rdx = *(rsp);\n    eax = 0;\n    rdx -= r14;\n    __asm (\"cmovns eax, ebp\");\n    rax = (int64_t) eax;\n    if (cl != 0x25) {\n        goto label_96;\n    }\n    r13d = 1;\n    r8 = r9;\n    ecx = 1;\n    if (rax != 0) {\n        r13 = rax;\n    }\n    goto label_24;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    r10d = 2;\n    esi = *((rax + 0xc));\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    esi = *((rax + 0xc));\n    goto label_16;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    *((rsp + 0x30)) = 0;\n    r10d = 3;\n    esi = *((rax + 0x1c));\n    r8b = (esi < 0xffffffff) ? 1 : 0;\n    esi++;\n    edi = 0;\n    goto label_17;\n    rdx = *(rsp);\n    eax = 0;\n    r13d = 1;\n    rdx -= r14;\n    __asm (\"cmovns eax, ebp\");\n    rax = (int64_t) eax;\n    if (rax != 0) {\n        r13 = rax;\n    }\n    if (r9d != 0) {\n        goto label_97;\n    }\n    if (r13 >= rdx) {\n        goto label_8;\n    }\n    if (r15 == 0) {\n        goto label_21;\n    }\n    if (ebp > 1) {\n        rdx = (int64_t) ebp;\n        rdx--;\n        rbp = r15 + rdx;\n        if (r12d == 0x30) {\n            goto label_98;\n        }\n        r15 = rbp;\n        memset (r15, 0x20, rdx);\n        ecx = *(rbx);\n    }\nlabel_47:\n    *(r15) = cl;\n    r15++;\n    goto label_21;\n    r9 = rbx - 1;\n    ecx = *((rbx - 1));\n    goto label_26;\n    if (r9d == 0x45) {\n        goto label_88;\n    }\n    rax = *((rsp + 8));\n    edx = 0x51eb851f;\n    r10d = 2;\n    edi = *((rax + 0x14));\n    eax = *((rax + 0x14));\n    edx:eax = eax * edx;\n    eax = edi;\n    eax >>= 0x1f;\n    esi = edx;\n    esi >>= 5;\n    esi -= eax;\n    eax = edi;\n    esi *= 0x64;\n    eax -= esi;\n    esi = eax;\n    if (eax >= 0) {\n        goto label_14;\n    }\n    eax = -eax;\n    esi += 0x64;\n    if (edi <= 0xfffff893) {\n        esi = eax;\n    }\n    goto label_14;\n    eax = *((rbx + 1));\n    rdx = rbx + 1;\n    r13d = 1;\n    if (al == 0x3a) {\n        goto label_30;\n    }\nlabel_29:\n    if (al != 0x7a) {\n        goto label_25;\n    }\n    rbx = rdx;\n    goto label_27;\n    r13d = 0;\n    goto label_28;\n    *((rsp + 0x30)) = \"%H:%M:%S\";\n    goto label_13;\nlabel_30:\n    r13++;\n    eax = *((rbx + r13));\n    rdx = rbx + r13;\n    if (al != 0x3a) {\n        goto label_29;\n    }\n    goto label_30;\nlabel_64:\n    memcpy (rdi, rsi, rdx);\n    r8 = *((rsp + 0x40));\n    rcx = *((rsp + 0x30));\n    goto label_31;\nlabel_66:\n    *((rsp + 0x30)) = 0x2d;\n    ecx = 0x2d;\n    if (r12d != 0x2d) {\n        goto label_32;\n    }\nlabel_37:\n    r9d = 0;\n    r12d = 1;\n    rax = *(rsp);\n    __asm (\"cmovns r9d, ebp\");\n    r9 = (int64_t) r9d;\n    if (r9 != 0) {\n        r12 = r9;\n    }\n    rax -= r14;\n    if (rax <= r12) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        if (r10d == 0) {\n            if (r9 <= 1) {\n                goto label_99;\n            }\n            r8 = (int64_t) ebp;\n            *((rsp + 0x58)) = cl;\n            r8--;\n            *((rsp + 0x50)) = r9;\n            rdx = r8;\n            *((rsp + 0x48)) = r10d;\n            *((rsp + 0x40)) = r11b;\n            *((rsp + 0x30)) = r8;\n            memset (r15, 0x20, rdx);\n            r8 = *((rsp + 0x30));\n            ecx = *((rsp + 0x58));\n            r9 = *((rsp + 0x50));\n            r10d = *((rsp + 0x48));\n            r11d = *((rsp + 0x40));\n            r15 += r8;\n        }\nlabel_99:\n        *(r15) = cl;\n        r15++;\n    }\n    rax = *(rsp);\n    r14 += r12;\n    r8 = rbx;\n    r12d = 0x2d;\n    rcx = rsp + 0x87;\n    rcx -= r13;\n    rax -= r14;\n    goto label_20;\nlabel_90:\n    memcpy (rdi, rsi, rdx);\n    r8 = *((rsp + 0x40));\n    rcx = *((rsp + 0x30));\n    goto label_33;\nlabel_63:\n    fcn_00405880 (rdi, rsi, rdx);\n    rcx = *((rsp + 0x30));\n    r8 = *((rsp + 0x40));\n    goto label_31;\nlabel_62:\n    r15 = rbp;\n    rax = memset (r15, 0x30, rdx);\n    r11d = *((rsp + 0x30));\n    r8 = *((rsp + 0x40));\n    rcx = *((rsp + 0x48));\n    goto label_34;\nlabel_83:\n    r9d = 0;\n    r8d = 1;\n    __asm (\"cmovns r9d, ebp\");\n    r9 = (int64_t) r9d;\n    if (r9 != 0) {\n        r8 = r9;\n    }\n    if (r8 >= rax) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        if (r10d == 0) {\n            if (r9 <= 1) {\n                goto label_46;\n            }\n            rdx = (int64_t) ebp;\n            *((rsp + 0x68)) = rcx;\n            rdx--;\n            *((rsp + 0x60)) = r8;\n            rax = r15 + rdx;\n            *((rsp + 0x58)) = r9;\n            *((rsp + 0x40)) = rax;\n            *((rsp + 0x50)) = r10d;\n            *((rsp + 0x48)) = r11b;\n            if (r12d == 0x30) {\n                goto label_100;\n            }\n            memset (r15, 0x20, rdx);\n            r15 = *((rsp + 0x40));\n            rcx = *((rsp + 0x68));\n            r8 = *((rsp + 0x60));\n            r9 = *((rsp + 0x58));\n            r10d = *((rsp + 0x50));\n            r11d = *((rsp + 0x48));\n        }\nlabel_46:\n        eax = *((rsp + 0x30));\n        r15++;\n        *((r15 - 1)) = al;\n    }\n    rax = *(rsp);\n    r14 += r8;\n    r8 = rbx;\n    rax -= r14;\n    goto label_20;\nlabel_40:\n    *((rsp + 0x30)) = 0;\nlabel_84:\n    r12 = (int64_t) r9d;\n    if (r12 >= rax) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        *((rsp + 0x50)) = r9d;\n        *((rsp + 0x48)) = r10d;\n        r15 += r12;\n        *((rsp + 0x40)) = r11b;\n        memset (r15, 0x20, r12);\n        r9d = *((rsp + 0x50));\n        r10d = *((rsp + 0x48));\n        r11d = *((rsp + 0x40));\n    }\n    eax = ebp;\n    r14 += r12;\n    eax -= r9d;\n    if (r9d < ebp) {\n    }\n    rax = *(rsp);\n    rax -= r14;\n    if (*((rsp + 0x30)) == 0) {\n        rcx = rsp + 0x87;\n        r9 = (int64_t) ebp;\n        r8 = rbx;\n        r12d = 0x5f;\n        rcx -= r13;\n        goto label_20;\nlabel_68:\n        r15 = rbp;\n        memset (r15, 0x30, rdx);\n        r11d = *((rsp + 0x30));\n        r8 = *((rsp + 0x40));\n        rcx = *((rsp + 0x48));\n        goto label_35;\nlabel_88:\n        r10d = 0;\n        goto label_18;\nlabel_89:\n        r15 = rbx;\n        rax = memset (r15, 0x30, rdx);\n        r11d = *((rsp + 0x30));\n        r9 = *((rsp + 0x40));\n        r8 = *((rsp + 0x48));\n        rcx = *((rsp + 0x50));\n        goto label_36;\nlabel_82:\n        ecx = 0x2b;\n        goto label_37;\nlabel_91:\n        r8 = rbx;\n        goto label_7;\n    }\n    r9 = (int64_t) ebp;\n    ecx = 1;\n    if (r9 != 0) {\n        rcx = r9;\n    }\n    if (rcx >= rax) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        if (r10d == 0) {\n            if (r9 <= 1) {\n                goto label_101;\n            }\n            r12 = r9 - 1;\n            *((rsp + 0x58)) = rcx;\n            *((rsp + 0x50)) = r10d;\n            r15 += r12;\n            *((rsp + 0x48)) = r11b;\n            *((rsp + 0x40)) = r9;\n            memset (r15, 0x20, r12);\n            rcx = *((rsp + 0x58));\n            r10d = *((rsp + 0x50));\n            r11d = *((rsp + 0x48));\n            r9 = *((rsp + 0x40));\n        }\nlabel_101:\n        eax = *((rsp + 0x30));\n        r15++;\n        *((r15 - 1)) = al;\n    }\n    rax = *(rsp);\n    r14 += rcx;\n    r8 = rbx;\n    r12d = 0x5f;\n    rcx = rsp + 0x87;\n    rcx -= r13;\n    rax -= r14;\n    goto label_20;\nlabel_69:\n    r15 = rbp;\n    memset (r15, 0x30, rdx);\n    r11 = *((rsp + 0x48));\n    r10 = *((rsp + 0x50));\n    goto label_38;\nlabel_70:\n    esi = rdi - 1;\n    edx = 0x16d;\n    if ((sil & 3) == 0) {\n        eax = esi;\n        edx = 0x51eb851f;\n        edx:eax = eax * edx;\n        eax = edx;\n        edx = esi;\n        edx >>= 0x1f;\n        eax >>= 5;\n        eax -= edx;\n        edx = 0x16e;\n        eax *= 0x64;\n        if (esi != eax) {\n            goto label_102;\n        }\n        eax = esi;\n        edi = 0x190;\n        edx:eax = (int64_t) eax;\n        eax = edx:eax / edi;\n        edx = edx:eax % edi;\n        edx -= edx;\n        edx = ~edx;\n        edx += 0x16e;\n    }\nlabel_102:\n    r10d += edx;\n    edx = 0x92492493;\n    esi = r10d;\n    esi -= r13d;\n    r13d = 0xffffffff;\n    esi += 0x17e;\n    eax = esi;\n    r10d -= esi;\n    edx:eax = eax * edx;\n    eax = rdx + rsi;\n    edx = esi;\n    edx >>= 0x1f;\n    eax >>= 2;\n    eax -= edx;\n    edx = rax*8;\n    edx -= eax;\n    r8d = r10 + rdx + 3;\n    goto label_39;\nlabel_79:\n    if (ebp > 8) {\n        goto label_103;\n    }\n    esi = *((rsp + 0x4d8));\n    edi = ebp;\n    r8d = 0x66666667;\n    do {\n        eax = esi;\n        esi >>= 0x1f;\n        edi++;\n        edx:eax = eax * r8d;\n        edx >>= 2;\n        edx -= esi;\n        esi = edx;\n    } while (edi != 9);\nlabel_50:\n    r10d = ebp;\n    goto label_14;\nlabel_73:\n    eax = r8d;\n    edx = 0x92492493;\n    r10d = 2;\n    edx:eax = eax * edx;\n    esi = rdx + r8;\n    r8d >>= 0x1f;\n    esi >>= 2;\n    esi -= r8d;\n    esi++;\n    goto label_14;\nlabel_72:\n    esi = *((rsp + 0x30));\n    eax = 0xfffff894;\n    *((rsp + 0x30)) = 0;\n    r10d = 4;\n    eax -= r13d;\n    esi = rsi + r13 + 0x76c;\n    r8b = (esi < eax) ? 1 : 0;\n    edi = 0;\n    goto label_17;\nlabel_67:\n    if (r12d == 0x5f) {\n        goto label_40;\n    }\n    rdx = (int64_t) r10d;\n    if (rdx >= rax) {\n        goto label_8;\n    }\n    r9 = (int64_t) r9d;\n    r8 = rbx;\n    goto label_41;\n    do {\nlabel_94:\n        eax = *((rsp + 0x30)) * 0x2710;\n        r10d = 9;\n        *((rsp + 0x30)) = 1;\n        edi *= 0x64;\n        eax += edi;\n        edi = 0x14;\n        esi += eax;\n        goto label_17;\nlabel_43:\n        esi = *((rsp + 0x30)) * 0x64;\n        r10d = 6;\n        *((rsp + 0x30)) = 1;\n        esi += edi;\n        edi = 4;\n        goto label_17;\nlabel_78:\n        memcpy (rdi, rsi, rdx);\n        goto label_42;\nlabel_77:\n        fcn_00405880 (rdi, rsi, rdx);\n        goto label_42;\nlabel_93:\n        esi = *((rsp + 0x30)) * 0x64;\n        edi = 0;\n        *((rsp + 0x30)) = 1;\n        r10d = 5;\n        esi += eax;\n        goto label_17;\nlabel_95:\n    } while (esi != 0);\n    if (eax != 0) {\n        goto label_43;\n    }\n    esi = *((rsp + 0x30));\n    r10d = 3;\n    *((rsp + 0x30)) = 1;\n    goto label_17;\nlabel_97:\n    r8 = rbx;\n    r9 = rbx;\n    ecx = 1;\n    goto label_24;\nlabel_80:\n    r15 = rbp;\n    memset (r15, 0x30, rdx);\n    goto label_44;\nlabel_87:\n    r15 = rbp;\n    memset (r15, 0x30, rdx);\n    goto label_45;\nlabel_100:\n    memset (r15, 0x30, rdx);\n    r15 = *((rsp + 0x40));\n    r11d = *((rsp + 0x48));\n    r10d = *((rsp + 0x50));\n    r9 = *((rsp + 0x58));\n    r8 = *((rsp + 0x60));\n    rcx = *((rsp + 0x68));\n    goto label_46;\nlabel_98:\n    r15 = rbp;\n    memset (r15, 0x30, rdx);\n    ecx = *(rbx);\n    goto label_47;\nlabel_76:\n    r15 = rbp;\n    memset (r15, 0x30, rdx);\n    r11d = *((rsp + 0x40));\n    r8d = *((rsp + 0x48));\n    goto label_48;\nlabel_85:\n    r15 = rbp;\n    memset (r15, 0x30, rdx);\n    r11d = *((rsp + 0x40));\n    r10d = *((rsp + 0x48));\n    rcx = *((rsp + 0x50));\n    r9 = *((rsp + 0x58));\n    goto label_49;\nlabel_103:\n    esi = *((rsp + 0x4d8));\n    goto label_50;\nlabel_65:\n    r10d = 0;\n    goto label_51;\nlabel_96:\n    rbx = r9;\n    goto label_25;\n}\n"
        },
        {
            "funcName": "fcn_004070f0",
            "funcStartAddr": "0x4070f0",
            "funcEndAddr": "0x40710f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x4070f0 */\n#include <stdint.h>\n \nvoid fcn_004070f0 (int64_t arg5, int64_t arg6) {\n    int64_t var_fh;\n    r8 = arg5;\n    r9 = arg6;\n    *((rsp + 0xf)) = 0;\n    fcn_00405920 (rdi, rsi, rdx, rcx, 0, rsp + 0x1f);\n}\n"
        },
        {
            "funcName": "fcn_00407110",
            "funcStartAddr": "0x407110",
            "funcEndAddr": "0x4071a9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x407110 */\n#include <stdint.h>\n \nuint64_t fcn_00407110 (char ** arg1) {\n    rdi = arg1;\n    if (rdi != 0) {\n        rbx = rdi;\n        rax = strrchr (rdi, 0x2f);\n        if (rax != 0) {\n            r8 = rax + 1;\n            rdx = r8;\n            rdx -= rbx;\n            if (rdx <= 6) {\n                goto label_0;\n            }\n            rsi = rax - 6;\n            edi = \"/.libs/\";\n            ecx = 7;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (rdx > 6) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            edi = 0x40f3c8;\n            ecx = 3;\n            rsi = r8;\n            rbx = r8;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (dl > 0) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            rbx = rax + 4;\n            *(obj.__progname) = rbx;\n        }\nlabel_0:\n        *(0x00614490) = rbx;\n        *(obj.program_invocation_name) = rbx;\n        return rax;\n    }\n    fwrite (\"A NULL argv[0] was passed through an exec system call.\\n\", 1, 0x37, *(obj.stderr));\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_004071b0",
            "funcStartAddr": "0x4071b0",
            "funcEndAddr": "0x4072a2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x4071b0 */\n#include <stdint.h>\n \nuint64_t fcn_004071b0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edx = 5;\n    r12d = esi;\n    rsi = rdi;\n    rax = dcgettext (0, rsi);\n    rbx = rax;\n    while (1) {\nlabel_0:\n        rax = rbx;\n        return rax;\n        rax = fcn_0040c0d0 ();\n        edx = *(rax);\n        edx &= 0xffffffdf;\n        if (dl != 0x55) {\n            goto label_1;\n        }\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x54) {\n            goto label_2;\n        }\n        edx = *((rax + 2));\n        edx &= 0xffffffdf;\n        if (dl != 0x46) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x2d) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0) {\n            goto label_2;\n        }\n        eax = 0x40f3ce;\n        ebx = 0x40f3d9;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n    }\nlabel_1:\n    if (dl == 0x47) {\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x42) {\n            goto label_2;\n        }\n        if (*((rax + 2)) != 0x31) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0x33) {\n            goto label_2;\n        }\n        if (*((rax + 6)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 7)) != 0) {\n            goto label_2;\n        }\n        eax = 0x40f3d2;\n        ebx = 0x40f3d5;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n        goto label_0;\n    }\nlabel_2:\n    eax = 0x410ba9;\n    ebx = 0x40f3cc;\n    if (r12d != 9) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004072b0",
            "funcStartAddr": "0x4072b0",
            "funcEndAddr": "0x40da71",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x4072b0 */\n#include <stdint.h>\n \nuint64_t fcn_004072b0 (int64_t arg_e8h_3, uint32_t arg_e8h_2, int64_t arg_e8h, char * arg_e0h, int64_t arg1, char * arg2, char * arg3, size_t * arg4, int64_t arg5, int64_t arg6) {\n    size_t * var_8h;\n    size_t * var_10h;\n    uint32_t var_1fh;\n    char * s;\n    size_t n;\n    size_t * var_30h;\n    size_t * var_38h;\n    size_t var_40h;\n    size_t var_48h;\n    void * s2;\n    char * var_58h;\n    uint32_t var_60h;\n    int64_t var_68h;\n    uint32_t var_6ch;\n    char * var_6dh;\n    int64_t var_6eh;\n    int64_t var_6fh;\n    int64_t var_70h;\n    int64_t var_78h;\n    wint_t wc;\n    mbstate_t * ps;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    do {\n        /* [13] -r-x section size 45240 named .text */\n        abort ();\nlabel_5:\n        r15 = rdi;\n        r14 = rsi;\n        r13d = r8d;\n        *((rsp + 0x20)) = rdx;\n        *((rsp + 8)) = rcx;\n        *((rsp + 0x68)) = r9d;\n        rax = ctype_get_mb_cur_max ();\n        ebp &= 2;\n        *((rsp + 0x60)) = rax;\n        rsp + 0x6c = (ebp != 0) ? 1 : 0;\n    } while (r13d > 0xa);\n    eax = r13d;\n    r11 = *((rsp + 8));\n    /* switch table (11 cases) at 0x40f440 */\nlabel_30:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    r13d = 2;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x410ba9;\nlabel_21:\n    r9 = r11;\n    r12d = 0;\n    r11d = r13d;\n    do {\nlabel_28:\n        r13b = (r9 != r12) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            r13b = (*((rax + r12)) != 0) ? 1 : 0;\n        }\n        if (r13b == 0) {\n            goto label_47;\n        }\n        rdi = *((rsp + 0x20));\n        al = (r11d != 2) ? 1 : 0;\n        al &= *((rsp + 8));\n        r8 = rdi + r12;\n        *((rsp + 0x10)) = al;\n        if (al == 0) {\n            goto label_48;\n        }\n        rax = *((rsp + 0x28));\n        if (rax == 0) {\n            goto label_49;\n        }\n        rbp = r12 + rax;\n        if (r9 == -1) {\n            if (rax <= 1) {\n                goto label_50;\n            }\n            *((rsp + 0x40)) = r11d;\n            *((rsp + 0x38)) = r10b;\n            *((rsp + 0x30)) = r8;\n            rax = strlen (rdi);\n            r11d = *((rsp + 0x40));\n            r10d = *((rsp + 0x38));\n            r8 = *((rsp + 0x30));\n            r9 = rax;\n        }\nlabel_50:\n        if (rbp > r9) {\n            goto label_49;\n        }\n        rdi = r8;\n        *((rsp + 0x48)) = r11d;\n        *((rsp + 0x40)) = r9;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        eax = memcmp (rdi, *((rsp + 0x50)), *((rsp + 0x28)));\n        r8 = *((rsp + 0x30));\n        r10d = *((rsp + 0x38));\n        r9 = *((rsp + 0x40));\n        r11d = *((rsp + 0x48));\n        if (eax != 0) {\n            goto label_49;\n        }\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_51;\n        }\n        ebp = *(r8);\n        if (bpl > 0x7e) {\n            goto label_52;\n        }\n        eax = (int32_t) bpl;\n        /* switch table (127 cases) at 0x40f498 */\n        *((rsp + 0x10)) = 0;\n        al = (r9 != 1) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            al = (*((rax + 1)) != 0) ? 1 : 0;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        if (al != 0) {\n            goto label_7;\n        }\nlabel_17:\n        if (r12 != 0) {\n            goto label_7;\n        }\nlabel_18:\n        if (*((rsp + 0x6c)) != 0) {\n            if (dl != 0) {\n                goto label_53;\n            }\n        }\nlabel_2:\n        eax = *((rsp + 8));\n        eax ^= 1;\n        eax |= edx;\n        eax ^= 1;\n        al |= *((rsp + 0x6c));\n        if (al == 0) {\n            goto label_11;\n        }\nlabel_24:\n        eax = 0;\nlabel_10:\n        if (*((rsp + 0xd0)) == 0) {\n            goto label_11;\n        }\n        edx = ebp;\n        rcx = *((rsp + 0xd0));\n        dl >>= 5;\n        edx = (int32_t) dl;\n        edx = *((rcx + rdx*4));\n        ecx = ebp;\n        edx >>= cl;\n        edx &= 1;\n        if (edx == 0) {\n            goto label_11;\n        }\n        dl = (r11d == 2) ? 1 : 0;\nlabel_0:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_54;\n        }\nlabel_4:\n        eax = r10d;\n        eax ^= 1;\n        al &= dl;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rdx = rbx + 1;\n            if (rdx < r14) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rdx = rbx + 2;\n            if (rdx < r14) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\nlabel_9:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n        r12++;\nlabel_1:\n        if (rbx < r14) {\n            *((r15 + rbx)) = bpl;\n        }\n        edi = *((rsp + 0x1f));\n        rbx++;\n        eax = 0;\n        if (r13b == 0) {\n            edi = eax;\n        }\n        *((rsp + 0x1f)) = dil;\n    } while (1);\nlabel_3:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    if (r14 == 0) {\n        goto label_56;\n    }\n    edx = 0;\n    if (*((rsp + 0x58)) != 0) {\n        goto label_56;\n    }\nlabel_27:\n    *((rsp + 0x6d)) = r13b;\n    rbx += 3;\n    eax = 0;\n    r10d = 0;\n    *((rsp + 0x58)) = r14;\n    r14 = rdx;\nlabel_11:\n    dl = (r11d == 2) ? 1 : 0;\n    if (*((rsp + 0x10)) != 0) {\n        goto label_0;\n    }\n    eax ^= 1;\n    r12++;\n    eax &= r10d;\nlabel_16:\n    if (al == 0) {\n        goto label_1;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x27;\n    }\n    rbx += 2;\n    r10d = 0;\n    goto label_1;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_57;\n    }\n    if (r11d == 5) {\n        goto label_58;\n    }\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_3;\n    }\n    *((rsp + 0x6d)) = r13b;\n    edx = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\nlabel_15:\n    edx = *((rsp + 8));\n    dl &= *((rsp + 0x6c));\n    ecx = 0x5c;\n    al = (*((rsp + 0x28)) != 0) ? 1 : 0;\n    dl &= al;\n    if (dl != 0) {\n        goto label_59;\n    }\nlabel_8:\n    if (*((rsp + 8)) != 0) {\n        goto label_60;\n    }\nlabel_7:\n    r13d = 0;\n    goto label_2;\nlabel_6:\n    edx = 0;\n    r13d = 0;\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_4;\n    }\nlabel_54:\n    r13d = r11d;\n    eax = edx;\n    r11 = r9;\nlabel_42:\nlabel_12:\n    eax = 4;\n    if (*((rsp + 8)) != 0) {\n        r13d = eax;\n    }\nlabel_43:\n    r9d &= 0xfffffffd;\n    rax = fcn_004072b0 (r15, r14, *((rsp + 0x40)), r11, r13d, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\nlabel_44:\n    rax = rbx;\n    return rax;\n    goto label_6;\n    *((rsp + 0x10)) = 0;\n    edx = 0;\n    goto label_7;\n    *((rsp + 0x10)) = 0;\n    ecx = 0x72;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    do {\nlabel_20:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_61;\n        }\nlabel_34:\n        r13d = 0;\n        goto label_9;\n    } while (1);\nlabel_14:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_62;\n    }\n    *((rsp + 0x10)) = 0;\n    eax = r10d;\n    dl = (r11d == 2) ? 1 : 0;\n    eax ^= 1;\n    al &= dl;\n    if (al == 0) {\n        goto label_63;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rcx = rbx + 1;\n    if (r14 > rcx) {\n        *((r15 + rbx + 1)) = 0x24;\n    }\n    rcx = rbx + 2;\n    if (r14 > rcx) {\n        *((r15 + rbx + 2)) = 0x27;\n    }\n    rcx = rbx + 3;\n    if (r14 <= rcx) {\n        goto label_64;\n    }\nlabel_26:\n    *((r15 + rcx)) = 0x5c;\n    r10d = eax;\nlabel_25:\n    rbx = rcx + 1;\n    if (r11d == 2) {\n        goto label_65;\n    }\n    rax = r12 + 1;\n    if (rax < r9) {\n        rax = *((rsp + 0x20));\n        eax = *((rax + r12 + 1));\n        *((rsp + 0x30)) = al;\n        eax -= 0x30;\n        if (al <= 9) {\n            goto label_66;\n        }\n    }\nlabel_35:\n    eax = *((rsp + 8));\n    eax ^= 1;\n    al |= dl;\n    eax = r13d;\n    r13d = 0;\n    if (al == 0) {\n        goto label_10;\n    }\n    goto label_11;\nlabel_19:\n    *((rsp + 0x10)) = 0;\n    do {\nlabel_52:\n        if (*((rsp + 0x60)) != 1) {\n            goto label_67;\n        }\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r9;\n        *((rsp + 0x30)) = r10b;\n        rax = ctype_b_loc ();\n        edx = (int32_t) bpl;\n        r10d = *((rsp + 0x30));\n        r9 = *((rsp + 0x38));\n        rax = *(rax);\n        r11d = *((rsp + 0x40));\n        edi = 1;\n        eax = *((rax + rdx*2));\n        ax &= 0x4000;\n        r13b = (ax != 0) ? 1 : 0;\n        dl = (ax == 0) ? 1 : 0;\n        dl &= *((rsp + 8));\nlabel_37:\n        if (dl != 0) {\n            goto label_68;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        goto label_2;\nlabel_48:\n        ebp = *(r8);\n    } while (bpl > 0x7e);\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x40f890 */\n    ecx = 0x6e;\nlabel_13:\n    eax = *((rsp + 0x6c));\n    dl = (r11d == 2) ? 1 : 0;\n    al &= dl;\n    *((rsp + 0x10)) = al;\n    if (al == 0) {\n        goto label_8;\n    }\nlabel_53:\n    r11 = r9;\n    r13d = 2;\n    goto label_12;\n    ecx = 0x74;\n    goto label_13;\n    ecx = 0x62;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x61;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    if (*((rsp + 8)) != 0) {\n        goto label_14;\n    }\n    if ((*((rsp + 0x68)) & 1) != 0) {\n        goto label_69;\n    }\n    *((rsp + 0x10)) = 0;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    ebp = 0;\n    goto label_2;\n    if (r11d != 2) {\n        goto label_15;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_17;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_18;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_18;\n    ecx = 0x72;\n    goto label_13;\n    ecx = 0x66;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x76;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\nlabel_49:\n    ebp = *(r8);\n    if (bpl > 0x7e) {\n        goto label_19;\n    }\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x40fc88 */\n    eax = 0;\n    do {\nlabel_31:\n        r13d = *((rsp + 0x10));\n        *((rsp + 0x10)) = al;\n        eax = 0;\n        goto label_10;\n        eax = 0;\nlabel_32:\n        if (r12 != 0) {\n            goto label_70;\n        }\n        r13d = *((rsp + 0x10));\n        edx = 0;\n        *((rsp + 0x10)) = al;\n        goto label_2;\n        eax = 0;\nlabel_33:\n    } while (1);\n    goto label_6;\n    goto label_20;\nlabel_47:\n    r13d = r11d;\n    r11 = r9;\n    dl = (r13d == 2) ? 1 : 0;\n    if (rbx == 0) {\n        if ((*((rsp + 0x6c)) & dl) != 0) {\n            goto label_71;\n        }\n    }\n    eax = *((rsp + 0x6c));\n    eax ^= 1;\n    dl &= al;\n    if (dl == 0) {\n        goto label_72;\n    }\n    if (*((rsp + 0x6d)) == 0) {\n        goto label_45;\n    }\n    if (*((rsp + 0x1f)) != 0) {\n        goto label_73;\n    }\n    al = (r14 == 0) ? 1 : 0;\n    dl = (*((rsp + 0x58)) != 0) ? 1 : 0;\n    al &= dl;\n    if (al == 0) {\n        goto label_74;\n    }\n    r14 = *((rsp + 0x58));\nlabel_46:\n    *(r15) = 0x27;\n    r13d = 2;\n    ebx = 1;\n    *((rsp + 0x50)) = 0x410ba9;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x6c)) = 0;\n    *((rsp + 0x6d)) = al;\n    goto label_21;\nlabel_58:\n    if ((*((rsp + 0x68)) & 4) != 0) {\n        rax = r12 + 2;\n        if (rax >= r9) {\n            goto label_39;\n        }\n        rsi = *((rsp + 0x20));\n        if (*((rsi + r12 + 1)) == 0x3f) {\n            goto label_75;\n        }\n    }\nlabel_39:\n    edx = 0;\n    r13d = 0;\n    goto label_2;\nlabel_57:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r13d = 0;\n    eax = 0;\n    goto label_11;\nlabel_67:\n    *((rsp + 0x88)) = 0;\n    if (r9 == -1) {\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        rax = strlen (*((rsp + 0x20)));\n        r11d = *((rsp + 0x40));\n        r10d = *((rsp + 0x38));\n        r8 = *((rsp + 0x30));\n        r9 = rax;\n    }\n    eax = 0;\n    *((rsp + 0x70)) = rbx;\n    *((rsp + 0x78)) = r8;\n    rbx = rax;\n    *((rsp + 0x6e)) = r10b;\n    *((rsp + 0x6f)) = bpl;\n    *((rsp + 0x40)) = r15;\n    *((rsp + 0x48)) = r14;\n    *((rsp + 0x30)) = r9;\n    *((rsp + 0x38)) = r11d;\n    while (*((rsp + 0x38)) != 2) {\nlabel_22:\n        eax = iswprint (*((rsp + 0x84)));\n        rdi = rsp + 0x88;\n        eax = 0;\n        if (eax == 0) {\n            r13d = eax;\n        }\n        rbx += r14;\n        eax = mbsinit (rdi);\n        if (eax != 0) {\n            goto label_76;\n        }\n        rax = *((rsp + 0x20));\n        r15 = r12 + rbx;\n        rbp = rax + r15;\n        rdx -= r15;\n        rax = fcn_0040ba50 (rsp + 0x84, rbp, *((rsp + 0x30)), rsp + 0x88);\n        r14 = rax;\n        if (rax == 0) {\n            goto label_76;\n        }\n        if (rax == -1) {\n            goto label_77;\n        }\n        if (rax == 0xfffffffffffffffe) {\n            goto label_78;\n        }\n    }\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_22;\n    }\n    if (rax == 1) {\n        goto label_22;\n    }\n    rsi = *((rsp + 0x20));\n    rax = rsi + r15 + 1;\n    rsi += r14;\n    rsi += r15;\n    goto label_79;\nlabel_23:\n    rax++;\n    if (rsi == rax) {\n        goto label_22;\n    }\nlabel_79:\n    ecx = *(rax);\n    ecx -= 0x5b;\n    if (cl > 0x21) {\n        goto label_23;\n    }\n    edx = 1;\n    rdx <<= cl;\n    rcx = 0x20000002b;\n    if ((rdx & rcx) == 0) {\n        goto label_23;\n    }\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r13d = 2;\n    r11 = *((rsp + 0x30));\n    goto label_12;\nlabel_70:\n    *((rsp + 0x10)) = al;\n    r13d = 0;\n    goto label_24;\nlabel_63:\n    rcx = rbx;\n    if (r14 <= rbx) {\n        goto label_25;\n    }\n    eax = r10d;\n    goto label_26;\nlabel_56:\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x5c;\n    }\n    rax = rbx + 2;\n    if (r14 <= rax) {\n        goto label_80;\n    }\n    rdx = r14;\n    *((r15 + rbx + 2)) = 0x27;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_69:\n    r12++;\n    goto label_28;\nlabel_68:\n    edx = *((rsp + 8));\n    r13d = 0;\nlabel_36:\n    rcx = rdi;\n    *((rsp + 0x30)) = r13b;\n    esi = 0;\n    r13d = *((rsp + 0x6c));\n    rcx += r12;\n    edi = *((rsp + 0x10));\n    r8 = *((rsp + 0x20));\n    while (dl != 0) {\n        al = (r11d == 2) ? 1 : 0;\n        if (r13b != 0) {\n            goto label_81;\n        }\n        esi = r10d;\n        esi ^= 1;\n        al &= sil;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rsi = rbx + 1;\n            if (r14 > rsi) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rsi = rbx + 2;\n            if (r14 > rsi) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 6;\n            eax += 0x30;\n            *((r15 + rbx + 1)) = al;\n        }\n        rax = rbx + 2;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 3;\n            eax &= 7;\n            eax += 0x30;\n            *((r15 + rbx + 2)) = al;\n        }\n        ebp &= 7;\n        r12++;\n        rbx += 3;\n        ebp += 0x30;\n        if (r12 >= rcx) {\n            goto label_82;\n        }\n        esi = edx;\nlabel_29:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = bpl;\n        }\n        ebp = *((r8 + r12));\n        rbx++;\n    }\n    eax = esi;\n    eax ^= 1;\n    eax &= r10d;\n    if (dil != 0) {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n    }\n    r12++;\n    if (r12 < rcx) {\n        if (al == 0) {\n            goto label_83;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x27;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            *((r15 + rbx + 1)) = 0x27;\n        }\n        rbx += 2;\n        edi = 0;\n        r10d = 0;\n        goto label_29;\n    }\n    r13d = *((rsp + 0x30));\n    goto label_16;\nlabel_81:\n    r13d = r11d;\n    *((rsp + 8)) = al;\n    r11 = r9;\n    goto label_12;\nlabel_64:\n    rbx += 4;\n    r10d = eax;\n    r13d = 0;\n    goto label_11;\n    if (ebp != 0) {\n        goto label_30;\n    }\n    *((rsp + 8)) = 1;\n    do {\n        if (r14 != 0) {\n            goto label_84;\n        }\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 1;\n        r13d = 2;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x410ba9;\n        goto label_21;\n        if (ebp != 0) {\n            goto label_85;\n        }\n        if (r14 == 0) {\n            goto label_86;\n        }\n        *(r15) = 0x22;\n        r10d = 0;\n        *((rsp + 0x1f)) = 1;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\nlabel_38:\n        *((rsp + 0x6c)) = 0;\n        ebx = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x40f3cc;\n        goto label_21;\n        if (r14 != 0) {\n            *((rsp + 8)) = r11;\n            rax = fcn_004071b0 (0x40f3dd, r13d);\n            *((rsp + 0xd8)) = rax;\n            rax = fcn_004071b0 (0x410ba9, r13d);\n            r11 = *((rsp + 8));\n            *((rsp + 0xe0)) = rax;\n        }\n        ebx = 0;\n        if (ebp == 0) {\n            goto label_87;\n        }\nlabel_41:\n        *((rsp + 0x10)) = r11;\n        rax = strlen (*((rsp + 0xe0)));\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        r11 = *((rsp + 0x10));\n        *((rsp + 0x28)) = rax;\n        rax = *((rsp + 0xe0));\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x50)) = rax;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 8)) = 1;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 0;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 5;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x40f3cc;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 2;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x410ba9;\n        goto label_21;\n        eax = *((rsp + 0x10));\n        goto label_31;\n        eax = *((rsp + 0x10));\n        goto label_32;\n        eax = *((rsp + 0x10));\n        goto label_33;\n        edx = 0;\n        r13d = 0;\n        goto label_4;\n        goto label_34;\nlabel_66:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x30;\n        }\n        rax = rcx + 2;\n        if (r14 > rax) {\n            *((r15 + rcx + 2)) = 0x30;\n        }\n        rbx = rcx + 3;\n        goto label_35;\n        if (ebp != 0) {\n            goto label_88;\n        }\n        *((rsp + 8)) = 0;\n    } while (1);\nlabel_82:\n    r13d = *((rsp + 0x30));\n    goto label_1;\nlabel_59:\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\nlabel_83:\n    edi = 0;\n    goto label_29;\nlabel_76:\n    rdi = rbx;\n    edx = r13d;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    edx ^= 1;\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    dl &= *((rsp + 8));\nlabel_40:\n    if (rdi > 1) {\n        goto label_36;\n    }\n    goto label_37;\nlabel_86:\n    *((rsp + 0x58)) = 0;\n    r10d = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x6d)) = 0;\n    goto label_38;\nlabel_65:\n    eax = r13d;\n    r13d = 0;\n    goto label_11;\nlabel_75:\n    ebp = *((rsi + rax));\n    if (bpl > 0x3e) {\n        goto label_39;\n    }\n    rsi = 0x7000a38200000000;\n    if (((rsi >> rbp) & 1) >= 0) {\n        goto label_39;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_51;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x3f;\n    }\n    rdx = rbx + 1;\n    if (r14 > rdx) {\n        *((r15 + rbx + 1)) = 0x22;\n    }\n    rdx = rbx + 2;\n    if (r14 > rdx) {\n        *((r15 + rbx + 2)) = 0x22;\n    }\n    rdx = rbx + 3;\n    if (r14 > rdx) {\n        *((r15 + rbx + 3)) = 0x3f;\n    }\n    rbx += 4;\n    edx = 0;\n    r13d = 0;\n    r12 = rax;\n    goto label_35;\nlabel_77:\n    rdi = rbx;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r13d = 0;\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    edx = *((rsp + 8));\n    goto label_40;\nlabel_78:\n    r9 = *((rsp + 0x30));\n    rsi = r15;\n    rcx = rbp;\n    rax = rbx;\n    rdi = rbx;\n    r8 = *((rsp + 0x78));\n    r10d = *((rsp + 0x6e));\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r11d = *((rsp + 0x38));\n    if (rsi >= r9) {\n        goto label_89;\n    }\n    if (*(rcx) != 0) {\n        goto label_90;\n    }\n    goto label_89;\n    do {\n        if (*((r8 + rax)) == 0) {\n            goto label_91;\n        }\nlabel_90:\n        rax++;\n        rdx = r12 + rax;\n    } while (rdx < r9);\nlabel_91:\n    rdi = rax;\nlabel_89:\n    edx = *((rsp + 8));\n    r13d = 0;\n    goto label_40;\nlabel_87:\n    rax = *((rsp + 0xd8));\n    eax = *(rax);\n    if (al == 0) {\n        goto label_41;\n    }\n    rdx = *((rsp + 0xd8));\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = al;\n        }\n        rbx++;\n        eax = *((rdx + rbx));\n    } while (al != 0);\n    goto label_41;\nlabel_61:\n    r13d = r11d;\n    eax = 0;\n    r11 = r9;\n    goto label_42;\nlabel_85:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 1;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x40f3cc;\n    goto label_21;\nlabel_51:\n    r13d = r11d;\n    r11 = r9;\n    goto label_43;\nlabel_72:\n    edx = eax;\nlabel_45:\n    rax = *((rsp + 0x50));\n    if (rax == 0) {\n        goto label_92;\n    }\n    if (dl == 0) {\n        goto label_92;\n    }\n    edx = *(rax);\n    if (dl == 0) {\n        goto label_92;\n    }\n    rax -= rbx;\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = dl;\n        }\n        rbx++;\n        edx = *((rax + rbx));\n    } while (dl != 0);\nlabel_92:\n    if (r14 <= rbx) {\n        goto label_44;\n    }\n    *((r15 + rbx)) = 0;\n    goto label_44;\nlabel_55:\n    r13d = r11d;\n    r11 = r9;\n    goto label_12;\nlabel_62:\n    r13d = r11d;\n    r11 = r9;\n    rsp + 8 = (r13d == 2) ? 1 : 0;\n    goto label_12;\nlabel_73:\n    rax = fcn_004072b0 (r15, *((rsp + 0x78)), *((rsp + 0x40)), r11, 5, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\n    goto label_44;\nlabel_74:\n    edx = *((rsp + 0x6d));\n    goto label_45;\nlabel_71:\n    r13d = 2;\n    goto label_12;\nlabel_84:\n    r10d = 0;\n    eax = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x58)) = 0;\n    goto label_46;\nlabel_80:\n    rdx = r14;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_88:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x410ba9;\n    goto label_21;\nlabel_60:\n    r13d = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_004084e0",
            "funcStartAddr": "0x4084e0",
            "funcEndAddr": "0x40ee49",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x4084e0 */\n#include <stdint.h>\n \nuint64_t fcn_004084e0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_30h;\n    int64_t var_18h;\n    int64_t var_24h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    do {\n        abort ();\n        r15 = (int64_t) edi;\n        r14 = rdx;\n        *((rsp + 8)) = rsi;\n        rax = errno_location ();\n        rbx = *(0x00614318);\n        r13 = rax;\n        eax = *(rax);\n        *((rsp + 0x18)) = eax;\n    } while (r15d < 0);\n    if (*(0x00614330) > r15d) {\n        goto label_0;\n    }\n    if (r15d == 0x7fffffff) {\n        goto label_1;\n    }\n    r12d = r15 + 1;\n    rsi = (int64_t) r12d;\n    rsi <<= 4;\n    if (rbx == 0x614320) {\n        goto label_2;\n    }\n    rax = fcn_00409360 (rbx, rsi);\n    *(0x00614318) = rax;\n    rbx = rax;\n    do {\n        rdi = *(0x00614330);\n        edx -= edi;\n        rdi <<= 4;\n        rdx = (int64_t) edx;\n        rdi += rbx;\n        rdx <<= 4;\n        memset (rdi, 0, r12d);\n        *(0x00614330) = r12d;\nlabel_0:\n        eax = *((rbp + 4));\n        r15 <<= 4;\n        rbx += r15;\n        r15 = rbp + 8;\n        eax |= 1;\n        r11 = *(rbx);\n        r12 = *((rbx + 8));\n        *((rsp + 0x24)) = eax;\n        rsi = r11;\n        *((rsp + 0x30)) = r11;\n        rax = fcn_004072b0 (r12, rsi, *((rsp + 0x28)), r14, *(rbp), eax);\n        r11 = *((rsp + 0x10));\n        if (r11 <= rax) {\n            rsi = rax + 1;\n            *(rbx) = rsi;\n            if (r12 != 0x6144a0) {\n                *((rsp + 0x10)) = rsi;\n                free (r12);\n                rsi = *((rsp + 0x10));\n            }\n            *((rsp + 0x10)) = rsi;\n            rax = fcn_00409300 (*((rsp + 0x10)));\n            *((rbx + 8)) = rax;\n            rdi = rax;\n            r12 = rax;\n            fcn_004072b0 (rdi, *((rsp + 0x30)), *((rsp + 0x28)), r14, *(rbp), *((rsp + 0x3c)));\n        }\n        eax = *((rsp + 0x18));\n        *(r13) = eax;\n        rax = r12;\n        return rax;\nlabel_2:\n        rax = fcn_00409360 (0, rsi);\n        __asm (\"movdqa xmm0, xmmword [0x00614320]\");\n        rbx = rax;\n        *(0x00614318) = rax;\n        __asm (\"movups xmmword [rax], xmm0\");\n    } while (1);\nlabel_1:\n    return fcn_00409550 ();\n}\n"
        },
        {
            "funcName": "fcn_00408b80",
            "funcStartAddr": "0x408b80",
            "funcEndAddr": "0x408c11",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x408b80 */\n#include <stdint.h>\n \nint64_t fcn_00408b80 (int64_t arg1, int64_t arg7, int64_t arg8, int64_t arg9) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_20h;\n    int64_t var_30h;\n    rdi = arg1;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    xmm2 = arg9;\n    do {\n        rax = imp.__libc_start_main;\n        ecx = edx;\n        __asm (\"movdqa xmm0, xmmword [0x006145a0]\");\n        __asm (\"movdqa xmm1, xmmword [0x006145b0]\");\n        __asm (\"movdqa xmm2, xmmword [0x006145c0]\");\n        ecx &= 0x1f;\n        *((rsp + 0x30)) = rax;\n        eax = edx;\n        al >>= 5;\n        *(rsp) = xmm0;\n        eax = (int32_t) al;\n        *((rsp + 0x10)) = xmm1;\n        r8 = rsp + rax*4 + 8;\n        *((rsp + 0x20)) = xmm2;\n        edx = *(r8);\n        eax = *(r8);\n        eax >>= cl;\n        eax = ~eax;\n        eax &= 1;\n        eax <<= cl;\n        eax ^= edx;\n        *(r8) = eax;\n        fcn_004084e0 (0, rdi, rsi, rsp);\n        return rax;\n        edx = 0x3a;\n        rsi = 0xffffffffffffffff;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00408bb0",
            "funcStartAddr": "0x408bb0",
            "funcEndAddr": "0x40faaa",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x408bb0 */\n#include <stdint.h>\n \nint64_t fcn_00408bb0 (uint32_t arg2, int64_t arg3) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rsi = arg2;\n    rdx = arg3;\n    do {\n        abort ();\n    } while (esi == 0xa);\n    rcx = 0x400000000000000;\n    rax = rdx;\n    *(rsp) = esi;\n    *((rsp + 8)) = rcx;\n    *((rsp + 4)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x30)) = 0;\n    fcn_004084e0 (rdi, rax, 0xffffffffffffffff, rsp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00408d30",
            "funcStartAddr": "0x408d30",
            "funcEndAddr": "0x408d46",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x408d30 */\n#include <stdint.h>\n \nvoid fcn_00408d30 (int64_t arg1) {\n    rdi = arg1;\n    rsi = rdi;\n    ecx = 0x6142e0;\n    rdx = 0xffffffffffffffff;\n    edi = 0;\n    return void (*0x4084e0)() ();\n}\n"
        },
        {
            "funcName": "fcn_00408d50",
            "funcStartAddr": "0x408d50",
            "funcEndAddr": "0x40abd5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x408d50 */\n#include <stdint.h>\n \nuint64_t fcn_00408d50 (int64_t arg_70h, int64_t arg1, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_30h;\n    int64_t var_38h;\n    rdi = arg1;\n    rcx = arg4;\n    edx = 3;\n    esi = 0;\n    eax = 0;\n    while (1) {\nlabel_2:\n        rax = rsp + 0x70;\n        *((rsp + 0x30)) = rdx;\n        *((rsp + 0x10)) = rax;\n        rax = rsp + 0x20;\n        *((rsp + 0x38)) = rcx;\n        *((rsp + 8)) = 0x10;\n        *((rsp + 0x18)) = rax;\n        if (esi != 0x406) {\n            goto label_4;\n        }\n        r12d = *((rax + 0x10));\n        eax = imp.__libc_start_main;\n        *((rsp + 8)) = 0x18;\n        edx = r12d;\n        if (eax >= 0) {\n            eax = 0;\n            eax = fcntl ();\n            ebx = eax;\n            if (eax < 0) {\n                goto label_5;\n            }\nlabel_1:\n            *(0x006145d8) = 1;\nlabel_0:\n            eax = ebx;\n            return rax;\n        }\n        eax = 0;\n        eax = void (*0x40aaa0)(uint64_t, uint64_t, uint64_t) (rdi, 0, rdx);\n    }\n    ebx = eax;\n    if (eax < 0) {\n        goto label_0;\n    }\n    if (*(0x006145d8) != 0xffffffff) {\n        goto label_0;\n    }\nlabel_3:\n    eax = 0;\n    esi = 1;\n    edi = ebx;\n    eax = fcntl ();\n    if (eax < 0) {\n        goto label_6;\n    }\n    eax |= 1;\n    esi = 2;\n    edi = ebx;\n    edx = eax;\n    eax = 0;\n    eax = fcntl ();\n    if (eax != 0xffffffff) {\n        goto label_0;\n    }\nlabel_6:\n    rax = errno_location ();\n    ebx = 0xffffffff;\n    r12d = *(rax);\n    close (ebx);\n    *(rbp) = r12d;\n    goto label_0;\nlabel_4:\n    rax = *((rsp + 0x18));\n    rdx = *((rax + 0x10));\n    eax = 0;\n    eax = fcntl ();\n    ebx = eax;\n    return rax;\nlabel_5:\n    rax = errno_location ();\n    if (*(rax) != 0x16) {\n        goto label_1;\n    }\n    eax = 0;\n    eax = void (*0x40aaa0)(uint64_t, uint64_t, uint64_t) (ebp, 0, r12d);\n    goto label_2;\n    ebx = eax;\n    if (eax < 0) {\n        goto label_0;\n    }\n    *(0x006145d8) = 0xffffffff;\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_00408d60",
            "funcStartAddr": "0x408d60",
            "funcEndAddr": "0x410174",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x408d60 */\n#include <stdint.h>\n \nvoid fcn_00408d60 (int64_t arg_20h, int64_t arg_30h, int64_t arg_8h_2, int64_t arg_10h, int64_t arg_8h, int64_t arg_8h_3, int64_t arg_10h_2, int64_t arg_18h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_30h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    eax = abort ();\n    r12 = r9;\n    rbx = r8;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    r9 = rcx;\n    r8 = rdx;\n    rcx = rsi;\n    edx = \"%s (%s) %s\\n\";\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    do {\n        edx = 5;\n        rax = dcgettext (0, 0x41012b);\n        r8d = 0x7e1;\n        edx = \"Copyright %s %d Free Software Foundation, Inc.\";\n        rdi = rbp;\n        rcx = rax;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        edx = 5;\n        rax = dcgettext (0, \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\");\n        rsi = rbp;\n        rdi = rax;\n        eax = fputs_unlocked ();\n        if (r12 > 9) {\n            goto label_2;\n        }\n        /* switch table (10 cases) at 0x410418 */\nlabel_1:\n        r8 = rcx;\n        esi = 1;\n        rcx = rdx;\n        eax = 0;\n        edx = \"%s %s\\n\";\n        fprintf_chk ();\n    } while (1);\n    r9 = *((rbx + 0x38));\n    rax = *((rbx + 0x10));\n    edx = 5;\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    r15 = *((rbx + 0x20));\n    *((rsp + 0x10)) = r9;\n    r14 = *((rbx + 0x18));\n    rbx = *(rbx);\n    *(rsp) = rax;\n    *((rsp + 8)) = r8;\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n    do {\n        r9 = *((rsp + 0x18));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        r9 = *((rsp + 0x30));\n        r8 = *((rsp + 0x38));\n        fprintf_chk ();\n        return rax;\n        r10 = *((rbx + 0x40));\n        r9 = *((rbx + 0x38));\n        edx = 5;\n        rax = *((rbx + 0x10));\n        r8 = *((rbx + 8));\n        r13 = *((rbx + 0x30));\n        r12 = *((rbx + 0x28));\n        *((rsp + 0x18)) = r10;\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        *((rsp + 0x10)) = r9;\n        *(rsp) = rax;\n        rbx = *(rbx);\n        *((rsp + 8)) = r8;\nlabel_0:\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        r10 = *((rsp + 0x18));\n    } while (1);\n    rbx = *(rbx);\n    edx = 5;\n    rax = dcgettext (0, \"Written by %s.\\n\");\n    rdi = rbp;\n    esi = 1;\n    rcx = rbx;\n    rdx = rax;\n    eax = 0;\n    void (*0x401cb0)() ();\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s and %s.\\n\");\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x401cb0)() ();\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, and %s.\\n\");\n    r9 = r13;\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x401cb0)() ();\n    edx = 5;\n    r14 = *((rbx + 0x18));\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\nand %s.\\n\");\n    do {\n        rdx = rax;\n        r9 = r13;\n        r8 = r12;\n        rcx = rbx;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r15 = *((rbx + 0x20));\n        edx = 5;\n        r14 = *((rbx + 0x18));\n        r13 = *((rbx + 0x10));\n        r12 = *((rbx + 8));\n        rbx = *(rbx);\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n    } while (1);\n    r8 = *((rbx + 8));\n    r12 = *((rbx + 0x28));\n    edx = 5;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *(rsp) = r8;\n    r13 = *((rbx + 0x10));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n    r9 = r13;\n    do {\n        r8 = *((rsp + 0x20));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r9 = *((rbx + 0x10));\n        r13 = *((rbx + 0x30));\n        edx = 5;\n        r12 = *((rbx + 0x28));\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        r8 = *((rbx + 8));\n        *((rsp + 8)) = r9;\n        rbx = *(rbx);\n        *(rsp) = r8;\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n        r9 = *((rsp + 0x28));\n    } while (1);\nlabel_2:\n    r10 = *((rbx + 0x40));\n    r9 = *((rbx + 0x38));\n    edx = 5;\n    esi = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    rax = *((rbx + 0x10));\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    *((rsp + 0x18)) = r10;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *((rsp + 0x10)) = r9;\n    *(rsp) = rax;\n    rbx = *(rbx);\n    *((rsp + 8)) = r8;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_004091c0",
            "funcStartAddr": "0x4091c0",
            "funcEndAddr": "0x40927c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x4091c0 */\n#include <stdint.h>\n \nuint64_t fcn_004091c0 (int64_t arg_b0h, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_70h;\n    int64_t var_90h;\n    int64_t var_98h;\n    r8 = arg5;\n    r9 = arg6;\n    r11d = 0;\n    rax = rsp + 0xb0;\n    *((rsp + 0x90)) = r8;\n    r10 = rsp + 0xb0;\n    r8d = 0x20;\n    *((rsp + 0x10)) = rax;\n    rax = rsp + 0x70;\n    *((rsp + 0x98)) = r9;\n    r9d = 0;\n    *((rsp + 8)) = 0x20;\n    *((rsp + 0x18)) = rax;\n    while (r8d <= 0x2f) {\n        eax = r8d;\n        r11 = rsp + 0x70;\n        r8d += 8;\n        rax += r11;\n        r11d = 1;\n        rax = *(rax);\n        *((rsp + r9*8 + 0x20)) = rax;\n        if (rax == 0) {\n            goto label_1;\n        }\nlabel_0:\n        r9++;\n        if (r9 == 0xa) {\n            goto label_1;\n        }\n    }\n    rax = r10;\n    r10 += 8;\n    rax = *(rax);\n    *((rsp + r9*8 + 0x20)) = rax;\n    if (rax != 0) {\n        goto label_0;\n    }\nlabel_1:\n    if (r11b != 0) {\n        *((rsp + 8)) = r8d;\n    }\n    fcn_00408d60 (rdi, rsi, rdx, rcx, rsp + 0x20, r9);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00409300",
            "funcStartAddr": "0x409300",
            "funcEndAddr": "0x40931a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x409300 */\n#include <stdint.h>\n \nuint64_t fcn_00409300 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = malloc (rdi);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    return fcn_00409550 ();\n}\n"
        },
        {
            "funcName": "fcn_00409360",
            "funcStartAddr": "0x409360",
            "funcEndAddr": "0x409396",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x409360 */\n#include <stdint.h>\n \nuint64_t fcn_00409360 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rsi;\n    if (rsi == 0) {\n        if (rdi != 0) {\n            goto label_0;\n        }\n    }\n    rax = realloc (rdi, rbx);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_1;\n        }\n    }\n    return rax;\nlabel_0:\n    eax = free (rdi);\n    eax = 0;\n    return rax;\nlabel_1:\n    return fcn_00409550 ();\n}\n"
        },
        {
            "funcName": "fcn_00409460",
            "funcStartAddr": "0x409460",
            "funcEndAddr": "0x4094b0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x409460 */\n#include <stdint.h>\n \nint64_t fcn_00409460 (int64_t arg1, char ** arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rax = *(rsi);\n    if (rdi == 0) {\n        goto label_0;\n    }\n    rdx = 0x5555555555555553;\n    if (rax > rdx) {\n        goto label_1;\n    }\n    rdx = rax;\n    rdx >>= 1;\n    rax = rdx + rax + 1;\n    do {\n        *(rsi) = rax;\n        rsi = rax;\n        void (*0x409360)() ();\nlabel_0:\n        if (rax == 0) {\n            eax = 0x80;\n            *(rsi) = rax;\n            rsi = rax;\n            void (*0x409360)() ();\n        }\n    } while (rax >= 0);\nlabel_1:\n    return fcn_00409550 ();\n}\n"
        },
        {
            "funcName": "fcn_00409500",
            "funcStartAddr": "0x409500",
            "funcEndAddr": "0x409528",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x409500 */\n#include <stdint.h>\n \nuint64_t fcn_00409500 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdi = rsi;\n    rbx = rsi;\n    rax = fcn_00409300 (rdi);\n    rdx = rbx;\n    rsi = rbp;\n    rdi = rax;\n    return memcpy ();\n}\n"
        },
        {
            "funcName": "fcn_00409550",
            "funcStartAddr": "0x409550",
            "funcEndAddr": "0x409581",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x409550 */\n#include <stdint.h>\n \nuint64_t fcn_00409550 (void) {\n    edx = 5;\n    rax = dcgettext (0, \"memory exhausted\");\n    rcx = rax;\n    eax = 0;\n    error (*(0x006142c0), 0, 0x40ef8a);\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_00409590",
            "funcStartAddr": "0x409590",
            "funcEndAddr": "0x409674",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x409590 */\n#include <stdint.h>\n \nuint64_t fcn_00409590 (int64_t arg_50h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg6) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r9 = arg6;\n    r15 = rcx;\n    r14 = rdx;\n    edx = esi;\n    r13 = r9;\n    r12 = rdi;\n    ebx = *((rsp + 0x50));\n    eax = fcn_004096b0 (rdi, 0, edx, rsp + 8, r8);\n    if (eax != 0) {\n        goto label_1;\n    }\n    rbp = *((rsp + 8));\n    if (rbp >= r14) {\n        if (rbp <= r15) {\n            goto label_2;\n        }\n    }\n    rax = errno_location ();\n    r14 = rax;\n    if (rbp <= 0x3fffffff) {\n        goto label_3;\n    }\n    do {\n        *(r14) = 0x4b;\nlabel_0:\n        rax = fcn_00408d30 (r12);\n        esi = *(r14);\n        rcx = r13;\n        edx = \"%s: %s\";\n        r8 = rax;\n        eax = 0;\n        if (esi == 0x16) {\n            esi = eax;\n        }\n        eax = 1;\n        if (ebx == 0) {\n            ebx = eax;\n        }\n        eax = 0;\n        error (ebx, rsi, rdx);\n        rbp = *((rsp + 8));\nlabel_2:\n        rax = rbp;\n        return rax;\nlabel_1:\n        rax = errno_location ();\n        r14 = rax;\n    } while (ebp == 1);\n    if (ebp != 3) {\n        goto label_0;\n    }\n    *(rax) = 0;\n    goto label_0;\nlabel_3:\n    eax = 0x22;\n    edx = 0x4b;\n    if (rbp <= 0xffffffffbfffffff) {\n        eax = edx;\n    }\n    *(r14) = eax;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00409680",
            "funcStartAddr": "0x409680",
            "funcEndAddr": "0x4096a1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x409680 */\n#include <stdint.h>\n \nvoid fcn_00409680 (int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    fcn_00409590 (rdi, 0xa, rsi, rdx, rcx, r8);\n}\n"
        },
        {
            "funcName": "fcn_004096b0",
            "funcStartAddr": "0x4096b0",
            "funcEndAddr": "0x409df2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x4096b0 */\n#include <stdint.h>\n \nuint64_t fcn_004096b0 (int64_t arg1, int64_t arg2, uint32_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_fh;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    *(rsp) = rcx;\n    if (edx > 0x24) {\n        goto label_22;\n    }\n    rbx = rsi;\n    rax = rsp + 0x18;\n    if (rsi == 0) {\n        rbx = rax;\n    }\n    r12 = rdi;\n    r14 = r8;\n    errno_location ();\n    edx = ebp;\n    ecx = 0;\n    rdi = r12;\n    *(rax) = 0;\n    rsi = rbx;\n    r13 = rax;\n    rax = strtol_internal ();\n    r15 = *(rbx);\n    if (r15 == r12) {\n        goto label_23;\n    }\n    eax = *(r13);\n    if (eax != 0) {\n        goto label_24;\n    }\n    r12d = 0;\nlabel_0:\n    if (r14 != 0) {\n        r13d = *(r15);\n        if (r13b != 0) {\n            goto label_25;\n        }\n    }\nlabel_4:\n    rax = *(rsp);\n    *(rax) = rbp;\n    do {\nlabel_1:\n        eax = r12d;\n        return rax;\nlabel_24:\n        r12d = 4;\n    } while (eax != 0x22);\n    r12d = 1;\n    goto label_0;\nlabel_23:\n    if (r14 == 0) {\n        goto label_26;\n    }\n    r13d = *(r15);\n    r12d = 4;\n    if (r13b == 0) {\n        goto label_1;\n    }\n    esi = (int32_t) r13b;\n    r12d = 0;\n    rax = strchr (r14, rsi);\n    if (rax == 0) {\n        goto label_26;\n    }\nlabel_3:\n    edx = r13 - 0x45;\n    while (((rax >> rdx) & 1) >= 0) {\nlabel_2:\n        esi = 1;\n        eax = 0x400;\nlabel_21:\n        r13d -= 0x42;\n        if (r13b > 0x35) {\n            goto label_27;\n        }\n        r13d = (int32_t) r13b;\n        /* switch table (54 cases) at 0x4104f8 */\n        rax = 0x814400308945;\n        *((rsp + 0xf)) = dl;\n    }\n    rax = strchr (r14, 0x30);\n    if (rax == 0) {\n        goto label_2;\n    }\n    eax = *((r15 + 1));\n    if (al == 0x44) {\n        goto label_28;\n    }\n    if (al == 0x69) {\n        goto label_29;\n    }\n    edx = *((rsp + 0xf));\n    if (al == 0x42) {\n        goto label_28;\n    }\n    /* switch table (48 cases) at 0x4106a8 */\nlabel_26:\n    r12d = 4;\n    goto label_1;\nlabel_25:\n    esi = (int32_t) r13b;\n    rax = strchr (r14, rsi);\n    if (rax != 0) {\n        goto label_3;\n    }\nlabel_27:\n    rax = *(rsp);\n    r12d |= 2;\n    *(rax) = rbp;\n    goto label_1;\n    rax = 0xffe0000000000000;\n    rsi = (int64_t) esi;\n    if (rbp < rax) {\n        goto label_30;\n    }\n    rax = 0x1fffffffffffff;\n    if (rbp > rax) {\n        goto label_31;\n    }\n    rbp <<= 0xa;\n    do {\nlabel_5:\n        rsi += r15;\n        eax = r12d;\n        eax |= 2;\n        *(rbx) = rsi;\n        if (*(rsi) != 0) {\n            r12d = eax;\n        }\n        goto label_4;\n        rax = 0xc000000000000000;\n        rsi = (int64_t) esi;\n        if (rbp < rax) {\n            goto label_30;\n        }\n        rax = 0x3fffffffffffffff;\n        if (rbp > rax) {\n            goto label_31;\n        }\n        rbp += rbp;\n    } while (1);\n    rcx = (int64_t) eax;\n    rsi = (int64_t) esi;\n    rax = 0x8000000000000000;\n    __asm (\"cqo\");\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\nlabel_18:\n    if (rbp < rax) {\n        goto label_30;\n    }\n    rdi = 0x7fffffffffffffff;\n    rax = rdi;\n    __asm (\"cqo\");\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    do {\n        if (rax < rbp) {\n            goto label_31;\n        }\n        rbp *= rcx;\n        goto label_5;\n        rcx = (int64_t) eax;\n        rsi = (int64_t) esi;\n        rax = 0x8000000000000000;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rdi = rax;\nlabel_17:\n        if (rbp < rdi) {\n            goto label_30;\n        }\n        r8 = 0x7fffffffffffffff;\n        rax = r8;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        if (rbp > rax) {\n            goto label_31;\n        }\n        rbp *= rcx;\n    } while (rbp >= rdi);\n    do {\nlabel_30:\n        r12d = 1;\n        goto label_5;\n        rsi = (int64_t) esi;\nlabel_12:\n        rax = 0xffc0000000000000;\n    } while (rbp < rax);\n    rax = 0x3fffffffffffff;\n    if (rbp > rax) {\n        goto label_31;\n    }\n    rbp <<= 9;\n    goto label_5;\n    rsi = (int64_t) esi;\n    goto label_5;\n    rcx = (int64_t) eax;\n    rsi = (int64_t) esi;\n    rax = 0x8000000000000000;\n    __asm (\"cqo\");\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    r9 = rax;\nlabel_16:\n    edi = 5;\n    r10d = 0;\n    r8 = 0x7fffffffffffffff;\n    while (r9 <= rbp) {\n        rax = r8;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        if (rax < rbp) {\n            goto label_32;\n        }\n        rbp *= rcx;\nlabel_6:\n        edi--;\n        if (edi == 0) {\n            goto label_33;\n        }\n    }\n    r10d = 1;\n    goto label_6;\n    rcx = (int64_t) eax;\n    rsi = (int64_t) esi;\n    rax = 0x8000000000000000;\n    __asm (\"cqo\");\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    r9 = rax;\nlabel_15:\n    edi = 4;\n    r10d = 0;\n    r8 = 0x7fffffffffffffff;\n    while (r9 <= rbp) {\n        rax = r8;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        if (rax < rbp) {\n            goto label_34;\n        }\n        rbp *= rcx;\nlabel_7:\n        edi--;\n        if (edi == 0) {\n            goto label_33;\n        }\n    }\n    r10d = 1;\n    goto label_7;\n    rcx = (int64_t) eax;\n    rsi = (int64_t) esi;\n    rax = 0x8000000000000000;\n    __asm (\"cqo\");\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    r9 = rax;\nlabel_20:\n    edi = 6;\n    r10d = 0;\n    r8 = 0x7fffffffffffffff;\n    while (rbp >= r9) {\n        rax = r8;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        if (rax < rbp) {\n            goto label_35;\n        }\n        rbp *= rcx;\nlabel_8:\n        edi--;\n        if (edi == 0) {\n            goto label_33;\n        }\n    }\n    r10d = 1;\n    goto label_8;\n    rcx = (int64_t) eax;\n    rsi = (int64_t) esi;\n    rax = 0x8000000000000000;\n    __asm (\"cqo\");\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    r9 = rax;\nlabel_19:\n    edi = 3;\n    r10d = 0;\n    r8 = 0x7fffffffffffffff;\n    while (rbp >= r9) {\n        rax = r8;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        if (rax < rbp) {\n            goto label_36;\n        }\n        rbp *= rcx;\nlabel_9:\n        edi--;\n        if (edi == 0) {\n            goto label_33;\n        }\n    }\n    r10d = 1;\n    goto label_9;\n    rcx = (int64_t) eax;\n    rsi = (int64_t) esi;\n    rax = 0x8000000000000000;\n    __asm (\"cqo\");\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    r9 = rax;\nlabel_14:\n    edi = 8;\n    r10d = 0;\n    r8 = 0x7fffffffffffffff;\n    while (r9 <= rbp) {\n        rax = r8;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        if (rax < rbp) {\n            goto label_37;\n        }\n        rbp *= rcx;\nlabel_10:\n        edi--;\n        if (edi == 0) {\n            goto label_33;\n        }\n    }\n    r10d = 1;\n    goto label_10;\n    rcx = (int64_t) eax;\n    rsi = (int64_t) esi;\n    rax = 0x8000000000000000;\n    __asm (\"cqo\");\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    r9 = rax;\nlabel_13:\n    edi = 7;\n    r10d = 0;\n    r8 = 0x7fffffffffffffff;\n    while (r9 <= rbp) {\n        rax = r8;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        if (rax < rbp) {\n            goto label_38;\n        }\n        rbp *= rcx;\nlabel_11:\n        edi--;\n        if (edi == 0) {\n            goto label_33;\n        }\n    }\n    r10d = 1;\n    goto label_11;\n    esi = 1;\n    goto label_12;\n    esi = 1;\n    ecx = 0x400;\n    r9 = 0xffe0000000000000;\n    goto label_13;\n    esi = 1;\n    ecx = 0x400;\n    r9 = 0xffe0000000000000;\n    goto label_14;\n    esi = 1;\n    ecx = 0x400;\n    r9 = 0xffe0000000000000;\n    goto label_15;\n    esi = 1;\n    ecx = 0x400;\n    r9 = 0xffe0000000000000;\n    goto label_16;\n    esi = 1;\n    ecx = 0x400;\n    rdi = 0xffe0000000000000;\n    goto label_17;\n    esi = 1;\n    ecx = 0x400;\n    rax = 0xffe0000000000000;\n    goto label_18;\n    esi = 1;\n    ecx = 0x400;\n    r9 = 0xffe0000000000000;\n    goto label_19;\n    esi = 1;\n    ecx = 0x400;\n    r9 = 0xffe0000000000000;\n    goto label_20;\n    esi = 1;\n    goto label_5;\nlabel_33:\n    r12d |= r10d;\n    goto label_5;\nlabel_31:\n    r12d = 1;\n    goto label_5;\nlabel_38:\n    r10d = 1;\n    goto label_11;\nlabel_32:\n    r10d = 1;\n    goto label_6;\nlabel_37:\n    r10d = 1;\n    goto label_10;\nlabel_36:\n    r10d = 1;\n    goto label_9;\nlabel_35:\n    r10d = 1;\n    goto label_8;\nlabel_34:\n    r10d = 1;\n    goto label_7;\nlabel_28:\n    esi = 2;\n    eax = 0x3e8;\n    goto label_21;\nlabel_29:\n    esi = 0;\n    eax = 0x400;\n    sil = (*((r15 + 2)) == 0x42) ? 1 : 0;\n    esi = rsi + rsi + 1;\n    goto label_21;\nlabel_22:\n    return assert_fail (\"0 <= strtol_base && strtol_base <= 36\", \"lib/xstrtol.c\", 0x60, \"xstrtoimax\");\n}\n"
        },
        {
            "funcName": "fcn_00409e00",
            "funcStartAddr": "0x409e00",
            "funcEndAddr": "0x40a542",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x409e00 */\n#include <stdint.h>\n \nuint64_t fcn_00409e00 (int64_t arg1, int64_t arg2, uint32_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_fh;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    *(rsp) = rcx;\n    if (edx > 0x24) {\n        goto label_22;\n    }\n    rbx = rsi;\n    rax = rsp + 0x18;\n    if (rsi == 0) {\n        rbx = rax;\n    }\n    r12 = rdi;\n    r14 = r8;\n    errno_location ();\n    *(rax) = 0;\n    r13 = rax;\n    rax = strtol (r12, rbx, ebp);\n    r15 = *(rbx);\n    if (r15 == r12) {\n        goto label_23;\n    }\n    eax = *(r13);\n    if (eax != 0) {\n        goto label_24;\n    }\n    r12d = 0;\nlabel_0:\n    if (r14 != 0) {\n        r13d = *(r15);\n        if (r13b != 0) {\n            goto label_25;\n        }\n    }\nlabel_4:\n    rax = *(rsp);\n    *(rax) = rbp;\n    do {\nlabel_1:\n        eax = r12d;\n        return rax;\nlabel_24:\n        r12d = 4;\n    } while (eax != 0x22);\n    r12d = 1;\n    goto label_0;\nlabel_23:\n    if (r14 == 0) {\n        goto label_26;\n    }\n    r13d = *(r15);\n    r12d = 4;\n    if (r13b == 0) {\n        goto label_1;\n    }\n    esi = (int32_t) r13b;\n    r12d = 0;\n    rax = strchr (r14, rsi);\n    if (rax == 0) {\n        goto label_26;\n    }\nlabel_3:\n    edx = r13 - 0x45;\n    while (((rax >> rdx) & 1) >= 0) {\nlabel_2:\n        esi = 1;\n        eax = 0x400;\nlabel_21:\n        r13d -= 0x42;\n        if (r13b > 0x35) {\n            goto label_27;\n        }\n        r13d = (int32_t) r13b;\n        /* switch table (54 cases) at 0x410838 */\n        rax = 0x814400308945;\n        *((rsp + 0xf)) = dl;\n    }\n    rax = strchr (r14, 0x30);\n    if (rax == 0) {\n        goto label_2;\n    }\n    eax = *((r15 + 1));\n    if (al == 0x44) {\n        goto label_28;\n    }\n    if (al == 0x69) {\n        goto label_29;\n    }\n    edx = *((rsp + 0xf));\n    if (al == 0x42) {\n        goto label_28;\n    }\n    /* switch table (48 cases) at 0x4109e8 */\nlabel_26:\n    r12d = 4;\n    goto label_1;\nlabel_25:\n    esi = (int32_t) r13b;\n    rax = strchr (r14, rsi);\n    if (rax != 0) {\n        goto label_3;\n    }\nlabel_27:\n    rax = *(rsp);\n    r12d |= 2;\n    *(rax) = rbp;\n    goto label_1;\n    rax = 0xffe0000000000000;\n    rsi = (int64_t) esi;\n    if (rbp < rax) {\n        goto label_30;\n    }\n    rax = 0x1fffffffffffff;\n    if (rbp > rax) {\n        goto label_31;\n    }\n    rbp <<= 0xa;\n    do {\nlabel_5:\n        rsi += r15;\n        eax = r12d;\n        eax |= 2;\n        *(rbx) = rsi;\n        if (*(rsi) != 0) {\n            r12d = eax;\n        }\n        goto label_4;\n        rax = 0xc000000000000000;\n        rsi = (int64_t) esi;\n        if (rbp < rax) {\n            goto label_30;\n        }\n        rax = 0x3fffffffffffffff;\n        if (rbp > rax) {\n            goto label_31;\n        }\n        rbp += rbp;\n    } while (1);\n    rcx = (int64_t) eax;\n    rsi = (int64_t) esi;\n    rax = 0x8000000000000000;\n    __asm (\"cqo\");\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\nlabel_18:\n    if (rbp < rax) {\n        goto label_30;\n    }\n    rdi = 0x7fffffffffffffff;\n    rax = rdi;\n    __asm (\"cqo\");\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    do {\n        if (rax < rbp) {\n            goto label_31;\n        }\n        rbp *= rcx;\n        goto label_5;\n        rcx = (int64_t) eax;\n        rsi = (int64_t) esi;\n        rax = 0x8000000000000000;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rdi = rax;\nlabel_17:\n        if (rbp < rdi) {\n            goto label_30;\n        }\n        r8 = 0x7fffffffffffffff;\n        rax = r8;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        if (rbp > rax) {\n            goto label_31;\n        }\n        rbp *= rcx;\n    } while (rbp >= rdi);\n    do {\nlabel_30:\n        r12d = 1;\n        goto label_5;\n        rsi = (int64_t) esi;\nlabel_12:\n        rax = 0xffc0000000000000;\n    } while (rbp < rax);\n    rax = 0x3fffffffffffff;\n    if (rbp > rax) {\n        goto label_31;\n    }\n    rbp <<= 9;\n    goto label_5;\n    rsi = (int64_t) esi;\n    goto label_5;\n    rcx = (int64_t) eax;\n    rsi = (int64_t) esi;\n    rax = 0x8000000000000000;\n    __asm (\"cqo\");\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    r9 = rax;\nlabel_16:\n    edi = 5;\n    r10d = 0;\n    r8 = 0x7fffffffffffffff;\n    while (r9 <= rbp) {\n        rax = r8;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        if (rax < rbp) {\n            goto label_32;\n        }\n        rbp *= rcx;\nlabel_6:\n        edi--;\n        if (edi == 0) {\n            goto label_33;\n        }\n    }\n    r10d = 1;\n    goto label_6;\n    rcx = (int64_t) eax;\n    rsi = (int64_t) esi;\n    rax = 0x8000000000000000;\n    __asm (\"cqo\");\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    r9 = rax;\nlabel_15:\n    edi = 4;\n    r10d = 0;\n    r8 = 0x7fffffffffffffff;\n    while (r9 <= rbp) {\n        rax = r8;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        if (rax < rbp) {\n            goto label_34;\n        }\n        rbp *= rcx;\nlabel_7:\n        edi--;\n        if (edi == 0) {\n            goto label_33;\n        }\n    }\n    r10d = 1;\n    goto label_7;\n    rcx = (int64_t) eax;\n    rsi = (int64_t) esi;\n    rax = 0x8000000000000000;\n    __asm (\"cqo\");\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    r9 = rax;\nlabel_20:\n    edi = 6;\n    r10d = 0;\n    r8 = 0x7fffffffffffffff;\n    while (rbp >= r9) {\n        rax = r8;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        if (rax < rbp) {\n            goto label_35;\n        }\n        rbp *= rcx;\nlabel_8:\n        edi--;\n        if (edi == 0) {\n            goto label_33;\n        }\n    }\n    r10d = 1;\n    goto label_8;\n    rcx = (int64_t) eax;\n    rsi = (int64_t) esi;\n    rax = 0x8000000000000000;\n    __asm (\"cqo\");\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    r9 = rax;\nlabel_19:\n    edi = 3;\n    r10d = 0;\n    r8 = 0x7fffffffffffffff;\n    while (rbp >= r9) {\n        rax = r8;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        if (rax < rbp) {\n            goto label_36;\n        }\n        rbp *= rcx;\nlabel_9:\n        edi--;\n        if (edi == 0) {\n            goto label_33;\n        }\n    }\n    r10d = 1;\n    goto label_9;\n    rcx = (int64_t) eax;\n    rsi = (int64_t) esi;\n    rax = 0x8000000000000000;\n    __asm (\"cqo\");\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    r9 = rax;\nlabel_14:\n    edi = 8;\n    r10d = 0;\n    r8 = 0x7fffffffffffffff;\n    while (r9 <= rbp) {\n        rax = r8;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        if (rax < rbp) {\n            goto label_37;\n        }\n        rbp *= rcx;\nlabel_10:\n        edi--;\n        if (edi == 0) {\n            goto label_33;\n        }\n    }\n    r10d = 1;\n    goto label_10;\n    rcx = (int64_t) eax;\n    rsi = (int64_t) esi;\n    rax = 0x8000000000000000;\n    __asm (\"cqo\");\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    r9 = rax;\nlabel_13:\n    edi = 7;\n    r10d = 0;\n    r8 = 0x7fffffffffffffff;\n    while (r9 <= rbp) {\n        rax = r8;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        if (rax < rbp) {\n            goto label_38;\n        }\n        rbp *= rcx;\nlabel_11:\n        edi--;\n        if (edi == 0) {\n            goto label_33;\n        }\n    }\n    r10d = 1;\n    goto label_11;\n    esi = 1;\n    goto label_12;\n    esi = 1;\n    ecx = 0x400;\n    r9 = 0xffe0000000000000;\n    goto label_13;\n    esi = 1;\n    ecx = 0x400;\n    r9 = 0xffe0000000000000;\n    goto label_14;\n    esi = 1;\n    ecx = 0x400;\n    r9 = 0xffe0000000000000;\n    goto label_15;\n    esi = 1;\n    ecx = 0x400;\n    r9 = 0xffe0000000000000;\n    goto label_16;\n    esi = 1;\n    ecx = 0x400;\n    rdi = 0xffe0000000000000;\n    goto label_17;\n    esi = 1;\n    ecx = 0x400;\n    rax = 0xffe0000000000000;\n    goto label_18;\n    esi = 1;\n    ecx = 0x400;\n    r9 = 0xffe0000000000000;\n    goto label_19;\n    esi = 1;\n    ecx = 0x400;\n    r9 = 0xffe0000000000000;\n    goto label_20;\n    esi = 1;\n    goto label_5;\nlabel_33:\n    r12d |= r10d;\n    goto label_5;\nlabel_31:\n    r12d = 1;\n    goto label_5;\nlabel_38:\n    r10d = 1;\n    goto label_11;\nlabel_32:\n    r10d = 1;\n    goto label_6;\nlabel_37:\n    r10d = 1;\n    goto label_10;\nlabel_36:\n    r10d = 1;\n    goto label_9;\nlabel_35:\n    r10d = 1;\n    goto label_8;\nlabel_34:\n    r10d = 1;\n    goto label_7;\nlabel_28:\n    esi = 2;\n    eax = 0x3e8;\n    goto label_21;\nlabel_29:\n    esi = 0;\n    eax = 0x400;\n    sil = (*((r15 + 2)) == 0x42) ? 1 : 0;\n    esi = rsi + rsi + 1;\n    goto label_21;\nlabel_22:\n    return assert_fail (\"0 <= strtol_base && strtol_base <= 36\", \"lib/xstrtol.c\", 0x60, \"xstrtol\");\n}\n"
        },
        {
            "funcName": "fcn_0040a550",
            "funcStartAddr": "0x40a550",
            "funcEndAddr": "0x412df3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40a550 */\n#include <stdint.h>\n \nint64_t fcn_0040a550 (uint32_t arg1, int64_t arg2, int64_t arg4, int64_t arg5) {\n    int64_t var_eh;\n    int64_t var_fh;\n    rdi = arg1;\n    rsi = arg2;\n    rcx = arg4;\n    r8 = arg5;\n    do {\n        abort ();\n        edi--;\n        ebx = *(0x006142c0);\n    } while (edi > 3);\n    r10d = esi;\n    rsi = *((rdi*8 + 0x410be0));\n    rax = (int64_t) r10d;\n    if (r10d < 0) {\n        goto label_0;\n    }\n    rax <<= 5;\n    r12d = 0x410b70;\n    r13 = *((rcx + rax));\n    do {\n        edx = 5;\n        rax = dcgettext (0, rsi);\n        r9 = rbp;\n        r8 = r13;\n        rcx = r12;\n        eax = 0;\n        error (ebx, 0, rax);\n        rax = abort ();\nlabel_0:\n        r12d = 0x410b70;\n        *((rsp + 0xe)) = dl;\n        r13 = rsp + 0xe;\n        r12 -= rax;\n        *((rsp + 0xf)) = 0;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040a5e0",
            "funcStartAddr": "0x40a5e0",
            "funcEndAddr": "0x40aa14",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40a5e0 */\n#include <stdint.h>\n \nuint64_t fcn_0040a5e0 (int64_t arg1, int64_t arg2, uint32_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_8h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    if (edx > 0x24) {\n        goto label_13;\n    }\n    r15 = rsi;\n    rax = rsp + 0x18;\n    *(rsp) = edx;\n    r14 = rcx;\n    r13 = r8;\n    if (rsi == 0) {\n        r15 = rax;\n    }\n    errno_location ();\n    *(rax) = 0;\n    r12 = rax;\n    ebx = *(rbp);\n    rax = ctype_b_loc ();\n    edx = *(rsp);\n    rsi = *(rax);\n    rax = rbp;\n    while ((*((rsi + rcx*2 + 1)) & 0x20) != 0) {\n        rax++;\n        ebx = *(rax);\n        ecx = (int32_t) bl;\n    }\n    if (bl == 0x2d) {\n        goto label_1;\n    }\n    ecx = 0;\n    rsi = r15;\n    rdi = rbp;\n    rax = strtoul_internal ();\n    r8 = *(r15);\n    rbx = rax;\n    if (r8 == rbp) {\n        goto label_14;\n    }\n    eax = *(r12);\n    if (eax != 0) {\n        goto label_15;\n    }\n    ebp = 0;\n    do {\n        if (r13 != 0) {\n            r12d = *(r8);\n            if (r12b != 0) {\n                goto label_16;\n            }\n        }\nlabel_2:\n        *(r14) = rbx;\nlabel_0:\n        eax = ebp;\n        return rax;\nlabel_15:\n    } while (eax == 0x22);\n    do {\nlabel_1:\n        goto label_0;\nlabel_14:\n        *(rsp) = r8;\n    } while (r13 == 0);\n    r12d = *(rbp);\n    if (r12b == 0) {\n        goto label_1;\n    }\n    esi = (int32_t) r12b;\n    ebp = 0;\n    ebx = 1;\n    rax = strchr (r13, rsi);\n    r8 = *(rsp);\n    if (rax == 0) {\n        goto label_1;\n    }\nlabel_4:\n    edx = r12 - 0x45;\n    if (dl <= 0x2f) {\n        rax = 0x814400308945;\n        *(rsp) = dl;\n        if (((rax >> rdx) & 1) >= 0) {\n            goto label_17;\n        }\n        *((rsp + 8)) = r8;\n        rax = strchr (r13, 0x30);\n        r8 = *((rsp + 8));\n        if (rax == 0) {\n            goto label_17;\n        }\n        eax = *((r8 + 1));\n        if (al == 0x44) {\n            goto label_18;\n        }\n        if (al == 0x69) {\n            goto label_19;\n        }\n        edx = *(rsp);\n        if (al == 0x42) {\n            goto label_18;\n        }\n        /* switch table (67 cases) at 0x410c00 */\n    }\nlabel_17:\n    esi = 1;\n    edx = 0x400;\nlabel_7:\n    r12d -= 0x42;\n    if (r12b > 0x35) {\n        goto label_20;\n    }\n    r12d = (int32_t) r12b;\n    /* switch table (54 cases) at 0x410d80 */\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    rax = rbx;\n    rdx:rax = rax * rcx;\n    if (r12b overflow 0x35) {\n        goto label_5;\n    }\n    rdx:rax = rax * rcx;\n    if (r12b overflow 0x35) {\n        goto label_5;\n    }\n    rbx = rax;\n    do {\nlabel_3:\n        rsi = (int64_t) esi;\n        eax = ebp;\n        r8 += rsi;\n        eax |= 2;\n        *(r15) = r8;\n        if (*(r8) != 0) {\n        }\n        goto label_2;\n        esi = 1;\n        edx = 0x400;\n        rax = rbx;\n        rdx:rax = rax * rdx;\n        rbx = rax;\n    } while (*(r8) !overflow 0);\nlabel_5:\n    rbx |= 0xffffffffffffffff;\n    goto label_3;\nlabel_16:\n    esi = (int32_t) r12b;\n    *(rsp) = r8;\n    rax = strchr (r13, rsi);\n    r8 = *(rsp);\n    if (rax != 0) {\n        goto label_4;\n    }\nlabel_20:\n    *(r14) = rbx;\n    ebp |= 2;\n    goto label_0;\n    if (rbx < 0) {\n        goto label_5;\n    }\n    rbx += rbx;\n    goto label_3;\n    esi = 1;\n    rax = rbx;\n    rax >>= 0x37;\n    if (rax != 0) {\n        goto label_5;\n    }\n    rbx <<= 9;\n    goto label_3;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 7;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (rbx overflow 0) {\n            goto label_21;\n        }\nlabel_8:\n        edi--;\n    } while (edi != 0);\nlabel_6:\n    ebp |= r9d;\n    goto label_3;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 8;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (ebp overflow 0) {\n            goto label_22;\n        }\nlabel_11:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 4;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_23;\n        }\nlabel_9:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 5;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_24;\n        }\nlabel_12:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 6;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_25;\n        }\nlabel_10:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    rax = rbx;\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rbx = rax;\n    eax = 0;\n    ebp |= eax;\n    goto label_3;\n    rax = rbx;\n    rax >>= 0x36;\n    if (rax != 0) {\n        goto label_5;\n    }\n    rbx <<= 0xa;\n    goto label_3;\n    esi = 1;\n    goto label_3;\nlabel_18:\n    esi = 2;\n    edx = 0x3e8;\n    goto label_7;\nlabel_19:\n    esi = 0;\n    edx = 0x400;\n    sil = (*((r8 + 2)) == 0x42) ? 1 : 0;\n    esi = rsi + rsi + 1;\n    goto label_7;\nlabel_21:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_8;\nlabel_26:\n    eax = 1;\n    rbx |= 0xffffffffffffffff;\n    ebp |= eax;\n    goto label_3;\nlabel_23:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_9;\nlabel_25:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_10;\nlabel_22:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_11;\nlabel_24:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_12;\nlabel_13:\n    return assert_fail (\"0 <= strtol_base && strtol_base <= 36\", \"lib/xstrtol.c\", 0x60, \"xstrtoumax\");\n}\n"
        },
        {
            "funcName": "fcn_0040aa20",
            "funcStartAddr": "0x40aa20",
            "funcEndAddr": "0x40aa9b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40aa20 */\n#include <stdint.h>\n \nuint64_t fcn_0040aa20 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    eax = fileno (rdi);\n    rdi = rbx;\n    if (eax < 0) {\n        goto label_1;\n    }\n    eax = freading ();\n    while (rax != -1) {\n        eax = fcn_0040abe0 (rbx);\n        if (eax == 0) {\n            goto label_2;\n        }\n        rax = errno_location ();\n        r12d = *(rax);\n        fclose (rbx);\n        if (r12d != 0) {\n            goto label_3;\n        }\nlabel_0:\n        return rax;\n        eax = fileno (rbx);\n        esi = 0;\n        edx = 1;\n        edi = eax;\n        rax = lseek ();\n    }\nlabel_2:\n    rdi = rbx;\nlabel_1:\n    void (*0x4019b0)() ();\nlabel_3:\n    *(rbp) = r12d;\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040abe0",
            "funcStartAddr": "0x40abe0",
            "funcEndAddr": "0x40ac20",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40abe0 */\n#include <stdint.h>\n \nuint32_t fcn_0040abe0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    if (rdi != 0) {\n        eax = freading ();\n        if (eax == 0) {\n            goto label_0;\n        }\n        if ((*(rbx) & 0x100) != 0) {\n            goto label_1;\n        }\n    }\nlabel_0:\n    rdi = rbx;\n    void (*0x401b90)() ();\nlabel_1:\n    fcn_0040ac20 (rbx, 0, 1);\n    rdi = rbx;\n    return fflush ();\n}\n"
        },
        {
            "funcName": "fcn_0040ac20",
            "funcStartAddr": "0x40ac20",
            "funcEndAddr": "0x40ac77",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40ac20 */\n#include <stdint.h>\n \nint64_t fcn_0040ac20 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rax = *((rdi + 8));\n    while (*((rdi + 0x28)) != rax) {\nlabel_0:\n        void (*0x401c50)() ();\n        rax = *((rdi + 0x20));\n    }\n    if (*((rdi + 0x48)) != 0) {\n        goto label_0;\n    }\n    r12d = edx;\n    rbx = rdi;\n    eax = fileno (rdi);\n    edx = r12d;\n    rsi = rbp;\n    edi = eax;\n    rax = lseek ();\n    if (rax != -1) {\n        *(rbx) &= 0xffffffef;\n        *((rbx + 0x90)) = rax;\n        eax = 0;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040ac80",
            "funcStartAddr": "0x40ac80",
            "funcEndAddr": "0x40ad5f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40ac80 */\n#include <stdint.h>\n \nuint64_t fcn_0040ac80 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r11 = rdi + 8;\n    r12d = *((rsi + 0x2c));\n    ebp = *(rsi);\n    rbx = *((rsi + 0x30));\n    r9d = r12d;\n    r10d = ebp;\n    r8 = rbx;\nlabel_1:\n    if (r10d <= r8d) {\n        goto label_2;\n    }\nlabel_0:\n    if (r9d >= r8d) {\n        goto label_2;\n    }\n    r14d = r10d;\n    edx = r8d;\n    r14d -= r8d;\n    edx -= r9d;\n    if (r14d <= edx) {\n        goto label_3;\n    }\n    rcx = (int64_t) r9d;\n    r10d -= edx;\n    edx--;\n    rdx += rcx;\n    rax = rdi + rcx*8;\n    r13 = r11 + rdx*8;\n    rdx = (int64_t) r10d;\n    rdx -= rcx;\n    do {\n        rcx = *(rax);\n        r14 = *((rax + rdx*8));\n        *(rax) = r14;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (r13 != rax);\n    if (r10d > r8d) {\n        goto label_0;\n    }\nlabel_2:\n    eax = ebp;\n    *((rsi + 0x30)) = ebp;\n    eax -= r8d;\n    r12d += eax;\n    *((rsi + 0x2c)) = r12d;\n    r12 = rbx;\n    r13 = rbx;\n    r14 = rbx;\n    r15 = rbx;\n    return rax;\nlabel_3:\n    rdx = (int64_t) r9d;\n    ecx = r14 - 1;\n    rcx += rdx;\n    rax = rdi + rdx*8;\n    r13 = r11 + rcx*8;\n    rcx = rbx;\n    rcx -= rdx;\n    rdx = rcx;\n    do {\n        rcx = *(rax);\n        r15 = *((rax + rdx*8));\n        *(rax) = r15;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (rax != r13);\n    r9d += r14d;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040ad60",
            "funcStartAddr": "0x40ad60",
            "funcEndAddr": "0x40b37c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40ad60 */\n#include <stdint.h>\n \nint64_t fcn_0040ad60 (int64_t arg_90h, int64_t arg_98h, int64_t arg_a0h, signed int64_t arg1, int64_t arg2, char * arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_ch;\n    int64_t var_10h;\n    void * ptr;\n    int64_t var_20h;\n    int64_t var_28h;\n    char * s;\n    int64_t var_38h;\n    int64_t c;\n    signed int64_t var_40h;\n    int64_t var_44h;\n    void * var_48h;\n    size_t nmeb;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rax = *((rsp + 0x90));\n    *((rsp + 0x40)) = edi;\n    *((rsp + 0x28)) = rsi;\n    r14 = *((rax + 0x20));\n    *((rsp + 0x30)) = rdx;\n    *(rsp) = rcx;\n    eax = *(r14);\n    *((rsp + 0x20)) = r8;\n    *((rsp + 0xc)) = r9d;\n    *((rsp + 0x3f)) = al;\n    if (al == 0x3d) {\n        goto label_11;\n    }\n    if (al == 0) {\n        goto label_11;\n    }\n    do {\n        rbp++;\n        eax = *(rbp);\n        if (al == 0) {\n            goto label_12;\n        }\n    } while (al != 0x3d);\nlabel_12:\n    r13 = rbp;\n    r13 -= r14;\nlabel_6:\n    rbx = *(rsp);\n    r12d = 0;\n    rax = *(rbx);\n    *((rsp + 0x10)) = rax;\n    r15 = rax;\n    if (rax != 0) {\n        goto label_13;\n    }\n    goto label_14;\n    do {\n        r12 = (int64_t) r8d;\nlabel_13:\n        eax = strncmp (r15, r14, r13);\n        if (eax == 0) {\n            rax = strlen (r15);\n            if (rax == r13) {\n                goto label_15;\n            }\n        }\n        rbx += 0x20;\n        r15 = *(rbx);\n        r8d = r12 + 1;\n    } while (r15 != 0);\n    rcx = *(rsp);\n    *((rsp + 0x4c)) = r8d;\n    r9d = 0;\n    ebx = 0;\n    *((rsp + 0x44)) = 0xffffffff;\n    r15 = r9;\n    *((rsp + 0x38)) = 0;\n    *((rsp + 0x48)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x10)) = rbp;\n    do {\n        eax = strncmp (*((rsp + 0x10)), r14, r13);\n        if (eax == 0) {\n            if (rbx == 0) {\n                goto label_16;\n            }\n            eax = *((rsp + 0xc));\n            if (eax == 0) {\n                goto label_17;\n            }\nlabel_0:\n            r11d = *((rsp + 0x38));\n            if (r11d != 0) {\n                goto label_1;\n            }\n            r10d = *((rsp + 0x98));\n            if (r10d == 0) {\n                goto label_18;\n            }\n            if (*((rsp + 0x18)) == 0) {\n                goto label_19;\n            }\nlabel_3:\n            rax = *((rsp + 0x18));\n            *((rax + r15)) = 1;\n        }\nlabel_1:\n        rbp += 0x20;\n        rdi = *(rbp);\n        r15++;\n    } while (rdi != 0);\n    rbp = *((rsp + 0x10));\n    if (*((rsp + 0x18)) != 0) {\n        goto label_20;\n    }\n    r9d = *((rsp + 0x38));\n    if (r9d != 0) {\n        goto label_20;\n    }\n    if (rbx == 0) {\nlabel_14:\n        eax = *((rsp + 0xc));\n        if (eax != 0) {\n            rax = *((rsp + 0x90));\n            rcx = *((rsp + 0x28));\n            rax = *(rax);\n            rax = *((rcx + rax*8));\n            if (*((rax + 1)) == 0x2d) {\n                goto label_21;\n            }\n            esi = *((rsp + 0x3f));\n            rax = strchr (*((rsp + 0x30)), rsi);\n            rdx = rax;\n            eax = 0xffffffff;\n            if (rdx != 0) {\n                goto label_5;\n            }\n        }\nlabel_21:\n        ecx = *((rsp + 0x98));\n        if (ecx != 0) {\n            goto label_22;\n        }\nlabel_4:\n        rax = *((rsp + 0x90));\n        *((rax + 0x20)) = 0;\n        *(rax)++;\n        *((rax + 8)) = 0;\n        eax = 0x3f;\n        return rax;\n    }\n    r12d = *((rsp + 0x44));\nlabel_15:\n    rax = *((rsp + 0x90));\n    rcx = *((rsp + 0x90));\n    edx = *(rax);\n    *((rcx + 0x20)) = 0;\n    eax = rdx + 1;\n    *(rcx) = eax;\n    ecx = *((rbx + 8));\n    if (*(rbp) != 0) {\n        goto label_23;\n    }\n    if (ecx == 1) {\n        goto label_24;\n    }\nlabel_2:\n    rax = *((rsp + 0x20));\n    if (rax != 0) {\n        *(rax) = r12d;\n    }\n    rdx = *((rbx + 0x10));\n    eax = *((rbx + 0x18));\n    if (rdx != 0) {\n        *(rdx) = eax;\n        eax = 0;\n    }\nlabel_5:\n    return rax;\nlabel_17:\n    eax = *((rbp + 8));\n    if (*((rbx + 8)) != eax) {\n        goto label_0;\n    }\n    rax = *((rbp + 0x10));\n    if (*((rbx + 0x10)) != rax) {\n        goto label_0;\n    }\n    eax = *((rbp + 0x18));\n    if (*((rbx + 0x18)) != eax) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_23:\n    if (ecx == 0) {\n        goto label_25;\n    }\n    rax = *((rsp + 0x90));\n    rbp++;\n    *((rax + 0x10)) = rbp;\n    goto label_2;\nlabel_16:\n    *((rsp + 0x44)) = r15d;\n    rbx = rbp;\n    goto label_1;\nlabel_18:\n    *((rsp + 0x38)) = 1;\n    if (*((rsp + 0x18)) == 0) {\n        goto label_1;\n    }\n    goto label_3;\nlabel_22:\n    rax = *((rsp + 0x28));\n    edx = 5;\n    rbx = *(rax);\n    rax = dcgettext (0, \"%s: unrecognized option '%s%s'\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r14;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbx;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_4;\nlabel_20:\n    r8d = *((rsp + 0x98));\n    if (r8d != 0) {\n        edi = *((rsp + 0x38));\n        if (edi == 0) {\n            goto label_26;\n        }\n        rax = *((rsp + 0x28));\n        edx = 5;\n        rbx = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' is ambiguous\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r14;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbx;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        rax = *((rsp + 0x90));\n        r14 = *((rax + 0x20));\n    }\nlabel_9:\n    esi = *((rsp + 0x48));\n    if (esi != 0) {\n        goto label_27;\n    }\nlabel_7:\n    rax = strlen (r14);\n    r14 += rax;\n    rax = *((rsp + 0x90));\n    *((rax + 0x20)) = r14;\n    *(rax)++;\n    *((rax + 8)) = 0;\n    eax = 0x3f;\n    goto label_5;\nlabel_24:\n    if (eax >= *((rsp + 0x40))) {\n        goto label_28;\n    }\n    rcx = *((rsp + 0x90));\n    edx += 2;\n    rax = (int64_t) eax;\n    *(rcx) = edx;\n    rcx = *((rsp + 0x28));\n    rax = *((rcx + rax*8));\n    rcx = *((rsp + 0x90));\n    *((rcx + 0x10)) = rax;\n    goto label_2;\nlabel_11:\n    r13d = 0;\n    goto label_6;\nlabel_25:\n    edx = *((rsp + 0x98));\n    while (1) {\n        eax = *((rbx + 0x18));\n        rcx = *((rsp + 0x90));\n        *((rcx + 8)) = eax;\n        eax = 0x3f;\n        goto label_5;\nlabel_19:\n        rdi = *((rsp + 0x4c));\n        rax = calloc (rdi, 1);\n        *((rsp + 0x18)) = rax;\n        if (rax == 0) {\n            goto label_29;\n        }\n        rax = *((rsp + 0x44));\n        rcx = *((rsp + 0x18));\n        *((rsp + 0x48)) = 1;\n        *((rcx + rax)) = 1;\n        goto label_3;\n        rax = *((rsp + 0x28));\n        r12 = *(rbx);\n        edx = 5;\n        rbp = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' doesn't allow an argument\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r12;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_27:\n    free (*((rsp + 0x18)));\n    goto label_7;\nlabel_28:\n    eax = *((rsp + 0x98));\n    if (eax != 0) {\n        goto label_30;\n    }\nlabel_10:\n    eax = *((rbx + 0x18));\n    rcx = *((rsp + 0x90));\n    *((rcx + 8)) = eax;\n    rax = *((rsp + 0x30));\n    al = (*(rax) != 0x3a) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = rax * 5;\n    goto label_5;\nlabel_26:\n    rdi = stderr;\n    flockfile ();\n    rax = *((rsp + 0x90));\n    edx = 5;\n    rbx = *((rax + 0x20));\n    rax = *((rsp + 0x28));\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' is ambiguous; possibilities:\");\n    rdi = stderr;\n    r9 = rbx;\n    r8 = *((rsp + 0xa0));\n    rcx = rbp;\n    rdx = rax;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    rax = *((rsp + 0x18));\n    rdi = stderr;\n    rbx = *(rsp);\n    r12 = rax + r12 + 1;\n    while (*(rbp) == 0) {\nlabel_8:\n        rbp++;\n        rbx += 0x20;\n        if (r12 == rbp) {\n            goto label_31;\n        }\n    }\n    r8 = *(rbx);\n    edx = \" '%s%s';\n    esi = 1;\n    eax = 0;\n    rcx = *((rsp + 0xa0));\n    fprintf_chk ();\n    rdi = stderr;\n    goto label_8;\nlabel_31:\n    fputc (0xa, rdi);\n    rdi = stderr;\n    funlockfile ();\n    rax = *((rsp + 0x90));\n    r14 = *((rax + 0x20));\n    goto label_9;\nlabel_30:\n    rax = *((rsp + 0x28));\n    r12 = *(rbx);\n    edx = 5;\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' requires an argument\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r12;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbp;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_10;\nlabel_29:\n    *((rsp + 0x38)) = 1;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040b380",
            "funcStartAddr": "0x40b380",
            "funcEndAddr": "0x40b946",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40b380 */\n#include <stdint.h>\n \nuint64_t fcn_0040b380 (int64_t arg_70h, int64_t arg_78h, int64_t arg1, int64_t arg2, int64_t arg3, uint32_t arg4, int64_t arg5, int64_t arg6) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_1ch;\n    int64_t var_20h;\n    int64_t var_28h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rbx = *((rsp + 0x70));\n    *((rsp + 8)) = rcx;\n    *((rsp + 0x10)) = r8;\n    r13d = *((rbx + 4));\n    if (edi <= 0) {\n        goto label_16;\n    }\n    eax = *(rbx);\n    r12 = rsi;\n    r15 = rdx;\n    *((rbx + 0x10)) = 0;\n    if (eax == 0) {\n        goto label_17;\n    }\n    esi = *((rbx + 0x18));\n    if (esi == 0) {\nlabel_1:\n        *((rbx + 0x30)) = eax;\n        *((rbx + 0x2c)) = eax;\n        *((rbx + 0x20)) = 0;\n        eax = *(r15);\n        if (al == 0x2d) {\n            goto label_18;\n        }\n        if (al == 0x2b) {\n            goto label_19;\n        }\n        ecx = *((rsp + 0x78));\n        edx = 0;\n        if (ecx == 0) {\n            goto label_20;\n        }\nlabel_8:\n        *((rbx + 0x28)) = 0;\n        goto label_11;\n    }\n    eax = *(rdx);\n    rdx = *((rbx + 0x20));\n    ecx = rax - 0x2b;\n    ecx &= 0xfd;\n    if (ecx != 0) {\n        goto label_21;\n    }\n    eax = *((r15 + 1));\n    r15++;\n    eax = 0;\n    if (al == 0x3a) {\n        r13d = eax;\n    }\n    if (rdx != 0) {\n        goto label_22;\n    }\n    do {\nlabel_0:\n        eax = *(rbx);\n        if (*((rbx + 0x30)) > eax) {\n            *((rbx + 0x30)) = eax;\n        }\n        if (eax < *((rbx + 0x2c))) {\n            *((rbx + 0x2c)) = eax;\n        }\n        if (*((rbx + 0x28)) == 1) {\n            goto label_23;\n        }\nlabel_4:\n        if (ebp == eax) {\n            goto label_24;\n        }\n        rdx = (int64_t) eax;\n        ecx = 3;\n        edi = 0x410b70;\n        r14 = *((r12 + rdx*8));\n        rsi = *((r12 + rdx*8));\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (ebp > eax) ? 1 : 0;\n        if (cl != 0) {\n            goto label_25;\n        }\n        edx = *((rbx + 0x2c));\n        ecx = *((rbx + 0x30));\n        eax++;\n        *(rbx) = eax;\n        if (edx == ecx) {\n            goto label_26;\n        }\n        if (eax != ecx) {\n            fcn_0040ac80 (r12, rbx);\n            edx = *((rbx + 0x2c));\n        }\nlabel_12:\n        *((rbx + 0x30)) = ebp;\n        *(rbx) = ebp;\n        goto label_27;\nlabel_18:\n        *((rbx + 0x28)) = 2;\n        r15++;\n        edx = 0;\nlabel_11:\n        *((rbx + 0x18)) = 1;\n        eax = *(r15);\nlabel_21:\n        eax = 0;\n        if (al == 0x3a) {\n            r13d = eax;\n        }\n    } while (rdx == 0);\nlabel_22:\n    if (*(rdx) == 0) {\n        goto label_0;\n    }\nlabel_6:\n    r8 = rdx + 1;\n    *((rsp + 0x20)) = rdx;\n    *((rbx + 0x20)) = r8;\n    r14d = *(rdx);\n    *((rsp + 0x28)) = r8;\n    *((rsp + 0x1c)) = r14b;\n    rax = strchr (r15, r14d);\n    rdx = *((rsp + 0x20));\n    ecx = *((rsp + 0x1c));\n    r8 = *((rsp + 0x28));\n    if (*((rdx + 1)) == 0) {\n        *(rbx)++;\n    }\n    ecx -= 0x3a;\n    if (cl <= 1) {\n        goto label_28;\n    }\n    if (rax == 0) {\n        goto label_28;\n    }\n    ecx = *((rax + 1));\n    if (*(rax) == 0x57) {\n        goto label_29;\n    }\nlabel_7:\n    if (cl == 0x3a) {\n        goto label_30;\n    }\n    do {\nlabel_2:\n        eax = r14d;\n        return rax;\nlabel_25:\n        if (*(r14) == 0x2d) {\n            goto label_31;\n        }\nlabel_5:\n        edx = *((rbx + 0x28));\n        if (edx == 0) {\n            goto label_16;\n        }\n        eax++;\n        *((rbx + 0x10)) = r14;\n        r14d = 1;\n        *(rbx) = eax;\n    } while (1);\nlabel_17:\n    *(rbx) = 1;\n    eax = 1;\n    goto label_1;\nlabel_24:\n    ebp = *((rbx + 0x30));\n    edx = *((rbx + 0x2c));\nlabel_27:\n    if (edx != ebp) {\n        *(rbx) = edx;\n    }\nlabel_16:\n    r14d = 0xffffffff;\n    goto label_2;\nlabel_23:\n    edx = *((rbx + 0x30));\n    if (*((rbx + 0x2c)) == edx) {\n        goto label_32;\n    }\n    if (eax != edx) {\n        *((rsp + 0x1c)) = r9d;\n        fcn_0040ac80 (r12, rbx);\n        edx = *(rbx);\n        r9d = *((rsp + 0x1c));\n    }\nlabel_9:\n    if (ebp <= edx) {\n        goto label_33;\n    }\n    rax = (int64_t) edx;\n    while (*(rcx) != 0x2d) {\nlabel_3:\n        edx = rsi + 1;\n        rax++;\n        *(rbx) = edx;\n        if (ebp <= eax) {\n            goto label_33;\n        }\n        rcx = *((r12 + rax*8));\n        esi = eax;\n        edx = eax;\n    }\n    if (*((rcx + 1)) == 0) {\n        goto label_3;\n    }\n    eax = *(rbx);\nlabel_10:\n    *((rbx + 0x30)) = edx;\n    goto label_4;\nlabel_31:\n    ecx = *((r14 + 1));\n    if (cl == 0) {\n        goto label_5;\n    }\n    if (*((rsp + 8)) == 0) {\n        goto label_34;\n    }\n    if (cl == 0x2d) {\n        goto label_35;\n    }\n    if (r9d == 0) {\n        goto label_34;\n    }\n    if (*((r14 + 2)) == 0) {\n        esi = (int32_t) cl;\n        *((rsp + 0x1c)) = r9d;\n        rax = strchr (r15, rsi);\n        r9d = *((rsp + 0x1c));\n        if (rax != 0) {\n            goto label_34;\n        }\n    }\n    rdx = r14 + 1;\n    *((rbx + 0x20)) = rdx;\n    eax = fcn_0040ad60 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), r9);\n    r14d = eax;\n    if (eax != 0xffffffff) {\n        goto label_2;\n    }\n    rax = *(rbx);\n    r14 = *((r12 + rax*8));\nlabel_34:\n    rdx = r14 + 1;\n    goto label_6;\nlabel_29:\n    if (*((rsp + 8)) == 0) {\n        goto label_7;\n    }\n    if (cl != 0x3b) {\n        goto label_7;\n    }\n    if (*((rdx + 1)) == 0) {\n        rax = *(rbx);\n        if (eax == ebp) {\n            goto label_36;\n        }\n        r8 = *((r12 + rax*8));\n    }\n    *((rbx + 0x20)) = r8;\n    *((rbx + 0x10)) = 0;\nlabel_14:\n    eax = fcn_0040ad60 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), 0);\n    r14d = eax;\n    goto label_2;\nlabel_20:\n    *((rsp + 0x1c)) = r9d;\n    rax = getenv (\"POSIXLY_CORRECT\");\n    r9d = *((rsp + 0x1c));\n    if (rax == 0) {\n        goto label_37;\n    }\n    rdx = *((rbx + 0x20));\n    goto label_8;\nlabel_30:\n    edx = *((rdx + 1));\n    if (*((rax + 2)) == 0x3a) {\n        goto label_38;\n    }\n    rax = *(rbx);\n    if (dl != 0) {\n        goto label_39;\n    }\n    if (ebp == eax) {\n        goto label_40;\n    }\n    edx = rax + 1;\n    rax = *((r12 + rax*8));\n    *(rbx) = edx;\n    *((rbx + 0x10)) = rax;\nlabel_13:\n    *((rbx + 0x20)) = 0;\n    goto label_2;\nlabel_32:\n    if (eax == edx) {\n        goto label_9;\n    }\n    *((rbx + 0x2c)) = eax;\n    edx = eax;\n    goto label_9;\nlabel_33:\n    eax = edx;\n    goto label_10;\nlabel_19:\n    *((rbx + 0x28)) = 0;\n    r15++;\n    edx = 0;\n    goto label_11;\nlabel_28:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0x3f;\n        goto label_2;\nlabel_26:\n        *((rbx + 0x2c)) = eax;\n        edx = eax;\n        goto label_12;\nlabel_39:\n        eax++;\n        *((rbx + 0x10)) = r8;\n        *(rbx) = eax;\n        goto label_13;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: invalid option -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_38:\n    if (dl != 0) {\n        *((rbx + 0x10)) = r8;\n        *(rbx)++;\n        goto label_13;\nlabel_37:\n        *((rbx + 0x28)) = 1;\n        rdx = *((rbx + 0x20));\n        goto label_11;\n    }\n    *((rbx + 0x10)) = 0;\n    goto label_13;\nlabel_40:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_13;\nlabel_35:\n        rdx = r14 + 2;\n        *((rbx + 0x20)) = rdx;\n        goto label_14;\nlabel_36:\n        if (r13d != 0) {\n            goto label_41;\n        }\nlabel_15:\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_2;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_41:\n    rbp = *(r12);\n    edx = 5;\n    rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n    rdi = stderr;\n    r8d = r14d;\n    esi = 1;\n    rdx = rax;\n    rcx = rbp;\n    eax = 0;\n    fprintf_chk ();\n    goto label_15;\n}\n"
        },
        {
            "funcName": "fcn_0040b950",
            "funcStartAddr": "0x40b950",
            "funcEndAddr": "0x40b9a6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40b950 */\n#include <stdint.h>\n \nint32_t fcn_0040b950 (int64_t arg_10h) {\n    eax = *(0x0061433c);\n    *(0x006145e0) = eax;\n    eax = *(0x00614338);\n    *(0x006145e4) = eax;\n    eax = *((rsp + 0x10));\n    fcn_0040b380 (rdi, rsi, rdx, rcx, r8, r9);\n    edx = imp.__libc_start_main;\n    *(0x0061433c) = edx;\n    rdx = imp.__libc_start_main;\n    *(0x00614630) = rdx;\n    edx = imp.__libc_start_main;\n    *(0x00614334) = edx;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_0040b9d0",
            "funcStartAddr": "0x40b9d0",
            "funcEndAddr": "0x40b9e3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40b9d0 */\n#include <stdint.h>\n \nvoid fcn_0040b9d0 (void) {\n    r9d = 0;\n    fcn_0040b950 (rdi);\n}\n"
        },
        {
            "funcName": "fcn_0040ba50",
            "funcStartAddr": "0x40ba50",
            "funcEndAddr": "0x40baca",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40ba50 */\n#include <stdint.h>\n \nuint64_t fcn_0040ba50 (wint_t arg1, int64_t arg2, size_t * arg3, mbstate_t * ps) {\n    int64_t var_ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = ps;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    rbx = 0xfffffffffffffffe;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r12 = rdi;\n    while (1) {\n        rax = mbrtowc (r12, rbp, rdx, rcx);\n        rbx = rax;\n        if (rax > 0xfffffffffffffffd) {\n            goto label_2;\n        }\nlabel_0:\n        rax = rbx;\n        return rax;\nlabel_1:\n        edx = 1;\n        r12 = rsp + 0xc;\n    }\nlabel_2:\n    al = fcn_00405590 (0);\n    if (al != 0) {\n        goto label_0;\n    }\n    eax = *(rbp);\n    ebx = 1;\n    *(r12) = eax;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040bad0",
            "funcStartAddr": "0x40bad0",
            "funcEndAddr": "0x40bb15",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40bad0 */\n#include <stdint.h>\n \nuint32_t fcn_0040bad0 (char * value) {\n    rdi = value;\n    if (*((rdi + 8)) != 0) {\n        goto label_0;\n    }\n    edi = 0x40cf65;\n    eax = unsetenv ();\n    do {\n        edx = 0;\n        if (eax == 0) {\n            tzset ();\n            edx = 1;\n        }\n        eax = 1;\n        return eax;\nlabel_0:\n        setenv (0x40cf65, rdi + 9, 1);\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040bb20",
            "funcStartAddr": "0x40bb20",
            "funcEndAddr": "0x40bb49",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40bb20 */\n#include <stdint.h>\n \nvoid fcn_0040bb20 (int64_t arg1) {\n    rdi = arg1;\n    if (rdi == 0) {\n        goto label_0;\n    }\n    do {\n        rbx = *(rdi);\n        free (rdi);\n        rdi = rbx;\n    } while (rbx != 0);\n    return;\nlabel_0:\n}\n"
        },
        {
            "funcName": "fcn_0040bb50",
            "funcStartAddr": "0x40bb50",
            "funcEndAddr": "0x40bb91",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40bb50 */\n#include <stdint.h>\n \nuint64_t fcn_0040bb50 (int64_t arg1) {\n    rdi = arg1;\n    r12 = rdi;\n    rax = errno_location ();\n    rbx = rax;\n    r13d = *(rax);\n    eax = fcn_0040bad0 (r12);\n    if (al == 0) {\n        r13d = *(rbx);\n    }\n    fcn_0040bb20 (r12);\n    *(rbx) = r13d;\n    eax = ebp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040bba0",
            "funcStartAddr": "0x40bba0",
            "funcEndAddr": "0x40bc2f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40bba0 */\n#include <stdint.h>\n \nuint64_t fcn_0040bba0 (int64_t arg1) {\n    rdi = arg1;\n    if (rdi == 0) {\n        goto label_0;\n    }\n    r12 = rdi;\n    strlen (rdi);\n    edi = 0x76;\n    rbp = rax + 1;\n    if (rbp >= 0x76) {\n        rdi = rbp;\n    }\n    rdi += 0x11;\n    rdi &= 0xfffffffffffffff8;\n    rax = malloc (rdi);\n    rbx = rax;\n    if (rax == 0) {\n        goto label_1;\n    }\n    *(rax) = 0;\n    eax = 1;\n    *((rbx + 8)) = ax;\n    memcpy (rbx + 9, r12, rbp);\n    *((rbx + rbp + 9)) = 0;\n    do {\nlabel_1:\n        rax = rbx;\n        return rax;\nlabel_0:\n        rax = malloc (0x80);\n        rbx = rax;\n    } while (rax == 0);\n    edx = 0;\n    *(rbx) = 0;\n    rax = rbx;\n    *((rbx + 8)) = dx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040bc30",
            "funcStartAddr": "0x40bc30",
            "funcEndAddr": "0x40bda5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40bc30 */\n#include <stdint.h>\n \nint64_t fcn_0040bc30 (int64_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r12 = *((rsi + 0x30));\n    if (r12 == 0) {\n        goto label_4;\n    }\n    r13 = rsi;\n    if (rsi <= r12) {\n        rdx = rsi + 0x38;\n        eax = 1;\n        if (r12 < rdx) {\n            goto label_2;\n        }\n    }\n    rbx = rbp + 9;\n    if (*(r12) == 0) {\n        goto label_5;\n    }\n    do {\nlabel_0:\n        eax = strcmp (rbx, r12);\n        if (eax == 0) {\n            goto label_3;\n        }\nlabel_1:\n        if (*(rbx) == 0) {\n            r14 = rbp + 9;\n            if (r14 != rbx) {\n                goto label_6;\n            }\n            if (*((rbp + 8)) == 0) {\n                goto label_7;\n            }\n        }\n        strlen (rbx);\n        rbx = rbx + rax + 1;\n    } while (*(rbx) != 0);\n    rax = *(rbp);\n    if (rax == 0) {\n        goto label_0;\n    }\n    rbx = rax + 9;\n    eax = strcmp (rbx, r12);\n    if (eax != 0) {\n        goto label_1;\n    }\n    do {\nlabel_3:\n        *((r13 + 0x30)) = rbx;\n        eax = 1;\nlabel_2:\n        return rax;\nlabel_5:\n        ebx = 0x40ce63;\n    } while (1);\nlabel_4:\n    eax = 1;\n    return rax;\nlabel_6:\n    strlen (r12);\n    r15 = rax + 1;\n    rax = rbx;\n    rax -= r14;\n    rdx = rax;\n    rdx = ~rdx;\n    if (rdx < r15) {\n        errno_location ();\n        *(rax) = 0xc;\n        eax = 0;\n        goto label_2;\nlabel_7:\n        eax = strlen (r12);\n        r15 = rax + 1;\n        eax = 0;\n    }\n    rax += r15;\n    if (rax <= 0x76) {\n        memcpy (rbx, r12, r15);\n        *((rbx + r15)) = 0;\n        goto label_3;\n    }\n    rax = fcn_0040bba0 (r12);\n    *(rbp) = rax;\n    if (rax != 0) {\n        *((rax + 8)) = 0;\n        rbx = rax + 9;\n        goto label_3;\n    }\n    eax = 0;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_0040bdb0",
            "funcStartAddr": "0x40bdb0",
            "funcEndAddr": "0x40be5f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40bdb0 */\n#include <stdint.h>\n \nuint64_t fcn_0040bdb0 (int64_t arg1) {\n    rdi = arg1;\n    r12 = rdi;\n    rax = getenv (0x40cf65);\n    if (rax == 0) {\n        goto label_1;\n    }\n    while (eax != 0) {\nlabel_0:\n        rax = fcn_0040bba0 (rbp);\n        rbx = rax;\n        if (rax != 0) {\n            al = fcn_0040bad0 (r12);\n            if (al == 0) {\n                goto label_2;\n            }\n        }\n        rax = rbx;\n        return rax;\n        ebx = 1;\n        eax = strcmp (r12 + 9, rax);\n    }\n    rax = rbx;\n    return rax;\nlabel_1:\n    ebx = 1;\n    if (*((r12 + 8)) != 0) {\n        goto label_0;\n    }\n    rax = rbx;\n    return rax;\nlabel_2:\n    rax = errno_location ();\n    r12d = *(rax);\n    if (rbx != 1) {\n        fcn_0040bb20 (rbx);\n    }\n    ebx = 0;\n    *(rbp) = r12d;\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040be80",
            "funcStartAddr": "0x40be80",
            "funcEndAddr": "0x40bf25",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40be80 */\n#include <stdint.h>\n \nuint64_t fcn_0040be80 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r12 = rsi;\n    if (rdi == 0) {\n        goto label_1;\n    }\n    rbx = rdx;\n    rax = fcn_0040bdb0 (rdi);\n    r13 = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    rsi = rbx;\n    rdi = r12;\n    rax = localtime_r ();\n    if (rax == 0) {\n        goto label_2;\n    }\n    al = fcn_0040bc30 (rbp, rbx);\n    if (al == 0) {\n        goto label_2;\n    }\n    while (al != 0) {\n        rax = rbx;\n        return rax;\nlabel_2:\n        if (r13 != 1) {\n            eax = fcn_0040bb50 (r13);\n        }\nlabel_0:\n        eax = 0;\n        return rax;\n        al = fcn_0040bb50 (r13);\n    }\n    goto label_0;\nlabel_1:\n    rdi = r12;\n    rsi = rdx;\n    return gmtime_r ();\n}\n"
        },
        {
            "funcName": "fcn_0040bf30",
            "funcStartAddr": "0x40bf30",
            "funcEndAddr": "0x40c04c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40bf30 */\n#include <stdint.h>\n \nuint64_t fcn_0040bf30 (tm * arg1, char * arg2) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_14h;\n    int64_t var_18h;\n    int64_t var_1ch;\n    int64_t var_20h;\n    int64_t var_24h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rsi;\n    if (rdi == 0) {\n        goto label_3;\n    }\n    rax = fcn_0040bdb0 (rdi);\n    r12 = rax;\n    if (rax == 0) {\n        goto label_4;\n    }\n    rax = fcn_0040cd00 (rbx);\n    *((rsp + 8)) = rax;\n    if (rax == -1) {\n        goto label_5;\n    }\nlabel_1:\n    al = fcn_0040bc30 (rbp, rbx);\n    if (al != 0) {\n        goto label_0;\n    }\n    *((rsp + 8)) = 0xffffffffffffffff;\n    do {\nlabel_0:\n        if (r12 != 1) {\n            al = fcn_0040bb50 (r12);\n            if (al == 0) {\n                goto label_4;\n            }\n        }\n        rax = *((rsp + 8));\nlabel_2:\n        return rax;\nlabel_5:\n        rsi = rsp + 0x10;\n        rdi = rsp + 8;\n        rax = localtime_r ();\n    } while (rax == 0);\n    eax = *((rbx + 0x20));\n    edx = *((rsp + 0x30));\n    sil = (eax == 0) ? 1 : 0;\n    cl = (edx == 0) ? 1 : 0;\n    if (sil == cl) {\n        goto label_6;\n    }\n    if (eax < 0) {\n        goto label_6;\n    }\n    if (edx >= 0) {\n        goto label_0;\n    }\nlabel_6:\n    eax = *((rbx + 0x10));\n    edx = *((rbx + 0x14));\n    eax ^= *((rsp + 0x20));\n    edx ^= *((rsp + 0x24));\n    eax |= edx;\n    edx = *((rbx + 0xc));\n    edx ^= *((rsp + 0x1c));\n    eax |= edx;\n    edx = *((rbx + 8));\n    edx ^= *((rsp + 0x18));\n    eax |= edx;\n    edx = *((rbx + 4));\n    edx ^= *((rsp + 0x14));\n    eax |= edx;\n    edx = *(rbx);\n    edx ^= *((rsp + 0x10));\n    eax |= edx;\n    if (eax == 0) {\n        goto label_1;\n    }\n    goto label_0;\nlabel_3:\n    fcn_0040c050 (rsi);\n    return rax;\nlabel_4:\n    rax = 0xffffffffffffffff;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_0040c050",
            "funcStartAddr": "0x40c050",
            "funcEndAddr": "0x40c066",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40c050 */\n#include <stdint.h>\n \nvoid fcn_0040c050 (int64_t arg1) {\n    rdi = arg1;\n    *((rdi + 0x20)) = 0;\n    edx = 0x614618;\n    esi = imp.gmtime_r;\n    return void (*0x40c8c0)() ();\n}\n"
        },
        {
            "funcName": "fcn_0040c070",
            "funcStartAddr": "0x40c070",
            "funcEndAddr": "0x40c0cd",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40c070 */\n#include <stdint.h>\n \nuint64_t fcn_0040c070 (int64_t arg1) {\n    rdi = arg1;\n    rax = fpending ();\n    ebx = *(rbp);\n    r12 = rax;\n    ebx &= 0x20;\n    eax = fcn_0040aa20 (rbp);\n    if (ebx != 0) {\n        goto label_1;\n    }\n    if (eax == 0) {\n        goto label_0;\n    }\n    if (r12 != 0) {\n        goto label_2;\n    }\n    rax = errno_location ();\n    al = (*(rax) != 9) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = -eax;\n    do {\nlabel_0:\n        return rax;\nlabel_1:\n        if (eax != 0) {\n            goto label_2;\n        }\n        errno_location ();\n        *(rax) = 0;\n        eax = 0xffffffff;\n    } while (1);\nlabel_2:\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040c0d0",
            "funcStartAddr": "0x40c0d0",
            "funcEndAddr": "0x40c632",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40c0d0 */\n#include <stdint.h>\n \nuint64_t fcn_0040c0d0 (void) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_60h;\n    rax = nl_langinfo (0xe);\n    r15 = imp.__libc_start_main;\n    rbx = rax;\n    eax = 0x40ce63;\n    if (rax == 0) {\n        rbx = rax;\n    }\n    if (r15 == 0) {\n        goto label_15;\n    }\nlabel_1:\n    ebp = *(r15);\n    if (bpl != 0) {\n        goto label_16;\n    }\n    goto label_17;\n    do {\nlabel_0:\n        strlen (r15);\n        rbp = r15 + rax + 1;\n        strlen (rbp);\n        r15 = rbp + rax + 1;\n        ebp = *(r15);\n        if (bpl == 0) {\n            goto label_17;\n        }\nlabel_16:\n        eax = strcmp (rbx, r15);\n        if (eax == 0) {\n            goto label_18;\n        }\n    } while (bpl != 0x2a);\n    if (*((r15 + 1)) != 0) {\n        goto label_0;\n    }\nlabel_18:\n    strlen (r15);\n    rbx = r15 + rax + 1;\nlabel_17:\n    eax = \"ASCII\";\n    if (*(rbx) == 0) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\nlabel_15:\n    rax = getenv (\"CHARSETALIASDIR\");\n    r13 = rax;\n    if (rax == 0) {\n        goto label_19;\n    }\n    if (*(rax) == 0) {\n        goto label_19;\n    }\n    rax = strlen (rax);\n    r12 = rax;\n    r14 = rax;\n    if (rax != 0) {\n        goto label_20;\n    }\nlabel_13:\n    rax = malloc (0xe);\n    if (rax != 0) {\n        goto label_21;\n    }\n    do {\n        r15d = 0x40ce63;\nlabel_2:\n        *(0x00614620) = r15;\n        goto label_1;\nlabel_19:\n        r12d = 0x65;\n        r14d = 0x64;\n        r13d = \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\";\nlabel_14:\n        rax = malloc (0x73);\n    } while (rax == 0);\n    memcpy (rbp, r13, r14);\n    *((rbp + r14)) = 0x2f;\n    do {\n        r12 += rbp;\n        rax = 0x2e74657372616863;\n        *(r12) = rax;\n        eax = 0x73;\n        *((r12 + 0xc)) = ax;\n        eax = 0;\n        *((r12 + 8)) = 0x61696c61;\n        eax = open (rbp, 0, rdx);\n        r12d = eax;\n        if (eax >= 0) {\n            goto label_22;\n        }\nlabel_6:\n        r15d = 0x40ce63;\nlabel_7:\n        free (rbp);\n        goto label_2;\nlabel_21:\n        eax = memcpy (rbp, r13, r14);\n    } while (1);\nlabel_22:\n    esi = 0x40cff8;\n    edi = eax;\n    r15d = 0;\n    rax = fdopen ();\n    *((rsp + 8)) = 0;\n    r13 = rax;\n    if (rax == 0) {\n        goto label_23;\n    }\n    rax = rbx;\n    r12 = rsp + 0x60;\n    r14 = rsp + 0x20;\n    rbx = r13;\n    r13 = rax;\n    do {\nlabel_3:\n        rax = *((rbx + 8));\n        if (rax >= *((rbx + 0x10))) {\n            goto label_24;\n        }\nlabel_4:\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        edi = *(rax);\nlabel_5:\n        eax = rdi - 9;\n    } while (eax <= 1);\n    if (edi == 0x20) {\n        goto label_3;\n    }\n    if (edi == 0x23) {\n        goto label_25;\n    }\n    eax = ungetc (rdi, rbx);\n    eax = 0;\n    rcx = r12;\n    rdx = r14;\n    eax = fscanf (rbx, \"%50s %50s\");\n    if (eax <= 1) {\n        goto label_12;\n    }\n    rcx = r14;\n    do {\n        edx = *(rcx);\n        rcx += 4;\n        eax = rdx - 0x1010101;\n        edx = ~edx;\n        eax &= edx;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    edx = eax;\n    edx >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = edx;\n    }\n    rdx = rcx + 2;\n    if ((eax & 0x8080) == 0) {\n        rcx = rdx;\n    }\n    edx = eax;\n    dl += al;\n    rdx = r12;\n    rcx -= 3;\n    rcx -= r14;\n    do {\n        esi = *(rdx);\n        rdx += 4;\n        eax = rsi - 0x1010101;\n        esi = ~esi;\n        eax &= esi;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    esi = eax;\n    *((rsp + 0x10)) = rcx;\n    esi >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = esi;\n    }\n    rsi = rdx + 2;\n    if ((eax & 0x8080) == 0) {\n        rdx = rsi;\n    }\n    esi = eax;\n    sil += al;\n    rdx -= 3;\n    rdx -= r12;\n    rax = rcx + rdx;\n    *((rsp + 0x18)) = rdx;\n    if (*((rsp + 8)) != 0) {\n        goto label_26;\n    }\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    rax = malloc (rax + 3);\n    rcx = *((rsp + 0x10));\n    rdx = *((rsp + 0x18));\nlabel_9:\n    if (rax == 0) {\n        goto label_27;\n    }\n    rdi = *((rsp + 8));\n    rsi = 0xfffffffffffffffe;\n    rsi -= rcx;\n    rcx++;\n    rdi -= rdx;\n    rsi += rdi;\n    rsi += rax;\n    if (ecx >= 8) {\n        goto label_28;\n    }\n    if ((cl & 4) != 0) {\n        goto label_29;\n    }\n    if (ecx != 0) {\n        r9d = *(r14);\n        *(rsi) = r9b;\n        if ((cl & 2) != 0) {\n            goto label_30;\n        }\n    }\nlabel_10:\n    rdx++;\n    rcx = rax + rdi - 1;\n    if (edx >= 8) {\n        goto label_31;\n    }\n    if ((dl & 4) != 0) {\n        goto label_32;\n    }\n    if (edx != 0) {\n        esi = *(r12);\n        *(rcx) = sil;\n        if ((dl & 2) != 0) {\n            goto label_33;\n        }\n    }\nlabel_11:\n    r15 = rax;\n    rax = *((rbx + 8));\n    if (rax < *((rbx + 0x10))) {\n        goto label_4;\n    }\nlabel_24:\n    rdi = rbx;\n    eax = uflow ();\n    edi = eax;\n    if (eax != 0xffffffff) {\n        goto label_5;\n    }\nlabel_12:\n    rax = r13;\n    r13 = rbx;\n    rbx = rax;\n    fcn_0040aa20 (rbx);\n    rax = *((rsp + 8));\n    if (rax == 0) {\n        goto label_6;\n    }\n    *((r15 + rax)) = 0;\n    goto label_7;\n    do {\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        eax = *(rax);\n        edx = 1;\nlabel_8:\n        if (eax == 0xa) {\n            goto label_34;\n        }\n        if (dl == 0) {\n            goto label_34;\n        }\nlabel_25:\n        rax = *((rbx + 8));\n    } while (rax < *((rbx + 0x10)));\n    rdi = rbx;\n    eax = uflow ();\n    dl = (eax != 0xffffffff) ? 1 : 0;\n    goto label_8;\nlabel_26:\n    rax += *((rsp + 8));\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    eax = realloc (r15, rax + 3);\n    rdx = *((rsp + 0x18));\n    rcx = *((rsp + 0x10));\n    goto label_9;\nlabel_28:\n    r9 = *(r14);\n    *(rsi) = r9;\n    r9d = ecx;\n    r10 = *((r14 + r9 - 8));\n    *((rsi + r9 - 8)) = r10;\n    r9 = rsi + 8;\n    r10 = r14;\n    r9 &= 0xfffffffffffffff8;\n    rsi -= r9;\n    ecx += esi;\n    r10 -= rsi;\n    ecx &= 0xfffffff8;\n    if (ecx < 8) {\n        goto label_10;\n    }\n    ecx &= 0xfffffff8;\n    esi = 0;\n    do {\n        r8d = esi;\n        esi += 8;\n        r11 = *((r10 + r8));\n        *((r9 + r8)) = r11;\n    } while (esi < ecx);\n    goto label_10;\nlabel_31:\n    rsi = *(r12);\n    r9 = r12;\n    *(rcx) = rsi;\n    esi = edx;\n    rdi = *((r12 + rsi - 8));\n    *((rcx + rsi - 8)) = rdi;\n    rdi = rcx + 8;\n    rdi &= 0xfffffffffffffff8;\n    rcx -= rdi;\n    edx += ecx;\n    r9 -= rcx;\n    edx &= 0xfffffff8;\n    if (edx < 8) {\n        goto label_11;\n    }\n    edx &= 0xfffffff8;\n    ecx = 0;\n    do {\n        esi = ecx;\n        ecx += 8;\n        r8 = *((r9 + rsi));\n        *((rdi + rsi)) = r8;\n    } while (ecx < edx);\n    goto label_11;\nlabel_34:\n    if (eax == 0xffffffff) {\n        goto label_12;\n    }\n    goto label_3;\nlabel_20:\n    if (*((r13 + rax - 1)) == 0x2f) {\n        rdi = rax + 0xe;\n        goto label_13;\nlabel_23:\n        close (r12d);\n        goto label_6;\nlabel_29:\n        r9d = *(r14);\n        *(rsi) = r9d;\n        r9d = *((r14 + rcx - 4));\n        *((rsi + rcx - 4)) = r9d;\n        goto label_10;\nlabel_32:\n        esi = *(r12);\n        *(rcx) = esi;\n        esi = *((r12 + rdx - 4));\n        *((rcx + rdx - 4)) = esi;\n        goto label_11;\nlabel_27:\n        rax = r13;\n        r13 = rbx;\n        r15d = 0x40ce63;\n        rbx = rax;\n        free (r15);\n        fcn_0040aa20 (r13);\n        goto label_7;\nlabel_30:\n        r9d = *((r14 + rcx - 2));\n        *((rsi + rcx - 2)) = r9w;\n        goto label_10;\nlabel_33:\n        esi = edx;\n        edx = *((r12 + rsi - 2));\n        *((rcx + rsi - 2)) = dx;\n        goto label_11;\n    }\n    rdi = rax + 0xf;\n    r12++;\n    goto label_14;\n}\n"
        },
        {
            "funcName": "fcn_0040c640",
            "funcStartAddr": "0x40c640",
            "funcEndAddr": "0x40c757",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40c640 */\n#include <stdint.h>\n \nuint64_t fcn_0040c640 (int64_t arg_20h, int64_t arg_28h, int64_t arg_30h, int64_t arg_38h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r10 = rdi;\n    eax = 0;\n    r11 = (int64_t) edx;\n    r10 >>= 2;\n    rcx = (int64_t) ecx;\n    r8 = (int64_t) r8d;\n    rbx = (int64_t) r9d;\n    r10d += 0x1db;\n    r12 = rbx;\n    al = ((dil & 3) == 0) ? 1 : 0;\n    r12 >>= 2;\n    r10d -= eax;\n    eax = 0;\n    r12d += 0x1db;\n    r9d &= 3;\n    r9d = 0x51eb851f;\n    al = (r9d == 0) ? 1 : 0;\n    rdi -= rbx;\n    r12d -= eax;\n    eax = r10d;\n    edx:eax = eax * r9d;\n    eax = r10d;\n    eax >>= 0x1f;\n    edx >>= 3;\n    edx = r10d;\n    r10d -= r12d;\n    ebp -= eax;\n    eax = rbp + rbp*4;\n    eax = rax * 5;\n    edx -= eax;\n    eax = edx;\n    eax >>= 0x1f;\n    ebp -= eax;\n    eax = r12d;\n    edx:eax = eax * r9d;\n    eax = r12d;\n    r9d = r12d;\n    eax >>= 0x1f;\n    edx >>= 3;\n    edx -= eax;\n    eax = rdx * 5;\n    eax = rax * 5;\n    r9d -= eax;\n    eax = r9d;\n    eax >>= 0x1f;\n    edx -= eax;\n    eax = ebp;\n    eax -= edx;\n    rdx = (int64_t) edx;\n    r10d -= eax;\n    rdx >>= 2;\n    eax = r10d;\n    r10 = (int64_t) ebp;\n    r10 >>= 2;\n    r10d -= edx;\n    rdx = *((rsp + 0x28));\n    r10d += eax;\n    rax = rdi * 9;\n    rax = rdi + rax*8;\n    r10 = (int64_t) r10d;\n    rax *= 5;\n    rsi += rax;\n    rax = *((rsp + 0x20));\n    rsi -= rax;\n    rsi += r10;\n    rax = rsi * 3;\n    rax = r11 + rax*8;\n    rax -= rdx;\n    rdx = rax;\n    rdx <<= 4;\n    rdx -= rax;\n    rax = rcx + rdx*4;\n    rdx = *((rsp + 0x30));\n    rax -= rdx;\n    rdx = rax;\n    rdx <<= 4;\n    rdx -= rax;\n    rax = r8 + rdx*4;\n    rdx = *((rsp + 0x38));\n    r12 = rbx;\n    rax -= rdx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040c760",
            "funcStartAddr": "0x40c760",
            "funcEndAddr": "0x40c7f1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40c760 */\n#include <stdint.h>\n \nint64_t fcn_0040c760 (int64_t arg_10h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rax = *((rsp + 0x10));\n    rbx = r9;\n    if (rax != 0) {\n        r9d = *(rax);\n        r9d = *((rax + 4));\n        r9d = *((rax + 8));\n        r9d = *((rax + 0x1c));\n        rax = fcn_0040c640 (rdi, rsi, rdx, rcx, r8, *((rax + 0x14)));\n        rax += rbx;\n        if (rax overflow 0) {\n            goto label_0;\n        }\n        return rax;\n    }\nlabel_0:\n    if (rbx >= 0) {\n        rcx = 0x7ffffffffffffffd;\n        rdx = rbx - 1;\n        rax = 0x7fffffffffffffff;\n        if (rbx > rcx) {\n            rax = rdx;\n        }\n        return rax;\n    }\n    rax = 0x8000000000000002;\n    if (rbx < rax) {\n        rax = rbx + 1;\n        return rax;\n    }\n    rax = 0x8000000000000000;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040c800",
            "funcStartAddr": "0x40c800",
            "funcEndAddr": "0x40c8bf",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40c800 */\n#include <stdint.h>\n \nint64_t fcn_0040c800 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13 = rdx;\n    r12 = rdi;\n    rbx = rsi;\n    rax = *(rsi);\n    rsi = rdx;\n    rdi = rsp + 8;\n    rax = void (*r12)(uint64_t, uint64_t, uint64_t, uint64_t) (rbx, rbp, r12, r13);\n    while (1) {\nlabel_1:\n        return rax;\n        r14 = *(rbx);\n        ebp = 0;\n        if (r14 != 0) {\n            goto label_2;\n        }\n    }\n    do {\nlabel_0:\nlabel_2:\n        rdx = r14;\n        rbx >>= 1;\n        rdx >>= 1;\n        rdx += rbx;\n        rbx = rbp;\n        rbx |= r14;\n        ebx &= 1;\n        rbx += rdx;\n        if (rbp != rbx) {\n            if (r14 != rbx) {\n                goto label_3;\n            }\n        }\n        rsi = r13;\n        rdi = rsp + 8;\n        rax = void (*r12)(uint64_t) (rbx);\n    } while (rax != 0);\n    r14 = rbx;\n    rbx = rbp;\n    goto label_0;\nlabel_3:\n    if (rax != 0) {\n        goto label_1;\n    }\n    if (rbp == 0) {\n        goto label_1;\n    }\n    rsi = r13;\n    rdi = rsp + 8;\n    void (*r12)(uint64_t) (rbp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040cd00",
            "funcStartAddr": "0x40cd00",
            "funcEndAddr": "0x40d15c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40cd00 */\n#include <stdint.h>\n \nint64_t fcn_0040cd00 (int64_t arg1) {\n    int64_t var_ch;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_1ch;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_44h;\n    int64_t var_48h;\n    int64_t var_50h;\n    int64_t var_58h;\n    int64_t var_60h;\n    int64_t var_70h;\n    int64_t var_80h;\n    int64_t var_90h;\n    int64_t var_a0h;\n    int64_t var_c0h;\n    rdi = arg1;\nlabel_6:\n    r14 = rdi;\n    eax = *(rdi);\n    *((rsp + 0x10)) = rsi;\n    rsi = *((rdi + 0xc));\n    *((rsp + 0x40)) = eax;\n    eax = *((rdi + 4));\n    *((rsp + 0x30)) = rdx;\n    edx = 0x2aaaaaab;\n    *((rsp + 0xc)) = eax;\n    eax = *((rdi + 8));\n    edi = *((rdi + 0x10));\n    *((rsp + 0x18)) = eax;\n    eax = *((r14 + 0x20));\n    *((rsp + 0x28)) = eax;\n    eax = edi;\n    edx:eax = eax * edx;\n    eax = edi;\n    eax >>= 0x1f;\n    edx >>= 1;\n    ecx = edx;\n    edx = 0;\n    ecx -= eax;\n    eax = rcx * 3;\n    ebx = ecx;\n    eax <<= 2;\n    edi -= eax;\n    eax = edi;\n    ecx = edi;\n    eax >>= 0x1f;\n    ebx -= eax;\n    rax = *((r14 + 0x14));\n    rbx = (int64_t) ebx;\n    rbx += rax;\n    if ((bl & 3) == 0) {\n        rdx = 0xa3d70a3d70a3d70b;\n        rax = rbx;\n        rdx:rax = rax * rdx;\n        rax = rdx + rbx;\n        rdx = rbx;\n        rdx >>= 0x3f;\n        rax >>= 6;\n        rax -= rdx;\n        rdx = rax * 5;\n        rdi = rdx * 5;\n        edx = 1;\n        rdi <<= 2;\n        if (rbx == rdi) {\n            goto label_7;\n        }\n    }\nlabel_1:\n    eax = ecx;\n    r12d = 0x3b;\n    rdi = rbx;\n    eax >>= 0x1f;\n    r9d = 0x46;\n    eax &= 0xc;\n    ecx += eax;\n    rax = (int64_t) edx;\n    rdx = rax + rax;\n    rcx = (int64_t) ecx;\n    rdx += rax;\n    rax = rax + rdx*4;\n    rcx += rax;\n    eax = *((rcx + rcx + 0x411100));\n    eax--;\n    rax = (int64_t) eax;\n    rsi += rax;\n    eax = *((rsp + 0x40));\n    *((rsp + 0x20)) = rsi;\n    if (eax <= 0x3b) {\n        r12d = eax;\n    }\n    eax = 0;\n    __asm (\"cmovns eax, r12d\");\n    *((rsp + 0x1c)) = eax;\n    r8d = eax;\n    rax = *((rsp + 0x30));\n    rax = *(rax);\n    *((rsp + 0x38)) = rax;\n    eax = *((rsp + 0x38));\n    eax = -eax;\n    *((rsp + 0x44)) = eax;\n    rax = fcn_0040c640 (rdi, rsi, *((rsp + 0x38)), *((rsp + 0x2c)), r8d, r9);\n    r13 = rax;\n    *((rsp + 0x38)) = rax;\n    *((rsp + 0x50)) = rax;\n    eax = 0;\n    *((rsp + 0x48)) = r14;\n    r12d = eax;\n    r14 = r13;\n    while (r15 != r13) {\nlabel_0:\n        ebp--;\n        if (ebp == 0) {\n            goto label_8;\n        }\n        r8d = *((rsp + 0x80));\n        *((rsp + 0x50)) = rax;\n        r12d = 0;\n        r13 = r14;\n        r14 = r15;\n        r12b = (r8d != 0) ? 1 : 0;\n        rax = fcn_0040c800 (*((rsp + 0x10)), rsp + 0x50, rsp + 0x60);\n        r15 = *((rsp + 0x50));\n        rax = fcn_0040c760 (rbx, *((rsp + 0x30)), *((rsp + 0x28)), *((rsp + 0x1c)), *((rsp + 0x2c)), r15);\n        if (r15 == rax) {\n            goto label_9;\n        }\n    }\n    if (r15 == r14) {\n        goto label_0;\n    }\n    r10d = *((rsp + 0x80));\n    if (r10d < 0) {\n        goto label_2;\n    }\n    r9d = *((rsp + 0x28));\n    dl = (r10d != 0) ? 1 : 0;\n    if (r9d < 0) {\n        goto label_10;\n    }\n    cl = (r9d != 0) ? 1 : 0;\n    if (cl == dl) {\n        goto label_0;\n    }\nlabel_2:\n    r14 = *((rsp + 0x48));\n    rax = r15;\nlabel_3:\n    rdx = *((rsp + 0x44));\n    rcx = rax;\n    rdx += *((rsp + 0x38));\n    rcx -= rdx;\n    esi = *((rsp + 0x60));\n    edi = *((rsp + 0x40));\n    rdx = rcx;\n    rcx = *((rsp + 0x30));\n    *(rcx) = rdx;\n    if (esi != edi) {\n        r12 = *((rsp + 0x1c));\n        cl = (edi <= 0) ? 1 : 0;\n        edx = 0;\n        dl = (esi == 0x3c) ? 1 : 0;\n        rdx &= rcx;\n        rcx = rdx;\n        rdx = (int64_t) edi;\n        rcx -= r12;\n        rdx += rcx;\n        rax += rdx;\n        *((rsp + 0x50)) = rax;\n        if (rax overflow 0) {\n            goto label_8;\n        }\n        rsi = rsp + 0x60;\n        rdi = rsp + 0xa0;\n        rax = *((rsp + 0x10));\n        rax = void (*rax)(uint64_t) (rax);\n        if (rax == 0) {\n            goto label_8;\n        }\n        rax = *((rsp + 0x50));\n    }\n    __asm (\"movdqa xmm0, xmmword [rsp + 0x60]\");\n    __asm (\"movdqa xmm1, xmmword [rsp + 0x70]\");\n    __asm (\"movdqa xmm2, xmmword [rsp + 0x80]\");\n    rdx = *((rsp + 0x90));\n    __asm (\"movups xmmword [r14], xmm0\");\n    __asm (\"movups xmmword [r14 + 0x10], xmm1\");\n    __asm (\"movups xmmword [r14 + 0x20], xmm2\");\n    *((r14 + 0x30)) = rdx;\n    goto label_11;\nlabel_8:\n    rax = 0xffffffffffffffff;\nlabel_11:\n    return rax;\nlabel_7:\n    eax &= 3;\n    edx = 0;\n    dl = (rax == 1) ? 1 : 0;\n    goto label_1;\nlabel_10:\n    edx = (int32_t) dl;\n    if (edx < r12d) {\n        goto label_0;\n    }\n    goto label_2;\nlabel_9:\n    esi = *((rsp + 0x28));\n    edx = *((rsp + 0x80));\n    r14 = *((rsp + 0x48));\n    rsp + 0x28 = (esi == 0) ? 1 : 0;\n    ebp = *((rsp + 0x28));\n    cl = (edx == 0) ? 1 : 0;\n    if (bpl == cl) {\n        goto label_3;\n    }\n    if (esi < 0) {\n        goto label_3;\n    }\n    if (edx < 0) {\n        goto label_3;\n    }\n    r13d = 0x92c70;\n    *((rsp + 0x28)) = rbx;\n    goto label_12;\nlabel_4:\n    r13d += 0x92c70;\n    if (r13d == 0x100dc400) {\n        goto label_3;\n    }\nlabel_12:\n    r15d = r13d;\n    ebx = r13 + r13;\n    r12d = 2;\n    r15d = -r15d;\n    rdx = (int64_t) r15d;\n    rdx += rax;\n    *((rsp + 0x58)) = rdx;\n    if (rdx !overflow 0) {\n        goto label_13;\n    }\nlabel_5:\n    r15d += ebx;\n    if (r12d == 1) {\n        goto label_4;\n    }\n    rdx = (int64_t) r15d;\n    r12d = 1;\n    rdx += rax;\n    *((rsp + 0x58)) = rdx;\n    if (rdx overflow 0) {\n        goto label_5;\n    }\nlabel_13:\n    fcn_0040c800 (*((rsp + 0x10)), rsp + 0x58, rsp + 0xa0);\n    eax = *((rsp + 0xc0));\n    dl = (eax == 0) ? 1 : 0;\n    if (bpl != dl) {\n        if (eax >= 0) {\n            goto label_14;\n        }\n    }\n    rbx = *((rsp + 0x28));\n    rax = rsp + 0xa8;\n    rax = fcn_0040c760 (rbx, *((rsp + 0x30)), *((rsp + 0x28)), *((rsp + 0x1c)), *((rsp + 0x2c)), *((rsp + 0x68)));\n    *((rsp + 0x50)) = rax;\n    fcn_0040c800 (*((rsp + 0x10)), rsp + 0x50, rsp + 0x60);\n    rax = *((rsp + 0x50));\n    goto label_3;\nlabel_14:\n    rax = *((rsp + 0x50));\n    goto label_5;\n    rbx = rdi;\n    tzset ();\n    rdi = rbx;\n    edx = 0x614628;\n    esi = imp.localtime_r;\n    goto label_6;\n}\n"
        },
        {
            "funcName": "fcn_0040cd90",
            "funcStartAddr": "0x40cd90",
            "funcEndAddr": "0x40cda8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40cd90 */\n#include <stdint.h>\n \nint64_t fcn_0040cd90 (void) {\n    rax = 0x614268;\n    edx = 0;\n    if (rax != 0) {\n        rdx = *(rax);\n    }\n    esi = 0;\n    return cxa_atexit ();\n}\n"
        },
        {
            "funcName": "fcn_0040cda8",
            "funcStartAddr": "0x40cda8",
            "funcEndAddr": "0x40cdc8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf @ 0x40cda8 */\n#include <stdint.h>\n \nvoid fcn_0040cda8 (int64_t arg3) {\n    rdx = arg3;\n    ebx = segment.GNU_RELRO;\n    do {\n        rax = *(rbx);\n        if (rax == -1) {\n            goto label_0;\n        }\n        void (*rax)() ();\n        rbx -= 8;\n    } while (1);\nlabel_0:\n}\n"
        }
    ],
    "funcCount": 85
}