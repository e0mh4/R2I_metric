{
    "binaryInfo": {
        "isStripped": true,
        "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf"
    },
    "buildInfo": {
        "decompilerName": "radare2",
        "compilerName": "gcc",
        "compilerVersion": "9.4.0",
        "optLevel": "O"
    },
    "funcInfo": [
        {
            "funcName": "main",
            "funcStartAddr": "0x402f50",
            "funcEndAddr": "0x405830",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x402f50 */\n#include <stdint.h>\n \nint32_t main (int32_t argc, char ** argv) {\n    int64_t var_8h_2;\n    int64_t var_10h_2;\n    char * var_8h;\n    uint32_t var_10h;\n    uint32_t var_18h;\n    uint32_t var_20h;\n    char * var_28h;\n    uint32_t var_30h;\n    char * var_38h;\n    char * var_40h;\n    char * var_48h;\n    char * var_50h;\n    int64_t var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    int64_t var_70h;\n    int64_t var_90h_2;\n    int64_t var_90h;\n    int64_t var_91h;\n    int64_t var_c0h_2;\n    void * ptr;\n    int64_t var_c8h;\n    uint32_t var_d0h;\n    int64_t var_d8h;\n    int64_t var_f0h;\n    int64_t var_108h;\n    int64_t var_110h_2;\n    uint32_t var_118h;\n    int64_t var_110h;\n    int64_t var_139h;\n    int64_t var_150h_2;\n    int64_t var_150h;\n    int64_t var_158h;\n    int64_t var_160h;\n    int64_t var_168h;\n    int64_t var_170h;\n    int64_t var_178h;\n    int64_t var_180h;\n    int64_t var_181h;\n    int64_t var_182h;\n    int64_t var_183h;\n    int64_t var_184h;\n    int64_t var_185h;\n    int64_t var_186h;\n    int64_t var_187h;\n    int64_t var_188h;\n    int64_t var_1a0h_2;\n    void * var_1a0h;\n    int64_t var_1a8h;\n    int64_t var_1b0h;\n    int64_t var_1b8h;\n    int64_t var_1c0h;\n    int64_t var_1c8h;\n    int64_t var_1d0h;\n    int64_t var_1d1h;\n    int64_t var_1d2h;\n    int64_t var_1d3h;\n    int64_t var_1d4h;\n    int64_t var_1d5h;\n    int64_t var_1d6h;\n    int64_t var_1d7h;\n    int64_t var_1d8h;\n    int64_t var_230h_2;\n    int64_t var_231h;\n    struct sigaction * oldact;\n    int64_t var_238h;\n    int64_t var_248h;\n    int64_t var_258h;\n    int64_t var_268h;\n    int64_t var_278h;\n    int64_t var_288h;\n    int64_t var_298h;\n    int64_t var_2a8h;\n    int64_t var_2b8h;\n    rdi = argc;\n    rsi = argv;\n    ebx = edi;\n    rax = getenv (\"POSIXLY_CORRECT\");\n    *((rsp + 0x38)) = rax;\n    r12b = (rax != 0) ? 1 : 0;\n    eax = fcn_0040dbe0 ();\n    eax -= 0x30db0;\n    rsp + 8 = (eax > 0x2b8) ? 1 : 0;\n    fcn_0040dc60 (*(rbp));\n    rax = setlocale (6, 0x416571);\n    *((rsp + 0x28)) = rax;\n    bindtextdomain (0x416602, \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\");\n    textdomain (0x416602, rsi);\n    *(0x0061c518) = 2;\n    al = fcn_0040bd10 (3);\n    *(0x0061cba1) = al;\n    eax = fcn_0040bd10 (2);\n    r14d = eax;\n    *(0x0061cba0) = al;\n    rax = localeconv ();\n    rcx = *(rax);\n    esi = *(rcx);\n    *(0x0061cba8) = esi;\n    if (sil == 0) {\n        goto label_61;\n    }\n    if (*((rcx + 1)) != 0) {\n        goto label_61;\n    }\nlabel_3:\n    rdx = *((rax + 8));\n    ecx = *(rdx);\n    *(0x0061cba4) = ecx;\n    if (cl == 0) {\n        goto label_62;\n    }\n    if (*((rdx + 1)) != 0) {\n        goto label_62;\n    }\nlabel_2:\n    *(0x0061c758) = 0;\n    rax = ctype_b_loc ();\n    r13 = rax;\n    rax = ctype_toupper_loc ();\n    edx = 0;\n    r9d = 1;\n    r8d = 0;\n    goto label_1;\nlabel_0:\n    esi = 0;\n    do {\n        *((rdx + 0x61ca80)) = sil;\n        esi = ecx;\n        rdi = rdx*4;\n        si >>= 0xe;\n        esi ^= 1;\n        esi &= 1;\n        *((rdx + 0x61c980)) = sil;\n        esi = 0;\n        if ((cl & 8) == 0) {\n            sil = (rdx == 0xa) ? 1 : 0;\n            ecx &= 1;\n            ecx |= esi;\n            ecx ^= 1;\n            esi = ecx;\n        }\n        rcx = *(rax);\n        *((rdx + 0x61c880)) = sil;\n        rdx++;\n        ecx = *((rcx + rdi));\n        *((rdx + 0x61c77f)) = cl;\n        if (rdx == 0x100) {\n            goto label_63;\n        }\nlabel_1:\n        rdi = *(r13);\n        esi = 1;\n        ecx = *((rdi + rdx*2));\n    } while ((cl & 1) != 0);\n    if (rdx != 0xa) {\n        goto label_0;\n    }\n    edx = *((rdi + 0x14));\n    *(0x0061ca8a) = r9b;\n    *(0x0061c88a) = r8b;\n    dx >>= 0xe;\n    edx ^= 1;\n    edx &= 1;\n    *(0x0061c98a) = dl;\n    rdx = *(rax);\n    edx = *((rdx + 0x28));\n    *(0x0061c78a) = dl;\n    edx = 0xb;\n    goto label_1;\nlabel_62:\n    *(0x0061cba4) = 0xffffffff;\n    goto label_2;\nlabel_61:\n    *(0x0061cba8) = 0x2e;\n    goto label_3;\nlabel_63:\n    if (r14b == 0) {\n        goto label_64;\n    }\n    *(rsp) = ebx;\n    r14d = 1;\nlabel_4:\n    rax = nl_langinfo (r14 + 0x2000d);\n    rdi = rax;\n    rbx = rax;\n    rax = strlen (rdi);\n    r15 = rax;\n    rax = fcn_00411210 (rax + 1);\n    rdx = r14;\n    rdx <<= 4;\n    *((rdx + 0x61c430)) = rax;\n    *((rdx + 0x61c438)) = r14d;\n    if (r15 == 0) {\n        goto label_65;\n    }\n    r11 = *(r13);\n    rdi = rbx;\n    r10 = rbx + r15;\n    r8d = 0;\n    rcx = rax;\n    do {\n        esi = *(rdi);\n        r9 = rcx;\n        if ((*((r11 + rsi*2)) & 1) == 0) {\n            edx = *((rsi + 0x61c780));\n            r8++;\n            *(rcx) = dl;\n            rcx = rax + r8;\n            r9 = rcx;\n        }\n        rdi++;\n    } while (r10 != rdi);\nlabel_11:\n    r14++;\n    *(r9) = 0;\n    if (r14 != 0xd) {\n        goto label_4;\n    }\n    ecx = 0x405cf0;\n    edx = 0x10;\n    esi = 0xc;\n    ebx = *(rsp);\n    edi = 0x61c440;\n    qsort ();\nlabel_64:\n    edi = 0x61c6c0;\n    r14d = 0xe;\n    r13d = 0;\n    sigemptyset ();\n    while (r13 != 0xb) {\n        r14d = *((r13*4 + 0x414980));\n        sigaction (r14d, 0, rsp + 0x230);\n        if (*((rsp + 0x230)) != 1) {\n            esi = r14d;\n            edi = 0x61c6c0;\n            sigaddset ();\n        }\n        r13++;\n    }\n    __asm (\"movdqa xmm3, xmmword [0x0061c6c0]\");\n    __asm (\"movdqa xmm4, xmmword [0x0061c6d0]\");\n    *((rsp + 0x230)) = 0x405d80;\n    r14d = 0xe;\n    __asm (\"movdqa xmm5, xmmword [0x0061c6e0]\");\n    __asm (\"movdqa xmm6, xmmword [0x0061c6f0]\");\n    *((rsp + 0x2b8)) = 0;\n    r13d = 0;\n    __asm (\"movups xmmword [rsp + 0x238], xmm3\");\n    __asm (\"movdqa xmm7, xmmword [0x0061c700]\");\n    __asm (\"movdqa xmm2, xmmword [0x0061c710]\");\n    __asm (\"movdqa xmm1, xmmword [0x0061c720]\");\n    __asm (\"movdqa xmm3, xmmword [0x0061c730]\");\n    __asm (\"movups xmmword [rsp + 0x248], xmm4\");\n    __asm (\"movups xmmword [rsp + 0x258], xmm5\");\n    __asm (\"movups xmmword [rsp + 0x268], xmm6\");\n    __asm (\"movups xmmword [rsp + 0x278], xmm7\");\n    __asm (\"movups xmmword [rsp + 0x288], xmm2\");\n    __asm (\"movups xmmword [rsp + 0x298], xmm1\");\n    __asm (\"movups xmmword [rsp + 0x2a8], xmm3\");\n    while (eax == 0) {\n        r13++;\n        if (r13 == 0xb) {\n            goto label_66;\n        }\nlabel_5:\n        r14d = *((r13*4 + 0x414980));\n        esi = *((r13*4 + 0x414980));\n        edi = 0x61c6c0;\n        eax = sigismember ();\n    }\n    r13++;\n    sigaction (r14d, rsp + 0x230, 0);\n    if (r13 != 0xb) {\n        goto label_5;\n    }\nlabel_66:\n    esi = 0;\n    signal (0x11);\n    edi = 0x407890;\n    fcn_00413f20 ();\n    xmm0 = 0;\n    rax = 0xffffffffffffffff;\n    rdi = (int64_t) ebx;\n    __asm (\"movups xmmword [rsp + 0x158], xmm0\");\n    *((rsp + 0x150)) = rax;\n    *((rsp + 0x160)) = rax;\n    rax = rdi;\n    rax >>= 0x3d;\n    __asm (\"movups xmmword [rsp + 0x168], xmm0\");\n    al = (rax != 0) ? 1 : 0;\n    rdi <<= 3;\n    __asm (\"movups xmmword [rsp + 0x178], xmm0\");\n    __asm (\"movups xmmword [rsp + 0x188], xmm0\");\n    eax = (int32_t) al;\n    if (rdi < 0) {\n        goto label_67;\n    }\n    if (rax != 0) {\n        goto label_67;\n    }\n    rax = fcn_00411210 (rdi);\n    r15d = 0;\n    *((rsp + 0x30)) = 0;\n    r14d = 0;\n    r13 = rax;\n    *(rsp) = 0;\n    rax = rsp + 0x110;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x50)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x40)) = rax;\n    while (r14d != 0xffffffff) {\n        if (r15 == 0) {\n            goto label_68;\n        }\n        if (r12b == 0) {\n            goto label_68;\n        }\n        rax = *(0x0061c57c);\n        if (*((rsp + 8)) == 1) {\n            if (*(rsp) != 0) {\n                goto label_6;\n            }\n            if (eax == ebx) {\n                goto label_69;\n            }\n            rdx = (int64_t) eax;\n            rdx = *((rbp + rdx*8));\n            if (*(rdx) == 0x2d) {\n                goto label_70;\n            }\n        }\nlabel_6:\n        if (ebx <= eax) {\n            goto label_71;\n        }\n        edx = rax + 1;\n        rax = *((rbp + rax*8));\n        *(0x0061c57c) = edx;\n        *((r13 + r15*8)) = rax;\n        r15++;\nlabel_8:\n        *((rsp + 0x90)) = 0xffffffff;\n    }\nlabel_7:\n    rax = *(0x0061c57c);\n    goto label_6;\nlabel_70:\n    if (*((rdx + 1)) != 0x6f) {\n        goto label_6;\n    }\n    if (*((rdx + 2)) != 0) {\n        goto label_68;\n    }\n    edx = rax + 1;\n    if (edx == ebx) {\n        goto label_6;\n    }\nlabel_68:\n    ecx = 0x414b40;\n    edx = \"-bcCdfghik:mMno:rRsS:t:T:uVy:z\";\n    rsi = rbp;\n    edi = ebx;\n    r8 = rsp + 0x90;\n    eax = fcn_00412f30 ();\n    r14d = eax;\n    if (eax == 0xffffffff) {\n        goto label_7;\n    }\n    eax = rax + 0x83;\n    if (eax > 0x10a) {\n        goto label_72;\n    }\n    /* switch table (267 cases) at 0x4140f8 */\n    fcn_0040a910 (\"--sort\", *(0x0061cd60), 0x414ae0, \"ghMnRV\", 1, *(0x0061c510));\n    r14d = *((rax + str.ghMnRV));\n    *((rsp + 0x230)) = r14b;\n    *((rsp + 0x231)) = 0;\n    fcn_00405c00 (rsp + 0x230, rsp + 0x150, 2);\n    goto label_8;\n    rsi = imp.__libc_start_main;\n    r14d = 0x63;\n    if (rsi != 0) {\n        fcn_0040a910 (\"--check\", rsi, 0x414b20, 0x414b18, 1, *(0x0061c510));\n        r14d = *((rax + 0x414b18));\n    }\n    eax = *(rsp);\n    if (al != 0) {\n        if (eax != r14d) {\n            goto label_73;\n        }\n    }\n    *(rsp) = r14b;\n    goto label_8;\nlabel_69:\n    if (*((rsp + 0x10)) != 0) {\n        goto label_59;\n    }\n    *(rsp) = 0;\nlabel_58:\n    rcx = imp.__libc_start_main;\n    if (rcx == 0) {\n        goto label_74;\n    }\n    rsi = rcx;\n    ebx = 0;\n    while (al != 0) {\n        if (*((rsi + 0x37)) != 0) {\n            goto label_75;\n        }\n        rax = *((rsp + 0x170));\n        edx = *((rsp + 0x187));\n        *((rsi + 0x20)) = rax;\n        rax = *((rsp + 0x178));\n        *((rsi + 0x28)) = rax;\n        eax = *((rsp + 0x180));\n        *((rsi + 0x30)) = al;\n        eax = *((rsp + 0x181));\n        *((rsi + 0x31)) = al;\n        eax = *((rsp + 0x186));\n        *((rsi + 0x36)) = al;\n        eax = *((rsp + 0x182));\n        *((rsi + 0x32)) = al;\n        eax = *((rsp + 0x184));\n        *((rsi + 0x34)) = al;\n        eax = *((rsp + 0x185));\n        *((rsi + 0x35)) = al;\n        eax = *((rsp + 0x188));\n        *((rsi + 0x37)) = dl;\n        *((rsi + 0x38)) = al;\n        eax = *((rsp + 0x183));\n        *((rsi + 0x33)) = al;\n        rsi = *((rsi + 0x40));\n        ebx |= eax;\n        if (rsi == 0) {\n            goto label_76;\n        }\nlabel_9:\n        al = fcn_00405af0 (rsi);\n    }\nlabel_75:\n    eax = *((rsi + 0x33));\n    rsi = *((rsi + 0x40));\n    ebx |= eax;\n    if (rsi != 0) {\n        goto label_9;\n    }\nlabel_76:\n    r12d = 0;\nlabel_40:\n    edx = *((rcx + 0x34));\n    eax = *((rcx + 0x32));\n    eax += edx;\n    edx = *((rcx + 0x35));\n    eax += edx;\n    edx = *((rcx + 0x36));\n    eax += edx;\n    edx = *((rcx + 0x33));\n    edx |= *((rcx + 0x38));\n    sil = (*((rcx + 0x20)) != 0) ? 1 : 0;\n    edx |= esi;\n    edx = (int32_t) dl;\n    eax += edx;\n    eax--;\n    if (eax <= 0) {\n        goto label_77;\n    }\n    goto label_78;\n    do {\n        edx = *((rcx + 0x34));\n        eax = *((rcx + 0x32));\n        eax += edx;\n        edx = *((rcx + 0x35));\n        eax += edx;\n        edx = *((rcx + 0x36));\n        edx += eax;\n        eax = *((rcx + 0x38));\n        al |= *((rcx + 0x33));\n        sil = (*((rcx + 0x20)) != 0) ? 1 : 0;\n        eax |= esi;\n        eax = (int32_t) al;\n        eax += edx;\n        if (eax > 1) {\n            goto label_78;\n        }\nlabel_77:\n        rcx = *((rcx + 0x40));\n    } while (rcx != 0);\nlabel_41:\n    if (*(0x0061c740) == 0) {\n        goto label_29;\n    }\nlabel_28:\n    if (*(rsp) != 0) {\n        goto label_79;\n    }\n    if (*((rsp + 0x20)) != 0) {\n        goto label_79;\n    }\n    if (*((rsp + 0x28)) == 0) {\n        goto label_80;\n    }\n    rax = setlocale (3, 0x416571);\n    if (rax == 0) {\n        goto label_80;\n    }\nlabel_16:\n    if (*(0x0061cba1) != 0) {\n        goto label_81;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"using simple byte comparison\");\n    rcx = rax;\n    eax = 0;\n    error (0, 0, 0x416abc);\nlabel_15:\n    r14 = imp.__libc_start_main;\n    rdi = rsp + 0x1a0;\n    ecx = 0x12;\n    rsi = rsp + 0x150;\n    *((rsp + 8)) = rdi;\n    *(rdi) = *(rsi);\n    rcx--;\n    rsi += 4;\n    rdi += 4;\n    if (r14 == 0) {\n        goto label_82;\n    }\n    rax = rsp + 0x91;\n    *((rsp + 0x48)) = bl;\n    rbx = r14;\n    *((rsp + 0x28)) = rax;\n    *((rsp + 0x38)) = r15;\n    *((rsp + 0x40)) = r13;\n    while (r13 == 0) {\n        if (*((rbx + 0x18)) == 0) {\n            goto label_83;\n        }\n        if (al != 0) {\n            goto label_84;\n        }\nlabel_10:\n        if (rdx != 0) {\n            rax = *((rbx + 0x10));\n            rdx = rax + 1;\n            rax = *(rbx);\n            rax++;\n            if (rax == 0) {\n                eax = 1;\n            }\n            if (rdx == 0) {\n                goto label_85;\n            }\n            if (rdx > rax) {\n                goto label_85;\n            }\n        }\nlabel_22:\n        rax = *((rsp + 0x1c0));\n        if (rax != 0) {\n            if (rax == *((rbx + 0x20))) {\n                goto label_86;\n            }\n        }\nlabel_23:\n        rax = *((rsp + 0x1c8));\n        if (rax != 0) {\n            if (rax == *((rbx + 0x28))) {\n                goto label_87;\n            }\n        }\nlabel_24:\n        eax = *((rbx + 0x30));\n        rbp++;\n        eax ^= 1;\n        eax = *((rbx + 0x31));\n        eax ^= 1;\n        eax = *((rbx + 0x36));\n        eax ^= 1;\n        eax = *((rbx + 0x32));\n        eax ^= 1;\n        eax = *((rbx + 0x34));\n        eax ^= 1;\n        eax = *((rbx + 0x35));\n        eax ^= 1;\n        eax = *((rbx + 0x33));\n        eax ^= 1;\n        eax = *((rbx + 0x38));\n        eax ^= 1;\n        eax = *((rbx + 0x37));\n        rbx = *((rbx + 0x40));\n        eax ^= 1;\n        if (rbx == 0) {\n            goto label_88;\n        }\n        r15 = *(rbx);\n        r13 = *((rbx + 0x10));\n        if (*((rbx + 0x39)) != 0) {\n            eax = 0;\n            rsi = rsp + 0x70;\n            if (r15 == -1) {\n                r15 = rax;\n            }\n            rax = fcn_0040d370 (r15, rsi, rdx);\n            rdi = *((rsp + 0x28));\n            edx = 0x2d;\n            *((rsp + 0x90)) = 0x2b;\n            rsi = rax;\n            rax = stpcpy_chk ();\n            r14 = rax;\n            r15 = rsp + 0xc0;\n            rax = fcn_0040d370 (r15 + 1, rsp + 0x70, rdx);\n            rdi = r15 + 3;\n            edx = 0x2c;\n            *((rsp + 0xc0)) = 0x206b2d;\n            rsi = rax;\n            rax = stpcpy_chk ();\n            *((rsp + 0x10)) = rax;\n            if (*((rbx + 0x10)) != -1) {\n                r13++;\n                rax = fcn_0040d370 (r13, rsp + 0x70, rdx);\n                *(r14) = 0x2d20;\n                strcpy (r14 + 2, rax);\n                dil = (*((rbx + 0x18)) == -1) ? 1 : 0;\n                rdi += r13;\n                rax = fcn_0040d370 (0, rsp + 0x70, rdx);\n                rdx = *((rsp + 0x10));\n                *(rdx) = 0x2c;\n                strcpy (rdx + 1, rax);\n            }\n            rax = fcn_0040f860 (1, r15);\n            r14 = rax;\n            rax = fcn_0040f860 (0, rsp + 0x90);\n            edx = 5;\n            r15 = rax;\n            rax = dcgettext (0, \"obsolescent key %s used; consider %s instead\");\n            rcx = r15;\n            r8 = r14;\n            eax = 0;\n            error (0, 0, rax);\n            r15 = *(rbx);\n            r13 = *((rbx + 0x10));\n        }\n        eax = r12d;\n        if (r15 != -1) {\n            if (r13 >= r15) {\n                goto label_89;\n            }\n            edx = 5;\n            rax = dcgettext (0, \"key %lu has zero width and will be ignored\");\n            rcx = rbp;\n            eax = 0;\n            error (0, 0, rax);\n            r13 = *((rbx + 0x10));\n            eax = 1;\n        }\nlabel_89:\n        rdx = 0xffff00ff0000;\n        esi = 1;\n        rdx &= *((rbx + 0x30));\n        if (rdx == 0) {\n            esi = *((rbx + 0x36));\n        }\n    }\nlabel_83:\n    if (al != 0) {\n        goto label_84;\n    }\n    if (*(0x0061c424) != 0x80) {\n        goto label_10;\n    }\n    if (*((rbx + 0x30)) == 0) {\n        if (esi == 0) {\n            goto label_90;\n        }\n        if (*((rbx + 8)) != 0) {\n            goto label_90;\n        }\n    }\n    if (*((rbx + 0x31)) != 0) {\n        goto label_10;\n    }\n    if (*((rbx + 0x18)) == 0) {\n        goto label_10;\n    }\nlabel_90:\n    edx = 5;\n    rax = dcgettext (0, \"leading blanks are significant in key %lu; consider also specifying 'b');\n    rcx = rbp;\n    eax = 0;\n    rax = error (0, 0, rax);\n    edx = 0xffff00ff;\n    rdx <<= 0x10;\n    rdx &= *((rbx + 0x30));\n    goto label_10;\nlabel_65:\n    r9 = rax;\n    goto label_11;\n    eax = *((rsp + 0x90));\n    *((rsp + 0x48)) = rdi;\n    *((rsp + 0x50)) = eax;\n    eax = fcn_00411680 (*(0x0061cd60), 0, 0xa, rsp + 0x230, 0x416571);\n    if (eax == 1) {\n        goto label_91;\n    }\n    if (eax != 0) {\n        goto label_92;\n    }\n    rax = *((rsp + 0x230));\n    *((rsp + 0x50)) = rax;\n    if (rax != 0) {\n        goto label_8;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"number in parallel must be nonzero\");\n    eax = 0;\n    error (2, 0, rax);\n    rdi = *((rsp + 0x18));\n    rdx = imp.__libc_start_main;\n    if (rdi != 0) {\n        rsi = rdx;\n        *((rsp + 0x18)) = rdx;\n        eax = strcmp (rdi, rsi);\n        rdx = *((rsp + 0x18));\n        if (eax != 0) {\n            goto label_93;\n        }\n    }\n    *((rsp + 0x18)) = rdx;\n    goto label_8;\n    r10 = imp.__libc_start_main;\n    eax = *((rsp + 0x90));\n    rdi = r10;\n    *((rsp + 0x58)) = r10;\n    *((rsp + 0x60)) = eax;\n    eax = fcn_00411b40 (rdi, 0, 0xa, rsp + 0xc0, 0);\n    rsi = rsp + 0x230;\n    edi = 7;\n    *((rsp + 0x48)) = eax;\n    eax = getrlimit ();\n    r11d = 0x11;\n    r9d = *((rsp + 0x48));\n    r10 = *((rsp + 0x58));\n    if (eax == 0) {\n        eax = *((rsp + 0x230));\n        r11d = rax - 3;\n    }\n    if (r9d != 0) {\n        goto label_94;\n    }\n    rax = *((rsp + 0xc0));\n    edx = eax;\n    *(0x0061c420) = eax;\n    if (rax != rdx) {\n        goto label_17;\n    }\n    if (eax <= 1) {\n        goto label_95;\n    }\n    if (eax <= r11d) {\n        goto label_8;\n    }\nlabel_17:\n    *(rsp) = r11d;\n    rax = fcn_0040f880 (r10);\n    edx = 5;\n    rax = *((rsp + 0x60));\n    rax <<= 5;\n    rbx = *((rax + 0x414b40));\n    rax = dcgettext (0, \"--%s argument %s too large\");\n    r8 = rbp;\n    rcx = rbx;\n    eax = 0;\n    error (0, 0, rax);\n    r11d = *(rsp);\n    rax = fcn_0040d330 (r11d, rsp + 0x1a0, rdx);\n    edx = 5;\n    rax = dcgettext (0, \"maximum --%s argument with current rlimit is %s\");\n    r8 = rbp;\n    rcx = rbx;\n    eax = 0;\n    error (2, 0, rax);\n    rax = imp.__libc_start_main;\n    *((rsp + 0x10)) = rax;\n    goto label_8;\n    rdi = imp.__libc_start_main;\n    rdx = imp.__libc_start_main;\n    if (rdi != 0) {\n        rsi = rdx;\n        *((rsp + 0x48)) = rdx;\n        eax = strcmp (rdi, rsi);\n        rdx = *((rsp + 0x48));\n        if (eax != 0) {\n            goto label_96;\n        }\n    }\n    *(0x0061c748) = rdx;\n    goto label_8;\n    *(0x0061c740) = 1;\n    goto label_8;\n    *(0x0061c500) = 0;\n    goto label_8;\n    rcx = *(0x0061c57c);\n    rdx = imp.__libc_start_main;\n    rax = rcx;\n    if (*((rbp + rcx*8 - 8)) != rdx) {\n        goto label_8;\n    }\nlabel_48:\n    ecx = *(rdx);\n    esi = ecx;\n    ecx -= 0x30;\n    if (ecx <= 9) {\n        goto label_97;\n    }\n    edx = 0;\n    dl = (sil != 0) ? 1 : 0;\n    eax -= edx;\n    *(0x0061c57c) = eax;\n    goto label_8;\n    *(0x0061c759) = 1;\n    goto label_8;\n    rdx = imp.__libc_start_main;\n    eax = *(rdx);\n    if (al == 0) {\n        goto label_98;\n    }\n    if (*((rdx + 1)) != 0) {\n        rdi = rdx;\n        *((rsp + 0x48)) = rdx;\n        eax = strcmp (rdi, 0x416750);\n        rdx = *((rsp + 0x48));\n        if (eax != 0) {\n            goto label_99;\n        }\n        eax = 0;\n    }\n    edx = *(0x0061c424);\n    if (edx != 0x80) {\n        if (edx != eax) {\n            goto label_100;\n        }\n    }\n    *(0x0061c424) = eax;\n    goto label_8;\n    *(0x0061c75a) = 1;\n    goto label_8;\n    *((rsp + 0x30)) = 1;\n    goto label_8;\n    eax = 0;\n    ecx = 0x12;\n    rdi = rsp + 0x100;\n    memset (rdi, eax, rcx);\n    *((rsp + 0x110)) = 0xffffffffffffffff;\n    rax = fcn_00407c00 (*(0x0061cd60), rsp + 0x100, \"invalid number at field start\");\n    rdx = *((rsp + 0x100));\n    rcx = rdx - 1;\n    *((rsp + 0x100)) = rcx;\n    if (rdx == 0) {\n        goto label_101;\n    }\n    if (*(rax) == 0x2e) {\n        goto label_102;\n    }\nlabel_44:\n    rdx = *((rsp + 0x100));\n    rdx |= *((rsp + 0x108));\n    if (rdx == 0) {\n        goto label_103;\n    }\nlabel_18:\n    rax = fcn_00405c00 (rax, rsp + 0x100, 0);\n    if (*(rax) == 0x2c) {\n        goto label_104;\n    }\n    *((rsp + 0x110)) = 0xffffffffffffffff;\n    *((rsp + 0x118)) = 0;\nlabel_43:\n    if (*(rax) != 0) {\n        goto label_105;\n    }\n    fcn_00411410 (rsp + 0x100, 0x48);\n    rdx = imp.__libc_start_main;\n    ecx = 0x61c750;\n    do {\n        if (rdx == 0) {\n            goto label_20;\n        }\n        rcx = rdx + 0x40;\n        rdx = *((rdx + 0x40));\n    } while (1);\n    rdi = *((rsp + 0x20));\n    rdx = imp.__libc_start_main;\n    if (rdi != 0) {\n        rsi = rdx;\n        *((rsp + 0x20)) = rdx;\n        eax = strcmp (rdi, rsi);\n        rdx = *((rsp + 0x20));\n        if (eax != 0) {\n            goto label_106;\n        }\n    }\n    *((rsp + 0x20)) = rdx;\n    goto label_8;\n    eax = fcn_0040a010 (*(0x0061cd60));\n    goto label_8;\n    do {\n    } while (rcx != 0);\n    r9d = \"Paul Eggert\";\n    eax = 0;\n    r8d = \"Mike Haertel\";\n    rcx = *(0x0061c508);\n    fcn_004110d0 (*(obj.stdout), 0x416672, \"GNU coreutils\");\n    exit (0);\n    rdx = imp.__libc_start_main;\n    if (*(rdx) == 0x2b) {\n        goto label_107;\n    }\nlabel_19:\n    *((r13 + r15*8)) = rdx;\n    r15++;\n    goto label_8;\n    eax = *((rsp + 0x90));\n    *((rsp + 0x48)) = rdi;\n    *((rsp + 0x58)) = eax;\n    eax = fcn_00411b40 (*(0x0061cd60), rsp + 0x230, 0xa, rsp + 0x1a0, \"EgGkKmMPtTYZ\");\n    if (eax != 0) {\n        goto label_108;\n    }\n    rax = *((rsp + 0x230));\n    eax = *((rax - 1));\n    eax -= 0x30;\n    if (eax <= 9) {\n        rax = *((rsp + 0x1a0));\n        rdi = 0x3fffffffffffff;\n        if (rax > rdi) {\n            goto label_53;\n        }\n        rax <<= 0xa;\n        *((rsp + 0x1a0)) = rax;\n    }\nlabel_52:\n    rdx = *((rsp + 0x1a0));\n    if (rdx < *(0x0061c778)) {\n        goto label_8;\n    }\n    eax = *(0x0061c420);\n    rax *= 0x22;\n    if (rax < rdx) {\n        rax = rdx;\n    }\n    *(0x0061c778) = rax;\n    goto label_8;\nlabel_88:\n    r15 = *((rsp + 0x38));\n    r13 = *((rsp + 0x40));\n    ebx = *((rsp + 0x48));\nlabel_82:\n    al = fcn_00405af0 (*((rsp + 8)));\n    r12d = *((rsp + 0x1d7));\n    if (al != 0) {\n        goto label_109;\n    }\n    if (*(0x0061c75a) == 0) {\n        if (*(0x0061c759) != 0) {\n            goto label_110;\n        }\n        *((rsp + 0x1d7)) = 0;\n    }\nlabel_110:\n    rbp = rsp + 0xc0;\n    eax = fcn_00405b50 (*((rsp + 8)), rbp);\n    eax = 0;\n    rdi = rbp;\n    rcx |= 0xffffffffffffffff;\n    __asm (\"repne scasb al, byte [rdi]\");\n    r8d = 5;\n    edx = \"options '-%s' are ignored\";\n    edi = 0;\n    esi = \"option '-%s' is ignored\";\n    rcx = ~rcx;\n    rcx--;\n    rax = dcngettext ();\n    rcx = rbp;\n    eax = 0;\n    error (0, 0, rax);\n    *((rsp + 0x1d7)) = r12b;\n    if (r12b != 0) {\nlabel_31:\n        if (*(0x0061c75a) != 0) {\n            goto label_29;\n        }\nlabel_30:\n        if (*(0x0061c759) != 0) {\n            goto label_29;\n        }\n        if (*(0x0061c750) == 0) {\n            goto label_29;\n        }\n        edx = 5;\n        rax = dcgettext (0, \"option '-r' only applies to last-resort comparison\");\n        eax = 0;\n        error (0, 0, rax);\n    }\nlabel_29:\n    eax = *((rsp + 0x187));\n    *(0x0061c75b) = al;\n    if (bl != 0) {\n        goto label_111;\n    }\nlabel_25:\n    if (*(0x0061c768) == 0) {\n        goto label_112;\n    }\nlabel_27:\n    if (r15 == 0) {\n        goto label_113;\n    }\nlabel_26:\n    rdx = imp.__libc_start_main;\n    if (rdx != 0) {\n        eax = *(0x0061c420);\n        rax *= 0x22;\n        if (rax < rdx) {\n            rax = rdx;\n        }\n        *(0x0061c778) = rax;\n    }\n    if (*(rsp) == 0) {\n        goto label_114;\n    }\n    if (r15 > 1) {\n        goto label_115;\n    }\n    if (*((rsp + 0x20)) != 0) {\n        goto label_116;\n    }\n    r13 = *(r13);\n    rax = fcn_00407cd0 (r13, 0x4168fa);\n    r14 = rax;\n    if (rax == 0) {\n        goto label_117;\n    }\n    rax = imp.__libc_start_main;\n    ebx = *(0x0061c759);\n    esi = 0x20;\n    *((rsp + 0x18)) = rax;\n    ebx ^= 1;\n    rax = *(0x0061c428);\n    if (*(0x0061c778) >= rax) {\n        rax = imp.__libc_start_main;\n    }\n    ebx = (int32_t) bl;\n    r12d = 0;\n    rdx = rax;\n    rax = rsp + 0x1a0;\n    rdi = rax;\n    *((rsp + 8)) = rax;\n    fcn_00405e30 (rdi, rsi, rdx);\n    *((rsp + 0xc0)) = 0;\n    *((rsp + 0x10)) = 0;\nlabel_12:\n    al = fcn_004074d0 (*((rsp + 8)), r14, r13);\n    if (al == 0) {\n        goto label_118;\n    }\n    rax = *((rsp + 0x1b0));\n    rdi = *((rsp + 0x1b8));\n    rdi += *((rsp + 0x1a0));\n    rax <<= 5;\n    r15 = rdi - 0x20;\n    rbp -= rax;\n    if (r12 == 0) {\n        goto label_14;\n    }\n    goto label_119;\n    do {\n        r15 -= 0x20;\n        eax = fcn_004082a0 (rdi, r15);\n        if (ebx <= eax) {\n            goto label_120;\n        }\nlabel_14:\n        rdi = r15;\n    } while (rbp < r15);\n    rdx = *((r15 + 8));\n    rdi = *((rsp + 0x1b0));\n    if (r12 < rdx) {\n        goto label_121;\n    }\nlabel_13:\n    memcpy (*((rsp + 0xc0)), *(r15), rdx);\n    rax = *((r15 + 8));\n    *((rsp + 0xc8)) = rax;\n    if (*((rsp + 0x18)) == 0) {\n        goto label_12;\n    }\n    rdx = *((r15 + 0x10));\n    rax = *((rsp + 0xc0));\n    rcx = *(r15);\n    rdx += rax;\n    rax += *((r15 + 0x18));\n    rdx -= rcx;\n    rax -= rcx;\n    *((rsp + 0xd0)) = rdx;\n    *((rsp + 0xd8)) = rax;\n    goto label_12;\n    do {\n        if (rdx <= r12) {\n            goto label_122;\n        }\nlabel_121:\n        r12 += r12;\n    } while (r12 != 0);\n    r12 = rdx;\nlabel_122:\n    free (*((rsp + 0xc0)));\n    rax = fcn_00411210 (r12);\n    rdx = *((r15 + 8));\n    *((rsp + 0xc0)) = rax;\n    goto label_13;\nlabel_119:\n    eax = fcn_004082a0 (rsp + 0xc0, r15);\n    if (ebx > eax) {\n        goto label_14;\n    }\nlabel_120:\n    ebx = 0;\n    if (*(rsp) == 0x63) {\n        goto label_123;\n    }\nlabel_37:\n    ebx ^= 1;\n    fcn_00407df0 (r14, r13);\n    free (*((rsp + 0x1a0)));\n    free (*((rsp + 0xc0)));\n    eax = (int32_t) bl;\nlabel_33:\n    return rax;\nlabel_20:\n    *(rcx) = rax;\n    *((rax + 0x40)) = 0;\n    goto label_8;\nlabel_81:\n    rax = setlocale (3, 0);\n    rax = fcn_0040f880 (rax);\n    edx = 5;\n    rax = dcgettext (0, \"using %s sorting rules\");\n    rcx = rbp;\n    eax = 0;\n    error (0, 0, rax);\n    goto label_15;\nlabel_80:\n    edx = 5;\n    rax = dcgettext (0, \"failed to set locale\");\n    rcx = rax;\n    eax = 0;\n    eax = error (0, 0, 0x416abc);\n    goto label_16;\nlabel_108:\n    if (eax == 2) {\n        rdx = *((rsp + 0x230));\n        ecx = *((rdx - 1));\n        ecx -= 0x30;\n        if (ecx > 9) {\n            goto label_46;\n        }\n        if (*((rdx + 1)) == 0) {\n            goto label_124;\n        }\n    }\nlabel_46:\n    r8 = *((rsp + 0x48));\n    fcn_00411ab0 (eax, *((rsp + 0x58)), 0x53, 0x414b40);\nlabel_94:\n    if (r9d == 1) {\n        goto label_17;\n    }\n    r8 = r10;\n    fcn_00411ab0 (r9d, *((rsp + 0x60)), 0xffffff84, 0x414b40);\nlabel_103:\n    *((rsp + 0x100)) = 0xffffffffffffffff;\n    goto label_18;\nlabel_107:\n    rax = *(0x0061c57c);\n    if (eax == ebx) {\n        goto label_125;\n    }\n    rax = *((rbp + rax*8));\n    *((rsp + 0x48)) = 0;\n    if (*(rax) == 0x2d) {\n        goto label_126;\n    }\nlabel_47:\n    al = (*((rsp + 0x38)) == 0) ? 1 : 0;\n    eax &= *((rsp + 0x48));\n    if (eax == 0) {\n        goto label_19;\n    }\n    eax = 0;\n    ecx = 0x12;\n    rdi = rsp + 0x100;\n    memset (rdi, eax, rcx);\n    rcx |= 0xffffffffffffffff;\n    *((rsp + 0x110)) = rcx;\n    rax = fcn_00407c00 (rdx + 1, rsp + 0x100, 0);\n    rcx = 0xffffffffffffffff;\n    if (rax == 0) {\n        goto label_127;\n    }\n    if (*(rax) == 0x2e) {\n        goto label_128;\n    }\n    rdx = *((rsp + 0x100));\n    rdx |= *((rsp + 0x108));\n    if (rdx == 0) {\nlabel_54:\n        *((rsp + 0x100)) = 0xffffffffffffffff;\nlabel_55:\n        if (rax == 0) {\n            goto label_129;\n        }\n    }\n    rax = fcn_00405c00 (rax, rsp + 0x100, 0);\n    if (*(rax) != 0) {\n        goto label_129;\n    }\n    if (*((rsp + 0x48)) != 0) {\n        rax = *(0x0061c57c);\n        edx = rax + 1;\n        rax = *((rbp + rax*8));\n        *(0x0061c57c) = edx;\n        *((rsp + 0x48)) = rax;\n        rax = fcn_00407c00 (rax + 1, *((rsp + 0x40)), \"invalid number after '-');\n        if (rax == 0) {\n            goto label_130;\n        }\n        if (*(rax) == 0x2e) {\n            goto label_131;\n        }\nlabel_57:\n        if (*((rsp + 0x118)) == 0) {\n            rdx = *((rsp + 0x110));\n            if (rdx == 0) {\n                goto label_132;\n            }\n            rdx--;\n            *((rsp + 0x110)) = rdx;\n        }\nlabel_132:\n        rax = fcn_00405c00 (rax, rsp + 0x100, 1);\n        if (*(rax) != 0) {\n            goto label_133;\n        }\n    }\n    *((rsp + 0x139)) = 1;\n    fcn_00411410 (rsp + 0x100, 0x48);\n    rdx = imp.__libc_start_main;\n    ecx = 0x61c750;\nlabel_21:\n    if (rdx == 0) {\n        goto label_20;\n    }\n    rcx = rdx + 0x40;\n    rdx = *((rdx + 0x40));\n    goto label_21;\nlabel_84:\n    if (r12b != 0) {\n        goto label_22;\n    }\n    goto label_10;\nlabel_86:\n    *((rsp + 0x1c0)) = 0;\n    goto label_23;\nlabel_87:\n    *((rsp + 0x1c8)) = 0;\n    goto label_24;\nlabel_111:\n    rax = fcn_0040f900 (*((rsp + 0x18)), 0x10);\n    edx = 5;\n    esi = \"open failed\";\n    rbx = rax;\n    if (rax == 0) {\n        goto label_134;\n    }\n    rax = rsp + 0x1a0;\n    rsi = rax;\n    *((rsp + 8)) = rax;\n    fcn_0040fc10 (rbx, rsi, 0x10);\n    eax = fcn_0040fd70 (rbx);\n    if (eax != 0) {\n        goto label_135;\n    }\n    fcn_0040aa90 (0x61c600);\n    fcn_0040b360 (*((rsp + 8)), 0x10, 0x61c600);\n    goto label_25;\nlabel_85:\n    edx = 5;\n    rax = dcgettext (0, \"key %lu is numeric and spans multiple fields\");\n    rcx = rbp;\n    eax = 0;\n    error (0, 0, rax);\n    goto label_22;\nlabel_114:\n    r12d = 0x41814a;\n    ebx = 0;\n    *((rsp + 0x68)) = r12;\n    while (r15 != r14) {\n        rbx = r14;\n        rdx = *(rbp);\n        ecx = 2;\n        rdi = r12;\n        rsi = rdx;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        al = (eax > 0) ? 1 : 0;\n        if (al != 0) {\n            esi = 4;\n            rdi = rdx;\n            eax = euidaccess ();\n            if (eax != 0) {\n                goto label_136;\n            }\n        }\n        r14 = rbx + 1;\n        rbp += 8;\n    }\n    rax = *((rsp + 0x20));\n    if (rax != 0) {\n        eax = 0;\n        eax = open (rax, 0x80041, 0x1b6);\n        if (eax < 0) {\n            goto label_137;\n        }\n        if (eax == 1) {\n            goto label_138;\n        }\n        esi = 1;\n        fcn_00408e10 (eax);\n    }\nlabel_138:\n    if (*((rsp + 0x30)) != 0) {\n        goto label_139;\n    }\n    if (*((rsp + 0x50)) == 0) {\n        goto label_140;\n    }\nlabel_50:\n    rbx = *((rsp + 0x50));\n    *((rsp + 0x60)) = r13;\n    rax = 0xffffffffffffff;\n    *((rsp + 0xd8)) = 0;\n    *((rsp + 0x30)) = r14;\n    if (rbx <= rax) {\n        rax = rbx;\n    }\n    r15d = 0;\n    rbx = rax;\n    *((rsp + 0x28)) = rax;\n    rbx += rax;\n    rax <<= 8;\n    *((rsp + 0x38)) = rax;\n    rax = rsp + 0x1a8;\n    *((rsp + 0x40)) = rbx;\n    *((rsp + 0x48)) = rax;\nlabel_32:\n    rax = *((rsp + 0x60));\n    rax = *(rax);\n    rdi = *(rax);\n    *((rsp + 8)) = rax;\n    rax = fcn_00407cd0 (*(rdi), 0x4168fa);\n    *(rsp) = rax;\n    if (rax == 0) {\n        goto label_141;\n    }\n    *((rsp + 0x58)) = 0x30;\n    if (*((rsp + 0x50)) > 1) {\n        goto label_142;\n    }\nlabel_34:\n    r12 = *((rsp + 0xd8));\n    rax = rsp + 0xc0;\n    *((rsp + 0x18)) = rax;\n    if (r12 == 0) {\n        goto label_143;\n    }\nlabel_39:\n    *((rsp + 0xf0)) = 0;\n    al = fcn_004074d0 (*((rsp + 0x18)), *(rsp), *((rsp + 8)));\n    if (al == 0) {\n        goto label_144;\n    }\n    r12d = *((rsp + 0xf0));\n    rbx = *((rsp + 0xd8));\n    if (r12b == 0) {\n        goto label_145;\n    }\n    if (*((rsp + 0x30)) == 0) {\n        void (*0x404968)() ();\n    }\nlabel_145:\n    *(0x0061cb80) = 0;\n    rbx += *((rsp + 0xc0));\n    r15++;\n    r12d = 0;\n    fcn_004090c0 (rsp + 0x90, 0);\n    rbp = rax + 0xd;\n    if (*((rsp + 0xd0)) > 1) {\n        void (*0x4047a0)() ();\n    }\nlabel_113:\n    r15d = 1;\n    free (r13);\n    rax = fcn_00411210 (8);\n    r13 = rax;\n    *(rax) = 0x41814a;\n    goto label_26;\nlabel_112:\n    rax = getenv (\"TMPDIR\");\n    if (rax == 0) {\n        goto label_146;\n    }\nlabel_42:\n    fcn_0040a010 (rax);\n    goto label_27;\nlabel_74:\n    al = fcn_00405af0 (rsp + 0x150);\n    if (al == 0) {\n        goto label_147;\n    }\n    if (*(0x0061c740) == 0) {\n        goto label_148;\n    }\n    r12d = 0;\n    ebx = 0;\n    goto label_28;\nlabel_109:\n    if (r12b == 0) {\n        goto label_29;\n    }\n    if (*(0x0061c75a) != 0) {\n        goto label_149;\n    }\n    if (*(0x0061c759) == 0) {\n        goto label_30;\n    }\n    if (*(0x0061c750) == 0) {\n        goto label_30;\n    }\n    rbp = rsp + 0xc0;\n    eax = fcn_00405b50 (*((rsp + 8)), rbp);\n    eax = 0;\n    rdi = rbp;\n    rcx |= 0xffffffffffffffff;\n    __asm (\"repne scasb al, byte [rdi]\");\n    r8d = 5;\n    edx = \"options '-%s' are ignored\";\n    edi = 0;\n    esi = \"option '-%s' is ignored\";\n    rax = rcx;\n    rax = ~rax;\n    rcx = rax - 1;\n    rax = dcngettext ();\n    rcx = rbp;\n    eax = 0;\n    error (0, 0, rax);\n    *((rsp + 0x1d7)) = r12b;\n    goto label_31;\nlabel_144:\n    eax = fcn_00407df0 (*(rsp), *((rsp + 8)));\n    if (*((rsp + 0x30)) == 0) {\n        goto label_150;\n    }\n    goto label_32;\nlabel_38:\n    while (eax != 0) {\n        eax = 0;\n        goto label_33;\n        eax = fcn_00411f80 (*(obj.stdin));\n        eax++;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"close failed\");\n    fcn_00405dd0 (rax, 0x41814a);\nlabel_142:\n    rcx = *((rsp + 0x28));\n    edx = 1;\n    eax = 1;\n    do {\n        rax += rax;\n        rdx++;\n    } while (rcx > rax);\n    rdx <<= 5;\n    *((rsp + 0x58)) = rdx;\n    goto label_34;\nlabel_143:\n    rax = *((rsp + 0x58));\n    r13 = *((rsp + 0x30));\n    *((rsp + 0x18)) = r15;\n    r15 = r12;\n    rbp = rax + 1;\n    rbx = rax + 2;\n    goto label_151;\nlabel_35:\n    rcx = rbp;\n    edx = 0;\n    rsi = imp.__libc_start_main;\n    rcx *= r12;\n    rcx++;\n    rax = rcx;\n    rax = rdx:rax / rbp;\n    rdx = rdx:rax % rbp;\n    if (r12 != rax) {\n        goto label_152;\n    }\n    rax = rsi;\n    rax -= rbx;\n    if (rcx >= rax) {\n        goto label_152;\n    }\n    r15++;\n    rbx += rcx;\n    if (r15 >= r13) {\n        goto label_153;\n    }\nlabel_151:\n    if (r15 == 0) {\n        goto label_154;\n    }\n    rax = *((rsp + 0x60));\n    rdi = *((rsp + 0x68));\n    ecx = 2;\n    rdx = rsp + 0x1a0;\n    r9 = *((rax + r15*8));\n    rsi = *((rax + r15*8));\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (r15 > 0) ? 1 : 0;\n    if (al != 0) {\n        goto label_155;\n    }\n    esi = 0;\n    edi = 1;\n    eax = fxstat ();\n    al = (eax != 0) ? 1 : 0;\nlabel_36:\n    if (al != 0) {\n        void (*0x40540a)() ();\n    }\nlabel_45:\n    eax = *(0x0061c420);\n    rax *= 0x22;\n    if (rax < r14) {\n        rax = r14;\n    }\n    *(0x0061c5e0) = rax;\n    goto label_35;\nlabel_155:\n    rsi = r9;\n    edi = 1;\n    eax = xstat ();\n    al = (eax != 0) ? 1 : 0;\n    goto label_36;\nlabel_154:\n    eax = fileno (*(rsp));\n    rdx = rsp + 0x1a0;\n    edi = 1;\n    esi = eax;\n    eax = fxstat ();\n    al = (eax != 0) ? 1 : 0;\n    goto label_36;\nlabel_123:\n    rdi += *((rsp + 0x1a0));\n    rdi -= r15;\n    rdi >>= 5;\n    rdi += *((rsp + 0x10));\n    rax = fcn_0040d370 (*((rsp + 0x1b8)), rsp + 0x90, rdx);\n    rbp = imp.__libc_start_main;\n    edx = 5;\n    r12 = rax;\n    rax = dcgettext (0, \"%s: %s:%s: disorder: \");\n    r9 = r12;\n    r8 = r13;\n    rcx = rbp;\n    rdi = stderr;\n    rdx = rax;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    edx = 5;\n    rax = dcgettext (0, \"standard error\");\n    fcn_00407e70 (r15, *(obj.stderr), rax);\n    goto label_37;\nlabel_139:\n    rax = fcn_004113e0 (r14, 0x10);\n    edx = 0;\n    while (rdx != rbx) {\n        rdx = rcx;\n        rsi = *((r13 + rdx*8));\n        rcx = rdx;\n        rcx <<= 4;\n        *((rax + rcx)) = rsi;\n        rcx = rdx + 1;\n    }\n    fcn_00409330 (rax, 0, r14, *((rsp + 0x20)));\n    goto label_38;\nlabel_150:\n    free (*((rsp + 0xc0)));\n    edx = 0x10;\n    rbx = imp.__libc_start_main;\n    rax = rdx;\n    rdx:rax = rax * r15;\n    __asm (\"seto dl\");\n    edx = (int32_t) dl;\n    if (rax < 0) {\n        goto label_67;\n    }\nlabel_152:\n    r15 = *((rsp + 0x18));\n    rbx = rsi;\nlabel_51:\n    rax = rsp + 0xc0;\n    rdi = rax;\n    *((rsp + 0x18)) = rax;\n    fcn_00405e30 (rdi, *((rsp + 0x58)), rbx);\n    goto label_39;\nlabel_148:\n    eax = *((rsp + 0x187));\n    *(0x0061c75b) = al;\n    goto label_25;\nlabel_147:\n    rax = fcn_00411410 (rsp + 0x150, 0x48);\n    rdx = imp.__libc_start_main;\n    ecx = 0x61c750;\n    do {\n        if (rdx == 0) {\n            goto label_156;\n        }\n        rcx = rdx + 0x40;\n        rdx = *((rdx + 0x40));\n    } while (1);\nlabel_156:\n    *(rcx) = rax;\n    rcx = imp.__libc_start_main;\n    r12d = 1;\n    *((rax + 0x40)) = 0;\n    ebx = *((rsp + 0x183));\n    if (rcx != 0) {\n        goto label_40;\n    }\n    goto label_41;\nlabel_146:\n    eax = \"/tmp\";\n    goto label_42;\nlabel_104:\n    rax = fcn_00407c00 (rax + 1, *((rsp + 0x40)), \"invalid number after ',');\n    rdx = *((rsp + 0x110));\n    rcx = rdx - 1;\n    *((rsp + 0x110)) = rcx;\n    if (rdx == 0) {\n        goto label_101;\n    }\n    if (*(rax) == 0x2e) {\n        goto label_157;\n    }\nlabel_49:\n    fcn_00405c00 (rax, rsp + 0x100, 1);\n    goto label_43;\nlabel_102:\n    fcn_00407c00 (rax + 1, rsp + 0x108, \"invalid number after '.');\n    rdx = *((rsp + 0x108));\n    rcx = rdx - 1;\n    *((rsp + 0x108)) = rcx;\n    if (rdx != 0) {\n        goto label_44;\n    }\n    fcn_00405d30 (*(0x0061cd60), \"character offset is zero\");\n    __asm (\"cvttsd2si r14, xmm1\");\n    goto label_45;\nlabel_149:\n    if (*(0x0061c750) == 0) {\n        goto label_29;\n    }\n    rbp = rsp + 0xc0;\n    eax = fcn_00405b50 (*((rsp + 8)), rbp);\n    eax = 0;\n    rdi = rbp;\n    rcx |= 0xffffffffffffffff;\n    __asm (\"repne scasb al, byte [rdi]\");\n    r8d = 5;\n    edx = \"options '-%s' are ignored\";\n    edi = 0;\n    esi = \"option '-%s' is ignored\";\n    rax = rcx;\n    rax = ~rax;\n    rcx = rax - 1;\n    rax = dcngettext ();\n    rcx = rbp;\n    eax = 0;\n    error (0, 0, rax);\n    *((rsp + 0x1d7)) = 1;\n    goto label_31;\nlabel_53:\n    eax = 1;\n    goto label_46;\nlabel_126:\n    eax = *((rax + 1));\n    eax -= 0x30;\n    al = (eax <= 9) ? 1 : 0;\n    eax = (int32_t) al;\n    *((rsp + 0x48)) = eax;\n    goto label_47;\nlabel_97:\n    rdx++;\n    goto label_48;\nlabel_157:\n    fcn_00407c00 (rax + 1, rsp + 0x118, \"invalid number after '.');\n    goto label_49;\n    fcn_0040a0d0 (0);\nlabel_140:\n    rax = fcn_0040d6f0 (2);\n    edx = 8;\n    if (rax <= 8) {\n        rdx = rax;\n    }\n    *((rsp + 0x50)) = rdx;\n    goto label_50;\nlabel_91:\n    *((rsp + 0x50)) = 0xffffffffffffffff;\n    goto label_8;\nlabel_118:\n    ebx = 1;\n    goto label_37;\nlabel_125:\n    *((rsp + 0x48)) = 0;\n    goto label_47;\nlabel_153:\n    r15 = *((rsp + 0x18));\n    goto label_51;\nlabel_124:\n    edx = *(rdx);\n    if (dl == 0x25) {\n        goto label_158;\n    }\n    if (dl == 0x62) {\n        goto label_52;\n    }\n    goto label_46;\nlabel_127:\n    rax = *((rsp + 0x100));\n    rax |= *((rsp + 0x108));\n    rdx = imp.__libc_start_main;\n    if (rax != 0) {\n        goto label_19;\n    }\n    *((rsp + 0x100)) = rcx;\n    goto label_19;\nlabel_129:\n    rdx = imp.__libc_start_main;\n    goto label_19;\nlabel_158:\n    fcn_0040d840 ();\n    rax = *((rsp + 0x1a0));\n    if (rax < 0) {\n        goto label_159;\n    }\n    xmm1 = 0;\n    __asm (\"cvtsi2sd xmm1, rax\");\nlabel_56:\n    __asm (\"mulsd xmm0, xmm1\");\n    xmm1 = *(0x00416a40);\n    __asm (\"divsd xmm0, qword [0x00416a38]\");\n    __asm (\"comisd xmm1, xmm0\");\n    if (rax <= 0) {\n        goto label_53;\n    }\n    xmm1 = *(0x00416a48);\n    __asm (\"comisd xmm0, xmm1\");\n    if (rax >= 0) {\n        goto label_160;\n    }\n    __asm (\"cvttsd2si rax, xmm0\");\n    *((rsp + 0x1a0)) = rax;\n    goto label_52;\nlabel_128:\n    fcn_00407c00 (rax + 1, rsp + 0x108, 0);\n    rdx = *((rsp + 0x100));\n    rdx |= *((rsp + 0x108));\n    if (rdx == 0) {\n        goto label_54;\n    }\n    goto label_55;\nlabel_59:\n    rax = fcn_0040f630 (4, *(r13));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"extra operand %s\");\n    rcx = rbx;\n    eax = 0;\n    error (0, 0, rax);\n    edx = 5;\n    rax = dcgettext (0, \"file operands cannot be combined with --files0-from\");\n    edx = 0x4179cf;\n    esi = 1;\n    rdi = stderr;\n    rcx = rax;\n    eax = 0;\n    fprintf_chk ();\nlabel_72:\n    fcn_0040a0d0 (2);\nlabel_78:\n    *((rcx + 0x37)) = 0;\n    *((rcx + 0x30)) = 0;\n    fcn_00405b50 (rcx, rsp + 0x1a0);\n    rax = fcn_00405d00 (rsp + 0x1a0);\nlabel_160:\n    __asm (\"subsd xmm0, xmm1\");\n    __asm (\"cvttsd2si rax, xmm0\");\n    *((rsp + 0x1a0)) = rax;\n    eax = 1;\n    rax <<= 0x3f;\n    goto label_52;\nlabel_159:\n    rdx = rax;\n    eax &= 1;\n    xmm1 = 0;\n    rdx >>= 1;\n    rdx |= rax;\n    __asm (\"cvtsi2sd xmm1, rdx\");\n    __asm (\"addsd xmm1, xmm1\");\n    goto label_56;\nlabel_98:\n    edx = 5;\n    rax = dcgettext (0, \"empty tab\");\n    eax = 0;\n    error (2, 0, rax);\nlabel_131:\n    fcn_00407c00 (rax + 1, rsp + 0x118, \"invalid number after '.');\n    goto label_57;\nlabel_130:\n    assert_fail (0x416abd, \"src/sort.c\", 0x110d, \"main\");\n    do {\n        rax = dcgettext (0, rsi);\n        fcn_00405dd0 (rax, rbx);\nlabel_135:\n        edx = 5;\nlabel_134:\n        rax = dcgettext (0, \"close failed\");\n        fcn_00405dd0 (rax, *((rsp + 0x18)));\nlabel_99:\n        rax = fcn_0040f880 (rdx);\n        edx = 5;\n        rbx = rax;\n        rax = dcgettext (0, \"multi-character tab %s\");\n        rcx = rbx;\n        eax = 0;\n        error (2, 0, rax);\nlabel_100:\n        edx = 5;\n        rax = dcgettext (0, \"incompatible tabs\");\n        eax = 0;\n        error (2, 0, rax);\nlabel_93:\n        edx = 5;\n        rax = dcgettext (0, \"multiple random sources specified\");\n        eax = 0;\n        error (2, 0, rax);\nlabel_96:\n        edx = 5;\n        rax = dcgettext (0, \"multiple compress programs specified\");\n        eax = 0;\n        error (2, 0, rax);\nlabel_106:\n        edx = 5;\n        rax = dcgettext (0, \"multiple output files specified\");\n        eax = 0;\n        error (2, 0, rax);\nlabel_79:\n        if (*(rsp) == 0) {\n            *(rsp) = 0x6f;\n        }\n        eax = *(rsp);\n        *(str.X___debug) = \"X --debug\";\n        fcn_00405d00 (\"X --debug\");\nlabel_101:\n        fcn_00405d30 (*(0x0061cd60), \"field number is zero\");\nlabel_73:\n        fcn_00405d00 (0x41667f);\n        fcn_00407dd0 (*((rsp + 0x20)));\nlabel_133:\n        fcn_00405d30 (*((rsp + 0x48)), \"stray character in field spec\");\nlabel_141:\n        fcn_00407dd0 (*((rsp + 8)));\nlabel_95:\n        rax = fcn_0040f880 (r10);\n        edx = 5;\n        rax = *((rsp + 0x60));\n        rax <<= 5;\n        rbx = *((rax + 0x414b40));\n        rax = dcgettext (0, \"invalid --%s argument %s\");\n        r8 = rbp;\n        rcx = rbx;\n        eax = 0;\n        error (0, 0, rax);\n        rax = fcn_0040f880 (0x41671b);\n        edx = 5;\n        rax = dcgettext (0, \"minimum --%s argument is %s\");\n        r8 = rbp;\n        rcx = rbx;\n        eax = 0;\n        error (2, 0, rax);\nlabel_137:\n        edx = 5;\n        rax = dcgettext (0, \"open failed\");\n        fcn_00405dd0 (rax, *((rsp + 0x20)));\nlabel_136:\n        rbx = *(rbp);\n        edx = 5;\n        esi = \"cannot read\";\n    } while (1);\nlabel_115:\n    rax = fcn_0040f630 (4, *((r13 + 8)));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"extra operand %s not allowed with -%c\");\n    r8d = *(rsp);\n    rcx = rbx;\n    eax = 0;\n    error (2, 0, rax);\nlabel_71:\n    if (*((rsp + 0x10)) == 0) {\n        goto label_58;\n    }\n    if (r15 != 0) {\n        goto label_59;\n    }\n    rax = fcn_00407cd0 (*((rsp + 0x10)), 0x4168fa);\n    rbx = rax;\n    if (rax == 0) {\n        goto label_161;\n    }\n    fcn_004103a0 (rsp + 0x230);\n    al = fcn_00410440 (rbx, rsp + 0x230);\n    rsi = *((rsp + 0x10));\n    if (al == 0) {\n        goto label_162;\n    }\n    fcn_00407df0 (rbx, rsi);\n    rbx = *((rsp + 0x230));\n    if (rbx == 0) {\n        goto label_163;\n    }\n    free (r13);\n    r13 = *((rsp + 0x238));\n    r8d = 0x41814a;\n    goto label_164;\nlabel_60:\n    r15++;\n    if (*(rdx) == 0) {\n        goto label_165;\n    }\n    if (rbx == r15) {\n        goto label_58;\n    }\nlabel_164:\n    rdx = *((r13 + r15*8));\n    ecx = 2;\n    rdi = r8;\n    rsi = rdx;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (rbx > r15) ? 1 : 0;\n    if (al != 0) {\n        goto label_60;\n    }\n    rax = fcn_0040f630 (4, rdx);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"when reading file names from stdin, no file name of %s allowed\");\n    rcx = rbx;\n    eax = 0;\n    error (2, 0, rax);\nlabel_165:\n    rdx = *((rsp + 0x10));\n    rax = fcn_0040f700 (0, 3);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"%s:%lu: invalid zero-length file name\");\n    r8 = r15;\n    rcx = rbx;\n    eax = 0;\n    error (2, 0, rax);\nlabel_161:\n    fcn_00407dd0 (*((rsp + 0x10)));\nlabel_163:\n    rax = fcn_0040f630 (4, *((rsp + 0x10)));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"no input from %s\");\n    rcx = rbx;\n    eax = 0;\n    error (2, 0, rax);\nlabel_162:\n    rax = fcn_0040f630 (4, rsi);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"cannot read file names from %s\");\n    rcx = rbx;\n    eax = 0;\n    error (2, 0, rax);\nlabel_67:\n    eax = fcn_00411460 ();\nlabel_92:\n    r8 = *((rsp + 0x48));\n    fcn_00411ab0 (eax, *((rsp + 0x50)), 0xffffff87, 0x414b40);\nlabel_116:\n    eax = *(rsp);\n    *(0x0061c400) = al;\n    fcn_00405d00 (0x61c400);\nlabel_117:\n    fcn_00407dd0 (r13);\nlabel_105:\n    rax = fcn_00405d30 (*(0x0061cd60), \"stray character in field spec\");\n}\n"
        },
        {
            "funcName": "fcn_0040585b",
            "funcStartAddr": "0x40585b",
            "funcEndAddr": "0x40587a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40585b */\n#include <stdint.h>\n \nint32_t fcn_0040585b (void) {\n    eax = 0x61c588;\n    if (rax != 0x61c588) {\n        eax = 0;\n        if (rax == 0) {\n            goto label_0;\n        }\n        edi = 0x61c588;\n        void (*rax)() ();\n    }\nlabel_0:\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_004058b1",
            "funcStartAddr": "0x4058b1",
            "funcEndAddr": "0x405908",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x4058b1 */\n#include <stdint.h>\n \nint64_t fcn_004058b1 (int32_t argc, func fini, func init, func main, func rtld_fini, void * stack_end, char ** ubp_av) {\n    rsi = argc;\n    r8 = fini;\n    rcx = init;\n    rdi = main;\n    r9 = rtld_fini;\n    xmm0 = stack_end;\n    rdx = ubp_av;\n    if (*(0x0061c5c8) != 0) {\n        goto label_0;\n    }\n    r12d = section..dtors;\n    ebx = 0x61be38;\n    rbx -= section..dtors;\n    rbx >>= 3;\n    rbx--;\n    do {\n        rax = imp.__libc_start_main;\n        if (rax >= rbx) {\n            goto label_1;\n        }\n        rax++;\n        *(0x0061c5d0) = rax;\n        uint64_t (*r12 + rax*8)() ();\n    } while (1);\nlabel_1:\n    fcn_0040585b ();\n    *(0x0061c5c8) = 1;\n    return rax;\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405908",
            "funcStartAddr": "0x405908",
            "funcEndAddr": "0x40599b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x405908 */\n#include <stdint.h>\n \nint64_t fcn_00405908 (void) {\n    do {\n        esi = 0x61c588;\n        ecx = 2;\n        rsi -= 0x61c588;\n        rsi >>= 3;\n        rax = rsi;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rsi = rax;\n        if (rax != 0) {\n            eax = 0;\n            if (rax == 0) {\n                goto label_0;\n            }\n            edi = 0x61c588;\n            void (*rax)() ();\n        }\nlabel_0:\n        return rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00405930",
            "funcStartAddr": "0x405930",
            "funcEndAddr": "0x4059e8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x405930 */\n#include <stdint.h>\n \nint32_t fcn_00405930 (int64_t arg1) {\n    rdi = arg1;\n    rcx = *(rdi);\n    r11d = imp.__libc_start_main;\n    r10d = 0;\n    eax = 0;\n    edx = *(rcx);\n    while (r9d <= 9) {\n        r8d = *((rcx + 1));\n        if (al < dl) {\n            eax = edx;\n        }\n        r10d = 0;\n        edx = r8d;\n        if (r8d == r11d) {\n            edx = *((rcx + 2));\n            rsi = rcx + 2;\n            r10d = 1;\n        }\n        rcx = rsi;\n        r8d = (int32_t) dl;\n        rsi = rcx + 1;\n        r9d = r8 - 0x30;\n    }\n    if (r10b != 0) {\n        goto label_0;\n    }\n    while (1) {\n        *(rdi) = rcx;\n        return eax;\n        r8d = *((rcx + 1));\n        rcx += 2;\n        edx = r8d;\n        r8d -= 0x30;\n        if (r8d <= 9) {\n            goto label_1;\n        }\n        rcx = rsi;\n    }\n    do {\n        rcx = r8;\nlabel_1:\n        r8 = rcx + 1;\n        esi = *((r8 - 1));\n        if (al < dl) {\n            eax = edx;\n        }\n        edx = esi;\n        esi -= 0x30;\n    } while (esi <= 9);\n    *(rdi) = rcx;\n    return eax;\nlabel_0:\n    rcx--;\n    *(rdi) = rcx;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_004059f0",
            "funcStartAddr": "0x4059f0",
            "funcEndAddr": "0x405a39",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x4059f0 */\n#include <stdint.h>\n \nint64_t fcn_004059f0 (int64_t arg1) {\n    int64_t var_8h;\n    rdi = arg1;\n    eax = 0;\n    ebx = *(rdi);\n    al = (bl == 0x2d) ? 1 : 0;\n    rdi += rax;\n    *((rsp + 8)) = rdi;\n    al = fcn_00405930 (rsp + 8);\n    edx = 0;\n    if (al > 0x30) {\n        rax = *((rsp + 8));\n        eax = *(rax);\n        edx = *((rax + 0x4149c0));\n        eax = edx;\n        eax = -eax;\n        if (bl != 0x2d) {\n            edx = eax;\n            goto label_0;\n        }\n    }\nlabel_0:\n    eax = edx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405a40",
            "funcStartAddr": "0x405a40",
            "funcEndAddr": "0x405ae3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x405a40 */\n#include <stdint.h>\n \nuint64_t fcn_00405a40 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    while (*((rax + 0x61ca80)) != 0) {\n        rdi++;\n        eax = *(rdi);\n    }\n    r11d = 0xc;\n    r10d = 0;\nlabel_0:\n    r9 = r10 + r11;\n    r9 >>= 1;\n    rax = r9;\n    rax <<= 4;\n    rax = *((rax + 0x61c440));\n    edx = *(rax);\n    if (dl == 0) {\n        goto label_3;\n    }\n    ecx = *(rdi);\n    if (*((rcx + 0x61c780)) < dl) {\n        goto label_4;\n    }\n    if (*((rcx + 0x61c780)) > dl) {\n        goto label_5;\n    }\n    rdx = rdi;\n    while (cl != 0) {\n        r8d = *(rdx);\n        if (*((r8 + 0x61c780)) < cl) {\n            goto label_4;\n        }\n        if (*((r8 + 0x61c780)) > cl) {\n            goto label_5;\n        }\n        rax++;\n        ecx = *(rax);\n        rdx++;\n    }\nlabel_2:\n    if (rsi != 0) {\n        *(rsi) = rdx;\n    }\n    r9 <<= 4;\n    eax = *((r9 + 0x61c448));\n    return rax;\nlabel_4:\n    r11 = r9;\nlabel_1:\n    if (r10 < r11) {\n        goto label_0;\n    }\n    eax = 0;\n    return rax;\nlabel_5:\n    r10 = r9 + 1;\n    goto label_1;\nlabel_3:\n    rdx = rdi;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_00405af0",
            "funcStartAddr": "0x405af0",
            "funcEndAddr": "0x405b43",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x405af0 */\n#include <stdint.h>\n \nint32_t fcn_00405af0 (char * arg1) {\n    rdi = arg1;\n    eax = 0;\n    while (*((rdi + 0x28)) != 0) {\nlabel_0:\n        return eax;\n    }\n    eax = *((rdi + 0x30));\n    if (al != 0) {\n        goto label_1;\n    }\n    if (*((rdi + 0x31)) != 0) {\n        goto label_0;\n    }\n    rdx = 0xffff00ff0000;\n    if ((*((rdi + 0x30)) & rdx) != 0) {\n        goto label_0;\n    }\n    eax = *((rdi + 0x36));\n    if (al != 0) {\n        goto label_1;\n    }\n    if (*((rdi + 0x38)) != 0) {\n        goto label_0;\n    }\n    eax = *((rdi + 0x33));\n    eax ^= 1;\n    return eax;\nlabel_1:\n    eax = 0;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00405b50",
            "funcStartAddr": "0x405b50",
            "funcEndAddr": "0x405bf7",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x405b50 */\n#include <stdint.h>\n \nint64_t fcn_00405b50 (char * arg1, void * arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    if (*((rdi + 0x30)) != 0) {\n        *(rsi) = 0x62;\n        rsi++;\n    }\n    while (1) {\n        rax = rsi;\n        if (*((rdi + 0x28)) != 0) {\n            *(rsi) = 0x66;\n            rax++;\n        }\n        if (*((rdi + 0x34)) != 0) {\n            *(rax) = 0x67;\n            rax++;\n        }\n        if (*((rdi + 0x35)) != 0) {\n            *(rax) = 0x68;\n            rax++;\n        }\n        if (*((rdi + 0x20)) == 0x61c980) {\n            goto label_1;\n        }\nlabel_0:\n        if (*((rdi + 0x36)) != 0) {\n            *(rax) = 0x4d;\n            rax++;\n        }\n        if (*((rdi + 0x32)) != 0) {\n            *(rax) = 0x6e;\n            rax++;\n        }\n        if (*((rdi + 0x33)) != 0) {\n            *(rax) = 0x52;\n            rax++;\n        }\n        if (*((rdi + 0x37)) != 0) {\n            *(rax) = 0x72;\n            rax++;\n        }\n        if (*((rdi + 0x38)) != 0) {\n            *(rax) = 0x56;\n            rax++;\n        }\n        *(rax) = 0;\n        return rax;\n        *(rsi) = 0x64;\n        rsi++;\n    }\nlabel_1:\n    *(rax) = 0x69;\n    rax++;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00405c00",
            "funcStartAddr": "0x405c00",
            "funcEndAddr": "0x405ce9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x405c00 */\n#include <stdint.h>\n \nint64_t fcn_00405c00 (int64_t arg1, uint32_t arg2, uint32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    ecx = *(rdi);\n    if (cl == 0) {\n        goto label_1;\n    }\n    eax = edx;\n    edx--;\n    eax &= 0xfffffffd;\n    do {\n        ecx -= 0x4d;\n        if (cl > 0x25) {\n            goto label_1;\n        }\n        ecx = (int32_t) cl;\n        /* switch table (38 cases) at 0x413fa0 */\n        *((rsi + 0x37)) = 1;\nlabel_0:\n        rdi++;\n        ecx = *(rdi);\n    } while (cl != 0);\nlabel_1:\n    rax = rdi;\n    return rax;\n    *((rsi + 0x32)) = 1;\n    goto label_0;\n    if (*((rsi + 0x20)) != 0) {\n        goto label_0;\n    }\n    *((rsi + 0x20)) = 0x61c980;\n    goto label_0;\n    *((rsi + 0x35)) = 1;\n    goto label_0;\n    *((rsi + 0x34)) = 1;\n    goto label_0;\n    *((rsi + 0x28)) = 0x61c780;\n    goto label_0;\n    *((rsi + 0x20)) = 0x61c880;\n    goto label_0;\n    if (eax == 0) {\n        *((rsi + 0x30)) = 1;\n    }\n    if (edx > 1) {\n        goto label_0;\n    }\n    *((rsi + 0x31)) = 1;\n    goto label_0;\n    *((rsi + 0x38)) = 1;\n    goto label_0;\n    *((rsi + 0x36)) = 1;\n    goto label_0;\n    *((rsi + 0x33)) = 1;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00405d00",
            "funcStartAddr": "0x405d00",
            "funcEndAddr": "0x405d30",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x405d00 */\n#include <stdint.h>\n \nuint64_t fcn_00405d00 (void * arg1) {\n    rdi = arg1;\n    edx = 5;\n    rbx = rdi;\n    rax = dcgettext (0, \"options '-%s' are incompatible\");\n    rcx = rbx;\n    eax = 0;\n    rax = error (2, 0, rax);\n}\n"
        },
        {
            "funcName": "fcn_00405d30",
            "funcStartAddr": "0x405d30",
            "funcEndAddr": "0x405dca",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x405d30 */\n#include <stdint.h>\n \nuint64_t fcn_00405d30 (char * arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rsi;\n    rax = fcn_0040f880 (rdi);\n    edx = 5;\n    rax = dcgettext (0, rbx);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"%s: invalid field specification %s\");\n    r8 = rbp;\n    rcx = rbx;\n    eax = 0;\n    rax = error (2, 0, rax);\n    rbx = imp.__libc_start_main;\n    if (rbx == 0) {\n        goto label_0;\n    }\n    do {\n        unlink (rbx + 0xd);\n        rbx = *(rbx);\n    } while (rbx != 0);\nlabel_0:\n    *(0x0061c6a8) = 0;\n    esi = 0;\n    signal (ebp);\n    edi = ebp;\n    return raise ();\n}\n"
        },
        {
            "funcName": "fcn_00405dd0",
            "funcStartAddr": "0x405dd0",
            "funcEndAddr": "0x405e24",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x405dd0 */\n#include <stdint.h>\n \nuint64_t fcn_00405dd0 (int64_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = rsi;\n    rbx = rdi;\n    while (1) {\n        rax = fcn_0040f700 (0, 3);\n        rax = errno_location ();\n        r8 = rbp;\n        rcx = rbx;\n        eax = 0;\n        error (2, *(rax), \"%s: %s\");\n        edx = 5;\n        rax = dcgettext (0, \"standard output\");\n        rdx = rax;\n    }\n}\n"
        },
        {
            "funcName": "fcn_00405e30",
            "funcStartAddr": "0x405e30",
            "funcEndAddr": "0x405ea5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x405e30 */\n#include <stdint.h>\n \nuint64_t fcn_00405e30 (int64_t arg1, char * arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13 = rsi;\n    r12 = rsi + 1;\n    rbx = rdx;\n    while (rax == 0) {\n        rbx >>= 1;\n        if (r12 >= rbx) {\n            goto label_0;\n        }\n        rbx &= 0xffffffffffffffe0;\n        rbx += 0x20;\n        rax = malloc (rbx);\n        *(rbp) = rax;\n    }\n    *((rbp + 0x28)) = r13;\n    *((rbp + 0x18)) = rbx;\n    *((rbp + 0x10)) = 0;\n    *((rbp + 0x20)) = 0;\n    *((rbp + 8)) = 0;\n    *((rbp + 0x30)) = 0;\n    return rax;\nlabel_0:\n    return fcn_00411460 ();\n}\n"
        },
        {
            "funcName": "fcn_00405eb0",
            "funcStartAddr": "0x405eb0",
            "funcEndAddr": "0x405eec",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x405eb0 */\n#include <stdint.h>\n \nuint64_t fcn_00405eb0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edx = 0;\n    rsi -= rdi;\n    rbx = rdi;\n    rax = fcn_0040d3c0 (rdi, rsi);\n    rax = (int64_t) eax;\n    if (rbp <= rbx) {\n        goto label_0;\n    }\n    do {\n        rbx++;\n        edx = 0;\n        dl = (*((rbx - 1)) == 9) ? 1 : 0;\n        rax += rdx;\n    } while (rbp != rbx);\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405ef0",
            "funcStartAddr": "0x405ef0",
            "funcEndAddr": "0x405fb0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x405ef0 */\n#include <stdint.h>\n \nint64_t fcn_00405ef0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13 = rdx;\n    r12 = rdi;\n    errno_location ();\n    *(rax) = 0;\n    rbx = rax;\n    strxfrm (r12, rbp, r13);\n    edx = *(rbx);\n    if (edx == 0) {\n        return rax;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"string transformation failed\");\n    eax = 0;\n    error (0, *(rbx), rax);\n    edx = 5;\n    rax = dcgettext (0, \"set LC_ALL='C' to work around the problem\");\n    eax = 0;\n    error (0, 0, rax);\n    rax = fcn_0040f550 (0, 8, rbp);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"the untransformed string was %s\");\n    rcx = rbx;\n    eax = 0;\n    error (2, 0, rax);\n}\n"
        },
        {
            "funcName": "fcn_00405fb0",
            "funcStartAddr": "0x405fb0",
            "funcEndAddr": "0x4060a0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x405fb0 */\n#include <stdint.h>\n \nuint64_t fcn_00405fb0 (int64_t arg1) {\n    int64_t wstatus;\n    int64_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    edx = 0;\n    ebx = edi;\n    edi = 0xffffffff;\n    if (edi != 0) {\n        edi = ebx;\n    }\n    dl = (edi == 0) ? 1 : 0;\n    eax = waitpid (rdi, rsp + 0xc, rdx);\n    if (eax < 0) {\n        goto label_1;\n    }\n    if (eax == 0) {\n        goto label_2;\n    }\n    if (ebx <= 0) {\n        goto label_3;\n    }\nlabel_0:\n    eax = *((rsp + 0xc));\n    edx = (int32_t) ah;\n    eax &= 0x7f;\n    edx |= eax;\n    if (edx != 0) {\n        goto label_4;\n    }\n    *(0x0061c69c)--;\n    do {\nlabel_2:\n        eax = ebp;\n        return eax;\nlabel_3:\n        rsi = rsp + 0x10;\n        *((rsp + 0x18)) = eax;\n        rax = fcn_0040cde0 (*(0x0061c6a0));\n    } while (rax == 0);\n    *((rax + 0xc)) = 2;\n    goto label_0;\nlabel_4:\n    rax = fcn_0040f630 (4, *(0x0061c748));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"%s [-d] terminated abnormally\");\n    rcx = rbx;\n    eax = 0;\n    error (2, 0, rax);\nlabel_1:\n    rax = fcn_0040f630 (4, *(0x0061c748));\n    edx = 5;\n    rax = dcgettext (0, \"waiting for %s [-d]\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    error (2, *(rax), rbx);\n}\n"
        },
        {
            "funcName": "fcn_004060a0",
            "funcStartAddr": "0x4060a0",
            "funcEndAddr": "0x4060d0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x4060a0 */\n#include <stdint.h>\n \nuint64_t fcn_004060a0 (int64_t arg1) {\n    int64_t var_8h;\n    rdi = arg1;\n    ebx = edi;\n    *((rsp + 8)) = edi;\n    rsi = rsp;\n    rax = fcn_0040cde0 (*(0x0061c6a0));\n    if (rax != 0) {\n        *((rax + 0xc)) = 2;\n        fcn_00405fb0 (ebx);\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004060d0",
            "funcStartAddr": "0x4060d0",
            "funcEndAddr": "0x406185",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x4060d0 */\n#include <stdint.h>\n \nuint64_t fcn_004060d0 (int64_t arg1, size_t nbytes) {\n    int64_t var_4h;\n    rdi = arg1;\n    rsi = nbytes;\n    rdx = rsi;\n    ebx = edi;\n    do {\n        ecx = *(rdx);\n        rdx += 4;\n        eax = rcx - 0x1010101;\n        ecx = ~ecx;\n        eax &= ecx;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    ecx = eax;\n    ecx >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = ecx;\n    }\n    rcx = rdx + 2;\n    if ((eax & 0x8080) == 0) {\n        rdx = rcx;\n    }\n    edi = eax;\n    dil += al;\n    rdx -= 3;\n    rdx -= rsi;\n    write (2, rsi, rdx);\n    while (1) {\n        write (2, 0x416570, 1);\n        exit (2);\n        rax = fcn_0040d2b0 (ebx, rsp + 4, rdx);\n        rbx = rax;\n        eax = write (2, \": errno \", 8);\n        rdi = rbx;\n        rcx |= 0xffffffffffffffff;\n        eax = 0;\n        __asm (\"repne scasb al, byte [rdi]\");\n        rsi = rcx;\n        rsi = ~rsi;\n        write (2, rbx, rsi - 1);\n    }\n}\n"
        },
        {
            "funcName": "fcn_00406190",
            "funcStartAddr": "0x406190",
            "funcEndAddr": "0x4061e5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x406190 */\n#include <stdint.h>\n \nuint64_t fcn_00406190 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rdi = imp.__libc_start_main;\n    while (rax != 0) {\n        *((rbx + 0xc)) = 1;\n        rsi = rbx;\n        rax = fcn_0040cda0 (rdi);\n        if (rax == 0) {\n            goto label_0;\n        }\n        return rax;\n        rax = fcn_0040c600 (0x2f, 0, 0x405910, 0x405920, 0);\n        rdi = rax;\n        *(0x0061c6a0) = rax;\n    }\nlabel_0:\n    return fcn_00411460 ();\n}\n"
        },
        {
            "funcName": "fcn_004061f0",
            "funcStartAddr": "0x4061f0",
            "funcEndAddr": "0x40631d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x4061f0 */\n#include <stdint.h>\n \nint64_t fcn_004061f0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\nlabel_0:\n    rax = r8;\n    rax <<= 5;\n    rdx -= rax;\n    r13 = rcx;\n    r12 = r8;\n    rbx = rsi;\n    if (r9b == 0) {\n        goto label_1;\n    }\n    rax = *((rdi + 0x28));\n    r14 = rbp;\n    rdx = rax;\n    rdx >>= 1;\n    rcx = rdx;\n    rax -= rdx;\n    rcx <<= 5;\n    r14 -= rcx;\n    rcx = rdi + 0x10;\n    do {\n        *((rbx + 0x30)) = rax;\n        eax = *((rdi + 0x50));\n        esi = 0;\n        r15 = rbx + 0x80;\n        *((rbx + 0x38)) = rdi;\n        rdi = rbx + 0x58;\n        eax++;\n        *((rbx + 0x10)) = rbp;\n        *(rbx) = rbp;\n        *((rbx + 0x18)) = r14;\n        *((rbx + 8)) = r14;\n        *((rbx + 0x20)) = rcx;\n        *((rbx + 0x28)) = rdx;\n        *((rbx + 0x50)) = eax;\n        *((rbx + 0x54)) = 0;\n        pthread_mutex_init ();\n        if (r13 > 1) {\n            goto label_2;\n        }\n        *((rbx + 0x40)) = 0;\n        rax = r15;\n        *((rbx + 0x48)) = 0;\n        return rax;\nlabel_1:\n        rax = *((rdi + 0x30));\n        r14 = rbp;\n        rdx = rax;\n        rdx >>= 1;\n        rcx = rdx;\n        rax -= rdx;\n        rcx <<= 5;\n        r14 -= rcx;\n        rcx = rdi + 0x18;\n    } while (1);\nlabel_2:\n    *((rbx + 0x40)) = r15;\n    rcx >>= 1;\n    r9d = 1;\n    r13 -= rcx;\n    rax = fcn_004061f0 (rbx, r15, rbp, r13, r12);\n    goto label_0;\n    r8 = r12;\n    rcx = r13;\n    rdx = r14;\n    *((rbx + 0x48)) = rax;\n    rdi = rbx;\n    r9d = 0;\n    rsi = rax;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00406320",
            "funcStartAddr": "0x406320",
            "funcEndAddr": "0x40635c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x406320 */\n#include <stdint.h>\n \nvoid fcn_00406320 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r12 = rsi;\n    rbp = rdi + 8;\n    rbx = rdi;\n    rdi = rbp;\n    pthread_mutex_lock ();\n    fcn_0040d070 (*(rbx), r12);\n    *((r12 + 0x54)) = 1;\n    rdi = rbx + 0x30;\n    pthread_cond_signal ();\n    rdi = rbp;\n    return pthread_mutex_unlock ();\n}\n"
        },
        {
            "funcName": "fcn_00406360",
            "funcStartAddr": "0x406360",
            "funcEndAddr": "0x40646f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x406360 */\n#include <stdint.h>\n \nuint64_t fcn_00406360 (uint32_t arg1, uint32_t arg3) {\n    rdi = arg1;\n    rdx = arg3;\n    rax = rdi + rsi - 1;\n    esi = *(0x0061c424);\n    rcx = *(rdx);\n    r9 = *((rdx + 8));\n    if (esi == 0x80) {\n        goto label_5;\n    }\n    if (rax <= rdi) {\n        goto label_0;\n    }\n    r8 = rcx - 1;\n    if (rcx == 0) {\n        goto label_3;\n    }\n    do {\nlabel_1:\n        ecx = *(rdi);\n        if (esi == ecx) {\n            goto label_6;\n        }\n        rdi++;\n    } while (rax > rdi);\n    do {\nlabel_0:\n        rdi += r9;\n        if (rax > rdi) {\n            rax = rdi;\n        }\n        return rax;\nlabel_6:\n    } while (rax <= rdi);\n    rdi++;\n    if (rax <= rdi) {\n        goto label_0;\n    }\n    r8--;\n    if (r8 != -1) {\n        goto label_1;\n    }\nlabel_3:\n    if (*((rdx + 0x30)) != 0) {\n        goto label_7;\n    }\n    goto label_0;\nlabel_2:\n    rdi++;\n    if (rax <= rdi) {\n        goto label_0;\n    }\nlabel_7:\n    edx = *(rdi);\n    if (*((rdx + 0x61ca80)) != 0) {\n        goto label_2;\n    }\n    rdi += r9;\n    if (rax > rdi) {\n        rax = rdi;\n    }\n    return rax;\nlabel_5:\n    if (rax <= rdi) {\n        goto label_0;\n    }\n    rsi = rcx - 1;\n    if (rcx == 0) {\n        goto label_3;\n    }\n    do {\n        ecx = *(rdi);\n        ecx = *((rcx + 0x61ca80));\nlabel_4:\n        if (cl == 0) {\n            goto label_8;\n        }\n        rdi++;\n    } while (rax > rdi);\n    rdi += r9;\n    if (rax > rdi) {\n        rax = rdi;\n    }\n    return rax;\nlabel_8:\n    if (rax > rdi) {\n        goto label_9;\n    }\n    goto label_0;\n    do {\n        ecx = *(rdi);\n        ecx = *((rcx + 0x61ca80));\n        if (cl != 0) {\n            goto label_10;\n        }\nlabel_9:\n        rdi++;\n    } while (rax != rdi);\n    rdi = rax;\n    goto label_0;\nlabel_10:\n    rsi--;\n    if (rsi != -1) {\n        goto label_4;\n    }\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_00406470",
            "funcStartAddr": "0x406470",
            "funcEndAddr": "0x4065ad",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x406470 */\n#include <stdint.h>\n \nint64_t fcn_00406470 (int64_t arg1, uint32_t arg3) {\n    rdi = arg1;\n    rdx = arg3;\n    r9 = *((rdx + 0x18));\n    rcx = rdi + rsi - 1;\n    rax = rdi;\n    rsi = *((rdx + 0x10));\n    edi = *(0x0061c424);\n    rsi += 0;\n    if (edi == 0x80) {\n        goto label_3;\n    }\n    if (rcx <= rax) {\n        goto label_0;\n    }\n    r8 = rsi - 1;\n    if (rsi == 0) {\n        goto label_0;\n    }\n    do {\nlabel_1:\n        esi = *(rax);\n        if (edi == esi) {\n            goto label_4;\n        }\n        rax++;\n    } while (rcx > rax);\nlabel_0:\n    if (r9 == 0) {\n        goto label_5;\n    }\n    if (*((rdx + 0x31)) == 0) {\n        goto label_6;\n    }\n    if (rcx > rax) {\n        goto label_7;\n    }\n    goto label_6;\n    do {\n        rax++;\n        if (rcx == rax) {\n            goto label_8;\n        }\nlabel_7:\n        edx = *(rax);\n    } while (*((rdx + 0x61ca80)) != 0);\nlabel_6:\n    rax += r9;\n    if (rcx <= rax) {\n        rax = rcx;\n    }\n    return rax;\nlabel_4:\n    if (rcx <= rax) {\n        goto label_0;\n    }\n    rsi = r9;\n    rsi |= r8;\n    if (rsi == 0) {\n        goto label_5;\n    }\n    rax++;\n    if (rcx <= rax) {\n        goto label_0;\n    }\n    r8--;\n    if (r8 != -1) {\n        goto label_1;\n    }\n    goto label_0;\nlabel_5:\n    return rax;\nlabel_3:\n    if (rcx <= rax) {\n        goto label_0;\n    }\n    rdi = rsi - 1;\n    if (rsi == 0) {\n        goto label_0;\n    }\n    do {\n        esi = *(rax);\n        esi = *((rsi + 0x61ca80));\nlabel_2:\n        if (sil == 0) {\n            goto label_9;\n        }\n        rax++;\n    } while (rcx > rax);\n    goto label_0;\nlabel_9:\n    if (rcx > rax) {\n        goto label_10;\n    }\n    goto label_0;\n    do {\n        esi = *(rax);\n        esi = *((rsi + 0x61ca80));\n        if (sil != 0) {\n            goto label_11;\n        }\nlabel_10:\n        rax++;\n    } while (rcx != rax);\n    rax = rcx;\n    goto label_0;\nlabel_11:\n    rdi--;\n    if (rdi != -1) {\n        goto label_2;\n    }\n    goto label_0;\nlabel_8:\n    rax = rcx;\n    rax += r9;\n    if (rcx <= rax) {\n        rax = rcx;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004065b0",
            "funcStartAddr": "0x4065b0",
            "funcEndAddr": "0x4074c8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x4065b0 */\n#include <stdint.h>\n \nuint64_t fcn_004065b0 (char * arg_30h, int64_t arg_38h, int64_t arg_40h, char * arg_48h, void * arg_50h, char * s2, void * ptr, uint32_t arg_68h, int64_t arg_70h, int64_t arg_78h, int64_t arg_80h, int64_t arg_88h, int64_t arg_90h, int64_t arg_98h, char * * endptr, char * * s1, int64_t arg_c0h, void * arg_d0h, int64_t arg_e0h, int64_t arg_f0h, int64_t arg_100h, int64_t arg_110h, int64_t arg_120h, int64_t arg_130h, int64_t arg_140h, int64_t arg_150h, int64_t arg_160h, int64_t arg_168h, int64_t arg_16ch, int64_t arg_17ch, int64_t arg_18ch, int64_t arg_19ch, int64_t arg_1ach, int64_t arg_1bch, int64_t arg_1cch, int64_t arg_1dch, int64_t arg_1ech, int64_t arg_1fch, int64_t arg_204h, int64_t arg_210h, void * arg_11b0h, int64_t arg1, int64_t arg2) {\n    uint32_t var_18h;\n    int64_t var_26h;\n    int64_t var_27h;\n    char * n;\n    rdi = arg1;\n    rsi = arg2;\n    rbp = *((rdi + 0x10));\n    r15 = *((rsi + 0x10));\n    rax = rsp + 0x16c;\n    r14 = imp.__libc_start_main;\n    *((rsp + 0x38)) = rdi;\n    rbx = *((rdi + 0x18));\n    r10 = *((rsi + 0x18));\n    *((rsp + 0x40)) = rsi;\n    *((rsp + 0x70)) = rax;\n    r12 = r14;\n    r14 = rbp;\n    do {\nlabel_1:\n        rax = r10;\n        r13 = *((r12 + 0x28));\n        rbp = *((r12 + 0x20));\n        if (r14 >= rbx) {\n            rbx = r14;\n        }\n        if (r15 >= r10) {\n            rax = r15;\n        }\n        r11 = rbx;\n        r10 = rax;\n        r11 -= r14;\n        r10 -= r15;\n        if (*(0x0061cba1) == 0) {\n            rcx = 0xffffffffff0000;\n            if ((*((r12 + 0x30)) & rcx) == 0) {\n                goto label_31;\n            }\n        }\nlabel_9:\n        rcx = r13;\n        rcx |= rbp;\n        *((rsp + 0x18)) = rcx;\n        if (rcx != 0) {\n            goto label_32;\n        }\n        ecx = *(rbx);\n        *(rbx) = 0;\n        *((rsp + 0x26)) = cl;\n        ecx = *(rax);\n        *(rax) = 0;\n        *((rsp + 0x27)) = cl;\nlabel_7:\n        if (*((r12 + 0x32)) != 0) {\n            goto label_33;\n        }\n        if (*((r12 + 0x34)) != 0) {\n            goto label_34;\n        }\n        if (*((r12 + 0x35)) != 0) {\n            goto label_35;\n        }\n        if (*((r12 + 0x36)) != 0) {\n            goto label_36;\n        }\n        if (*((r12 + 0x33)) != 0) {\n            goto label_37;\n        }\n        if (*((r12 + 0x38)) == 0) {\n            goto label_38;\n        }\n        *((rsp + 0x30)) = r10;\n        *((rsp + 0x28)) = r11;\n        eax = fcn_0040b900 (r14, r15);\n        r11 = *((rsp + 0x28));\n        r10 = *((rsp + 0x30));\n        *(rsp) = eax;\n        goto label_4;\nlabel_8:\n        fp_stack++;\n        fp_stack++;\nlabel_4:\n        if (*((rsp + 0x18)) != 0) {\n            goto label_39;\n        }\n        eax = *((rsp + 0x26));\n        *((r14 + r11)) = al;\n        eax = *((rsp + 0x27));\n        *((r15 + r10)) = al;\nlabel_12:\n        eax = *(rsp);\n        if (eax != 0) {\n            goto label_29;\n        }\nlabel_3:\n        r12 = *((r12 + 0x40));\n        if (r12 == 0) {\n            goto label_25;\n        }\n        rax = *((rsp + 0x38));\n        r14 = *(rax);\n        rbp = *((rax + 8));\n        rax = *((rsp + 0x40));\n        r15 = *(rax);\n        r11 = *((rax + 8));\n        if (*((r12 + 0x10)) == -1) {\n            goto label_40;\n        }\n        rdx = r12;\n        rax = fcn_00406470 (r14, rbp);\n        rdx = r12;\n        rbx = rax;\n        rax = fcn_00406470 (r15, r11);\n        r10 = rax;\n        if (*(r12) == -1) {\n            goto label_41;\n        }\nlabel_0:\n        rdx = r12;\n        rax = fcn_00406360 (r14, rbp);\n        rdx = r12;\n        r14 = rax;\n        rax = fcn_00406360 (r15, r11);\n        r15 = rax;\n    } while (1);\nlabel_40:\n    rbx = r14 + rbp - 1;\n    r10 = r15 + r11 - 1;\n    if (*(r12) != -1) {\n        goto label_0;\n    }\nlabel_41:\n    if (*((r12 + 0x30)) == 0) {\n        goto label_1;\n    }\n    if (rbx > r14) {\n        goto label_42;\n    }\n    goto label_24;\n    do {\n        r14++;\n        if (rbx == r14) {\n            goto label_43;\n        }\nlabel_42:\n        eax = *(r14);\n    } while (*((rax + 0x61ca80)) != 0);\nlabel_24:\n    if (r10 <= r15) {\n        goto label_1;\n    }\nlabel_2:\n    eax = *(r15);\n    if (*((rax + 0x61ca80)) == 0) {\n        goto label_1;\n    }\n    r15++;\n    if (r10 != r15) {\n        goto label_2;\n    }\n    r15 = r10;\n    goto label_1;\nlabel_39:\n    free (*((rsp + 0x60)));\n    eax = *(rsp);\n    if (eax == 0) {\n        goto label_3;\n    }\nlabel_29:\n    r14 = r12;\n    if (*((r14 + 0x37)) != 0) {\n        goto label_44;\n    }\nlabel_25:\n    eax = *(rsp);\n    return rax;\nlabel_33:\n    eax = *(r14);\n    rdi = r14;\n    if (*((rax + 0x61ca80)) == 0) {\n        goto label_45;\n    }\n    do {\n        rdi++;\n        eax = *(rdi);\n    } while (*((rax + 0x61ca80)) != 0);\nlabel_45:\n    eax = *(r15);\n    rsi = r15;\n    if (*((rax + 0x61ca80)) == 0) {\n        goto label_46;\n    }\n    do {\n        rsi++;\n        eax = *(rsi);\n    } while (*((rax + 0x61ca80)) != 0);\nlabel_46:\n    *((rsp + 0x30)) = r10;\n    *((rsp + 0x28)) = r11;\n    eax = fcn_004106a0 (rdi, rsi, *(0x0061cba8), *(0x0061cba4));\n    r11 = *((rsp + 0x28));\n    r10 = *((rsp + 0x30));\n    *(rsp) = eax;\n    goto label_4;\nlabel_32:\n    rdi = r11 + r10 + 2;\n    if (rdi > 0xfa0) {\n        goto label_47;\n    }\n    rcx = rsp + 0x210;\n    *((rsp + 0x60)) = 0;\n    rsi = rcx + r11 + 1;\n    if (r11 == 0) {\n        goto label_48;\n    }\nlabel_13:\n    rdi = r14 + r11;\n    r8 = r14;\n    r11d = 0;\n    while (rbp != 0) {\n        if (*((rbp + rdx)) == 0) {\n            if (r13 != 0) {\n                goto label_49;\n            }\nlabel_5:\n            *((rcx + r11)) = al;\n            r11++;\n        }\n        r8++;\n        if (rdi == r8) {\n            goto label_50;\n        }\n        eax = *(r8);\n        edx = (int32_t) al;\n    }\nlabel_49:\n    eax = *((r13 + rdx));\n    goto label_5;\nlabel_50:\n    rax = rcx + r11;\n    *(rax) = 0;\n    if (r10 == 0) {\n        goto label_51;\n    }\nlabel_14:\n    rdi = r15 + r10;\n    r10d = 0;\n    while (rbp != 0) {\n        if (*((rbp + rdx)) == 0) {\n            if (r13 != 0) {\n                goto label_52;\n            }\nlabel_6:\n            *((rsi + r10)) = al;\n            r10++;\n        }\n        r15++;\n        if (rdi == r15) {\n            goto label_53;\n        }\n        eax = *(r15);\n        edx = (int32_t) al;\n    }\nlabel_52:\n    eax = *((r13 + rdx));\n    goto label_6;\nlabel_53:\n    rax = rsi + r10;\nlabel_15:\n    *(rax) = 0;\n    r15 = rsi;\n    r14 = rcx;\n    goto label_7;\nlabel_34:\n    *((rsp + 0x30)) = r10;\n    *((rsp + 0x28)) = r11;\n    strtold (r14, rsp + 0xa8);\n    ? = fp_stack[0];\n    fp_stack--;\n    rax = strtold (r15, rsp + 0xb0);\n    r11 = *((rsp + 0x28));\n    *(fp_stack--) = fp_stack[?];\n    r10 = *((rsp + 0x30));\n    if (r14 == *((rsp + 0xa8))) {\n        goto label_54;\n    }\n    if (r15 == *((rsp + 0xb0))) {\n        goto label_55;\n    }\n    fp_tmp_0 = fp_stack[1];\n    fp_stack[1] = fp_stack[0];\n    fp_stack[0] = fp_tmp_0;\n    if (fp_stack[0] > fp_stack[1]) {\n        goto label_56;\n    }\n    fp_tmp_1 = fp_stack[1];\n    fp_stack[1] = fp_stack[0];\n    fp_stack[0] = fp_tmp_1;\n    *(rsp) = 1;\n    if (fp_stack[0] > fp_stack[1]) {\n        goto label_8;\n    }\n    if (fp_stack[0] != fp_stack[1]) {\n        if (fp_stack[0] == fp_stack[1]) {\n            goto label_57;\n        }\n        fp_tmp_2 = fp_stack[1];\n        fp_stack[1] = fp_stack[0];\n        fp_stack[0] = fp_tmp_2;\n    } else {\n        fp_tmp_3 = fp_stack[1];\n        fp_stack[1] = fp_stack[0];\n        fp_stack[0] = fp_tmp_3;\n    }\n    __asm (\"fucompi st(0)\");\n    if (fp_stack[0] != fp_stack[1]) {\n        if (fp_stack[0] == fp_stack[1]) {\n            goto label_58;\n        }\n    }\n    __asm (\"fucompi st(0)\");\n    if (fp_stack[0] == fp_stack[1]) {\n        goto label_59;\n    }\n    if (fp_stack[0] != fp_stack[1]) {\n        goto label_59;\n    }\n    goto label_60;\nlabel_55:\n    fp_stack++;\n    fp_stack++;\nlabel_60:\n    *(rsp) = 1;\n    goto label_4;\nlabel_35:\n    eax = *(r14);\n    rbx = r14;\n    if (*((rax + 0x61ca80)) == 0) {\n        goto label_61;\n    }\n    do {\n        rbx++;\n        eax = *(rbx);\n    } while (*((rax + 0x61ca80)) != 0);\nlabel_61:\n    eax = *(r15);\n    if (*((rax + 0x61ca80)) == 0) {\n        goto label_62;\n    }\n    do {\n        rbp++;\n        eax = *(rbp);\n    } while (*((rax + 0x61ca80)) != 0);\nlabel_62:\n    *((rsp + 0x30)) = r10;\n    *((rsp + 0x28)) = r11;\n    eax = fcn_004059f0 (rbx);\n    r13d = eax;\n    eax = fcn_004059f0 (rbp);\n    r11 = *((rsp + 0x28));\n    r10 = *((rsp + 0x30));\n    r13d -= eax;\n    *(rsp) = r13d;\n    if (r13d != 0) {\n        goto label_4;\n    }\n    eax = fcn_004106a0 (rbx, rbp, *(0x0061cba8), *(0x0061cba4));\n    r11 = *((rsp + 0x28));\n    r10 = *((rsp + 0x30));\n    *(rsp) = eax;\n    goto label_4;\nlabel_31:\n    if (*((r12 + 0x38)) != 0) {\n        goto label_9;\n    }\n    if (rbp == 0) {\n        goto label_63;\n    }\n    rcx = r14;\n    r8 = r14;\n    if (r13 == 0) {\n        goto label_64;\n    }\nlabel_10:\n    if (rcx < rbx) {\n        edx = *(rcx);\n        if (*((rbp + rdx)) != 0) {\n            goto label_65;\n        }\n    }\n    if (r15 < rax) {\n        goto label_66;\n    }\n    goto label_67;\n    do {\n        r15++;\n        if (rax == r15) {\n            goto label_68;\n        }\nlabel_66:\n        edx = *(r15);\n    } while (*((rbp + rdx)) != 0);\n    if (rbx <= rcx) {\n        goto label_67;\n    }\n    if (rax <= r15) {\n        goto label_67;\n    }\n    edx = *(rcx);\n    esi = *(r15);\n    edx = *((r13 + rdx));\n    esi = *((r13 + rsi));\n    edx -= esi;\n    if (edx != 0) {\n        goto label_69;\n    }\n    r15++;\nlabel_65:\n    rcx++;\n    goto label_10;\nlabel_11:\n    if (rbx <= r8) {\n        goto label_70;\n    }\n    if (rax <= r15) {\n        goto label_70;\n    }\n    edx = *(r8);\n    ecx = *(r15);\n    edx -= ecx;\n    if (edx != 0) {\n        goto label_69;\n    }\n    r15++;\n    do {\n        r8++;\nlabel_64:\n        if (r8 >= rbx) {\n            goto label_71;\n        }\n        edx = *(r8);\n    } while (*((rbp + rdx)) != 0);\nlabel_71:\n    if (r15 < rax) {\n        goto label_72;\n    }\n    goto label_70;\n    do {\n        r15++;\n        if (rax == r15) {\n            goto label_73;\n        }\nlabel_72:\n        edx = *(r15);\n    } while (*((rbp + rdx)) != 0);\n    goto label_11;\nlabel_68:\n    r15 = rax;\nlabel_67:\nlabel_23:\n    dl = (rcx < rbx) ? 1 : 0;\n    al = (rax > r15) ? 1 : 0;\n    edx = (int32_t) dl;\n    eax = (int32_t) al;\n    edx -= eax;\n    *(rsp) = edx;\n    goto label_12;\nlabel_36:\n    *((rsp + 0x30)) = r10;\n    *((rsp + 0x28)) = r11;\n    eax = fcn_00405a40 (r14, 0);\n    ebx = eax;\n    eax = fcn_00405a40 (r15, 0);\n    r11 = *((rsp + 0x28));\n    r10 = *((rsp + 0x30));\n    ebx -= eax;\n    *(rsp) = ebx;\n    goto label_4;\nlabel_47:\n    *((rsp + 0x28)) = r10;\n    *(rsp) = r11;\n    rax = fcn_00411210 (rdi);\n    r11 = *(rsp);\n    r10 = *((rsp + 0x28));\n    rcx = rax;\n    *((rsp + 0x60)) = rax;\n    rsi = rcx + r11 + 1;\n    if (r11 != 0) {\n        goto label_13;\n    }\nlabel_48:\n    rax = rcx;\n    *(rax) = 0;\n    if (r10 != 0) {\n        goto label_14;\n    }\nlabel_51:\n    rax = rsi;\n    goto label_15;\nlabel_38:\n    if (r11 != 0) {\n        goto label_74;\n    }\n    eax = 0;\n    al = (r10 != 0) ? 1 : 0;\n    eax = -eax;\n    *(rsp) = eax;\n    goto label_4;\nlabel_37:\n    __asm (\"movdqa xmm8, xmmword [0x0061c600]\");\n    __asm (\"movdqa xmm7, xmmword [0x0061c610]\");\n    __asm (\"movdqa xmm6, xmmword [0x0061c620]\");\n    __asm (\"movdqa xmm5, xmmword [0x0061c630]\");\n    __asm (\"movdqa xmm4, xmmword [0x0061c640]\");\n    __asm (\"movdqa xmm3, xmmword [0x0061c650]\");\n    __asm (\"movups xmmword [rsp + 0x16c], xmm8\");\n    __asm (\"movdqa xmm2, xmmword [0x0061c660]\");\n    __asm (\"movdqa xmm1, xmmword [0x0061c670]\");\n    __asm (\"movups xmmword [rsp + 0x17c], xmm7\");\n    __asm (\"movdqa xmm0, xmmword [0x0061c680]\");\n    rdx = imp.__libc_start_main;\n    __asm (\"movups xmmword [rsp + 0x18c], xmm6\");\n    eax = imp.__libc_start_main;\n    __asm (\"movups xmmword [rsp + 0x19c], xmm5\");\n    __asm (\"movups xmmword [rsp + 0x1ac], xmm4\");\n    __asm (\"movups xmmword [rsp + 0x1bc], xmm3\");\n    __asm (\"movups xmmword [rsp + 0x1cc], xmm2\");\n    __asm (\"movups xmmword [rsp + 0x1dc], xmm1\");\n    __asm (\"movups xmmword [rsp + 0x1ec], xmm0\");\n    *((rsp + 0x1fc)) = rdx;\n    *((rsp + 0x204)) = eax;\n    *((rsp + 0xd0)) = xmm8;\n    *((rsp + 0xe0)) = xmm7;\n    *((rsp + 0xf0)) = xmm6;\n    *((rsp + 0x100)) = xmm5;\n    *((rsp + 0x110)) = xmm4;\n    *((rsp + 0x120)) = xmm3;\n    *((rsp + 0x130)) = xmm2;\n    *((rsp + 0x140)) = xmm1;\n    *((rsp + 0x150)) = xmm0;\n    *((rsp + 0x160)) = rdx;\n    *((rsp + 0x168)) = eax;\n    if (*(0x0061cba1) == 0) {\n        goto label_75;\n    }\n    rax = r14 + r11;\n    *(rsp) = 0;\n    r13 = rsp + 0x11b0;\n    *((rsp + 0x30)) = rax;\n    rax = r15 + r10;\n    *((rsp + 0x48)) = rax;\n    rax = r11 + r10;\n    rax *= 3;\n    *((rsp + 0x78)) = r14;\n    *((rsp + 0x50)) = 0;\n    *((rsp + 0x80)) = r12;\n    *((rsp + 0x90)) = r11;\n    *((rsp + 0x98)) = r10;\n    *((rsp + 0x68)) = rax;\n    eax = 0xfa0;\n    *((rsp + 0x28)) = r15;\n    *((rsp + 0x88)) = r15;\n    r15 = rax;\n    do {\nlabel_16:\n        if (*((rsp + 0x68)) > r15) {\n            goto label_76;\n        }\nlabel_17:\n        if (*((rsp + 0x30)) > rbp) {\n            goto label_77;\n        }\nlabel_18:\n        rcx = *((rsp + 0x28));\n        if (*((rsp + 0x48)) > rcx) {\n            goto label_78;\n        }\n        r12d = 0;\n        ebx = 0;\nlabel_27:\n        rax = r13 + rbx;\n        *((rsp + 0x58)) = rax;\n        if (*((rsp + 0x30)) <= rbp) {\n            goto label_79;\n        }\n        rax = strlen (rbp);\n        rcx = *((rsp + 0x28));\n        rbp = rbp + rax + 1;\n        if (*((rsp + 0x48)) > rcx) {\n            goto label_80;\n        }\nlabel_19:\n        if (*((rsp + 0x30)) <= rbp) {\n            rcx = *((rsp + 0x28));\n            if (*((rsp + 0x48)) <= rcx) {\n                goto label_81;\n            }\n        }\n        fcn_0040b360 (r13, rbx, rsp + 0xd0);\n        r14 = *((rsp + 0x58));\n        fcn_0040b360 (r14, r12, *((rsp + 0x70)));\n        ecx = *(rsp);\n    } while (ecx != 0);\n    rdx = r12;\n    rsi = r14;\n    rdi = r13;\n    if (rbx <= r12) {\n        rdx = rbx;\n    }\n    eax = memcmp (rdi, rsi, rdx);\n    *(rsp) = eax;\n    if (eax != 0) {\n        goto label_16;\n    }\n    eax = 0;\n    al = (rbx > r12) ? 1 : 0;\n    *(rsp) = eax;\n    if (*((rsp + 0x68)) <= r15) {\n        goto label_17;\n    }\nlabel_76:\n    rcx = *((rsp + 0x68));\n    rax = r15 * 3;\n    rdi = *((rsp + 0x50));\n    r13 = rsp + 0x11b0;\n    rax >>= 1;\n    if (rcx >= rax) {\n        rax = rcx;\n    }\n    r15 = rax;\n    free (rdi);\n    rax = malloc (r15);\n    rcx = rax;\n    *((rsp + 0x50)) = rax;\n    eax = 0xfa0;\n    if (rax == 0) {\n        r15 = rax;\n    }\n    if (rax != 0) {\n        r13 = rcx;\n    }\n    if (*((rsp + 0x30)) <= rbp) {\n        goto label_18;\n    }\nlabel_77:\n    fcn_00405ef0 (r13, rbp, r15);\n    rcx = *((rsp + 0x28));\n    rbx = rax + 1;\n    if (*((rsp + 0x48)) <= rcx) {\n        goto label_82;\n    }\n    if (r15 >= rbx) {\n        goto label_83;\n    }\nlabel_21:\n    fcn_00405ef0 (0, *((rsp + 0x28)), 0);\n    r12 = rax + 1;\n    r14 = r12 + rbx;\n    if (r15 >= rbx) {\n        goto label_84;\n    }\nlabel_26:\n    rax = 0x5555555555555554;\n    if (r14 <= rax) {\n        r14 *= 3;\n        r14 >>= 1;\n    }\n    free (*((rsp + 0x50)));\n    rax = fcn_00411210 (r14);\n    r13 = rax;\n    if (*((rsp + 0x30)) > rbp) {\n        goto label_85;\n    }\nlabel_22:\n    rax = r13 + rbx;\n    rcx = *((rsp + 0x28));\n    *((rsp + 0x58)) = rax;\n    if (*((rsp + 0x48)) <= rcx) {\n        if (*((rsp + 0x30)) > rbp) {\n            goto label_86;\n        }\n        *((rsp + 0x50)) = r13;\n        r14 = *((rsp + 0x78));\n        *((rsp + 0x28)) = r12;\n        r15 = *((rsp + 0x88));\n        r11 = *((rsp + 0x90));\n        r10 = *((rsp + 0x98));\n        r12 = *((rsp + 0x80));\nlabel_20:\n        *((rsp + 0x48)) = r10;\n        *((rsp + 0x30)) = r11;\n        rbp = rsp + 0xc0;\n        fcn_0040b360 (r13, rbx, rsp + 0xd0);\n        fcn_0040b250 (rsp + 0xd0, rsp + 0xb0, rdx, rcx);\n        fcn_0040b360 (*((rsp + 0x58)), *((rsp + 0x28)), *((rsp + 0x70)));\n        fcn_0040b250 (*((rsp + 0x70)), rbp, rdx, rcx);\n        eax = memcmp (rsp + 0xb0, rbp, 0x10);\n        r11 = *((rsp + 0x30));\n        r10 = *((rsp + 0x48));\n        if (eax != 0) {\n            goto label_87;\n        }\n        edx = *(rsp);\n        if (edx != 0) {\n            goto label_88;\n        }\n        goto label_89;\n    }\n    strxfrm (rax, rcx, r12);\n    if (*((rsp + 0x30)) > rbp) {\n        strlen (rbp);\n        rbp = rbp + rax + 1;\n    }\n    *((rsp + 0x50)) = r13;\n    r15 = r14;\n    do {\nlabel_80:\n        r14 = *((rsp + 0x28));\n        strlen (*((rsp + 0x28)));\n        rax = r14 + rax + 1;\n        *((rsp + 0x28)) = rax;\n        goto label_19;\nlabel_79:\n        rsi = *((rsp + 0x28));\n    } while (*((rsp + 0x48)) > rsi);\nlabel_81:\n    *((rsp + 0x28)) = r12;\n    r14 = *((rsp + 0x78));\n    r15 = *((rsp + 0x88));\n    r11 = *((rsp + 0x90));\n    r10 = *((rsp + 0x98));\n    r12 = *((rsp + 0x80));\n    goto label_20;\nlabel_86:\n    r15 = r14;\n    rax = strlen (rbp);\n    *((rsp + 0x50)) = r13;\n    rbp = rbp + rax + 1;\n    goto label_19;\nlabel_78:\n    rdi = r13;\n    rdx = r15;\n    ebx = 0;\n    goto label_21;\nlabel_85:\n    rax = strxfrm (rax, rbp, rbx);\n    goto label_22;\nlabel_73:\n    r15 = rax;\nlabel_70:\n    goto label_23;\nlabel_43:\n    r14 = rbx;\n    goto label_24;\nlabel_54:\n    fp_stack++;\n    fp_stack++;\n    eax = 0;\n    al = (*((rsp + 0xb0)) != r15) ? 1 : 0;\n    eax = -eax;\n    *(rsp) = eax;\n    goto label_4;\nlabel_57:\n    fp_stack++;\n    fp_stack++;\n    *(rsp) = 0;\n    goto label_4;\nlabel_74:\n    *(rsp) = 1;\n    if (r10 == 0) {\n        goto label_4;\n    }\n    *((rsp + 0x30)) = r10;\n    *((rsp + 0x28)) = r11;\n    eax = fcn_004115c0 (r14, r11 + 1, r15, r10 + 1);\n    r10 = *((rsp + 0x30));\n    r11 = *((rsp + 0x28));\n    *(rsp) = eax;\n    goto label_4;\nlabel_75:\n    rsi = r11;\n    *(rsp) = r10;\n    *((rsp + 0x30)) = r11;\n    rbx = rsp + 0xc0;\n    fcn_0040b360 (r14, rsi, rsp + 0xd0);\n    fcn_0040b250 (rsp + 0xd0, rsp + 0xb0, rdx, rcx);\n    r10 = *(rsp);\n    rbp = *((rsp + 0x70));\n    rsi = r10;\n    *((rsp + 0x28)) = r10;\n    fcn_0040b360 (r15, rsi, rbp);\n    fcn_0040b250 (rbp, rbx, rdx, rcx);\n    eax = memcmp (rsp + 0xb0, rbx, 0x10);\n    r10 = *((rsp + 0x28));\n    r11 = *((rsp + 0x30));\n    *(rsp) = eax;\n    if (eax != 0) {\n        goto label_90;\n    }\n    *((rsp + 0x28)) = r10;\n    rbx = r11;\n    r13 = r14;\n    *((rsp + 0x58)) = r15;\n    *((rsp + 0x50)) = 0;\nlabel_89:\n    rbp = *((rsp + 0x28));\n    rsi = *((rsp + 0x58));\n    rdi = r13;\n    *((rsp + 0x48)) = r10;\n    *((rsp + 0x30)) = r11;\n    rdx = rbp;\n    if (rbx <= rbp) {\n        rdx = rbx;\n    }\n    eax = memcmp (rdi, rsi, rdx);\n    r11 = *((rsp + 0x30));\n    r10 = *((rsp + 0x48));\n    *(rsp) = eax;\n    if (eax != 0) {\n        goto label_88;\n    }\n    eax = 0;\n    al = (rbx > rbp) ? 1 : 0;\nlabel_87:\n    *(rsp) = eax;\n    do {\nlabel_88:\n        *((rsp + 0x30)) = r10;\n        *((rsp + 0x28)) = r11;\n        rax = free (*((rsp + 0x50)));\n        r11 = *((rsp + 0x28));\n        r10 = *((rsp + 0x30));\n        goto label_4;\nlabel_90:\n        *((rsp + 0x50)) = 0;\n    } while (1);\n    do {\nlabel_28:\n        if (r14 >= rbx) {\n            goto label_91;\n        }\n        if (r15 >= rax) {\n            goto label_91;\n        }\n        r14++;\n        r15++;\n        edx = *((r14 - 1));\n        ecx = *((r15 - 1));\n        edx = *((r13 + rdx));\n        ecx = *((r13 + rcx));\n        edx -= ecx;\n    } while (edx == 0);\nlabel_69:\n    *(rsp) = edx;\n    r14 = r12;\nlabel_30:\n    if (*((r14 + 0x37)) == 0) {\n        goto label_25;\n    }\nlabel_44:\n    rsp = -rsp;\n    goto label_25;\nlabel_82:\n    r14 = rbx;\n    r12d = 0;\n    if (r15 < rbx) {\n        goto label_26;\n    }\nlabel_84:\n    if (r15 < r14) {\n        goto label_26;\n    }\n    goto label_27;\nlabel_63:\n    if (r11 == 0) {\n        goto label_92;\n    }\n    if (r10 == 0) {\n        goto label_93;\n    }\n    if (r13 != 0) {\n        goto label_28;\n    }\n    rdx = r10;\n    rsi = r15;\n    rdi = r14;\n    if (r11 <= r10) {\n        rdx = r11;\n    }\n    *((rsp + 0x28)) = r10;\n    *((rsp + 0x18)) = r11;\n    eax = memcmp (rdi, rsi, rdx);\n    *(rsp) = eax;\n    if (eax != 0) {\n        goto label_29;\n    }\n    r11 = *((rsp + 0x18));\n    r10 = *((rsp + 0x28));\nlabel_91:\n    if (r11 >= r10) {\n        al = (r11 != r10) ? 1 : 0;\n        eax = (int32_t) al;\n        *(rsp) = eax;\n        goto label_12;\nlabel_59:\n        *((rsp + 0x30)) = r10;\n        *((rsp + 0x28)) = r11;\n        strtold (r14, 0);\n        ? = fp_stack[0];\n        fp_stack--;\n        strtold (r15, 0);\n        ? = fp_stack[0];\n        fp_stack--;\n        eax = memcmp (rsp + 0xd0, rsp + 0x11b0, 0x10);\n        r11 = *((rsp + 0x28));\n        r10 = *((rsp + 0x30));\n        *(rsp) = eax;\n        goto label_4;\nlabel_92:\n        eax = 0;\n        al = (r10 != 0) ? 1 : 0;\n        eax = -eax;\n        *(rsp) = eax;\n        goto label_12;\n    }\n    r14 = r12;\n    *(rsp) = 0xffffffff;\n    goto label_30;\nlabel_56:\n    fp_stack++;\n    fp_stack++;\n    goto label_94;\nlabel_58:\n    fp_stack++;\nlabel_94:\n    *(rsp) = 0xffffffff;\n    goto label_4;\nlabel_93:\n    r14 = r12;\n    *(rsp) = 1;\n    goto label_30;\nlabel_83:\n    rdx = r15;\n    rdi = r13 + rbx;\n    rdx -= rbx;\n    goto label_21;\n}\n"
        },
        {
            "funcName": "fcn_004074d0",
            "funcStartAddr": "0x4074d0",
            "funcEndAddr": "0x407847",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x4074d0 */\n#include <stdint.h>\n \nint64_t fcn_004074d0 (char * arg1, int64_t arg2, char * arg3) {\n    int64_t var_8h;\n    uint32_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    char * var_28h;\n    int64_t var_30h;\n    int64_t var_37h;\n    char * var_38h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (*((rdi + 0x30)) != 0) {\n        goto label_8;\n    }\n    r9 = *((rdi + 8));\n    rbx = imp.__libc_start_main;\n    rbp = *(0x0061c428);\n    r15 = *(rdi);\n    *((rsp + 0x20)) = rsi;\n    esi = *(0x0061c500);\n    *((rsp + 0x38)) = rdx;\n    rdx = *((rdi + 0x20));\n    *((rsp + 0x28)) = rdi;\n    *((rsp + 0x37)) = sil;\n    rsi = *((rdi + 0x28));\n    *(rsp) = rsi;\n    if (r9 != rdx) {\n        goto label_9;\n    }\n    rax = *((rdi + 0x10));\nlabel_3:\n    rsi = *(rsp);\n    rbp -= 0x22;\n    rsi++;\n    *((rsp + 0x10)) = rsi;\n    rsi = *((rsp + 0x28));\n    r12 = *((rsi + 0x18));\n    esi = *((rsp + 0x37));\n    *((rsp + 0x30)) = esi;\nlabel_5:\n    r12 += r15;\n    rdx = rax;\n    r14 = r15 + r9;\n    rdx <<= 5;\n    r13 = r12;\n    r13 -= rdx;\n    rdx = *(rsp);\n    rdx *= rax;\n    r12 -= rdx;\n    r12 -= r14;\n    if (rax == 0) {\n        goto label_10;\n    }\n    r8 = *((r13 + 8));\n    r8 += *(r13);\n    r15 = r14;\n    r14 = r13;\n    r13 = r8;\nlabel_4:\n    if (r12 <= *((rsp + 0x10))) {\n        goto label_11;\n    }\n    rax = r12 - 1;\n    edx = 0;\n    rcx = *((rsp + 0x20));\n    rdi = r15;\n    rax = *(rdx:rax) / rsp + 0x10;\n    rdx = *(rdx:rax) % rsp + 0x10;\n    esi = 1;\n    rdx = rax;\n    *((rsp + 0x18)) = rax;\n    rax = fread_unlocked ();\n    r11 = *((rsp + 0x18));\n    rsi = r15 + rax;\n    r12 -= rax;\n    *((rsp + 8)) = rsi;\n    if (r11 == rax) {\n        goto label_12;\n    }\n    rax = *((rsp + 0x20));\n    eax = *(rax);\n    if ((al & 0x20) != 0) {\n        goto label_13;\n    }\n    if ((al & 0x10) == 0) {\n        goto label_12;\n    }\n    rax = *((rsp + 0x28));\n    rdi = *((rsp + 0x28));\n    *((rax + 0x30)) = 1;\n    rax = *((rsp + 8));\n    if (*(rdi) == rax) {\n        goto label_14;\n    }\n    if (r13 == rax) {\n        goto label_12;\n    }\n    edi = *((rsp + 0x37));\n    if (*((rax - 1)) == dil) {\n        goto label_12;\n    }\n    *(rax) = dil;\n    rax++;\n    r10 = r15;\n    *((rsp + 8)) = rax;\n    r15 = rax;\n    goto label_6;\nlabel_0:\n    rdx = rbx;\n    rax = fcn_00406360 (r13, r11);\n    *((r14 + 0x10)) = rax;\n    do {\nlabel_1:\n        r13 = r10;\nlabel_6:\n        rdx -= r10;\n        rax = fcn_00413030 (r10, *((rsp + 0x30)), r15);\n        if (rax == 0) {\n            goto label_15;\n        }\n        r10 = rax + 1;\n        r14 -= 0x20;\n        *(rax) = 0;\n        r11 = r10;\n        *(r14) = r13;\n        r11 -= r13;\n        *((r14 + 8)) = r11;\n        if (rbp < r11) {\n        }\n        r12 -= *(rsp);\n    } while (rbx == 0);\n    if (*((rbx + 0x10)) != -1) {\n        rdx = rbx;\n        rax = fcn_00406470 (r13, r11);\n    }\n    *((r14 + 0x18)) = rax;\n    if (*(rbx) != -1) {\n        goto label_0;\n    }\n    if (*((rbx + 0x30)) != 0) {\n        goto label_16;\n    }\nlabel_2:\n    *((r14 + 0x10)) = r13;\n    goto label_1;\n    do {\n        r13++;\nlabel_16:\n        eax = *(r13);\n    } while (*((rax + 0x61ca80)) != 0);\n    goto label_2;\nlabel_9:\n    r9 -= rdx;\n    memmove (r15, r15 + r9, rdx);\n    rax = *((rsp + 0x28));\n    r9 = *((rax + 0x20));\n    r15 = *(rax);\n    *((rax + 0x10)) = 0;\n    *((rax + 8)) = r9;\n    eax = 0;\n    goto label_3;\nlabel_15:\n    rax = *((rsp + 0x28));\n    r15 = *((rsp + 8));\n    if (*((rax + 0x30)) == 0) {\n        goto label_4;\n    }\nlabel_11:\n    rcx = *((rsp + 0x28));\n    rax = r13;\n    r13 = r14;\n    r14 = r15;\n    r15 = rax;\n    rax = r14;\n    rdi = *(rcx);\n    rdx = *((rcx + 0x18));\n    rax -= rdi;\n    *((rcx + 8)) = rax;\n    rax = rdi + rdx;\n    rax -= r13;\n    rax >>= 5;\n    *((rcx + 0x10)) = rax;\n    if (rax != 0) {\n        goto label_17;\n    }\n    rax = rdx;\n    rax >>= 5;\n    if (rdi == 0) {\n        goto label_18;\n    }\n    rsi = 0x555555555555553f;\n    if (rdx > rsi) {\n        goto label_19;\n    }\n    rdx >>= 6;\n    r12 = rax + rdx + 1;\n    r12 <<= 5;\n    do {\nlabel_7:\n        rax = fcn_00411270 (rdi, r12);\n        r15 = rax;\n        rax = *((rsp + 0x28));\n        *(rax) = r15;\n        r9 = *((rax + 8));\n        *((rax + 0x18)) = r12;\n        rax = *((rax + 0x10));\n        goto label_5;\nlabel_12:\n        r10 = r15;\n        r15 = *((rsp + 8));\n        goto label_6;\nlabel_10:\n        rax = r15;\n        r15 = r14;\n        r14 = r13;\n        r13 = rax;\n        goto label_4;\nlabel_18:\n        if (rdx <= 0x1f) {\n            goto label_20;\n        }\n        rax <<= 5;\n        if (rax < 0) {\n            goto label_19;\n        }\n        r12 = rax;\n    } while (1);\nlabel_14:\n    eax = 0;\n    return rax;\nlabel_20:\n    r12d = 0x80;\n    goto label_7;\nlabel_8:\n    eax = 0;\n    return rax;\nlabel_17:\n    r9 = r14;\n    rbp += 0x22;\n    eax = 1;\n    r9 -= r15;\n    *(0x0061c428) = rbp;\n    *((rcx + 0x20)) = r9;\n    return rax;\nlabel_13:\n    edx = 5;\n    rax = dcgettext (0, \"read failed\");\n    fcn_00405dd0 (rax, *((rsp + 0x38)));\nlabel_19:\n    return fcn_00411460 ();\n}\n"
        },
        {
            "funcName": "fcn_00407880",
            "funcStartAddr": "0x407880",
            "funcEndAddr": "0x407890",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x407880 */\n#include <stdint.h>\n \nvoid fcn_00407880 (uint32_t arg1) {\n    rdi = arg1;\n    rsi = rdi + 8;\n    edx = 0;\n    edi = 2;\n    return pthread_sigmask ();\n}\n"
        },
        {
            "funcName": "fcn_00407920",
            "funcStartAddr": "0x407920",
            "funcEndAddr": "0x407a2d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x407920 */\n#include <stdint.h>\n \nuint64_t fcn_00407920 (uint32_t arg1) {\n    int64_t var_8h;\n    rdi = arg1;\n    r13d = 0x61c6a8;\n    rbx = imp.__libc_start_main;\n    rax = rbx + 0xd;\n    if (rdi == rax) {\n        goto label_2;\n    }\n    rax = *(rbx);\n    rdx = rax + 0xd;\n    if (rdx == rbp) {\n        goto label_3;\n    }\n    do {\n        rbx = rax;\n        rax = *(rbx);\n        rdx = rax + 0xd;\n    } while (rdx != rbp);\nlabel_3:\n    r13 = rbx;\n    rbx = rax;\nlabel_2:\n    if (*((rbx + 0xc)) == 1) {\n        goto label_4;\n    }\nlabel_1:\n    rdx = rsp + 8;\n    esi = 0x61c6c0;\n    edi = 0;\n    r12 = *(rbx);\n    eax = pthread_sigmask ();\n    rsp = (eax == 0) ? 1 : 0;\n    eax = unlink (rbp);\n    r14d = eax;\n    rax = errno_location ();\n    r15d = *(rax);\n    *(r13) = r12;\n    if (*(rsp) != 0) {\n        goto label_5;\n    }\n    if (r14d != 0) {\n        goto label_6;\n    }\n    do {\n        if (r12 == 0) {\n            goto label_7;\n        }\nlabel_0:\n        free (rbx);\n        return rax;\nlabel_5:\n        fcn_00407880 (rsp);\n    } while (r14d == 0);\nlabel_6:\n    rdx = rbp;\n    rax = fcn_0040f700 (0, 3);\n    edx = 5;\n    rax = dcgettext (0, \"warning: cannot remove: %s\");\n    rcx = rbp;\n    eax = 0;\n    error (0, r15d, rax);\n    if (r12 != 0) {\n        goto label_0;\n    }\nlabel_7:\n    *(0x0061c418) = r13;\n    goto label_0;\nlabel_4:\n    fcn_004060a0 (*((rbx + 8)));\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00407a30",
            "funcStartAddr": "0x407a30",
            "funcEndAddr": "0x407bf4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x407a30 */\n#include <stdint.h>\n \nuint64_t fcn_00407a30 (uint32_t arg1, int64_t arg2) {\n    int64_t var_8h;\n    int64_t var_14h;\n    uint32_t fildes;\n    uint32_t var_20h;\n    int64_t var_28h;\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rsi;\n    *((rsp + 0x18)) = rdi;\n    eax = fcn_0040da00 (rdi, 0x80000);\n    if (eax < 0) {\n        goto label_5;\n    }\n    eax = *(0x0061c420);\n    eax++;\n    if (eax < *(0x0061c69c)) {\n        goto label_6;\n    }\nlabel_3:\n    rax = errno_location ();\n    rbx--;\n    r14 = rsp + 0x28;\n    xmm3 = *(0x00416a30);\n    *((rsp + 8)) = xmm3;\n    goto label_7;\nlabel_0:\n    *(0x0061c6a8) = r12;\n    if (*((rsp + 0x20)) != 0) {\n        goto label_8;\n    }\nlabel_1:\n    *(rbp) = r15d;\n    if (eax >= 0) {\n        goto label_9;\n    }\n    if (r15d != 0xb) {\n        goto label_10;\n    }\n    xmm0 = *((rsp + 8));\n    fcn_00411620 ();\n    xmm2 = *((rsp + 8));\n    __asm (\"movapd xmm1, xmm2\");\n    __asm (\"addsd xmm1, xmm2\");\n    *((rsp + 8)) = xmm1;\n    do {\n        eax = imp.__libc_start_main;\n        if (eax <= 0) {\n            goto label_11;\n        }\n        eax = fcn_00405fb0 (0);\n    } while (eax != 0);\nlabel_11:\n    rbx--;\n    if (rbx == -1) {\n        goto label_12;\n    }\nlabel_7:\n    edi = 0;\n    rdx = r14;\n    esi = 0x61c6c0;\n    eax = pthread_sigmask ();\n    r12 = imp.__libc_start_main;\n    *(0x0061c6a8) = 0;\n    rsp + 0x20 = (eax == 0) ? 1 : 0;\n    eax = fork ();\n    r15d = *(rbp);\n    r13d = eax;\n    if (eax != 0) {\n        goto label_0;\n    }\n    if (*((rsp + 0x20)) == 0) {\n        goto label_13;\n    }\nlabel_8:\n    *((rsp + 0x14)) = eax;\n    fcn_00407880 (rsp + 0x20);\n    eax = *((rsp + 0x14));\n    goto label_1;\n    if (*((rsp + 0x20)) == 0) {\nlabel_9:\n        goto label_13;\n    }\n    *(0x0061c69c)++;\n    do {\nlabel_2:\n        eax = r13d;\n        return rax;\nlabel_12:\n        r15d = *(rbp);\nlabel_10:\n        rbx = *((rsp + 0x18));\n        close (*(rbx));\n        close (*((rbx + 4)));\n        *(rbp) = r15d;\n    } while (1);\nlabel_13:\n    r13d = 0;\n    close (0);\n    close (1);\n    goto label_2;\nlabel_6:\n    fcn_00405fb0 (0xffffffff);\nlabel_4:\n    edx = imp.__libc_start_main;\n    if (edx <= 0) {\n        goto label_3;\n    }\n    eax = fcn_00405fb0 (0);\n    if (eax == 0) {\n        goto label_3;\n    }\n    goto label_4;\nlabel_5:\n    r13d = 0xffffffff;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_00407c00",
            "funcStartAddr": "0x407c00",
            "funcEndAddr": "0x407cd0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x407c00 */\n#include <stdint.h>\n \nuint64_t fcn_00407c00 (int64_t arg1, uint32_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r12 = rdx;\n    rbx = rdi;\n    eax = fcn_00411b40 (rdi, rsp, 0xa, rsp + 8, 0x416571);\n    if (eax > 4) {\n        goto label_0;\n    }\n    /* switch table (5 cases) at 0x4140d0 */\n    rax = *((rsp + 8));\n    *(rbp) = rax;\n    do {\nlabel_0:\n        rax = *(rsp);\n        return rax;\n        *(rbp) = 0xffffffffffffffff;\n    } while (1);\n    if (r12 == 0) {\n        eax = 0;\n        return rax;\n    }\n    rax = fcn_0040f880 (rbx);\n    edx = 5;\n    rax = dcgettext (0, r12);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"%s: invalid count at start of %s\");\n    r8 = rbp;\n    rcx = rbx;\n    eax = 0;\n    error (2, 0, rax);\n}\n"
        },
        {
            "funcName": "fcn_00407cd0",
            "funcStartAddr": "0x407cd0",
            "funcEndAddr": "0x407dcc",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x407cd0 */\n#include <stdint.h>\n \nuint64_t fcn_00407cd0 (uint32_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rdi;\n    eax = *(rsi);\n    if (al != 0x72) {\n        if (al != 0x77) {\n            goto label_1;\n        }\n        if (rdi != 0) {\n            esi = 0;\n            edi = 1;\n            eax = ftruncate ();\n            if (eax != 0) {\n                goto label_2;\n            }\n        }\n        rbx = stdout;\n        rax = rbx;\n        return rax;\n    }\n    edi = 0x41814a;\n    ecx = 2;\n    rsi = rbx;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (eax > 0) ? 1 : 0;\n    if (al != 0) {\n        goto label_3;\n    }\n    *(0x0061c758) = 1;\n    rbx = stdin;\n    do {\nlabel_0:\n        fcn_0040b800 (*(obj.stdin), 2);\n        rax = rbx;\n        return rax;\nlabel_3:\n        eax = 0;\n        ebx = 0;\n        eax = open (rbx, 0x80000, rdx);\n    } while (eax < 0);\n    rsi = rbp;\n    edi = eax;\n    rax = fdopen ();\n    rbx = rax;\n    goto label_0;\nlabel_2:\n    rdx = rbx;\n    rax = fcn_0040f700 (0, 3);\n    edx = 5;\n    rax = dcgettext (0, \"%s: error truncating\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    error (2, *(rax), rbx);\nlabel_1:\n    return assert_fail (\"!\\\"unexpected mode passed to stream_open\\\", \"src/sort.c\", 0x3cc, \"stream_open\");\n}\n"
        },
        {
            "funcName": "fcn_00407dd0",
            "funcStartAddr": "0x407dd0",
            "funcEndAddr": "0x407df0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x407dd0 */\n#include <stdint.h>\n \nuint64_t fcn_00407dd0 (char * arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    edx = 5;\n    rax = dcgettext (0, \"open failed\");\n    return fcn_00405dd0 (rax, rbx);\n}\n"
        },
        {
            "funcName": "fcn_00407df0",
            "funcStartAddr": "0x407df0",
            "funcEndAddr": "0x407e70",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x407df0 */\n#include <stdint.h>\n \nuint64_t fcn_00407df0 (int64_t arg1, char * arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rdi;\n    eax = fileno (rdi);\n    if (eax == 0) {\n        goto label_1;\n    }\n    if (eax == 1) {\n        goto label_2;\n    }\n    eax = fcn_00411f80 (rbx);\n    if (eax != 0) {\n        goto label_3;\n    }\n    do {\nlabel_0:\n        return eax;\nlabel_1:\n    } while ((*(rbx) & 0x10) == 0);\n    rdi = rbx;\n    void (*0x402900)() ();\nlabel_2:\n    rdi = rbx;\n    eax = fflush_unlocked ();\n    if (eax == 0) {\n        goto label_0;\n    }\n    edx = 5;\n    esi = \"fflush failed\";\n    goto label_4;\nlabel_3:\n    edx = 5;\nlabel_4:\n    rax = dcgettext (0, \"close failed\");\n    rax = fcn_00405dd0 (rax, rbp);\n}\n"
        },
        {
            "funcName": "fcn_00407e70",
            "funcStartAddr": "0x407e70",
            "funcEndAddr": "0x4082a0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x407e70 */\n#include <stdint.h>\n \nuint64_t fcn_00407e70 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r14 = rdx;\n    rbx = *(rdi);\n    r15 = *((rdi + 8));\n    r12 = rbx + r15;\n    while (*(0x0061c740) == 0) {\n        eax = *(0x0061c500);\n        rcx = rbp;\n        rdx = r15;\n        rdi = rbx;\n        esi = 1;\n        *((r12 - 1)) = al;\n        rax = fwrite_unlocked ();\n        if (r15 != rax) {\n            goto label_13;\n        }\n        *((r12 - 1)) = 0;\nlabel_3:\n        return rax;\n    }\n    r13 = rdi;\n    if (rbx < r12) {\n        goto label_14;\n    }\n    goto label_15;\n    do {\n        esi = (int32_t) al;\n        if (r12 == rbx) {\n            goto label_16;\n        }\nlabel_2:\n        rdx = *((rbp + 0x28));\n        if (*((rbp + 0x30)) <= rdx) {\n            goto label_17;\n        }\nlabel_0:\n        rcx = rdx + 1;\n        *((rbp + 0x28)) = rcx;\n        *(rdx) = al;\nlabel_1:\n        if (r12 == rbx) {\n            goto label_18;\n        }\nlabel_14:\n        rbx++;\n        eax = *((rbx - 1));\n    } while (al != 9);\n    esi = 0x3e;\n    eax = 0x3e;\n    rdx = *((rbp + 0x28));\n    if (*((rbp + 0x30)) > rdx) {\n        goto label_0;\n    }\nlabel_17:\n    esi = (int32_t) sil;\n    rdi = rbp;\n    eax = overflow ();\n    if (eax != 0xffffffff) {\n        goto label_1;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"write failed\");\n    rax = fcn_00405dd0 (rax, 0);\nlabel_16:\n    esi = 0xa;\n    eax = 0xa;\n    goto label_2;\nlabel_18:\n    rbx = *(r13);\n    r15 = *((r13 + 8));\nlabel_15:\n    r12 = imp.__libc_start_main;\n    r14 = rbx + r15 - 1;\n    if (r12 == 0) {\n        goto label_19;\n    }\nlabel_4:\n    r10 = *(r12);\n    r11 = *((r12 + 0x10));\n    if (r10 == -1) {\n        goto label_20;\n    }\n    rdx = r12;\n    rax = fcn_00406360 (rbx, r15);\n    if (r11 != -1) {\nlabel_10:\n        rdx = r12;\n        rax = fcn_00406470 (rbx, r15);\n        r14 = rax;\nlabel_11:\n        if (*((r12 + 0x30)) == 0) {\n            goto label_21;\n        }\n        if (r10 == -1) {\n            goto label_22;\n        }\n    }\nlabel_21:\n    if (*((r12 + 0x36)) == 0) {\n        rax = 0xffff00ff0000;\n        if ((*((r12 + 0x30)) & rax) == 0) {\n            goto label_5;\n        }\n    }\nlabel_22:\n    r15d = *(r14);\n    *(r14) = 0;\n    eax = *(rbp);\n    if (*((rax + 0x61ca80)) == 0) {\n        goto label_23;\n    }\n    do {\n        rbp++;\n        eax = *(rbp);\n    } while (*((rax + 0x61ca80)) != 0);\nlabel_23:\n    *(rsp) = rbp;\n    if (rbp > r14) {\n        goto label_24;\n    }\n    if (*((r12 + 0x36)) != 0) {\n        goto label_25;\n    }\n    if (*((r12 + 0x34)) != 0) {\n        goto label_26;\n    }\n    rax = 0xff0000ff0000;\n    if ((*((r12 + 0x30)) & rax) == 0) {\n        goto label_24;\n    }\n    rax = rbp;\n    if (rbp < r14) {\n        eax = 0;\n        al = (*(rbp) == 0x2d) ? 1 : 0;\n        rax += rbp;\n    }\n    *((rsp + 8)) = rax;\n    al = fcn_00405930 (rsp + 8);\n    if (al > 0x2f) {\n        rax = *((rsp + 8));\n        if (*((r12 + 0x35)) != 0) {\n            goto label_27;\n        }\nlabel_12:\n        *(rsp) = rax;\n    }\nlabel_8:\n    *(r14) = r15b;\n    r14 = *(rsp);\nlabel_5:\n    rax = fcn_00405eb0 (rbx, rbp);\n    r15 = rax;\n    rax = fcn_00405eb0 (rbp, r14);\n    rbx = rax;\n    while (r15 != -1) {\n        rdi = stdout;\n        rax = *((rdi + 0x28));\n        if (rax >= *((rdi + 0x30))) {\n            goto label_28;\n        }\n        rcx = rax + 1;\n        *((rdi + 0x28)) = rcx;\n        *(rax) = 0x20;\nlabel_6:\n        r15--;\n    }\n    if (rbx == 0) {\n        goto label_29;\n    }\n    do {\n        rdi = stdout;\n        rax = *((rdi + 0x28));\n        if (rax >= *((rdi + 0x30))) {\n            goto label_30;\n        }\n        rdx = rax + 1;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = 0x5f;\nlabel_7:\n        rbx--;\n    } while (rbx != 0);\n    rdi = stdout;\n    rax = *((rdi + 0x28));\n    if (rax >= *((rdi + 0x30))) {\n        goto label_31;\n    }\n    rdx = rax + 1;\n    *((rdi + 0x28)) = rdx;\n    *(rax) = 0xa;\nlabel_9:\n    if (r12 == 0) {\n        goto label_3;\n    }\n    r12 = *((r12 + 0x40));\n    if (r12 == 0) {\n        goto label_32;\n    }\n    rbx = *(r13);\n    r15 = *((r13 + 8));\n    r14 = rbx + r15 - 1;\n    if (r12 != 0) {\n        goto label_4;\n    }\nlabel_19:\n    goto label_5;\nlabel_28:\n    esi = 0x20;\n    overflow ();\n    goto label_6;\nlabel_30:\n    esi = 0x5f;\n    overflow ();\n    goto label_7;\nlabel_24:\n    *(rsp) = r14;\n    goto label_8;\nlabel_29:\n    edx = 5;\n    rax = dcgettext (0, \"^ no match for key\\n\");\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    goto label_9;\nlabel_32:\n    if (*(0x0061c759) != 0) {\n        goto label_3;\n    }\n    if (*(0x0061c75a) != 0) {\n        goto label_3;\n    }\n    rbp = *(r13);\n    rax = *((r13 + 8));\n    rbx = rbp;\n    r14 = rbp + rax - 1;\n    goto label_5;\nlabel_20:\n    if (r11 != -1) {\n        goto label_10;\n    }\n    goto label_11;\nlabel_25:\n    fcn_00405a40 (rbp, rsp);\n    goto label_8;\nlabel_31:\n    esi = 0xa;\n    overflow ();\n    goto label_9;\nlabel_26:\n    rax = strtold (rbp, rsp);\n    fp_stack++;\n    goto label_8;\nlabel_27:\n    esi = *(rax);\n    rax -= 0xffffffffffffffff;\n    goto label_12;\nlabel_13:\n    edx = 5;\n    rax = dcgettext (0, \"write failed\");\n    fcn_00405dd0 (rax, r14);\n}\n"
        },
        {
            "funcName": "fcn_004082a0",
            "funcStartAddr": "0x4082a0",
            "funcEndAddr": "0x408370",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x4082a0 */\n#include <stdint.h>\n \nuint32_t fcn_004082a0 (void * arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rdi;\n    if (*(0x0061c750) != 0) {\n        eax = fcn_004065b0 (rdi, rsi, rdx, rcx, r8, r9);\n        if (eax != 0) {\n            goto label_1;\n        }\n        if (*(0x0061c759) != 0) {\n            goto label_1;\n        }\n        if (*(0x0061c75a) != 0) {\n            goto label_1;\n        }\n    }\n    r12 = *((rbx + 8));\n    r14 = *((rbp + 8));\n    r15 = r12;\n    r13 = r14 - 1;\n    r15--;\n    if (r15 != 0) {\n        goto label_2;\n    }\n    eax = 0;\n    al = (r13 != 0) ? 1 : 0;\n    eax = -eax;\n    do {\nlabel_0:\n        edx = eax;\n        edx = -edx;\n        if (*(0x0061c75b) != 0) {\n            eax = edx;\n        }\nlabel_1:\n        return eax;\nlabel_2:\n        eax = 1;\n    } while (r13 == 0);\n    rsi = *(rbp);\n    rdi = *(rbx);\n    if (*(0x0061cba1) != 0) {\n        goto label_3;\n    }\n    rdx = r13;\n    if (r15 <= r13) {\n        rdx = r15;\n    }\n    eax = memcmp (rdi, rsi, rdx);\n    if (eax != 0) {\n        goto label_0;\n    }\n    eax = 0xffffffff;\n    if (r15 < r13) {\n        goto label_0;\n    }\n    eax = 0;\n    al = (r12 != r14) ? 1 : 0;\n    goto label_0;\nlabel_3:\n    fcn_004115c0 (rdi, r12, rsi, r14);\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00408370",
            "funcStartAddr": "0x408370",
            "funcEndAddr": "0x4085c6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x408370 */\n#include <stdint.h>\n \nuint64_t fcn_00408370 (int64_t arg1, uint32_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    do {\nlabel_0:\n        rbx = rdx;\n        if (rsi == 2) {\n            goto label_3;\n        }\n        r12 = rsi;\n        r15 = rsi;\n        r14 = rsi;\n        r12 >>= 1;\n        r13 = r12;\n        r15 -= r12;\n        r13 <<= 5;\n        r13 = -r13;\n        rax = rdi + r13;\n        if (cl != 0) {\n            goto label_4;\n        }\n        rdi = rax;\n        *((rsp + 8)) = rax;\n        fcn_00408370 (rdi, r15, rdx, 0);\n    } while (1);\n    rax = *((rsp + 8));\n    if (r14 > 3) {\n        goto label_5;\n    }\n    __asm (\"movdqu xmm0, xmmword [rbp - 0x20]\");\n    __asm (\"movdqu xmm1, xmmword [rbp - 0x10]\");\n    r13 = rax;\n    rax = rbx;\n    __asm (\"movups xmmword [rbx - 0x20], xmm0\");\n    __asm (\"movups xmmword [rbx - 0x10], xmm1\");\n    rbx = rbp;\nlabel_1:\n    rdx = rbp - 0x20;\n    r14 = r13 - 0x20;\n    do {\nlabel_2:\n        rdi = rdx;\n        *((rsp + 8)) = rdx;\n        rbx -= 0x20;\n        eax = fcn_004082a0 (rdi, r14);\n        rdx = *((rsp + 8));\n        if (eax <= 0) {\n            goto label_6;\n        }\n        __asm (\"movdqu xmm4, xmmword [r13 - 0x20]\");\n        __asm (\"movups xmmword [rbx], xmm4\");\n        __asm (\"movdqu xmm5, xmmword [r13 - 0x10]\");\n        __asm (\"movups xmmword [rbx + 0x10], xmm5\");\n        r15--;\n        if (r15 == 0) {\n            goto label_7;\n        }\n        r13 = r14;\n        r14 -= 0x20;\n    } while (1);\nlabel_4:\n    r13 += rdx;\n    fcn_00408370 (rax, r15, r13, 1);\n    goto label_0;\n    if (r14 <= 3) {\n        goto label_1;\n    }\n    fcn_00408370 (rbp, r12, rbx, 0);\n    goto label_0;\n    goto label_1;\nlabel_6:\n    __asm (\"movdqu xmm2, xmmword [rbp - 0x20]\");\n    __asm (\"movups xmmword [rbx], xmm2\");\n    __asm (\"movdqu xmm3, xmmword [rbp - 0x10]\");\n    __asm (\"movups xmmword [rbx + 0x10], xmm3\");\n    r12--;\n    if (r12 != 0) {\n        rdx -= 0x20;\n        goto label_2;\nlabel_3:\n        *((rsp + 8)) = ecx;\n        eax = fcn_004082a0 (rdi - 0x20, rdi - 0x40);\n        ecx = *((rsp + 8));\n        if (cl != 0) {\n            goto label_8;\n        }\n        if (eax <= 0) {\n            goto label_9;\n        }\n        __asm (\"movdqu xmm1, xmmword [rbp - 0x20]\");\n        __asm (\"movdqu xmm0, xmmword [rbp - 0x10]\");\n        __asm (\"movdqu xmm2, xmmword [rbp - 0x40]\");\n        __asm (\"movdqu xmm3, xmmword [rbp - 0x30]\");\n        __asm (\"movups xmmword [rbx - 0x20], xmm1\");\n        __asm (\"movups xmmword [rbx - 0x10], xmm0\");\n        __asm (\"movups xmmword [rbp - 0x20], xmm2\");\n        __asm (\"movups xmmword [rbp - 0x10], xmm3\");\n        __asm (\"movups xmmword [rbp - 0x40], xmm1\");\n        __asm (\"movups xmmword [rbp - 0x30], xmm0\");\n    }\nlabel_9:\n    return rax;\nlabel_7:\n    rax = 0xffffffffffffffe0;\n    do {\n        __asm (\"movdqu xmm6, xmmword [rbp + rax]\");\n        __asm (\"movups xmmword [rbx + rax], xmm6\");\n        __asm (\"movdqu xmm7, xmmword [rbp + rax + 0x10]\");\n        __asm (\"movups xmmword [rbx + rax + 0x10], xmm7\");\n        rax -= 0x20;\n        r12--;\n    } while (r12 != 0);\n    return rax;\nlabel_8:\n    al = (eax > 0) ? 1 : 0;\n    eax = (int32_t) al;\n    edx = eax;\n    eax -= 2;\n    edx = ~edx;\n    rax = (int64_t) eax;\n    rdx = (int64_t) edx;\n    rax <<= 5;\n    rdx <<= 5;\n    rdx += rbp;\n    rbp += rax;\n    __asm (\"movdqu xmm0, xmmword [rdx]\");\n    __asm (\"movdqu xmm1, xmmword [rdx + 0x10]\");\n    __asm (\"movups xmmword [rbx - 0x20], xmm0\");\n    __asm (\"movdqu xmm0, xmmword [rbp]\");\n    __asm (\"movups xmmword [rbx - 0x10], xmm1\");\n    __asm (\"movdqu xmm1, xmmword [rbp + 0x10]\");\n    __asm (\"movups xmmword [rbx - 0x40], xmm0\");\n    __asm (\"movups xmmword [rbx - 0x30], xmm1\");\n    return rax;\nlabel_5:\n    *((rsp + 8)) = rax;\n    fcn_00408370 (rbp, r12, rbx, 1);\n    goto label_0;\n    rax = *((rsp + 8));\n    r13 = *((rsp + 8));\n    rax = rbx;\n    rbx = rbp;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_004085d0",
            "funcStartAddr": "0x4085d0",
            "funcEndAddr": "0x408637",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x4085d0 */\n#include <stdint.h>\n \nuint32_t fcn_004085d0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg7, int64_t arg8) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    rbx = rdi;\n    if (*(0x0061c759) != 0) {\n        if (*(0x0061cb80) != 0) {\n            *((rsp + 8)) = rdx;\n            eax = fcn_004082a0 (rdi, 0x61cb80);\n            rdx = *((rsp + 8));\n            if (eax == 0) {\n                goto label_0;\n            }\n        }\n        __asm (\"movdqu xmm0, xmmword [rbx]\");\n        *(0x0061cb80) = xmm0;\n        __asm (\"movdqu xmm1, xmmword [rbx + 0x10]\");\n        *(0x0061cb90) = xmm1;\n    }\n    rsi = rbp;\n    rdi = rbx;\n    void (*0x407e70)() ();\nlabel_0:\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00408640",
            "funcStartAddr": "0x408640",
            "funcEndAddr": "0x408689",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x408640 */\n#include <stdint.h>\n \nint64_t fcn_00408640 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_18h;\n    int64_t var_28h;\n    int64_t var_40h;\n    int64_t var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    *((rsp + 0x28)) = rdi;\n    rdi = rdx;\n    *((rsp + 0x18)) = rdx;\n    edx = 0x38;\n    rax = rdx;\n    *((rsp + 0x68)) = rsi;\n    rdx:rax = rax * rdi;\n    *((rsp + 0x58)) = rcx;\n    *((rsp + 0x60)) = r8;\n    *((rsp + 0x40)) = r9;\n    __asm (\"seto dl\");\n    if (rax < 0) {\n        void (*0x408e03)() ();\n    }\n    *(rax) += al;\n}\n"
        },
        {
            "funcName": "fcn_00408687",
            "funcStartAddr": "0x408687",
            "funcEndAddr": "0x408e08",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x408687 */\n#include <stdint.h>\n \nint64_t fcn_00408640 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_18h;\n    int64_t var_28h;\n    int64_t var_40h;\n    int64_t var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    *((rsp + 0x28)) = rdi;\n    rdi = rdx;\n    *((rsp + 0x18)) = rdx;\n    edx = 0x38;\n    rax = rdx;\n    *((rsp + 0x68)) = rsi;\n    rdx:rax = rax * rdi;\n    *((rsp + 0x58)) = rcx;\n    *((rsp + 0x60)) = r8;\n    *((rsp + 0x40)) = r9;\n    __asm (\"seto dl\");\n    if (rax < 0) {\n        void (*0x408e03)() ();\n    }\n    *(rax) += al;\n}\n"
        },
        {
            "funcName": "fcn_00408e10",
            "funcStartAddr": "0x408e10",
            "funcEndAddr": "0x408e20",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x408e10 */\n#include <stdint.h>\n \nvoid fcn_00408e10 (int64_t arg1) {\n    rdi = arg1;\n    ebx = edi;\n    dup2 ();\n    edi = ebx;\n    return close ();\n}\n"
        },
        {
            "funcName": "fcn_00408e20",
            "funcStartAddr": "0x408e20",
            "funcEndAddr": "0x409030",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x408e20 */\n#include <stdint.h>\n \nint64_t fcn_00408e20 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_ch;\n    int64_t var_8h_2;\n    int64_t fildes;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rax = rsi;\n    rdi = rsi;\n    rax >>= 0x3d;\n    al = (rax != 0) ? 1 : 0;\n    rdi <<= 3;\n    if (rdi < 0) {\n        goto label_3;\n    }\n    eax = (int32_t) al;\n    if (rax != 0) {\n        goto label_3;\n    }\n    rbx = rdx;\n    r13 = rsi;\n    rax = fcn_00411210 (rdi);\n    *(rbx) = rax;\n    r14 = rax;\n    ebx = 0;\n    if (r13 != 0) {\n        goto label_4;\n    }\n    goto label_2;\n    do {\nlabel_0:\n        rax = fcn_00407cd0 (*(rbp), 0x4168fa);\n        *((r14 + rbx*8)) = rax;\n        if (rax == 0) {\n            goto label_2;\n        }\nlabel_1:\n        rbx++;\n        rbp += 0x10;\n        if (r13 == rbx) {\n            goto label_2;\n        }\nlabel_4:\n        r12 = *((rbp + 8));\n    } while (r12 == 0);\n    eax = *((r12 + 0xc));\n    if (al == 0) {\n        goto label_0;\n    }\n    while (1) {\n        eax = 0;\n        eax = open (r12 + 0xd, 0, rdx);\n        r15d = eax;\n        if (eax >= 0) {\n            eax = fcn_00407a30 (rsp + 8, 9);\n            if (eax != 0xffffffff) {\n                goto label_5;\n            }\n            rax = errno_location ();\n            if (*(rax) != 0x18) {\n                goto label_6;\n            }\n            close (r15d);\n            *(rbp) = 0x18;\n        }\n        *((r14 + rbx*8)) = 0;\nlabel_2:\n        rax = rbx;\n        return rax;\nlabel_5:\n        if (eax == 0) {\n            goto label_7;\n        }\n        *((r12 + 8)) = eax;\n        r12 = r14 + rbx*8;\n        fcn_00406190 (r12);\n        close (r15d);\n        close (*((rsp + 0xc)));\n        edi = *((rsp + 8));\n        esi = 0x4168fa;\n        rax = fdopen ();\n        if (rax == 0) {\n            goto label_8;\n        }\n        *((r14 + rbx*8)) = rax;\n        goto label_1;\n        fcn_004060a0 (*((r12 + 8)));\n    }\nlabel_8:\n    rax = errno_location ();\n    r13d = *(rax);\n    close (*((rsp + 8)));\n    *(r12) = 0;\n    *(rbp) = r13d;\n    goto label_2;\nlabel_7:\n    close (*((rsp + 8)));\n    if (r15d != 0) {\n        esi = 0;\n        fcn_00408e10 (r15d);\n    }\n    edi = *((rsp + 0xc));\n    if (edi != 1) {\n        esi = 1;\n        eax = fcn_00408e10 (rdi);\n    }\n    rdi = imp.__libc_start_main;\n    ecx = 0;\n    edx = 0x416559;\n    eax = 0;\n    rsi = rdi;\n    execlp ();\n    rax = errno_location ();\n    fcn_004060d0 (*(rax), \"couldn't execute compress program (with -d)\");\nlabel_3:\n    fcn_00411460 ();\nlabel_6:\n    rax = fcn_0040f630 (4, *(0x0061c748));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"couldn't create process for %s -d\");\n    rcx = rbx;\n    eax = 0;\n    error (2, *(rbp), rax);\n}\n"
        },
        {
            "funcName": "fcn_00409030",
            "funcStartAddr": "0x409030",
            "funcEndAddr": "0x4090c0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x409030 */\n#include <stdint.h>\n \nuint64_t fcn_00409030 (int64_t arg1, int64_t arg2, int64_t arg3, uint32_t arg4, int64_t arg5) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r15 = r8;\n    r14 = rcx;\n    r13 = rsi;\n    r12 = rdx;\n    rax = fcn_00408e20 (rdi, r12, rsp + 8);\n    rbx = rax;\n    if (r12 > rax) {\n        if (rax <= 1) {\n            goto label_0;\n        }\n    }\n    fcn_00408640 (rbp, r13, rbx, r14, r15, *((rsp + 8)));\n    rax = rbx;\n    return rax;\nlabel_0:\n    rbx <<= 4;\n    edx = 5;\n    rbx = *((rbp + rbx));\n    rax = dcgettext (0, \"open failed\");\n    fcn_00405dd0 (rax, rbx);\n}\n"
        },
        {
            "funcName": "fcn_004090c0",
            "funcStartAddr": "0x4090c0",
            "funcEndAddr": "0x409330",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x4090c0 */\n#include <stdint.h>\n \nint64_t fcn_004090c0 (uint32_t arg1, uint32_t arg2) {\n    uint32_t var_ch;\n    uint32_t fildes;\n    int64_t var_14h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    r15 = rdi;\n    rdx = imp.__libc_start_main;\n    rax = imp.__libc_start_main;\n    *((rsp + 0xc)) = esi;\n    r13 = *((rax + rdx*8));\n    rax = strlen (*((rax + rdx*8)));\n    r12 = rax;\n    rdi &= 0xfffffffffffffff8;\n    rax = fcn_00411210 (rax + 0x20);\n    rbp = rax + 0xd;\n    rbx = rax;\n    memcpy (rbp, r13, r12);\n    rax = \"/sortXXXXXX\";\n    *((rbx + r12 + 0xd)) = rax;\n    eax = *(0x00414958);\n    *((rbp + r12 + 8)) = eax;\n    rax = imp.__libc_start_main;\n    *(rbx) = 0;\n    rax++;\n    *(0x0061c5e8) = rax;\n    if (rax == *(0x0061c768)) {\n        *(0x0061c5e8) = 0;\n    }\n    rdx = rsp + 0x18;\n    edi = 0;\n    esi = 0x61c6c0;\n    eax = pthread_sigmask ();\n    esi = 0x80000;\n    rsp + 0x10 = (eax == 0) ? 1 : 0;\n    eax = fcn_00410680 (rbp);\n    r12d = eax;\n    rax = errno_location ();\n    r14 = rax;\n    if (r12d < 0) {\n        goto label_2;\n    }\n    rax = *(0x0061c418);\n    *(0x0061c418) = rbx;\n    *(rax) = rbx;\n    if (*((rsp + 0x10)) != 0) {\n        goto label_3;\n    }\nlabel_1:\n    *((rbx + 0xc)) = 0;\n    if (*(0x0061c748) == 0) {\n        goto label_4;\n    }\n    eax = fcn_00407a30 (rsp + 0x10, 4);\n    *((rbx + 8)) = eax;\n    if (eax > 0) {\n        goto label_5;\n    }\n    if (eax == 0) {\n        goto label_6;\n    }\n    do {\nlabel_4:\n        esi = 0x41655c;\n        edi = r12d;\n        rax = fdopen ();\n        *(r15) = rax;\n        if (rax == 0) {\n            goto label_7;\n        }\nlabel_0:\n        rax = rbx;\n        return rax;\nlabel_5:\n        close (r12d);\n        close (*((rsp + 0x10)));\n        r12d = *((rsp + 0x14));\n        rax = fcn_00406190 (rbx);\n    } while (1);\nlabel_2:\n    ebp = *(rax);\n    while (1) {\n        if (ebp != 0x18) {\n            goto label_8;\n        }\n        if (*((rsp + 0xc)) != 1) {\n            goto label_8;\n        }\n        ebx = 0;\n        free (rbx);\n        goto label_0;\nlabel_3:\n        r13d = *(r14);\n        fcn_00407880 (rsp + 0x10);\n        *(r14) = r13d;\n        goto label_1;\n        fcn_00407880 (rsp + 0x10);\n        *(r14) = ebp;\n    }\nlabel_6:\n    close (*((rsp + 0x14)));\n    if (r12d != 1) {\n        esi = 1;\n        fcn_00408e10 (r12d);\n    }\n    edi = *((rsp + 0x10));\n    if (edi != 0) {\n        esi = 0;\n        eax = fcn_00408e10 (rdi);\n    }\n    rdi = imp.__libc_start_main;\n    edx = 0;\n    eax = 0;\n    rsi = rdi;\n    execlp ();\n    fcn_004060d0 (*(r14), \"couldn't execute compress program\");\nlabel_7:\n    edx = 5;\n    rax = dcgettext (0, \"couldn't create temporary file\");\n    fcn_00405dd0 (rax, rbp);\nlabel_8:\n    rax = fcn_0040f630 (4, r13);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"cannot create temporary file in %s\");\n    rcx = rbx;\n    eax = 0;\n    error (2, *(r14), rax);\n}\n"
        },
        {
            "funcName": "fcn_00409330",
            "funcStartAddr": "0x409330",
            "funcEndAddr": "0x409830",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x409330 */\n#include <stdint.h>\n \nuint64_t fcn_00409330 (int64_t arg1, int64_t arg2, uint32_t arg3, uint32_t arg4) {\n    int64_t var_8h;\n    int64_t var_10h_2;\n    uint32_t var_18h_2;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    uint32_t var_d0h;\n    uint32_t var_d8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r14 = rdi;\n    r13 = rdx;\n    r12 = rsi;\n    *((rsp + 0x18)) = rcx;\n    ecx = *(0x0061c420);\n    if (rcx >= rdx) {\n        goto label_11;\n    }\n    *(rsp) = rdx;\nlabel_0:\n    ebp = 0;\n    ebx = 0;\n    if (rcx > *(rsp)) {\n        goto label_12;\n    }\n    do {\n        rax = fcn_004090c0 (rsp + 0xd0, 0);\n        edx = *(0x0061c420);\n        rsi = r12;\n        rdi = rbx;\n        r13 = rax + 0xd;\n        rcx = *((rsp + 0xd0));\n        r15 = rax;\n        r8 = r13;\n        if (rdx <= r12) {\n            rsi = rdx;\n        }\n        rdi <<= 4;\n        rdi += r14;\n        rax = fcn_00409030 (rdi, rsi, rdx, rcx, r8);\n        rdx = r12;\n        rsi = *(rsp);\n        ecx = *(0x0061c420);\n        if (rax <= r12) {\n            rdx = rax;\n        }\n        rbx += rax;\n        rsi -= rbx;\n        r12 -= rdx;\n        rdx = rbp;\n        rbp++;\n        rdx <<= 4;\n        *((r14 + rdx)) = r13;\n        *((r14 + rdx + 8)) = r15;\n    } while (rcx <= rsi);\n    rax = rbp;\n    edx = 0;\n    r15 = rbp;\n    r9 = rbx;\n    rax = rdx:rax / rcx;\n    rdx = rdx:rax % rcx;\n    r15 <<= 4;\n    r9 <<= 4;\n    rax = rcx;\n    r15 += r14;\n    r9 += r14;\n    rax -= rdx;\nlabel_10:\n    if (rsi > rax) {\n        goto label_13;\n    }\nlabel_8:\n    r13 = *(rsp);\n    r12 += rbp;\n    rbp -= rbx;\n    r13 += rbp;\n    rdx -= rbx;\n    rdx <<= 4;\n    memmove (r15, r9, r13);\n    ecx = *(0x0061c420);\n    *(rsp) = r13;\n    if (rcx < r13) {\n        goto label_0;\n    }\n    r13 = *(rsp);\nlabel_11:\n    if (r13 <= r12) {\n        goto label_14;\n    }\n    r9 = r12;\n    r10d = 0;\n    rax = rsp + 0x40;\n    rbx = r12;\n    r9 <<= 4;\n    *((rsp + 8)) = r14;\n    r15d = 0;\n    rbp = r14 + r9;\n    *((rsp + 0x20)) = r12;\n    r12d = r10d;\n    r14 = rbp;\n    *((rsp + 0x10)) = rax;\n    rbp = *((rsp + 0x18));\n    *(rsp) = r13;\n    while (r13d == 0) {\n        rdx = rsp + 0xd0;\n        esi = 0;\n        edi = 1;\n        r12d = 1;\n        eax = fxstat ();\n        if (eax == 0) {\nlabel_1:\n            rax = *((rsp + 0x48));\n            r12d = 1;\n            if (*((rsp + 0xd8)) == rax) {\n                goto label_15;\n            }\n        }\nlabel_4:\n        rbx++;\n        r14 += 0x10;\n        if (rbx == *(rsp)) {\n            goto label_6;\n        }\nlabel_2:\n        rax = *(r14);\n        ecx = 2;\n        edi = 0x41814a;\n        rsi = rax;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (rbx > *(rsp)) ? 1 : 0;\n        r13d = (int32_t) cl;\n        if (rbp != 0) {\n            eax = strcmp (rbp, rax);\n            if (r13d == 0) {\n                goto label_16;\n            }\n            if (eax == 0) {\n                goto label_17;\n            }\n        }\nlabel_16:\n        if (r12b == 0) {\n            goto label_18;\n        }\nlabel_5:\n    }\n    rsi = *(r14);\n    rdx = rsp + 0xd0;\n    edi = 1;\n    r12d = 1;\n    eax = xstat ();\n    if (eax == 0) {\n        goto label_1;\n    }\n    rbx++;\n    r14 += 0x10;\n    if (rbx != *(rsp)) {\n        goto label_2;\n    }\nlabel_6:\n    r14 = *((rsp + 8));\n    r12 = *((rsp + 0x20));\n    r13 = *(rsp);\nlabel_3:\n    rax = fcn_00408e20 (r14, r13, *((rsp + 0x10)));\n    rbx = rax;\n    if (r13 == rax) {\n        goto label_19;\n    }\n    if (rax <= 2) {\n        goto label_20;\n    }\nlabel_7:\n    rax = rbx;\n    rax <<= 4;\n    r15 = r14 + rax - 0x10;\n    do {\n        rax = *((rsp + 0x40));\n        rbx--;\n        rsi = *(r15);\n        fcn_00407df0 (*((rax + rbx*8)), *(rsi));\n        sil = (rbx > 2) ? 1 : 0;\n        r15 -= 0x10;\n        rax = fcn_004090c0 (rsp + 0xd0, 0);\n    } while (rax == 0);\n    r15 = rbx;\n    r11 = rax + 0xd;\n    r9 = *((rsp + 0x40));\n    if (r12 <= rbx) {\n        r15 = r12;\n    }\n    r8 = r11;\n    *((rsp + 8)) = rax;\n    r13 -= rbx;\n    *(rsp) = r11;\n    r12 -= r15;\n    fcn_00408640 (r14, r15, rbx, *((rsp + 0xd0)), r8, r9);\n    r11 = *(rsp);\n    rax = *((rsp + 8));\n    rdx <<= 4;\n    r12++;\n    *(r14) = r11;\n    r13++;\n    *((r14 + 8)) = rax;\n    memmove (r14 + 0x10, rbp, r13);\n    goto label_3;\nlabel_15:\n    rax = *((rsp + 0x40));\n    if (*((rsp + 0xd0)) != rax) {\n        goto label_4;\n    }\nlabel_17:\n    if (r15 == 0) {\n        goto label_21;\n    }\n    r11 = r15 + 0xd;\nlabel_9:\n    *(r14) = r11;\n    *((r14 + 8)) = r15;\n    goto label_4;\nlabel_18:\n    rdx = *((rsp + 0x10));\n    esi = 1;\n    edi = 1;\n    eax = fxstat ();\n    if (eax == 0) {\n        goto label_5;\n    }\n    goto label_6;\nlabel_19:\n    rax = fcn_00407cd0 (*((rsp + 0x18)), 0x41655c);\n    if (rax != 0) {\n        goto label_22;\n    }\n    rax = errno_location ();\n    if (*(rax) != 0x18) {\n        goto label_23;\n    }\n    if (r13 > 2) {\n        goto label_7;\n    }\nlabel_23:\n    edx = 5;\n    rax = dcgettext (0, \"open failed\");\n    fcn_00405dd0 (rax, *((rsp + 0x18)));\nlabel_13:\n    rdx = rsi + rdx + 1;\n    *((rsp + 0x20)) = r9;\n    rdx -= rcx;\n    *((rsp + 8)) = rdx;\n    rax = fcn_004090c0 (rsp + 0xd0, 0);\n    rdx = *((rsp + 8));\n    rsi = r12;\n    r9 = *((rsp + 0x20));\n    r11 = rax + 0xd;\n    rcx = *((rsp + 0xd0));\n    *((rsp + 0x10)) = rax;\n    r8 = r11;\n    rdi = r9;\n    *((rsp + 8)) = r11;\n    if (rdx <= r12) {\n        rsi = rdx;\n    }\n    rax = fcn_00409030 (rdi, rsi, rdx, rcx, r8);\n    rdx = r12;\n    r11 = *((rsp + 8));\n    r10 = *((rsp + 0x10));\n    if (rax <= r12) {\n        rdx = rax;\n    }\n    rbp++;\n    rbx += rax;\n    *(r15) = r11;\n    *((r15 + 8)) = r10;\n    r9 = rbx;\n    r15 = rbp;\n    r9 <<= 4;\n    r15 <<= 4;\n    r12 -= rdx;\n    r9 += r14;\n    r15 += r14;\n    goto label_8;\nlabel_21:\n    rax = fcn_004090c0 (rsp + 0x38, 0);\n    r11 = rax + 0xd;\n    r15 = rax;\n    r8 = r11;\n    *((rsp + 0x28)) = r11;\n    fcn_00409030 (r14, 0, 1, *((rsp + 0x38)), r8);\n    r11 = *((rsp + 0x28));\n    goto label_9;\nlabel_12:\n    rax = rcx;\n    r15 = r14;\n    r9 = r14;\n    rsi = *(rsp);\n    edx = 0;\n    goto label_10;\nlabel_22:\n    fcn_00408640 (r14, r12, r13, rax, *((rsp + 0x18)), *((rsp + 0x40)));\n    return rax;\nlabel_14:\n    rax = rsp + 0x40;\n    *((rsp + 0x10)) = rax;\n    goto label_3;\nlabel_20:\n    rbx <<= 4;\n    edx = 5;\n    rbx = *((r14 + rbx));\n    rax = dcgettext (0, \"open failed\");\n    fcn_00405dd0 (rax, rbx);\n}\n"
        },
        {
            "funcName": "fcn_00409830",
            "funcStartAddr": "0x409830",
            "funcEndAddr": "0x409871",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x409830 */\n#include <stdint.h>\n \nint64_t fcn_00409830 (int64_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = *((rsi + 8));\n    rax = *((rsi + 0x18));\n    rcx = *((rsi + 0x10));\n    if (*(rsi) == rcx) {\n        goto label_1;\n    }\n    while (*((rsi + 0x30)) == 0) {\n        void (*0x406320)() ();\n    }\n    do {\nlabel_0:\n        return rax;\nlabel_1:\n    } while (rdx == rax);\n    if (*((rsi + 0x28)) != 0) {\n        goto label_0;\n    }\n    return void (*0x406320)() ();\n}\n"
        },
        {
            "funcName": "fcn_00409880",
            "funcStartAddr": "0x409880",
            "funcEndAddr": "0x409fdc",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x409880 */\n#include <stdint.h>\n \nvoid fcn_00409880 (int64_t arg_c8h, int64_t arg_c0h, int64_t arg1, uint32_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    int64_t var_50h;\n    int64_t var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    int64_t var_70h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\nlabel_13:\n    r14 = r9;\n    r9 = rsi;\n    r13 = r8;\n    r9 >>= 1;\n    rbx = rcx;\n    r8 = *((rcx + 0x28));\n    rax = *((rcx + 0x30));\n    *((rsp + 0x10)) = rdx;\n    *((rsp + 0x50)) = rdx;\n    rdx = *((rcx + 0x40));\n    rcx = *((rsp + 0xc0));\n    *((rsp + 0x40)) = rdi;\n    *((rsp + 0x58)) = rdx;\n    rdx = r8 + rax;\n    *((rsp + 0x48)) = r9;\n    *((rsp + 8)) = r9;\n    *((rsp + 0x60)) = r13;\n    *((rsp + 0x68)) = r14;\n    *((rsp + 0x70)) = rcx;\n    if (rdx > 0x1ffff) {\n        r12 = rsi;\n        if (rsi > 1) {\n            goto label_14;\n        }\n    }\nlabel_11:\n    rdx = *((rsp + 0x10));\n    r12 = r8;\n    r10 = rbp;\n    r12 <<= 5;\n    rdx <<= 5;\n    r12 = -r12;\n    r10 -= rdx;\n    r9 = rbp + r12;\n    if (rax > 1) {\n        rdx = r8;\n        rcx = r10;\n        rsi = rax;\n        rdi = r9;\n        rdx >>= 1;\n        *((rsp + 0x28)) = r8;\n        rdx <<= 5;\n        *((rsp + 0x20)) = r10;\n        rcx -= rdx;\n        *((rsp + 0x18)) = rax;\n        *((rsp + 8)) = r9;\n        fcn_00408370 (rdi, rsi, rcx, 0);\n        r8 = *((rsp + 0x28));\n        r10 = *((rsp + 0x20));\n        rax = *((rsp + 0x18));\n        r9 = *((rsp + 8));\n    }\n    if (r8 > 1) {\n        *((rsp + 0x18)) = r9;\n        *((rsp + 8)) = rax;\n        fcn_00408370 (rbp, r8, r10, 0);\n        r9 = *((rsp + 0x18));\n        rax = *((rsp + 8));\n    }\n    rax <<= 5;\n    *(rbx) = rbp;\n    r12 -= rax;\n    *((rbx + 8)) = r9;\n    rbp += r12;\n    *((rbx + 0x10)) = r9;\n    *((rbx + 0x18)) = rbp;\n    fcn_00406320 (r13, rbx);\n    rax = r13 + 8;\n    *((rsp + 8)) = rax;\n    rax = r13 + 0x30;\n    *((rsp + 0x28)) = rax;\nlabel_1:\n    rdi = *((rsp + 8));\n    pthread_mutex_lock ();\n    while (rax == 0) {\n        rsi = *((rsp + 8));\n        rdi = *((rsp + 0x28));\n        pthread_cond_wait ();\n        rax = fcn_0040d190 (*(r13));\n    }\n    rdi = *((rsp + 8));\n    rbx = rax;\n    pthread_mutex_unlock ();\n    rax = rbx + 0x58;\n    rdi = rax;\n    *((rsp + 0x18)) = rax;\n    pthread_mutex_lock ();\n    eax = *((rbx + 0x50));\n    *((rbx + 0x54)) = 0;\n    if (eax == 0) {\n        goto label_15;\n    }\n    rdx = *((rsp + 0x10));\n    ecx = rax + rax + 2;\n    r12 = *(rbx);\n    rbp = *((rbx + 8));\n    rdx >>= cl;\n    r15 = rdx + 1;\n    if (eax <= 1) {\n        goto label_16;\n    }\n    rax = *((rbx + 0x20));\n    rsi = rbp;\n    rdi = r12;\n    r8 = *(rax);\n    while (eax > 0) {\n        rax = *((rbx + 8));\n        rdi = *(rbx);\n        __asm (\"movdqu xmm2, xmmword [rax - 0x20]\");\n        rsi = rax - 0x20;\n        *((rbx + 8)) = rsi;\n        __asm (\"movups xmmword [r8], xmm2\");\n        __asm (\"movdqu xmm3, xmmword [rax - 0x10]\");\n        __asm (\"movups xmmword [r8 + 0x10], xmm3\");\nlabel_0:\n        r15--;\n        r11 = *((rbx + 0x10));\n        if (r11 == rdi) {\n            goto label_17;\n        }\n        if (*((rbx + 0x18)) == rsi) {\n            goto label_18;\n        }\n        if (r15 == 0) {\n            goto label_19;\n        }\n        rsi -= 0x20;\n        rdi -= 0x20;\n        *((rsp + 0x20)) = r8;\n        eax = fcn_004082a0 (rdi, rsi);\n        r8 = *((rsp + 0x20));\n        r8 -= 0x20;\n    }\n    rax = *(rbx);\n    rsi = *((rbx + 8));\n    __asm (\"movdqu xmm0, xmmword [rax - 0x20]\");\n    rdi = rax - 0x20;\n    *(rbx) = rdi;\n    __asm (\"movups xmmword [r8], xmm0\");\n    __asm (\"movdqu xmm1, xmmword [rax - 0x10]\");\n    __asm (\"movups xmmword [r8 + 0x10], xmm1\");\n    goto label_0;\nlabel_19:\n    rdx = rbp;\n    rax = r12;\n    r9 = *((rbx + 0x30));\n    r10 = *((rbx + 0x28));\n    rdx -= rsi;\n    rax -= rdi;\n    r15 = 0xffffffffffffffff;\n    rdx >>= 5;\n    rax >>= 5;\n    if (r9 != rdx) {\n        goto label_3;\n    }\n    rsi = 0xfffffffffffffffe;\nlabel_4:\n    rdi -= 0x20;\n    while (r11 != rdi) {\n        rsi--;\n        rdi -= 0x20;\n        if (rsi == -1) {\n            goto label_20;\n        }\n        __asm (\"movdqu xmm4, xmmword [rdi]\");\n        r8 -= 0x20;\n        *(rbx) = rdi;\n        rax = rdi;\n        __asm (\"movups xmmword [r8], xmm4\");\n        __asm (\"movdqu xmm5, xmmword [rdi + 0x10]\");\n        __asm (\"movups xmmword [r8 + 0x10], xmm5\");\n    }\n    r12 -= r11;\n    r9 = rdx;\n    rax = r12;\n    rax >>= 5;\n    do {\nlabel_5:\n        rcx = *((rbx + 0x20));\n        *(rcx) = r8;\nlabel_7:\n        r10 -= rax;\n        r9 -= rdx;\n        *((rbx + 0x28)) = r10;\n        *((rbx + 0x30)) = r9;\n        if (*((rbx + 0x54)) == 0) {\n            fcn_00409830 (r13, rbx);\n        }\n        if (*((rbx + 0x50)) > 1) {\n            goto label_21;\n        }\n        rax = *((rbx + 0x30));\n        rax += *((rbx + 0x28));\n        if (rax == 0) {\n            goto label_22;\n        }\nlabel_2:\n        rdi = *((rsp + 0x18));\n        pthread_mutex_unlock ();\n        goto label_1;\nlabel_17:\n        rdx = rbp;\n        r12 -= rdi;\n        r9 = *((rbx + 0x30));\n        r10 = *((rbx + 0x28));\n        rdx -= rsi;\n        rax = r12;\n        rdx >>= 5;\n        rax >>= 5;\n        if (rdx == r9) {\n            goto label_23;\n        }\nlabel_3:\n        if (rax == r10) {\n            goto label_24;\n        }\nlabel_9:\n        rbp -= rsi;\n        rdx = rbp;\n        rdx >>= 5;\n    } while (1);\nlabel_22:\n    fcn_00406320 (r13, *((rbx + 0x38)));\n    goto label_2;\nlabel_21:\n    rax = *((rbx + 0x38));\n    rdi = rax + 0x58;\n    pthread_mutex_lock ();\n    rsi = *((rbx + 0x38));\n    if (*((rsi + 0x54)) == 0) {\n        fcn_00409830 (r13, rsi);\n        rsi = *((rbx + 0x38));\n    }\n    rdi = rsi + 0x58;\n    pthread_mutex_unlock ();\n    goto label_2;\nlabel_18:\n    rdx = rbp;\n    rax = r12;\n    r9 = *((rbx + 0x30));\n    r10 = *((rbx + 0x28));\n    rdx -= rsi;\n    rax -= rdi;\n    rdx >>= 5;\n    rax >>= 5;\n    if (r9 != rdx) {\n        goto label_3;\n    }\n    rsi = r15 - 1;\n    if (r15 != 0) {\n        goto label_4;\n    }\n    goto label_5;\nlabel_16:\n    rsi = rbp;\n    rdi = r12;\n    while (eax > 0) {\n        rax = *((rbx + 8));\n        *((rbx + 8)) = rdi;\n        fcn_004085d0 (rax - 0x20, r14, *((rsp + 0xc0)), rcx, r8);\nlabel_6:\n        rdi = *(rbx);\n        rsi = *((rbx + 8));\n        r15--;\n        if (*((rbx + 0x10)) == rdi) {\n            goto label_25;\n        }\n        if (*((rbx + 0x18)) == rsi) {\n            goto label_26;\n        }\n        if (r15 == 0) {\n            goto label_27;\n        }\n        rsi -= 0x20;\n        rdi -= 0x20;\n        eax = fcn_004082a0 (rdi, rsi);\n    }\n    rax = *(rbx);\n    *(rbx) = rdi;\n    fcn_004085d0 (rax - 0x20, r14, *((rsp + 0xc0)), rcx, r8);\n    goto label_6;\nlabel_25:\n    rax = r12;\n    rdx = *((rbx + 0x30));\n    r10 = *((rbx + 0x28));\n    rax -= rdi;\n    rdi = rbp;\n    rdi -= rsi;\n    rax >>= 5;\n    rdi >>= 5;\n    if (rdi == rdx) {\n        goto label_28;\n    }\n    if (rax == r10) {\n        goto label_29;\n    }\n    do {\nlabel_8:\n        rbp -= rsi;\n        r9 = *((rbx + 0x30));\n        rdx = rbp;\n        rdx >>= 5;\n        goto label_7;\nlabel_26:\n        r8 = rbp;\n        rax = r12;\n        rdx = *((rbx + 0x30));\n        r8 -= rsi;\n        rax -= rdi;\n        r8 >>= 5;\n        rax >>= 5;\n        if (r8 == rdx) {\n            goto label_30;\n        }\nlabel_10:\n        r10 = *((rbx + 0x28));\n    } while (rax != r10);\nlabel_29:\n    if (*((rbx + 0x18)) == rsi) {\n        goto label_8;\n    }\n    r8 = r15 - 1;\n    if (r15 == 0) {\n        goto label_8;\n    }\n    r15 = r8;\n    while (rsi != *((rbx + 0x18))) {\n        r15--;\n        if (r15 == -1) {\n            goto label_31;\n        }\n        *((rbx + 8)) = rdi;\n        fcn_004085d0 (rsi - 0x20, r14, *((rsp + 0xc0)), rcx, r8);\n        rsi = *((rbx + 8));\n    }\nlabel_31:\n    r12 -= *(rbx);\n    rbp -= rsi;\n    r10 = *((rbx + 0x28));\n    rax = r12;\n    rdx = rbp;\n    r9 = *((rbx + 0x30));\n    rax >>= 5;\n    rdx >>= 5;\n    goto label_7;\nlabel_24:\n    r11 = *((rbx + 0x18));\n    if (r11 == rsi) {\n        goto label_9;\n    }\n    rdi = r15 - 1;\n    rdx = rsi - 0x20;\n    if (r15 != 0) {\n        goto label_32;\n    }\n    goto label_9;\n    do {\n        rdi--;\n        rdx -= 0x20;\n        if (rdi == -1) {\n            goto label_33;\n        }\nlabel_32:\n        __asm (\"movdqu xmm6, xmmword [rdx]\");\n        r8 -= 0x20;\n        *((rbx + 8)) = rdx;\n        rcx = rdx;\n        __asm (\"movups xmmword [r8], xmm6\");\n        __asm (\"movdqu xmm7, xmmword [rdx + 0x10]\");\n        __asm (\"movups xmmword [r8 + 0x10], xmm7\");\n    } while (rdx != r11);\n    rbp -= rdx;\n    rdx = rbp;\n    rdx >>= 5;\n    goto label_5;\nlabel_27:\n    rax = r12;\n    rdx = rbp;\n    r15 = 0xffffffffffffffff;\n    rax -= rdi;\n    rdx -= rsi;\n    rax >>= 5;\n    rdx >>= 5;\n    if (*((rbx + 0x30)) != rdx) {\n        goto label_10;\n    }\n    r8 = 0xfffffffffffffffe;\n    r15 = 0xfffffffffffffffe;\n    while (rdi != *((rbx + 0x10))) {\n        r15--;\n        if (r15 == -1) {\n            goto label_34;\n        }\nlabel_12:\n        rdi -= 0x20;\n        *(rbx) = rdi;\n        fcn_004085d0 (rdi, r14, *((rsp + 0xc0)), rcx, r8);\n        rdi = *(rbx);\n    }\nlabel_34:\n    r12 -= rdi;\n    rbp -= *((rbx + 8));\n    r10 = *((rbx + 0x28));\n    rax = r12;\n    rdx = rbp;\n    r9 = *((rbx + 0x30));\n    rax >>= 5;\n    rdx >>= 5;\n    goto label_7;\nlabel_15:\n    rdi = *((rsp + 0x18));\n    pthread_mutex_unlock ();\n    rax = fcn_00406320 (r13, rbx);\n    do {\n        return rax;\nlabel_20:\n        r12 -= rax;\n        r9 = rdx;\n        rax = r12;\n        rax >>= 5;\n        goto label_5;\nlabel_14:\n        eax = pthread_create (rsp + 0x38, 0, 0x409fe0, rsp + 0x40);\n        r9 = *((rsp + 8));\n        if (eax != 0) {\n            r8 = *((rbx + 0x28));\n            rax = *((rbx + 0x30));\n            goto label_11;\nlabel_30:\n            r8 = r15 - 1;\n            if (r15 == 0) {\n                goto label_35;\n            }\n            r15 = r8;\n            goto label_12;\nlabel_33:\n            rbp -= rcx;\n            rdx = rbp;\n            rdx >>= 5;\n            goto label_5;\nlabel_23:\n            rdx = r9;\n            goto label_5;\n        }\n        rax = *((rbx + 0x28));\n        rsi -= r9;\n        rax <<= 5;\n        rdi -= rax;\n        fcn_00409880 (rbp, r12, *((rsp + 0x20)), *((rbx + 0x48)), r13, r14);\n        goto label_13;\n        pthread_join (*((rsp + 0x48)), 0);\n    } while (1);\nlabel_28:\n    r9 = rdx;\n    goto label_7;\nlabel_35:\n    r10 = *((rbx + 0x28));\n    r9 = rdx;\n    goto label_7;\n}\n"
        },
        {
            "funcName": "fcn_0040a010",
            "funcStartAddr": "0x40a010",
            "funcEndAddr": "0x40a0c4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40a010 */\n#include <stdint.h>\n \nint64_t fcn_0040a010 (int64_t arg1) {\n    rdi = arg1;\n    rdx = imp.__libc_start_main;\n    rcx = imp.__libc_start_main;\n    rbx = rdi;\n    rax = imp.__libc_start_main;\n    while (1) {\n        rcx = rdx + 1;\n        *((rax + rdx*8)) = rbx;\n        *(0x0061c768) = rcx;\n        return rax;\n        if (rax == 0) {\n            goto label_1;\n        }\n        rdx = 0xaaaaaaaaaaaaaa9;\n        if (rcx > rdx) {\n            goto label_2;\n        }\n        rdx = rcx;\n        rdx >>= 1;\n        rcx = rcx + rdx + 1;\nlabel_0:\n        *(0x0061c760) = rcx;\n        rax = fcn_00411270 (rax, rcx*8);\n        rdx = imp.__libc_start_main;\n        *(0x0061c770) = rax;\n    }\nlabel_1:\n    if (rcx == 0) {\n        goto label_3;\n    }\n    rsi = rcx;\n    edx = 0;\n    rsi >>= 0x3d;\n    rsi = rcx;\n    dl = (rsi != 0) ? 1 : 0;\n    rsi <<= 3;\n    if (rsi < 0) {\n        goto label_2;\n    }\n    if (rdx == 0) {\n        goto label_0;\n    }\nlabel_2:\n    fcn_00411460 ();\nlabel_3:\n    esi = 0x80;\n    ecx = 0x10;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040a0d0",
            "funcStartAddr": "0x40a0d0",
            "funcEndAddr": "0x40a63d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40a0d0 */\n#include <stdint.h>\n \nuint64_t fcn_0040a0d0 (int64_t arg1) {\n    char * var_8h;\n    int64_t var_10h;\n    char * var_18h;\n    char * var_20h;\n    char * var_28h;\n    char * var_30h;\n    char * var_38h;\n    char * var_40h;\n    char * var_48h;\n    char * var_50h;\n    char * var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    rdi = arg1;\n    edx = 5;\n    ebx = edi;\n    rbp = imp.__libc_start_main;\n    if (edi != 0) {\n        rax = dcgettext (0, \"Try '%s --help' for more information.\\n\");\n        rdi = stderr;\n        rcx = rbp;\n        esi = 1;\n        rdx = rax;\n        eax = 0;\n        fprintf_chk ();\nlabel_0:\n        exit (ebx);\n    }\n    rax = dcgettext (0, \"Usage: %s [OPTION]... [FILE]...\\n  or:  %s [OPTION]... --files0-from=F\\n\");\n    rcx = rbp;\n    rdx = rbp;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"Write sorted concatenation of all FILE(s) to standard output.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nWith no FILE, or when FILE is -, read standard input.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nMandatory arguments to long options are mandatory for short options too.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"Ordering options:\\n\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -b, --ignore-leading-blanks  ignore leading blanks\\n  -d, --dictionary-order      consider only blanks and alphanumeric characters\\n  -f, --ignore-case           fold lower case to upper case characters\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -g, --general-numeric-sort  compare according to general numerical value\\n  -i, --ignore-nonprinting    consider only printable characters\\n  -M, --month-sort            compare (unknown) < 'JAN' < ... < 'DEC'\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -h, --human-numeric-sort    compare human readable numbers (e.g., 2K 1G)\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -n, --numeric-sort          compare according to string numerical value\\n  -R, --random-sort           shuffle, but group identical keys.  See shuf(1)\\n      --random-source=FILE    get random bytes from FILE\\n  -r, --reverse               reverse the result of comparisons\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --sort=WORD             sort according to WORD:\\n                                general-numeric -g, human-numeric -h, month -M,\\n                                numeric -n, random -R, version -V\\n  -V, --version-sort          natural sort of (version) numbers within text\\n\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"Other options:\\n\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --batch-size=NMERGE   merge at most NMERGE inputs at once;\\n                            for more use temp files\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -c, --check, --check=diagnose-first  check for sorted input; do not sort\\n  -C, --check=quiet, --check=silent  like -c, but do not report first bad line\\n      --compress-program=PROG  compress temporaries with PROG;\\n                              decompress them with PROG -d\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --debug               annotate the part of the line used to sort,\\n                              and warn about questionable usage to stderr\\n      --files0-from=F       read input from the files specified by\\n                            NUL-terminated names in file F;\\n                            If F is - then read names from standard input\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -k, --key=KEYDEF          sort via a key; KEYDEF gives location and type\\n  -m, --merge               merge already sorted files; do not sort\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -o, --output=FILE         write result to FILE instead of standard output\\n  -s, --stable              stabilize sort by disabling last-resort comparison\\n  -S, --buffer-size=SIZE    use SIZE for main memory buffer\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    edx = 5;\n    rax = dcgettext (0, \"  -t, --field-separator=SEP  use SEP instead of non-blank to blank transition\\n  -T, --temporary-directory=DIR  use DIR for temporaries, not $TMPDIR or %s;\\n                              multiple options specify multiple directories\\n      --parallel=N          change the number of sorts run concurrently to N\\n  -u, --unique              with -c, check for strict ordering;\\n                              without -c, output only the first of an equal run\\n\");\n    edx = \"/tmp\";\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -z, --zero-terminated     line delimiter is NUL, not newline\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --help     display this help and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --version  output version information and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nKEYDEF is F[.C][OPTS][,F[.C][OPTS]] for start and stop position, where F is a\\nfield number and C a character position in the field; both are origin 1, and\\nthe stop position defaults to the line's end.  If neither -t nor -b is in\\neffect, characters in a field are counted from the beginning of the preceding\\nwhitespace.  OPTS is one or more single-letter ordering options [bdfgiMhnRrV],\\nwhich override global ordering options for that key.  If no key is given, use\\nthe entire line as the key.  Use --debug to diagnose incorrect key usage.\\n\\nSIZE may be followed by the following multiplicative suffixes:\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"% 1% of memory, b 1, K 1024 (default), and so on for M, G, T, P, E, Z, Y.\\n\\n*** WARNING ***\\nThe locale specified by the environment affects sort order.\\nSet LC_ALL=C to get the traditional sort order that uses\\nnative byte values.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    *(rsp) = 0x416588;\n    rax = rsp;\n    *((rsp + 8)) = \"test invocation\";\n    *((rsp + 0x10)) = 0x416602;\n    *((rsp + 0x18)) = \"Multi-call invocation\";\n    *((rsp + 0x20)) = \"sha224sum\";\n    *((rsp + 0x28)) = \"sha2 utilities\";\n    *((rsp + 0x30)) = \"sha256sum\";\n    *((rsp + 0x38)) = \"sha2 utilities\";\n    *((rsp + 0x40)) = \"sha384sum\";\n    *((rsp + 0x48)) = \"sha2 utilities\";\n    *((rsp + 0x50)) = \"sha512sum\";\n    *((rsp + 0x58)) = \"sha2 utilities\";\n    *((rsp + 0x60)) = 0;\n    *((rsp + 0x68)) = 0;\n    do {\n        rax += 0x10;\n        rdi = *(rax);\n        if (rdi == 0) {\n            goto label_2;\n        }\n        esi = 0x416672;\n        ecx = 5;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        dl = (rdi > 0) ? 1 : 0;\n    } while (dl != 0);\nlabel_2:\n    rbp = *((rax + 8));\n    edx = 5;\n    esi = \"\\n%s online help: <%s>\\n\";\n    edi = 0;\n    if (rbp == 0) {\n        goto label_3;\n    }\n    rax = dcgettext (rdi, rsi);\n    edi = 1;\n    ecx = \"https://www.gnu.org/software/coreutils/\";\n    edx = \"GNU coreutils\";\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rax = setlocale (5, 0);\n    if (rax != 0) {\n        eax = strncmp (rax, 0x41660c, 3);\n        if (eax != 0) {\n            goto label_4;\n        }\n    }\nlabel_1:\n    edx = 5;\n    r12d = 0x4165a4;\n    rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n    ecx = 0x416672;\n    edx = \"https://www.gnu.org/software/coreutils/\";\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    ecx = 0x416571;\n    r12 = rcx;\n    while (1) {\n        edx = 5;\n        rax = dcgettext (0, \"or available locally via: info '(coreutils) %s%s'\\n\");\n        rcx = r12;\n        rdx = rbp;\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        goto label_0;\nlabel_3:\n        rax = dcgettext (rdi, rsi);\n        edi = 1;\n        ecx = \"https://www.gnu.org/software/coreutils/\";\n        edx = \"GNU coreutils\";\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        rax = setlocale (5, 0);\n        if (rax != 0) {\n            eax = strncmp (rax, 0x41660c, 3);\n            if (eax != 0) {\n                goto label_5;\n            }\n        }\n        edx = 5;\n        rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n        ecx = 0x416672;\n        edx = \"https://www.gnu.org/software/coreutils/\";\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        r12d = 0x4165a4;\n        printf_chk ();\n    }\nlabel_5:\nlabel_4:\n    edx = 5;\n    rax = dcgettext (0, \"Report %s translation bugs to <https://translationproject.org/team/>\\n\");\n    edx = 0x416672;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040a650",
            "funcStartAddr": "0x40a650",
            "funcEndAddr": "0x40a766",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40a650 */\n#include <stdint.h>\n \nuint64_t fcn_0040a650 (char * arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    char * s2;\n    uint32_t var_17h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r15 = rsi;\n    r13 = rcx;\n    *((rsp + 8)) = rdi;\n    *((rsp + 0x18)) = rdx;\n    rax = strlen (rdi);\n    r14 = *(r15);\n    *(rsp) = 0xffffffffffffffff;\n    if (r14 == 0) {\n        goto label_3;\n    }\n    r12 = rax;\n    *((rsp + 0x17)) = 0;\n    ebx = 0;\n    goto label_1;\nlabel_0:\n    rax = *((rsp + 0x18));\n    if (rax == 0) {\n        goto label_4;\n    }\n    rdi *= r13;\n    rdi += rax;\n    eax = memcmp (*(rsp), rbp, r13);\n    ecx = 1;\n    eax = *((rsp + 0x17));\n    if (eax != 0) {\n        eax = ecx;\n    }\n    *((rsp + 0x17)) = al;\n    do {\nlabel_2:\n        rbx++;\n        rbp += r13;\n        r14 = *((r15 + rbx*8));\n        if (r14 == 0) {\n            goto label_5;\n        }\nlabel_1:\n        eax = strncmp (r14, *((rsp + 8)), r12);\n    } while (eax != 0);\n    rax = strlen (r14);\n    if (rax == r12) {\n        goto label_6;\n    }\n    if (*(rsp) != -1) {\n        goto label_0;\n    }\n    *(rsp) = rbx;\n    rbx++;\n    rbp += r13;\n    r14 = *((r15 + rbx*8));\n    if (r14 != 0) {\n        goto label_1;\n    }\nlabel_5:\n    rax = 0xfffffffffffffffe;\n    if (*((rsp + 0x17)) == 0) {\n        rax = *(rsp);\n    }\n    *(rsp) = rax;\n    do {\nlabel_3:\n        rax = *(rsp);\n        return rax;\nlabel_4:\n        *((rsp + 0x17)) = 1;\n        goto label_2;\nlabel_6:\n        *(rsp) = rbx;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040a770",
            "funcStartAddr": "0x40a770",
            "funcEndAddr": "0x40a7e1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40a770 */\n#include <stdint.h>\n \nuint64_t fcn_0040a770 (int64_t arg1, int64_t arg2, uint32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    edx = 5;\n    r12 = rsi;\n    if (rdx == -1) {\n        goto label_0;\n    }\n    rax = dcgettext (0, \"ambiguous argument %s for %s\");\n    rbx = rax;\n    do {\n        rax = fcn_0040f860 (1, rbp);\n        rax = fcn_0040f550 (0, 8, r12);\n        r8 = rbp;\n        rdx = rbx;\n        esi = 0;\n        rcx = rax;\n        edi = 0;\n        eax = 0;\n        void (*0x402d20)() ();\nlabel_0:\n        rax = dcgettext (0, \"invalid argument %s for %s\");\n        rbx = rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040a7f0",
            "funcStartAddr": "0x40a7f0",
            "funcEndAddr": "0x40a908",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40a7f0 */\n#include <stdint.h>\n \nuint64_t fcn_0040a7f0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r15 = rdi;\n    r14d = 0;\n    r13 = rdx;\n    edx = 5;\n    rbx = stderr;\n    rax = dcgettext (0, \"Valid arguments are:\");\n    rdi = rax;\n    rsi = rbx;\n    ebx = 0;\n    fputs_unlocked ();\n    r12 = *(r15);\n    if (r12 != 0) {\n        goto label_1;\n    }\n    goto label_2;\n    do {\nlabel_0:\n        rbx++;\n        r14 = rbp;\n        rbp += r13;\n        rax = fcn_0040f880 (r12);\n        edx = \"\\n  - %s\";\n        esi = 1;\n        rdi = stderr;\n        rcx = rax;\n        eax = 0;\n        fprintf_chk ();\n        r12 = *((r15 + rbx*8));\n        if (r12 == 0) {\n            goto label_2;\n        }\nlabel_1:\n    } while (rbx == 0);\n    eax = memcmp (r14, rbp, r13);\n    if (eax != 0) {\n        goto label_0;\n    }\n    rbx++;\n    rbp += r13;\n    rax = fcn_0040f880 (r12);\n    edx = \", %s\";\n    esi = 1;\n    rdi = stderr;\n    rcx = rax;\n    eax = 0;\n    fprintf_chk ();\n    r12 = *((r15 + rbx*8));\n    if (r12 != 0) {\n        goto label_1;\n    }\nlabel_2:\n    rdi = stderr;\n    rax = *((rdi + 0x28));\n    if (rax < *((rdi + 0x30))) {\n        rdx = rax + 1;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = 0xa;\n        return rax;\n    }\n    esi = 0xa;\n    return overflow ();\n}\n"
        },
        {
            "funcName": "fcn_0040a910",
            "funcStartAddr": "0x40a910",
            "funcEndAddr": "0x40a980",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40a910 */\n#include <stdint.h>\n \nuint64_t fcn_0040a910 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r15 = r8;\n    r14 = rdi;\n    r13 = r9;\n    r12 = rsi;\n    rbx = rdx;\n    rax = fcn_0040a650 (r12, rbx, rbp, r8);\n    while (1) {\n        return rax;\n        fcn_0040a770 (r14, r12, rax);\n        fcn_0040a7f0 (rbx, rbp, r15);\n        void (*r13)() ();\n        rax = 0xffffffffffffffff;\n    }\n}\n"
        },
        {
            "funcName": "fcn_0040a9f0",
            "funcStartAddr": "0x40a9f0",
            "funcEndAddr": "0x40aa8e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40a9f0 */\n#include <stdint.h>\n \nuint64_t fcn_0040a9f0 (void) {\n    eax = fcn_00413520 (*(obj.stdout));\n    if (eax != 0) {\n        rax = errno_location ();\n        rbx = rax;\n        if (*(0x0061cbb0) == 0) {\n            goto label_0;\n        }\n        if (*(rax) != 0x20) {\n            goto label_0;\n        }\n    }\n    eax = fcn_00413520 (*(obj.stderr));\n    if (eax != 0) {\n        goto label_1;\n    }\n    return rax;\nlabel_0:\n    edx = 5;\n    rax = dcgettext (0, \"write error\");\n    rdi = imp.__libc_start_main;\n    if (rdi == 0) {\n        goto label_2;\n    }\n    rax = fcn_0040f6d0 (rdi, rsi, rdx, rcx);\n    r8 = rbp;\n    rcx = rax;\n    eax = 0;\n    error (0, *(rbx), \"%s: %s\");\n    do {\nlabel_1:\n        rax = exit (*(0x0061c518));\nlabel_2:\n        rcx = rax;\n        eax = 0;\n        error (0, *(rbx), 0x416abc);\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040aa90",
            "funcStartAddr": "0x40aa90",
            "funcEndAddr": "0x40aabb",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40aa90 */\n#include <stdint.h>\n \nint64_t fcn_0040aa90 (int64_t arg1) {\n    rdi = arg1;\n    rax = 0xefcdab8967452301;\n    *((rdi + 0x10)) = 0;\n    *(rdi) = rax;\n    rax = 0x1032547698badcfe;\n    *((rdi + 8)) = rax;\n    *((rdi + 0x18)) = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040aae0",
            "funcStartAddr": "0x40aae0",
            "funcEndAddr": "0x40b24f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40aae0 */\n#include <stdint.h>\n \nuint32_t rotate_left32 (uint32_t value, uint32_t count) {\n    const uint32_t mask = (CHAR_BIT * sizeof (value)) - 1;\n    count &= mask;\n    return (value << count) | (value >> (-count & mask));\n}\nuint32_t rotate_right32 (uint32_t value, uint32_t count) {\n    const uint32_t mask = (CHAR_BIT * sizeof (value)) - 1;\n    count &= mask;\n    return (value >> count) | (value << (-count & mask));\n}\n \nint64_t fcn_0040aae0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rax = rsi;\n    rax &= 0xfffffffffffffffc;\n    rbx = rdi;\n    rdi = rdx;\n    r11d = *((rdx + 4));\n    rcx = rbx + rax;\n    eax = *(rdx);\n    r10d = *((rdx + 8));\n    *((rsp - 0x18)) = eax;\n    eax = *((rdx + 0xc));\n    *((rsp - 8)) = rdx;\n    edx = esi;\n    *((rsp - 0x20)) = eax;\n    eax = 0;\n    edx += *((rdi + 0x10));\n    al = (edx < 0) ? 1 : 0;\n    rsi >>= 0x20;\n    esi += *((rdi + 0x14));\n    *((rsp - 0x10)) = rcx;\n    esi += eax;\n    *((rdi + 0x10)) = edx;\n    *((rdi + 0x14)) = esi;\n    if (rbx >= rcx) {\n        goto label_0;\n    }\n    r15d = r10d;\n    do {\n        r14d = *(rbx);\n        edi = *((rsp - 0x20));\n        eax = *((rsp - 0x18));\n        esi = *((rbx + 4));\n        r8d = *((rbx + 0xc));\n        r10d = *((rbx + 0x14));\n        edx = r14 + rax - 0x28955b88;\n        eax = edi;\n        ecx = rsi + rdi - 0x173848aa;\n        *((rsp - 0x44)) = esi;\n        eax ^= r15d;\n        ebp = *((rbx + 0x18));\n        r13d = *((rbx + 0x1c));\n        *((rsp - 0x34)) = r10d;\n        eax &= r11d;\n        r12d = *((rbx + 0x24));\n        *((rsp - 0x3c)) = r8d;\n        eax ^= edi;\n        edi = r8 + r11 - 0x3e423112;\n        r8d = *((rbx + 0x2c));\n        eax += edx;\n        edx = r11d;\n        *((rsp - 0x2c)) = r12d;\n        eax = rotate_left32 (eax, 7);\n        edx ^= r15d;\n        *((rsp - 0x24)) = r8d;\n        eax += r11d;\n        edx &= eax;\n        r9d = eax;\n        edx ^= r15d;\n        r9d ^= r11d;\n        edx += ecx;\n        ecx = *((rbx + 8));\n        edx = rotate_left32 (edx, 0xc);\n        edx += eax;\n        esi = rcx + r15 + 0x242070db;\n        *((rsp - 0x40)) = ecx;\n        ecx = r9d;\n        ecx &= edx;\n        r9d = eax;\n        ecx ^= r11d;\n        r9d ^= edx;\n        ecx += esi;\n        esi = r9d;\n        r9d = *((rbx + 0x10));\n        ecx = rotate_right32 (ecx, 0xf);\n        ecx += edx;\n        *((rsp - 0x38)) = r9d;\n        esi &= ecx;\n        esi ^= eax;\n        esi += edi;\n        edi = r9 + rax - 0xa83f051;\n        eax = edx;\n        r9d = *((rbx + 0x3c));\n        esi = rotate_right32 (esi, 0xa);\n        eax ^= ecx;\n        esi += ecx;\n        eax &= esi;\n        eax ^= edx;\n        eax += edi;\n        edi = r10 + rdx + 0x4787c62a;\n        edx = ecx;\n        r10d = ebp;\n        eax = rotate_left32 (eax, 7);\n        edx ^= esi;\n        *((rsp - 0x1c)) = r10d;\n        eax += esi;\n        edx &= eax;\n        edx ^= ecx;\n        edx += edi;\n        edi = rbp + rcx - 0x57cfb9ed;\n        ebp ^= eax;\n        edx = rotate_left32 (edx, 0xc);\n        edx += eax;\n        ecx = ebp;\n        ecx &= edx;\n        ebp ^= edx;\n        ecx ^= esi;\n        ecx += edi;\n        edi = r13 + rsi - 0x2b96aff;\n        esi = ebp;\n        ebp = *((rbx + 0x20));\n        ecx = rotate_right32 (ecx, 0xf);\n        ecx += edx;\n        *((rsp - 0x30)) = ebp;\n        esi &= ecx;\n        esi ^= eax;\n        esi += edi;\n        edi = rbp + rax + 0x698098d8;\n        eax = edx;\n        ebp = *((rbx + 0x30));\n        esi = rotate_right32 (esi, 0xa);\n        eax ^= ecx;\n        esi += ecx;\n        eax &= esi;\n        eax ^= edx;\n        eax += edi;\n        edi = r12 + rdx - 0x74bb0851;\n        edx = ecx;\n        r12d = *((rbx + 0x38));\n        eax = rotate_left32 (eax, 7);\n        edx ^= esi;\n        eax += esi;\n        edx &= eax;\n        edx ^= ecx;\n        edx += edi;\n        edi = *((rbx + 0x28));\n        edx = rotate_left32 (edx, 0xc);\n        *((rsp - 0x28)) = edi;\n        edi = rdi + rcx - 0xa44f;\n        ecx = esi;\n        edx += eax;\n        ecx ^= eax;\n        ecx &= edx;\n        ecx ^= esi;\n        ecx += edi;\n        edi = r8 + rsi - 0x76a32842;\n        esi = eax;\n        r8d = *((rbx + 0x34));\n        ecx = rotate_right32 (ecx, 0xf);\n        esi ^= edx;\n        rbx += 0x40;\n        ecx += edx;\n        esi &= ecx;\n        esi ^= eax;\n        esi += edi;\n        edi = rbp + rax + 0x6b901122;\n        eax = edx;\n        esi = rotate_right32 (esi, 0xa);\n        eax ^= ecx;\n        esi += ecx;\n        eax &= esi;\n        eax ^= edx;\n        eax += edi;\n        edi = r8 + rdx - 0x2678e6d;\n        edx = ecx;\n        eax = rotate_left32 (eax, 7);\n        edx ^= esi;\n        eax += esi;\n        edx &= eax;\n        edx ^= ecx;\n        edx += edi;\n        edi = r12 + rcx - 0x5986bc72;\n        ecx = esi;\n        edx = rotate_left32 (edx, 0xc);\n        ecx ^= eax;\n        edx += eax;\n        ecx &= edx;\n        ecx ^= esi;\n        ecx += edi;\n        edi = r9 + rsi + 0x49b40821;\n        esi = eax;\n        ecx = rotate_right32 (ecx, 0xf);\n        esi ^= edx;\n        ecx += edx;\n        esi &= ecx;\n        esi ^= eax;\n        esi += edi;\n        edi = *((rsp - 0x44));\n        esi = rotate_right32 (esi, 0xa);\n        esi += ecx;\n        edi = rdi + rax - 0x9e1da9e;\n        eax = ecx;\n        eax ^= esi;\n        eax &= edx;\n        eax ^= ecx;\n        eax += edi;\n        edi = r10 + rdx - 0x3fbf4cc0;\n        edx = esi;\n        eax = rotate_left32 (eax, 5);\n        eax += esi;\n        edx ^= eax;\n        edx &= ecx;\n        edx ^= esi;\n        edx += edi;\n        edi = *((rsp - 0x24));\n        edx = rotate_left32 (edx, 9);\n        edx += eax;\n        edi = rdi + rcx + 0x265e5a51;\n        ecx = eax;\n        ecx ^= edx;\n        ecx &= esi;\n        ecx ^= eax;\n        ecx += edi;\n        edi = r14 + rsi - 0x16493856;\n        esi = edx;\n        ecx = rotate_left32 (ecx, 0xe);\n        ecx += edx;\n        esi ^= ecx;\n        esi &= eax;\n        esi ^= edx;\n        esi += edi;\n        edi = *((rsp - 0x34));\n        esi = rotate_right32 (esi, 0xc);\n        esi += ecx;\n        edi = rdi + rax - 0x29d0efa3;\n        eax = ecx;\n        eax ^= esi;\n        eax &= edx;\n        eax ^= ecx;\n        eax += edi;\n        edi = *((rsp - 0x28));\n        eax = rotate_left32 (eax, 5);\n        eax += esi;\n        edi = rdi + rdx + 0x2441453;\n        edx = esi;\n        edx ^= eax;\n        edx &= ecx;\n        edx ^= esi;\n        edx += edi;\n        edi = r9 + rcx - 0x275e197f;\n        ecx = eax;\n        edx = rotate_left32 (edx, 9);\n        edx += eax;\n        ecx ^= edx;\n        ecx &= esi;\n        ecx ^= eax;\n        ecx += edi;\n        edi = *((rsp - 0x38));\n        r10d = *((rsp - 0x2c));\n        ecx = rotate_left32 (ecx, 0xe);\n        ecx += edx;\n        edi = rdi + rsi - 0x182c0438;\n        esi = edx;\n        esi ^= ecx;\n        esi &= eax;\n        esi ^= edx;\n        esi += edi;\n        edi = r10 + rax + 0x21e1cde6;\n        eax = ecx;\n        r10d = *((rsp - 0x30));\n        esi = rotate_right32 (esi, 0xc);\n        esi += ecx;\n        eax ^= esi;\n        eax &= edx;\n        eax ^= ecx;\n        eax += edi;\n        edi = r12 + rdx - 0x3cc8f82a;\n        edx = esi;\n        eax = rotate_left32 (eax, 5);\n        eax += esi;\n        edx ^= eax;\n        edx &= ecx;\n        edx ^= esi;\n        edx += edi;\n        edi = *((rsp - 0x3c));\n        edx = rotate_left32 (edx, 9);\n        edx += eax;\n        edi = rdi + rcx - 0xb2af279;\n        ecx = eax;\n        ecx ^= edx;\n        ecx &= esi;\n        esi = r10 + rsi + 0x455a14ed;\n        r10d = edx;\n        ecx ^= eax;\n        ecx += edi;\n        ecx = rotate_left32 (ecx, 0xe);\n        ecx += edx;\n        r10d ^= ecx;\n        edi = r10d;\n        edi &= eax;\n        edi ^= edx;\n        edi += esi;\n        esi = r8 + rax - 0x561c16fb;\n        eax = ecx;\n        edi = rotate_right32 (edi, 0xc);\n        edi += ecx;\n        eax ^= edi;\n        r10d = rbp + rdi - 0x72d5b376;\n        eax &= edx;\n        *((rsp - 0x14)) = r10d;\n        eax ^= ecx;\n        eax += esi;\n        esi = *((rsp - 0x40));\n        eax = rotate_left32 (eax, 5);\n        eax += edi;\n        esi = rsi + rdx - 0x3105c08;\n        edx = edi;\n        edx ^= eax;\n        edx &= ecx;\n        ecx = r13 + rcx + 0x676f02d9;\n        edx ^= edi;\n        edx += esi;\n        esi = eax;\n        edx = rotate_left32 (edx, 9);\n        edx += eax;\n        esi ^= edx;\n        esi &= edi;\n        esi ^= eax;\n        esi += ecx;\n        ecx = edx;\n        esi = rotate_left32 (esi, 0xe);\n        esi += edx;\n        ecx ^= esi;\n        r10d = ecx;\n        r10d &= eax;\n        edi = r10d;\n        r10d = *((rsp - 0x34));\n        edi ^= edx;\n        edi += *((rsp - 0x14));\n        edi = rotate_right32 (edi, 0xc);\n        eax = r10 + rax - 0x5c6be;\n        edi += esi;\n        ecx ^= edi;\n        ecx += eax;\n        eax = *((rsp - 0x30));\n        ecx = rotate_left32 (ecx, 4);\n        eax = rax + rdx - 0x788e097f;\n        edx = esi;\n        ecx += edi;\n        edx ^= edi;\n        edx ^= ecx;\n        edx += eax;\n        eax = *((rsp - 0x24));\n        edx = rotate_left32 (edx, 0xb);\n        eax = rax + rsi + 0x6d9d6122;\n        esi = edi;\n        edx += ecx;\n        esi ^= ecx;\n        edi = r12 + rdi - 0x21ac7f4;\n        esi ^= edx;\n        esi += eax;\n        eax = ecx;\n        esi = rotate_left32 (esi, 0x10);\n        eax ^= edx;\n        esi += edx;\n        eax ^= esi;\n        r10d = esi;\n        eax += edi;\n        edi = *((rsp - 0x44));\n        eax = rotate_right32 (eax, 9);\n        edi = rdi + rcx - 0x5b4115bc;\n        ecx = edx;\n        eax += esi;\n        ecx ^= esi;\n        r10d ^= eax;\n        esi = r13 + rsi - 0x944b4a0;\n        ecx ^= eax;\n        ecx += edi;\n        edi = *((rsp - 0x38));\n        ecx = rotate_left32 (ecx, 4);\n        ecx += eax;\n        edx = rdi + rdx + 0x4bdecfa9;\n        edi = r10d;\n        edi ^= ecx;\n        edi += edx;\n        edx = eax;\n        edi = rotate_left32 (edi, 0xb);\n        edx ^= ecx;\n        edi += ecx;\n        edx ^= edi;\n        edx += esi;\n        esi = *((rsp - 0x28));\n        edx = rotate_left32 (edx, 0x10);\n        eax = rsi + rax - 0x41404390;\n        esi = ecx;\n        edx += edi;\n        esi ^= edi;\n        esi ^= edx;\n        esi += eax;\n        eax = r8 + rcx + 0x289b7ec6;\n        ecx = edi;\n        esi = rotate_right32 (esi, 9);\n        ecx ^= edx;\n        edi = r14 + rdi - 0x155ed806;\n        esi += edx;\n        ecx ^= esi;\n        r10d = esi;\n        ecx += eax;\n        eax = edx;\n        ecx = rotate_left32 (ecx, 4);\n        eax ^= esi;\n        ecx += esi;\n        eax ^= ecx;\n        r10d ^= ecx;\n        eax += edi;\n        edi = *((rsp - 0x3c));\n        eax = rotate_left32 (eax, 0xb);\n        eax += ecx;\n        edx = rdi + rdx - 0x2b10cf7b;\n        edi = r10d;\n        edi ^= eax;\n        edi += edx;\n        edx = *((rsp - 0x1c));\n        edi = rotate_left32 (edi, 0x10);\n        edx = rdx + rsi + 0x4881d05;\n        esi = ecx;\n        edi += eax;\n        esi ^= eax;\n        esi ^= edi;\n        esi += edx;\n        edx = *((rsp - 0x2c));\n        esi = rotate_right32 (esi, 9);\n        ecx = rdx + rcx - 0x262b2fc7;\n        edx = eax;\n        esi += edi;\n        edx ^= edi;\n        eax = rbp + rax - 0x1924661b;\n        r10d = esi;\n        edx ^= esi;\n        edx += ecx;\n        ecx = edi;\n        edx = rotate_left32 (edx, 4);\n        edx += esi;\n        ecx ^= esi;\n        ecx ^= edx;\n        r10d ^= edx;\n        ecx += eax;\n        eax = r9 + rdi + 0x1fa27cf8;\n        edi = r10d;\n        r10d = *((rsp - 0x34));\n        ecx = rotate_left32 (ecx, 0xb);\n        ecx += edx;\n        edi ^= ecx;\n        edi += eax;\n        eax = *((rsp - 0x40));\n        edi = rotate_left32 (edi, 0x10);\n        esi = rax + rsi - 0x3b53a99b;\n        eax = edx;\n        edi += ecx;\n        eax ^= ecx;\n        eax ^= edi;\n        eax += esi;\n        esi = r14 + rdx - 0xbd6ddbc;\n        edx = ecx;\n        r14d = *((rsp - 0x44));\n        eax = rotate_right32 (eax, 9);\n        edx = ~edx;\n        eax += edi;\n        edx |= eax;\n        edx ^= edi;\n        edx += esi;\n        esi = r13 + rcx + 0x432aff97;\n        r13d = edi;\n        edx = rotate_left32 (edx, 6);\n        r13d = ~r13d;\n        edi = r12 + rdi - 0x546bdc59;\n        edx += eax;\n        ecx = r13d;\n        ecx |= edx;\n        r13d = edx;\n        ecx ^= eax;\n        r13d = ~r13d;\n        ecx += esi;\n        esi = eax;\n        ecx = rotate_left32 (ecx, 0xa);\n        esi = ~esi;\n        ecx += edx;\n        esi |= ecx;\n        r12d = ecx;\n        esi ^= edx;\n        r12d = ~r12d;\n        esi += edi;\n        edi = r10 + rax - 0x36c5fc7;\n        eax = r13d;\n        r10d = *((rsp - 0x1c));\n        esi = rotate_left32 (esi, 0xf);\n        esi += ecx;\n        eax |= esi;\n        eax ^= ecx;\n        eax += edi;\n        edi = rbp + rdx + 0x655b59c3;\n        edx = r12d;\n        ebp = *((rsp - 0x3c));\n        eax = rotate_right32 (eax, 0xb);\n        eax += esi;\n        edx |= eax;\n        edx ^= esi;\n        edx += edi;\n        edi = rbp + rcx - 0x70f3336e;\n        edx = rotate_left32 (edx, 6);\n        ebp = ~ebp;\n        edx += eax;\n        ecx = ebp;\n        ecx |= edx;\n        ecx ^= eax;\n        ebp = ~ebp;\n        ecx += edi;\n        edi = *((rsp - 0x28));\n        ecx = rotate_left32 (ecx, 0xa);\n        edi = rdi + rsi - 0x100b83;\n        esi = eax;\n        ecx += edx;\n        esi = ~esi;\n        esi |= ecx;\n        esi ^= edx;\n        esi += edi;\n        edi = r14 + rax - 0x7a7ba22f;\n        eax = ebp;\n        r14d = *((rsp - 0x30));\n        esi = rotate_left32 (esi, 0xf);\n        esi += ecx;\n        ebp = ~ebp;\n        eax |= esi;\n        eax ^= ecx;\n        eax += edi;\n        edi = r14 + rdx + 0x6fa87e4f;\n        edx = ebp;\n        eax = rotate_right32 (eax, 0xb);\n        ebp = ~ebp;\n        r14d = *((rsp - 0x24));\n        eax += esi;\n        edx |= eax;\n        edx ^= esi;\n        edx += edi;\n        edi = r9 + rcx - 0x1d31920;\n        ecx = ebp;\n        r9d = *((rsp - 0x38));\n        edx = rotate_left32 (edx, 6);\n        edx += eax;\n        ecx |= edx;\n        ecx ^= eax;\n        ecx += edi;\n        edi = r10 + rsi - 0x5cfebcec;\n        esi = eax;\n        r10d = *((rsp - 0x2c));\n        ecx = rotate_left32 (ecx, 0xa);\n        esi = ~esi;\n        eax = r8 + rax + 0x4e0811a1;\n        r8d = edx;\n        ecx += edx;\n        r8d = ~r8d;\n        esi |= ecx;\n        esi ^= edx;\n        edx = r9 + rdx - 0x8ac817e;\n        r9d = ecx;\n        esi += edi;\n        edi = r8d;\n        r9d = ~r9d;\n        esi = rotate_left32 (esi, 0xf);\n        esi += ecx;\n        edi |= esi;\n        edi ^= ecx;\n        ecx = r14 + rcx - 0x42c50dcb;\n        edi += eax;\n        eax = r9d;\n        edi = rotate_right32 (edi, 0xb);\n        edi += esi;\n        eax |= edi;\n        eax ^= esi;\n        eax += edx;\n        edx = esi;\n        eax = rotate_left32 (eax, 6);\n        edx = ~edx;\n        eax += edi;\n        edx |= eax;\n        edx ^= edi;\n        edx += ecx;\n        ecx = *((rsp - 0x40));\n        edx = rotate_left32 (edx, 0xa);\n        esi = rcx + rsi + 0x2ad7d2bb;\n        ecx = edi;\n        edx += eax;\n        ecx = ~ecx;\n        edi = r10 + rdi - 0x14792c6f;\n        ecx |= edx;\n        ecx ^= eax;\n        ecx += esi;\n        esi = eax;\n        ecx = rotate_left32 (ecx, 0xf);\n        esi = ~esi;\n        ecx += edx;\n        esi |= ecx;\n        esi ^= edx;\n        esi += edi;\n        esi = rotate_right32 (esi, 0xb);\n        esi += ecx;\n        r15d += ecx;\n        r11d += esi;\n    } while (*((rsp - 0x10)) > rbx);\n    r10d = r15d;\nlabel_0:\n    rax = *((rsp - 8));\n    ebx = *((rsp - 0x18));\n    *(rax) = ebx;\n    ebx = *((rsp - 0x20));\n    *((rax + 4)) = r11d;\n    *((rax + 8)) = r10d;\n    *((rax + 0xc)) = ebx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040b250",
            "funcStartAddr": "0x40b250",
            "funcEndAddr": "0x40bae4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40b250 */\n#include <stdint.h>\n \nint64_t fcn_0040b250 (int64_t arg1, char * * arg2, int64_t arg4, int64_t arg5) {\n    rdi = arg1;\n    rsi = arg2;\n    rcx = arg4;\n    r8 = arg5;\nlabel_0:\n    edx = *(rdi);\n    rax = rsi;\n    *(rsi) = edx;\n    edx = *((rdi + 4));\n    *((rsi + 4)) = edx;\n    edx = *((rdi + 8));\n    *((rsi + 8)) = edx;\n    edx = *((rdi + 0xc));\n    *((rsi + 0xc)) = edx;\n    return rax;\n    eax = *((rdi + 0x18));\n    rbx = rdi;\n    edx = *((rbx + 0x14));\n    esi = eax;\n    r8 -= r8;\n    r8 &= 0xffffffffffffffc0;\n    r8 -= 0xffffffffffffff80;\n    rcx -= rcx;\n    rcx &= 0xfffffffffffffff0;\n    rcx += 0x1f;\n    rdi -= rdi;\n    rdi &= 0xfffffffffffffff0;\n    rdi += 0x1e;\n    esi += *((rbx + 0x10));\n    *((rbx + 0x10)) = esi;\n    if (esi < 0) {\n        edx++;\n        *((rbx + 0x14)) = edx;\n    }\n    r9d = rsi*8;\n    edx <<= 3;\n    esi >>= 0x1d;\n    *((rbx + rdi*4 + 0x1c)) = r9d;\n    rdi = r8;\n    edx |= esi;\n    r9 = rbx + 0x1c;\n    rdi -= rax;\n    *((rbx + rcx*4 + 0x1c)) = edx;\n    rdx = r9 + rax;\n    rcx = rdi - 8;\n    if (rcx < 8) {\n        if ((cl & 4) != 0) {\n            goto label_1;\n        }\n        if (rcx == 0) {\n            goto label_2;\n        }\n        eax = *(0x00416ae0);\n        *(rdx) = al;\n        if ((cl & 2) == 0) {\n            goto label_2;\n        }\n        eax = *((rcx + 0x416ade));\n        *((rdx + rcx - 2)) = ax;\n        goto label_2;\n    }\n    rax = *(0x00416ae0);\n    rdi = rdx + 8;\n    esi = 0x416ae0;\n    rdi &= 0xfffffffffffffff8;\n    *(rdx) = rax;\n    rax = *((rcx + 0x416ad8));\n    *((rdx + rcx - 8)) = rax;\n    rdx -= rdi;\n    rcx += rdx;\n    rsi -= rdx;\n    rcx >>= 3;\n    do {\n        *(rdi) = *(rsi);\n        rcx--;\n        rsi += 8;\n        rdi += 8;\n    } while (rcx != 0);\n    do {\nlabel_2:\n        fcn_0040aae0 (r9, r8, rbx);\n        rsi = rbp;\n        rdi = rbx;\n        goto label_0;\nlabel_1:\n        eax = *(0x00416ae0);\n        *(rdx) = eax;\n        eax = *((rcx + 0x416adc));\n        *((rdx + rcx - 4)) = eax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040b360",
            "funcStartAddr": "0x40b360",
            "funcEndAddr": "0x40b65e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40b360 */\n#include <stdint.h>\n \nuint64_t fcn_0040b360 (char * arg1, int64_t arg3, size_t n) {\n    rdi = arg1;\n    rdx = arg3;\n    rsi = n;\n    r13 = rsi;\n    r12 = rdx;\n    rbx = rdi;\n    eax = *((rdx + 0x18));\n    if (eax != 0) {\n        goto label_4;\n    }\nlabel_0:\n    if (r13 <= 0x3f) {\n        goto label_5;\n    }\n    if ((bl & 3) == 0) {\n        goto label_6;\n    }\n    rbp = r12 + 0x1c;\n    if (r13 == 0x40) {\n        goto label_7;\n    }\n    rax = r13 - 0x41;\n    rax >>= 6;\n    r14 = rax + 1;\n    r15 = rax;\n    r14 <<= 6;\n    r14 += rbx;\n    do {\n        __asm (\"movdqu xmm0, xmmword [rbx]\");\n        rbx += 0x40;\n        __asm (\"movups xmmword [rbp], xmm0\");\n        __asm (\"movdqu xmm1, xmmword [rbx - 0x30]\");\n        __asm (\"movups xmmword [rbp + 0x10], xmm1\");\n        __asm (\"movdqu xmm2, xmmword [rbx - 0x20]\");\n        __asm (\"movups xmmword [rbp + 0x20], xmm2\");\n        __asm (\"movdqu xmm3, xmmword [rbx - 0x10]\");\n        __asm (\"movups xmmword [rbp + 0x30], xmm3\");\n        fcn_0040aae0 (rbp, 0x40, r12);\n    } while (rbx != r14);\n    rax = r15;\n    rax = -rax;\n    rax <<= 6;\n    r13 = r13 + rax - 0x40;\nlabel_3:\n    ecx = *((r12 + 0x18));\n    eax = r13d;\n    rsi = rbp + rcx;\n    if (r13d >= 8) {\n        goto label_8;\n    }\n    if ((r13b & 4) != 0) {\n        goto label_9;\n    }\n    if (r13d == 0) {\n        goto label_1;\n    }\n    edx = *(r14);\n    *(rsi) = dl;\n    if ((al & 2) != 0) {\n        goto label_10;\n    }\n    do {\nlabel_1:\n        r13 += rcx;\n        if (r13 > 0x3f) {\n            r13 -= 0x40;\n            fcn_0040aae0 (rbp, 0x40, r12);\n            memcpy (rbp, r12 + 0x5c, r13);\n        }\n        *((r12 + 0x18)) = r13d;\n        return rax;\nlabel_6:\n        r13d &= 0x3f;\n        rbp &= 0xffffffffffffffc0;\n        rbx += rbp;\n        eax = fcn_0040aae0 (rbx, rbp, r12);\nlabel_5:\n        if (r13 != 0) {\n            goto label_11;\n        }\n        return rax;\nlabel_4:\n        edx = 0x80;\n        r15 = r12 + 0x1c;\n        rdx -= rbp;\n        rdi = r15 + rbp;\n        if (rdx > rsi) {\n            rdx = rsi;\n        }\n        r14 = rdx;\n        memcpy (rdi, rbx, rdx);\n        esi = *((r12 + 0x18));\n        esi += r14d;\n        *((r12 + 0x18)) = esi;\n        if (esi > 0x40) {\n            goto label_12;\n        }\nlabel_2:\n        rbx += r14;\n        r13 -= r14;\n        goto label_0;\nlabel_8:\n        rax = *(r14);\n        edx = r13d;\n        rdi = rsi + 8;\n        rdi &= 0xfffffffffffffff8;\n        *(rsi) = rax;\n        rax = *((r14 + rdx - 8));\n        *((rsi + rdx - 8)) = rax;\n        rax = rsi;\n        rax -= rdi;\n        r14 -= rax;\n        eax += r13d;\n        eax &= 0xfffffff8;\n    } while (eax < 8);\n    eax &= 0xfffffff8;\n    edx = 0;\n    do {\n        esi = edx;\n        edx += 8;\n        r8 = *((r14 + rsi));\n        *((rdi + rsi)) = r8;\n    } while (edx < eax);\n    goto label_1;\nlabel_12:\n    esi &= 0xffffffc0;\n    fcn_0040aae0 (r15, rsi, r12);\n    ecx = *((r12 + 0x18));\n    rax = rbp + r14;\n    rax &= 0xffffffffffffffc0;\n    edx = ecx;\n    rax += r15;\n    edx &= 0x3f;\n    *((r12 + 0x18)) = edx;\n    if (edx >= 8) {\n        goto label_13;\n    }\n    if ((cl & 4) != 0) {\n        goto label_14;\n    }\n    if (edx == 0) {\n        goto label_2;\n    }\n    esi = *(rax);\n    ecx &= 2;\n    *((r12 + 0x1c)) = sil;\n    if (ecx == 0) {\n        goto label_2;\n    }\n    eax = *((rax + rdx - 2));\n    *((r15 + rdx - 2)) = ax;\n    goto label_2;\nlabel_13:\n    rcx = *(rax);\n    *((r12 + 0x1c)) = rcx;\n    ecx = edx;\n    rsi = *((rax + rcx - 8));\n    *((r15 + rcx - 8)) = rsi;\n    rsi = r12 + 0x24;\n    rsi &= 0xfffffffffffffff8;\n    r15 -= rsi;\n    rax -= r15;\n    r15d += edx;\n    r15d &= 0xfffffff8;\n    if (r15d < 8) {\n        goto label_2;\n    }\n    r15d &= 0xfffffff8;\n    edx = 0;\n    do {\n        ecx = edx;\n        edx += 8;\n        rdi = *((rax + rcx));\n        *((rsi + rcx)) = rdi;\n    } while (edx < r15d);\n    goto label_2;\nlabel_14:\n    ecx = *(rax);\n    *((r12 + 0x1c)) = ecx;\n    eax = *((rax + rdx - 4));\n    *((r15 + rdx - 4)) = eax;\n    goto label_2;\nlabel_7:\n    r14 = rbx;\n    goto label_3;\nlabel_9:\n    edx = *(r14);\n    *(rsi) = edx;\n    edx = r13d;\n    eax = *((r14 + rdx - 4));\n    *((rsi + rdx - 4)) = eax;\n    goto label_1;\nlabel_10:\n    edx = r13d;\n    eax = *((r14 + rdx - 2));\n    *((rsi + rdx - 2)) = ax;\n    goto label_1;\nlabel_11:\n    rbp = r12 + 0x1c;\n    r14 = rbx;\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_0040b800",
            "funcStartAddr": "0x40b800",
            "funcEndAddr": "0x40b821",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40b800 */\n#include <stdint.h>\n \nuint32_t fcn_0040b800 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    if (rdi != 0) {\n        ebx = esi;\n        eax = fileno (rdi);\n        ecx = ebx;\n        edx = 0;\n        esi = 0;\n        edi = eax;\n        void (*0x402af0)() ();\n    }\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_0040b830",
            "funcStartAddr": "0x40b830",
            "funcEndAddr": "0x40b8f3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40b830 */\n#include <stdint.h>\n \nint64_t fcn_0040b830 (int64_t arg1) {\n    rdi = arg1;\n    rsi = *(rdi);\n    edx = *(rsi);\n    if (dl == 0) {\n        goto label_3;\n    }\n    ecx = 0;\n    eax = 0;\n    r9d = 0;\n    r11d = 1;\n    r10 = 0x3ffffff03ffffff;\n    while (cl != 0) {\n        ecx = (int32_t) dl;\n        ecx -= 0x41;\n        if (ecx <= 0x39) {\n            r8 = r11;\n            r8 <<= cl;\n            ecx = 0;\n            if ((r8 & r10) != 0) {\n                goto label_0;\n            }\n        }\n        ecx = 0;\n        if (dl != 0x7e) {\n            rax = r9;\n        }\nlabel_0:\n        rsi++;\n        *(rdi) = rsi;\n        edx = *(rsi);\n        if (dl == 0) {\n            goto label_4;\n        }\nlabel_1:\n    }\n    if (dl == 0x2e) {\n        goto label_5;\n    }\n    if (dl > 0x5a) {\n        goto label_6;\n    }\n    if (dl >= 0x41) {\n        goto label_0;\n    }\n    r8d = rdx - 0x30;\n    if (r8b <= 9) {\n        goto label_0;\n    }\nlabel_2:\n    if (dl != 0x7e) {\n        rax = r9;\n    }\n    rsi++;\n    *(rdi) = rsi;\n    edx = *(rsi);\n    if (dl != 0) {\n        goto label_1;\n    }\nlabel_4:\n    return rax;\nlabel_6:\n    r8d = rdx - 0x61;\n    if (r8b > 0x19) {\n        goto label_2;\n    }\n    goto label_0;\nlabel_5:\n    ecx = 1;\n    if (rax == 0) {\n        rax = rsi;\n    }\n    goto label_0;\nlabel_3:\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040b900",
            "funcStartAddr": "0x40b900",
            "funcEndAddr": "0x40bd0d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40b900 */\n#include <stdint.h>\n \nuint64_t fcn_0040b900 (int64_t arg1, int64_t arg2) {\n    uint32_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rdi;\n    eax = strcmp (rdi, rsi);\n    r12d = eax;\n    if (eax == 0) {\n        goto label_4;\n    }\n    r8d = *(rbx);\n    if (r8b == 0) {\n        goto label_7;\n    }\n    r9d = *(rbp);\n    if (r9b == 0) {\n        goto label_11;\n    }\n    edx = 0x416b21;\n    ecx = 2;\n    rdi = rbx;\n    rsi = rdx;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (r9b > 0) ? 1 : 0;\n    if (al == 0) {\n        goto label_7;\n    }\n    ecx = 2;\n    rsi = rdx;\n    rdi = rbp;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (al > 0) ? 1 : 0;\n    if (al == 0) {\n        goto label_11;\n    }\n    edx = 0x416b20;\n    ecx = 3;\n    rdi = rbx;\n    rsi = rdx;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (al > 0) ? 1 : 0;\n    if (al == 0) {\n        goto label_7;\n    }\n    ecx = 3;\n    rsi = rdx;\n    rdi = rbp;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (al > 0) ? 1 : 0;\n    if (al == 0) {\n        goto label_11;\n    }\n    dl = (r8b == 0x2e) ? 1 : 0;\n    if (r9b != 0x2e) {\n        if (dl != 0) {\n            goto label_7;\n        }\n    }\n    al = (r9b == 0x2e) ? 1 : 0;\n    if (r8b == 0x2e) {\n        goto label_16;\n    }\n    if (al != 0) {\n        goto label_11;\n    }\nlabel_6:\n    *((rsp + 0x10)) = rbx;\n    *((rsp + 0x18)) = rbp;\n    rax = fcn_0040b830 (rsp + 0x10);\n    r13 = rax;\n    rax = fcn_0040b830 (rsp + 0x18);\n    if (r13 == 0) {\n        goto label_17;\n    }\n    r13 -= rbx;\n    if (rax == 0) {\n        goto label_18;\n    }\nlabel_9:\n    rax -= rbp;\n    r14 = rax;\nlabel_15:\n    if (r13 == r14) {\n        goto label_19;\n    }\nlabel_10:\n    esi = 0;\n    edx = 0;\n    r8d = 1;\n    r15 = 0x3ffffff03ffffff;\nlabel_3:\n    if (r13 <= rdx) {\n        if (r14 <= rsi) {\n            goto label_4;\n        }\n    }\n    r9 = rsi;\n    r9 -= rdx;\n    if (r13 <= rdx) {\n        goto label_20;\n    }\n    do {\n        eax = *((rbx + rdx));\n        ecx = (int32_t) al;\n        ecx -= 0x30;\n        if (ecx <= 9) {\n            goto label_20;\n        }\n        r10d = (int32_t) al;\n        ecx = r10 - 0x30;\n        if (ecx <= 9) {\n            goto label_21;\n        }\n        ecx = r10d;\nlabel_0:\n        ecx -= 0x41;\n        if (ecx <= 0x39) {\n            rdi = r8;\n            rdi <<= cl;\n            if ((rdi & r15) != 0) {\n                goto label_22;\n            }\n        }\n        if (al == 0x7e) {\n            goto label_23;\n        }\n        r10d += 0x100;\nlabel_14:\n        rax = rdx + r9;\n        if (r14 == rax) {\n            goto label_24;\n        }\nlabel_8:\n        edi = *((rbp + rsi));\n        eax = (int32_t) dil;\n        ecx = rax - 0x30;\n        if (ecx > 9) {\n            goto label_25;\n        }\n        eax = 0;\nlabel_2:\n        if (eax != r10d) {\n            goto label_26;\n        }\nlabel_1:\n        rdx++;\n        rsi++;\n    } while (r13 > rdx);\nlabel_20:\n    edi = *((rbp + rsi));\n    ecx = (int32_t) dil;\n    if (r14 <= rsi) {\n        goto label_27;\n    }\n    eax = (int32_t) dil;\n    eax -= 0x30;\n    if (eax <= 9) {\n        goto label_27;\n    }\n    if (r13 == rdx) {\n        goto label_5;\n    }\n    ecx = *((rbx + rdx));\n    r11d = rcx - 0x30;\n    eax = ecx;\n    r10d = ecx;\n    if (r11d > 9) {\n        goto label_0;\n    }\nlabel_5:\n    eax = (int32_t) dil;\n    r10d = 0;\n    ecx = rax - 0x30;\n    if (ecx <= 9) {\n        goto label_1;\n    }\nlabel_25:\n    ecx = (int32_t) dil;\n    ecx -= 0x41;\n    if (ecx > 0x39) {\n        goto label_28;\n    }\n    r11 = r8;\n    r11 <<= cl;\n    if ((r11 & r15) != 0) {\n        goto label_2;\n    }\nlabel_28:\n    if (dil == 0x7e) {\n        goto label_29;\n    }\n    eax += 0x100;\n    goto label_2;\n    do {\n        rdx++;\nlabel_27:\n        eax = *((rbx + rdx));\n    } while (al == 0x30);\n    if (dil != 0x30) {\n        goto label_30;\n    }\n    do {\n        rsi++;\n        ecx = *((rbp + rsi));\n    } while (cl == 0x30);\nlabel_30:\n    edi = rax - 0x30;\n    r9d = rcx - 0x30;\n    if (edi <= 9) {\n        if (r9d <= 9) {\n            goto label_31;\n        }\nlabel_11:\n        r12d = 1;\nlabel_4:\n        eax = r12d;\n        return rax;\n    }\n    if (r9d > 9) {\n        goto label_3;\n    }\nlabel_7:\n    r12d = 0xffffffff;\n    goto label_4;\nlabel_21:\n    if (r14 == rsi) {\n        goto label_1;\n    }\n    edi = *((rbp + rsi));\n    goto label_5;\nlabel_16:\n    if (al == 0) {\n        goto label_6;\n    }\n    if (dl == 0) {\n        goto label_6;\n    }\n    rbx++;\n    rbp++;\n    goto label_6;\nlabel_31:\n    r10 = rsi;\n    rdi = rdx;\n    r9d = 0;\n    r10 -= rdx;\n    r10 += rbp;\nlabel_12:\n    eax -= ecx;\n    if (r9d == 0) {\n        r9d = eax;\n    }\n    rdi++;\n    rax = rdi;\n    ecx = *((r10 + rdi));\n    rax -= rdx;\n    rax += rsi;\n    r11d = rcx - 0x30;\n    *((rsp + 8)) = rax;\n    eax = *((rbx + rdi));\n    *((rsp + 4)) = r11d;\n    r11d = rax - 0x30;\n    if (r11d <= 9) {\n        goto label_32;\n    }\n    if (*((rsp + 4)) <= 9) {\n        goto label_7;\n    }\n    if (r9d != 0) {\n        goto label_33;\n    }\n    rsi = *((rsp + 8));\n    rdx = rdi;\n    goto label_3;\nlabel_22:\n    rcx = rdx + r9;\n    eax = 0;\n    if (r14 != rcx) {\n        goto label_8;\n    }\n    goto label_2;\nlabel_17:\n    r13 = *((rsp + 0x10));\n    r13 -= rbx;\n    if (rax != 0) {\n        goto label_9;\n    }\nlabel_13:\n    r14 = *((rsp + 0x18));\n    r14 -= rbp;\n    goto label_10;\nlabel_32:\n    if (*((rsp + 4)) > 9) {\n        goto label_11;\n    }\n    goto label_12;\nlabel_19:\n    eax = strncmp (rbx, rbp, r13);\n    if (eax != 0) {\n        goto label_10;\n    }\n    r13 = *((rsp + 0x10));\n    r13 -= rbx;\n    goto label_13;\nlabel_24:\n    r12d = r10d;\n    goto label_4;\nlabel_23:\n    r10d = 0xffffffff;\n    goto label_14;\nlabel_29:\n    eax = 0xffffffff;\n    goto label_2;\nlabel_26:\n    r10d -= eax;\n    r12d = r10d;\n    goto label_4;\nlabel_33:\n    r12d = r9d;\n    goto label_4;\nlabel_18:\n    r14 = *((rsp + 0x18));\n    r14 -= rbp;\n    goto label_15;\n}\n"
        },
        {
            "funcName": "fcn_0040bd10",
            "funcStartAddr": "0x40bd10",
            "funcEndAddr": "0x40bd6e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40bd10 */\n#include <stdint.h>\n \nuint64_t fcn_0040bd10 (int32_t category) {\n    rdi = category;\n    rax = setlocale (rdi, 0);\n    rdx = rax;\n    eax = 1;\n    if (rdx != 0) {\n        ecx = 2;\n        edi = 0x416a04;\n        rsi = rdx;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (rdx > 0) ? 1 : 0;\n        eax = 0;\n        if (cl != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    edi = \"POSIX\";\n    ecx = 6;\n    rsi = rdx;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (cl > 0) ? 1 : 0;\n    al = (al != 0) ? 1 : 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040bd70",
            "funcStartAddr": "0x40bd70",
            "funcEndAddr": "0x40be03",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40bd70 */\n#include <stdint.h>\n \nint64_t fcn_0040bd70 (uint32_t arg1, int64_t arg3) {\n    rdi = arg1;\n    rdx = arg3;\n    esi = 0xa;\n    r9 = 0xaaaaaaaaaaaaaaab;\n    if (rdi >= 0xa) {\n        rsi = rdi;\n    }\n    rsi |= 1;\n    if (rsi == -1) {\n        goto label_1;\n    }\nlabel_0:\n    rax = rsi;\n    rcx = rsi;\n    rdx:rax = rax * r9;\n    rax = rdx;\n    rax >>= 1;\n    rax *= 3;\n    rcx -= rax;\n    rax = rcx;\n    if (rsi <= 9) {\n        goto label_2;\n    }\n    if (rcx == 0) {\n        goto label_3;\n    }\n    r8d = 0x10;\n    edi = 9;\n    ecx = 3;\n    while (rdi < rsi) {\n        r8 += 8;\n        if (rdx == 0) {\n            goto label_3;\n        }\n        rcx += 2;\n        rax = rsi;\n        edx = 0;\n        rdi += r8;\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rax = rdx;\n    }\nlabel_2:\n    if (rax != 0) {\n        goto label_1;\n    }\nlabel_3:\n    rsi += 2;\n    if (rsi != -1) {\n        goto label_0;\n    }\nlabel_1:\n    rax = rsi;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040be30",
            "funcStartAddr": "0x40be30",
            "funcEndAddr": "0x414d81",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40be30 */\n#include <stdint.h>\n \nuint64_t fcn_0040be30 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    do {\n        /* [13] -r-x section size 69720 named .text */\n        abort ();\n        rbx = rdi;\n        rdi = rsi;\n        rsi = *((rbx + 0x10));\n        rax = uint64_t (*rbx + 0x30)(uint64_t) (rbx);\n    } while (*((rbx + 0x10)) <= rax);\n    rax <<= 4;\n    rax += *(rbx);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040be60",
            "funcStartAddr": "0x40be60",
            "funcEndAddr": "0x40bf79",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40be60 */\n#include <stdint.h>\n \nuint64_t fcn_0040be60 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r14 = rdx;\n    r13d = ecx;\n    r12 = rdi;\n    rax = fcn_0040be30 (rdi, rsi);\n    *(r14) = rax;\n    rsi = *(rax);\n    if (rsi == 0) {\n        goto label_1;\n    }\n    rbx = rax;\n    if (rsi == rbp) {\n        goto label_2;\n    }\n    rdi = rbp;\n    al = uint64_t (*r12 + 0x38)() ();\n    if (al != 0) {\n        goto label_3;\n    }\n    rax = *((rbx + 8));\n    if (rax == 0) {\n        goto label_1;\n    }\n    rsi = *(rax);\n    if (rbp != rsi) {\n        goto label_4;\n    }\n    goto label_5;\n    do {\n        rbx = *((rbx + 8));\n        rax = *((rbx + 8));\n        if (rax == 0) {\n            goto label_1;\n        }\n        rsi = *(rax);\n        if (rsi == rbp) {\n            goto label_5;\n        }\nlabel_4:\n        rdi = rbp;\n        al = uint64_t (*r12 + 0x38)() ();\n    } while (al == 0);\n    rax = *((rbx + 8));\n    rsi = *(rax);\nlabel_5:\n    if (r13b == 0) {\n        goto label_0;\n    }\n    rdx = *((rax + 8));\n    *((rbx + 8)) = rdx;\n    *(rax) = 0;\n    rdx = *((r12 + 0x48));\n    *((rax + 8)) = rdx;\n    *((r12 + 0x48)) = rax;\n    do {\nlabel_0:\n        rax = rsi;\n        return rax;\nlabel_3:\n        rsi = *(rbx);\nlabel_2:\n    } while (r13b == 0);\n    rax = *((rbx + 8));\n    if (rax != 0) {\n        __asm (\"movdqu xmm0, xmmword [rax]\");\n        __asm (\"movups xmmword [rbx], xmm0\");\n        *(rax) = 0;\n        rdx = *((r12 + 0x48));\n        *((rax + 8)) = rdx;\n        *((r12 + 0x48)) = rax;\n        rax = rsi;\n        return rax;\nlabel_1:\n        esi = 0;\n        rax = rsi;\n        return rax;\n    }\n    *(rbx) = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040bf80",
            "funcStartAddr": "0x40bf80",
            "funcEndAddr": "0x40bffe",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40bf80 */\n#include <stdint.h>\n \nint64_t fcn_0040bf80 (int64_t arg1) {\n    rdi = arg1;\n    rax = *(rdi);\n    if (rax != 0x416ba0) {\n        xmm0 = *((rax + 8));\n        __asm (\"comiss xmm0, dword [0x00416bb4]\");\n        if (rax > 0x416ba0) {\n            xmm1 = *(0x00416bb8);\n            __asm (\"comiss xmm1, xmm0\");\n            if (rax <= 0x416ba0) {\n                goto label_0;\n            }\n            xmm1 = *((rax + 0xc));\n            __asm (\"comiss xmm1, dword [0x00416bbc]\");\n            if (rax <= 0x416ba0) {\n                goto label_0;\n            }\n            xmm1 = *(rax);\n            __asm (\"comiss xmm1, dword [0x00416bc0]\");\n            if (rax < 0x416ba0) {\n                goto label_0;\n            }\n            __asm (\"addss xmm1, dword [0x00416bb4]\");\n            xmm2 = *((rax + 4));\n            __asm (\"comiss xmm2, xmm1\");\n            if (rax <= 0x416ba0) {\n                goto label_0;\n            }\n            xmm3 = *(0x00416bc4);\n            __asm (\"comiss xmm3, xmm2\");\n            if (rax < 0x416ba0) {\n                goto label_0;\n            }\n            __asm (\"comiss xmm0, xmm1\");\n            eax = 1;\n            if (rax > 0x416ba0) {\n                goto label_1;\n            }\n        }\nlabel_0:\n        *(rdi) = 0x416ba0;\n        eax = 0;\n        return rax;\n    }\n    eax = 1;\nlabel_1:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040c000",
            "funcStartAddr": "0x40c000",
            "funcEndAddr": "0x40c14a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40c000 */\n#include <stdint.h>\n \nuint64_t fcn_0040c000 (int64_t arg1, uint32_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r14d = edx;\n    r13 = rsi;\n    r12 = *(rsi);\n    if (r12 < *((rsi + 8))) {\n        goto label_2;\n    }\n    goto label_5;\n    do {\nlabel_1:\n        r12 += 0x10;\n        if (*((r13 + 8)) <= r12) {\n            goto label_5;\n        }\nlabel_2:\n        r15 = *(r12);\n    } while (r15 == 0);\n    rbx = *((r12 + 8));\n    if (rbx != 0) {\n        goto label_0;\n    }\n    goto label_6;\n    do {\n        rcx = *((rax + 8));\n        *((rbx + 8)) = rcx;\n        *((rax + 8)) = rbx;\n        rbx = rdx;\n        if (rdx == 0) {\n            goto label_7;\n        }\nlabel_0:\n        r15 = *(rbx);\n        rax = fcn_0040be30 (rbp, r15);\n        rdx = *((rbx + 8));\n    } while (*(rax) != 0);\n    *(rax) = r15;\n    *((rbp + 0x18))++;\n    *(rbx) = 0;\n    rax = *((rbp + 0x48));\n    *((rbx + 8)) = rax;\n    *((rbp + 0x48)) = rbx;\n    rbx = rdx;\n    if (rdx != 0) {\n        goto label_0;\n    }\nlabel_7:\n    r15 = *(r12);\nlabel_6:\n    *((r12 + 8)) = 0;\n    if (r14b != 0) {\n        goto label_1;\n    }\n    rax = fcn_0040be30 (rbp, r15);\n    rbx = rax;\n    if (*(rax) == 0) {\n        goto label_8;\n    }\n    rax = *((rbp + 0x48));\n    if (rax == 0) {\n        goto label_9;\n    }\n    rdx = *((rax + 8));\n    *((rbp + 0x48)) = rdx;\nlabel_4:\n    rdx = *((rbx + 8));\n    *(rax) = r15;\n    *((rax + 8)) = rdx;\n    *((rbx + 8)) = rax;\nlabel_3:\n    *(r12) = 0;\n    r12 += 0x10;\n    *((r13 + 0x18))--;\n    if (*((r13 + 8)) > r12) {\n        goto label_2;\n    }\nlabel_5:\n    eax = 1;\n    return rax;\nlabel_8:\n    *(rax) = r15;\n    *((rbp + 0x18))++;\n    goto label_3;\nlabel_9:\n    rax = malloc (0x10);\n    if (rax != 0) {\n        goto label_4;\n    }\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040c600",
            "funcStartAddr": "0x40c600",
            "funcEndAddr": "0x40c78a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40c600 */\n#include <stdint.h>\n \nuint64_t fcn_0040c600 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    eax = 0x40be10;\n    r15 = rsi;\n    r14 = r8;\n    r13 = rcx;\n    r12 = rdx;\n    edi = 0x50;\n    if (rdx == 0) {\n        r12 = rax;\n    }\n    eax = 0x40be20;\n    if (rcx == 0) {\n        r13 = rax;\n    }\n    rax = malloc (rdi);\n    rbx = rax;\n    if (rax == 0) {\n        goto label_4;\n    }\n    rdi = rax + 0x28;\n    if (r15 == 0) {\n        goto label_5;\n    }\n    *((rax + 0x28)) = r15;\n    al = fcn_0040bf80 (rdi);\n    if (al == 0) {\n        goto label_0;\n    }\n    if (*((r15 + 0x10)) == 0) {\n        goto label_6;\n    }\nlabel_1:\n    rax = fcn_0040bd70 (rbp, rsi);\n    rax >>= 0x3d;\n    al = (rax != 0) ? 1 : 0;\n    eax = (int32_t) al;\n    if (((rbp >> 0x3c) & 1) < 0) {\n        goto label_0;\n    }\n    if (rax != 0) {\n        goto label_0;\n    }\n    *((rbx + 0x10)) = rbp;\n    if (rbp == 0) {\n        goto label_0;\n    }\n    rax = calloc (rbp, 0x10);\n    *(rbx) = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    rbp <<= 4;\n    *((rbx + 0x18)) = 0;\n    rbp += rax;\n    *((rbx + 0x20)) = 0;\n    *((rbx + 8)) = rbp;\n    *((rbx + 0x30)) = r12;\n    *((rbx + 0x38)) = r13;\n    *((rbx + 0x40)) = r14;\n    *((rbx + 0x48)) = 0;\n    while (al == 0) {\nlabel_0:\n        ebx = 0;\n        free (rbx);\nlabel_4:\n        rax = rbx;\n        return rax;\nlabel_5:\n        *((rax + 0x28)) = 0x416ba0;\n        al = fcn_0040bf80 (rdi);\n        xmm1 = *(0x00416bc8);\n    }\n    if (rbp < 0) {\n        goto label_7;\n    }\nlabel_2:\n    xmm0 = 0;\n    __asm (\"cvtsi2ss xmm0, rbp\");\nlabel_3:\n    __asm (\"divss xmm0, xmm1\");\n    __asm (\"comiss xmm0, dword [0x00416bcc]\");\n    if (rbp >= 0) {\n        goto label_0;\n    }\n    __asm (\"comiss xmm0, dword [0x00416bd0]\");\n    if (rbp < 0) {\n        goto label_8;\n    }\n    __asm (\"subss xmm0, dword [0x00416bd0]\");\n    __asm (\"cvttss2si rbp, xmm0\");\n    __asm (\"btc rbp, 0x3f\");\n    goto label_1;\nlabel_6:\n    xmm1 = *((r15 + 8));\n    if (rbp >= 0) {\n        goto label_2;\n    }\nlabel_7:\n    rax = rbp;\n    ebp &= 1;\n    xmm0 = 0;\n    rax >>= 1;\n    rax |= rbp;\n    __asm (\"cvtsi2ss xmm0, rax\");\n    __asm (\"addss xmm0, xmm0\");\n    goto label_3;\nlabel_8:\n    __asm (\"cvttss2si rbp, xmm0\");\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040c920",
            "funcStartAddr": "0x40c920",
            "funcEndAddr": "0x416530",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40c920 */\n#include <stdint.h>\n \nuint64_t fcn_0040c920 (int64_t arg1, uint32_t arg2) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    rdi = arg1;\n    rsi = arg2;\n    do {\nlabel_0:\n        rax = abort ();\n        r12 = *((rdi + 0x28));\n        if (*((r12 + 0x10)) == 0) {\n            if (rsi < 0) {\n                goto label_3;\n            }\n            xmm0 = 0;\n            __asm (\"cvtsi2ss xmm0, rsi\");\nlabel_1:\n            __asm (\"divss xmm0, dword [r12 + 8]\");\n            __asm (\"comiss xmm0, dword [0x00416bcc]\");\n            if (rsi >= 0) {\n                goto label_4;\n            }\n            __asm (\"comiss xmm0, dword [0x00416bd0]\");\n            if (rsi < 0) {\n                goto label_5;\n            }\n            __asm (\"subss xmm0, dword [0x00416bd0]\");\n            __asm (\"cvttss2si rsi, xmm0\");\n            __asm (\"btc rsi, 0x3f\");\n        }\nlabel_2:\n        rax = fcn_0040bd70 (rsi, rsi);\n        rdx = rax*8;\n        rbx = rax;\n        rax >>= 0x3d;\n        al = (rax != 0) ? 1 : 0;\n        edx = 1;\n        eax = (int32_t) al;\n        __asm (\"cmovs rax, rdx\");\n        if (rbx == 0) {\n            goto label_4;\n        }\n        if (rax != 0) {\n            goto label_4;\n        }\n        if (*((rbp + 0x10)) == rbx) {\n            goto label_6;\n        }\n        rax = calloc (rbx, 0x10);\n        *(rsp) = rax;\n        if (rax == 0) {\n            goto label_4;\n        }\n        *((rsp + 0x10)) = rbx;\n        rbx <<= 4;\n        rbx += rax;\n        rax = *((rbp + 0x30));\n        *((rsp + 0x18)) = 0;\n        *((rsp + 8)) = rbx;\n        *((rsp + 0x30)) = rax;\n        rax = *((rbp + 0x38));\n        *((rsp + 0x20)) = 0;\n        *((rsp + 0x38)) = rax;\n        rax = *((rbp + 0x40));\n        *((rsp + 0x28)) = r12;\n        *((rsp + 0x40)) = rax;\n        rax = *((rbp + 0x48));\n        *((rsp + 0x48)) = rax;\n        eax = fcn_0040c000 (rsp, rbp, 0);\n        ebx = eax;\n        if (al != 0) {\n            goto label_7;\n        }\n        rax = *((rsp + 0x48));\n        *((rbp + 0x48)) = rax;\n        al = fcn_0040c000 (rbp, rsp, 1);\n    } while (al == 0);\n    al = fcn_0040c000 (rbp, rsp, 0);\n    if (al == 0) {\n        goto label_0;\n    }\n    free (*(rsp));\n    eax = ebx;\n    return rax;\nlabel_4:\n    ebx = 0;\n    do {\n        eax = ebx;\n        return rax;\nlabel_3:\n        rax = rsi;\n        esi &= 1;\n        xmm0 = 0;\n        rax >>= 1;\n        rax |= rsi;\n        __asm (\"cvtsi2ss xmm0, rax\");\n        __asm (\"addss xmm0, xmm0\");\n        goto label_1;\nlabel_5:\n        __asm (\"cvttss2si rsi, xmm0\");\n        goto label_2;\nlabel_6:\n        ebx = 1;\n        eax = 1;\n        return rax;\nlabel_7:\n        free (*(rbp));\n        rax = *(rsp);\n        *(rbp) = rax;\n        rax = *((rsp + 8));\n        *((rbp + 8)) = rax;\n        rax = *((rsp + 0x10));\n        *((rbp + 0x10)) = rax;\n        rax = *((rsp + 0x18));\n        *((rbp + 0x18)) = rax;\n        rax = *((rsp + 0x48));\n        *((rbp + 0x48)) = rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040cb20",
            "funcStartAddr": "0x40cb20",
            "funcEndAddr": "0x4169a5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40cb20 */\n#include <stdint.h>\n \nuint64_t fcn_0040cb20 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    do {\nlabel_6:\n        abort ();\n    } while (rsi == 0);\n    r12 = rdx;\n    rbx = rdi;\n    rax = fcn_0040be60 (rdi, rsi, rsp + 8, 0);\n    rdx = rax;\n    if (rax != 0) {\n        eax = 0;\n        if (r12 != 0) {\n            *(r12) = rdx;\n        }\n        return rax;\n    }\n    rax = *((rbx + 0x18));\n    if (rax < 0) {\n        goto label_8;\n    }\n    xmm1 = 0;\n    rdx = *((rbx + 0x28));\n    __asm (\"cvtsi2ss xmm1, rax\");\n    rax = *((rbx + 0x10));\n    if (rax < 0) {\n        goto label_9;\n    }\n    do {\n        xmm0 = 0;\n        __asm (\"cvtsi2ss xmm0, rax\");\n        __asm (\"mulss xmm0, dword [rdx + 8]\");\n        __asm (\"comiss xmm1, xmm0\");\n        if (rax > 0) {\n            goto label_10;\n        }\nlabel_0:\n        r12 = *((rsp + 8));\n        if (*(r12) == 0) {\n            goto label_11;\n        }\n        rax = *((rbx + 0x48));\n        if (rax == 0) {\n            goto label_12;\n        }\n        rdx = *((rax + 8));\n        *((rbx + 0x48)) = rdx;\nlabel_1:\n        rdx = *((r12 + 8));\n        *(rax) = rbp;\n        *((rax + 8)) = rdx;\n        *((r12 + 8)) = rax;\n        eax = 1;\n        *((rbx + 0x20))++;\n        return rax;\nlabel_8:\n        rdx = rax;\n        eax &= 1;\n        xmm1 = 0;\n        rdx >>= 1;\n        rdx |= rax;\n        rax = *((rbx + 0x10));\n        __asm (\"cvtsi2ss xmm1, rdx\");\n        rdx = *((rbx + 0x28));\n        __asm (\"addss xmm1, xmm1\");\n    } while (rax >= 0);\nlabel_9:\n    rcx = rax;\n    eax &= 1;\n    xmm0 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm0, rcx\");\n    __asm (\"addss xmm0, xmm0\");\n    __asm (\"mulss xmm0, dword [rdx + 8]\");\n    __asm (\"comiss xmm1, xmm0\");\n    if (rcx <= 0) {\n        goto label_0;\n    }\nlabel_10:\n    fcn_0040bf80 (rbx + 0x28);\n    rdx = *((rbx + 0x28));\n    rax = *((rbx + 0x10));\n    xmm2 = *((rdx + 8));\n    if (rax < 0) {\n        goto label_13;\n    }\n    xmm0 = 0;\n    __asm (\"cvtsi2ss xmm0, rax\");\nlabel_3:\n    rax = *((rbx + 0x18));\n    if (rax < 0) {\n        goto label_14;\n    }\n    xmm1 = 0;\n    __asm (\"cvtsi2ss xmm1, rax\");\nlabel_2:\n    xmm3 = xmm2;\n    __asm (\"mulss xmm3, xmm0\");\n    __asm (\"comiss xmm1, xmm3\");\n    if (rax <= 0) {\n        goto label_0;\n    }\n    __asm (\"mulss xmm0, dword [rdx + 0xc]\");\n    if (*((rdx + 0x10)) == 0) {\n        goto label_15;\n    }\nlabel_4:\n    __asm (\"comiss xmm0, dword [0x00416bcc]\");\n    if (*((rdx + 0x10)) < 0) {\n        goto label_16;\n    }\n    do {\nlabel_5:\n        eax = 0xffffffff;\n        return rax;\nlabel_11:\n        *(r12) = rbp;\n        eax = 1;\n        *((rbx + 0x20))++;\n        *((rbx + 0x18))++;\n        return rax;\nlabel_12:\n        rax = malloc (0x10);\n    } while (rax == 0);\n    goto label_1;\nlabel_14:\n    rcx = rax;\n    eax &= 1;\n    xmm1 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm1, rcx\");\n    __asm (\"addss xmm1, xmm1\");\n    goto label_2;\nlabel_13:\n    rcx = rax;\n    eax &= 1;\n    xmm0 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm0, rcx\");\n    __asm (\"addss xmm0, xmm0\");\n    goto label_3;\nlabel_15:\n    __asm (\"mulss xmm0, xmm2\");\n    goto label_4;\nlabel_16:\n    __asm (\"comiss xmm0, dword [0x00416bd0]\");\n    if (rcx >= 0) {\n        goto label_17;\n    }\n    __asm (\"cvttss2si rsi, xmm0\");\nlabel_7:\n    al = fcn_0040c920 (rbx, rsi);\n    if (al == 0) {\n        goto label_5;\n    }\n    rax = fcn_0040be60 (rbx, rbp, rsp + 8, 0);\n    if (rax == 0) {\n        goto label_0;\n    }\n    goto label_6;\nlabel_17:\n    __asm (\"subss xmm0, dword [0x00416bd0]\");\n    __asm (\"cvttss2si rsi, xmm0\");\n    __asm (\"btc rsi, 0x3f\");\n    goto label_7;\n}\n"
        },
        {
            "funcName": "fcn_0040cda0",
            "funcStartAddr": "0x40cda0",
            "funcEndAddr": "0x40cddb",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40cda0 */\n#include <stdint.h>\n \nuint64_t fcn_0040cda0 (int64_t arg2) {\n    int64_t var_8h;\n    rsi = arg2;\n    rbx = rsi;\n    eax = fcn_0040cb20 (rdi, rsi, rsp + 8);\n    if (eax != 0xffffffff) {\n        if (eax == 0) {\n            rbx = *((rsp + 8));\n        }\n        rax = rbx;\n        return rax;\n    }\n    ebx = 0;\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040cde0",
            "funcStartAddr": "0x40cde0",
            "funcEndAddr": "0x40cfb7",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40cde0 */\n#include <stdint.h>\n \nuint64_t fcn_0040cde0 (int64_t arg1) {\n    int64_t var_8h;\n    rdi = arg1;\n    rbx = rdi;\n    rax = fcn_0040be60 (rdi, rsi, rsp + 8, 1);\n    if (rax == 0) {\n        goto label_0;\n    }\n    rax = *((rsp + 8));\n    *((rbx + 0x20))--;\n    while (rax <= 0) {\nlabel_0:\n        rax = rbp;\n        return rax;\n        rax = *((rbx + 0x18));\n        rax--;\n        *((rbx + 0x18)) = rax;\n        if (rax < 0) {\n            goto label_6;\n        }\n        xmm0 = 0;\n        rdx = *((rbx + 0x28));\n        __asm (\"cvtsi2ss xmm0, rax\");\n        rax = *((rbx + 0x10));\n        if (rax < 0) {\n            goto label_7;\n        }\nlabel_1:\n        xmm1 = 0;\n        __asm (\"cvtsi2ss xmm1, rax\");\nlabel_2:\n        __asm (\"mulss xmm1, dword [rdx]\");\n        __asm (\"comiss xmm1, xmm0\");\n    }\n    fcn_0040bf80 (rbx + 0x28);\n    rax = *((rbx + 0x10));\n    rdx = *((rbx + 0x28));\n    if (rax < 0) {\n        goto label_8;\n    }\n    xmm0 = 0;\n    __asm (\"cvtsi2ss xmm0, rax\");\nlabel_4:\n    rax = *((rbx + 0x18));\n    if (rax < 0) {\n        goto label_9;\n    }\n    xmm1 = 0;\n    __asm (\"cvtsi2ss xmm1, rax\");\nlabel_3:\n    xmm2 = *(rdx);\n    __asm (\"mulss xmm2, xmm0\");\n    __asm (\"comiss xmm2, xmm1\");\n    if (rax <= 0) {\n        goto label_0;\n    }\n    __asm (\"mulss xmm0, dword [rdx + 4]\");\n    if (*((rdx + 0x10)) == 0) {\n        __asm (\"mulss xmm0, dword [rdx + 8]\");\n    }\n    __asm (\"comiss xmm0, dword [0x00416bd0]\");\n    if (*((rdx + 0x10)) >= 0) {\n        goto label_10;\n    }\n    __asm (\"cvttss2si rsi, xmm0\");\nlabel_5:\n    al = fcn_0040c920 (rbx, rsi);\n    if (al != 0) {\n        goto label_0;\n    }\n    rdi = *((rbx + 0x48));\n    if (rdi == 0) {\n        goto label_11;\n    }\n    do {\n        r12 = *((rdi + 8));\n        rax = free (rdi);\n        rdi = r12;\n    } while (r12 != 0);\nlabel_11:\n    *((rbx + 0x48)) = 0;\n    goto label_0;\nlabel_6:\n    rdx = rax;\n    eax &= 1;\n    xmm0 = 0;\n    rdx >>= 1;\n    rdx |= rax;\n    rax = *((rbx + 0x10));\n    __asm (\"cvtsi2ss xmm0, rdx\");\n    rdx = *((rbx + 0x28));\n    __asm (\"addss xmm0, xmm0\");\n    if (rax >= 0) {\n        goto label_1;\n    }\nlabel_7:\n    rcx = rax;\n    eax &= 1;\n    xmm1 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm1, rcx\");\n    __asm (\"addss xmm1, xmm1\");\n    goto label_2;\nlabel_9:\n    rcx = rax;\n    eax &= 1;\n    xmm1 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm1, rcx\");\n    __asm (\"addss xmm1, xmm1\");\n    goto label_3;\nlabel_8:\n    rcx = rax;\n    eax &= 1;\n    xmm0 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm0, rcx\");\n    __asm (\"addss xmm0, xmm0\");\n    goto label_4;\nlabel_10:\n    __asm (\"subss xmm0, dword [0x00416bd0]\");\n    __asm (\"cvttss2si rsi, xmm0\");\n    __asm (\"btc rsi, 0x3f\");\n    goto label_5;\n}\n"
        },
        {
            "funcName": "fcn_0040cfd0",
            "funcStartAddr": "0x40cfd0",
            "funcEndAddr": "0x40d04d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40cfd0 */\n#include <stdint.h>\n \nuint64_t fcn_0040cfd0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r12 = rdi;\n    rax = fcn_00411210 (0x20);\n    rbx = rax;\n    if (rbp != 0) {\n        rax = rbp;\n        rdi = rbp;\n        rax >>= 0x3d;\n        al = (rax != 0) ? 1 : 0;\n        rdi <<= 3;\n        eax = (int32_t) al;\n        if (rdi >= 0) {\n            if (rax == 0) {\n                goto label_0;\n            }\n        }\n        fcn_00411460 ();\n    }\nlabel_0:\n    fcn_00411210 (8);\n    *((rbx + 8)) = rbp;\n    *(rax) = 0;\n    *(rbx) = rax;\n    eax = 0x40cfc0;\n    if (r12 == 0) {\n        r12 = rax;\n    }\n    *((rbx + 0x10)) = 0;\n    rax = rbx;\n    *((rbx + 0x18)) = r12;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040d070",
            "funcStartAddr": "0x40d070",
            "funcEndAddr": "0x40d184",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40d070 */\n#include <stdint.h>\n \nint64_t fcn_0040d070 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r12 = rsi;\n    rdx = *((rdi + 8));\n    rbx = *((rdi + 0x10));\n    rax = *(rdi);\n    rcx = rdx - 1;\n    if (rcx <= rbx) {\n        goto label_2;\n    }\nlabel_0:\n    rbx++;\n    *((rbp + 0x10)) = rbx;\n    *((rax + rbx*8)) = r12;\n    r13 = *((rbp + 0x18));\n    rbp = *(rbp);\n    r15 = *((rbp + rbx*8));\n    if (rbx != 1) {\n        goto label_3;\n    }\n    goto label_4;\n    do {\n        rax = *(r12);\n        rbx = r14;\n        *(rdx) = rax;\n        if (r14 == 1) {\n            goto label_4;\n        }\nlabel_3:\n        r14 = rbx;\n        rsi = r15;\n        r14 >>= 1;\n        r12 = rbp + r14*8;\n        rdi = *(r12);\n        eax = void (*r13)() ();\n        rdx = rbp + rbx*8;\n    } while (eax <= 0);\n    do {\n        *(rdx) = r15;\n        eax = 0;\n        return rax;\nlabel_4:\n        rdx = rbp + 8;\n    } while (1);\nlabel_2:\n    if (rax == 0) {\n        goto label_5;\n    }\n    rcx = 0xaaaaaaaaaaaaaa9;\n    if (rdx > rcx) {\n        goto label_6;\n    }\n    rcx = rdx;\n    rcx >>= 1;\n    rdx = rdx + rcx + 1;\n    do {\nlabel_1:\n        *((rbp + 8)) = rdx;\n        rax = fcn_00411270 (rax, rdx*8);\n        rbx = *((rbp + 0x10));\n        *(rbp) = rax;\n        goto label_0;\nlabel_5:\n        if (rdx == 0) {\n            goto label_7;\n        }\n        rdi = rdx;\n        ecx = 0;\n        rsi = rdx;\n        rdi >>= 0x3d;\n        cl = (rdi != 0) ? 1 : 0;\n        rsi <<= 3;\n        if (rsi < 0) {\n            goto label_6;\n        }\n    } while (rcx == 0);\nlabel_6:\n    fcn_00411460 ();\nlabel_7:\n    esi = 0x80;\n    edx = 0x10;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040d190",
            "funcStartAddr": "0x40d190",
            "funcEndAddr": "0x40d2ad",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40d190 */\n#include <stdint.h>\n \nint64_t fcn_0040d190 (int64_t arg1) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    uint32_t var_28h;\n    rdi = arg1;\n    rax = *((rdi + 0x10));\n    *((rsp + 8)) = 0;\n    if (rax == 0) {\n        goto label_1;\n    }\n    rdx = *(rdi);\n    rbp = rax - 1;\n    rax = *((rdx + rax*8));\n    rcx = *((rdx + 8));\n    *((rdi + 0x10)) = rbp;\n    *((rdx + 8)) = rax;\n    r15 = *(rdi);\n    *((rsp + 8)) = rcx;\n    r13 = *((rdi + 0x18));\n    rax = *((r15 + 8));\n    *((rsp + 0x10)) = rax;\n    rax = rbp;\n    rax >>= 1;\n    *((rsp + 0x28)) = rax;\n    if (rax == 0) {\n        goto label_2;\n    }\n    r14d = 1;\n    while (rbp <= r12) {\n        rbx = r14;\n        rbx <<= 4;\n        rbx += r15;\nlabel_0:\n        rsi = *((rsp + 0x10));\n        rdi = *(rbx);\n        eax = void (*r13)() ();\n        rdx = r15 + r14*8;\n        if (eax <= 0) {\n            goto label_3;\n        }\n        rax = *(rbx);\n        r14 = r12;\n        *(rdx) = rax;\n        if (r12 > *((rsp + 0x28))) {\n            goto label_4;\n        }\n        r12 = r14 + r14;\n    }\n    rbx = r14;\n    r9 = r12 + 1;\n    rbx <<= 4;\n    r10 = r15 + r9*8;\n    rbx += r15;\n    rsi = *(r10);\n    rdi = *(rbx);\n    eax = void (*r13)(uint64_t) (r9);\n    r10 = *((rsp + 0x18));\n    r9 = *((rsp + 0x20));\n    __asm (\"cmovs rbx, r10\");\n    __asm (\"cmovs r12, r9\");\n    goto label_0;\nlabel_2:\n    rdx = r15 + 8;\nlabel_3:\n    rax = *((rsp + 0x10));\n    *(rdx) = rax;\n    do {\nlabel_1:\n        rax = *((rsp + 8));\n        return rax;\nlabel_4:\n        rax = *((rsp + 0x10));\n        rdx = rbx;\n        *(rdx) = rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040d2b0",
            "funcStartAddr": "0x40d2b0",
            "funcEndAddr": "0x40d32c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40d2b0 */\n#include <stdint.h>\n \nint64_t fcn_0040d2b0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = rsi + 0xb;\n    *((rsi + 0xb)) = 0;\n    r9d = 0x66666667;\n    esi = 0xcccccccd;\n    r8d = 0x30;\n    if (edi < 0) {\n        goto label_0;\n    }\n    do {\n        eax = edi;\n        rcx--;\n        edx:eax = eax * esi;\n        edx >>= 3;\n        eax = rdx * 5;\n        eax += eax;\n        edi -= eax;\n        edi += 0x30;\n        *(rcx) = dil;\n        edi = edx;\n    } while (edx != 0);\n    rax = rcx;\n    return rax;\n    do {\n        rcx = rsi;\nlabel_0:\n        eax = edi;\n        rsi = rcx - 1;\n        edx:eax = eax * r9d;\n        eax = edi;\n        eax >>= 0x1f;\n        edx >>= 2;\n        edx -= eax;\n        eax = rdx * 5;\n        eax = r8 + rax*2;\n        eax -= edi;\n        edi = edx;\n        *((rcx - 1)) = al;\n    } while (edx != 0);\n    rcx -= 2;\n    *((rsi - 1)) = 0x2d;\n    rax = rcx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040d330",
            "funcStartAddr": "0x40d330",
            "funcEndAddr": "0x40d369",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40d330 */\n#include <stdint.h>\n \nint64_t fcn_0040d330 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = rsi + 0xa;\n    *((rsi + 0xa)) = 0;\n    esi = 0xcccccccd;\n    while (edi > 9) {\n        edi = edx;\n        eax = edx;\n        r8d = edi;\n        rcx--;\n        edx:eax = eax * esi;\n        edx >>= 3;\n        eax = rdx * 5;\n        eax += eax;\n        r8d -= eax;\n        eax = r8d;\n        eax += 0x30;\n        *(rcx) = al;\n    }\n    rax = rcx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040d370",
            "funcStartAddr": "0x40d370",
            "funcEndAddr": "0x40d3b8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40d370 */\n#include <stdint.h>\n \nint64_t fcn_0040d370 (void * arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = rsi + 0x14;\n    *((rsi + 0x14)) = 0;\n    rsi = 0xcccccccccccccccd;\n    while (rdi > 9) {\n        rdi = rdx;\n        rax = rdx;\n        r8 = rdi;\n        rcx--;\n        rdx:rax = rax * rsi;\n        rdx >>= 3;\n        rax = rdx * 5;\n        rax += rax;\n        r8 -= rax;\n        rax = r8;\n        eax += 0x30;\n        *(rcx) = al;\n    }\n    rax = rcx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040d3c0",
            "funcStartAddr": "0x40d3c0",
            "funcEndAddr": "0x40d573",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40d3c0 */\n#include <stdint.h>\n \nuint64_t fcn_0040d3c0 (int64_t arg1, int64_t arg3) {\n    wint_t wc;\n    mbstate_t * ps;\n    rdi = arg1;\n    rdx = arg3;\n    r15d = edx;\n    r13 = rdi + rsi;\n    rbx = rdi;\n    rax = ctype_get_mb_cur_max ();\n    if (rax <= 1) {\n        goto label_7;\n    }\n    r12d = 0;\n    if (rbx >= r13) {\n        goto label_5;\n    }\n    r14d = 1;\n    while (al <= 0x3f) {\n        if (al < 0x25) {\n            eax -= 0x20;\n            if (al > 3) {\n                goto label_8;\n            }\n        }\nlabel_0:\n        rbx++;\n        r12d++;\nlabel_1:\n        if (rbx >= r13) {\n            goto label_5;\n        }\n        eax = *(rbx);\n    }\n    if (al < 0x41) {\n        goto label_8;\n    }\n    if (al <= 0x5f) {\n        goto label_0;\n    }\n    eax -= 0x61;\n    if (al <= 0x1d) {\n        goto label_0;\n    }\nlabel_8:\n    *((rsp + 8)) = 0;\n    goto label_9;\nlabel_2:\n    edx = 0x7fffffff;\n    edx -= r12d;\n    if (edx < eax) {\n        goto label_10;\n    }\n    r12d += eax;\nlabel_3:\n    rbx += rbp;\n    eax = mbsinit (rsp + 8);\n    if (eax != 0) {\n        goto label_1;\n    }\nlabel_9:\n    rdx -= rbx;\n    rax = fcn_00412fb0 (rsp + 4, rbx, r13, rsp + 8);\n    if (rax == -1) {\n        goto label_11;\n    }\n    if (rax == 0xfffffffffffffffe) {\n        goto label_12;\n    }\n    edi = *((rsp + 4));\n    if (rax == 0) {\n    }\n    eax = wcwidth ();\n    if (eax >= 0) {\n        goto label_2;\n    }\n    if ((r15b & 2) != 0) {\n        goto label_4;\n    }\n    eax = iswcntrl (*((rsp + 4)));\n    if (eax != 0) {\n        goto label_3;\n    }\n    if (r12d == 0x7fffffff) {\n        goto label_10;\n    }\n    r12d++;\n    goto label_3;\nlabel_11:\n    if ((r15b & 1) == 0) {\n        goto label_0;\n    }\nlabel_4:\n    r12d = 0xffffffff;\n    do {\nlabel_5:\n        eax = r12d;\n        return rax;\nlabel_7:\n        r12d = 0;\n    } while (rbx >= r13);\n    rax = ctype_b_loc ();\n    r12d = 0;\n    r15d &= 2;\n    rdx = *(rax);\nlabel_6:\n    rbx++;\n    eax = *((rbx - 1));\n    eax = *((rdx + rax*2));\n    if ((ah & 0x40) != 0) {\n        goto label_13;\n    }\n    if (r15d != 0) {\n        goto label_4;\n    }\n    if ((al & 2) != 0) {\n        goto label_14;\n    }\nlabel_13:\n    if (r12d == 0x7fffffff) {\n        goto label_5;\n    }\n    r12d++;\nlabel_14:\n    if (r13 != rbx) {\n        goto label_6;\n    }\n    goto label_5;\nlabel_12:\n    if ((r15b & 1) != 0) {\n        goto label_4;\n    }\n    r12d++;\n    rbx = r13;\n    goto label_1;\nlabel_10:\n    r12d = 0x7fffffff;\n    goto label_5;\n}\n"
        },
        {
            "funcName": "fcn_0040d5b0",
            "funcStartAddr": "0x40d5b0",
            "funcEndAddr": "0x40d5f4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40d5b0 */\n#include <stdint.h>\n \nuint64_t fcn_0040d5b0 (void) {\n    edi = 0;\n    esi = 0x80;\n    rdx = rsp;\n    eax = sched_getaffinity ();\n    while (rax == 0) {\n        eax = 0;\n        return eax;\n        rsi = rsp;\n        edi = 0x80;\n        rax = sched_cpucount ();\n        rax = (int64_t) eax;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040d600",
            "funcStartAddr": "0x40d600",
            "funcEndAddr": "0x40d6eb",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40d600 */\n#include <stdint.h>\n \nint32_t fcn_0040d600 (int64_t arg1) {\n    char * * endptr;\n    rdi = arg1;\n    ecx = *(rdi);\n    if (cl == 0) {\n        goto label_0;\n    }\n    eax = (int32_t) cl;\n    if (eax > 0x20) {\n        goto label_1;\n    }\n    rdx = 0x100003e00;\n    esi = 1;\n    if (((rdx >> rcx) & 1) >= 0) {\n        goto label_1;\n    }\n    do {\n        rdi++;\n        ecx = *(rdi);\n        if (cl == 0) {\n            goto label_0;\n        }\n        eax = (int32_t) cl;\n        if (eax > 0x20) {\n            goto label_1;\n        }\n        r9 = rsi;\n        r9 <<= cl;\n    } while ((r9 & rdx) != 0);\nlabel_1:\n    edx = rax - 0x30;\n    eax = 0;\n    if (edx > 9) {\n        goto label_2;\n    }\n    *((rsp + 8)) = 0;\n    eax = strtoul (rdi, rsp + 8, 0xa);\n    rdx = *((rsp + 8));\n    if (rdx == 0) {\n        goto label_3;\n    }\n    ecx = *(rdx);\n    if (cl == 0) {\n        goto label_4;\n    }\n    esi = (int32_t) cl;\n    if (esi > 0x20) {\n        goto label_5;\n    }\n    rsi = 0x100003e00;\n    if (((rsi >> rcx) & 1) >= 0) {\n        goto label_5;\n    }\n    rdx++;\n    r8d = 1;\n    do {\n        *((rsp + 8)) = rdx;\n        ecx = *(rdx);\n        if (cl == 0) {\n            goto label_4;\n        }\n        edi = (int32_t) cl;\n        if (edi > 0x20) {\n            goto label_5;\n        }\n        rdi = r8;\n        rdx++;\n        rdi <<= cl;\n    } while ((rdi & rsi) != 0);\nlabel_5:\n    if (cl != 0x2c) {\nlabel_3:\n        eax = 0;\n    }\nlabel_4:\n    return eax;\nlabel_2:\n    return eax;\nlabel_0:\n    eax = 0;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_0040d6f0",
            "funcStartAddr": "0x40d6f0",
            "funcEndAddr": "0x40d837",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40d6f0 */\n#include <stdint.h>\n \nuint64_t fcn_0040d6f0 (uint32_t arg1) {\n    rdi = arg1;\n    if (edi == 2) {\n        goto label_3;\n    }\n    if (edi == 1) {\n        goto label_4;\n    }\n    edi = 0x53;\n    rax = sysconf ();\n    if (rax == 1) {\n        goto label_5;\n    }\nlabel_1:\n    edx = 1;\n    rax = rdx;\n    while (rdx <= 0) {\nlabel_0:\n        return rax;\nlabel_3:\n        rax = getenv (0x416bd4);\n        if (rax == 0) {\n            goto label_6;\n        }\n        rax = fcn_0040d600 (rax);\n        rbx = rax;\n        rax = getenv (\"OMP_THREAD_LIMIT\");\n        if (rax != 0) {\n            rax = fcn_0040d600 (rax);\n            rax = 0xffffffffffffffff;\n            if (rax != 0) {\n                goto label_7;\n            }\n        }\nlabel_7:\n        if (rbx != 0) {\n            goto label_8;\n        }\nlabel_2:\n        rax = fcn_0040d5b0 ();\n        if (rax != 0) {\n            if (rax > rbp) {\n                rax = rbp;\n            }\n            return rax;\n        }\n        edi = 0x54;\n        rax = sysconf ();\n        rdx = rax;\n        eax = 1;\n    }\n    rax = rbp;\n    if (rdx <= rbp) {\n        rax = rdx;\n    }\n    goto label_0;\nlabel_5:\n    rax = fcn_0040d5b0 ();\n    rdx = rax;\n    eax = 1;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    rax = rdx;\n    goto label_1;\nlabel_8:\n    rax = rbx;\n    if (rbp <= rbx) {\n        rax = rbp;\n    }\n    return rax;\nlabel_6:\n    rax = getenv (\"OMP_THREAD_LIMIT\");\n    if (rax == 0) {\n        goto label_4;\n    }\n    rax = fcn_0040d600 (rax);\n    if (rax != 0) {\n        goto label_2;\n    }\nlabel_4:\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_0040d840",
            "funcStartAddr": "0x40d840",
            "funcEndAddr": "0x40d8fb",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40d840 */\n#include <stdint.h>\n \nuint64_t fcn_0040d840 (void) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_30h;\n    int64_t var_78h;\n    edi = 0x55;\n    rax = sysconf ();\n    xmm0 = 0;\n    edi = 0x1e;\n    __asm (\"cvtsi2sd xmm0, rax\");\n    *((rsp + 8)) = xmm0;\n    rax = sysconf ();\n    xmm0 = *((rsp + 8));\n    xmm2 = 0;\n    __asm (\"comisd xmm0, xmm2\");\n    if (? >= ?) {\n        xmm1 = 0;\n        __asm (\"cvtsi2sd xmm1, rax\");\n        __asm (\"comisd xmm1, xmm2\");\n        if (? >= ?) {\n            goto label_0;\n        }\n    }\n    rdi = rsp + 0x10;\n    eax = sysinfo ();\n    xmm0 = *(0x00416bf8);\n    if (eax != 0) {\n        return rax;\n    }\n    rax = *((rsp + 0x30));\n    if (rax < 0) {\n        goto label_1;\n    }\n    xmm0 = 0;\n    __asm (\"cvtsi2sd xmm0, rax\");\n    do {\n        eax = *((rsp + 0x78));\n        xmm1 = 0;\n        __asm (\"cvtsi2sd xmm1, rax\");\nlabel_0:\n        __asm (\"mulsd xmm0, xmm1\");\n        return rax;\nlabel_1:\n        rdx = rax;\n        eax &= 1;\n        xmm0 = 0;\n        rdx >>= 1;\n        rdx |= rax;\n        __asm (\"cvtsi2sd xmm0, rdx\");\n        __asm (\"addsd xmm0, xmm0\");\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040d900",
            "funcStartAddr": "0x40d900",
            "funcEndAddr": "0x40d9f6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40d900 */\n#include <stdint.h>\n \nuint64_t fcn_0040d900 (void) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_38h;\n    int64_t var_48h;\n    int64_t var_78h;\n    edi = 0x56;\n    rax = sysconf ();\n    xmm0 = 0;\n    edi = 0x1e;\n    __asm (\"cvtsi2sd xmm0, rax\");\n    *((rsp + 8)) = xmm0;\n    rax = sysconf ();\n    xmm0 = *((rsp + 8));\n    xmm2 = 0;\n    __asm (\"comisd xmm0, xmm2\");\n    if (? >= ?) {\n        xmm1 = 0;\n        __asm (\"cvtsi2sd xmm1, rax\");\n        __asm (\"comisd xmm1, xmm2\");\n        if (? >= ?) {\n            goto label_1;\n        }\n    }\n    rdi = rsp + 0x10;\n    eax = sysinfo ();\n    if (eax != 0) {\n        goto label_2;\n    }\n    rax = *((rsp + 0x38));\n    if (rax < 0) {\n        goto label_3;\n    }\n    xmm0 = 0;\n    __asm (\"cvtsi2sd xmm0, rax\");\n    rax = *((rsp + 0x48));\n    if (rax < 0) {\n        goto label_4;\n    }\n    do {\n        xmm1 = 0;\n        __asm (\"cvtsi2sd xmm1, rax\");\nlabel_0:\n        eax = *((rsp + 0x78));\n        __asm (\"addsd xmm0, xmm1\");\n        xmm1 = 0;\n        __asm (\"cvtsi2sd xmm1, rax\");\nlabel_1:\n        __asm (\"mulsd xmm0, xmm1\");\n        return rax;\nlabel_2:\n        rax = fcn_0040d840 ();\n        __asm (\"mulsd xmm0, qword [0x00416a30]\");\n        return rax;\nlabel_3:\n        rdx = rax;\n        eax &= 1;\n        xmm0 = 0;\n        rdx >>= 1;\n        rdx |= rax;\n        rax = *((rsp + 0x48));\n        __asm (\"cvtsi2sd xmm0, rdx\");\n        __asm (\"addsd xmm0, xmm0\");\n    } while (rax >= 0);\nlabel_4:\n    rdx = rax;\n    eax &= 1;\n    xmm1 = 0;\n    rdx >>= 1;\n    rdx |= rax;\n    __asm (\"cvtsi2sd xmm1, rdx\");\n    __asm (\"addsd xmm1, xmm1\");\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040da00",
            "funcStartAddr": "0x40da00",
            "funcEndAddr": "0x40dbd1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40da00 */\n#include <stdint.h>\n \nuint64_t fcn_0040da00 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rdi;\n    eax = imp.__libc_start_main;\n    r13 = *(rdi);\n    if (eax >= 0) {\n        goto label_3;\n    }\nlabel_2:\n    r12d = ebp;\n    r12d &= 0xfff7f7ff;\n    if (r12d != 0) {\n        goto label_4;\n    }\n    rdi = rbx;\n    eax = pipe ();\n    if (eax < 0) {\n        goto label_5;\n    }\n    while (eax != 0xffffffff) {\n        ebp &= 0x80000;\n        if (ebp != 0) {\n            goto label_6;\n        }\nlabel_0:\n        eax = r12d;\n        return eax;\n        eax = 0;\n        eax = fcn_00412000 (*((rbx + 4)), 3, 0, rcx, r8);\n        if (eax < 0) {\n            goto label_1;\n        }\n        ah |= 8;\n        edx = eax;\n        eax = 0;\n        eax = fcn_00412000 (*((rbx + 4)), 4, edx, rcx, r8);\n        if (eax == 0xffffffff) {\n            goto label_1;\n        }\n        eax = 0;\n        eax = fcn_00412000 (*(rbx), 3, 0, rcx, r8);\n        if (eax < 0) {\n            goto label_1;\n        }\n        ah |= 8;\n        edx = eax;\n        eax = 0;\n        eax = fcn_00412000 (*(rbx), 4, edx, rcx, r8);\n    }\n    do {\nlabel_1:\n        rax = errno_location ();\n        r12d = *(rax);\n        close (*(rbx));\n        eax = close (*((rbx + 4)));\n        *(rbx) = r13;\n        *(rbp) = r12d;\n        r12d = 0xffffffff;\n        goto label_0;\nlabel_6:\n        eax = 0;\n        eax = fcn_00412000 (*((rbx + 4)), 1, 0, rcx, r8);\n    } while (eax < 0);\n    eax |= 1;\n    edx = eax;\n    eax = 0;\n    eax = fcn_00412000 (*((rbx + 4)), 2, edx, rcx, r8);\n    if (eax == 0xffffffff) {\n        goto label_1;\n    }\n    eax = 0;\n    eax = fcn_00412000 (*(rbx), 1, 0, rcx, r8);\n    if (eax < 0) {\n        goto label_1;\n    }\n    eax |= 1;\n    edx = eax;\n    eax = 0;\n    eax = fcn_00412000 (*(rbx), 2, edx, rcx, r8);\n    if (eax == 0xffffffff) {\n        goto label_1;\n    }\n    eax = r12d;\n    return rax;\nlabel_3:\n    eax = pipe2 ();\n    r12d = eax;\n    if (eax < 0) {\n        rax = errno_location ();\n        if (*(rax) == 0x26) {\n            goto label_7;\n        }\n    }\n    *(0x0061cbc0) = 1;\n    eax = r12d;\n    return rax;\nlabel_7:\n    *(0x0061cbc0) = 0xffffffff;\n    goto label_2;\nlabel_4:\n    errno_location ();\n    r12d = 0xffffffff;\n    *(rax) = 0x16;\n    goto label_0;\nlabel_5:\n    r12d = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040dbe0",
            "funcStartAddr": "0x40dbe0",
            "funcEndAddr": "0x40dc52",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40dbe0 */\n#include <stdint.h>\n \nuint64_t fcn_0040dbe0 (void) {\n    char * * endptr;\n    ebx = 0x31069;\n    rax = getenv (0x416c00);\n    if (rax == 0) {\n        goto label_0;\n    }\n    while (*(rdx) != 0) {\nlabel_0:\n        eax = ebx;\n        return rax;\n        rax = strtol (rax, rsp + 8, 0xa);\n        rdx = *((rsp + 8));\n    }\n    if (rax >= 0xffffffff80000000) {\n        ebx = 0x7fffffff;\n        if (rax <= 0x7fffffff) {\n            rbx = rax;\n        }\n        eax = ebx;\n        return rax;\n    }\n    ebx = 0x80000000;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040dc60",
            "funcStartAddr": "0x40dc60",
            "funcEndAddr": "0x40dcf9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40dc60 */\n#include <stdint.h>\n \nuint64_t fcn_0040dc60 (int64_t arg1) {\n    rdi = arg1;\n    if (rdi != 0) {\n        rbx = rdi;\n        rax = strrchr (rdi, 0x2f);\n        if (rax != 0) {\n            r8 = rax + 1;\n            rdx = r8;\n            rdx -= rbx;\n            if (rdx <= 6) {\n                goto label_0;\n            }\n            rsi = rax - 6;\n            edi = \"/.libs/\";\n            ecx = 7;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (rdx > 6) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            edi = 0x416c50;\n            ecx = 3;\n            rsi = r8;\n            rbx = r8;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (dl > 0) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            rbx = rax + 4;\n            *(obj.__progname) = rbx;\n        }\nlabel_0:\n        *(0x0061cbc8) = rbx;\n        *(obj.program_invocation_name) = rbx;\n        return rax;\n    }\n    fwrite (\"A NULL argv[0] was passed through an exec system call.\\n\", 1, 0x37, *(obj.stderr));\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_0040dd00",
            "funcStartAddr": "0x40dd00",
            "funcEndAddr": "0x40ddf2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40dd00 */\n#include <stdint.h>\n \nuint64_t fcn_0040dd00 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edx = 5;\n    r12d = esi;\n    rsi = rdi;\n    rax = dcgettext (0, rsi);\n    rbx = rax;\n    while (1) {\nlabel_0:\n        rax = rbx;\n        return rax;\n        rax = fcn_00413750 ();\n        edx = *(rax);\n        edx &= 0xffffffdf;\n        if (dl != 0x55) {\n            goto label_1;\n        }\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x54) {\n            goto label_2;\n        }\n        edx = *((rax + 2));\n        edx &= 0xffffffdf;\n        if (dl != 0x46) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x2d) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0) {\n            goto label_2;\n        }\n        eax = 0x416c56;\n        ebx = 0x416c61;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n    }\nlabel_1:\n    if (dl == 0x47) {\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x42) {\n            goto label_2;\n        }\n        if (*((rax + 2)) != 0x31) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0x33) {\n            goto label_2;\n        }\n        if (*((rax + 6)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 7)) != 0) {\n            goto label_2;\n        }\n        eax = 0x416c5a;\n        ebx = 0x416c5d;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n        goto label_0;\n    }\nlabel_2:\n    eax = 0x4166e5;\n    ebx = 0x416c54;\n    if (r12d != 9) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040de00",
            "funcStartAddr": "0x40de00",
            "funcEndAddr": "0x419f0d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40de00 */\n#include <stdint.h>\n \nuint64_t fcn_0040de00 (int64_t arg_e8h_3, uint32_t arg_e8h_2, int64_t arg_e8h, char * arg_e0h, int64_t arg1, char * arg2, char * arg3, size_t * arg4, int64_t arg5, int64_t arg6) {\n    size_t * var_8h;\n    size_t * var_10h;\n    uint32_t var_1fh;\n    char * s;\n    size_t n;\n    size_t * var_30h;\n    size_t * var_38h;\n    size_t var_40h;\n    size_t var_48h;\n    void * s2;\n    char * var_58h;\n    uint32_t var_60h;\n    int64_t var_68h;\n    uint32_t var_6ch;\n    char * var_6dh;\n    int64_t var_6eh;\n    int64_t var_6fh;\n    int64_t var_70h;\n    int64_t var_78h;\n    wint_t wc;\n    mbstate_t * ps;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    do {\n        abort ();\nlabel_5:\n        r15 = rdi;\n        r14 = rsi;\n        r13d = r8d;\n        *((rsp + 0x20)) = rdx;\n        *((rsp + 8)) = rcx;\n        *((rsp + 0x68)) = r9d;\n        rax = ctype_get_mb_cur_max ();\n        ebp &= 2;\n        *((rsp + 0x60)) = rax;\n        rsp + 0x6c = (ebp != 0) ? 1 : 0;\n    } while (r13d > 0xa);\n    eax = r13d;\n    r11 = *((rsp + 8));\n    /* switch table (11 cases) at 0x416cc0 */\nlabel_30:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    r13d = 2;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x4166e5;\nlabel_21:\n    r9 = r11;\n    r12d = 0;\n    r11d = r13d;\n    do {\nlabel_28:\n        r13b = (r9 != r12) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            r13b = (*((rax + r12)) != 0) ? 1 : 0;\n        }\n        if (r13b == 0) {\n            goto label_47;\n        }\n        rdi = *((rsp + 0x20));\n        al = (r11d != 2) ? 1 : 0;\n        al &= *((rsp + 8));\n        r8 = rdi + r12;\n        *((rsp + 0x10)) = al;\n        if (al == 0) {\n            goto label_48;\n        }\n        rax = *((rsp + 0x28));\n        if (rax == 0) {\n            goto label_49;\n        }\n        rbp = r12 + rax;\n        if (r9 == -1) {\n            if (rax <= 1) {\n                goto label_50;\n            }\n            *((rsp + 0x40)) = r11d;\n            *((rsp + 0x38)) = r10b;\n            *((rsp + 0x30)) = r8;\n            rax = strlen (rdi);\n            r11d = *((rsp + 0x40));\n            r10d = *((rsp + 0x38));\n            r8 = *((rsp + 0x30));\n            r9 = rax;\n        }\nlabel_50:\n        if (rbp > r9) {\n            goto label_49;\n        }\n        rdi = r8;\n        *((rsp + 0x48)) = r11d;\n        *((rsp + 0x40)) = r9;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        eax = memcmp (rdi, *((rsp + 0x50)), *((rsp + 0x28)));\n        r8 = *((rsp + 0x30));\n        r10d = *((rsp + 0x38));\n        r9 = *((rsp + 0x40));\n        r11d = *((rsp + 0x48));\n        if (eax != 0) {\n            goto label_49;\n        }\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_51;\n        }\n        ebp = *(r8);\n        if (bpl > 0x7e) {\n            goto label_52;\n        }\n        eax = (int32_t) bpl;\n        /* switch table (127 cases) at 0x416d18 */\n        *((rsp + 0x10)) = 0;\n        al = (r9 != 1) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            al = (*((rax + 1)) != 0) ? 1 : 0;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        if (al != 0) {\n            goto label_7;\n        }\nlabel_17:\n        if (r12 != 0) {\n            goto label_7;\n        }\nlabel_18:\n        if (*((rsp + 0x6c)) != 0) {\n            if (dl != 0) {\n                goto label_53;\n            }\n        }\nlabel_2:\n        eax = *((rsp + 8));\n        eax ^= 1;\n        eax |= edx;\n        eax ^= 1;\n        al |= *((rsp + 0x6c));\n        if (al == 0) {\n            goto label_11;\n        }\nlabel_24:\n        eax = 0;\nlabel_10:\n        if (*((rsp + 0xd0)) == 0) {\n            goto label_11;\n        }\n        edx = ebp;\n        rcx = *((rsp + 0xd0));\n        dl >>= 5;\n        edx = (int32_t) dl;\n        edx = *((rcx + rdx*4));\n        ecx = ebp;\n        edx >>= cl;\n        edx &= 1;\n        if (edx == 0) {\n            goto label_11;\n        }\n        dl = (r11d == 2) ? 1 : 0;\nlabel_0:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_54;\n        }\nlabel_4:\n        eax = r10d;\n        eax ^= 1;\n        al &= dl;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rdx = rbx + 1;\n            if (rdx < r14) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rdx = rbx + 2;\n            if (rdx < r14) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\nlabel_9:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n        r12++;\nlabel_1:\n        if (rbx < r14) {\n            *((r15 + rbx)) = bpl;\n        }\n        edi = *((rsp + 0x1f));\n        rbx++;\n        eax = 0;\n        if (r13b == 0) {\n            edi = eax;\n        }\n        *((rsp + 0x1f)) = dil;\n    } while (1);\nlabel_3:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    if (r14 == 0) {\n        goto label_56;\n    }\n    edx = 0;\n    if (*((rsp + 0x58)) != 0) {\n        goto label_56;\n    }\nlabel_27:\n    *((rsp + 0x6d)) = r13b;\n    rbx += 3;\n    eax = 0;\n    r10d = 0;\n    *((rsp + 0x58)) = r14;\n    r14 = rdx;\nlabel_11:\n    dl = (r11d == 2) ? 1 : 0;\n    if (*((rsp + 0x10)) != 0) {\n        goto label_0;\n    }\n    eax ^= 1;\n    r12++;\n    eax &= r10d;\nlabel_16:\n    if (al == 0) {\n        goto label_1;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x27;\n    }\n    rbx += 2;\n    r10d = 0;\n    goto label_1;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_57;\n    }\n    if (r11d == 5) {\n        goto label_58;\n    }\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_3;\n    }\n    *((rsp + 0x6d)) = r13b;\n    edx = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\nlabel_15:\n    edx = *((rsp + 8));\n    dl &= *((rsp + 0x6c));\n    ecx = 0x5c;\n    al = (*((rsp + 0x28)) != 0) ? 1 : 0;\n    dl &= al;\n    if (dl != 0) {\n        goto label_59;\n    }\nlabel_8:\n    if (*((rsp + 8)) != 0) {\n        goto label_60;\n    }\nlabel_7:\n    r13d = 0;\n    goto label_2;\nlabel_6:\n    edx = 0;\n    r13d = 0;\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_4;\n    }\nlabel_54:\n    r13d = r11d;\n    eax = edx;\n    r11 = r9;\nlabel_42:\nlabel_12:\n    eax = 4;\n    if (*((rsp + 8)) != 0) {\n        r13d = eax;\n    }\nlabel_43:\n    r9d &= 0xfffffffd;\n    rax = fcn_0040de00 (r15, r14, *((rsp + 0x40)), r11, r13d, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\nlabel_44:\n    rax = rbx;\n    return rax;\n    goto label_6;\n    *((rsp + 0x10)) = 0;\n    edx = 0;\n    goto label_7;\n    *((rsp + 0x10)) = 0;\n    ecx = 0x72;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    do {\nlabel_20:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_61;\n        }\nlabel_34:\n        r13d = 0;\n        goto label_9;\n    } while (1);\nlabel_14:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_62;\n    }\n    *((rsp + 0x10)) = 0;\n    eax = r10d;\n    dl = (r11d == 2) ? 1 : 0;\n    eax ^= 1;\n    al &= dl;\n    if (al == 0) {\n        goto label_63;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rcx = rbx + 1;\n    if (r14 > rcx) {\n        *((r15 + rbx + 1)) = 0x24;\n    }\n    rcx = rbx + 2;\n    if (r14 > rcx) {\n        *((r15 + rbx + 2)) = 0x27;\n    }\n    rcx = rbx + 3;\n    if (r14 <= rcx) {\n        goto label_64;\n    }\nlabel_26:\n    *((r15 + rcx)) = 0x5c;\n    r10d = eax;\nlabel_25:\n    rbx = rcx + 1;\n    if (r11d == 2) {\n        goto label_65;\n    }\n    rax = r12 + 1;\n    if (rax < r9) {\n        rax = *((rsp + 0x20));\n        eax = *((rax + r12 + 1));\n        *((rsp + 0x30)) = al;\n        eax -= 0x30;\n        if (al <= 9) {\n            goto label_66;\n        }\n    }\nlabel_35:\n    eax = *((rsp + 8));\n    eax ^= 1;\n    al |= dl;\n    eax = r13d;\n    r13d = 0;\n    if (al == 0) {\n        goto label_10;\n    }\n    goto label_11;\nlabel_19:\n    *((rsp + 0x10)) = 0;\n    do {\nlabel_52:\n        if (*((rsp + 0x60)) != 1) {\n            goto label_67;\n        }\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r9;\n        *((rsp + 0x30)) = r10b;\n        rax = ctype_b_loc ();\n        edx = (int32_t) bpl;\n        r10d = *((rsp + 0x30));\n        r9 = *((rsp + 0x38));\n        rax = *(rax);\n        r11d = *((rsp + 0x40));\n        edi = 1;\n        eax = *((rax + rdx*2));\n        ax &= 0x4000;\n        r13b = (ax != 0) ? 1 : 0;\n        dl = (ax == 0) ? 1 : 0;\n        dl &= *((rsp + 8));\nlabel_37:\n        if (dl != 0) {\n            goto label_68;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        goto label_2;\nlabel_48:\n        ebp = *(r8);\n    } while (bpl > 0x7e);\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x417110 */\n    ecx = 0x6e;\nlabel_13:\n    eax = *((rsp + 0x6c));\n    dl = (r11d == 2) ? 1 : 0;\n    al &= dl;\n    *((rsp + 0x10)) = al;\n    if (al == 0) {\n        goto label_8;\n    }\nlabel_53:\n    r11 = r9;\n    r13d = 2;\n    goto label_12;\n    ecx = 0x74;\n    goto label_13;\n    ecx = 0x62;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x61;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    if (*((rsp + 8)) != 0) {\n        goto label_14;\n    }\n    if ((*((rsp + 0x68)) & 1) != 0) {\n        goto label_69;\n    }\n    *((rsp + 0x10)) = 0;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    ebp = 0;\n    goto label_2;\n    if (r11d != 2) {\n        goto label_15;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_17;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_18;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_18;\n    ecx = 0x72;\n    goto label_13;\n    ecx = 0x66;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x76;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\nlabel_49:\n    ebp = *(r8);\n    if (bpl > 0x7e) {\n        goto label_19;\n    }\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x417508 */\n    eax = 0;\n    do {\nlabel_31:\n        r13d = *((rsp + 0x10));\n        *((rsp + 0x10)) = al;\n        eax = 0;\n        goto label_10;\n        eax = 0;\nlabel_32:\n        if (r12 != 0) {\n            goto label_70;\n        }\n        r13d = *((rsp + 0x10));\n        edx = 0;\n        *((rsp + 0x10)) = al;\n        goto label_2;\n        eax = 0;\nlabel_33:\n    } while (1);\n    goto label_6;\n    goto label_20;\nlabel_47:\n    r13d = r11d;\n    r11 = r9;\n    dl = (r13d == 2) ? 1 : 0;\n    if (rbx == 0) {\n        if ((*((rsp + 0x6c)) & dl) != 0) {\n            goto label_71;\n        }\n    }\n    eax = *((rsp + 0x6c));\n    eax ^= 1;\n    dl &= al;\n    if (dl == 0) {\n        goto label_72;\n    }\n    if (*((rsp + 0x6d)) == 0) {\n        goto label_45;\n    }\n    if (*((rsp + 0x1f)) != 0) {\n        goto label_73;\n    }\n    al = (r14 == 0) ? 1 : 0;\n    dl = (*((rsp + 0x58)) != 0) ? 1 : 0;\n    al &= dl;\n    if (al == 0) {\n        goto label_74;\n    }\n    r14 = *((rsp + 0x58));\nlabel_46:\n    *(r15) = 0x27;\n    r13d = 2;\n    ebx = 1;\n    *((rsp + 0x50)) = 0x4166e5;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x6c)) = 0;\n    *((rsp + 0x6d)) = al;\n    goto label_21;\nlabel_58:\n    if ((*((rsp + 0x68)) & 4) != 0) {\n        rax = r12 + 2;\n        if (rax >= r9) {\n            goto label_39;\n        }\n        rsi = *((rsp + 0x20));\n        if (*((rsi + r12 + 1)) == 0x3f) {\n            goto label_75;\n        }\n    }\nlabel_39:\n    edx = 0;\n    r13d = 0;\n    goto label_2;\nlabel_57:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r13d = 0;\n    eax = 0;\n    goto label_11;\nlabel_67:\n    *((rsp + 0x88)) = 0;\n    if (r9 == -1) {\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        rax = strlen (*((rsp + 0x20)));\n        r11d = *((rsp + 0x40));\n        r10d = *((rsp + 0x38));\n        r8 = *((rsp + 0x30));\n        r9 = rax;\n    }\n    eax = 0;\n    *((rsp + 0x70)) = rbx;\n    *((rsp + 0x78)) = r8;\n    rbx = rax;\n    *((rsp + 0x6e)) = r10b;\n    *((rsp + 0x6f)) = bpl;\n    *((rsp + 0x40)) = r15;\n    *((rsp + 0x48)) = r14;\n    *((rsp + 0x30)) = r9;\n    *((rsp + 0x38)) = r11d;\n    while (*((rsp + 0x38)) != 2) {\nlabel_22:\n        eax = iswprint (*((rsp + 0x84)));\n        rdi = rsp + 0x88;\n        eax = 0;\n        if (eax == 0) {\n            r13d = eax;\n        }\n        rbx += r14;\n        eax = mbsinit (rdi);\n        if (eax != 0) {\n            goto label_76;\n        }\n        rax = *((rsp + 0x20));\n        r15 = r12 + rbx;\n        rbp = rax + r15;\n        rdx -= r15;\n        rax = fcn_00412fb0 (rsp + 0x84, rbp, *((rsp + 0x30)), rsp + 0x88);\n        r14 = rax;\n        if (rax == 0) {\n            goto label_76;\n        }\n        if (rax == -1) {\n            goto label_77;\n        }\n        if (rax == 0xfffffffffffffffe) {\n            goto label_78;\n        }\n    }\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_22;\n    }\n    if (rax == 1) {\n        goto label_22;\n    }\n    rsi = *((rsp + 0x20));\n    rax = rsi + r15 + 1;\n    rsi += r14;\n    rsi += r15;\n    goto label_79;\nlabel_23:\n    rax++;\n    if (rsi == rax) {\n        goto label_22;\n    }\nlabel_79:\n    ecx = *(rax);\n    ecx -= 0x5b;\n    if (cl > 0x21) {\n        goto label_23;\n    }\n    edx = 1;\n    rdx <<= cl;\n    rcx = 0x20000002b;\n    if ((rdx & rcx) == 0) {\n        goto label_23;\n    }\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r13d = 2;\n    r11 = *((rsp + 0x30));\n    goto label_12;\nlabel_70:\n    *((rsp + 0x10)) = al;\n    r13d = 0;\n    goto label_24;\nlabel_63:\n    rcx = rbx;\n    if (r14 <= rbx) {\n        goto label_25;\n    }\n    eax = r10d;\n    goto label_26;\nlabel_56:\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x5c;\n    }\n    rax = rbx + 2;\n    if (r14 <= rax) {\n        goto label_80;\n    }\n    rdx = r14;\n    *((r15 + rbx + 2)) = 0x27;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_69:\n    r12++;\n    goto label_28;\nlabel_68:\n    edx = *((rsp + 8));\n    r13d = 0;\nlabel_36:\n    rcx = rdi;\n    *((rsp + 0x30)) = r13b;\n    esi = 0;\n    r13d = *((rsp + 0x6c));\n    rcx += r12;\n    edi = *((rsp + 0x10));\n    r8 = *((rsp + 0x20));\n    while (dl != 0) {\n        al = (r11d == 2) ? 1 : 0;\n        if (r13b != 0) {\n            goto label_81;\n        }\n        esi = r10d;\n        esi ^= 1;\n        al &= sil;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rsi = rbx + 1;\n            if (r14 > rsi) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rsi = rbx + 2;\n            if (r14 > rsi) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 6;\n            eax += 0x30;\n            *((r15 + rbx + 1)) = al;\n        }\n        rax = rbx + 2;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 3;\n            eax &= 7;\n            eax += 0x30;\n            *((r15 + rbx + 2)) = al;\n        }\n        ebp &= 7;\n        r12++;\n        rbx += 3;\n        ebp += 0x30;\n        if (r12 >= rcx) {\n            goto label_82;\n        }\n        esi = edx;\nlabel_29:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = bpl;\n        }\n        ebp = *((r8 + r12));\n        rbx++;\n    }\n    eax = esi;\n    eax ^= 1;\n    eax &= r10d;\n    if (dil != 0) {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n    }\n    r12++;\n    if (r12 < rcx) {\n        if (al == 0) {\n            goto label_83;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x27;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            *((r15 + rbx + 1)) = 0x27;\n        }\n        rbx += 2;\n        edi = 0;\n        r10d = 0;\n        goto label_29;\n    }\n    r13d = *((rsp + 0x30));\n    goto label_16;\nlabel_81:\n    r13d = r11d;\n    *((rsp + 8)) = al;\n    r11 = r9;\n    goto label_12;\nlabel_64:\n    rbx += 4;\n    r10d = eax;\n    r13d = 0;\n    goto label_11;\n    if (ebp != 0) {\n        goto label_30;\n    }\n    *((rsp + 8)) = 1;\n    do {\n        if (r14 != 0) {\n            goto label_84;\n        }\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 1;\n        r13d = 2;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x4166e5;\n        goto label_21;\n        if (ebp != 0) {\n            goto label_85;\n        }\n        if (r14 == 0) {\n            goto label_86;\n        }\n        *(r15) = 0x22;\n        r10d = 0;\n        *((rsp + 0x1f)) = 1;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\nlabel_38:\n        *((rsp + 0x6c)) = 0;\n        ebx = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x416c54;\n        goto label_21;\n        if (r14 != 0) {\n            *((rsp + 8)) = r11;\n            rax = fcn_0040dd00 (0x416c65, r13d);\n            *((rsp + 0xd8)) = rax;\n            rax = fcn_0040dd00 (0x4166e5, r13d);\n            r11 = *((rsp + 8));\n            *((rsp + 0xe0)) = rax;\n        }\n        ebx = 0;\n        if (ebp == 0) {\n            goto label_87;\n        }\nlabel_41:\n        *((rsp + 0x10)) = r11;\n        rax = strlen (*((rsp + 0xe0)));\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        r11 = *((rsp + 0x10));\n        *((rsp + 0x28)) = rax;\n        rax = *((rsp + 0xe0));\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x50)) = rax;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 8)) = 1;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 0;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 5;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x416c54;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 2;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x4166e5;\n        goto label_21;\n        eax = *((rsp + 0x10));\n        goto label_31;\n        eax = *((rsp + 0x10));\n        goto label_32;\n        eax = *((rsp + 0x10));\n        goto label_33;\n        edx = 0;\n        r13d = 0;\n        goto label_4;\n        goto label_34;\nlabel_66:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x30;\n        }\n        rax = rcx + 2;\n        if (r14 > rax) {\n            *((r15 + rcx + 2)) = 0x30;\n        }\n        rbx = rcx + 3;\n        goto label_35;\n        if (ebp != 0) {\n            goto label_88;\n        }\n        *((rsp + 8)) = 0;\n    } while (1);\nlabel_82:\n    r13d = *((rsp + 0x30));\n    goto label_1;\nlabel_59:\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\nlabel_83:\n    edi = 0;\n    goto label_29;\nlabel_76:\n    rdi = rbx;\n    edx = r13d;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    edx ^= 1;\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    dl &= *((rsp + 8));\nlabel_40:\n    if (rdi > 1) {\n        goto label_36;\n    }\n    goto label_37;\nlabel_86:\n    *((rsp + 0x58)) = 0;\n    r10d = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x6d)) = 0;\n    goto label_38;\nlabel_65:\n    eax = r13d;\n    r13d = 0;\n    goto label_11;\nlabel_75:\n    ebp = *((rsi + rax));\n    if (bpl > 0x3e) {\n        goto label_39;\n    }\n    rsi = 0x7000a38200000000;\n    if (((rsi >> rbp) & 1) >= 0) {\n        goto label_39;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_51;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x3f;\n    }\n    rdx = rbx + 1;\n    if (r14 > rdx) {\n        *((r15 + rbx + 1)) = 0x22;\n    }\n    rdx = rbx + 2;\n    if (r14 > rdx) {\n        *((r15 + rbx + 2)) = 0x22;\n    }\n    rdx = rbx + 3;\n    if (r14 > rdx) {\n        *((r15 + rbx + 3)) = 0x3f;\n    }\n    rbx += 4;\n    edx = 0;\n    r13d = 0;\n    r12 = rax;\n    goto label_35;\nlabel_77:\n    rdi = rbx;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r13d = 0;\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    edx = *((rsp + 8));\n    goto label_40;\nlabel_78:\n    r9 = *((rsp + 0x30));\n    rsi = r15;\n    rcx = rbp;\n    rax = rbx;\n    rdi = rbx;\n    r8 = *((rsp + 0x78));\n    r10d = *((rsp + 0x6e));\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r11d = *((rsp + 0x38));\n    if (rsi >= r9) {\n        goto label_89;\n    }\n    if (*(rcx) != 0) {\n        goto label_90;\n    }\n    goto label_89;\n    do {\n        if (*((r8 + rax)) == 0) {\n            goto label_91;\n        }\nlabel_90:\n        rax++;\n        rdx = r12 + rax;\n    } while (rdx < r9);\nlabel_91:\n    rdi = rax;\nlabel_89:\n    edx = *((rsp + 8));\n    r13d = 0;\n    goto label_40;\nlabel_87:\n    rax = *((rsp + 0xd8));\n    eax = *(rax);\n    if (al == 0) {\n        goto label_41;\n    }\n    rdx = *((rsp + 0xd8));\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = al;\n        }\n        rbx++;\n        eax = *((rdx + rbx));\n    } while (al != 0);\n    goto label_41;\nlabel_61:\n    r13d = r11d;\n    eax = 0;\n    r11 = r9;\n    goto label_42;\nlabel_85:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 1;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x416c54;\n    goto label_21;\nlabel_51:\n    r13d = r11d;\n    r11 = r9;\n    goto label_43;\nlabel_72:\n    edx = eax;\nlabel_45:\n    rax = *((rsp + 0x50));\n    if (rax == 0) {\n        goto label_92;\n    }\n    if (dl == 0) {\n        goto label_92;\n    }\n    edx = *(rax);\n    if (dl == 0) {\n        goto label_92;\n    }\n    rax -= rbx;\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = dl;\n        }\n        rbx++;\n        edx = *((rax + rbx));\n    } while (dl != 0);\nlabel_92:\n    if (r14 <= rbx) {\n        goto label_44;\n    }\n    *((r15 + rbx)) = 0;\n    goto label_44;\nlabel_55:\n    r13d = r11d;\n    r11 = r9;\n    goto label_12;\nlabel_62:\n    r13d = r11d;\n    r11 = r9;\n    rsp + 8 = (r13d == 2) ? 1 : 0;\n    goto label_12;\nlabel_73:\n    rax = fcn_0040de00 (r15, *((rsp + 0x78)), *((rsp + 0x40)), r11, 5, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\n    goto label_44;\nlabel_74:\n    edx = *((rsp + 0x6d));\n    goto label_45;\nlabel_71:\n    r13d = 2;\n    goto label_12;\nlabel_84:\n    r10d = 0;\n    eax = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x58)) = 0;\n    goto label_46;\nlabel_80:\n    rdx = r14;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_88:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x4166e5;\n    goto label_21;\nlabel_60:\n    r13d = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040f030",
            "funcStartAddr": "0x40f030",
            "funcEndAddr": "0x41b2e5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40f030 */\n#include <stdint.h>\n \nuint64_t fcn_0040f030 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_30h;\n    int64_t var_18h;\n    int64_t var_24h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    do {\n        abort ();\n        r15 = (int64_t) edi;\n        r14 = rdx;\n        *((rsp + 8)) = rsi;\n        rax = errno_location ();\n        rbx = *(0x0061c558);\n        r13 = rax;\n        eax = *(rax);\n        *((rsp + 0x18)) = eax;\n    } while (r15d < 0);\n    if (*(0x0061c570) > r15d) {\n        goto label_0;\n    }\n    if (r15d == 0x7fffffff) {\n        goto label_1;\n    }\n    r12d = r15 + 1;\n    rsi = (int64_t) r12d;\n    rsi <<= 4;\n    if (rbx == 0x61c560) {\n        goto label_2;\n    }\n    rax = fcn_00411270 (rbx, rsi);\n    *(0x0061c558) = rax;\n    rbx = rax;\n    do {\n        rdi = *(0x0061c570);\n        edx -= edi;\n        rdi <<= 4;\n        rdx = (int64_t) edx;\n        rdi += rbx;\n        rdx <<= 4;\n        memset (rdi, 0, r12d);\n        *(0x0061c570) = r12d;\nlabel_0:\n        eax = *((rbp + 4));\n        r15 <<= 4;\n        rbx += r15;\n        r15 = rbp + 8;\n        eax |= 1;\n        r11 = *(rbx);\n        r12 = *((rbx + 8));\n        *((rsp + 0x24)) = eax;\n        rsi = r11;\n        *((rsp + 0x30)) = r11;\n        rax = fcn_0040de00 (r12, rsi, *((rsp + 0x28)), r14, *(rbp), eax);\n        r11 = *((rsp + 0x10));\n        if (r11 <= rax) {\n            rsi = rax + 1;\n            *(rbx) = rsi;\n            if (r12 != 0x61cbe0) {\n                *((rsp + 0x10)) = rsi;\n                free (r12);\n                rsi = *((rsp + 0x10));\n            }\n            *((rsp + 0x10)) = rsi;\n            rax = fcn_00411210 (*((rsp + 0x10)));\n            *((rbx + 8)) = rax;\n            rdi = rax;\n            r12 = rax;\n            fcn_0040de00 (rdi, *((rsp + 0x30)), *((rsp + 0x28)), r14, *(rbp), *((rsp + 0x3c)));\n        }\n        eax = *((rsp + 0x18));\n        *(r13) = eax;\n        rax = r12;\n        return rax;\nlabel_2:\n        rax = fcn_00411270 (0, rsi);\n        __asm (\"movdqa xmm0, xmmword [0x0061c560]\");\n        rbx = rax;\n        *(0x0061c558) = rax;\n        __asm (\"movups xmmword [rax], xmm0\");\n    } while (1);\nlabel_1:\n    return fcn_00411460 ();\n}\n"
        },
        {
            "funcName": "fcn_0040f550",
            "funcStartAddr": "0x40f550",
            "funcEndAddr": "0x41bbea",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40f550 */\n#include <stdint.h>\n \nint64_t fcn_0040f550 (int64_t arg1, uint32_t arg2, int64_t arg3) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    do {\n        abort ();\n    } while (esi == 0xa);\n    rax = rdx;\n    *(rsp) = esi;\n    *((rsp + 4)) = 0;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x30)) = 0;\n    fcn_0040f030 (rdi, rax, 0xffffffffffffffff, rsp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040f5c0",
            "funcStartAddr": "0x40f5c0",
            "funcEndAddr": "0x41bcc1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40f5c0 */\n#include <stdint.h>\n \nint64_t fcn_0040f5c0 (int64_t arg1, uint32_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    do {\n        abort ();\n    } while (esi == 0xa);\n    rax = rdx;\n    *(rsp) = esi;\n    *((rsp + 4)) = 0;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x30)) = 0;\n    fcn_0040f030 (rdi, rax, rcx, rsp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040f630",
            "funcStartAddr": "0x40f630",
            "funcEndAddr": "0x40f63c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40f630 */\n#include <stdint.h>\n \nvoid fcn_0040f630 (int64_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = rsi;\n    esi = edi;\n    edi = 0;\n    return void (*0x40f550)() ();\n}\n"
        },
        {
            "funcName": "fcn_0040f6d0",
            "funcStartAddr": "0x40f6d0",
            "funcEndAddr": "0x40f761",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40f6d0 */\n#include <stdint.h>\n \nint64_t fcn_0040f6d0 (int64_t arg1, int64_t arg7, int64_t arg8, int64_t arg9) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_20h;\n    int64_t var_30h;\n    rdi = arg1;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    xmm2 = arg9;\n    do {\n        rax = imp.__libc_start_main;\n        ecx = edx;\n        __asm (\"movdqa xmm0, xmmword [0x0061cce0]\");\n        __asm (\"movdqa xmm1, xmmword [0x0061ccf0]\");\n        __asm (\"movdqa xmm2, xmmword [0x0061cd00]\");\n        ecx &= 0x1f;\n        *((rsp + 0x30)) = rax;\n        eax = edx;\n        al >>= 5;\n        *(rsp) = xmm0;\n        eax = (int32_t) al;\n        *((rsp + 0x10)) = xmm1;\n        r8 = rsp + rax*4 + 8;\n        *((rsp + 0x20)) = xmm2;\n        edx = *(r8);\n        eax = *(r8);\n        eax >>= cl;\n        eax = ~eax;\n        eax &= 1;\n        eax <<= cl;\n        eax ^= edx;\n        *(r8) = eax;\n        fcn_0040f030 (0, rdi, rsi, rsp);\n        return rax;\n        edx = 0x3a;\n        rsi = 0xffffffffffffffff;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040f700",
            "funcStartAddr": "0x40f700",
            "funcEndAddr": "0x41bf46",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40f700 */\n#include <stdint.h>\n \nint64_t fcn_0040f700 (uint32_t arg2, int64_t arg3) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rsi = arg2;\n    rdx = arg3;\n    do {\n        abort ();\n    } while (esi == 0xa);\n    rcx = 0x400000000000000;\n    rax = rdx;\n    *(rsp) = esi;\n    *((rsp + 8)) = rcx;\n    *((rsp + 4)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x30)) = 0;\n    fcn_0040f030 (rdi, rax, 0xffffffffffffffff, rsp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040f860",
            "funcStartAddr": "0x40f860",
            "funcEndAddr": "0x40f871",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40f860 */\n#include <stdint.h>\n \nvoid fcn_0040f860 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    ecx = 0x61c520;\n    rdx = 0xffffffffffffffff;\n    return void (*0x40f030)() ();\n}\n"
        },
        {
            "funcName": "fcn_0040f880",
            "funcStartAddr": "0x40f880",
            "funcEndAddr": "0x40f896",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40f880 */\n#include <stdint.h>\n \nvoid fcn_0040f880 (int64_t arg1) {\n    rdi = arg1;\n    rsi = rdi;\n    ecx = 0x61c520;\n    rdx = 0xffffffffffffffff;\n    edi = 0;\n    return void (*0x40f030)() ();\n}\n"
        },
        {
            "funcName": "fcn_0040f900",
            "funcStartAddr": "0x40f900",
            "funcEndAddr": "0x40fbef",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40f900 */\n#include <stdint.h>\n \nuint64_t fcn_0040f900 (uint32_t arg1, int64_t arg2) {\n    int64_t var_8h;\n    uid_t var_10h;\n    rdi = arg1;\n    rsi = arg2;\n    if (rsi == 0) {\n        goto label_3;\n    }\n    r12 = rdi;\n    if (rdi == 0) {\n        goto label_4;\n    }\n    rax = fcn_004136b0 (rdi, 0x4179c4);\n    r13 = rax;\n    if (rax == 0) {\n        goto label_5;\n    }\n    fcn_00411210 (0x1038);\n    ecx = 0x1000;\n    rdi = r13;\n    *(rax) = r13;\n    if (rbp <= 0x1000) {\n        rcx = rbp;\n    }\n    *((rax + 8)) = 0x40f8a0;\n    rbx = rax;\n    *((rax + 0x10)) = r12;\n    setvbuf (rdi, rax + 0x18, 0, rcx);\n    do {\nlabel_0:\n        rax = rbx;\n        return rax;\nlabel_4:\n        fcn_00411210 (0x1038);\n        *(rax) = 0;\n        rbx = rax;\n        r13 = rax + 0x20;\n        *((rax + 8)) = 0x40f8a0;\n        *((rax + 0x10)) = 0;\n        *((rax + 0x18)) = 0;\n        eax = 0;\n        eax = open (\"/dev/urandom\", 0, rdx);\n        r15d = eax;\n        if (eax < 0) {\n            goto label_6;\n        }\n        rdx = rbp;\n        edi = eax;\n        rsi = r13;\n        r14d = 0x800;\n        ecx = 0x1018;\n        if (rbp > 0x800) {\n            rdx = r14;\n        }\n        rax = read_chk ();\n        close (r15d);\n        if (rbp <= 0x7ff) {\n            goto label_7;\n        }\nlabel_1:\n        fcn_00410070 (r13);\n    } while (1);\nlabel_3:\n    rax = fcn_00411210 (0x1038);\n    rbx = rax;\n    *(rax) = 0;\n    *((rax + 8)) = 0x40f8a0;\n    *((rax + 0x10)) = 0;\n    goto label_0;\nlabel_6:\n    r12 = rsp + 0x10;\n    esi = 0;\n    r14d = 0x14;\n    rdi = r12;\n    gettimeofday ();\n    __asm (\"movdqa xmm0, xmmword [rsp + 0x10]\");\n    __asm (\"movups xmmword [rbx + 0x20], xmm0\");\n    eax = getpid ();\n    *((rsp + 0x10)) = eax;\n    *((rbx + 0x30)) = eax;\nlabel_2:\n    eax = 4;\n    rbp -= r14;\n    if (rbp > 4) {\n    }\n    eax = getppid ();\n    rsi = r13 + r14;\n    *((rsp + 0x10)) = eax;\n    edi = ebp;\n    if (ebp == 0) {\n        goto label_8;\n    }\n    eax = 0;\n    do {\n        edx = eax;\n        eax++;\n        ecx = *((r12 + rdx));\n        *((rsi + rdx)) = cl;\n    } while (eax < edi);\nlabel_8:\n    rbp += r14;\n    if (rbp > 0x7ff) {\n        goto label_1;\n    }\n    r14d = 0x800;\n    eax = 4;\n    r14 -= rbp;\n    if (r14 > 4) {\n        r14 = rax;\n    }\n    eax = getuid ();\n    rsi = r13 + rbp;\n    *((rsp + 0x10)) = eax;\n    edi = r14d;\n    if (r14d == 0) {\n        goto label_9;\n    }\n    eax = 0;\n    do {\n        edx = eax;\n        eax++;\n        ecx = *((r12 + rdx));\n        *((rsi + rdx)) = cl;\n    } while (eax < edi);\nlabel_9:\n    rbp += r14;\n    if (rbp > 0x7ff) {\n        goto label_1;\n    }\n    eax = getgid ();\n    edx = 4;\n    rsi = r13 + rbp;\n    *((rsp + 0x10)) = eax;\n    eax = 0x800;\n    rax -= rbp;\n    if (rax > 4) {\n        rax = rdx;\n    }\n    edi = eax;\n    if (eax == 0) {\n        goto label_1;\n    }\n    eax = 0;\n    do {\n        edx = eax;\n        eax++;\n        ecx = *((r12 + rdx));\n        *((rsi + rdx)) = cl;\n    } while (eax < edi);\n    goto label_1;\nlabel_5:\n    ebx = 0;\n    goto label_0;\nlabel_7:\n    rcx = r14;\n    eax = 0x10;\n    __asm (\"cmovs rbp, r12\");\n    r12 = rsp + 0x10;\n    rdi = r12;\n    rcx -= rbp;\n    r15 = r13 + rbp;\n    if (rcx > 0x10) {\n        rcx = rax;\n    }\n    esi = 0;\n    rbp += rcx;\n    *((rsp + 8)) = rcx;\n    gettimeofday ();\n    rcx = *((rsp + 8));\n    rdi = r15;\n    rsi = r12;\n    *(rdi) = *(rsi);\n    rcx--;\n    rsi++;\n    rdi++;\n    if (rbp > 0x7ff) {\n        goto label_1;\n    }\n    r14 -= rbp;\n    eax = 4;\n    if (r14 > 4) {\n        r14 = rax;\n    }\n    eax = getpid ();\n    rsi = r12;\n    *((rsp + 0x10)) = eax;\n    ecx = r14d;\n    rax = r13 + rbp;\n    r14 += rbp;\n    rdi = rax;\n    *(rdi) = *(rsi);\n    rcx--;\n    rsi++;\n    rdi++;\n    if (r14 <= 0x7ff) {\n        goto label_2;\n    }\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040fc10",
            "funcStartAddr": "0x40fc10",
            "funcEndAddr": "0x40fd6c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40fc10 */\n#include <stdint.h>\n \nuint64_t fcn_0040fc10 (int64_t arg1, void * arg2, uint32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r12 = rdi;\n    rbx = rdx;\n    r13 = *(rdi);\n    if (r13 == 0) {\n        goto label_1;\n    }\n    rax = errno_location ();\n    r15d = 0;\n    r14 = rax;\n    while (rbx != 0) {\n        rax = *(r12);\n        rdi = *((r12 + 0x10));\n        if ((*(rax) & 0x20) == 0) {\n            edx = r15d;\n        }\n        *(r14) = edx;\n        uint64_t (*r12 + 8)() ();\n        r13 = *(r12);\n        rdx = rbx;\n        rdi = rbp;\n        rcx = r13;\n        esi = 1;\n        rax = fread_unlocked ();\n        edx = *(r14);\n        rbp += rax;\n        rbx -= rax;\n    }\nlabel_0:\n    return rax;\nlabel_1:\n    r15 = *((rdi + 0x18));\n    r13 = rdi + 0x838;\n    r14 = rdi + 0x20;\n    if (rdx <= r15) {\n        goto label_2;\n    }\n    do {\n        rbp += r15;\n        rsi -= r15;\n        rbx -= r15;\n        rsi += r13;\n        memcpy (rbp, 0x800, r15);\n        if ((bpl & 7) == 0) {\n            goto label_3;\n        }\n        r15d = 0x800;\n        fcn_0040fdc0 (r14, r13);\n    } while (rbx > 0x800);\n    goto label_4;\n    do {\n        rbp += 0x800;\n        fcn_0040fdc0 (r14, rbp);\n        rbx -= 0x800;\n        if (rbx == 0) {\n            goto label_5;\n        }\nlabel_3:\n    } while (rbx > 0x7ff);\n    fcn_0040fdc0 (r14, r13);\nlabel_4:\n    r15d = 0x800;\n    do {\n        memcpy (rbp, r13, rbx);\n        rcx = r15;\n        rcx -= rbx;\n        *((r12 + 0x18)) = rcx;\n        goto label_0;\nlabel_5:\n        *((r12 + 0x18)) = 0;\n        return rax;\nlabel_2:\n        r13 -= r15;\n        r13 += 0x800;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040fd70",
            "funcStartAddr": "0x40fd70",
            "funcEndAddr": "0x40fdb9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40fd70 */\n#include <stdint.h>\n \nuint32_t fcn_0040fd70 (int64_t arg1) {\n    rdi = arg1;\n    rdx = 0xffffffffffffffff;\n    esi = 0x1038;\n    rbx = rdi;\n    rbp = *(rdi);\n    explicit_bzero_chk ();\n    eax = free (rbx);\n    if (rbp != 0) {\n        rdi = rbp;\n        void (*0x411f80)() ();\n    }\n    eax = 0;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_0040fdc0",
            "funcStartAddr": "0x40fdc0",
            "funcEndAddr": "0x410065",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x40fdc0 */\n#include <stdint.h>\n \nint64_t fcn_0040fdc0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rax = *((rdi + 0x810));\n    r11 = *((rdi + 0x808));\n    r10 = rdi + 0x400;\n    rdx = *((rdi + 0x800));\n    r9 = rsi;\n    r8 = rax + 1;\n    rax = rdi;\n    *((rdi + 0x810)) = r8;\n    r11 += r8;\n    do {\n        rcx = rdx;\n        rcx <<= 0x15;\n        rdx ^= rcx;\n        rcx = *(rax);\n        rdx = ~rdx;\n        rdx += *((rax + 0x400));\n        r8 = rcx;\n        r8d &= 0x7f8;\n        rbx = *((rdi + r8));\n        rbx += rdx;\n        r8 = rbx;\n        r8 += r11;\n        r11 = rdx;\n        *(rax) = r8;\n        r8 >>= 8;\n        r11 >>= 5;\n        r8d &= 0x7f8;\n        rdx ^= r11;\n        rbx = *((rdi + r8));\n        rbx += rcx;\n        *(r9) = rbx;\n        r8 = *((rax + 8));\n        rdx += *((rax + 0x408));\n        r11 = rdx;\n        rdx = r8;\n        edx &= 0x7f8;\n        rcx = *((rdi + rdx));\n        rdx = r11;\n        rdx <<= 0xc;\n        rcx += r11;\n        rdx ^= r11;\n        rcx += rbx;\n        *((rax + 8)) = rcx;\n        rcx >>= 8;\n        ecx &= 0x7f8;\n        rbx = *((rdi + rcx));\n        rbx += r8;\n        *((r9 + 8)) = rbx;\n        rcx = *((rax + 0x10));\n        rdx += *((rax + 0x410));\n        r8 = rcx;\n        r8d &= 0x7f8;\n        r11 = *((rdi + r8));\n        r11 += rdx;\n        r8 = r11;\n        r8 += rbx;\n        *((rax + 0x10)) = r8;\n        r8 >>= 8;\n        r8d &= 0x7f8;\n        rcx += *((rdi + r8));\n        *((r9 + 0x10)) = rcx;\n        r11 = rcx;\n        r8 = *((rax + 0x18));\n        rcx = rdx;\n        rcx >>= 0x21;\n        rdx ^= rcx;\n        rcx = r8;\n        rdx += *((rax + 0x418));\n        ecx &= 0x7f8;\n        rbx = *((rdi + rcx));\n        rbx += rdx;\n        rcx = rbx;\n        rcx += r11;\n        rax += 0x20;\n        r9 += 0x20;\n        *((rax - 8)) = rcx;\n        rcx >>= 8;\n        ecx &= 0x7f8;\n        r11 = *((rdi + rcx));\n        r11 += r8;\n        *((r9 - 8)) = r11;\n    } while (rax != r10);\n    rsi += 0x400;\n    r9 = rdi + 0x800;\n    do {\n        rcx = rdx;\n        rcx <<= 0x15;\n        rdx ^= rcx;\n        rcx = *(rax);\n        rdx = ~rdx;\n        rdx += *((rax - 0x400));\n        r8 = rcx;\n        r10 = rdx;\n        r8d &= 0x7f8;\n        r10 >>= 5;\n        rbx = *((rdi + r8));\n        rbx += rdx;\n        rdx ^= r10;\n        r8 = rbx;\n        r8 += r11;\n        *(rax) = r8;\n        r8 >>= 8;\n        r8d &= 0x7f8;\n        rcx += *((rdi + r8));\n        *(rsi) = rcx;\n        r8 = *((rax + 8));\n        r11 = rcx;\n        rdx += *((rax - 0x3f8));\n        r10 = rdx;\n        rdx = r8;\n        edx &= 0x7f8;\n        rcx = *((rdi + rdx));\n        rdx = r10;\n        rdx <<= 0xc;\n        rcx += r10;\n        rdx ^= r10;\n        rcx += r11;\n        *((rax + 8)) = rcx;\n        rcx >>= 8;\n        ecx &= 0x7f8;\n        r11 = *((rdi + rcx));\n        r11 += r8;\n        *((rsi + 8)) = r11;\n        rcx = *((rax + 0x10));\n        rdx += *((rax - 0x3f0));\n        r8 = rcx;\n        r8d &= 0x7f8;\n        rbx = *((rdi + r8));\n        rbx += rdx;\n        r8 = rbx;\n        r8 += r11;\n        *((rax + 0x10)) = r8;\n        r8 >>= 8;\n        r8d &= 0x7f8;\n        rcx += *((rdi + r8));\n        *((rsi + 0x10)) = rcx;\n        r10 = rcx;\n        r8 = *((rax + 0x18));\n        rcx = rdx;\n        rcx >>= 0x21;\n        rdx ^= rcx;\n        rcx = r8;\n        rdx += *((rax - 0x3e8));\n        ecx &= 0x7f8;\n        rbx = *((rdi + rcx));\n        rbx += rdx;\n        rcx = rbx;\n        rcx += r10;\n        rax += 0x20;\n        rsi += 0x20;\n        *((rax - 8)) = rcx;\n        rcx >>= 8;\n        ecx &= 0x7f8;\n        r11 = *((rdi + rcx));\n        r11 += r8;\n        *((rsi - 8)) = r11;\n    } while (rax != r9);\n    *((rdi + 0x800)) = rdx;\n    *((rdi + 0x808)) = r11;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00410070",
            "funcStartAddr": "0x410070",
            "funcEndAddr": "0x4102a4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x410070 */\n#include <stdint.h>\n \nint64_t fcn_00410070 (int64_t arg1) {\n    rdi = arg1;\n    rdx = rdi;\n    rax = rdi;\n    rcx = 0x98f5704f6c44c0ab;\n    rsi = 0x82f053db8355e0ce;\n    r11 = 0xb29b2e824a595524;\n    r12 = 0xae985bf2cbfc89ed;\n    r10 = 0x8c0ea5053d4712a0;\n    r9 = 0xb9f8b322c73ac862;\n    rbp = rdi + 0x800;\n    r8 = 0x647c4677a2884b7c;\n    rbx = 0x48fe4a0fa5a09315;\n    do {\n        r13 = *(rax);\n        rsi += *((rax + 0x20));\n        rcx += *((rax + 0x38));\n        rbx += *((rax + 0x28));\n        r13 -= rsi;\n        r12 += *((rax + 0x30));\n        r8 += r13;\n        r13 = rcx;\n        r13 >>= 9;\n        rcx += r8;\n        rbx ^= r13;\n        r13 = *((rax + 8));\n        r13 -= rbx;\n        r9 += r13;\n        r13 = r8;\n        r13 <<= 9;\n        r8 += r9;\n        r12 ^= r13;\n        r13 = *((rax + 0x10));\n        r13 -= r12;\n        r10 += r13;\n        r13 = r9;\n        r13 >>= 0x17;\n        r9 += r10;\n        rcx ^= r13;\n        r13 = *((rax + 0x18));\n        r13 -= rcx;\n        r11 += r13;\n        r13 = r10;\n        r13 <<= 0xf;\n        r10 += r11;\n        r8 ^= r13;\n        r13 = r11;\n        rsi -= r8;\n        r13 >>= 0xe;\n        *(rax) = r8;\n        r9 ^= r13;\n        r13 = rsi;\n        r11 += rsi;\n        rbx -= r9;\n        r13 <<= 0x14;\n        *((rax + 8)) = r9;\n        r10 ^= r13;\n        r13 = rsi + rbx;\n        rsi = rbx;\n        r12 -= r10;\n        rsi >>= 0x11;\n        *((rax + 0x10)) = r10;\n        rax += 0x40;\n        r11 ^= rsi;\n        rsi = r12;\n        rbx += r12;\n        rcx -= r11;\n        rsi <<= 0xe;\n        *((rax - 0x28)) = r11;\n        rsi ^= r13;\n        r12 += rcx;\n        *((rax - 0x18)) = rbx;\n        *((rax - 0x20)) = rsi;\n        *((rax - 0x10)) = r12;\n        *((rax - 8)) = rcx;\n    } while (rbp != rax);\n    do {\n        rcx += *((rdx + 0x38));\n        rsi += *((rdx + 0x20));\n        r8 += *(rdx);\n        rax = rcx;\n        rbx += *((rdx + 0x28));\n        r8 -= rsi;\n        rax >>= 9;\n        r9 += *((rdx + 8));\n        r12 += *((rdx + 0x30));\n        rbx ^= rax;\n        rax = r8;\n        r10 += *((rdx + 0x10));\n        rcx += r8;\n        r9 -= rbx;\n        rax <<= 9;\n        r11 += *((rdx + 0x18));\n        r12 ^= rax;\n        rax = r9;\n        r8 += r9;\n        r10 -= r12;\n        rax >>= 0x17;\n        rcx ^= rax;\n        rax = r10;\n        r9 += r10;\n        r11 -= rcx;\n        rax <<= 0xf;\n        r8 ^= rax;\n        rax = r11;\n        r10 += r11;\n        rsi -= r8;\n        rax >>= 0xe;\n        *(rdx) = r8;\n        r9 ^= rax;\n        rax = rsi;\n        r11 += rsi;\n        rbx -= r9;\n        rax <<= 0x14;\n        *((rdx + 8)) = r9;\n        r10 ^= rax;\n        rax = rsi + rbx;\n        rsi = rbx;\n        r12 -= r10;\n        rsi >>= 0x11;\n        *((rdx + 0x10)) = r10;\n        rdx += 0x40;\n        r11 ^= rsi;\n        rsi = r12;\n        rbx += r12;\n        rcx -= r11;\n        rsi <<= 0xe;\n        *((rdx - 0x28)) = r11;\n        rsi ^= rax;\n        r12 += rcx;\n        *((rdx - 0x18)) = rbx;\n        *((rdx - 0x20)) = rsi;\n        *((rdx - 0x10)) = r12;\n        *((rdx - 8)) = rcx;\n    } while (rbp != rdx);\n    *((rdi + 0x810)) = 0;\n    *((rdi + 0x808)) = 0;\n    *((rdi + 0x800)) = 0;\n    r12 = rbx;\n    r13 = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004102b0",
            "funcStartAddr": "0x4102b0",
            "funcEndAddr": "0x410399",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x4102b0 */\n#include <stdint.h>\n \nuint64_t fcn_004102b0 (int64_t arg1) {\n    rdi = arg1;\n    rdx = *((rdi + 0x30));\n    rbx = rdi;\n    r12 = *((rdi + 0x28));\n    rbp -= r12;\n    rbp--;\n    if (rdx == r12) {\n        goto label_2;\n    }\nlabel_1:\n    rcx = *((rbx + 0x48));\n    rax = rdx + rcx;\n    rcx = ~rcx;\n    rdx = *((rbx + 0x38));\n    rax &= rcx;\n    rcx = *((rbx + 0x20));\n    rsi = rax;\n    rdi = rdx;\n    *((rbx + 0x30)) = rax;\n    rsi -= rcx;\n    rdi -= rcx;\n    if (rsi > rdi) {\n        *((rbx + 0x30)) = rdx;\n        rax = rdx;\n    }\n    *((rbx + 0x28)) = rax;\n    rdx = *((rbx + 0x88));\n    rax = *((rbx + 0x90));\n    rax -= rdx;\n    while (1) {\n        *(rdx) = r12;\n        rdx = *((rbx + 0xe0));\n        rax = *((rbx + 0xe8));\n        *((rbx + 0x88)) += 8;\n        rax -= rdx;\n        if (rax <= 7) {\n            goto label_3;\n        }\nlabel_0:\n        *(rdx) = rbp;\n        *((rbx + 0xe0)) += 8;\n        *(rbx)++;\n        r12 = rbx;\n        return rax;\n        rdi = rbx + 0x70;\n        esi = 8;\n        _obstack_newchunk ();\n        rdx = *((rbx + 0x88));\n    }\nlabel_3:\n    rdi = rbx + 0xc8;\n    esi = 8;\n    _obstack_newchunk ();\n    rdx = *((rbx + 0xe0));\n    goto label_0;\nlabel_2:\n    *((rdi + 0x68)) |= 2;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_004103a0",
            "funcStartAddr": "0x4103a0",
            "funcEndAddr": "0x410407",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x4103a0 */\n#include <stdint.h>\n \nvoid fcn_004103a0 (struct sigaction * arg1) {\n    rdi = arg1;\n    r8d = imp.free;\n    rbx = rdi;\n    ecx = imp.malloc;\n    *(rdi) = 0;\n    edx = 0;\n    rdi = rdi + 0x18;\n    esi = 0;\n    *((rdi - 0x10)) = 0;\n    *((rdi - 8)) = 0;\n    _obstack_begin ();\n    rdi = rbx + 0x70;\n    ecx = imp.malloc;\n    edx = 0;\n    r8d = imp.free;\n    esi = 0;\n    _obstack_begin ();\n    rdi = rbx + 0xc8;\n    edx = 0;\n    esi = 0;\n    r8d = imp.free;\n    ecx = imp.malloc;\n    return obstack_begin ();\n}\n"
        },
        {
            "funcName": "fcn_00410440",
            "funcStartAddr": "0x410440",
            "funcEndAddr": "0x410653",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x410440 */\n#include <stdint.h>\n \nuint64_t fcn_00410440 (int64_t arg1, struct sigaction * arg2) {\n    int64_t var_ch;\n    rdi = arg1;\n    rsi = arg2;\n    r12 = rsi + 0x18;\n    rbx = rsi;\n    while (*((rbx + 0x38)) != rdx) {\n        rcx = rdx + 1;\n        *((rbx + 0x30)) = rcx;\n        *(rdx) = al;\n        if (eax == 0) {\n            goto label_6;\n        }\nlabel_0:\n        eax = fgetc (rbp);\n        if (eax == 0xffffffff) {\n            goto label_7;\n        }\nlabel_1:\n        rdx = *((rbx + 0x30));\n    }\n    esi = 1;\n    rdi = r12;\n    *((rsp + 0xc)) = eax;\n    _obstack_newchunk ();\n    rdx = *((rbx + 0x30));\n    eax = *((rsp + 0xc));\n    rcx = rdx + 1;\n    *((rbx + 0x30)) = rcx;\n    *(rdx) = al;\n    if (eax != 0) {\n        goto label_0;\n    }\nlabel_6:\n    fcn_004102b0 (rbx);\n    eax = fgetc (rbp);\n    if (eax != 0xffffffff) {\n        goto label_1;\n    }\nlabel_7:\n    rax = *((rbx + 0x30));\n    if (rax != *((rbx + 0x28))) {\n        if (rax == *((rbx + 0x38))) {\n            goto label_8;\n        }\nlabel_5:\n        rdx = rax + 1;\n        *((rbx + 0x30)) = rdx;\n        *(rax) = 0;\n        fcn_004102b0 (rbx);\n    }\n    rdx = *((rbx + 0x88));\n    rax = *((rbx + 0x90));\n    rax -= rdx;\n    if (rax <= 7) {\n        goto label_9;\n    }\nlabel_2:\n    *(rdx) = 0;\n    rax = *((rbx + 0x88));\n    rsi = *((rbx + 0x80));\n    rdx = rax + 8;\n    *((rbx + 0x88)) = rdx;\n    if (rdx == rsi) {\n        goto label_10;\n    }\nlabel_4:\n    rcx = *((rbx + 0xa0));\n    rax = rdx + rcx;\n    rcx = ~rcx;\n    rdx = *((rbx + 0x78));\n    rax &= rcx;\n    rcx = *((rbx + 0x90));\n    rdi = rax;\n    *((rbx + 0x88)) = rax;\n    r8 = rcx;\n    rdi -= rdx;\n    r8 -= rdx;\n    while (1) {\n        *((rbx + 8)) = rsi;\n        rdx = *((rbx + 0xe0));\n        rsi = *((rbx + 0xd8));\n        *((rbx + 0x80)) = rax;\n        if (rdx == rsi) {\n            goto label_11;\n        }\nlabel_3:\n        rcx = *((rbx + 0xf8));\n        rax = rdx + rcx;\n        rcx = ~rcx;\n        rdx = *((rbx + 0xd0));\n        rax &= rcx;\n        rcx = *((rbx + 0xe8));\n        rdi = rax;\n        *((rbx + 0xe0)) = rax;\n        r9 = rcx;\n        rdi -= rdx;\n        r9 -= rdx;\n        if (rdi > r9) {\n            *((rbx + 0xe0)) = rcx;\n            rax = rcx;\n        }\n        *((rbx + 0xd8)) = rax;\n        *((rbx + 0x10)) = rsi;\n        eax = ferror (rbp);\n        al = (eax == 0) ? 1 : 0;\n        return rax;\n        *((rbx + 0x88)) = rcx;\n        rax = rcx;\n    }\nlabel_9:\n    rdi = rbx + 0x70;\n    esi = 8;\n    _obstack_newchunk ();\n    rdx = *((rbx + 0x88));\n    goto label_2;\nlabel_11:\n    *((rbx + 0x118)) |= 2;\n    goto label_3;\nlabel_10:\n    *((rbx + 0xc0)) |= 2;\n    goto label_4;\nlabel_8:\n    rdi = rbx + 0x18;\n    esi = 1;\n    _obstack_newchunk ();\n    rax = *((rbx + 0x30));\n    goto label_5;\n}\n"
        },
        {
            "funcName": "fcn_00410680",
            "funcStartAddr": "0x410680",
            "funcEndAddr": "0x41368e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x410680 */\n#include <stdint.h>\n \nuint64_t fcn_00410680 (int64_t arg2) {\n    rsi = arg2;\n    ebx = esi;\n    eax = mkostemp ();\n    esi = ebx;\n    edi = eax;\n    ebx = edi;\n    if (edi > 2) {\n        eax = ebx;\n        return eax;\n    }\n    eax = fcn_00413690 (rdi, rsi, rdx);\n    r12d = eax;\n    rax = errno_location ();\n    ebx = r12d;\n    r13d = *(rax);\n    close (ebx);\n    eax = ebx;\n    *(rbp) = r13d;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004106a0",
            "funcStartAddr": "0x4106a0",
            "funcEndAddr": "0x410c1e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x4106a0 */\n#include <stdint.h>\n \nuint64_t fcn_004106a0 (uint32_t arg1, uint32_t arg2, uint32_t arg3, uint32_t arg4) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r9d = *(rdi);\n    r8d = *(rsi);\n    if (r9b == 0x2d) {\n        goto label_1;\n    }\n    if (r8b != 0x2d) {\n        goto label_37;\n    }\n    do {\nlabel_0:\n        rsi++;\n        eax = *(rsi);\n    } while (al == 0x30);\n    if (ecx == eax) {\n        goto label_0;\n    }\n    if (edx == eax) {\n        goto label_12;\n    }\nlabel_11:\n    esi = rax - 0x30;\n    eax = 1;\n    if (esi > 9) {\n        goto label_38;\n    }\nlabel_21:\n    return eax;\n    do {\nlabel_1:\n        rdi++;\n        eax = *(rdi);\n    } while (al == 0x30);\n    r9d = (int32_t) al;\n    if (ecx == r9d) {\n        goto label_1;\n    }\n    if (r8b == 0x2d) {\n        goto label_7;\n    }\n    if (edx == r9d) {\n        goto label_39;\n    }\nlabel_10:\n    r9d -= 0x30;\n    if (r9d > 9) {\n        goto label_40;\n    }\n    goto label_41;\n    do {\nlabel_2:\n        rsi++;\n        r8d = *(rsi);\nlabel_40:\n    } while (r8b == 0x30);\n    r10d = (int32_t) r8b;\n    if (ecx == r10d) {\n        goto label_2;\n    }\n    if (edx == r10d) {\n        goto label_42;\n    }\nlabel_14:\n    r10d -= 0x30;\n    eax = 0;\n    al = (r10d <= 9) ? 1 : 0;\n    eax = -eax;\n    return eax;\n    do {\nlabel_3:\n        rdi++;\n        r9d = *(rdi);\nlabel_37:\n    } while (r9b == 0x30);\n    eax = (int32_t) r9b;\n    if (ecx == eax) {\n        goto label_3;\n    }\n    if (r8b != 0x30) {\n        goto label_43;\n    }\n    do {\nlabel_4:\n        rsi++;\n        r8d = *(rsi);\n    } while (r8b == 0x30);\nlabel_43:\n    r10d = (int32_t) r8b;\n    if (ecx == r10d) {\n        goto label_4;\n    }\nlabel_5:\n    if (r9b != r8b) {\n        goto label_44;\n    }\n    r8d = r10 - 0x30;\n    if (r8d > 9) {\n        goto label_44;\n    }\n    do {\n        rdi++;\n        eax = *(rdi);\n        r9d = eax;\n    } while (ecx == eax);\nlabel_6:\n    rsi++;\n    r10d = *(rsi);\n    r8d = r10d;\n    if (ecx != r10d) {\n        goto label_5;\n    }\n    rsi++;\n    r10d = *(rsi);\n    r8d = r10d;\n    if (ecx == r10d) {\n        goto label_6;\n    }\n    goto label_5;\n    do {\nlabel_7:\n        rsi++;\n        r8d = *(rsi);\n    } while (r8b == 0x30);\n    r10d = (int32_t) r8b;\n    if (ecx == r10d) {\n        goto label_7;\n    }\nlabel_8:\n    if (al != r8b) {\n        goto label_45;\n    }\n    eax = r10 - 0x30;\n    if (eax > 9) {\n        goto label_45;\n    }\n    do {\n        rdi++;\n        r9d = *(rdi);\n        eax = r9d;\n    } while (ecx == r9d);\nlabel_9:\n    rsi++;\n    r10d = *(rsi);\n    r8d = r10d;\n    if (ecx != r10d) {\n        goto label_8;\n    }\n    rsi++;\n    r10d = *(rsi);\n    r8d = r10d;\n    if (ecx == r10d) {\n        goto label_9;\n    }\n    goto label_8;\n    do {\nlabel_39:\n        rdi++;\n        eax = *(rdi);\n    } while (al == 0x30);\n    r9d = (int32_t) al;\n    goto label_10;\nlabel_12:\n    rsi++;\n    eax = *(rsi);\n    if (al != 0x30) {\n        goto label_11;\n    }\n    rsi++;\n    eax = *(rsi);\n    if (al == 0x30) {\n        goto label_12;\n    }\n    goto label_11;\n    do {\nlabel_13:\n        rdi++;\n        r9d = *(rdi);\nlabel_38:\n    } while (r9b == 0x30);\n    eax = (int32_t) r9b;\n    if (ecx == eax) {\n        goto label_13;\n    }\n    if (edx == eax) {\n        goto label_46;\n    }\nlabel_19:\n    eax -= 0x30;\n    al = (eax <= 9) ? 1 : 0;\n    eax = (int32_t) al;\n    return eax;\n    do {\nlabel_42:\n        rsi++;\n        r8d = *(rsi);\n    } while (r8b == 0x30);\n    r10d = (int32_t) r8b;\n    goto label_14;\nlabel_44:\n    if (edx == eax) {\n        goto label_47;\n    }\nlabel_20:\n    r8d = rax - 0x30;\n    if (edx == r10d) {\n        goto label_48;\n    }\n    eax -= r10d;\n    r10d -= 0x30;\n    if (r8d > 9) {\n        goto label_49;\n    }\nlabel_23:\n    r8d = 0;\n    do {\nlabel_15:\n        rdi++;\n        edx = *(rdi);\n    } while (ecx == edx);\n    edx -= 0x30;\n    r8++;\n    if (edx <= 9) {\n        goto label_15;\n    }\n    if (r10d > 9) {\n        goto label_50;\n    }\nlabel_26:\n    edi = 0;\n    do {\nlabel_16:\n        rsi++;\n        edx = *(rsi);\n    } while (ecx == edx);\n    edx -= 0x30;\n    rdi++;\n    if (edx <= 9) {\n        goto label_16;\n    }\n    if (rdi == r8) {\n        goto label_51;\n    }\n    eax -= eax;\n    eax |= 1;\n    return eax;\nlabel_45:\n    if (edx == r9d) {\n        goto label_52;\n    }\nlabel_24:\n    r8d = r9 - 0x30;\n    if (edx == r10d) {\n        goto label_53;\n    }\n    eax = r10d;\n    r10d -= 0x30;\n    eax -= r9d;\n    if (r8d > 9) {\n        goto label_54;\n    }\nlabel_28:\n    r8d = 0;\n    do {\nlabel_17:\n        rdi++;\n        edx = *(rdi);\n    } while (ecx == edx);\n    edx -= 0x30;\n    r8++;\n    if (edx <= 9) {\n        goto label_17;\n    }\n    if (r10d > 9) {\n        goto label_55;\n    }\nlabel_32:\n    edi = 0;\n    do {\nlabel_18:\n        rsi++;\n        edx = *(rsi);\n    } while (ecx == edx);\n    edx -= 0x30;\n    rdi++;\n    if (edx <= 9) {\n        goto label_18;\n    }\n    if (rdi != r8) {\n        goto label_56;\n    }\nlabel_51:\n    edx = 0;\n    if (rdi == 0) {\n        eax = edx;\n    }\n    return eax;\n    do {\nlabel_46:\n        rdi++;\n        r9d = *(rdi);\n    } while (r9b == 0x30);\n    eax = (int32_t) r9b;\n    goto label_19;\nlabel_47:\n    r8d = r10 - 0x30;\n    if (r8d <= 9) {\n        goto label_20;\n    }\nlabel_22:\n    r8d = *(rsi);\n    if (dl == *(rdi)) {\n        goto label_57;\n    }\n    eax = 0;\n    if (dl != r8b) {\n        goto label_21;\n    }\n    rax = rsi + 1;\n    edx = *((rsi + 1));\n    while (dl == 0x30) {\n        rax++;\n        edx = *(rax);\nlabel_35:\n    }\n    eax = (int32_t) dl;\nlabel_25:\n    eax -= 0x30;\n    al = (eax <= 9) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = -eax;\n    return rax;\nlabel_48:\n    if (r8d > 9) {\n        goto label_22;\n    }\n    eax -= edx;\n    r10d = rdx - 0x30;\n    goto label_23;\nlabel_56:\n    eax -= eax;\n    eax &= 2;\n    eax--;\n    return rax;\nlabel_50:\n    eax = 0;\n    al = (r8 != 0) ? 1 : 0;\n    return rax;\nlabel_55:\n    eax = 0;\n    al = (r8 != 0) ? 1 : 0;\n    eax = -eax;\n    return rax;\nlabel_52:\n    eax = r10 - 0x30;\n    if (eax <= 9) {\n        goto label_24;\n    }\nlabel_27:\n    ecx = *(rdi);\n    if (dl == *(rsi)) {\n        goto label_58;\n    }\n    eax = 0;\n    if (dl != cl) {\n        goto label_21;\n    }\n    do {\n        rdi++;\nlabel_36:\n        eax = *(rdi);\n    } while (al == 0x30);\n    goto label_25;\nlabel_49:\n    r8d = 0;\n    if (r10d <= 9) {\n        goto label_26;\n    }\nlabel_29:\n    eax = 0;\n    return rax;\nlabel_53:\n    if (r8d > 9) {\n        goto label_27;\n    }\n    eax = edx;\n    r10d = rdx - 0x30;\n    eax -= r9d;\n    goto label_28;\nlabel_57:\n    ecx = *((rdi + 1));\n    if (dl == r8b) {\n        goto label_59;\n    }\n    rdi++;\n    while (cl == 0x30) {\n        rdi++;\n        ecx = *(rdi);\nlabel_31:\n    }\n    ecx -= 0x30;\n    eax = 0;\n    al = (ecx <= 9) ? 1 : 0;\n    return rax;\nlabel_30:\n    if (r8d > 9) {\n        goto label_29;\n    }\n    ecx = *((rdi + 1));\nlabel_59:\n    rsi++;\n    edx = *(rsi);\n    eax = (int32_t) cl;\n    rdi++;\n    r8d = rax - 0x30;\n    if (dl == cl) {\n        goto label_30;\n    }\n    r9d = (int32_t) dl;\n    r10d = r9 - 0x30;\n    if (r8d > 9) {\n        goto label_60;\n    }\n    if (r10d > 9) {\n        goto label_31;\n    }\n    eax -= r9d;\n    return rax;\nlabel_54:\n    r8d = 0;\n    if (r10d <= 9) {\n        goto label_32;\n    }\n    goto label_29;\nlabel_58:\n    if (dl == cl) {\n        goto label_61;\n    }\n    do {\n        rsi++;\nlabel_34:\n        eax = *(rsi);\n    } while (al == 0x30);\n    goto label_19;\nlabel_33:\n    if (r8d > 9) {\n        goto label_29;\n    }\nlabel_61:\n    rsi++;\n    rdi++;\n    eax = *(rsi);\n    ecx = *(rdi);\n    r8d = rax - 0x30;\n    if (al == cl) {\n        goto label_33;\n    }\n    edx = rcx - 0x30;\n    if (r8d > 9) {\n        goto label_62;\n    }\n    if (edx > 9) {\n        goto label_34;\n    }\n    eax -= ecx;\n    return rax;\nlabel_41:\n    eax = 0xffffffff;\n    return rax;\nlabel_60:\n    eax = 0;\n    if (r10d > 9) {\n        goto label_21;\n    }\n    rax = rsi;\n    goto label_35;\nlabel_62:\n    eax = 0;\n    if (edx <= 9) {\n        goto label_36;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00410c70",
            "funcStartAddr": "0x410c70",
            "funcEndAddr": "0x41ed8b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x410c70 */\n#include <stdint.h>\n \nvoid fcn_00410c70 (int64_t arg_20h, int64_t arg_30h, int64_t arg_8h_2, int64_t arg_10h, int64_t arg_8h, int64_t arg_8h_3, int64_t arg_10h_2, int64_t arg_18h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_30h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    eax = abort ();\n    r12 = r9;\n    rbx = r8;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    r9 = rcx;\n    r8 = rdx;\n    rcx = rsi;\n    edx = \"%s (%s) %s\\n\";\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    do {\n        edx = 5;\n        rax = dcgettext (0, 0x4179da);\n        r8d = 0x7e1;\n        edx = \"Copyright %s %d Free Software Foundation, Inc.\";\n        rdi = rbp;\n        rcx = rax;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        edx = 5;\n        rax = dcgettext (0, \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\");\n        rsi = rbp;\n        rdi = rax;\n        eax = fputs_unlocked ();\n        if (r12 > 9) {\n            goto label_2;\n        }\n        /* switch table (10 cases) at 0x417cc0 */\nlabel_1:\n        r8 = rcx;\n        esi = 1;\n        rcx = rdx;\n        eax = 0;\n        edx = \"%s %s\\n\";\n        fprintf_chk ();\n    } while (1);\n    r9 = *((rbx + 0x38));\n    rax = *((rbx + 0x10));\n    edx = 5;\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    r15 = *((rbx + 0x20));\n    *((rsp + 0x10)) = r9;\n    r14 = *((rbx + 0x18));\n    rbx = *(rbx);\n    *(rsp) = rax;\n    *((rsp + 8)) = r8;\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n    do {\n        r9 = *((rsp + 0x18));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        r9 = *((rsp + 0x30));\n        r8 = *((rsp + 0x38));\n        fprintf_chk ();\n        return rax;\n        r10 = *((rbx + 0x40));\n        r9 = *((rbx + 0x38));\n        edx = 5;\n        rax = *((rbx + 0x10));\n        r8 = *((rbx + 8));\n        r13 = *((rbx + 0x30));\n        r12 = *((rbx + 0x28));\n        *((rsp + 0x18)) = r10;\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        *((rsp + 0x10)) = r9;\n        *(rsp) = rax;\n        rbx = *(rbx);\n        *((rsp + 8)) = r8;\nlabel_0:\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        r10 = *((rsp + 0x18));\n    } while (1);\n    rbx = *(rbx);\n    edx = 5;\n    rax = dcgettext (0, \"Written by %s.\\n\");\n    rdi = rbp;\n    esi = 1;\n    rcx = rbx;\n    rdx = rax;\n    eax = 0;\n    void (*0x402e40)() ();\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s and %s.\\n\");\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x402e40)() ();\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, and %s.\\n\");\n    r9 = r13;\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x402e40)() ();\n    edx = 5;\n    r14 = *((rbx + 0x18));\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\nand %s.\\n\");\n    do {\n        rdx = rax;\n        r9 = r13;\n        r8 = r12;\n        rcx = rbx;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r15 = *((rbx + 0x20));\n        edx = 5;\n        r14 = *((rbx + 0x18));\n        r13 = *((rbx + 0x10));\n        r12 = *((rbx + 8));\n        rbx = *(rbx);\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n    } while (1);\n    r8 = *((rbx + 8));\n    r12 = *((rbx + 0x28));\n    edx = 5;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *(rsp) = r8;\n    r13 = *((rbx + 0x10));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n    r9 = r13;\n    do {\n        r8 = *((rsp + 0x20));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r9 = *((rbx + 0x10));\n        r13 = *((rbx + 0x30));\n        edx = 5;\n        r12 = *((rbx + 0x28));\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        r8 = *((rbx + 8));\n        *((rsp + 8)) = r9;\n        rbx = *(rbx);\n        *(rsp) = r8;\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n        r9 = *((rsp + 0x28));\n    } while (1);\nlabel_2:\n    r10 = *((rbx + 0x40));\n    r9 = *((rbx + 0x38));\n    edx = 5;\n    esi = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    rax = *((rbx + 0x10));\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    *((rsp + 0x18)) = r10;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *((rsp + 0x10)) = r9;\n    *(rsp) = rax;\n    rbx = *(rbx);\n    *((rsp + 8)) = r8;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_004110d0",
            "funcStartAddr": "0x4110d0",
            "funcEndAddr": "0x41118c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x4110d0 */\n#include <stdint.h>\n \nuint64_t fcn_004110d0 (int64_t arg_b0h, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_70h;\n    int64_t var_90h;\n    int64_t var_98h;\n    r8 = arg5;\n    r9 = arg6;\n    r11d = 0;\n    rax = rsp + 0xb0;\n    *((rsp + 0x90)) = r8;\n    r10 = rsp + 0xb0;\n    r8d = 0x20;\n    *((rsp + 0x10)) = rax;\n    rax = rsp + 0x70;\n    *((rsp + 0x98)) = r9;\n    r9d = 0;\n    *((rsp + 8)) = 0x20;\n    *((rsp + 0x18)) = rax;\n    while (r8d <= 0x2f) {\n        eax = r8d;\n        r11 = rsp + 0x70;\n        r8d += 8;\n        rax += r11;\n        r11d = 1;\n        rax = *(rax);\n        *((rsp + r9*8 + 0x20)) = rax;\n        if (rax == 0) {\n            goto label_1;\n        }\nlabel_0:\n        r9++;\n        if (r9 == 0xa) {\n            goto label_1;\n        }\n    }\n    rax = r10;\n    r10 += 8;\n    rax = *(rax);\n    *((rsp + r9*8 + 0x20)) = rax;\n    if (rax != 0) {\n        goto label_0;\n    }\nlabel_1:\n    if (r11b != 0) {\n        *((rsp + 8)) = r8d;\n    }\n    fcn_00410c70 (rdi, rsi, rdx, rcx, rsp + 0x20, r9);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00411210",
            "funcStartAddr": "0x411210",
            "funcEndAddr": "0x41122a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x411210 */\n#include <stdint.h>\n \nuint64_t fcn_00411210 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = malloc (rdi);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    return fcn_00411460 ();\n}\n"
        },
        {
            "funcName": "fcn_00411270",
            "funcStartAddr": "0x411270",
            "funcEndAddr": "0x4112a6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x411270 */\n#include <stdint.h>\n \nuint64_t fcn_00411270 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rsi;\n    if (rsi == 0) {\n        if (rdi != 0) {\n            goto label_0;\n        }\n    }\n    rax = realloc (rdi, rbx);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_1;\n        }\n    }\n    return rax;\nlabel_0:\n    eax = free (rdi);\n    eax = 0;\n    return rax;\nlabel_1:\n    return fcn_00411460 ();\n}\n"
        },
        {
            "funcName": "fcn_004113e0",
            "funcStartAddr": "0x4113e0",
            "funcEndAddr": "0x41140e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x4113e0 */\n#include <stdint.h>\n \nint64_t fcn_004113e0 (int64_t arg1, size_t size) {\n    rdi = arg1;\n    rsi = size;\n    rax = rdi;\n    rdx:rax = rax * rsi;\n    __asm (\"seto dl\");\n    if (rax >= 0) {\n        edx = (int32_t) dl;\n        if (rdx != 0) {\n            goto label_0;\n        }\n        rax = calloc (rdi, rsi);\n        if (rax == 0) {\n            goto label_0;\n        }\n        return rax;\n    }\nlabel_0:\n    return fcn_00411460 ();\n}\n"
        },
        {
            "funcName": "fcn_00411410",
            "funcStartAddr": "0x411410",
            "funcEndAddr": "0x411438",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x411410 */\n#include <stdint.h>\n \nuint64_t fcn_00411410 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdi = rsi;\n    rbx = rsi;\n    rax = fcn_00411210 (rdi);\n    rdx = rbx;\n    rsi = rbp;\n    rdi = rax;\n    return memcpy ();\n}\n"
        },
        {
            "funcName": "fcn_00411460",
            "funcStartAddr": "0x411460",
            "funcEndAddr": "0x411491",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x411460 */\n#include <stdint.h>\n \nuint64_t fcn_00411460 (void) {\n    edx = 5;\n    rax = dcgettext (0, \"memory exhausted\");\n    rcx = rax;\n    eax = 0;\n    error (*(0x0061c518), 0, 0x416abc);\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_004114a0",
            "funcStartAddr": "0x4114a0",
            "funcEndAddr": "0x411554",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x4114a0 */\n#include <stdint.h>\n \nuint64_t fcn_004114a0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r14d = edi;\n    r13 = r8;\n    r12 = rdx;\n    edx = 5;\n    rbx = rsi;\n    rax = dcgettext (0, \"string comparison failed\");\n    eax = 0;\n    error (0, r14d, rax);\n    edx = 5;\n    rax = dcgettext (0, \"Set LC_ALL='C' to work around the problem.\");\n    eax = 0;\n    error (0, 0, rax);\n    rax = fcn_0040f5c0 (1, 8, rbp, r13);\n    rax = fcn_0040f5c0 (0, 8, rbx, r12);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"The strings compared were %s and %s.\");\n    edi = *(0x0061c518);\n    r8 = rbp;\n    esi = 0;\n    rcx = rbx;\n    rdx = rax;\n    eax = 0;\n    return error ();\n}\n"
        },
        {
            "funcName": "fcn_004115c0",
            "funcStartAddr": "0x4115c0",
            "funcEndAddr": "0x411617",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x4115c0 */\n#include <stdint.h>\n \nuint64_t fcn_004115c0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r14 = rcx;\n    r12 = rdx;\n    rbx = rsi;\n    eax = fcn_00413e30 (rdi, rsi, rdx, rcx);\n    r13d = eax;\n    rax = errno_location ();\n    edi = *(rax);\n    if (edi == 0) {\n        eax = r13d;\n        return rax;\n    }\n    fcn_004114a0 (rdi, rbp, rbx - 1, r12, r14 - 1);\n    eax = r13d;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00411620",
            "funcStartAddr": "0x411620",
            "funcEndAddr": "0x411673",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x411620 */\n#include <stdint.h>\n \nuint64_t fcn_00411620 (void) {\n    int64_t var_8h;\n    rax = fcn_00413580 (rdi);\n    *(rsp) = rax;\n    *((rsp + 8)) = rdx;\n    rax = errno_location ();\n    rbx = rax;\n    while (eax != 0) {\n        if ((*(rbx) & 0xfffffffb) != 0) {\n            goto label_0;\n        }\n        *(rbx) = 0;\n        eax = fcn_00413140 (rsp, 0);\n    }\n    return rax;\nlabel_0:\n    eax = 0xffffffff;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00411680",
            "funcStartAddr": "0x411680",
            "funcEndAddr": "0x411aa4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x411680 */\n#include <stdint.h>\n \nuint64_t fcn_00411680 (int64_t arg1, int64_t arg2, uint32_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_8h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    if (edx > 0x24) {\n        goto label_13;\n    }\n    r15 = rsi;\n    rax = rsp + 0x18;\n    *(rsp) = edx;\n    r14 = rcx;\n    r13 = r8;\n    if (rsi == 0) {\n        r15 = rax;\n    }\n    errno_location ();\n    *(rax) = 0;\n    r12 = rax;\n    ebx = *(rbp);\n    rax = ctype_b_loc ();\n    edx = *(rsp);\n    rsi = *(rax);\n    rax = rbp;\n    while ((*((rsi + rcx*2 + 1)) & 0x20) != 0) {\n        rax++;\n        ebx = *(rax);\n        ecx = (int32_t) bl;\n    }\n    if (bl == 0x2d) {\n        goto label_1;\n    }\n    rax = strtoul (rbp, r15, rdx);\n    r8 = *(r15);\n    rbx = rax;\n    if (r8 == rbp) {\n        goto label_14;\n    }\n    eax = *(r12);\n    if (eax != 0) {\n        goto label_15;\n    }\n    ebp = 0;\n    do {\n        if (r13 != 0) {\n            r12d = *(r8);\n            if (r12b != 0) {\n                goto label_16;\n            }\n        }\nlabel_2:\n        *(r14) = rbx;\nlabel_0:\n        eax = ebp;\n        return rax;\nlabel_15:\n    } while (eax == 0x22);\n    do {\nlabel_1:\n        goto label_0;\nlabel_14:\n        *(rsp) = r8;\n    } while (r13 == 0);\n    r12d = *(rbp);\n    if (r12b == 0) {\n        goto label_1;\n    }\n    esi = (int32_t) r12b;\n    ebp = 0;\n    ebx = 1;\n    rax = strchr (r13, rsi);\n    r8 = *(rsp);\n    if (rax == 0) {\n        goto label_1;\n    }\nlabel_4:\n    edx = r12 - 0x45;\n    if (dl <= 0x2f) {\n        rax = 0x814400308945;\n        *(rsp) = dl;\n        if (((rax >> rdx) & 1) >= 0) {\n            goto label_17;\n        }\n        *((rsp + 8)) = r8;\n        rax = strchr (r13, 0x30);\n        r8 = *((rsp + 8));\n        if (rax == 0) {\n            goto label_17;\n        }\n        eax = *((r8 + 1));\n        if (al == 0x44) {\n            goto label_18;\n        }\n        if (al == 0x69) {\n            goto label_19;\n        }\n        edx = *(rsp);\n        if (al == 0x42) {\n            goto label_18;\n        }\n        /* switch table (67 cases) at 0x417e10 */\n    }\nlabel_17:\n    esi = 1;\n    edx = 0x400;\nlabel_7:\n    r12d -= 0x42;\n    if (r12b > 0x35) {\n        goto label_20;\n    }\n    r12d = (int32_t) r12b;\n    /* switch table (54 cases) at 0x417f90 */\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    rax = rbx;\n    rdx:rax = rax * rcx;\n    if (r12b overflow 0x35) {\n        goto label_5;\n    }\n    rdx:rax = rax * rcx;\n    if (r12b overflow 0x35) {\n        goto label_5;\n    }\n    rbx = rax;\n    do {\nlabel_3:\n        rsi = (int64_t) esi;\n        eax = ebp;\n        r8 += rsi;\n        eax |= 2;\n        *(r15) = r8;\n        if (*(r8) != 0) {\n        }\n        goto label_2;\n        esi = 1;\n        edx = 0x400;\n        rax = rbx;\n        rdx:rax = rax * rdx;\n        rbx = rax;\n    } while (*(r8) !overflow 0);\nlabel_5:\n    rbx |= 0xffffffffffffffff;\n    goto label_3;\nlabel_16:\n    esi = (int32_t) r12b;\n    *(rsp) = r8;\n    rax = strchr (r13, rsi);\n    r8 = *(rsp);\n    if (rax != 0) {\n        goto label_4;\n    }\nlabel_20:\n    *(r14) = rbx;\n    ebp |= 2;\n    goto label_0;\n    if (rbx < 0) {\n        goto label_5;\n    }\n    rbx += rbx;\n    goto label_3;\n    esi = 1;\n    rax = rbx;\n    rax >>= 0x37;\n    if (rax != 0) {\n        goto label_5;\n    }\n    rbx <<= 9;\n    goto label_3;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 7;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (rbx overflow 0) {\n            goto label_21;\n        }\nlabel_8:\n        edi--;\n    } while (edi != 0);\nlabel_6:\n    ebp |= r9d;\n    goto label_3;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 8;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (ebp overflow 0) {\n            goto label_22;\n        }\nlabel_11:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 4;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_23;\n        }\nlabel_9:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 5;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_24;\n        }\nlabel_12:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 6;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_25;\n        }\nlabel_10:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    rax = rbx;\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rbx = rax;\n    eax = 0;\n    ebp |= eax;\n    goto label_3;\n    rax = rbx;\n    rax >>= 0x36;\n    if (rax != 0) {\n        goto label_5;\n    }\n    rbx <<= 0xa;\n    goto label_3;\n    esi = 1;\n    goto label_3;\nlabel_18:\n    esi = 2;\n    edx = 0x3e8;\n    goto label_7;\nlabel_19:\n    esi = 0;\n    edx = 0x400;\n    sil = (*((r8 + 2)) == 0x42) ? 1 : 0;\n    esi = rsi + rsi + 1;\n    goto label_7;\nlabel_21:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_8;\nlabel_26:\n    eax = 1;\n    rbx |= 0xffffffffffffffff;\n    ebp |= eax;\n    goto label_3;\nlabel_23:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_9;\nlabel_25:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_10;\nlabel_22:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_11;\nlabel_24:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_12;\nlabel_13:\n    return assert_fail (\"0 <= strtol_base && strtol_base <= 36\", \"lib/xstrtol.c\", 0x60, \"xstrtoul\");\n}\n"
        },
        {
            "funcName": "fcn_00411ab0",
            "funcStartAddr": "0x411ab0",
            "funcEndAddr": "0x4206aa",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x411ab0 */\n#include <stdint.h>\n \nint64_t fcn_00411ab0 (uint32_t arg1, char * arg2, int64_t arg4, int64_t arg5) {\n    int64_t var_eh;\n    int64_t var_fh;\n    rdi = arg1;\n    rsi = arg2;\n    rcx = arg4;\n    r8 = arg5;\n    do {\n        abort ();\n        edi--;\n        ebx = *(0x0061c518);\n    } while (edi > 3);\n    r10d = esi;\n    rsi = *((rdi*8 + 0x4181c0));\n    rax = (int64_t) r10d;\n    if (r10d < 0) {\n        goto label_0;\n    }\n    rax <<= 5;\n    r12d = 0x418149;\n    r13 = *((rcx + rax));\n    do {\n        edx = 5;\n        rax = dcgettext (0, rsi);\n        r9 = rbp;\n        r8 = r13;\n        rcx = r12;\n        eax = 0;\n        error (ebx, 0, rax);\n        rax = abort ();\nlabel_0:\n        r12d = 0x418149;\n        *((rsp + 0xe)) = dl;\n        r13 = rsp + 0xe;\n        r12 -= rax;\n        *((rsp + 0xf)) = 0;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00411b40",
            "funcStartAddr": "0x411b40",
            "funcEndAddr": "0x411f74",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x411b40 */\n#include <stdint.h>\n \nuint64_t fcn_00411b40 (int64_t arg1, int64_t arg2, uint32_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_8h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    if (edx > 0x24) {\n        goto label_13;\n    }\n    r15 = rsi;\n    rax = rsp + 0x18;\n    *(rsp) = edx;\n    r14 = rcx;\n    r13 = r8;\n    if (rsi == 0) {\n        r15 = rax;\n    }\n    errno_location ();\n    *(rax) = 0;\n    r12 = rax;\n    ebx = *(rbp);\n    rax = ctype_b_loc ();\n    edx = *(rsp);\n    rsi = *(rax);\n    rax = rbp;\n    while ((*((rsi + rcx*2 + 1)) & 0x20) != 0) {\n        rax++;\n        ebx = *(rax);\n        ecx = (int32_t) bl;\n    }\n    if (bl == 0x2d) {\n        goto label_1;\n    }\n    ecx = 0;\n    rsi = r15;\n    rdi = rbp;\n    rax = strtoul_internal ();\n    r8 = *(r15);\n    rbx = rax;\n    if (r8 == rbp) {\n        goto label_14;\n    }\n    eax = *(r12);\n    if (eax != 0) {\n        goto label_15;\n    }\n    ebp = 0;\n    do {\n        if (r13 != 0) {\n            r12d = *(r8);\n            if (r12b != 0) {\n                goto label_16;\n            }\n        }\nlabel_2:\n        *(r14) = rbx;\nlabel_0:\n        eax = ebp;\n        return rax;\nlabel_15:\n    } while (eax == 0x22);\n    do {\nlabel_1:\n        goto label_0;\nlabel_14:\n        *(rsp) = r8;\n    } while (r13 == 0);\n    r12d = *(rbp);\n    if (r12b == 0) {\n        goto label_1;\n    }\n    esi = (int32_t) r12b;\n    ebp = 0;\n    ebx = 1;\n    rax = strchr (r13, rsi);\n    r8 = *(rsp);\n    if (rax == 0) {\n        goto label_1;\n    }\nlabel_4:\n    edx = r12 - 0x45;\n    if (dl <= 0x2f) {\n        rax = 0x814400308945;\n        *(rsp) = dl;\n        if (((rax >> rdx) & 1) >= 0) {\n            goto label_17;\n        }\n        *((rsp + 8)) = r8;\n        rax = strchr (r13, 0x30);\n        r8 = *((rsp + 8));\n        if (rax == 0) {\n            goto label_17;\n        }\n        eax = *((r8 + 1));\n        if (al == 0x44) {\n            goto label_18;\n        }\n        if (al == 0x69) {\n            goto label_19;\n        }\n        edx = *(rsp);\n        if (al == 0x42) {\n            goto label_18;\n        }\n        /* switch table (67 cases) at 0x4181e0 */\n    }\nlabel_17:\n    esi = 1;\n    edx = 0x400;\nlabel_7:\n    r12d -= 0x42;\n    if (r12b > 0x35) {\n        goto label_20;\n    }\n    r12d = (int32_t) r12b;\n    /* switch table (54 cases) at 0x418360 */\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    rax = rbx;\n    rdx:rax = rax * rcx;\n    if (r12b overflow 0x35) {\n        goto label_5;\n    }\n    rdx:rax = rax * rcx;\n    if (r12b overflow 0x35) {\n        goto label_5;\n    }\n    rbx = rax;\n    do {\nlabel_3:\n        rsi = (int64_t) esi;\n        eax = ebp;\n        r8 += rsi;\n        eax |= 2;\n        *(r15) = r8;\n        if (*(r8) != 0) {\n        }\n        goto label_2;\n        esi = 1;\n        edx = 0x400;\n        rax = rbx;\n        rdx:rax = rax * rdx;\n        rbx = rax;\n    } while (*(r8) !overflow 0);\nlabel_5:\n    rbx |= 0xffffffffffffffff;\n    goto label_3;\nlabel_16:\n    esi = (int32_t) r12b;\n    *(rsp) = r8;\n    rax = strchr (r13, rsi);\n    r8 = *(rsp);\n    if (rax != 0) {\n        goto label_4;\n    }\nlabel_20:\n    *(r14) = rbx;\n    ebp |= 2;\n    goto label_0;\n    if (rbx < 0) {\n        goto label_5;\n    }\n    rbx += rbx;\n    goto label_3;\n    esi = 1;\n    rax = rbx;\n    rax >>= 0x37;\n    if (rax != 0) {\n        goto label_5;\n    }\n    rbx <<= 9;\n    goto label_3;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 7;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (rbx overflow 0) {\n            goto label_21;\n        }\nlabel_8:\n        edi--;\n    } while (edi != 0);\nlabel_6:\n    ebp |= r9d;\n    goto label_3;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 8;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (ebp overflow 0) {\n            goto label_22;\n        }\nlabel_11:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 4;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_23;\n        }\nlabel_9:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 5;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_24;\n        }\nlabel_12:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 6;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_25;\n        }\nlabel_10:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    rax = rbx;\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rbx = rax;\n    eax = 0;\n    ebp |= eax;\n    goto label_3;\n    rax = rbx;\n    rax >>= 0x36;\n    if (rax != 0) {\n        goto label_5;\n    }\n    rbx <<= 0xa;\n    goto label_3;\n    esi = 1;\n    goto label_3;\nlabel_18:\n    esi = 2;\n    edx = 0x3e8;\n    goto label_7;\nlabel_19:\n    esi = 0;\n    edx = 0x400;\n    sil = (*((r8 + 2)) == 0x42) ? 1 : 0;\n    esi = rsi + rsi + 1;\n    goto label_7;\nlabel_21:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_8;\nlabel_26:\n    eax = 1;\n    rbx |= 0xffffffffffffffff;\n    ebp |= eax;\n    goto label_3;\nlabel_23:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_9;\nlabel_25:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_10;\nlabel_22:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_11;\nlabel_24:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_12;\nlabel_13:\n    return assert_fail (\"0 <= strtol_base && strtol_base <= 36\", \"lib/xstrtol.c\", 0x60, \"xstrtoumax\");\n}\n"
        },
        {
            "funcName": "fcn_00411f80",
            "funcStartAddr": "0x411f80",
            "funcEndAddr": "0x411ffb",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x411f80 */\n#include <stdint.h>\n \nuint64_t fcn_00411f80 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    eax = fileno (rdi);\n    rdi = rbx;\n    if (eax < 0) {\n        goto label_1;\n    }\n    eax = freading ();\n    while (rax != -1) {\n        eax = fcn_00412140 (rbx);\n        if (eax == 0) {\n            goto label_2;\n        }\n        rax = errno_location ();\n        r12d = *(rax);\n        fclose (rbx);\n        if (r12d != 0) {\n            goto label_3;\n        }\nlabel_0:\n        return rax;\n        eax = fileno (rbx);\n        esi = 0;\n        edx = 1;\n        edi = eax;\n        rax = lseek ();\n    }\nlabel_2:\n    rdi = rbx;\nlabel_1:\n    void (*0x402960)() ();\nlabel_3:\n    *(rbp) = r12d;\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00412000",
            "funcStartAddr": "0x412000",
            "funcEndAddr": "0x412135",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x412000 */\n#include <stdint.h>\n \nuint64_t fcn_00412000 (int64_t arg_70h, int64_t arg1, uint32_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_30h;\n    int64_t var_38h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    do {\nlabel_2:\n        rax = rsp + 0x70;\n        *((rsp + 0x30)) = rdx;\n        *((rsp + 0x10)) = rax;\n        rax = rsp + 0x20;\n        *((rsp + 0x38)) = rcx;\n        *((rsp + 8)) = 0x10;\n        *((rsp + 0x18)) = rax;\n        if (esi != 0x406) {\n            goto label_4;\n        }\n        r12d = *((rax + 0x10));\n        eax = imp.__libc_start_main;\n        *((rsp + 8)) = 0x18;\n        edx = r12d;\n        if (eax >= 0) {\n            eax = 0;\n            eax = fcntl ();\n            ebx = eax;\n            if (eax < 0) {\n                goto label_5;\n            }\nlabel_1:\n            *(0x0061cd18) = 1;\nlabel_0:\n            eax = ebx;\n            return rax;\n        }\n        eax = 0;\n        eax = fcn_00412000 (rdi, 0, rdx, rcx, r8);\n    } while (1);\n    ebx = eax;\n    if (eax < 0) {\n        goto label_0;\n    }\n    if (*(0x0061cd18) != 0xffffffff) {\n        goto label_0;\n    }\nlabel_3:\n    eax = 0;\n    esi = 1;\n    edi = ebx;\n    eax = fcntl ();\n    if (eax < 0) {\n        goto label_6;\n    }\n    eax |= 1;\n    esi = 2;\n    edi = ebx;\n    edx = eax;\n    eax = 0;\n    eax = fcntl ();\n    if (eax != 0xffffffff) {\n        goto label_0;\n    }\nlabel_6:\n    rax = errno_location ();\n    ebx = 0xffffffff;\n    r12d = *(rax);\n    close (ebx);\n    *(rbp) = r12d;\n    goto label_0;\nlabel_4:\n    rax = *((rsp + 0x18));\n    rdx = *((rax + 0x10));\n    eax = 0;\n    eax = fcntl ();\n    ebx = eax;\n    return rax;\nlabel_5:\n    rax = errno_location ();\n    if (*(rax) != 0x16) {\n        goto label_1;\n    }\n    eax = 0;\n    eax = fcn_00412000 (ebp, 0, r12d, rcx, r8);\n    goto label_2;\n    ebx = eax;\n    if (eax < 0) {\n        goto label_0;\n    }\n    *(0x0061cd18) = 0xffffffff;\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_00412140",
            "funcStartAddr": "0x412140",
            "funcEndAddr": "0x412180",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x412140 */\n#include <stdint.h>\n \nuint32_t fcn_00412140 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    if (rdi != 0) {\n        eax = freading ();\n        if (eax == 0) {\n            goto label_0;\n        }\n        if ((*(rbx) & 0x100) != 0) {\n            goto label_1;\n        }\n    }\nlabel_0:\n    rdi = rbx;\n    void (*0x402c30)() ();\nlabel_1:\n    fcn_00412180 (rbx, 0, 1);\n    rdi = rbx;\n    return fflush ();\n}\n"
        },
        {
            "funcName": "fcn_00412180",
            "funcStartAddr": "0x412180",
            "funcEndAddr": "0x4121d7",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x412180 */\n#include <stdint.h>\n \nint64_t fcn_00412180 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rax = *((rdi + 8));\n    while (*((rdi + 0x28)) != rax) {\nlabel_0:\n        void (*0x402d60)() ();\n        rax = *((rdi + 0x20));\n    }\n    if (*((rdi + 0x48)) != 0) {\n        goto label_0;\n    }\n    r12d = edx;\n    rbx = rdi;\n    eax = fileno (rdi);\n    edx = r12d;\n    rsi = rbp;\n    edi = eax;\n    rax = lseek ();\n    if (rax != -1) {\n        *(rbx) &= 0xffffffef;\n        *((rbx + 0x90)) = rax;\n        eax = 0;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004121e0",
            "funcStartAddr": "0x4121e0",
            "funcEndAddr": "0x4122bf",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x4121e0 */\n#include <stdint.h>\n \nuint64_t fcn_004121e0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r11 = rdi + 8;\n    r12d = *((rsi + 0x2c));\n    ebp = *(rsi);\n    rbx = *((rsi + 0x30));\n    r9d = r12d;\n    r10d = ebp;\n    r8 = rbx;\nlabel_1:\n    if (r10d <= r8d) {\n        goto label_2;\n    }\nlabel_0:\n    if (r9d >= r8d) {\n        goto label_2;\n    }\n    r14d = r10d;\n    edx = r8d;\n    r14d -= r8d;\n    edx -= r9d;\n    if (r14d <= edx) {\n        goto label_3;\n    }\n    rcx = (int64_t) r9d;\n    r10d -= edx;\n    edx--;\n    rdx += rcx;\n    rax = rdi + rcx*8;\n    r13 = r11 + rdx*8;\n    rdx = (int64_t) r10d;\n    rdx -= rcx;\n    do {\n        rcx = *(rax);\n        r14 = *((rax + rdx*8));\n        *(rax) = r14;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (r13 != rax);\n    if (r10d > r8d) {\n        goto label_0;\n    }\nlabel_2:\n    eax = ebp;\n    *((rsi + 0x30)) = ebp;\n    eax -= r8d;\n    r12d += eax;\n    *((rsi + 0x2c)) = r12d;\n    r12 = rbx;\n    r13 = rbx;\n    r14 = rbx;\n    r15 = rbx;\n    return rax;\nlabel_3:\n    rdx = (int64_t) r9d;\n    ecx = r14 - 1;\n    rcx += rdx;\n    rax = rdi + rdx*8;\n    r13 = r11 + rcx*8;\n    rcx = rbx;\n    rcx -= rdx;\n    rdx = rcx;\n    do {\n        rcx = *(rax);\n        r15 = *((rax + rdx*8));\n        *(rax) = r15;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (rax != r13);\n    r9d += r14d;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_004122c0",
            "funcStartAddr": "0x4122c0",
            "funcEndAddr": "0x4128dc",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x4122c0 */\n#include <stdint.h>\n \nint64_t fcn_004122c0 (int64_t arg_90h, int64_t arg_98h, int64_t arg_a0h, signed int64_t arg1, int64_t arg2, char * arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_ch;\n    int64_t var_10h;\n    void * ptr;\n    int64_t var_20h;\n    int64_t var_28h;\n    char * s;\n    int64_t var_38h;\n    int64_t c;\n    signed int64_t var_40h;\n    int64_t var_44h;\n    void * var_48h;\n    size_t nmeb;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rax = *((rsp + 0x90));\n    *((rsp + 0x40)) = edi;\n    *((rsp + 0x28)) = rsi;\n    r14 = *((rax + 0x20));\n    *((rsp + 0x30)) = rdx;\n    *(rsp) = rcx;\n    eax = *(r14);\n    *((rsp + 0x20)) = r8;\n    *((rsp + 0xc)) = r9d;\n    *((rsp + 0x3f)) = al;\n    if (al == 0x3d) {\n        goto label_11;\n    }\n    if (al == 0) {\n        goto label_11;\n    }\n    do {\n        rbp++;\n        eax = *(rbp);\n        if (al == 0) {\n            goto label_12;\n        }\n    } while (al != 0x3d);\nlabel_12:\n    r13 = rbp;\n    r13 -= r14;\nlabel_6:\n    rbx = *(rsp);\n    r12d = 0;\n    rax = *(rbx);\n    *((rsp + 0x10)) = rax;\n    r15 = rax;\n    if (rax != 0) {\n        goto label_13;\n    }\n    goto label_14;\n    do {\n        r12 = (int64_t) r8d;\nlabel_13:\n        eax = strncmp (r15, r14, r13);\n        if (eax == 0) {\n            rax = strlen (r15);\n            if (rax == r13) {\n                goto label_15;\n            }\n        }\n        rbx += 0x20;\n        r15 = *(rbx);\n        r8d = r12 + 1;\n    } while (r15 != 0);\n    rcx = *(rsp);\n    *((rsp + 0x4c)) = r8d;\n    r9d = 0;\n    ebx = 0;\n    *((rsp + 0x44)) = 0xffffffff;\n    r15 = r9;\n    *((rsp + 0x38)) = 0;\n    *((rsp + 0x48)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x10)) = rbp;\n    do {\n        eax = strncmp (*((rsp + 0x10)), r14, r13);\n        if (eax == 0) {\n            if (rbx == 0) {\n                goto label_16;\n            }\n            eax = *((rsp + 0xc));\n            if (eax == 0) {\n                goto label_17;\n            }\nlabel_0:\n            r11d = *((rsp + 0x38));\n            if (r11d != 0) {\n                goto label_1;\n            }\n            r10d = *((rsp + 0x98));\n            if (r10d == 0) {\n                goto label_18;\n            }\n            if (*((rsp + 0x18)) == 0) {\n                goto label_19;\n            }\nlabel_3:\n            rax = *((rsp + 0x18));\n            *((rax + r15)) = 1;\n        }\nlabel_1:\n        rbp += 0x20;\n        rdi = *(rbp);\n        r15++;\n    } while (rdi != 0);\n    rbp = *((rsp + 0x10));\n    if (*((rsp + 0x18)) != 0) {\n        goto label_20;\n    }\n    r9d = *((rsp + 0x38));\n    if (r9d != 0) {\n        goto label_20;\n    }\n    if (rbx == 0) {\nlabel_14:\n        eax = *((rsp + 0xc));\n        if (eax != 0) {\n            rax = *((rsp + 0x90));\n            rcx = *((rsp + 0x28));\n            rax = *(rax);\n            rax = *((rcx + rax*8));\n            if (*((rax + 1)) == 0x2d) {\n                goto label_21;\n            }\n            esi = *((rsp + 0x3f));\n            rax = strchr (*((rsp + 0x30)), rsi);\n            rdx = rax;\n            eax = 0xffffffff;\n            if (rdx != 0) {\n                goto label_5;\n            }\n        }\nlabel_21:\n        ecx = *((rsp + 0x98));\n        if (ecx != 0) {\n            goto label_22;\n        }\nlabel_4:\n        rax = *((rsp + 0x90));\n        *((rax + 0x20)) = 0;\n        *(rax)++;\n        *((rax + 8)) = 0;\n        eax = 0x3f;\n        return rax;\n    }\n    r12d = *((rsp + 0x44));\nlabel_15:\n    rax = *((rsp + 0x90));\n    rcx = *((rsp + 0x90));\n    edx = *(rax);\n    *((rcx + 0x20)) = 0;\n    eax = rdx + 1;\n    *(rcx) = eax;\n    ecx = *((rbx + 8));\n    if (*(rbp) != 0) {\n        goto label_23;\n    }\n    if (ecx == 1) {\n        goto label_24;\n    }\nlabel_2:\n    rax = *((rsp + 0x20));\n    if (rax != 0) {\n        *(rax) = r12d;\n    }\n    rdx = *((rbx + 0x10));\n    eax = *((rbx + 0x18));\n    if (rdx != 0) {\n        *(rdx) = eax;\n        eax = 0;\n    }\nlabel_5:\n    return rax;\nlabel_17:\n    eax = *((rbp + 8));\n    if (*((rbx + 8)) != eax) {\n        goto label_0;\n    }\n    rax = *((rbp + 0x10));\n    if (*((rbx + 0x10)) != rax) {\n        goto label_0;\n    }\n    eax = *((rbp + 0x18));\n    if (*((rbx + 0x18)) != eax) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_23:\n    if (ecx == 0) {\n        goto label_25;\n    }\n    rax = *((rsp + 0x90));\n    rbp++;\n    *((rax + 0x10)) = rbp;\n    goto label_2;\nlabel_16:\n    *((rsp + 0x44)) = r15d;\n    rbx = rbp;\n    goto label_1;\nlabel_18:\n    *((rsp + 0x38)) = 1;\n    if (*((rsp + 0x18)) == 0) {\n        goto label_1;\n    }\n    goto label_3;\nlabel_22:\n    rax = *((rsp + 0x28));\n    edx = 5;\n    rbx = *(rax);\n    rax = dcgettext (0, \"%s: unrecognized option '%s%s'\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r14;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbx;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_4;\nlabel_20:\n    r8d = *((rsp + 0x98));\n    if (r8d != 0) {\n        edi = *((rsp + 0x38));\n        if (edi == 0) {\n            goto label_26;\n        }\n        rax = *((rsp + 0x28));\n        edx = 5;\n        rbx = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' is ambiguous\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r14;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbx;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        rax = *((rsp + 0x90));\n        r14 = *((rax + 0x20));\n    }\nlabel_9:\n    esi = *((rsp + 0x48));\n    if (esi != 0) {\n        goto label_27;\n    }\nlabel_7:\n    rax = strlen (r14);\n    r14 += rax;\n    rax = *((rsp + 0x90));\n    *((rax + 0x20)) = r14;\n    *(rax)++;\n    *((rax + 8)) = 0;\n    eax = 0x3f;\n    goto label_5;\nlabel_24:\n    if (eax >= *((rsp + 0x40))) {\n        goto label_28;\n    }\n    rcx = *((rsp + 0x90));\n    edx += 2;\n    rax = (int64_t) eax;\n    *(rcx) = edx;\n    rcx = *((rsp + 0x28));\n    rax = *((rcx + rax*8));\n    rcx = *((rsp + 0x90));\n    *((rcx + 0x10)) = rax;\n    goto label_2;\nlabel_11:\n    r13d = 0;\n    goto label_6;\nlabel_25:\n    edx = *((rsp + 0x98));\n    while (1) {\n        eax = *((rbx + 0x18));\n        rcx = *((rsp + 0x90));\n        *((rcx + 8)) = eax;\n        eax = 0x3f;\n        goto label_5;\nlabel_19:\n        rdi = *((rsp + 0x4c));\n        rax = calloc (rdi, 1);\n        *((rsp + 0x18)) = rax;\n        if (rax == 0) {\n            goto label_29;\n        }\n        rax = *((rsp + 0x44));\n        rcx = *((rsp + 0x18));\n        *((rsp + 0x48)) = 1;\n        *((rcx + rax)) = 1;\n        goto label_3;\n        rax = *((rsp + 0x28));\n        r12 = *(rbx);\n        edx = 5;\n        rbp = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' doesn't allow an argument\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r12;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_27:\n    free (*((rsp + 0x18)));\n    goto label_7;\nlabel_28:\n    eax = *((rsp + 0x98));\n    if (eax != 0) {\n        goto label_30;\n    }\nlabel_10:\n    eax = *((rbx + 0x18));\n    rcx = *((rsp + 0x90));\n    *((rcx + 8)) = eax;\n    rax = *((rsp + 0x30));\n    al = (*(rax) != 0x3a) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = rax * 5;\n    goto label_5;\nlabel_26:\n    rdi = stderr;\n    flockfile ();\n    rax = *((rsp + 0x90));\n    edx = 5;\n    rbx = *((rax + 0x20));\n    rax = *((rsp + 0x28));\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' is ambiguous; possibilities:\");\n    rdi = stderr;\n    r9 = rbx;\n    r8 = *((rsp + 0xa0));\n    rcx = rbp;\n    rdx = rax;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    rax = *((rsp + 0x18));\n    rdi = stderr;\n    rbx = *(rsp);\n    r12 = rax + r12 + 1;\n    while (*(rbp) == 0) {\nlabel_8:\n        rbp++;\n        rbx += 0x20;\n        if (r12 == rbp) {\n            goto label_31;\n        }\n    }\n    r8 = *(rbx);\n    edx = \" '%s%s';\n    esi = 1;\n    eax = 0;\n    rcx = *((rsp + 0xa0));\n    fprintf_chk ();\n    rdi = stderr;\n    goto label_8;\nlabel_31:\n    fputc (0xa, rdi);\n    rdi = stderr;\n    funlockfile ();\n    rax = *((rsp + 0x90));\n    r14 = *((rax + 0x20));\n    goto label_9;\nlabel_30:\n    rax = *((rsp + 0x28));\n    r12 = *(rbx);\n    edx = 5;\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' requires an argument\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r12;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbp;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_10;\nlabel_29:\n    *((rsp + 0x38)) = 1;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_004128e0",
            "funcStartAddr": "0x4128e0",
            "funcEndAddr": "0x412ea6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x4128e0 */\n#include <stdint.h>\n \nuint64_t fcn_004128e0 (int64_t arg_70h, int64_t arg_78h, int64_t arg1, int64_t arg2, int64_t arg3, uint32_t arg4, int64_t arg5, int64_t arg6) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_1ch;\n    int64_t var_20h;\n    int64_t var_28h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rbx = *((rsp + 0x70));\n    *((rsp + 8)) = rcx;\n    *((rsp + 0x10)) = r8;\n    r13d = *((rbx + 4));\n    if (edi <= 0) {\n        goto label_16;\n    }\n    eax = *(rbx);\n    r12 = rsi;\n    r15 = rdx;\n    *((rbx + 0x10)) = 0;\n    if (eax == 0) {\n        goto label_17;\n    }\n    esi = *((rbx + 0x18));\n    if (esi == 0) {\nlabel_1:\n        *((rbx + 0x30)) = eax;\n        *((rbx + 0x2c)) = eax;\n        *((rbx + 0x20)) = 0;\n        eax = *(r15);\n        if (al == 0x2d) {\n            goto label_18;\n        }\n        if (al == 0x2b) {\n            goto label_19;\n        }\n        ecx = *((rsp + 0x78));\n        edx = 0;\n        if (ecx == 0) {\n            goto label_20;\n        }\nlabel_8:\n        *((rbx + 0x28)) = 0;\n        goto label_11;\n    }\n    eax = *(rdx);\n    rdx = *((rbx + 0x20));\n    ecx = rax - 0x2b;\n    ecx &= 0xfd;\n    if (ecx != 0) {\n        goto label_21;\n    }\n    eax = *((r15 + 1));\n    r15++;\n    eax = 0;\n    if (al == 0x3a) {\n        r13d = eax;\n    }\n    if (rdx != 0) {\n        goto label_22;\n    }\n    do {\nlabel_0:\n        eax = *(rbx);\n        if (*((rbx + 0x30)) > eax) {\n            *((rbx + 0x30)) = eax;\n        }\n        if (eax < *((rbx + 0x2c))) {\n            *((rbx + 0x2c)) = eax;\n        }\n        if (*((rbx + 0x28)) == 1) {\n            goto label_23;\n        }\nlabel_4:\n        if (ebp == eax) {\n            goto label_24;\n        }\n        rdx = (int64_t) eax;\n        ecx = 3;\n        edi = 0x418149;\n        r14 = *((r12 + rdx*8));\n        rsi = *((r12 + rdx*8));\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (ebp > eax) ? 1 : 0;\n        if (cl != 0) {\n            goto label_25;\n        }\n        edx = *((rbx + 0x2c));\n        ecx = *((rbx + 0x30));\n        eax++;\n        *(rbx) = eax;\n        if (edx == ecx) {\n            goto label_26;\n        }\n        if (eax != ecx) {\n            fcn_004121e0 (r12, rbx);\n            edx = *((rbx + 0x2c));\n        }\nlabel_12:\n        *((rbx + 0x30)) = ebp;\n        *(rbx) = ebp;\n        goto label_27;\nlabel_18:\n        *((rbx + 0x28)) = 2;\n        r15++;\n        edx = 0;\nlabel_11:\n        *((rbx + 0x18)) = 1;\n        eax = *(r15);\nlabel_21:\n        eax = 0;\n        if (al == 0x3a) {\n            r13d = eax;\n        }\n    } while (rdx == 0);\nlabel_22:\n    if (*(rdx) == 0) {\n        goto label_0;\n    }\nlabel_6:\n    r8 = rdx + 1;\n    *((rsp + 0x20)) = rdx;\n    *((rbx + 0x20)) = r8;\n    r14d = *(rdx);\n    *((rsp + 0x28)) = r8;\n    *((rsp + 0x1c)) = r14b;\n    rax = strchr (r15, r14d);\n    rdx = *((rsp + 0x20));\n    ecx = *((rsp + 0x1c));\n    r8 = *((rsp + 0x28));\n    if (*((rdx + 1)) == 0) {\n        *(rbx)++;\n    }\n    ecx -= 0x3a;\n    if (cl <= 1) {\n        goto label_28;\n    }\n    if (rax == 0) {\n        goto label_28;\n    }\n    ecx = *((rax + 1));\n    if (*(rax) == 0x57) {\n        goto label_29;\n    }\nlabel_7:\n    if (cl == 0x3a) {\n        goto label_30;\n    }\n    do {\nlabel_2:\n        eax = r14d;\n        return rax;\nlabel_25:\n        if (*(r14) == 0x2d) {\n            goto label_31;\n        }\nlabel_5:\n        edx = *((rbx + 0x28));\n        if (edx == 0) {\n            goto label_16;\n        }\n        eax++;\n        *((rbx + 0x10)) = r14;\n        r14d = 1;\n        *(rbx) = eax;\n    } while (1);\nlabel_17:\n    *(rbx) = 1;\n    eax = 1;\n    goto label_1;\nlabel_24:\n    ebp = *((rbx + 0x30));\n    edx = *((rbx + 0x2c));\nlabel_27:\n    if (edx != ebp) {\n        *(rbx) = edx;\n    }\nlabel_16:\n    r14d = 0xffffffff;\n    goto label_2;\nlabel_23:\n    edx = *((rbx + 0x30));\n    if (*((rbx + 0x2c)) == edx) {\n        goto label_32;\n    }\n    if (eax != edx) {\n        *((rsp + 0x1c)) = r9d;\n        fcn_004121e0 (r12, rbx);\n        edx = *(rbx);\n        r9d = *((rsp + 0x1c));\n    }\nlabel_9:\n    if (ebp <= edx) {\n        goto label_33;\n    }\n    rax = (int64_t) edx;\n    while (*(rcx) != 0x2d) {\nlabel_3:\n        edx = rsi + 1;\n        rax++;\n        *(rbx) = edx;\n        if (ebp <= eax) {\n            goto label_33;\n        }\n        rcx = *((r12 + rax*8));\n        esi = eax;\n        edx = eax;\n    }\n    if (*((rcx + 1)) == 0) {\n        goto label_3;\n    }\n    eax = *(rbx);\nlabel_10:\n    *((rbx + 0x30)) = edx;\n    goto label_4;\nlabel_31:\n    ecx = *((r14 + 1));\n    if (cl == 0) {\n        goto label_5;\n    }\n    if (*((rsp + 8)) == 0) {\n        goto label_34;\n    }\n    if (cl == 0x2d) {\n        goto label_35;\n    }\n    if (r9d == 0) {\n        goto label_34;\n    }\n    if (*((r14 + 2)) == 0) {\n        esi = (int32_t) cl;\n        *((rsp + 0x1c)) = r9d;\n        rax = strchr (r15, rsi);\n        r9d = *((rsp + 0x1c));\n        if (rax != 0) {\n            goto label_34;\n        }\n    }\n    rdx = r14 + 1;\n    *((rbx + 0x20)) = rdx;\n    eax = fcn_004122c0 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), r9);\n    r14d = eax;\n    if (eax != 0xffffffff) {\n        goto label_2;\n    }\n    rax = *(rbx);\n    r14 = *((r12 + rax*8));\nlabel_34:\n    rdx = r14 + 1;\n    goto label_6;\nlabel_29:\n    if (*((rsp + 8)) == 0) {\n        goto label_7;\n    }\n    if (cl != 0x3b) {\n        goto label_7;\n    }\n    if (*((rdx + 1)) == 0) {\n        rax = *(rbx);\n        if (eax == ebp) {\n            goto label_36;\n        }\n        r8 = *((r12 + rax*8));\n    }\n    *((rbx + 0x20)) = r8;\n    *((rbx + 0x10)) = 0;\nlabel_14:\n    eax = fcn_004122c0 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), 0);\n    r14d = eax;\n    goto label_2;\nlabel_20:\n    *((rsp + 0x1c)) = r9d;\n    rax = getenv (\"POSIXLY_CORRECT\");\n    r9d = *((rsp + 0x1c));\n    if (rax == 0) {\n        goto label_37;\n    }\n    rdx = *((rbx + 0x20));\n    goto label_8;\nlabel_30:\n    edx = *((rdx + 1));\n    if (*((rax + 2)) == 0x3a) {\n        goto label_38;\n    }\n    rax = *(rbx);\n    if (dl != 0) {\n        goto label_39;\n    }\n    if (ebp == eax) {\n        goto label_40;\n    }\n    edx = rax + 1;\n    rax = *((r12 + rax*8));\n    *(rbx) = edx;\n    *((rbx + 0x10)) = rax;\nlabel_13:\n    *((rbx + 0x20)) = 0;\n    goto label_2;\nlabel_32:\n    if (eax == edx) {\n        goto label_9;\n    }\n    *((rbx + 0x2c)) = eax;\n    edx = eax;\n    goto label_9;\nlabel_33:\n    eax = edx;\n    goto label_10;\nlabel_19:\n    *((rbx + 0x28)) = 0;\n    r15++;\n    edx = 0;\n    goto label_11;\nlabel_28:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0x3f;\n        goto label_2;\nlabel_26:\n        *((rbx + 0x2c)) = eax;\n        edx = eax;\n        goto label_12;\nlabel_39:\n        eax++;\n        *((rbx + 0x10)) = r8;\n        *(rbx) = eax;\n        goto label_13;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: invalid option -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_38:\n    if (dl != 0) {\n        *((rbx + 0x10)) = r8;\n        *(rbx)++;\n        goto label_13;\nlabel_37:\n        *((rbx + 0x28)) = 1;\n        rdx = *((rbx + 0x20));\n        goto label_11;\n    }\n    *((rbx + 0x10)) = 0;\n    goto label_13;\nlabel_40:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_13;\nlabel_35:\n        rdx = r14 + 2;\n        *((rbx + 0x20)) = rdx;\n        goto label_14;\nlabel_36:\n        if (r13d != 0) {\n            goto label_41;\n        }\nlabel_15:\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_2;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_41:\n    rbp = *(r12);\n    edx = 5;\n    rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n    rdi = stderr;\n    r8d = r14d;\n    esi = 1;\n    rdx = rax;\n    rcx = rbp;\n    eax = 0;\n    fprintf_chk ();\n    goto label_15;\n}\n"
        },
        {
            "funcName": "fcn_00412eb0",
            "funcStartAddr": "0x412eb0",
            "funcEndAddr": "0x412f06",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x412eb0 */\n#include <stdint.h>\n \nint32_t fcn_00412eb0 (int64_t arg_10h) {\n    eax = *(0x0061c57c);\n    *(0x0061cd20) = eax;\n    eax = *(0x0061c578);\n    *(0x0061cd24) = eax;\n    eax = *((rsp + 0x10));\n    fcn_004128e0 (rdi, rsi, rdx, rcx, r8, r9);\n    edx = imp.__libc_start_main;\n    *(0x0061c57c) = edx;\n    rdx = imp.__libc_start_main;\n    *(0x0061cd60) = rdx;\n    edx = imp.__libc_start_main;\n    *(0x0061c574) = edx;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00412f30",
            "funcStartAddr": "0x412f30",
            "funcEndAddr": "0x412f43",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x412f30 */\n#include <stdint.h>\n \nvoid fcn_00412f30 (void) {\n    r9d = 0;\n    fcn_00412eb0 (rdi);\n}\n"
        },
        {
            "funcName": "fcn_00412fb0",
            "funcStartAddr": "0x412fb0",
            "funcEndAddr": "0x41302a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x412fb0 */\n#include <stdint.h>\n \nuint64_t fcn_00412fb0 (wint_t arg1, int64_t arg2, size_t * arg3, mbstate_t * ps) {\n    int64_t var_ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = ps;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    rbx = 0xfffffffffffffffe;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r12 = rdi;\n    while (1) {\n        rax = mbrtowc (r12, rbp, rdx, rcx);\n        rbx = rax;\n        if (rax > 0xfffffffffffffffd) {\n            goto label_2;\n        }\nlabel_0:\n        rax = rbx;\n        return rax;\nlabel_1:\n        edx = 1;\n        r12 = rsp + 0xc;\n    }\nlabel_2:\n    al = fcn_0040bd10 (0);\n    if (al != 0) {\n        goto label_0;\n    }\n    eax = *(rbp);\n    ebx = 1;\n    *(r12) = eax;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00413030",
            "funcStartAddr": "0x413030",
            "funcEndAddr": "0x413134",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x413030 */\n#include <stdint.h>\n \nint64_t fcn_00413030 (uint32_t arg1, int64_t arg2, uint32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r8d = esi;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    if ((dil & 7) == 0) {\n        goto label_1;\n    }\n    if (sil != *(rdi)) {\n        goto label_2;\n    }\n    goto label_3;\n    do {\n        if ((dil & 7) == 0) {\n            goto label_1;\n        }\n        if (*(rdi) == r8b) {\n            goto label_3;\n        }\nlabel_2:\n        rdi++;\n        rdx--;\n    } while (rdx != 0);\nlabel_0:\n    eax = 0;\n    return eax;\nlabel_1:\n    r9d = esi;\n    eax = (int32_t) sil;\n    r9d <<= 8;\n    r9d = (int32_t) r9w;\n    r9d |= eax;\n    r9 = (int64_t) r9d;\n    rax = r9;\n    rax <<= 0x10;\n    r9 |= rax;\n    rax = r9;\n    rax <<= 0x20;\n    r9 |= rax;\n    if (rdx <= 7) {\n        goto label_4;\n    }\n    r11 = 0xfefefefefefefeff;\n    rax = *(rdi);\n    r10 = 0x8080808080808080;\n    rax ^= r9;\n    rcx = rax + r11;\n    rax = ~rax;\n    rax &= rcx;\n    if ((rax & r10) == 0) {\n        goto label_5;\n    }\n    goto label_4;\n    do {\n        rax = *(rdi);\n        rax ^= r9;\n        rcx = rax + r11;\n        rax = ~rax;\n        rax &= rcx;\n        if ((rax & r10) != 0) {\n            goto label_4;\n        }\nlabel_5:\n        rdx -= 8;\n        rdi += 8;\n    } while (rdx > 7);\n    if (rdx == 0) {\n        goto label_0;\n    }\nlabel_4:\n    if (sil == *(rdi)) {\n        goto label_3;\n    }\n    rcx = rdi + 1;\n    rdi += rdx;\n    while (rcx != rdi) {\n        rcx++;\n        if (*((rcx - 1)) == r8b) {\n            goto label_6;\n        }\n        rax = rcx;\n    }\n    goto label_0;\nlabel_3:\n    rax = rdi;\nlabel_6:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00413140",
            "funcStartAddr": "0x413140",
            "funcEndAddr": "0x4131e2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x413140 */\n#include <stdint.h>\n \nint64_t fcn_00413140 (int64_t arg1, int64_t arg2) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rax = *((rdi + 8));\n    if (rax > 0x3b9ac9ff) {\n        goto label_0;\n    }\n    rbx = *(rdi);\n    *((rsp + 8)) = rax;\n    r12 = rsp;\n    if (rbx > 0x1fa400) {\n        goto label_1;\n    }\n    goto label_2;\n    do {\n        *((rsp + 8)) = 0;\n        if (rbx <= 0x1fa400) {\n            goto label_2;\n        }\nlabel_1:\n        *(rsp) = 0x1fa400;\n        rbx -= 0x1fa400;\n        eax = nanosleep (r12, rbp);\n    } while (eax == 0);\n    if (rbp == 0) {\n        goto label_3;\n    }\n    *(rbp) += rbx;\n    return rax;\nlabel_2:\n    *(rsp) = rbx;\n    nanosleep (r12, rbp);\n    do {\nlabel_3:\n        return rax;\nlabel_0:\n        errno_location ();\n        *(rax) = 0x16;\n        eax = 0xffffffff;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00413230",
            "funcStartAddr": "0x413230",
            "funcEndAddr": "0x413245",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x413230 */\n#include <stdint.h>\n \nint64_t fcn_00413230 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rax = *((rdi + 0x38));\n    if ((*((rdi + 0x50)) & 1) != 0) {\n        rdi = *((rdi + 0x48));\n        rax = void (*rax)() ();\n    }\n    rdi = rsi;\n    return void (*rax)() ();\n}\n"
        },
        {
            "funcName": "fcn_00413250",
            "funcStartAddr": "0x413250",
            "funcEndAddr": "0x413265",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x413250 */\n#include <stdint.h>\n \nint64_t fcn_00413250 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rax = *((rdi + 0x40));\n    if ((*((rdi + 0x50)) & 1) != 0) {\n        rdi = *((rdi + 0x48));\n        rax = void (*rax)() ();\n    }\n    rdi = rsi;\n    return void (*rax)() ();\n}\n"
        },
        {
            "funcName": "obstack_begin",
            "funcStartAddr": "0x413300",
            "funcEndAddr": "0x4133a1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x413300 */\n#include <stdint.h>\n \nuint64_t obstack_begin (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\nlabel_0:\n    rbx = rdi;\n    if (rdx == 0) {\n        goto label_1;\n    }\n    r12 = rdx - 1;\n    do {\n        eax = 0xfe0;\n        *((rbx + 0x30)) = r12;\n        rdi = rbx;\n        if (rsi == 0) {\n            rsi = rax;\n        }\n        *(rbx) = rsi;\n        rax = fcn_00413230 (rdi, rsi);\n        *((rbx + 8)) = rax;\n        if (rax == 0) {\n            goto label_2;\n        }\n        rdx = rax + r12 + 0x10;\n        rbp = -rbp;\n        rbp &= rdx;\n        rdx = *(rbx);\n        *((rbx + 0x10)) = rbp;\n        rdx += rax;\n        *((rbx + 0x18)) = rbp;\n        *(rax) = rdx;\n        *((rbx + 0x20)) = rdx;\n        *((rax + 8)) = 0;\n        eax = 1;\n        *((rbx + 0x50)) &= 0xf9;\n        return rax;\nlabel_1:\n        r12d = 0xf;\n    } while (1);\nlabel_2:\n    rax = uint64_t (*obstack_alloc_failed_handler)() ();\n    *((rdi + 0x50)) &= 0xfe;\n    *((rdi + 0x38)) = rcx;\n    *((rdi + 0x40)) = r8;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "obstack_begin_1",
            "funcStartAddr": "0x413320",
            "funcEndAddr": "0x413335",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x413320 */\n#include <stdint.h>\n \nvoid obstack_begin_1 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    *((rdi + 0x50)) |= 1;\n    *((rdi + 0x38)) = rcx;\n    *((rdi + 0x40)) = r8;\n    *((rdi + 0x48)) = r9;\n    return void (*0x413270)() ();\n}\n"
        },
        {
            "funcName": "obstack_newchunk",
            "funcStartAddr": "0x413340",
            "funcEndAddr": "0x413440",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x413340 */\n#include <stdint.h>\n \nuint64_t obstack_newchunk (int64_t arg_8h, int64_t arg_10h, uint32_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    eax = 0;\n    r13 = *((rdi + 0x18));\n    r13 -= *((rdi + 0x10));\n    rbp = *((rdi + 8));\n    rsi += r13;\n    rdx = r13;\n    al = (rsi < 0) ? 1 : 0;\n    rsi += *((rdi + 0x30));\n    cl = (rsi < 0) ? 1 : 0;\n    rdx >>= 3;\n    rbx = rsi + rdx + 0x64;\n    if (*(rdi) >= rsi) {\n        rsi = *(rdi);\n    }\n    if (rsi >= rbx) {\n        rbx = rsi;\n    }\n    if (rax != 0) {\n        goto label_0;\n    }\n    ecx = (int32_t) cl;\n    if (rcx != 0) {\n        goto label_0;\n    }\n    r12 = rdi;\n    rax = fcn_00413230 (rdi, rbx);\n    r14 = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    rsi = rax + rbx;\n    *((r12 + 8)) = rax;\n    *((rax + 8)) = rbp;\n    *((r12 + 0x20)) = rsi;\n    *(rax) = rsi;\n    rax = *((r12 + 0x30));\n    rbx = r14 + rax + 0x10;\n    rax = ~rax;\n    rbx &= rax;\n    memcpy (rbx, *((r12 + 0x10)), r13);\n    if ((*((r12 + 0x50)) & 2) != 0) {\n        goto label_1;\n    }\n    rax = *((r12 + 0x30));\n    rdx = rbp + rax + 0x10;\n    rax = ~rax;\n    rax &= rdx;\n    while (1) {\nlabel_1:\n        r13 += rbx;\n        *((r12 + 0x10)) = rbx;\n        *((r12 + 0x18)) = r13;\n        *((r12 + 0x50)) &= 0xfd;\n        return rax;\n        rax = *((rbp + 8));\n        *((r14 + 8)) = rax;\n        fcn_00413250 (r12, rbp);\n    }\nlabel_0:\n    uint64_t (*obstack_alloc_failed_handler)() ();\n}\n"
        },
        {
            "funcName": "obstack_allocated_p",
            "funcStartAddr": "0x413440",
            "funcEndAddr": "0x413477",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x413440 */\n#include <stdint.h>\n \nint64_t obstack_allocated_p (int64_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rax = *((rdi + 8));\n    if (rax == 0) {\n        goto label_0;\n    }\n    do {\n        if (rsi > rax) {\n            if (*(rax) >= rsi) {\n                goto label_1;\n            }\n        }\n        rax = *((rax + 8));\n    } while (rax != 0);\n    eax = 0;\n    return rax;\nlabel_1:\n    eax = 1;\n    return rax;\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "obstack_free",
            "funcStartAddr": "0x413480",
            "funcEndAddr": "0x423a29",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x413480 */\n#include <stdint.h>\n \nint64_t obstack_free (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\nlabel_0:\n    abort ();\n    rsi = *((rdi + 8));\n    rbx = rdi;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    do {\n        if (rsi < rbp) {\n            rax = *(rsi);\n            if (rax >= rbp) {\n                goto label_2;\n            }\n        }\n        r12 = *((rsi + 8));\n        rax = fcn_00413250 (rbx, rsi);\n        *((rbx + 0x50)) |= 2;\n        rsi = r12;\n    } while (r12 != 0);\nlabel_1:\n    if (rbp != 0) {\n        goto label_0;\n    }\n    return rax;\nlabel_2:\n    *((rbx + 0x18)) = rbp;\n    *((rbx + 0x10)) = rbp;\n    *((rbx + 0x20)) = rax;\n    *((rbx + 8)) = rsi;\n    return rax;\n}\n"
        },
        {
            "funcName": "obstack_memory_used",
            "funcStartAddr": "0x4134f0",
            "funcEndAddr": "0x413519",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x4134f0 */\n#include <stdint.h>\n \nint64_t obstack_memory_used (int64_t arg1) {\n    rdi = arg1;\n    rdx = *((rdi + 8));\n    eax = 0;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    do {\n        rcx = *(rdx);\n        rcx -= rdx;\n        rdx = *((rdx + 8));\n        rax += rcx;\n    } while (rdx != 0);\n    return rax;\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00413520",
            "funcStartAddr": "0x413520",
            "funcEndAddr": "0x41357d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x413520 */\n#include <stdint.h>\n \nuint64_t fcn_00413520 (int64_t arg1) {\n    rdi = arg1;\n    rax = fpending ();\n    ebx = *(rbp);\n    r12 = rax;\n    ebx &= 0x20;\n    eax = fcn_00411f80 (rbp);\n    if (ebx != 0) {\n        goto label_1;\n    }\n    if (eax == 0) {\n        goto label_0;\n    }\n    if (r12 != 0) {\n        goto label_2;\n    }\n    rax = errno_location ();\n    al = (*(rax) != 9) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = -eax;\n    do {\nlabel_0:\n        return rax;\nlabel_1:\n        if (eax != 0) {\n            goto label_2;\n        }\n        errno_location ();\n        *(rax) = 0;\n        eax = 0xffffffff;\n    } while (1);\nlabel_2:\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00413580",
            "funcStartAddr": "0x413580",
            "funcEndAddr": "0x41363c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x413580 */\n#include <stdint.h>\n \nint64_t fcn_00413580 (int64_t arg3) {\n    rdx = arg3;\n    __asm (\"comisd xmm0, xmmword [0x00418640]\");\n    if (? > ?) {\n        xmm1 = *(0x00416a48);\n        __asm (\"comisd xmm1, xmm0\");\n        if (? <= ?) {\n            rax = 0x7fffffffffffffff;\n            edx = 0x3b9ac9ff;\n            return rax;\n        }\n        __asm (\"cvttsd2si rsi, xmm0\");\n        xmm1 = 0;\n        ecx = 0;\n        __asm (\"cvtsi2sd xmm1, rsi\");\n        __asm (\"subsd xmm0, xmm1\");\n        __asm (\"mulsd xmm0, qword [0x00418648]\");\n        xmm1 = 0;\n        __asm (\"cvttsd2si rdx, xmm0\");\n        __asm (\"cvtsi2sd xmm1, rdx\");\n        __asm (\"comisd xmm0, xmm1\");\n        cl = (? > ?) ? 1 : 0;\n        rcx += rdx;\n        rdx = 0x112e0be826d694b3;\n        rax = rcx;\n        rdx:rax = rax * rdx;\n        rax = rcx;\n        rax >>= 0x3f;\n        rdx >>= 0x1a;\n        rdx -= rax;\n        rax = rdx + rsi;\n        rdx *= 0x3b9aca00;\n        rcx -= rdx;\n        rdx = rcx;\n        if (rcx < 0) {\n            goto label_0;\n        }\n        return rax;\n    }\n    rax = 0x8000000000000000;\n    edx = 0;\n    return rax;\nlabel_0:\n    rax--;\n    rdx += 0x3b9aca00;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00413690",
            "funcStartAddr": "0x413690",
            "funcEndAddr": "0x4136aa",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x413690 */\n#include <stdint.h>\n \nint32_t fcn_00413690 (int64_t arg1, int64_t arg2, int64_t arg4) {\n    rdi = arg1;\n    rsi = arg2;\n    rcx = arg4;\n    esi &= 0x80000;\n    eax = 0x406;\n    edx = 3;\n    if (esi != 0) {\n        esi = eax;\n    }\n    eax = 0;\n    return void (*0x412000)() ();\n}\n"
        },
        {
            "funcName": "fcn_004136b0",
            "funcStartAddr": "0x4136b0",
            "funcEndAddr": "0x413743",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x4136b0 */\n#include <stdint.h>\n \nuint64_t fcn_004136b0 (int64_t arg2, const char * filename) {\n    rsi = arg2;\n    rdi = filename;\n    rax = fopen (rdi, rsi);\n    rbx = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    eax = fileno (rax);\n    while (rax != 0) {\nlabel_0:\n        rax = rbx;\n        return rax;\n        eax = fcn_00413ea0 (eax, rsi);\n        r12d = eax;\n        if (eax < 0) {\n            goto label_1;\n        }\n        eax = fcn_00411f80 (rbx);\n        if (eax != 0) {\n            goto label_2;\n        }\n        rsi = rbp;\n        edi = r12d;\n        rax = fdopen ();\n        rbx = rax;\n    }\nlabel_2:\n    rax = errno_location ();\n    ebp = *(rax);\n    rbx = rax;\n    close (r12d);\n    *(rbx) = ebp;\n    ebx = 0;\n    goto label_0;\nlabel_1:\n    rax = errno_location ();\n    ebx = 0;\n    r12d = *(rax);\n    fcn_00411f80 (rbx);\n    *(rbp) = r12d;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00413750",
            "funcStartAddr": "0x413750",
            "funcEndAddr": "0x413cb2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x413750 */\n#include <stdint.h>\n \nuint64_t fcn_00413750 (void) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_60h;\n    rax = nl_langinfo (0xe);\n    r15 = imp.__libc_start_main;\n    rbx = rax;\n    eax = 0x416571;\n    if (rax == 0) {\n        rbx = rax;\n    }\n    if (r15 == 0) {\n        goto label_15;\n    }\nlabel_1:\n    ebp = *(r15);\n    if (bpl != 0) {\n        goto label_16;\n    }\n    goto label_17;\n    do {\nlabel_0:\n        strlen (r15);\n        rbp = r15 + rax + 1;\n        strlen (rbp);\n        r15 = rbp + rax + 1;\n        ebp = *(r15);\n        if (bpl == 0) {\n            goto label_17;\n        }\nlabel_16:\n        eax = strcmp (rbx, r15);\n        if (eax == 0) {\n            goto label_18;\n        }\n    } while (bpl != 0x2a);\n    if (*((r15 + 1)) != 0) {\n        goto label_0;\n    }\nlabel_18:\n    strlen (r15);\n    rbx = r15 + rax + 1;\nlabel_17:\n    eax = 0x418650;\n    if (*(rbx) == 0) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\nlabel_15:\n    rax = getenv (\"CHARSETALIASDIR\");\n    r13 = rax;\n    if (rax == 0) {\n        goto label_19;\n    }\n    if (*(rax) == 0) {\n        goto label_19;\n    }\n    rax = strlen (rax);\n    r12 = rax;\n    r14 = rax;\n    if (rax != 0) {\n        goto label_20;\n    }\nlabel_13:\n    rax = malloc (0xe);\n    if (rax != 0) {\n        goto label_21;\n    }\n    do {\n        r15d = 0x416571;\nlabel_2:\n        *(0x0061cd58) = r15;\n        goto label_1;\nlabel_19:\n        r12d = 0x65;\n        r14d = 0x64;\n        r13d = \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\";\nlabel_14:\n        rax = malloc (0x73);\n    } while (rax == 0);\n    memcpy (rbp, r13, r14);\n    *((rbp + r14)) = 0x2f;\n    do {\n        r12 += rbp;\n        rax = 0x2e74657372616863;\n        *(r12) = rax;\n        eax = 0x73;\n        *((r12 + 0xc)) = ax;\n        eax = 0;\n        *((r12 + 8)) = 0x61696c61;\n        eax = open (rbp, 0, rdx);\n        r12d = eax;\n        if (eax >= 0) {\n            goto label_22;\n        }\nlabel_6:\n        r15d = 0x416571;\nlabel_7:\n        free (rbp);\n        goto label_2;\nlabel_21:\n        eax = memcpy (rbp, r13, r14);\n    } while (1);\nlabel_22:\n    esi = 0x4168fa;\n    edi = eax;\n    r15d = 0;\n    rax = fdopen ();\n    *((rsp + 8)) = 0;\n    r13 = rax;\n    if (rax == 0) {\n        goto label_23;\n    }\n    rax = rbx;\n    r12 = rsp + 0x60;\n    r14 = rsp + 0x20;\n    rbx = r13;\n    r13 = rax;\n    do {\nlabel_3:\n        rax = *((rbx + 8));\n        if (rax >= *((rbx + 0x10))) {\n            goto label_24;\n        }\nlabel_4:\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        edi = *(rax);\nlabel_5:\n        eax = rdi - 9;\n    } while (eax <= 1);\n    if (edi == 0x20) {\n        goto label_3;\n    }\n    if (edi == 0x23) {\n        goto label_25;\n    }\n    eax = ungetc (rdi, rbx);\n    eax = 0;\n    rcx = r12;\n    rdx = r14;\n    eax = fscanf (rbx, \"%50s %50s\");\n    if (eax <= 1) {\n        goto label_12;\n    }\n    rcx = r14;\n    do {\n        edx = *(rcx);\n        rcx += 4;\n        eax = rdx - 0x1010101;\n        edx = ~edx;\n        eax &= edx;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    edx = eax;\n    edx >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = edx;\n    }\n    rdx = rcx + 2;\n    if ((eax & 0x8080) == 0) {\n        rcx = rdx;\n    }\n    edx = eax;\n    dl += al;\n    rdx = r12;\n    rcx -= 3;\n    rcx -= r14;\n    do {\n        esi = *(rdx);\n        rdx += 4;\n        eax = rsi - 0x1010101;\n        esi = ~esi;\n        eax &= esi;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    esi = eax;\n    *((rsp + 0x10)) = rcx;\n    esi >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = esi;\n    }\n    rsi = rdx + 2;\n    if ((eax & 0x8080) == 0) {\n        rdx = rsi;\n    }\n    esi = eax;\n    sil += al;\n    rdx -= 3;\n    rdx -= r12;\n    rax = rcx + rdx;\n    *((rsp + 0x18)) = rdx;\n    if (*((rsp + 8)) != 0) {\n        goto label_26;\n    }\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    rax = malloc (rax + 3);\n    rcx = *((rsp + 0x10));\n    rdx = *((rsp + 0x18));\nlabel_9:\n    if (rax == 0) {\n        goto label_27;\n    }\n    rdi = *((rsp + 8));\n    rsi = 0xfffffffffffffffe;\n    rsi -= rcx;\n    rcx++;\n    rdi -= rdx;\n    rsi += rdi;\n    rsi += rax;\n    if (ecx >= 8) {\n        goto label_28;\n    }\n    if ((cl & 4) != 0) {\n        goto label_29;\n    }\n    if (ecx != 0) {\n        r9d = *(r14);\n        *(rsi) = r9b;\n        if ((cl & 2) != 0) {\n            goto label_30;\n        }\n    }\nlabel_10:\n    rdx++;\n    rcx = rax + rdi - 1;\n    if (edx >= 8) {\n        goto label_31;\n    }\n    if ((dl & 4) != 0) {\n        goto label_32;\n    }\n    if (edx != 0) {\n        esi = *(r12);\n        *(rcx) = sil;\n        if ((dl & 2) != 0) {\n            goto label_33;\n        }\n    }\nlabel_11:\n    r15 = rax;\n    rax = *((rbx + 8));\n    if (rax < *((rbx + 0x10))) {\n        goto label_4;\n    }\nlabel_24:\n    rdi = rbx;\n    eax = uflow ();\n    edi = eax;\n    if (eax != 0xffffffff) {\n        goto label_5;\n    }\nlabel_12:\n    rax = r13;\n    r13 = rbx;\n    rbx = rax;\n    fcn_00411f80 (rbx);\n    rax = *((rsp + 8));\n    if (rax == 0) {\n        goto label_6;\n    }\n    *((r15 + rax)) = 0;\n    goto label_7;\n    do {\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        eax = *(rax);\n        edx = 1;\nlabel_8:\n        if (eax == 0xa) {\n            goto label_34;\n        }\n        if (dl == 0) {\n            goto label_34;\n        }\nlabel_25:\n        rax = *((rbx + 8));\n    } while (rax < *((rbx + 0x10)));\n    rdi = rbx;\n    eax = uflow ();\n    dl = (eax != 0xffffffff) ? 1 : 0;\n    goto label_8;\nlabel_26:\n    rax += *((rsp + 8));\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    eax = realloc (r15, rax + 3);\n    rdx = *((rsp + 0x18));\n    rcx = *((rsp + 0x10));\n    goto label_9;\nlabel_28:\n    r9 = *(r14);\n    *(rsi) = r9;\n    r9d = ecx;\n    r10 = *((r14 + r9 - 8));\n    *((rsi + r9 - 8)) = r10;\n    r9 = rsi + 8;\n    r10 = r14;\n    r9 &= 0xfffffffffffffff8;\n    rsi -= r9;\n    ecx += esi;\n    r10 -= rsi;\n    ecx &= 0xfffffff8;\n    if (ecx < 8) {\n        goto label_10;\n    }\n    ecx &= 0xfffffff8;\n    esi = 0;\n    do {\n        r8d = esi;\n        esi += 8;\n        r11 = *((r10 + r8));\n        *((r9 + r8)) = r11;\n    } while (esi < ecx);\n    goto label_10;\nlabel_31:\n    rsi = *(r12);\n    r9 = r12;\n    *(rcx) = rsi;\n    esi = edx;\n    rdi = *((r12 + rsi - 8));\n    *((rcx + rsi - 8)) = rdi;\n    rdi = rcx + 8;\n    rdi &= 0xfffffffffffffff8;\n    rcx -= rdi;\n    edx += ecx;\n    r9 -= rcx;\n    edx &= 0xfffffff8;\n    if (edx < 8) {\n        goto label_11;\n    }\n    edx &= 0xfffffff8;\n    ecx = 0;\n    do {\n        esi = ecx;\n        ecx += 8;\n        r8 = *((r9 + rsi));\n        *((rdi + rsi)) = r8;\n    } while (ecx < edx);\n    goto label_11;\nlabel_34:\n    if (eax == 0xffffffff) {\n        goto label_12;\n    }\n    goto label_3;\nlabel_20:\n    if (*((r13 + rax - 1)) == 0x2f) {\n        rdi = rax + 0xe;\n        goto label_13;\nlabel_23:\n        close (r12d);\n        goto label_6;\nlabel_29:\n        r9d = *(r14);\n        *(rsi) = r9d;\n        r9d = *((r14 + rcx - 4));\n        *((rsi + rcx - 4)) = r9d;\n        goto label_10;\nlabel_32:\n        esi = *(r12);\n        *(rcx) = esi;\n        esi = *((r12 + rdx - 4));\n        *((rcx + rdx - 4)) = esi;\n        goto label_11;\nlabel_27:\n        rax = r13;\n        r13 = rbx;\n        r15d = 0x416571;\n        rbx = rax;\n        free (r15);\n        fcn_00411f80 (r13);\n        goto label_7;\nlabel_30:\n        r9d = *((r14 + rcx - 2));\n        *((rsi + rcx - 2)) = r9w;\n        goto label_10;\nlabel_33:\n        esi = edx;\n        edx = *((r12 + rsi - 2));\n        *((rcx + rsi - 2)) = dx;\n        goto label_11;\n    }\n    rdi = rax + 0xf;\n    r12++;\n    goto label_14;\n}\n"
        },
        {
            "funcName": "fcn_00413cc0",
            "funcStartAddr": "0x413cc0",
            "funcEndAddr": "0x413d74",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x413cc0 */\n#include <stdint.h>\n \nuint64_t fcn_00413cc0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r14 = rsi;\n    r13 = rcx;\n    r12 = rdi;\n    rax = errno_location ();\n    r15 = rax;\n    while (eax == 0) {\n        strlen (r12);\n        rbx = rax + 1;\n        rax = strlen (rbp);\n        r12 += rbx;\n        rax++;\n        rbp += rax;\n        r13 -= rax;\n        r14 -= rbx;\n        if (r14 == 0) {\n            goto label_0;\n        }\n        if (r13 == 0) {\n            goto label_1;\n        }\n        *(r15) = 0;\n        eax = strcoll (r12, rbp);\n    }\n    return rax;\nlabel_0:\n    eax = 0;\n    al = (r13 != 0) ? 1 : 0;\n    eax = -eax;\n    return rax;\nlabel_1:\n    eax = 1;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00413d80",
            "funcStartAddr": "0x413d80",
            "funcEndAddr": "0x413e21",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x413d80 */\n#include <stdint.h>\n \nuint64_t fcn_00413d80 (int64_t arg1, int64_t arg3, int64_t arg4, size_t n) {\n    int64_t var_8h;\n    int64_t var_fh;\n    rdi = arg1;\n    rdx = arg3;\n    rcx = arg4;\n    rsi = n;\n    r13 = rdx;\n    r12 = rdi;\n    rbx = rsi;\n    if (rsi == rcx) {\n        eax = memcmp (rdi, r13, rsi);\n        *((rsp + 8)) = eax;\n        if (eax == 0) {\n            goto label_0;\n        }\n    }\n    r15 = r12 + rbx;\n    r14 = r13 + rbp;\n    r9d = *(r15);\n    r8d = *(r14);\n    *(r15) = 0;\n    *(r14) = 0;\n    *((rsp + 0xf)) = r9b;\n    *((rsp + 8)) = r8b;\n    eax = fcn_00413cc0 (r12, rbx + 1, r13, rbp + 1);\n    r9d = *((rsp + 0xf));\n    r8d = *((rsp + 8));\n    edx = eax;\n    *(r15) = r9b;\n    *(r14) = r8b;\n    do {\n        eax = edx;\n        return eax;\nlabel_0:\n        errno_location ();\n        edx = *((rsp + 8));\n        *(rax) = 0;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00413e30",
            "funcStartAddr": "0x413e30",
            "funcEndAddr": "0x413e93",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x413e30 */\n#include <stdint.h>\n \nuint64_t fcn_00413e30 (int64_t arg1, int64_t arg3, int64_t arg4, size_t n) {\n    rdi = arg1;\n    rdx = arg3;\n    rcx = arg4;\n    rsi = n;\n    r13 = rdx;\n    r12 = rdi;\n    rbx = rsi;\n    if (rsi == rcx) {\n        eax = memcmp (rdi, r13, rsi);\n        if (eax != 0) {\n            goto label_0;\n        }\n        errno_location ();\n        *(rax) = 0;\n        eax = 0;\n        return rax;\n    }\nlabel_0:\n    rcx = rbp;\n    rdx = r13;\n    rsi = rbx;\n    rdi = r12;\n    return void (*0x413cc0)() ();\n}\n"
        },
        {
            "funcName": "fcn_00413ea0",
            "funcStartAddr": "0x413ea0",
            "funcEndAddr": "0x413eae",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x413ea0 */\n#include <stdint.h>\n \nint32_t fcn_00413ea0 (int64_t arg1, int64_t arg4) {\n    rdi = arg1;\n    rcx = arg4;\n    edx = 3;\n    esi = 0;\n    eax = 0;\n    return void (*0x412000)() ();\n}\n"
        },
        {
            "funcName": "fcn_00413f20",
            "funcStartAddr": "0x413f20",
            "funcEndAddr": "0x413f38",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x413f20 */\n#include <stdint.h>\n \nint64_t fcn_00413f20 (void) {\n    rax = 0x61c3e8;\n    edx = 0;\n    if (rax != 0) {\n        rdx = *(rax);\n    }\n    esi = 0;\n    return cxa_atexit ();\n}\n"
        },
        {
            "funcName": "fcn_00413f38",
            "funcStartAddr": "0x413f38",
            "funcEndAddr": "0x413f58",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sort.elf @ 0x413f38 */\n#include <stdint.h>\n \nvoid fcn_00413f38 (int64_t arg3) {\n    rdx = arg3;\n    ebx = segment.GNU_RELRO;\n    do {\n        rax = *(rbx);\n        if (rax == -1) {\n            goto label_0;\n        }\n        void (*rax)() ();\n        rbx -= 8;\n    } while (1);\nlabel_0:\n}\n"
        }
    ],
    "funcCount": 150
}