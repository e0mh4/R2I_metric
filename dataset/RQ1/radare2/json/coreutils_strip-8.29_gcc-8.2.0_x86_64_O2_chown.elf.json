{
    "binaryInfo": {
        "isStripped": true,
        "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf"
    },
    "buildInfo": {
        "decompilerName": "radare2",
        "compilerName": "gcc",
        "compilerVersion": "9.4.0",
        "optLevel": "O"
    },
    "funcInfo": [
        {
            "funcName": "main",
            "funcStartAddr": "0x402180",
            "funcEndAddr": "0x402690",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x402180 */\n#include <stdint.h>\n \nint32_t main (int32_t argc, char ** argv) {\n    char * var_sp_8h;\n    char ** var_10h;\n    int64_t var_14h;\n    int64_t var_18h;\n    int64_t var_1ch;\n    int64_t var_20h;\n    uint32_t var_24h;\n    int64_t var_28h;\n    int64_t var_30h;\n    int64_t var_31h;\n    uint32_t var_38h;\n    uint32_t var_40h;\n    int64_t var_50h;\n    int64_t var_6ch;\n    int64_t var_70h;\n    rdi = argc;\n    rsi = argv;\n    r15d = 1;\n    r14d = 0;\n    r13d = 0xffffffff;\n    r12 = (int64_t) edi;\n    ebx = 0x10;\n    *((rsp + 0x10)) = 0xffffffff;\n    *((rsp + 0x14)) = 0xffffffff;\n    *((rsp + 0x18)) = 0xffffffff;\n    *((rsp + 0x1c)) = 0xffffffff;\n    fcn_00403cb0 (*(rsi));\n    setlocale (6, 0x40ef77);\n    bindtextdomain (0x40c704, \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\");\n    textdomain (0x40c704, rsi);\n    edi = 0x403bc0;\n    fcn_0040c620 ();\n    fcn_00402c50 (rsp + 0x20);\n    do {\nlabel_0:\n        r8d = 0;\n        ecx = 0x40d320;\n        edx = \"HLPRcfhv\";\n        rsi = rbp;\n        edi = r12d;\n        eax = fcn_00409c90 ();\n        if (eax == 0xffffffff) {\n            goto label_6;\n        }\n        if (eax == 0x66) {\n            goto label_7;\n        }\n        if (eax <= 0x66) {\n            goto label_8;\n        }\n        if (eax == 0x81) {\n            goto label_9;\n        }\n        if (eax > 0x81) {\n            goto label_10;\n        }\n        if (eax == 0x76) {\n            goto label_11;\n        }\n        if (eax != 0x80) {\n            goto label_12;\n        }\n        r13d = 1;\n    } while (1);\nlabel_8:\n    if (eax == 0x4c) {\n        goto label_13;\n    }\n    if (eax <= 0x4c) {\n        goto label_14;\n    }\n    if (eax == 0x52) {\n        goto label_15;\n    }\n    if (eax != 0x63) {\n        goto label_16;\n    }\n    *((rsp + 0x20)) = r15d;\n    goto label_0;\nlabel_12:\n    if (eax == 0x68) {\n        goto label_17;\n    }\n    do {\nlabel_1:\n        eax = fcn_00402770 (1);\nlabel_10:\n        if (eax == 0x83) {\n            goto label_18;\n        }\n        if (eax >= 0x83) {\n            goto label_19;\n        }\n        r14d = 0;\n        goto label_0;\nlabel_16:\n    } while (eax != 0x50);\n    ebx = 0x10;\n    goto label_0;\nlabel_14:\n    if (eax == 0xffffff7e) {\n        goto label_20;\n    }\n    if (eax != 0x48) {\n        goto label_21;\n    }\n    ebx = 0x11;\n    goto label_0;\nlabel_19:\n    if (eax != 0x84) {\n        goto label_1;\n    }\n    rax = imp.__libc_start_main;\n    *(0x00612390) = rax;\n    goto label_0;\nlabel_21:\n    if (eax != 0xffffff7d) {\n        goto label_1;\n    }\n    eax = 0;\n    rcx = *(str.8.29);\n    r9d = \"Jim Meyering\";\n    r8d = \"David MacKenzie\";\n    fcn_00406180 (*(obj.stdout), \"chown\", \"GNU coreutils\");\n    exit (0);\nlabel_17:\n    r13d = 0;\n    goto label_0;\nlabel_18:\n    r14d = 1;\n    goto label_0;\nlabel_13:\n    ebx = 2;\n    goto label_0;\nlabel_9:\n    rax = fcn_00405c50 (*(0x00612550), rsp + 0x18, rsp + 0x1c, 0, 0);\n    if (rax == 0) {\n        goto label_0;\n    }\n    *((rsp + 8)) = rax;\n    rax = fcn_004058d0 (*(0x00612550));\n    rcx = *((rsp + 8));\n    r8 = rax;\n    eax = 0;\n    error (1, 0, \"%s: %s\");\nlabel_15:\n    *((rsp + 0x24)) = 1;\n    goto label_0;\nlabel_7:\n    *((rsp + 0x31)) = 1;\n    goto label_0;\nlabel_11:\n    *((rsp + 0x20)) = 0;\n    goto label_0;\nlabel_6:\n    if (*((rsp + 0x24)) != 0) {\n        goto label_22;\n    }\n    ebx = 0x10;\n    do {\nlabel_2:\n        rax = *(0x0061233c);\n        r13 = imp.__libc_start_main;\n        edx = r12d;\n        rsp + 0x30 = (r13d != 0) ? 1 : 0;\n        edx -= eax;\n        if (r13 == 0) {\n            goto label_23;\n        }\n        if (edx <= 0) {\n            goto label_24;\n        }\n        rdx = rsp + 0x50;\n        rsi = r13;\n        edi = 1;\n        eax = xstat ();\n        if (eax != 0) {\n            goto label_25;\n        }\n        r12d = *((rsp + 0x70));\n        *((rsp + 0x10)) = edi;\n        *((rsp + 0x14)) = r12d;\n        rax = fcn_00402cd0 (*((rsp + 0x6c)));\n        *((rsp + 0x38)) = rax;\n        rax = fcn_00402c90 (r12d);\n        *((rsp + 0x40)) = rax;\nlabel_3:\n        if (*((rsp + 0x24)) != 0) {\n            if (r14b != 0) {\n                goto label_26;\n            }\n        }\nlabel_4:\n        rax = *(0x0061233c);\n        bh |= 4;\n        rax = rsp + 0x28;\n        eax = fcn_00403a80 (rbp + rax*8, ebx, *((rsp + 0x20)), *((rsp + 0x24)), *((rsp + 0x28)), *((rsp + 0x2c)));\n        eax ^= 1;\n        eax = (int32_t) al;\n        return rax;\nlabel_22:\n    } while (ebx != 0x10);\n    r13d--;\n    if (r13d == 0) {\n        goto label_27;\n    }\n    r13d = 0;\n    goto label_2;\nlabel_23:\n    edx--;\n    if (edx <= 0) {\n        goto label_24;\n    }\n    rax = fcn_00405c50 (*((rbp + rax*8)), rsp + 0x10, rsp + 0x14, rsp + 0x38, rsp + 0x40);\n    r12 = rax;\n    if (rax != 0) {\n        goto label_28;\n    }\n    if (*((rsp + 0x38)) == 0) {\n        goto label_29;\n    }\nlabel_5:\n    *(0x0061233c)++;\n    goto label_3;\nlabel_26:\n    rax = fcn_004058f0 (0x612380);\n    *((rsp + 0x28)) = rax;\n    if (rax != 0) {\n        goto label_4;\n    }\n    rax = fcn_00405680 (4, 0x40efb1);\n    edx = 5;\n    rax = dcgettext (0, \"failed to get attributes of %s\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    error (1, *(rax), rbx);\nlabel_29:\n    if (*((rsp + 0x40)) == 0) {\n        goto label_5;\n    }\n    *((rsp + 0x38)) = 0x40ef77;\n    goto label_5;\nlabel_20:\n    eax = fcn_00402770 (0);\nlabel_24:\n    if (eax >= r12d) {\n        edx = 5;\n        rax = dcgettext (0, \"missing operand\");\n        eax = 0;\n        error (0, 0, rax);\n        goto label_1;\n    }\n    rax = fcn_004058d0 (*((rbp + r12*8 - 8)));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"missing operand after %s\");\n    rcx = rbx;\n    eax = 0;\n    error (0, 0, rax);\n    goto label_1;\nlabel_25:\n    rax = fcn_00405680 (4, r13);\n    edx = 5;\n    rax = dcgettext (0, \"failed to get attributes of %s\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbp;\n    eax = 0;\n    error (1, *(rax), rbx);\nlabel_28:\n    rax = *(0x0061233c);\n    rax = fcn_004058d0 (*((rbp + rax*8)));\n    rcx = r12;\n    r8 = rax;\n    eax = 0;\n    error (1, 0, \"%s: %s\");\nlabel_27:\n    edx = 5;\n    rax = dcgettext (0, \"-R --dereference requires either -H or -L\");\n    eax = 0;\n    rax = error (1, 0, rax);\n}\n"
        },
        {
            "funcName": "fcn_004026bb",
            "funcStartAddr": "0x4026bb",
            "funcEndAddr": "0x4026da",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x4026bb */\n#include <stdint.h>\n \nint32_t fcn_004026bb (void) {\n    eax = __progname;\n    if (rax != obj.__progname) {\n        eax = 0;\n        if (rax == 0) {\n            goto label_0;\n        }\n        edi = __progname;\n        void (*rax)() ();\n    }\nlabel_0:\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00402711",
            "funcStartAddr": "0x402711",
            "funcEndAddr": "0x402768",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x402711 */\n#include <stdint.h>\n \nint64_t fcn_00402711 (int32_t argc, func fini, func init, func main, func rtld_fini, void * stack_end, char ** ubp_av) {\n    rsi = argc;\n    r8 = fini;\n    rcx = init;\n    rdi = main;\n    r9 = rtld_fini;\n    xmm0 = stack_end;\n    rdx = ubp_av;\n    if (*(0x00612368) != 0) {\n        goto label_0;\n    }\n    r12d = section..dtors;\n    ebx = 0x611e48;\n    rbx -= section..dtors;\n    rbx >>= 3;\n    rbx--;\n    do {\n        rax = imp.__libc_start_main;\n        if (rax >= rbx) {\n            goto label_1;\n        }\n        rax++;\n        *(0x00612370) = rax;\n        uint64_t (*r12 + rax*8)() ();\n    } while (1);\nlabel_1:\n    fcn_004026bb ();\n    *(0x00612368) = 1;\n    return rax;\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00402768",
            "funcStartAddr": "0x402768",
            "funcEndAddr": "0x4027fb",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x402768 */\n#include <stdint.h>\n \nint64_t fcn_00402768 (void) {\n    do {\n        esi = __progname;\n        ecx = 2;\n        rsi -= obj.__progname;\n        rsi >>= 3;\n        rax = rsi;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rsi = rax;\n        if (rax != 0) {\n            eax = 0;\n            if (rax == 0) {\n                goto label_0;\n            }\n            edi = __progname;\n            void (*rax)() ();\n        }\nlabel_0:\n        return rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00402770",
            "funcStartAddr": "0x402770",
            "funcEndAddr": "0x402bcd",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x402770 */\n#include <stdint.h>\n \nuint64_t fcn_00402770 (int64_t arg1) {\n    char * var_8h;\n    int64_t var_10h;\n    char * var_18h;\n    char * var_20h;\n    char * var_28h;\n    char * var_30h;\n    char * var_38h;\n    char * var_40h;\n    char * var_48h;\n    char * var_50h;\n    char * var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    rdi = arg1;\n    edx = 5;\n    ebx = edi;\n    rbp = imp.__libc_start_main;\n    if (edi != 0) {\n        rax = dcgettext (0, \"Try '%s --help' for more information.\\n\");\n        rdi = stderr;\n        rcx = rbp;\n        esi = 1;\n        rdx = rax;\n        eax = 0;\n        fprintf_chk ();\nlabel_0:\n        exit (ebx);\n    }\n    rax = dcgettext (0, \"Usage: %s [OPTION]... [OWNER][:[GROUP]] FILE...\\n  or:  %s [OPTION]... --reference=RFILE FILE...\\n\");\n    rcx = rbp;\n    rdx = rbp;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"Change the owner and/or group of each FILE to OWNER and/or GROUP.\\nWith --reference, change the owner and group of each FILE to those of RFILE.\\n\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -c, --changes          like verbose but report only when a change is made\\n  -f, --silent, --quiet  suppress most error messages\\n  -v, --verbose          output a diagnostic for every file processed\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --dereference      affect the referent of each symbolic link (this is\\n                         the default), rather than the symbolic link itself\\n  -h, --no-dereference   affect symbolic links instead of any referenced file\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"                         (useful only on systems that can change the\\n                         ownership of a symlink)\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --from=CURRENT_OWNER:CURRENT_GROUP\\n                         change the owner and/or group of each file only if\\n                         its current owner and/or group match those specified\\n                         here.  Either may be omitted, in which case a match\\n                         is not required for the omitted attribute\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --no-preserve-root  do not treat '/' specially (the default)\\n      --preserve-root    fail to operate recursively on '/'\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --reference=RFILE  use RFILE's owner and group rather than\\n                         specifying OWNER:GROUP values\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -R, --recursive        operate on files and directories recursively\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nThe following options modify how a hierarchy is traversed when the -R\\noption is also specified.  If more than one is specified, only the final\\none takes effect.\\n\\n  -H                     if a command line argument is a symbolic link\\n                         to a directory, traverse it\\n  -L                     traverse every symbolic link to a directory\\n                         encountered\\n  -P                     do not traverse any symbolic links (default)\\n\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --help     display this help and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --version  output version information and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nOwner is unchanged if missing.  Group is unchanged if missing, but changed\\nto login group if implied by a ':' following a symbolic OWNER.\\nOWNER and GROUP may be numeric as well as symbolic.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = imp.__libc_start_main;\n    edx = 5;\n    rax = dcgettext (0, \"\\nExamples:\\n  %s root /u        Change the owner of /u to \\\"root\\\".\\n  %s root:staff /u  Likewise, but also change its group to \\\"staff\\\".\\n  %s -hR root /u    Change the owner of /u and subfiles to \\\"root\\\".\\n\");\n    r8 = rbp;\n    rcx = rbp;\n    rdx = rbp;\n    rsi = rax;\n    edi = 1;\n    eax = 0;\n    printf_chk ();\n    *(rsp) = 0x40c68a;\n    rax = rsp;\n    *((rsp + 8)) = \"test invocation\";\n    *((rsp + 0x10)) = 0x40c704;\n    *((rsp + 0x18)) = \"Multi-call invocation\";\n    *((rsp + 0x20)) = \"sha224sum\";\n    *((rsp + 0x28)) = \"sha2 utilities\";\n    *((rsp + 0x30)) = \"sha256sum\";\n    *((rsp + 0x38)) = \"sha2 utilities\";\n    *((rsp + 0x40)) = \"sha384sum\";\n    *((rsp + 0x48)) = \"sha2 utilities\";\n    *((rsp + 0x50)) = \"sha512sum\";\n    *((rsp + 0x58)) = \"sha2 utilities\";\n    *((rsp + 0x60)) = 0;\n    *((rsp + 0x68)) = 0;\n    do {\n        rax += 0x10;\n        rdi = *(rax);\n        if (rdi == 0) {\n            goto label_2;\n        }\n        esi = \"chown\";\n        ecx = 6;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        dl = (rdi > 0) ? 1 : 0;\n    } while (dl != 0);\nlabel_2:\n    rbp = *((rax + 8));\n    edx = 5;\n    esi = \"\\n%s online help: <%s>\\n\";\n    edi = 0;\n    if (rbp == 0) {\n        goto label_3;\n    }\n    rax = dcgettext (rdi, rsi);\n    edi = 1;\n    ecx = \"https://www.gnu.org/software/coreutils/\";\n    edx = \"GNU coreutils\";\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rax = setlocale (5, 0);\n    if (rax != 0) {\n        eax = strncmp (rax, 0x40c70e, 3);\n        if (eax != 0) {\n            goto label_4;\n        }\n    }\nlabel_1:\n    edx = 5;\n    r12d = 0x40c6a6;\n    rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n    ecx = \"chown\";\n    edx = \"https://www.gnu.org/software/coreutils/\";\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    ecx = 0x40ef77;\n    r12 = rcx;\n    while (1) {\n        edx = 5;\n        rax = dcgettext (0, \"or available locally via: info '(coreutils) %s%s'\\n\");\n        rcx = r12;\n        rdx = rbp;\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        goto label_0;\nlabel_3:\n        rax = dcgettext (rdi, rsi);\n        edi = 1;\n        ecx = \"https://www.gnu.org/software/coreutils/\";\n        edx = \"GNU coreutils\";\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        rax = setlocale (5, 0);\n        if (rax != 0) {\n            eax = strncmp (rax, 0x40c70e, 3);\n            if (eax != 0) {\n                goto label_5;\n            }\n        }\n        edx = 5;\n        rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n        ecx = \"chown\";\n        edx = \"https://www.gnu.org/software/coreutils/\";\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        r12d = 0x40c6a6;\n        printf_chk ();\n    }\nlabel_5:\nlabel_4:\n    edx = 5;\n    rax = dcgettext (0, \"Report %s translation bugs to <https://translationproject.org/team/>\\n\");\n    edx = \"chown\";\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00402bd0",
            "funcStartAddr": "0x402bd0",
            "funcEndAddr": "0x402c45",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x402bd0 */\n#include <stdint.h>\n \nuint64_t fcn_00402bd0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    if (rdi == 0) {\n        goto label_0;\n    }\n    if (rsi == 0) {\n        goto label_1;\n    }\n    rbx = rsi;\n    rax = strlen (rdi);\n    r12 = rax;\n    strlen (rbx);\n    rax = fcn_004062c0 (r12 + rax + 2);\n    rsi = rbp;\n    rdi = rax;\n    r12 = rax;\n    stpcpy ();\n    *(rax) = 0x3a;\n    strcpy (rax + 1, rbx);\n    do {\n        rax = r12;\n        return rax;\nlabel_0:\n        if (rsi != 0) {\n            rdi = rsi;\nlabel_1:\n            void (*0x4064f0)() ();\n        }\n        r12d = 0;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00402c50",
            "funcStartAddr": "0x402c50",
            "funcEndAddr": "0x402c7c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x402c50 */\n#include <stdint.h>\n \nint32_t fcn_00402c50 (int64_t arg1) {\n    rdi = arg1;\n    eax = 1;\n    *(rdi) = 2;\n    *((rdi + 4)) = 0;\n    *((rdi + 8)) = 0;\n    *((rdi + 0x10)) = ax;\n    *((rdi + 0x18)) = 0;\n    *((rdi + 0x20)) = 0;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00402c90",
            "funcStartAddr": "0x402c90",
            "funcEndAddr": "0x402cc8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x402c90 */\n#include <stdint.h>\n \nuint64_t fcn_00402c90 (int64_t arg1) {\n    rdi = arg1;\n    ebx = edi;\n    rax = getgrgid ();\n    if (rax != 0) {\n        fcn_004064f0 (*(rax));\n        return rax;\n    }\n    rax = fcn_00403c60 (ebx, rsp, rdx);\n    fcn_004064f0 (rax);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00402cd0",
            "funcStartAddr": "0x402cd0",
            "funcEndAddr": "0x402d08",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x402cd0 */\n#include <stdint.h>\n \nuint64_t fcn_00402cd0 (int64_t arg1) {\n    rdi = arg1;\n    ebx = edi;\n    rax = getpwuid ();\n    if (rax != 0) {\n        fcn_004064f0 (*(rax));\n        return rax;\n    }\n    rax = fcn_00403c60 (ebx, rsp, rdx);\n    fcn_004064f0 (rax);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00402d10",
            "funcStartAddr": "0x402d10",
            "funcEndAddr": "0x403a7d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x402d10 */\n#include <stdint.h>\n \nint64_t fcn_00402d10 (int64_t arg_190h, int64_t arg1, uint32_t arg2, int64_t arg3, void * arg4, void * arg5, void * arg6) {\n    void * fildes;\n    void * var_10h;\n    void * ptr;\n    void * var_20h;\n    void * var_28h;\n    int64_t var_2ch;\n    int64_t var_30h;\n    int64_t var_c0h;\n    int64_t var_c8h;\n    uint32_t var_dch;\n    uint32_t var_e0h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r15d = edx;\n    r10d = r8d;\n    r13 = rdi;\n    r12 = rsi;\n    rax = *((rsi + 0x38));\n    edx = *((rsi + 0x70));\n    *((rsp + 8)) = ecx;\n    rbx = *((rsp + 0x190));\n    *(rsp) = rax;\n    if (dx > 0xa) {\n        goto label_5;\n    }\n    eax = (int32_t) dx;\n    /* switch table (11 cases) at 0x40d8b0 */\n    *((rsp + 0x20)) = r9d;\n    *((rsp + 0x10)) = edx;\n    *((rsp + 0x18)) = r8d;\n    al = fcn_004065a0 (rdi, rsi);\n    edx = *((rsp + 0x10));\n    r10d = *((rsp + 0x18));\n    r9d = *((rsp + 0x20));\n    if (al != 0) {\n        goto label_37;\n    }\n    do {\nlabel_5:\n        rax = *((r12 + 0x30));\n        r11d = r10d;\n        r14 = r12 + 0x78;\n        r11d &= r9d;\n        *((rsp + 0x10)) = rax;\n        eax = *((rbx + 0x10));\n        if (r11d == 0xffffffff) {\n            goto label_38;\n        }\nlabel_7:\n        if (al != 0) {\nlabel_8:\n            eax = *((r12 + 0x90));\n            eax &= 0xf000;\n            if (eax == 0xa000) {\n                goto label_39;\n            }\n        }\nlabel_16:\n        eax = edx;\n        eax &= 0xfffffffd;\n        bpl = (ax == 4) ? 1 : 0;\n        edx--;\n        al = (dx <= 1) ? 1 : 0;\n        ebp |= eax;\n        if (r10d != 0xffffffff) {\n            if (*((r14 + 0x1c)) == r10d) {\n                goto label_40;\n            }\n            if (bpl == 0) {\n                goto label_41;\n            }\n            rax = *((rbx + 8));\n            if (rax != 0) {\n                rcx = *((r14 + 8));\n                if (*(rax) == rcx) {\n                    goto label_42;\n                }\n            }\n            eax = *(rbx);\n            if (eax == 2) {\n                goto label_1;\n            }\nlabel_24:\n            if (eax != 0) {\n                goto label_1;\n            }\n            *((rsp + 0x28)) = 4;\n            goto label_17;\n        }\nlabel_40:\n        if (r9d == 0xffffffff) {\n            goto label_43;\n        }\n        eax = *((r14 + 0x20));\n        if (bpl != 0) {\n            rdx = *((rbx + 8));\n            if (rdx != 0) {\n                goto label_44;\n            }\n        }\nlabel_22:\n        if (eax != r9d) {\n            goto label_45;\n        }\nlabel_6:\n        eax = *((rbx + 0x10));\nlabel_9:\n        ebp = *((r13 + 0x2c));\n        if (al != 0) {\n            goto label_46;\n        }\nlabel_10:\n        eax = fcn_00406a00 (ebp, *((rsp + 0x10)), r15d, *((rsp + 8)), 0x100);\n        bpl = (eax == 0) ? 1 : 0;\n        if (eax != 0) {\n            rax = errno_location ();\n            if (*(rax) == 0x5f) {\n                goto label_47;\n            }\n        }\nlabel_15:\n        if (bpl == 0) {\n            goto label_18;\n        }\nlabel_29:\n        eax = *(rbx);\n        if (eax == 2) {\n            goto label_20;\n        }\n        if (r15d == 0xffffffff) {\n            goto label_48;\n        }\n        edi = *((r14 + 0x1c));\n        if (edi == r15d) {\n            goto label_48;\n        }\n        *((rsp + 0x28)) = 2;\n        r15d = *((r14 + 0x20));\nlabel_12:\n        rax = fcn_00402cd0 (rdi);\n        *((rsp + 0x10)) = rax;\n        rax = fcn_00402c90 (r15d);\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        *((rsp + 8)) = rax;\nlabel_2:\n        rax = fcn_00402bd0 (r14, r15);\n        esi = 0;\n        if (r15 != 0) {\n            rsi = *((rsp + 8));\n        }\n        *((rsp + 0x18)) = rax;\n        if (r14 == 0) {\n            goto label_49;\n        }\n        rax = fcn_00402bd0 (*((rsp + 0x10)), rsi);\n        *((rsp + 0x20)) = rax;\n        eax = *((rsp + 0x28));\n        if (eax == 3) {\n            goto label_50;\n        }\n        if (eax == 4) {\n            goto label_51;\n        }\n        edx = 5;\n        rax = dcgettext (0, \"changed ownership of %s from %s to %s\\n\");\n        r15 = rax;\nlabel_11:\n        rax = fcn_00405680 (4, *(rsp));\n        r14 = *((rsp + 0x20));\n        r8 = *((rsp + 0x18));\n        rsi = r15;\n        rdx = rax;\n        edi = 1;\n        eax = 0;\n        rcx = r14;\n        printf_chk ();\n        free (r14);\n        free (*((rsp + 0x18)));\nlabel_25:\n        free (*((rsp + 0x10)));\n        free (*((rsp + 8)));\nlabel_1:\n        if (*((rbx + 4)) == 0) {\n            goto label_52;\n        }\nlabel_0:\n        eax = ebp;\n        return rax;\n        ebp = *((rbx + 4));\n    } while (bpl == 0);\n    rax = *((rbx + 8));\n    if (rax == 0) {\n        goto label_0;\n    }\n    rcx = *(rax);\n    if (*((rsi + 0x80)) != rcx) {\n        goto label_0;\n    }\n    rax = *((rax + 8));\n    if (*((rsi + 0x78)) != rax) {\n        goto label_0;\n    }\n    rsi = *(rsp);\n    edi = 0x40efb1;\n    ecx = 2;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (*((rsi + 0x78)) > rax) ? 1 : 0;\n    if (al != 0) {\n        goto label_53;\n    }\n    rax = fcn_00405680 (4, *(rsp));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"it is dangerous to operate recursively on %s\");\n    rcx = rbx;\n    eax = 0;\n    error (0, 0, rax);\nlabel_34:\n    edx = 5;\n    ebp = 0;\n    rax = dcgettext (0, \"use --no-preserve-root to override this failsafe\");\n    eax = 0;\n    error (0, 0, rax);\n    edx = 4;\n    rsi = r12;\n    rdi = r13;\n    fts_set ();\n    rdi = r13;\n    fts_read ();\n    goto label_0;\n    ebp = *((rbx + 0x11));\n    if (bpl == 0) {\n        goto label_54;\n    }\nlabel_3:\n    eax = *(rbx);\n    ebp = 0;\n    if (eax == 2) {\n        goto label_1;\n    }\nlabel_4:\n    if (eax != 0) {\n        goto label_1;\n    }\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    ebp = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 3;\n    goto label_2;\n    if (*((rsi + 0x58)) == 0) {\n        if (*((rsi + 0x20)) == 0) {\n            goto label_55;\n        }\n    }\n    ebp = *((rbx + 0x11));\n    if (bpl != 0) {\n        goto label_3;\n    }\n    rax = fcn_00405680 (4, *(rsp));\n    edx = 5;\n    esi = \"cannot access %s\";\n    r15 = rax;\n    goto label_56;\n    ebp = *((rbx + 0x11));\n    if (bpl != 0) {\n        goto label_3;\n    }\n    rax = fcn_00405680 (4, *(rsp));\n    edx = 5;\n    r15 = rax;\nlabel_56:\n    rax = dcgettext (0, \"cannot read directory %s\");\n    rcx = r15;\nlabel_21:\n    eax = 0;\n    error (0, *((r12 + 0x40)), rax);\n    eax = *(rbx);\n    if (eax != 2) {\n        goto label_4;\n    }\n    goto label_1;\n    if (*((rbx + 4)) != 0) {\n        goto label_5;\n    }\nlabel_31:\n    goto label_0;\nlabel_43:\n    if (bpl == 0) {\n        goto label_6;\n    }\n    rax = *((rbx + 8));\n    if (rax == 0) {\n        goto label_6;\n    }\n    rcx = *(rax);\n    if (*((r14 + 8)) != rcx) {\n        goto label_6;\n    }\n    rax = *((rax + 8));\n    if (*(r14) != rax) {\n        goto label_6;\n    }\nlabel_23:\n    rsi = *(rsp);\n    edi = 0x40efb1;\n    ecx = 2;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (*(r14) > rax) ? 1 : 0;\n    if (al != 0) {\n        goto label_57;\n    }\n    rax = fcn_00405680 (4, *(rsp));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"it is dangerous to operate recursively on %s\");\n    rcx = rbx;\n    eax = 0;\n    error (0, 0, rax);\nlabel_32:\n    edx = 5;\n    ebp = 0;\n    rax = dcgettext (0, \"use --no-preserve-root to override this failsafe\");\n    eax = 0;\n    error (0, 0, rax);\n    goto label_0;\nlabel_52:\n    edx = 4;\n    rsi = r12;\n    rdi = r13;\n    fts_set ();\n    goto label_0;\nlabel_46:\n    if (r11d == 0xffffffff) {\n        goto label_58;\n    }\n    eax = *((r14 + 0x18));\n    eax &= 0xf000;\n    if (eax == 0x8000) {\n        goto label_59;\n    }\n    *((rsp + 0x18)) = 0x10900;\n    if (eax != 0x4000) {\n        goto label_58;\n    }\nlabel_14:\n    edx = *((rsp + 0x18));\n    rsi = *((rsp + 0x10));\n    edi = ebp;\n    *((rsp + 0x28)) = r9d;\n    *((rsp + 0x20)) = r10d;\n    eax = openat_2 ();\n    r10d = *((rsp + 0x20));\n    r9d = *((rsp + 0x28));\n    ecx = eax;\n    if (eax >= 0) {\n        goto label_26;\n    }\n    rax = errno_location ();\n    r8 = rax;\n    if (*(rax) == 0xd) {\n        goto label_60;\n    }\nlabel_18:\n    ebp = *((rbx + 0x11));\n    if (bpl == 0) {\n        goto label_61;\n    }\n    eax = *(rbx);\n    ebp = 0;\n    if (eax == 2) {\n        goto label_1;\n    }\nlabel_13:\n    if (eax == 0) {\n        goto label_62;\n    }\n    goto label_1;\nlabel_38:\n    if (*(rbx) != 2) {\n        goto label_7;\n    }\n    if (*((rbx + 8)) != 0) {\n        goto label_7;\n    }\n    if (al != 0) {\n        goto label_8;\n    }\n    ecx = edx;\n    ecx &= 0xfffffffd;\n    if (cx == 4) {\n        goto label_63;\n    }\n    edx--;\n    if (dx > 1) {\n        goto label_9;\n    }\nlabel_63:\n    ebp = *((r13 + 0x2c));\n    goto label_10;\n    do {\nlabel_50:\n        edx = 5;\n        if (*((rsp + 0x20)) == 0) {\n            goto label_64;\n        }\n        if (r14 == 0) {\n            goto label_65;\n        }\n        rax = dcgettext (0, \"failed to change ownership of %s from %s to %s\\n\");\n        r15 = rax;\n        goto label_11;\nlabel_49:\n        rax = fcn_00402bd0 (0, rsi);\n        *((rsp + 0x20)) = rax;\n        eax = *((rsp + 0x28));\n    } while (eax == 3);\n    if (eax != 4) {\n        goto label_66;\n    }\n    edx = 5;\n    if (r15 == 0) {\n        goto label_67;\n    }\n    rax = dcgettext (0, \"group of %s retained as %s\\n\");\n    r15 = rax;\n    goto label_11;\nlabel_48:\n    ecx = *((rsp + 8));\n    if (ecx == 0xffffffff) {\n        goto label_68;\n    }\n    r15d = *((r14 + 0x20));\n    if (r15d == ecx) {\n        goto label_68;\n    }\n    edi = *((r14 + 0x1c));\n    *((rsp + 0x28)) = 2;\n    goto label_12;\nlabel_26:\n    esi = ecx;\n    rdx = rsp + 0xc0;\n    edi = 1;\n    *((rsp + 0x10)) = ecx;\n    *((rsp + 0x20)) = r9d;\n    *((rsp + 0x18)) = r10d;\n    eax = fxstat ();\n    ecx = *((rsp + 0x10));\n    if (eax != 0) {\n        goto label_36;\n    }\n    rax = *((rsp + 0xc8));\n    r10d = *((rsp + 0x18));\n    r9d = *((rsp + 0x20));\n    if (*((r14 + 8)) == rax) {\n        goto label_69;\n    }\nlabel_28:\n    *((rsp + 8)) = ecx;\n    rax = errno_location ();\n    ecx = *((rsp + 8));\n    r15d = *(rax);\n    close (ecx);\n    eax = *(rbx);\n    *(rbp) = r15d;\n    if (eax == 2) {\n        goto label_70;\n    }\n    if (eax != 0) {\n        goto label_70;\n    }\n    ebp = 0;\nlabel_62:\n    *((rsp + 0x28)) = 3;\nlabel_17:\n    edi = *((r14 + 0x1c));\n    r15d = *((r14 + 0x20));\n    goto label_12;\nlabel_61:\n    rax = fcn_00405680 (4, *(rsp));\n    edx = 5;\n    *((rsp + 8)) = rax;\n    if (r15d == 0xffffffff) {\n        goto label_71;\n    }\n    rax = dcgettext (0, \"changing ownership of %s\");\n    r15 = rax;\nlabel_19:\n    rax = errno_location ();\n    rcx = *((rsp + 8));\n    eax = 0;\n    error (0, *(rax), r15);\n    eax = *(rbx);\n    if (eax != 2) {\n        goto label_13;\n    }\n    goto label_1;\nlabel_41:\n    eax = *(rbx);\n    while (eax != 0) {\nlabel_20:\n        goto label_1;\nlabel_59:\n        *((rsp + 0x18)) = 0x900;\n        goto label_14;\nlabel_51:\n        edx = 5;\n        rax = dcgettext (0, \"ownership of %s retained as %s\\n\");\n        r15 = rax;\n        goto label_11;\nlabel_60:\n        eax = *((r14 + 0x18));\n        r10d = *((rsp + 0x20));\n        r9d = *((rsp + 0x28));\n        eax &= 0xf000;\n        if (eax == 0x8000) {\n            goto label_72;\n        }\nlabel_27:\n        ebp = *((r13 + 0x2c));\nlabel_58:\n        eax = fcn_00406a00 (ebp, *((rsp + 0x10)), r15d, *((rsp + 8)), 0);\n        bpl = (eax == 0) ? 1 : 0;\n        goto label_15;\nlabel_39:\n        esi = *((r13 + 0x2c));\n        rdx = *((rsp + 0x10));\n        r8d = 0;\n        rcx = rsp + 0x30;\n        edi = 1;\n        *((rsp + 0x28)) = r9d;\n        *((rsp + 0x20)) = r10d;\n        *((rsp + 0x18)) = r11d;\n        eax = fxstatat ();\n        if (eax != 0) {\n            goto label_73;\n        }\n        edx = *((r12 + 0x70));\n        r14 = rsp + 0x30;\n        r11d = *((rsp + 0x18));\n        r10d = *((rsp + 0x20));\n        r9d = *((rsp + 0x28));\n        goto label_16;\nlabel_65:\n        if (r15 == 0) {\n            goto label_74;\n        }\n        rax = dcgettext (0, \"failed to change group of %s from %s to %s\\n\");\n        r15 = rax;\n        goto label_11;\n    }\n    *((rsp + 0x28)) = 4;\n    goto label_17;\nlabel_37:\n    ebp = 0;\n    rax = fcn_00405750 (0, 3, *(rsp));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"WARNING: Circular directory structure.\\nThis almost certainly means that you have a corrupted file system.\\nNOTIFY YOUR SYSTEM MANAGER.\\nThe following directory is part of the cycle:\\n  %s\\n\");\n    rcx = rbx;\n    eax = 0;\n    error (0, 0, rax);\n    goto label_0;\nlabel_36:\n    *((rsp + 0x10)) = ecx;\n    rax = errno_location ();\n    ecx = *((rsp + 0x10));\n    edx = *(rax);\n    *((rsp + 8)) = edx;\n    close (ecx);\n    edx = *((rsp + 8));\n    *(rbp) = edx;\n    goto label_18;\nlabel_71:\n    rax = dcgettext (0, \"changing group of %s\");\n    r15 = rax;\n    goto label_19;\nlabel_68:\n    if (eax != 0) {\n        goto label_20;\n    }\n    *((rsp + 0x28)) = 4;\n    goto label_17;\nlabel_67:\n    rax = dcgettext (0, \"ownership of %s retained\\n\");\n    r15 = rax;\n    goto label_11;\nlabel_66:\n    edx = 5;\n    if (r15 == 0) {\n        goto label_75;\n    }\n    rax = dcgettext (0, \"changed group of %s from %s to %s\\n\");\n    r15 = rax;\n    goto label_11;\nlabel_54:\n    rax = fcn_00405750 (0, 3, *(rsp));\n    esi = *((r12 + 0x40));\n    edx = 0x40c716;\n    rcx = rax;\n    goto label_21;\nlabel_44:\n    rcx = *(rdx);\n    if (*((r14 + 8)) != rcx) {\n        goto label_22;\n    }\n    rcx = *((rdx + 8));\n    if (*(r14) != rcx) {\n        goto label_22;\n    }\n    goto label_23;\nlabel_42:\n    rax = *((rax + 8));\n    if (*(r14) == rax) {\n        goto label_23;\n    }\nlabel_45:\n    eax = *(rbx);\n    if (eax != 2) {\n        goto label_24;\n    }\n    goto label_1;\nlabel_47:\n    eax = *(rbx);\n    if (eax == 2) {\n        goto label_1;\n    }\n    if (eax != 0) {\n        goto label_1;\n    }\n    rax = fcn_00402cd0 (*((r14 + 0x1c)));\n    *((rsp + 0x10)) = rax;\n    rax = fcn_00402c90 (*((r14 + 0x20)));\n    *((rsp + 8)) = rax;\n    rax = fcn_00405680 (4, *(rsp));\n    edx = 5;\n    r14 = rax;\n    rax = dcgettext (0, \"neither symbolic link %s nor referent has been changed\\n\");\n    rdx = r14;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    goto label_25;\nlabel_64:\n    esi = \"failed to change ownership of %s to %s\\n\";\n    if (r14 == 0) {\n        goto label_76;\n    }\nlabel_30:\n    rax = dcgettext (0, rsi);\n    r15 = rax;\n    rax = *((rsp + 0x18));\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = rax;\n    goto label_11;\nlabel_73:\n    ebp = *((rbx + 0x11));\n    if (bpl == 0) {\n        goto label_77;\n    }\n    eax = *(rbx);\n    ebp = 0;\n    if (eax == 2) {\n        goto label_1;\n    }\nlabel_33:\n    if (eax != 0) {\n        goto label_1;\n    }\n    r14 = rsp + 0x30;\n    *((rsp + 0x28)) = 3;\n    goto label_17;\nlabel_72:\n    edx = *((rsp + 0x18));\n    rsi = *((rsp + 0x10));\n    edi = ebp;\n    *((rsp + 0x2c)) = r9d;\n    *((rsp + 0x28)) = r10d;\n    edx |= 1;\n    *((rsp + 0x20)) = r8;\n    eax = openat_2 ();\n    r8 = *((rsp + 0x20));\n    r10d = *((rsp + 0x28));\n    ecx = eax;\n    r9d = *((rsp + 0x2c));\n    if (eax >= 0) {\n        goto label_26;\n    }\n    if (*(r8) != 0xd) {\n        goto label_18;\n    }\n    goto label_27;\nlabel_70:\n    ebp = 0;\n    goto label_1;\nlabel_69:\n    rax = *((rsp + 0xc0));\n    if (*(r14) != rax) {\n        goto label_28;\n    }\n    if (r10d == 0xffffffff) {\n        goto label_78;\n    }\n    if (r10d == *((rsp + 0xdc))) {\n        goto label_78;\n    }\nlabel_35:\n    *((rsp + 0x18)) = ecx;\n    rax = errno_location ();\n    ecx = *((rsp + 0x18));\n    edx = *(rax);\n    *((rsp + 0x10)) = edx;\n    close (ecx);\n    edx = *((rsp + 0x10));\n    *(rbp) = edx;\n    goto label_29;\nlabel_75:\n    rax = dcgettext (0, \"no change to ownership of %s\\n\");\n    r15 = rax;\n    goto label_11;\nlabel_76:\n    esi = \"failed to change group of %s to %s\\n\";\n    if (r15 != 0) {\n        goto label_30;\n    }\n    esi = \"failed to change ownership of %s\\n\";\n    goto label_30;\nlabel_55:\n    *((rsi + 0x20)) = 1;\n    edx = 1;\n    fts_set ();\n    goto label_31;\nlabel_74:\n    rax = dcgettext (0, \"failed to change ownership of %s\\n\");\n    r15 = rax;\n    goto label_11;\nlabel_57:\n    rax = fcn_004055a0 (1, 4, 0x40efb1);\n    rax = fcn_004055a0 (0, 4, *(rsp));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"it is dangerous to operate recursively on %s (same as %s)\");\n    r8 = rbp;\n    rcx = rbx;\n    eax = 0;\n    error (0, 0, rax);\n    goto label_32;\nlabel_77:\n    rax = fcn_00405680 (4, *(rsp));\n    edx = 5;\n    r14 = rax;\n    rax = dcgettext (0, \"cannot dereference %s\");\n    r15 = rax;\n    rax = errno_location ();\n    rcx = r14;\n    eax = 0;\n    error (0, *(rax), r15);\n    eax = *(rbx);\n    if (eax != 2) {\n        goto label_33;\n    }\n    goto label_1;\nlabel_53:\n    rax = fcn_004055a0 (1, 4, 0x40efb1);\n    rax = fcn_004055a0 (0, 4, *(rsp));\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"it is dangerous to operate recursively on %s (same as %s)\");\n    r8 = rbp;\n    rcx = rbx;\n    eax = 0;\n    error (0, 0, rax);\n    goto label_34;\nlabel_78:\n    if (r9d == 0xffffffff) {\n        goto label_79;\n    }\n    if (r9d != *((rsp + 0xe0))) {\n        goto label_35;\n    }\nlabel_79:\n    edx = *((rsp + 8));\n    edi = ecx;\n    esi = r15d;\n    *((rsp + 0x10)) = ecx;\n    eax = fchown ();\n    ecx = *((rsp + 0x10));\n    if (eax != 0) {\n        goto label_36;\n    }\n    eax = close (ecx);\n    if (eax != 0) {\n        goto label_18;\n    }\n    goto label_29;\n}\n"
        },
        {
            "funcName": "fcn_00403a80",
            "funcStartAddr": "0x403a80",
            "funcEndAddr": "0x403b9e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x403a80 */\n#include <stdint.h>\n \nvoid fcn_00403a80 (int64_t arg_50h, int64_t arg2, char ** arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    char ** var_ch;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    eax = r8d;\n    r15d = ecx;\n    eax &= r9d;\n    r14d = r9d;\n    r13d = r8d;\n    *((rsp + 0xc)) = edx;\n    r12 = *((rsp + 0x50));\n    if (eax == 0xffffffff) {\n        goto label_3;\n    }\nlabel_0:\n    edx = 0;\n    ebx = 1;\n    rax = fcn_00406550 (rdi);\n    while (rax != 0) {\n        eax = fcn_00402d10 (rbp, rax, *((rsp + 0x1c)), r15d, r13d, r14d);\n        ebx &= eax;\n        rdi = rbp;\n        rax = fts_read ();\n    }\n    rax = errno_location ();\n    ecx = *(rax);\n    r13 = rax;\n    if (ecx != 0) {\n        ebx = *((r12 + 0x11));\n        if (bl == 0) {\n            goto label_4;\n        }\n        ebx = 0;\n    }\nlabel_2:\n    rdi = rbp;\n    eax = fts_close ();\n    if (eax != 0) {\n        goto label_5;\n    }\nlabel_1:\n    eax = ebx;\n    return;\nlabel_3:\n    if (*((r12 + 0x10)) != 0) {\n        goto label_0;\n    }\n    eax = esi;\n    eax |= 8;\n    if (*(r12) == 2) {\n        esi = eax;\n    }\n    goto label_0;\nlabel_5:\n    edx = 5;\n    ebx = 0;\n    rax = dcgettext (0, \"fts_close failed\");\n    eax = 0;\n    error (0, *(r13), rax);\n    goto label_1;\nlabel_4:\n    edx = 5;\n    rax = dcgettext (0, \"fts_read failed\");\n    eax = 0;\n    error (0, *(r13), rax);\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_00403c60",
            "funcStartAddr": "0x403c60",
            "funcEndAddr": "0x403ca8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x403c60 */\n#include <stdint.h>\n \nint64_t fcn_00403c60 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = rsi + 0x14;\n    *((rsi + 0x14)) = 0;\n    rsi = 0xcccccccccccccccd;\n    while (rdi > 9) {\n        rdi = rdx;\n        rax = rdx;\n        r8 = rdi;\n        rcx--;\n        rdx:rax = rax * rsi;\n        rdx >>= 3;\n        rax = rdx * 5;\n        rax += rax;\n        r8 -= rax;\n        rax = r8;\n        eax += 0x30;\n        *(rcx) = al;\n    }\n    rax = rcx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00403cb0",
            "funcStartAddr": "0x403cb0",
            "funcEndAddr": "0x403d49",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x403cb0 */\n#include <stdint.h>\n \nuint64_t fcn_00403cb0 (char ** arg1) {\n    rdi = arg1;\n    if (rdi != 0) {\n        rbx = rdi;\n        rax = strrchr (rdi, 0x2f);\n        if (rax != 0) {\n            r8 = rax + 1;\n            rdx = r8;\n            rdx -= rbx;\n            if (rdx <= 6) {\n                goto label_0;\n            }\n            rsi = rax - 6;\n            edi = \"/.libs/\";\n            ecx = 7;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (rdx > 6) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            edi = 0x40d960;\n            ecx = 3;\n            rsi = r8;\n            rbx = r8;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (dl > 0) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            rbx = rax + 4;\n            *(obj.__progname) = rbx;\n        }\nlabel_0:\n        *(0x006123a8) = rbx;\n        *(obj.program_invocation_name) = rbx;\n        return rax;\n    }\n    fwrite (\"A NULL argv[0] was passed through an exec system call.\\n\", 1, 0x37, *(obj.stderr));\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_00403d50",
            "funcStartAddr": "0x403d50",
            "funcEndAddr": "0x403e42",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x403d50 */\n#include <stdint.h>\n \nuint64_t fcn_00403d50 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edx = 5;\n    r12d = esi;\n    rsi = rdi;\n    rax = dcgettext (0, rsi);\n    rbx = rax;\n    while (1) {\nlabel_0:\n        rax = rbx;\n        return rax;\n        rax = fcn_0040b370 ();\n        edx = *(rax);\n        edx &= 0xffffffdf;\n        if (dl != 0x55) {\n            goto label_1;\n        }\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x54) {\n            goto label_2;\n        }\n        edx = *((rax + 2));\n        edx &= 0xffffffdf;\n        if (dl != 0x46) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x2d) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0) {\n            goto label_2;\n        }\n        eax = 0x40d966;\n        ebx = 0x40d971;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n    }\nlabel_1:\n    if (dl == 0x47) {\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x42) {\n            goto label_2;\n        }\n        if (*((rax + 2)) != 0x31) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0x33) {\n            goto label_2;\n        }\n        if (*((rax + 6)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 7)) != 0) {\n            goto label_2;\n        }\n        eax = 0x40d96a;\n        ebx = 0x40d96d;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n        goto label_0;\n    }\nlabel_2:\n    eax = 0x40f1d4;\n    ebx = 0x40d964;\n    if (r12d != 9) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00403e50",
            "funcStartAddr": "0x403e50",
            "funcEndAddr": "0x406d91",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x403e50 */\n#include <stdint.h>\n \nuint64_t fcn_00403e50 (int64_t arg_e8h_3, uint32_t arg_e8h_2, int64_t arg_e8h, char * arg_e0h, int64_t arg1, char * arg2, char * arg3, size_t * arg4, int64_t arg5, int64_t arg6) {\n    size_t * var_8h;\n    size_t * var_10h;\n    uint32_t var_1fh;\n    char * s;\n    size_t n;\n    size_t * var_30h;\n    size_t * var_38h;\n    size_t var_40h;\n    size_t var_48h;\n    void * s2;\n    char * var_58h;\n    uint32_t var_60h;\n    int64_t var_68h;\n    uint32_t var_6ch;\n    char * var_6dh;\n    int64_t var_6eh;\n    int64_t var_6fh;\n    int64_t var_70h;\n    int64_t var_78h;\n    wint_t wc;\n    mbstate_t * ps;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    do {\n        /* [13] -r-x section size 42280 named .text */\n        abort ();\nlabel_5:\n        r15 = rdi;\n        r14 = rsi;\n        r13d = r8d;\n        *((rsp + 0x20)) = rdx;\n        *((rsp + 8)) = rcx;\n        *((rsp + 0x68)) = r9d;\n        rax = ctype_get_mb_cur_max ();\n        ebp &= 2;\n        *((rsp + 0x60)) = rax;\n        rsp + 0x6c = (ebp != 0) ? 1 : 0;\n    } while (r13d > 0xa);\n    eax = r13d;\n    r11 = *((rsp + 8));\n    /* switch table (11 cases) at 0x40d9e0 */\nlabel_30:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    r13d = 2;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x40f1d4;\nlabel_21:\n    r9 = r11;\n    r12d = 0;\n    r11d = r13d;\n    do {\nlabel_28:\n        r13b = (r9 != r12) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            r13b = (*((rax + r12)) != 0) ? 1 : 0;\n        }\n        if (r13b == 0) {\n            goto label_47;\n        }\n        rdi = *((rsp + 0x20));\n        al = (r11d != 2) ? 1 : 0;\n        al &= *((rsp + 8));\n        r8 = rdi + r12;\n        *((rsp + 0x10)) = al;\n        if (al == 0) {\n            goto label_48;\n        }\n        rax = *((rsp + 0x28));\n        if (rax == 0) {\n            goto label_49;\n        }\n        rbp = r12 + rax;\n        if (r9 == -1) {\n            if (rax <= 1) {\n                goto label_50;\n            }\n            *((rsp + 0x40)) = r11d;\n            *((rsp + 0x38)) = r10b;\n            *((rsp + 0x30)) = r8;\n            rax = strlen (rdi);\n            r11d = *((rsp + 0x40));\n            r10d = *((rsp + 0x38));\n            r8 = *((rsp + 0x30));\n            r9 = rax;\n        }\nlabel_50:\n        if (rbp > r9) {\n            goto label_49;\n        }\n        rdi = r8;\n        *((rsp + 0x48)) = r11d;\n        *((rsp + 0x40)) = r9;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        eax = memcmp (rdi, *((rsp + 0x50)), *((rsp + 0x28)));\n        r8 = *((rsp + 0x30));\n        r10d = *((rsp + 0x38));\n        r9 = *((rsp + 0x40));\n        r11d = *((rsp + 0x48));\n        if (eax != 0) {\n            goto label_49;\n        }\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_51;\n        }\n        ebp = *(r8);\n        if (bpl > 0x7e) {\n            goto label_52;\n        }\n        eax = (int32_t) bpl;\n        /* switch table (127 cases) at 0x40da38 */\n        *((rsp + 0x10)) = 0;\n        al = (r9 != 1) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            al = (*((rax + 1)) != 0) ? 1 : 0;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        if (al != 0) {\n            goto label_7;\n        }\nlabel_17:\n        if (r12 != 0) {\n            goto label_7;\n        }\nlabel_18:\n        if (*((rsp + 0x6c)) != 0) {\n            if (dl != 0) {\n                goto label_53;\n            }\n        }\nlabel_2:\n        eax = *((rsp + 8));\n        eax ^= 1;\n        eax |= edx;\n        eax ^= 1;\n        al |= *((rsp + 0x6c));\n        if (al == 0) {\n            goto label_11;\n        }\nlabel_24:\n        eax = 0;\nlabel_10:\n        if (*((rsp + 0xd0)) == 0) {\n            goto label_11;\n        }\n        edx = ebp;\n        rcx = *((rsp + 0xd0));\n        dl >>= 5;\n        edx = (int32_t) dl;\n        edx = *((rcx + rdx*4));\n        ecx = ebp;\n        edx >>= cl;\n        edx &= 1;\n        if (edx == 0) {\n            goto label_11;\n        }\n        dl = (r11d == 2) ? 1 : 0;\nlabel_0:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_54;\n        }\nlabel_4:\n        eax = r10d;\n        eax ^= 1;\n        al &= dl;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rdx = rbx + 1;\n            if (rdx < r14) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rdx = rbx + 2;\n            if (rdx < r14) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\nlabel_9:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n        r12++;\nlabel_1:\n        if (rbx < r14) {\n            *((r15 + rbx)) = bpl;\n        }\n        edi = *((rsp + 0x1f));\n        rbx++;\n        eax = 0;\n        if (r13b == 0) {\n            edi = eax;\n        }\n        *((rsp + 0x1f)) = dil;\n    } while (1);\nlabel_3:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    if (r14 == 0) {\n        goto label_56;\n    }\n    edx = 0;\n    if (*((rsp + 0x58)) != 0) {\n        goto label_56;\n    }\nlabel_27:\n    *((rsp + 0x6d)) = r13b;\n    rbx += 3;\n    eax = 0;\n    r10d = 0;\n    *((rsp + 0x58)) = r14;\n    r14 = rdx;\nlabel_11:\n    dl = (r11d == 2) ? 1 : 0;\n    if (*((rsp + 0x10)) != 0) {\n        goto label_0;\n    }\n    eax ^= 1;\n    r12++;\n    eax &= r10d;\nlabel_16:\n    if (al == 0) {\n        goto label_1;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x27;\n    }\n    rbx += 2;\n    r10d = 0;\n    goto label_1;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_57;\n    }\n    if (r11d == 5) {\n        goto label_58;\n    }\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_3;\n    }\n    *((rsp + 0x6d)) = r13b;\n    edx = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\nlabel_15:\n    edx = *((rsp + 8));\n    dl &= *((rsp + 0x6c));\n    ecx = 0x5c;\n    al = (*((rsp + 0x28)) != 0) ? 1 : 0;\n    dl &= al;\n    if (dl != 0) {\n        goto label_59;\n    }\nlabel_8:\n    if (*((rsp + 8)) != 0) {\n        goto label_60;\n    }\nlabel_7:\n    r13d = 0;\n    goto label_2;\nlabel_6:\n    edx = 0;\n    r13d = 0;\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_4;\n    }\nlabel_54:\n    r13d = r11d;\n    eax = edx;\n    r11 = r9;\nlabel_42:\nlabel_12:\n    eax = 4;\n    if (*((rsp + 8)) != 0) {\n        r13d = eax;\n    }\nlabel_43:\n    r9d &= 0xfffffffd;\n    rax = fcn_00403e50 (r15, r14, *((rsp + 0x40)), r11, r13d, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\nlabel_44:\n    rax = rbx;\n    return rax;\n    goto label_6;\n    *((rsp + 0x10)) = 0;\n    edx = 0;\n    goto label_7;\n    *((rsp + 0x10)) = 0;\n    ecx = 0x72;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    do {\nlabel_20:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_61;\n        }\nlabel_34:\n        r13d = 0;\n        goto label_9;\n    } while (1);\nlabel_14:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_62;\n    }\n    *((rsp + 0x10)) = 0;\n    eax = r10d;\n    dl = (r11d == 2) ? 1 : 0;\n    eax ^= 1;\n    al &= dl;\n    if (al == 0) {\n        goto label_63;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rcx = rbx + 1;\n    if (r14 > rcx) {\n        *((r15 + rbx + 1)) = 0x24;\n    }\n    rcx = rbx + 2;\n    if (r14 > rcx) {\n        *((r15 + rbx + 2)) = 0x27;\n    }\n    rcx = rbx + 3;\n    if (r14 <= rcx) {\n        goto label_64;\n    }\nlabel_26:\n    *((r15 + rcx)) = 0x5c;\n    r10d = eax;\nlabel_25:\n    rbx = rcx + 1;\n    if (r11d == 2) {\n        goto label_65;\n    }\n    rax = r12 + 1;\n    if (rax < r9) {\n        rax = *((rsp + 0x20));\n        eax = *((rax + r12 + 1));\n        *((rsp + 0x30)) = al;\n        eax -= 0x30;\n        if (al <= 9) {\n            goto label_66;\n        }\n    }\nlabel_35:\n    eax = *((rsp + 8));\n    eax ^= 1;\n    al |= dl;\n    eax = r13d;\n    r13d = 0;\n    if (al == 0) {\n        goto label_10;\n    }\n    goto label_11;\nlabel_19:\n    *((rsp + 0x10)) = 0;\n    do {\nlabel_52:\n        if (*((rsp + 0x60)) != 1) {\n            goto label_67;\n        }\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r9;\n        *((rsp + 0x30)) = r10b;\n        rax = ctype_b_loc ();\n        edx = (int32_t) bpl;\n        r10d = *((rsp + 0x30));\n        r9 = *((rsp + 0x38));\n        rax = *(rax);\n        r11d = *((rsp + 0x40));\n        edi = 1;\n        eax = *((rax + rdx*2));\n        ax &= 0x4000;\n        r13b = (ax != 0) ? 1 : 0;\n        dl = (ax == 0) ? 1 : 0;\n        dl &= *((rsp + 8));\nlabel_37:\n        if (dl != 0) {\n            goto label_68;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        goto label_2;\nlabel_48:\n        ebp = *(r8);\n    } while (bpl > 0x7e);\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x40de30 */\n    ecx = 0x6e;\nlabel_13:\n    eax = *((rsp + 0x6c));\n    dl = (r11d == 2) ? 1 : 0;\n    al &= dl;\n    *((rsp + 0x10)) = al;\n    if (al == 0) {\n        goto label_8;\n    }\nlabel_53:\n    r11 = r9;\n    r13d = 2;\n    goto label_12;\n    ecx = 0x74;\n    goto label_13;\n    ecx = 0x62;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x61;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    if (*((rsp + 8)) != 0) {\n        goto label_14;\n    }\n    if ((*((rsp + 0x68)) & 1) != 0) {\n        goto label_69;\n    }\n    *((rsp + 0x10)) = 0;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    ebp = 0;\n    goto label_2;\n    if (r11d != 2) {\n        goto label_15;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_17;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_18;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_18;\n    ecx = 0x72;\n    goto label_13;\n    ecx = 0x66;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x76;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\nlabel_49:\n    ebp = *(r8);\n    if (bpl > 0x7e) {\n        goto label_19;\n    }\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x40e228 */\n    eax = 0;\n    do {\nlabel_31:\n        r13d = *((rsp + 0x10));\n        *((rsp + 0x10)) = al;\n        eax = 0;\n        goto label_10;\n        eax = 0;\nlabel_32:\n        if (r12 != 0) {\n            goto label_70;\n        }\n        r13d = *((rsp + 0x10));\n        edx = 0;\n        *((rsp + 0x10)) = al;\n        goto label_2;\n        eax = 0;\nlabel_33:\n    } while (1);\n    goto label_6;\n    goto label_20;\nlabel_47:\n    r13d = r11d;\n    r11 = r9;\n    dl = (r13d == 2) ? 1 : 0;\n    if (rbx == 0) {\n        if ((*((rsp + 0x6c)) & dl) != 0) {\n            goto label_71;\n        }\n    }\n    eax = *((rsp + 0x6c));\n    eax ^= 1;\n    dl &= al;\n    if (dl == 0) {\n        goto label_72;\n    }\n    if (*((rsp + 0x6d)) == 0) {\n        goto label_45;\n    }\n    if (*((rsp + 0x1f)) != 0) {\n        goto label_73;\n    }\n    al = (r14 == 0) ? 1 : 0;\n    dl = (*((rsp + 0x58)) != 0) ? 1 : 0;\n    al &= dl;\n    if (al == 0) {\n        goto label_74;\n    }\n    r14 = *((rsp + 0x58));\nlabel_46:\n    *(r15) = 0x27;\n    r13d = 2;\n    ebx = 1;\n    *((rsp + 0x50)) = 0x40f1d4;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x6c)) = 0;\n    *((rsp + 0x6d)) = al;\n    goto label_21;\nlabel_58:\n    if ((*((rsp + 0x68)) & 4) != 0) {\n        rax = r12 + 2;\n        if (rax >= r9) {\n            goto label_39;\n        }\n        rsi = *((rsp + 0x20));\n        if (*((rsi + r12 + 1)) == 0x3f) {\n            goto label_75;\n        }\n    }\nlabel_39:\n    edx = 0;\n    r13d = 0;\n    goto label_2;\nlabel_57:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r13d = 0;\n    eax = 0;\n    goto label_11;\nlabel_67:\n    *((rsp + 0x88)) = 0;\n    if (r9 == -1) {\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        rax = strlen (*((rsp + 0x20)));\n        r11d = *((rsp + 0x40));\n        r10d = *((rsp + 0x38));\n        r8 = *((rsp + 0x30));\n        r9 = rax;\n    }\n    eax = 0;\n    *((rsp + 0x70)) = rbx;\n    *((rsp + 0x78)) = r8;\n    rbx = rax;\n    *((rsp + 0x6e)) = r10b;\n    *((rsp + 0x6f)) = bpl;\n    *((rsp + 0x40)) = r15;\n    *((rsp + 0x48)) = r14;\n    *((rsp + 0x30)) = r9;\n    *((rsp + 0x38)) = r11d;\n    while (*((rsp + 0x38)) != 2) {\nlabel_22:\n        eax = iswprint (*((rsp + 0x84)));\n        rdi = rsp + 0x88;\n        eax = 0;\n        if (eax == 0) {\n            r13d = eax;\n        }\n        rbx += r14;\n        eax = mbsinit (rdi);\n        if (eax != 0) {\n            goto label_76;\n        }\n        rax = *((rsp + 0x20));\n        r15 = r12 + rbx;\n        rbp = rax + r15;\n        rdx -= r15;\n        rax = fcn_00409d10 (rsp + 0x84, rbp, *((rsp + 0x30)), rsp + 0x88);\n        r14 = rax;\n        if (rax == 0) {\n            goto label_76;\n        }\n        if (rax == -1) {\n            goto label_77;\n        }\n        if (rax == 0xfffffffffffffffe) {\n            goto label_78;\n        }\n    }\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_22;\n    }\n    if (rax == 1) {\n        goto label_22;\n    }\n    rsi = *((rsp + 0x20));\n    rax = rsi + r15 + 1;\n    rsi += r14;\n    rsi += r15;\n    goto label_79;\nlabel_23:\n    rax++;\n    if (rsi == rax) {\n        goto label_22;\n    }\nlabel_79:\n    ecx = *(rax);\n    ecx -= 0x5b;\n    if (cl > 0x21) {\n        goto label_23;\n    }\n    edx = 1;\n    rdx <<= cl;\n    rcx = 0x20000002b;\n    if ((rdx & rcx) == 0) {\n        goto label_23;\n    }\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r13d = 2;\n    r11 = *((rsp + 0x30));\n    goto label_12;\nlabel_70:\n    *((rsp + 0x10)) = al;\n    r13d = 0;\n    goto label_24;\nlabel_63:\n    rcx = rbx;\n    if (r14 <= rbx) {\n        goto label_25;\n    }\n    eax = r10d;\n    goto label_26;\nlabel_56:\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x5c;\n    }\n    rax = rbx + 2;\n    if (r14 <= rax) {\n        goto label_80;\n    }\n    rdx = r14;\n    *((r15 + rbx + 2)) = 0x27;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_69:\n    r12++;\n    goto label_28;\nlabel_68:\n    edx = *((rsp + 8));\n    r13d = 0;\nlabel_36:\n    rcx = rdi;\n    *((rsp + 0x30)) = r13b;\n    esi = 0;\n    r13d = *((rsp + 0x6c));\n    rcx += r12;\n    edi = *((rsp + 0x10));\n    r8 = *((rsp + 0x20));\n    while (dl != 0) {\n        al = (r11d == 2) ? 1 : 0;\n        if (r13b != 0) {\n            goto label_81;\n        }\n        esi = r10d;\n        esi ^= 1;\n        al &= sil;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rsi = rbx + 1;\n            if (r14 > rsi) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rsi = rbx + 2;\n            if (r14 > rsi) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 6;\n            eax += 0x30;\n            *((r15 + rbx + 1)) = al;\n        }\n        rax = rbx + 2;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 3;\n            eax &= 7;\n            eax += 0x30;\n            *((r15 + rbx + 2)) = al;\n        }\n        ebp &= 7;\n        r12++;\n        rbx += 3;\n        ebp += 0x30;\n        if (r12 >= rcx) {\n            goto label_82;\n        }\n        esi = edx;\nlabel_29:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = bpl;\n        }\n        ebp = *((r8 + r12));\n        rbx++;\n    }\n    eax = esi;\n    eax ^= 1;\n    eax &= r10d;\n    if (dil != 0) {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n    }\n    r12++;\n    if (r12 < rcx) {\n        if (al == 0) {\n            goto label_83;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x27;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            *((r15 + rbx + 1)) = 0x27;\n        }\n        rbx += 2;\n        edi = 0;\n        r10d = 0;\n        goto label_29;\n    }\n    r13d = *((rsp + 0x30));\n    goto label_16;\nlabel_81:\n    r13d = r11d;\n    *((rsp + 8)) = al;\n    r11 = r9;\n    goto label_12;\nlabel_64:\n    rbx += 4;\n    r10d = eax;\n    r13d = 0;\n    goto label_11;\n    if (ebp != 0) {\n        goto label_30;\n    }\n    *((rsp + 8)) = 1;\n    do {\n        if (r14 != 0) {\n            goto label_84;\n        }\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 1;\n        r13d = 2;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x40f1d4;\n        goto label_21;\n        if (ebp != 0) {\n            goto label_85;\n        }\n        if (r14 == 0) {\n            goto label_86;\n        }\n        *(r15) = 0x22;\n        r10d = 0;\n        *((rsp + 0x1f)) = 1;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\nlabel_38:\n        *((rsp + 0x6c)) = 0;\n        ebx = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x40d964;\n        goto label_21;\n        if (r14 != 0) {\n            *((rsp + 8)) = r11;\n            rax = fcn_00403d50 (0x40d975, r13d);\n            *((rsp + 0xd8)) = rax;\n            rax = fcn_00403d50 (0x40f1d4, r13d);\n            r11 = *((rsp + 8));\n            *((rsp + 0xe0)) = rax;\n        }\n        ebx = 0;\n        if (ebp == 0) {\n            goto label_87;\n        }\nlabel_41:\n        *((rsp + 0x10)) = r11;\n        rax = strlen (*((rsp + 0xe0)));\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        r11 = *((rsp + 0x10));\n        *((rsp + 0x28)) = rax;\n        rax = *((rsp + 0xe0));\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x50)) = rax;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 8)) = 1;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 0;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 5;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x40d964;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 2;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x40f1d4;\n        goto label_21;\n        eax = *((rsp + 0x10));\n        goto label_31;\n        eax = *((rsp + 0x10));\n        goto label_32;\n        eax = *((rsp + 0x10));\n        goto label_33;\n        edx = 0;\n        r13d = 0;\n        goto label_4;\n        goto label_34;\nlabel_66:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x30;\n        }\n        rax = rcx + 2;\n        if (r14 > rax) {\n            *((r15 + rcx + 2)) = 0x30;\n        }\n        rbx = rcx + 3;\n        goto label_35;\n        if (ebp != 0) {\n            goto label_88;\n        }\n        *((rsp + 8)) = 0;\n    } while (1);\nlabel_82:\n    r13d = *((rsp + 0x30));\n    goto label_1;\nlabel_59:\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\nlabel_83:\n    edi = 0;\n    goto label_29;\nlabel_76:\n    rdi = rbx;\n    edx = r13d;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    edx ^= 1;\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    dl &= *((rsp + 8));\nlabel_40:\n    if (rdi > 1) {\n        goto label_36;\n    }\n    goto label_37;\nlabel_86:\n    *((rsp + 0x58)) = 0;\n    r10d = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x6d)) = 0;\n    goto label_38;\nlabel_65:\n    eax = r13d;\n    r13d = 0;\n    goto label_11;\nlabel_75:\n    ebp = *((rsi + rax));\n    if (bpl > 0x3e) {\n        goto label_39;\n    }\n    rsi = 0x7000a38200000000;\n    if (((rsi >> rbp) & 1) >= 0) {\n        goto label_39;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_51;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x3f;\n    }\n    rdx = rbx + 1;\n    if (r14 > rdx) {\n        *((r15 + rbx + 1)) = 0x22;\n    }\n    rdx = rbx + 2;\n    if (r14 > rdx) {\n        *((r15 + rbx + 2)) = 0x22;\n    }\n    rdx = rbx + 3;\n    if (r14 > rdx) {\n        *((r15 + rbx + 3)) = 0x3f;\n    }\n    rbx += 4;\n    edx = 0;\n    r13d = 0;\n    r12 = rax;\n    goto label_35;\nlabel_77:\n    rdi = rbx;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r13d = 0;\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    edx = *((rsp + 8));\n    goto label_40;\nlabel_78:\n    r9 = *((rsp + 0x30));\n    rsi = r15;\n    rcx = rbp;\n    rax = rbx;\n    rdi = rbx;\n    r8 = *((rsp + 0x78));\n    r10d = *((rsp + 0x6e));\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r11d = *((rsp + 0x38));\n    if (rsi >= r9) {\n        goto label_89;\n    }\n    if (*(rcx) != 0) {\n        goto label_90;\n    }\n    goto label_89;\n    do {\n        if (*((r8 + rax)) == 0) {\n            goto label_91;\n        }\nlabel_90:\n        rax++;\n        rdx = r12 + rax;\n    } while (rdx < r9);\nlabel_91:\n    rdi = rax;\nlabel_89:\n    edx = *((rsp + 8));\n    r13d = 0;\n    goto label_40;\nlabel_87:\n    rax = *((rsp + 0xd8));\n    eax = *(rax);\n    if (al == 0) {\n        goto label_41;\n    }\n    rdx = *((rsp + 0xd8));\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = al;\n        }\n        rbx++;\n        eax = *((rdx + rbx));\n    } while (al != 0);\n    goto label_41;\nlabel_61:\n    r13d = r11d;\n    eax = 0;\n    r11 = r9;\n    goto label_42;\nlabel_85:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 1;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x40d964;\n    goto label_21;\nlabel_51:\n    r13d = r11d;\n    r11 = r9;\n    goto label_43;\nlabel_72:\n    edx = eax;\nlabel_45:\n    rax = *((rsp + 0x50));\n    if (rax == 0) {\n        goto label_92;\n    }\n    if (dl == 0) {\n        goto label_92;\n    }\n    edx = *(rax);\n    if (dl == 0) {\n        goto label_92;\n    }\n    rax -= rbx;\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = dl;\n        }\n        rbx++;\n        edx = *((rax + rbx));\n    } while (dl != 0);\nlabel_92:\n    if (r14 <= rbx) {\n        goto label_44;\n    }\n    *((r15 + rbx)) = 0;\n    goto label_44;\nlabel_55:\n    r13d = r11d;\n    r11 = r9;\n    goto label_12;\nlabel_62:\n    r13d = r11d;\n    r11 = r9;\n    rsp + 8 = (r13d == 2) ? 1 : 0;\n    goto label_12;\nlabel_73:\n    rax = fcn_00403e50 (r15, *((rsp + 0x78)), *((rsp + 0x40)), r11, 5, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\n    goto label_44;\nlabel_74:\n    edx = *((rsp + 0x6d));\n    goto label_45;\nlabel_71:\n    r13d = 2;\n    goto label_12;\nlabel_84:\n    r10d = 0;\n    eax = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x58)) = 0;\n    goto label_46;\nlabel_80:\n    rdx = r14;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_88:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x40f1d4;\n    goto label_21;\nlabel_60:\n    r13d = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00405080",
            "funcStartAddr": "0x405080",
            "funcEndAddr": "0x408169",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x405080 */\n#include <stdint.h>\n \nuint64_t fcn_00405080 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_30h;\n    int64_t var_18h;\n    int64_t var_24h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    do {\n        abort ();\n        r15 = (int64_t) edi;\n        r14 = rdx;\n        *((rsp + 8)) = rsi;\n        rax = errno_location ();\n        rbx = *(0x00612318);\n        r13 = rax;\n        eax = *(rax);\n        *((rsp + 0x18)) = eax;\n    } while (r15d < 0);\n    if (*(0x00612330) > r15d) {\n        goto label_0;\n    }\n    if (r15d == 0x7fffffff) {\n        goto label_1;\n    }\n    r12d = r15 + 1;\n    rsi = (int64_t) r12d;\n    rsi <<= 4;\n    if (rbx == 0x612320) {\n        goto label_2;\n    }\n    rax = fcn_00406320 (rbx, rsi);\n    *(0x00612318) = rax;\n    rbx = rax;\n    do {\n        rdi = *(0x00612330);\n        edx -= edi;\n        rdi <<= 4;\n        rdx = (int64_t) edx;\n        rdi += rbx;\n        rdx <<= 4;\n        memset (rdi, 0, r12d);\n        *(0x00612330) = r12d;\nlabel_0:\n        eax = *((rbp + 4));\n        r15 <<= 4;\n        rbx += r15;\n        r15 = rbp + 8;\n        eax |= 1;\n        r11 = *(rbx);\n        r12 = *((rbx + 8));\n        *((rsp + 0x24)) = eax;\n        rsi = r11;\n        *((rsp + 0x30)) = r11;\n        rax = fcn_00403e50 (r12, rsi, *((rsp + 0x28)), r14, *(rbp), eax);\n        r11 = *((rsp + 0x10));\n        if (r11 <= rax) {\n            rsi = rax + 1;\n            *(rbx) = rsi;\n            if (r12 != 0x6123c0) {\n                *((rsp + 0x10)) = rsi;\n                free (r12);\n                rsi = *((rsp + 0x10));\n            }\n            *((rsp + 0x10)) = rsi;\n            rax = fcn_004062c0 (*((rsp + 0x10)));\n            *((rbx + 8)) = rax;\n            rdi = rax;\n            r12 = rax;\n            fcn_00403e50 (rdi, *((rsp + 0x30)), *((rsp + 0x28)), r14, *(rbp), *((rsp + 0x3c)));\n        }\n        eax = *((rsp + 0x18));\n        *(r13) = eax;\n        rax = r12;\n        return rax;\nlabel_2:\n        rax = fcn_00406320 (0, rsi);\n        __asm (\"movdqa xmm0, xmmword [0x00612320]\");\n        rbx = rax;\n        *(0x00612318) = rax;\n        __asm (\"movups xmmword [rax], xmm0\");\n    } while (1);\nlabel_1:\n    return fcn_00406510 ();\n}\n"
        },
        {
            "funcName": "fcn_004055a0",
            "funcStartAddr": "0x4055a0",
            "funcEndAddr": "0x408a6e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x4055a0 */\n#include <stdint.h>\n \nint64_t fcn_004055a0 (int64_t arg1, uint32_t arg2, int64_t arg3) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    do {\n        abort ();\n    } while (esi == 0xa);\n    rax = rdx;\n    *(rsp) = esi;\n    *((rsp + 4)) = 0;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x30)) = 0;\n    fcn_00405080 (rdi, rax, 0xffffffffffffffff, rsp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405680",
            "funcStartAddr": "0x405680",
            "funcEndAddr": "0x40568c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x405680 */\n#include <stdint.h>\n \nvoid fcn_00405680 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = rsi;\n    esi = edi;\n    edi = 0;\n    return void (*0x4055a0)() ();\n}\n"
        },
        {
            "funcName": "fcn_00405720",
            "funcStartAddr": "0x405720",
            "funcEndAddr": "0x4057b1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x405720 */\n#include <stdint.h>\n \nint64_t fcn_00405720 (int64_t arg1, int64_t arg7, int64_t arg8, int64_t arg9) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_20h;\n    int64_t var_30h;\n    rdi = arg1;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    xmm2 = arg9;\n    do {\n        rax = imp.__libc_start_main;\n        ecx = edx;\n        __asm (\"movdqa xmm0, xmmword [0x006124c0]\");\n        __asm (\"movdqa xmm1, xmmword [0x006124d0]\");\n        __asm (\"movdqa xmm2, xmmword [0x006124e0]\");\n        ecx &= 0x1f;\n        *((rsp + 0x30)) = rax;\n        eax = edx;\n        al >>= 5;\n        *(rsp) = xmm0;\n        eax = (int32_t) al;\n        *((rsp + 0x10)) = xmm1;\n        r8 = rsp + rax*4 + 8;\n        *((rsp + 0x20)) = xmm2;\n        edx = *(r8);\n        eax = *(r8);\n        eax >>= cl;\n        eax = ~eax;\n        eax &= 1;\n        eax <<= cl;\n        eax ^= edx;\n        *(r8) = eax;\n        fcn_00405080 (0, rdi, rsi, rsp);\n        return rax;\n        edx = 0x3a;\n        rsi = 0xffffffffffffffff;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00405750",
            "funcStartAddr": "0x405750",
            "funcEndAddr": "0x408dca",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x405750 */\n#include <stdint.h>\n \nint64_t fcn_00405750 (int64_t arg1, uint32_t arg2, int64_t arg3) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    do {\n        abort ();\n    } while (esi == 0xa);\n    rcx = 0x400000000000000;\n    rax = rdx;\n    *(rsp) = esi;\n    *((rsp + 8)) = rcx;\n    *((rsp + 4)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x30)) = 0;\n    fcn_00405080 (rdi, rax, 0xffffffffffffffff, rsp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004058d0",
            "funcStartAddr": "0x4058d0",
            "funcEndAddr": "0x4058e6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x4058d0 */\n#include <stdint.h>\n \nvoid fcn_004058d0 (int64_t arg1) {\n    rdi = arg1;\n    rsi = rdi;\n    ecx = 0x6122e0;\n    rdx = 0xffffffffffffffff;\n    edi = 0;\n    return void (*0x405080)() ();\n}\n"
        },
        {
            "funcName": "fcn_004058f0",
            "funcStartAddr": "0x4058f0",
            "funcEndAddr": "0x40593b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x4058f0 */\n#include <stdint.h>\n \nuint64_t fcn_004058f0 (int64_t arg1) {\n    int64_t var_8h;\n    rdi = arg1;\n    esi = 0x40efb1;\n    rbx = rdi;\n    edi = 1;\n    rdx = rsp;\n    eax = lxstat ();\n    if (eax == 0) {\n        rax = *((rsp + 8));\n        *(rbx) = rax;\n        rax = *(rsp);\n        *((rbx + 8)) = rax;\n        rax = rbx;\n        return rax;\n    }\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405c50",
            "funcStartAddr": "0x405c50",
            "funcEndAddr": "0x40602d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x405c50 */\n#include <stdint.h>\n \nuint64_t fcn_00405c50 (uint32_t arg1, char ** arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_ch;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\nlabel_7:\n    r10 = rsi;\n    r15d = 0xffffffff;\n    r13 = r9;\n    r12 = r8;\n    eax = *(rdx);\n    *((rsp + 0x10)) = rdx;\n    *((rsp + 0xc)) = eax;\n    if (rcx != 0) {\n        r15d = *(rcx);\n    }\n    if (r12 != 0) {\n        *(r12) = 0;\n    }\n    if (r13 != 0) {\n        *(r13) = 0;\n    }\n    if (r10 == 0) {\n        goto label_8;\n    }\n    r14 = r10;\n    r14 -= rdi;\n    if (r14 != 0) {\n        goto label_9;\n    }\n    r14 = r10 + 1;\n    if (*((r10 + 1)) == 0) {\n        goto label_10;\n    }\n    do {\n        ebx = 0;\n        if (r14 != 0) {\nlabel_4:\n            if (*(r14) == 0x2b) {\n                goto label_11;\n            }\nlabel_1:\n            rdi = r14;\n            rax = getgrnam ();\n            if (rax == 0) {\n                goto label_11;\n            }\n            r15d = *((rax + 0x10));\nlabel_2:\n            endgrent ();\n            rax = fcn_004064f0 (r14);\n            r14 = rax;\n        }\nlabel_0:\n        rax = *((rsp + 0x10));\n        ecx = *((rsp + 0xc));\n        *(rax) = ecx;\n        if (rbp != 0) {\n            *(rbp) = r15d;\n        }\n        if (r12 != 0) {\n            *(r12) = rbx;\n            ebx = 0;\n        }\n        if (r13 != 0) {\n            *(r13) = r14;\n            r14d = 0;\n        }\n        free (rbx);\n        eax = free (r14);\n        eax = 0;\n        return rax;\nlabel_9:\n        *((rsp + 0x18)) = r10;\n        rax = fcn_004064c0 (rdi, r14 + 1);\n        r10 = *((rsp + 0x18));\n        *((rax + r14)) = 0;\n        rbx = rax;\n        if (*((r10 + 1)) == 0) {\n            goto label_12;\n        }\n        r14 = r10 + 1;\n    } while (rax == 0);\n    dl = (r14 == 0) ? 1 : 0;\n    al = (r10 != 0) ? 1 : 0;\n    edx &= eax;\n    if (*(rbx) == 0x2b) {\n        goto label_13;\n    }\nlabel_3:\n    rdi = rbx;\n    *((rsp + 0xc)) = dl;\n    rax = getpwnam ();\n    edx = *((rsp + 0xc));\n    if (rax == 0) {\n        goto label_13;\n    }\n    ecx = *((rax + 0x10));\n    *((rsp + 0xc)) = ecx;\n    if (dl != 0) {\n        goto label_14;\n    }\n    endpwent ();\n    if (r14 == 0) {\n        goto label_0;\n    }\n    if (*(r14) != 0x2b) {\n        goto label_1;\n    }\nlabel_11:\n    eax = fcn_004065d0 (r14, 0, 0xa, rsp + 0x20, 0x40ef77);\n    if (eax != 0) {\n        goto label_15;\n    }\n    r15 = *((rsp + 0x20));\n    eax = 0xfffffffe;\n    if (r15 <= rax) {\n        goto label_2;\n    }\nlabel_15:\n    endgrent ();\n    r12d = \"invalid group\";\n    rax = fcn_004064f0 (r14);\n    goto label_5;\nlabel_8:\n    ebx = 0;\n    r14d = 0;\n    if (*(rdi) == 0) {\n        goto label_0;\n    }\n    *((rsp + 0x18)) = r10;\n    rax = fcn_004064f0 (rdi);\n    r10 = *((rsp + 0x18));\n    rbx = rax;\nlabel_12:\n    if (rbx == 0) {\n        goto label_16;\n    }\n    r14d = 0;\n    edx = 1;\n    al = (r10 != 0) ? 1 : 0;\n    edx &= eax;\n    if (*(rbx) != 0x2b) {\n        goto label_3;\n    }\nlabel_13:\n    if (dl != 0) {\n        endpwent ();\n        r12d = \"invalid spec\";\n        ebp = 0;\nlabel_5:\n        free (rbx);\n        free (rbp);\n        edx = 5;\n        dcgettext (0, r12);\n        return rax;\nlabel_10:\n        ebx = 0;\nlabel_16:\n        r14d = 0;\n        goto label_0;\nlabel_14:\n        r15d = *((rax + 0x14));\n        edi = *((rax + 0x14));\n        rax = getgrgid ();\n        if (rax == 0) {\n            goto label_17;\n        }\nlabel_6:\n        rax = fcn_004064f0 (*(rax));\n        r14 = rax;\n        endgrent ();\n        endpwent ();\n        goto label_0;\n    }\n    eax = fcn_004065d0 (rbx, 0, 0xa, rsp + 0x20, 0x40ef77);\n    if (eax != 0) {\n        goto label_18;\n    }\n    rax = *((rsp + 0x20));\n    edx = 0xfffffffe;\n    *((rsp + 0xc)) = eax;\n    if (rax > rdx) {\n        goto label_18;\n    }\n    endpwent ();\n    if (r14 == 0) {\n        goto label_0;\n    }\n    goto label_4;\nlabel_18:\n    endpwent ();\n    r12d = \"invalid user\";\n    ebp = 0;\n    goto label_5;\nlabel_17:\n    rax = fcn_00403c60 (r15d, rsp + 0x20, rdx);\n    rdi = rax;\n    goto label_6;\n    if (rdx == 0) {\n        goto label_19;\n    }\n    r14 = rsi;\n    r13 = r8;\n    r12 = rcx;\n    rbx = rdi;\n    rax = strchr (rdi, 0x3a);\n    r9 = r13;\n    rsi = rax;\n    r15 = rax;\n    rax = void (*0x405940)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t) (rbx, rsi, r14, rbp, r12);\n    goto label_7;\n    r10 = rax;\n    if (r15 != 0) {\n        goto label_20;\n    }\n    *((rsp + 8)) = rax;\n    if (rax == 0) {\n        goto label_21;\n    }\n    rax = strchr (rbx, 0x2e);\n    r10 = *((rsp + 8));\n    if (rax == 0) {\n        goto label_20;\n    }\n    r9 = r13;\n    rax = void (*0x405940)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t) (rbx, rax, r14, rbp, r12);\n    goto label_7;\n    r10 = *((rsp + 8));\n    while (1) {\nlabel_20:\n        rax = r10;\n        return rax;\nlabel_19:\n        r9 = r8;\n        rdx = rsi;\n        r8 = rcx;\n        esi = 0;\n        ecx = 0;\n        goto label_7;\nlabel_21:\n        r10d = 0;\n    }\n}\n"
        },
        {
            "funcName": "fcn_00405d20",
            "funcStartAddr": "0x405d20",
            "funcEndAddr": "0x409cd4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x405d20 */\n#include <stdint.h>\n \nvoid fcn_00405d20 (int64_t arg_20h, int64_t arg_30h, int64_t arg_8h_2, int64_t arg_10h, int64_t arg_8h, int64_t arg_8h_3, int64_t arg_10h_2, int64_t arg_18h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_30h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    eax = abort ();\n    r12 = r9;\n    rbx = r8;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    r9 = rcx;\n    r8 = rdx;\n    rcx = rsi;\n    edx = \"%s (%s) %s\\n\";\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    do {\n        edx = 5;\n        rax = dcgettext (0, 0x40e6f3);\n        r8d = 0x7e1;\n        edx = \"Copyright %s %d Free Software Foundation, Inc.\";\n        rdi = rbp;\n        rcx = rax;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        edx = 5;\n        rax = dcgettext (0, \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\");\n        rsi = rbp;\n        rdi = rax;\n        eax = fputs_unlocked ();\n        if (r12 > 9) {\n            goto label_2;\n        }\n        /* switch table (10 cases) at 0x40e9e0 */\nlabel_1:\n        r8 = rcx;\n        esi = 1;\n        rcx = rdx;\n        eax = 0;\n        edx = \"%s %s\\n\";\n        fprintf_chk ();\n    } while (1);\n    r9 = *((rbx + 0x38));\n    rax = *((rbx + 0x10));\n    edx = 5;\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    r15 = *((rbx + 0x20));\n    *((rsp + 0x10)) = r9;\n    r14 = *((rbx + 0x18));\n    rbx = *(rbx);\n    *(rsp) = rax;\n    *((rsp + 8)) = r8;\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n    do {\n        r9 = *((rsp + 0x18));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        r9 = *((rsp + 0x30));\n        r8 = *((rsp + 0x38));\n        fprintf_chk ();\n        return rax;\n        r10 = *((rbx + 0x40));\n        r9 = *((rbx + 0x38));\n        edx = 5;\n        rax = *((rbx + 0x10));\n        r8 = *((rbx + 8));\n        r13 = *((rbx + 0x30));\n        r12 = *((rbx + 0x28));\n        *((rsp + 0x18)) = r10;\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        *((rsp + 0x10)) = r9;\n        *(rsp) = rax;\n        rbx = *(rbx);\n        *((rsp + 8)) = r8;\nlabel_0:\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        r10 = *((rsp + 0x18));\n    } while (1);\n    rbx = *(rbx);\n    edx = 5;\n    rax = dcgettext (0, \"Written by %s.\\n\");\n    rdi = rbp;\n    esi = 1;\n    rcx = rbx;\n    rdx = rax;\n    eax = 0;\n    void (*0x4020e0)() ();\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s and %s.\\n\");\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x4020e0)() ();\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, and %s.\\n\");\n    r9 = r13;\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x4020e0)() ();\n    edx = 5;\n    r14 = *((rbx + 0x18));\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\nand %s.\\n\");\n    do {\n        rdx = rax;\n        r9 = r13;\n        r8 = r12;\n        rcx = rbx;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r15 = *((rbx + 0x20));\n        edx = 5;\n        r14 = *((rbx + 0x18));\n        r13 = *((rbx + 0x10));\n        r12 = *((rbx + 8));\n        rbx = *(rbx);\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n    } while (1);\n    r8 = *((rbx + 8));\n    r12 = *((rbx + 0x28));\n    edx = 5;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *(rsp) = r8;\n    r13 = *((rbx + 0x10));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n    r9 = r13;\n    do {\n        r8 = *((rsp + 0x20));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r9 = *((rbx + 0x10));\n        r13 = *((rbx + 0x30));\n        edx = 5;\n        r12 = *((rbx + 0x28));\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        r8 = *((rbx + 8));\n        *((rsp + 8)) = r9;\n        rbx = *(rbx);\n        *(rsp) = r8;\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n        r9 = *((rsp + 0x28));\n    } while (1);\nlabel_2:\n    r10 = *((rbx + 0x40));\n    r9 = *((rbx + 0x38));\n    edx = 5;\n    esi = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    rax = *((rbx + 0x10));\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    *((rsp + 0x18)) = r10;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *((rsp + 0x10)) = r9;\n    *(rsp) = rax;\n    rbx = *(rbx);\n    *((rsp + 8)) = r8;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00406180",
            "funcStartAddr": "0x406180",
            "funcEndAddr": "0x40623c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x406180 */\n#include <stdint.h>\n \nuint64_t fcn_00406180 (int64_t arg_b0h, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_70h;\n    int64_t var_90h;\n    int64_t var_98h;\n    r8 = arg5;\n    r9 = arg6;\n    r11d = 0;\n    rax = rsp + 0xb0;\n    *((rsp + 0x90)) = r8;\n    r10 = rsp + 0xb0;\n    r8d = 0x20;\n    *((rsp + 0x10)) = rax;\n    rax = rsp + 0x70;\n    *((rsp + 0x98)) = r9;\n    r9d = 0;\n    *((rsp + 8)) = 0x20;\n    *((rsp + 0x18)) = rax;\n    while (r8d <= 0x2f) {\n        eax = r8d;\n        r11 = rsp + 0x70;\n        r8d += 8;\n        rax += r11;\n        r11d = 1;\n        rax = *(rax);\n        *((rsp + r9*8 + 0x20)) = rax;\n        if (rax == 0) {\n            goto label_1;\n        }\nlabel_0:\n        r9++;\n        if (r9 == 0xa) {\n            goto label_1;\n        }\n    }\n    rax = r10;\n    r10 += 8;\n    rax = *(rax);\n    *((rsp + r9*8 + 0x20)) = rax;\n    if (rax != 0) {\n        goto label_0;\n    }\nlabel_1:\n    if (r11b != 0) {\n        *((rsp + 8)) = r8d;\n    }\n    fcn_00405d20 (rdi, rsi, rdx, rcx, rsp + 0x20, r9);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004062c0",
            "funcStartAddr": "0x4062c0",
            "funcEndAddr": "0x4062da",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x4062c0 */\n#include <stdint.h>\n \nuint64_t fcn_004062c0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = malloc (rdi);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    return fcn_00406510 ();\n}\n"
        },
        {
            "funcName": "fcn_00406320",
            "funcStartAddr": "0x406320",
            "funcEndAddr": "0x406356",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x406320 */\n#include <stdint.h>\n \nuint64_t fcn_00406320 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rsi;\n    if (rsi == 0) {\n        if (rdi != 0) {\n            goto label_0;\n        }\n    }\n    rax = realloc (rdi, rbx);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_1;\n        }\n    }\n    return rax;\nlabel_0:\n    eax = free (rdi);\n    eax = 0;\n    return rax;\nlabel_1:\n    return fcn_00406510 ();\n}\n"
        },
        {
            "funcName": "fcn_004064c0",
            "funcStartAddr": "0x4064c0",
            "funcEndAddr": "0x4064e8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x4064c0 */\n#include <stdint.h>\n \nuint64_t fcn_004064c0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdi = rsi;\n    rbx = rsi;\n    rax = fcn_004062c0 (rdi);\n    rdx = rbx;\n    rsi = rbp;\n    rdi = rax;\n    return memcpy ();\n}\n"
        },
        {
            "funcName": "fcn_004064f0",
            "funcStartAddr": "0x4064f0",
            "funcEndAddr": "0x406503",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x4064f0 */\n#include <stdint.h>\n \nvoid fcn_004064f0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    strlen (rdi);\n    rdi = rbx;\n    rsi = rax + 1;\n    return void (*0x4064c0)() ();\n}\n"
        },
        {
            "funcName": "fcn_00406510",
            "funcStartAddr": "0x406510",
            "funcEndAddr": "0x406541",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x406510 */\n#include <stdint.h>\n \nuint64_t fcn_00406510 (void) {\n    edx = 5;\n    rax = dcgettext (0, \"memory exhausted\");\n    rcx = rax;\n    eax = 0;\n    error (*(0x006122d8), 0, 0x40c716);\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_00406550",
            "funcStartAddr": "0x406550",
            "funcEndAddr": "0x406599",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x406550 */\n#include <stdint.h>\n \nuint64_t fcn_00406550 (int64_t arg2) {\n    rsi = arg2;\n    esi |= 0x200;\n    rax = fts_open ();\n    if (rax != 0) {\n        return rax;\n    }\n    rax = errno_location ();\n    if (*(rax) != 0x16) {\n        fcn_00406510 ();\n    }\n    return assert_fail (\"errno != EINVAL\", \"lib/xfts.c\", 0x29, \"xfts_open\");\n}\n"
        },
        {
            "funcName": "fcn_004065a0",
            "funcStartAddr": "0x4065a0",
            "funcEndAddr": "0x4065c9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x4065a0 */\n#include <stdint.h>\n \nint32_t fcn_004065a0 (int64_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edx = *((rdi + 0x48));\n    eax = 1;\n    edx &= 0x11;\n    if (edx != 0x10) {\n        eax = 0;\n        if (edx == 0x11) {\n            goto label_0;\n        }\n    }\n    return eax;\nlabel_0:\n    al = (*((rsi + 0x58)) != 0) ? 1 : 0;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_004065d0",
            "funcStartAddr": "0x4065d0",
            "funcEndAddr": "0x4069f4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x4065d0 */\n#include <stdint.h>\n \nuint64_t fcn_004065d0 (int64_t arg1, int64_t arg2, uint32_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_8h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    if (edx > 0x24) {\n        goto label_13;\n    }\n    r15 = rsi;\n    rax = rsp + 0x18;\n    *(rsp) = edx;\n    r14 = rcx;\n    r13 = r8;\n    if (rsi == 0) {\n        r15 = rax;\n    }\n    errno_location ();\n    *(rax) = 0;\n    r12 = rax;\n    ebx = *(rbp);\n    rax = ctype_b_loc ();\n    edx = *(rsp);\n    rsi = *(rax);\n    rax = rbp;\n    while ((*((rsi + rcx*2 + 1)) & 0x20) != 0) {\n        rax++;\n        ebx = *(rax);\n        ecx = (int32_t) bl;\n    }\n    if (bl == 0x2d) {\n        goto label_1;\n    }\n    rax = strtoul (rbp, r15, rdx);\n    r8 = *(r15);\n    rbx = rax;\n    if (r8 == rbp) {\n        goto label_14;\n    }\n    eax = *(r12);\n    if (eax != 0) {\n        goto label_15;\n    }\n    ebp = 0;\n    do {\n        if (r13 != 0) {\n            r12d = *(r8);\n            if (r12b != 0) {\n                goto label_16;\n            }\n        }\nlabel_2:\n        *(r14) = rbx;\nlabel_0:\n        eax = ebp;\n        return rax;\nlabel_15:\n    } while (eax == 0x22);\n    do {\nlabel_1:\n        goto label_0;\nlabel_14:\n        *(rsp) = r8;\n    } while (r13 == 0);\n    r12d = *(rbp);\n    if (r12b == 0) {\n        goto label_1;\n    }\n    esi = (int32_t) r12b;\n    ebp = 0;\n    ebx = 1;\n    rax = strchr (r13, rsi);\n    r8 = *(rsp);\n    if (rax == 0) {\n        goto label_1;\n    }\nlabel_4:\n    edx = r12 - 0x45;\n    if (dl <= 0x2f) {\n        rax = 0x814400308945;\n        *(rsp) = dl;\n        if (((rax >> rdx) & 1) >= 0) {\n            goto label_17;\n        }\n        *((rsp + 8)) = r8;\n        rax = strchr (r13, 0x30);\n        r8 = *((rsp + 8));\n        if (rax == 0) {\n            goto label_17;\n        }\n        eax = *((r8 + 1));\n        if (al == 0x44) {\n            goto label_18;\n        }\n        if (al == 0x69) {\n            goto label_19;\n        }\n        edx = *(rsp);\n        if (al == 0x42) {\n            goto label_18;\n        }\n        /* switch table (67 cases) at 0x40eae0 */\n    }\nlabel_17:\n    esi = 1;\n    edx = 0x400;\nlabel_7:\n    r12d -= 0x42;\n    if (r12b > 0x35) {\n        goto label_20;\n    }\n    r12d = (int32_t) r12b;\n    /* switch table (54 cases) at 0x40ec60 */\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    rax = rbx;\n    rdx:rax = rax * rcx;\n    if (r12b overflow 0x35) {\n        goto label_5;\n    }\n    rdx:rax = rax * rcx;\n    if (r12b overflow 0x35) {\n        goto label_5;\n    }\n    rbx = rax;\n    do {\nlabel_3:\n        rsi = (int64_t) esi;\n        eax = ebp;\n        r8 += rsi;\n        eax |= 2;\n        *(r15) = r8;\n        if (*(r8) != 0) {\n        }\n        goto label_2;\n        esi = 1;\n        edx = 0x400;\n        rax = rbx;\n        rdx:rax = rax * rdx;\n        rbx = rax;\n    } while (*(r8) !overflow 0);\nlabel_5:\n    rbx |= 0xffffffffffffffff;\n    goto label_3;\nlabel_16:\n    esi = (int32_t) r12b;\n    *(rsp) = r8;\n    rax = strchr (r13, rsi);\n    r8 = *(rsp);\n    if (rax != 0) {\n        goto label_4;\n    }\nlabel_20:\n    *(r14) = rbx;\n    ebp |= 2;\n    goto label_0;\n    if (rbx < 0) {\n        goto label_5;\n    }\n    rbx += rbx;\n    goto label_3;\n    esi = 1;\n    rax = rbx;\n    rax >>= 0x37;\n    if (rax != 0) {\n        goto label_5;\n    }\n    rbx <<= 9;\n    goto label_3;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 7;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (rbx overflow 0) {\n            goto label_21;\n        }\nlabel_8:\n        edi--;\n    } while (edi != 0);\nlabel_6:\n    ebp |= r9d;\n    goto label_3;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 8;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (ebp overflow 0) {\n            goto label_22;\n        }\nlabel_11:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 4;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_23;\n        }\nlabel_9:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 5;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_24;\n        }\nlabel_12:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    edi = 6;\n    r9d = 0;\n    do {\n        rax = rbx;\n        rdx:rax = rax * rcx;\n        rbx = rax;\n        if (edi overflow 0) {\n            goto label_25;\n        }\nlabel_10:\n        edi--;\n    } while (edi != 0);\n    goto label_6;\n    esi = 1;\n    edx = 0x400;\n    rcx = (int64_t) edx;\n    rax = rbx;\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rdx:rax = rax * rcx;\n    if (edi overflow 0) {\n        goto label_26;\n    }\n    rbx = rax;\n    eax = 0;\n    ebp |= eax;\n    goto label_3;\n    rax = rbx;\n    rax >>= 0x36;\n    if (rax != 0) {\n        goto label_5;\n    }\n    rbx <<= 0xa;\n    goto label_3;\n    esi = 1;\n    goto label_3;\nlabel_18:\n    esi = 2;\n    edx = 0x3e8;\n    goto label_7;\nlabel_19:\n    esi = 0;\n    edx = 0x400;\n    sil = (*((r8 + 2)) == 0x42) ? 1 : 0;\n    esi = rsi + rsi + 1;\n    goto label_7;\nlabel_21:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_8;\nlabel_26:\n    eax = 1;\n    rbx |= 0xffffffffffffffff;\n    ebp |= eax;\n    goto label_3;\nlabel_23:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_9;\nlabel_25:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_10;\nlabel_22:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_11;\nlabel_24:\n    r9d = 1;\n    rbx |= 0xffffffffffffffff;\n    goto label_12;\nlabel_13:\n    return assert_fail (\"0 <= strtol_base && strtol_base <= 36\", \"lib/xstrtol.c\", 0x60, \"xstrtoul\");\n}\n"
        },
        {
            "funcName": "fcn_00406a00",
            "funcStartAddr": "0x406a00",
            "funcEndAddr": "0x406c6e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x406a00 */\n#include <stdint.h>\n \nuint64_t fcn_00406a00 (uint32_t arg1, void * arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_ch;\n    uint32_t var_10h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    if ((r8d & 0xfffffeff) != 0) {\n        goto label_4;\n    }\n    ebx = edi;\n    r12 = rsi;\n    r14d = edx;\n    r15d = ecx;\n    if (edi == 0xffffff9c) {\n        goto label_5;\n    }\n    if (*(rsi) == 0x2f) {\n        goto label_5;\n    }\n    rax = fcn_00409d90 (rsp + 0x10, edi, rsi);\n    if (rax != 0) {\n        edx = r15d;\n        esi = r14d;\n        rdi = rax;\n        *(rsp) = rax;\n        if (ebp == 0x100) {\n            goto label_6;\n        }\n        eax = chown ();\n        rcx = *(rsp);\n        r13d = eax;\nlabel_3:\n        *(rsp) = rcx;\n        rax = errno_location ();\n        rcx = *(rsp);\n        rdx = rsp + 0x10;\n        esi = *(rax);\n        if (rcx != rdx) {\n            *((rsp + 0xc)) = esi;\n            *(rsp) = rax;\n            free (rcx);\n            esi = *((rsp + 0xc));\n            rax = *(rsp);\n        }\n        if (r13d != 0xffffffff) {\n            goto label_1;\n        }\n        if (esi > 0x26) {\n            goto label_7;\n        }\n        rcx = 0x4000102006;\n        if (((rcx >> rsi) & 1) >= 0) {\n            goto label_8;\n        }\n    }\nlabel_0:\n    eax = fcn_0040b990 (rsp + 0x10);\n    if (eax != 0) {\n        goto label_9;\n    }\n    if (ebx >= 0) {\n        if (*((rsp + 0x10)) == ebx) {\n            goto label_10;\n        }\n    }\n    edi = ebx;\n    eax = fchdir ();\n    if (eax != 0) {\n        goto label_11;\n    }\n    edx = r15d;\n    esi = r14d;\n    rdi = r12;\n    if (ebp == 0x100) {\n        goto label_12;\n    }\n    eax = chown ();\n    r13d = eax;\nlabel_2:\n    if (r13d == 0xffffffff) {\n        goto label_13;\n    }\n    eax = fcn_0040b9e0 (rsp + 0x10);\n    if (eax != 0) {\n        goto label_14;\n    }\n    fcn_0040ba00 (rsp + 0x10);\n    do {\nlabel_1:\n        eax = r13d;\n        return rax;\nlabel_5:\n        edx = r15d;\n        esi = r14d;\n        rdi = r12;\n        if (ebp == 0x100) {\n            goto label_15;\n        }\n        eax = chown ();\n        r13d = eax;\n    } while (1);\nlabel_7:\n    if (esi == 0x5f) {\n        goto label_0;\n    }\nlabel_8:\n    *(rax) = esi;\n    goto label_1;\nlabel_12:\n    eax = lchown ();\n    r13d = eax;\n    goto label_2;\nlabel_15:\n    eax = lchown ();\n    r13d = eax;\n    goto label_1;\nlabel_6:\n    eax = lchown ();\n    rcx = *(rsp);\n    r13d = eax;\n    goto label_3;\nlabel_13:\n    rax = errno_location ();\n    rbx = rax;\n    ebp = *(rax);\n    eax = fcn_0040b9e0 (rsp + 0x10);\n    if (eax != 0) {\n        goto label_14;\n    }\n    fcn_0040ba00 (rsp + 0x10);\n    if (ebp == 0) {\n        goto label_1;\n    }\n    *(rbx) = ebp;\n    goto label_1;\nlabel_11:\n    rax = errno_location ();\n    r13d = 0xffffffff;\n    ebp = *(rax);\n    rbx = rax;\n    fcn_0040ba00 (rsp + 0x10);\n    *(rbx) = ebp;\n    goto label_1;\nlabel_10:\n    r13d = 0xffffffff;\n    fcn_0040ba00 (rsp + 0x10);\n    errno_location ();\n    *(rax) = 9;\n    goto label_1;\nlabel_4:\n    errno_location ();\n    r13d = 0xffffffff;\n    *(rax) = 0x16;\n    goto label_1;\nlabel_14:\n    rax = errno_location ();\n    fcn_0040b910 (*(rax));\nlabel_9:\n    rax = errno_location ();\n    return fcn_0040b8e0 (*(rax));\n}\n"
        },
        {
            "funcName": "fcn_00406cf0",
            "funcStartAddr": "0x406cf0",
            "funcEndAddr": "0x406e9a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x406cf0 */\n#include <stdint.h>\n \nuint64_t fcn_00406cf0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r12 = rdi;\n    rbp = rsi + 0x78;\n    rbx = rsi;\n    eax = *((rdi + 0x48));\n    rsi = *((rsi + 0x30));\n    if (*((rbx + 0x58)) != 0) {\n        goto label_4;\n    }\n    while ((al & 2) != 0) {\nlabel_0:\n        rdx = rbp;\n        edi = 1;\n        eax = xstat ();\n        if (eax == 0) {\n            goto label_5;\n        }\n        rax = errno_location ();\n        r12 = rax;\n        eax = *(rax);\n        if (eax != 2) {\n            goto label_2;\n        }\n        rsi = *((rbx + 0x30));\n        rdx = rbp;\n        edi = 1;\n        eax = lxstat ();\n        if (eax != 0) {\n            goto label_6;\n        }\n        *(r12) = 0;\n        eax = 0xd;\n        return rax;\nlabel_4:\n    }\n    if (dl != 0) {\n        goto label_0;\n    }\n    rdx = rsi;\n    esi = *((r12 + 0x2c));\n    r8d = 0x100;\n    rcx = rbp;\n    edi = 1;\n    eax = fxstatat ();\n    if (eax != 0) {\n        goto label_7;\n    }\nlabel_5:\n    eax = *((rbx + 0x90));\n    eax &= 0xf000;\n    if (eax == 0x4000) {\n        goto label_8;\n    }\n    if (eax == 0xa000) {\n        goto label_9;\n    }\n    al = (eax == 0x8000) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = rax * 5;\n    do {\nlabel_1:\n        return rax;\nlabel_7:\n        rax = errno_location ();\n        eax = *(rax);\nlabel_2:\n        rdi = rbp + 8;\n        *((rbx + 0x40)) = eax;\n        eax = 0;\n        rdi &= 0xfffffffffffffff8;\n        *((rbx + 0x78)) = 0;\n        *((rbp + 0x88)) = 0;\n        rbp -= rdi;\n        ecx = rbp + 0x90;\n        ecx >>= 3;\n        *(rdi) = rax;\n        rcx--;\n        rdi += 8;\n        eax = 0xa;\n        return rax;\nlabel_8:\n        rax = *((rbx + 0x88));\n        if (rax <= 1) {\n            goto label_10;\n        }\n        if (*((rbx + 0x58)) <= 0) {\n            goto label_10;\n        }\n        rdx = rax - 2;\n        if ((*((r12 + 0x48)) & 0x20) == 0) {\n            rax = rdx;\n        }\nlabel_3:\n        *((rbx + 0x68)) = rax;\n        eax = 1;\n    } while (*((rbx + 0x108)) != 0x2e);\n    if (*((rbx + 0x109)) == 0) {\n        goto label_11;\n    }\n    edx = *((rbx + 0x108));\n    edx &= 0xffff00;\n    if (edx != 0x2e00) {\n        goto label_1;\n    }\nlabel_11:\n    eax -= eax;\n    eax &= 0xfffffffc;\n    eax += 5;\n    goto label_1;\nlabel_6:\n    eax = *(r12);\n    goto label_2;\nlabel_10:\n    rax = 0xffffffffffffffff;\n    goto label_3;\nlabel_9:\n    eax = 0xc;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00406ea0",
            "funcStartAddr": "0x406ea0",
            "funcEndAddr": "0x406f9d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x406ea0 */\n#include <stdint.h>\n \nint64_t fcn_00406ea0 (int64_t arg1, uint32_t arg2, uint32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r12 = rdx;\n    rbx = rsi;\n    r13 = *((rdi + 0x40));\n    rdi = *((rdi + 0x10));\n    if (*((rbp + 0x38)) < rdx) {\n        rax = 0x1fffffffffffffff;\n        rsi = rdx + 0x28;\n        *((rbp + 0x38)) = rsi;\n        if (rsi > rax) {\n            goto label_0;\n        }\n        rsi <<= 3;\n        rax = realloc (rdi, rsi);\n        rdi = rax;\n        if (rax == 0) {\n            goto label_1;\n        }\n        *((rbp + 0x10)) = rax;\n    }\n    rdx = rdi;\n    if (rbx == 0) {\n        goto label_2;\n    }\n    do {\n        rdx += 8;\n        *((rdx - 8)) = rbx;\n        rbx = *((rbx + 0x10));\n    } while (rbx != 0);\nlabel_2:\n    rcx = r13;\n    edx = 8;\n    rsi = r12;\n    qsort ();\n    r8 = *((rbp + 0x10));\n    rcx = r12;\n    rax = *(r8);\n    rdx = r8;\n    rsi = rax;\n    rcx--;\n    if (rcx != 0) {\n        goto label_3;\n    }\n    goto label_4;\n    do {\n        rsi = *(rdx);\nlabel_3:\n        rdi = *((rdx + 8));\n        rdx += 8;\n        *((rsi + 0x10)) = rdi;\n        rcx--;\n    } while (rcx != 0);\n    rdx = *((r8 + r12*8 - 8));\n    do {\n        *((rdx + 0x10)) = 0;\n        return rax;\nlabel_1:\nlabel_0:\n        free (*((rbp + 0x10)));\n        *((rbp + 0x10)) = 0;\n        rax = rbx;\n        *((rbp + 0x38)) = 0;\n        return rax;\nlabel_4:\n        rdx = rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00406fa0",
            "funcStartAddr": "0x406fa0",
            "funcEndAddr": "0x40702a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x406fa0 */\n#include <stdint.h>\n \nuint64_t fcn_00406fa0 (int64_t arg1, int64_t arg2, size_t size) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = size;\n    r13 = rsi;\n    r12 = rdi;\n    rdi &= 0xfffffffffffffff8;\n    rax = malloc (rdx + 0x110);\n    rbx = rax;\n    if (rax != 0) {\n        memcpy (rax + 0x108, r13, rbp);\n        rax = *((r12 + 0x20));\n        *((rbx + rbp + 0x108)) = 0;\n        *((rbx + 0x60)) = rbp;\n        *((rbx + 0x50)) = r12;\n        *((rbx + 0x38)) = rax;\n        *((rbx + 0x40)) = 0;\n        *((rbx + 0x18)) = 0;\n        *((rbx + 0x72)) = 0x30000;\n        *((rbx + 0x20)) = 0;\n        *((rbx + 0x28)) = 0;\n    }\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00407030",
            "funcStartAddr": "0x407030",
            "funcEndAddr": "0x407071",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x407030 */\n#include <stdint.h>\n \nvoid fcn_00407030 (uint32_t arg1) {\n    rdi = arg1;\n    if (rdi == 0) {\n        goto label_0;\n    }\n    rbx = rdi;\n    do {\n        rdi = *((rbx + 0x18));\n        rbp = *((rbx + 0x10));\n        if (rdi != 0) {\n            closedir ();\n        }\n        rbx = rbp;\n        free (rbx);\n    } while (rbp != 0);\n    return;\nlabel_0:\n}\n"
        },
        {
            "funcName": "fcn_00407080",
            "funcStartAddr": "0x407080",
            "funcEndAddr": "0x4070b9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x407080 */\n#include <stdint.h>\n \nuint32_t fcn_00407080 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    while (al == 0) {\n        eax = fcn_0040b320 (rbx);\n        if (eax >= 0) {\n            goto label_1;\n        }\nlabel_0:\n        al = fcn_0040b2d0 (rbx);\n    }\n    return eax;\nlabel_1:\n    close (eax);\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_004070c0",
            "funcStartAddr": "0x4070c0",
            "funcEndAddr": "0x40c143",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x4070c0 */\n#include <stdint.h>\n \nint64_t fcn_004070c0 (int64_t arg1) {\n    rdi = arg1;\nlabel_0:\n    abort ();\n    rbx = *((rdi + 0x50));\n    if ((*((rbx + 0x49)) & 2) == 0) {\n        goto label_4;\n    }\n    r12 = *((rbx + 0x50));\n    if (r12 == 0) {\n        goto label_5;\n    }\nlabel_1:\n    rax = *((rbp + 0x78));\n    *(rsp) = rax;\n    rax = fcn_0040a680 (r12, rsp);\n    if (rax == 0) {\n        goto label_6;\n    }\n    rax = *((rax + 8));\n    do {\nlabel_3:\n        return rax;\nlabel_6:\n        rax = *((rbp + 0x50));\n        rsi = rsp;\n        edi = *((rax + 0x2c));\n        eax = fstatfs ();\n        if (eax != 0) {\n            goto label_4;\n        }\n        rax = malloc (0x10);\n        rbx = rax;\n        rax = *(rsp);\n    } while (rbx == 0);\n    rdx = *((rbp + 0x78));\n    *((rbx + 8)) = rax;\n    rsi = rbx;\n    *(rbx) = rdx;\n    rax = fcn_0040b090 (r12);\n    if (rax == 0) {\n        goto label_7;\n    }\n    if (rbx != rax) {\n        goto label_0;\n    }\nlabel_2:\n    rax = *(rsp);\n    return rax;\nlabel_5:\n    rax = fcn_0040a8f0 (0xd, 0, 0x406ca0, 0x406cb0, sym.imp.free);\n    r12 = rax;\n    *((rbx + 0x50)) = rax;\n    if (rax != 0) {\n        goto label_1;\n    }\n    rax = *((rbp + 0x50));\n    rsi = rsp;\n    edi = *((rax + 0x2c));\n    eax = fstatfs ();\n    if (eax == 0) {\n        goto label_2;\n    }\nlabel_4:\n    eax = 0;\n    return rax;\nlabel_7:\n    free (rbx);\n    rax = *(rsp);\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_004071e0",
            "funcStartAddr": "0x4071e0",
            "funcEndAddr": "0x407244",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x4071e0 */\n#include <stdint.h>\n \nuint64_t fcn_004071e0 (void) {\n    rax = fcn_004070c0 (rdi);\n    if (rax == 0x9fa0) {\n        goto label_1;\n    }\n    if (rax <= 0x9fa0) {\n        goto label_2;\n    }\n    if (rax == 0x5346414f) {\n        goto label_1;\n    }\n    edx = 2;\n    if (rax == 0x58465342) {\n        goto label_0;\n    }\n    edx = 0;\n    dl = (rax == 0x52654973) ? 1 : 0;\n    edx++;\n    do {\nlabel_0:\n        eax = edx;\n        return rax;\nlabel_2:\n        edx = 0;\n    } while (rax == 0);\n    edx = 0;\n    dl = (rax != 0x6969) ? 1 : 0;\n    eax = edx;\n    return rax;\nlabel_1:\n    edx = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00407250",
            "funcStartAddr": "0x407250",
            "funcEndAddr": "0x4072b6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x407250 */\n#include <stdint.h>\n \nuint32_t fcn_00407250 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rdi;\n    esi = *((rdi + 0x2c));\n    if (esi == ebp) {\n        if (esi != 0xffffff9c) {\n            goto label_0;\n        }\n    }\n    if (dl != 0) {\n        goto label_1;\n    }\n    if ((*((rbx + 0x48)) & 4) != 0) {\n        goto label_2;\n    }\n    if (esi >= 0) {\n        goto label_3;\n    }\n    do {\nlabel_2:\n        *((rbx + 0x2c)) = ebp;\n        return;\nlabel_1:\n        eax = fcn_0040b2e0 (rbx + 0x60, rsi);\n    } while (eax < 0);\n    close (eax);\n    *((rbx + 0x2c)) = ebp;\n    return eax;\nlabel_3:\n    close (esi);\n    *((rbx + 0x2c)) = ebp;\n    return eax;\nlabel_0:\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_004072c0",
            "funcStartAddr": "0x4072c0",
            "funcEndAddr": "0x40731a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x4072c0 */\n#include <stdint.h>\n \nint32_t fcn_004072c0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    edx = *((rdi + 0x48));\n    ebp &= 4;\n    if (ebp == 0) {\n        dh &= 2;\n        if (dh == 0) {\n            goto label_0;\n        }\n        edx = 1;\n        fcn_00407250 (rdi, 0xffffff9c);\n    } else {\n        ebp = 0;\n    }\n    do {\n        fcn_00407080 (rbx + 0x60);\n        eax = ebp;\n        return eax;\nlabel_0:\n        edi = *((rdi + 0x28));\n        ebp = 0;\n        eax = fchdir ();\n        bpl = (eax != 0) ? 1 : 0;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00407320",
            "funcStartAddr": "0x407320",
            "funcEndAddr": "0x40738b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x407320 */\n#include <stdint.h>\n \nuint64_t fcn_00407320 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rcx = *(rsi);\n    rbx = rdi;\n    rdi = *(rdi);\n    rax = rcx + rdx + 0x100;\n    if (rcx <= rax) {\n        *(rsi) = rax;\n        rax = realloc (rdi, rax);\n        if (rax == 0) {\n            goto label_0;\n        }\n        *(rbx) = rax;\n        eax = 1;\n        return rax;\n    }\n    free (rdi);\n    *(rbx) = 0;\n    errno_location ();\n    *(rax) = 0x24;\n    eax = 0;\n    return rax;\nlabel_0:\n    eax = free (*(rbx));\n    *(rbx) = 0;\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00407390",
            "funcStartAddr": "0x407390",
            "funcEndAddr": "0x4073eb",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x407390 */\n#include <stdint.h>\n \nuint64_t fcn_00407390 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edi &= 0x102;\n    rbx = rsi;\n    if (edi == 0) {\n        goto label_0;\n    }\n    rax = fcn_0040a8f0 (0x1f, 0, 0x406c90, 0x406c70, sym.imp.free);\n    *(rbx) = rax;\n    al = (rax != 0) ? 1 : 0;\n    do {\n        return rax;\nlabel_0:\n        rax = malloc (0x20);\n        rdi = rax;\n        *(rbx) = rax;\n        eax = 0;\n    } while (rdi == 0);\n    fcn_00409f20 (rdi);\n    eax = 1;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004073f0",
            "funcStartAddr": "0x4073f0",
            "funcEndAddr": "0x407434",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x4073f0 */\n#include <stdint.h>\n \nint32_t fcn_004073f0 (int64_t arg2, int64_t arg3, int32_t fd) {\n    rsi = arg2;\n    rdx = arg3;\n    rdi = fd;\n    eax = esi;\n    rcx = rdx;\n    edx = esi;\n    edx <<= 0xd;\n    eax <<= 7;\n    edx &= 0x20000;\n    eax &= 0x40000;\n    edx |= eax;\n    edx |= 0x90900;\n    esi &= 0x200;\n    if (esi != 0) {\n        rsi = rcx;\n        eax = 0;\n        void (*0x40b940)() ();\n    }\n    esi = edx;\n    rdi = rcx;\n    eax = 0;\n    return void (*0x409fb0)() ();\n}\n"
        },
        {
            "funcName": "fcn_00407440",
            "funcStartAddr": "0x407440",
            "funcEndAddr": "0x407606",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x407440 */\n#include <stdint.h>\n \nuint64_t fcn_00407440 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r15 = rdi;\n    r13 = rsi;\n    rbx = rcx;\n    r12d = *((rdi + 0x48));\n    edx = *((rdi + 0x48));\n    edx &= 4;\n    if (rcx != 0) {\n        edi = 0x40ee19;\n        ecx = 3;\n        rsi = rbx;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        al = (rcx > 0) ? 1 : 0;\n        if (al == 0) {\n            if (edx != 0) {\n                goto label_4;\n            }\n            if (ebp >= 0) {\n                goto label_5;\n            }\n            if ((r12d & 0x200) == 0) {\n                goto label_6;\n            }\n            rdx = r15 + 0x60;\n            rdi = rdx;\n            *((rsp + 8)) = rdx;\n            al = fcn_0040b2d0 (rdi);\n            rdx = *((rsp + 8));\n            r14d = eax;\n            if (al != 0) {\n                goto label_2;\n            }\n            eax = fcn_0040b320 (rdx);\n            r12d = eax;\n            if (eax < 0) {\n                goto label_7;\n            }\n            r14d = 1;\n        }\n    } else {\n        if (edx != 0) {\n            goto label_4;\n        }\n        if (ebp < 0) {\n            goto label_8;\n        }\n        r12d = ebp;\n        r14d = 0;\n    }\n    do {\nlabel_3:\n        rdx = rsp + 0x10;\n        esi = r12d;\n        edi = 1;\n        eax = fxstat ();\n        ebx = eax;\n        if (eax == 0) {\n            rax = *((rsp + 0x10));\n            if (*((r13 + 0x78)) == rax) {\n                rax = *((rsp + 0x18));\n                if (*((r13 + 0x80)) == rax) {\n                    goto label_9;\n                }\n            }\n            errno_location ();\n            *(rax) = 2;\n        }\n        ebx = 0xffffffff;\nlabel_1:\n        if (ebp < 0) {\n            rax = errno_location ();\n            r13d = *(rax);\n            close (r12d);\n            *(rbp) = r13d;\n            goto label_0;\nlabel_4:\n            r12d &= 0x200;\n            if (r12d != 0) {\n                if (ebp >= 0) {\n                    goto label_10;\n                }\n            }\n            ebx = 0;\n        }\nlabel_0:\n        eax = ebx;\n        return rax;\nlabel_6:\n        r14d = 1;\nlabel_2:\n        eax = fcn_004073f0 (*((r15 + 0x2c)), r12d, rbx);\n        r12d = eax;\n    } while (eax >= 0);\n    ebx = 0xffffffff;\n    goto label_0;\nlabel_9:\n    if ((*((r15 + 0x49)) & 2) == 0) {\n        edi = r12d;\n        eax = fchdir ();\n        ebx = eax;\n        goto label_1;\nlabel_10:\n        ebx = 0;\n        close (ebp);\n        goto label_0;\nlabel_7:\n        r12d = *((r15 + 0x48));\n        r14d = 1;\n        goto label_2;\n    }\n    r14d ^= 1;\n    edx = (int32_t) r14b;\n    fcn_00407250 (r15, r12d);\n    goto label_0;\nlabel_5:\n    r12d = ebp;\n    r14d = 1;\n    goto label_3;\nlabel_8:\n    r14d = 0;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_00407610",
            "funcStartAddr": "0x407610",
            "funcEndAddr": "0x4076bf",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x407610 */\n#include <stdint.h>\n \nuint64_t fcn_00407610 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    edi &= 0x102;\n    r12 = rsi;\n    rbx = rdx;\n    if (edi == 0) {\n        goto label_0;\n    }\n    rax = malloc (0x18);\n    if (rax == 0) {\n        goto label_1;\n    }\n    rax = *((rbx + 0x78));\n    rsi = rbp;\n    *((rbp + 0x10)) = rbx;\n    *(rbp) = rax;\n    rax = *((rbx + 0x80));\n    *((rbp + 8)) = rax;\n    rax = fcn_0040b090 (*(r12));\n    r12 = rax;\n    if (rbp == rax) {\n        goto label_2;\n    }\n    free (rbp);\n    if (r12 == 0) {\n        goto label_1;\n    }\n    rax = *((r12 + 0x10));\n    ecx = 2;\n    *((rbx + 0x70)) = cx;\n    *(rbx) = rax;\n    do {\nlabel_2:\n        eax = 1;\n        return rax;\nlabel_0:\n        al = fcn_00409f30 (*(r12), rdx + 0x78);\n    } while (al == 0);\n    edx = 2;\n    *(rbx) = rbx;\n    *((rbx + 0x70)) = dx;\n    return rax;\nlabel_1:\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004076c0",
            "funcStartAddr": "0x4076c0",
            "funcEndAddr": "0x40ccc3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x4076c0 */\n#include <stdint.h>\n \nint64_t fcn_004076c0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    do {\nlabel_0:\n        abort ();\n        edi &= 0x102;\n        rcx = rsi;\n        if (edi != 0) {\n            goto label_2;\n        }\n        rax = *((rdx + 8));\n        if (rax == 0) {\n            goto label_1;\n        }\n        if (*((rax + 0x58)) < 0) {\n            goto label_1;\n        }\n        rcx = *(rsi);\n    } while (*((rcx + 0x10)) == 0);\n    rsi = *((rdx + 0x80));\n    if (*(rcx) == rsi) {\n        goto label_3;\n    }\nlabel_1:\n    return rax;\nlabel_2:\n    rax = *((rdx + 0x78));\n    rsi = rsp;\n    *(rsp) = rax;\n    rax = *((rdx + 0x80));\n    *((rsp + 8)) = rax;\n    rax = fcn_0040b0d0 (*(rcx));\n    if (rax == 0) {\n        goto label_0;\n    }\n    free (rax);\n    return rax;\nlabel_3:\n    rsi = *((rdx + 0x78));\n    if (*((rcx + 8)) != rsi) {\n        goto label_1;\n    }\n    rdx = *((rax + 0x78));\n    rax = *((rax + 0x80));\n    *((rcx + 8)) = rdx;\n    *(rcx) = rax;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00407760",
            "funcStartAddr": "0x407760",
            "funcEndAddr": "0x408113",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x407760 */\n#include <stdint.h>\n \nuint64_t fcn_00407760 (int64_t arg1, uint32_t arg2) {\n    int64_t var_8h;\n    int64_t var_10h;\n    uint32_t var_18h;\n    uint32_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    uint32_t var_38h;\n    void ** s1;\n    int64_t var_48h;\n    uint32_t var_50h;\n    uint32_t var_58h;\n    uint32_t var_5eh;\n    uint32_t var_5fh;\n    rdi = arg1;\n    rsi = arg2;\n    r15 = rdi;\n    r13 = *(rdi);\n    *((rsp + 0x58)) = esi;\n    rdi = *((r13 + 0x18));\n    *((rsp + 0x50)) = rdi;\n    if (rdi == 0) {\n        goto label_26;\n    }\n    eax = dirfd ();\n    if (eax < 0) {\n        goto label_27;\n    }\n    if (*((r15 + 0x40)) == 0) {\n        goto label_28;\n    }\n    *((rsp + 0x38)) = 0xffffffffffffffff;\nlabel_9:\n    *((rsp + 0x5f)) = 1;\n    edi = *((r15 + 0x48));\nlabel_10:\n    rcx = *((r13 + 0x48));\n    rax = rcx - 1;\n    *((rsp + 0x10)) = rcx;\n    *((rsp + 0x48)) = rax;\n    rax = *((r13 + 0x38));\n    if (*((rax + rcx - 1)) != 0x2f) {\n        rax = rcx + 1;\n        *((rsp + 0x48)) = rcx;\n        *((rsp + 0x10)) = rax;\n    }\n    *((rsp + 0x40)) = 0;\n    edi &= 4;\n    if (edi != 0) {\n        rax = *((rsp + 0x48));\n        rax += *((r15 + 0x20));\n        rcx = rax + 1;\n        *(rax) = 0x2f;\n        *((rsp + 0x40)) = rcx;\n    }\n    rax = *((r15 + 0x30));\n    rax -= *((rsp + 0x10));\n    *((rsp + 0x5e)) = 0;\n    ebp = 0;\n    *((rsp + 0x20)) = rax;\n    rax = *((r13 + 0x58));\n    rbx = r15;\n    *((rsp + 8)) = 0;\n    rax++;\n    *((rsp + 0x28)) = r13;\n    *((rsp + 0x30)) = rax;\n    *((rsp + 0x18)) = 0;\n    while (edx > 0xb) {\n        *((r15 + 0x90)) = 0;\n        eax = 2;\nlabel_0:\n        *((r15 + 0xa8)) = rax;\nlabel_7:\n        *((r15 + 0x10)) = 0;\n        if (*((rsp + 0x18)) == 0) {\n            goto label_29;\n        }\n        rax = *((rsp + 8));\n        rbp++;\n        *((rax + 0x10)) = r15;\n        if (rbp >= *((rsp + 0x38))) {\n            goto label_30;\n        }\nlabel_3:\n        *((rsp + 8)) = r15;\n        rax = *((rsp + 0x28));\n        r15 = *((rax + 0x18));\n        if (r15 == 0) {\n            goto label_31;\n        }\n        errno_location ();\n        rdi = r15;\n        *(rax) = 0;\n        r12 = rax;\n        rax = readdir ();\n        r14 = rax;\n        if (rax == 0) {\n            goto label_32;\n        }\n        if ((*((rbx + 0x48)) & 0x20) == 0) {\n            if (*((rax + 0x13)) == 0x2e) {\n                goto label_33;\n            }\n        }\nlabel_5:\n        r15 = r14 + 0x13;\n        rax = strlen (r15);\n        rdx = rax;\n        r13 = rax;\n        rax = fcn_00406fa0 (rbx, r15, rdx);\n        r15 = rax;\n        if (rax == 0) {\n            goto label_34;\n        }\n        if (*((rsp + 0x20)) <= r13) {\n            goto label_35;\n        }\nlabel_1:\n        r8 = r13;\n        r8 += *((rsp + 0x10));\n        if (r8 < 0) {\n            goto label_36;\n        }\n        rax = *((rsp + 0x30));\n        rsi = r15 + 0x108;\n        *((r15 + 0x58)) = rax;\n        rax = *(rbx);\n        *((r15 + 0x48)) = r8;\n        *((r15 + 8)) = rax;\n        rax = *(r14);\n        *((r15 + 0x80)) = rax;\n        eax = *((rbx + 0x48));\n        if ((al & 4) != 0) {\n            goto label_37;\n        }\n        *((r15 + 0x30)) = rsi;\nlabel_2:\n        if (*((rbx + 0x40)) != 0) {\n            if ((ah & 4) == 0) {\n                goto label_38;\n            }\n        }\n        edx = *((r14 + 0x12));\n        eax &= 0x18;\n        esi = edx;\n        edx--;\n        if (eax == 0x18) {\n            goto label_39;\n        }\nlabel_6:\n        eax = 0xb;\n        *((r15 + 0x70)) = ax;\n    }\n    eax = *((rdx*4 + 0x40ee20));\n    *((r15 + 0x90)) = eax;\n    eax = 2;\n    goto label_0;\nlabel_35:\n    rax = *((rbx + 0x20));\n    *((rsp + 0x20)) = rax;\n    rax = *((rsp + 0x48));\n    rdx = rax + r13 + 2;\n    al = fcn_00407320 (rbx + 0x20, rbx + 0x30);\n    if (al == 0) {\n        goto label_34;\n    }\n    rdx = *((rbx + 0x20));\n    if (rdx == *((rsp + 0x20))) {\n        goto label_40;\n    }\n    rdx += *((rsp + 0x10));\n    if ((*((rbx + 0x48)) & 4) == 0) {\n        rdx = *((rsp + 0x40));\n    }\n    *((rsp + 0x40)) = rdx;\nlabel_8:\n    rcx = *((rbx + 0x30));\n    rcx -= *((rsp + 0x10));\n    *((rsp + 0x5e)) = al;\n    *((rsp + 0x20)) = rcx;\n    goto label_1;\nlabel_37:\n    rax = *((r15 + 0x38));\n    *((r15 + 0x30)) = rax;\n    rax = *((r15 + 0x60));\n    memmove (*((rsp + 0x40)), rsi, rax + 1);\n    eax = *((rbx + 0x48));\n    goto label_2;\nlabel_29:\n    *((rsp + 0x18)) = r15;\n    rbp++;\n    if (rbp < *((rsp + 0x38))) {\n        goto label_3;\n    }\nlabel_30:\n    r13 = *((rsp + 0x28));\n    r15 = rbx;\n    if (*((rsp + 0x5e)) == 0) {\n        goto label_41;\n    }\nlabel_14:\n    rax = *((r15 + 8));\n    rcx = *((r15 + 0x20));\n    if (rax == 0) {\n        goto label_42;\n    }\n    do {\n        rdx = *((rax + 0x30));\n        rsi = rax + 0x108;\n        if (rdx != rsi) {\n            rdx -= *((rax + 0x38));\n            rdx += rcx;\n            *((rax + 0x30)) = rdx;\n        }\n        *((rax + 0x38)) = rcx;\n        rax = *((rax + 0x10));\n    } while (rax != 0);\nlabel_42:\n    rax = *((rsp + 0x18));\n    while (rdx != 0) {\nlabel_4:\n        rax = rdx;\n        if (*((rax + 0x58)) < 0) {\n            goto label_41;\n        }\n        rdx = *((rax + 0x30));\n        rsi = rax + 0x108;\n        if (rdx != rsi) {\n            rdx -= *((rax + 0x38));\n            rdx += rcx;\n            *((rax + 0x30)) = rdx;\n        }\n        rdx = *((rax + 0x10));\n        *((rax + 0x38)) = rcx;\n    }\n    rdx = *((rax + 8));\n    goto label_4;\nlabel_33:\n    if (*((rax + 0x14)) == 0) {\n        goto label_43;\n    }\n    if (*((rax + 0x14)) != 0x2e) {\n        goto label_5;\n    }\nlabel_43:\n    r15 = *((rsp + 8));\n    goto label_3;\nlabel_39:\n    esi &= 0xfb;\n    if (esi == 0) {\n        goto label_6;\n    }\n    ecx = 0xb;\n    *((r15 + 0x70)) = cx;\n    if (edx <= 0xb) {\n        goto label_44;\n    }\n    *((r15 + 0x90)) = 0;\n    eax = 1;\n    goto label_0;\nlabel_38:\n    edx = 0;\n    ax = fcn_00406cf0 (rbx, r15);\n    *((r15 + 0x70)) = ax;\n    goto label_7;\nlabel_40:\n    eax = *((rsp + 0x5e));\n    goto label_8;\nlabel_26:\n    eax = *((r15 + 0x48));\n    ecx = *((r15 + 0x48));\n    ecx &= 0x10;\n    if (ecx != 0) {\n        ecx = 0x20000;\n        if ((al & 1) != 0) {\n            goto label_45;\n        }\n    }\nlabel_11:\n    edx = eax;\n    eax &= 0x204;\n    rsi = *((r13 + 0x30));\n    edi = 0xffffff9c;\n    edx <<= 7;\n    edx &= 0x40000;\n    edx |= ecx;\n    if (eax == 0x200) {\n    }\n    edx |= 0x90900;\n    eax = 0;\n    eax = fcn_0040b940 (*((r15 + 0x2c)), rsi, rdx, rcx, r8);\n    ebx = eax;\n    if (eax < 0) {\n        goto label_46;\n    }\n    edi = eax;\n    rax = fdopendir ();\n    if (rax == 0) {\n        goto label_47;\n    }\n    *((r13 + 0x18)) = rax;\n    if (*((r13 + 0x70)) == 0xb) {\n        goto label_48;\n    }\n    edi = *((r15 + 0x48));\n    if ((edi & 0x100) != 0) {\n        goto label_49;\n    }\nlabel_18:\n    rax -= rax;\n    eax &= 0x186a1;\n    rax--;\n    *((rsp + 0x38)) = rax;\n    if (*((rsp + 0x58)) == 2) {\n        goto label_50;\n    }\n    eax = *((r15 + 0x48));\n    eax &= 0x38;\n    if (eax == 0x18) {\n        goto label_51;\n    }\nlabel_12:\n    r14d = 1;\n    r12b = (*((rsp + 0x58)) == 3) ? 1 : 0;\nlabel_13:\n    if ((*((r15 + 0x49)) & 2) != 0) {\n        goto label_52;\n    }\nlabel_19:\n    eax = fcn_00407440 (r15, r13, ebx, 0);\n    if (eax == 0) {\n        goto label_9;\n    }\n    ebp = *((r13 + 0x72));\n    rdi = *((r13 + 0x18));\n    ebp |= 1;\n    if (r12b != 0) {\n        if (r14b == 0) {\n            goto label_53;\n        }\nlabel_20:\n        *((rsp + 8)) = rdi;\n        rax = errno_location ();\n        rdi = *((rsp + 8));\n        eax = *(rax);\n        *((r13 + 0x40)) = eax;\n    }\nlabel_53:\n    *((r13 + 0x72)) = bp;\n    closedir ();\n    edi = *((r15 + 0x48));\n    *((r13 + 0x18)) = 0;\n    if ((edi & 0x200) != 0) {\n        if (ebx < 0) {\n            goto label_21;\n        }\n        close (ebx);\n        edi = *((r15 + 0x48));\n    }\nlabel_21:\n    *((r13 + 0x18)) = 0;\n    *((rsp + 0x5f)) = 0;\n    goto label_10;\nlabel_44:\n    eax = *((rdx*4 + 0x40ee20));\n    *((r15 + 0x90)) = eax;\n    eax = 1;\n    goto label_0;\nlabel_34:\n    rcx = r15;\n    r13 = *((rsp + 0x28));\n    r15 = rbx;\n    ebx = *(r12);\n    free (rcx);\n    fcn_00407030 (*((rsp + 0x18)));\n    rdi = *((r13 + 0x18));\n    closedir ();\n    r9d = 7;\n    *((r13 + 0x18)) = 0;\n    *((r13 + 0x70)) = r9w;\n    *((rsp + 0x18)) = 0;\n    *((r15 + 0x48)) |= 0x4000;\n    *(r12) = ebx;\nlabel_15:\n    rax = *((rsp + 0x18));\n    return rax;\nlabel_45:\n    ecx = 0;\n    cl = (*((r13 + 0x58)) != 0) ? 1 : 0;\n    ecx <<= 0x11;\n    goto label_11;\nlabel_51:\n    if (*((r13 + 0x88)) != 2) {\n        goto label_12;\n    }\n    rdi = r13;\n    eax = fcn_004071e0 ();\n    if (eax == 0) {\n        goto label_12;\n    }\n    if (*((rsp + 0x58)) != 3) {\n        goto label_50;\n    }\n    r14d = 0;\n    r12d = 1;\n    goto label_13;\nlabel_31:\n    r13 = rax;\n    r15 = rbx;\nlabel_17:\n    if (*((rsp + 0x5e)) != 0) {\n        goto label_14;\n    }\nlabel_41:\n    if ((*((r15 + 0x48)) & 4) != 0) {\n        rax = *((rsp + 0x10));\n        if (*((r15 + 0x30)) != rax) {\n            if (rbp != 0) {\n                goto label_54;\n            }\n        }\nlabel_54:\n        rax = *((rsp + 0x40));\n        *(rax) = 0;\n    }\n    if (*((rsp + 0x50)) != 0) {\n        goto label_55;\n    }\n    if (*((rsp + 0x5f)) == 0) {\n        goto label_55;\n    }\n    if (*((rsp + 0x58)) == 1) {\n        goto label_56;\n    }\n    while (rbp != 0) {\n        rax = *((r15 + 0x40));\n        if (rbp <= 0x2710) {\n            goto label_57;\n        }\n        if (rax == 0) {\n            goto label_58;\n        }\nlabel_16:\n        rsi = *((rsp + 0x18));\n        rdx = rbp;\n        rdi = r15;\n        void (*0x406ea0)() ();\nlabel_56:\n        if (*((r13 + 0x58)) != 0) {\n            goto label_59;\n        }\n        eax = fcn_004072c0 (r15);\n        al = (eax != 0) ? 1 : 0;\nlabel_22:\n        if (al != 0) {\n            goto label_60;\n        }\nlabel_55:\n    }\n    if (*((rsp + 0x58)) == 3) {\n        goto label_61;\n    }\nlabel_25:\n    fcn_00407030 (*((rsp + 0x18)));\n    *((rsp + 0x18)) = 0;\n    goto label_15;\nlabel_24:\n    rax = *((r15 + 0x40));\nlabel_57:\n    if (rax == 0) {\n        goto label_15;\n    }\n    if (rbp == 1) {\n        goto label_15;\n    }\n    goto label_16;\nlabel_32:\n    eax = *(r12);\n    r13 = *((rsp + 0x28));\n    r15 = rbx;\n    if (eax != 0) {\n        *((r13 + 0x40)) = eax;\n        rax = *((rsp + 0x50));\n        rax |= rbp;\n        eax -= eax;\n        eax &= 0xfffffffd;\n        eax += 7;\n        *((r13 + 0x70)) = ax;\n    }\n    rdi = *((r13 + 0x18));\n    if (rdi == 0) {\n        goto label_17;\n    }\n    closedir ();\n    *((r13 + 0x18)) = 0;\n    goto label_17;\nlabel_47:\n    rax = errno_location ();\n    r12d = *(rax);\n    close (ebx);\n    *(rbp) = r12d;\nlabel_46:\n    *((r13 + 0x18)) = 0;\n    if (*((rsp + 0x58)) == 3) {\n        goto label_62;\n    }\nlabel_23:\n    *((rsp + 0x18)) = 0;\n    goto label_15;\nlabel_28:\n    *((rsp + 0x38)) = 0x186a0;\n    edi = *((r15 + 0x48));\n    *((rsp + 0x5f)) = 1;\n    goto label_10;\nlabel_50:\n    *((rsp + 0x5f)) = 0;\n    edi = *((r15 + 0x48));\n    goto label_10;\nlabel_49:\n    rbp = r15 + 0x58;\n    fcn_004076c0 (rdi, rbp, r13);\n    edx = 0;\n    fcn_00406cf0 (r15, r13);\n    al = fcn_00407610 (*((r15 + 0x48)), rbp, r13);\n    if (al != 0) {\n        goto label_18;\n    }\n    errno_location ();\n    *((rsp + 0x18)) = 0;\n    *(rax) = 0xc;\n    goto label_15;\nlabel_48:\n    edx = 0;\n    ax = fcn_00406cf0 (r15, r13);\n    *((r13 + 0x70)) = ax;\n    goto label_18;\nlabel_52:\n    eax = 0;\n    eax = fcn_0040bde0 (ebx, 0x406, 3, rcx, r8);\n    ebx = eax;\n    if (eax >= 0) {\n        goto label_19;\n    }\n    ebp = *((r13 + 0x72));\n    rdi = *((r13 + 0x18));\n    ebp |= 1;\n    if (r12b == 0) {\n        goto label_63;\n    }\n    if (r14b != 0) {\n        goto label_20;\n    }\nlabel_63:\n    *((r13 + 0x72)) = bp;\n    closedir ();\n    edi = *((r15 + 0x48));\n    goto label_21;\nlabel_59:\n    eax = fcn_00407440 (r15, *((r13 + 8)), 0xffffffff, 0x40ee19);\n    al = (eax != 0) ? 1 : 0;\n    goto label_22;\nlabel_27:\n    rdi = *((r13 + 0x18));\n    closedir ();\n    *((r13 + 0x18)) = 0;\n    if (*((rsp + 0x58)) != 3) {\n        goto label_23;\n    }\nlabel_62:\n    r10d = 4;\n    *((r13 + 0x70)) = r10w;\n    rax = errno_location ();\n    eax = *(rax);\n    *((r13 + 0x40)) = eax;\n    goto label_23;\nlabel_60:\n    edi = 7;\n    *((r13 + 0x70)) = di;\n    *((r15 + 0x48)) |= 0x4000;\n    fcn_00407030 (*((rsp + 0x18)));\n    *((rsp + 0x18)) = 0;\n    goto label_15;\nlabel_58:\n    rax = fcn_004070c0 (r13);\n    if (rax == 0x6969) {\n        goto label_24;\n    }\n    if (rax == 0x1021994) {\n        goto label_24;\n    }\n    *((r15 + 0x40)) = 0x406cc0;\n    rax = fcn_00406ea0 (r15, *((rsp + 0x18)), rbp);\n    *((r15 + 0x40)) = 0;\n    *((rsp + 0x18)) = rax;\n    goto label_15;\nlabel_61:\n    eax = *((r13 + 0x70));\n    if (ax == 4) {\n        goto label_25;\n    }\n    if (ax == 7) {\n        goto label_25;\n    }\n    esi = 6;\n    *((r13 + 0x70)) = si;\n    goto label_25;\nlabel_36:\n    rcx = r15;\n    r13 = *((rsp + 0x28));\n    free (rcx);\n    fcn_00407030 (*((rsp + 0x18)));\n    rdi = *((r13 + 0x18));\n    closedir ();\n    r8d = 7;\n    *((r13 + 0x18)) = 0;\n    *((r13 + 0x70)) = r8w;\n    *((rsp + 0x18)) = 0;\n    *((rbx + 0x48)) |= 0x4000;\n    *(r12) = 0x24;\n    goto label_15;\n}\n"
        },
        {
            "funcName": "fts_open",
            "funcStartAddr": "0x408120",
            "funcEndAddr": "0x4084b9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x408120 */\n#include <stdint.h>\n \nuint64_t fts_open (int64_t arg1, int64_t arg2, int64_t arg3) {\n    void * ptr;\n    uint32_t var_16h;\n    uint32_t var_17h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if ((esi & 0xffffe000) != 0) {\n        goto label_10;\n    }\n    eax = esi;\n    eax &= 0x204;\n    if (eax == 0x204) {\n        goto label_10;\n    }\n    if ((sil & 0x12) == 0) {\n        goto label_10;\n    }\n    r13 = rdi;\n    r14 = rdx;\n    rax = calloc (0x80, 1);\n    rbx = rax;\n    if (rax == 0) {\n        goto label_2;\n    }\n    *((rax + 0x40)) = r14;\n    if ((bpl & 2) != 0) {\n        goto label_11;\n    }\n    *((rax + 0x48)) = ebp;\nlabel_3:\n    rdi = *(r13);\n    *((rbx + 0x2c)) = 0xffffff9c;\n    if (rdi == 0) {\n        goto label_12;\n    }\n    r15 = r13;\n    r12d = 0;\n    do {\n        rax = strlen (rdi);\n        if (r12 < rax) {\n            r12 = rax;\n        }\n        r15 += 8;\n        rdi = *(r15);\n    } while (rdi != 0);\n    rdx = r12 + 1;\n    eax = 0x1000;\n    if (rdx < 0x1000) {\n        rdx = rax;\n    }\nlabel_8:\n    al = fcn_00407320 (rbx + 0x20, rbx + 0x30);\n    *((rsp + 0x16)) = al;\n    if (al == 0) {\n        goto label_13;\n    }\n    r15 = *(r13);\n    if (r15 == 0) {\n        goto label_14;\n    }\n    rax = fcn_00406fa0 (rbx, 0x40ef77, 0);\n    rcx = rax;\n    *((rsp + 8)) = rax;\n    if (rax == 0) {\n        goto label_15;\n    }\n    rax = 0xffffffffffffffff;\n    r15 = *(r13);\n    *((rcx + 0x58)) = rax;\n    *((rcx + 0x68)) = rax;\n    if (r14 != 0) {\nlabel_4:\n        eax = *((rbx + 0x48));\n        eax >>= 0xa;\n        eax &= 1;\n        *((rsp + 0x16)) = al;\n    }\n    if (r15 == 0) {\n        goto label_16;\n    }\n    *((rsp + 0x18)) = 0;\n    ebp >>= 0xc;\n    r12d = 0;\n    ebp ^= 1;\n    eax = ebp;\n    ebp = 0;\n    eax &= 1;\n    *((rsp + 0x17)) = al;\n    while (rax <= 2) {\nlabel_0:\n        rax = fcn_00406fa0 (rbx, r15, rax);\n        r15 = rax;\n        if (rax == 0) {\n            goto label_17;\n        }\n        *((rax + 0x58)) = 0;\n        rax = *((rsp + 8));\n        *((r15 + 8)) = rax;\n        rax = r15 + 0x108;\n        *((r15 + 0x30)) = rax;\n        if (r12 == 0) {\n            goto label_18;\n        }\n        if (*((rsp + 0x16)) == 0) {\n            goto label_18;\n        }\n        *((r15 + 0xa8)) = 2;\n        ecx = 0xb;\n        *((r15 + 0x70)) = cx;\n        if (r14 == 0) {\n            goto label_19;\n        }\nlabel_6:\n        *((r15 + 0x10)) = r12;\n        r12 = r15;\nlabel_7:\n        rbp++;\n        r15 = *((r13 + rbp*8));\n        if (r15 == 0) {\n            goto label_20;\n        }\n        rax = strlen (r15);\n    }\n    if (*((rsp + 0x17)) == 0) {\n        goto label_0;\n    }\n    if (*((r15 + rax - 1)) != 0x2f) {\n        goto label_0;\n    }\nlabel_1:\n    if (*((r15 + rax - 2)) != 0x2f) {\n        goto label_0;\n    }\n    rax--;\n    if (rax != 1) {\n        goto label_1;\n    }\n    goto label_0;\nlabel_20:\n    if (r14 != 0) {\n        if (rbp <= 1) {\n            goto label_5;\n        }\n        rax = fcn_00406ea0 (rbx, r12, rbp);\n        r12 = rax;\n    }\nlabel_5:\n    rax = fcn_00406fa0 (rbx, 0x40ef77, 0);\n    *(rbx) = rax;\n    if (rax == 0) {\n        goto label_17;\n    }\n    edx = 9;\n    *((rax + 0x10)) = r12;\n    *((rax + 0x70)) = dx;\n    al = fcn_00407390 (*((rbx + 0x48)), rbx + 0x58);\n    if (al == 0) {\n        goto label_17;\n    }\n    esi = *((rbx + 0x48));\n    if ((esi & 0x204) == 0) {\n        goto label_21;\n    }\nlabel_9:\n    fcn_0040b2b0 (rbx + 0x60, 0xffffffff);\n    do {\nlabel_2:\n        rax = rbx;\n        return rax;\nlabel_10:\n        errno_location ();\n        ebx = 0;\n        *(rax) = 0x16;\n    } while (1);\nlabel_17:\n    fcn_00407030 (r12);\n    free (*((rsp + 8)));\nlabel_15:\n    free (*((rbx + 0x20)));\nlabel_13:\n    ebx = 0;\n    free (rbx);\n    goto label_2;\nlabel_11:\n    eax = ebp;\n    ah &= 0xfd;\n    eax |= 4;\n    *((rbx + 0x48)) = eax;\n    goto label_3;\nlabel_14:\n    *((rsp + 8)) = 0;\n    if (r14 != 0) {\n        goto label_4;\n    }\nlabel_16:\n    r12d = 0;\n    goto label_5;\nlabel_18:\n    edx = 0;\n    ax = fcn_00406cf0 (rbx, r15);\n    *((r15 + 0x70)) = ax;\n    if (r14 != 0) {\n        goto label_6;\n    }\n    *((r15 + 0x10)) = 0;\n    if (r12 == 0) {\n        *((rsp + 0x18)) = r15;\n        r12 = r15;\n        goto label_7;\nlabel_19:\n        *((r15 + 0x10)) = 0;\n    }\n    rax = *((rsp + 0x18));\n    *((rsp + 0x18)) = r15;\n    *((rax + 0x10)) = r15;\n    goto label_7;\nlabel_12:\n    edx = 0x1000;\n    goto label_8;\nlabel_21:\n    eax = fcn_004073f0 (*((rbx + 0x2c)), rsi, 0x40ee1a);\n    *((rbx + 0x28)) = eax;\n    if (eax >= 0) {\n        goto label_9;\n    }\n    *((rbx + 0x48)) |= 4;\n    goto label_9;\n}\n"
        },
        {
            "funcName": "fts_close",
            "funcStartAddr": "0x4084c0",
            "funcEndAddr": "0x408639",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x4084c0 */\n#include <stdint.h>\n \nuint64_t fts_close (int64_t arg_8h, void * ptr, void * arg_20h, int64_t fildes, int64_t arg_2ch, int64_t arg_48h, int64_t arg_50h, int64_t arg_58h, int64_t arg_60h, uint32_t arg1) {\n    rdi = arg1;\n    rdi = *(rdi);\n    if (rdi == 0) {\n        goto label_6;\n    }\n    if (*((rdi + 0x58)) >= 0) {\n        goto label_0;\n    }\n    goto label_7;\n    do {\n        free (rdi);\n        rdi = rbx;\n        if (*((rbx + 0x58)) < 0) {\n            goto label_4;\n        }\nlabel_0:\n        rbx = *((rdi + 0x10));\n    } while (rbx != 0);\n    rbx = *((rdi + 8));\n    free (rdi);\n    rdi = rbx;\n    if (*((rbx + 0x58)) >= 0) {\n        goto label_0;\n    }\nlabel_4:\n    free (rbx);\nlabel_6:\n    rdi = *((rbp + 8));\n    if (rdi != 0) {\n        fcn_00407030 (rdi);\n    }\n    free (*((rbp + 0x10)));\n    free (*((rbp + 0x20)));\n    eax = *((rbp + 0x48));\n    if ((ah & 2) == 0) {\n        goto label_8;\n    }\n    edi = *((rbp + 0x2c));\n    if (edi >= 0) {\n        goto label_9;\n    }\n    do {\nlabel_1:\n        ebx = 0;\nlabel_2:\n        fcn_00407080 (rbp + 0x60);\n        rdi = *((rbp + 0x50));\n        if (rdi != 0) {\n            fcn_0040ab30 (rdi);\n        }\n        rdi = *((rbp + 0x58));\n        if ((*((rbp + 0x48)) & 0x102) == 0) {\n            goto label_10;\n        }\n        if (rdi != 0) {\n            fcn_0040ab30 (rdi);\n        }\nlabel_3:\n        free (rbp);\n        if (ebx != 0) {\n            goto label_11;\n        }\nlabel_5:\n        eax = ebx;\n        return eax;\nlabel_8:\n    } while ((al & 4) != 0);\n    edi = *((rbp + 0x28));\n    eax = fchdir ();\n    if (eax != 0) {\n        goto label_12;\n    }\n    eax = close (*((rbp + 0x28)));\n    if (eax == 0) {\n        goto label_1;\n    }\n    rax = errno_location ();\n    r12 = rax;\n    goto label_13;\nlabel_9:\n    eax = close (rdi);\n    if (eax == 0) {\n        goto label_1;\n    }\n    rax = errno_location ();\n    ebx = *(rax);\n    goto label_2;\nlabel_10:\n    free (rdi);\n    goto label_3;\nlabel_12:\n    rax = errno_location ();\n    r12 = rax;\n    ebx = *(rax);\n    eax = close (*((rbp + 0x28)));\n    if (eax == 0) {\n        goto label_2;\n    }\n    if (ebx != 0) {\n        goto label_2;\n    }\nlabel_13:\n    ebx = *(r12);\n    goto label_2;\nlabel_7:\n    rbx = rdi;\n    goto label_4;\nlabel_11:\n    errno_location ();\n    *(rax) = ebx;\n    ebx = 0xffffffff;\n    goto label_5;\n}\n"
        },
        {
            "funcName": "fts_read",
            "funcStartAddr": "0x408640",
            "funcEndAddr": "0x40f281",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x408640 */\n#include <stdint.h>\n \nuint64_t fts_read (uint32_t arg_1h, int64_t arg_8h, int64_t arg_10h, int64_t arg_30h, int64_t arg_40h, int64_t fildes, uint32_t arg_68h, uint32_t arg_70h, int64_t arg_72h, int64_t arg_74h, uint32_t arg_78h, int64_t arg1) {\n    rdi = arg1;\nlabel_0:\n    abort ();\n    rbp = *(rdi);\n    if (rbp == 0) {\n        goto label_5;\n    }\n    edx = *((rdi + 0x48));\n    if ((dh & 0x40) != 0) {\n        goto label_5;\n    }\n    eax = *((rbp + 0x74));\n    ebx = 3;\n    r12 = rdi;\n    *((rbp + 0x74)) = bx;\n    if (ax == 1) {\n        goto label_26;\n    }\n    ecx = *((rbp + 0x70));\n    if (ax == 2) {\n        goto label_27;\n    }\n    if (cx != 1) {\n        goto label_1;\n    }\n    goto label_28;\n    do {\n        *(r12) = rbx;\n        free (rbp);\n        if (*((rbx + 0x58)) == 0) {\n            goto label_29;\n        }\n        eax = *((rbx + 0x74));\n        if (ax != 4) {\n            goto label_30;\n        }\nlabel_1:\n        rbx = *((rbp + 0x10));\n    } while (rbx != 0);\n    rbx = *((rbp + 8));\n    if (*((rbx + 0x18)) != 0) {\n        goto label_31;\n    }\nlabel_14:\n    *(r12) = rbx;\n    free (rbp);\n    if (*((rbx + 0x58)) == -1) {\n        goto label_32;\n    }\n    if (*((rbx + 0x70)) == 0xb) {\n        goto label_0;\n    }\n    rdx = *((r12 + 0x20));\n    rax = *((rbx + 0x48));\n    *((rdx + rax)) = 0;\n    if (*((rbx + 0x58)) == 0) {\n        goto label_33;\n    }\n    eax = *((rbx + 0x72));\n    if ((al & 2) != 0) {\n        goto label_34;\n    }\n    if ((al & 1) == 0) {\n        goto label_35;\n    }\nlabel_6:\n    edi = *((r12 + 0x48));\n    if (*((rbx + 0x70)) != 2) {\nlabel_10:\n        ecx = *((rbx + 0x40));\n        if (ecx != 0) {\n            goto label_36;\n        }\n        edx = 6;\n        *((rbx + 0x70)) = dx;\n        rax = fcn_004076c0 (rdi, r12 + 0x58, rbx);\n        edi = *((r12 + 0x48));\n    }\nlabel_9:\n    edi &= 0x4000;\n    if (edi == 0) {\n        goto label_13;\n    }\nlabel_5:\n    ebp = 0;\nlabel_3:\n    rax = rbp;\n    return rax;\nlabel_27:\n    eax = rcx - 0xc;\n    if (ax <= 1) {\n        goto label_37;\n    }\n    if (cx != 1) {\n        goto label_1;\n    }\nlabel_2:\n    if ((dl & 0x40) != 0) {\n        rax = *((r12 + 0x18));\n        if (*((rbp + 0x78)) != rax) {\n            goto label_38;\n        }\n    }\n    rdi = *((r12 + 8));\n    if (rdi == 0) {\n        goto label_39;\n    }\n    if ((dh & 0x20) != 0) {\n        goto label_40;\n    }\n    eax = fcn_00407440 (r12, rbp, 0xffffffff, *((rbp + 0x30)));\n    if (eax == 0) {\n        goto label_41;\n    }\n    rax = errno_location ();\n    rbx = *((r12 + 8));\n    eax = *(rax);\n    *((rbp + 0x72)) |= 1;\n    *((rbp + 0x40)) = eax;\n    if (rbx == 0) {\n        goto label_4;\n    }\n    rax = rbx;\n    do {\n        rdx = *((rax + 8));\n        rdx = *((rdx + 0x30));\n        *((rax + 0x30)) = rdx;\n        rax = *((rax + 0x10));\n    } while (rax != 0);\nlabel_4:\n    *((r12 + 8)) = 0;\n    goto label_17;\nlabel_28:\n    if (ax != 4) {\n        goto label_2;\n    }\nlabel_38:\n    if ((*((rbp + 0x72)) & 2) != 0) {\n        goto label_42;\n    }\nlabel_16:\n    rdi = *((r12 + 8));\n    if (rdi != 0) {\n        fcn_00407030 (rdi);\n        *((r12 + 8)) = 0;\n    }\n    r10d = 6;\n    *((rbp + 0x70)) = r10w;\n    fcn_004076c0 (*((r12 + 0x48)), r12 + 0x58, rbp);\n    goto label_3;\nlabel_29:\n    eax = fcn_004072c0 (r12);\n    if (eax != 0) {\n        goto label_43;\n    }\n    rdi = *((r12 + 0x58));\n    if ((*((r12 + 0x48)) & 0x102) == 0) {\n        goto label_44;\n    }\n    if (rdi != 0) {\n        fcn_0040ab30 (rdi);\n    }\nlabel_15:\n    rbp = rbx + 0x108;\n    *((rbx + 0x48)) = rdx;\n    rdx++;\n    memmove (*((r12 + 0x20)), rbp, *((rbx + 0x60)));\n    rax = strrchr (rbp, 0x2f);\n    if (rax != 0) {\n        if (rbp == rax) {\n            goto label_45;\n        }\nlabel_8:\n        r13 = rax + 1;\n        rax = strlen (r13);\n        r14 = rax;\n        memmove (rbp, r13, rax + 1);\n        *((rbx + 0x60)) = r14;\n    }\nlabel_7:\n    rax = *((r12 + 0x20));\n    *((rbx + 0x38)) = rax;\n    *((rbx + 0x30)) = rax;\n    fcn_00407390 (*((r12 + 0x48)), r12 + 0x58);\n    eax = *((rbx + 0x70));\n    goto label_24;\nlabel_30:\n    if (ax == 2) {\n        goto label_46;\n    }\nlabel_17:\n    rcx = *((rbx + 8));\n    rdx = *((rcx + 0x48));\n    rcx = *((rcx + 0x38));\n    rax = rdx - 1;\n    if (*((rcx + rdx - 1)) != 0x2f) {\n        rax = rdx;\n    }\n    rax += *((r12 + 0x20));\n    *(rax) = 0x2f;\n    rsi = *((rbx + 0x60));\n    memmove (rax + 1, rbx + 0x108, rsi + 1);\n    eax = *((rbx + 0x70));\nlabel_24:\n    *(r12) = rbx;\n    if (ax == 0xb) {\n        goto label_47;\n    }\nlabel_11:\n    if (ax != 1) {\n        goto label_3;\n    }\nlabel_20:\n    if (*((rbx + 0x58)) == 0) {\nlabel_22:\n        rax = *((rbx + 0x78));\n        *((r12 + 0x18)) = rax;\n    }\nlabel_12:\n    rdx = rbx;\n    al = fcn_00407610 (*((r12 + 0x48)), r12 + 0x58, rdx);\n    if (al != 0) {\n        goto label_3;\n    }\n    errno_location ();\n    ebp = 0;\n    *(rax) = 0xc;\n    goto label_3;\nlabel_37:\n    edx = 1;\n    ax = fcn_00406cf0 (rdi, rbp);\n    *((rbp + 0x70)) = ax;\n    if (ax == 1) {\n        goto label_48;\n    }\n    *(r12) = rbp;\n    if (ax != 0xb) {\n        goto label_3;\n    }\n    rbx = rbp;\nlabel_47:\n    rax = *((rbx + 0xa8));\n    if (rax == 2) {\n        goto label_49;\n    }\n    if (rax != 1) {\n        goto label_0;\n    }\nlabel_13:\n    rax = rbp;\n    return rax;\nlabel_26:\n    edx = 0;\n    ax = fcn_00406cf0 (rdi, rbp);\n    *((rbp + 0x70)) = ax;\n    goto label_3;\nlabel_40:\n    dh &= 0xdf;\n    *((r12 + 0x48)) = edx;\n    fcn_00407030 (rdi);\n    *((r12 + 8)) = 0;\nlabel_39:\n    rax = fcn_00407760 (r12, 3);\n    rbx = rax;\n    *((r12 + 8)) = rax;\n    if (rax != 0) {\n        goto label_4;\n    }\n    edi = *((r12 + 0x48));\n    if ((edi & 0x4000) != 0) {\n        goto label_5;\n    }\n    r9d = *((rbp + 0x40));\n    if (r9d != 0) {\n        if (*((rbp + 0x70)) == 4) {\n            goto label_50;\n        }\n        r8d = 7;\n        *((rbp + 0x70)) = r8w;\n    }\nlabel_50:\n    fcn_004076c0 (rdi, r12 + 0x58, rbp);\n    goto label_3;\nlabel_34:\n    eax = *((r12 + 0x48));\n    edi = *((rbx + 0x44));\n    if ((al & 4) == 0) {\n        if ((ah & 2) == 0) {\n            goto label_51;\n        }\n        edx = 1;\n        fcn_00407250 (r12, edi);\n    }\nlabel_19:\n    close (*((rbx + 0x44)));\n    goto label_6;\nlabel_41:\n    rbx = *((r12 + 8));\n    goto label_4;\nlabel_45:\n    if (*((rbp + 1)) == 0) {\n        goto label_7;\n    }\n    goto label_8;\nlabel_32:\n    ebp = 0;\n    free (rbx);\n    errno_location ();\n    *(rax) = 0;\n    *(r12) = 0;\n    goto label_3;\nlabel_36:\n    eax = 7;\n    *((rbx + 0x70)) = ax;\n    goto label_9;\nlabel_33:\n    eax = fcn_004072c0 (r12);\n    if (eax == 0) {\n        goto label_6;\n    }\nlabel_18:\n    rax = errno_location ();\n    eax = *(rax);\n    *((rbx + 0x40)) = eax;\n    *((r12 + 0x48)) |= 0x4000;\n    if (*((rbx + 0x70)) == 2) {\n        goto label_5;\n    }\n    edi = *((r12 + 0x48));\n    goto label_10;\nlabel_49:\n    rbp = *((rbx + 8));\n    if (*((rbp + 0x68)) == 0) {\n        eax = *((r12 + 0x48));\n        eax &= 0x18;\n        if (eax == 0x18) {\n            goto label_52;\n        }\n    }\nlabel_23:\n    edx = 0;\n    ax = fcn_00406cf0 (r12, rbx);\n    edx = *((rbx + 0x90));\n    *((rbx + 0x70)) = ax;\n    edx &= 0xf000;\n    if (edx != 0x4000) {\n        goto label_11;\n    }\n    if (*((rbx + 0x58)) == 0) {\n        goto label_53;\n    }\n    rcx = *((rbp + 0x68));\n    rdx = rcx - 1;\n    if (rdx <= 0xfffffffffffffffd) {\n        goto label_54;\n    }\nlabel_25:\n    if (ax == 1) {\n        goto label_12;\n    }\n    goto label_13;\nlabel_31:\n    rax = *((rbx + 0x48));\n    rdx = *((r12 + 0x20));\n    *(r12) = rbx;\n    *((rdx + rax)) = 0;\n    rax = fcn_00407760 (r12, 3);\n    rbx = rax;\n    if (rax != 0) {\n        goto label_55;\n    }\n    if ((*((r12 + 0x49)) & 0x40) != 0) {\n        goto label_5;\n    }\n    rbx = *((rbp + 8));\n    goto label_14;\nlabel_43:\n    *((r12 + 0x48)) |= 0x4000;\n    goto label_5;\nlabel_44:\n    free (rdi);\n    goto label_15;\nlabel_42:\n    close (*((rbp + 0x44)));\n    goto label_16;\nlabel_46:\n    edx = 1;\n    ax = fcn_00406cf0 (r12, rbx);\n    *((rbx + 0x70)) = ax;\n    if (ax == 1) {\n        goto label_56;\n    }\nlabel_21:\n    esi = 3;\n    *((rbx + 0x74)) = si;\n    goto label_17;\nlabel_35:\n    eax = fcn_00407440 (r12, *((rbx + 8)), 0xffffffff, 0x40ee19);\n    if (eax == 0) {\n        goto label_6;\n    }\n    goto label_18;\nlabel_55:\n    free (rbp);\n    goto label_17;\nlabel_51:\n    eax = fchdir ();\n    if (eax != 0) {\n        rax = errno_location ();\n        eax = *(rax);\n        *((rbx + 0x40)) = eax;\n        *((r12 + 0x48)) |= 0x4000;\n    }\n    edi = *((rbx + 0x44));\n    goto label_19;\nlabel_48:\n    esi = *((r12 + 0x48));\n    if ((sil & 4) == 0) {\n        goto label_57;\n    }\n    *(r12) = rbp;\n    rbx = rbp;\n    goto label_20;\nlabel_56:\n    esi = *((r12 + 0x48));\n    if ((sil & 4) != 0) {\n        goto label_21;\n    }\n    eax = fcn_004073f0 (*((r12 + 0x2c)), rsi, 0x40ee1a);\n    *((rbx + 0x44)) = eax;\n    if (eax < 0) {\n        goto label_58;\n    }\n    *((rbx + 0x72)) |= 2;\n    goto label_21;\nlabel_53:\n    if (ax == 1) {\n        goto label_22;\n    }\n    goto label_13;\nlabel_52:\n    rdi = rbp;\n    eax = fcn_004071e0 ();\n    if (eax != 2) {\n        goto label_23;\n    }\n    eax = *((rbx + 0x70));\n    goto label_11;\nlabel_57:\n    eax = fcn_004073f0 (*((r12 + 0x2c)), rsi, 0x40ee1a);\n    *((rbp + 0x44)) = eax;\n    if (eax >= 0) {\n        *((rbp + 0x72)) |= 2;\n        eax = *((rbp + 0x70));\n        rbx = rbp;\n        goto label_24;\nlabel_54:\n        *((rbp + 0x68)) = rdx;\n        goto label_25;\n    }\n    rax = errno_location ();\n    r11d = 7;\n    eax = *(rax);\n    *((rbp + 0x70)) = r11w;\n    *((rbp + 0x40)) = eax;\n    *(r12) = rbp;\n    goto label_3;\nlabel_58:\n    rax = errno_location ();\n    edi = 7;\n    eax = *(rax);\n    *((rbx + 0x70)) = di;\n    *((rbx + 0x40)) = eax;\n    goto label_21;\n}\n"
        },
        {
            "funcName": "fts_set",
            "funcStartAddr": "0x408da0",
            "funcEndAddr": "0x408dc9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x408da0 */\n#include <stdint.h>\n \nint64_t fts_set (int64_t arg2, uint32_t arg3) {\n    rsi = arg2;\n    rdx = arg3;\n    if (edx <= 4) {\n        *((rsi + 0x74)) = dx;\n        eax = 0;\n        return eax;\n    }\n    errno_location ();\n    *(rax) = 0x16;\n    eax = 1;\n    return rax;\n}\n"
        },
        {
            "funcName": "fts_children",
            "funcStartAddr": "0x408dd0",
            "funcEndAddr": "0x408f3d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x408dd0 */\n#include <stdint.h>\n \nuint64_t fts_children (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rdi;\n    rax = errno_location ();\n    r13 = rax;\n    if ((ebp & 0xffffdfff) != 0) {\n        goto label_2;\n    }\n    r12 = *(rbx);\n    *(rax) = 0;\n    if ((*((rbx + 0x49)) & 0x40) != 0) {\n        goto label_3;\n    }\n    edx = *((r12 + 0x70));\n    if (dx == 9) {\n        goto label_4;\n    }\n    eax = 0;\n    if (dx != 1) {\n        goto label_1;\n    }\n    rdi = *((rbx + 8));\n    if (rdi != 0) {\n        fcn_00407030 (rdi);\n    }\n    r14d = 1;\n    if (ebp == 0x2000) {\n        *((rbx + 0x48)) |= 0x2000;\n        r14d = 2;\n    }\n    if (*((r12 + 0x58)) == 0) {\n        rax = *((r12 + 0x30));\n        if (*(rax) == 0x2f) {\n            goto label_5;\n        }\n        esi = *((rbx + 0x48));\n        if ((sil & 4) == 0) {\n            goto label_6;\n        }\n    }\nlabel_5:\n    rax = fcn_00407760 (rbx, r14d);\n    *((rbx + 8)) = rax;\n    do {\nlabel_1:\n        return rax;\nlabel_6:\n        eax = fcn_004073f0 (*((rbx + 0x2c)), rsi, 0x40ee1a);\n        if (eax < 0) {\n            goto label_7;\n        }\n        rax = fcn_00407760 (rbx, r14d);\n        *((rbx + 8)) = rax;\n        if ((*((rbx + 0x49)) & 2) != 0) {\n            goto label_8;\n        }\n        edi = ebp;\n        eax = fchdir ();\n        if (eax != 0) {\n            goto label_9;\n        }\n        close (ebp);\nlabel_0:\n        rax = *((rbx + 8));\n    } while (1);\nlabel_2:\n    *(rax) = 0x16;\n    eax = 0;\n    return rax;\nlabel_3:\n    eax = 0;\n    return rax;\nlabel_4:\n    rax = *((r12 + 0x10));\n    return rax;\nlabel_8:\n    edx = 1;\n    eax = fcn_00407250 (rbx, ebp);\n    goto label_0;\nlabel_7:\n    *((rbx + 8)) = 0;\n    eax = 0;\n    goto label_1;\nlabel_9:\n    ebx = *(r13);\n    eax = close (ebp);\n    eax = 0;\n    *(r13) = ebx;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00408f40",
            "funcStartAddr": "0x408f40",
            "funcEndAddr": "0x40901f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x408f40 */\n#include <stdint.h>\n \nuint64_t fcn_00408f40 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r11 = rdi + 8;\n    r12d = *((rsi + 0x2c));\n    ebp = *(rsi);\n    rbx = *((rsi + 0x30));\n    r9d = r12d;\n    r10d = ebp;\n    r8 = rbx;\nlabel_1:\n    if (r10d <= r8d) {\n        goto label_2;\n    }\nlabel_0:\n    if (r9d >= r8d) {\n        goto label_2;\n    }\n    r14d = r10d;\n    edx = r8d;\n    r14d -= r8d;\n    edx -= r9d;\n    if (r14d <= edx) {\n        goto label_3;\n    }\n    rcx = (int64_t) r9d;\n    r10d -= edx;\n    edx--;\n    rdx += rcx;\n    rax = rdi + rcx*8;\n    r13 = r11 + rdx*8;\n    rdx = (int64_t) r10d;\n    rdx -= rcx;\n    do {\n        rcx = *(rax);\n        r14 = *((rax + rdx*8));\n        *(rax) = r14;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (r13 != rax);\n    if (r10d > r8d) {\n        goto label_0;\n    }\nlabel_2:\n    eax = ebp;\n    *((rsi + 0x30)) = ebp;\n    eax -= r8d;\n    r12d += eax;\n    *((rsi + 0x2c)) = r12d;\n    r12 = rbx;\n    r13 = rbx;\n    r14 = rbx;\n    r15 = rbx;\n    return rax;\nlabel_3:\n    rdx = (int64_t) r9d;\n    ecx = r14 - 1;\n    rcx += rdx;\n    rax = rdi + rdx*8;\n    r13 = r11 + rcx*8;\n    rcx = rbx;\n    rcx -= rdx;\n    rdx = rcx;\n    do {\n        rcx = *(rax);\n        r15 = *((rax + rdx*8));\n        *(rax) = r15;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (rax != r13);\n    r9d += r14d;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00409020",
            "funcStartAddr": "0x409020",
            "funcEndAddr": "0x40963c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x409020 */\n#include <stdint.h>\n \nint64_t fcn_00409020 (int64_t arg_90h, int64_t arg_98h, int64_t arg_a0h, signed int64_t arg1, int64_t arg2, char * arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_ch;\n    int64_t var_10h;\n    void * ptr;\n    int64_t var_20h;\n    int64_t var_28h;\n    char * s;\n    int64_t var_38h;\n    int64_t c;\n    signed int64_t var_40h;\n    int64_t var_44h;\n    void * var_48h;\n    size_t nmeb;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rax = *((rsp + 0x90));\n    *((rsp + 0x40)) = edi;\n    *((rsp + 0x28)) = rsi;\n    r14 = *((rax + 0x20));\n    *((rsp + 0x30)) = rdx;\n    *(rsp) = rcx;\n    eax = *(r14);\n    *((rsp + 0x20)) = r8;\n    *((rsp + 0xc)) = r9d;\n    *((rsp + 0x3f)) = al;\n    if (al == 0x3d) {\n        goto label_11;\n    }\n    if (al == 0) {\n        goto label_11;\n    }\n    do {\n        rbp++;\n        eax = *(rbp);\n        if (al == 0) {\n            goto label_12;\n        }\n    } while (al != 0x3d);\nlabel_12:\n    r13 = rbp;\n    r13 -= r14;\nlabel_6:\n    rbx = *(rsp);\n    r12d = 0;\n    rax = *(rbx);\n    *((rsp + 0x10)) = rax;\n    r15 = rax;\n    if (rax != 0) {\n        goto label_13;\n    }\n    goto label_14;\n    do {\n        r12 = (int64_t) r8d;\nlabel_13:\n        eax = strncmp (r15, r14, r13);\n        if (eax == 0) {\n            rax = strlen (r15);\n            if (rax == r13) {\n                goto label_15;\n            }\n        }\n        rbx += 0x20;\n        r15 = *(rbx);\n        r8d = r12 + 1;\n    } while (r15 != 0);\n    rcx = *(rsp);\n    *((rsp + 0x4c)) = r8d;\n    r9d = 0;\n    ebx = 0;\n    *((rsp + 0x44)) = 0xffffffff;\n    r15 = r9;\n    *((rsp + 0x38)) = 0;\n    *((rsp + 0x48)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x10)) = rbp;\n    do {\n        eax = strncmp (*((rsp + 0x10)), r14, r13);\n        if (eax == 0) {\n            if (rbx == 0) {\n                goto label_16;\n            }\n            eax = *((rsp + 0xc));\n            if (eax == 0) {\n                goto label_17;\n            }\nlabel_0:\n            r11d = *((rsp + 0x38));\n            if (r11d != 0) {\n                goto label_1;\n            }\n            r10d = *((rsp + 0x98));\n            if (r10d == 0) {\n                goto label_18;\n            }\n            if (*((rsp + 0x18)) == 0) {\n                goto label_19;\n            }\nlabel_3:\n            rax = *((rsp + 0x18));\n            *((rax + r15)) = 1;\n        }\nlabel_1:\n        rbp += 0x20;\n        rdi = *(rbp);\n        r15++;\n    } while (rdi != 0);\n    rbp = *((rsp + 0x10));\n    if (*((rsp + 0x18)) != 0) {\n        goto label_20;\n    }\n    r9d = *((rsp + 0x38));\n    if (r9d != 0) {\n        goto label_20;\n    }\n    if (rbx == 0) {\nlabel_14:\n        eax = *((rsp + 0xc));\n        if (eax != 0) {\n            rax = *((rsp + 0x90));\n            rcx = *((rsp + 0x28));\n            rax = *(rax);\n            rax = *((rcx + rax*8));\n            if (*((rax + 1)) == 0x2d) {\n                goto label_21;\n            }\n            esi = *((rsp + 0x3f));\n            rax = strchr (*((rsp + 0x30)), rsi);\n            rdx = rax;\n            eax = 0xffffffff;\n            if (rdx != 0) {\n                goto label_5;\n            }\n        }\nlabel_21:\n        ecx = *((rsp + 0x98));\n        if (ecx != 0) {\n            goto label_22;\n        }\nlabel_4:\n        rax = *((rsp + 0x90));\n        *((rax + 0x20)) = 0;\n        *(rax)++;\n        *((rax + 8)) = 0;\n        eax = 0x3f;\n        return rax;\n    }\n    r12d = *((rsp + 0x44));\nlabel_15:\n    rax = *((rsp + 0x90));\n    rcx = *((rsp + 0x90));\n    edx = *(rax);\n    *((rcx + 0x20)) = 0;\n    eax = rdx + 1;\n    *(rcx) = eax;\n    ecx = *((rbx + 8));\n    if (*(rbp) != 0) {\n        goto label_23;\n    }\n    if (ecx == 1) {\n        goto label_24;\n    }\nlabel_2:\n    rax = *((rsp + 0x20));\n    if (rax != 0) {\n        *(rax) = r12d;\n    }\n    rdx = *((rbx + 0x10));\n    eax = *((rbx + 0x18));\n    if (rdx != 0) {\n        *(rdx) = eax;\n        eax = 0;\n    }\nlabel_5:\n    return rax;\nlabel_17:\n    eax = *((rbp + 8));\n    if (*((rbx + 8)) != eax) {\n        goto label_0;\n    }\n    rax = *((rbp + 0x10));\n    if (*((rbx + 0x10)) != rax) {\n        goto label_0;\n    }\n    eax = *((rbp + 0x18));\n    if (*((rbx + 0x18)) != eax) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_23:\n    if (ecx == 0) {\n        goto label_25;\n    }\n    rax = *((rsp + 0x90));\n    rbp++;\n    *((rax + 0x10)) = rbp;\n    goto label_2;\nlabel_16:\n    *((rsp + 0x44)) = r15d;\n    rbx = rbp;\n    goto label_1;\nlabel_18:\n    *((rsp + 0x38)) = 1;\n    if (*((rsp + 0x18)) == 0) {\n        goto label_1;\n    }\n    goto label_3;\nlabel_22:\n    rax = *((rsp + 0x28));\n    edx = 5;\n    rbx = *(rax);\n    rax = dcgettext (0, \"%s: unrecognized option '%s%s'\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r14;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbx;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_4;\nlabel_20:\n    r8d = *((rsp + 0x98));\n    if (r8d != 0) {\n        edi = *((rsp + 0x38));\n        if (edi == 0) {\n            goto label_26;\n        }\n        rax = *((rsp + 0x28));\n        edx = 5;\n        rbx = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' is ambiguous\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r14;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbx;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        rax = *((rsp + 0x90));\n        r14 = *((rax + 0x20));\n    }\nlabel_9:\n    esi = *((rsp + 0x48));\n    if (esi != 0) {\n        goto label_27;\n    }\nlabel_7:\n    rax = strlen (r14);\n    r14 += rax;\n    rax = *((rsp + 0x90));\n    *((rax + 0x20)) = r14;\n    *(rax)++;\n    *((rax + 8)) = 0;\n    eax = 0x3f;\n    goto label_5;\nlabel_24:\n    if (eax >= *((rsp + 0x40))) {\n        goto label_28;\n    }\n    rcx = *((rsp + 0x90));\n    edx += 2;\n    rax = (int64_t) eax;\n    *(rcx) = edx;\n    rcx = *((rsp + 0x28));\n    rax = *((rcx + rax*8));\n    rcx = *((rsp + 0x90));\n    *((rcx + 0x10)) = rax;\n    goto label_2;\nlabel_11:\n    r13d = 0;\n    goto label_6;\nlabel_25:\n    edx = *((rsp + 0x98));\n    while (1) {\n        eax = *((rbx + 0x18));\n        rcx = *((rsp + 0x90));\n        *((rcx + 8)) = eax;\n        eax = 0x3f;\n        goto label_5;\nlabel_19:\n        rdi = *((rsp + 0x4c));\n        rax = calloc (rdi, 1);\n        *((rsp + 0x18)) = rax;\n        if (rax == 0) {\n            goto label_29;\n        }\n        rax = *((rsp + 0x44));\n        rcx = *((rsp + 0x18));\n        *((rsp + 0x48)) = 1;\n        *((rcx + rax)) = 1;\n        goto label_3;\n        rax = *((rsp + 0x28));\n        r12 = *(rbx);\n        edx = 5;\n        rbp = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' doesn't allow an argument\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r12;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_27:\n    free (*((rsp + 0x18)));\n    goto label_7;\nlabel_28:\n    eax = *((rsp + 0x98));\n    if (eax != 0) {\n        goto label_30;\n    }\nlabel_10:\n    eax = *((rbx + 0x18));\n    rcx = *((rsp + 0x90));\n    *((rcx + 8)) = eax;\n    rax = *((rsp + 0x30));\n    al = (*(rax) != 0x3a) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = rax * 5;\n    goto label_5;\nlabel_26:\n    rdi = stderr;\n    flockfile ();\n    rax = *((rsp + 0x90));\n    edx = 5;\n    rbx = *((rax + 0x20));\n    rax = *((rsp + 0x28));\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' is ambiguous; possibilities:\");\n    rdi = stderr;\n    r9 = rbx;\n    r8 = *((rsp + 0xa0));\n    rcx = rbp;\n    rdx = rax;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    rax = *((rsp + 0x18));\n    rdi = stderr;\n    rbx = *(rsp);\n    r12 = rax + r12 + 1;\n    while (*(rbp) == 0) {\nlabel_8:\n        rbp++;\n        rbx += 0x20;\n        if (r12 == rbp) {\n            goto label_31;\n        }\n    }\n    r8 = *(rbx);\n    edx = \" '%s%s';\n    esi = 1;\n    eax = 0;\n    rcx = *((rsp + 0xa0));\n    fprintf_chk ();\n    rdi = stderr;\n    goto label_8;\nlabel_31:\n    fputc (0xa, rdi);\n    rdi = stderr;\n    funlockfile ();\n    rax = *((rsp + 0x90));\n    r14 = *((rax + 0x20));\n    goto label_9;\nlabel_30:\n    rax = *((rsp + 0x28));\n    r12 = *(rbx);\n    edx = 5;\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' requires an argument\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r12;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbp;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_10;\nlabel_29:\n    *((rsp + 0x38)) = 1;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00409640",
            "funcStartAddr": "0x409640",
            "funcEndAddr": "0x409c06",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x409640 */\n#include <stdint.h>\n \nuint64_t fcn_00409640 (int64_t arg_70h, int64_t arg_78h, int64_t arg1, int64_t arg2, int64_t arg3, uint32_t arg4, int64_t arg5, int64_t arg6) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_1ch;\n    int64_t var_20h;\n    int64_t var_28h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rbx = *((rsp + 0x70));\n    *((rsp + 8)) = rcx;\n    *((rsp + 0x10)) = r8;\n    r13d = *((rbx + 4));\n    if (edi <= 0) {\n        goto label_16;\n    }\n    eax = *(rbx);\n    r12 = rsi;\n    r15 = rdx;\n    *((rbx + 0x10)) = 0;\n    if (eax == 0) {\n        goto label_17;\n    }\n    esi = *((rbx + 0x18));\n    if (esi == 0) {\nlabel_1:\n        *((rbx + 0x30)) = eax;\n        *((rbx + 0x2c)) = eax;\n        *((rbx + 0x20)) = 0;\n        eax = *(r15);\n        if (al == 0x2d) {\n            goto label_18;\n        }\n        if (al == 0x2b) {\n            goto label_19;\n        }\n        ecx = *((rsp + 0x78));\n        edx = 0;\n        if (ecx == 0) {\n            goto label_20;\n        }\nlabel_8:\n        *((rbx + 0x28)) = 0;\n        goto label_11;\n    }\n    eax = *(rdx);\n    rdx = *((rbx + 0x20));\n    ecx = rax - 0x2b;\n    ecx &= 0xfd;\n    if (ecx != 0) {\n        goto label_21;\n    }\n    eax = *((r15 + 1));\n    r15++;\n    eax = 0;\n    if (al == 0x3a) {\n        r13d = eax;\n    }\n    if (rdx != 0) {\n        goto label_22;\n    }\n    do {\nlabel_0:\n        eax = *(rbx);\n        if (*((rbx + 0x30)) > eax) {\n            *((rbx + 0x30)) = eax;\n        }\n        if (eax < *((rbx + 0x2c))) {\n            *((rbx + 0x2c)) = eax;\n        }\n        if (*((rbx + 0x28)) == 1) {\n            goto label_23;\n        }\nlabel_4:\n        if (ebp == eax) {\n            goto label_24;\n        }\n        rdx = (int64_t) eax;\n        ecx = 3;\n        edi = 0x40ef59;\n        r14 = *((r12 + rdx*8));\n        rsi = *((r12 + rdx*8));\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (ebp > eax) ? 1 : 0;\n        if (cl != 0) {\n            goto label_25;\n        }\n        edx = *((rbx + 0x2c));\n        ecx = *((rbx + 0x30));\n        eax++;\n        *(rbx) = eax;\n        if (edx == ecx) {\n            goto label_26;\n        }\n        if (eax != ecx) {\n            fcn_00408f40 (r12, rbx);\n            edx = *((rbx + 0x2c));\n        }\nlabel_12:\n        *((rbx + 0x30)) = ebp;\n        *(rbx) = ebp;\n        goto label_27;\nlabel_18:\n        *((rbx + 0x28)) = 2;\n        r15++;\n        edx = 0;\nlabel_11:\n        *((rbx + 0x18)) = 1;\n        eax = *(r15);\nlabel_21:\n        eax = 0;\n        if (al == 0x3a) {\n            r13d = eax;\n        }\n    } while (rdx == 0);\nlabel_22:\n    if (*(rdx) == 0) {\n        goto label_0;\n    }\nlabel_6:\n    r8 = rdx + 1;\n    *((rsp + 0x20)) = rdx;\n    *((rbx + 0x20)) = r8;\n    r14d = *(rdx);\n    *((rsp + 0x28)) = r8;\n    *((rsp + 0x1c)) = r14b;\n    rax = strchr (r15, r14d);\n    rdx = *((rsp + 0x20));\n    ecx = *((rsp + 0x1c));\n    r8 = *((rsp + 0x28));\n    if (*((rdx + 1)) == 0) {\n        *(rbx)++;\n    }\n    ecx -= 0x3a;\n    if (cl <= 1) {\n        goto label_28;\n    }\n    if (rax == 0) {\n        goto label_28;\n    }\n    ecx = *((rax + 1));\n    if (*(rax) == 0x57) {\n        goto label_29;\n    }\nlabel_7:\n    if (cl == 0x3a) {\n        goto label_30;\n    }\n    do {\nlabel_2:\n        eax = r14d;\n        return rax;\nlabel_25:\n        if (*(r14) == 0x2d) {\n            goto label_31;\n        }\nlabel_5:\n        edx = *((rbx + 0x28));\n        if (edx == 0) {\n            goto label_16;\n        }\n        eax++;\n        *((rbx + 0x10)) = r14;\n        r14d = 1;\n        *(rbx) = eax;\n    } while (1);\nlabel_17:\n    *(rbx) = 1;\n    eax = 1;\n    goto label_1;\nlabel_24:\n    ebp = *((rbx + 0x30));\n    edx = *((rbx + 0x2c));\nlabel_27:\n    if (edx != ebp) {\n        *(rbx) = edx;\n    }\nlabel_16:\n    r14d = 0xffffffff;\n    goto label_2;\nlabel_23:\n    edx = *((rbx + 0x30));\n    if (*((rbx + 0x2c)) == edx) {\n        goto label_32;\n    }\n    if (eax != edx) {\n        *((rsp + 0x1c)) = r9d;\n        fcn_00408f40 (r12, rbx);\n        edx = *(rbx);\n        r9d = *((rsp + 0x1c));\n    }\nlabel_9:\n    if (ebp <= edx) {\n        goto label_33;\n    }\n    rax = (int64_t) edx;\n    while (*(rcx) != 0x2d) {\nlabel_3:\n        edx = rsi + 1;\n        rax++;\n        *(rbx) = edx;\n        if (ebp <= eax) {\n            goto label_33;\n        }\n        rcx = *((r12 + rax*8));\n        esi = eax;\n        edx = eax;\n    }\n    if (*((rcx + 1)) == 0) {\n        goto label_3;\n    }\n    eax = *(rbx);\nlabel_10:\n    *((rbx + 0x30)) = edx;\n    goto label_4;\nlabel_31:\n    ecx = *((r14 + 1));\n    if (cl == 0) {\n        goto label_5;\n    }\n    if (*((rsp + 8)) == 0) {\n        goto label_34;\n    }\n    if (cl == 0x2d) {\n        goto label_35;\n    }\n    if (r9d == 0) {\n        goto label_34;\n    }\n    if (*((r14 + 2)) == 0) {\n        esi = (int32_t) cl;\n        *((rsp + 0x1c)) = r9d;\n        rax = strchr (r15, rsi);\n        r9d = *((rsp + 0x1c));\n        if (rax != 0) {\n            goto label_34;\n        }\n    }\n    rdx = r14 + 1;\n    *((rbx + 0x20)) = rdx;\n    eax = fcn_00409020 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), r9);\n    r14d = eax;\n    if (eax != 0xffffffff) {\n        goto label_2;\n    }\n    rax = *(rbx);\n    r14 = *((r12 + rax*8));\nlabel_34:\n    rdx = r14 + 1;\n    goto label_6;\nlabel_29:\n    if (*((rsp + 8)) == 0) {\n        goto label_7;\n    }\n    if (cl != 0x3b) {\n        goto label_7;\n    }\n    if (*((rdx + 1)) == 0) {\n        rax = *(rbx);\n        if (eax == ebp) {\n            goto label_36;\n        }\n        r8 = *((r12 + rax*8));\n    }\n    *((rbx + 0x20)) = r8;\n    *((rbx + 0x10)) = 0;\nlabel_14:\n    eax = fcn_00409020 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), 0);\n    r14d = eax;\n    goto label_2;\nlabel_20:\n    *((rsp + 0x1c)) = r9d;\n    rax = getenv (\"POSIXLY_CORRECT\");\n    r9d = *((rsp + 0x1c));\n    if (rax == 0) {\n        goto label_37;\n    }\n    rdx = *((rbx + 0x20));\n    goto label_8;\nlabel_30:\n    edx = *((rdx + 1));\n    if (*((rax + 2)) == 0x3a) {\n        goto label_38;\n    }\n    rax = *(rbx);\n    if (dl != 0) {\n        goto label_39;\n    }\n    if (ebp == eax) {\n        goto label_40;\n    }\n    edx = rax + 1;\n    rax = *((r12 + rax*8));\n    *(rbx) = edx;\n    *((rbx + 0x10)) = rax;\nlabel_13:\n    *((rbx + 0x20)) = 0;\n    goto label_2;\nlabel_32:\n    if (eax == edx) {\n        goto label_9;\n    }\n    *((rbx + 0x2c)) = eax;\n    edx = eax;\n    goto label_9;\nlabel_33:\n    eax = edx;\n    goto label_10;\nlabel_19:\n    *((rbx + 0x28)) = 0;\n    r15++;\n    edx = 0;\n    goto label_11;\nlabel_28:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0x3f;\n        goto label_2;\nlabel_26:\n        *((rbx + 0x2c)) = eax;\n        edx = eax;\n        goto label_12;\nlabel_39:\n        eax++;\n        *((rbx + 0x10)) = r8;\n        *(rbx) = eax;\n        goto label_13;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: invalid option -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_38:\n    if (dl != 0) {\n        *((rbx + 0x10)) = r8;\n        *(rbx)++;\n        goto label_13;\nlabel_37:\n        *((rbx + 0x28)) = 1;\n        rdx = *((rbx + 0x20));\n        goto label_11;\n    }\n    *((rbx + 0x10)) = 0;\n    goto label_13;\nlabel_40:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_13;\nlabel_35:\n        rdx = r14 + 2;\n        *((rbx + 0x20)) = rdx;\n        goto label_14;\nlabel_36:\n        if (r13d != 0) {\n            goto label_41;\n        }\nlabel_15:\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_2;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_41:\n    rbp = *(r12);\n    edx = 5;\n    rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n    rdi = stderr;\n    r8d = r14d;\n    esi = 1;\n    rdx = rax;\n    rcx = rbp;\n    eax = 0;\n    fprintf_chk ();\n    goto label_15;\n}\n"
        },
        {
            "funcName": "fcn_00409c10",
            "funcStartAddr": "0x409c10",
            "funcEndAddr": "0x409c66",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x409c10 */\n#include <stdint.h>\n \nint32_t fcn_00409c10 (int64_t arg_10h) {\n    eax = *(0x0061233c);\n    *(0x00612500) = eax;\n    eax = *(0x00612338);\n    *(0x00612504) = eax;\n    eax = *((rsp + 0x10));\n    fcn_00409640 (rdi, rsi, rdx, rcx, r8, r9);\n    edx = imp.__libc_start_main;\n    *(0x0061233c) = edx;\n    rdx = imp.__libc_start_main;\n    *(0x00612550) = rdx;\n    edx = imp.__libc_start_main;\n    *(0x00612334) = edx;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00409c90",
            "funcStartAddr": "0x409c90",
            "funcEndAddr": "0x409ca3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x409c90 */\n#include <stdint.h>\n \nvoid fcn_00409c90 (void) {\n    r9d = 0;\n    fcn_00409c10 (rdi);\n}\n"
        },
        {
            "funcName": "fcn_00409d10",
            "funcStartAddr": "0x409d10",
            "funcEndAddr": "0x409d8a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x409d10 */\n#include <stdint.h>\n \nuint64_t fcn_00409d10 (wint_t arg1, int64_t arg2, size_t * arg3, mbstate_t * ps) {\n    int64_t var_ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = ps;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    rbx = 0xfffffffffffffffe;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r12 = rdi;\n    while (1) {\n        rax = mbrtowc (r12, rbp, rdx, rcx);\n        rbx = rax;\n        if (rax > 0xfffffffffffffffd) {\n            goto label_2;\n        }\nlabel_0:\n        rax = rbx;\n        return rax;\nlabel_1:\n        edx = 1;\n        r12 = rsp + 0xc;\n    }\nlabel_2:\n    al = fcn_0040a000 (0);\n    if (al != 0) {\n        goto label_0;\n    }\n    eax = *(rbp);\n    ebx = 1;\n    *(r12) = eax;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00409d90",
            "funcStartAddr": "0x409d90",
            "funcEndAddr": "0x409eba",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x409d90 */\n#include <stdint.h>\n \nint64_t fcn_00409d90 (int64_t arg1, uint32_t arg2, void * arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rbx = rdi;\n    if (*(rdx) == 0) {\n        goto label_2;\n    }\n    eax = imp.__libc_start_main;\n    r12d = esi;\n    if (eax == 0) {\n        goto label_3;\n    }\nlabel_1:\n    if (eax < 0) {\n        goto label_4;\n    }\n    eax = strlen (rbp);\n    rdi = rax + 0x1b;\n    while (rax != 0) {\n        r8d = r12d;\n        ecx = \"/proc/self/fd/%d/\";\n        esi = 1;\n        rdi = rbx;\n        rdx = 0xffffffffffffffff;\n        eax = 0;\n        eax = sprintf_chk ();\n        rdi = (int64_t) eax;\n        rdi += rbx;\n        strcpy (rdi, rbp);\n        rax = rbx;\nlabel_0:\n        return rax;\n        rax = malloc (rdi);\n        rbx = rax;\n    }\nlabel_4:\n    eax = 0;\n    goto label_0;\nlabel_3:\n    eax = open (\"/proc/self/fd\", 0x10900, rdx);\n    r13d = eax;\n    if (eax < 0) {\n        *(0x00612538) = 0xffffffff;\n        eax = 0;\n        return rax;\nlabel_2:\n        *(rdi) = 0;\n        rax = rdi;\n        return rax;\n    }\n    r8d = eax;\n    ecx = \"/proc/self/fd/%d/../fd\";\n    edx = 0x20;\n    rdi = rsp;\n    esi = 1;\n    eax = 0;\n    sprintf_chk ();\n    eax = access (rsp, 0);\n    eax -= eax;\n    eax &= 2;\n    eax--;\n    *(0x00612538) = eax;\n    close (r13d);\n    eax = imp.__libc_start_main;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00409ec0",
            "funcStartAddr": "0x409ec0",
            "funcEndAddr": "0x409f1d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x409ec0 */\n#include <stdint.h>\n \nuint64_t fcn_00409ec0 (int64_t arg1) {\n    rdi = arg1;\n    rax = fpending ();\n    ebx = *(rbp);\n    r12 = rax;\n    ebx &= 0x20;\n    eax = fcn_0040bd60 (rbp);\n    if (ebx != 0) {\n        goto label_1;\n    }\n    if (eax == 0) {\n        goto label_0;\n    }\n    if (r12 != 0) {\n        goto label_2;\n    }\n    rax = errno_location ();\n    al = (*(rax) != 9) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = -eax;\n    do {\nlabel_0:\n        return rax;\nlabel_1:\n        if (eax != 0) {\n            goto label_2;\n        }\n        errno_location ();\n        *(rax) = 0;\n        eax = 0xffffffff;\n    } while (1);\nlabel_2:\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00409f20",
            "funcStartAddr": "0x409f20",
            "funcEndAddr": "0x409f30",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x409f20 */\n#include <stdint.h>\n \nvoid fcn_00409f20 (int64_t arg1) {\n    rdi = arg1;\n    *((rdi + 0x10)) = 0;\n    *((rdi + 0x18)) = 0x95f616;\n}\n"
        },
        {
            "funcName": "fcn_00409f30",
            "funcStartAddr": "0x409f30",
            "funcEndAddr": "0x409fac",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x409f30 */\n#include <stdint.h>\n \nint64_t fcn_00409f30 (uint32_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    if (*((rdi + 0x18)) != 0x95f616) {\n        goto label_1;\n    }\n    rax = *((rdi + 0x10));\n    rdx = *((rsi + 8));\n    if (rax == 0) {\n        goto label_2;\n    }\n    while (*(rsi) != rcx) {\n        rcx = rax + 1;\n        *((rdi + 0x10)) = rcx;\n        if ((rax & rcx) == 0) {\n            goto label_3;\n        }\n        eax = 0;\n        return rax;\nlabel_2:\n        *((rdi + 0x10)) = 1;\nlabel_0:\n        rax = *(rsi);\n        *(rdi) = rdx;\n        *((rdi + 8)) = rax;\n        eax = 0;\n        return rax;\n        rcx = *((rdi + 8));\n    }\n    eax = 1;\n    return rax;\nlabel_3:\n    if (rcx != 0) {\n        goto label_0;\n    }\n    eax = 1;\n    return rax;\nlabel_1:\n    return assert_fail (\"state->magic == 9827862\", \"lib/cycle-check.c\", 0x3c, \"cycle_check\");\n}\n"
        },
        {
            "funcName": "fcn_00409fb0",
            "funcStartAddr": "0x409fb0",
            "funcEndAddr": "0x409ffa",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x409fb0 */\n#include <stdint.h>\n \nuint64_t fcn_00409fb0 (int64_t arg_60h, int64_t arg3, int32_t oflag, const char * path) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_30h;\n    rdx = arg3;\n    rsi = oflag;\n    rdi = path;\n    *((rsp + 0x30)) = rdx;\n    edx = 0;\n    while (1) {\n        eax = 0;\n        eax = open (rdi, rsi, rdx);\n        fcn_0040ba20 (eax);\n        return eax;\n        rax = rsp + 0x60;\n        *((rsp + 8)) = 0x10;\n        edx = *((rsp + 0x30));\n        *((rsp + 0x10)) = rax;\n        rax = rsp + 0x20;\n        *((rsp + 0x18)) = rax;\n    }\n}\n"
        },
        {
            "funcName": "fcn_0040a000",
            "funcStartAddr": "0x40a000",
            "funcEndAddr": "0x40a05e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40a000 */\n#include <stdint.h>\n \nuint64_t fcn_0040a000 (int32_t category) {\n    rdi = category;\n    rax = setlocale (rdi, 0);\n    rdx = rax;\n    eax = 1;\n    if (rdx != 0) {\n        ecx = 2;\n        edi = 0x40efec;\n        rsi = rdx;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (rdx > 0) ? 1 : 0;\n        eax = 0;\n        if (cl != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    edi = \"POSIX\";\n    ecx = 6;\n    rsi = rdx;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (cl > 0) ? 1 : 0;\n    al = (al != 0) ? 1 : 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040a060",
            "funcStartAddr": "0x40a060",
            "funcEndAddr": "0x40a0f3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40a060 */\n#include <stdint.h>\n \nint64_t fcn_0040a060 (uint32_t arg1, int64_t arg3) {\n    rdi = arg1;\n    rdx = arg3;\n    esi = 0xa;\n    r9 = 0xaaaaaaaaaaaaaaab;\n    if (rdi >= 0xa) {\n        rsi = rdi;\n    }\n    rsi |= 1;\n    if (rsi == -1) {\n        goto label_1;\n    }\nlabel_0:\n    rax = rsi;\n    rcx = rsi;\n    rdx:rax = rax * r9;\n    rax = rdx;\n    rax >>= 1;\n    rax *= 3;\n    rcx -= rax;\n    rax = rcx;\n    if (rsi <= 9) {\n        goto label_2;\n    }\n    if (rcx == 0) {\n        goto label_3;\n    }\n    r8d = 0x10;\n    edi = 9;\n    ecx = 3;\n    while (rdi < rsi) {\n        r8 += 8;\n        if (rdx == 0) {\n            goto label_3;\n        }\n        rcx += 2;\n        rax = rsi;\n        edx = 0;\n        rdi += r8;\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rax = rdx;\n    }\nlabel_2:\n    if (rax != 0) {\n        goto label_1;\n    }\nlabel_3:\n    rsi += 2;\n    if (rsi != -1) {\n        goto label_0;\n    }\nlabel_1:\n    rax = rsi;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040a120",
            "funcStartAddr": "0x40a120",
            "funcEndAddr": "0x412104",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40a120 */\n#include <stdint.h>\n \nuint64_t fcn_0040a120 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    do {\n        abort ();\n        rbx = rdi;\n        rdi = rsi;\n        rsi = *((rbx + 0x10));\n        rax = uint64_t (*rbx + 0x30)(uint64_t) (rbx);\n    } while (*((rbx + 0x10)) <= rax);\n    rax <<= 4;\n    rax += *(rbx);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040a150",
            "funcStartAddr": "0x40a150",
            "funcEndAddr": "0x40a269",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40a150 */\n#include <stdint.h>\n \nuint64_t fcn_0040a150 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r14 = rdx;\n    r13d = ecx;\n    r12 = rdi;\n    rax = fcn_0040a120 (rdi, rsi);\n    *(r14) = rax;\n    rsi = *(rax);\n    if (rsi == 0) {\n        goto label_1;\n    }\n    rbx = rax;\n    if (rsi == rbp) {\n        goto label_2;\n    }\n    rdi = rbp;\n    al = uint64_t (*r12 + 0x38)() ();\n    if (al != 0) {\n        goto label_3;\n    }\n    rax = *((rbx + 8));\n    if (rax == 0) {\n        goto label_1;\n    }\n    rsi = *(rax);\n    if (rbp != rsi) {\n        goto label_4;\n    }\n    goto label_5;\n    do {\n        rbx = *((rbx + 8));\n        rax = *((rbx + 8));\n        if (rax == 0) {\n            goto label_1;\n        }\n        rsi = *(rax);\n        if (rsi == rbp) {\n            goto label_5;\n        }\nlabel_4:\n        rdi = rbp;\n        al = uint64_t (*r12 + 0x38)() ();\n    } while (al == 0);\n    rax = *((rbx + 8));\n    rsi = *(rax);\nlabel_5:\n    if (r13b == 0) {\n        goto label_0;\n    }\n    rdx = *((rax + 8));\n    *((rbx + 8)) = rdx;\n    *(rax) = 0;\n    rdx = *((r12 + 0x48));\n    *((rax + 8)) = rdx;\n    *((r12 + 0x48)) = rax;\n    do {\nlabel_0:\n        rax = rsi;\n        return rax;\nlabel_3:\n        rsi = *(rbx);\nlabel_2:\n    } while (r13b == 0);\n    rax = *((rbx + 8));\n    if (rax != 0) {\n        __asm (\"movdqu xmm0, xmmword [rax]\");\n        __asm (\"movups xmmword [rbx], xmm0\");\n        *(rax) = 0;\n        rdx = *((r12 + 0x48));\n        *((rax + 8)) = rdx;\n        *((r12 + 0x48)) = rax;\n        rax = rsi;\n        return rax;\nlabel_1:\n        esi = 0;\n        rax = rsi;\n        return rax;\n    }\n    *(rbx) = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040a270",
            "funcStartAddr": "0x40a270",
            "funcEndAddr": "0x40a2ee",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40a270 */\n#include <stdint.h>\n \nint64_t fcn_0040a270 (int64_t arg1) {\n    rdi = arg1;\n    rax = *(rdi);\n    if (rax != 0x40f070) {\n        xmm0 = *((rax + 8));\n        __asm (\"comiss xmm0, dword [0x0040f084]\");\n        if (rax > 0x40f070) {\n            xmm1 = *(0x0040f088);\n            __asm (\"comiss xmm1, xmm0\");\n            if (rax <= 0x40f070) {\n                goto label_0;\n            }\n            xmm1 = *((rax + 0xc));\n            __asm (\"comiss xmm1, dword [0x0040f08c]\");\n            if (rax <= 0x40f070) {\n                goto label_0;\n            }\n            xmm1 = *(rax);\n            __asm (\"comiss xmm1, dword [0x0040f090]\");\n            if (rax < 0x40f070) {\n                goto label_0;\n            }\n            __asm (\"addss xmm1, dword [0x0040f084]\");\n            xmm2 = *((rax + 4));\n            __asm (\"comiss xmm2, xmm1\");\n            if (rax <= 0x40f070) {\n                goto label_0;\n            }\n            xmm3 = *(0x0040f094);\n            __asm (\"comiss xmm3, xmm2\");\n            if (rax < 0x40f070) {\n                goto label_0;\n            }\n            __asm (\"comiss xmm0, xmm1\");\n            eax = 1;\n            if (rax > 0x40f070) {\n                goto label_1;\n            }\n        }\nlabel_0:\n        *(rdi) = 0x40f070;\n        eax = 0;\n        return rax;\n    }\n    eax = 1;\nlabel_1:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040a2f0",
            "funcStartAddr": "0x40a2f0",
            "funcEndAddr": "0x40a43a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40a2f0 */\n#include <stdint.h>\n \nuint64_t fcn_0040a2f0 (int64_t arg1, uint32_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r14d = edx;\n    r13 = rsi;\n    r12 = *(rsi);\n    if (r12 < *((rsi + 8))) {\n        goto label_2;\n    }\n    goto label_5;\n    do {\nlabel_1:\n        r12 += 0x10;\n        if (*((r13 + 8)) <= r12) {\n            goto label_5;\n        }\nlabel_2:\n        r15 = *(r12);\n    } while (r15 == 0);\n    rbx = *((r12 + 8));\n    if (rbx != 0) {\n        goto label_0;\n    }\n    goto label_6;\n    do {\n        rcx = *((rax + 8));\n        *((rbx + 8)) = rcx;\n        *((rax + 8)) = rbx;\n        rbx = rdx;\n        if (rdx == 0) {\n            goto label_7;\n        }\nlabel_0:\n        r15 = *(rbx);\n        rax = fcn_0040a120 (rbp, r15);\n        rdx = *((rbx + 8));\n    } while (*(rax) != 0);\n    *(rax) = r15;\n    *((rbp + 0x18))++;\n    *(rbx) = 0;\n    rax = *((rbp + 0x48));\n    *((rbx + 8)) = rax;\n    *((rbp + 0x48)) = rbx;\n    rbx = rdx;\n    if (rdx != 0) {\n        goto label_0;\n    }\nlabel_7:\n    r15 = *(r12);\nlabel_6:\n    *((r12 + 8)) = 0;\n    if (r14b != 0) {\n        goto label_1;\n    }\n    rax = fcn_0040a120 (rbp, r15);\n    rbx = rax;\n    if (*(rax) == 0) {\n        goto label_8;\n    }\n    rax = *((rbp + 0x48));\n    if (rax == 0) {\n        goto label_9;\n    }\n    rdx = *((rax + 8));\n    *((rbp + 0x48)) = rdx;\nlabel_4:\n    rdx = *((rbx + 8));\n    *(rax) = r15;\n    *((rax + 8)) = rdx;\n    *((rbx + 8)) = rax;\nlabel_3:\n    *(r12) = 0;\n    r12 += 0x10;\n    *((r13 + 0x18))--;\n    if (*((r13 + 8)) > r12) {\n        goto label_2;\n    }\nlabel_5:\n    eax = 1;\n    return rax;\nlabel_8:\n    *(rax) = r15;\n    *((rbp + 0x18))++;\n    goto label_3;\nlabel_9:\n    rax = malloc (0x10);\n    if (rax != 0) {\n        goto label_4;\n    }\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040a680",
            "funcStartAddr": "0x40a680",
            "funcEndAddr": "0x40a6d3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40a680 */\n#include <stdint.h>\n \nuint64_t fcn_0040a680 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r12 = rdi;\n    rax = fcn_0040a120 (rdi, rsi);\n    rsi = *(rax);\n    if (rsi == 0) {\n        goto label_0;\n    }\n    rbx = rax;\n    while (rbx != 0) {\n        rsi = *(rbx);\n        if (rsi == rbp) {\n            goto label_1;\n        }\n        rdi = rbp;\n        al = uint64_t (*r12 + 0x38)() ();\n        if (al != 0) {\n            goto label_2;\n        }\n        rbx = *((rbx + 8));\n    }\nlabel_0:\n    eax = 0;\n    return rax;\nlabel_2:\n    rbp = *(rbx);\nlabel_1:\n    rax = *(rbx);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040a8f0",
            "funcStartAddr": "0x40a8f0",
            "funcEndAddr": "0x40aa7a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40a8f0 */\n#include <stdint.h>\n \nuint64_t fcn_0040a8f0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    eax = 0x40a100;\n    r15 = rsi;\n    r14 = r8;\n    r13 = rcx;\n    r12 = rdx;\n    edi = 0x50;\n    if (rdx == 0) {\n        r12 = rax;\n    }\n    eax = 0x40a110;\n    if (rcx == 0) {\n        r13 = rax;\n    }\n    rax = malloc (rdi);\n    rbx = rax;\n    if (rax == 0) {\n        goto label_4;\n    }\n    rdi = rax + 0x28;\n    if (r15 == 0) {\n        goto label_5;\n    }\n    *((rax + 0x28)) = r15;\n    al = fcn_0040a270 (rdi);\n    if (al == 0) {\n        goto label_0;\n    }\n    if (*((r15 + 0x10)) == 0) {\n        goto label_6;\n    }\nlabel_1:\n    rax = fcn_0040a060 (rbp, rsi);\n    rax >>= 0x3d;\n    al = (rax != 0) ? 1 : 0;\n    eax = (int32_t) al;\n    if (((rbp >> 0x3c) & 1) < 0) {\n        goto label_0;\n    }\n    if (rax != 0) {\n        goto label_0;\n    }\n    *((rbx + 0x10)) = rbp;\n    if (rbp == 0) {\n        goto label_0;\n    }\n    rax = calloc (rbp, 0x10);\n    *(rbx) = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    rbp <<= 4;\n    *((rbx + 0x18)) = 0;\n    rbp += rax;\n    *((rbx + 0x20)) = 0;\n    *((rbx + 8)) = rbp;\n    *((rbx + 0x30)) = r12;\n    *((rbx + 0x38)) = r13;\n    *((rbx + 0x40)) = r14;\n    *((rbx + 0x48)) = 0;\n    while (al == 0) {\nlabel_0:\n        ebx = 0;\n        free (rbx);\nlabel_4:\n        rax = rbx;\n        return rax;\nlabel_5:\n        *((rax + 0x28)) = 0x40f070;\n        al = fcn_0040a270 (rdi);\n        xmm1 = *(0x0040f098);\n    }\n    if (rbp < 0) {\n        goto label_7;\n    }\nlabel_2:\n    xmm0 = 0;\n    __asm (\"cvtsi2ss xmm0, rbp\");\nlabel_3:\n    __asm (\"divss xmm0, xmm1\");\n    __asm (\"comiss xmm0, dword [0x0040f09c]\");\n    if (rbp >= 0) {\n        goto label_0;\n    }\n    __asm (\"comiss xmm0, dword [0x0040f0a0]\");\n    if (rbp < 0) {\n        goto label_8;\n    }\n    __asm (\"subss xmm0, dword [0x0040f0a0]\");\n    __asm (\"cvttss2si rbp, xmm0\");\n    __asm (\"btc rbp, 0x3f\");\n    goto label_1;\nlabel_6:\n    xmm1 = *((r15 + 8));\n    if (rbp >= 0) {\n        goto label_2;\n    }\nlabel_7:\n    rax = rbp;\n    ebp &= 1;\n    xmm0 = 0;\n    rax >>= 1;\n    rax |= rbp;\n    __asm (\"cvtsi2ss xmm0, rax\");\n    __asm (\"addss xmm0, xmm0\");\n    goto label_3;\nlabel_8:\n    __asm (\"cvttss2si rbp, xmm0\");\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040ab30",
            "funcStartAddr": "0x40ab30",
            "funcEndAddr": "0x40ac06",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40ab30 */\n#include <stdint.h>\n \nint64_t fcn_0040ab30 (uint32_t arg1) {\n    rdi = arg1;\n    r12 = rdi;\n    rbp = *(rdi);\n    rax = *((rdi + 8));\n    if (*((rdi + 0x40)) == 0) {\n        goto label_2;\n    }\n    if (*((rdi + 0x20)) == 0) {\n        goto label_2;\n    }\n    if (rbp < rax) {\n        goto label_0;\n    }\n    goto label_3;\n    do {\n        rbp += 0x10;\n        if (rax <= rbp) {\n            goto label_4;\n        }\nlabel_0:\n        rdi = *(rbp);\n    } while (rdi == 0);\n    rbx = rbp;\n    while (rbx != 0) {\n        rdi = *(rbx);\n        uint64_t (*r12 + 0x40)() ();\n        rbx = *((rbx + 8));\n    }\n    rax = *((r12 + 8));\n    rbp += 0x10;\n    if (rax > rbp) {\n        goto label_0;\n    }\nlabel_4:\n    rbp = *(r12);\nlabel_2:\n    if (rbp >= rax) {\n        goto label_3;\n    }\nlabel_1:\n    rdi = *((rbp + 8));\n    if (rdi == 0) {\n        goto label_5;\n    }\n    do {\n        rbx = *((rdi + 8));\n        free (rdi);\n        rdi = rbx;\n    } while (rbx != 0);\nlabel_5:\n    rbp += 0x10;\n    if (*((r12 + 8)) > rbp) {\n        goto label_1;\n    }\nlabel_3:\n    rdi = *((r12 + 0x48));\n    if (rdi == 0) {\n        goto label_6;\n    }\n    do {\n        rbx = *((rdi + 8));\n        free (rdi);\n        rdi = rbx;\n    } while (rbx != 0);\nlabel_6:\n    free (*(r12));\n    rdi = r12;\n    return free ();\n}\n"
        },
        {
            "funcName": "fcn_0040ac10",
            "funcStartAddr": "0x40ac10",
            "funcEndAddr": "0x4138b3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40ac10 */\n#include <stdint.h>\n \nuint64_t fcn_0040ac10 (int64_t arg1, uint32_t arg2) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    rdi = arg1;\n    rsi = arg2;\n    do {\nlabel_0:\n        rax = abort ();\n        r12 = *((rdi + 0x28));\n        if (*((r12 + 0x10)) == 0) {\n            if (rsi < 0) {\n                goto label_3;\n            }\n            xmm0 = 0;\n            __asm (\"cvtsi2ss xmm0, rsi\");\nlabel_1:\n            __asm (\"divss xmm0, dword [r12 + 8]\");\n            __asm (\"comiss xmm0, dword [0x0040f09c]\");\n            if (rsi >= 0) {\n                goto label_4;\n            }\n            __asm (\"comiss xmm0, dword [0x0040f0a0]\");\n            if (rsi < 0) {\n                goto label_5;\n            }\n            __asm (\"subss xmm0, dword [0x0040f0a0]\");\n            __asm (\"cvttss2si rsi, xmm0\");\n            __asm (\"btc rsi, 0x3f\");\n        }\nlabel_2:\n        rax = fcn_0040a060 (rsi, rsi);\n        rdx = rax*8;\n        rbx = rax;\n        rax >>= 0x3d;\n        al = (rax != 0) ? 1 : 0;\n        edx = 1;\n        eax = (int32_t) al;\n        __asm (\"cmovs rax, rdx\");\n        if (rbx == 0) {\n            goto label_4;\n        }\n        if (rax != 0) {\n            goto label_4;\n        }\n        if (*((rbp + 0x10)) == rbx) {\n            goto label_6;\n        }\n        rax = calloc (rbx, 0x10);\n        *(rsp) = rax;\n        if (rax == 0) {\n            goto label_4;\n        }\n        *((rsp + 0x10)) = rbx;\n        rbx <<= 4;\n        rbx += rax;\n        rax = *((rbp + 0x30));\n        *((rsp + 0x18)) = 0;\n        *((rsp + 8)) = rbx;\n        *((rsp + 0x30)) = rax;\n        rax = *((rbp + 0x38));\n        *((rsp + 0x20)) = 0;\n        *((rsp + 0x38)) = rax;\n        rax = *((rbp + 0x40));\n        *((rsp + 0x28)) = r12;\n        *((rsp + 0x40)) = rax;\n        rax = *((rbp + 0x48));\n        *((rsp + 0x48)) = rax;\n        eax = fcn_0040a2f0 (rsp, rbp, 0);\n        ebx = eax;\n        if (al != 0) {\n            goto label_7;\n        }\n        rax = *((rsp + 0x48));\n        *((rbp + 0x48)) = rax;\n        al = fcn_0040a2f0 (rbp, rsp, 1);\n    } while (al == 0);\n    al = fcn_0040a2f0 (rbp, rsp, 0);\n    if (al == 0) {\n        goto label_0;\n    }\n    free (*(rsp));\n    eax = ebx;\n    return rax;\nlabel_4:\n    ebx = 0;\n    do {\n        eax = ebx;\n        return rax;\nlabel_3:\n        rax = rsi;\n        esi &= 1;\n        xmm0 = 0;\n        rax >>= 1;\n        rax |= rsi;\n        __asm (\"cvtsi2ss xmm0, rax\");\n        __asm (\"addss xmm0, xmm0\");\n        goto label_1;\nlabel_5:\n        __asm (\"cvttss2si rsi, xmm0\");\n        goto label_2;\nlabel_6:\n        ebx = 1;\n        eax = 1;\n        return rax;\nlabel_7:\n        free (*(rbp));\n        rax = *(rsp);\n        *(rbp) = rax;\n        rax = *((rsp + 8));\n        *((rbp + 8)) = rax;\n        rax = *((rsp + 0x10));\n        *((rbp + 0x10)) = rax;\n        rax = *((rsp + 0x18));\n        *((rbp + 0x18)) = rax;\n        rax = *((rsp + 0x48));\n        *((rbp + 0x48)) = rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040ae10",
            "funcStartAddr": "0x40ae10",
            "funcEndAddr": "0x413d28",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40ae10 */\n#include <stdint.h>\n \nuint64_t fcn_0040ae10 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    do {\nlabel_6:\n        abort ();\n    } while (rsi == 0);\n    r12 = rdx;\n    rbx = rdi;\n    rax = fcn_0040a150 (rdi, rsi, rsp + 8, 0);\n    rdx = rax;\n    if (rax != 0) {\n        eax = 0;\n        if (r12 != 0) {\n            *(r12) = rdx;\n        }\n        return rax;\n    }\n    rax = *((rbx + 0x18));\n    if (rax < 0) {\n        goto label_8;\n    }\n    xmm1 = 0;\n    rdx = *((rbx + 0x28));\n    __asm (\"cvtsi2ss xmm1, rax\");\n    rax = *((rbx + 0x10));\n    if (rax < 0) {\n        goto label_9;\n    }\n    do {\n        xmm0 = 0;\n        __asm (\"cvtsi2ss xmm0, rax\");\n        __asm (\"mulss xmm0, dword [rdx + 8]\");\n        __asm (\"comiss xmm1, xmm0\");\n        if (rax > 0) {\n            goto label_10;\n        }\nlabel_0:\n        r12 = *((rsp + 8));\n        if (*(r12) == 0) {\n            goto label_11;\n        }\n        rax = *((rbx + 0x48));\n        if (rax == 0) {\n            goto label_12;\n        }\n        rdx = *((rax + 8));\n        *((rbx + 0x48)) = rdx;\nlabel_1:\n        rdx = *((r12 + 8));\n        *(rax) = rbp;\n        *((rax + 8)) = rdx;\n        *((r12 + 8)) = rax;\n        eax = 1;\n        *((rbx + 0x20))++;\n        return rax;\nlabel_8:\n        rdx = rax;\n        eax &= 1;\n        xmm1 = 0;\n        rdx >>= 1;\n        rdx |= rax;\n        rax = *((rbx + 0x10));\n        __asm (\"cvtsi2ss xmm1, rdx\");\n        rdx = *((rbx + 0x28));\n        __asm (\"addss xmm1, xmm1\");\n    } while (rax >= 0);\nlabel_9:\n    rcx = rax;\n    eax &= 1;\n    xmm0 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm0, rcx\");\n    __asm (\"addss xmm0, xmm0\");\n    __asm (\"mulss xmm0, dword [rdx + 8]\");\n    __asm (\"comiss xmm1, xmm0\");\n    if (rcx <= 0) {\n        goto label_0;\n    }\nlabel_10:\n    fcn_0040a270 (rbx + 0x28);\n    rdx = *((rbx + 0x28));\n    rax = *((rbx + 0x10));\n    xmm2 = *((rdx + 8));\n    if (rax < 0) {\n        goto label_13;\n    }\n    xmm0 = 0;\n    __asm (\"cvtsi2ss xmm0, rax\");\nlabel_3:\n    rax = *((rbx + 0x18));\n    if (rax < 0) {\n        goto label_14;\n    }\n    xmm1 = 0;\n    __asm (\"cvtsi2ss xmm1, rax\");\nlabel_2:\n    xmm3 = xmm2;\n    __asm (\"mulss xmm3, xmm0\");\n    __asm (\"comiss xmm1, xmm3\");\n    if (rax <= 0) {\n        goto label_0;\n    }\n    __asm (\"mulss xmm0, dword [rdx + 0xc]\");\n    if (*((rdx + 0x10)) == 0) {\n        goto label_15;\n    }\nlabel_4:\n    __asm (\"comiss xmm0, dword [0x0040f09c]\");\n    if (*((rdx + 0x10)) < 0) {\n        goto label_16;\n    }\n    do {\nlabel_5:\n        eax = 0xffffffff;\n        return rax;\nlabel_11:\n        *(r12) = rbp;\n        eax = 1;\n        *((rbx + 0x20))++;\n        *((rbx + 0x18))++;\n        return rax;\nlabel_12:\n        rax = malloc (0x10);\n    } while (rax == 0);\n    goto label_1;\nlabel_14:\n    rcx = rax;\n    eax &= 1;\n    xmm1 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm1, rcx\");\n    __asm (\"addss xmm1, xmm1\");\n    goto label_2;\nlabel_13:\n    rcx = rax;\n    eax &= 1;\n    xmm0 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm0, rcx\");\n    __asm (\"addss xmm0, xmm0\");\n    goto label_3;\nlabel_15:\n    __asm (\"mulss xmm0, xmm2\");\n    goto label_4;\nlabel_16:\n    __asm (\"comiss xmm0, dword [0x0040f0a0]\");\n    if (rcx >= 0) {\n        goto label_17;\n    }\n    __asm (\"cvttss2si rsi, xmm0\");\nlabel_7:\n    al = fcn_0040ac10 (rbx, rsi);\n    if (al == 0) {\n        goto label_5;\n    }\n    rax = fcn_0040a150 (rbx, rbp, rsp + 8, 0);\n    if (rax == 0) {\n        goto label_0;\n    }\n    goto label_6;\nlabel_17:\n    __asm (\"subss xmm0, dword [0x0040f0a0]\");\n    __asm (\"cvttss2si rsi, xmm0\");\n    __asm (\"btc rsi, 0x3f\");\n    goto label_7;\n}\n"
        },
        {
            "funcName": "fcn_0040b090",
            "funcStartAddr": "0x40b090",
            "funcEndAddr": "0x40b0cb",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40b090 */\n#include <stdint.h>\n \nuint64_t fcn_0040b090 (int64_t arg2) {\n    int64_t var_8h;\n    rsi = arg2;\n    rbx = rsi;\n    eax = fcn_0040ae10 (rdi, rsi, rsp + 8);\n    if (eax != 0xffffffff) {\n        if (eax == 0) {\n            rbx = *((rsp + 8));\n        }\n        rax = rbx;\n        return rax;\n    }\n    ebx = 0;\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040b0d0",
            "funcStartAddr": "0x40b0d0",
            "funcEndAddr": "0x40b2a7",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40b0d0 */\n#include <stdint.h>\n \nuint64_t fcn_0040b0d0 (int64_t arg1) {\n    int64_t var_8h;\n    rdi = arg1;\n    rbx = rdi;\n    rax = fcn_0040a150 (rdi, rsi, rsp + 8, 1);\n    if (rax == 0) {\n        goto label_0;\n    }\n    rax = *((rsp + 8));\n    *((rbx + 0x20))--;\n    while (rax <= 0) {\nlabel_0:\n        rax = rbp;\n        return rax;\n        rax = *((rbx + 0x18));\n        rax--;\n        *((rbx + 0x18)) = rax;\n        if (rax < 0) {\n            goto label_6;\n        }\n        xmm0 = 0;\n        rdx = *((rbx + 0x28));\n        __asm (\"cvtsi2ss xmm0, rax\");\n        rax = *((rbx + 0x10));\n        if (rax < 0) {\n            goto label_7;\n        }\nlabel_1:\n        xmm1 = 0;\n        __asm (\"cvtsi2ss xmm1, rax\");\nlabel_2:\n        __asm (\"mulss xmm1, dword [rdx]\");\n        __asm (\"comiss xmm1, xmm0\");\n    }\n    fcn_0040a270 (rbx + 0x28);\n    rax = *((rbx + 0x10));\n    rdx = *((rbx + 0x28));\n    if (rax < 0) {\n        goto label_8;\n    }\n    xmm0 = 0;\n    __asm (\"cvtsi2ss xmm0, rax\");\nlabel_4:\n    rax = *((rbx + 0x18));\n    if (rax < 0) {\n        goto label_9;\n    }\n    xmm1 = 0;\n    __asm (\"cvtsi2ss xmm1, rax\");\nlabel_3:\n    xmm2 = *(rdx);\n    __asm (\"mulss xmm2, xmm0\");\n    __asm (\"comiss xmm2, xmm1\");\n    if (rax <= 0) {\n        goto label_0;\n    }\n    __asm (\"mulss xmm0, dword [rdx + 4]\");\n    if (*((rdx + 0x10)) == 0) {\n        __asm (\"mulss xmm0, dword [rdx + 8]\");\n    }\n    __asm (\"comiss xmm0, dword [0x0040f0a0]\");\n    if (*((rdx + 0x10)) >= 0) {\n        goto label_10;\n    }\n    __asm (\"cvttss2si rsi, xmm0\");\nlabel_5:\n    al = fcn_0040ac10 (rbx, rsi);\n    if (al != 0) {\n        goto label_0;\n    }\n    rdi = *((rbx + 0x48));\n    if (rdi == 0) {\n        goto label_11;\n    }\n    do {\n        r12 = *((rdi + 8));\n        rax = free (rdi);\n        rdi = r12;\n    } while (r12 != 0);\nlabel_11:\n    *((rbx + 0x48)) = 0;\n    goto label_0;\nlabel_6:\n    rdx = rax;\n    eax &= 1;\n    xmm0 = 0;\n    rdx >>= 1;\n    rdx |= rax;\n    rax = *((rbx + 0x10));\n    __asm (\"cvtsi2ss xmm0, rdx\");\n    rdx = *((rbx + 0x28));\n    __asm (\"addss xmm0, xmm0\");\n    if (rax >= 0) {\n        goto label_1;\n    }\nlabel_7:\n    rcx = rax;\n    eax &= 1;\n    xmm1 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm1, rcx\");\n    __asm (\"addss xmm1, xmm1\");\n    goto label_2;\nlabel_9:\n    rcx = rax;\n    eax &= 1;\n    xmm1 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm1, rcx\");\n    __asm (\"addss xmm1, xmm1\");\n    goto label_3;\nlabel_8:\n    rcx = rax;\n    eax &= 1;\n    xmm0 = 0;\n    rcx >>= 1;\n    rcx |= rax;\n    __asm (\"cvtsi2ss xmm0, rcx\");\n    __asm (\"addss xmm0, xmm0\");\n    goto label_4;\nlabel_10:\n    __asm (\"subss xmm0, dword [0x0040f0a0]\");\n    __asm (\"cvttss2si rsi, xmm0\");\n    __asm (\"btc rsi, 0x3f\");\n    goto label_5;\n}\n"
        },
        {
            "funcName": "fcn_0040b2b0",
            "funcStartAddr": "0x40b2b0",
            "funcEndAddr": "0x40b2cb",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40b2b0 */\n#include <stdint.h>\n \nvoid fcn_0040b2b0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    *((rdi + 0x14)) = 0;\n    *((rdi + 0x1c)) = 1;\n    *(rdi) = esi;\n    *((rdi + 4)) = esi;\n    *((rdi + 8)) = esi;\n    *((rdi + 0xc)) = esi;\n    *((rdi + 0x10)) = esi;\n}\n"
        },
        {
            "funcName": "fcn_0040b2d0",
            "funcStartAddr": "0x40b2d0",
            "funcEndAddr": "0x40b2d5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40b2d0 */\n#include <stdint.h>\n \nuint32_t fcn_0040b2d0 (int64_t arg1) {\n    rdi = arg1;\n    eax = *((rdi + 0x1c));\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_0040b2e0",
            "funcStartAddr": "0x40b2e0",
            "funcEndAddr": "0x40b315",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40b2e0 */\n#include <stdint.h>\n \nint32_t fcn_0040b2e0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edx = *((rdi + 0x1c));\n    ecx = *((rdi + 0x14));\n    edx ^= 1;\n    edx = (int32_t) dl;\n    ecx += edx;\n    ecx &= 3;\n    eax = ecx;\n    r8 = rdi + rax*4;\n    eax = *(r8);\n    *(r8) = esi;\n    esi = *((rdi + 0x18));\n    *((rdi + 0x14)) = ecx;\n    if (esi == ecx) {\n        edx += esi;\n        edx &= 3;\n        *((rdi + 0x18)) = edx;\n    }\n    *((rdi + 0x1c)) = 0;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_0040b320",
            "funcStartAddr": "0x40b320",
            "funcEndAddr": "0x414510",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40b320 */\n#include <stdint.h>\n \nint32_t fcn_0040b320 (uint32_t arg1) {\n    rdi = arg1;\n    do {\n        abort ();\n    } while (*((rdi + 0x1c)) != 0);\n    eax = *((rdi + 0x14));\n    esi = *((rdi + 0x10));\n    rcx = rdi + rax*4;\n    rdx = rax;\n    eax = *(rcx);\n    *(rcx) = esi;\n    if (edx != *((rdi + 0x18))) {\n        edx += 3;\n        edx &= 3;\n        *((rdi + 0x14)) = edx;\n        return eax;\n    }\n    *((rdi + 0x1c)) = 1;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_0040b370",
            "funcStartAddr": "0x40b370",
            "funcEndAddr": "0x40b8d2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40b370 */\n#include <stdint.h>\n \nuint64_t fcn_0040b370 (void) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_60h;\n    rax = nl_langinfo (0xe);\n    r15 = imp.__libc_start_main;\n    rbx = rax;\n    eax = 0x40ef77;\n    if (rax == 0) {\n        rbx = rax;\n    }\n    if (r15 == 0) {\n        goto label_15;\n    }\nlabel_1:\n    ebp = *(r15);\n    if (bpl != 0) {\n        goto label_16;\n    }\n    goto label_17;\n    do {\nlabel_0:\n        strlen (r15);\n        rbp = r15 + rax + 1;\n        strlen (rbp);\n        r15 = rbp + rax + 1;\n        ebp = *(r15);\n        if (bpl == 0) {\n            goto label_17;\n        }\nlabel_16:\n        eax = strcmp (rbx, r15);\n        if (eax == 0) {\n            goto label_18;\n        }\n    } while (bpl != 0x2a);\n    if (*((r15 + 1)) != 0) {\n        goto label_0;\n    }\nlabel_18:\n    strlen (r15);\n    rbx = r15 + rax + 1;\nlabel_17:\n    eax = 0x40f0b0;\n    if (*(rbx) == 0) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\nlabel_15:\n    rax = getenv (\"CHARSETALIASDIR\");\n    r13 = rax;\n    if (rax == 0) {\n        goto label_19;\n    }\n    if (*(rax) == 0) {\n        goto label_19;\n    }\n    rax = strlen (rax);\n    r12 = rax;\n    r14 = rax;\n    if (rax != 0) {\n        goto label_20;\n    }\nlabel_13:\n    rax = malloc (0xe);\n    if (rax != 0) {\n        goto label_21;\n    }\n    do {\n        r15d = 0x40ef77;\nlabel_2:\n        *(0x00612540) = r15;\n        goto label_1;\nlabel_19:\n        r12d = 0x65;\n        r14d = 0x64;\n        r13d = \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\";\nlabel_14:\n        rax = malloc (0x73);\n    } while (rax == 0);\n    memcpy (rbp, r13, r14);\n    *((rbp + r14)) = 0x2f;\n    do {\n        r12 += rbp;\n        rax = 0x2e74657372616863;\n        *(r12) = rax;\n        eax = 0x73;\n        *((r12 + 0xc)) = ax;\n        eax = 0;\n        *((r12 + 8)) = 0x61696c61;\n        eax = open (rbp, 0, rdx);\n        r12d = eax;\n        if (eax >= 0) {\n            goto label_22;\n        }\nlabel_6:\n        r15d = 0x40ef77;\nlabel_7:\n        free (rbp);\n        goto label_2;\nlabel_21:\n        eax = memcpy (rbp, r13, r14);\n    } while (1);\nlabel_22:\n    esi = 0x40e6de;\n    edi = eax;\n    r15d = 0;\n    rax = fdopen ();\n    *((rsp + 8)) = 0;\n    r13 = rax;\n    if (rax == 0) {\n        goto label_23;\n    }\n    rax = rbx;\n    r12 = rsp + 0x60;\n    r14 = rsp + 0x20;\n    rbx = r13;\n    r13 = rax;\n    do {\nlabel_3:\n        rax = *((rbx + 8));\n        if (rax >= *((rbx + 0x10))) {\n            goto label_24;\n        }\nlabel_4:\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        edi = *(rax);\nlabel_5:\n        eax = rdi - 9;\n    } while (eax <= 1);\n    if (edi == 0x20) {\n        goto label_3;\n    }\n    if (edi == 0x23) {\n        goto label_25;\n    }\n    eax = ungetc (rdi, rbx);\n    eax = 0;\n    rcx = r12;\n    rdx = r14;\n    eax = fscanf (rbx, \"%50s %50s\");\n    if (eax <= 1) {\n        goto label_12;\n    }\n    rcx = r14;\n    do {\n        edx = *(rcx);\n        rcx += 4;\n        eax = rdx - 0x1010101;\n        edx = ~edx;\n        eax &= edx;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    edx = eax;\n    edx >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = edx;\n    }\n    rdx = rcx + 2;\n    if ((eax & 0x8080) == 0) {\n        rcx = rdx;\n    }\n    edx = eax;\n    dl += al;\n    rdx = r12;\n    rcx -= 3;\n    rcx -= r14;\n    do {\n        esi = *(rdx);\n        rdx += 4;\n        eax = rsi - 0x1010101;\n        esi = ~esi;\n        eax &= esi;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    esi = eax;\n    *((rsp + 0x10)) = rcx;\n    esi >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = esi;\n    }\n    rsi = rdx + 2;\n    if ((eax & 0x8080) == 0) {\n        rdx = rsi;\n    }\n    esi = eax;\n    sil += al;\n    rdx -= 3;\n    rdx -= r12;\n    rax = rcx + rdx;\n    *((rsp + 0x18)) = rdx;\n    if (*((rsp + 8)) != 0) {\n        goto label_26;\n    }\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    rax = malloc (rax + 3);\n    rcx = *((rsp + 0x10));\n    rdx = *((rsp + 0x18));\nlabel_9:\n    if (rax == 0) {\n        goto label_27;\n    }\n    rdi = *((rsp + 8));\n    rsi = 0xfffffffffffffffe;\n    rsi -= rcx;\n    rcx++;\n    rdi -= rdx;\n    rsi += rdi;\n    rsi += rax;\n    if (ecx >= 8) {\n        goto label_28;\n    }\n    if ((cl & 4) != 0) {\n        goto label_29;\n    }\n    if (ecx != 0) {\n        r9d = *(r14);\n        *(rsi) = r9b;\n        if ((cl & 2) != 0) {\n            goto label_30;\n        }\n    }\nlabel_10:\n    rdx++;\n    rcx = rax + rdi - 1;\n    if (edx >= 8) {\n        goto label_31;\n    }\n    if ((dl & 4) != 0) {\n        goto label_32;\n    }\n    if (edx != 0) {\n        esi = *(r12);\n        *(rcx) = sil;\n        if ((dl & 2) != 0) {\n            goto label_33;\n        }\n    }\nlabel_11:\n    r15 = rax;\n    rax = *((rbx + 8));\n    if (rax < *((rbx + 0x10))) {\n        goto label_4;\n    }\nlabel_24:\n    rdi = rbx;\n    eax = uflow ();\n    edi = eax;\n    if (eax != 0xffffffff) {\n        goto label_5;\n    }\nlabel_12:\n    rax = r13;\n    r13 = rbx;\n    rbx = rax;\n    fcn_0040bd60 (rbx);\n    rax = *((rsp + 8));\n    if (rax == 0) {\n        goto label_6;\n    }\n    *((r15 + rax)) = 0;\n    goto label_7;\n    do {\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        eax = *(rax);\n        edx = 1;\nlabel_8:\n        if (eax == 0xa) {\n            goto label_34;\n        }\n        if (dl == 0) {\n            goto label_34;\n        }\nlabel_25:\n        rax = *((rbx + 8));\n    } while (rax < *((rbx + 0x10)));\n    rdi = rbx;\n    eax = uflow ();\n    dl = (eax != 0xffffffff) ? 1 : 0;\n    goto label_8;\nlabel_26:\n    rax += *((rsp + 8));\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    eax = realloc (r15, rax + 3);\n    rdx = *((rsp + 0x18));\n    rcx = *((rsp + 0x10));\n    goto label_9;\nlabel_28:\n    r9 = *(r14);\n    *(rsi) = r9;\n    r9d = ecx;\n    r10 = *((r14 + r9 - 8));\n    *((rsi + r9 - 8)) = r10;\n    r9 = rsi + 8;\n    r10 = r14;\n    r9 &= 0xfffffffffffffff8;\n    rsi -= r9;\n    ecx += esi;\n    r10 -= rsi;\n    ecx &= 0xfffffff8;\n    if (ecx < 8) {\n        goto label_10;\n    }\n    ecx &= 0xfffffff8;\n    esi = 0;\n    do {\n        r8d = esi;\n        esi += 8;\n        r11 = *((r10 + r8));\n        *((r9 + r8)) = r11;\n    } while (esi < ecx);\n    goto label_10;\nlabel_31:\n    rsi = *(r12);\n    r9 = r12;\n    *(rcx) = rsi;\n    esi = edx;\n    rdi = *((r12 + rsi - 8));\n    *((rcx + rsi - 8)) = rdi;\n    rdi = rcx + 8;\n    rdi &= 0xfffffffffffffff8;\n    rcx -= rdi;\n    edx += ecx;\n    r9 -= rcx;\n    edx &= 0xfffffff8;\n    if (edx < 8) {\n        goto label_11;\n    }\n    edx &= 0xfffffff8;\n    ecx = 0;\n    do {\n        esi = ecx;\n        ecx += 8;\n        r8 = *((r9 + rsi));\n        *((rdi + rsi)) = r8;\n    } while (ecx < edx);\n    goto label_11;\nlabel_34:\n    if (eax == 0xffffffff) {\n        goto label_12;\n    }\n    goto label_3;\nlabel_20:\n    if (*((r13 + rax - 1)) == 0x2f) {\n        rdi = rax + 0xe;\n        goto label_13;\nlabel_23:\n        close (r12d);\n        goto label_6;\nlabel_29:\n        r9d = *(r14);\n        *(rsi) = r9d;\n        r9d = *((r14 + rcx - 4));\n        *((rsi + rcx - 4)) = r9d;\n        goto label_10;\nlabel_32:\n        esi = *(r12);\n        *(rcx) = esi;\n        esi = *((r12 + rdx - 4));\n        *((rcx + rdx - 4)) = esi;\n        goto label_11;\nlabel_27:\n        rax = r13;\n        r13 = rbx;\n        r15d = 0x40ef77;\n        rbx = rax;\n        free (r15);\n        fcn_0040bd60 (r13);\n        goto label_7;\nlabel_30:\n        r9d = *((r14 + rcx - 2));\n        *((rsi + rcx - 2)) = r9w;\n        goto label_10;\nlabel_33:\n        esi = edx;\n        edx = *((r12 + rsi - 2));\n        *((rcx + rsi - 2)) = dx;\n        goto label_11;\n    }\n    rdi = rax + 0xf;\n    r12++;\n    goto label_14;\n}\n"
        },
        {
            "funcName": "fcn_0040b8e0",
            "funcStartAddr": "0x40b8e0",
            "funcEndAddr": "0x40b90b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40b8e0 */\n#include <stdint.h>\n \nuint64_t fcn_0040b8e0 (int64_t arg1) {\n    rdi = arg1;\n    edx = 5;\n    ebx = edi;\n    rax = dcgettext (0, \"unable to record current working directory\");\n    eax = 0;\n    error (*(0x006122d8), ebx, rax);\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_0040b910",
            "funcStartAddr": "0x40b910",
            "funcEndAddr": "0x40b93b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40b910 */\n#include <stdint.h>\n \nuint64_t fcn_0040b910 (int64_t arg1) {\n    rdi = arg1;\n    edx = 5;\n    ebx = edi;\n    rax = dcgettext (0, \"failed to return to initial working directory\");\n    eax = 0;\n    error (*(0x006122d8), ebx, rax);\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_0040b940",
            "funcStartAddr": "0x40b940",
            "funcEndAddr": "0x40b98a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40b940 */\n#include <stdint.h>\n \nuint64_t fcn_0040b940 (int64_t arg_60h, int64_t arg4, int32_t fd, int32_t oflag, const char * path) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_38h;\n    rcx = arg4;\n    rdi = fd;\n    rdx = oflag;\n    rsi = path;\n    *((rsp + 0x38)) = rcx;\n    ecx = 0;\n    while (1) {\n        eax = 0;\n        eax = openat (rdi, rsi, rdx);\n        fcn_0040ba20 (eax);\n        return eax;\n        rax = rsp + 0x60;\n        *((rsp + 8)) = 0x18;\n        ecx = *((rsp + 0x38));\n        *((rsp + 0x10)) = rax;\n        rax = rsp + 0x20;\n        *((rsp + 0x18)) = rax;\n    }\n}\n"
        },
        {
            "funcName": "fcn_0040b990",
            "funcStartAddr": "0x40b990",
            "funcEndAddr": "0x40b9da",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40b990 */\n#include <stdint.h>\n \nuint64_t fcn_0040b990 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    eax = 0;\n    *((rdi + 8)) = 0;\n    eax = fcn_00409fb0 (0x40ee1a, 0x80000, rdx, rcx);\n    edx = eax;\n    *(rbx) = eax;\n    eax = 0;\n    if (edx >= 0) {\n        return eax;\n    }\n    rax = fcn_0040bfc0 (0, 0);\n    *((rbx + 8)) = rax;\n    al = (rax == 0) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = -eax;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040b9e0",
            "funcStartAddr": "0x40b9e0",
            "funcEndAddr": "0x40bd5b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40b9e0 */\n#include <stdint.h>\n \nuint64_t fcn_0040b9e0 (uint32_t arg1) {\n    int64_t var_ch;\n    rdi = arg1;\n    eax = *(rdi);\n    if (eax >= 0) {\n        edi = eax;\n        void (*0x401fb0)() ();\n    }\n    rdi = *((rdi + 8));\n    r13 = rdi;\n    eax = chdir ();\n    ebx = eax;\n    if (eax == 0) {\n        goto label_3;\n    }\n    rax = errno_location ();\n    r12 = rax;\n    if (*(rax) != 0x24) {\n        goto label_3;\n    }\n    rax = strlen (r13);\n    *((rsp + 0xc)) = 0xffffff9c;\n    r14 = rax;\n    if (rax == 0) {\n        goto label_4;\n    }\n    if (rax <= 0xfff) {\n        goto label_5;\n    }\n    rax = strspn (r13, 0x40efb1);\n    rbx = rax;\n    if (rax == 2) {\n        goto label_6;\n    }\n    if (rax != 0) {\n        goto label_7;\n    }\nlabel_0:\n    if (*(rbp) == 0x2f) {\n        goto label_8;\n    }\n    r13 += r14;\n    if (rbp <= r13) {\n        goto label_9;\n    }\n    goto label_10;\n    do {\n        edx = 0x1000;\n        esi = 0x2f;\n        rdi = rbp;\n        rax = memrchr ();\n        rbx = rax;\n        if (rax == 0) {\n            goto label_11;\n        }\n        *(rax) = 0;\n        rax -= rbp;\n        if (rax > 0xfff) {\n            goto label_12;\n        }\n        eax = fcn_0040bab0 (rsp + 0xc, rbp);\n        *(rbx) = 0x2f;\n        if (eax != 0) {\n            goto label_2;\n        }\n        rbx++;\n        strspn (rbx, 0x40efb1);\n        rbp = rbx + rax;\nlabel_9:\n        rax = r13;\n        rax -= rbp;\n    } while (rax > 0xfff);\n    if (r13 > rbp) {\n        eax = fcn_0040bab0 (rsp + 0xc, rbp);\n        if (eax != 0) {\n            goto label_2;\n        }\n    }\n    edi = *((rsp + 0xc));\n    eax = fchdir ();\n    ebx = eax;\n    if (eax == 0) {\n        goto label_13;\n    }\n    do {\nlabel_2:\n        ebx = *(r12);\n        fcn_0040ba70 (*((rsp + 0xc)));\n        *(r12) = ebx;\nlabel_1:\n        ebx = 0xffffffff;\nlabel_3:\n        eax = ebx;\n        return rax;\nlabel_7:\n        eax = fcn_0040bab0 (rsp + 0xc, 0x40efb1);\n    } while (eax != 0);\n    rbp = r13 + rbx;\n    goto label_0;\nlabel_6:\n    rax = fcn_0040c490 (r13 + 3, 0x2f, r14 - 3);\n    rbx = rax;\n    if (rax == 0) {\n        goto label_1;\n    }\n    *(rax) = 0;\n    eax = fcn_0040bab0 (rsp + 0xc, r13);\n    *(rbx) = 0x2f;\n    if (eax != 0) {\n        goto label_2;\n    }\n    rbx++;\n    strspn (rbx, 0x40efb1);\n    rbp = rbx + rax;\n    goto label_0;\nlabel_11:\n    *(r12) = 0x24;\n    ebx = 0xffffffff;\n    goto label_3;\nlabel_13:\n    fcn_0040ba70 (*((rsp + 0xc)));\n    goto label_3;\nlabel_12:\n    assert_fail (\"slash - dir < 4096\", \"lib/chdir-long.c\", 0xb3, \"chdir_long\");\nlabel_8:\n    assert_fail (\"*dir != '/', \"lib/chdir-long.c\", 0xa2, \"chdir_long\");\nlabel_10:\n    assert_fail (\"dir <= dir_end\", \"lib/chdir-long.c\", 0xa3, \"chdir_long\");\nlabel_5:\n    assert_fail (\"4096 <= len\", \"lib/chdir-long.c\", 0x7f, \"chdir_long\");\nlabel_4:\n    return assert_fail (\"0 < len\", \"lib/chdir-long.c\", 0x7e, \"chdir_long\");\n}\n"
        },
        {
            "funcName": "fcn_0040ba00",
            "funcStartAddr": "0x40ba00",
            "funcEndAddr": "0x40ba19",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40ba00 */\n#include <stdint.h>\n \nvoid fcn_0040ba00 (uint32_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    edi = *(rdi);\n    if (edi >= 0) {\n        close (rdi);\n    }\n    rdi = *((rbx + 8));\n    return free ();\n}\n"
        },
        {
            "funcName": "fcn_0040ba20",
            "funcStartAddr": "0x40ba20",
            "funcEndAddr": "0x40ba6e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40ba20 */\n#include <stdint.h>\n \nuint64_t fcn_0040ba20 (uint32_t arg1) {\n    rdi = arg1;\n    ebx = edi;\n    if (edi > 2) {\n        eax = ebx;\n        return eax;\n    }\n    eax = fcn_0040c5a0 (rdi, rsi);\n    r12d = eax;\n    rax = errno_location ();\n    ebx = r12d;\n    r13d = *(rax);\n    close (ebx);\n    eax = ebx;\n    *(rbp) = r13d;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040ba70",
            "funcStartAddr": "0x40ba70",
            "funcEndAddr": "0x40baa3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40ba70 */\n#include <stdint.h>\n \nuint32_t fcn_0040ba70 (int64_t arg1) {\n    rdi = arg1;\n    if (edi < 0) {\n        return;\n    }\n    eax = close (rdi);\n    if (eax == 0) {\n        return eax;\n    }\n    return assert_fail (\"! close_fail\", \"lib/chdir-long.c\", 0x40, \"cdb_free\");\n}\n"
        },
        {
            "funcName": "fcn_0040bab0",
            "funcStartAddr": "0x40bab0",
            "funcEndAddr": "0x40bae7",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40bab0 */\n#include <stdint.h>\n \nint32_t fcn_0040bab0 (int64_t fd, const char * path) {\n    rdi = fd;\n    rsi = path;\n    eax = 0;\n    rbx = rdi;\n    eax = openat (*(rdi), rsi, 0x10900);\n    if (eax < 0) {\n        goto label_0;\n    }\n    eax = fcn_0040ba70 (*(rbx));\n    *(rbx) = ebp;\n    eax = 0;\n    do {\n        return eax;\nlabel_0:\n        eax = 0xffffffff;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040bd60",
            "funcStartAddr": "0x40bd60",
            "funcEndAddr": "0x40bddb",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40bd60 */\n#include <stdint.h>\n \nuint64_t fcn_0040bd60 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    eax = fileno (rdi);\n    rdi = rbx;\n    if (eax < 0) {\n        goto label_1;\n    }\n    eax = freading ();\n    while (rax != -1) {\n        eax = fcn_0040bf20 (rbx);\n        if (eax == 0) {\n            goto label_2;\n        }\n        rax = errno_location ();\n        r12d = *(rax);\n        fclose (rbx);\n        if (r12d != 0) {\n            goto label_3;\n        }\nlabel_0:\n        return rax;\n        eax = fileno (rbx);\n        esi = 0;\n        edx = 1;\n        edi = eax;\n        rax = lseek ();\n    }\nlabel_2:\n    rdi = rbx;\nlabel_1:\n    void (*0x401ce0)() ();\nlabel_3:\n    *(rbp) = r12d;\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040bde0",
            "funcStartAddr": "0x40bde0",
            "funcEndAddr": "0x40bf15",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40bde0 */\n#include <stdint.h>\n \nuint64_t fcn_0040bde0 (int64_t arg_70h, int64_t arg1, uint32_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_30h;\n    int64_t var_38h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    do {\nlabel_2:\n        rax = rsp + 0x70;\n        *((rsp + 0x30)) = rdx;\n        *((rsp + 0x10)) = rax;\n        rax = rsp + 0x20;\n        *((rsp + 0x38)) = rcx;\n        *((rsp + 8)) = 0x10;\n        *((rsp + 0x18)) = rax;\n        if (esi != 0x406) {\n            goto label_4;\n        }\n        r12d = *((rax + 0x10));\n        eax = imp.__libc_start_main;\n        *((rsp + 8)) = 0x18;\n        edx = r12d;\n        if (eax >= 0) {\n            eax = 0;\n            eax = fcntl ();\n            ebx = eax;\n            if (eax < 0) {\n                goto label_5;\n            }\nlabel_1:\n            *(0x00612548) = 1;\nlabel_0:\n            eax = ebx;\n            return rax;\n        }\n        eax = 0;\n        eax = fcn_0040bde0 (rdi, 0, rdx, rcx, r8);\n    } while (1);\n    ebx = eax;\n    if (eax < 0) {\n        goto label_0;\n    }\n    if (*(0x00612548) != 0xffffffff) {\n        goto label_0;\n    }\nlabel_3:\n    eax = 0;\n    esi = 1;\n    edi = ebx;\n    eax = fcntl ();\n    if (eax < 0) {\n        goto label_6;\n    }\n    eax |= 1;\n    esi = 2;\n    edi = ebx;\n    edx = eax;\n    eax = 0;\n    eax = fcntl ();\n    if (eax != 0xffffffff) {\n        goto label_0;\n    }\nlabel_6:\n    rax = errno_location ();\n    ebx = 0xffffffff;\n    r12d = *(rax);\n    close (ebx);\n    *(rbp) = r12d;\n    goto label_0;\nlabel_4:\n    rax = *((rsp + 0x18));\n    rdx = *((rax + 0x10));\n    eax = 0;\n    eax = fcntl ();\n    ebx = eax;\n    return rax;\nlabel_5:\n    rax = errno_location ();\n    if (*(rax) != 0x16) {\n        goto label_1;\n    }\n    eax = 0;\n    eax = fcn_0040bde0 (ebp, 0, r12d, rcx, r8);\n    goto label_2;\n    ebx = eax;\n    if (eax < 0) {\n        goto label_0;\n    }\n    *(0x00612548) = 0xffffffff;\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_0040bf20",
            "funcStartAddr": "0x40bf20",
            "funcEndAddr": "0x40bf60",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40bf20 */\n#include <stdint.h>\n \nuint32_t fcn_0040bf20 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    if (rdi != 0) {\n        eax = freading ();\n        if (eax == 0) {\n            goto label_0;\n        }\n        if ((*(rbx) & 0x100) != 0) {\n            goto label_1;\n        }\n    }\nlabel_0:\n    rdi = rbx;\n    void (*0x401f40)() ();\nlabel_1:\n    fcn_0040bf60 (rbx, 0, 1);\n    rdi = rbx;\n    return fflush ();\n}\n"
        },
        {
            "funcName": "fcn_0040bf60",
            "funcStartAddr": "0x40bf60",
            "funcEndAddr": "0x40bfb7",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40bf60 */\n#include <stdint.h>\n \nint64_t fcn_0040bf60 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rax = *((rdi + 8));\n    while (*((rdi + 0x28)) != rax) {\nlabel_0:\n        void (*0x402060)() ();\n        rax = *((rdi + 0x20));\n    }\n    if (*((rdi + 0x48)) != 0) {\n        goto label_0;\n    }\n    r12d = edx;\n    rbx = rdi;\n    eax = fileno (rdi);\n    edx = r12d;\n    rsi = rbp;\n    edi = eax;\n    rax = lseek ();\n    if (rax != -1) {\n        *(rbx) &= 0xffffffef;\n        *((rbx + 0x90)) = rax;\n        eax = 0;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040bfc0",
            "funcStartAddr": "0x40bfc0",
            "funcEndAddr": "0x40c482",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40bfc0 */\n#include <stdint.h>\n \nuint64_t fcn_0040bfc0 (void * arg1, uint32_t arg2) {\n    int64_t var_8h;\n    uint32_t var_10h;\n    void * ptr;\n    void * var_20h;\n    size_t size;\n    uint32_t var_30h;\n    int64_t var_3fh;\n    void * s2;\n    uint32_t var_48h;\n    uint32_t var_50h;\n    void ** var_58h;\n    uint32_t var_60h;\n    uint32_t var_68h;\n    int64_t var_78h;\n    rdi = arg1;\n    rsi = arg2;\n    *((rsp + 0x20)) = rdi;\n    *((rsp + 0x30)) = rsi;\n    if (rsi != 0) {\n        goto label_11;\n    }\n    *((rsp + 0x28)) = 0x1000;\n    if (rdi != 0) {\n        goto label_12;\n    }\n    do {\n        rax = malloc (*((rsp + 0x28)));\n        *((rsp + 0x18)) = rax;\n        if (rax != 0) {\n            goto label_13;\n        }\nlabel_2:\n        rax = *((rsp + 0x18));\n        return rax;\nlabel_11:\n        rax = *((rsp + 0x30));\n        *((rsp + 0x28)) = rax;\n    } while (*((rsp + 0x20)) == 0);\n    rax = *((rsp + 0x20));\n    *((rsp + 0x18)) = rax;\nlabel_13:\n    rbx = *((rsp + 0x18));\n    rbx += *((rsp + 0x28));\n    rdx = rsp + 0x60;\n    esi = 0x40ee1a;\n    *((rbx - 1)) = 0;\n    edi = 1;\n    eax = lxstat ();\n    if (eax < 0) {\n        goto label_14;\n    }\n    r15 = *((rsp + 0x60));\n    rdx = rsp + 0x60;\n    esi = 0x40efb1;\n    edi = 1;\n    r14 = *((rsp + 0x68));\n    *((rsp + 8)) = r15;\n    eax = lxstat ();\n    if (eax < 0) {\n        goto label_14;\n    }\n    rax = rbx - 1;\n    rsi = *((rsp + 0x68));\n    *((rsp + 0x40)) = rax;\n    rax = *((rsp + 0x60));\n    *((rsp + 0x50)) = rsi;\n    *((rsp + 0x48)) = rax;\n    dl = (r15 != rax) ? 1 : 0;\n    al = (r14 != rsi) ? 1 : 0;\n    dl |= al;\n    *((rsp + 0x3f)) = dl;\n    if (dl == 0) {\n        goto label_15;\n    }\n    rax = errno_location ();\n    ebp = 0;\n    r15d = 0xffffff9c;\n    r12 = rax;\nlabel_1:\n    eax = 0;\n    eax = openat (r15d, 0x40ee19, 0);\n    r15d = eax;\n    if (eax < 0) {\n        goto label_16;\n    }\n    rdx = rsp + 0x60;\n    esi = eax;\n    edi = 1;\n    eax = fxstat ();\n    if (eax != 0) {\n        goto label_17;\n    }\n    if (rbp != 0) {\n        rdi = rbp;\n        eax = closedir ();\n        if (eax != 0) {\n            goto label_18;\n        }\n    }\n    rax = *((rsp + 0x60));\n    edi = r15d;\n    *((rsp + 0x10)) = rax;\n    rax = *((rsp + 0x68));\n    *((rsp + 0x58)) = rax;\n    rax = fdopendir ();\n    if (rax == 0) {\n        goto label_18;\n    }\n    r13d = *((rsp + 0x3f));\n    do {\nlabel_0:\n        *(r12) = 0;\n        rdi = rbp;\n        rax = readdir ();\n        if (rax == 0) {\n            goto label_19;\n        }\n        if (*((rax + 0x13)) == 0x2e) {\n            goto label_20;\n        }\nlabel_4:\n        if (r13b == 0) {\n            goto label_3;\n        }\n        rcx = *((rsp + 8));\n        dl = (*(rax) == r14) ? 1 : 0;\n        cl = (*((rsp + 0x10)) != rcx) ? 1 : 0;\n        dl |= cl;\n    } while (dl == 0);\n    r13d = edx;\nlabel_3:\n    rbx = rax + 0x13;\n    rcx = rsp + 0x60;\n    esi = r15d;\n    edi = 1;\n    r8d = 0x100;\n    rdx = rbx;\n    eax = fxstatat ();\n    if (eax != 0) {\n        goto label_0;\n    }\n    eax = *((rsp + 0x78));\n    eax &= 0xf000;\n    if (eax != 0x4000) {\n        goto label_0;\n    }\n    rax = *((rsp + 8));\n    if (*((rsp + 0x60)) != rax) {\n        goto label_0;\n    }\n    if (*((rsp + 0x68)) != r14) {\n        goto label_0;\n    }\n    r13 = *((rsp + 0x40));\n    r13 -= *((rsp + 0x18));\n    rax = strlen (rbx);\n    r14 = rax;\n    if (r13 <= rax) {\n        if (*((rsp + 0x30)) != 0) {\n            goto label_21;\n        }\n        rax = *((rsp + 0x28));\n        rdx = rax;\n        if (r14 >= rax) {\n            rdx = r14;\n        }\n        rax += rdx;\n        *((rsp + 0x40)) = rdx;\n        *((rsp + 8)) = rax;\n        if (rax < 0) {\n            goto label_22;\n        }\n        rax = realloc (*((rsp + 0x18)), rax);\n        rdx = *((rsp + 0x40));\n        if (rax == 0) {\n            goto label_22;\n        }\n        rdx += r13;\n        *((rsp + 0x18)) = rax;\n        rdx -= r13;\n        rax = memcpy (rax + rdx, rax + r13, *((rsp + 0x28)));\n        *((rsp + 0x40)) = rax;\n        rax = *((rsp + 8));\n        *((rsp + 0x28)) = rax;\n    }\n    r8 = *((rsp + 0x40));\n    r8 -= r14;\n    rax = memcpy (r8, rbx, r14);\n    rsi = *((rsp + 0x58));\n    r8 = rax;\n    rax = rax - 1;\n    *((rsp + 0x40)) = rax;\n    rax = *((rsp + 0x10));\n    r14 = rsi;\n    *((r8 - 1)) = 0x2f;\n    *((rsp + 8)) = rax;\n    if (*((rsp + 0x48)) != rax) {\n        goto label_1;\n    }\n    if (*((rsp + 0x50)) != rsi) {\n        goto label_1;\n    }\n    rdi = rbp;\n    eax = closedir ();\n    if (eax != 0) {\n        goto label_23;\n    }\n    rbx = *((rsp + 0x18));\n    rbx += *((rsp + 0x28));\nlabel_15:\n    rax = *((rsp + 0x18));\n    rsi = *((rsp + 0x28));\n    rax = rax + rsi - 1;\n    if (*((rsp + 0x40)) == rax) {\n        goto label_24;\n    }\nlabel_10:\n    rbx -= rsi;\n    memmove (*((rsp + 0x18)), *((rsp + 0x40)), rbx);\n    if (*((rsp + 0x30)) == 0) {\n        goto label_25;\n    }\nlabel_9:\n    rax = *((rsp + 0x20));\n    if (rax == 0) {\n        rax = *((rsp + 0x18));\n    }\n    *((rsp + 0x18)) = rax;\n    goto label_2;\nlabel_19:\n    ebx = *(r12);\n    if (ebx != 0) {\n        goto label_26;\n    }\n    if (r13b == 0) {\n        goto label_26;\n    }\n    rdi = rbp;\n    rewinddir ();\n    rdi = rbp;\n    rax = readdir ();\n    if (rax == 0) {\n        goto label_27;\n    }\n    r13d = 0;\n    if (*((rax + 0x13)) != 0x2e) {\n        goto label_3;\n    }\nlabel_20:\n    if (*((rax + 0x14)) == 0) {\n        goto label_0;\n    }\n    if (*((rax + 0x14)) != 0x2e) {\n        goto label_4;\n    }\n    goto label_0;\nlabel_27:\n    ebx = *(r12);\nlabel_26:\n    if (ebx == 0) {\n        *(r12) = 2;\n        ebx = 2;\n    }\nlabel_7:\n    rdi = rbp;\n    closedir ();\nlabel_6:\n    if (*((rsp + 0x20)) == 0) {\n        goto label_28;\n    }\n    do {\nlabel_5:\n        *(r12) = ebx;\n        *((rsp + 0x18)) = 0;\n        goto label_2;\nlabel_14:\n        rax = errno_location ();\n        r12 = rax;\nlabel_23:\n        ebx = *(r12);\n    } while (*((rsp + 0x20)) != 0);\nlabel_28:\n    free (*((rsp + 0x18)));\n    goto label_5;\nlabel_12:\n    errno_location ();\n    *((rsp + 0x18)) = 0;\n    *(rax) = 0x16;\n    goto label_2;\nlabel_18:\n    ebx = *(r12);\nlabel_8:\n    close (r15d);\n    goto label_6;\nlabel_16:\n    ebx = *(r12);\n    if (rbp == 0) {\n        goto label_6;\n    }\n    goto label_7;\nlabel_17:\n    ebx = *(r12);\n    if (rbp == 0) {\n        goto label_8;\n    }\n    rdi = rbp;\n    closedir ();\n    goto label_8;\nlabel_25:\n    rax = realloc (*((rsp + 0x18)), rbx);\n    *((rsp + 0x20)) = rax;\n    goto label_9;\nlabel_24:\n    rax = *((rsp + 0x40));\n    *((rax - 1)) = 0x2f;\n    rax--;\n    *((rsp + 0x40)) = rax;\n    goto label_10;\nlabel_22:\n    *(r12) = 0xc;\n    ebx = 0xc;\n    goto label_7;\nlabel_21:\n    *(r12) = 0x22;\n    ebx = 0x22;\n    goto label_7;\n}\n"
        },
        {
            "funcName": "fcn_0040c490",
            "funcStartAddr": "0x40c490",
            "funcEndAddr": "0x40c594",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40c490 */\n#include <stdint.h>\n \nint64_t fcn_0040c490 (uint32_t arg1, int64_t arg2, uint32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r8d = esi;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    if ((dil & 7) == 0) {\n        goto label_1;\n    }\n    if (sil != *(rdi)) {\n        goto label_2;\n    }\n    goto label_3;\n    do {\n        if ((dil & 7) == 0) {\n            goto label_1;\n        }\n        if (*(rdi) == r8b) {\n            goto label_3;\n        }\nlabel_2:\n        rdi++;\n        rdx--;\n    } while (rdx != 0);\nlabel_0:\n    eax = 0;\n    return eax;\nlabel_1:\n    r9d = esi;\n    eax = (int32_t) sil;\n    r9d <<= 8;\n    r9d = (int32_t) r9w;\n    r9d |= eax;\n    r9 = (int64_t) r9d;\n    rax = r9;\n    rax <<= 0x10;\n    r9 |= rax;\n    rax = r9;\n    rax <<= 0x20;\n    r9 |= rax;\n    if (rdx <= 7) {\n        goto label_4;\n    }\n    r11 = 0xfefefefefefefeff;\n    rax = *(rdi);\n    r10 = 0x8080808080808080;\n    rax ^= r9;\n    rcx = rax + r11;\n    rax = ~rax;\n    rax &= rcx;\n    if ((rax & r10) == 0) {\n        goto label_5;\n    }\n    goto label_4;\n    do {\n        rax = *(rdi);\n        rax ^= r9;\n        rcx = rax + r11;\n        rax = ~rax;\n        rax &= rcx;\n        if ((rax & r10) != 0) {\n            goto label_4;\n        }\nlabel_5:\n        rdx -= 8;\n        rdi += 8;\n    } while (rdx > 7);\n    if (rdx == 0) {\n        goto label_0;\n    }\nlabel_4:\n    if (sil == *(rdi)) {\n        goto label_3;\n    }\n    rcx = rdi + 1;\n    rdi += rdx;\n    while (rcx != rdi) {\n        rcx++;\n        if (*((rcx - 1)) == r8b) {\n            goto label_6;\n        }\n        rax = rcx;\n    }\n    goto label_0;\nlabel_3:\n    rax = rdi;\nlabel_6:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040c5a0",
            "funcStartAddr": "0x40c5a0",
            "funcEndAddr": "0x40c5ae",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40c5a0 */\n#include <stdint.h>\n \nint32_t fcn_0040c5a0 (int64_t arg1, int64_t arg4) {\n    rdi = arg1;\n    rcx = arg4;\n    edx = 3;\n    esi = 0;\n    eax = 0;\n    return void (*0x40bde0)() ();\n}\n"
        },
        {
            "funcName": "fcn_0040c620",
            "funcStartAddr": "0x40c620",
            "funcEndAddr": "0x40c638",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40c620 */\n#include <stdint.h>\n \nint64_t fcn_0040c620 (void) {\n    rax = 0x6122c8;\n    edx = 0;\n    if (rax != 0) {\n        rdx = *(rax);\n    }\n    esi = 0;\n    return cxa_atexit ();\n}\n"
        },
        {
            "funcName": "fcn_0040c638",
            "funcStartAddr": "0x40c638",
            "funcEndAddr": "0x40c658",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chown.elf @ 0x40c638 */\n#include <stdint.h>\n \nvoid fcn_0040c638 (int64_t arg3) {\n    rdx = arg3;\n    ebx = segment.GNU_RELRO;\n    do {\n        rax = *(rbx);\n        if (rax == -1) {\n            goto label_0;\n        }\n        void (*rax)() ();\n        rbx -= 8;\n    } while (1);\nlabel_0:\n}\n"
        }
    ],
    "funcCount": 102
}