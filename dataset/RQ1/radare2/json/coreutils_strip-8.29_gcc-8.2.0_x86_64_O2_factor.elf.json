{
    "binaryInfo": {
        "isStripped": true,
        "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf"
    },
    "buildInfo": {
        "decompilerName": "radare2",
        "compilerName": "gcc",
        "compilerVersion": "9.4.0",
        "optLevel": "O"
    },
    "funcInfo": [
        {
            "funcName": "main",
            "funcStartAddr": "0x401a80",
            "funcEndAddr": "0x401c34",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x401a80 */\n#include <stdint.h>\n \nint32_t main (int32_t argc, char ** argv) {\n    int64_t var_8h;\n    rdi = argc;\n    rsi = argv;\n    rbx = rsi;\n    fcn_00404760 (*(rsi));\n    setlocale (6, 0x4105e7);\n    bindtextdomain (0x40bdb0, \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\");\n    textdomain (0x40bdb0, rsi);\n    if (*(0x00613300) == 0) {\n        goto label_2;\n    }\nlabel_0:\n    edi = 0x4045f0;\n    fcn_0040bc60 ();\n    edi = fcn.004023d0;\n    fcn_0040bc60 ();\n    do {\n        r8d = 0;\n        ecx = 0x40f260;\n        edx = 0x4105e7;\n        rsi = rbx;\n        edi = ebp;\n        eax = fcn_00408f40 ();\n        if (eax == 0xffffffff) {\n            goto label_3;\n        }\n        if (eax == 0xffffff7e) {\n            goto label_4;\n        }\n        if (eax != 0x80) {\n            goto label_5;\n        }\n        *(0x00613310) = 1;\n    } while (1);\nlabel_5:\n    if (eax != 0xffffff7d) {\n        fcn_004042e0 (1);\n    }\n    rax = fcn_00405150 (\"Niels Moller\", \"Niels M\\xc3\\xb6ller\");\n    rbx = rax;\n    rax = fcn_00405150 (\"Torbjorn Granlund\", \"Torbj\\xc3\\xb6rn Granlund\");\n    rcx = *(str.8.29);\n    r9 = rax;\n    r8d = \"Paul Rubin\";\n    eax = 0;\n    fcn_00407da0 (*(obj.stdout), \"factor\", \"GNU coreutils\");\n    exit (0);\nlabel_2:\n    rax = fcn_00407ee0 (0x400);\n    *(0x00613300) = rax;\n    *(0x00613308) = rax;\n    goto label_0;\nlabel_3:\n    r12 = *(0x006132bc);\n    if (r12d >= ebp) {\n        goto label_6;\n    }\n    r13d = 1;\n    r14d = 0;\n    do {\n        al = fcn_00404170 (*((rbx + r12*8)));\n        if (al == 0) {\n            r13d = r14d;\n        }\n        r12++;\n    } while (ebp > r12d);\nlabel_1:\n    r13d ^= 1;\n    eax = (int32_t) r13b;\n    return rax;\nlabel_6:\n    r13d = 1;\n    fcn_00406f70 (rsp);\n    while (rax != 0) {\n        eax = fcn_00404170 (rdi);\n        r13d &= eax;\n        rax = fcn_00406f80 (*(obj.stdin), 0x40be09, 3, rsp);\n        rdi = *((rsp + 8));\n        rax++;\n    }\n    free (rdi);\n    goto label_1;\nlabel_4:\n    return fcn_004042e0 (0);\n}\n"
        },
        {
            "funcName": "fcn_00401c6b",
            "funcStartAddr": "0x401c6b",
            "funcEndAddr": "0x401c8a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x401c6b */\n#include <stdint.h>\n \nint32_t fcn_00401c6b (void) {\n    eax = __progname;\n    if (rax != obj.__progname) {\n        eax = 0;\n        if (rax == 0) {\n            goto label_0;\n        }\n        edi = __progname;\n        void (*rax)() ();\n    }\nlabel_0:\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00401cc1",
            "funcStartAddr": "0x401cc1",
            "funcEndAddr": "0x401d18",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x401cc1 */\n#include <stdint.h>\n \nint64_t fcn_00401cc1 (int32_t argc, func fini, func init, func main, func rtld_fini, void * stack_end, char ** ubp_av) {\n    rsi = argc;\n    r8 = fini;\n    rcx = init;\n    rdi = main;\n    r9 = rtld_fini;\n    xmm0 = stack_end;\n    rdx = ubp_av;\n    if (*(0x006132e8) != 0) {\n        goto label_0;\n    }\n    r12d = section..dtors;\n    ebx = 0x612e48;\n    rbx -= section..dtors;\n    rbx >>= 3;\n    rbx--;\n    do {\n        rax = imp.__libc_start_main;\n        if (rax >= rbx) {\n            goto label_1;\n        }\n        rax++;\n        *(0x006132f0) = rax;\n        uint64_t (*r12 + rax*8)() ();\n    } while (1);\nlabel_1:\n    fcn_00401c6b ();\n    *(0x006132e8) = 1;\n    return rax;\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00401d18",
            "funcStartAddr": "0x401d18",
            "funcEndAddr": "0x401dab",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x401d18 */\n#include <stdint.h>\n \nint64_t fcn_00401d18 (void) {\n    do {\n        esi = __progname;\n        ecx = 2;\n        rsi -= obj.__progname;\n        rsi >>= 3;\n        rax = rsi;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rsi = rax;\n        if (rax != 0) {\n            eax = 0;\n            if (rax == 0) {\n                goto label_0;\n            }\n            edi = __progname;\n            void (*rax)() ();\n        }\nlabel_0:\n        return rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00401d20",
            "funcStartAddr": "0x401d20",
            "funcEndAddr": "0x401d79",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x401d20 */\n#include <stdint.h>\n \nint64_t fcn_00401d20 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rax = rsi;\n    if ((sil & 1) == 0) {\n        rax = rdi;\n        rdi = rsi;\n    }\n    if (rdi == 0) {\n        goto label_1;\n    }\n    rax >>= 1;\n    goto label_2;\nlabel_0:\n    rcx = rdx;\n    rsi = rdx;\n    rcx >>= 0x3f;\n    rsi &= rcx;\n    rdx ^= rcx;\n    rax += rsi;\n    rdx -= rcx;\n    do {\n        rdi = rdx;\nlabel_2:\n        rdx >>= 1;\n    } while ((dil & 1) == 0);\n    rdx -= rax;\n    if (rdx != 0) {\n        goto label_0;\n    }\n    rax = rdi;\n    rax |= 1;\n    return rax;\nlabel_1:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00401d80",
            "funcStartAddr": "0x401d80",
            "funcEndAddr": "0x401e55",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x401d80 */\n#include <stdint.h>\n \nuint64_t fcn_00401d80 (uint32_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r13 = rdi + 0xe0;\n    r12 = rdi + 0x10;\n    ebx = *((rdi + 0xfa));\n    ebx--;\n    if (ebx == 0xffffffff) {\n        goto label_1;\n    }\n    r8 = (int64_t) ebx;\n    r11 = *((r12 + r8*8));\n    rax = r8*8;\n    if (rsi >= r11) {\n        goto label_2;\n    }\n    rcx = r8 - 1;\n    eax = ebx;\n    r10 = rcx;\n    while (eax != 0xffffffff) {\n        r9 = r10 - 1;\n        if (*((rdi + r9*8 + 0x18)) <= rsi) {\n            goto label_3;\n        }\n        r10 = r9;\n        eax--;\n    }\n    while (eax < ecx) {\n        r11 = *((rdi + rcx*8 + 0x10));\n        rcx--;\nlabel_0:\n        *((rdi + r8*8 + 0x18)) = r11;\n        r9d = *((rdi + r8 + 0xe0));\n        *((rdi + r8 + 0xe1)) = r9b;\n        r8 = rcx;\n    }\nlabel_1:\n    ebp++;\n    *(r12) = rsi;\n    *(r13) = dl;\n    *((rdi + 0xfa)) = bpl;\n    r12 = rbx;\n    r13 = rbx;\n    return rax;\n    if (ebp == 0) {\nlabel_3:\n        goto label_4;\n    }\n    r10++;\n    r12 = r12 + r10*8;\n    r13 += r10;\n    if (ebx > eax) {\n        goto label_0;\n    }\n    goto label_1;\n    if (ebx == eax) {\nlabel_2:\n        r10 = r8;\nlabel_4:\n        *((r13 + r10)) += dl;\n        r12 = rbx;\n        r13 = rbx;\n        return rax;\n    }\n    r12 = r12 + rax + 8;\n    r13 = r13 + r8 + 1;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00401e60",
            "funcStartAddr": "0x401e60",
            "funcEndAddr": "0x401ec9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x401e60 */\n#include <stdint.h>\n \nint64_t fcn_00401e60 (int64_t arg1, int64_t arg2, uint32_t arg3, int64_t arg5) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r8 = arg5;\n    r9 = rdx;\n    if ((sil & 1) == 0) {\n        goto label_1;\n    }\n    r8 = rdi;\n    do {\nlabel_0:\n        rax = rdi;\n        rdx:rax = rax * rdi;\n        r10 = rdx;\n        rax *= rcx;\n        rdi = r10;\n        rdx:rax = rax * r9;\n        rdi -= rdx;\n        rax = rdi + r9;\n        if (r10 < rdx) {\n            rdi = rax;\n        }\n        rsi >>= 1;\n        if ((sil & 1) == 0) {\n            goto label_1;\n        }\n        rax = r8;\n        rdx:rax = rax * rdi;\n        r10 = rdx;\n        rax *= rcx;\n        r8 = r10;\n        rdx:rax = rax * r9;\n        r8 -= rdx;\n        rax = r8 + r9;\n        if (r10 < rdx) {\n            r8 = rax;\n        }\n    } while (1);\nlabel_1:\n    if (rsi != 0) {\n        goto label_0;\n    }\n    rax = r8;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00401ed0",
            "funcStartAddr": "0x401ed0",
            "funcEndAddr": "0x401f5d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x401ed0 */\n#include <stdint.h>\n \nuint64_t fcn_00401ed0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r11 = rdi;\n    r12 = r9;\n    r8 = r9;\n    rbx = rsi;\n    rax = fcn_00401e60 (rdx, rcx, r11, rbx);\n    rdi = r11;\n    rdi -= r12;\n    r8b = (r12 == rax) ? 1 : 0;\n    dl = (rax == rdi) ? 1 : 0;\n    r8b |= dl;\n    if (r8b != 0) {\n        goto label_0;\n    }\n    if (ebp <= 1) {\n        goto label_0;\n    }\n    esi = 1;\n    while (rdi != rax) {\n        if (r12 == rax) {\n            goto label_0;\n        }\n        esi++;\n        if (ebp == esi) {\n            goto label_0;\n        }\n        rdx:rax = rax * rax;\n        rcx = rdx;\n        rax *= rbx;\n        rdx:rax = rax * r11;\n        rax = rcx;\n        rax -= rdx;\n        r9 = rax + r11;\n        if (rcx < rdx) {\n            rax = r9;\n        }\n    }\n    r8d = 1;\nlabel_0:\n    eax = r8d;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00401f60",
            "funcStartAddr": "0x401f60",
            "funcEndAddr": "0x4020c4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x401f60 */\n#include <stdint.h>\n \nint64_t fcn_00401f60 (int64_t arg_40h, int64_t arg_48h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, uint32_t arg6) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r9 = arg6;\n    rbx = *((rsp + 0x48));\n    r10 = *((rsp + 0x40));\n    rbx = -rbx;\n    if (rsi < 0) {\n        goto label_2;\n    }\n    if (rcx < 0) {\n        goto label_3;\n    }\n    if (r9 < 0) {\n        goto label_4;\n    }\n    r15 = rbx;\n    rax = rbp;\n    rdx:rax = rax * r8;\n    r12 = rax;\n    r13 = rdx;\n    rax = rbp;\n    r15 *= r12;\n    rdx:rax = rax * rcx;\n    r11 = rdx;\n    rax = r15;\n    rdx:rax = rax * r10;\n    rax = r15;\n    r14 = rdx;\n    rdx:rax = rax * r9;\n    r12b = (r12 != 0) ? 1 : 0;\n    r12d = (int32_t) r12b;\n    rbp += r12;\n    rbp += r14;\n    r11 += 0;\n    rbp += r13;\n    r11 += 0;\n    rbp += rax;\n    r11 += rdx;\n    rax = rsi;\n    rdx:rax = rax * r8;\n    r8 = rdx;\n    r12 = rax;\n    rax = rsi;\n    esi = 0;\n    r12 += rbp;\n    r8 += 0;\n    rbx *= r12;\n    rdx:rax = rax * rcx;\n    rcx = rdx;\n    rax = rbx;\n    rbp += r11;\n    rcx += 0;\n    rdx:rax = rax * r10;\n    rax = rbx;\n    r11 = rdx;\n    rdx:rax = rax * r9;\n    sil = (r12 != 0) ? 1 : 0;\n    rsi += rbp;\n    rsi += r11;\n    rcx += 0;\n    rsi += r8;\n    rcx += 0;\n    rsi += rax;\n    rcx += rdx;\n    rdx = rcx;\n    rax = rsi;\n    if (r9 >= rcx) {\n        goto label_5;\n    }\nlabel_0:\n    rsi -= r10;\n    rcx -= r9;\n    rdx = rcx;\n    rax = rsi;\n    do {\nlabel_1:\n        *(rdi) = rdx;\n        return rax;\nlabel_5:\n    } while (rcx != 0);\n    if (r10 <= rsi) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_4:\n    assert_fail (\"(m1 >> (W_TYPE_SIZE - 1)) == 0\", \"src/factor.c\", 0x3e9, \"mulredc2\");\nlabel_3:\n    assert_fail (\"(b1 >> (W_TYPE_SIZE - 1)) == 0\", \"src/factor.c\", 0x3e8, \"mulredc2\");\nlabel_2:\n    return assert_fail (\"(a1 >> (W_TYPE_SIZE - 1)) == 0\", \"src/factor.c\", 0x3e7, \"mulredc2\");\n}\n"
        },
        {
            "funcName": "fcn_004020d0",
            "funcStartAddr": "0x4020d0",
            "funcEndAddr": "0x402234",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x4020d0 */\n#include <stdint.h>\n \nvoid fcn_004020d0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_28h_2;\n    int64_t var_30h;\n    int64_t var_28h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r15 = r8;\n    rbx = rdi;\n    rax = *(r9);\n    r10 = *(rsi);\n    r11 = *((rsi + 8));\n    r13 = *(rcx);\n    *((rsp + 0x28)) = rdx;\n    r14 = *((rcx + 8));\n    r12 = *(rdx);\n    *((rsp + 0x10)) = rax;\n    rax = *((r9 + 8));\n    *((rsp + 8)) = rax;\n    while ((r12b & 1) == 0) {\nlabel_0:\n        r8 = r10;\n        rcx = r11;\n        r12 >>= 1;\n        rax = fcn_00401f60 (rbx, r11, r10, rcx, r8, r14);\n        r11 = *(rbx);\n        r10 = rax;\n        ebp--;\n        if (ebp == 0) {\n            goto label_2;\n        }\n    }\n    r8 = r10;\n    rcx = r11;\n    *((rsp + 0x28)) = r11;\n    *((rsp + 0x30)) = r10;\n    rax = fcn_00401f60 (rbx, *((rsp + 0x18)), *((rsp + 0x20)), rcx, r8, r14);\n    *((rsp + 0x20)) = rax;\n    rax = *(rbx);\n    *((rsp + 0x18)) = rax;\n    r10 = *((rsp + 0x20));\n    r11 = *((rsp + 0x18));\n    goto label_0;\nlabel_2:\n    rax = *((rsp + 0x28));\n    rbp = *((rax + 8));\n    if (rbp != 0) {\n        goto label_3;\n    }\n    goto label_4;\n    do {\nlabel_1:\n        rdx = r10;\n        rcx = r11;\n        rax = fcn_00401f60 (rbx, r11, rdx, rcx, r10, r14);\n        rbp >>= 1;\n        r11 = *(rbx);\n        r10 = rax;\n        if (rbp == 0) {\n            goto label_4;\n        }\nlabel_3:\n    } while ((bpl & 1) == 0);\n    rcx = r11;\n    r8 = r10;\n    *((rsp + 0x30)) = r10;\n    *((rsp + 0x28)) = r11;\n    rax = fcn_00401f60 (rbx, *((rsp + 0x18)), *((rsp + 0x20)), rcx, r8, r14);\n    *((rsp + 0x20)) = rax;\n    rax = *(rbx);\n    *((rsp + 0x18)) = rax;\n    r10 = *((rsp + 0x20));\n    r11 = *((rsp + 0x18));\n    goto label_1;\nlabel_4:\n    rax = *((rsp + 8));\n    *(rbx) = rax;\n    rax = *((rsp + 0x10));\n}\n"
        },
        {
            "funcName": "fcn_00402240",
            "funcStartAddr": "0x402240",
            "funcEndAddr": "0x402337",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x402240 */\n#include <stdint.h>\n \nuint64_t fcn_00402240 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, uint32_t arg6) {\n    int64_t var_fh;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r14 = rdi;\n    r13d = r8d;\n    r12 = rsi;\n    rbx = r9;\n    rax = fcn_004020d0 (rsp + 0x18, rdx, rcx, rdi, r12, r9);\n    rcx = *(rbx);\n    rsi = *((rsp + 0x18));\n    rdi = *((rbx + 8));\n    if (rcx == rax) {\n        goto label_3;\n    }\nlabel_1:\n    r9 = *((r14 + 8));\n    rdx = *(r14);\n    r10 = r9;\n    rbp -= rcx;\n    r10 -= rdi;\n    *(rsp) = r10;\n    r15b = (rax == rbp) ? 1 : 0;\n    cl = (rsi == r10) ? 1 : 0;\n    r15b &= cl;\n    *((rsp + 0xf)) = r15b;\n    if (r15b != 0) {\n        goto label_4;\n    }\n    r15d = 1;\n    if (r13d > 1) {\n        goto label_5;\n    }\n    goto label_2;\n    do {\nlabel_0:\n        r15d++;\n        if (r13d == r15d) {\n            goto label_2;\n        }\n        rdx = *(r14);\nlabel_5:\n        r8 = rax;\n        rax = fcn_00401f60 (rsp + 0x28, rsi, rax, rsi, r8, *((r14 + 8)));\n        rsi = *((rsp + 0x28));\n        if (rbp == rax) {\n            if (*(rsp) == rsi) {\n                goto label_4;\n            }\n        }\n    } while (*(rbx) != rax);\n    if (*((rbx + 8)) != rsi) {\n        goto label_0;\n    }\nlabel_2:\n    eax = *((rsp + 0xf));\n    return rax;\nlabel_3:\n    if (rdi != rsi) {\n        goto label_1;\n    }\nlabel_4:\n    *((rsp + 0xf)) = 1;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_00402340",
            "funcStartAddr": "0x402340",
            "funcEndAddr": "0x4023c1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x402340 */\n#include <stdint.h>\n \nuint64_t fcn_00402340 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rbx = rsp;\n    rax = fcn_00404710 (rdi, rsp, rdx);\n    edi = 0x14;\n    r8 = rax;\n    r8 -= rbx;\n    rbx = rdi;\n    rbx -= r8;\n    if (rbx >= rbp) {\n        goto label_0;\n    }\n    rdi = imp.__libc_start_main;\n    r8 -= 0x14;\n    rcx = rbp + rdi;\n    rdx = rdi;\n    rcx += r8;\n    do {\n        *(rdx) = 0x30;\n        rdx++;\n    } while (rdx != rcx);\n    r8 += rbp;\n    r8 += rdi;\n    do {\n        memcpy (r8, rax, rbx);\n        rdi = rax + rbx;\n        *(0x00613308) = rdi;\n        return rax;\nlabel_0:\n        r8 = imp.__libc_start_main;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_004023d0",
            "funcStartAddr": "0x4023d0",
            "funcEndAddr": "0x402440",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x4023d0 */\n#include <stdint.h>\n \nuint64_t fcn_004023d0 (void) {\n    rbx = imp.__libc_start_main;\n    rbx -= rsi;\n    rax = fcn_00404690 (1, *(0x00613300), rbx);\n    if (rax == rbx) {\n        rax = imp.__libc_start_main;\n        *(0x00613308) = rax;\n        return rax;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"write error\");\n    rbx = rax;\n    rax = errno_location ();\n    rcx = rbx;\n    eax = 0;\n    rax = error (1, *(rax), 0x40f2e9);\n}\n"
        },
        {
            "funcName": "fcn_00402440",
            "funcStartAddr": "0x402440",
            "funcEndAddr": "0x402487",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x402440 */\n#include <stdint.h>\n \nint64_t fcn_00402440 (uint32_t arg1, uint32_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rax = rdx;\n    if (rsi != 0) {\n        if (*((rdi + 8)) != 0) {\n            goto label_0;\n        }\n        *(rdi) = rdx;\n        *((rdi + 8)) = rsi;\n        return rax;\n    }\n    edx = 1;\n    rsi = rax;\n    void (*0x401d80)() ();\nlabel_0:\n    return assert_fail (\"factors->plarge[1] == 0\", \"src/factor.c\", 0x235, \"factor_insert_large\");\n}\n"
        },
        {
            "funcName": "fcn_00402490",
            "funcStartAddr": "0x402490",
            "funcEndAddr": "0x402582",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x402490 */\n#include <stdint.h>\n \nint64_t fcn_00402490 (uint32_t arg1, int64_t arg2, uint32_t arg3, uint32_t arg4, int64_t arg5) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    if ((r8b & 1) == 0) {\n        goto label_2;\n    }\n    rax = rdx;\n    r9 = rsi;\n    rax |= rsi;\n    if (rax != 0) {\n        goto label_3;\n    }\n    goto label_4;\n    do {\n        rax = r9;\n        rdx >>= 1;\n        rax <<= 0x3f;\n        r9 >>= 1;\n        rdx |= rax;\nlabel_3:\n    } while ((dl & 1) == 0);\nlabel_1:\n    rax = r9;\n    rax |= rcx;\n    if (rax == 0) {\n        goto label_5;\n    }\nlabel_0:\n    if (r9 > rcx) {\n        goto label_6;\n    }\n    al = (r9 == rcx) ? 1 : 0;\n    if (rdx > r8) {\n        if (al != 0) {\n            goto label_6;\n        }\n    }\n    if (r9 >= rcx) {\n        if (rdx >= r8) {\n            goto label_7;\n        }\n        if (al == 0) {\n            goto label_7;\n        }\n    }\n    r8 -= rdx;\n    rcx -= r9;\n    do {\n        rax = rcx;\n        r8 >>= 1;\n        rax <<= 0x3f;\n        rcx >>= 1;\n        r8 |= rax;\n    } while ((r8b & 1) == 0);\n    rax = r9;\n    rax |= rcx;\n    if (rax != 0) {\n        goto label_0;\n    }\nlabel_5:\n    *(rdi) = 0;\n    rsi = rdx;\n    rdi = r8;\n    void (*0x401d20)() ();\nlabel_6:\n    rdx -= r8;\n    r9 -= rcx;\n    do {\n        rax = r9;\n        rdx >>= 1;\n        rax <<= 0x3f;\n        r9 >>= 1;\n        rdx |= rax;\n    } while ((dl & 1) == 0);\n    goto label_1;\nlabel_4:\n    *(rdi) = rcx;\n    rax = r8;\n    return rax;\nlabel_7:\n    *(rdi) = r9;\n    rax = rdx;\n    return rax;\nlabel_2:\n    return assert_fail (\"b0 & 1\", \"src/factor.c\", 0x1e3, \"gcd2_odd\");\n}\n"
        },
        {
            "funcName": "fcn_00402590",
            "funcStartAddr": "0x402590",
            "funcEndAddr": "0x402632",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x402590 */\n#include <stdint.h>\n \nint64_t fcn_00402590 (int64_t arg1, uint32_t arg2, int64_t arg3, int64_t arg4, uint32_t arg5) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    if (rcx == 0) {\n        goto label_0;\n    }\n    rax = rdx;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    __asm (\"bsr r10, rcx\");\n    __asm (\"bsr rdx, rsi\");\n    r10d ^= 0x3f;\n    edx ^= 0x3f;\n    r9 = r8;\n    r10d -= edx;\n    rdx = rcx;\n    ecx = r10d;\n    rdx <<= cl;\n    ecx = 0x40;\n    ecx -= r10d;\n    r9 >>= cl;\n    ecx = r10d;\n    r9 |= rdx;\n    r8 <<= cl;\n    if (r10d <= 0) {\n        goto label_2;\n    }\n    edx = 0;\n    do {\n        if (r9 >= rsi) {\n            if (r9 != rsi) {\n                goto label_3;\n            }\n            if (rax < r8) {\n                goto label_3;\n            }\n        }\n        rax -= r8;\n        rsi -= r9;\nlabel_3:\n        rcx = r9;\n        r8 >>= 1;\n        edx++;\n        rcx <<= 0x3f;\n        r9 >>= 1;\n        r8 |= rcx;\n    } while (r10d != edx);\nlabel_2:\n    *(rdi) = rsi;\n    return rax;\nlabel_1:\n    *(rdi) = 0;\n    return rax;\nlabel_0:\n    return assert_fail (\"d1 != 0\", \"src/factor.c\", 0x1a3, \"mod2\");\n}\n"
        },
        {
            "funcName": "fcn_00402640",
            "funcStartAddr": "0x402640",
            "funcEndAddr": "0x4026e4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x402640 */\n#include <stdint.h>\n \nint64_t fcn_00402640 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\nlabel_0:\n    r8 = rsi;\n    if (rdi == 0) {\n        goto label_1;\n    }\n    rdx = rdi;\n    r9d = 0x40;\n    esi = 0;\n    rcx = 0x44b82fa09b5a53;\n    rdx >>= 9;\n    rax = rdx;\n    rdx:rax = rax * rcx;\n    ecx = 0x3b9aca00;\n    rdx >>= 0xb;\n    rax = rdx * 0x3b9aca00;\n    rdi -= rax;\n    eax = 0;\n    do {\n        r10 = rcx;\n        rax >>= 1;\n        rsi += rsi;\n        r10 <<= 0x3f;\n        rcx >>= 1;\n        rax |= r10;\n        if (rcx >= rdi) {\n            if (rcx != rdi) {\n                goto label_2;\n            }\n            if (rax > r8) {\n                goto label_2;\n            }\n        }\n        rsi++;\n        r8 -= rax;\n        rdi -= rcx;\nlabel_2:\n        r9d--;\n    } while (r9d != 0);\n    *((rsp + 8)) = r8;\n    fcn_00402640 (rdx, rsi, rdx);\n    goto label_0;\n    r8 = *((rsp + 8));\n    esi = 9;\n    rdi = r8;\n    void (*0x402340)() ();\nlabel_1:\n    esi = 0;\n    rdi = r8;\n    return void (*0x402340)() ();\n}\n"
        },
        {
            "funcName": "fcn_004026f0",
            "funcStartAddr": "0x4026f0",
            "funcEndAddr": "0x4027c2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x4026f0 */\n#include <stdint.h>\n \nint64_t fcn_004026f0 (void) {\n    rax = imp.__libc_start_main;\n    rbp = rax + 1;\n    *(rax) = dil;\n    *(0x00613308) = rbp;\n    if (dil != 0xa) {\n        return rax;\n    }\n    eax = *(0x00613230);\n    rbx = imp.__libc_start_main;\n    if (eax == 0xffffffff) {\n        goto label_1;\n    }\nlabel_0:\n    if (eax != 0) {\n        goto label_2;\n    }\n    rax = rbp;\n    rax -= rbx;\n    rbx += 0x200;\n    if (rax > 0x1ff) {\n        goto label_3;\n    }\n    return rax;\n    do {\n        rbx = rax;\nlabel_3:\n        rax = rbx - 1;\n    } while (*((rbx - 1)) != 0xa);\n    *(0x00613308) = rbx;\n    rbp -= rbx;\n    fcn_004023d0 ();\n    rcx = imp.__libc_start_main;\n    rax = memcpy (rcx, rbx, rbp);\n    rbp += rax;\n    *(0x00613308) = rbp;\n    return rax;\nlabel_2:\n    void (*0x4023d0)() ();\nlabel_1:\n    eax = isatty (0);\n    *(0x00613230) = eax;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_004027d0",
            "funcStartAddr": "0x4027d0",
            "funcEndAddr": "0x402be1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x4027d0 */\n#include <stdint.h>\n \nint64_t fcn_004027d0 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\nlabel_3:\n    *(rsp) = rsi;\n    *((rsp + 8)) = rdx;\n    if (rdi <= 1) {\n        goto label_7;\n    }\n    rax = *(rsp);\n    r12 = rdi;\n    rax++;\n    *((rsp + 0x28)) = rax;\nlabel_6:\n    r13d = 0;\n    rcx = r12;\n    esi = 0x40;\n    eax = 1;\n    edx = 0;\n    rdi = r13;\n    do {\n        r8 = rcx;\n        rdx >>= 1;\n        r8 <<= 0x3f;\n        rcx >>= 1;\n        rdx |= r8;\n        if (rcx >= rax) {\n            if (rcx != rax) {\n                goto label_8;\n            }\n            if (rdx > rdi) {\n                goto label_8;\n            }\n        }\n        rdi -= rdx;\n        rax -= rcx;\nlabel_8:\n        esi--;\n    } while (esi != 0);\n    rax = r12;\n    ebp = 0;\n    r13 = rdi;\n    rax -= rdi;\n    rax = rdi + rdi;\n    bpl = (rax > rdi) ? 1 : 0;\n    rax -= r12;\n    rbp = -rbp;\n    rbp &= r12;\n    rbp += rax;\n    if (r12 <= *(rsp)) {\n        goto label_9;\n    }\n    rbx = rbp;\n    r15 = rbp;\n    ecx = 1;\n    r14d = 1;\nlabel_2:\n    rax = r12;\n    r10 = r12;\n    r11 = rcx;\n    rax >>= 1;\n    eax &= 0x7f;\n    eax = *((rax + 0x40c220));\n    rdx = rax + rax;\n    rax *= rax;\n    rax *= r12;\n    rdx -= rax;\n    rax = rdx + rdx;\n    rdx *= rdx;\n    rdx *= r12;\n    rax -= rdx;\n    r8 = rax + rax;\n    rax *= rax;\n    rax *= r12;\n    r8 -= rax;\n    rax = *(rsp);\n    r10 -= rax;\n    rax -= r12;\n    r9 = rax;\n    do {\nlabel_0:\n        rax = rbp;\n        rdx:rax = rax * rbp;\n        rcx = rdx;\n        rax *= r8;\n        rsi = rcx;\n        rdx:rax = rax * r12;\n        rsi -= rdx;\n        rax = rsi + r12;\n        if (rcx < rdx) {\n            rsi = rax;\n        }\n        rax = r15;\n        rbp -= rbp;\n        rsi += r9;\n        rbp &= r12;\n        rbp += rsi;\n        rcx -= rcx;\n        rax -= rbp;\n        rcx &= r12;\n        rcx += rax;\n        rax = r13;\n        rdx:rax = rax * rcx;\n        rcx = rdx;\n        rax *= r8;\n        r13 = rcx;\n        rdx:rax = rax * r12;\n        r13 -= rdx;\n        rax = r13 + r12;\n        if (rcx < rdx) {\n            r13 = rax;\n        }\n        rax = r14;\n        eax &= 0x1f;\n        if (rax == 1) {\n            goto label_10;\n        }\nlabel_1:\n        r14--;\n    } while (r14 != 0);\n    rcx = r11 + r11;\n    if (r11 == 0) {\n        goto label_11;\n    }\n    rax = rbp;\n    do {\n        rdx:rax = rax * rax;\n        rsi = rdx;\n        rax *= r8;\n        rdi = rsi;\n        rdx:rax = rax * r12;\n        rdi -= rdx;\n        rax = rdi + r12;\n        if (rsi < rdx) {\n            rdi = rax;\n        }\n        rax -= rax;\n        rdi += r9;\n        r14++;\n        rax &= r12;\n        rax += rdi;\n    } while (r11 != r14);\n    r15 = rbp;\n    rbx = rax;\n    r11 = rcx;\n    goto label_0;\nlabel_10:\n    rax = fcn_00401d20 (r13, r12);\n    if (rax != 1) {\n        goto label_12;\n    }\n    rbx = rbp;\n    goto label_1;\n    do {\nlabel_12:\n        rax = rbx;\n        rdx:rax = rax * rbx;\n        rcx = rdx;\n        rax *= r8;\n        rsi = rcx;\n        rdx:rax = rax * r12;\n        rsi -= rdx;\n        rax = rsi + r12;\n        if (rcx < rdx) {\n            rsi = rax;\n        }\n        rax -= rax;\n        rsi += r9;\n        rax &= r12;\n        rbx = rax + rsi;\n        rax = r15;\n        rdi -= rdi;\n        rax -= rbx;\n        rdi &= r12;\n        rdi += rax;\n        rax = fcn_00401d20 (rdi, r12);\n    } while (rax == 1);\n    rcx = r11;\n    r11 = rax;\n    if (r12 == rax) {\n        goto label_13;\n    }\n    rax = r12;\n    edx = 0;\n    rax = rdx:rax / r11;\n    rdx = rdx:rax % r11;\n    r8 = rax;\n    r12 = rax;\n    if (r11 <= 1) {\n        goto label_14;\n    }\n    if (r11 > 0x17ded78) {\n        rdi = r11;\n        *((rsp + 0x18)) = rcx;\n        *((rsp + 0x10)) = r11;\n        *((rsp + 0x20)) = rax;\n        al = fcn_00403840 (rdi);\n        r11 = *((rsp + 0x10));\n        rcx = *((rsp + 0x18));\n        r8 = *((rsp + 0x20));\n        if (al == 0) {\n            goto label_14;\n        }\n    }\n    edx = 1;\n    *((rsp + 0x18)) = r8;\n    *((rsp + 0x10)) = rcx;\n    fcn_00401d80 (*((rsp + 8)), r11);\n    r8 = *((rsp + 0x18));\n    rcx = *((rsp + 0x10));\n    if (r8 <= 1) {\n        goto label_15;\n    }\nlabel_4:\n    if (r8 <= 0x17ded78) {\n        goto label_16;\n    }\n    rdi = r8;\n    *((rsp + 0x18)) = rcx;\n    *((rsp + 0x10)) = r8;\n    al = fcn_00403840 (rdi);\n    r8 = *((rsp + 0x10));\n    rcx = *((rsp + 0x18));\n    if (al != 0) {\n        goto label_16;\n    }\n    rax = rbp;\n    edx = 0;\n    rax = rdx:rax / r8;\n    rdx = rdx:rax % r8;\n    rax = r15;\n    edx = 0;\n    rax = rdx:rax / r8;\n    rdx = rdx:rax % r8;\n    rax = rbx;\n    r15 = rdx;\n    edx = 0;\n    rax = rdx:rax / r8;\n    rdx = rdx:rax % r8;\n    rbx = rdx;\nlabel_5:\n    if (*(rsp) < r8) {\n        goto label_2;\n    }\nlabel_9:\n    assert_fail (\"a < n\", \"src/factor.c\", 0x5c8, \"factor_using_pollard_rho\");\nlabel_11:\n    r14 = r11;\n    rbx = rbp;\n    r11 = rcx;\n    r15 = rbp;\n    goto label_0;\nlabel_14:\n    *((rsp + 0x18)) = r8;\n    *((rsp + 0x10)) = rcx;\n    fcn_004027d0 (r11, *((rsp + 0x28)), *((rsp + 8)));\n    goto label_3;\n    r8 = *((rsp + 0x18));\n    rcx = *((rsp + 0x10));\n    if (r8 > 1) {\n        goto label_4;\n    }\n    if (r8 == 1) {\nlabel_15:\n        goto label_17;\n    }\n    ebx = 0;\n    r15d = 0;\n    ebp = 0;\n    goto label_5;\nlabel_16:\n    rdi = *((rsp + 8));\n    edx = 1;\n    rsi = r8;\n    void (*0x401d80)() ();\nlabel_13:\n    if (r12 > 1) {\n        goto label_6;\n    }\nlabel_7:\n    assert_fail (\"(1) < (n)\", \"src/factor.c\", 0x5c2, \"factor_using_pollard_rho\");\nlabel_17:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00402bf0",
            "funcStartAddr": "0x402bf0",
            "funcEndAddr": "0x403205",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x402bf0 */\n#include <stdint.h>\n \nint64_t fcn_00402bf0 (uint32_t arg1, int64_t arg2, int64_t arg3, uint32_t arg4) {\n    int64_t var_10h_2;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    uint32_t var_30h;\n    int64_t var_38h;\n    int64_t var_48h;\n    int64_t var_50h;\n    int64_t var_58h;\n    uint32_t var_60h;\n    int64_t var_78h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\nlabel_2:\n    r12 = rsi;\n    *((rsp + 0x30)) = rcx;\n    rcx -= rcx;\n    ecx &= 0x40;\n    *((rsp + 0x18)) = rdx;\n    edx = 0;\n    rcx += 0x3f;\n    dl = (rdi < 2) ? 1 : 0;\n    rax -= rax;\n    rax++;\n    do {\n        rsi = rdx;\n        rax += rax;\n        rdx += rdx;\n        rsi >>= 0x3f;\n        rax |= rsi;\n        if (rbp >= rax) {\n            if (rbp != rax) {\n                goto label_8;\n            }\n            if (rdx < r12) {\n                goto label_8;\n            }\n        }\n        rdx -= r12;\n        rax -= rbp;\nlabel_8:\n        rcx--;\n    } while (rcx != -1);\n    rbx = rdx;\n    *(rsp) = rax;\n    *((rsp + 8)) = rdx;\n    rdx += rbx;\n    rax += rax;\n    *((rsp + 0x48)) = rax;\n    rbx = rdx;\n    rsi = rax;\n    if (rax <= rbp) {\n        if (rax != rbp) {\n            goto label_9;\n        }\n        if (r12 > rdx) {\n            goto label_9;\n        }\n    }\n    rdx -= r12;\n    rax -= rbp;\n    *((rsp + 0x48)) = rax;\n    rbx = rdx;\n    rsi = rax;\nlabel_9:\n    *((rsp + 0x50)) = rsi;\n    *((rsp + 0x58)) = rsi;\n    if (r12 == 1) {\n        if (rbp == 0) {\n            goto label_7;\n        }\n    }\n    *((rsp + 0x10)) = rbx;\n    r15 = rbx;\n    r13d = 1;\n    *((rsp + 0x20)) = 1;\nlabel_3:\n    rax = r12;\n    rax >>= 1;\n    eax &= 0x7f;\n    eax = *((rax + 0x40c220));\n    rdx = rax + rax;\n    rax *= rax;\n    rax *= r12;\n    rdx -= rax;\n    rax = rdx + rdx;\n    rdx *= rdx;\n    rdx *= r12;\n    rax -= rdx;\n    r14 = rax + rax;\n    rax *= rax;\n    rax *= r12;\n    r14 -= rax;\n    do {\nlabel_0:\n        rdx = rbx;\n        rax = fcn_00401f60 (rsp + 0x78, rsi, rdx, rsi, rbx, rbp);\n        rdx = *((rsp + 0x78));\n        rax += *((rsp + 0x28));\n        rdx += 0;\n        *((rsp + 0x58)) = rdx;\n        rbx = rax;\n        rsi = rdx;\n        if (rbp >= rdx) {\n            if (rbp != rdx) {\n                goto label_10;\n            }\n            if (r12 > rax) {\n                goto label_10;\n            }\n        }\n        rax -= r12;\n        rdx -= rbp;\n        *((rsp + 0x48)) = rdx;\n        rbx = rax;\n        rsi = rdx;\nlabel_10:\n        rcx = *((rsp + 0x50));\n        r8 = *((rsp + 0x10));\n        r8 -= rbx;\n        rcx -= rsi;\n        if (rcx < 0) {\n            r8 += r12;\n            rcx += rbp;\n        }\n        rax = fcn_00401f60 (rsp + 0x78, *((rsp + 0x10)), *((rsp + 0x18)), rcx, r8, rbp);\n        *((rsp + 0x18)) = rax;\n        rax = *((rsp + 0x78));\n        *((rsp + 0x10)) = rax;\n        rax = r13;\n        eax &= 0x1f;\n        if (rax == 1) {\n            goto label_11;\n        }\n        rsi = *((rsp + 0x48));\nlabel_1:\n        r13--;\n    } while (r13 != 0);\n    rax = *((rsp + 0x20));\n    *((rsp + 0x50)) = rsi;\n    r15 = rbx;\n    rdi = rax + rax;\n    *((rsp + 0x10)) = rdi;\n    if (rax == 0) {\n        goto label_12;\n    }\n    r15 = r13;\n    r13 = *((rsp + 0x18));\n    *((rsp + 0x28)) = rbx;\n    rbx = rax;\n    do {\n        rax = fcn_00401f60 (rsp + 0x78, rsi, r15, rsi, rdx, rbp);\n        rcx = *((rsp + 0x78));\n        rax += r13;\n        rcx += 0;\n        *((rsp + 0x58)) = rcx;\n        rdx = rax;\n        rsi = rcx;\n        if (rbp >= rcx) {\n            if (rbp != rcx) {\n                goto label_13;\n            }\n            if (r12 > rax) {\n                goto label_13;\n            }\n        }\n        rax -= r12;\n        rcx -= rbp;\n        *((rsp + 0x48)) = rcx;\n        rdx = rax;\n        rsi = rcx;\nlabel_13:\n        r15++;\n    } while (rbx != r15);\n    rbx = *((rsp + 0x28));\n    r15 = rdx;\nlabel_12:\n    rax = *((rsp + 0x10));\n    r13 = *((rsp + 0x20));\n    *((rsp + 0x10)) = rbx;\n    rbx = r15;\n    *((rsp + 0x58)) = rsi;\n    *((rsp + 0x20)) = rax;\n    goto label_0;\nlabel_11:\n    rax = fcn_00402490 (rsp + 0x60, *(rsp), *((rsp + 8)), rbp, r12);\n    if (*((rsp + 0x60)) == 0) {\n        if (rax != 1) {\n            goto label_14;\n        }\n        rsi = *((rsp + 0x48));\n        r15 = rbx;\n        *((rsp + 0x58)) = rsi;\n        goto label_1;\n    }\nlabel_14:\n    *((rsp + 0x28)) = r13;\n    r13 = *((rsp + 0x18));\n    *((rsp + 0x38)) = rbx;\n    rbx = r14;\n    r14 = *((rsp + 0x10));\n    while (rdi == 0) {\n        if (rax != 1) {\n            goto label_15;\n        }\n        rdx = r15;\n        rax = fcn_00401f60 (rsp + 0x78, *((rsp + 0x58)), rdx, rsi, r15, rbp);\n        rdx = *((rsp + 0x78));\n        rax += r13;\n        rdx += 0;\n        *((rsp + 0x68)) = rdx;\n        r15 = rax;\n        rcx = rdx;\n        if (rbp >= rdx) {\n            if (rbp != rdx) {\n                goto label_16;\n            }\n            if (r12 > rax) {\n                goto label_16;\n            }\n        }\n        rax -= r12;\n        rdx -= rbp;\n        *((rsp + 0x58)) = rdx;\n        r15 = rax;\n        rcx = rdx;\nlabel_16:\n        rsi = *((rsp + 0x50));\n        rdx = r14;\n        rdx -= r15;\n        rsi -= rcx;\n        if (rsi < 0) {\n            rdx += r12;\n            rsi += rbp;\n        }\n        rax = fcn_00402490 (rsp + 0x60, rsi, rdx, rbp, r12);\n        rdi = *((rsp + 0x60));\n    }\n    r8 = rax;\n    *((rsp + 0x18)) = r13;\n    if (r12 == rax) {\n        if (rbp == rdi) {\n            goto label_17;\n        }\n    }\n    rax = r8;\n    rsi = r8;\n    *(rsp) = r8;\n    rax >>= 1;\n    eax &= 0x7f;\n    eax = *((rax + 0x40c220));\n    rdx = rax + rax;\n    rax *= rax;\n    rax *= r8;\n    rdx -= rax;\n    rax = rdx + rdx;\n    rdx *= rdx;\n    rdx *= r8;\n    rax -= rdx;\n    rax *= rax;\n    rax *= r8;\n    rdx -= rax;\n    r12 *= rdx;\n    al = fcn_00404050 (rdi, rsi, rax + rax);\n    r8 = *(rsp);\n    if (al != 0) {\n        goto label_18;\n    }\n    rax = *((rsp + 0x18));\n    fcn_00402bf0 (*((rsp + 0x60)), r8, rax + 1, *((rsp + 0x30)));\n    goto label_2;\n    do {\nlabel_6:\n        if (r12 <= 1) {\n            goto label_19;\n        }\n        if (r12 > 0x17ded78) {\n            al = fcn_00403840 (r12);\n            if (al == 0) {\n                goto label_19;\n            }\n        }\n        edx = 1;\n        rax = fcn_00401d80 (*((rsp + 0x30)), r12);\nlabel_7:\n        return rax;\nlabel_15:\n        r8 = rax;\n        rax >>= 1;\n        *((rsp + 0x18)) = r13;\n        rbx = *((rsp + 0x38));\n        eax &= 0x7f;\n        *((rsp + 0x10)) = r14;\n        r13 = *((rsp + 0x28));\n        eax = *((rax + 0x40c220));\n        rdx = rax + rax;\n        rax *= rax;\n        rax *= r8;\n        rdx -= rax;\n        rax = rdx + rdx;\n        rdx *= rdx;\n        rdx *= r8;\n        rax -= rdx;\n        rcx = rax + rax;\n        rax *= rax;\n        rax *= r8;\n        rcx -= rax;\n        r12 *= rcx;\n        if (rbp < r8) {\n            goto label_20;\n        }\n        rax = r12;\n        rdx:rax = rax * r8;\n        rbp -= rdx;\n        rbp *= rcx;\nlabel_5:\n        if (r8 <= 1) {\n            goto label_21;\n        }\n        if (r8 > 0x17ded78) {\n            rdi = r8;\n            *((rsp + 0x28)) = r8;\n            al = fcn_00403840 (rdi);\n            r8 = *((rsp + 0x28));\n            if (al == 0) {\n                goto label_21;\n            }\n        }\n        edx = 1;\n        fcn_00401d80 (*((rsp + 0x30)), r8);\nlabel_4:\n    } while (rbp == 0);\n    al = fcn_00404050 (rbp, r12, rdx);\n    if (al == 0) {\n        rsi = *((rsp + 0x48));\n        rax = fcn_00402590 (rsp + 0x48, *(rsi), rbx, rbp, r12);\n        rsi = *((rsp + 0x50));\n        rbx = rax;\n        rax = fcn_00402590 (rsp + 0x50, *(rsi), *((rsp + 0x10)), rbp, r12);\n        rsi = *((rsp + 0x58));\n        *((rsp + 0x10)) = rax;\n        rax = fcn_00402590 (rsp + 0x58, *(rsi), r15, rbp, r12);\n        rsi = *((rsp + 0x48));\n        r15 = rax;\n        goto label_3;\nlabel_21:\n        rax = *((rsp + 0x18));\n        fcn_004027d0 (r8, rax + 1, *((rsp + 0x30)));\n        goto label_4;\nlabel_20:\n        ebp = 0;\n        goto label_5;\nlabel_19:\n        fcn_004027d0 (r12, *((rsp + 0x18)), *((rsp + 0x30)));\n        return rax;\n    }\n    fcn_00402440 (*((rsp + 0x30)), rbp, r12);\n    return rax;\nlabel_18:\n    fcn_00402440 (*((rsp + 0x30)), *((rsp + 0x60)), r8);\n    goto label_6;\nlabel_17:\n    rdx++;\n    fcn_00402bf0 (rbp, r12, r13, *((rsp + 0x30)));\n    goto label_2;\n    goto label_7;\n}\n"
        },
        {
            "funcName": "fcn_00403210",
            "funcStartAddr": "0x403210",
            "funcEndAddr": "0x403836",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x403210 */\n#include <stdint.h>\n \nint64_t fcn_00403210 (uint32_t arg1, uint32_t arg2, uint32_t arg3, int64_t arg4) {\n    uint32_t var_8h;\n    uint32_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r14 = rsi;\n    *((rdx + 0xfa)) = 0;\n    *((rsp + 8)) = rdi;\n    *((rsp + 0x10)) = rdx;\n    *((rdx + 8)) = 0;\n    if (rdi == 0) {\n        if (rsi > 1) {\n            goto label_14;\n        }\nlabel_7:\n        return;\n    }\nlabel_14:\n    if ((r14b & 1) != 0) {\n        goto label_15;\n    }\n    if (r14 != 0) {\n        goto label_16;\n    }\n    rax = *((rsp + 8));\n    __asm (\"bsf rcx, rax\");\n    rax >>= cl;\n    edx = rcx + 0x40;\n    r14 = rax;\n    fcn_00401d80 (*((rsp + 0x10)), 2);\n    *((rsp + 8)) = 0;\n    do {\n        r13d = 0x1a;\n        r12d = 3;\n        ebp = 0;\n        ebx = 0;\n        r15 = 0x5555555555555555;\n        r8 = 0xaaaaaaaaaaaaaaab;\n        goto label_17;\nlabel_16:\n        rdi = *((rsp + 8));\n        ecx = 0x40;\n        __asm (\"bsf rdx, r14\");\n        rax = rdi;\n        ecx -= edx;\n        rax <<= cl;\n        ecx = edx;\n        rdi >>= cl;\n        r14 >>= cl;\n        *((rsp + 8)) = rdi;\n        r14 |= rax;\n        fcn_00401d80 (*((rsp + 0x10)), 2);\nlabel_15:\n    } while (*((rsp + 8)) == 0);\n    ebx = 1;\n    r13d = 2;\n    r15 = 0xaaaaaaaaaaaaaaab;\n    r12d = 3;\n    while (*((rsp + 8)) < rdx) {\nlabel_0:\n        r12 += r13;\n        rbx++;\n        if (*((rsp + 8)) == 0) {\n            goto label_18;\n        }\n        if (ebp > 0x29b) {\n            goto label_18;\n        }\n        rax = rbx;\n        r13d = *((rbx + 0x40efa0));\n        rax <<= 4;\n        r15 = *((rax + 0x40c290));\n        rsi = *((rax + 0x40c290));\n        rsi *= r14;\n        rax = rsi;\n        rdx:rax = rax * r12;\n    }\n    rax = *((rsp + 8));\n    rax -= rdx;\n    rdx = rbx;\n    rdx <<= 4;\n    rax *= r15;\n    rbp = *((rdx + 0x40c298));\n    if (rax > rbp) {\n        goto label_0;\n    }\nlabel_1:\n    r14 = rsi;\n    edx = 1;\n    *((rsp + 8)) = rax;\n    fcn_00401d80 (*((rsp + 0x10)), r12);\n    rsi = r15;\n    rsi *= r14;\n    rax = rsi;\n    rdx:rax = rax * r12;\n    if (rdx > *((rsp + 8))) {\n        goto label_0;\n    }\n    rax = *((rsp + 8));\n    rax -= rdx;\n    rax *= r15;\n    if (rax > rbp) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_18:\n    if (ebp <= 0x29b) {\n        goto label_19;\n    }\n    goto label_20;\n    do {\n        rdx = *((rbx + 0x10));\n        rdx *= r14;\n        if (rdx <= *((rbx + 0x18))) {\n            goto label_21;\n        }\nlabel_2:\n        rdx = *((rbx + 0x20));\n        rdx *= r14;\n        if (rdx <= *((rbx + 0x28))) {\n            goto label_22;\n        }\nlabel_3:\n        rdx = *((rbx + 0x30));\n        rdx *= r14;\n        if (*((rbx + 0x38)) >= rdx) {\n            goto label_23;\n        }\nlabel_4:\n        rdx = *((rbx + 0x40));\n        rdx *= r14;\n        if (*((rbx + 0x48)) >= rdx) {\n            goto label_24;\n        }\nlabel_5:\n        rdx = *((rbx + 0x50));\n        rdx *= r14;\n        if (rdx <= *((rbx + 0x58))) {\n            goto label_25;\n        }\nlabel_12:\n        rdx = *((rbx + 0x60));\n        rdx *= r14;\n        if (*((rbx + 0x68)) >= rdx) {\n            goto label_26;\n        }\nlabel_10:\n        rdx = *((rbx + 0x70));\n        rdx *= r14;\n        if (rdx <= *((rbx + 0x78))) {\n            goto label_27;\n        }\nlabel_8:\n        r12 += r13;\n        rdx = r12;\n        rdx *= r12;\n        if (r14 < rdx) {\n            goto label_20;\n        }\n        ebp += 8;\n        if (ebp > 0x29b) {\n            goto label_20;\n        }\nlabel_19:\n        ebx = ebp;\n        rdx = rbx;\n        r13d = *((rbx + 0x40ece0));\n        rdx <<= 4;\n        r8 = *((rdx + 0x40c2a0));\n        r15 = *((rdx + str.UUUUUUUU));\nlabel_17:\n        rdx = r14;\n        rbx <<= 4;\n        rdx *= r8;\n        rbx += 0x40c2a0;\n    } while (rdx > r15);\n    do {\n        r14 = rdx;\n        edx = 1;\n        *((rsp + 0x18)) = r8;\n        fcn_00401d80 (*((rsp + 0x10)), r12);\n        r8 = *((rsp + 0x18));\n        rdx = r14;\n        rdx *= r8;\n    } while (rdx <= r15);\n    rdx = *((rbx + 0x10));\n    rdx *= r14;\n    if (rdx > *((rbx + 0x18))) {\n        goto label_2;\n    }\nlabel_21:\n    esi = rbp + 1;\n    r15d = *((rsi + 0x40efa0));\n    r15 += r12;\n    do {\n        r14 = rdx;\n        edx = 1;\n        fcn_00401d80 (*((rsp + 0x10)), r15);\n        rdx = *((rbx + 0x10));\n        rdx *= r14;\n    } while (rdx <= *((rbx + 0x18)));\n    rdx = *((rbx + 0x20));\n    rdx *= r14;\n    if (rdx > *((rbx + 0x28))) {\n        goto label_3;\n    }\nlabel_22:\n    esi = rbp + 1;\n    r15d = *((rsi + 0x40efa0));\n    esi = rbp + 2;\n    esi = *((rsi + 0x40efa0));\n    r15 += rsi;\n    r15 += r12;\n    do {\n        r14 = rdx;\n        edx = 1;\n        fcn_00401d80 (*((rsp + 0x10)), r15);\n        rdx = *((rbx + 0x20));\n        rdx *= r14;\n    } while (rdx <= *((rbx + 0x28)));\n    rdx = *((rbx + 0x30));\n    rdx *= r14;\n    if (*((rbx + 0x38)) < rdx) {\n        goto label_4;\n    }\nlabel_23:\n    esi = rbp + 1;\n    r15d = *((rsi + 0x40efa0));\n    esi = rbp + 3;\n    esi = *((rsi + 0x40efa0));\n    r15 += rsi;\n    esi = rbp + 2;\n    esi = *((rsi + 0x40efa0));\n    r15 += r12;\n    r15 += rsi;\n    do {\n        r14 = rdx;\n        edx = 1;\n        fcn_00401d80 (*((rsp + 0x10)), r15);\n        rdx = *((rbx + 0x30));\n        rdx *= r14;\n    } while (rdx <= *((rbx + 0x38)));\n    rdx = *((rbx + 0x40));\n    rdx *= r14;\n    if (*((rbx + 0x48)) < rdx) {\n        goto label_5;\n    }\nlabel_24:\n    r14 = rdx;\n    r15d = rbp + 1;\n    r8d = rbp + 5;\nlabel_6:\n    edx = r15d;\n    rsi = r12;\n    do {\n        edi = edx;\n        edx++;\n        edi = *((rdi + 0x40efa0));\n        rsi += rdi;\n    } while (r8d != edx);\n    edx = 1;\n    *((rsp + 0x18)) = r8d;\n    fcn_00401d80 (*((rsp + 0x10)), rsi);\n    rdx = *((rbx + 0x40));\n    r8d = *((rsp + 0x18));\n    rdx *= r14;\n    if (rdx > *((rbx + 0x48))) {\n        goto label_5;\n    }\n    r14 = rdx;\n    goto label_6;\nlabel_20:\n    if (*((rsp + 8)) != 0) {\n        goto label_28;\n    }\n    if (r14 <= 1) {\n        goto label_7;\n    }\n    al = fcn_00404050 (0, r14, rdx);\n    if (al != 0) {\n        goto label_29;\n    }\n    rdx = *((rsp + 0x10));\n    rdi = r14;\n    esi = 1;\n    void (*0x4027d0)() ();\nlabel_27:\n    r14 = rdx;\n    r15d = rbp + 1;\n    r8d = rbp + 8;\nlabel_9:\n    edx = r15d;\n    rsi = r12;\n    do {\n        edi = edx;\n        edx++;\n        edi = *((rdi + 0x40efa0));\n        rsi += rdi;\n    } while (r8d != edx);\n    edx = 1;\n    *((rsp + 0x18)) = r8d;\n    fcn_00401d80 (*((rsp + 0x10)), rsi);\n    rdx = *((rbx + 0x70));\n    r8d = *((rsp + 0x18));\n    rdx *= r14;\n    if (rdx > *((rbx + 0x78))) {\n        goto label_8;\n    }\n    r14 = rdx;\n    goto label_9;\nlabel_26:\n    r14 = rdx;\n    r15d = rbp + 1;\n    r8d = rbp + 7;\nlabel_11:\n    edx = r15d;\n    rsi = r12;\n    do {\n        edi = edx;\n        edx++;\n        edi = *((rdi + 0x40efa0));\n        rsi += rdi;\n    } while (r8d != edx);\n    edx = 1;\n    *((rsp + 0x18)) = r8d;\n    fcn_00401d80 (*((rsp + 0x10)), rsi);\n    rdx = *((rbx + 0x60));\n    r8d = *((rsp + 0x18));\n    rdx *= r14;\n    if (rdx > *((rbx + 0x68))) {\n        goto label_10;\n    }\n    r14 = rdx;\n    goto label_11;\nlabel_25:\n    r14 = rdx;\n    r15d = rbp + 1;\n    r8d = rbp + 6;\nlabel_13:\n    edx = r15d;\n    rsi = r12;\n    do {\n        edi = edx;\n        edx++;\n        edi = *((rdi + 0x40efa0));\n        rsi += rdi;\n    } while (r8d != edx);\n    edx = 1;\n    *((rsp + 0x18)) = r8d;\n    fcn_00401d80 (*((rsp + 0x10)), rsi);\n    rdx = *((rbx + 0x50));\n    r8d = *((rsp + 0x18));\n    rdx *= r14;\n    if (rdx > *((rbx + 0x58))) {\n        goto label_12;\n    }\n    r14 = rdx;\n    goto label_13;\n    do {\nlabel_29:\n        rsi = *((rsp + 8));\n        rdi = *((rsp + 0x10));\n        rdx = r14;\n        void (*0x402440)() ();\nlabel_28:\n        al = fcn_00404050 (*((rsp + 8)), r14, rdx);\n    } while (al != 0);\n    rcx = *((rsp + 0x10));\n    rdi = *((rsp + 8));\n    rsi = r14;\n    edx = 1;\n    return void (*0x402bf0)() ();\n}\n"
        },
        {
            "funcName": "fcn_00403840",
            "funcStartAddr": "0x403840",
            "funcEndAddr": "0x403ade",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x403840 */\n#include <stdint.h>\n \nint64_t fcn_00403840 (int64_t arg1) {\n    int64_t var_8h;\n    uint32_t var_10h;\n    int64_t var_1ch;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_2fh;\n    int64_t var_30h;\n    int64_t var_40h;\n    int64_t var_12ah;\n    rdi = arg1;\n    r14 = rdi - 1;\n    rbx = rdi;\n    *((rsp + 8)) = r14;\n    if ((r14b & 1) != 0) {\n        goto label_5;\n    }\n    eax = 0;\n    do {\n        r14 >>= 1;\n        eax++;\n    } while ((r14b & 1) == 0);\n    *((rsp + 0x1c)) = eax;\nlabel_4:\n    rax = rbx;\n    rcx = rbx;\n    esi = 0x40;\n    r15d = 0;\n    rax >>= 1;\n    eax &= 0x7f;\n    eax = *((rax + 0x40c220));\n    rdx = rax + rax;\n    rax *= rax;\n    rax *= rbx;\n    rdx -= rax;\n    rax = rdx + rdx;\n    rdx *= rdx;\n    rdx *= rbx;\n    rax -= rdx;\n    edx = 0;\n    r13 = rax + rax;\n    rax *= rax;\n    rax *= rbx;\n    r13 -= rax;\n    eax = 1;\n    do {\n        rdi = rcx;\n        rdx >>= 1;\n        rdi <<= 0x3f;\n        rcx >>= 1;\n        rdx |= rdi;\n        if (rcx >= rax) {\n            if (rcx != rax) {\n                goto label_6;\n            }\n            if (rdx > r15) {\n                goto label_6;\n            }\n        }\n        r15 -= rdx;\n        rax -= rcx;\nlabel_6:\n        esi--;\n    } while (esi != 0);\n    rax = rbx;\n    r10d = 0;\n    rax -= r15;\n    rcx = r14;\n    r10b = (rax > r15) ? 1 : 0;\n    r10 = -r10;\n    rax = r10;\n    rax &= rbx;\n    r10 -= rbx;\n    rbp = rax + r10;\n    al = fcn_00401ed0 (rbx, r13, rbp, r15 + r15, *((rsp + 0x1c)), r15);\n    *((rsp + 0x2f)) = al;\n    if (al == 0) {\n        goto label_7;\n    }\n    r12d = 0x40efa0;\n    fcn_00403210 (0, *((rsp + 8)), rsp + 0x30, rcx);\n    eax = *((rsp + 0x12a));\n    *((rsp + 0x20)) = r14;\n    *((rsp + 0x28)) = eax;\n    eax--;\n    rax = rsp + rax*8 + 0x40;\n    *((rsp + 0x10)) = rax;\n    eax = 2;\n    r14 = rax;\nlabel_0:\n    eax = *((rsp + 0x28));\n    if (eax == 0) {\n        goto label_3;\n    }\n    r11 = rsp + 0x40;\n    do {\n        rax = *((rsp + 8));\n        edx = 0;\n        r8 = r15;\n        rax = *(rdx:rax) / r11;\n        rdx = *(rdx:rax) % r11;\n        rax = fcn_00401e60 (rbp, rax, rbx, r13);\n        if (*((rsp + 0x10)) == r11) {\n            goto label_8;\n        }\n        r11 += 8;\n    } while (rax != r15);\nlabel_1:\n    eax = *(r12);\n    r14 += rax;\n    rax = r15;\n    rdx:rax = rax * r14;\n    if (rdx != 0) {\n        goto label_9;\n    }\n    edx = 0;\n    rax = rdx:rax / rbx;\n    rdx = rdx:rax % rbx;\nlabel_2:\n    al = fcn_00401ed0 (rbx, r13, rbp, *((rsp + 0x20)), *((rsp + 0x1c)), r15);\n    if (al == 0) {\n        goto label_7;\n    }\n    r12++;\n    eax = 0x40f23c;\n    if (rax != r12) {\n        goto label_0;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"Lucas prime test failure.  This should not happen\");\n    eax = 0;\n    error (0, 0, rax);\n    rax = abort ();\nlabel_8:\n    if (rax == r15) {\n        goto label_1;\n    }\nlabel_3:\n    eax = *((rsp + 0x2f));\n    return rax;\nlabel_9:\n    if (rbx <= rdx) {\n        goto label_10;\n    }\n    rsi = rbx;\n    eax = 0x40;\n    ecx = 0;\n    do {\n        rdi = rsi;\n        rcx >>= 1;\n        rdi <<= 0x3f;\n        rsi >>= 1;\n        rcx |= rdi;\n        if (rsi >= rdx) {\n            if (rsi != rdx) {\n                goto label_11;\n            }\n            if (rcx > rbp) {\n                goto label_11;\n            }\n        }\n        rbp -= rcx;\n        rdx -= rsi;\nlabel_11:\n        eax--;\n    } while (eax != 0);\n    goto label_2;\nlabel_7:\n    *((rsp + 0x2f)) = 0;\n    goto label_3;\nlabel_5:\n    r14 = *((rsp + 8));\n    *((rsp + 0x1c)) = 0;\n    goto label_4;\nlabel_10:\n    return assert_fail (\"(s1) < (n)\", \"src/factor.c\", 0x4f4, \"prime_p\");\n}\n"
        },
        {
            "funcName": "fcn_00404050",
            "funcStartAddr": "0x404050",
            "funcEndAddr": "0x404603",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x404050 */\n#include <stdint.h>\n \nint64_t fcn_00404050 (uint32_t arg1, uint32_t arg2, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    uint32_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_47h;\n    int64_t var_48h;\n    int64_t var_50h;\n    int64_t var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    uint32_t var_70h;\n    uint32_t var_78h;\n    int64_t var_80h;\n    int64_t var_88h;\n    int64_t var_90h;\n    int64_t var_98h;\n    int64_t var_a0h;\n    uint32_t var_a8h;\n    int64_t var_b0h;\n    uint32_t var_b8h;\n    uint32_t var_1aah;\n    rdi = arg1;\n    rsi = arg2;\n    rcx = arg4;\nlabel_9:\n    eax = 0;\n    r15 = rsi;\n    rbx = rdi;\n    al = (rsi == 0) ? 1 : 0;\n    rdi -= rax;\n    rax = rdi;\n    *((rsp + 0x20)) = rdi;\n    rdi = rsi;\n    rdi--;\n    *((rsp + 0x18)) = rdi;\n    if (rdi != 0) {\n        goto label_10;\n    }\n    __asm (\"bsf rcx, rax\");\n    *((rsp + 0x58)) = 0;\n    rax >>= cl;\n    *((rsp + 0x50)) = rax;\n    eax = rcx + 0x40;\n    *((rsp + 0x40)) = eax;\nlabel_7:\n    rax = r15;\n    rax >>= 1;\n    eax &= 0x7f;\n    eax = *((rax + 0x40c220));\n    rdx = rax + rax;\n    rax *= rax;\n    rax *= r15;\n    rdx -= rax;\n    rax = rdx + rdx;\n    rdx *= rdx;\n    rdx *= r15;\n    rax -= rdx;\n    r13 = rax + rax;\n    rax *= rax;\n    rax *= r15;\n    r13 -= rax;\n    rcx -= rcx;\n    edx = 0;\n    ecx &= 0x40;\n    rcx += 0x3f;\n    dl = (rbx < 2) ? 1 : 0;\n    rax -= rax;\n    rax++;\n    do {\n        rsi = rdx;\n        rax += rax;\n        rdx += rdx;\n        rsi >>= 0x3f;\n        rax |= rsi;\n        if (rbx >= rax) {\n            if (rbx != rax) {\n                goto label_11;\n            }\n            if (r15 > rdx) {\n                goto label_11;\n            }\n        }\n        rdx -= r15;\n        rax -= rbx;\nlabel_11:\n        rcx--;\n    } while (rcx != -1);\n    *((rsp + 0x78)) = rax;\n    rdi = rdx;\n    *((rsp + 0x70)) = rdx;\n    rdx += rdi;\n    rax += rax;\n    *((rsp + 0x68)) = rax;\n    *((rsp + 0x60)) = rdx;\n    if (rbx < rax) {\n        goto label_12;\n    }\n    if (rbx == rax) {\n        goto label_13;\n    }\nlabel_6:\n    *((rsp + 0x80)) = r15;\n    *((rsp + 0x88)) = rbx;\n    al = fcn_00402240 (rsp + 0x80, r13, rsp + 0x60, rsp + 0x50, *((rsp + 0x40)), rsp + 0x70);\n    *((rsp + 0x47)) = al;\n    if (al == 0) {\n        goto label_8;\n    }\n    rbp = *((rsp + 0x18));\n    r14 = *((rsp + 0x20));\n    r12d = 0x40efa0;\n    fcn_00403210 (r14, rbp, rsp + 0xb0, rcx);\n    rax = rbp;\n    rdx = r14;\n    rdi = r14;\n    rax >>= 1;\n    rdx <<= 0x3f;\n    rdx |= rax;\n    rdi >>= 1;\n    rax = rsp + 0xa8;\n    *((rsp + 8)) = rdx;\n    *((rsp + 0x10)) = rdi;\n    *((rsp + 0x48)) = rax;\nlabel_2:\n    if (*((rsp + 0xb8)) != 0) {\n        goto label_14;\n    }\nlabel_3:\n    if (*((rsp + 0x1aa)) == 0) {\n        goto label_8;\n    }\nlabel_4:\n    r14d = 1;\n    rax = rsp + 0xa8;\n    *((rsp + 0x28)) = rbp;\n    *((rsp + 0x30)) = r12;\n    r12 = r14;\n    r14 = *((rsp + 0x20));\n    *((rsp + 0x38)) = rbx;\n    rbx = *((rsp + 0x18));\n    while (rdx != 2) {\n        rax = rdx;\n        rsi = rbx;\n        rax >>= 1;\n        eax &= 0x7f;\n        eax = *((rax + 0x40c220));\n        rcx = rax + rax;\n        rax *= rax;\n        rax *= rdx;\n        rcx -= rax;\n        rax = rcx + rcx;\n        rcx *= rcx;\n        rcx *= rdx;\n        rax -= rcx;\n        rcx = rax + rax;\n        rax *= rax;\n        rax *= rdx;\n        rcx -= rax;\n        rsi *= rcx;\n        if (r14 < rdx) {\n            goto label_15;\n        }\n        rax = rsi;\n        *((rsp + 0x90)) = rsi;\n        rdx:rax = rax * rdx;\n        rax = r14;\n        rax -= rdx;\n        rcx *= rax;\n        *((rsp + 0x98)) = rcx;\nlabel_0:\n        rax = fcn_004020d0 (rbp, rsp + 0x60, rsp + 0x90, rsp + 0x80, r13, rsp + 0x70);\n        *((rsp + 0xa0)) = rax;\n        if (rax == *((rsp + 0x70))) {\n            goto label_16;\n        }\n        eax = *((rsp + 0x1aa));\n        if (eax <= r12d) {\n            goto label_8;\n        }\nlabel_1:\n        r12++;\n        rdx = *((rsp + r12*8 + 0xb8));\n    }\n    rax = *((rsp + 8));\n    *((rsp + 0x90)) = rax;\n    rax = *((rsp + 0x10));\n    *((rsp + 0x98)) = rax;\n    goto label_0;\nlabel_16:\n    eax = *((rsp + 0x1aa));\n    rcx = *((rsp + 0xa8));\n    rdx = *((rsp + 0x78));\n    if (eax <= r12d) {\n        goto label_17;\n    }\n    if (rcx != rdx) {\n        goto label_1;\n    }\n    rbp = *((rsp + 0x28));\n    r12 = *((rsp + 0x30));\n    rbx = *((rsp + 0x38));\nlabel_5:\n    eax = *(r12);\n    rbp += rax;\n    eax = 0;\n    rdx = rax;\n    if (rbx <= rbp) {\n        rdx = rbp;\n    }\n    rcx -= rcx;\n    rcx &= 0xffffffffffffffc0;\n    rcx += 0x7f;\n    if (rbx > rbp) {\n        rax = rbp;\n    }\n    do {\n        rsi = rdx;\n        rax += rax;\n        rdx += rdx;\n        rsi >>= 0x3f;\n        rax |= rsi;\n        if (rbx >= rax) {\n            if (rbx != rax) {\n                goto label_18;\n            }\n            if (r15 > rdx) {\n                goto label_18;\n            }\n        }\n        rdx -= r15;\n        rax -= rbx;\nlabel_18:\n        rcx--;\n    } while (rcx != -1);\n    *((rsp + 0x60)) = rdx;\n    *((rsp + 0x68)) = rax;\n    al = fcn_00402240 (rsp + 0x80, r13, rsp + 0x60, rsp + 0x50, *((rsp + 0x40)), rsp + 0x70);\n    if (al == 0) {\n        goto label_19;\n    }\n    r12++;\n    eax = 0x40f23c;\n    if (rax != r12) {\n        goto label_2;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"Lucas prime test failure.  This should not happen\");\n    eax = 0;\n    error (0, 0, rax);\n    abort ();\nlabel_15:\n    *((rsp + 0x90)) = rsi;\n    *((rsp + 0x98)) = 0;\n    goto label_0;\nlabel_19:\n    *((rsp + 0x47)) = 0;\nlabel_8:\n    eax = *((rsp + 0x47));\n    return rax;\nlabel_14:\n    rcx = *((rsp + 0xb0));\n    *((rsp + 0x98)) = 0;\n    rax = rcx;\n    rax >>= 1;\n    eax &= 0x7f;\n    eax = *((rax + 0x40c220));\n    rdx = rax + rax;\n    rax *= rax;\n    rax *= rcx;\n    rdx -= rax;\n    rax = rdx + rdx;\n    rdx *= rdx;\n    rdx *= rcx;\n    rax -= rdx;\n    rdx = rax + rax;\n    rax *= rax;\n    rax *= rcx;\n    rdx -= rax;\n    rax = *((rsp + 0x18));\n    rax *= rdx;\n    *((rsp + 0x90)) = rax;\n    rax = fcn_004020d0 (*((rsp + 0x48)), rsp + 0x60, rsp + 0x90, rsp + 0x80, r13, rsp + 0x70);\n    *((rsp + 0xa0)) = rax;\n    if (rax != *((rsp + 0x70))) {\n        goto label_3;\n    }\n    rcx = *((rsp + 0xa8));\n    rdx = *((rsp + 0x78));\n    al = (rcx != rdx) ? 1 : 0;\n    if (*((rsp + 0x1aa)) == 0) {\n        goto label_20;\n    }\n    if (rcx != rdx) {\n        goto label_4;\n    }\n    goto label_5;\nlabel_13:\n    if (r15 > rdx) {\n        goto label_6;\n    }\nlabel_12:\n    rdx -= r15;\n    rax -= rbx;\n    *((rsp + 0x68)) = rax;\n    *((rsp + 0x60)) = rdx;\n    goto label_6;\nlabel_10:\n    rsi = *((rsp + 0x20));\n    ecx = 0x40;\n    rdx = *((rsp + 0x18));\n    __asm (\"bsf rax, rdx\");\n    ecx -= eax;\n    edi = eax;\n    *((rsp + 0x40)) = eax;\n    rax = rsi;\n    rax <<= cl;\n    ecx = edi;\n    rdx >>= cl;\n    rax |= rdx;\n    *((rsp + 0x50)) = rax;\n    rax = rsi;\n    rax >>= cl;\n    *((rsp + 0x58)) = rax;\n    goto label_7;\nlabel_17:\n    rbp = *((rsp + 0x28));\n    r12 = *((rsp + 0x30));\n    rbx = *((rsp + 0x38));\n    al = (rcx != rdx) ? 1 : 0;\nlabel_20:\n    if (al == 0) {\n        goto label_5;\n    }\n    goto label_8;\n    if (rdi != 0) {\n        goto label_9;\n    }\n    if (rsi > 1) {\n        if (rsi > 0x17ded78) {\n            rdi = rsi;\n            void (*0x403840)() ();\n        }\n        eax = 1;\n        return rax;\n    }\n    eax = 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004040a0",
            "funcStartAddr": "0x4040a0",
            "funcEndAddr": "0x40416e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x4040a0 */\n#include <stdint.h>\n \nuint64_t fcn_004040a0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    uint32_t var_8h;\n    uint32_t var_fah;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rbx = rdi;\n    fcn_00402640 (rdi, rsi, rdx);\n    r13 = rsp;\n    edi = 0x3a;\n    fcn_004026f0 ();\n    rax = fcn_00403210 (rbx, rbp, r13, rcx);\n    if (*((rsp + 0xfa)) == 0) {\n        goto label_1;\n    }\n    r12 = r13 + 0x10;\nlabel_0:\n    ebx = 0;\n    if (*((rbp + 0xe0)) == 0) {\n        goto label_2;\n    }\n    do {\n        edi = 0x20;\n        ebx++;\n        fcn_004026f0 ();\n        fcn_00402340 (*(r12), 0, rdx);\n        eax = *((rbp + 0xe0));\n    } while (eax > ebx);\nlabel_2:\n    rbp++;\n    edx = *((rsp + 0xfa));\n    r12 += 8;\n    eax = ebp;\n    eax -= r13d;\n    if (edx > eax) {\n        goto label_0;\n    }\nlabel_1:\n    while (1) {\n        edi = 0xa;\n        fcn_004026f0 ();\n        return rax;\n        edi = 0x20;\n        fcn_004026f0 ();\n        fcn_00402640 (*((rsp + 8)), *(rsp), rdx);\n    }\n}\n"
        },
        {
            "funcName": "fcn_00404170",
            "funcStartAddr": "0x404170",
            "funcEndAddr": "0x4042de",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x404170 */\n#include <stdint.h>\n \nint64_t fcn_00404170 (int64_t arg1) {\n    rdi = arg1;\n    rax = rdi;\n    edx = *(rdi);\n    if (dl != 0x20) {\n        goto label_3;\n    }\n    do {\n        rax++;\n        edx = *(rax);\n    } while (dl == 0x20);\nlabel_3:\n    r8 = rax + 1;\n    if (dl == 0x2b) {\n        rdx = rax + 2;\n        rax = r8;\n        r8 = rdx;\n    }\n    rcx = rax;\n    esi = 4;\n    do {\n        rcx++;\n        edx = *((rcx - 1));\n        if (edx == 0) {\n            goto label_4;\n        }\n        edx -= 0x30;\n        esi = 0;\n    } while (edx <= 9);\n    do {\n        rax = fcn_00406f50 (rdi);\n        edx = 5;\n        rbx = rax;\nlabel_0:\n        rax = dcgettext (0, \"%s is not a valid positive integer\");\n        rcx = rbx;\n        eax = 0;\n        eax = error (0, 0, rax);\n        eax = 0;\nlabel_1:\n        return rax;\nlabel_4:\n    } while (esi != 0);\n    eax = *(rax);\n    if (eax == 0) {\n        goto label_5;\n    }\n    edx = rax - 0x30;\n    ebp = 0;\n    ebx = 0;\n    r9 = 0x1999999999999999;\n    do {\n        rsi = rbp + rbp*4;\n        rax = rbp + rbp;\n        r10 = rbp;\n        rcx = rbp;\n        r10 >>= 0x3d;\n        rsi += rsi;\n        rcx >>= 0x3f;\n        eax = edx;\n        ecx += r10d;\n        edx = 0;\n        rax += rsi;\n        dl = (rax < 0) ? 1 : 0;\n        rax = rbx * 5;\n        rax += rax;\n        ebx = rdx + rcx;\n        rbx += rax;\n        if (rbx < 0) {\n            goto label_6;\n        }\n        r8++;\n        eax = *((r8 - 1));\n        if (eax == 0) {\n            goto label_7;\n        }\n        edx = rax - 0x30;\n    } while (rbx <= r9);\n    do {\nlabel_6:\n        rax = fcn_00406f50 (rdi);\n        edx = 5;\n        esi = \"%s is too large\";\n        rbx = rax;\n        goto label_0;\nlabel_7:\n    } while (rbx < 0);\nlabel_2:\n    while (1) {\n        fcn_004040a0 (rbx, rbp, rdx);\n        eax = 1;\n        goto label_1;\n        fwrite (\"[using single-precision arithmetic] \", 1, 0x24, *(obj.stderr));\n    }\nlabel_5:\n    ebp = 0;\n    ebx = 0;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_004042e0",
            "funcStartAddr": "0x4042e0",
            "funcEndAddr": "0x4045cd",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x4042e0 */\n#include <stdint.h>\n \nuint64_t fcn_004042e0 (int64_t arg1) {\n    char * var_8h;\n    int64_t var_10h;\n    char * var_18h;\n    char * var_20h;\n    char * var_28h;\n    char * var_30h;\n    char * var_38h;\n    char * var_40h;\n    char * var_48h;\n    char * var_50h;\n    char * var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    rdi = arg1;\n    edx = 5;\n    ebx = edi;\n    rbp = imp.__libc_start_main;\n    if (edi != 0) {\n        rax = dcgettext (0, \"Try '%s --help' for more information.\\n\");\n        rdi = stderr;\n        rcx = rbp;\n        esi = 1;\n        rdx = rax;\n        eax = 0;\n        fprintf_chk ();\nlabel_0:\n        exit (ebx);\n    }\n    rax = dcgettext (0, \"Usage: %s [NUMBER]...\\n  or:  %s OPTION\\n\");\n    rcx = rbp;\n    rdx = rbp;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"Print the prime factors of each specified integer NUMBER.  If none\\nare specified on the command line, read them from standard input.\\n\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --help     display this help and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --version  output version information and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    *(rsp) = 0x40bd36;\n    rax = rsp;\n    *((rsp + 8)) = \"test invocation\";\n    *((rsp + 0x10)) = 0x40bdb0;\n    *((rsp + 0x18)) = \"Multi-call invocation\";\n    *((rsp + 0x20)) = \"sha224sum\";\n    *((rsp + 0x28)) = \"sha2 utilities\";\n    *((rsp + 0x30)) = \"sha256sum\";\n    *((rsp + 0x38)) = \"sha2 utilities\";\n    *((rsp + 0x40)) = \"sha384sum\";\n    *((rsp + 0x48)) = \"sha2 utilities\";\n    *((rsp + 0x50)) = \"sha512sum\";\n    *((rsp + 0x58)) = \"sha2 utilities\";\n    *((rsp + 0x60)) = 0;\n    *((rsp + 0x68)) = 0;\n    do {\n        rax += 0x10;\n        rdi = *(rax);\n        if (rdi == 0) {\n            goto label_2;\n        }\n        esi = \"factor\";\n        ecx = 7;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        dl = (rdi > 0) ? 1 : 0;\n    } while (dl != 0);\nlabel_2:\n    rbp = *((rax + 8));\n    edx = 5;\n    esi = \"\\n%s online help: <%s>\\n\";\n    edi = 0;\n    if (rbp == 0) {\n        goto label_3;\n    }\n    rax = dcgettext (rdi, rsi);\n    edi = 1;\n    ecx = \"https://www.gnu.org/software/coreutils/\";\n    edx = \"GNU coreutils\";\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rax = setlocale (5, 0);\n    if (rax != 0) {\n        eax = strncmp (rax, 0x40bdba, 3);\n        if (eax != 0) {\n            goto label_4;\n        }\n    }\nlabel_1:\n    edx = 5;\n    r12d = 0x40bd52;\n    rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n    ecx = \"factor\";\n    edx = \"https://www.gnu.org/software/coreutils/\";\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    ecx = 0x4105e7;\n    r12 = rcx;\n    while (1) {\n        edx = 5;\n        rax = dcgettext (0, \"or available locally via: info '(coreutils) %s%s'\\n\");\n        rcx = r12;\n        rdx = rbp;\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        goto label_0;\nlabel_3:\n        rax = dcgettext (rdi, rsi);\n        edi = 1;\n        ecx = \"https://www.gnu.org/software/coreutils/\";\n        edx = \"GNU coreutils\";\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        rax = setlocale (5, 0);\n        if (rax != 0) {\n            eax = strncmp (rax, 0x40bdba, 3);\n            if (eax != 0) {\n                goto label_5;\n            }\n        }\n        edx = 5;\n        rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n        ecx = \"factor\";\n        edx = \"https://www.gnu.org/software/coreutils/\";\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        r12d = 0x40bd52;\n        printf_chk ();\n    }\nlabel_5:\nlabel_4:\n    edx = 5;\n    rax = dcgettext (0, \"Report %s translation bugs to <https://translationproject.org/team/>\\n\");\n    edx = \"factor\";\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00404690",
            "funcStartAddr": "0x404690",
            "funcEndAddr": "0x404706",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x404690 */\n#include <stdint.h>\n \nuint64_t fcn_00404690 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r13d = edi;\n    rbx = rdx;\n    r12d = 0;\n    while (rax != -1) {\n        if (rax == 0) {\n            goto label_1;\n        }\n        r12 += rax;\n        rbp += rax;\n        rbx -= rax;\n        if (rbx == 0) {\n            goto label_2;\n        }\n        rax = fcn_004072e0 (r13d, rbp, rbx);\n    }\n    do {\nlabel_2:\n        rax = r12;\n        return rax;\nlabel_1:\n        errno_location ();\n        *(rax) = 0x1c;\n        rax = r12;\n        return rax;\nlabel_0:\n        r12d = 0;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00404710",
            "funcStartAddr": "0x404710",
            "funcEndAddr": "0x404758",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x404710 */\n#include <stdint.h>\n \nint64_t fcn_00404710 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = rsi + 0x14;\n    *((rsi + 0x14)) = 0;\n    rsi = 0xcccccccccccccccd;\n    while (rdi > 9) {\n        rdi = rdx;\n        rax = rdx;\n        r8 = rdi;\n        rcx--;\n        rdx:rax = rax * rsi;\n        rdx >>= 3;\n        rax = rdx * 5;\n        rax += rax;\n        r8 -= rax;\n        rax = r8;\n        eax += 0x30;\n        *(rcx) = al;\n    }\n    rax = rcx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00404760",
            "funcStartAddr": "0x404760",
            "funcEndAddr": "0x4047f9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x404760 */\n#include <stdint.h>\n \nuint64_t fcn_00404760 (char ** arg1) {\n    rdi = arg1;\n    if (rdi != 0) {\n        rbx = rdi;\n        rax = strrchr (rdi, 0x2f);\n        if (rax != 0) {\n            r8 = rax + 1;\n            rdx = r8;\n            rdx -= rbx;\n            if (rdx <= 6) {\n                goto label_0;\n            }\n            rsi = rax - 6;\n            edi = \"/.libs/\";\n            ecx = 7;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (rdx > 6) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            edi = 0x40f330;\n            ecx = 3;\n            rsi = r8;\n            rbx = r8;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (dl > 0) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            rbx = rax + 4;\n            *(obj.__progname) = rbx;\n        }\nlabel_0:\n        *(0x00613328) = rbx;\n        *(obj.program_invocation_name) = rbx;\n        return rax;\n    }\n    fwrite (\"A NULL argv[0] was passed through an exec system call.\\n\", 1, 0x37, *(obj.stderr));\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_00404800",
            "funcStartAddr": "0x404800",
            "funcEndAddr": "0x40481d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x404800 */\n#include <stdint.h>\n \nvoid fcn_00404800 (void) {\n    return assert_fail (\"iter->cur.wc == 0\", \"lib/mbuiter.h\", 0xb3, \"mbuiter_multi_next\");\n}\n"
        },
        {
            "funcName": "fcn_00404820",
            "funcStartAddr": "0x404820",
            "funcEndAddr": "0x407e94",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x404820 */\n#include <stdint.h>\n \nuint64_t fcn_00404820 (int64_t arg1, int64_t arg2) {\n    char * ptr;\n    uint32_t var_10h;\n    mbstate_t * ps;\n    uint32_t var_1ch;\n    char * s;\n    size_t var_28h;\n    size_t * var_30h;\n    size_t * var_34h;\n    uint32_t var_50h;\n    int64_t var_54h;\n    int64_t var_5ch;\n    char * var_60h;\n    size_t var_68h;\n    int64_t var_70h;\n    int64_t var_74h;\n    rdi = arg1;\n    rsi = arg2;\n    /* [13] -r-x section size 41560 named .text */\nlabel_0:\n    abort ();\n    rbx = rdi;\n    rax = fcn_004073a0 (rsi, 2);\n    r12 = rsp + 0x34;\n    r14 = rsp + 0x74;\n    *((rsp + 8)) = rax;\nlabel_9:\n    if (*(rbx) == 0) {\n        goto label_8;\n    }\n    do {\n        rax = fcn_0040a420 (rbx, *((rsp + 8)));\n        if (rax == 0) {\n            goto label_8;\n        }\n        rax = ctype_get_mb_cur_max ();\n        if (rax > 1) {\n            goto label_19;\n        }\n        strlen (*((rsp + 8)));\n        r13 = rbp + rax;\n        if (rbx < rbp) {\n            rax = ctype_b_loc ();\n            edx = *((rbp - 1));\n            rax = *(rax);\n            if ((*((rax + rdx*2)) & 8) != 0) {\n                goto label_20;\n            }\n        }\n        ebx = *(r13);\n        if (bl == 0) {\n            goto label_21;\n        }\n        rax = ctype_b_loc ();\n        rax = *(rax);\n        if ((*((rax + rbx*2)) & 8) == 0) {\n            goto label_21;\n        }\nlabel_20:\n        if (*(rbp) == 0) {\n            goto label_8;\n        }\n        rbx = rbp + 1;\n    } while (*(rbx) != 0);\nlabel_8:\n    r13d = 0;\nlabel_7:\n    free (*((rsp + 8)));\n    eax = r13d;\n    return rax;\nlabel_19:\n    *((rsp + 0x20)) = rbx;\n    r13 = rsp + 0x14;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x14)) = 0;\n    *((rsp + 0x1c)) = 0;\n    if (rbx < rbp) {\n        goto label_22;\n    }\n    goto label_23;\nlabel_1:\n    rbx = *((rsp + 0x20));\n    ecx = *(rbx);\n    eax = ecx;\n    al >>= 5;\n    eax &= 7;\n    eax = *((rax*4 + 0x410680));\n    eax >>= cl;\n    if ((al & 1) == 0) {\n        goto label_24;\n    }\n    *((rsp + 0x28)) = 1;\n    r15d = *(rbx);\n    *((rsp + 0x30)) = 1;\n    *((rsp + 0x34)) = r15d;\n    *((rsp + 0x1c)) = 1;\nlabel_2:\n    if (r15d == 0) {\n        goto label_0;\n    }\n    rbx = *((rsp + 0x20));\nlabel_3:\n    rbx += *((rsp + 0x28));\n    eax = *((rsp + 0x30));\n    *((rsp + 0x1c)) = 0;\n    *((rsp + 0x20)) = rbx;\n    if (rbx >= rbp) {\n        goto label_25;\n    }\nlabel_22:\n    if (*((rsp + 0x10)) == 0) {\n        goto label_1;\n    }\n    do {\n        rax = ctype_get_mb_cur_max ();\n        rbx = *((rsp + 0x20));\n        rax = fcn_00407340 (rbx, rax);\n        rax = fcn_00408fc0 (r12, rbx, rax, r13);\n        *((rsp + 0x28)) = rax;\n        if (rax == -1) {\n            goto label_26;\n        }\n        if (rax == 0xfffffffffffffffe) {\n            goto label_27;\n        }\n        if (rax != 0) {\n            goto label_28;\n        }\n        *((rsp + 0x28)) = 1;\n        rbx = *((rsp + 0x20));\n        if (*(rbx) != 0) {\n            goto label_29;\n        }\n        r15d = *((rsp + 0x34));\n        if (r15d != 0) {\n            goto label_30;\n        }\nlabel_4:\n        *((rsp + 0x30)) = 1;\n        eax = mbsinit (r13);\n        if (eax != 0) {\n            *((rsp + 0x10)) = 0;\n        }\n        *((rsp + 0x1c)) = 1;\n        goto label_2;\nlabel_24:\n        eax = mbsinit (r13);\n        if (eax == 0) {\n            goto label_31;\n        }\n        *((rsp + 0x10)) = 1;\n    } while (1);\nlabel_26:\n    r15d = *((rsp + 0x34));\n    rbx = *((rsp + 0x20));\n    *((rsp + 0x30)) = 0;\n    *((rsp + 0x28)) = 1;\n    goto label_3;\nlabel_27:\n    rbx = *((rsp + 0x20));\n    rax = strlen (*((rsp + 0x20)));\n    *((rsp + 0x30)) = 0;\n    r15d = *((rsp + 0x34));\n    *((rsp + 0x28)) = rax;\n    goto label_3;\nlabel_28:\n    r15d = *((rsp + 0x34));\n    goto label_4;\nlabel_25:\n    if (al == 0) {\n        goto label_23;\n    }\n    eax = iswalnum (r15d);\n    r13b = (eax == 0) ? 1 : 0;\nlabel_13:\n    rax = *((rsp + 8));\n    *((rsp + 0x20)) = rbp;\n    rbx = rsp + 0x54;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x14)) = 0;\n    *((rsp + 0x1c)) = 0;\n    *((rsp + 0x60)) = rax;\n    *((rsp + 0x50)) = 0;\n    *((rsp + 0x54)) = 0;\n    *((rsp + 0x5c)) = 0;\n    goto label_32;\nlabel_5:\n    rdx = *((rsp + 0x60));\n    ecx = *(rdx);\n    eax = ecx;\n    al >>= 5;\n    eax &= 7;\n    eax = *((rax*4 + 0x410680));\n    eax >>= cl;\n    if ((al & 1) == 0) {\n        goto label_33;\n    }\n    *((rsp + 0x68)) = 1;\n    eax = *(rdx);\n    *((rsp + 0x70)) = 1;\n    *((rsp + 0x74)) = eax;\n    ecx = *((rsp + 0x74));\n    *((rsp + 0x5c)) = 1;\n    if (ecx == 0) {\n        goto label_34;\n    }\nlabel_6:\n    if (*((rsp + 0x1c)) != 0) {\n        goto label_35;\n    }\n    if (*((rsp + 0x10)) != 0) {\n        goto label_36;\n    }\n    rdx = *((rsp + 0x20));\n    ecx = *(rdx);\n    eax = ecx;\n    al >>= 5;\n    eax &= 7;\n    eax = *((rax*4 + 0x410680));\n    eax >>= cl;\n    if ((al & 1) == 0) {\n        goto label_37;\n    }\n    *((rsp + 0x28)) = 1;\n    eax = *(rdx);\n    *((rsp + 0x30)) = 1;\n    *((rsp + 0x34)) = eax;\n    *((rsp + 0x1c)) = 1;\nlabel_10:\n    edi = *((rsp + 0x34));\n    if (edi == 0) {\n        goto label_0;\n    }\nlabel_11:\n    rax = *((rsp + 0x28));\n    rax = *((rsp + 0x68));\n    *((rsp + 0x1c)) = 0;\n    *((rsp + 0x5c)) = 0;\nlabel_32:\n    if (*((rsp + 0x50)) == 0) {\n        goto label_5;\n    }\nlabel_12:\n    rax = ctype_get_mb_cur_max ();\n    r15 = *((rsp + 0x60));\n    rax = fcn_00407340 (r15, rax);\n    rax = fcn_00408fc0 (r14, r15, rax, rbx);\n    *((rsp + 0x68)) = rax;\n    if (rax == -1) {\n        goto label_38;\n    }\n    if (rax == 0xfffffffffffffffe) {\n        goto label_39;\n    }\n    if (rax == 0) {\n        *((rsp + 0x68)) = 1;\n        rax = *((rsp + 0x60));\n        if (*(rax) != 0) {\n            goto label_29;\n        }\n        esi = *((rsp + 0x74));\n        if (esi != 0) {\n            goto label_30;\n        }\n    }\n    *((rsp + 0x70)) = 1;\n    eax = mbsinit (rbx);\n    if (eax != 0) {\n        *((rsp + 0x50)) = 0;\n    }\n    ecx = *((rsp + 0x74));\n    *((rsp + 0x5c)) = 1;\n    if (ecx != 0) {\n        goto label_6;\n    }\nlabel_34:\n    if (*((rsp + 0x1c)) != 0) {\n        goto label_40;\n    }\n    if (*((rsp + 0x10)) != 0) {\n        goto label_41;\n    }\n    rdx = *((rsp + 0x20));\n    ecx = *(rdx);\n    eax = ecx;\n    al >>= 5;\n    eax &= 7;\n    eax = *((rax*4 + 0x410680));\n    eax >>= cl;\n    if ((al & 1) == 0) {\n        goto label_42;\n    }\n    *((rsp + 0x28)) = 1;\n    ebx = *(rdx);\n    *((rsp + 0x30)) = 1;\n    *((rsp + 0x34)) = ebx;\n    *((rsp + 0x1c)) = 1;\nlabel_14:\n    if (ebx != 0) {\nlabel_15:\n        if (*((rsp + 0x30)) == 0) {\n            goto label_43;\n        }\n        eax = iswalnum (ebx);\n        if (eax != 0) {\n            goto label_44;\n        }\n    }\nlabel_43:\n    if (r13b != 0) {\n        goto label_7;\n    }\nlabel_44:\n    *((rsp + 0x20)) = rbp;\n    rbx = rsp + 0x14;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x14)) = 0;\n    *((rsp + 0x1c)) = 0;\n    ecx = *(rbp);\n    eax = ecx;\n    al >>= 5;\n    eax &= 7;\n    eax = *((rax*4 + 0x410680));\n    eax >>= cl;\n    if ((al & 1) == 0) {\n        goto label_45;\n    }\n    *((rsp + 0x28)) = 1;\n    eax = *(rbp);\n    *((rsp + 0x30)) = 1;\n    *((rsp + 0x34)) = eax;\n    *((rsp + 0x1c)) = 1;\nlabel_16:\n    eax = *((rsp + 0x34));\n    if (eax == 0) {\n        goto label_8;\n    }\nlabel_17:\n    rbx = *((rsp + 0x28));\n    rbx += rbp;\n    goto label_9;\nlabel_37:\n    eax = mbsinit (rsp + 0x14);\n    if (eax == 0) {\n        goto label_31;\n    }\n    *((rsp + 0x10)) = 1;\nlabel_36:\n    rax = ctype_get_mb_cur_max ();\n    r15 = *((rsp + 0x20));\n    rax = fcn_00407340 (r15, rax);\n    rax = fcn_00408fc0 (r12, r15, rax, rsp + 0x14);\n    *((rsp + 0x28)) = rax;\n    if (rax == -1) {\n        goto label_46;\n    }\n    if (rax == 0xfffffffffffffffe) {\n        goto label_47;\n    }\n    if (rax == 0) {\n        *((rsp + 0x28)) = 1;\n        rax = *((rsp + 0x20));\n        if (*(rax) != 0) {\n            goto label_29;\n        }\n        r8d = *((rsp + 0x34));\n        if (r8d != 0) {\n            goto label_30;\n        }\n    }\n    *((rsp + 0x30)) = 1;\n    eax = mbsinit (rsp + 0x14);\n    if (eax != 0) {\n        *((rsp + 0x10)) = 0;\n    }\n    *((rsp + 0x1c)) = 1;\n    goto label_10;\nlabel_35:\n    if (*((rsp + 0x30)) == 0) {\n        goto label_11;\n    }\n    goto label_10;\nlabel_33:\n    eax = mbsinit (rbx);\n    if (eax == 0) {\n        goto label_31;\n    }\n    *((rsp + 0x50)) = 1;\n    goto label_12;\nlabel_38:\n    *((rsp + 0x68)) = 1;\n    *((rsp + 0x70)) = 0;\n    *((rsp + 0x5c)) = 1;\n    goto label_6;\nlabel_46:\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x30)) = 0;\n    goto label_11;\nlabel_39:\n    rax = strlen (*((rsp + 0x60)));\n    *((rsp + 0x70)) = 0;\n    *((rsp + 0x68)) = rax;\n    *((rsp + 0x5c)) = 1;\n    goto label_6;\nlabel_47:\n    rax = strlen (*((rsp + 0x20)));\n    *((rsp + 0x30)) = 0;\n    *((rsp + 0x28)) = rax;\n    goto label_11;\nlabel_23:\n    r13d = 1;\n    goto label_13;\nlabel_42:\n    eax = mbsinit (rsp + 0x14);\n    if (eax == 0) {\n        goto label_31;\n    }\n    *((rsp + 0x10)) = 1;\nlabel_41:\n    rax = ctype_get_mb_cur_max ();\n    rbx = *((rsp + 0x20));\n    rax = fcn_00407340 (rbx, rax);\n    rax = fcn_00408fc0 (r12, rbx, rax, rsp + 0x14);\n    *((rsp + 0x28)) = rax;\n    if (rax == -1) {\n        goto label_48;\n    }\n    if (rax == 0xfffffffffffffffe) {\n        goto label_49;\n    }\n    if (rax == 0) {\n        goto label_50;\n    }\n    ebx = *((rsp + 0x34));\nlabel_18:\n    *((rsp + 0x30)) = 1;\n    eax = mbsinit (rsp + 0x14);\n    if (eax != 0) {\n        *((rsp + 0x10)) = 0;\n    }\n    *((rsp + 0x1c)) = 1;\n    goto label_14;\nlabel_40:\n    ebx = *((rsp + 0x34));\n    if (*((rsp + 0x30)) == 0) {\n        goto label_15;\n    }\n    goto label_14;\nlabel_45:\n    eax = mbsinit (rbx);\n    if (eax == 0) {\n        goto label_31;\n    }\n    *((rsp + 0x10)) = 1;\n    rax = ctype_get_mb_cur_max ();\n    r13 = *((rsp + 0x20));\n    rax = fcn_00407340 (r13, rax);\n    rax = fcn_00408fc0 (r12, r13, rax, rbx);\n    *((rsp + 0x28)) = rax;\n    if (rax != -1) {\n        if (rax == 0xfffffffffffffffe) {\n            goto label_51;\n        }\n        if (rax == 0) {\n            *((rsp + 0x28)) = 1;\n            rax = *((rsp + 0x20));\n            if (*(rax) != 0) {\n                goto label_29;\n            }\n            edx = *((rsp + 0x34));\n            if (edx != 0) {\n                goto label_52;\n            }\n        }\n        *((rsp + 0x30)) = 1;\n        eax = mbsinit (rsp + 0x14);\n        if (eax != 0) {\n            *((rsp + 0x10)) = 0;\n        }\n        *((rsp + 0x1c)) = 1;\n        goto label_16;\nlabel_48:\n        *((rsp + 0x28)) = 1;\n        ebx = *((rsp + 0x34));\n        *((rsp + 0x30)) = 0;\n        *((rsp + 0x1c)) = 1;\n        goto label_15;\n    }\n    *((rsp + 0x28)) = 1;\n    goto label_17;\nlabel_50:\n    *((rsp + 0x28)) = 1;\n    rax = *((rsp + 0x20));\n    if (*(rax) != 0) {\n        goto label_29;\n    }\n    ebx = *((rsp + 0x34));\n    if (ebx == 0) {\n        goto label_18;\n    }\nlabel_52:\n    fcn_00404800 ();\nlabel_51:\n    rax = strlen (*((rsp + 0x20)));\n    *((rsp + 0x28)) = rax;\n    goto label_17;\nlabel_49:\n    rax = strlen (*((rsp + 0x20)));\n    *((rsp + 0x30)) = 0;\n    ebx = *((rsp + 0x34));\n    *((rsp + 0x28)) = rax;\n    *((rsp + 0x1c)) = 1;\n    goto label_15;\nlabel_21:\n    r13d = 1;\n    goto label_7;\nlabel_31:\n    assert_fail (\"mbsinit (&iter->state)\", \"lib/mbuiter.h\", 0x96, \"mbuiter_multi_next\");\nlabel_29:\n    assert_fail (\"*iter->cur.ptr == '\\\\0', \"lib/mbuiter.h\", 0xb2, \"mbuiter_multi_next\");\nlabel_30:\n    return assert_fail (\"iter->cur.wc == 0\", \"lib/mbuiter.h\", 0xb3, \"mbuiter_multi_next\");\n}\n"
        },
        {
            "funcName": "fcn_00405150",
            "funcStartAddr": "0x405150",
            "funcEndAddr": "0x4053d0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x405150 */\n#include <stdint.h>\n \nuint64_t fcn_00405150 (int64_t arg1, int64_t arg2) {\n    void * ptr;\n    rdi = arg1;\n    rsi = arg2;\n    edx = 5;\n    rbx = rsi;\n    rax = dcgettext (0, rdi);\n    r13 = rax;\n    rax = fcn_00409270 ();\n    rdi = rax;\n    r14 = rax;\n    eax = fcn_00409150 (rdi, \"UTF-8\");\n    if (eax != 0) {\n        goto label_7;\n    }\n    if (rbx == 0) {\n        goto label_8;\n    }\n    r15 = rbx;\n    r12 = rbx;\n    r14d = 0;\n    do {\nlabel_5:\n        eax = strcmp (r13, rbp);\n        if (eax != 0) {\n            ebp = 0;\n            al = fcn_00404820 (r13, rbp);\n            if (al == 0) {\nlabel_3:\n                if (rbx == 0) {\n                    goto label_9;\n                }\n                al = fcn_00404820 (r13, rbx);\n                if (al == 0) {\n                    goto label_9;\n                }\nlabel_0:\n                if (rbp == 0) {\n                    goto label_10;\n                }\nlabel_6:\n                free (rbp);\n            }\nlabel_10:\n            r12 = r13;\n            if (r14 == 0) {\n                goto label_2;\n            }\nlabel_1:\n            free (r14);\n        }\nlabel_2:\n        rax = r12;\n        return rax;\nlabel_8:\n        r15d = 0;\n        r12 = rbp;\n        r14d = 0;\n    } while (1);\nlabel_9:\n    if (r15 == 0) {\n        goto label_11;\n    }\n    al = fcn_00404820 (r13, r15);\n    if (al != 0) {\n        goto label_0;\n    }\nlabel_11:\n    rax = strlen (r13);\n    rbx = rax;\n    strlen (r12);\n    rax = fcn_00407ee0 (rbx + rax + 4);\n    r9 = r12;\n    r8 = r13;\n    ecx = \"%s (%s)\";\n    rbx = rax;\n    rdi = rax;\n    esi = 1;\n    eax = 0;\n    rdx = 0xffffffffffffffff;\n    sprintf_chk ();\n    if (rbp != 0) {\n        free (rbp);\n    }\n    r12 = rbx;\n    if (r14 != 0) {\n        goto label_1;\n    }\n    goto label_2;\nlabel_7:\n    rdx = r14;\n    esi = \"UTF-8\";\n    rdi = rbx;\n    rax = fcn_004081c0 ();\n    r12 = rax;\n    rax = strlen (r14);\n    r15 = rax;\n    rax = fcn_00407ee0 (rax + 0xb);\n    rax = memcpy (rax, r14, r15);\n    rdi = rbx;\n    esi = \"UTF-8\";\n    rcx = rax;\n    r15 += rax;\n    rax = 0x4c534e4152542f2f;\n    *(r15) = rax;\n    eax = 0x5449;\n    rdx = rcx;\n    *((r15 + 8)) = ax;\n    *((r15 + 0xa)) = 0;\n    *((rsp + 8)) = rcx;\n    rax = fcn_004081c0 ();\n    rcx = *((rsp + 8));\n    r14 = rax;\n    free (rcx);\n    if (r14 == 0) {\n        goto label_12;\n    }\n    rax = strchr (r14, 0x3f);\n    if (rax == 0) {\n        goto label_13;\n    }\n    free (r14);\n    if (r12 == 0) {\n        goto label_14;\n    }\nlabel_4:\n    eax = strcmp (r13, rbp);\n    if (eax == 0) {\n        goto label_2;\n    }\n    r15d = 0;\n    r14d = 0;\n    do {\n        al = fcn_00404820 (r13, rbp);\n        if (al != 0) {\n            goto label_15;\n        }\n        rbx = r12;\n        goto label_3;\nlabel_13:\n        if (r12 == 0) {\n            goto label_16;\n        }\n        r15 = r14;\n        eax = strcmp (r13, rbp);\n    } while (eax != 0);\n    if (r12 == r14) {\n        goto label_2;\n    }\n    free (r14);\n    goto label_2;\nlabel_12:\n    if (r12 != 0) {\n        goto label_4;\n    }\nlabel_14:\n    r12 = rbp;\n    r15d = 0;\n    ebx = 0;\n    r14d = 0;\n    goto label_5;\nlabel_16:\n    r15 = r14;\n    ebx = 0;\n    r12 = r14;\n    goto label_5;\nlabel_15:\n    goto label_6;\n}\n"
        },
        {
            "funcName": "fcn_004053d0",
            "funcStartAddr": "0x4053d0",
            "funcEndAddr": "0x4054c2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x4053d0 */\n#include <stdint.h>\n \nuint64_t fcn_004053d0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edx = 5;\n    r12d = esi;\n    rsi = rdi;\n    rax = dcgettext (0, rsi);\n    rbx = rax;\n    while (1) {\nlabel_0:\n        rax = rbx;\n        return rax;\n        rax = fcn_00409270 ();\n        edx = *(rax);\n        edx &= 0xffffffdf;\n        if (dl != 0x55) {\n            goto label_1;\n        }\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x54) {\n            goto label_2;\n        }\n        edx = *((rax + 2));\n        edx &= 0xffffffdf;\n        if (dl != 0x46) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x2d) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0) {\n            goto label_2;\n        }\n        eax = 0x40f3a5;\n        ebx = 0x40f3b0;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n    }\nlabel_1:\n    if (dl == 0x47) {\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x42) {\n            goto label_2;\n        }\n        if (*((rax + 2)) != 0x31) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0x33) {\n            goto label_2;\n        }\n        if (*((rax + 6)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 7)) != 0) {\n            goto label_2;\n        }\n        eax = 0x40f3a9;\n        ebx = 0x40f3ac;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n        goto label_0;\n    }\nlabel_2:\n    eax = 0x40f380;\n    ebx = 0x40f3a3;\n    if (r12d != 9) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004054d0",
            "funcStartAddr": "0x4054d0",
            "funcEndAddr": "0x40a17c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x4054d0 */\n#include <stdint.h>\n \nuint64_t fcn_004054d0 (int64_t arg_e8h_3, uint32_t arg_e8h_2, int64_t arg_e8h, char * arg_e0h, int64_t arg1, char * arg2, char * arg3, size_t * arg4, int64_t arg5, int64_t arg6) {\n    size_t * var_8h;\n    size_t * var_10h;\n    uint32_t var_1fh;\n    char * s;\n    size_t n;\n    size_t * var_30h;\n    size_t * var_38h;\n    size_t var_40h;\n    size_t var_48h;\n    void * s2;\n    char * var_58h;\n    uint32_t var_60h;\n    int64_t var_68h;\n    uint32_t var_6ch;\n    char * var_6dh;\n    int64_t var_6eh;\n    int64_t var_6fh;\n    int64_t var_70h;\n    int64_t var_78h;\n    wint_t wc;\n    mbstate_t * ps;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    do {\n        abort ();\nlabel_5:\n        r15 = rdi;\n        r14 = rsi;\n        r13d = r8d;\n        *((rsp + 0x20)) = rdx;\n        *((rsp + 8)) = rcx;\n        *((rsp + 0x68)) = r9d;\n        rax = ctype_get_mb_cur_max ();\n        ebp &= 2;\n        *((rsp + 0x60)) = rax;\n        rsp + 0x6c = (ebp != 0) ? 1 : 0;\n    } while (r13d > 0xa);\n    eax = r13d;\n    r11 = *((rsp + 8));\n    /* switch table (11 cases) at 0x40f420 */\nlabel_30:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    r13d = 2;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x40f380;\nlabel_21:\n    r9 = r11;\n    r12d = 0;\n    r11d = r13d;\n    do {\nlabel_28:\n        r13b = (r9 != r12) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            r13b = (*((rax + r12)) != 0) ? 1 : 0;\n        }\n        if (r13b == 0) {\n            goto label_47;\n        }\n        rdi = *((rsp + 0x20));\n        al = (r11d != 2) ? 1 : 0;\n        al &= *((rsp + 8));\n        r8 = rdi + r12;\n        *((rsp + 0x10)) = al;\n        if (al == 0) {\n            goto label_48;\n        }\n        rax = *((rsp + 0x28));\n        if (rax == 0) {\n            goto label_49;\n        }\n        rbp = r12 + rax;\n        if (r9 == -1) {\n            if (rax <= 1) {\n                goto label_50;\n            }\n            *((rsp + 0x40)) = r11d;\n            *((rsp + 0x38)) = r10b;\n            *((rsp + 0x30)) = r8;\n            rax = strlen (rdi);\n            r11d = *((rsp + 0x40));\n            r10d = *((rsp + 0x38));\n            r8 = *((rsp + 0x30));\n            r9 = rax;\n        }\nlabel_50:\n        if (rbp > r9) {\n            goto label_49;\n        }\n        rdi = r8;\n        *((rsp + 0x48)) = r11d;\n        *((rsp + 0x40)) = r9;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        eax = memcmp (rdi, *((rsp + 0x50)), *((rsp + 0x28)));\n        r8 = *((rsp + 0x30));\n        r10d = *((rsp + 0x38));\n        r9 = *((rsp + 0x40));\n        r11d = *((rsp + 0x48));\n        if (eax != 0) {\n            goto label_49;\n        }\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_51;\n        }\n        ebp = *(r8);\n        if (bpl > 0x7e) {\n            goto label_52;\n        }\n        eax = (int32_t) bpl;\n        /* switch table (127 cases) at 0x40f478 */\n        *((rsp + 0x10)) = 0;\n        al = (r9 != 1) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            al = (*((rax + 1)) != 0) ? 1 : 0;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        if (al != 0) {\n            goto label_7;\n        }\nlabel_17:\n        if (r12 != 0) {\n            goto label_7;\n        }\nlabel_18:\n        if (*((rsp + 0x6c)) != 0) {\n            if (dl != 0) {\n                goto label_53;\n            }\n        }\nlabel_2:\n        eax = *((rsp + 8));\n        eax ^= 1;\n        eax |= edx;\n        eax ^= 1;\n        al |= *((rsp + 0x6c));\n        if (al == 0) {\n            goto label_11;\n        }\nlabel_24:\n        eax = 0;\nlabel_10:\n        if (*((rsp + 0xd0)) == 0) {\n            goto label_11;\n        }\n        edx = ebp;\n        rcx = *((rsp + 0xd0));\n        dl >>= 5;\n        edx = (int32_t) dl;\n        edx = *((rcx + rdx*4));\n        ecx = ebp;\n        edx >>= cl;\n        edx &= 1;\n        if (edx == 0) {\n            goto label_11;\n        }\n        dl = (r11d == 2) ? 1 : 0;\nlabel_0:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_54;\n        }\nlabel_4:\n        eax = r10d;\n        eax ^= 1;\n        al &= dl;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rdx = rbx + 1;\n            if (rdx < r14) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rdx = rbx + 2;\n            if (rdx < r14) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\nlabel_9:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n        r12++;\nlabel_1:\n        if (rbx < r14) {\n            *((r15 + rbx)) = bpl;\n        }\n        edi = *((rsp + 0x1f));\n        rbx++;\n        eax = 0;\n        if (r13b == 0) {\n            edi = eax;\n        }\n        *((rsp + 0x1f)) = dil;\n    } while (1);\nlabel_3:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    if (r14 == 0) {\n        goto label_56;\n    }\n    edx = 0;\n    if (*((rsp + 0x58)) != 0) {\n        goto label_56;\n    }\nlabel_27:\n    *((rsp + 0x6d)) = r13b;\n    rbx += 3;\n    eax = 0;\n    r10d = 0;\n    *((rsp + 0x58)) = r14;\n    r14 = rdx;\nlabel_11:\n    dl = (r11d == 2) ? 1 : 0;\n    if (*((rsp + 0x10)) != 0) {\n        goto label_0;\n    }\n    eax ^= 1;\n    r12++;\n    eax &= r10d;\nlabel_16:\n    if (al == 0) {\n        goto label_1;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x27;\n    }\n    rbx += 2;\n    r10d = 0;\n    goto label_1;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_57;\n    }\n    if (r11d == 5) {\n        goto label_58;\n    }\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_3;\n    }\n    *((rsp + 0x6d)) = r13b;\n    edx = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\nlabel_15:\n    edx = *((rsp + 8));\n    dl &= *((rsp + 0x6c));\n    ecx = 0x5c;\n    al = (*((rsp + 0x28)) != 0) ? 1 : 0;\n    dl &= al;\n    if (dl != 0) {\n        goto label_59;\n    }\nlabel_8:\n    if (*((rsp + 8)) != 0) {\n        goto label_60;\n    }\nlabel_7:\n    r13d = 0;\n    goto label_2;\nlabel_6:\n    edx = 0;\n    r13d = 0;\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_4;\n    }\nlabel_54:\n    r13d = r11d;\n    eax = edx;\n    r11 = r9;\nlabel_42:\nlabel_12:\n    eax = 4;\n    if (*((rsp + 8)) != 0) {\n        r13d = eax;\n    }\nlabel_43:\n    r9d &= 0xfffffffd;\n    rax = fcn_004054d0 (r15, r14, *((rsp + 0x40)), r11, r13d, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\nlabel_44:\n    rax = rbx;\n    return rax;\n    goto label_6;\n    *((rsp + 0x10)) = 0;\n    edx = 0;\n    goto label_7;\n    *((rsp + 0x10)) = 0;\n    ecx = 0x72;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    do {\nlabel_20:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_61;\n        }\nlabel_34:\n        r13d = 0;\n        goto label_9;\n    } while (1);\nlabel_14:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_62;\n    }\n    *((rsp + 0x10)) = 0;\n    eax = r10d;\n    dl = (r11d == 2) ? 1 : 0;\n    eax ^= 1;\n    al &= dl;\n    if (al == 0) {\n        goto label_63;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rcx = rbx + 1;\n    if (r14 > rcx) {\n        *((r15 + rbx + 1)) = 0x24;\n    }\n    rcx = rbx + 2;\n    if (r14 > rcx) {\n        *((r15 + rbx + 2)) = 0x27;\n    }\n    rcx = rbx + 3;\n    if (r14 <= rcx) {\n        goto label_64;\n    }\nlabel_26:\n    *((r15 + rcx)) = 0x5c;\n    r10d = eax;\nlabel_25:\n    rbx = rcx + 1;\n    if (r11d == 2) {\n        goto label_65;\n    }\n    rax = r12 + 1;\n    if (rax < r9) {\n        rax = *((rsp + 0x20));\n        eax = *((rax + r12 + 1));\n        *((rsp + 0x30)) = al;\n        eax -= 0x30;\n        if (al <= 9) {\n            goto label_66;\n        }\n    }\nlabel_35:\n    eax = *((rsp + 8));\n    eax ^= 1;\n    al |= dl;\n    eax = r13d;\n    r13d = 0;\n    if (al == 0) {\n        goto label_10;\n    }\n    goto label_11;\nlabel_19:\n    *((rsp + 0x10)) = 0;\n    do {\nlabel_52:\n        if (*((rsp + 0x60)) != 1) {\n            goto label_67;\n        }\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r9;\n        *((rsp + 0x30)) = r10b;\n        rax = ctype_b_loc ();\n        edx = (int32_t) bpl;\n        r10d = *((rsp + 0x30));\n        r9 = *((rsp + 0x38));\n        rax = *(rax);\n        r11d = *((rsp + 0x40));\n        edi = 1;\n        eax = *((rax + rdx*2));\n        ax &= 0x4000;\n        r13b = (ax != 0) ? 1 : 0;\n        dl = (ax == 0) ? 1 : 0;\n        dl &= *((rsp + 8));\nlabel_37:\n        if (dl != 0) {\n            goto label_68;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        goto label_2;\nlabel_48:\n        ebp = *(r8);\n    } while (bpl > 0x7e);\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x40f870 */\n    ecx = 0x6e;\nlabel_13:\n    eax = *((rsp + 0x6c));\n    dl = (r11d == 2) ? 1 : 0;\n    al &= dl;\n    *((rsp + 0x10)) = al;\n    if (al == 0) {\n        goto label_8;\n    }\nlabel_53:\n    r11 = r9;\n    r13d = 2;\n    goto label_12;\n    ecx = 0x74;\n    goto label_13;\n    ecx = 0x62;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x61;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    if (*((rsp + 8)) != 0) {\n        goto label_14;\n    }\n    if ((*((rsp + 0x68)) & 1) != 0) {\n        goto label_69;\n    }\n    *((rsp + 0x10)) = 0;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    ebp = 0;\n    goto label_2;\n    if (r11d != 2) {\n        goto label_15;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_17;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_18;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_18;\n    ecx = 0x72;\n    goto label_13;\n    ecx = 0x66;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\n    ecx = 0x76;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_8;\nlabel_49:\n    ebp = *(r8);\n    if (bpl > 0x7e) {\n        goto label_19;\n    }\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x40fc68 */\n    eax = 0;\n    do {\nlabel_31:\n        r13d = *((rsp + 0x10));\n        *((rsp + 0x10)) = al;\n        eax = 0;\n        goto label_10;\n        eax = 0;\nlabel_32:\n        if (r12 != 0) {\n            goto label_70;\n        }\n        r13d = *((rsp + 0x10));\n        edx = 0;\n        *((rsp + 0x10)) = al;\n        goto label_2;\n        eax = 0;\nlabel_33:\n    } while (1);\n    goto label_6;\n    goto label_20;\nlabel_47:\n    r13d = r11d;\n    r11 = r9;\n    dl = (r13d == 2) ? 1 : 0;\n    if (rbx == 0) {\n        if ((*((rsp + 0x6c)) & dl) != 0) {\n            goto label_71;\n        }\n    }\n    eax = *((rsp + 0x6c));\n    eax ^= 1;\n    dl &= al;\n    if (dl == 0) {\n        goto label_72;\n    }\n    if (*((rsp + 0x6d)) == 0) {\n        goto label_45;\n    }\n    if (*((rsp + 0x1f)) != 0) {\n        goto label_73;\n    }\n    al = (r14 == 0) ? 1 : 0;\n    dl = (*((rsp + 0x58)) != 0) ? 1 : 0;\n    al &= dl;\n    if (al == 0) {\n        goto label_74;\n    }\n    r14 = *((rsp + 0x58));\nlabel_46:\n    *(r15) = 0x27;\n    r13d = 2;\n    ebx = 1;\n    *((rsp + 0x50)) = 0x40f380;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x6c)) = 0;\n    *((rsp + 0x6d)) = al;\n    goto label_21;\nlabel_58:\n    if ((*((rsp + 0x68)) & 4) != 0) {\n        rax = r12 + 2;\n        if (rax >= r9) {\n            goto label_39;\n        }\n        rsi = *((rsp + 0x20));\n        if (*((rsi + r12 + 1)) == 0x3f) {\n            goto label_75;\n        }\n    }\nlabel_39:\n    edx = 0;\n    r13d = 0;\n    goto label_2;\nlabel_57:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_55;\n    }\n    r13d = 0;\n    eax = 0;\n    goto label_11;\nlabel_67:\n    *((rsp + 0x88)) = 0;\n    if (r9 == -1) {\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        rax = strlen (*((rsp + 0x20)));\n        r11d = *((rsp + 0x40));\n        r10d = *((rsp + 0x38));\n        r8 = *((rsp + 0x30));\n        r9 = rax;\n    }\n    eax = 0;\n    *((rsp + 0x70)) = rbx;\n    *((rsp + 0x78)) = r8;\n    rbx = rax;\n    *((rsp + 0x6e)) = r10b;\n    *((rsp + 0x6f)) = bpl;\n    *((rsp + 0x40)) = r15;\n    *((rsp + 0x48)) = r14;\n    *((rsp + 0x30)) = r9;\n    *((rsp + 0x38)) = r11d;\n    while (*((rsp + 0x38)) != 2) {\nlabel_22:\n        eax = iswprint (*((rsp + 0x84)));\n        rdi = rsp + 0x88;\n        eax = 0;\n        if (eax == 0) {\n            r13d = eax;\n        }\n        rbx += r14;\n        eax = mbsinit (rdi);\n        if (eax != 0) {\n            goto label_76;\n        }\n        rax = *((rsp + 0x20));\n        r15 = r12 + rbx;\n        rbp = rax + r15;\n        rdx -= r15;\n        rax = fcn_00408fc0 (rsp + 0x84, rbp, *((rsp + 0x30)), rsp + 0x88);\n        r14 = rax;\n        if (rax == 0) {\n            goto label_76;\n        }\n        if (rax == -1) {\n            goto label_77;\n        }\n        if (rax == 0xfffffffffffffffe) {\n            goto label_78;\n        }\n    }\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_22;\n    }\n    if (rax == 1) {\n        goto label_22;\n    }\n    rsi = *((rsp + 0x20));\n    rax = rsi + r15 + 1;\n    rsi += r14;\n    rsi += r15;\n    goto label_79;\nlabel_23:\n    rax++;\n    if (rsi == rax) {\n        goto label_22;\n    }\nlabel_79:\n    ecx = *(rax);\n    ecx -= 0x5b;\n    if (cl > 0x21) {\n        goto label_23;\n    }\n    edx = 1;\n    rdx <<= cl;\n    rcx = 0x20000002b;\n    if ((rdx & rcx) == 0) {\n        goto label_23;\n    }\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r13d = 2;\n    r11 = *((rsp + 0x30));\n    goto label_12;\nlabel_70:\n    *((rsp + 0x10)) = al;\n    r13d = 0;\n    goto label_24;\nlabel_63:\n    rcx = rbx;\n    if (r14 <= rbx) {\n        goto label_25;\n    }\n    eax = r10d;\n    goto label_26;\nlabel_56:\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x5c;\n    }\n    rax = rbx + 2;\n    if (r14 <= rax) {\n        goto label_80;\n    }\n    rdx = r14;\n    *((r15 + rbx + 2)) = 0x27;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_69:\n    r12++;\n    goto label_28;\nlabel_68:\n    edx = *((rsp + 8));\n    r13d = 0;\nlabel_36:\n    rcx = rdi;\n    *((rsp + 0x30)) = r13b;\n    esi = 0;\n    r13d = *((rsp + 0x6c));\n    rcx += r12;\n    edi = *((rsp + 0x10));\n    r8 = *((rsp + 0x20));\n    while (dl != 0) {\n        al = (r11d == 2) ? 1 : 0;\n        if (r13b != 0) {\n            goto label_81;\n        }\n        esi = r10d;\n        esi ^= 1;\n        al &= sil;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rsi = rbx + 1;\n            if (r14 > rsi) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rsi = rbx + 2;\n            if (r14 > rsi) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 6;\n            eax += 0x30;\n            *((r15 + rbx + 1)) = al;\n        }\n        rax = rbx + 2;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 3;\n            eax &= 7;\n            eax += 0x30;\n            *((r15 + rbx + 2)) = al;\n        }\n        ebp &= 7;\n        r12++;\n        rbx += 3;\n        ebp += 0x30;\n        if (r12 >= rcx) {\n            goto label_82;\n        }\n        esi = edx;\nlabel_29:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = bpl;\n        }\n        ebp = *((r8 + r12));\n        rbx++;\n    }\n    eax = esi;\n    eax ^= 1;\n    eax &= r10d;\n    if (dil != 0) {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n    }\n    r12++;\n    if (r12 < rcx) {\n        if (al == 0) {\n            goto label_83;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x27;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            *((r15 + rbx + 1)) = 0x27;\n        }\n        rbx += 2;\n        edi = 0;\n        r10d = 0;\n        goto label_29;\n    }\n    r13d = *((rsp + 0x30));\n    goto label_16;\nlabel_81:\n    r13d = r11d;\n    *((rsp + 8)) = al;\n    r11 = r9;\n    goto label_12;\nlabel_64:\n    rbx += 4;\n    r10d = eax;\n    r13d = 0;\n    goto label_11;\n    if (ebp != 0) {\n        goto label_30;\n    }\n    *((rsp + 8)) = 1;\n    do {\n        if (r14 != 0) {\n            goto label_84;\n        }\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 1;\n        r13d = 2;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x40f380;\n        goto label_21;\n        if (ebp != 0) {\n            goto label_85;\n        }\n        if (r14 == 0) {\n            goto label_86;\n        }\n        *(r15) = 0x22;\n        r10d = 0;\n        *((rsp + 0x1f)) = 1;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\nlabel_38:\n        *((rsp + 0x6c)) = 0;\n        ebx = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x40f3a3;\n        goto label_21;\n        if (r14 != 0) {\n            *((rsp + 8)) = r11;\n            rax = fcn_004053d0 (0x40f3b4, r13d);\n            *((rsp + 0xd8)) = rax;\n            rax = fcn_004053d0 (0x40f380, r13d);\n            r11 = *((rsp + 8));\n            *((rsp + 0xe0)) = rax;\n        }\n        ebx = 0;\n        if (ebp == 0) {\n            goto label_87;\n        }\nlabel_41:\n        *((rsp + 0x10)) = r11;\n        rax = strlen (*((rsp + 0xe0)));\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        r11 = *((rsp + 0x10));\n        *((rsp + 0x28)) = rax;\n        rax = *((rsp + 0xe0));\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x50)) = rax;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 8)) = 1;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 0;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 5;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x40f3a3;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        goto label_21;\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 2;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x40f380;\n        goto label_21;\n        eax = *((rsp + 0x10));\n        goto label_31;\n        eax = *((rsp + 0x10));\n        goto label_32;\n        eax = *((rsp + 0x10));\n        goto label_33;\n        edx = 0;\n        r13d = 0;\n        goto label_4;\n        goto label_34;\nlabel_66:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x30;\n        }\n        rax = rcx + 2;\n        if (r14 > rax) {\n            *((r15 + rcx + 2)) = 0x30;\n        }\n        rbx = rcx + 3;\n        goto label_35;\n        if (ebp != 0) {\n            goto label_88;\n        }\n        *((rsp + 8)) = 0;\n    } while (1);\nlabel_82:\n    r13d = *((rsp + 0x30));\n    goto label_1;\nlabel_59:\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_16;\nlabel_83:\n    edi = 0;\n    goto label_29;\nlabel_76:\n    rdi = rbx;\n    edx = r13d;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    edx ^= 1;\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    dl &= *((rsp + 8));\nlabel_40:\n    if (rdi > 1) {\n        goto label_36;\n    }\n    goto label_37;\nlabel_86:\n    *((rsp + 0x58)) = 0;\n    r10d = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x6d)) = 0;\n    goto label_38;\nlabel_65:\n    eax = r13d;\n    r13d = 0;\n    goto label_11;\nlabel_75:\n    ebp = *((rsi + rax));\n    if (bpl > 0x3e) {\n        goto label_39;\n    }\n    rsi = 0x7000a38200000000;\n    if (((rsi >> rbp) & 1) >= 0) {\n        goto label_39;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_51;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x3f;\n    }\n    rdx = rbx + 1;\n    if (r14 > rdx) {\n        *((r15 + rbx + 1)) = 0x22;\n    }\n    rdx = rbx + 2;\n    if (r14 > rdx) {\n        *((r15 + rbx + 2)) = 0x22;\n    }\n    rdx = rbx + 3;\n    if (r14 > rdx) {\n        *((r15 + rbx + 3)) = 0x3f;\n    }\n    rbx += 4;\n    edx = 0;\n    r13d = 0;\n    r12 = rax;\n    goto label_35;\nlabel_77:\n    rdi = rbx;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r13d = 0;\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    edx = *((rsp + 8));\n    goto label_40;\nlabel_78:\n    r9 = *((rsp + 0x30));\n    rsi = r15;\n    rcx = rbp;\n    rax = rbx;\n    rdi = rbx;\n    r8 = *((rsp + 0x78));\n    r10d = *((rsp + 0x6e));\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r11d = *((rsp + 0x38));\n    if (rsi >= r9) {\n        goto label_89;\n    }\n    if (*(rcx) != 0) {\n        goto label_90;\n    }\n    goto label_89;\n    do {\n        if (*((r8 + rax)) == 0) {\n            goto label_91;\n        }\nlabel_90:\n        rax++;\n        rdx = r12 + rax;\n    } while (rdx < r9);\nlabel_91:\n    rdi = rax;\nlabel_89:\n    edx = *((rsp + 8));\n    r13d = 0;\n    goto label_40;\nlabel_87:\n    rax = *((rsp + 0xd8));\n    eax = *(rax);\n    if (al == 0) {\n        goto label_41;\n    }\n    rdx = *((rsp + 0xd8));\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = al;\n        }\n        rbx++;\n        eax = *((rdx + rbx));\n    } while (al != 0);\n    goto label_41;\nlabel_61:\n    r13d = r11d;\n    eax = 0;\n    r11 = r9;\n    goto label_42;\nlabel_85:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 1;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x40f3a3;\n    goto label_21;\nlabel_51:\n    r13d = r11d;\n    r11 = r9;\n    goto label_43;\nlabel_72:\n    edx = eax;\nlabel_45:\n    rax = *((rsp + 0x50));\n    if (rax == 0) {\n        goto label_92;\n    }\n    if (dl == 0) {\n        goto label_92;\n    }\n    edx = *(rax);\n    if (dl == 0) {\n        goto label_92;\n    }\n    rax -= rbx;\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = dl;\n        }\n        rbx++;\n        edx = *((rax + rbx));\n    } while (dl != 0);\nlabel_92:\n    if (r14 <= rbx) {\n        goto label_44;\n    }\n    *((r15 + rbx)) = 0;\n    goto label_44;\nlabel_55:\n    r13d = r11d;\n    r11 = r9;\n    goto label_12;\nlabel_62:\n    r13d = r11d;\n    r11 = r9;\n    rsp + 8 = (r13d == 2) ? 1 : 0;\n    goto label_12;\nlabel_73:\n    rax = fcn_004054d0 (r15, *((rsp + 0x78)), *((rsp + 0x40)), r11, 5, *((rsp + 0x88)));\n    goto label_5;\n    rbx = rax;\n    goto label_44;\nlabel_74:\n    edx = *((rsp + 0x6d));\n    goto label_45;\nlabel_71:\n    r13d = 2;\n    goto label_12;\nlabel_84:\n    r10d = 0;\n    eax = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x58)) = 0;\n    goto label_46;\nlabel_80:\n    rdx = r14;\n    r14 = *((rsp + 0x58));\n    goto label_27;\nlabel_88:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x40f380;\n    goto label_21;\nlabel_60:\n    r13d = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00406700",
            "funcStartAddr": "0x406700",
            "funcEndAddr": "0x40b554",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x406700 */\n#include <stdint.h>\n \nuint64_t fcn_00406700 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_30h;\n    int64_t var_18h;\n    int64_t var_24h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    do {\n        abort ();\n        r15 = (int64_t) edi;\n        r14 = rdx;\n        *((rsp + 8)) = rsi;\n        rax = errno_location ();\n        rbx = *(0x00613298);\n        r13 = rax;\n        eax = *(rax);\n        *((rsp + 0x18)) = eax;\n    } while (r15d < 0);\n    if (*(0x006132b0) > r15d) {\n        goto label_0;\n    }\n    if (r15d == 0x7fffffff) {\n        goto label_1;\n    }\n    r12d = r15 + 1;\n    rsi = (int64_t) r12d;\n    rsi <<= 4;\n    if (rbx == 0x6132a0) {\n        goto label_2;\n    }\n    rax = fcn_00407f40 (rbx, rsi);\n    *(0x00613298) = rax;\n    rbx = rax;\n    do {\n        rdi = *(0x006132b0);\n        edx -= edi;\n        rdi <<= 4;\n        rdx = (int64_t) edx;\n        rdi += rbx;\n        rdx <<= 4;\n        memset (rdi, 0, r12d);\n        *(0x006132b0) = r12d;\nlabel_0:\n        eax = *((rbp + 4));\n        r15 <<= 4;\n        rbx += r15;\n        r15 = rbp + 8;\n        eax |= 1;\n        r11 = *(rbx);\n        r12 = *((rbx + 8));\n        *((rsp + 0x24)) = eax;\n        rsi = r11;\n        *((rsp + 0x30)) = r11;\n        rax = fcn_004054d0 (r12, rsi, *((rsp + 0x28)), r14, *(rbp), eax);\n        r11 = *((rsp + 0x10));\n        if (r11 <= rax) {\n            rsi = rax + 1;\n            *(rbx) = rsi;\n            if (r12 != 0x613340) {\n                *((rsp + 0x10)) = rsi;\n                free (r12);\n                rsi = *((rsp + 0x10));\n            }\n            *((rsp + 0x10)) = rsi;\n            rax = fcn_00407ee0 (*((rsp + 0x10)));\n            *((rbx + 8)) = rax;\n            rdi = rax;\n            r12 = rax;\n            fcn_004054d0 (rdi, *((rsp + 0x30)), *((rsp + 0x28)), r14, *(rbp), *((rsp + 0x3c)));\n        }\n        eax = *((rsp + 0x18));\n        *(r13) = eax;\n        rax = r12;\n        return rax;\nlabel_2:\n        rax = fcn_00407f40 (0, rsi);\n        __asm (\"movdqa xmm0, xmmword [0x006132a0]\");\n        rbx = rax;\n        *(0x00613298) = rax;\n        __asm (\"movups xmmword [rax], xmm0\");\n    } while (1);\nlabel_1:\n    return fcn_00408130 ();\n}\n"
        },
        {
            "funcName": "fcn_00406da0",
            "funcStartAddr": "0x406da0",
            "funcEndAddr": "0x406e31",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x406da0 */\n#include <stdint.h>\n \nint64_t fcn_00406da0 (int64_t arg1, int64_t arg7, int64_t arg8, int64_t arg9) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_20h;\n    int64_t var_30h;\n    rdi = arg1;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    xmm2 = arg9;\n    do {\n        rax = imp.__libc_start_main;\n        ecx = edx;\n        __asm (\"movdqa xmm0, xmmword [0x00613440]\");\n        __asm (\"movdqa xmm1, xmmword [0x00613450]\");\n        __asm (\"movdqa xmm2, xmmword [0x00613460]\");\n        ecx &= 0x1f;\n        *((rsp + 0x30)) = rax;\n        eax = edx;\n        al >>= 5;\n        *(rsp) = xmm0;\n        eax = (int32_t) al;\n        *((rsp + 0x10)) = xmm1;\n        r8 = rsp + rax*4 + 8;\n        *((rsp + 0x20)) = xmm2;\n        edx = *(r8);\n        eax = *(r8);\n        eax >>= cl;\n        eax = ~eax;\n        eax &= 1;\n        eax <<= cl;\n        eax ^= edx;\n        *(r8) = eax;\n        fcn_00406700 (0, rdi, rsi, rsp);\n        return rax;\n        edx = 0x3a;\n        rsi = 0xffffffffffffffff;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00406f50",
            "funcStartAddr": "0x406f50",
            "funcEndAddr": "0x406f66",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x406f50 */\n#include <stdint.h>\n \nvoid fcn_00406f50 (int64_t arg1) {\n    rdi = arg1;\n    rsi = rdi;\n    ecx = 0x613260;\n    rdx = 0xffffffffffffffff;\n    edi = 0;\n    return void (*0x406700)() ();\n}\n"
        },
        {
            "funcName": "fcn_00406f70",
            "funcStartAddr": "0x406f70",
            "funcEndAddr": "0x406f80",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x406f70 */\n#include <stdint.h>\n \nvoid fcn_00406f70 (int64_t arg1) {\n    rdi = arg1;\n    *(rdi) = 0;\n    *((rdi + 8)) = 0;\n}\n"
        },
        {
            "funcName": "fcn_00406f80",
            "funcStartAddr": "0x406f80",
            "funcEndAddr": "0x4070f9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x406f80 */\n#include <stdint.h>\n \nint64_t fcn_00406f80 (int64_t arg1, uint32_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_10h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    xmm0 = 0;\n    r13 = rcx;\n    *(rsp) = xmm0;\n    *((rsp + 0x10)) = xmm0;\n    if (rdx == 0) {\n        goto label_5;\n    }\n    rdx += rsi;\n    edi = 1;\n    do {\n        ecx = *(rsi);\n        rbx = rdi;\n        rsi++;\n        rax = rcx;\n        rbx <<= cl;\n        rax >>= 3;\n        eax &= 0x18;\n    } while (rdx != rsi);\n    rax = *((rbp + 8));\n    if (rax >= *((rbp + 0x10))) {\n        goto label_6;\n    }\n    do {\n        rdx = rax + 1;\n        *((rbp + 8)) = rdx;\n        ebx = *(rax);\nlabel_0:\n        rax = (int64_t) ebx;\n        rax >>= 6;\n        rax = *((rsp + rax*8));\n        if (((rax >> rbx) & 1) >= 0) {\n            goto label_7;\n        }\nlabel_5:\n        rax = *((rbp + 8));\n    } while (rax < *((rbp + 0x10)));\nlabel_6:\n    rdi = rbp;\n    eax = uflow ();\n    ebx = eax;\n    if (eax >= 0) {\n        goto label_0;\n    }\nlabel_7:\n    r15 = *((r13 + 8));\n    r14 = *(r13);\n    r12d = 0;\n    while (r12 != r14) {\n        rdx = r15 + r12;\n        if (ebx < 0) {\n            goto label_8;\n        }\nlabel_1:\n        rax = (int64_t) ebx;\n        rax >>= 6;\n        rax = *((rsp + rax*8));\n        if (((rax >> rbx) & 1) < 0) {\n            goto label_8;\n        }\n        *(rdx) = bl;\n        r12++;\n        rax = *((rbp + 8));\n        if (rax >= *((rbp + 0x10))) {\n            goto label_9;\n        }\n        rdx = rax + 1;\n        *((rbp + 8)) = rdx;\n        ebx = *(rax);\nlabel_2:\n        if (ebx < 0) {\n            if (r12 == 0) {\n                goto label_10;\n            }\n        }\n    }\n    if (r15 == 0) {\n        goto label_11;\n    }\n    rax = 0x5555555555555553;\n    if (r12 > rax) {\n        goto label_12;\n    }\n    rax = r12;\n    rax >>= 1;\n    r14 = r12 + rax + 1;\nlabel_3:\n    rax = fcn_00407f40 (r15, r14);\n    r15 = rax;\n    rdx = r15 + r12;\n    if (ebx >= 0) {\n        goto label_1;\n    }\nlabel_8:\n    *(rdx) = 0;\n    *((r13 + 8)) = r15;\n    *(r13) = r14;\nlabel_4:\n    rax = r12;\n    return rax;\nlabel_9:\n    rdi = rbp;\n    eax = uflow ();\n    ebx = eax;\n    goto label_2;\nlabel_11:\n    if (r12 != 0) {\n        goto label_13;\n    }\n    r14d = 0x80;\n    goto label_3;\n    if (r12 >= 0) {\nlabel_13:\n        goto label_3;\n    }\nlabel_12:\n    fcn_00408130 ();\nlabel_10:\n    r12 = 0xffffffffffffffff;\n    goto label_4;\n}\n"
        },
        {
            "funcName": "fcn_004072e0",
            "funcStartAddr": "0x4072e0",
            "funcEndAddr": "0x40733e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x4072e0 */\n#include <stdint.h>\n \nuint64_t fcn_004072e0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13d = edi;\n    r12 = rsi;\n    rbx = rdx;\n    do {\nlabel_0:\n        rax = write (r13d, r12, rbx);\n        if (rax >= 0) {\n            goto label_1;\n        }\n        rax = errno_location ();\n        eax = *(rax);\n    } while (eax == 4);\n    if (eax == 0x16) {\n        if (rbx <= 0x7fffe000) {\n            goto label_1;\n        }\n        ebx = 0x7fffe000;\n        goto label_0;\n    }\nlabel_1:\n    rax = rbp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00407340",
            "funcStartAddr": "0x407340",
            "funcEndAddr": "0x407371",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x407340 */\n#include <stdint.h>\n \nuint64_t fcn_00407340 (char * arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = rsi;\n    rbx = rsi;\n    rax = fcn_00409040 (rdi, 0, rdx);\n    rsi = rax;\n    rsi -= rbp;\n    rsi++;\n    rax = rbx;\n    if (rax != 0) {\n        rax = rsi;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00407380",
            "funcStartAddr": "0x407380",
            "funcEndAddr": "0x40739d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x407380 */\n#include <stdint.h>\n \nvoid fcn_00407380 (void) {\n    return assert_fail (\"iter->cur.wc == 0\", \"lib/mbiter.h\", 0xaa, \"mbiter_multi_next\");\n}\n"
        },
        {
            "funcName": "fcn_004073a0",
            "funcStartAddr": "0x4073a0",
            "funcEndAddr": "0x407905",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x4073a0 */\n#include <stdint.h>\n \nuint64_t fcn_004073a0 (int64_t arg2, const char * src) {\n    uint32_t var_8h;\n    mbstate_t * ps;\n    int64_t var_14h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    wint_t wc;\n    rsi = arg2;\n    rdi = src;\n    rax = strdup (rdi);\n    if (rax == 0) {\n        goto label_6;\n    }\n    r12 = rax;\n    rax = ctype_get_mb_cur_max ();\n    if (rax <= 1) {\n        goto label_7;\n    }\n    if (ebp != 0) {\n        goto label_8;\n    }\nlabel_3:\n    *((rsp + 0x18)) = r12;\n    do {\n        edx = *(rbp);\n        rbp += 4;\n        eax = rdx - 0x1010101;\n        edx = ~edx;\n        eax &= edx;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    edx = eax;\n    *((rsp + 8)) = 0;\n    rbx = r12;\n    edx >>= 0x10;\n    *((rsp + 0x14)) = 0;\n    *((rsp + 0xc)) = 0;\n    if ((eax & 0x8080) == 0) {\n        eax = edx;\n    }\n    rdx = rbp + 2;\n    if ((eax & 0x8080) == 0) {\n    }\n    esi = eax;\n    sil += al;\n    rbp -= 3;\n    r14d = 0;\n    *(rsp) = rbp;\n    if (rbp > r12) {\n        void (*0x407472)() ();\n    }\n    void (*0x40751a)() ();\nlabel_7:\n    if (ebp == 0) {\n        goto label_9;\n    }\n    ebx = *(r12);\n    if (bl == 0) {\n        goto label_10;\n    }\n    rax = ctype_b_loc ();\n    r13 = r12;\n    rax = *(rax);\n    while ((*((rax + rbx*2 + 1)) & 0x20) != 0) {\n        r13++;\n        ebx = *(r13);\n        if (bl == 0) {\n            goto label_5;\n        }\n    }\nlabel_5:\n    strlen (r13);\n    memmove (r12, r13, rax + 1);\n    if (ebp == 1) {\n        void (*0x40751a)() ();\n    }\nlabel_9:\n    rdx = r12;\n    do {\n        ecx = *(rdx);\n        rdx += 4;\n        eax = rcx - 0x1010101;\n        ecx = ~ecx;\n        eax &= ecx;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    ecx = eax;\n    ecx >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = ecx;\n    }\n    rcx = rdx + 2;\n    if ((eax & 0x8080) == 0) {\n        rdx = rcx;\n    }\n    esi = eax;\n    sil += al;\n    rdx -= 3;\n    rbx = rdx - 1;\n    if (r12 > rbx) {\n        void (*0x40751a)() ();\n    }\n    rax = ctype_b_loc ();\n    rdx = *(rax);\n    goto label_11;\nlabel_0:\n    *(rbx) = 0;\n    rbx--;\n    if (r12 > rbx) {\n        void (*0x40751a)() ();\n    }\nlabel_11:\n    eax = *(rbx);\n    if ((*((rdx + rax*2 + 1)) & 0x20) != 0) {\n        goto label_0;\n    }\n    void (*0x40751a)() ();\nlabel_8:\n    *((rsp + 0x18)) = r12;\n    rbx = r12;\n    do {\n        edx = *(rbx);\n        rbx += 4;\n        eax = rdx - 0x1010101;\n        edx = ~edx;\n        eax &= edx;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    edx = eax;\n    *((rsp + 8)) = 0;\n    r14 = r12;\n    edx >>= 0x10;\n    *((rsp + 0x14)) = 0;\n    *((rsp + 0xc)) = 0;\n    if ((eax & 0x8080) == 0) {\n        eax = edx;\n    }\n    rdx = rbx + 2;\n    if ((eax & 0x8080) == 0) {\n        rbx = rdx;\n    }\n    esi = eax;\n    sil += al;\n    rbx -= 3;\n    *(rsp) = rbx;\n    if (rbx > r12) {\n        goto label_12;\n    }\n    goto label_4;\n    do {\n        ecx = *(r14);\n        eax = ecx;\n        al >>= 5;\n        eax &= 7;\n        eax = *((rax*4 + 0x410680));\n        eax >>= cl;\n        if ((al & 1) == 0) {\n            goto label_13;\n        }\n        *((rsp + 0x20)) = 1;\n        eax = *(r14);\n        *((rsp + 0x28)) = 1;\n        r14 = *((rsp + 0x18));\n        *((rsp + 0x2c)) = eax;\n        *((rsp + 0x14)) = 1;\nlabel_1:\n        eax = iswspace (*((rsp + 0x2c)));\n        if (eax == 0) {\n            goto label_4;\n        }\n        rbx = *(rsp);\n        r14 += *((rsp + 0x20));\n        *((rsp + 0x14)) = 0;\n        *((rsp + 0x18)) = r14;\n        if (r14 >= rbx) {\n            goto label_4;\n        }\nlabel_12:\n    } while (*((rsp + 8)) == 0);\nlabel_2:\n    rdx -= r14;\n    rax = fcn_00408fc0 (rsp + 0x2c, r14, rbx, rsp + 0xc);\n    *((rsp + 0x20)) = rax;\n    if (rax == -1) {\n        goto label_14;\n    }\n    r14 = *((rsp + 0x18));\n    if (rax == 0xfffffffffffffffe) {\n        goto label_15;\n    }\n    if (rax != 0) {\n        goto label_16;\n    }\n    *((rsp + 0x20)) = 1;\n    if (*(r14) != 0) {\n        void (*0x40791e)() ();\n    }\n    edx = *((rsp + 0x2c));\n    if (edx != 0) {\n        void (*0x407937)() ();\n    }\nlabel_16:\n    *((rsp + 0x28)) = 1;\n    eax = mbsinit (rsp + 0xc);\n    if (eax != 0) {\n        *((rsp + 8)) = 0;\n    }\n    *((rsp + 0x14)) = 1;\n    goto label_1;\nlabel_13:\n    eax = mbsinit (rsp + 0xc);\n    if (eax == 0) {\n        void (*0x407905)() ();\n    }\n    *((rsp + 8)) = 1;\n    goto label_2;\nlabel_14:\n    *((rsp + 0x20)) = 1;\n    r14 = *((rsp + 0x18));\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x14)) = 1;\nlabel_4:\n    strlen (r14);\n    memmove (r12, r14, rax + 1);\n    if (ebp == 1) {\n        void (*0x40751a)() ();\n    }\n    goto label_3;\nlabel_15:\n    rax = *(rsp);\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x14)) = 1;\n    rax -= r14;\n    *((rsp + 0x20)) = rax;\n    goto label_4;\nlabel_10:\n    r13 = r12;\n    goto label_5;\nlabel_6:\n    return fcn_00408130 ();\n}\n"
        },
        {
            "funcName": "fcn_004076ce",
            "funcStartAddr": "0x4076ce",
            "funcEndAddr": "0x407bca",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x4076ce */\n#include <stdint.h>\n \nuint64_t fcn_004076ce (uint32_t arg_8h, mbstate_t * ps, int64_t arg_14h, int64_t arg_18h, int64_t arg_20h, uint32_t arg_28h, wint_t wc) {\n    do {\n        r14d = 1;\n        if (*((rsp + 0x28)) != 0) {\n            r14d = 0;\n            eax = iswspace (*((rsp + 0x2c)));\n            r14b = (eax == 0) ? 1 : 0;\n        }\nlabel_2:\n        *((rsp + 0x18)) = rbx;\n        *((rsp + 0x14)) = 0;\n        if (rbx >= rbp) {\n            goto label_4;\n        }\nlabel_0:\n        if (*((rsp + 8)) != 0) {\n            goto label_5;\n        }\n        ecx = *(rbx);\n        eax = ecx;\n        al >>= 5;\n        eax &= 7;\n        eax = *((rax*4 + 0x410680));\n        eax >>= cl;\n        if ((al & 1) == 0) {\n            goto label_6;\n        }\n        *((rsp + 0x20)) = 1;\n        eax = *(rbx);\n        r15 = *((rsp + 0x18));\n        rbp = *(rsp);\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x2c)) = eax;\n        rbx = r15 + 1;\nlabel_1:\n        *((rsp + 0x14)) = 1;\n    } while (r14d == 0);\n    if (r14d == 1) {\n        goto label_7;\n    }\n    if (r14d != 2) {\n        goto label_8;\n    }\n    if (*((rsp + 0x28)) == 0) {\n        goto label_8;\n    }\n    eax = iswspace (*((rsp + 0x2c)));\n    *((rsp + 0x18)) = rbx;\n    eax = 1;\n    *((rsp + 0x14)) = 0;\n    if (eax == 0) {\n        r14d = eax;\n    }\n    if (rbx < rbp) {\n        goto label_0;\n    }\nlabel_4:\n    if (r14d == 2) {\n        goto label_9;\n    }\nlabel_3:\n    rax = r12;\n    return rax;\nlabel_6:\n    eax = mbsinit (rsp + 0xc);\n    if (eax == 0) {\n        goto label_10;\n    }\n    *((rsp + 8)) = 1;\nlabel_5:\n    rdx -= rbx;\n    rax = fcn_00408fc0 (rsp + 0x2c, rbx, rbp, rsp + 0xc);\n    rbx = rax;\n    *((rsp + 0x20)) = rax;\n    if (rax == -1) {\n        goto label_11;\n    }\n    r15 = *((rsp + 0x18));\n    if (rax == 0xfffffffffffffffe) {\n        goto label_12;\n    }\n    if (rax == 0) {\n        *((rsp + 0x20)) = 1;\n        if (*(r15) != 0) {\n            goto label_13;\n        }\n        eax = *((rsp + 0x2c));\n        if (eax != 0) {\n            goto label_14;\n        }\n        ebx = 1;\n    }\n    *((rsp + 0x28)) = 1;\n    rbx += r15;\n    eax = mbsinit (rsp + 0xc);\n    rbp = *(rsp);\n    if (eax == 0) {\n        goto label_1;\n    }\n    *((rsp + 8)) = 0;\n    goto label_1;\nlabel_7:\n    if (*((rsp + 0x28)) == 0) {\n        goto label_2;\n    }\n    eax = iswspace (*((rsp + 0x2c)));\n    eax = 2;\n    if (eax != 0) {\n        r13 = r15;\n    }\n    if (eax != 0) {\n        r14d = eax;\n    }\n    goto label_2;\n    *(rax) += al;\nlabel_11:\n    r15 = *((rsp + 0x18));\n    rbp = *(rsp);\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x20)) = 1;\n    rbx = r15 + 1;\n    goto label_1;\nlabel_12:\n    rbx = *(rsp);\n    *((rsp + 0x28)) = 0;\n    rax = rbx;\n    rax -= r15;\n    *((rsp + 0x20)) = rax;\n    goto label_1;\nlabel_8:\n    r14d = 1;\n    goto label_2;\nlabel_9:\n    *(r13) = 0;\n    goto label_3;\nlabel_10:\n    assert_fail (\"mbsinit (&iter->state)\", \"lib/mbiter.h\", 0x8e, \"mbiter_multi_next\");\nlabel_13:\n    assert_fail (\"*iter->cur.ptr == '\\\\0', \"lib/mbiter.h\", 0xa9, \"mbiter_multi_next\");\nlabel_14:\n    return fcn_00407380 ();\n}\n"
        },
        {
            "funcName": "fcn_00407940",
            "funcStartAddr": "0x407940",
            "funcEndAddr": "0x40dbff",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x407940 */\n#include <stdint.h>\n \nvoid fcn_00407940 (int64_t arg_20h_2, int64_t arg_30h, int64_t arg_8h_3, int64_t arg_10h, int64_t arg_8h_2, int64_t arg_8h_4, int64_t arg_10h_2, int64_t arg_18h_2, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_30h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    eax = abort ();\n    r12 = r9;\n    rbx = r8;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    r9 = rcx;\n    r8 = rdx;\n    rcx = rsi;\n    edx = \"%s (%s) %s\\n\";\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    do {\n        edx = 5;\n        rax = dcgettext (0, 0x410135);\n        r8d = 0x7e1;\n        edx = \"Copyright %s %d Free Software Foundation, Inc.\";\n        rdi = rbp;\n        rcx = rax;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        edx = 5;\n        rax = dcgettext (0, \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\");\n        rsi = rbp;\n        rdi = rax;\n        eax = fputs_unlocked ();\n        if (r12 > 9) {\n            goto label_2;\n        }\n        /* switch table (10 cases) at 0x410420 */\nlabel_1:\n        r8 = rcx;\n        esi = 1;\n        rcx = rdx;\n        eax = 0;\n        edx = \"%s %s\\n\";\n        fprintf_chk ();\n    } while (1);\n    r9 = *((rbx + 0x38));\n    rax = *((rbx + 0x10));\n    edx = 5;\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    r15 = *((rbx + 0x20));\n    *((rsp + 0x10)) = r9;\n    r14 = *((rbx + 0x18));\n    rbx = *(rbx);\n    *(rsp) = rax;\n    *((rsp + 8)) = r8;\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n    do {\n        r9 = *((rsp + 0x18));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        r9 = *((rsp + 0x30));\n        r8 = *((rsp + 0x38));\n        fprintf_chk ();\n        return rax;\n        r10 = *((rbx + 0x40));\n        r9 = *((rbx + 0x38));\n        edx = 5;\n        rax = *((rbx + 0x10));\n        r8 = *((rbx + 8));\n        r13 = *((rbx + 0x30));\n        r12 = *((rbx + 0x28));\n        *((rsp + 0x18)) = r10;\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        *((rsp + 0x10)) = r9;\n        *(rsp) = rax;\n        rbx = *(rbx);\n        *((rsp + 8)) = r8;\nlabel_0:\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        r10 = *((rsp + 0x18));\n    } while (1);\n    rbx = *(rbx);\n    edx = 5;\n    rax = dcgettext (0, \"Written by %s.\\n\");\n    rdi = rbp;\n    esi = 1;\n    rcx = rbx;\n    rdx = rax;\n    eax = 0;\n    void (*0x4019d0)() ();\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s and %s.\\n\");\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x4019d0)() ();\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, and %s.\\n\");\n    r9 = r13;\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x4019d0)() ();\n    edx = 5;\n    r14 = *((rbx + 0x18));\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\nand %s.\\n\");\n    do {\n        rdx = rax;\n        r9 = r13;\n        r8 = r12;\n        rcx = rbx;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r15 = *((rbx + 0x20));\n        edx = 5;\n        r14 = *((rbx + 0x18));\n        r13 = *((rbx + 0x10));\n        r12 = *((rbx + 8));\n        rbx = *(rbx);\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n    } while (1);\n    r8 = *((rbx + 8));\n    r12 = *((rbx + 0x28));\n    edx = 5;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *(rsp) = r8;\n    r13 = *((rbx + 0x10));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n    r9 = r13;\n    do {\n        r8 = *((rsp + 0x20));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r9 = *((rbx + 0x10));\n        r13 = *((rbx + 0x30));\n        edx = 5;\n        r12 = *((rbx + 0x28));\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        r8 = *((rbx + 8));\n        *((rsp + 8)) = r9;\n        rbx = *(rbx);\n        *(rsp) = r8;\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n        r9 = *((rsp + 0x28));\n    } while (1);\nlabel_2:\n    r10 = *((rbx + 0x40));\n    r9 = *((rbx + 0x38));\n    edx = 5;\n    esi = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    rax = *((rbx + 0x10));\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    *((rsp + 0x18)) = r10;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *((rsp + 0x10)) = r9;\n    *(rsp) = rax;\n    rbx = *(rbx);\n    *((rsp + 8)) = r8;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00407da0",
            "funcStartAddr": "0x407da0",
            "funcEndAddr": "0x407e5c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x407da0 */\n#include <stdint.h>\n \nuint64_t fcn_00407da0 (int64_t arg_b0h, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_70h;\n    int64_t var_90h;\n    int64_t var_98h;\n    r8 = arg5;\n    r9 = arg6;\n    r11d = 0;\n    rax = rsp + 0xb0;\n    *((rsp + 0x90)) = r8;\n    r10 = rsp + 0xb0;\n    r8d = 0x20;\n    *((rsp + 0x10)) = rax;\n    rax = rsp + 0x70;\n    *((rsp + 0x98)) = r9;\n    r9d = 0;\n    *((rsp + 8)) = 0x20;\n    *((rsp + 0x18)) = rax;\n    while (r8d <= 0x2f) {\n        eax = r8d;\n        r11 = rsp + 0x70;\n        r8d += 8;\n        rax += r11;\n        r11d = 1;\n        rax = *(rax);\n        *((rsp + r9*8 + 0x20)) = rax;\n        if (rax == 0) {\n            goto label_1;\n        }\nlabel_0:\n        r9++;\n        if (r9 == 0xa) {\n            goto label_1;\n        }\n    }\n    rax = r10;\n    r10 += 8;\n    rax = *(rax);\n    *((rsp + r9*8 + 0x20)) = rax;\n    if (rax != 0) {\n        goto label_0;\n    }\nlabel_1:\n    if (r11b != 0) {\n        *((rsp + 8)) = r8d;\n    }\n    fcn_00407940 (rdi, rsi, rdx, rcx, rsp + 0x20, r9);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00407ee0",
            "funcStartAddr": "0x407ee0",
            "funcEndAddr": "0x407efa",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x407ee0 */\n#include <stdint.h>\n \nuint64_t fcn_00407ee0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = malloc (rdi);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    return fcn_00408130 ();\n}\n"
        },
        {
            "funcName": "fcn_00407f40",
            "funcStartAddr": "0x407f40",
            "funcEndAddr": "0x407f76",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x407f40 */\n#include <stdint.h>\n \nuint64_t fcn_00407f40 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rsi;\n    if (rsi == 0) {\n        if (rdi != 0) {\n            goto label_0;\n        }\n    }\n    rax = realloc (rdi, rbx);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_1;\n        }\n    }\n    return rax;\nlabel_0:\n    eax = free (rdi);\n    eax = 0;\n    return rax;\nlabel_1:\n    return fcn_00408130 ();\n}\n"
        },
        {
            "funcName": "fcn_004080e0",
            "funcStartAddr": "0x4080e0",
            "funcEndAddr": "0x408108",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x4080e0 */\n#include <stdint.h>\n \nuint64_t fcn_004080e0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdi = rsi;\n    rbx = rsi;\n    rax = fcn_00407ee0 (rdi);\n    rdx = rbx;\n    rsi = rbp;\n    rdi = rax;\n    return memcpy ();\n}\n"
        },
        {
            "funcName": "fcn_00408130",
            "funcStartAddr": "0x408130",
            "funcEndAddr": "0x408161",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x408130 */\n#include <stdint.h>\n \nuint64_t fcn_00408130 (void) {\n    edx = 5;\n    rax = dcgettext (0, \"memory exhausted\");\n    rcx = rax;\n    eax = 0;\n    error (*(0x00613240), 0, 0x40f2e9);\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_004081c0",
            "funcStartAddr": "0x4081c0",
            "funcEndAddr": "0x4081e7",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x4081c0 */\n#include <stdint.h>\n \nuint64_t fcn_004081c0 (void) {\n    rax = fcn_0040b710 (rdi, rsi, rdx);\n    rbx = rax;\n    while (*(rax) != 0xc) {\n        rax = rbx;\n        return rax;\n        rax = errno_location ();\n    }\n    return fcn_00408130 ();\n}\n"
        },
        {
            "funcName": "fcn_004081f0",
            "funcStartAddr": "0x4081f0",
            "funcEndAddr": "0x4082cf",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x4081f0 */\n#include <stdint.h>\n \nuint64_t fcn_004081f0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r11 = rdi + 8;\n    r12d = *((rsi + 0x2c));\n    ebp = *(rsi);\n    rbx = *((rsi + 0x30));\n    r9d = r12d;\n    r10d = ebp;\n    r8 = rbx;\nlabel_1:\n    if (r10d <= r8d) {\n        goto label_2;\n    }\nlabel_0:\n    if (r9d >= r8d) {\n        goto label_2;\n    }\n    r14d = r10d;\n    edx = r8d;\n    r14d -= r8d;\n    edx -= r9d;\n    if (r14d <= edx) {\n        goto label_3;\n    }\n    rcx = (int64_t) r9d;\n    r10d -= edx;\n    edx--;\n    rdx += rcx;\n    rax = rdi + rcx*8;\n    r13 = r11 + rdx*8;\n    rdx = (int64_t) r10d;\n    rdx -= rcx;\n    do {\n        rcx = *(rax);\n        r14 = *((rax + rdx*8));\n        *(rax) = r14;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (r13 != rax);\n    if (r10d > r8d) {\n        goto label_0;\n    }\nlabel_2:\n    eax = ebp;\n    *((rsi + 0x30)) = ebp;\n    eax -= r8d;\n    r12d += eax;\n    *((rsi + 0x2c)) = r12d;\n    r12 = rbx;\n    r13 = rbx;\n    r14 = rbx;\n    r15 = rbx;\n    return rax;\nlabel_3:\n    rdx = (int64_t) r9d;\n    ecx = r14 - 1;\n    rcx += rdx;\n    rax = rdi + rdx*8;\n    r13 = r11 + rcx*8;\n    rcx = rbx;\n    rcx -= rdx;\n    rdx = rcx;\n    do {\n        rcx = *(rax);\n        r15 = *((rax + rdx*8));\n        *(rax) = r15;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (rax != r13);\n    r9d += r14d;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_004082d0",
            "funcStartAddr": "0x4082d0",
            "funcEndAddr": "0x4088ec",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x4082d0 */\n#include <stdint.h>\n \nint64_t fcn_004082d0 (int64_t arg_90h, int64_t arg_98h, int64_t arg_a0h, signed int64_t arg1, int64_t arg2, char * arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_ch;\n    int64_t var_10h;\n    void * ptr;\n    int64_t var_20h;\n    int64_t var_28h;\n    char * s;\n    int64_t var_38h;\n    int64_t c;\n    signed int64_t var_40h;\n    int64_t var_44h;\n    void * var_48h;\n    size_t nmeb;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rax = *((rsp + 0x90));\n    *((rsp + 0x40)) = edi;\n    *((rsp + 0x28)) = rsi;\n    r14 = *((rax + 0x20));\n    *((rsp + 0x30)) = rdx;\n    *(rsp) = rcx;\n    eax = *(r14);\n    *((rsp + 0x20)) = r8;\n    *((rsp + 0xc)) = r9d;\n    *((rsp + 0x3f)) = al;\n    if (al == 0x3d) {\n        goto label_11;\n    }\n    if (al == 0) {\n        goto label_11;\n    }\n    do {\n        rbp++;\n        eax = *(rbp);\n        if (al == 0) {\n            goto label_12;\n        }\n    } while (al != 0x3d);\nlabel_12:\n    r13 = rbp;\n    r13 -= r14;\nlabel_6:\n    rbx = *(rsp);\n    r12d = 0;\n    rax = *(rbx);\n    *((rsp + 0x10)) = rax;\n    r15 = rax;\n    if (rax != 0) {\n        goto label_13;\n    }\n    goto label_14;\n    do {\n        r12 = (int64_t) r8d;\nlabel_13:\n        eax = strncmp (r15, r14, r13);\n        if (eax == 0) {\n            rax = strlen (r15);\n            if (rax == r13) {\n                goto label_15;\n            }\n        }\n        rbx += 0x20;\n        r15 = *(rbx);\n        r8d = r12 + 1;\n    } while (r15 != 0);\n    rcx = *(rsp);\n    *((rsp + 0x4c)) = r8d;\n    r9d = 0;\n    ebx = 0;\n    *((rsp + 0x44)) = 0xffffffff;\n    r15 = r9;\n    *((rsp + 0x38)) = 0;\n    *((rsp + 0x48)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x10)) = rbp;\n    do {\n        eax = strncmp (*((rsp + 0x10)), r14, r13);\n        if (eax == 0) {\n            if (rbx == 0) {\n                goto label_16;\n            }\n            eax = *((rsp + 0xc));\n            if (eax == 0) {\n                goto label_17;\n            }\nlabel_0:\n            r11d = *((rsp + 0x38));\n            if (r11d != 0) {\n                goto label_1;\n            }\n            r10d = *((rsp + 0x98));\n            if (r10d == 0) {\n                goto label_18;\n            }\n            if (*((rsp + 0x18)) == 0) {\n                goto label_19;\n            }\nlabel_3:\n            rax = *((rsp + 0x18));\n            *((rax + r15)) = 1;\n        }\nlabel_1:\n        rbp += 0x20;\n        rdi = *(rbp);\n        r15++;\n    } while (rdi != 0);\n    rbp = *((rsp + 0x10));\n    if (*((rsp + 0x18)) != 0) {\n        goto label_20;\n    }\n    r9d = *((rsp + 0x38));\n    if (r9d != 0) {\n        goto label_20;\n    }\n    if (rbx == 0) {\nlabel_14:\n        eax = *((rsp + 0xc));\n        if (eax != 0) {\n            rax = *((rsp + 0x90));\n            rcx = *((rsp + 0x28));\n            rax = *(rax);\n            rax = *((rcx + rax*8));\n            if (*((rax + 1)) == 0x2d) {\n                goto label_21;\n            }\n            esi = *((rsp + 0x3f));\n            rax = strchr (*((rsp + 0x30)), rsi);\n            rdx = rax;\n            eax = 0xffffffff;\n            if (rdx != 0) {\n                goto label_5;\n            }\n        }\nlabel_21:\n        ecx = *((rsp + 0x98));\n        if (ecx != 0) {\n            goto label_22;\n        }\nlabel_4:\n        rax = *((rsp + 0x90));\n        *((rax + 0x20)) = 0;\n        *(rax)++;\n        *((rax + 8)) = 0;\n        eax = 0x3f;\n        return rax;\n    }\n    r12d = *((rsp + 0x44));\nlabel_15:\n    rax = *((rsp + 0x90));\n    rcx = *((rsp + 0x90));\n    edx = *(rax);\n    *((rcx + 0x20)) = 0;\n    eax = rdx + 1;\n    *(rcx) = eax;\n    ecx = *((rbx + 8));\n    if (*(rbp) != 0) {\n        goto label_23;\n    }\n    if (ecx == 1) {\n        goto label_24;\n    }\nlabel_2:\n    rax = *((rsp + 0x20));\n    if (rax != 0) {\n        *(rax) = r12d;\n    }\n    rdx = *((rbx + 0x10));\n    eax = *((rbx + 0x18));\n    if (rdx != 0) {\n        *(rdx) = eax;\n        eax = 0;\n    }\nlabel_5:\n    return rax;\nlabel_17:\n    eax = *((rbp + 8));\n    if (*((rbx + 8)) != eax) {\n        goto label_0;\n    }\n    rax = *((rbp + 0x10));\n    if (*((rbx + 0x10)) != rax) {\n        goto label_0;\n    }\n    eax = *((rbp + 0x18));\n    if (*((rbx + 0x18)) != eax) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_23:\n    if (ecx == 0) {\n        goto label_25;\n    }\n    rax = *((rsp + 0x90));\n    rbp++;\n    *((rax + 0x10)) = rbp;\n    goto label_2;\nlabel_16:\n    *((rsp + 0x44)) = r15d;\n    rbx = rbp;\n    goto label_1;\nlabel_18:\n    *((rsp + 0x38)) = 1;\n    if (*((rsp + 0x18)) == 0) {\n        goto label_1;\n    }\n    goto label_3;\nlabel_22:\n    rax = *((rsp + 0x28));\n    edx = 5;\n    rbx = *(rax);\n    rax = dcgettext (0, \"%s: unrecognized option '%s%s'\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r14;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbx;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_4;\nlabel_20:\n    r8d = *((rsp + 0x98));\n    if (r8d != 0) {\n        edi = *((rsp + 0x38));\n        if (edi == 0) {\n            goto label_26;\n        }\n        rax = *((rsp + 0x28));\n        edx = 5;\n        rbx = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' is ambiguous\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r14;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbx;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        rax = *((rsp + 0x90));\n        r14 = *((rax + 0x20));\n    }\nlabel_9:\n    esi = *((rsp + 0x48));\n    if (esi != 0) {\n        goto label_27;\n    }\nlabel_7:\n    rax = strlen (r14);\n    r14 += rax;\n    rax = *((rsp + 0x90));\n    *((rax + 0x20)) = r14;\n    *(rax)++;\n    *((rax + 8)) = 0;\n    eax = 0x3f;\n    goto label_5;\nlabel_24:\n    if (eax >= *((rsp + 0x40))) {\n        goto label_28;\n    }\n    rcx = *((rsp + 0x90));\n    edx += 2;\n    rax = (int64_t) eax;\n    *(rcx) = edx;\n    rcx = *((rsp + 0x28));\n    rax = *((rcx + rax*8));\n    rcx = *((rsp + 0x90));\n    *((rcx + 0x10)) = rax;\n    goto label_2;\nlabel_11:\n    r13d = 0;\n    goto label_6;\nlabel_25:\n    edx = *((rsp + 0x98));\n    while (1) {\n        eax = *((rbx + 0x18));\n        rcx = *((rsp + 0x90));\n        *((rcx + 8)) = eax;\n        eax = 0x3f;\n        goto label_5;\nlabel_19:\n        rdi = *((rsp + 0x4c));\n        rax = calloc (rdi, 1);\n        *((rsp + 0x18)) = rax;\n        if (rax == 0) {\n            goto label_29;\n        }\n        rax = *((rsp + 0x44));\n        rcx = *((rsp + 0x18));\n        *((rsp + 0x48)) = 1;\n        *((rcx + rax)) = 1;\n        goto label_3;\n        rax = *((rsp + 0x28));\n        r12 = *(rbx);\n        edx = 5;\n        rbp = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' doesn't allow an argument\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r12;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_27:\n    free (*((rsp + 0x18)));\n    goto label_7;\nlabel_28:\n    eax = *((rsp + 0x98));\n    if (eax != 0) {\n        goto label_30;\n    }\nlabel_10:\n    eax = *((rbx + 0x18));\n    rcx = *((rsp + 0x90));\n    *((rcx + 8)) = eax;\n    rax = *((rsp + 0x30));\n    al = (*(rax) != 0x3a) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = rax * 5;\n    goto label_5;\nlabel_26:\n    rdi = stderr;\n    flockfile ();\n    rax = *((rsp + 0x90));\n    edx = 5;\n    rbx = *((rax + 0x20));\n    rax = *((rsp + 0x28));\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' is ambiguous; possibilities:\");\n    rdi = stderr;\n    r9 = rbx;\n    r8 = *((rsp + 0xa0));\n    rcx = rbp;\n    rdx = rax;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    rax = *((rsp + 0x18));\n    rdi = stderr;\n    rbx = *(rsp);\n    r12 = rax + r12 + 1;\n    while (*(rbp) == 0) {\nlabel_8:\n        rbp++;\n        rbx += 0x20;\n        if (r12 == rbp) {\n            goto label_31;\n        }\n    }\n    r8 = *(rbx);\n    edx = \" '%s%s';\n    esi = 1;\n    eax = 0;\n    rcx = *((rsp + 0xa0));\n    fprintf_chk ();\n    rdi = stderr;\n    goto label_8;\nlabel_31:\n    fputc (0xa, rdi);\n    rdi = stderr;\n    funlockfile ();\n    rax = *((rsp + 0x90));\n    r14 = *((rax + 0x20));\n    goto label_9;\nlabel_30:\n    rax = *((rsp + 0x28));\n    r12 = *(rbx);\n    edx = 5;\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' requires an argument\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r12;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbp;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_10;\nlabel_29:\n    *((rsp + 0x38)) = 1;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_004088f0",
            "funcStartAddr": "0x4088f0",
            "funcEndAddr": "0x408eb6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x4088f0 */\n#include <stdint.h>\n \nuint64_t fcn_004088f0 (int64_t arg_70h, int64_t arg_78h, int64_t arg1, int64_t arg2, int64_t arg3, uint32_t arg4, int64_t arg5, int64_t arg6) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_1ch;\n    int64_t var_20h;\n    int64_t var_28h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rbx = *((rsp + 0x70));\n    *((rsp + 8)) = rcx;\n    *((rsp + 0x10)) = r8;\n    r13d = *((rbx + 4));\n    if (edi <= 0) {\n        goto label_16;\n    }\n    eax = *(rbx);\n    r12 = rsi;\n    r15 = rdx;\n    *((rbx + 0x10)) = 0;\n    if (eax == 0) {\n        goto label_17;\n    }\n    esi = *((rbx + 0x18));\n    if (esi == 0) {\nlabel_1:\n        *((rbx + 0x30)) = eax;\n        *((rbx + 0x2c)) = eax;\n        *((rbx + 0x20)) = 0;\n        eax = *(r15);\n        if (al == 0x2d) {\n            goto label_18;\n        }\n        if (al == 0x2b) {\n            goto label_19;\n        }\n        ecx = *((rsp + 0x78));\n        edx = 0;\n        if (ecx == 0) {\n            goto label_20;\n        }\nlabel_8:\n        *((rbx + 0x28)) = 0;\n        goto label_11;\n    }\n    eax = *(rdx);\n    rdx = *((rbx + 0x20));\n    ecx = rax - 0x2b;\n    ecx &= 0xfd;\n    if (ecx != 0) {\n        goto label_21;\n    }\n    eax = *((r15 + 1));\n    r15++;\n    eax = 0;\n    if (al == 0x3a) {\n        r13d = eax;\n    }\n    if (rdx != 0) {\n        goto label_22;\n    }\n    do {\nlabel_0:\n        eax = *(rbx);\n        if (*((rbx + 0x30)) > eax) {\n            *((rbx + 0x30)) = eax;\n        }\n        if (eax < *((rbx + 0x2c))) {\n            *((rbx + 0x2c)) = eax;\n        }\n        if (*((rbx + 0x28)) == 1) {\n            goto label_23;\n        }\nlabel_4:\n        if (ebp == eax) {\n            goto label_24;\n        }\n        rdx = (int64_t) eax;\n        ecx = 3;\n        edi = 0x4105c9;\n        r14 = *((r12 + rdx*8));\n        rsi = *((r12 + rdx*8));\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (ebp > eax) ? 1 : 0;\n        if (cl != 0) {\n            goto label_25;\n        }\n        edx = *((rbx + 0x2c));\n        ecx = *((rbx + 0x30));\n        eax++;\n        *(rbx) = eax;\n        if (edx == ecx) {\n            goto label_26;\n        }\n        if (eax != ecx) {\n            fcn_004081f0 (r12, rbx);\n            edx = *((rbx + 0x2c));\n        }\nlabel_12:\n        *((rbx + 0x30)) = ebp;\n        *(rbx) = ebp;\n        goto label_27;\nlabel_18:\n        *((rbx + 0x28)) = 2;\n        r15++;\n        edx = 0;\nlabel_11:\n        *((rbx + 0x18)) = 1;\n        eax = *(r15);\nlabel_21:\n        eax = 0;\n        if (al == 0x3a) {\n            r13d = eax;\n        }\n    } while (rdx == 0);\nlabel_22:\n    if (*(rdx) == 0) {\n        goto label_0;\n    }\nlabel_6:\n    r8 = rdx + 1;\n    *((rsp + 0x20)) = rdx;\n    *((rbx + 0x20)) = r8;\n    r14d = *(rdx);\n    *((rsp + 0x28)) = r8;\n    *((rsp + 0x1c)) = r14b;\n    rax = strchr (r15, r14d);\n    rdx = *((rsp + 0x20));\n    ecx = *((rsp + 0x1c));\n    r8 = *((rsp + 0x28));\n    if (*((rdx + 1)) == 0) {\n        *(rbx)++;\n    }\n    ecx -= 0x3a;\n    if (cl <= 1) {\n        goto label_28;\n    }\n    if (rax == 0) {\n        goto label_28;\n    }\n    ecx = *((rax + 1));\n    if (*(rax) == 0x57) {\n        goto label_29;\n    }\nlabel_7:\n    if (cl == 0x3a) {\n        goto label_30;\n    }\n    do {\nlabel_2:\n        eax = r14d;\n        return rax;\nlabel_25:\n        if (*(r14) == 0x2d) {\n            goto label_31;\n        }\nlabel_5:\n        edx = *((rbx + 0x28));\n        if (edx == 0) {\n            goto label_16;\n        }\n        eax++;\n        *((rbx + 0x10)) = r14;\n        r14d = 1;\n        *(rbx) = eax;\n    } while (1);\nlabel_17:\n    *(rbx) = 1;\n    eax = 1;\n    goto label_1;\nlabel_24:\n    ebp = *((rbx + 0x30));\n    edx = *((rbx + 0x2c));\nlabel_27:\n    if (edx != ebp) {\n        *(rbx) = edx;\n    }\nlabel_16:\n    r14d = 0xffffffff;\n    goto label_2;\nlabel_23:\n    edx = *((rbx + 0x30));\n    if (*((rbx + 0x2c)) == edx) {\n        goto label_32;\n    }\n    if (eax != edx) {\n        *((rsp + 0x1c)) = r9d;\n        fcn_004081f0 (r12, rbx);\n        edx = *(rbx);\n        r9d = *((rsp + 0x1c));\n    }\nlabel_9:\n    if (ebp <= edx) {\n        goto label_33;\n    }\n    rax = (int64_t) edx;\n    while (*(rcx) != 0x2d) {\nlabel_3:\n        edx = rsi + 1;\n        rax++;\n        *(rbx) = edx;\n        if (ebp <= eax) {\n            goto label_33;\n        }\n        rcx = *((r12 + rax*8));\n        esi = eax;\n        edx = eax;\n    }\n    if (*((rcx + 1)) == 0) {\n        goto label_3;\n    }\n    eax = *(rbx);\nlabel_10:\n    *((rbx + 0x30)) = edx;\n    goto label_4;\nlabel_31:\n    ecx = *((r14 + 1));\n    if (cl == 0) {\n        goto label_5;\n    }\n    if (*((rsp + 8)) == 0) {\n        goto label_34;\n    }\n    if (cl == 0x2d) {\n        goto label_35;\n    }\n    if (r9d == 0) {\n        goto label_34;\n    }\n    if (*((r14 + 2)) == 0) {\n        esi = (int32_t) cl;\n        *((rsp + 0x1c)) = r9d;\n        rax = strchr (r15, rsi);\n        r9d = *((rsp + 0x1c));\n        if (rax != 0) {\n            goto label_34;\n        }\n    }\n    rdx = r14 + 1;\n    *((rbx + 0x20)) = rdx;\n    eax = fcn_004082d0 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), r9);\n    r14d = eax;\n    if (eax != 0xffffffff) {\n        goto label_2;\n    }\n    rax = *(rbx);\n    r14 = *((r12 + rax*8));\nlabel_34:\n    rdx = r14 + 1;\n    goto label_6;\nlabel_29:\n    if (*((rsp + 8)) == 0) {\n        goto label_7;\n    }\n    if (cl != 0x3b) {\n        goto label_7;\n    }\n    if (*((rdx + 1)) == 0) {\n        rax = *(rbx);\n        if (eax == ebp) {\n            goto label_36;\n        }\n        r8 = *((r12 + rax*8));\n    }\n    *((rbx + 0x20)) = r8;\n    *((rbx + 0x10)) = 0;\nlabel_14:\n    eax = fcn_004082d0 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), 0);\n    r14d = eax;\n    goto label_2;\nlabel_20:\n    *((rsp + 0x1c)) = r9d;\n    rax = getenv (\"POSIXLY_CORRECT\");\n    r9d = *((rsp + 0x1c));\n    if (rax == 0) {\n        goto label_37;\n    }\n    rdx = *((rbx + 0x20));\n    goto label_8;\nlabel_30:\n    edx = *((rdx + 1));\n    if (*((rax + 2)) == 0x3a) {\n        goto label_38;\n    }\n    rax = *(rbx);\n    if (dl != 0) {\n        goto label_39;\n    }\n    if (ebp == eax) {\n        goto label_40;\n    }\n    edx = rax + 1;\n    rax = *((r12 + rax*8));\n    *(rbx) = edx;\n    *((rbx + 0x10)) = rax;\nlabel_13:\n    *((rbx + 0x20)) = 0;\n    goto label_2;\nlabel_32:\n    if (eax == edx) {\n        goto label_9;\n    }\n    *((rbx + 0x2c)) = eax;\n    edx = eax;\n    goto label_9;\nlabel_33:\n    eax = edx;\n    goto label_10;\nlabel_19:\n    *((rbx + 0x28)) = 0;\n    r15++;\n    edx = 0;\n    goto label_11;\nlabel_28:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0x3f;\n        goto label_2;\nlabel_26:\n        *((rbx + 0x2c)) = eax;\n        edx = eax;\n        goto label_12;\nlabel_39:\n        eax++;\n        *((rbx + 0x10)) = r8;\n        *(rbx) = eax;\n        goto label_13;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: invalid option -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_38:\n    if (dl != 0) {\n        *((rbx + 0x10)) = r8;\n        *(rbx)++;\n        goto label_13;\nlabel_37:\n        *((rbx + 0x28)) = 1;\n        rdx = *((rbx + 0x20));\n        goto label_11;\n    }\n    *((rbx + 0x10)) = 0;\n    goto label_13;\nlabel_40:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_13;\nlabel_35:\n        rdx = r14 + 2;\n        *((rbx + 0x20)) = rdx;\n        goto label_14;\nlabel_36:\n        if (r13d != 0) {\n            goto label_41;\n        }\nlabel_15:\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_2;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_41:\n    rbp = *(r12);\n    edx = 5;\n    rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n    rdi = stderr;\n    r8d = r14d;\n    esi = 1;\n    rdx = rax;\n    rcx = rbp;\n    eax = 0;\n    fprintf_chk ();\n    goto label_15;\n}\n"
        },
        {
            "funcName": "fcn_00408ec0",
            "funcStartAddr": "0x408ec0",
            "funcEndAddr": "0x408f16",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x408ec0 */\n#include <stdint.h>\n \nint32_t fcn_00408ec0 (int64_t arg_10h) {\n    eax = *(0x006132bc);\n    *(0x00613480) = eax;\n    eax = *(0x006132b8);\n    *(0x00613484) = eax;\n    eax = *((rsp + 0x10));\n    fcn_004088f0 (rdi, rsi, rdx, rcx, r8, r9);\n    edx = imp.__libc_start_main;\n    *(0x006132bc) = edx;\n    rdx = imp.__libc_start_main;\n    *(0x00613cc8) = rdx;\n    edx = imp.__libc_start_main;\n    *(0x006132b4) = edx;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00408f40",
            "funcStartAddr": "0x408f40",
            "funcEndAddr": "0x408f53",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x408f40 */\n#include <stdint.h>\n \nvoid fcn_00408f40 (void) {\n    r9d = 0;\n    fcn_00408ec0 (rdi);\n}\n"
        },
        {
            "funcName": "fcn_00408fc0",
            "funcStartAddr": "0x408fc0",
            "funcEndAddr": "0x40903a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x408fc0 */\n#include <stdint.h>\n \nuint64_t fcn_00408fc0 (wint_t arg1, uint32_t arg2, size_t * arg3, mbstate_t * ps) {\n    int64_t var_ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = ps;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    rbx = 0xfffffffffffffffe;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r12 = rdi;\n    while (1) {\n        rax = mbrtowc (r12, rbp, rdx, rcx);\n        rbx = rax;\n        if (rax > 0xfffffffffffffffd) {\n            goto label_2;\n        }\nlabel_0:\n        rax = rbx;\n        return rax;\nlabel_1:\n        edx = 1;\n        r12 = rsp + 0xc;\n    }\nlabel_2:\n    al = fcn_00409210 (0);\n    if (al != 0) {\n        goto label_0;\n    }\n    eax = *(rbp);\n    ebx = 1;\n    *(r12) = eax;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00409040",
            "funcStartAddr": "0x409040",
            "funcEndAddr": "0x409144",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x409040 */\n#include <stdint.h>\n \nint64_t fcn_00409040 (uint32_t arg1, int64_t arg2, uint32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r8d = esi;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    if ((dil & 7) == 0) {\n        goto label_1;\n    }\n    if (sil != *(rdi)) {\n        goto label_2;\n    }\n    goto label_3;\n    do {\n        if ((dil & 7) == 0) {\n            goto label_1;\n        }\n        if (*(rdi) == r8b) {\n            goto label_3;\n        }\nlabel_2:\n        rdi++;\n        rdx--;\n    } while (rdx != 0);\nlabel_0:\n    eax = 0;\n    return eax;\nlabel_1:\n    r9d = esi;\n    eax = (int32_t) sil;\n    r9d <<= 8;\n    r9d = (int32_t) r9w;\n    r9d |= eax;\n    r9 = (int64_t) r9d;\n    rax = r9;\n    rax <<= 0x10;\n    r9 |= rax;\n    rax = r9;\n    rax <<= 0x20;\n    r9 |= rax;\n    if (rdx <= 7) {\n        goto label_4;\n    }\n    r11 = 0xfefefefefefefeff;\n    rax = *(rdi);\n    r10 = 0x8080808080808080;\n    rax ^= r9;\n    rcx = rax + r11;\n    rax = ~rax;\n    rax &= rcx;\n    if ((rax & r10) == 0) {\n        goto label_5;\n    }\n    goto label_4;\n    do {\n        rax = *(rdi);\n        rax ^= r9;\n        rcx = rax + r11;\n        rax = ~rax;\n        rax &= rcx;\n        if ((rax & r10) != 0) {\n            goto label_4;\n        }\nlabel_5:\n        rdx -= 8;\n        rdi += 8;\n    } while (rdx > 7);\n    if (rdx == 0) {\n        goto label_0;\n    }\nlabel_4:\n    if (sil == *(rdi)) {\n        goto label_3;\n    }\n    rcx = rdi + 1;\n    rdi += rdx;\n    while (rcx != rdi) {\n        rcx++;\n        if (*((rcx - 1)) == r8b) {\n            goto label_6;\n        }\n        rax = rcx;\n    }\n    goto label_0;\nlabel_3:\n    rax = rdi;\nlabel_6:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00409150",
            "funcStartAddr": "0x409150",
            "funcEndAddr": "0x4091a9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x409150 */\n#include <stdint.h>\n \nint32_t fcn_00409150 (uint32_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    eax = 0;\n    if (rdi == rsi) {\n        goto label_0;\n    }\n    edx = 0;\n    while (al != 0) {\n        rdx++;\n        if (al != cl) {\n            goto label_1;\n        }\n        r8d = *((rdi + rdx));\n        ecx = r8 - 0x41;\n        eax = r8d;\n        if (ecx <= 0x19) {\n            r8d += 0x20;\n            eax += 0x20;\n        }\n        r9d = *((rsi + rdx));\n        r10d = r9 - 0x41;\n        ecx = r9d;\n        if (r10d <= 0x19) {\n            r9d += 0x20;\n            ecx += 0x20;\n        }\n    }\nlabel_1:\n    eax = (int32_t) r8b;\n    r9d = (int32_t) r9b;\n    eax -= r9d;\nlabel_0:\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_004091b0",
            "funcStartAddr": "0x4091b0",
            "funcEndAddr": "0x40920d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x4091b0 */\n#include <stdint.h>\n \nuint64_t fcn_004091b0 (int64_t arg1) {\n    rdi = arg1;\n    rax = fpending ();\n    ebx = *(rbp);\n    r12 = rax;\n    ebx &= 0x20;\n    eax = fcn_0040b800 (rbp);\n    if (ebx != 0) {\n        goto label_1;\n    }\n    if (eax == 0) {\n        goto label_0;\n    }\n    if (r12 != 0) {\n        goto label_2;\n    }\n    rax = errno_location ();\n    al = (*(rax) != 9) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = -eax;\n    do {\nlabel_0:\n        return rax;\nlabel_1:\n        if (eax != 0) {\n            goto label_2;\n        }\n        errno_location ();\n        *(rax) = 0;\n        eax = 0xffffffff;\n    } while (1);\nlabel_2:\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00409210",
            "funcStartAddr": "0x409210",
            "funcEndAddr": "0x40926e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x409210 */\n#include <stdint.h>\n \nuint64_t fcn_00409210 (int32_t category) {\n    rdi = category;\n    rax = setlocale (rdi, 0);\n    rdx = rax;\n    eax = 1;\n    if (rdx != 0) {\n        ecx = 2;\n        edi = 0x4105ec;\n        rsi = rdx;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (rdx > 0) ? 1 : 0;\n        eax = 0;\n        if (cl != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    edi = \"POSIX\";\n    ecx = 6;\n    rsi = rdx;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (cl > 0) ? 1 : 0;\n    al = (al != 0) ? 1 : 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00409270",
            "funcStartAddr": "0x409270",
            "funcEndAddr": "0x4097d2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x409270 */\n#include <stdint.h>\n \nuint64_t fcn_00409270 (void) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_60h;\n    rax = nl_langinfo (0xe);\n    r15 = imp.__libc_start_main;\n    rbx = rax;\n    eax = 0x4105e7;\n    if (rax == 0) {\n        rbx = rax;\n    }\n    if (r15 == 0) {\n        goto label_15;\n    }\nlabel_1:\n    ebp = *(r15);\n    if (bpl != 0) {\n        goto label_16;\n    }\n    goto label_17;\n    do {\nlabel_0:\n        strlen (r15);\n        rbp = r15 + rax + 1;\n        strlen (rbp);\n        r15 = rbp + rax + 1;\n        ebp = *(r15);\n        if (bpl == 0) {\n            goto label_17;\n        }\nlabel_16:\n        eax = strcmp (rbx, r15);\n        if (eax == 0) {\n            goto label_18;\n        }\n    } while (bpl != 0x2a);\n    if (*((r15 + 1)) != 0) {\n        goto label_0;\n    }\nlabel_18:\n    strlen (r15);\n    rbx = r15 + rax + 1;\nlabel_17:\n    eax = \"ASCII\";\n    if (*(rbx) == 0) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\nlabel_15:\n    rax = getenv (\"CHARSETALIASDIR\");\n    r13 = rax;\n    if (rax == 0) {\n        goto label_19;\n    }\n    if (*(rax) == 0) {\n        goto label_19;\n    }\n    rax = strlen (rax);\n    r12 = rax;\n    r14 = rax;\n    if (rax != 0) {\n        goto label_20;\n    }\nlabel_13:\n    rax = malloc (0xe);\n    if (rax != 0) {\n        goto label_21;\n    }\n    do {\n        r15d = 0x4105e7;\nlabel_2:\n        *(0x006134b8) = r15;\n        goto label_1;\nlabel_19:\n        r12d = 0x65;\n        r14d = 0x64;\n        r13d = \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\";\nlabel_14:\n        rax = malloc (0x73);\n    } while (rax == 0);\n    memcpy (rbp, r13, r14);\n    *((rbp + r14)) = 0x2f;\n    do {\n        r12 += rbp;\n        rax = 0x2e74657372616863;\n        *(r12) = rax;\n        eax = 0x73;\n        *((r12 + 0xc)) = ax;\n        eax = 0;\n        *((r12 + 8)) = 0x61696c61;\n        eax = open (rbp, 0, rdx);\n        r12d = eax;\n        if (eax >= 0) {\n            goto label_22;\n        }\nlabel_6:\n        r15d = 0x4105e7;\nlabel_7:\n        free (rbp);\n        goto label_2;\nlabel_21:\n        eax = memcpy (rbp, r13, r14);\n    } while (1);\nlabel_22:\n    esi = 0x40bdd7;\n    edi = eax;\n    r15d = 0;\n    rax = fdopen ();\n    *((rsp + 8)) = 0;\n    r13 = rax;\n    if (rax == 0) {\n        goto label_23;\n    }\n    rax = rbx;\n    r12 = rsp + 0x60;\n    r14 = rsp + 0x20;\n    rbx = r13;\n    r13 = rax;\n    do {\nlabel_3:\n        rax = *((rbx + 8));\n        if (rax >= *((rbx + 0x10))) {\n            goto label_24;\n        }\nlabel_4:\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        edi = *(rax);\nlabel_5:\n        eax = rdi - 9;\n    } while (eax <= 1);\n    if (edi == 0x20) {\n        goto label_3;\n    }\n    if (edi == 0x23) {\n        goto label_25;\n    }\n    eax = ungetc (rdi, rbx);\n    eax = 0;\n    rcx = r12;\n    rdx = r14;\n    eax = fscanf (rbx, \"%50s %50s\");\n    if (eax <= 1) {\n        goto label_12;\n    }\n    rcx = r14;\n    do {\n        edx = *(rcx);\n        rcx += 4;\n        eax = rdx - 0x1010101;\n        edx = ~edx;\n        eax &= edx;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    edx = eax;\n    edx >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = edx;\n    }\n    rdx = rcx + 2;\n    if ((eax & 0x8080) == 0) {\n        rcx = rdx;\n    }\n    edx = eax;\n    dl += al;\n    rdx = r12;\n    rcx -= 3;\n    rcx -= r14;\n    do {\n        esi = *(rdx);\n        rdx += 4;\n        eax = rsi - 0x1010101;\n        esi = ~esi;\n        eax &= esi;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    esi = eax;\n    *((rsp + 0x10)) = rcx;\n    esi >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = esi;\n    }\n    rsi = rdx + 2;\n    if ((eax & 0x8080) == 0) {\n        rdx = rsi;\n    }\n    esi = eax;\n    sil += al;\n    rdx -= 3;\n    rdx -= r12;\n    rax = rcx + rdx;\n    *((rsp + 0x18)) = rdx;\n    if (*((rsp + 8)) != 0) {\n        goto label_26;\n    }\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    rax = malloc (rax + 3);\n    rcx = *((rsp + 0x10));\n    rdx = *((rsp + 0x18));\nlabel_9:\n    if (rax == 0) {\n        goto label_27;\n    }\n    rdi = *((rsp + 8));\n    rsi = 0xfffffffffffffffe;\n    rsi -= rcx;\n    rcx++;\n    rdi -= rdx;\n    rsi += rdi;\n    rsi += rax;\n    if (ecx >= 8) {\n        goto label_28;\n    }\n    if ((cl & 4) != 0) {\n        goto label_29;\n    }\n    if (ecx != 0) {\n        r9d = *(r14);\n        *(rsi) = r9b;\n        if ((cl & 2) != 0) {\n            goto label_30;\n        }\n    }\nlabel_10:\n    rdx++;\n    rcx = rax + rdi - 1;\n    if (edx >= 8) {\n        goto label_31;\n    }\n    if ((dl & 4) != 0) {\n        goto label_32;\n    }\n    if (edx != 0) {\n        esi = *(r12);\n        *(rcx) = sil;\n        if ((dl & 2) != 0) {\n            goto label_33;\n        }\n    }\nlabel_11:\n    r15 = rax;\n    rax = *((rbx + 8));\n    if (rax < *((rbx + 0x10))) {\n        goto label_4;\n    }\nlabel_24:\n    rdi = rbx;\n    eax = uflow ();\n    edi = eax;\n    if (eax != 0xffffffff) {\n        goto label_5;\n    }\nlabel_12:\n    rax = r13;\n    r13 = rbx;\n    rbx = rax;\n    fcn_0040b800 (rbx);\n    rax = *((rsp + 8));\n    if (rax == 0) {\n        goto label_6;\n    }\n    *((r15 + rax)) = 0;\n    goto label_7;\n    do {\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        eax = *(rax);\n        edx = 1;\nlabel_8:\n        if (eax == 0xa) {\n            goto label_34;\n        }\n        if (dl == 0) {\n            goto label_34;\n        }\nlabel_25:\n        rax = *((rbx + 8));\n    } while (rax < *((rbx + 0x10)));\n    rdi = rbx;\n    eax = uflow ();\n    dl = (eax != 0xffffffff) ? 1 : 0;\n    goto label_8;\nlabel_26:\n    rax += *((rsp + 8));\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    eax = realloc (r15, rax + 3);\n    rdx = *((rsp + 0x18));\n    rcx = *((rsp + 0x10));\n    goto label_9;\nlabel_28:\n    r9 = *(r14);\n    *(rsi) = r9;\n    r9d = ecx;\n    r10 = *((r14 + r9 - 8));\n    *((rsi + r9 - 8)) = r10;\n    r9 = rsi + 8;\n    r10 = r14;\n    r9 &= 0xfffffffffffffff8;\n    rsi -= r9;\n    ecx += esi;\n    r10 -= rsi;\n    ecx &= 0xfffffff8;\n    if (ecx < 8) {\n        goto label_10;\n    }\n    ecx &= 0xfffffff8;\n    esi = 0;\n    do {\n        r8d = esi;\n        esi += 8;\n        r11 = *((r10 + r8));\n        *((r9 + r8)) = r11;\n    } while (esi < ecx);\n    goto label_10;\nlabel_31:\n    rsi = *(r12);\n    r9 = r12;\n    *(rcx) = rsi;\n    esi = edx;\n    rdi = *((r12 + rsi - 8));\n    *((rcx + rsi - 8)) = rdi;\n    rdi = rcx + 8;\n    rdi &= 0xfffffffffffffff8;\n    rcx -= rdi;\n    edx += ecx;\n    r9 -= rcx;\n    edx &= 0xfffffff8;\n    if (edx < 8) {\n        goto label_11;\n    }\n    edx &= 0xfffffff8;\n    ecx = 0;\n    do {\n        esi = ecx;\n        ecx += 8;\n        r8 = *((r9 + rsi));\n        *((rdi + rsi)) = r8;\n    } while (ecx < edx);\n    goto label_11;\nlabel_34:\n    if (eax == 0xffffffff) {\n        goto label_12;\n    }\n    goto label_3;\nlabel_20:\n    if (*((r13 + rax - 1)) == 0x2f) {\n        rdi = rax + 0xe;\n        goto label_13;\nlabel_23:\n        close (r12d);\n        goto label_6;\nlabel_29:\n        r9d = *(r14);\n        *(rsi) = r9d;\n        r9d = *((r14 + rcx - 4));\n        *((rsi + rcx - 4)) = r9d;\n        goto label_10;\nlabel_32:\n        esi = *(r12);\n        *(rcx) = esi;\n        esi = *((r12 + rdx - 4));\n        *((rcx + rdx - 4)) = esi;\n        goto label_11;\nlabel_27:\n        rax = r13;\n        r13 = rbx;\n        r15d = 0x4105e7;\n        rbx = rax;\n        free (r15);\n        fcn_0040b800 (r13);\n        goto label_7;\nlabel_30:\n        r9d = *((r14 + rcx - 2));\n        *((rsi + rcx - 2)) = r9w;\n        goto label_10;\nlabel_33:\n        esi = edx;\n        edx = *((r12 + rsi - 2));\n        *((rcx + rsi - 2)) = dx;\n        goto label_11;\n    }\n    rdi = rax + 0xf;\n    r12++;\n    goto label_14;\n}\n"
        },
        {
            "funcName": "fcn_00409890",
            "funcStartAddr": "0x409890",
            "funcEndAddr": "0x409a13",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x409890 */\n#include <stdint.h>\n \nint64_t fcn_00409890 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_28h;\n    int64_t var_20h;\n    int64_t var_18h;\n    int64_t var_8h;\n    int64_t var_fh;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    rax = rdx;\n    rbx = rdi;\n    rdi = rdx;\n    rax >>= 0x3d;\n    al = (rax != 0) ? 1 : 0;\n    rdi <<= 3;\n    if (rdi < 0) {\n        goto label_5;\n    }\n    eax = (int32_t) al;\n    if (rax != 0) {\n        goto label_5;\n    }\n    if (rdi > 0xfaf) {\n        goto label_6;\n    }\n    rdi += 0x27;\n    rdi &= 0xfffffffffffffff0;\n    rdi = rsp + 0xf;\n    rdi &= 0xfffffffffffffff0;\n    rdi += 0x10;\n    if (rdi == 0) {\n        goto label_5;\n    }\nlabel_1:\n    *((rdi + 8)) = 1;\n    r8d = 0;\n    r9d = 2;\n    if (rdx <= 2) {\n        goto label_7;\n    }\nlabel_0:\n    eax = *((rsi + r9 - 1));\n    if (al != *((rsi + r8))) {\n        goto label_8;\n    }\n    goto label_9;\n    do {\n        r8 -= *((rdi + r8*8));\n        if (*((rsi + r8)) == al) {\n            goto label_9;\n        }\nlabel_8:\n    } while (r8 != 0);\n    *((rdi + r9*8)) = r9;\n    r8d = 0;\nlabel_3:\n    r9++;\n    if (rdx != r9) {\n        goto label_0;\n    }\nlabel_7:\n    *(rcx) = 0;\n    r8d = *(rbx);\n    r9 = rbx;\n    eax = 0;\nlabel_2:\n    if (r8b == 0) {\n        goto label_4;\n    }\n    do {\n        if (*((rsi + rax)) == r8b) {\n            goto label_10;\n        }\n        if (rax == 0) {\n            goto label_11;\n        }\n        r10 = *((rdi + rax*8));\n        rbx += r10;\n        rax -= r10;\n    } while (r8b != 0);\nlabel_4:\n    fcn_0040b990 (rdi);\n    eax = 1;\n    rbx = *((rbp - 8));\n    return rax;\nlabel_6:\n    *((rbp - 0x28)) = rcx;\n    *((rbp - 0x20)) = rdx;\n    *((rbp - 0x18)) = rsi;\n    rax = fcn_0040b920 (rdi);\n    rcx = *((rbp - 0x28));\n    rdx = *((rbp - 0x20));\n    rdi = rax;\n    rsi = *((rbp - 0x18));\n    if (rdi != 0) {\n        goto label_1;\n    }\nlabel_5:\n    eax = 0;\n    rbx = *((rbp - 8));\n    return rax;\nlabel_10:\n    rax++;\n    r10 = r9 + 1;\n    if (rdx != rax) {\n        r8d = *((r9 + 1));\n        r9 = r10;\n        goto label_2;\nlabel_11:\n        r8d = *((r9 + 1));\n        rbx++;\n        r9++;\n        goto label_2;\nlabel_9:\n        r8++;\n        rax = r9;\n        rax -= r8;\n        *((rdi + r9*8)) = rax;\n        goto label_3;\n    }\n    *(rcx) = rbx;\n    goto label_4;\n}\n"
        },
        {
            "funcName": "fcn_00409a20",
            "funcStartAddr": "0x409a20",
            "funcEndAddr": "0x409a3d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x409a20 */\n#include <stdint.h>\n \nvoid fcn_00409a20 (void) {\n    return assert_fail (\"iter->cur.wc == 0\", \"lib/mbuiter.h\", 0xb3, \"mbuiter_multi_next\");\n}\n"
        },
        {
            "funcName": "fcn_00409a40",
            "funcStartAddr": "0x409a40",
            "funcEndAddr": "0x4123f3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x409a40 */\n#include <stdint.h>\n \nuint64_t fcn_00409a40 (mbstate_t * arg1, int64_t arg2, uint32_t arg3) {\n    uint32_t var_110h;\n    mbstate_t * ps;\n    uint32_t var_100h;\n    mbstate_t * var_f8h;\n    uint32_t var_f0h;\n    int64_t var_ech;\n    int64_t var_e4h;\n    char * s;\n    size_t var_d8h;\n    int64_t var_d0h;\n    int64_t var_cch;\n    uint32_t var_b0h;\n    int64_t var_ach;\n    uint32_t var_a4h;\n    char * var_a0h;\n    size_t var_98h;\n    uint32_t var_90h;\n    int64_t var_8ch;\n    uint32_t var_70h;\n    int64_t var_6ch;\n    int64_t var_64h;\n    char * s2;\n    size_t var_58h;\n    uint32_t var_50h;\n    int64_t var_4ch;\n    int64_t var_28h;\n    int64_t var_fh;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\nlabel_3:\n    abort ();\n    rbx = rsi;\n    *((rbp - 0x108)) = rdi;\n    *((rbp - 0x110)) = rdx;\n    rax = fcn_0040ba20 (rsi);\n    edx = 0x38;\n    rcx = rax;\n    *((rbp - 0x100)) = rax;\n    rax = rdx;\n    rdx:rax = rax * rcx;\n    __asm (\"seto dl\");\n    if (rax < 0) {\n        goto label_21;\n    }\n    edx = (int32_t) dl;\n    if (rdx != 0) {\n        goto label_21;\n    }\n    rax = *((rbp - 0x100));\n    rdi = rax*8;\n    rdi -= rax;\n    rdi <<= 3;\n    if (rdi > 0xfaf) {\n        goto label_22;\n    }\n    rdi += 0x27;\n    rdi &= 0xfffffffffffffff0;\n    r12 = rsp + 0xf;\n    r12 &= 0xfffffffffffffff0;\n    r12 += 0x10;\nlabel_7:\n    if (r12 == 0) {\n        goto label_21;\n    }\n    rax = *((rbp - 0x100));\n    *((rbp - 0xe0)) = rbx;\n    rbx = r12;\n    *((rbp - 0xf0)) = 0;\n    r13 = rax * 3;\n    *((rbp - 0xe4)) = 0;\n    *((rbp - 0xec)) = 0;\n    r13 <<= 4;\n    r13 += r12;\n    while (*((rbp - 0xf0)) == 0) {\n        rdx = *((rbp - 0xe0));\n        ecx = *(rdx);\n        eax = ecx;\n        al >>= 5;\n        eax &= 7;\n        eax = *((rax*4 + 0x410680));\n        eax >>= cl;\n        if ((al & 1) == 0) {\n            goto label_23;\n        }\n        *((rbp - 0xd8)) = 1;\n        eax = *(rdx);\n        *((rbp - 0xd0)) = 1;\n        *((rbp - 0xcc)) = eax;\n        r8d = *((rbp - 0xcc));\n        *((rbp - 0xe4)) = 1;\n        if (r8d == 0) {\n            goto label_24;\n        }\nlabel_0:\n        eax = 1;\nlabel_10:\n        rcx = rbp - 0xf0;\n        rsi = *((rbp - 0xe0));\n        rdx = *((rbp - 0xd8));\n        rcx += 0x28;\n        if (rsi == rcx) {\n            goto label_25;\n        }\n        *(rbx) = rsi;\nlabel_9:\n        *((rbx + 8)) = rdx;\n        *((rbx + 0x10)) = al;\n        if (al != 0) {\n            eax = *((rbp - 0xcc));\n            *((rbx + 0x14)) = eax;\n        }\n        *((rbp - 0xe0)) += rdx;\n        rbx += 0x30;\n        *((rbp - 0xe4)) = 0;\n    }\nlabel_8:\n    rax = ctype_get_mb_cur_max ();\n    r14 = *((rbp - 0xe0));\n    rax = fcn_00407340 (r14, rax);\n    rsi = rbp - 0xf0;\n    rax = fcn_00408fc0 (rsi + 0x24, r14, rax, rsi + 4);\n    *((rbp - 0xd8)) = rax;\n    if (rax == -1) {\n        goto label_26;\n    }\n    if (rax == 0xfffffffffffffffe) {\n        goto label_27;\n    }\n    if (rax == 0) {\n        rax = *((rbp - 0xe0));\n        *((rbp - 0xd8)) = 1;\n        if (*(rax) != 0) {\n            goto label_28;\n        }\n        r9d = *((rbp - 0xcc));\n        if (r9d != 0) {\n            goto label_29;\n        }\n    }\n    rax = rbp - 0xf0;\n    *((rbp - 0xd0)) = 1;\n    eax = mbsinit (rax + 4);\n    if (eax != 0) {\n        *((rbp - 0xf0)) = 0;\n    }\n    r8d = *((rbp - 0xcc));\n    *((rbp - 0xe4)) = 1;\n    if (r8d != 0) {\n        goto label_0;\n    }\nlabel_24:\n    r15d = 0;\n    r14 = r12 + 0x30;\n    *((r13 + 8)) = 1;\n    *((rbp - 0xf8)) = 2;\n    if (*((rbp - 0x100)) <= 2) {\n        goto label_30;\n    }\nlabel_2:\n    ebx = *((r14 + 0x10));\n    while (bl != 0) {\n        if (*((rax + 0x10)) == 0) {\n            goto label_31;\n        }\n        eax = *((rax + 0x14));\n        if (*((r14 + 0x14)) == eax) {\n            goto label_32;\n        }\nlabel_1:\n        if (r15 == 0) {\n            goto label_33;\n        }\n        r15 -= *((r13 + r15*8));\n        rax = r15 * 3;\n        rax <<= 4;\n        rax += r12;\n    }\nlabel_31:\n    rdx = *((r14 + 8));\n    if (rdx != *((rax + 8))) {\n        goto label_1;\n    }\n    eax = memcmp (*(r14), *(rax), rdx);\n    if (eax != 0) {\n        goto label_1;\n    }\nlabel_32:\n    rbx = *((rbp - 0xf8));\n    r15++;\n    rax = rbx;\n    rax -= r15;\n    *((r13 + rbx*8)) = rax;\nlabel_19:\n    *((rbp - 0xf8))++;\n    r14 += 0x30;\n    rax = *((rbp - 0xf8));\n    if (*((rbp - 0x100)) != rax) {\n        goto label_2;\n    }\nlabel_30:\n    rax = *((rbp - 0x110));\n    rbx = rbp - 0x70;\n    *((rbp - 0xb0)) = 0;\n    r15d = 0;\n    rbx += 4;\n    *((rbp - 0xa4)) = 0;\n    *(rax) = 0;\n    rax = *((rbp - 0x108));\n    *((rbp - 0x108)) = rbx;\n    rbx = rbp - 0xb0;\n    rbx += 4;\n    *((rbp - 0x70)) = 0;\n    *((rbp - 0xac)) = 0;\n    *((rbp - 0x6c)) = 0;\n    *((rbp - 0x64)) = 0;\n    *((rbp - 0xf8)) = rbx;\n    *((rbp - 0xa0)) = rax;\n    *((rbp - 0x60)) = rax;\n    eax = 0;\nlabel_14:\n    if (al == 0) {\n        goto label_6;\n    }\n    if (*((rbp - 0x50)) != 0) {\n        goto label_11;\n    }\nlabel_17:\n    rax = r15 * 3;\n    rax <<= 4;\n    rax += r12;\nlabel_4:\n    rdx = *((rax + 8));\n    if (rdx == *((rbp - 0x58))) {\n        goto label_34;\n    }\nlabel_5:\n    if (r15 != 0) {\n        goto label_35;\n    }\nlabel_13:\n    if (*((rbp - 0xa4)) != 0) {\n        goto label_36;\n    }\n    if (*((rbp - 0xb0)) != 0) {\n        goto label_37;\n    }\n    rdx = *((rbp - 0xa0));\n    ecx = *(rdx);\n    eax = ecx;\n    al >>= 5;\n    eax &= 7;\n    eax = *((rax*4 + 0x410680));\n    eax >>= cl;\n    if ((al & 1) == 0) {\n        goto label_38;\n    }\n    *((rbp - 0x98)) = 1;\n    eax = *(rdx);\n    *((rbp - 0x90)) = 1;\n    *((rbp - 0x8c)) = eax;\n    *((rbp - 0xa4)) = 1;\nlabel_18:\n    edx = *((rbp - 0x8c));\n    if (edx == 0) {\n        goto label_3;\n    }\nlabel_20:\n    rax = *((rbp - 0x98));\n    *((rbp - 0xa0)) += rax;\n    rax = *((rbp - 0x58));\n    *((rbp - 0x60)) += rax;\n    *((rbp - 0xa4)) = 0;\n    *((rbp - 0x64)) = 0;\nlabel_6:\n    if (*((rbp - 0x70)) != 0) {\n        goto label_39;\n    }\n    rdx = *((rbp - 0x60));\n    ecx = *(rdx);\n    eax = ecx;\n    al >>= 5;\n    eax &= 7;\n    eax = *((rax*4 + 0x410680));\n    eax >>= cl;\n    if ((al & 1) == 0) {\n        goto label_40;\n    }\n    *((rbp - 0x58)) = 1;\n    eax = *(rdx);\n    *((rbp - 0x50)) = 1;\n    *((rbp - 0x4c)) = eax;\n    *((rbp - 0x64)) = 1;\nlabel_11:\n    edx = *((rbp - 0x4c));\n    if (edx == 0) {\n        goto label_41;\n    }\n    rax = r15 * 3;\n    rax <<= 4;\n    rax += r12;\n    if (*((rax + 0x10)) == 0) {\n        goto label_4;\n    }\n    if (*((rax + 0x14)) != edx) {\n        goto label_5;\n    }\nlabel_12:\n    rax = *((rbp - 0x58));\n    r15++;\n    *((rbp - 0x60)) += rax;\n    *((rbp - 0x64)) = 0;\n    if (*((rbp - 0x100)) != r15) {\n        goto label_6;\n    }\n    rax = *((rbp - 0xa0));\n    rbx = *((rbp - 0x110));\n    *(rbx) = rax;\nlabel_41:\n    fcn_0040b990 (r12);\n    rsp = rbp - 0x28;\n    eax = 1;\n    return rax;\nlabel_21:\n    rsp = rbp - 0x28;\n    eax = 0;\n    return rax;\nlabel_22:\n    rax = fcn_0040b920 (rdi);\n    r12 = rax;\n    goto label_7;\nlabel_23:\n    rax = rbp - 0xf0;\n    eax = mbsinit (rax + 4);\n    if (eax == 0) {\n        goto label_42;\n    }\n    *((rbp - 0xf0)) = 1;\n    goto label_8;\nlabel_25:\n    rcx = rbx + 0x18;\n    rax = memcpy (rcx, rsi, rdx);\n    rdx = *((rbp - 0xd8));\n    *(rbx) = rax;\n    eax = *((rbp - 0xd0));\n    goto label_9;\nlabel_26:\n    *((rbp - 0xd8)) = 1;\n    eax = 0;\n    *((rbp - 0xd0)) = 0;\n    *((rbp - 0xe4)) = 1;\n    goto label_10;\nlabel_27:\n    rax = strlen (*((rbp - 0xe0)));\n    *((rbp - 0xd0)) = 0;\n    *((rbp - 0xd8)) = rax;\n    eax = 0;\n    *((rbp - 0xe4)) = 1;\n    goto label_10;\nlabel_40:\n    eax = mbsinit (*((rbp - 0x108)));\n    if (eax == 0) {\n        goto label_42;\n    }\n    *((rbp - 0x70)) = 1;\nlabel_39:\n    rax = ctype_get_mb_cur_max ();\n    rbx = *((rbp - 0x60));\n    rax = fcn_00407340 (rbx, rax);\n    rsi = rbp - 0x70;\n    rax = fcn_00408fc0 (rsi + 0x24, rbx, rax, rsi + 4);\n    *((rbp - 0x58)) = rax;\n    if (rax == -1) {\n        goto label_43;\n    }\n    if (rax == 0xfffffffffffffffe) {\n        goto label_44;\n    }\n    if (rax == 0) {\n        rax = *((rbp - 0x60));\n        *((rbp - 0x58)) = 1;\n        if (*(rax) != 0) {\n            goto label_28;\n        }\n        eax = *((rbp - 0x4c));\n        if (eax != 0) {\n            goto label_29;\n        }\n    }\n    rax = rbp - 0x70;\n    *((rbp - 0x50)) = 1;\n    eax = mbsinit (rax + 4);\n    if (eax != 0) {\n        *((rbp - 0x70)) = 0;\n    }\n    *((rbp - 0x64)) = 1;\n    goto label_11;\nlabel_34:\n    eax = memcmp (*(rax), *((rbp - 0x60)), rdx);\n    if (eax == 0) {\n        goto label_12;\n    }\n    if (r15 == 0) {\n        goto label_13;\n    }\nlabel_35:\n    rbx = *((r13 + r15*8));\n    r14 = r15;\n    eax = *((rbp - 0x64));\n    r14 -= rbx;\n    if (rbx == 0) {\n        goto label_14;\n    }\n    if (*((rbp - 0xa4)) == 0) {\n        goto label_45;\n    }\n    while (esi != 0) {\nlabel_16:\n        rax = *((rbp - 0x98));\n        *((rbp - 0xa4)) = 0;\n        *((rbp - 0xa0)) += rax;\n        rbx--;\n        if (rbx == 0) {\n            goto label_46;\n        }\nlabel_45:\n        if (*((rbp - 0xb0)) != 0) {\n            goto label_47;\n        }\n        rdx = *((rbp - 0xa0));\n        ecx = *(rdx);\n        eax = ecx;\n        al >>= 5;\n        eax &= 7;\n        eax = *((rax*4 + 0x410680));\n        eax >>= cl;\n        if ((al & 1) == 0) {\n            goto label_48;\n        }\n        *((rbp - 0x98)) = 1;\n        eax = *(rdx);\n        *((rbp - 0x90)) = 1;\n        *((rbp - 0x8c)) = eax;\n        *((rbp - 0xa4)) = 1;\nlabel_15:\n        esi = *((rbp - 0x8c));\n    }\n    goto label_3;\nlabel_48:\n    eax = mbsinit (*((rbp - 0xf8)));\n    if (eax == 0) {\n        goto label_42;\n    }\n    *((rbp - 0xb0)) = 1;\nlabel_47:\n    rax = ctype_get_mb_cur_max ();\n    r15 = *((rbp - 0xa0));\n    rax = fcn_00407340 (r15, rax);\n    rsi = rbp - 0xb0;\n    rax = fcn_00408fc0 (rsi + 0x24, r15, rax, rsi + 4);\n    *((rbp - 0x98)) = rax;\n    if (rax != -1) {\n        if (rax == 0xfffffffffffffffe) {\n            goto label_49;\n        }\n        if (rax == 0) {\n            rax = *((rbp - 0xa0));\n            *((rbp - 0x98)) = 1;\n            if (*(rax) != 0) {\n                goto label_28;\n            }\n            edi = *((rbp - 0x8c));\n            if (edi != 0) {\n                goto label_50;\n            }\n        }\n        rax = rbp - 0xb0;\n        *((rbp - 0x90)) = 1;\n        eax = mbsinit (rax + 4);\n        if (eax != 0) {\n            *((rbp - 0xb0)) = 0;\n        }\n        *((rbp - 0xa4)) = 1;\n        goto label_15;\n    }\n    *((rbp - 0x98)) = 1;\n    *((rbp - 0x90)) = 0;\n    goto label_16;\nlabel_49:\n    rax = strlen (*((rbp - 0xa0)));\n    *((rbp - 0x90)) = 0;\n    *((rbp - 0x98)) = rax;\n    goto label_16;\nlabel_46:\n    eax = *((rbp - 0x64));\n    r15 = r14;\n    goto label_14;\nlabel_43:\n    *((rbp - 0x58)) = 1;\n    *((rbp - 0x50)) = 0;\n    *((rbp - 0x64)) = 1;\n    goto label_17;\nlabel_38:\n    eax = mbsinit (*((rbp - 0xf8)));\n    if (eax == 0) {\n        goto label_42;\n    }\n    *((rbp - 0xb0)) = 1;\nlabel_37:\n    rax = ctype_get_mb_cur_max ();\n    rbx = *((rbp - 0xa0));\n    rax = fcn_00407340 (rbx, rax);\n    rsi = rbp - 0xb0;\n    rdi += 0x24;\n    rax = fcn_00408fc0 (rsi, rbx, rax, rsi + 4);\n    *((rbp - 0x98)) = rax;\n    if (rax == -1) {\n        goto label_51;\n    }\n    if (rax == 0xfffffffffffffffe) {\n        goto label_52;\n    }\n    if (rax == 0) {\n        rax = *((rbp - 0xa0));\n        *((rbp - 0x98)) = 1;\n        if (*(rax) != 0) {\n            goto label_28;\n        }\n        ecx = *((rbp - 0x8c));\n        if (ecx != 0) {\n            goto label_29;\n        }\n    }\n    rax = rbp - 0xb0;\n    *((rbp - 0x90)) = 1;\n    eax = mbsinit (rax + 4);\n    if (eax != 0) {\n        *((rbp - 0xb0)) = 0;\n    }\n    *((rbp - 0xa4)) = 1;\n    goto label_18;\nlabel_33:\n    rax = *((rbp - 0xf8));\n    *((r13 + rax*8)) = rax;\n    goto label_19;\nlabel_44:\n    rax = strlen (*((rbp - 0x60)));\n    *((rbp - 0x50)) = 0;\n    *((rbp - 0x58)) = rax;\n    *((rbp - 0x64)) = 1;\n    goto label_17;\nlabel_36:\n    if (*((rbp - 0x90)) == 0) {\n        goto label_20;\n    }\n    goto label_18;\nlabel_51:\n    *((rbp - 0x98)) = 1;\n    *((rbp - 0x90)) = 0;\n    goto label_20;\nlabel_52:\n    rax = strlen (*((rbp - 0xa0)));\n    *((rbp - 0x90)) = 0;\n    *((rbp - 0x98)) = rax;\n    goto label_20;\nlabel_28:\n    assert_fail (\"*iter->cur.ptr == '\\\\0', \"lib/mbuiter.h\", 0xb2, \"mbuiter_multi_next\");\nlabel_42:\n    assert_fail (\"mbsinit (&iter->state)\", \"lib/mbuiter.h\", 0x96, \"mbuiter_multi_next\");\nlabel_29:\n    fcn_00409a20 ();\nlabel_50:\n    return assert_fail (\"iter->cur.wc == 0\", \"lib/mbuiter.h\", 0xb3, \"mbuiter_multi_next\");\n}\n"
        },
        {
            "funcName": "fcn_0040a420",
            "funcStartAddr": "0x40a420",
            "funcEndAddr": "0x413ca6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x40a420 */\n#include <stdint.h>\n \nuint64_t fcn_0040a420 (int64_t arg1, int64_t arg2) {\n    int64_t var_8h;\n    int64_t var_10h;\n    mbstate_t * var_14h;\n    int64_t var_1ch;\n    char * var_20h;\n    size_t var_28h;\n    uint32_t var_30h;\n    int64_t var_34h;\n    uint32_t var_50h;\n    mbstate_t * var_54h;\n    uint32_t var_5ch;\n    char * s;\n    size_t var_68h;\n    uint32_t var_70h;\n    int64_t var_74h;\n    uint32_t var_90h;\n    int64_t var_94h;\n    int64_t var_9ch;\n    char * var_a0h;\n    size_t var_a8h;\n    int64_t var_b0h;\n    uint32_t var_b4h;\n    int64_t var_c0h;\n    uint32_t var_d0h;\n    mbstate_t * var_d4h;\n    uint32_t var_dch;\n    char * s1;\n    size_t var_e8h;\n    uint32_t var_f0h;\n    int64_t var_f4h;\n    int64_t var_100h;\n    uint32_t var_110h;\n    mbstate_t * ps;\n    uint32_t var_11ch;\n    char * s2;\n    size_t var_128h;\n    uint32_t var_130h;\n    uint32_t var_134h;\n    rdi = arg1;\n    rsi = arg2;\nlabel_5:\n    abort ();\n    r13 = rsi;\n    rax = ctype_get_mb_cur_max ();\n    if (rax > 1) {\n        goto label_31;\n    }\n    r15d = *(r13);\n    rax = rbp;\n    if (r15b == 0) {\n        goto label_7;\n    }\n    ecx = *(rbp);\n    if (cl == 0) {\n        goto label_32;\n    }\n    r9 = r13;\n    r12d = 0;\n    edx = 0;\n    r8d = 0;\n    eax = 1;\n    goto label_33;\nlabel_0:\n    if (r9 != 0) {\n        rsi = rbx;\n        rdi = r9;\n        *(rsp) = r9;\n        rsi -= r8;\n        rax = strnlen ();\n        r9 = *(rsp);\n        r8 = rbx;\n        r9 += rax;\n        if (*(r9) != 0) {\n            goto label_34;\n        }\n    }\n    *(rsp) = r8;\n    rax = strlen (r13);\n    al = fcn_00409890 (r14, r13, rax, rsp + 0x110);\n    r8 = *(rsp);\n    if (al != 0) {\n        goto label_35;\n    }\n    r9d = 0;\n    do {\nlabel_1:\n        ecx = *(r14);\n        rdx = rbx;\nlabel_33:\n        r12++;\n        rbx = rdx + 1;\n        r14 = rbp + 1;\n        if (r15b == cl) {\n            goto label_36;\n        }\n        if (*((rbp + 1)) == 0) {\n            goto label_32;\n        }\nlabel_2:\n        dl = (r12 > 9) ? 1 : 0;\n        dl &= al;\n    } while (dl == 0);\n    rax = r12 * 5;\n    if (rbx >= rax) {\n        goto label_0;\n    }\nlabel_34:\n    eax = ebp;\n    goto label_1;\nlabel_31:\n    ecx = *(r13);\n    *((rsp + 0x20)) = r13;\n    rbx = rsp + 0x14;\n    *((rsp + 0x10)) = 0;\n    eax = ecx;\n    *((rsp + 0x1c)) = 0;\n    *((rsp + 0x14)) = 0;\n    al >>= 5;\n    eax &= 7;\n    eax = *((rax*4 + 0x410680));\n    eax >>= cl;\n    if ((al & 1) == 0) {\n        goto label_37;\n    }\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x34)) = ecx;\n    *((rsp + 0x30)) = 1;\n    *((rsp + 0x1c)) = 1;\nlabel_26:\n    eax = *((rsp + 0x34));\n    if (eax != 0) {\n        goto label_29;\n    }\n    do {\nlabel_4:\n        rax = rbp;\nlabel_7:\n        return rax;\nlabel_36:\n        ecx = *((r13 + 1));\n    } while (cl == 0);\n    esi = *(r14);\n    if (sil == 0) {\n        goto label_32;\n    }\n    rbx = rdx + 2;\n    if (cl != sil) {\n        goto label_2;\n    }\n    rdx = -rdx;\n    rdi = r13 + rdx;\n    rdx += rbp;\n    goto label_38;\nlabel_3:\n    esi = *((rdx + rbx));\n    if (sil == 0) {\n        goto label_32;\n    }\n    rbx++;\n    if (cl != sil) {\n        goto label_2;\n    }\nlabel_38:\n    ecx = *((rdi + rbx));\n    if (cl != 0) {\n        goto label_3;\n    }\n    goto label_4;\nlabel_25:\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x30)) = 0;\n    *((rsp + 0x1c)) = 1;\nlabel_29:\n    *((rsp + 0x60)) = r13;\n    r12d = 0;\n    ebx = 0;\n    r14d = 1;\n    *((rsp + 0x50)) = 0;\n    *((rsp + 0x54)) = 0;\n    *((rsp + 0x5c)) = 0;\n    *((rsp + 0xa0)) = rbp;\n    *((rsp + 0x90)) = 0;\n    *((rsp + 0x94)) = 0;\n    *((rsp + 0x9c)) = 0;\n    *((rsp + 8)) = 0;\nlabel_8:\n    r15 = rsp + 0x90;\n    if (*((rsp + 0x90)) != 0) {\n        goto label_39;\n    }\n    rdx = *((rsp + 0xa0));\n    ecx = *(rdx);\n    eax = ecx;\n    al >>= 5;\n    eax &= 7;\n    eax = *((rax*4 + 0x410680));\n    eax >>= cl;\n    if ((al & 1) == 0) {\n        goto label_40;\n    }\n    *((rsp + 0xa8)) = 1;\n    eax = *(rdx);\n    *((rsp + 0xb0)) = 1;\n    *((rsp + 0xb4)) = eax;\n    *((rsp + 0x9c)) = 1;\nlabel_17:\n    r15d = *((rsp + 0xb4));\n    if (r15d == 0) {\n        goto label_32;\n    }\n    al = (r12 > 9) ? 1 : 0;\n    al &= r14b;\n    if (al == 0) {\n        goto label_41;\n    }\n    rdx = r12 * 5;\n    if (rbx >= rdx) {\n        goto label_42;\n    }\n    rbx++;\n    r14d = eax;\nlabel_18:\n    if (*((rsp + 0x30)) == 0) {\n        goto label_19;\n    }\n    eax = *((rsp + 0x34));\n    if (*((rsp + 0xb4)) != eax) {\n        goto label_43;\n    }\nlabel_15:\n    ecx = *(r13);\n    __asm (\"movdqa xmm1, xmmword [rsp + 0xa0]\");\n    *((rsp + 0x120)) = r13;\n    r15 = rsp + 0x114;\n    __asm (\"movdqa xmm0, xmmword [rsp + 0x90]\");\n    *((rsp + 0x110)) = 0;\n    *((rsp + 0xe0)) = xmm1;\n    rax = *((rsp + 0xe8));\n    __asm (\"movdqa xmm2, xmmword [rsp + 0xb0]\");\n    eax = ecx;\n    __asm (\"movdqa xmm3, xmmword [rsp + 0xc0]\");\n    al >>= 5;\n    *((rsp + 0xd0)) = xmm0;\n    eax &= 7;\n    *((rsp + 0xf0)) = xmm2;\n    eax = *((rax*4 + 0x410680));\n    *((rsp + 0x100)) = xmm3;\n    *((rsp + 0xdc)) = 0;\n    eax >>= cl;\n    *((rsp + 0x11c)) = 0;\n    *((rsp + 0x114)) = 0;\n    if ((al & 1) == 0) {\n        goto label_44;\n    }\n    *((rsp + 0x128)) = 1;\n    *((rsp + 0x134)) = ecx;\n    *((rsp + 0x130)) = 1;\n    *((rsp + 0x11c)) = 1;\nlabel_23:\n    esi = *((rsp + 0x134));\n    if (esi == 0) {\n        goto label_5;\n    }\nlabel_27:\n    rax = *((rsp + 0x128));\n    *((rsp + 0x11c)) = 0;\n    rbx++;\n    while (*((rsp + 0x110)) == 0) {\n        rdx = *((rsp + 0x120));\n        ecx = *(rdx);\n        eax = ecx;\n        al >>= 5;\n        eax &= 7;\n        eax = *((rax*4 + 0x410680));\n        eax >>= cl;\n        if ((al & 1) == 0) {\n            goto label_45;\n        }\n        *((rsp + 0x128)) = 1;\n        eax = *(rdx);\n        *((rsp + 0x130)) = 1;\n        *((rsp + 0x134)) = eax;\n        edx = *((rsp + 0x134));\n        *((rsp + 0x11c)) = 1;\n        if (edx == 0) {\n            goto label_46;\n        }\nlabel_6:\n        if (*((rsp + 0xdc)) != 0) {\n            goto label_47;\n        }\n        if (*((rsp + 0xd0)) != 0) {\n            goto label_48;\n        }\n        rdx = *((rsp + 0xe0));\n        ecx = *(rdx);\n        eax = ecx;\n        al >>= 5;\n        eax &= 7;\n        eax = *((rax*4 + 0x410680));\n        eax >>= cl;\n        if ((al & 1) == 0) {\n            goto label_49;\n        }\n        *((rsp + 0xe8)) = 1;\n        eax = *(rdx);\n        *((rsp + 0xf0)) = 1;\n        *((rsp + 0xf4)) = eax;\n        *((rsp + 0xdc)) = 1;\nlabel_11:\n        eax = *((rsp + 0xf4));\n        if (eax == 0) {\n            goto label_32;\n        }\nlabel_9:\n        if (*((rsp + 0x130)) == 0) {\n            goto label_10;\n        }\n        al = (*((rsp + 0x134)) != eax) ? 1 : 0;\nlabel_12:\n        rdx = rbx + 1;\n        if (al != 0) {\n            goto label_43;\n        }\n        rax = *((rsp + 0xe8));\n        rbx = rdx;\n        rax = *((rsp + 0x128));\n        *((rsp + 0xdc)) = 0;\n        *((rsp + 0x11c)) = 0;\n    }\nlabel_13:\n    rax = ctype_get_mb_cur_max ();\n    r15 = *((rsp + 0x120));\n    rax = fcn_00407340 (r15, rax);\n    rsi = rsp + 0x110;\n    rax = fcn_00408fc0 (rsi + 0x24, r15, rax, rsp + 0x114);\n    *((rsp + 0x128)) = rax;\n    if (rax == -1) {\n        goto label_50;\n    }\n    if (rax == 0xfffffffffffffffe) {\n        goto label_51;\n    }\n    if (rax == 0) {\n        rax = *((rsp + 0x120));\n        *((rsp + 0x128)) = 1;\n        if (*(rax) != 0) {\n            goto label_52;\n        }\n        ecx = *((rsp + 0x134));\n        if (ecx != 0) {\n            goto label_53;\n        }\n    }\n    *((rsp + 0x130)) = 1;\n    eax = mbsinit (rsp + 0x114);\n    if (eax != 0) {\n        *((rsp + 0x110)) = 0;\n    }\n    edx = *((rsp + 0x134));\n    *((rsp + 0x11c)) = 1;\n    if (edx != 0) {\n        goto label_6;\n    }\nlabel_46:\n    rax = *((rsp + 0xa0));\n    goto label_7;\n    do {\n        *((rsp + 0xe8)) = 1;\n        *((rsp + 0xf0)) = 0;\n        *((rsp + 0xdc)) = 1;\nlabel_10:\n        rdx = *((rsp + 0xe8));\n        if (rdx == *((rsp + 0x128))) {\n            goto label_54;\n        }\nlabel_43:\n        r15 = *((rsp + 0xa8));\nlabel_14:\n        r12++;\n        *((rsp + 0x9c)) = 0;\n        goto label_8;\nlabel_49:\n        eax = mbsinit (rsp + 0xd4);\n        if (eax == 0) {\n            goto label_55;\n        }\n        *((rsp + 0xd0)) = 1;\nlabel_48:\n        rax = ctype_get_mb_cur_max ();\n        r15 = *((rsp + 0xe0));\n        rax = fcn_00407340 (r15, rax);\n        rsi = rsp + 0xd0;\n        rax = fcn_00408fc0 (rsi + 0x24, r15, rax, rsp + 0xd4);\n        *((rsp + 0xe8)) = rax;\n    } while (rax == -1);\n    if (rax == 0xfffffffffffffffe) {\n        goto label_56;\n    }\n    if (rax == 0) {\n        rax = *((rsp + 0xe0));\n        *((rsp + 0xe8)) = 1;\n        if (*(rax) != 0) {\n            goto label_52;\n        }\n        eax = *((rsp + 0xf4));\n        if (eax != 0) {\n            goto label_53;\n        }\n    }\n    *((rsp + 0xf0)) = 1;\n    eax = mbsinit (rsp + 0xd4);\n    if (eax != 0) {\n        *((rsp + 0xd0)) = 0;\n    }\n    eax = *((rsp + 0xf4));\n    *((rsp + 0xdc)) = 1;\n    if (eax != 0) {\n        goto label_9;\n    }\nlabel_32:\n    eax = 0;\n    goto label_7;\nlabel_47:\n    if (*((rsp + 0xf0)) == 0) {\n        goto label_10;\n    }\n    goto label_11;\nlabel_54:\n    eax = memcmp (*((rsp + 0xe0)), *((rsp + 0x120)), rdx);\n    al = (eax != 0) ? 1 : 0;\n    goto label_12;\nlabel_45:\n    eax = mbsinit (rsp + 0x114);\n    if (eax == 0) {\n        goto label_55;\n    }\n    *((rsp + 0x110)) = 1;\n    goto label_13;\nlabel_16:\n    *((rsp + 0xa8)) = 1;\n    *((rsp + 0xb0)) = 0;\n    *((rsp + 0x9c)) = 1;\nlabel_22:\n    al = (r12 > 9) ? 1 : 0;\n    al &= r14b;\n    if (al == 0) {\n        goto label_57;\n    }\n    rdx = r12 * 5;\n    if (rbx >= rdx) {\n        goto label_42;\n    }\n    rbx++;\n    r14d = eax;\nlabel_19:\n    r15 = *((rsp + 0xa8));\n    if (r15 != *((rsp + 0x28))) {\n        goto label_14;\n    }\n    eax = memcmp (*((rsp + 0xa0)), *((rsp + 0x20)), r15);\n    if (eax != 0) {\n        goto label_14;\n    }\n    goto label_15;\nlabel_50:\n    *((rsp + 0x128)) = 1;\n    *((rsp + 0x130)) = 0;\n    *((rsp + 0x11c)) = 1;\n    goto label_6;\nlabel_40:\n    r15 = rsp + 0x90;\n    eax = mbsinit (r15 + 4);\n    if (eax == 0) {\n        goto label_55;\n    }\n    *((rsp + 0x90)) = 1;\nlabel_39:\n    rax = ctype_get_mb_cur_max ();\n    r8 = *((rsp + 0xa0));\n    rdi = r8;\n    *(rsp) = r8;\n    rax = fcn_00407340 (rdi, rax);\n    r8 = *(rsp);\n    rax = fcn_00408fc0 (r15 + 0x24, r8, rax, r15 + 4);\n    *((rsp + 0xa8)) = rax;\n    if (rax == -1) {\n        goto label_16;\n    }\n    if (rax == 0xfffffffffffffffe) {\n        goto label_58;\n    }\n    if (rax == 0) {\n        rax = *((rsp + 0xa0));\n        *((rsp + 0xa8)) = 1;\n        if (*(rax) != 0) {\n            goto label_52;\n        }\n        eax = *((rsp + 0xb4));\n        if (eax != 0) {\n            goto label_53;\n        }\n    }\n    *((rsp + 0xb0)) = 1;\n    eax = mbsinit (r15 + 4);\n    if (eax != 0) {\n        *((rsp + 0x90)) = 0;\n    }\n    *((rsp + 0x9c)) = 1;\n    goto label_17;\nlabel_51:\n    rax = strlen (*((rsp + 0x120)));\n    *((rsp + 0x130)) = 0;\n    *((rsp + 0x128)) = rax;\n    *((rsp + 0x11c)) = 1;\n    goto label_6;\nlabel_56:\n    rax = strlen (*((rsp + 0xe0)));\n    *((rsp + 0xf0)) = 0;\n    *((rsp + 0xe8)) = rax;\n    *((rsp + 0xdc)) = 1;\n    goto label_10;\nlabel_41:\n    rbx++;\n    goto label_18;\nlabel_57:\n    rbx++;\n    goto label_19;\nlabel_42:\n    eax = *((rsp + 0x5c));\n    r14 = rbx;\n    r14 -= *((rsp + 8));\n    if (r14 == 0) {\n        goto label_59;\n    }\n    if (al == 0) {\n        goto label_60;\n    }\n    while (r10d != 0) {\nlabel_21:\n        rax = *((rsp + 0x68));\n        *((rsp + 0x5c)) = 0;\n        r14--;\n        if (r14 == 0) {\n            goto label_30;\n        }\nlabel_60:\n        if (*((rsp + 0x50)) != 0) {\n            goto label_61;\n        }\n        rdx = *((rsp + 0x60));\n        ecx = *(rdx);\n        eax = ecx;\n        al >>= 5;\n        eax &= 7;\n        eax = *((rax*4 + 0x410680));\n        eax >>= cl;\n        if ((al & 1) == 0) {\n            goto label_62;\n        }\n        *((rsp + 0x68)) = 1;\n        eax = *(rdx);\n        *((rsp + 0x70)) = 1;\n        *((rsp + 0x74)) = eax;\n        *((rsp + 0x5c)) = 1;\nlabel_20:\n        r10d = *((rsp + 0x74));\n    }\n    while (r8d == 0) {\n        eax = fcn_00409a40 (rbp, r13, rsp + 0x110);\n        r14d = eax;\n        if (al != 0) {\n            goto label_35;\n        }\n        edx = *((rsp + 0xb0));\n        goto label_63;\nlabel_62:\n        eax = mbsinit (rsp + 0x54);\n        if (eax == 0) {\n            goto label_55;\n        }\n        *((rsp + 0x50)) = 1;\nlabel_61:\n        rax = ctype_get_mb_cur_max ();\n        r15 = *((rsp + 0x60));\n        rax = fcn_00407340 (r15, rax);\n        rsi = rsp + 0x50;\n        rax = fcn_00408fc0 (rsi + 0x24, r15, rax, rsp + 0x54);\n        *((rsp + 0x68)) = rax;\n        if (rax != -1) {\n            if (rax == 0xfffffffffffffffe) {\n                goto label_64;\n            }\n            if (rax == 0) {\n                *((rsp + 0x68)) = 1;\n                rax = *((rsp + 0x60));\n                if (*(rax) != 0) {\n                    goto label_52;\n                }\n                r11d = *((rsp + 0x74));\n                if (r11d != 0) {\n                    goto label_53;\n                }\n            }\n            *((rsp + 0x70)) = 1;\n            eax = mbsinit (rsp + 0x54);\n            if (eax != 0) {\n                *((rsp + 0x50)) = 0;\n            }\n            *((rsp + 0x5c)) = 1;\n            goto label_20;\n        }\n        *((rsp + 0x68)) = 1;\n        *((rsp + 0x70)) = 0;\n        goto label_21;\nlabel_64:\n        rax = strlen (*((rsp + 0x60)));\n        *((rsp + 0x70)) = 0;\n        *((rsp + 0x68)) = rax;\n        goto label_21;\nlabel_58:\n        rax = strlen (*((rsp + 0xa0)));\n        *((rsp + 0xb0)) = 0;\n        *((rsp + 0xa8)) = rax;\n        *((rsp + 0x9c)) = 1;\n        goto label_22;\nlabel_30:\n        if (*((rsp + 0x50)) != 0) {\n            goto label_65;\n        }\n        rdx = *((rsp + 0x60));\n        ecx = *(rdx);\n        eax = ecx;\n        al >>= 5;\n        eax &= 7;\n        eax = *((rax*4 + 0x410680));\n        eax >>= cl;\n        if ((al & 1) == 0) {\n            goto label_66;\n        }\n        *((rsp + 0x68)) = 1;\n        eax = *(rdx);\n        *((rsp + 0x70)) = 1;\n        *((rsp + 0x74)) = eax;\n        *((rsp + 0x5c)) = 1;\nlabel_24:\n        r8d = *((rsp + 0x74));\n    }\nlabel_28:\n    edx = *((rsp + 0xb0));\n    r14d = 1;\nlabel_63:\n    rax = rbx + 1;\n    *((rsp + 8)) = rbx;\n    rbx = rax;\n    if (dl != 0) {\n        goto label_18;\n    }\n    goto label_19;\nlabel_44:\n    eax = mbsinit (r15);\n    if (eax == 0) {\n        goto label_55;\n    }\n    *((rsp + 0x110)) = 1;\n    rax = ctype_get_mb_cur_max ();\n    r8 = *((rsp + 0x120));\n    rdi = r8;\n    *(rsp) = r8;\n    rax = fcn_00407340 (rdi, rax);\n    r8 = *(rsp);\n    rax = fcn_00408fc0 (rsp + 0x134, r8, rax, r15);\n    *((rsp + 0x128)) = rax;\n    if (rax == -1) {\n        goto label_67;\n    }\n    if (rax == 0xfffffffffffffffe) {\n        goto label_68;\n    }\n    if (rax == 0) {\n        rax = *((rsp + 0x120));\n        *((rsp + 0x128)) = 1;\n        if (*(rax) != 0) {\n            goto label_52;\n        }\n        edi = *((rsp + 0x134));\n        if (edi != 0) {\n            goto label_53;\n        }\n    }\n    *((rsp + 0x130)) = 1;\n    eax = mbsinit (rsp + 0x114);\n    if (eax != 0) {\n        *((rsp + 0x110)) = 0;\n    }\n    *((rsp + 0x11c)) = 1;\n    goto label_23;\nlabel_66:\n    eax = mbsinit (rsp + 0x54);\n    if (eax == 0) {\n        goto label_55;\n    }\n    *((rsp + 0x50)) = 1;\nlabel_65:\n    rax = ctype_get_mb_cur_max ();\n    r14 = *((rsp + 0x60));\n    rax = fcn_00407340 (r14, rax);\n    rsi = rsp + 0x50;\n    rax = fcn_00408fc0 (rsi + 0x24, r14, rax, rsp + 0x54);\n    *((rsp + 0x68)) = rax;\n    if (rax == -1) {\n        goto label_69;\n    }\n    if (rax == 0xfffffffffffffffe) {\n        goto label_70;\n    }\n    if (rax == 0) {\n        *((rsp + 0x68)) = 1;\n        rax = *((rsp + 0x60));\n        if (*(rax) != 0) {\n            goto label_52;\n        }\n        r9d = *((rsp + 0x74));\n        if (r9d != 0) {\n            goto label_53;\n        }\n    }\n    *((rsp + 0x70)) = 1;\n    eax = mbsinit (rsp + 0x54);\n    if (eax != 0) {\n        *((rsp + 0x50)) = 0;\n    }\n    *((rsp + 0x5c)) = 1;\n    goto label_24;\nlabel_37:\n    eax = mbsinit (rbx);\n    if (eax == 0) {\n        goto label_55;\n    }\n    *((rsp + 0x10)) = 1;\n    rax = ctype_get_mb_cur_max ();\n    r12 = *((rsp + 0x20));\n    rax = fcn_00407340 (r12, rax);\n    rax = fcn_00408fc0 (rsp + 0x34, r12, rax, rbx);\n    *((rsp + 0x28)) = rax;\n    if (rax == -1) {\n        goto label_25;\n    }\n    if (rax != 0xfffffffffffffffe) {\n        if (rax == 0) {\n            *((rsp + 0x28)) = 1;\n            rax = *((rsp + 0x20));\n            if (*(rax) != 0) {\n                goto label_52;\n            }\n            eax = *((rsp + 0x34));\n            if (eax == 0) {\n                goto label_71;\n            }\nlabel_53:\n            fcn_00409a20 ();\n        }\nlabel_71:\n        *((rsp + 0x30)) = 1;\n        eax = mbsinit (rsp + 0x14);\n        if (eax != 0) {\n            *((rsp + 0x10)) = 0;\n        }\n        *((rsp + 0x1c)) = 1;\n        goto label_26;\nlabel_67:\n        *((rsp + 0x128)) = 1;\n        *((rsp + 0x130)) = 0;\n        goto label_27;\nlabel_68:\n        rax = strlen (*((rsp + 0x120)));\n        *((rsp + 0x130)) = 0;\n        *((rsp + 0x128)) = rax;\n        goto label_27;\nlabel_70:\n        rax = strlen (*((rsp + 0x60)));\n        *((rsp + 0x70)) = 0;\n        *((rsp + 0x68)) = rax;\n        *((rsp + 0x5c)) = 1;\n        goto label_28;\nlabel_35:\n        rax = *((rsp + 0x110));\n        goto label_7;\n    }\n    rax = strlen (*((rsp + 0x20)));\n    *((rsp + 0x30)) = 0;\n    *((rsp + 0x28)) = rax;\n    *((rsp + 0x1c)) = 1;\n    goto label_29;\nlabel_69:\n    *((rsp + 0x68)) = 1;\n    *((rsp + 0x70)) = 0;\n    *((rsp + 0x5c)) = 1;\n    goto label_28;\nlabel_59:\n    if (al == 0) {\n        goto label_30;\n    }\n    if (*((rsp + 0x70)) == 0) {\n        goto label_28;\n    }\n    goto label_24;\nlabel_55:\n    assert_fail (\"mbsinit (&iter->state)\", \"lib/mbuiter.h\", 0x96, \"mbuiter_multi_next\");\nlabel_52:\n    return assert_fail (\"*iter->cur.ptr == '\\\\0', \"lib/mbuiter.h\", 0xb2, \"mbuiter_multi_next\");\n}\n"
        },
        {
            "funcName": "fcn_0040b2f0",
            "funcStartAddr": "0x40b2f0",
            "funcEndAddr": "0x414dbc",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x40b2f0 */\n#include <stdint.h>\n \nint64_t fcn_0040b2f0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    uint32_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    uint32_t var_40h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\nlabel_1:\n    abort ();\n    r14 = rdi;\n    r13 = rsi;\n    esi = 0;\n    rbx = rdx;\n    edx = 0;\n    *((rsp + 0x18)) = rdi;\n    rdi = rbx;\n    r15 = rsp + 0x40;\n    rbp = rsp + 0x38;\n    *((rsp + 8)) = rcx;\n    ecx = 0;\n    r12 = rsp + 0x30;\n    *((rsp + 0x10)) = r8;\n    r8d = 0;\n    iconv ();\n    *((rsp + 0x20)) = r14;\n    r14d = 0;\n    *((rsp + 0x28)) = r13;\n    if (r13 != 0) {\n        goto label_5;\n    }\n    goto label_6;\n    do {\nlabel_0:\n        rax = *((rsp + 0x30));\n        rax -= r15;\n        r14 += rax;\n        if (*((rsp + 0x28)) == 0) {\n            goto label_6;\n        }\nlabel_5:\n        r8 = rbp;\n        rcx = r12;\n        rdx = rsp + 0x28;\n        rdi = rbx;\n        rsi = rsp + 0x20;\n        *((rsp + 0x30)) = r15;\n        *((rsp + 0x38)) = 0x1000;\n        rax = iconv ();\n    } while (rax != -1);\n    rax = errno_location ();\n    eax = *(rax);\n    if (eax == 7) {\n        goto label_0;\n    }\n    if (eax != 0x16) {\n        goto label_7;\n    }\nlabel_6:\n    edx = 0;\n    esi = 0;\n    r8 = rbp;\n    rcx = r12;\n    rdi = rbx;\n    *((rsp + 0x30)) = r15;\n    *((rsp + 0x38)) = 0x1000;\n    rax = iconv ();\n    if (rax == -1) {\n        goto label_7;\n    }\n    rax = *((rsp + 0x30));\n    rax -= r15;\n    rax += r14;\n    *(rsp) = rax;\n    if (rax == 0) {\n        goto label_8;\n    }\n    rax = *((rsp + 8));\n    r14 = *(rax);\n    if (r14 == 0) {\n        goto label_9;\n    }\n    rax = *((rsp + 0x10));\n    rcx = *(rsp);\n    if (*(rax) < rcx) {\n        goto label_9;\n    }\nlabel_2:\n    r8d = 0;\n    ecx = 0;\n    edx = 0;\n    esi = 0;\n    rdi = rbx;\n    iconv ();\n    rax = *((rsp + 0x18));\n    *((rsp + 0x30)) = r13;\n    *((rsp + 0x38)) = r14;\n    *((rsp + 0x28)) = rax;\n    rax = *(rsp);\n    *((rsp + 0x40)) = rax;\n    while (r13 != 0) {\n        r8 = r15;\n        rcx = rbp;\n        rdx = r12;\n        rdi = rbx;\n        rsi = rsp + 0x28;\n        rax = iconv ();\n        if (rax == -1) {\n            goto label_10;\n        }\n        r13 = *((rsp + 0x30));\n    }\nlabel_4:\n    edx = 0;\n    esi = 0;\n    r8 = r15;\n    rcx = rbp;\n    rdi = rbx;\n    rax = iconv ();\n    if (rax == -1) {\n        goto label_11;\n    }\n    if (*((rsp + 0x40)) != 0) {\n        goto label_1;\n    }\n    rax = *((rsp + 8));\n    rdi = *(rsp);\n    ebx = 0;\n    *(rax) = r14;\n    rax = *((rsp + 0x10));\n    *(rax) = rdi;\nlabel_3:\n    eax = ebx;\n    return rax;\nlabel_9:\n    rax = malloc (*(rsp));\n    r14 = rax;\n    if (rax != 0) {\n        goto label_2;\n    }\n    errno_location ();\n    *(rax) = 0xc;\nlabel_7:\n    ebx = 0xffffffff;\n    goto label_3;\nlabel_8:\n    rax = *((rsp + 0x10));\n    ebx = 0;\n    *(rax) = 0;\n    goto label_3;\nlabel_10:\n    rax = errno_location ();\n    if (*(rax) == 0x16) {\n        goto label_4;\n    }\nlabel_11:\n    rax = *((rsp + 8));\n    ebx = 0xffffffff;\n    if (*(rax) == r14) {\n        goto label_3;\n    }\n    rax = errno_location ();\n    r12d = *(rax);\n    free (r14);\n    *(rbp) = r12d;\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_0040b540",
            "funcStartAddr": "0x40b540",
            "funcEndAddr": "0x40b705",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x40b540 */\n#include <stdint.h>\n \nuint64_t fcn_0040b540 (int64_t arg1, int64_t arg2) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    r14 = rsi;\n    *(rsp) = rdi;\n    rax = strlen (rdi);\n    rbx = rax;\n    *((rsp + 8)) = rax;\n    rbx <<= 4;\n    if (rax >= 0x10000000) {\n        rbx = rax;\n    }\n    r13 = rbx + 1;\n    rax = malloc (r13);\n    r12 = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    r8d = 0;\n    ecx = 0;\n    edx = 0;\n    esi = 0;\n    rdi = r14;\n    iconv ();\n    *((rsp + 0x10)) = r12;\n    *((rsp + 0x18)) = rbx;\n    while (rax == -1) {\n        rax = errno_location ();\n        r15 = rax;\n        eax = *(rax);\n        if (eax == 0x16) {\n            goto label_1;\n        }\n        if (eax != 7) {\n            goto label_2;\n        }\n        rbx = *((rsp + 0x10));\n        rbp = r13 + r13;\n        rbx -= r12;\n        if (r13 >= rbp) {\n            goto label_3;\n        }\n        rax = realloc (r12, rbp);\n        if (rax == 0) {\n            goto label_3;\n        }\n        rdx = rax + rbx;\n        r12 = rax;\n        r13 = rbp;\n        *((rsp + 0x10)) = rdx;\n        rdx = rbp - 1;\n        rdx -= rbx;\n        *((rsp + 0x18)) = rdx;\n        r8 = rsp + 0x18;\n        rcx = rsp + 0x10;\n        rsi = rsp;\n        rdi = r14;\n        rdx = rsp + 8;\n        rax = iconv ();\n    }\n    while (rax == -1) {\n        rax = errno_location ();\n        r15 = rax;\n        if (*(rax) != 7) {\n            goto label_2;\n        }\n        rbx = *((rsp + 0x10));\n        rbp = r13 + r13;\n        rbx -= r12;\n        if (r13 >= rbp) {\n            goto label_3;\n        }\n        rax = realloc (r12, rbp);\n        if (rax == 0) {\n            goto label_3;\n        }\n        rdx = rax + rbx;\n        r13 = rbp;\n        r12 = rax;\n        *((rsp + 0x10)) = rdx;\n        rdx = rbp - 1;\n        rdx -= rbx;\n        *((rsp + 0x18)) = rdx;\nlabel_1:\n        edx = 0;\n        esi = 0;\n        r8 = rsp + 0x18;\n        rdi = r14;\n        rcx = rsp + 0x10;\n        rax = iconv ();\n    }\n    rax = *((rsp + 0x10));\n    rdx = rax + 1;\n    *((rsp + 0x10)) = rdx;\n    *(rax) = 0;\n    rsi = *((rsp + 0x10));\n    rsi -= r12;\n    if (r13 <= rsi) {\n        goto label_4;\n    }\n    rax = realloc (r12, rsi);\n    if (rax != 0) {\n        r12 = rax;\n    }\n    goto label_4;\nlabel_3:\n    *(r15) = 0xc;\nlabel_2:\n    r12d = 0;\n    free (r12);\n    do {\nlabel_4:\n        rax = r12;\n        return rax;\nlabel_0:\n        errno_location ();\n        *(rax) = 0xc;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040b710",
            "funcStartAddr": "0x40b710",
            "funcEndAddr": "0x40b7fc",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x40b710 */\n#include <stdint.h>\n \nuint64_t fcn_0040b710 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rbx = rdi;\n    if (*(rdi) != 0) {\n        r12 = rsi;\n        rsi = rdx;\n        eax = fcn_00409150 (r12, rsi);\n        if (eax != 0) {\n            goto label_1;\n        }\n    }\n    rax = strdup (rbx);\n    rbx = rax;\n    if (rax == 0) {\n        goto label_2;\n    }\n    do {\nlabel_0:\n        rax = rbx;\n        return rax;\nlabel_1:\n        rdi = rbp;\n        rsi = r12;\n        rax = iconv_open ();\n        if (rax == -1) {\n            goto label_3;\n        }\n        rax = fcn_0040b540 (rbx, rax);\n        rbx = rax;\n        if (rax == 0) {\n            goto label_4;\n        }\n        rdi = rbp;\n        eax = iconv_close ();\n    } while (eax >= 0);\n    rax = errno_location ();\n    ebx = 0;\n    r12d = *(rax);\n    free (rbx);\n    *(rbp) = r12d;\n    goto label_0;\nlabel_2:\n    errno_location ();\n    *(rax) = 0xc;\n    rax = rbx;\n    return rax;\nlabel_3:\n    ebx = 0;\n    goto label_0;\nlabel_4:\n    rax = errno_location ();\n    rdi = rbp;\n    r13d = *(rax);\n    r12 = rax;\n    iconv_close ();\n    *(r12) = r13d;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040b800",
            "funcStartAddr": "0x40b800",
            "funcEndAddr": "0x40b87b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x40b800 */\n#include <stdint.h>\n \nuint64_t fcn_0040b800 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    eax = fileno (rdi);\n    rdi = rbx;\n    if (eax < 0) {\n        goto label_1;\n    }\n    eax = freading ();\n    while (rax != -1) {\n        eax = fcn_0040b880 (rbx);\n        if (eax == 0) {\n            goto label_2;\n        }\n        rax = errno_location ();\n        r12d = *(rax);\n        fclose (rbx);\n        if (r12d != 0) {\n            goto label_3;\n        }\nlabel_0:\n        return rax;\n        eax = fileno (rbx);\n        esi = 0;\n        edx = 1;\n        edi = eax;\n        rax = lseek ();\n    }\nlabel_2:\n    rdi = rbx;\nlabel_1:\n    void (*0x401730)() ();\nlabel_3:\n    *(rbp) = r12d;\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040b880",
            "funcStartAddr": "0x40b880",
            "funcEndAddr": "0x40b8c0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x40b880 */\n#include <stdint.h>\n \nuint32_t fcn_0040b880 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    if (rdi != 0) {\n        eax = freading ();\n        if (eax == 0) {\n            goto label_0;\n        }\n        if ((*(rbx) & 0x100) != 0) {\n            goto label_1;\n        }\n    }\nlabel_0:\n    rdi = rbx;\n    void (*0x4018c0)() ();\nlabel_1:\n    fcn_0040b8c0 (rbx, 0, 1);\n    rdi = rbx;\n    return fflush ();\n}\n"
        },
        {
            "funcName": "fcn_0040b8c0",
            "funcStartAddr": "0x40b8c0",
            "funcEndAddr": "0x40b917",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x40b8c0 */\n#include <stdint.h>\n \nint64_t fcn_0040b8c0 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rax = *((rdi + 8));\n    while (*((rdi + 0x28)) != rax) {\nlabel_0:\n        void (*0x401990)() ();\n        rax = *((rdi + 0x20));\n    }\n    if (*((rdi + 0x48)) != 0) {\n        goto label_0;\n    }\n    r12d = edx;\n    rbx = rdi;\n    eax = fileno (rdi);\n    edx = r12d;\n    rsi = rbp;\n    edi = eax;\n    rax = lseek ();\n    if (rax != -1) {\n        *(rbx) &= 0xffffffef;\n        *((rbx + 0x90)) = rax;\n        eax = 0;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040b920",
            "funcStartAddr": "0x40b920",
            "funcEndAddr": "0x40b98c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x40b920 */\n#include <stdint.h>\n \nuint64_t fcn_0040b920 (int64_t arg1) {\n    rdi = arg1;\n    rdi += 0x10;\n    if (rdi >= 0) {\n        rax = malloc (rdi);\n        ecx = 0;\n        rsi = rax;\n        if (rax != 0) {\n            rcx = rax + 0x10;\n            *((rax + 0xc)) = 0x1415fb4a;\n            rdx = 0xff00ff00ff00ff01;\n            rax = rcx;\n            rdx:rax = rax * rdx;\n            rdx >>= 8;\n            rax = rdx;\n            rax <<= 8;\n            rdx += rax;\n            rax = rcx;\n            rax -= rdx;\n            rdx = rax;\n            rax = *((rax*8 + 0x6134c0));\n            *((rdx*8 + 0x6134c0)) = rcx;\n            *(rsi) = rax;\n        }\n        rax = rcx;\n        return rax;\n    }\n    ecx = 0;\n    rax = rcx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040b990",
            "funcStartAddr": "0x40b990",
            "funcEndAddr": "0x40ba16",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x40b990 */\n#include <stdint.h>\n \nint64_t fcn_0040b990 (uint32_t arg1) {\n    rdi = arg1;\n    if (rdi == 0) {\n        goto label_0;\n    }\n    while (rcx == 0) {\nlabel_0:\n        return;\n        rdx = 0xff00ff00ff00ff01;\n        rax = rdi;\n        rdx:rax = rax * rdx;\n        rdx >>= 8;\n        rax = rdx;\n        rax <<= 8;\n        rdx += rax;\n        rax = rdi;\n        rax -= rdx;\n        rcx = *((rax*8 + 0x6134c0));\n    }\n    if (rcx != rdi) {\n        goto label_1;\n    }\n    goto label_2;\n    do {\n        if (rdi == rax) {\n            goto label_3;\n        }\n        rcx = rax;\nlabel_1:\n        rax = *((rcx - 0x10));\n    } while (rax != 0);\n    goto label_0;\nlabel_3:\n    rcx -= 0x10;\n    do {\n        rax = *((rdi - 0x10));\n        rdi -= 0x10;\n        *(rcx) = rax;\n        void (*0x401670)() ();\nlabel_2:\n        rcx = rax*8 + 0x6134c0;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040ba20",
            "funcStartAddr": "0x40ba20",
            "funcEndAddr": "0x40bbec",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x40ba20 */\n#include <stdint.h>\n \nuint64_t fcn_0040ba20 (int64_t arg1) {\n    mbstate_t * ps;\n    int64_t var_ch;\n    char * s;\n    size_t var_18h;\n    int64_t var_20h;\n    int64_t var_24h;\n    rdi = arg1;\n    rbx = rdi;\n    rax = ctype_get_mb_cur_max ();\n    if (rax > 1) {\n        goto label_4;\n    }\n    rax = strlen (rbx);\n    rbx = rax;\n    do {\n        rax = rbx;\n        return rax;\nlabel_4:\n        *((rsp + 0x10)) = rbx;\n        ebx = 0;\n        *(rsp) = 0;\n        *((rsp + 4)) = 0;\n        *((rsp + 0xc)) = 0;\n        goto label_5;\nlabel_0:\n        rdx = *((rsp + 0x10));\n        ecx = *(rdx);\n        eax = ecx;\n        al >>= 5;\n        eax &= 7;\n        eax = *((rax*4 + 0x410680));\n        eax >>= cl;\n        if ((al & 1) == 0) {\n            goto label_6;\n        }\n        *((rsp + 0x18)) = 1;\n        eax = *(rdx);\n        *((rsp + 0x20)) = 1;\n        *((rsp + 0x24)) = eax;\nlabel_1:\n        eax = *((rsp + 0x24));\n    } while (eax == 0);\nlabel_3:\n    rax = *((rsp + 0x18));\n    rbx++;\n    *((rsp + 0xc)) = 0;\nlabel_5:\n    if (*(rsp) == 0) {\n        goto label_0;\n    }\nlabel_2:\n    rax = ctype_get_mb_cur_max ();\n    rbp = *((rsp + 0x10));\n    rax = fcn_00407340 (rbp, rax);\n    rax = fcn_00408fc0 (rsp + 0x24, rbp, rax, rsp + 4);\n    *((rsp + 0x18)) = rax;\n    if (rax == -1) {\n        goto label_7;\n    }\n    if (rax == 0xfffffffffffffffe) {\n        goto label_8;\n    }\n    if (rax == 0) {\n        *((rsp + 0x18)) = 1;\n        rax = *((rsp + 0x10));\n        if (*(rax) != 0) {\n            goto label_9;\n        }\n        edx = *((rsp + 0x24));\n        if (edx != 0) {\n            goto label_10;\n        }\n    }\n    *((rsp + 0x20)) = 1;\n    eax = mbsinit (rsp + 4);\n    if (eax == 0) {\n        goto label_1;\n    }\n    *(rsp) = 0;\n    goto label_1;\nlabel_6:\n    eax = mbsinit (rsp + 4);\n    if (eax != 0) {\n        *(rsp) = 1;\n        goto label_2;\nlabel_7:\n        *((rsp + 0x18)) = 1;\n        *((rsp + 0x20)) = 0;\n        goto label_3;\nlabel_8:\n        rax = strlen (*((rsp + 0x10)));\n        *((rsp + 0x20)) = 0;\n        *((rsp + 0x18)) = rax;\n        goto label_3;\n    }\n    assert_fail (\"mbsinit (&iter->state)\", \"lib/mbuiter.h\", 0x96, \"mbuiter_multi_next\");\nlabel_9:\n    assert_fail (\"*iter->cur.ptr == '\\\\0', \"lib/mbuiter.h\", 0xb2, \"mbuiter_multi_next\");\nlabel_10:\n    return assert_fail (\"iter->cur.wc == 0\", \"lib/mbuiter.h\", 0xb3, \"mbuiter_multi_next\");\n}\n"
        },
        {
            "funcName": "fcn_0040bc60",
            "funcStartAddr": "0x40bc60",
            "funcEndAddr": "0x40bc78",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x40bc60 */\n#include <stdint.h>\n \nint64_t fcn_0040bc60 (void) {\n    rax = 0x613228;\n    edx = 0;\n    if (rax != 0) {\n        rdx = *(rax);\n    }\n    esi = 0;\n    return cxa_atexit ();\n}\n"
        },
        {
            "funcName": "fcn_0040bc78",
            "funcStartAddr": "0x40bc78",
            "funcEndAddr": "0x40bc98",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf @ 0x40bc78 */\n#include <stdint.h>\n \nvoid fcn_0040bc78 (int64_t arg3) {\n    rdx = arg3;\n    ebx = segment.GNU_RELRO;\n    do {\n        rax = *(rbx);\n        if (rax == -1) {\n            goto label_0;\n        }\n        void (*rax)() ();\n        rbx -= 8;\n    } while (1);\nlabel_0:\n}\n"
        }
    ],
    "funcCount": 77
}