{
    "binaryInfo": {
        "isStripped": true,
        "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf"
    },
    "buildInfo": {
        "decompilerName": "radare2",
        "compilerName": "gcc",
        "compilerVersion": "9.4.0",
        "optLevel": "O"
    },
    "funcInfo": [
        {
            "funcName": "main",
            "funcStartAddr": "0x402390",
            "funcEndAddr": "0x4028a0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x402390 */\n#include <stdint.h>\n \nint32_t main (int32_t argc, char ** argv) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_38h;\n    rdi = argc;\n    rsi = argv;\n    r15d = 1;\n    r14d = edi;\n    r13 = rsi;\n    fcn_004072f0 (*(rsi));\n    setlocale (6, 0x4137e7);\n    bindtextdomain (0x4107c7, \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\");\n    textdomain (0x4107c7, rsi);\n    rax = localeconv ();\n    rdi = *(rax);\n    eax = 0x411fe4;\n    if (*(rdi) == 0) {\n        rdi = rax;\n    }\n    ebx = 0;\n    ebp = 0;\n    *(0x00617478) = rdi;\n    rax = strlen (rdi);\n    edi = 0x405530;\n    *(0x00617470) = rax;\n    fcn_00410340 ();\n    *((rsp + 8)) = 0;\n    do {\nlabel_0:\n        r8d = 0;\n        ecx = 0x410e20;\n        edx = \"c:fLt\";\n        rsi = r13;\n        edi = r14d;\n        eax = fcn_0040add0 ();\n        r12d = eax;\n        if (eax == 0xffffffff) {\n            goto label_5;\n        }\n        if (r12d == 0x63) {\n            goto label_6;\n        }\n        if (r12d <= 0x63) {\n            goto label_7;\n        }\n        if (r12d == 0x74) {\n            goto label_8;\n        }\n        if (r12d != 0x80) {\n            goto label_9;\n        }\n        rax = imp.__libc_start_main;\n        *(0x00617480) = r15b;\n        *(0x00617310) = 0x4137e7;\n        *((rsp + 8)) = rax;\n    } while (1);\nlabel_7:\n    if (r12d == 0xffffff7e) {\n        goto label_10;\n    }\n    if (r12d != 0x4c) {\n        goto label_11;\n    }\n    *(0x00617481) = r15b;\n    goto label_0;\nlabel_9:\n    if (r12d == 0x66) {\n        goto label_12;\n    }\n    do {\nlabel_4:\n        eax = fcn_00404870 (1);\nlabel_11:\n    } while (r12d != 0xffffff7d);\n    r9d = 0;\n    r8d = \"Michael Meskes\";\n    eax = 0;\n    rcx = *(str.8.29);\n    fcn_00409420 (*(obj.stdout), \"stat\", \"GNU coreutils\");\n    exit (0);\nlabel_12:\n    goto label_0;\nlabel_8:\n    ebx = 1;\n    goto label_0;\nlabel_6:\n    rax = imp.__libc_start_main;\n    *(0x00617480) = 0;\n    *(0x00617310) = 0x4137e6;\n    *((rsp + 8)) = rax;\n    goto label_0;\nlabel_5:\n    if (*(0x0061739c) == r14d) {\n        goto label_13;\n    }\n    r15 = *((rsp + 8));\n    if (r15 == 0) {\n        goto label_14;\n    }\n    rax = fcn_0040bd00 (r15, 0x4107fa);\n    *((rsp + 0x10)) = r15;\n    if (rax != 0) {\n        rax = getenv (\"QUOTING_STYLE\");\n        rbx = rax;\n        if (rax == 0) {\n            goto label_15;\n        }\n        eax = fcn_00405190 (rax, 0x413240, 0x413200, 4);\n        if (eax < 0) {\n            goto label_16;\n        }\n        rax = (int64_t) eax;\n        fcn_004088b0 (0, *((rax*4 + 0x413200)));\n        *((rsp + 0x10)) = r15;\n    }\nlabel_3:\n    eax = *(0x0061739c);\n    if (r14d <= eax) {\n        goto label_17;\n    }\n    rdx = (int64_t) eax;\n    eax = ~eax;\n    eax += r14d;\n    rbx = r13 + rdx*8;\n    rax += rdx;\n    r15 = r13 + rax*8 + 8;\n    r13d = 1;\n    while (bpl != 0) {\n        if (eax == 0) {\n            goto label_18;\n        }\n        rsi = rsp + 0x20;\n        rdi = r14;\n        eax = statfs ();\n        if (eax != 0) {\n            goto label_19;\n        }\n        esi |= 0xffffffff;\n        eax = fcn_004037b0 (*((rsp + 8)), rsi, r14, 0x402b30, rsp + 0x20);\n        eax ^= 1;\nlabel_1:\n        eax = (int32_t) al;\n        rbx += 8;\n        r13d &= eax;\n        if (r15 == rbx) {\n            goto label_20;\n        }\n        r14 = *(rbx);\n        ecx = 2;\n        edi = 0x4137ca;\n        rsi = r14;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        al = (r15 > rbx) ? 1 : 0;\n        eax = (int32_t) al;\n    }\n    if (eax == 0) {\n        goto label_21;\n    }\n    if (*(0x00617481) == 0) {\n        goto label_22;\n    }\n    rdx = rsp + 0x20;\n    rsi = r14;\n    edi = 1;\n    eax = xstat ();\n    al = (eax != 0) ? 1 : 0;\n    do {\n        esi = r12d;\n        if (al != 0) {\n            goto label_23;\n        }\nlabel_2:\n        edx = *((rsp + 0x38));\n        rdi = *((rsp + 0x10));\n        r8 = rsp + 0x20;\n        ecx = 0x4042e0;\n        edx &= 0xb000;\n        if (edx != 0x2000) {\n            rdi = *((rsp + 8));\n        }\n        eax = fcn_004037b0 (rdi, rsi, r14, rcx, r8);\n        eax ^= 1;\n        goto label_1;\nlabel_18:\n        rax = fcn_00408cc0 (4, r14);\n        edx = 5;\n        r14 = rax;\n        rax = dcgettext (0, \"using %s to denote standard input does not work in file system mode\");\n        rcx = r14;\n        eax = 0;\n        eax = error (0, 0, rax);\n        eax = 0;\n        goto label_1;\nlabel_22:\n        rdx = rsp + 0x20;\n        rsi = r14;\n        edi = 1;\n        eax = lxstat ();\n        al = (eax != 0) ? 1 : 0;\n    } while (1);\nlabel_21:\n    esi = 0;\n    rdx = rsp + 0x20;\n    edi = 1;\n    eax = fxstat ();\n    esi = eax;\n    if (eax == 0) {\n        goto label_2;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"cannot stat standard input\");\n    r14 = rax;\n    rax = errno_location ();\n    eax = 0;\n    eax = error (0, *(rax), r14);\n    eax = 0;\n    goto label_1;\nlabel_17:\n    r13d = 1;\nlabel_20:\n    r13d ^= 1;\n    eax = (int32_t) r13b;\n    return rax;\nlabel_19:\n    rax = fcn_00408cc0 (4, r14);\n    edx = 5;\n    *((rsp + 0x18)) = rax;\n    do {\n        rax = dcgettext (0, \"cannot read file system information for %s\");\n        r14 = rax;\n        rax = errno_location ();\n        rcx = *((rsp + 0x18));\n        eax = 0;\n        eax = error (0, *(rax), r14);\n        eax = 0;\n        goto label_1;\nlabel_23:\n        rax = fcn_00408cc0 (4, r14);\n        edx = 5;\n        esi = \"cannot stat %s\";\n        *((rsp + 0x18)) = rax;\n    } while (1);\nlabel_16:\n    fcn_004088b0 (0, 4);\n    rax = fcn_00408f10 (rbx);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"ignoring invalid value of environment variable QUOTING_STYLE: %s\");\n    rcx = rbx;\n    eax = 0;\n    error (0, 0, rax);\n    rax = *((rsp + 8));\n    *((rsp + 0x10)) = rax;\n    goto label_3;\nlabel_14:\n    r15d = (int32_t) bpl;\n    edx = 0;\n    esi = ebx;\n    rax = fcn_00403e80 (r15d);\n    edx = 1;\n    esi = ebx;\n    *((rsp + 8)) = rax;\n    rax = fcn_00403e80 (r15d);\n    *((rsp + 0x10)) = rax;\n    goto label_3;\nlabel_15:\n    fcn_004088b0 (0, 4);\n    rax = *((rsp + 8));\n    *((rsp + 0x10)) = rax;\n    goto label_3;\nlabel_10:\n    fcn_00404870 (0);\nlabel_13:\n    edx = 5;\n    rax = dcgettext (0, \"missing operand\");\n    eax = 0;\n    error (0, 0, rax);\n    goto label_4;\n}\n"
        },
        {
            "funcName": "fcn_004028cb",
            "funcStartAddr": "0x4028cb",
            "funcEndAddr": "0x4028ea",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x4028cb */\n#include <stdint.h>\n \nint32_t fcn_004028cb (void) {\n    eax = __progname;\n    if (rax != obj.__progname) {\n        eax = 0;\n        if (rax == 0) {\n            goto label_0;\n        }\n        edi = __progname;\n        void (*rax)() ();\n    }\nlabel_0:\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00402921",
            "funcStartAddr": "0x402921",
            "funcEndAddr": "0x402978",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x402921 */\n#include <stdint.h>\n \nint64_t fcn_00402921 (int32_t argc, func fini, func init, func main, func rtld_fini, void * stack_end, char ** ubp_av) {\n    rsi = argc;\n    r8 = fini;\n    rcx = init;\n    rdi = main;\n    r9 = rtld_fini;\n    xmm0 = stack_end;\n    rdx = ubp_av;\n    if (*(0x006173c8) != 0) {\n        goto label_0;\n    }\n    r12d = section..dtors;\n    ebx = 0x616e48;\n    rbx -= section..dtors;\n    rbx >>= 3;\n    rbx--;\n    do {\n        rax = imp.__libc_start_main;\n        if (rax >= rbx) {\n            goto label_1;\n        }\n        rax++;\n        *(0x006173d0) = rax;\n        uint64_t (*r12 + rax*8)() ();\n    } while (1);\nlabel_1:\n    fcn_004028cb ();\n    *(0x006173c8) = 1;\n    return rax;\nlabel_0:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00402978",
            "funcStartAddr": "0x402978",
            "funcEndAddr": "0x402a0b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x402978 */\n#include <stdint.h>\n \nint64_t fcn_00402978 (void) {\n    do {\n        esi = __progname;\n        ecx = 2;\n        rsi -= obj.__progname;\n        rsi >>= 3;\n        rax = rsi;\n        __asm (\"cqo\");\n        rax = rdx:rax / rcx;\n        rdx = rdx:rax % rcx;\n        rsi = rax;\n        if (rax != 0) {\n            eax = 0;\n            if (rax == 0) {\n                goto label_0;\n            }\n            edi = __progname;\n            void (*rax)() ();\n        }\nlabel_0:\n        return rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00402980",
            "funcStartAddr": "0x402980",
            "funcEndAddr": "0x402a27",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x402980 */\n#include <stdint.h>\n \nuint64_t fcn_00402980 (int64_t arg1, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    rdi = arg1;\n    rdx = arg3;\n    rcx = arg4;\n    r15 = rdx;\n    r13 = rdi + rsi;\n    r12 = rdi + 1;\n    rbx = r12;\n    *((rsp + 8)) = rcx;\n    if (r12 < r13) {\n        goto label_0;\n    }\n    goto label_1;\n    do {\n        rax = strchr (r15, r14d);\n        if (rax != 0) {\n            *(r12) = bpl;\n            r12++;\n        }\n        rbx++;\n        if (r13 <= rbx) {\n            goto label_1;\n        }\nlabel_0:\n        r14d = *(rbx);\n        esi = r14d;\n        rax = strchr ('-+ #0I\", esi);\n    } while (rax != 0);\n    if (rbx >= r13) {\n        goto label_1;\n    }\n    r13 -= rbx;\n    while (r13 != rax) {\n        ebp = *((rbx + rax));\n        *((r12 + rax)) = bpl;\n        rax++;\n    }\n    r12 += r13;\nlabel_1:\n    rsi = *((rsp + 8));\n    rdi = r12;\n    return strcpy ();\n}\n"
        },
        {
            "funcName": "fcn_00402a30",
            "funcStartAddr": "0x402a30",
            "funcEndAddr": "0x402a63",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x402a30 */\n#include <stdint.h>\n \nuint32_t fcn_00402a30 (int64_t arg1, int64_t arg3) {\n    rdi = arg1;\n    rdx = arg3;\n    ecx = 0x4103a4;\n    rbx = rdi;\n    eax = fcn_00402980 (rdi, rsi, 0x4103a7);\n    rdx = rbp;\n    rsi = rbx;\n    edi = 1;\n    eax = 0;\n    return printf_chk ();\n}\n"
        },
        {
            "funcName": "fcn_00402a70",
            "funcStartAddr": "0x402a70",
            "funcEndAddr": "0x402aa3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x402a70 */\n#include <stdint.h>\n \nuint32_t fcn_00402a70 (int64_t arg1, int64_t arg3) {\n    rdi = arg1;\n    rdx = arg3;\n    ecx = 0x41209b;\n    rbx = rdi;\n    eax = fcn_00402980 (rdi, rsi, 0x4137ca);\n    rdx = rbp;\n    rsi = rbx;\n    edi = 1;\n    eax = 0;\n    return printf_chk ();\n}\n"
        },
        {
            "funcName": "fcn_00402ab0",
            "funcStartAddr": "0x402ab0",
            "funcEndAddr": "0x402ae3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x402ab0 */\n#include <stdint.h>\n \nuint32_t fcn_00402ab0 (int64_t arg1, int64_t arg3) {\n    rdi = arg1;\n    rdx = arg3;\n    ecx = 0x4103ab;\n    rbx = rdi;\n    eax = fcn_00402980 (rdi, rsi, 0x4103ae);\n    rdx = rbp;\n    rsi = rbx;\n    edi = 1;\n    eax = 0;\n    return printf_chk ();\n}\n"
        },
        {
            "funcName": "fcn_00402af0",
            "funcStartAddr": "0x402af0",
            "funcEndAddr": "0x402b23",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x402af0 */\n#include <stdint.h>\n \nuint32_t fcn_00402af0 (int64_t arg1, int64_t arg3) {\n    rdi = arg1;\n    rdx = arg3;\n    ecx = 0x4103b2;\n    rbx = rdi;\n    eax = fcn_00402980 (rdi, rsi, '-+ 0\");\n    rdx = rbp;\n    rsi = rbx;\n    edi = 1;\n    eax = 0;\n    return printf_chk ();\n}\n"
        },
        {
            "funcName": "fcn_004037b0",
            "funcStartAddr": "0x4037b0",
            "funcEndAddr": "0x403ca0",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x4037b0 */\n#include <stdint.h>\n \nuint64_t fcn_004037b0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5) {\n    int64_t var_3h;\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r14 = rdi;\n    *((rsp + 4)) = esi;\n    *((rsp + 8)) = rdx;\n    *((rsp + 0x10)) = rcx;\n    *((rsp + 0x18)) = r8;\n    strlen (rdi);\n    rax = fcn_00409560 (rax + 3);\n    esi = *(r14);\n    *((rsp + 3)) = 0;\n    rbx = rax;\n    if (sil != 0) {\n        goto label_0;\n    }\n    goto label_6;\n    do {\n        rdi = stdout;\n        rax = *((rdi + 0x28));\n        if (rax >= *((rdi + 0x30))) {\n            goto label_7;\n        }\n        rdx = rax + 1;\n        r14 = r12;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = sil;\nlabel_1:\n        esi = *((rbp + 1));\n        if (sil == 0) {\n            goto label_6;\n        }\nlabel_0:\n        r12 = r14 + 1;\n        if (sil == 0x25) {\n            goto label_8;\n        }\n    } while (sil != 0x5c);\n    if (*(0x00617480) != 0) {\n        ebp = *((r14 + 1));\n        eax = rbp - 0x30;\n        if (al <= 7) {\n            goto label_9;\n        }\n        if (bpl == 0x78) {\n            goto label_10;\n        }\n        if (bpl != 0) {\n            goto label_11;\n        }\n        edx = 5;\n        rax = dcgettext (0, \"warning: backslash at end of format\");\n        eax = 0;\n        error (0, 0, rax);\n    }\n    rdi = stdout;\n    rax = *((rdi + 0x28));\n    if (rax >= *((rdi + 0x30))) {\n        goto label_12;\n    }\n    rdx = rax + 1;\n    r14 = r12;\n    *((rdi + 0x28)) = rdx;\n    *(rax) = 0x5c;\n    esi = *((rbp + 1));\n    if (sil != 0) {\n        goto label_0;\n    }\nlabel_6:\n    free (rbx);\n    rsi = stdout;\n    rdi = *(0x00617310);\n    fputs_unlocked ();\n    eax = *((rsp + 3));\n    return rax;\nlabel_8:\n    strspn (r12, '-+ #0I\");\n    rbp = r14 + rax + 1;\n    rax = strspn (rbp, \"0123456789\");\n    rbp += rax;\n    r15d = *(rbp);\n    if (r15b == 0x2e) {\n        strspn (rbp + 1, \"0123456789\");\n        rbp = rbp + rax + 1;\n        r15d = *(rbp);\n    }\n    rax = rbp;\n    rax -= r12;\n    r13 = rax + 1;\n    r12 = rax;\n    memcpy (rbx, r14, r13);\n    if (r15b != 0) {\n        if (r15b == 0x25) {\n            goto label_13;\n        }\n        edx = (int32_t) r15b;\n        r9 = *((rsp + 0x18));\n        ecx = *((rsp + 4));\n        rsi = r13;\n        r8 = *((rsp + 8));\n        rdi = rbx;\n        rax = *((rsp + 0x10));\n        r14 = rbp + 1;\n        al = void (*rax)() ();\n        goto label_1;\n    }\n    rbp--;\nlabel_13:\n    if (r12 != 0) {\n        goto label_14;\n    }\n    rdi = stdout;\n    r14 = rbp + 1;\n    rax = *((rdi + 0x28));\n    if (rax >= *((rdi + 0x30))) {\n        goto label_15;\n    }\n    rdx = rax + 1;\n    *((rdi + 0x28)) = rdx;\n    *(rax) = 0x25;\n    goto label_1;\nlabel_11:\n    eax = rbp - 0x22;\n    r13d = (int32_t) bpl;\n    if (al <= 0x54) {\n        eax = (int32_t) al;\n        /* switch table (85 cases) at 0x410990 */\nlabel_10:\n        rax = ctype_b_loc ();\n        ecx = *((r14 + 2));\n        rdx = *(rax);\n        rax = rcx;\n        if ((*((rdx + rcx*2 + 1)) & 0x10) != 0) {\n            goto label_16;\n        }\n        r13d = 0x78;\n    }\n    edx = 5;\n    rax = dcgettext (0, \"warning: unrecognized escape '\\\\%c');\n    ecx = r13d;\n    eax = 0;\n    error (0, 0, rax);\nlabel_2:\n    rdi = stdout;\n    r14 += 2;\n    rax = *((rdi + 0x28));\n    if (rax >= *((rdi + 0x30))) {\n        goto label_17;\n    }\n    rdx = rax + 1;\n    *((rdi + 0x28)) = rdx;\n    *(rax) = bpl;\n    goto label_1;\nlabel_9:\n    eax = *((r14 + 2));\n    r10d = (int32_t) bpl;\n    r10d -= 0x30;\n    edx = rax - 0x30;\n    if (dl > 7) {\n        goto label_18;\n    }\n    r10d = rax + r10*8 - 0x30;\n    eax = *((r14 + 3));\n    edx = rax - 0x30;\n    if (dl > 7) {\n        goto label_19;\n    }\n    r10d = rax + r10*8 - 0x30;\n    r14 += 4;\nlabel_5:\n    rdi = stdout;\n    rax = *((rdi + 0x28));\n    if (rax >= *((rdi + 0x30))) {\n        goto label_20;\n    }\n    rdx = rax + 1;\n    *((rdi + 0x28)) = rdx;\n    *(rax) = r10b;\nlabel_4:\n    rbp = r14 - 1;\n    goto label_1;\nlabel_7:\n    eax = overflow ();\n    r14 = r12;\n    goto label_1;\nlabel_16:\n    esi = rax - 0x61;\n    ecx = (int32_t) cl;\n    if (sil <= 5) {\n        goto label_21;\n    }\n    eax -= 0x41;\n    esi = rcx - 0x37;\n    ecx -= 0x30;\n    eax = esi;\n    eax = ecx;\n    while (1) {\n        esi = *((r14 + 3));\n        rbp = r14 + 2;\n        rcx = rsi;\n        if ((*((rdx + rsi*2 + 1)) & 0x10) != 0) {\n            edx = (int32_t) sil;\n            esi = rsi - 0x61;\n            rbp = r14 + 3;\n            eax <<= 4;\n            if (sil > 5) {\n                goto label_22;\n            }\n            edx -= 0x57;\nlabel_3:\n            eax += edx;\n        }\n        rdi = stdout;\n        r14 = rbp + 1;\n        rdx = *((rdi + 0x28));\n        if (rdx >= *((rdi + 0x30))) {\n            goto label_23;\n        }\n        rcx = rdx + 1;\n        *((rdi + 0x28)) = rcx;\n        *(rdx) = al;\n        goto label_1;\nlabel_15:\n        esi = 0x25;\n        overflow ();\n        goto label_1;\nlabel_12:\n        esi = 0x5c;\n        r14 = r12;\n        overflow ();\n        goto label_1;\nlabel_21:\n        eax = rcx - 0x57;\n    }\n    r13d = 7;\n    goto label_2;\n    r13d = 8;\n    goto label_2;\n    r13d = 0x1b;\n    goto label_2;\n    r13d = 0xc;\n    goto label_2;\n    r13d = 0xa;\n    goto label_2;\n    r13d = 0xd;\n    goto label_2;\n    r13d = 9;\n    goto label_2;\n    r13d = 0xb;\n    goto label_2;\nlabel_22:\n    ecx -= 0x41;\n    esi = rdx - 0x37;\n    edx -= 0x30;\n    if (cl <= 5) {\n        edx = esi;\n    }\n    goto label_3;\nlabel_17:\n    esi = (int32_t) r13b;\n    overflow ();\n    goto label_1;\nlabel_20:\n    esi = (int32_t) r10b;\n    al = overflow ();\n    goto label_4;\nlabel_18:\n    r14 += 2;\n    goto label_5;\nlabel_19:\n    r14 += 3;\n    goto label_5;\nlabel_23:\n    esi = (int32_t) al;\n    overflow ();\n    goto label_1;\nlabel_14:\n    *((rbx + r13)) = r15b;\n    *((rbx + r12 + 2)) = 0;\n    rax = fcn_00408f10 (rbx);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"%s: invalid directive\");\n    rcx = rbx;\n    eax = 0;\n    rax = error (1, 0, rax);\n}\n"
        },
        {
            "funcName": "fcn_00403ca0",
            "funcStartAddr": "0x403ca0",
            "funcEndAddr": "0x403d69",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x403ca0 */\n#include <stdint.h>\n \nuint64_t fcn_00403ca0 (int64_t arg1, int64_t arg2) {\n    int64_t var_8h_2;\n    int64_t var_10h_2;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    *(rsp) = rdi;\n    rdi = imp.__libc_start_main;\n    *((rsp + 8)) = rsi;\n    while (1) {\n        rbx = *((rsp + 8));\n        rax = fcn_0040c450 (rdi, rsp, rsp + 0x30);\n        if (rax != 0) {\n            r8 = imp.__libc_start_main;\n            r9d = ebx;\n            rcx = rsp + 0x30;\n            edx = \"%Y-%m-%d %H:%M:%S.%N %z\";\n            fcn_004072d0 (0x6173e0, 0x3d);\n            eax = 0x6173e0;\n            return rax;\n        }\n        rax = fcn_004059c0 (*(rsp), rsp + 0x10, rdx);\n        r9d = ebx;\n        ecx = \"%s.%09d\";\n        edx = 0x3d;\n        r8 = rax;\n        esi = 1;\n        edi = 0x6173e0;\n        eax = 0;\n        sprintf_chk ();\n        eax = 0x6173e0;\n        return rax;\n        rax = getenv (0x4106c6);\n        rax = fcn_0040c170 (rax);\n        rdi = rax;\n        *(0x00617420) = rax;\n    }\n}\n"
        },
        {
            "funcName": "fcn_00403d70",
            "funcStartAddr": "0x403d70",
            "funcEndAddr": "0x403e7d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x403d70 */\n#include <stdint.h>\n \nuint64_t fcn_00403d70 (int64_t arg1) {\n    uint32_t var_8h;\n    int64_t var_90h;\n    int64_t var_98h;\n    rdi = arg1;\n    r12 = rdi;\n    if (*(0x00617430) == 0) {\n        goto label_2;\n    }\nlabel_1:\n    rdx = rsp;\n    rsi = r12;\n    edi = 1;\n    eax = xstat ();\n    if (eax != 0) {\n        goto label_3;\n    }\n    rbx = imp.__libc_start_main;\n    if (rbx != 0) {\n        goto label_4;\n    }\n    goto label_3;\n    do {\nlabel_0:\n        rbx = *((rbx + 0x30));\n        if (rbx == 0) {\n            goto label_3;\n        }\nlabel_4:\n    } while ((*((rbx + 0x28)) & 1) == 0);\n    rbp = *(rbx);\n    if (*(rbp) != 0x2f) {\n        goto label_0;\n    }\n    eax = strcmp (*((rbx + 8)), r12);\n    if (eax != 0) {\n        goto label_0;\n    }\n    rdx = rsp + 0x90;\n    rsi = rbp;\n    edi = 1;\n    eax = xstat ();\n    if (eax != 0) {\n        goto label_0;\n    }\n    rax = *((rsp + 0x98));\n    if (*((rsp + 8)) != rax) {\n        goto label_0;\n    }\n    rax = *((rsp + 0x90));\n    if (*(rsp) != rax) {\n        goto label_0;\n    }\n    rax = *(rbx);\n    goto label_5;\nlabel_3:\n    eax = 0;\nlabel_5:\n    return rax;\nlabel_2:\n    edi = 0;\n    rax = fcn_0040b0c0 ();\n    *(0x00617428) = rax;\n    while (1) {\n        *(0x00617430) = 1;\n        goto label_1;\n        edx = 5;\n        rax = dcgettext (0, \"cannot read table of mounted file systems\");\n        rbx = rax;\n        rax = errno_location ();\n        rcx = rbx;\n        eax = 0;\n        error (0, *(rax), 0x41209a);\n    }\n}\n"
        },
        {
            "funcName": "fcn_00403e80",
            "funcStartAddr": "0x403e80",
            "funcEndAddr": "0x403f85",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x403e80 */\n#include <stdint.h>\n \nuint64_t fcn_00403e80 (int64_t arg3) {\n    rdx = arg3;\n    if (dil != 0) {\n        if (sil != 0) {\n            edi = \"%n %i %l %t %s %S %b %f %a %c %d\\n\";\n            r12 = rbx;\n            void (*0x409790)() ();\n        }\n        edx = 5;\n        rax = dcgettext (0, \"  File: \\\"%n\\\"\\n    ID: %-8i Namelen: %-7l Type: %T\\nBlock size: %-10s Fundamental block size: %S\\nBlocks: Total: %-10b Free: %-10f Available: %a\\nInodes: Total: %-10c Free: %d\\n\");\n        rdi = rax;\n        void (*0x409790)() ();\n    }\n    if (sil != 0) {\n        edi = \"%n %s %b %f %u %g %D %i %h %t %T %X %Y %Z %W %o\\n\";\n        void (*0x409790)() ();\n    }\n    ebx = edx;\n    edx = 5;\n    rax = dcgettext (0, \"  File: %N\\n  Size: %-10s\\tBlocks: %-10b IO Block: %-6o %F\\n\");\n    rax = fcn_00409790 (rax);\n    edx = 5;\n    esi = \"Device: %Dh/%dd\\tInode: %-10i  Links: %-5h Device type: %t,%T\\n\";\n    r12 = rax;\n    if (bl == 0) {\n    }\n    rax = dcgettext (0, \"Device: %Dh/%dd\\tInode: %-10i  Links: %h\\n\");\n    eax = 0;\n    rax = fcn_00409820 (\"%s%s\", r12, rax, rcx, r8, r9);\n    free (r12);\n    edx = 5;\n    rax = dcgettext (0, \"Access: (%04a/%10.10A)  Uid: (%5u/%8U)   Gid: (%5g/%8G)\\n\");\n    eax = 0;\n    rax = fcn_00409820 (\"%s%s\", rbp, rax, rcx, r8, r9);\n    rbx = rax;\n    free (rbp);\n    edx = 5;\n    rax = dcgettext (0, \"Access: %x\\nModify: %y\\nChange: %z\\n Birth: %w\\n\");\n    eax = 0;\n    rax = fcn_00409820 (\"%s%s\", rbx, rax, rcx, r8, r9);\n    free (rbx);\n    rax = rbp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00403f90",
            "funcStartAddr": "0x403f90",
            "funcEndAddr": "0x4042d8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x403f90 */\n#include <stdint.h>\n \nvoid fcn_00403f90 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    long var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r14 = rdi;\n    r13 = rsi;\n    r12 = rdx;\n    *((rsp + 8)) = rdx;\n    rax = fcn_0040aed0 (rdi, 0x2e, rsi);\n    if (rax == 0) {\n        goto label_6;\n    }\n    rcx = rax;\n    r15 = rax;\n    *((r14 + r13)) = 0;\n    eax = *((rax + 1));\n    rcx -= r14;\n    eax -= 0x30;\n    if (eax <= 9) {\n        goto label_7;\n    }\n    eax = *((r15 - 1));\n    ebx = 9;\n    eax -= 0x30;\n    if (eax > 9) {\n        goto label_8;\n    }\nlabel_1:\n    *(r15) = 0;\n    do {\n        r15--;\n        eax = *((r15 - 1));\n        eax -= 0x30;\n    } while (eax <= 9);\n    *((rsp + 0x18)) = rcx;\n    rax = strtol (r15, 0, 0xa);\n    edx = 0x7fffffff;\n    rcx = *((rsp + 0x18));\n    if (rax > 0x7fffffff) {\n        rax = rdx;\n    }\n    r13 = rcx;\n    *((rsp + 0x10)) = eax;\n    if (eax <= 1) {\n        goto label_5;\n    }\n    edx = 0;\n    rcx = (int64_t) eax;\n    dl = (*(r15) == 0x30) ? 1 : 0;\n    r15 += rdx;\n    rdx = imp.__libc_start_main;\n    r13 = r15;\n    r13 -= r14;\n    if (rcx <= rdx) {\n        goto label_5;\n    }\n    eax -= edx;\n    if (eax <= 1) {\n        goto label_5;\n    }\n    eax -= ebx;\n    if (eax <= 1) {\n        goto label_5;\n    }\n    rdi = r14;\n    if (r14 >= r15) {\n        goto label_9;\n    }\n    rdx = r14;\n    esi = 0;\n    while (cl != 0x2d) {\n        *(rdi) = cl;\n        rdi++;\nlabel_0:\n        rdx++;\n        if (r15 == rdx) {\n            goto label_10;\n        }\n        ecx = *(rdx);\n    }\n    esi = 1;\n    goto label_0;\nlabel_7:\n    *((rsp + 0x10)) = rcx;\n    rax = strtol (r15 + 1, 0, 0xa);\n    edx = 0x7fffffff;\n    rcx = *((rsp + 0x10));\n    if (rax > 0x7fffffff) {\n        rax = rdx;\n    }\n    ebx = eax;\n    if (eax == 0) {\n        goto label_11;\n    }\n    eax = *((r15 - 1));\n    eax -= 0x30;\n    if (eax <= 9) {\n        goto label_1;\n    }\n    *((rsp + 0x10)) = 0;\n    r13 = rcx;\nlabel_5:\n    if (ebx > 8) {\n        goto label_12;\n    }\nlabel_2:\n    esi = ebx;\n    ecx = 1;\n    do {\n        ecx = rcx * 5;\n        esi++;\n        ecx += ecx;\n    } while (esi != 9);\n    rax = rbp;\n    rsi = (int64_t) ecx;\n    __asm (\"cqo\");\n    rax = rdx:rax / rsi;\n    rdx = rdx:rax % rsi;\n    r15 = rax;\nlabel_4:\n    if (r12 >= 0) {\n        goto label_13;\n    }\n    while (r12 != 0) {\nlabel_13:\n        rdx = *((rsp + 8));\n        eax = fcn_00402af0 (r14, r13);\nlabel_3:\n        if (ebx != 0) {\n            ecx = 9;\n            edx = 0;\n            edi = *((rsp + 0x10));\n            if (ebx <= 9) {\n                ecx = ebx;\n            }\n            ebx -= ecx;\n            __asm (\"cmovs eax, edx\");\n            r9d = 0;\n            if (eax < edi) {\n                r13d = edi;\n                r13d -= eax;\n                rax = imp.__libc_start_main;\n                rdx = (int64_t) r13d;\n                esi = rcx + rax;\n                r13d -= esi;\n                if (rdx <= rax) {\n                    r9d = r13d;\n                    goto label_14;\n                }\n            }\nlabel_14:\n            rdx = imp.__libc_start_main;\n            r8d = r15d;\n            eax = 0;\n            esi = \"%s%.*d%-*.*d\";\n            edi = 1;\n            printf_chk ();\n        }\n        return;\nlabel_6:\n        *((rsp + 0x10)) = 0;\n        ebx = 0;\n        goto label_2;\n        eax = 0x3b9aca00;\n        edx:eax = (int64_t) eax;\n        eax = edx:eax / ecx;\n        edx = edx:eax % ecx;\n        eax -= r15d;\n        r15d = eax;\n        rax = rbp;\n        __asm (\"cqo\");\n        rax = rdx:rax / rsi;\n        rdx = rdx:rax % rsi;\n        eax = 0;\n        al = (rdx != 0) ? 1 : 0;\n        r15d -= eax;\n        al = (r15d != 0) ? 1 : 0;\n        eax = (int32_t) al;\n        r12 += rax;\n        *((rsp + 8)) = r12;\n    }\n    ecx = 0x4106ee;\n    fcn_00402980 (r14, r13, '-+ 0\");\n    xmm0 = *(0x00411fa0);\n    rsi = r14;\n    edi = 1;\n    eax = 1;\n    eax = printf_chk ();\n    goto label_3;\nlabel_11:\n    *((rsp + 0x10)) = 0;\n    r13 = rcx;\n    goto label_2;\nlabel_8:\n    r13 = rcx;\n    r15 = rbp;\n    esi = 1;\n    *((rsp + 0x10)) = 0;\n    ecx = 1;\n    goto label_4;\nlabel_10:\n    r13 = rdi;\n    r13 -= r14;\n    if (sil != 0) {\n        goto label_5;\n    }\n    do {\n        r8d = eax;\n        ecx = 0x41213d;\n        rdx = 0xffffffffffffffff;\n        eax = 0;\n        esi = 1;\n        rax = sprintf_chk ();\n        rax = (int64_t) eax;\n        r13 += rax;\n        goto label_5;\nlabel_9:\n        r13d = 0;\n    } while (1);\nlabel_12:\n    r15 = rbp;\n    esi = 1;\n    ecx = 1;\n    goto label_4;\n}\n"
        },
        {
            "funcName": "fcn_00404870",
            "funcStartAddr": "0x404870",
            "funcEndAddr": "0x404d0d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x404870 */\n#include <stdint.h>\n \nuint64_t fcn_00404870 (int64_t arg1) {\n    char * var_8h;\n    int64_t var_10h;\n    char * var_18h;\n    char * var_20h;\n    char * var_28h;\n    char * var_30h;\n    char * var_38h;\n    char * var_40h;\n    char * var_48h;\n    char * var_50h;\n    char * var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    rdi = arg1;\n    edx = 5;\n    ebx = edi;\n    rbp = imp.__libc_start_main;\n    if (edi != 0) {\n        rax = dcgettext (0, \"Try '%s --help' for more information.\\n\");\n        rdi = stderr;\n        rcx = rbp;\n        esi = 1;\n        rdx = rax;\n        eax = 0;\n        fprintf_chk ();\nlabel_0:\n        exit (ebx);\n    }\n    rax = dcgettext (0, \"Usage: %s [OPTION]... FILE...\\n\");\n    rdx = rbp;\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"Display file or file system status.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nMandatory arguments to long options are mandatory for short options too.\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -L, --dereference     follow links\\n  -f, --file-system     display file system status instead of file status\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  -c  --format=FORMAT   use the specified FORMAT instead of the default;\\n                          output a newline after each use of FORMAT\\n      --printf=FORMAT   like --format, but interpret backslash escapes,\\n                          and do not output a mandatory trailing newline;\\n                          if you want a newline, include \\\\n in FORMAT\\n  -t, --terse           print the information in terse form\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --help     display this help and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"      --version  output version information and exit\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"\\nThe valid format sequences for files (without --file-system):\\n\\n  %a   access rights in octal (note '#' and '0' printf flags)\\n  %A   access rights in human readable form\\n  %b   number of blocks allocated (see %B)\\n  %B   the size in bytes of each block reported by %b\\n  %C   SELinux security context string\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  %d   device number in decimal\\n  %D   device number in hex\\n  %f   raw mode in hex\\n  %F   file type\\n  %g   group ID of owner\\n  %G   group name of owner\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  %h   number of hard links\\n  %i   inode number\\n  %m   mount point\\n  %n   file name\\n  %N   quoted file name with dereference if symbolic link\\n  %o   optimal I/O transfer size hint\\n  %s   total size, in bytes\\n  %t   major device type in hex, for character/block device special files\\n  %T   minor device type in hex, for character/block device special files\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"  %u   user ID of owner\\n  %U   user name of owner\\n  %w   time of file birth, human-readable; - if unknown\\n  %W   time of file birth, seconds since Epoch; 0 if unknown\\n  %x   time of last access, human-readable\\n  %X   time of last access, seconds since Epoch\\n  %y   time of last data modification, human-readable\\n  %Y   time of last data modification, seconds since Epoch\\n  %z   time of last status change, human-readable\\n  %Z   time of last status change, seconds since Epoch\\n\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    rbp = stdout;\n    edx = 5;\n    rax = dcgettext (0, \"Valid format sequences for file systems:\\n\\n  %a   free blocks available to non-superuser\\n  %b   total data blocks in file system\\n  %c   total file nodes in file system\\n  %d   free file nodes in file system\\n  %f   free blocks in file system\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    edx = 5;\n    rbp = stdout;\n    rax = dcgettext (0, \"  %i   file system ID in hex\\n  %l   maximum length of filenames\\n  %n   file name\\n  %s   block size (for faster transfers)\\n  %S   fundamental block size (for block counts)\\n  %t   file system type in hex\\n  %T   file system type in human readable form\\n\");\n    rsi = rbp;\n    rdi = rax;\n    fputs_unlocked ();\n    edx = 5;\n    rax = dcgettext (0, \"\\n--terse is equivalent to the following FORMAT:\\n    %s\");\n    edx = \"%n %s %b %f %u %g %D %i %h %t %T %X %Y %Z %W %o\\n\";\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    edx = 5;\n    rax = dcgettext (0, \"--terse --file-system is equivalent to the following FORMAT:\\n    %s\");\n    edx = \"%n %i %l %t %s %S %b %f %a %c %d\\n\";\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    edx = 5;\n    rax = dcgettext (0, \"\\nNOTE: your shell may have its own version of %s, which usually supersedes\\nthe version described here.  Please refer to your shell's documentation\\nfor details about the options it supports.\\n\");\n    edx = \"stat\";\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    *(rsp) = 0x41074d;\n    rax = rsp;\n    *((rsp + 8)) = \"test invocation\";\n    *((rsp + 0x10)) = 0x4107c7;\n    *((rsp + 0x18)) = \"Multi-call invocation\";\n    *((rsp + 0x20)) = \"sha224sum\";\n    *((rsp + 0x28)) = \"sha2 utilities\";\n    *((rsp + 0x30)) = \"sha256sum\";\n    *((rsp + 0x38)) = \"sha2 utilities\";\n    *((rsp + 0x40)) = \"sha384sum\";\n    *((rsp + 0x48)) = \"sha2 utilities\";\n    *((rsp + 0x50)) = \"sha512sum\";\n    *((rsp + 0x58)) = \"sha2 utilities\";\n    *((rsp + 0x60)) = 0;\n    *((rsp + 0x68)) = 0;\n    do {\n        rax += 0x10;\n        rdi = *(rax);\n        if (rdi == 0) {\n            goto label_2;\n        }\n        esi = \"stat\";\n        ecx = 5;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        dl = (rdi > 0) ? 1 : 0;\n    } while (dl != 0);\nlabel_2:\n    rbp = *((rax + 8));\n    edx = 5;\n    esi = \"\\n%s online help: <%s>\\n\";\n    edi = 0;\n    if (rbp == 0) {\n        goto label_3;\n    }\n    rax = dcgettext (rdi, rsi);\n    edi = 1;\n    ecx = \"https://www.gnu.org/software/coreutils/\";\n    edx = \"GNU coreutils\";\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    rax = setlocale (5, 0);\n    if (rax != 0) {\n        eax = strncmp (rax, 0x4107d1, 3);\n        if (eax != 0) {\n            goto label_4;\n        }\n    }\nlabel_1:\n    edx = 5;\n    r12d = 0x410769;\n    rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n    ecx = \"stat\";\n    edx = \"https://www.gnu.org/software/coreutils/\";\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    ecx = 0x4137e7;\n    r12 = rcx;\n    while (1) {\n        edx = 5;\n        rax = dcgettext (0, \"or available locally via: info '(coreutils) %s%s'\\n\");\n        rcx = r12;\n        rdx = rbp;\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        goto label_0;\nlabel_3:\n        rax = dcgettext (rdi, rsi);\n        edi = 1;\n        ecx = \"https://www.gnu.org/software/coreutils/\";\n        edx = \"GNU coreutils\";\n        rsi = rax;\n        eax = 0;\n        printf_chk ();\n        rax = setlocale (5, 0);\n        if (rax != 0) {\n            eax = strncmp (rax, 0x4107d1, 3);\n            if (eax != 0) {\n                goto label_5;\n            }\n        }\n        edx = 5;\n        rax = dcgettext (0, \"Full documentation at: <%s%s>\\n\");\n        ecx = \"stat\";\n        edx = \"https://www.gnu.org/software/coreutils/\";\n        edi = 1;\n        rsi = rax;\n        eax = 0;\n        r12d = 0x410769;\n        printf_chk ();\n    }\nlabel_5:\nlabel_4:\n    edx = 5;\n    rax = dcgettext (0, \"Report %s translation bugs to <https://translationproject.org/team/>\\n\");\n    edx = \"stat\";\n    edi = 1;\n    rsi = rax;\n    eax = 0;\n    printf_chk ();\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_00404d10",
            "funcStartAddr": "0x404d10",
            "funcEndAddr": "0x405090",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x404d10 */\n#include <stdint.h>\n \nuint64_t fcn_00404d10 (int64_t arg1, int64_t arg2) {\n    int64_t var_150h;\n    int64_t var_140h;\n    int64_t var_138h;\n    int64_t var_130h;\n    int64_t var_120h;\n    int64_t var_110h;\n    int64_t var_100h;\n    int64_t var_f0h;\n    int64_t var_e0h;\n    int64_t var_d0h;\n    int64_t var_c0h;\n    uint32_t var_b0h;\n    uint32_t var_a8h;\n    int64_t var_a0h;\n    int64_t var_90h;\n    int64_t var_80h;\n    int64_t var_70h;\n    int64_t var_60h;\n    int64_t var_50h;\n    int64_t var_40h;\n    int64_t var_30h;\n    int64_t var_20h;\n    void * s1;\n    rdi = arg1;\n    rsi = arg2;\n    r14 = rdi;\n    rbx = rsi;\n    eax = fcn_00408f30 (rbp - 0x150);\n    r13d = eax;\n    rax = errno_location ();\n    r12 = rax;\n    if (r13d != 0) {\n        goto label_3;\n    }\n    eax = *((rbx + 0x18));\n    eax &= 0xf000;\n    if (eax == 0x4000) {\n        goto label_4;\n    }\n    rdi = r14;\n    rax = fcn_004055d0 ();\n    rdi = rax;\n    rbx = rax;\n    rax = strlen (rdi);\n    rax += 0x18;\n    rax &= 0xfffffffffffffff0;\n    rdi &= 0xfffffffffffffff0;\n    rax = memcpy (rsp + 0xf, rbx, rax + 1);\n    r13 = rax;\n    free (rbx);\n    rdi = r13;\n    eax = chdir ();\n    if (eax < 0) {\n        goto label_5;\n    }\n    rdx = rbp - 0x140;\n    esi = 0x411fe4;\n    edi = 1;\n    eax = xstat ();\n    if (eax >= 0) {\n        goto label_0;\n    }\n    rax = fcn_00408cc0 (4, r13);\n    edx = 5;\n    rbx = rax;\n    rax = dcgettext (0, \"cannot stat current directory (now %s)\");\n    rcx = rbx;\n    eax = 0;\n    ebx = 0;\n    error (0, *(r12), rax);\n    goto label_6;\n    do {\n        rax = *((rbp - 0x140));\n        if (*((rbp - 0xb0)) != rax) {\n            goto label_7;\n        }\n        rax = *((rbp - 0x138));\n        if (*((rbp - 0xa8)) == rax) {\n            goto label_7;\n        }\n        edi = 0x411fe3;\n        eax = chdir ();\n        if (eax < 0) {\n            goto label_8;\n        }\n        __asm (\"movdqa xmm0, xmmword [rbp - 0xb0]\");\n        __asm (\"movdqa xmm1, xmmword [rbp - 0xa0]\");\n        __asm (\"movdqa xmm2, xmmword [rbp - 0x90]\");\n        __asm (\"movdqa xmm3, xmmword [rbp - 0x80]\");\n        *((rbp - 0x140)) = xmm0;\n        __asm (\"movdqa xmm4, xmmword [rbp - 0x70]\");\n        __asm (\"movdqa xmm5, xmmword [rbp - 0x60]\");\n        __asm (\"movdqa xmm6, xmmword [rbp - 0x50]\");\n        __asm (\"movdqa xmm7, xmmword [rbp - 0x40]\");\n        *((rbp - 0x130)) = xmm1;\n        __asm (\"movdqa xmm0, xmmword [rbp - 0x30]\");\n        *((rbp - 0x120)) = xmm2;\n        *((rbp - 0x110)) = xmm3;\n        *((rbp - 0x100)) = xmm4;\n        *((rbp - 0xf0)) = xmm5;\n        *((rbp - 0xe0)) = xmm6;\n        *((rbp - 0xd0)) = xmm7;\n        *((rbp - 0xc0)) = xmm0;\nlabel_0:\n        rdx = rbp - 0xb0;\n        esi = 0x411fe3;\n        edi = 1;\n        eax = xstat ();\n    } while (eax >= 0);\n    rax = fcn_00408cc0 (4, 0x411fe3);\n    edx = 5;\n    rbx = rax;\nlabel_2:\n    rax = dcgettext (0, \"cannot stat %s\");\n    rcx = rbx;\n    eax = 0;\n    ebx = 0;\n    error (0, *(r12), rax);\n    goto label_6;\nlabel_7:\n    rax = fcn_004097f0 ();\n    rbx = rax;\nlabel_6:\n    r13d = *(r12);\n    eax = fcn_00408f80 (rbp - 0x150);\n    if (eax != 0) {\n        goto label_9;\n    }\n    fcn_00408fa0 (rbp - 0x150);\n    *(r12) = r13d;\nlabel_1:\n    rsp = rbp - 0x20;\n    rax = rbx;\n    return rax;\nlabel_4:\n    __asm (\"movdqu xmm1, xmmword [rbx]\");\n    __asm (\"movdqu xmm2, xmmword [rbx + 0x10]\");\n    rdi = r14;\n    __asm (\"movdqu xmm3, xmmword [rbx + 0x20]\");\n    __asm (\"movdqu xmm4, xmmword [rbx + 0x30]\");\n    *((rbp - 0x140)) = xmm1;\n    __asm (\"movdqu xmm5, xmmword [rbx + 0x40]\");\n    __asm (\"movdqu xmm6, xmmword [rbx + 0x50]\");\n    *((rbp - 0x130)) = xmm2;\n    __asm (\"movdqu xmm7, xmmword [rbx + 0x60]\");\n    __asm (\"movdqu xmm1, xmmword [rbx + 0x70]\");\n    __asm (\"movdqu xmm2, xmmword [rbx + 0x80]\");\n    *((rbp - 0x120)) = xmm3;\n    *((rbp - 0x110)) = xmm4;\n    *((rbp - 0x100)) = xmm5;\n    *((rbp - 0xf0)) = xmm6;\n    *((rbp - 0xe0)) = xmm7;\n    *((rbp - 0xd0)) = xmm1;\n    *((rbp - 0xc0)) = xmm2;\n    eax = chdir ();\n    rsi = r14;\n    if (eax >= 0) {\n        goto label_0;\n    }\n    do {\n        rax = fcn_00408cc0 (4, rsi);\n        edx = 5;\n        rbx = rax;\n        rax = dcgettext (0, \"cannot change to directory %s\");\n        rcx = rbx;\n        eax = 0;\n        ebx = 0;\n        error (0, *(r12), rax);\n        goto label_1;\nlabel_8:\n        rax = fcn_00408cc0 (4, 0x411fe3);\n        edx = 5;\n        esi = \"cannot change to directory %s\";\n        rbx = rax;\n        goto label_2;\nlabel_3:\n        edx = 5;\n        ebx = 0;\n        rax = dcgettext (0, 0x411fa8);\n        eax = 0;\n        error (0, *(r12), rax);\n        goto label_1;\nlabel_5:\n        rsi = r13;\n    } while (1);\nlabel_9:\n    edx = 5;\n    rax = dcgettext (0, \"failed to return to initial working directory\");\n    eax = 0;\n    rax = error (1, *(r12), rax);\n}\n"
        },
        {
            "funcName": "fcn_00405090",
            "funcStartAddr": "0x405090",
            "funcEndAddr": "0x40517f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x405090 */\n#include <stdint.h>\n \nuint64_t fcn_00405090 (int64_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    eax = 0x401;\n    r15 = 0x7ffffffffffffffe;\n    r14 = 0x3fffffffffffffff;\n    r13 = rdi;\n    rbx = rsi + 1;\n    if (rsi >= 0x401) {\n        rbx = rax;\n    }\nlabel_0:\n    rax = malloc (rbx);\n    if (rax == 0) {\n        goto label_2;\n    }\n    do {\n        rdx = rbx;\n        rsi = rax;\n        rdi = r13;\n        rax = readlink ();\n        r12 = rax;\n        if (rax < 0) {\n            goto label_3;\n        }\nlabel_1:\n        if (rbx > r12) {\n            goto label_4;\n        }\n        free (rbp);\n        if (rbx > r14) {\n            goto label_5;\n        }\n        rbx += rbx;\n        rax = malloc (rbx);\n    } while (rax != 0);\nlabel_2:\n    rax = rbp;\n    return rax;\nlabel_5:\n    if (rbx > r15) {\n        goto label_6;\n    }\n    rbx = 0x7fffffffffffffff;\n    goto label_0;\nlabel_3:\n    rax = errno_location ();\n    if (*(rax) == 0x22) {\n        goto label_1;\n    }\n    ebp = 0;\n    free (rbp);\n    goto label_2;\nlabel_4:\n    *((rbp + r12)) = 0;\n    goto label_2;\nlabel_6:\n    errno_location ();\n    ebp = 0;\n    *(rax) = 0xc;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_00405190",
            "funcStartAddr": "0x405190",
            "funcEndAddr": "0x4052a6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x405190 */\n#include <stdint.h>\n \nuint64_t fcn_00405190 (char * arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    char * s2;\n    uint32_t var_17h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r15 = rsi;\n    r13 = rcx;\n    *((rsp + 8)) = rdi;\n    *((rsp + 0x18)) = rdx;\n    rax = strlen (rdi);\n    r14 = *(r15);\n    *(rsp) = 0xffffffffffffffff;\n    if (r14 == 0) {\n        goto label_3;\n    }\n    r12 = rax;\n    *((rsp + 0x17)) = 0;\n    ebx = 0;\n    goto label_1;\nlabel_0:\n    rax = *((rsp + 0x18));\n    if (rax == 0) {\n        goto label_4;\n    }\n    rdi *= r13;\n    rdi += rax;\n    eax = memcmp (*(rsp), rbp, r13);\n    ecx = 1;\n    eax = *((rsp + 0x17));\n    if (eax != 0) {\n        eax = ecx;\n    }\n    *((rsp + 0x17)) = al;\n    do {\nlabel_2:\n        rbx++;\n        rbp += r13;\n        r14 = *((r15 + rbx*8));\n        if (r14 == 0) {\n            goto label_5;\n        }\nlabel_1:\n        eax = strncmp (r14, *((rsp + 8)), r12);\n    } while (eax != 0);\n    rax = strlen (r14);\n    if (rax == r12) {\n        goto label_6;\n    }\n    if (*(rsp) != -1) {\n        goto label_0;\n    }\n    *(rsp) = rbx;\n    rbx++;\n    rbp += r13;\n    r14 = *((r15 + rbx*8));\n    if (r14 != 0) {\n        goto label_1;\n    }\nlabel_5:\n    rax = 0xfffffffffffffffe;\n    if (*((rsp + 0x17)) == 0) {\n        rax = *(rsp);\n    }\n    *(rsp) = rax;\n    do {\nlabel_3:\n        rax = *(rsp);\n        return rax;\nlabel_4:\n        *((rsp + 0x17)) = 1;\n        goto label_2;\nlabel_6:\n        *(rsp) = rbx;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_004052b0",
            "funcStartAddr": "0x4052b0",
            "funcEndAddr": "0x405321",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x4052b0 */\n#include <stdint.h>\n \nuint64_t fcn_004052b0 (int64_t arg1, int64_t arg2, uint32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    edx = 5;\n    r12 = rsi;\n    if (rdx == -1) {\n        goto label_0;\n    }\n    rax = dcgettext (0, \"ambiguous argument %s for %s\");\n    rbx = rax;\n    do {\n        rax = fcn_00408ef0 (1, rbp);\n        rax = fcn_00408be0 (0, 8, r12);\n        r8 = rbp;\n        rdx = rbx;\n        esi = 0;\n        rcx = rax;\n        edi = 0;\n        eax = 0;\n        void (*0x402250)() ();\nlabel_0:\n        rax = dcgettext (0, \"invalid argument %s for %s\");\n        rbx = rax;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00405330",
            "funcStartAddr": "0x405330",
            "funcEndAddr": "0x405448",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x405330 */\n#include <stdint.h>\n \nuint64_t fcn_00405330 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r15 = rdi;\n    r14d = 0;\n    r13 = rdx;\n    edx = 5;\n    rbx = stderr;\n    rax = dcgettext (0, \"Valid arguments are:\");\n    rdi = rax;\n    rsi = rbx;\n    ebx = 0;\n    fputs_unlocked ();\n    r12 = *(r15);\n    if (r12 != 0) {\n        goto label_1;\n    }\n    goto label_2;\n    do {\nlabel_0:\n        rbx++;\n        r14 = rbp;\n        rbp += r13;\n        rax = fcn_00408f10 (r12);\n        edx = \"\\n  - %s\";\n        esi = 1;\n        rdi = stderr;\n        rcx = rax;\n        eax = 0;\n        fprintf_chk ();\n        r12 = *((r15 + rbx*8));\n        if (r12 == 0) {\n            goto label_2;\n        }\nlabel_1:\n    } while (rbx == 0);\n    eax = memcmp (r14, rbp, r13);\n    if (eax != 0) {\n        goto label_0;\n    }\n    rbx++;\n    rbp += r13;\n    rax = fcn_00408f10 (r12);\n    edx = \", %s\";\n    esi = 1;\n    rdi = stderr;\n    rcx = rax;\n    eax = 0;\n    fprintf_chk ();\n    r12 = *((r15 + rbx*8));\n    if (r12 != 0) {\n        goto label_1;\n    }\nlabel_2:\n    rdi = stderr;\n    rax = *((rdi + 0x28));\n    if (rax < *((rdi + 0x30))) {\n        rdx = rax + 1;\n        *((rdi + 0x28)) = rdx;\n        *(rax) = 0xa;\n        return rax;\n    }\n    esi = 0xa;\n    return overflow ();\n}\n"
        },
        {
            "funcName": "fcn_004055d0",
            "funcStartAddr": "0x4055d0",
            "funcEndAddr": "0x4055e8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x4055d0 */\n#include <stdint.h>\n \nuint64_t fcn_004055d0 (void) {\n    rax = fcn_00405650 (rdi);\n    if (rax != 0) {\n        return rax;\n    }\n    return fcn_004097b0 ();\n}\n"
        },
        {
            "funcName": "fcn_004055f0",
            "funcStartAddr": "0x4055f0",
            "funcEndAddr": "0x40564d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x4055f0 */\n#include <stdint.h>\n \nuint64_t fcn_004055f0 (uint32_t arg1) {\n    rdi = arg1;\n    ebp = 0;\n    rbx = rdi;\n    bpl = (*(rdi) == 0x2f) ? 1 : 0;\n    rax = fcn_004056b0 (rdi);\n    rcx = rax;\n    rcx -= rbx;\n    if (rcx <= rbp) {\n        goto label_0;\n    }\n    rdx = rcx - 1;\n    if (*((rax - 1)) == 0x2f) {\n        goto label_1;\n    }\n    goto label_0;\n    do {\n        rax = rdx - 1;\n        if (*((rbx + rdx - 1)) != 0x2f) {\n            goto label_2;\n        }\n        rdx = rax;\nlabel_1:\n    } while (rbp != rdx);\nlabel_2:\n    rax = rdx;\n    return rax;\nlabel_0:\n    rdx = rcx;\n    rax = rcx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405650",
            "funcStartAddr": "0x405650",
            "funcEndAddr": "0x4056aa",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x405650 */\n#include <stdint.h>\n \nuint64_t fcn_00405650 (int64_t arg1) {\n    rdi = arg1;\n    rax = fcn_004055f0 (rdi);\n    rbx = rax;\n    al = (rax == 0) ? 1 : 0;\n    eax = (int32_t) al;\n    rax = malloc (rbx + rax + 1);\n    rcx = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    rax = memcpy (rax, rbp, rbx);\n    rcx = rax;\n    while (1) {\n        *((rcx + rbx)) = 0;\nlabel_0:\n        rax = rcx;\n        return rax;\n        *(rax) = 0x2e;\n        ebx = 1;\n    }\n}\n"
        },
        {
            "funcName": "fcn_004056b0",
            "funcStartAddr": "0x4056b0",
            "funcEndAddr": "0x40570b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x4056b0 */\n#include <stdint.h>\n \nint64_t fcn_004056b0 (int64_t arg1) {\n    rdi = arg1;\n    edx = *(rdi);\n    rax = rdi;\n    if (dl != 0x2f) {\n        goto label_1;\n    }\n    do {\n        rax++;\n        edx = *(rax);\n    } while (dl == 0x2f);\nlabel_1:\n    if (dl == 0) {\n        goto label_2;\n    }\n    rcx = rax;\n    esi = 0;\n    while (dl != 0x2f) {\n        if (sil != 0) {\n            rax = rcx;\n            esi = 0;\n        }\n        rcx++;\n        edx = *(rcx);\n        if (dl == 0) {\n            goto label_2;\n        }\nlabel_0:\n    }\n    rcx++;\n    edx = *(rcx);\n    esi = 1;\n    if (dl != 0) {\n        goto label_0;\n    }\nlabel_2:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405740",
            "funcStartAddr": "0x405740",
            "funcEndAddr": "0x405824",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x405740 */\n#include <stdint.h>\n \nint32_t fcn_00405740 (uint32_t arg1) {\n    rdi = arg1;\n    eax = *((rdi + 0x18));\n    edx = 5;\n    eax &= 0xf000;\n    if (eax != 0x8000) {\n        if (eax == 0x4000) {\n            goto label_0;\n        }\n        if (eax == 0xa000) {\n            goto label_1;\n        }\n        if (eax == 0x6000) {\n            goto label_2;\n        }\n        if (eax == 0x2000) {\n            goto label_3;\n        }\n        if (eax == 0x1000) {\n            goto label_4;\n        }\n        if (eax == 0xc000) {\n            goto label_5;\n        }\n        esi = \"weird file\";\n        edi = 0;\n        void (*0x401f10)() ();\n    }\n    if (*((rdi + 0x30)) == 0) {\n        esi = \"regular empty file\";\n        edi = 0;\n        void (*0x401f10)() ();\n    }\n    esi = \"regular file\";\n    edi = 0;\n    void (*0x401f10)() ();\nlabel_3:\n    esi = \"character special file\";\n    edi = 0;\n    void (*0x401f10)() ();\nlabel_0:\n    esi = 0x411fbb;\n    edi = 0;\n    void (*0x401f10)() ();\nlabel_5:\n    esi = \"socket\";\n    edi = 0;\n    void (*0x401f10)() ();\nlabel_1:\n    esi = \"symbolic link\";\n    edi = 0;\n    void (*0x401f10)() ();\nlabel_2:\n    esi = \"block special file\";\n    edi = 0;\n    void (*0x401f10)() ();\nlabel_4:\n    esi = \"fifo\";\n    edi = 0;\n    return dcgettext ();\n}\n"
        },
        {
            "funcName": "fcn_004059b0",
            "funcStartAddr": "0x4059b0",
            "funcEndAddr": "0x405b38",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x4059b0 */\n#include <stdint.h>\n \nint32_t fcn_004059b0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\nlabel_1:\n    edx = edi;\n    eax = 0x2d;\n    edx &= 0xf000;\n    if (edx != 0x8000) {\n        eax = 0x64;\n        if (edx == 0x4000) {\n            goto label_2;\n        }\n        eax = 0x62;\n        if (edx == 0x6000) {\n            goto label_2;\n        }\n        eax = 0x63;\n        if (edx == 0x2000) {\n            goto label_2;\n        }\n        eax = 0x6c;\n        if (edx == 0xa000) {\n            goto label_2;\n        }\n        eax = 0x70;\n        if (edx == 0x1000) {\n            goto label_2;\n        }\n        eax = 0x73;\n        edx = 0x3f;\n        if (edx == 0xc000) {\n            eax = edx;\n            goto label_2;\n        }\n    }\nlabel_2:\n    *(rsi) = al;\n    eax = edi;\n    eax &= 0x100;\n    eax -= eax;\n    eax &= 0xffffffbb;\n    eax += 0x72;\n    *((rsi + 1)) = al;\n    eax = edi;\n    eax &= 0x80;\n    eax -= eax;\n    eax &= 0xffffffb6;\n    eax += 0x77;\n    *((rsi + 2)) = al;\n    eax = edi;\n    eax &= 0x40;\n    eax -= eax;\n    if ((edi & 0x800) == 0) {\n        goto label_3;\n    }\n    eax &= 0xffffffe0;\n    eax += 0x73;\n    do {\n        *((rsi + 3)) = al;\n        eax = edi;\n        eax &= 0x20;\n        eax -= eax;\n        eax &= 0xffffffbb;\n        eax += 0x72;\n        *((rsi + 4)) = al;\n        eax = edi;\n        eax &= 0x10;\n        eax -= eax;\n        eax &= 0xffffffb6;\n        eax += 0x77;\n        *((rsi + 5)) = al;\n        eax = edi;\n        eax &= 8;\n        eax -= eax;\n        if ((edi & 0x400) == 0) {\n            goto label_4;\n        }\n        eax &= 0xffffffe0;\n        eax += 0x73;\nlabel_0:\n        *((rsi + 6)) = al;\n        eax = edi;\n        eax &= 4;\n        eax -= eax;\n        eax &= 0xffffffbb;\n        eax += 0x72;\n        *((rsi + 7)) = al;\n        eax = edi;\n        eax &= 2;\n        eax -= eax;\n        eax &= 0xffffffb6;\n        eax += 0x77;\n        *((rsi + 8)) = al;\n        eax = edi;\n        eax &= 1;\n        eax -= eax;\n        edi &= 0x200;\n        if (edi == 0) {\n            goto label_5;\n        }\n        eax &= 0xffffffe0;\n        eax += 0x74;\n        *((rsi + 9)) = al;\n        eax = 0x20;\n        *((rsi + 0xa)) = ax;\n        return eax;\nlabel_3:\n        eax &= 0xffffffb5;\n        eax += 0x78;\n    } while (1);\nlabel_4:\n    eax &= 0xffffffb5;\n    eax += 0x78;\n    goto label_0;\nlabel_5:\n    eax &= 0xffffffb5;\n    eax += 0x78;\n    *((rsi + 9)) = al;\n    eax = 0x20;\n    *((rsi + 0xa)) = ax;\n    return eax;\n    edi = *((rdi + 0x18));\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_004059c0",
            "funcStartAddr": "0x4059c0",
            "funcEndAddr": "0x405a5c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x4059c0 */\n#include <stdint.h>\n \nint64_t fcn_004059c0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = rsi + 0x14;\n    *((rsi + 0x14)) = 0;\n    r8d = 0x30;\n    rsi = 0xcccccccccccccccd;\n    r9 = 0x6666666666666667;\n    if (rdi < 0) {\n        goto label_0;\n    }\n    do {\n        rax = rdi;\n        rcx--;\n        rdx:rax = rax * rsi;\n        rdx >>= 3;\n        rax = rdx * 5;\n        rax += rax;\n        rdi -= rax;\n        edi += 0x30;\n        *(rcx) = dil;\n        rdi = rdx;\n    } while (rdx != 0);\n    rax = rcx;\n    return rax;\n    do {\n        rcx = rsi;\nlabel_0:\n        rax = rdi;\n        rsi = rcx - 1;\n        rdx:rax = rax * r9;\n        rax = rdi;\n        rax >>= 0x3f;\n        rdx >>= 2;\n        rdx -= rax;\n        rax = rdx * 5;\n        eax = r8 + rax*2;\n        eax -= edi;\n        rdi = rdx;\n        *((rcx - 1)) = al;\n    } while (rdx != 0);\n    rcx -= 2;\n    *((rsi - 1)) = 0x2d;\n    rax = rcx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405a60",
            "funcStartAddr": "0x405a60",
            "funcEndAddr": "0x405aa1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x405a60 */\n#include <stdint.h>\n \nuint64_t fcn_00405a60 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r12 = rsi;\n    rbx = rdx - 1;\n    rax = ctype_tolower_loc ();\n    do {\n        ecx = *((r12 + rbx));\n        rdx = *(rax);\n        edx = *((rdx + rcx*4));\n        *((rbp + rbx)) = dl;\n        rbx--;\n    } while (rbx != -1);\nlabel_0:\n    rax = rbp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405ab0",
            "funcStartAddr": "0x405ab0",
            "funcEndAddr": "0x405af1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x405ab0 */\n#include <stdint.h>\n \nuint64_t fcn_00405ab0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r12 = rsi;\n    rbx = rdx - 1;\n    rax = ctype_toupper_loc ();\n    do {\n        ecx = *((r12 + rbx));\n        rdx = *(rax);\n        edx = *((rdx + rcx*4));\n        *((rbp + rbx)) = dl;\n        rbx--;\n    } while (rbx != -1);\nlabel_0:\n    rax = rbp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00405b00",
            "funcStartAddr": "0x405b00",
            "funcEndAddr": "0x4072c5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x405b00 */\n#include <stdint.h>\n \nvoid fcn_00405b00 (int64_t arg_4d8h_2, tm * arg_4d0h, int64_t arg_4d8h, int64_t arg1, char * arg11, int64_t arg2, char * arg3, tm * arg4, int64_t arg6, char * arg7, int64_t arg9) {\n    tm * timeptr;\n    int64_t var_10h;\n    int64_t var_18h;\n    char * var_20h;\n    int64_t var_2bh;\n    int64_t var_2ch;\n    char * var_30h;\n    char * var_40h;\n    char * var_48h;\n    char * var_50h;\n    char * var_58h;\n    char * var_60h;\n    char * var_68h;\n    char * format;\n    int64_t var_72h;\n    int64_t var_73h;\n    int64_t var_87h;\n    char * s;\n    int64_t var_91h;\n    int64_t var_a0h;\n    int64_t var_b0h;\n    int64_t var_c0h;\n    rdi = arg1;\n    xmm4 = arg11;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r9 = arg6;\n    xmm0 = arg7;\n    xmm2 = arg9;\nlabel_12:\n    eax = 0x4137e7;\n    r15 = rdi;\n    rbx = rdx;\n    r12 = *((rcx + 0x30));\n    r11d = *((rcx + 8));\n    *(rsp) = rsi;\n    *((rsp + 8)) = rcx;\n    *((rsp + 0x18)) = r9;\n    if (r12 == 0) {\n        r12 = rax;\n    }\n    *((rsp + 0x2b)) = r8b;\n    if (r11d <= 0xc) {\n        goto label_52;\n    }\n    r11d -= 0xc;\nlabel_0:\n    eax = *(rbx);\n    r14d = 0;\n    if (al == 0) {\n        goto label_53;\n    }\n    rdi = rsp + 0x72;\n    *((rsp + 0x2c)) = r11d;\n    *((rsp + 0x10)) = rdi;\n    *((rsp + 0x20)) = r12;\n    do {\n        if (al == 0x25) {\n            goto label_54;\n        }\n        rdx = *(rsp);\n        rdx -= r14;\n        if (rdx <= 1) {\n            goto label_8;\n        }\n        if (r15 != 0) {\n            *(r15) = al;\n            r15++;\n        }\n        r14++;\n        r8 = rbx;\nlabel_7:\n        eax = *((r8 + 1));\n        rbx = r8 + 1;\n    } while (al != 0);\nlabel_53:\n    if (r15 != 0) {\n        if (*(rsp) == 0) {\n            goto label_55;\n        }\n        *(r15) = 0;\n        goto label_55;\nlabel_8:\n        r14d = 0;\n    }\nlabel_55:\n    rax = r14;\n    return rax;\nlabel_52:\n    eax = 0xc;\n    if (r11d == 0) {\n        r11d = eax;\n    }\n    goto label_0;\nlabel_54:\n    r11d = *((rsp + 0x2b));\n    r8d = 0;\n    r12d = 0;\nlabel_1:\n    rbx++;\n    eax = *(rbx);\n    ecx = eax;\n    r9d = eax;\n    if (al == 0x30) {\n        goto label_2;\n    }\n    if (al > 0x30) {\n        do {\n            goto label_56;\n        }\n        if (al != 0x23) {\n            goto label_57;\n        }\n        rbx++;\n        eax = *(rbx);\n        r8d = 1;\n        ecx = eax;\n        r9d = eax;\n    } while (al != 0x30);\n    do {\nlabel_2:\n        r12d = eax;\n        goto label_1;\nlabel_57:\n    } while (al == 0x2d);\n    eax -= 0x30;\n    if (eax <= 9) {\n        goto label_58;\n    }\nlabel_3:\n    if (cl == 0x45) {\n        goto label_59;\n    }\n    if (cl == 0x4f) {\n        goto label_59;\n    }\n    r9d = 0;\nlabel_4:\n    if (cl > 0x7a) {\n        goto label_25;\n    }\n    eax = (int32_t) cl;\n    /* switch table (123 cases) at 0x412140 */\nlabel_56:\n    if (al == 0x5e) {\n        r11d = 1;\n        goto label_1;\n    }\n    if (al == 0x5f) {\n        goto label_2;\n    }\n    eax -= 0x30;\n    if (eax > 9) {\n        goto label_3;\n    }\nlabel_58:\n    ebp = 0;\n    do {\n        eax = *((rbx + 1));\n        rsi = rbx + 1;\n        ecx = eax;\n        edx = rax - 0x30;\n        if (ebp > 0xccccccc) {\n            goto label_60;\n        }\n        edi = *(rbx);\n        if (ebp == 0xccccccc) {\n            goto label_61;\n        }\nlabel_5:\n        r9d = rbp + rbp*4;\n        rbx = rsi;\n        ebp = rdi + r9*2 - 0x30;\nlabel_6:\n    } while (edx <= 9);\n    r9d = eax;\n    goto label_3;\nlabel_59:\n    ecx = *((rbx + 1));\n    rbx++;\n    goto label_4;\nlabel_61:\n    if (dil <= 0x37) {\n        goto label_5;\n    }\nlabel_60:\n    if (edx <= 9) {\n        eax = *((rbx + 2));\n        rbx += 2;\n        ecx = eax;\n        edx = rax - 0x30;\n        goto label_6;\n    }\n    r9d = eax;\n    rbx = rsi;\n    goto label_3;\n    if (r9d != 0) {\n        goto label_25;\n    }\n    if (r8b != 0) {\n        r11d = r8d;\n    }\nlabel_23:\n    edx = 0x2520;\n    rax = *((rsp + 0x10));\n    r8 = rbx;\n    r13d = 0;\n    *((rsp + 0x70)) = dx;\n    r9d = 0;\nlabel_9:\n    *(rax) = cl;\n    *((rax + 1)) = 0;\n    *((rsp + 0x30)) = r8;\n    *((rsp + 0x48)) = r9d;\n    *((rsp + 0x40)) = r11b;\n    rax = strftime (rsp + 0x90, 0x400, rsp + 0x70, *((rsp + 8)));\n    r8 = *((rsp + 0x30));\n    if (rax == 0) {\n        goto label_7;\n    }\n    rcx = rax - 1;\n    eax = 0;\n    rdx = *(rsp);\n    __asm (\"cmovns eax, ebp\");\n    rax = (int64_t) eax;\n    rbx = rax;\n    if (rcx >= rax) {\n        rbx = rcx;\n    }\n    rdx -= r14;\n    if (rdx <= rbx) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        r9d = *((rsp + 0x48));\n        r11d = *((rsp + 0x40));\n        if (r9d == 0) {\n            if (rcx >= rax) {\n                goto label_34;\n            }\n            rdx = (int64_t) ebp;\n            *((rsp + 0x48)) = rcx;\n            rdx -= rcx;\n            *((rsp + 0x40)) = r8;\n            rbp = r15 + rdx;\n            *((rsp + 0x30)) = r11b;\n            if (r12d == 0x30) {\n                goto label_62;\n            }\n            r15 = rbp;\n            memset (r15, 0x20, rdx);\n            rcx = *((rsp + 0x48));\n            r8 = *((rsp + 0x40));\n            r11d = *((rsp + 0x30));\n        }\nlabel_34:\n        *((rsp + 0x40)) = r8;\n        rsi = rsp + 0x91;\n        rdx = rcx;\n        rdi = r15;\n        *((rsp + 0x30)) = rcx;\n        if (r13b != 0) {\n            goto label_63;\n        }\nlabel_11:\n        if (r11b == 0) {\n            goto label_64;\n        }\n        fcn_00405ab0 (rdi, rsi, rdx);\n        rcx = *((rsp + 0x30));\n        r8 = *((rsp + 0x40));\nlabel_31:\n        r15 += rcx;\n    }\nlabel_10:\n    r14 += rbx;\n    goto label_7;\n    if (r9d == 0x4f) {\n        goto label_25;\n    }\n    r13d = 0;\nlabel_15:\n    edi = 0x2520;\n    *((rsp + 0x70)) = di;\n    if (r9d != 0) {\n        goto label_65;\n    }\n    r8 = rbx;\n    rax = *((rsp + 0x10));\n    goto label_9;\n    rax = *((rsp + 8));\n    *((rsp + 0x40)) = r11b;\n    r13 = rsp + 0x87;\n    __asm (\"movdqu xmm4, xmmword [rax + 0x20]\");\n    __asm (\"movdqu xmm0, xmmword [rax]\");\n    __asm (\"movdqu xmm2, xmmword [rax + 0x10]\");\n    rax = *((rax + 0x30));\n    *((rsp + 0x90)) = xmm0;\n    *((rsp + 0xa0)) = xmm2;\n    *((rsp + 0x30)) = xmm4;\n    *((rsp + 0xb0)) = xmm4;\n    *((rsp + 0xc0)) = rax;\n    rax = fcn_0040c500 (*((rsp + 0x4d0)), rsp + 0x90);\n    r11d = *((rsp + 0x40));\n    edi = 0x30;\n    rsi = rax;\n    rcx = rax;\n    do {\n        rax = 0x6666666666666667;\n        rdx:rax = rax * rcx;\n        rax = rcx;\n        rax >>= 0x3f;\n        rdx >>= 2;\n        rdx -= rax;\n        rax = rdx;\n        rdx *= 5;\n        rdx += rdx;\n        rcx -= rdx;\n        rdx = rcx;\n        rcx = rax;\n        eax = edi;\n        eax -= edx;\n        edx += 0x30;\n        __asm (\"cmovs edx, eax\");\n        r13--;\n        *(r13) = dl;\n    } while (rcx != 0);\n    r10d = 1;\n    if (ebp > 0) {\n        r10d = ebp;\n    }\n    if (rsi < 0) {\n        goto label_66;\n    }\nlabel_19:\n    rax = *(rsp);\n    rcx = rsp + 0x87;\n    rcx -= r13;\n    rax -= r14;\n    if (r12d != 0x2d) {\n        r9d = r10d;\n        r9d -= ecx;\n        if (r9d > 0) {\n            goto label_67;\n        }\n    }\n    r9d = 0;\n    r8 = rbx;\n    __asm (\"cmovns r9d, ebp\");\n    r9 = (int64_t) r9d;\nlabel_20:\n    rbx = r9;\n    if (rcx >= r9) {\n        rbx = rcx;\n    }\n    if (rbx >= rax) {\n        goto label_8;\n    }\n    if (r15 == 0) {\n        goto label_10;\n    }\n    if (r10d == 0) {\n        if (rcx >= r9) {\n            goto label_35;\n        }\n        rdx = (int64_t) ebp;\n        *((rsp + 0x48)) = rcx;\n        rdx -= rcx;\n        *((rsp + 0x40)) = r8;\n        rbp = r15 + rdx;\n        *((rsp + 0x30)) = r11b;\n        if (r12d == 0x30) {\n            goto label_68;\n        }\n        r15 = rbp;\n        memset (r15, 0x20, rdx);\n        rcx = *((rsp + 0x48));\n        r8 = *((rsp + 0x40));\n        r11d = *((rsp + 0x30));\n    }\nlabel_35:\n    *((rsp + 0x40)) = r8;\n    rdx = rcx;\n    rsi = r13;\n    rdi = r15;\n    *((rsp + 0x30)) = rcx;\n    goto label_11;\n    if (r9d != 0) {\n        goto label_25;\n    }\n    *((rsp + 0x30)) = \"%m/%d/%y\";\nlabel_13:\n    eax = *((rsp + 0x4d8));\n    r13d = (int32_t) r11b;\n    rax = fcn_00405b00 (0, 0xffffffffffffffff, *((rsp + 0x40)), *((rsp + 0x18)), r13d, *((rsp + 0x28)));\n    goto label_12;\n    r10 = rax;\n    eax = 0;\n    r11 = *(rsp);\n    __asm (\"cmovns eax, ebp\");\n    rax = (int64_t) eax;\n    rsi = rax;\n    if (r10 >= rax) {\n        rsi = r10;\n    }\n    r11 -= r14;\n    *((rsp + 0x40)) = rsi;\n    if (r11 <= rsi) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        if (r10 < rax) {\n            rdx = (int64_t) ebp;\n            *((rsp + 0x50)) = r10;\n            rdx -= r10;\n            *((rsp + 0x48)) = r11;\n            rbp = r15 + rdx;\n            if (r12d == 0x30) {\n                goto label_69;\n            }\n            r15 = rbp;\n            memset (r15, 0x20, rdx);\n            r10 = *((rsp + 0x50));\n            r11 = *((rsp + 0x48));\n        }\nlabel_38:\n        eax = *((rsp + 0x4d8));\n        *((rsp + 0x48)) = r10;\n        fcn_00405b00 (r15, r11, *((rsp + 0x40)), *((rsp + 0x18)), r13d, *((rsp + 0x28)));\n        goto label_12;\n        r10 = *((rsp + 0x58));\n        r15 += r10;\n    }\n    r14 += *((rsp + 0x40));\n    r8 = rbx;\n    goto label_7;\n    if (r9d != 0) {\n        goto label_25;\n    }\n    *((rsp + 0x30)) = \"%Y-%m-%d\";\n    goto label_13;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rdx = *((rsp + 8));\n    esi = *((rdx + 0x14));\n    r10d = *((rdx + 0x1c));\n    r13d = *((rdx + 0x18));\n    edx = 0x92492493;\n    eax = esi;\n    *((rsp + 0x30)) = esi;\n    eax >>= 0x1f;\n    eax &= 0x190;\n    edi = rsi + rax - 0x64;\n    esi = r10d;\n    esi -= r13d;\n    esi += 0x17e;\n    eax = esi;\n    edx:eax = eax * edx;\n    eax = rdx + rsi;\n    edx = esi;\n    edx >>= 0x1f;\n    eax >>= 2;\n    eax -= edx;\n    edx = rax*8;\n    edx -= eax;\n    eax = edx;\n    edx = r10d;\n    edx -= esi;\n    r8d = rdx + rax + 3;\n    if (r8d < 0) {\n        goto label_70;\n    }\n    eax = 0x16d;\n    if ((dil & 3) == 0) {\n        esi = 0x51eb851f;\n        eax = edi;\n        edx:eax = eax * esi;\n        eax = edi;\n        eax >>= 0x1f;\n        *((rsp + 0x40)) = eax;\n        esi = edx;\n        edx >>= 5;\n        edx -= eax;\n        eax = 0x16e;\n        edx *= 0x64;\n        if (edi != edx) {\n            goto label_71;\n        }\n        esi >>= 7;\n        eax = esi;\n        eax -= *((rsp + 0x40));\n        eax *= 0x190;\n        al = (edi == eax) ? 1 : 0;\n        eax = (int32_t) al;\n        eax += 0x16d;\n    }\nlabel_71:\n    esi = r10d;\n    edx = 0x92492493;\n    esi -= eax;\n    edi = esi;\n    edi -= r13d;\n    edi += 0x17e;\n    eax = edi;\n    esi -= edi;\n    edx:eax = eax * edx;\n    eax = rdx + rdi;\n    edx = edi;\n    edx >>= 0x1f;\n    eax >>= 2;\n    eax -= edx;\n    edx = rax*8;\n    edx -= eax;\n    r13d = rsi + rdx + 3;\n    __asm (\"cmovns r8d, r13d\");\n    r13d >>= 0x1f;\n    r13d++;\nlabel_39:\n    if (cl == 0x47) {\n        goto label_72;\n    }\n    if (cl != 0x67) {\n        goto label_73;\n    }\n    eax = *((rsp + 0x30));\n    esi = 0x51eb851f;\n    r8d = *((rsp + 0x30));\n    r10d = 2;\n    edx:eax = eax * esi;\n    edi = r8d;\n    edx >>= 5;\n    eax = edx;\n    edx = r8d;\n    edx >>= 0x1f;\n    eax -= edx;\n    eax *= 0x64;\n    edi -= eax;\n    edi += r13d;\n    eax = edi;\n    edx:eax = eax * esi;\n    eax = edi;\n    eax >>= 0x1f;\n    esi = edx;\n    esi >>= 5;\n    esi -= eax;\n    esi *= 0x64;\n    edi -= esi;\n    esi = edi;\n    if (edi < 0) {\n        eax = 0xfffff894;\n        edx = edi;\n        esi += 0x64;\n        eax -= r13d;\n        edx = -edx;\n        if (r8d < eax) {\n            esi = edx;\n        }\n    }\nlabel_14:\n    eax = esi;\n    *((rsp + 0x30)) = 0;\n    edi = 0;\n    eax >>= 0x1f;\n    r8d = eax;\nlabel_17:\n    if (r9d != 0x4f) {\n        goto label_74;\n    }\n    if (r8b != 0) {\n        goto label_75;\n    }\nlabel_18:\n    eax = 0x2520;\n    r13d = 0;\n    *((rsp + 0x70)) = ax;\nlabel_51:\n    *((rsp + 0x72)) = r9b;\n    r8 = rbx;\n    r9d = r10d;\n    rax = rsp + 0x73;\n    goto label_9;\n    eax = 0;\n    rdi = *((rsp + 0x20));\n    *((rsp + 0x48)) = r8b;\n    if (r8b != 0) {\n        r11d = eax;\n    }\n    *((rsp + 0x40)) = r11b;\n    rax = strlen (rdi);\n    rdx = *(rsp);\n    r13 = rax;\n    eax = 0;\n    __asm (\"cmovns eax, ebp\");\n    rax = (int64_t) eax;\n    rsi = rax;\n    if (r13 >= rax) {\n        rsi = r13;\n    }\n    rdx -= r14;\n    *((rsp + 0x30)) = rsi;\n    if (rdx <= rsi) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        r11d = *((rsp + 0x40));\n        r8d = *((rsp + 0x48));\n        if (r13 < rax) {\n            rdx = (int64_t) ebp;\n            rdx -= r13;\n            rbp = r15 + rdx;\n            if (r12d == 0x30) {\n                goto label_76;\n            }\n            *((rsp + 0x48)) = r8b;\n            r15 = rbp;\n            *((rsp + 0x40)) = r11b;\n            memset (r15, 0x20, rdx);\n            r8d = *((rsp + 0x48));\n            r11d = *((rsp + 0x40));\n        }\nlabel_48:\n        rdx = r13;\n        rsi = *((rsp + 0x20));\n        rdi = r15;\n        if (r8b != 0) {\n            goto label_77;\n        }\n        if (r11b == 0) {\n            goto label_78;\n        }\n        fcn_00405ab0 (rdi, rsi, rdx);\nlabel_42:\n        r15 += r13;\n    }\n    r14 += *((rsp + 0x30));\n    r8 = rbx;\n    goto label_7;\n    *((rsp + 0x30)) = \"%H:%M\";\n    goto label_13;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    r10d = 2;\n    esi = *((rax + 8));\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    esi = *((rsp + 0x2c));\n    r10d = 2;\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    r10d = 2;\n    esi = *((rax + 4));\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    if (ebp != 0xffffffff) {\n        goto label_79;\n    }\n    esi = *((rsp + 0x4d8));\n    r10d = 9;\n    goto label_14;\n    r13d = 1;\nlabel_28:\n    eax = 0;\n    ecx = 0x70;\n    if (r8b != 0) {\n        r13d = r8d;\n    }\n    if (r8b != 0) {\n        r11d = eax;\n    }\n    goto label_15;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    esi = *((rax + 8));\nlabel_16:\n    r10d = 2;\n    if (r12d == 0x30) {\n        goto label_14;\n    }\n    if (r12d == 0x2d) {\n        goto label_14;\n    }\n    r12d = 0x5f;\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    esi = *((rsp + 0x2c));\n    goto label_16;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    *((rsp + 0x30)) = 0;\n    r10d = 2;\n    esi = *((rax + 0x10));\n    r8b = (esi < 0xffffffff) ? 1 : 0;\n    esi++;\n    edi = 0;\n    goto label_17;\n    r13d = 0;\n    eax = 1;\n    __asm (\"cmovns r13d, ebp\");\n    r13 = (int64_t) r13d;\n    if (r13 == 0) {\n        r13 = rax;\n    }\n    rax = *(rsp);\n    rax -= r14;\n    if (rax <= r13) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        if (ebp > 1) {\n            rdx = (int64_t) ebp;\n            rdx--;\n            rbp = r15 + rdx;\n            if (r12d == 0x30) {\n                goto label_80;\n            }\n            r15 = rbp;\n            memset (r15, 0x20, rdx);\n        }\nlabel_44:\n        *(r15) = 0xa;\n        r15++;\n    }\nlabel_21:\n    r14 += r13;\n    r8 = rbx;\n    goto label_7;\n    rax = *((rsp + 8));\n    r10d = 1;\n    eax = *((rax + 0x10));\n    if (r9d == 0x4f) {\n        goto label_18;\n    }\n    edx = rax * 5;\n    *((rsp + 0x30)) = 0;\n    r8d = 0;\n    edi = 0;\n    esi = rax + rdx*2;\n    esi >>= 5;\n    esi++;\nlabel_22:\n    *((rsp + 0x40)) = r8b;\n    rcx = rsp + 0x87;\n    r9d = 0xcccccccd;\n    do {\n        r13 = rcx - 1;\n        if ((dil & 1) != 0) {\n            rax = rcx - 2;\n            *((rcx - 1)) = 0x3a;\n            rcx = r13;\n            r13 = rax;\n        }\n        eax = esi;\n        r8d = esi;\n        edi >>= 1;\n        edx:eax = eax * r9d;\n        edx >>= 3;\n        eax = rdx * 5;\n        eax += eax;\n        r8d -= eax;\n        eax = r8d;\n        eax += 0x30;\n        *((rcx - 1)) = al;\n        rcx = r13;\n        if (esi <= 9) {\n            if (edi == 0) {\n                goto label_81;\n            }\n        }\n        esi = edx;\n    } while (1);\nlabel_81:\n    r8d = *((rsp + 0x40));\n    if (r10d < ebp) {\n        r10d = ebp;\n    }\n    if (r8b != 0) {\n        goto label_66;\n    }\n    if (*((rsp + 0x30)) == 0) {\n        goto label_19;\n    }\n    if (r12d == 0x2d) {\n        goto label_82;\n    }\n    *((rsp + 0x30)) = 0x2b;\nlabel_32:\n    rcx = rsp + 0x87;\n    r9d = r10 - 1;\n    rax = *(rsp);\n    rcx -= r13;\n    r9d -= ecx;\n    rax -= r14;\n    if (r9d <= 0) {\n        goto label_83;\n    }\n    if (r12d == 0x5f) {\n        goto label_84;\n    }\n    rdx = (int64_t) r10d;\n    if (rdx >= rax) {\n        goto label_8;\n    }\n    edx = 0;\n    esi = 1;\n    __asm (\"cmovns edx, ebp\");\n    rdx = (int64_t) edx;\n    if (rdx != 0) {\n        rsi = rdx;\n    }\n    if (rsi >= rax) {\n        goto label_8;\n    }\n    r14 += rsi;\n    r9 = (int64_t) r9d;\n    r8 = rbx;\n    if (r15 != 0) {\n        if (r10d == 0) {\n            if (rdx <= 1) {\n                goto label_49;\n            }\n            rdx = (int64_t) ebp;\n            *((rsp + 0x58)) = r9;\n            rdx--;\n            *((rsp + 0x50)) = rcx;\n            rbp = r15 + rdx;\n            *((rsp + 0x48)) = r10d;\n            *((rsp + 0x40)) = r11b;\n            if (r12d == 0x30) {\n                goto label_85;\n            }\n            r15 = rbp;\n            memset (r15, 0x20, rdx);\n            r9 = *((rsp + 0x58));\n            rcx = *((rsp + 0x50));\n            r10d = *((rsp + 0x48));\n            r11d = *((rsp + 0x40));\n        }\nlabel_49:\n        eax = *((rsp + 0x30));\n        r15++;\n        r8 = rbx;\n        *((r15 - 1)) = al;\nlabel_41:\n        if (r15 == 0) {\n            goto label_86;\n        }\n        rdx = r9;\n        *((rsp + 0x58)) = rcx;\n        *((rsp + 0x50)) = r10d;\n        *((rsp + 0x48)) = r8;\n        *((rsp + 0x40)) = r11b;\n        *((rsp + 0x30)) = r9;\n        memset (r15, 0x30, rdx);\n        r9 = *((rsp + 0x30));\n        rcx = *((rsp + 0x58));\n        r10d = *((rsp + 0x50));\n        r8 = *((rsp + 0x48));\n        r11d = *((rsp + 0x40));\n        r15 += r9;\n    }\nlabel_86:\n    rax = *(rsp);\n    r14 += r9;\n    ebp = 0;\n    r9d = 0;\n    rax -= r14;\n    goto label_20;\n    r13d = 0;\n    eax = 1;\n    __asm (\"cmovns r13d, ebp\");\n    r13 = (int64_t) r13d;\n    if (r13 == 0) {\n        r13 = rax;\n    }\n    rax = *(rsp);\n    rax -= r14;\n    if (rax <= r13) {\n        goto label_8;\n    }\n    if (r15 == 0) {\n        goto label_21;\n    }\n    if (ebp > 1) {\n        rdx = (int64_t) ebp;\n        rdx--;\n        rbp = r15 + rdx;\n        if (r12d == 0x30) {\n            goto label_87;\n        }\n        r15 = rbp;\n        memset (r15, 0x20, rdx);\n    }\nlabel_45:\n    *(r15) = 9;\n    r15++;\n    goto label_21;\n    rax = *((rsp + 8));\n    edx = 0x92492493;\n    r10d = 1;\n    eax = *((rax + 0x18));\n    esi = rax + 6;\n    *((rsp + 0x30)) = eax;\n    eax = esi;\n    edx:eax = eax * edx;\n    eax = rdx + rsi;\n    edx = esi;\n    edx >>= 0x1f;\n    eax >>= 2;\n    eax -= edx;\n    edx = rax*8;\n    edx -= eax;\n    esi -= edx;\n    esi++;\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_88;\n    }\n    if (r9d == 0x4f) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    *((rsp + 0x30)) = 0;\n    r10d = 4;\n    esi = *((rax + 0x14));\n    r8b = (esi < 0xfffff894) ? 1 : 0;\n    esi += 0x76c;\n    edi = 0;\nlabel_74:\n    if (r8b == 0) {\n        goto label_22;\n    }\nlabel_75:\n    esi = -esi;\n    goto label_22;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    r10d = 2;\n    esi = *(rax);\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    edx = 0x92492493;\n    edi = *((rax + 0x1c));\n    edi -= *((rax + 0x18));\n    edi += 7;\n    eax = edi;\n    edx:eax = eax * edx;\n    do {\n        esi = rdx + rdi;\n        edi >>= 0x1f;\n        r10d = 2;\n        esi >>= 2;\n        esi -= edi;\n        goto label_14;\n        if (r9d == 0x45) {\n            goto label_88;\n        }\n        rax = *((rsp + 8));\n        edx = 0x51eb851f;\n        *((rsp + 0x30)) = 0;\n        r10d = 2;\n        edi = *((rax + 0x14));\n        eax = *((rax + 0x14));\n        edx:eax = eax * edx;\n        eax = edx;\n        edx = edi;\n        edx >>= 0x1f;\n        eax >>= 5;\n        eax -= edx;\n        edx = edi;\n        esi = rax + 0x13;\n        eax *= 0x64;\n        edx -= eax;\n        eax = edx;\n        eax >>= 0x1f;\n        dl = (esi > 0) ? 1 : 0;\n        eax &= edx;\n        r8b = (edi < 0xfffff894) ? 1 : 0;\n        esi -= eax;\n        edi = 0;\n        goto label_17;\n        if (r9d == 0x45) {\n            goto label_25;\n        }\n        r10 = *((rsp + 8));\n        esi = 0x92492493;\n        eax = *((r10 + 0x18));\n        edi = rax + 6;\n        *((rsp + 0x30)) = eax;\n        eax = edi;\n        edx:eax = eax * esi;\n        eax = rdx + rdi;\n        edx = edi;\n        edx >>= 0x1f;\n        eax >>= 2;\n        eax -= edx;\n        edx = rax*8;\n        edx -= eax;\n        eax = edx;\n        edx = *((r10 + 0x1c));\n        eax -= edi;\n        edi = rax + rdx + 7;\n        eax = edi;\n        edx:eax = eax * esi;\n    } while (1);\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    r10d = 1;\n    esi = *((rax + 0x18));\n    goto label_14;\n    if (r8b != 0) {\n        r11d = r8d;\n    }\n    if (r9d == 0) {\n        goto label_23;\n    }\nlabel_25:\n    rax = rbx - 1;\n    edx = rax + 2;\n    do {\n        ecx = edx;\n        r9 = rax;\n        ecx -= eax;\n        rax = rax - 1;\n    } while (*((rax + 1)) != 0x25);\n    rdx = *(rsp);\n    eax = 0;\n    rcx = (int64_t) ecx;\n    r8 = rbx;\n    rdx -= r14;\n    __asm (\"cmovns eax, ebp\");\n    rax = (int64_t) eax;\n    r13 = rax;\n    if (rcx >= rax) {\n        r13 = rcx;\n    }\nlabel_24:\n    if (rdx <= r13) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        if (rcx < rax) {\n            rdx = (int64_t) ebp;\n            *((rsp + 0x50)) = rcx;\n            rdx -= rcx;\n            *((rsp + 0x48)) = r8;\n            rbx = r15 + rdx;\n            *((rsp + 0x40)) = r9;\n            *((rsp + 0x30)) = r11b;\n            if (r12d == 0x30) {\n                goto label_89;\n            }\n            r15 = rbx;\n            memset (r15, 0x20, rdx);\n            rcx = *((rsp + 0x50));\n            r8 = *((rsp + 0x48));\n            r9 = *((rsp + 0x40));\n            r11d = *((rsp + 0x30));\n        }\nlabel_36:\n        *((rsp + 0x40)) = r8;\n        rdx = rcx;\n        rsi = r9;\n        rdi = r15;\n        *((rsp + 0x30)) = rcx;\n        if (r11b == 0) {\n            goto label_90;\n        }\n        fcn_00405ab0 (rdi, rsi, rdx);\n        rcx = *((rsp + 0x30));\n        r8 = *((rsp + 0x40));\nlabel_33:\n        r15 += rcx;\n    }\n    r14 += r13;\n    goto label_7;\n    r13d = 0;\nlabel_27:\n    rax = *((rsp + 8));\n    esi = *((rax + 0x20));\n    if (esi < 0) {\n        goto label_91;\n    }\n    rsi = *((rax + 0x28));\n    r8d = 1;\n    if (esi >= 0) {\n        r8d = 0;\n        if (esi != 0) {\n            goto label_92;\n        }\n        rax = *((rsp + 0x20));\n        r8b = (*(rax) == 0x2d) ? 1 : 0;\n    }\nlabel_92:\n    eax = esi;\n    edx = 0x91a2b3c5;\n    edi = 0x88888889;\n    edx:eax = eax * edx;\n    eax = esi;\n    eax >>= 0x1f;\n    *((rsp + 0x40)) = eax;\n    edx += esi;\n    edx >>= 0xb;\n    edx -= eax;\n    eax = esi;\n    *((rsp + 0x30)) = edx;\n    edx:eax = eax * edi;\n    r10d = rdx + rsi;\n    r10d >>= 5;\n    r10d -= *((rsp + 0x40));\n    eax = r10d;\n    edx:eax = eax * edi;\n    eax = r10d;\n    eax >>= 0x1f;\n    edi = rdx + r10;\n    edi >>= 5;\n    edi -= eax;\n    eax = r10d;\n    edi *= 0x3c;\n    r10d *= 0x3c;\n    eax -= edi;\n    edi = eax;\n    esi -= r10d;\n    if (r13 == 1) {\n        goto label_43;\n    }\n    if (r13 == 0) {\n        goto label_93;\n    }\n    if (r13 == 2) {\n        goto label_94;\n    }\n    if (r13 == 3) {\n        goto label_95;\n    }\n    ecx = *(rbx);\n    r9 = rbx;\nlabel_26:\n    rdx = *(rsp);\n    eax = 0;\n    rdx -= r14;\n    __asm (\"cmovns eax, ebp\");\n    rax = (int64_t) eax;\n    if (cl != 0x25) {\n        goto label_96;\n    }\n    r13d = 1;\n    r8 = r9;\n    ecx = 1;\n    if (rax != 0) {\n        r13 = rax;\n    }\n    goto label_24;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    r10d = 2;\n    esi = *((rax + 0xc));\n    goto label_14;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    esi = *((rax + 0xc));\n    goto label_16;\n    if (r9d == 0x45) {\n        goto label_25;\n    }\n    rax = *((rsp + 8));\n    *((rsp + 0x30)) = 0;\n    r10d = 3;\n    esi = *((rax + 0x1c));\n    r8b = (esi < 0xffffffff) ? 1 : 0;\n    esi++;\n    edi = 0;\n    goto label_17;\n    rdx = *(rsp);\n    eax = 0;\n    r13d = 1;\n    rdx -= r14;\n    __asm (\"cmovns eax, ebp\");\n    rax = (int64_t) eax;\n    if (rax != 0) {\n        r13 = rax;\n    }\n    if (r9d != 0) {\n        goto label_97;\n    }\n    if (r13 >= rdx) {\n        goto label_8;\n    }\n    if (r15 == 0) {\n        goto label_21;\n    }\n    if (ebp > 1) {\n        rdx = (int64_t) ebp;\n        rdx--;\n        rbp = r15 + rdx;\n        if (r12d == 0x30) {\n            goto label_98;\n        }\n        r15 = rbp;\n        memset (r15, 0x20, rdx);\n        ecx = *(rbx);\n    }\nlabel_47:\n    *(r15) = cl;\n    r15++;\n    goto label_21;\n    r9 = rbx - 1;\n    ecx = *((rbx - 1));\n    goto label_26;\n    if (r9d == 0x45) {\n        goto label_88;\n    }\n    rax = *((rsp + 8));\n    edx = 0x51eb851f;\n    r10d = 2;\n    edi = *((rax + 0x14));\n    eax = *((rax + 0x14));\n    edx:eax = eax * edx;\n    eax = edi;\n    eax >>= 0x1f;\n    esi = edx;\n    esi >>= 5;\n    esi -= eax;\n    eax = edi;\n    esi *= 0x64;\n    eax -= esi;\n    esi = eax;\n    if (eax >= 0) {\n        goto label_14;\n    }\n    eax = -eax;\n    esi += 0x64;\n    if (edi <= 0xfffff893) {\n        esi = eax;\n    }\n    goto label_14;\n    eax = *((rbx + 1));\n    rdx = rbx + 1;\n    r13d = 1;\n    if (al == 0x3a) {\n        goto label_30;\n    }\nlabel_29:\n    if (al != 0x7a) {\n        goto label_25;\n    }\n    rbx = rdx;\n    goto label_27;\n    r13d = 0;\n    goto label_28;\n    *((rsp + 0x30)) = \"%H:%M:%S\";\n    goto label_13;\nlabel_30:\n    r13++;\n    eax = *((rbx + r13));\n    rdx = rbx + r13;\n    if (al != 0x3a) {\n        goto label_29;\n    }\n    goto label_30;\nlabel_64:\n    memcpy (rdi, rsi, rdx);\n    r8 = *((rsp + 0x40));\n    rcx = *((rsp + 0x30));\n    goto label_31;\nlabel_66:\n    *((rsp + 0x30)) = 0x2d;\n    ecx = 0x2d;\n    if (r12d != 0x2d) {\n        goto label_32;\n    }\nlabel_37:\n    r9d = 0;\n    r12d = 1;\n    rax = *(rsp);\n    __asm (\"cmovns r9d, ebp\");\n    r9 = (int64_t) r9d;\n    if (r9 != 0) {\n        r12 = r9;\n    }\n    rax -= r14;\n    if (rax <= r12) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        if (r10d == 0) {\n            if (r9 <= 1) {\n                goto label_99;\n            }\n            r8 = (int64_t) ebp;\n            *((rsp + 0x58)) = cl;\n            r8--;\n            *((rsp + 0x50)) = r9;\n            rdx = r8;\n            *((rsp + 0x48)) = r10d;\n            *((rsp + 0x40)) = r11b;\n            *((rsp + 0x30)) = r8;\n            memset (r15, 0x20, rdx);\n            r8 = *((rsp + 0x30));\n            ecx = *((rsp + 0x58));\n            r9 = *((rsp + 0x50));\n            r10d = *((rsp + 0x48));\n            r11d = *((rsp + 0x40));\n            r15 += r8;\n        }\nlabel_99:\n        *(r15) = cl;\n        r15++;\n    }\n    rax = *(rsp);\n    r14 += r12;\n    r8 = rbx;\n    r12d = 0x2d;\n    rcx = rsp + 0x87;\n    rcx -= r13;\n    rax -= r14;\n    goto label_20;\nlabel_90:\n    memcpy (rdi, rsi, rdx);\n    r8 = *((rsp + 0x40));\n    rcx = *((rsp + 0x30));\n    goto label_33;\nlabel_63:\n    fcn_00405a60 (rdi, rsi, rdx);\n    rcx = *((rsp + 0x30));\n    r8 = *((rsp + 0x40));\n    goto label_31;\nlabel_62:\n    r15 = rbp;\n    rax = memset (r15, 0x30, rdx);\n    r11d = *((rsp + 0x30));\n    r8 = *((rsp + 0x40));\n    rcx = *((rsp + 0x48));\n    goto label_34;\nlabel_83:\n    r9d = 0;\n    r8d = 1;\n    __asm (\"cmovns r9d, ebp\");\n    r9 = (int64_t) r9d;\n    if (r9 != 0) {\n        r8 = r9;\n    }\n    if (r8 >= rax) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        if (r10d == 0) {\n            if (r9 <= 1) {\n                goto label_46;\n            }\n            rdx = (int64_t) ebp;\n            *((rsp + 0x68)) = rcx;\n            rdx--;\n            *((rsp + 0x60)) = r8;\n            rax = r15 + rdx;\n            *((rsp + 0x58)) = r9;\n            *((rsp + 0x40)) = rax;\n            *((rsp + 0x50)) = r10d;\n            *((rsp + 0x48)) = r11b;\n            if (r12d == 0x30) {\n                goto label_100;\n            }\n            memset (r15, 0x20, rdx);\n            r15 = *((rsp + 0x40));\n            rcx = *((rsp + 0x68));\n            r8 = *((rsp + 0x60));\n            r9 = *((rsp + 0x58));\n            r10d = *((rsp + 0x50));\n            r11d = *((rsp + 0x48));\n        }\nlabel_46:\n        eax = *((rsp + 0x30));\n        r15++;\n        *((r15 - 1)) = al;\n    }\n    rax = *(rsp);\n    r14 += r8;\n    r8 = rbx;\n    rax -= r14;\n    goto label_20;\nlabel_40:\n    *((rsp + 0x30)) = 0;\nlabel_84:\n    r12 = (int64_t) r9d;\n    if (r12 >= rax) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        *((rsp + 0x50)) = r9d;\n        *((rsp + 0x48)) = r10d;\n        r15 += r12;\n        *((rsp + 0x40)) = r11b;\n        memset (r15, 0x20, r12);\n        r9d = *((rsp + 0x50));\n        r10d = *((rsp + 0x48));\n        r11d = *((rsp + 0x40));\n    }\n    eax = ebp;\n    r14 += r12;\n    eax -= r9d;\n    if (r9d < ebp) {\n    }\n    rax = *(rsp);\n    rax -= r14;\n    if (*((rsp + 0x30)) == 0) {\n        rcx = rsp + 0x87;\n        r9 = (int64_t) ebp;\n        r8 = rbx;\n        r12d = 0x5f;\n        rcx -= r13;\n        goto label_20;\nlabel_68:\n        r15 = rbp;\n        memset (r15, 0x30, rdx);\n        r11d = *((rsp + 0x30));\n        r8 = *((rsp + 0x40));\n        rcx = *((rsp + 0x48));\n        goto label_35;\nlabel_88:\n        r10d = 0;\n        goto label_18;\nlabel_89:\n        r15 = rbx;\n        rax = memset (r15, 0x30, rdx);\n        r11d = *((rsp + 0x30));\n        r9 = *((rsp + 0x40));\n        r8 = *((rsp + 0x48));\n        rcx = *((rsp + 0x50));\n        goto label_36;\nlabel_82:\n        ecx = 0x2b;\n        goto label_37;\nlabel_91:\n        r8 = rbx;\n        goto label_7;\n    }\n    r9 = (int64_t) ebp;\n    ecx = 1;\n    if (r9 != 0) {\n        rcx = r9;\n    }\n    if (rcx >= rax) {\n        goto label_8;\n    }\n    if (r15 != 0) {\n        if (r10d == 0) {\n            if (r9 <= 1) {\n                goto label_101;\n            }\n            r12 = r9 - 1;\n            *((rsp + 0x58)) = rcx;\n            *((rsp + 0x50)) = r10d;\n            r15 += r12;\n            *((rsp + 0x48)) = r11b;\n            *((rsp + 0x40)) = r9;\n            memset (r15, 0x20, r12);\n            rcx = *((rsp + 0x58));\n            r10d = *((rsp + 0x50));\n            r11d = *((rsp + 0x48));\n            r9 = *((rsp + 0x40));\n        }\nlabel_101:\n        eax = *((rsp + 0x30));\n        r15++;\n        *((r15 - 1)) = al;\n    }\n    rax = *(rsp);\n    r14 += rcx;\n    r8 = rbx;\n    r12d = 0x5f;\n    rcx = rsp + 0x87;\n    rcx -= r13;\n    rax -= r14;\n    goto label_20;\nlabel_69:\n    r15 = rbp;\n    memset (r15, 0x30, rdx);\n    r11 = *((rsp + 0x48));\n    r10 = *((rsp + 0x50));\n    goto label_38;\nlabel_70:\n    esi = rdi - 1;\n    edx = 0x16d;\n    if ((sil & 3) == 0) {\n        eax = esi;\n        edx = 0x51eb851f;\n        edx:eax = eax * edx;\n        eax = edx;\n        edx = esi;\n        edx >>= 0x1f;\n        eax >>= 5;\n        eax -= edx;\n        edx = 0x16e;\n        eax *= 0x64;\n        if (esi != eax) {\n            goto label_102;\n        }\n        eax = esi;\n        edi = 0x190;\n        edx:eax = (int64_t) eax;\n        eax = edx:eax / edi;\n        edx = edx:eax % edi;\n        edx -= edx;\n        edx = ~edx;\n        edx += 0x16e;\n    }\nlabel_102:\n    r10d += edx;\n    edx = 0x92492493;\n    esi = r10d;\n    esi -= r13d;\n    r13d = 0xffffffff;\n    esi += 0x17e;\n    eax = esi;\n    r10d -= esi;\n    edx:eax = eax * edx;\n    eax = rdx + rsi;\n    edx = esi;\n    edx >>= 0x1f;\n    eax >>= 2;\n    eax -= edx;\n    edx = rax*8;\n    edx -= eax;\n    r8d = r10 + rdx + 3;\n    goto label_39;\nlabel_79:\n    if (ebp > 8) {\n        goto label_103;\n    }\n    esi = *((rsp + 0x4d8));\n    edi = ebp;\n    r8d = 0x66666667;\n    do {\n        eax = esi;\n        esi >>= 0x1f;\n        edi++;\n        edx:eax = eax * r8d;\n        edx >>= 2;\n        edx -= esi;\n        esi = edx;\n    } while (edi != 9);\nlabel_50:\n    r10d = ebp;\n    goto label_14;\nlabel_73:\n    eax = r8d;\n    edx = 0x92492493;\n    r10d = 2;\n    edx:eax = eax * edx;\n    esi = rdx + r8;\n    r8d >>= 0x1f;\n    esi >>= 2;\n    esi -= r8d;\n    esi++;\n    goto label_14;\nlabel_72:\n    esi = *((rsp + 0x30));\n    eax = 0xfffff894;\n    *((rsp + 0x30)) = 0;\n    r10d = 4;\n    eax -= r13d;\n    esi = rsi + r13 + 0x76c;\n    r8b = (esi < eax) ? 1 : 0;\n    edi = 0;\n    goto label_17;\nlabel_67:\n    if (r12d == 0x5f) {\n        goto label_40;\n    }\n    rdx = (int64_t) r10d;\n    if (rdx >= rax) {\n        goto label_8;\n    }\n    r9 = (int64_t) r9d;\n    r8 = rbx;\n    goto label_41;\n    do {\nlabel_94:\n        eax = *((rsp + 0x30)) * 0x2710;\n        r10d = 9;\n        *((rsp + 0x30)) = 1;\n        edi *= 0x64;\n        eax += edi;\n        edi = 0x14;\n        esi += eax;\n        goto label_17;\nlabel_43:\n        esi = *((rsp + 0x30)) * 0x64;\n        r10d = 6;\n        *((rsp + 0x30)) = 1;\n        esi += edi;\n        edi = 4;\n        goto label_17;\nlabel_78:\n        memcpy (rdi, rsi, rdx);\n        goto label_42;\nlabel_77:\n        fcn_00405a60 (rdi, rsi, rdx);\n        goto label_42;\nlabel_93:\n        esi = *((rsp + 0x30)) * 0x64;\n        edi = 0;\n        *((rsp + 0x30)) = 1;\n        r10d = 5;\n        esi += eax;\n        goto label_17;\nlabel_95:\n    } while (esi != 0);\n    if (eax != 0) {\n        goto label_43;\n    }\n    esi = *((rsp + 0x30));\n    r10d = 3;\n    *((rsp + 0x30)) = 1;\n    goto label_17;\nlabel_97:\n    r8 = rbx;\n    r9 = rbx;\n    ecx = 1;\n    goto label_24;\nlabel_80:\n    r15 = rbp;\n    memset (r15, 0x30, rdx);\n    goto label_44;\nlabel_87:\n    r15 = rbp;\n    memset (r15, 0x30, rdx);\n    goto label_45;\nlabel_100:\n    memset (r15, 0x30, rdx);\n    r15 = *((rsp + 0x40));\n    r11d = *((rsp + 0x48));\n    r10d = *((rsp + 0x50));\n    r9 = *((rsp + 0x58));\n    r8 = *((rsp + 0x60));\n    rcx = *((rsp + 0x68));\n    goto label_46;\nlabel_98:\n    r15 = rbp;\n    memset (r15, 0x30, rdx);\n    ecx = *(rbx);\n    goto label_47;\nlabel_76:\n    r15 = rbp;\n    memset (r15, 0x30, rdx);\n    r11d = *((rsp + 0x40));\n    r8d = *((rsp + 0x48));\n    goto label_48;\nlabel_85:\n    r15 = rbp;\n    memset (r15, 0x30, rdx);\n    r11d = *((rsp + 0x40));\n    r10d = *((rsp + 0x48));\n    rcx = *((rsp + 0x50));\n    r9 = *((rsp + 0x58));\n    goto label_49;\nlabel_103:\n    esi = *((rsp + 0x4d8));\n    goto label_50;\nlabel_65:\n    r10d = 0;\n    goto label_51;\nlabel_96:\n    rbx = r9;\n    goto label_25;\n}\n"
        },
        {
            "funcName": "fcn_004072d0",
            "funcStartAddr": "0x4072d0",
            "funcEndAddr": "0x4072ef",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x4072d0 */\n#include <stdint.h>\n \nvoid fcn_004072d0 (int64_t arg5, int64_t arg6) {\n    int64_t var_fh;\n    r8 = arg5;\n    r9 = arg6;\n    *((rsp + 0xf)) = 0;\n    fcn_00405b00 (rdi, rsi, rdx, rcx, 0, rsp + 0x1f);\n}\n"
        },
        {
            "funcName": "fcn_004072f0",
            "funcStartAddr": "0x4072f0",
            "funcEndAddr": "0x407389",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x4072f0 */\n#include <stdint.h>\n \nuint64_t fcn_004072f0 (char ** arg1) {\n    rdi = arg1;\n    if (rdi != 0) {\n        rbx = rdi;\n        rax = strrchr (rdi, 0x2f);\n        if (rax != 0) {\n            r8 = rax + 1;\n            rdx = r8;\n            rdx -= rbx;\n            if (rdx <= 6) {\n                goto label_0;\n            }\n            rsi = rax - 6;\n            edi = \"/.libs/\";\n            ecx = 7;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (rdx > 6) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            edi = 0x412558;\n            ecx = 3;\n            rsi = r8;\n            rbx = r8;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            dl = (dl > 0) ? 1 : 0;\n            if (dl != 0) {\n                goto label_0;\n            }\n            rbx = rax + 4;\n            *(obj.__progname) = rbx;\n        }\nlabel_0:\n        *(0x00617498) = rbx;\n        *(obj.program_invocation_name) = rbx;\n        return rax;\n    }\n    fwrite (\"A NULL argv[0] was passed through an exec system call.\\n\", 1, 0x37, *(obj.stderr));\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_00407390",
            "funcStartAddr": "0x407390",
            "funcEndAddr": "0x407482",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x407390 */\n#include <stdint.h>\n \nuint64_t fcn_00407390 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    edx = 5;\n    r12d = esi;\n    rsi = rdi;\n    rax = dcgettext (0, rsi);\n    rbx = rax;\n    while (1) {\nlabel_0:\n        rax = rbx;\n        return rax;\n        rax = fcn_0040c750 ();\n        edx = *(rax);\n        edx &= 0xffffffdf;\n        if (dl != 0x55) {\n            goto label_1;\n        }\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x54) {\n            goto label_2;\n        }\n        edx = *((rax + 2));\n        edx &= 0xffffffdf;\n        if (dl != 0x46) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x2d) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0) {\n            goto label_2;\n        }\n        eax = 0x41255e;\n        ebx = 0x412569;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n    }\nlabel_1:\n    if (dl == 0x47) {\n        edx = *((rax + 1));\n        edx &= 0xffffffdf;\n        if (dl != 0x42) {\n            goto label_2;\n        }\n        if (*((rax + 2)) != 0x31) {\n            goto label_2;\n        }\n        if (*((rax + 3)) != 0x38) {\n            goto label_2;\n        }\n        if (*((rax + 4)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 5)) != 0x33) {\n            goto label_2;\n        }\n        if (*((rax + 6)) != 0x30) {\n            goto label_2;\n        }\n        if (*((rax + 7)) != 0) {\n            goto label_2;\n        }\n        eax = 0x412562;\n        ebx = 0x412565;\n        if (*(rbx) != 0x60) {\n            rbx = rax;\n        }\n        goto label_0;\n    }\nlabel_2:\n    eax = 0x41367c;\n    ebx = 0x41255c;\n    if (r12d != 9) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00407490",
            "funcStartAddr": "0x407490",
            "funcEndAddr": "0x40d7d7",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x407490 */\n#include <stdint.h>\n \nuint64_t fcn_00407490 (int64_t arg_d8h, char * s, int64_t arg1, char * arg2, char * arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    size_t * var_10h;\n    int64_t var_1fh;\n    char * var_20h;\n    size_t var_28h;\n    int64_t var_50h;\n    int64_t var_58h;\n    int64_t var_60h;\n    int64_t var_68h;\n    int64_t var_6ch;\n    char * var_6dh;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    do {\n        /* [13] -r-x section size 57368 named .text */\n        abort ();\n        r15 = rdi;\n        r14 = rsi;\n        r13d = r8d;\n        *((rsp + 0x20)) = rdx;\n        *((rsp + 8)) = rcx;\n        *((rsp + 0x68)) = r9d;\n        rax = ctype_get_mb_cur_max ();\n        ebp &= 2;\n        *((rsp + 0x60)) = rax;\n        rsp + 0x6c = (ebp != 0) ? 1 : 0;\n    } while (r13d > 0xa);\n    eax = r13d;\n    r11 = *((rsp + 8));\n    /* switch table (11 cases) at 0x4125c0 */\n    do {\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 2;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 0;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x41367c;\n    } while (ebp != 0);\n    *((rsp + 8)) = 1;\n    do {\n        if (r14 != 0) {\n            goto label_2;\n        }\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 1;\n        r13d = 2;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x41367c;\n        void (*0x407528)() ();\n        if (ebp != 0) {\n            goto label_3;\n        }\n        if (r14 == 0) {\n            goto label_4;\n        }\n        *(r15) = 0x22;\n        r10d = 0;\n        *((rsp + 0x1f)) = 1;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\nlabel_0:\n        *((rsp + 0x6c)) = 0;\n        ebx = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x41255c;\n        void (*0x407528)() ();\n        if (r14 != 0) {\n            *((rsp + 8)) = r11;\n            rax = fcn_00407390 (0x41256d, r13d);\n            *((rsp + 0xd8)) = rax;\n            rax = fcn_00407390 (0x41367c, r13d);\n            r11 = *((rsp + 8));\n            *((rsp + 0xe0)) = rax;\n        }\n        ebx = 0;\n        if (ebp == 0) {\n            goto label_5;\n        }\nlabel_1:\n        *((rsp + 0x10)) = r11;\n        rax = strlen (*((rsp + 0xe0)));\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        r11 = *((rsp + 0x10));\n        *((rsp + 0x28)) = rax;\n        rax = *((rsp + 0xe0));\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x50)) = rax;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 8)) = 1;\n        void (*0x407528)() ();\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 0;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        void (*0x407528)() ();\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 5;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x41255c;\n        void (*0x407528)() ();\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 0;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 0;\n        *((rsp + 0x50)) = 0;\n        void (*0x407528)() ();\n        *((rsp + 0x1f)) = 1;\n        r10d = 0;\n        ebx = 0;\n        r13d = 2;\n        *((rsp + 0x6d)) = 0;\n        *((rsp + 0x58)) = 0;\n        *((rsp + 0x6c)) = 1;\n        *((rsp + 8)) = 1;\n        *((rsp + 0x28)) = 1;\n        *((rsp + 0x50)) = 0x41367c;\n        void (*0x407528)() ();\n        if (ebp != 0) {\n            goto label_6;\n        }\n        *((rsp + 8)) = 0;\n    } while (1);\nlabel_4:\n    *((rsp + 0x58)) = 0;\n    r10d = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x6d)) = 0;\n    goto label_0;\nlabel_5:\n    rax = *((rsp + 0xd8));\n    eax = *(rax);\n    if (al == 0) {\n        goto label_1;\n    }\n    rdx = *((rsp + 0xd8));\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = al;\n        }\n        rbx++;\n        eax = *((rdx + rbx));\n    } while (al != 0);\n    goto label_1;\nlabel_3:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 1;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x41255c;\n    void (*0x407528)() ();\nlabel_2:\n    r10d = 0;\n    eax = 0;\n    *((rsp + 0x1f)) = 1;\n    *((rsp + 0x58)) = 0;\n    void (*0x407d16)() ();\nlabel_6:\n    *((rsp + 0x1f)) = 1;\n    r10d = 0;\n    ebx = 0;\n    *((rsp + 0x6d)) = 0;\n    *((rsp + 0x58)) = 0;\n    *((rsp + 0x6c)) = 1;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x50)) = 0x41367c;\n    return void (*0x407528)() ();\n}\n"
        },
        {
            "funcName": "fcn_00407528",
            "funcStartAddr": "0x407528",
            "funcEndAddr": "0x4086b1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x407528 */\n#include <stdint.h>\n \nint64_t fcn_00407528 (size_t * arg_8h, uint32_t arg_10h, uint32_t arg_1fh, char * s, size_t n, size_t * arg_30h, size_t * arg_38h, size_t arg_40h, size_t arg_48h, void * s2, char * arg_78h, uint32_t arg_60h, int64_t arg_88h_2, uint32_t arg_6ch, uint32_t arg_6dh, int64_t arg_6eh, int64_t arg_6fh, int64_t arg_70h, int64_t arg_78h_2, wint_t wc, mbstate_t * ps, int64_t arg_e8h_3, uint32_t arg_e8h_2, int64_t arg_e8h) {\n    r9 = r11;\n    r12d = 0;\n    r11d = r13d;\n    do {\nlabel_26:\n        r13b = (r9 != r12) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            r13b = (*((rax + r12)) != 0) ? 1 : 0;\n        }\n        if (r13b == 0) {\n            goto label_41;\n        }\n        rdi = *((rsp + 0x20));\n        al = (r11d != 2) ? 1 : 0;\n        al &= *((rsp + 8));\n        r8 = rdi + r12;\n        *((rsp + 0x10)) = al;\n        if (al == 0) {\n            goto label_42;\n        }\n        rax = *((rsp + 0x28));\n        if (rax == 0) {\n            goto label_43;\n        }\n        rbp = r12 + rax;\n        if (r9 == -1) {\n            if (rax <= 1) {\n                goto label_44;\n            }\n            *((rsp + 0x40)) = r11d;\n            *((rsp + 0x38)) = r10b;\n            *((rsp + 0x30)) = r8;\n            rax = strlen (rdi);\n            r11d = *((rsp + 0x40));\n            r10d = *((rsp + 0x38));\n            r8 = *((rsp + 0x30));\n            r9 = rax;\n        }\nlabel_44:\n        if (rbp > r9) {\n            goto label_43;\n        }\n        rdi = r8;\n        *((rsp + 0x48)) = r11d;\n        *((rsp + 0x40)) = r9;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        eax = memcmp (rdi, *((rsp + 0x50)), *((rsp + 0x28)));\n        r8 = *((rsp + 0x30));\n        r10d = *((rsp + 0x38));\n        r9 = *((rsp + 0x40));\n        r11d = *((rsp + 0x48));\n        if (eax != 0) {\n            goto label_43;\n        }\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_45;\n        }\n        ebp = *(r8);\n        if (bpl > 0x7e) {\n            goto label_46;\n        }\n        eax = (int32_t) bpl;\n        /* switch table (127 cases) at 0x412618 */\n        *((rsp + 0x10)) = 0;\n        al = (r9 != 1) ? 1 : 0;\n        if (r9 == -1) {\n            rax = *((rsp + 0x20));\n            al = (*((rax + 1)) != 0) ? 1 : 0;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        if (al != 0) {\n            goto label_6;\n        }\nlabel_16:\n        if (r12 != 0) {\n            goto label_6;\n        }\nlabel_17:\n        if (*((rsp + 0x6c)) != 0) {\n            if (dl != 0) {\n                goto label_47;\n            }\n        }\nlabel_2:\n        eax = *((rsp + 8));\n        eax ^= 1;\n        eax |= edx;\n        eax ^= 1;\n        al |= *((rsp + 0x6c));\n        if (al == 0) {\n            goto label_10;\n        }\nlabel_22:\n        eax = 0;\nlabel_9:\n        if (*((rsp + 0xd0)) == 0) {\n            goto label_10;\n        }\n        edx = ebp;\n        rcx = *((rsp + 0xd0));\n        dl >>= 5;\n        edx = (int32_t) dl;\n        edx = *((rcx + rdx*4));\n        ecx = ebp;\n        edx >>= cl;\n        edx &= 1;\n        if (edx == 0) {\n            goto label_10;\n        }\n        dl = (r11d == 2) ? 1 : 0;\nlabel_0:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_48;\n        }\nlabel_4:\n        eax = r10d;\n        eax ^= 1;\n        al &= dl;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rdx = rbx + 1;\n            if (rdx < r14) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rdx = rbx + 2;\n            if (rdx < r14) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\nlabel_8:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n        r12++;\nlabel_1:\n        if (rbx < r14) {\n            *((r15 + rbx)) = bpl;\n        }\n        edi = *((rsp + 0x1f));\n        rbx++;\n        eax = 0;\n        if (r13b == 0) {\n            edi = eax;\n        }\n        *((rsp + 0x1f)) = dil;\n    } while (1);\nlabel_3:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_49;\n    }\n    if (r14 == 0) {\n        goto label_50;\n    }\n    edx = 0;\n    if (*((rsp + 0x58)) != 0) {\n        goto label_50;\n    }\nlabel_25:\n    *((rsp + 0x6d)) = r13b;\n    rbx += 3;\n    eax = 0;\n    r10d = 0;\n    *((rsp + 0x58)) = r14;\n    r14 = rdx;\nlabel_10:\n    dl = (r11d == 2) ? 1 : 0;\n    if (*((rsp + 0x10)) != 0) {\n        goto label_0;\n    }\n    eax ^= 1;\n    r12++;\n    eax &= r10d;\nlabel_15:\n    if (al == 0) {\n        goto label_1;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x27;\n    }\n    rbx += 2;\n    r10d = 0;\n    goto label_1;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_51;\n    }\n    if (r11d == 5) {\n        goto label_52;\n    }\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\n    if (r11d == 2) {\n        goto label_3;\n    }\n    *((rsp + 0x6d)) = r13b;\n    edx = 0;\n    goto label_2;\n    *((rsp + 0x10)) = 0;\nlabel_14:\n    edx = *((rsp + 8));\n    dl &= *((rsp + 0x6c));\n    ecx = 0x5c;\n    al = (*((rsp + 0x28)) != 0) ? 1 : 0;\n    dl &= al;\n    if (dl != 0) {\n        goto label_53;\n    }\nlabel_7:\n    if (*((rsp + 8)) != 0) {\n        goto label_54;\n    }\nlabel_6:\n    r13d = 0;\n    goto label_2;\nlabel_5:\n    edx = 0;\n    r13d = 0;\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_4;\n    }\nlabel_48:\n    r13d = r11d;\n    eax = edx;\n    r11 = r9;\nlabel_37:\nlabel_11:\n    eax = 4;\n    if (*((rsp + 8)) != 0) {\n        r13d = eax;\n    }\nlabel_38:\n    r9d &= 0xfffffffd;\n    rax = fcn_00407490 (r15, r14, *((rsp + 0x40)), r11, r13d, *((rsp + 0x88)));\n    rbx = rax;\nlabel_39:\n    rax = rbx;\n    return rax;\n    goto label_5;\n    *((rsp + 0x10)) = 0;\n    edx = 0;\n    goto label_6;\n    *((rsp + 0x10)) = 0;\n    ecx = 0x72;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_7;\n    do {\nlabel_19:\n        if (*((rsp + 0x6c)) != 0) {\n            goto label_55;\n        }\nlabel_31:\n        r13d = 0;\n        goto label_8;\n    } while (1);\nlabel_13:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_56;\n    }\n    *((rsp + 0x10)) = 0;\n    eax = r10d;\n    dl = (r11d == 2) ? 1 : 0;\n    eax ^= 1;\n    al &= dl;\n    if (al == 0) {\n        goto label_57;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rcx = rbx + 1;\n    if (r14 > rcx) {\n        *((r15 + rbx + 1)) = 0x24;\n    }\n    rcx = rbx + 2;\n    if (r14 > rcx) {\n        *((r15 + rbx + 2)) = 0x27;\n    }\n    rcx = rbx + 3;\n    if (r14 <= rcx) {\n        goto label_58;\n    }\nlabel_24:\n    *((r15 + rcx)) = 0x5c;\n    r10d = eax;\nlabel_23:\n    rbx = rcx + 1;\n    if (r11d == 2) {\n        goto label_59;\n    }\n    rax = r12 + 1;\n    if (rax < r9) {\n        rax = *((rsp + 0x20));\n        eax = *((rax + r12 + 1));\n        *((rsp + 0x30)) = al;\n        eax -= 0x30;\n        if (al <= 9) {\n            goto label_60;\n        }\n    }\nlabel_32:\n    eax = *((rsp + 8));\n    eax ^= 1;\n    al |= dl;\n    eax = r13d;\n    r13d = 0;\n    if (al == 0) {\n        goto label_9;\n    }\n    goto label_10;\nlabel_18:\n    *((rsp + 0x10)) = 0;\n    do {\nlabel_46:\n        if (*((rsp + 0x60)) != 1) {\n            goto label_61;\n        }\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r9;\n        *((rsp + 0x30)) = r10b;\n        rax = ctype_b_loc ();\n        edx = (int32_t) bpl;\n        r10d = *((rsp + 0x30));\n        r9 = *((rsp + 0x38));\n        rax = *(rax);\n        r11d = *((rsp + 0x40));\n        edi = 1;\n        eax = *((rax + rdx*2));\n        ax &= 0x4000;\n        r13b = (ax != 0) ? 1 : 0;\n        dl = (ax == 0) ? 1 : 0;\n        dl &= *((rsp + 8));\nlabel_34:\n        if (dl != 0) {\n            goto label_62;\n        }\n        dl = (r11d == 2) ? 1 : 0;\n        goto label_2;\nlabel_42:\n        ebp = *(r8);\n    } while (bpl > 0x7e);\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x412a10 */\n    ecx = 0x6e;\nlabel_12:\n    eax = *((rsp + 0x6c));\n    dl = (r11d == 2) ? 1 : 0;\n    al &= dl;\n    *((rsp + 0x10)) = al;\n    if (al == 0) {\n        goto label_7;\n    }\nlabel_47:\n    r11 = r9;\n    r13d = 2;\n    goto label_11;\n    ecx = 0x74;\n    goto label_12;\n    ecx = 0x62;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_7;\n    ecx = 0x61;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_7;\n    if (*((rsp + 8)) != 0) {\n        goto label_13;\n    }\n    if ((*((rsp + 0x68)) & 1) != 0) {\n        goto label_63;\n    }\n    *((rsp + 0x10)) = 0;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    ebp = 0;\n    goto label_2;\n    if (r11d != 2) {\n        goto label_14;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_49;\n    }\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_15;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_16;\n    dl = (r11d == 2) ? 1 : 0;\n    r13d = 0;\n    goto label_17;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_17;\n    ecx = 0x72;\n    goto label_12;\n    ecx = 0x66;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_7;\n    ecx = 0x76;\n    dl = (r11d == 2) ? 1 : 0;\n    goto label_7;\nlabel_43:\n    ebp = *(r8);\n    if (bpl > 0x7e) {\n        goto label_18;\n    }\n    eax = (int32_t) bpl;\n    /* switch table (127 cases) at 0x412e08 */\n    eax = 0;\n    do {\nlabel_28:\n        r13d = *((rsp + 0x10));\n        *((rsp + 0x10)) = al;\n        eax = 0;\n        goto label_9;\n        eax = 0;\nlabel_29:\n        if (r12 != 0) {\n            goto label_64;\n        }\n        r13d = *((rsp + 0x10));\n        edx = 0;\n        *((rsp + 0x10)) = al;\n        goto label_2;\n        eax = 0;\nlabel_30:\n    } while (1);\n    goto label_5;\n    goto label_19;\nlabel_41:\n    r13d = r11d;\n    r11 = r9;\n    dl = (r13d == 2) ? 1 : 0;\n    if (rbx == 0) {\n        if ((*((rsp + 0x6c)) & dl) != 0) {\n            goto label_65;\n        }\n    }\n    eax = *((rsp + 0x6c));\n    eax ^= 1;\n    dl &= al;\n    if (dl == 0) {\n        goto label_66;\n    }\n    if (*((rsp + 0x6d)) == 0) {\n        goto label_40;\n    }\n    if (*((rsp + 0x1f)) != 0) {\n        goto label_67;\n    }\n    al = (r14 == 0) ? 1 : 0;\n    dl = (*((rsp + 0x58)) != 0) ? 1 : 0;\n    al &= dl;\n    if (al == 0) {\n        goto label_68;\n    }\n    r14 = *((rsp + 0x58));\nlabel_52:\n    if ((*((rsp + 0x68)) & 4) != 0) {\n        rax = r12 + 2;\n        if (rax >= r9) {\n            goto label_35;\n        }\n        rsi = *((rsp + 0x20));\n        if (*((rsi + r12 + 1)) == 0x3f) {\n            goto label_69;\n        }\n    }\nlabel_35:\n    edx = 0;\n    r13d = 0;\n    goto label_2;\nlabel_51:\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_49;\n    }\n    r13d = 0;\n    eax = 0;\n    goto label_10;\nlabel_61:\n    *((rsp + 0x88)) = 0;\n    if (r9 == -1) {\n        *((rsp + 0x40)) = r11d;\n        *((rsp + 0x38)) = r10b;\n        *((rsp + 0x30)) = r8;\n        rax = strlen (*((rsp + 0x20)));\n        r11d = *((rsp + 0x40));\n        r10d = *((rsp + 0x38));\n        r8 = *((rsp + 0x30));\n        r9 = rax;\n    }\n    eax = 0;\n    *((rsp + 0x70)) = rbx;\n    *((rsp + 0x78)) = r8;\n    rbx = rax;\n    *((rsp + 0x6e)) = r10b;\n    *((rsp + 0x6f)) = bpl;\n    *((rsp + 0x40)) = r15;\n    *((rsp + 0x48)) = r14;\n    *((rsp + 0x30)) = r9;\n    *((rsp + 0x38)) = r11d;\n    while (*((rsp + 0x38)) != 2) {\nlabel_20:\n        eax = iswprint (*((rsp + 0x84)));\n        rdi = rsp + 0x88;\n        eax = 0;\n        if (eax == 0) {\n            r13d = eax;\n        }\n        rbx += r14;\n        eax = mbsinit (rdi);\n        if (eax != 0) {\n            goto label_70;\n        }\n        rax = *((rsp + 0x20));\n        r15 = r12 + rbx;\n        rbp = rax + r15;\n        rdx -= r15;\n        rax = fcn_0040ae50 (rsp + 0x84, rbp, *((rsp + 0x30)), rsp + 0x88);\n        r14 = rax;\n        if (rax == 0) {\n            goto label_70;\n        }\n        if (rax == -1) {\n            goto label_71;\n        }\n        if (rax == 0xfffffffffffffffe) {\n            goto label_72;\n        }\n    }\n    if (*((rsp + 0x6c)) == 0) {\n        goto label_20;\n    }\n    if (rax == 1) {\n        goto label_20;\n    }\n    rsi = *((rsp + 0x20));\n    rax = rsi + r15 + 1;\n    rsi += r14;\n    rsi += r15;\n    goto label_73;\nlabel_21:\n    rax++;\n    if (rsi == rax) {\n        goto label_20;\n    }\nlabel_73:\n    ecx = *(rax);\n    *((rbx - 0x67fa417)) |= al;\n    *((rdi - 0x18)) &= esi;\n    edx = 1;\n    rdx <<= cl;\n    rcx = 0x20000002b;\n    if ((rdx & rcx) == 0) {\n        goto label_21;\n    }\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r13d = 2;\n    r11 = *((rsp + 0x30));\n    goto label_11;\nlabel_64:\n    *((rsp + 0x10)) = al;\n    r13d = 0;\n    goto label_22;\nlabel_57:\n    rcx = rbx;\n    if (r14 <= rbx) {\n        goto label_23;\n    }\n    eax = r10d;\n    goto label_24;\nlabel_50:\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x27;\n    }\n    rax = rbx + 1;\n    if (r14 > rax) {\n        *((r15 + rbx + 1)) = 0x5c;\n    }\n    rax = rbx + 2;\n    if (r14 <= rax) {\n        goto label_74;\n    }\n    rdx = r14;\n    *((r15 + rbx + 2)) = 0x27;\n    r14 = *((rsp + 0x58));\n    goto label_25;\nlabel_63:\n    r12++;\n    goto label_26;\nlabel_62:\n    edx = *((rsp + 8));\n    r13d = 0;\nlabel_33:\n    rcx = rdi;\n    *((rsp + 0x30)) = r13b;\n    esi = 0;\n    r13d = *((rsp + 0x6c));\n    rcx += r12;\n    edi = *((rsp + 0x10));\n    r8 = *((rsp + 0x20));\n    while (dl != 0) {\n        al = (r11d == 2) ? 1 : 0;\n        if (r13b != 0) {\n            goto label_75;\n        }\n        esi = r10d;\n        esi ^= 1;\n        al &= sil;\n        if (al != 0) {\n            if (r14 > rbx) {\n                *((r15 + rbx)) = 0x27;\n            }\n            rsi = rbx + 1;\n            if (r14 > rsi) {\n                *((r15 + rbx + 1)) = 0x24;\n            }\n            rsi = rbx + 2;\n            if (r14 > rsi) {\n                *((r15 + rbx + 2)) = 0x27;\n            }\n            rbx += 3;\n            r10d = eax;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 6;\n            eax += 0x30;\n            *((r15 + rbx + 1)) = al;\n        }\n        rax = rbx + 2;\n        if (r14 > rax) {\n            eax = ebp;\n            al >>= 3;\n            eax &= 7;\n            eax += 0x30;\n            *((r15 + rbx + 2)) = al;\n        }\n        ebp &= 7;\n        r12++;\n        rbx += 3;\n        ebp += 0x30;\n        if (r12 >= rcx) {\n            goto label_76;\n        }\n        esi = edx;\nlabel_27:\n        if (r14 > rbx) {\n            *((r15 + rbx)) = bpl;\n        }\n        ebp = *((r8 + r12));\n        rbx++;\n    }\n    eax = esi;\n    eax ^= 1;\n    eax &= r10d;\n    if (dil != 0) {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x5c;\n        }\n        rbx++;\n    }\n    r12++;\n    if (r12 < rcx) {\n        if (al == 0) {\n            goto label_77;\n        }\n        if (r14 > rbx) {\n            *((r15 + rbx)) = 0x27;\n        }\n        rax = rbx + 1;\n        if (r14 > rax) {\n            *((r15 + rbx + 1)) = 0x27;\n        }\n        rbx += 2;\n        edi = 0;\n        r10d = 0;\n        goto label_27;\n    }\n    r13d = *((rsp + 0x30));\n    goto label_15;\nlabel_75:\n    r13d = r11d;\n    *((rsp + 8)) = al;\n    r11 = r9;\n    goto label_11;\nlabel_58:\n    rbx += 4;\n    r10d = eax;\n    r13d = 0;\n    goto label_10;\n    eax = *((rsp + 0x10));\n    goto label_28;\n    eax = *((rsp + 0x10));\n    goto label_29;\n    eax = *((rsp + 0x10));\n    goto label_30;\n    edx = 0;\n    r13d = 0;\n    goto label_4;\n    goto label_31;\nlabel_60:\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x30;\n    }\n    rax = rcx + 2;\n    if (r14 > rax) {\n        *((r15 + rcx + 2)) = 0x30;\n    }\n    rbx = rcx + 3;\n    goto label_32;\nlabel_76:\n    r13d = *((rsp + 0x30));\n    goto label_1;\nlabel_53:\n    r12++;\n    eax = r10d;\n    r13d = 0;\n    goto label_15;\nlabel_77:\n    edi = 0;\n    goto label_27;\nlabel_70:\n    rdi = rbx;\n    edx = r13d;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    edx ^= 1;\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    dl &= *((rsp + 8));\nlabel_36:\n    if (rdi > 1) {\n        goto label_33;\n    }\n    goto label_34;\nlabel_59:\n    eax = r13d;\n    r13d = 0;\n    goto label_10;\nlabel_69:\n    ebp = *((rsi + rax));\n    if (bpl > 0x3e) {\n        goto label_35;\n    }\n    rsi = 0x7000a38200000000;\n    if (((rsi >> rbp) & 1) >= 0) {\n        goto label_35;\n    }\n    if (*((rsp + 0x6c)) != 0) {\n        goto label_45;\n    }\n    if (r14 > rbx) {\n        *((r15 + rbx)) = 0x3f;\n    }\n    rdx = rbx + 1;\n    if (r14 > rdx) {\n        *((r15 + rbx + 1)) = 0x22;\n    }\n    rdx = rbx + 2;\n    if (r14 > rdx) {\n        *((r15 + rbx + 2)) = 0x22;\n    }\n    rdx = rbx + 3;\n    if (r14 > rdx) {\n        *((r15 + rbx + 3)) = 0x3f;\n    }\n    rbx += 4;\n    edx = 0;\n    r13d = 0;\n    r12 = rax;\n    goto label_32;\nlabel_71:\n    rdi = rbx;\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r13d = 0;\n    r10d = *((rsp + 0x6e));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r9 = *((rsp + 0x30));\n    r11d = *((rsp + 0x38));\n    edx = *((rsp + 8));\n    goto label_36;\nlabel_72:\n    r9 = *((rsp + 0x30));\n    rsi = r15;\n    rcx = rbp;\n    rax = rbx;\n    rdi = rbx;\n    r8 = *((rsp + 0x78));\n    r10d = *((rsp + 0x6e));\n    ebp = *((rsp + 0x6f));\n    rbx = *((rsp + 0x70));\n    r15 = *((rsp + 0x40));\n    r14 = *((rsp + 0x48));\n    r11d = *((rsp + 0x38));\n    if (rsi >= r9) {\n        goto label_78;\n    }\n    if (*(rcx) != 0) {\n        goto label_79;\n    }\n    goto label_78;\n    do {\n        if (*((r8 + rax)) == 0) {\n            goto label_80;\n        }\nlabel_79:\n        rax++;\n        rdx = r12 + rax;\n    } while (rdx < r9);\nlabel_80:\n    rdi = rax;\nlabel_78:\n    edx = *((rsp + 8));\n    r13d = 0;\n    goto label_36;\nlabel_55:\n    r13d = r11d;\n    eax = 0;\n    r11 = r9;\n    goto label_37;\nlabel_45:\n    r13d = r11d;\n    r11 = r9;\n    goto label_38;\nlabel_66:\n    edx = eax;\nlabel_40:\n    rax = *((rsp + 0x50));\n    if (rax == 0) {\n        goto label_81;\n    }\n    if (dl == 0) {\n        goto label_81;\n    }\n    edx = *(rax);\n    if (dl == 0) {\n        goto label_81;\n    }\n    rax -= rbx;\n    do {\n        if (r14 > rbx) {\n            *((r15 + rbx)) = dl;\n        }\n        rbx++;\n        edx = *((rax + rbx));\n    } while (dl != 0);\nlabel_81:\n    if (r14 <= rbx) {\n        goto label_39;\n    }\n    *((r15 + rbx)) = 0;\n    goto label_39;\nlabel_49:\n    r13d = r11d;\n    r11 = r9;\n    goto label_11;\nlabel_56:\n    r13d = r11d;\n    r11 = r9;\n    rsp + 8 = (r13d == 2) ? 1 : 0;\n    goto label_11;\nlabel_67:\n    rax = fcn_00407490 (r15, *((rsp + 0x78)), *((rsp + 0x40)), r11, 5, *((rsp + 0x88)));\n    rbx = rax;\n    goto label_39;\nlabel_68:\n    edx = *((rsp + 0x6d));\n    goto label_40;\nlabel_65:\n    r13d = 2;\n    goto label_11;\nlabel_74:\n    rdx = r14;\n    r14 = *((rsp + 0x58));\n    goto label_25;\nlabel_54:\n    r13d = 0;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00407d16",
            "funcStartAddr": "0x407d16",
            "funcEndAddr": "0x407d45",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x407d16 */\n#include <stdint.h>\n \nvoid fcn_00407d16 (int64_t arg_28h, int64_t arg_50h, int64_t arg_6ch, int64_t arg_6dh) {\n    *(r15) = 0x27;\n    r13d = 2;\n    ebx = 1;\n    *((rsp + 0x50)) = 0x41367c;\n    *((rsp + 0x28)) = 1;\n    *((rsp + 0x6c)) = 0;\n    *((rsp + 0x6d)) = al;\n    return void (*0x407528)() ();\n}\n"
        },
        {
            "funcName": "fcn_00407ecf",
            "funcStartAddr": "0x407ecf",
            "funcEndAddr": "0x407ed8",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x407ecf */\n#include <stdint.h>\n \nvoid fcn_00407ecf (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    *((rbx - 0x67fa417)) |= al;\n    *((rdi - 0x18)) &= esi;\n}\n"
        },
        {
            "funcName": "fcn_004086c0",
            "funcStartAddr": "0x4086c0",
            "funcEndAddr": "0x40ebb9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x4086c0 */\n#include <stdint.h>\n \nuint64_t fcn_004086c0 (int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_30h;\n    int64_t var_18h;\n    int64_t var_24h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    do {\n        abort ();\n        r15 = (int64_t) edi;\n        r14 = rdx;\n        *((rsp + 8)) = rsi;\n        rax = errno_location ();\n        rbx = *(0x00617378);\n        r13 = rax;\n        eax = *(rax);\n        *((rsp + 0x18)) = eax;\n    } while (r15d < 0);\n    if (*(0x00617390) > r15d) {\n        goto label_0;\n    }\n    if (r15d == 0x7fffffff) {\n        goto label_1;\n    }\n    r12d = r15 + 1;\n    rsi = (int64_t) r12d;\n    rsi <<= 4;\n    if (rbx == 0x617380) {\n        goto label_2;\n    }\n    rax = fcn_004095c0 (rbx, rsi);\n    *(0x00617378) = rax;\n    rbx = rax;\n    do {\n        rdi = *(0x00617390);\n        edx -= edi;\n        rdi <<= 4;\n        rdx = (int64_t) edx;\n        rdi += rbx;\n        rdx <<= 4;\n        memset (rdi, 0, r12d);\n        *(0x00617390) = r12d;\nlabel_0:\n        eax = *((rbp + 4));\n        r15 <<= 4;\n        rbx += r15;\n        r15 = rbp + 8;\n        eax |= 1;\n        r11 = *(rbx);\n        r12 = *((rbx + 8));\n        *((rsp + 0x24)) = eax;\n        rsi = r11;\n        *((rsp + 0x30)) = r11;\n        rax = fcn_00407490 (r12, rsi, *((rsp + 0x28)), r14, *(rbp), eax);\n        r11 = *((rsp + 0x10));\n        if (r11 <= rax) {\n            rsi = rax + 1;\n            *(rbx) = rsi;\n            if (r12 != 0x6174a0) {\n                *((rsp + 0x10)) = rsi;\n                free (r12);\n                rsi = *((rsp + 0x10));\n            }\n            *((rsp + 0x10)) = rsi;\n            rax = fcn_00409560 (*((rsp + 0x10)));\n            *((rbx + 8)) = rax;\n            rdi = rax;\n            r12 = rax;\n            fcn_00407490 (rdi, *((rsp + 0x30)), *((rsp + 0x28)), r14, *(rbp), *((rsp + 0x3c)));\n        }\n        eax = *((rsp + 0x18));\n        *(r13) = eax;\n        rax = r12;\n        return rax;\nlabel_2:\n        rax = fcn_004095c0 (0, rsi);\n        __asm (\"movdqa xmm0, xmmword [0x00617380]\");\n        rbx = rax;\n        *(0x00617378) = rax;\n        __asm (\"movups xmmword [rax], xmm0\");\n    } while (1);\nlabel_1:\n    return fcn_004097b0 ();\n}\n"
        },
        {
            "funcName": "fcn_004088a0",
            "funcStartAddr": "0x4088a0",
            "funcEndAddr": "0x4088af",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x4088a0 */\n#include <stdint.h>\n \nint32_t fcn_004088a0 (int64_t arg1) {\n    rdi = arg1;\n    eax = 0x6175a0;\n    if (rdi == 0) {\n        rdi = rax;\n    }\n    eax = *(rdi);\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_004088b0",
            "funcStartAddr": "0x4088b0",
            "funcEndAddr": "0x4088bf",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x4088b0 */\n#include <stdint.h>\n \nint32_t fcn_004088b0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    eax = 0x6175a0;\n    if (rdi == 0) {\n        rdi = rax;\n    }\n    *(rdi) = esi;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_00408be0",
            "funcStartAddr": "0x408be0",
            "funcEndAddr": "0x40f4be",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x408be0 */\n#include <stdint.h>\n \nint64_t fcn_00408be0 (int64_t arg1, uint32_t arg2, int64_t arg3) {\n    int64_t var_4h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    do {\n        abort ();\n    } while (esi == 0xa);\n    rax = rdx;\n    *(rsp) = esi;\n    *((rsp + 4)) = 0;\n    *((rsp + 8)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x20)) = 0;\n    *((rsp + 0x28)) = 0;\n    *((rsp + 0x30)) = 0;\n    fcn_004086c0 (rdi, rax, 0xffffffffffffffff, rsp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00408cc0",
            "funcStartAddr": "0x408cc0",
            "funcEndAddr": "0x408ccc",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x408cc0 */\n#include <stdint.h>\n \nvoid fcn_00408cc0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = rsi;\n    esi = edi;\n    edi = 0;\n    return void (*0x408be0)() ();\n}\n"
        },
        {
            "funcName": "fcn_00408d60",
            "funcStartAddr": "0x408d60",
            "funcEndAddr": "0x408df1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x408d60 */\n#include <stdint.h>\n \nint64_t fcn_00408d60 (int64_t arg1, int64_t arg7, int64_t arg8, int64_t arg9) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_20h;\n    int64_t var_30h;\n    rdi = arg1;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    xmm2 = arg9;\n    do {\n        rax = imp.__libc_start_main;\n        ecx = edx;\n        __asm (\"movdqa xmm0, xmmword [0x006175a0]\");\n        __asm (\"movdqa xmm1, xmmword [0x006175b0]\");\n        __asm (\"movdqa xmm2, xmmword [0x006175c0]\");\n        ecx &= 0x1f;\n        *((rsp + 0x30)) = rax;\n        eax = edx;\n        al >>= 5;\n        *(rsp) = xmm0;\n        eax = (int32_t) al;\n        *((rsp + 0x10)) = xmm1;\n        r8 = rsp + rax*4 + 8;\n        *((rsp + 0x20)) = xmm2;\n        edx = *(r8);\n        eax = *(r8);\n        eax >>= cl;\n        eax = ~eax;\n        eax &= 1;\n        eax <<= cl;\n        eax ^= edx;\n        *(r8) = eax;\n        fcn_004086c0 (0, rdi, rsi, rsp);\n        return rax;\n        edx = 0x3a;\n        rsi = 0xffffffffffffffff;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00408ef0",
            "funcStartAddr": "0x408ef0",
            "funcEndAddr": "0x408f01",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x408ef0 */\n#include <stdint.h>\n \nvoid fcn_00408ef0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    ecx = 0x617340;\n    rdx = 0xffffffffffffffff;\n    return void (*0x4086c0)() ();\n}\n"
        },
        {
            "funcName": "fcn_00408f10",
            "funcStartAddr": "0x408f10",
            "funcEndAddr": "0x408f26",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x408f10 */\n#include <stdint.h>\n \nvoid fcn_00408f10 (int64_t arg1) {\n    rdi = arg1;\n    rsi = rdi;\n    ecx = 0x617340;\n    rdx = 0xffffffffffffffff;\n    edi = 0;\n    return void (*0x4086c0)() ();\n}\n"
        },
        {
            "funcName": "fcn_00408f30",
            "funcStartAddr": "0x408f30",
            "funcEndAddr": "0x408f7a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x408f30 */\n#include <stdint.h>\n \nuint64_t fcn_00408f30 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    eax = 0;\n    *((rdi + 8)) = 0;\n    eax = fcn_0040c6a0 (0x411fe4, 0x80000, rdx, rcx);\n    edx = eax;\n    *(rbx) = eax;\n    eax = 0;\n    if (edx >= 0) {\n        return eax;\n    }\n    rax = fcn_00409bb0 (0, 0);\n    *((rbx + 8)) = rax;\n    al = (rax == 0) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = -eax;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00408f80",
            "funcStartAddr": "0x408f80",
            "funcEndAddr": "0x409bab",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x408f80 */\n#include <stdint.h>\n \nuint64_t fcn_00408f80 (int64_t arg1) {\n    int64_t var_ch;\n    rdi = arg1;\n    eax = *(rdi);\n    if (eax >= 0) {\n        edi = eax;\n        void (*0x4021e0)() ();\n    }\n    rdi = *((rdi + 8));\n    r13 = rdi;\n    eax = chdir ();\n    ebx = eax;\n    if (eax == 0) {\n        goto label_3;\n    }\n    rax = errno_location ();\n    r12 = rax;\n    if (*(rax) != 0x24) {\n        goto label_3;\n    }\n    rax = strlen (r13);\n    *((rsp + 0xc)) = 0xffffff9c;\n    r14 = rax;\n    if (rax == 0) {\n        goto label_4;\n    }\n    if (rax <= 0xfff) {\n        goto label_5;\n    }\n    rax = strspn (r13, 0x412556);\n    rbx = rax;\n    if (rax == 2) {\n        goto label_6;\n    }\n    if (rax != 0) {\n        goto label_7;\n    }\nlabel_0:\n    if (*(rbp) == 0x2f) {\n        goto label_8;\n    }\n    r13 += r14;\n    if (rbp <= r13) {\n        goto label_9;\n    }\n    goto label_10;\n    do {\n        edx = 0x1000;\n        esi = 0x2f;\n        rdi = rbp;\n        rax = memrchr ();\n        rbx = rax;\n        if (rax == 0) {\n            goto label_11;\n        }\n        *(rax) = 0;\n        rax -= rbp;\n        if (rax > 0xfff) {\n            goto label_12;\n        }\n        eax = fcn_00409900 (rsp + 0xc, rbp);\n        *(rbx) = 0x2f;\n        if (eax != 0) {\n            goto label_2;\n        }\n        rbx++;\n        strspn (rbx, 0x412556);\n        rbp = rbx + rax;\nlabel_9:\n        rax = r13;\n        rax -= rbp;\n    } while (rax > 0xfff);\n    if (r13 > rbp) {\n        eax = fcn_00409900 (rsp + 0xc, rbp);\n        if (eax != 0) {\n            goto label_2;\n        }\n    }\n    edi = *((rsp + 0xc));\n    eax = fchdir ();\n    ebx = eax;\n    if (eax == 0) {\n        goto label_13;\n    }\n    do {\nlabel_2:\n        ebx = *(r12);\n        fcn_004098c0 (*((rsp + 0xc)));\n        *(r12) = ebx;\nlabel_1:\n        ebx = 0xffffffff;\nlabel_3:\n        eax = ebx;\n        return rax;\nlabel_7:\n        eax = fcn_00409900 (rsp + 0xc, 0x412556);\n    } while (eax != 0);\n    rbp = r13 + rbx;\n    goto label_0;\nlabel_6:\n    rax = fcn_0040aed0 (r13 + 3, 0x2f, r14 - 3);\n    rbx = rax;\n    if (rax == 0) {\n        goto label_1;\n    }\n    *(rax) = 0;\n    eax = fcn_00409900 (rsp + 0xc, r13);\n    *(rbx) = 0x2f;\n    if (eax != 0) {\n        goto label_2;\n    }\n    rbx++;\n    strspn (rbx, 0x412556);\n    rbp = rbx + rax;\n    goto label_0;\nlabel_11:\n    *(r12) = 0x24;\n    ebx = 0xffffffff;\n    goto label_3;\nlabel_13:\n    fcn_004098c0 (*((rsp + 0xc)));\n    goto label_3;\nlabel_12:\n    assert_fail (\"slash - dir < 4096\", \"lib/chdir-long.c\", 0xb3, \"chdir_long\");\nlabel_8:\n    assert_fail (\"*dir != '/', \"lib/chdir-long.c\", 0xa2, \"chdir_long\");\nlabel_10:\n    assert_fail (\"dir <= dir_end\", \"lib/chdir-long.c\", 0xa3, \"chdir_long\");\nlabel_5:\n    assert_fail (\"4096 <= len\", \"lib/chdir-long.c\", 0x7f, \"chdir_long\");\nlabel_4:\n    return assert_fail (\"0 < len\", \"lib/chdir-long.c\", 0x7e, \"chdir_long\");\n}\n"
        },
        {
            "funcName": "fcn_00408fa0",
            "funcStartAddr": "0x408fa0",
            "funcEndAddr": "0x408fb9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x408fa0 */\n#include <stdint.h>\n \nvoid fcn_00408fa0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    edi = *(rdi);\n    if (edi >= 0) {\n        close (rdi);\n    }\n    rdi = *((rbx + 8));\n    return free ();\n}\n"
        },
        {
            "funcName": "fcn_00408fc0",
            "funcStartAddr": "0x408fc0",
            "funcEndAddr": "0x40ffe4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x408fc0 */\n#include <stdint.h>\n \nvoid fcn_00408fc0 (int64_t arg_20h, int64_t arg_30h, int64_t arg_8h_2, int64_t arg_10h, int64_t arg_8h, int64_t arg_8h_3, int64_t arg_10h_2, int64_t arg_18h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_30h;\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    eax = abort ();\n    r12 = r9;\n    rbx = r8;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    r9 = rcx;\n    r8 = rdx;\n    rcx = rsi;\n    edx = \"%s (%s) %s\\n\";\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    do {\n        edx = 5;\n        rax = dcgettext (0, 0x4132ab);\n        r8d = 0x7e1;\n        edx = \"Copyright %s %d Free Software Foundation, Inc.\";\n        rdi = rbp;\n        rcx = rax;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        edx = 5;\n        rax = dcgettext (0, \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\");\n        rsi = rbp;\n        rdi = rax;\n        eax = fputs_unlocked ();\n        if (r12 > 9) {\n            goto label_2;\n        }\n        /* switch table (10 cases) at 0x413598 */\nlabel_1:\n        r8 = rcx;\n        esi = 1;\n        rcx = rdx;\n        eax = 0;\n        edx = \"%s %s\\n\";\n        fprintf_chk ();\n    } while (1);\n    r9 = *((rbx + 0x38));\n    rax = *((rbx + 0x10));\n    edx = 5;\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    r15 = *((rbx + 0x20));\n    *((rsp + 0x10)) = r9;\n    r14 = *((rbx + 0x18));\n    rbx = *(rbx);\n    *(rsp) = rax;\n    *((rsp + 8)) = r8;\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n    do {\n        r9 = *((rsp + 0x18));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        r9 = *((rsp + 0x30));\n        r8 = *((rsp + 0x38));\n        fprintf_chk ();\n        return rax;\n        r10 = *((rbx + 0x40));\n        r9 = *((rbx + 0x38));\n        edx = 5;\n        rax = *((rbx + 0x10));\n        r8 = *((rbx + 8));\n        r13 = *((rbx + 0x30));\n        r12 = *((rbx + 0x28));\n        *((rsp + 0x18)) = r10;\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        *((rsp + 0x10)) = r9;\n        *(rsp) = rax;\n        rbx = *(rbx);\n        *((rsp + 8)) = r8;\nlabel_0:\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        r10 = *((rsp + 0x18));\n    } while (1);\n    rbx = *(rbx);\n    edx = 5;\n    rax = dcgettext (0, \"Written by %s.\\n\");\n    rdi = rbp;\n    esi = 1;\n    rcx = rbx;\n    rdx = rax;\n    eax = 0;\n    void (*0x4022f0)() ();\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s and %s.\\n\");\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x4022f0)() ();\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    edx = 5;\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, and %s.\\n\");\n    r9 = r13;\n    r8 = r12;\n    rcx = rbx;\n    rdx = rax;\n    rdi = rbp;\n    esi = 1;\n    eax = 0;\n    void (*0x4022f0)() ();\n    edx = 5;\n    r14 = *((rbx + 0x18));\n    r13 = *((rbx + 0x10));\n    r12 = *((rbx + 8));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\nand %s.\\n\");\n    do {\n        rdx = rax;\n        r9 = r13;\n        r8 = r12;\n        rcx = rbx;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r15 = *((rbx + 0x20));\n        edx = 5;\n        r14 = *((rbx + 0x18));\n        r13 = *((rbx + 0x10));\n        r12 = *((rbx + 8));\n        rbx = *(rbx);\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n    } while (1);\n    r8 = *((rbx + 8));\n    r12 = *((rbx + 0x28));\n    edx = 5;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *(rsp) = r8;\n    r13 = *((rbx + 0x10));\n    rbx = *(rbx);\n    rax = dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n    r9 = r13;\n    do {\n        r8 = *((rsp + 0x20));\n        rcx = rbx;\n        rdx = rax;\n        rdi = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        return;\n        r9 = *((rbx + 0x10));\n        r13 = *((rbx + 0x30));\n        edx = 5;\n        r12 = *((rbx + 0x28));\n        r15 = *((rbx + 0x20));\n        r14 = *((rbx + 0x18));\n        r8 = *((rbx + 8));\n        *((rsp + 8)) = r9;\n        rbx = *(rbx);\n        *(rsp) = r8;\n        dcgettext (0, \"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n        r9 = *((rsp + 0x28));\n    } while (1);\nlabel_2:\n    r10 = *((rbx + 0x40));\n    r9 = *((rbx + 0x38));\n    edx = 5;\n    esi = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    rax = *((rbx + 0x10));\n    r8 = *((rbx + 8));\n    r13 = *((rbx + 0x30));\n    r12 = *((rbx + 0x28));\n    *((rsp + 0x18)) = r10;\n    r15 = *((rbx + 0x20));\n    r14 = *((rbx + 0x18));\n    *((rsp + 0x10)) = r9;\n    *(rsp) = rax;\n    rbx = *(rbx);\n    *((rsp + 8)) = r8;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_00409420",
            "funcStartAddr": "0x409420",
            "funcEndAddr": "0x4094dc",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x409420 */\n#include <stdint.h>\n \nuint64_t fcn_00409420 (int64_t arg_b0h, int64_t arg5, int64_t arg6) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_70h;\n    int64_t var_90h;\n    int64_t var_98h;\n    r8 = arg5;\n    r9 = arg6;\n    r11d = 0;\n    rax = rsp + 0xb0;\n    *((rsp + 0x90)) = r8;\n    r10 = rsp + 0xb0;\n    r8d = 0x20;\n    *((rsp + 0x10)) = rax;\n    rax = rsp + 0x70;\n    *((rsp + 0x98)) = r9;\n    r9d = 0;\n    *((rsp + 8)) = 0x20;\n    *((rsp + 0x18)) = rax;\n    while (r8d <= 0x2f) {\n        eax = r8d;\n        r11 = rsp + 0x70;\n        r8d += 8;\n        rax += r11;\n        r11d = 1;\n        rax = *(rax);\n        *((rsp + r9*8 + 0x20)) = rax;\n        if (rax == 0) {\n            goto label_1;\n        }\nlabel_0:\n        r9++;\n        if (r9 == 0xa) {\n            goto label_1;\n        }\n    }\n    rax = r10;\n    r10 += 8;\n    rax = *(rax);\n    *((rsp + r9*8 + 0x20)) = rax;\n    if (rax != 0) {\n        goto label_0;\n    }\nlabel_1:\n    if (r11b != 0) {\n        *((rsp + 8)) = r8d;\n    }\n    fcn_00408fc0 (rdi, rsi, rdx, rcx, rsp + 0x20, r9);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_00409560",
            "funcStartAddr": "0x409560",
            "funcEndAddr": "0x40957a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x409560 */\n#include <stdint.h>\n \nuint64_t fcn_00409560 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = malloc (rdi);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    return fcn_004097b0 ();\n}\n"
        },
        {
            "funcName": "fcn_004095c0",
            "funcStartAddr": "0x4095c0",
            "funcEndAddr": "0x4095f6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x4095c0 */\n#include <stdint.h>\n \nuint64_t fcn_004095c0 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rsi;\n    if (rsi == 0) {\n        if (rdi != 0) {\n            goto label_0;\n        }\n    }\n    rax = realloc (rdi, rbx);\n    if (rax == 0) {\n        if (rbx != 0) {\n            goto label_1;\n        }\n    }\n    return rax;\nlabel_0:\n    eax = free (rdi);\n    eax = 0;\n    return rax;\nlabel_1:\n    return fcn_004097b0 ();\n}\n"
        },
        {
            "funcName": "fcn_00409760",
            "funcStartAddr": "0x409760",
            "funcEndAddr": "0x409788",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x409760 */\n#include <stdint.h>\n \nuint64_t fcn_00409760 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rdi = rsi;\n    rbx = rsi;\n    rax = fcn_00409560 (rdi);\n    rdx = rbx;\n    rsi = rbp;\n    rdi = rax;\n    return memcpy ();\n}\n"
        },
        {
            "funcName": "fcn_00409790",
            "funcStartAddr": "0x409790",
            "funcEndAddr": "0x4097a3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x409790 */\n#include <stdint.h>\n \nvoid fcn_00409790 (char * arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    strlen (rdi);\n    rdi = rbx;\n    rsi = rax + 1;\n    return void (*0x409760)() ();\n}\n"
        },
        {
            "funcName": "fcn_004097b0",
            "funcStartAddr": "0x4097b0",
            "funcEndAddr": "0x4097e1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x4097b0 */\n#include <stdint.h>\n \nuint64_t fcn_004097b0 (void) {\n    edx = 5;\n    rax = dcgettext (0, \"memory exhausted\");\n    rcx = rax;\n    eax = 0;\n    error (*(0x00617328), 0, 0x41209a);\n    return abort ();\n}\n"
        },
        {
            "funcName": "fcn_004097f0",
            "funcStartAddr": "0x4097f0",
            "funcEndAddr": "0x40981f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x4097f0 */\n#include <stdint.h>\n \nuint64_t fcn_004097f0 (void) {\n    int64_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    rax = fcn_00409bb0 (0, 0);\n    rbx = rax;\n    while (*(rax) != 0xc) {\n        rax = rbx;\n        return rax;\n        rax = errno_location ();\n    }\n    return fcn_004097b0 ();\n}\n"
        },
        {
            "funcName": "fcn_00409820",
            "funcStartAddr": "0x409820",
            "funcEndAddr": "0x4098b4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x409820 */\n#include <stdint.h>\n \nuint64_t fcn_00409820 (int64_t arg_e0h, int64_t arg10, int64_t arg11, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6, int64_t arg7, int64_t arg8, int64_t arg9) {\n    int64_t var_8h;\n    int64_t var_ch;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    int64_t var_50h;\n    int64_t var_60h;\n    int64_t var_70h;\n    int64_t var_80h;\n    int64_t var_90h;\n    int64_t var_a0h;\n    int64_t var_b0h;\n    int64_t var_c0h;\n    xmm3 = arg10;\n    xmm4 = arg11;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    xmm0 = arg7;\n    xmm1 = arg8;\n    xmm2 = arg9;\n    *((rsp + 0x28)) = rsi;\n    *((rsp + 0x30)) = rdx;\n    *((rsp + 0x38)) = rcx;\n    *((rsp + 0x40)) = r8;\n    *((rsp + 0x48)) = r9;\n    if (al != 0) {\n        *((rsp + 0x50)) = xmm0;\n        *((rsp + 0x60)) = xmm1;\n        *((rsp + 0x70)) = xmm2;\n        *((rsp + 0x80)) = xmm3;\n        *((rsp + 0x90)) = xmm4;\n        *((rsp + 0xa0)) = xmm5;\n        *((rsp + 0xb0)) = xmm6;\n        *((rsp + 0xc0)) = xmm7;\n    }\n    rax = rsp + 0xe0;\n    *((rsp + 8)) = 8;\n    *((rsp + 0x10)) = rax;\n    rax = rsp + 0x20;\n    *((rsp + 0xc)) = 0x30;\n    *((rsp + 0x18)) = rax;\n    fcn_0040ce40 (rdi, rsp + 8);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_004098c0",
            "funcStartAddr": "0x4098c0",
            "funcEndAddr": "0x4098f3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x4098c0 */\n#include <stdint.h>\n \nuint32_t fcn_004098c0 (int64_t arg1) {\n    rdi = arg1;\n    if (edi < 0) {\n        return;\n    }\n    eax = close (rdi);\n    if (eax == 0) {\n        return eax;\n    }\n    return assert_fail (\"! close_fail\", \"lib/chdir-long.c\", 0x40, \"cdb_free\");\n}\n"
        },
        {
            "funcName": "fcn_00409900",
            "funcStartAddr": "0x409900",
            "funcEndAddr": "0x409937",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x409900 */\n#include <stdint.h>\n \nint32_t fcn_00409900 (int64_t fd, const char * path) {\n    rdi = fd;\n    rsi = path;\n    eax = 0;\n    rbx = rdi;\n    eax = openat (*(rdi), rsi, 0x10900);\n    if (eax < 0) {\n        goto label_0;\n    }\n    eax = fcn_004098c0 (*(rbx));\n    *(rbx) = ebp;\n    eax = 0;\n    do {\n        return eax;\nlabel_0:\n        eax = 0xffffffff;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_00409bb0",
            "funcStartAddr": "0x409bb0",
            "funcEndAddr": "0x40a072",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x409bb0 */\n#include <stdint.h>\n \nuint64_t fcn_00409bb0 (void * arg1, uint32_t arg2) {\n    int64_t var_8h;\n    uint32_t var_10h;\n    void * ptr;\n    void * var_20h;\n    size_t size;\n    uint32_t var_30h;\n    int64_t var_3fh;\n    void * s2;\n    uint32_t var_48h;\n    uint32_t var_50h;\n    void ** var_58h;\n    uint32_t var_60h;\n    uint32_t var_68h;\n    int64_t var_78h;\n    rdi = arg1;\n    rsi = arg2;\n    *((rsp + 0x20)) = rdi;\n    *((rsp + 0x30)) = rsi;\n    if (rsi != 0) {\n        goto label_11;\n    }\n    *((rsp + 0x28)) = 0x1000;\n    if (rdi != 0) {\n        goto label_12;\n    }\n    do {\n        rax = malloc (*((rsp + 0x28)));\n        *((rsp + 0x18)) = rax;\n        if (rax != 0) {\n            goto label_13;\n        }\nlabel_2:\n        rax = *((rsp + 0x18));\n        return rax;\nlabel_11:\n        rax = *((rsp + 0x30));\n        *((rsp + 0x28)) = rax;\n    } while (*((rsp + 0x20)) == 0);\n    rax = *((rsp + 0x20));\n    *((rsp + 0x18)) = rax;\nlabel_13:\n    rbx = *((rsp + 0x18));\n    rbx += *((rsp + 0x28));\n    rdx = rsp + 0x60;\n    esi = 0x411fe4;\n    *((rbx - 1)) = 0;\n    edi = 1;\n    eax = lxstat ();\n    if (eax < 0) {\n        goto label_14;\n    }\n    r15 = *((rsp + 0x60));\n    rdx = rsp + 0x60;\n    esi = 0x412556;\n    edi = 1;\n    r14 = *((rsp + 0x68));\n    *((rsp + 8)) = r15;\n    eax = lxstat ();\n    if (eax < 0) {\n        goto label_14;\n    }\n    rax = rbx - 1;\n    rsi = *((rsp + 0x68));\n    *((rsp + 0x40)) = rax;\n    rax = *((rsp + 0x60));\n    *((rsp + 0x50)) = rsi;\n    *((rsp + 0x48)) = rax;\n    dl = (r15 != rax) ? 1 : 0;\n    al = (r14 != rsi) ? 1 : 0;\n    dl |= al;\n    *((rsp + 0x3f)) = dl;\n    if (dl == 0) {\n        goto label_15;\n    }\n    rax = errno_location ();\n    ebp = 0;\n    r15d = 0xffffff9c;\n    r12 = rax;\nlabel_1:\n    eax = 0;\n    eax = openat (r15d, 0x411fe3, 0);\n    r15d = eax;\n    if (eax < 0) {\n        goto label_16;\n    }\n    rdx = rsp + 0x60;\n    esi = eax;\n    edi = 1;\n    eax = fxstat ();\n    if (eax != 0) {\n        goto label_17;\n    }\n    if (rbp != 0) {\n        rdi = rbp;\n        eax = closedir ();\n        if (eax != 0) {\n            goto label_18;\n        }\n    }\n    rax = *((rsp + 0x60));\n    edi = r15d;\n    *((rsp + 0x10)) = rax;\n    rax = *((rsp + 0x68));\n    *((rsp + 0x58)) = rax;\n    rax = fdopendir ();\n    if (rax == 0) {\n        goto label_18;\n    }\n    r13d = *((rsp + 0x3f));\n    do {\nlabel_0:\n        *(r12) = 0;\n        rdi = rbp;\n        rax = readdir ();\n        if (rax == 0) {\n            goto label_19;\n        }\n        if (*((rax + 0x13)) == 0x2e) {\n            goto label_20;\n        }\nlabel_4:\n        if (r13b == 0) {\n            goto label_3;\n        }\n        rcx = *((rsp + 8));\n        dl = (*(rax) == r14) ? 1 : 0;\n        cl = (*((rsp + 0x10)) != rcx) ? 1 : 0;\n        dl |= cl;\n    } while (dl == 0);\n    r13d = edx;\nlabel_3:\n    rbx = rax + 0x13;\n    rcx = rsp + 0x60;\n    esi = r15d;\n    edi = 1;\n    r8d = 0x100;\n    rdx = rbx;\n    eax = fxstatat ();\n    if (eax != 0) {\n        goto label_0;\n    }\n    eax = *((rsp + 0x78));\n    eax &= 0xf000;\n    if (eax != 0x4000) {\n        goto label_0;\n    }\n    rax = *((rsp + 8));\n    if (*((rsp + 0x60)) != rax) {\n        goto label_0;\n    }\n    if (*((rsp + 0x68)) != r14) {\n        goto label_0;\n    }\n    r13 = *((rsp + 0x40));\n    r13 -= *((rsp + 0x18));\n    rax = strlen (rbx);\n    r14 = rax;\n    if (r13 <= rax) {\n        if (*((rsp + 0x30)) != 0) {\n            goto label_21;\n        }\n        rax = *((rsp + 0x28));\n        rdx = rax;\n        if (r14 >= rax) {\n            rdx = r14;\n        }\n        rax += rdx;\n        *((rsp + 0x40)) = rdx;\n        *((rsp + 8)) = rax;\n        if (rax < 0) {\n            goto label_22;\n        }\n        rax = realloc (*((rsp + 0x18)), rax);\n        rdx = *((rsp + 0x40));\n        if (rax == 0) {\n            goto label_22;\n        }\n        rdx += r13;\n        *((rsp + 0x18)) = rax;\n        rdx -= r13;\n        rax = memcpy (rax + rdx, rax + r13, *((rsp + 0x28)));\n        *((rsp + 0x40)) = rax;\n        rax = *((rsp + 8));\n        *((rsp + 0x28)) = rax;\n    }\n    r8 = *((rsp + 0x40));\n    r8 -= r14;\n    rax = memcpy (r8, rbx, r14);\n    rsi = *((rsp + 0x58));\n    r8 = rax;\n    rax = rax - 1;\n    *((rsp + 0x40)) = rax;\n    rax = *((rsp + 0x10));\n    r14 = rsi;\n    *((r8 - 1)) = 0x2f;\n    *((rsp + 8)) = rax;\n    if (*((rsp + 0x48)) != rax) {\n        goto label_1;\n    }\n    if (*((rsp + 0x50)) != rsi) {\n        goto label_1;\n    }\n    rdi = rbp;\n    eax = closedir ();\n    if (eax != 0) {\n        goto label_23;\n    }\n    rbx = *((rsp + 0x18));\n    rbx += *((rsp + 0x28));\nlabel_15:\n    rax = *((rsp + 0x18));\n    rsi = *((rsp + 0x28));\n    rax = rax + rsi - 1;\n    if (*((rsp + 0x40)) == rax) {\n        goto label_24;\n    }\nlabel_10:\n    rbx -= rsi;\n    memmove (*((rsp + 0x18)), *((rsp + 0x40)), rbx);\n    if (*((rsp + 0x30)) == 0) {\n        goto label_25;\n    }\nlabel_9:\n    rax = *((rsp + 0x20));\n    if (rax == 0) {\n        rax = *((rsp + 0x18));\n    }\n    *((rsp + 0x18)) = rax;\n    goto label_2;\nlabel_19:\n    ebx = *(r12);\n    if (ebx != 0) {\n        goto label_26;\n    }\n    if (r13b == 0) {\n        goto label_26;\n    }\n    rdi = rbp;\n    rewinddir ();\n    rdi = rbp;\n    rax = readdir ();\n    if (rax == 0) {\n        goto label_27;\n    }\n    r13d = 0;\n    if (*((rax + 0x13)) != 0x2e) {\n        goto label_3;\n    }\nlabel_20:\n    if (*((rax + 0x14)) == 0) {\n        goto label_0;\n    }\n    if (*((rax + 0x14)) != 0x2e) {\n        goto label_4;\n    }\n    goto label_0;\nlabel_27:\n    ebx = *(r12);\nlabel_26:\n    if (ebx == 0) {\n        *(r12) = 2;\n        ebx = 2;\n    }\nlabel_7:\n    rdi = rbp;\n    closedir ();\nlabel_6:\n    if (*((rsp + 0x20)) == 0) {\n        goto label_28;\n    }\n    do {\nlabel_5:\n        *(r12) = ebx;\n        *((rsp + 0x18)) = 0;\n        goto label_2;\nlabel_14:\n        rax = errno_location ();\n        r12 = rax;\nlabel_23:\n        ebx = *(r12);\n    } while (*((rsp + 0x20)) != 0);\nlabel_28:\n    free (*((rsp + 0x18)));\n    goto label_5;\nlabel_12:\n    errno_location ();\n    *((rsp + 0x18)) = 0;\n    *(rax) = 0x16;\n    goto label_2;\nlabel_18:\n    ebx = *(r12);\nlabel_8:\n    close (r15d);\n    goto label_6;\nlabel_16:\n    ebx = *(r12);\n    if (rbp == 0) {\n        goto label_6;\n    }\n    goto label_7;\nlabel_17:\n    ebx = *(r12);\n    if (rbp == 0) {\n        goto label_8;\n    }\n    rdi = rbp;\n    closedir ();\n    goto label_8;\nlabel_25:\n    rax = realloc (*((rsp + 0x18)), rbx);\n    *((rsp + 0x20)) = rax;\n    goto label_9;\nlabel_24:\n    rax = *((rsp + 0x40));\n    *((rax - 1)) = 0x2f;\n    rax--;\n    *((rsp + 0x40)) = rax;\n    goto label_10;\nlabel_22:\n    *(r12) = 0xc;\n    ebx = 0xc;\n    goto label_7;\nlabel_21:\n    *(r12) = 0x22;\n    ebx = 0x22;\n    goto label_7;\n}\n"
        },
        {
            "funcName": "fcn_0040a080",
            "funcStartAddr": "0x40a080",
            "funcEndAddr": "0x40a15f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40a080 */\n#include <stdint.h>\n \nuint64_t fcn_0040a080 (int64_t arg1, int64_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r11 = rdi + 8;\n    r12d = *((rsi + 0x2c));\n    ebp = *(rsi);\n    rbx = *((rsi + 0x30));\n    r9d = r12d;\n    r10d = ebp;\n    r8 = rbx;\nlabel_1:\n    if (r10d <= r8d) {\n        goto label_2;\n    }\nlabel_0:\n    if (r9d >= r8d) {\n        goto label_2;\n    }\n    r14d = r10d;\n    edx = r8d;\n    r14d -= r8d;\n    edx -= r9d;\n    if (r14d <= edx) {\n        goto label_3;\n    }\n    rcx = (int64_t) r9d;\n    r10d -= edx;\n    edx--;\n    rdx += rcx;\n    rax = rdi + rcx*8;\n    r13 = r11 + rdx*8;\n    rdx = (int64_t) r10d;\n    rdx -= rcx;\n    do {\n        rcx = *(rax);\n        r14 = *((rax + rdx*8));\n        *(rax) = r14;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (r13 != rax);\n    if (r10d > r8d) {\n        goto label_0;\n    }\nlabel_2:\n    eax = ebp;\n    *((rsi + 0x30)) = ebp;\n    eax -= r8d;\n    r12d += eax;\n    *((rsi + 0x2c)) = r12d;\n    r12 = rbx;\n    r13 = rbx;\n    r14 = rbx;\n    r15 = rbx;\n    return rax;\nlabel_3:\n    rdx = (int64_t) r9d;\n    ecx = r14 - 1;\n    rcx += rdx;\n    rax = rdi + rdx*8;\n    r13 = r11 + rcx*8;\n    rcx = rbx;\n    rcx -= rdx;\n    rdx = rcx;\n    do {\n        rcx = *(rax);\n        r15 = *((rax + rdx*8));\n        *(rax) = r15;\n        *((rax + rdx*8)) = rcx;\n        rax += 8;\n    } while (rax != r13);\n    r9d += r14d;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040a160",
            "funcStartAddr": "0x40a160",
            "funcEndAddr": "0x40a77c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40a160 */\n#include <stdint.h>\n \nint64_t fcn_0040a160 (int64_t arg_90h, int64_t arg_98h, int64_t arg_a0h, signed int64_t arg1, int64_t arg2, char * arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    int64_t var_ch;\n    int64_t var_10h;\n    void * ptr;\n    int64_t var_20h;\n    int64_t var_28h;\n    char * s;\n    int64_t var_38h;\n    int64_t c;\n    signed int64_t var_40h;\n    int64_t var_44h;\n    void * var_48h;\n    size_t nmeb;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rax = *((rsp + 0x90));\n    *((rsp + 0x40)) = edi;\n    *((rsp + 0x28)) = rsi;\n    r14 = *((rax + 0x20));\n    *((rsp + 0x30)) = rdx;\n    *(rsp) = rcx;\n    eax = *(r14);\n    *((rsp + 0x20)) = r8;\n    *((rsp + 0xc)) = r9d;\n    *((rsp + 0x3f)) = al;\n    if (al == 0x3d) {\n        goto label_11;\n    }\n    if (al == 0) {\n        goto label_11;\n    }\n    do {\n        rbp++;\n        eax = *(rbp);\n        if (al == 0) {\n            goto label_12;\n        }\n    } while (al != 0x3d);\nlabel_12:\n    r13 = rbp;\n    r13 -= r14;\nlabel_6:\n    rbx = *(rsp);\n    r12d = 0;\n    rax = *(rbx);\n    *((rsp + 0x10)) = rax;\n    r15 = rax;\n    if (rax != 0) {\n        goto label_13;\n    }\n    goto label_14;\n    do {\n        r12 = (int64_t) r8d;\nlabel_13:\n        eax = strncmp (r15, r14, r13);\n        if (eax == 0) {\n            rax = strlen (r15);\n            if (rax == r13) {\n                goto label_15;\n            }\n        }\n        rbx += 0x20;\n        r15 = *(rbx);\n        r8d = r12 + 1;\n    } while (r15 != 0);\n    rcx = *(rsp);\n    *((rsp + 0x4c)) = r8d;\n    r9d = 0;\n    ebx = 0;\n    *((rsp + 0x44)) = 0xffffffff;\n    r15 = r9;\n    *((rsp + 0x38)) = 0;\n    *((rsp + 0x48)) = 0;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x10)) = rbp;\n    do {\n        eax = strncmp (*((rsp + 0x10)), r14, r13);\n        if (eax == 0) {\n            if (rbx == 0) {\n                goto label_16;\n            }\n            eax = *((rsp + 0xc));\n            if (eax == 0) {\n                goto label_17;\n            }\nlabel_0:\n            r11d = *((rsp + 0x38));\n            if (r11d != 0) {\n                goto label_1;\n            }\n            r10d = *((rsp + 0x98));\n            if (r10d == 0) {\n                goto label_18;\n            }\n            if (*((rsp + 0x18)) == 0) {\n                goto label_19;\n            }\nlabel_3:\n            rax = *((rsp + 0x18));\n            *((rax + r15)) = 1;\n        }\nlabel_1:\n        rbp += 0x20;\n        rdi = *(rbp);\n        r15++;\n    } while (rdi != 0);\n    rbp = *((rsp + 0x10));\n    if (*((rsp + 0x18)) != 0) {\n        goto label_20;\n    }\n    r9d = *((rsp + 0x38));\n    if (r9d != 0) {\n        goto label_20;\n    }\n    if (rbx == 0) {\nlabel_14:\n        eax = *((rsp + 0xc));\n        if (eax != 0) {\n            rax = *((rsp + 0x90));\n            rcx = *((rsp + 0x28));\n            rax = *(rax);\n            rax = *((rcx + rax*8));\n            if (*((rax + 1)) == 0x2d) {\n                goto label_21;\n            }\n            esi = *((rsp + 0x3f));\n            rax = strchr (*((rsp + 0x30)), rsi);\n            rdx = rax;\n            eax = 0xffffffff;\n            if (rdx != 0) {\n                goto label_5;\n            }\n        }\nlabel_21:\n        ecx = *((rsp + 0x98));\n        if (ecx != 0) {\n            goto label_22;\n        }\nlabel_4:\n        rax = *((rsp + 0x90));\n        *((rax + 0x20)) = 0;\n        *(rax)++;\n        *((rax + 8)) = 0;\n        eax = 0x3f;\n        return rax;\n    }\n    r12d = *((rsp + 0x44));\nlabel_15:\n    rax = *((rsp + 0x90));\n    rcx = *((rsp + 0x90));\n    edx = *(rax);\n    *((rcx + 0x20)) = 0;\n    eax = rdx + 1;\n    *(rcx) = eax;\n    ecx = *((rbx + 8));\n    if (*(rbp) != 0) {\n        goto label_23;\n    }\n    if (ecx == 1) {\n        goto label_24;\n    }\nlabel_2:\n    rax = *((rsp + 0x20));\n    if (rax != 0) {\n        *(rax) = r12d;\n    }\n    rdx = *((rbx + 0x10));\n    eax = *((rbx + 0x18));\n    if (rdx != 0) {\n        *(rdx) = eax;\n        eax = 0;\n    }\nlabel_5:\n    return rax;\nlabel_17:\n    eax = *((rbp + 8));\n    if (*((rbx + 8)) != eax) {\n        goto label_0;\n    }\n    rax = *((rbp + 0x10));\n    if (*((rbx + 0x10)) != rax) {\n        goto label_0;\n    }\n    eax = *((rbp + 0x18));\n    if (*((rbx + 0x18)) != eax) {\n        goto label_0;\n    }\n    goto label_1;\nlabel_23:\n    if (ecx == 0) {\n        goto label_25;\n    }\n    rax = *((rsp + 0x90));\n    rbp++;\n    *((rax + 0x10)) = rbp;\n    goto label_2;\nlabel_16:\n    *((rsp + 0x44)) = r15d;\n    rbx = rbp;\n    goto label_1;\nlabel_18:\n    *((rsp + 0x38)) = 1;\n    if (*((rsp + 0x18)) == 0) {\n        goto label_1;\n    }\n    goto label_3;\nlabel_22:\n    rax = *((rsp + 0x28));\n    edx = 5;\n    rbx = *(rax);\n    rax = dcgettext (0, \"%s: unrecognized option '%s%s'\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r14;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbx;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_4;\nlabel_20:\n    r8d = *((rsp + 0x98));\n    if (r8d != 0) {\n        edi = *((rsp + 0x38));\n        if (edi == 0) {\n            goto label_26;\n        }\n        rax = *((rsp + 0x28));\n        edx = 5;\n        rbx = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' is ambiguous\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r14;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbx;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n        rax = *((rsp + 0x90));\n        r14 = *((rax + 0x20));\n    }\nlabel_9:\n    esi = *((rsp + 0x48));\n    if (esi != 0) {\n        goto label_27;\n    }\nlabel_7:\n    rax = strlen (r14);\n    r14 += rax;\n    rax = *((rsp + 0x90));\n    *((rax + 0x20)) = r14;\n    *(rax)++;\n    *((rax + 8)) = 0;\n    eax = 0x3f;\n    goto label_5;\nlabel_24:\n    if (eax >= *((rsp + 0x40))) {\n        goto label_28;\n    }\n    rcx = *((rsp + 0x90));\n    edx += 2;\n    rax = (int64_t) eax;\n    *(rcx) = edx;\n    rcx = *((rsp + 0x28));\n    rax = *((rcx + rax*8));\n    rcx = *((rsp + 0x90));\n    *((rcx + 0x10)) = rax;\n    goto label_2;\nlabel_11:\n    r13d = 0;\n    goto label_6;\nlabel_25:\n    edx = *((rsp + 0x98));\n    while (1) {\n        eax = *((rbx + 0x18));\n        rcx = *((rsp + 0x90));\n        *((rcx + 8)) = eax;\n        eax = 0x3f;\n        goto label_5;\nlabel_19:\n        rdi = *((rsp + 0x4c));\n        rax = calloc (rdi, 1);\n        *((rsp + 0x18)) = rax;\n        if (rax == 0) {\n            goto label_29;\n        }\n        rax = *((rsp + 0x44));\n        rcx = *((rsp + 0x18));\n        *((rsp + 0x48)) = 1;\n        *((rcx + rax)) = 1;\n        goto label_3;\n        rax = *((rsp + 0x28));\n        r12 = *(rbx);\n        edx = 5;\n        rbp = *(rax);\n        rax = dcgettext (0, \"%s: option '%s%s' doesn't allow an argument\\n\");\n        r8 = *((rsp + 0xa0));\n        r9 = r12;\n        rdi = stderr;\n        rdx = rax;\n        rcx = rbp;\n        esi = 1;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_27:\n    free (*((rsp + 0x18)));\n    goto label_7;\nlabel_28:\n    eax = *((rsp + 0x98));\n    if (eax != 0) {\n        goto label_30;\n    }\nlabel_10:\n    eax = *((rbx + 0x18));\n    rcx = *((rsp + 0x90));\n    *((rcx + 8)) = eax;\n    rax = *((rsp + 0x30));\n    al = (*(rax) != 0x3a) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = rax * 5;\n    goto label_5;\nlabel_26:\n    rdi = stderr;\n    flockfile ();\n    rax = *((rsp + 0x90));\n    edx = 5;\n    rbx = *((rax + 0x20));\n    rax = *((rsp + 0x28));\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' is ambiguous; possibilities:\");\n    rdi = stderr;\n    r9 = rbx;\n    r8 = *((rsp + 0xa0));\n    rcx = rbp;\n    rdx = rax;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    rax = *((rsp + 0x18));\n    rdi = stderr;\n    rbx = *(rsp);\n    r12 = rax + r12 + 1;\n    while (*(rbp) == 0) {\nlabel_8:\n        rbp++;\n        rbx += 0x20;\n        if (r12 == rbp) {\n            goto label_31;\n        }\n    }\n    r8 = *(rbx);\n    edx = \" '%s%s';\n    esi = 1;\n    eax = 0;\n    rcx = *((rsp + 0xa0));\n    fprintf_chk ();\n    rdi = stderr;\n    goto label_8;\nlabel_31:\n    fputc (0xa, rdi);\n    rdi = stderr;\n    funlockfile ();\n    rax = *((rsp + 0x90));\n    r14 = *((rax + 0x20));\n    goto label_9;\nlabel_30:\n    rax = *((rsp + 0x28));\n    r12 = *(rbx);\n    edx = 5;\n    rbp = *(rax);\n    rax = dcgettext (0, \"%s: option '%s%s' requires an argument\\n\");\n    r8 = *((rsp + 0xa0));\n    r9 = r12;\n    rdi = stderr;\n    rdx = rax;\n    rcx = rbp;\n    esi = 1;\n    eax = 0;\n    fprintf_chk ();\n    goto label_10;\nlabel_29:\n    *((rsp + 0x38)) = 1;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040a780",
            "funcStartAddr": "0x40a780",
            "funcEndAddr": "0x40ad46",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40a780 */\n#include <stdint.h>\n \nuint64_t fcn_0040a780 (int64_t arg_70h, int64_t arg_78h, int64_t arg1, int64_t arg2, int64_t arg3, uint32_t arg4, int64_t arg5, int64_t arg6) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_1ch;\n    int64_t var_20h;\n    int64_t var_28h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rbx = *((rsp + 0x70));\n    *((rsp + 8)) = rcx;\n    *((rsp + 0x10)) = r8;\n    r13d = *((rbx + 4));\n    if (edi <= 0) {\n        goto label_16;\n    }\n    eax = *(rbx);\n    r12 = rsi;\n    r15 = rdx;\n    *((rbx + 0x10)) = 0;\n    if (eax == 0) {\n        goto label_17;\n    }\n    esi = *((rbx + 0x18));\n    if (esi == 0) {\nlabel_1:\n        *((rbx + 0x30)) = eax;\n        *((rbx + 0x2c)) = eax;\n        *((rbx + 0x20)) = 0;\n        eax = *(r15);\n        if (al == 0x2d) {\n            goto label_18;\n        }\n        if (al == 0x2b) {\n            goto label_19;\n        }\n        ecx = *((rsp + 0x78));\n        edx = 0;\n        if (ecx == 0) {\n            goto label_20;\n        }\nlabel_8:\n        *((rbx + 0x28)) = 0;\n        goto label_11;\n    }\n    eax = *(rdx);\n    rdx = *((rbx + 0x20));\n    ecx = rax - 0x2b;\n    ecx &= 0xfd;\n    if (ecx != 0) {\n        goto label_21;\n    }\n    eax = *((r15 + 1));\n    r15++;\n    eax = 0;\n    if (al == 0x3a) {\n        r13d = eax;\n    }\n    if (rdx != 0) {\n        goto label_22;\n    }\n    do {\nlabel_0:\n        eax = *(rbx);\n        if (*((rbx + 0x30)) > eax) {\n            *((rbx + 0x30)) = eax;\n        }\n        if (eax < *((rbx + 0x2c))) {\n            *((rbx + 0x2c)) = eax;\n        }\n        if (*((rbx + 0x28)) == 1) {\n            goto label_23;\n        }\nlabel_4:\n        if (ebp == eax) {\n            goto label_24;\n        }\n        rdx = (int64_t) eax;\n        ecx = 3;\n        edi = 0x4137c9;\n        r14 = *((r12 + rdx*8));\n        rsi = *((r12 + rdx*8));\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (ebp > eax) ? 1 : 0;\n        if (cl != 0) {\n            goto label_25;\n        }\n        edx = *((rbx + 0x2c));\n        ecx = *((rbx + 0x30));\n        eax++;\n        *(rbx) = eax;\n        if (edx == ecx) {\n            goto label_26;\n        }\n        if (eax != ecx) {\n            fcn_0040a080 (r12, rbx);\n            edx = *((rbx + 0x2c));\n        }\nlabel_12:\n        *((rbx + 0x30)) = ebp;\n        *(rbx) = ebp;\n        goto label_27;\nlabel_18:\n        *((rbx + 0x28)) = 2;\n        r15++;\n        edx = 0;\nlabel_11:\n        *((rbx + 0x18)) = 1;\n        eax = *(r15);\nlabel_21:\n        eax = 0;\n        if (al == 0x3a) {\n            r13d = eax;\n        }\n    } while (rdx == 0);\nlabel_22:\n    if (*(rdx) == 0) {\n        goto label_0;\n    }\nlabel_6:\n    r8 = rdx + 1;\n    *((rsp + 0x20)) = rdx;\n    *((rbx + 0x20)) = r8;\n    r14d = *(rdx);\n    *((rsp + 0x28)) = r8;\n    *((rsp + 0x1c)) = r14b;\n    rax = strchr (r15, r14d);\n    rdx = *((rsp + 0x20));\n    ecx = *((rsp + 0x1c));\n    r8 = *((rsp + 0x28));\n    if (*((rdx + 1)) == 0) {\n        *(rbx)++;\n    }\n    ecx -= 0x3a;\n    if (cl <= 1) {\n        goto label_28;\n    }\n    if (rax == 0) {\n        goto label_28;\n    }\n    ecx = *((rax + 1));\n    if (*(rax) == 0x57) {\n        goto label_29;\n    }\nlabel_7:\n    if (cl == 0x3a) {\n        goto label_30;\n    }\n    do {\nlabel_2:\n        eax = r14d;\n        return rax;\nlabel_25:\n        if (*(r14) == 0x2d) {\n            goto label_31;\n        }\nlabel_5:\n        edx = *((rbx + 0x28));\n        if (edx == 0) {\n            goto label_16;\n        }\n        eax++;\n        *((rbx + 0x10)) = r14;\n        r14d = 1;\n        *(rbx) = eax;\n    } while (1);\nlabel_17:\n    *(rbx) = 1;\n    eax = 1;\n    goto label_1;\nlabel_24:\n    ebp = *((rbx + 0x30));\n    edx = *((rbx + 0x2c));\nlabel_27:\n    if (edx != ebp) {\n        *(rbx) = edx;\n    }\nlabel_16:\n    r14d = 0xffffffff;\n    goto label_2;\nlabel_23:\n    edx = *((rbx + 0x30));\n    if (*((rbx + 0x2c)) == edx) {\n        goto label_32;\n    }\n    if (eax != edx) {\n        *((rsp + 0x1c)) = r9d;\n        fcn_0040a080 (r12, rbx);\n        edx = *(rbx);\n        r9d = *((rsp + 0x1c));\n    }\nlabel_9:\n    if (ebp <= edx) {\n        goto label_33;\n    }\n    rax = (int64_t) edx;\n    while (*(rcx) != 0x2d) {\nlabel_3:\n        edx = rsi + 1;\n        rax++;\n        *(rbx) = edx;\n        if (ebp <= eax) {\n            goto label_33;\n        }\n        rcx = *((r12 + rax*8));\n        esi = eax;\n        edx = eax;\n    }\n    if (*((rcx + 1)) == 0) {\n        goto label_3;\n    }\n    eax = *(rbx);\nlabel_10:\n    *((rbx + 0x30)) = edx;\n    goto label_4;\nlabel_31:\n    ecx = *((r14 + 1));\n    if (cl == 0) {\n        goto label_5;\n    }\n    if (*((rsp + 8)) == 0) {\n        goto label_34;\n    }\n    if (cl == 0x2d) {\n        goto label_35;\n    }\n    if (r9d == 0) {\n        goto label_34;\n    }\n    if (*((r14 + 2)) == 0) {\n        esi = (int32_t) cl;\n        *((rsp + 0x1c)) = r9d;\n        rax = strchr (r15, rsi);\n        r9d = *((rsp + 0x1c));\n        if (rax != 0) {\n            goto label_34;\n        }\n    }\n    rdx = r14 + 1;\n    *((rbx + 0x20)) = rdx;\n    eax = fcn_0040a160 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), r9);\n    r14d = eax;\n    if (eax != 0xffffffff) {\n        goto label_2;\n    }\n    rax = *(rbx);\n    r14 = *((r12 + rax*8));\nlabel_34:\n    rdx = r14 + 1;\n    goto label_6;\nlabel_29:\n    if (*((rsp + 8)) == 0) {\n        goto label_7;\n    }\n    if (cl != 0x3b) {\n        goto label_7;\n    }\n    if (*((rdx + 1)) == 0) {\n        rax = *(rbx);\n        if (eax == ebp) {\n            goto label_36;\n        }\n        r8 = *((r12 + rax*8));\n    }\n    *((rbx + 0x20)) = r8;\n    *((rbx + 0x10)) = 0;\nlabel_14:\n    eax = fcn_0040a160 (ebp, r12, r15, *((rsp + 0x28)), *((rsp + 0x30)), 0);\n    r14d = eax;\n    goto label_2;\nlabel_20:\n    *((rsp + 0x1c)) = r9d;\n    rax = getenv (\"POSIXLY_CORRECT\");\n    r9d = *((rsp + 0x1c));\n    if (rax == 0) {\n        goto label_37;\n    }\n    rdx = *((rbx + 0x20));\n    goto label_8;\nlabel_30:\n    edx = *((rdx + 1));\n    if (*((rax + 2)) == 0x3a) {\n        goto label_38;\n    }\n    rax = *(rbx);\n    if (dl != 0) {\n        goto label_39;\n    }\n    if (ebp == eax) {\n        goto label_40;\n    }\n    edx = rax + 1;\n    rax = *((r12 + rax*8));\n    *(rbx) = edx;\n    *((rbx + 0x10)) = rax;\nlabel_13:\n    *((rbx + 0x20)) = 0;\n    goto label_2;\nlabel_32:\n    if (eax == edx) {\n        goto label_9;\n    }\n    *((rbx + 0x2c)) = eax;\n    edx = eax;\n    goto label_9;\nlabel_33:\n    eax = edx;\n    goto label_10;\nlabel_19:\n    *((rbx + 0x28)) = 0;\n    r15++;\n    edx = 0;\n    goto label_11;\nlabel_28:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0x3f;\n        goto label_2;\nlabel_26:\n        *((rbx + 0x2c)) = eax;\n        edx = eax;\n        goto label_12;\nlabel_39:\n        eax++;\n        *((rbx + 0x10)) = r8;\n        *(rbx) = eax;\n        goto label_13;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: invalid option -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_38:\n    if (dl != 0) {\n        *((rbx + 0x10)) = r8;\n        *(rbx)++;\n        goto label_13;\nlabel_37:\n        *((rbx + 0x28)) = 1;\n        rdx = *((rbx + 0x20));\n        goto label_11;\n    }\n    *((rbx + 0x10)) = 0;\n    goto label_13;\nlabel_40:\n    while (1) {\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_13;\nlabel_35:\n        rdx = r14 + 2;\n        *((rbx + 0x20)) = rdx;\n        goto label_14;\nlabel_36:\n        if (r13d != 0) {\n            goto label_41;\n        }\nlabel_15:\n        *((rbx + 8)) = r14d;\n        r14d = 0;\n        r14b = (*(r15) != 0x3a) ? 1 : 0;\n        r14d = r14 * 5;\n        goto label_2;\n        rbp = *(r12);\n        edx = 5;\n        rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n        rdi = stderr;\n        r8d = r14d;\n        esi = 1;\n        rdx = rax;\n        rcx = rbp;\n        eax = 0;\n        fprintf_chk ();\n    }\nlabel_41:\n    rbp = *(r12);\n    edx = 5;\n    rax = dcgettext (0, \"%s: option requires an argument -- '%c'\\n\");\n    rdi = stderr;\n    r8d = r14d;\n    esi = 1;\n    rdx = rax;\n    rcx = rbp;\n    eax = 0;\n    fprintf_chk ();\n    goto label_15;\n}\n"
        },
        {
            "funcName": "fcn_0040ad50",
            "funcStartAddr": "0x40ad50",
            "funcEndAddr": "0x40ada6",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40ad50 */\n#include <stdint.h>\n \nint32_t fcn_0040ad50 (int64_t arg_10h) {\n    eax = *(0x0061739c);\n    *(0x006175e0) = eax;\n    eax = *(0x00617398);\n    *(0x006175e4) = eax;\n    eax = *((rsp + 0x10));\n    fcn_0040a780 (rdi, rsi, rdx, rcx, r8, r9);\n    edx = imp.__libc_start_main;\n    *(0x0061739c) = edx;\n    rdx = imp.__libc_start_main;\n    *(0x00617638) = rdx;\n    edx = imp.__libc_start_main;\n    *(0x00617394) = edx;\n    return eax;\n}\n"
        },
        {
            "funcName": "fcn_0040add0",
            "funcStartAddr": "0x40add0",
            "funcEndAddr": "0x40ade3",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40add0 */\n#include <stdint.h>\n \nvoid fcn_0040add0 (void) {\n    r9d = 0;\n    fcn_0040ad50 (rdi);\n}\n"
        },
        {
            "funcName": "fcn_0040ae50",
            "funcStartAddr": "0x40ae50",
            "funcEndAddr": "0x40aeca",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40ae50 */\n#include <stdint.h>\n \nuint64_t fcn_0040ae50 (wint_t arg1, int64_t arg2, size_t * arg3, mbstate_t * ps) {\n    int64_t var_ch;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = ps;\n    if (rsi == 0) {\n        goto label_1;\n    }\n    rbx = 0xfffffffffffffffe;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    r12 = rdi;\n    while (1) {\n        rax = mbrtowc (r12, rbp, rdx, rcx);\n        rbx = rax;\n        if (rax > 0xfffffffffffffffd) {\n            goto label_2;\n        }\nlabel_0:\n        rax = rbx;\n        return rax;\nlabel_1:\n        edx = 1;\n        r12 = rsp + 0xc;\n    }\nlabel_2:\n    al = fcn_0040c6f0 (0);\n    if (al != 0) {\n        goto label_0;\n    }\n    eax = *(rbp);\n    ebx = 1;\n    *(r12) = eax;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040aed0",
            "funcStartAddr": "0x40aed0",
            "funcEndAddr": "0x40afd4",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40aed0 */\n#include <stdint.h>\n \nint64_t fcn_0040aed0 (uint32_t arg1, int64_t arg2, uint32_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r8d = esi;\n    if (rdx == 0) {\n        goto label_0;\n    }\n    if ((dil & 7) == 0) {\n        goto label_1;\n    }\n    if (sil != *(rdi)) {\n        goto label_2;\n    }\n    goto label_3;\n    do {\n        if ((dil & 7) == 0) {\n            goto label_1;\n        }\n        if (*(rdi) == r8b) {\n            goto label_3;\n        }\nlabel_2:\n        rdi++;\n        rdx--;\n    } while (rdx != 0);\nlabel_0:\n    eax = 0;\n    return eax;\nlabel_1:\n    r9d = esi;\n    eax = (int32_t) sil;\n    r9d <<= 8;\n    r9d = (int32_t) r9w;\n    r9d |= eax;\n    r9 = (int64_t) r9d;\n    rax = r9;\n    rax <<= 0x10;\n    r9 |= rax;\n    rax = r9;\n    rax <<= 0x20;\n    r9 |= rax;\n    if (rdx <= 7) {\n        goto label_4;\n    }\n    r11 = 0xfefefefefefefeff;\n    rax = *(rdi);\n    r10 = 0x8080808080808080;\n    rax ^= r9;\n    rcx = rax + r11;\n    rax = ~rax;\n    rax &= rcx;\n    if ((rax & r10) == 0) {\n        goto label_5;\n    }\n    goto label_4;\n    do {\n        rax = *(rdi);\n        rax ^= r9;\n        rcx = rax + r11;\n        rax = ~rax;\n        rax &= rcx;\n        if ((rax & r10) != 0) {\n            goto label_4;\n        }\nlabel_5:\n        rdx -= 8;\n        rdi += 8;\n    } while (rdx > 7);\n    if (rdx == 0) {\n        goto label_0;\n    }\nlabel_4:\n    if (sil == *(rdi)) {\n        goto label_3;\n    }\n    rcx = rdi + 1;\n    rdi += rdx;\n    while (rcx != rdi) {\n        rcx++;\n        if (*((rcx - 1)) == r8b) {\n            goto label_6;\n        }\n        rax = rcx;\n    }\n    goto label_0;\nlabel_3:\n    rax = rdi;\nlabel_6:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040afe0",
            "funcStartAddr": "0x40afe0",
            "funcEndAddr": "0x40b06a",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40afe0 */\n#include <stdint.h>\n \nuint64_t fcn_0040afe0 (char * arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    rax = strlen (rdi);\n    rcx = rbx;\n    edx = 0;\n    rax++;\n    while (dil != 0x5c) {\nlabel_0:\n        *(rcx) = dil;\n        rcx++;\n        if (rax <= rsi) {\n            goto label_2;\n        }\nlabel_1:\n        rdx = rsi;\n        edi = *((rbx + rdx));\n        rsi = rdx + 1;\n    }\n    r8 = rdx + 4;\n    if (r8 >= rax) {\n        goto label_0;\n    }\n    r9d = *((rbx + rsi));\n    r10d = r9 - 0x30;\n    if (r10b > 3) {\n        goto label_0;\n    }\n    r10d = *((rbx + rdx + 2));\n    r11d = r10 - 0x30;\n    if (r11b > 7) {\n        goto label_0;\n    }\n    edx = *((rbx + rdx + 3));\n    r11d = rdx - 0x30;\n    if (r11b > 7) {\n        goto label_0;\n    }\n    edx = r10 + r9*8;\n    rcx++;\n    rsi = r8;\n    edx = r11 + rdx*8 - 0x80;\n    *((rcx - 1)) = dl;\n    goto label_1;\nlabel_2:\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040b070",
            "funcStartAddr": "0x40b070",
            "funcEndAddr": "0x40b0b2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40b070 */\n#include <stdint.h>\n \nvoid fcn_0040b070 (void ** ptr) {\n    rdi = ptr;\n    rbx = rdi;\n    free (*(rdi));\n    free (*((rbx + 8)));\n    free (*((rbx + 0x10)));\n    if ((*((rbx + 0x28)) & 4) == 0) {\n        rdi = rbx;\n        void (*0x401df0)() ();\n    }\n    free (*((rbx + 0x18)));\n    rdi = rbx;\n    return free ();\n}\n"
        },
        {
            "funcName": "fcn_0040b0c0",
            "funcStartAddr": "0x40b0c0",
            "funcEndAddr": "0x40b87f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40b0c0 */\n#include <stdint.h>\n \nuint64_t fcn_0040b0c0 (void) {\n    int64_t var_fh;\n    int64_t var_27h;\n    uint32_t var_40h_2;\n    uint32_t var_44h;\n    int64_t var_40h;\n    char * var_3ch;\n    int64_t var_40h_3;\n    int64_t var_44h_2;\n    int64_t var_48h_2;\n    int64_t var_4ch;\n    int64_t var_60h;\n    int64_t var_64h;\n    int64_t var_48h;\n    char * ptr;\n    int64_t var_58h;\n    rax = fopen (\"/proc/self/mountinfo\", 0x4120a7);\n    if (rax == 0) {\n        goto label_9;\n    }\n    *((rsp + 0x50)) = 0;\n    r12 = rsp + 0x48;\n    r14 = 0xfffff00000000000;\n    *((rsp + 0x58)) = 0;\n    do {\nlabel_0:\n        rcx = rbp;\n        edx = 0xa;\n        rsi = rsp + 0x58;\n        rdi = rsp + 0x50;\n        rax = getdelim ();\n        if (rax == -1) {\n            goto label_10;\n        }\n        rbx = rsp + 0x27;\n        rax = rsp + 0x3c;\n        rax = rsp + 0x40;\n        eax = 0;\n        r9 = rsp + 0x64;\n        r8 = rsp + 0x60;\n        rcx = rsp + 0x44;\n        eax = sscanf (*((rsp + 0x70)), \"%*u %*u %u:%u %n%*s%n %n%*s%n%c\", rsp + 0x40);\n        eax &= 0xfffffffb;\n    } while (eax != 3);\n    rdi = *((rsp + 0x2c));\n    rdi += *((rsp + 0x50));\n    rax = fcn_0040bd00 (rdi, 0x413801);\n    r15 = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    eax = 0;\n    r9 = rsp + 0x4c;\n    r8 = rsp + 0x48;\n    rcx = rsp + 0x44;\n    eax = sscanf (rax, \" - %n%*s%n %n%*s%n %c\", rsp + 0x40);\n    eax &= 0xfffffffb;\n    if (eax != 1) {\n        goto label_0;\n    }\n    rax = *((rsp + 0x44));\n    rdx = *((rsp + 0x50));\n    r13d = 1;\n    *((rdx + rax)) = 0;\n    rdx = *((rsp + 0x50));\n    rax = *((rsp + 0x2c));\n    *((rdx + rax)) = 0;\n    rax = *((rsp + 0x34));\n    *((r15 + rax)) = 0;\n    rax = *((rsp + 0x3c));\n    *((r15 + rax)) = 0;\n    rdi = *((rsp + 0x38));\n    rdi += r15;\n    fcn_0040afe0 (rdi);\n    rdi = *((rsp + 0x28));\n    rdi += *((rsp + 0x50));\n    fcn_0040afe0 (rdi);\n    rdi = *((rsp + 0x40));\n    rdi += *((rsp + 0x50));\n    fcn_0040afe0 (rdi);\n    rax = fcn_00409560 (0x38);\n    rdi = *((rsp + 0x38));\n    rbx = rax;\n    rdi += r15;\n    rax = fcn_00409790 (rdi);\n    rdi = *((rsp + 0x28));\n    rdi += *((rsp + 0x50));\n    *(rbx) = rax;\n    rax = fcn_00409790 (rdi);\n    rdi = *((rsp + 0x40));\n    rdi += *((rsp + 0x50));\n    *((rbx + 8)) = rax;\n    rax = fcn_00409790 (rdi);\n    rdi = *((rsp + 0x30));\n    *((rbx + 0x10)) = rax;\n    rdi += r15;\n    rax = fcn_00409790 (rdi);\n    edx = *((rsp + 0x20));\n    edi = \"autofs\";\n    rsi = 0xffffff00000;\n    r15 = rax;\n    *((rbx + 0x18)) = rax;\n    eax = *((rsp + 0x24));\n    rcx = rdx;\n    rdx <<= 0x20;\n    *((rbx + 0x28)) |= 4;\n    rcx <<= 8;\n    rdx &= r14;\n    ecx &= 0xfff00;\n    rdx |= rcx;\n    ecx = (int32_t) al;\n    rax <<= 0xc;\n    rdx |= rcx;\n    rax &= rsi;\n    ecx = 7;\n    rsi = r15;\n    rax |= rdx;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    *((rbx + 0x20)) = rax;\n    al = (rax > 0) ? 1 : 0;\n    if (al == 0) {\n        goto label_1;\n    }\n    edi = \"proc\";\n    ecx = 5;\n    rsi = r15;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (al > 0) ? 1 : 0;\n    while (al == 0) {\nlabel_1:\n        eax = *((rbx + 0x28));\n        eax &= 0xfffffffe;\n        eax |= r13d;\n        r13 = *(rbx);\n        *((rbx + 0x28)) = al;\n        rax = strchr (r13, 0x3a);\n        edx = 1;\n        if (rax == 0) {\n            goto label_11;\n        }\nlabel_2:\n        eax = *((rbx + 0x28));\n        edx += edx;\n        eax &= 0xfffffffd;\n        eax |= edx;\n        *((rbx + 0x28)) = al;\n        *(r12) = rbx;\n        r12 = rbx + 0x30;\n        goto label_0;\nlabel_10:\n        free (*((rsp + 0x50)));\n        if ((*(rbp) & 0x20) != 0) {\n            goto label_12;\n        }\n        eax = fcn_0040ced0 (rbp);\n        if (eax == 0xffffffff) {\n            goto label_13;\n        }\nlabel_3:\n        *(r12) = 0;\n        rax = *((rsp + 0x48));\nlabel_8:\n        return rax;\n        edi = \"subfs\";\n        ecx = 6;\n        rsi = r15;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        al = (eax > 0xffffffff) ? 1 : 0;\n    }\n    edi = \"debugfs\";\n    ecx = 8;\n    rsi = r15;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (al > 0) ? 1 : 0;\n    if (al == 0) {\n        goto label_1;\n    }\n    edi = \"devpts\";\n    ecx = 7;\n    rsi = r15;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (al > 0) ? 1 : 0;\n    if (al == 0) {\n        goto label_1;\n    }\n    edi = \"fusectl\";\n    ecx = 8;\n    rsi = r15;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (al > 0) ? 1 : 0;\n    if (al == 0) {\n        goto label_1;\n    }\n    edi = \"mqueue\";\n    ecx = 7;\n    rsi = r15;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (al > 0) ? 1 : 0;\n    if (al == 0) {\n        goto label_1;\n    }\n    edi = \"rpc_pipefs\";\n    ecx = 0xb;\n    rsi = r15;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (al > 0) ? 1 : 0;\n    if (al == 0) {\n        goto label_1;\n    }\n    edi = \"sysfs\";\n    ecx = 6;\n    rsi = r15;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (al > 0) ? 1 : 0;\n    if (al == 0) {\n        goto label_1;\n    }\n    edi = 0x41066d;\n    ecx = 6;\n    rsi = r15;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (al > 0) ? 1 : 0;\n    if (al == 0) {\n        goto label_1;\n    }\n    edi = \"kernfs\";\n    ecx = 7;\n    rsi = r15;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (al > 0) ? 1 : 0;\n    if (al == 0) {\n        goto label_1;\n    }\n    eax = strcmp (r15, \"ignore\");\n    if (eax == 0) {\n        goto label_1;\n    }\n    eax = strcmp (r15, \"none\");\n    r13b = (eax == 0) ? 1 : 0;\n    goto label_1;\nlabel_11:\n    if (*(r13) == 0x2f) {\n        goto label_14;\n    }\nlabel_5:\n    esi = \"-hosts\";\n    ecx = 7;\n    rdi = r13;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (*(r13) > 0x2f) ? 1 : 0;\n    dl = (al == 0) ? 1 : 0;\n    goto label_2;\nlabel_9:\n    esi = 0x4120a7;\n    edi = \"/etc/mtab\";\n    rax = setmntent ();\n    r13 = rax;\n    if (rax == 0) {\n        goto label_15;\n    }\n    rdi = r13;\n    r12 = rsp + 0x48;\n    r14 = 0xffffffffffffffff;\n    rax = getmntent ();\n    if (rax == 0) {\n        goto label_16;\n    }\n    do {\n        esi = \"bind\";\n        rdi = rbp;\n        rax = hasmntopt ();\n        r15 = rax;\n        rax = fcn_00409560 (0x38);\n        rbx = rax;\n        rax = fcn_00409790 (*(rbp));\n        *(rbx) = rax;\n        rax = fcn_00409790 (*((rbp + 8)));\n        *((rbx + 0x10)) = 0;\n        *((rbx + 8)) = rax;\n        rax = fcn_00409790 (*((rbp + 0x10)));\n        edi = \"autofs\";\n        ecx = 7;\n        *((rbx + 0x28)) |= 4;\n        rsi = rax;\n        *((rbx + 0x18)) = rax;\n        edx = 1;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        al = (*((rbx + 0x28)) > 0) ? 1 : 0;\n        if (al != 0) {\n            edi = \"proc\";\n            ecx = 5;\n            rsi = rbp;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            al = (al > 0) ? 1 : 0;\n            if (al == 0) {\n                goto label_17;\n            }\n            edi = \"subfs\";\n            ecx = 6;\n            rsi = rbp;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            al = (al > 0) ? 1 : 0;\n            if (al == 0) {\n                goto label_17;\n            }\n            edi = \"debugfs\";\n            ecx = 8;\n            rsi = rbp;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            al = (al > 0) ? 1 : 0;\n            if (al == 0) {\n                goto label_17;\n            }\n            edi = \"devpts\";\n            ecx = 7;\n            rsi = rbp;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            al = (al > 0) ? 1 : 0;\n            if (al == 0) {\n                goto label_17;\n            }\n            edi = \"fusectl\";\n            ecx = 8;\n            rsi = rbp;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            al = (al > 0) ? 1 : 0;\n            if (al == 0) {\n                goto label_17;\n            }\n            edi = \"mqueue\";\n            ecx = 7;\n            rsi = rbp;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            al = (al > 0) ? 1 : 0;\n            if (al == 0) {\n                goto label_17;\n            }\n            edi = \"rpc_pipefs\";\n            ecx = 0xb;\n            rsi = rbp;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            al = (al > 0) ? 1 : 0;\n            if (al == 0) {\n                goto label_17;\n            }\n            edi = \"sysfs\";\n            ecx = 6;\n            rsi = rbp;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            al = (al > 0) ? 1 : 0;\n            if (al == 0) {\n                goto label_17;\n            }\n            edi = 0x41066d;\n            ecx = 6;\n            rsi = rbp;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            al = (al > 0) ? 1 : 0;\n            if (al == 0) {\n                goto label_17;\n            }\n            edi = \"kernfs\";\n            ecx = 7;\n            rsi = rbp;\n            __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n            al = (al > 0) ? 1 : 0;\n            if (al == 0) {\n                goto label_17;\n            }\n            *((rsp + 0xf)) = dl;\n            eax = strcmp (rbp, \"ignore\");\n            edx = *((rsp + 0xf));\n            if (eax == 0) {\n                goto label_17;\n            }\n            eax = strcmp (rbp, \"none\");\n            dl = (r15 == 0) ? 1 : 0;\n            al = (eax == 0) ? 1 : 0;\n            edx &= eax;\n        }\nlabel_17:\n        eax = *((rbx + 0x28));\n        r15 = *(rbx);\n        eax &= 0xfffffffe;\n        eax |= edx;\n        *((rbx + 0x28)) = al;\n        rax = strchr (r15, 0x3a);\n        edx = 1;\n        if (rax == 0) {\n            goto label_18;\n        }\nlabel_4:\n        eax = *((rbx + 0x28));\n        edx += edx;\n        *((rbx + 0x20)) = r14;\n        rdi = r13;\n        eax &= 0xfffffffd;\n        eax |= edx;\n        *((rbx + 0x28)) = al;\n        *(r12) = rbx;\n        r12 = rbx + 0x30;\n        rax = getmntent ();\n    } while (rax != 0);\nlabel_16:\n    rdi = r13;\n    eax = endmntent ();\n    if (eax != 0) {\n        goto label_3;\n    }\nlabel_13:\n    rax = errno_location ();\n    r14d = *(rax);\n    r13 = rax;\nlabel_6:\n    *(r12) = 0;\n    rdi = *((rsp + 0x48));\n    if (rdi == 0) {\n        goto label_19;\n    }\n    do {\n        rbx = *((rdi + 0x30));\n        eax = fcn_0040b070 (rdi);\n        *((rsp + 0x48)) = rbx;\n        rdi = rbx;\n    } while (rbx != 0);\nlabel_19:\n    *(r13) = r14d;\n    eax = 0;\n    return rax;\nlabel_18:\n    if (*(r15) == 0x2f) {\n        goto label_20;\n    }\nlabel_7:\n    esi = \"-hosts\";\n    ecx = 7;\n    rdi = r15;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (*(r15) > 0x2f) ? 1 : 0;\n    dl = (al == 0) ? 1 : 0;\n    goto label_4;\nlabel_14:\n    if (*((r13 + 1)) != 0x2f) {\n        goto label_5;\n    }\n    edi = \"smbfs\";\n    ecx = 6;\n    rsi = r15;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (*((r13 + 1)) > 0x2f) ? 1 : 0;\n    if (al == 0) {\n        goto label_2;\n    }\n    edi = \"cifs\";\n    ecx = 5;\n    rsi = r15;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (al > 0) ? 1 : 0;\n    if (al == 0) {\n        goto label_2;\n    }\n    goto label_5;\nlabel_12:\n    rax = errno_location ();\n    r14d = *(rax);\n    r13 = rax;\n    fcn_0040ced0 (rbp);\n    *(r13) = r14d;\n    goto label_6;\nlabel_20:\n    if (*((r15 + 1)) != 0x2f) {\n        goto label_7;\n    }\n    edi = \"smbfs\";\n    ecx = 6;\n    rsi = rbp;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (*((r15 + 1)) > 0x2f) ? 1 : 0;\n    if (al == 0) {\n        goto label_4;\n    }\n    edi = \"cifs\";\n    ecx = 5;\n    rsi = rbp;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (al > 0) ? 1 : 0;\n    if (al == 0) {\n        goto label_4;\n    }\n    goto label_7;\nlabel_15:\n    eax = 0;\n    goto label_8;\n}\n"
        },
        {
            "funcName": "fcn_0040b880",
            "funcStartAddr": "0x40b880",
            "funcEndAddr": "0x40b9ae",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40b880 */\n#include <stdint.h>\n \nint64_t fcn_0040b880 (uint32_t arg1, uint32_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r11d = 1;\n    r8d = 1;\n    r9d = 0;\n    rax = 0xffffffffffffffff;\nlabel_0:\n    rcx = r8 + r9;\n    if (rcx >= rsi) {\n        goto label_2;\n    }\n    do {\n        r10 = rdi + rax;\n        ebx = *((r10 + r8));\n        if (*((rdi + rcx)) >= bl) {\n            goto label_3;\n        }\n        r9 = rcx;\n        r8d = 1;\n        r11 = rcx;\n        rcx = r8 + r9;\n        r11 -= rax;\n    } while (rcx < rsi);\nlabel_2:\n    *(rdx) = r11;\n    ebx = 1;\n    r8d = 1;\n    r9d = 0;\n    r10 = 0xffffffffffffffff;\nlabel_1:\n    rcx = r8 + r9;\n    if (rsi <= rcx) {\n        goto label_4;\n    }\n    do {\n        r11 = rdi + r10;\n        r11d = *((r11 + r8));\n        if (*((rdi + rcx)) <= r11b) {\n            goto label_5;\n        }\n        r9 = rcx;\n        r8d = 1;\n        rbx = rcx;\n        rcx = r8 + r9;\n        rbx -= r10;\n    } while (rsi > rcx);\nlabel_4:\n    r10++;\n    rax++;\n    if (r10 >= rax) {\n        *(rdx) = rbx;\n        rax = r10;\n    }\n    return rax;\n    if (r10 != rax) {\nlabel_3:\n        rax = r9;\n        r11d = 1;\n        r9++;\n        r8d = 1;\n        goto label_0;\n        if (r9 == 0) {\nlabel_5:\n            goto label_6;\n        }\n        r10 = r9;\n        ebx = 1;\n        r9++;\n        r8d = 1;\n        goto label_1;\n    }\n    if (r8 != r11) {\n        r8++;\n        goto label_0;\nlabel_6:\n        if (r8 == rbx) {\n            goto label_7;\n        }\n        r8++;\n        goto label_1;\n    }\n    r9 = rcx;\n    r8d = 1;\n    goto label_0;\nlabel_7:\n    r9 = rcx;\n    r8d = 1;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040b9b0",
            "funcStartAddr": "0x40b9b0",
            "funcEndAddr": "0x40bcf9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40b9b0 */\n#include <stdint.h>\n \nuint64_t fcn_0040b9b0 (int64_t arg1, int64_t arg2, int64_t arg3, uint32_t arg4) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    uint32_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_48h;\n    int64_t var_50h;\n    int64_t var_850h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r15 = rdi;\n    r12 = rdx;\n    rbx = rcx;\n    if (rcx <= 2) {\n        goto label_8;\n    }\n    rax = fcn_0040b880 (r12, rcx, rsp + 0x48);\n    r13 = rax;\n    rax = *((rsp + 0x48));\n    *((rsp + 0x20)) = rax;\nlabel_6:\n    rax = rsp + 0x50;\n    rdx = rsp + 0x850;\n    do {\n        *(rax) = rbx;\n        rax += 8;\n    } while (rdx != rax);\n    rax = *((rsp + 0x20));\n    rsi = r12 + rax;\n    if (rbx == 0) {\n        goto label_9;\n    }\n    r10 = rbx - 1;\n    r9 = rbx + r12;\n    rax = r12;\n    rdi = r12 + r10;\n    do {\n        edx = *(rax);\n        rcx = rdi;\n        rcx -= rax;\n        rax++;\n        *((rsp + rdx*8 + 0x50)) = rcx;\n    } while (r9 != rax);\n    *((rsp + 8)) = r10;\n    eax = memcmp (r12, rsi, r13);\n    if (eax == 0) {\n        goto label_10;\n    }\nlabel_1:\n    rax = rbx;\n    r14 = rbx - 1;\n    rax -= r13;\n    if (rax < r13) {\n        rax = r13;\n    }\n    r9d = 0;\n    rax++;\n    *((rsp + 0x20)) = rax;\n    *((rsp + 0x48)) = rax;\n    eax = 1;\n    rax -= r13;\n    *((rsp + 0x18)) = rax;\n    while (rax != 0) {\nlabel_0:\n        r9 += rax;\nlabel_2:\n        rcx = r9 + rbx;\n        *((rsp + 0x10)) = r9;\n        rdx = rcx;\n        *((rsp + 8)) = rcx;\n        rdx -= rbp;\n        rax = fcn_0040aed0 (r15 + rbp, 0, rdx);\n        rcx = *((rsp + 8));\n        if (rcx == 0) {\n            goto label_3;\n        }\n        r9 = *((rsp + 0x10));\n        if (rax != 0) {\n            goto label_3;\n        }\n        eax = *((r15 + rcx - 1));\n        rax = *((rsp + rax*8 + 0x50));\n    }\n    rdx = r15 + r9;\n    if (r13 >= r14) {\n        goto label_11;\n    }\n    rax = r13;\n    edi = *((r12 + r13));\n    if (*((rdx + r13)) == dil) {\n        goto label_12;\n    }\n    goto label_13;\n    do {\n        edi = *((rdx + rax));\n        if (*((r12 + rax)) != dil) {\n            goto label_13;\n        }\nlabel_12:\n        rax++;\n    } while (rax < r14);\nlabel_11:\n    rax = r13 - 1;\n    if (rax == -1) {\n        goto label_14;\n    }\n    esi = *((r12 + r13 - 1));\n    if (*((rdx + rax)) == sil) {\n        goto label_15;\n    }\n    goto label_16;\n    do {\n        esi = *((rdx + rax));\n        if (*((r12 + rax)) != sil) {\n            goto label_16;\n        }\nlabel_15:\n        rax--;\n    } while (rax != -1);\nlabel_14:\n    rax = rdx;\n    goto label_7;\nlabel_13:\n    r9 += *((rsp + 0x18));\n    goto label_0;\nlabel_9:\n    eax = memcmp (r12, rsi, r13);\n    if (eax != 0) {\n        goto label_1;\n    }\n    do {\nlabel_3:\n        eax = 0;\nlabel_7:\n        return rax;\nlabel_16:\n        r9 += *((rsp + 0x20));\n        goto label_2;\nlabel_10:\n        rax = r13 - 1;\n        r10 = *((rsp + 8));\n        r11d = 0;\n        r14d = 0;\n        *((rsp + 0x38)) = rax;\n        rax = rbx;\n        rax -= *((rsp + 0x20));\n        *((rsp + 0x28)) = rax;\n        eax = 1;\n        rax -= r13;\n        *((rsp + 0x30)) = rax;\n        goto label_17;\nlabel_4:\n        if (rax < *((rsp + 0x20))) {\n            if (r11 == 0) {\n                rax = *((rsp + 0x28));\n                goto label_18;\n            }\n        }\nlabel_18:\n        r14 += rax;\n        r11d = 0;\nlabel_5:\nlabel_17:\n        r9 = r14 + rbx;\n        *((rsp + 0x18)) = r10;\n        rdx = r9;\n        *((rsp + 0x10)) = r11;\n        rdx -= rbp;\n        *((rsp + 8)) = r9;\n        rax = fcn_0040aed0 (r15 + rbp, 0, rdx);\n    } while (rax != 0);\n    r9 = *((rsp + 8));\n    r11 = *((rsp + 0x10));\n    r10 = *((rsp + 0x18));\n    if (r9 == 0) {\n        goto label_3;\n    }\n    eax = *((r15 + r9 - 1));\n    rax = *((rsp + rax*8 + 0x50));\n    if (rax != 0) {\n        goto label_4;\n    }\n    rax = r13;\n    if (r11 >= r13) {\n        rax = r11;\n    }\n    if (rax >= r10) {\n        goto label_19;\n    }\n    rdx = r15 + r14;\n    while (*((r12 + rax)) == sil) {\n        rax++;\n        if (rax == r10) {\n            goto label_19;\n        }\n        esi = *((rdx + rax));\n    }\n    rdi = *((rsp + 0x30));\n    r11d = 0;\n    rcx = rdi + r14;\n    r14 = rax + rcx;\n    goto label_5;\nlabel_19:\n    rdi = *((rsp + 0x38));\n    rax = *((rsp + 0x38));\n    if (r11 >= r13) {\n        goto label_20;\n    }\n    rdx = r15 + r14;\n    esi = *((r12 + rdi));\n    if (*((rdx + rdi)) == sil) {\n        goto label_21;\n    }\n    goto label_20;\n    do {\n        ecx = *((rax + rdx - 1));\n        if (*((r12 + rax - 1)) != cl) {\n            goto label_22;\n        }\n        rax = rsi;\nlabel_21:\n        rsi = rax - 1;\n    } while (r11 != rax);\n    do {\nlabel_22:\n        r11++;\n        if (r11 > rax) {\n            goto label_23;\n        }\n        r14 += *((rsp + 0x20));\n        r11 = *((rsp + 0x28));\n        goto label_5;\nlabel_8:\n        *((rsp + 0x48)) = 1;\n        r13 = rcx - 1;\n        *((rsp + 0x20)) = 1;\n        goto label_6;\nlabel_20:\n        rax = r13;\n    } while (1);\nlabel_23:\n    rax = r15 + r14;\n    goto label_7;\n}\n"
        },
        {
            "funcName": "fcn_0040bd00",
            "funcStartAddr": "0x40bd00",
            "funcEndAddr": "0x40c094",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40bd00 */\n#include <stdint.h>\n \nuint64_t fcn_0040bd00 (int64_t arg2, char * s) {\n    int64_t var_8h;\n    int64_t var_10h;\n    void * s2;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_38h;\n    rsi = arg2;\n    rdi = s;\n    eax = *(rdi);\n    r9d = *(rsi);\n    if (al == 0) {\n        goto label_6;\n    }\n    if (r9b == 0) {\n        goto label_7;\n    }\n    rbx = rsi;\n    rdx = rdi;\n    ecx = r9d;\n    r8d = 1;\n    while (al != 0) {\n        if (cl == 0) {\n            goto label_8;\n        }\n        rdx++;\n        rbx++;\n        al = (cl == al) ? 1 : 0;\n        ecx = *(rbx);\n        r8d &= eax;\n        eax = *(rdx);\n    }\n    r12d = 0;\n    if (cl == 0) {\nlabel_8:\n        r12 = rdi;\n        if (r8b != 0) {\n            goto label_1;\n        }\n        r13 = rdi;\n        rbp -= rsi;\n        esi = (int32_t) r9b;\n        rax = strchr (rdi + 1, rsi);\n        r12 = rax;\n        if (rax == 0) {\n            goto label_1;\n        }\n        if (rbp == 1) {\n            goto label_1;\n        }\n        rax = r13 + rbp;\n        rbx -= rbp;\n        r8 = rax;\n        r8 -= r12;\n        eax = 1;\n        if (rax < r12) {\n            r8 = rax;\n        }\n        if (rbp <= 0x1f) {\n            goto label_9;\n        }\n        rax = fcn_0040b9b0 (r12, r8, rbx, rbp);\n        r12 = rax;\n    }\nlabel_1:\n    rax = r12;\n    return rax;\nlabel_9:\n    if (rbp <= 2) {\n        goto label_10;\n    }\n    *((rsp + 8)) = r8;\n    rax = fcn_0040b880 (rbx, rbp, rsp + 0x38);\n    r8 = *((rsp + 8));\n    r15 = rax;\n    rax = *((rsp + 0x38));\n    *((rsp + 0x18)) = rax;\nlabel_4:\n    rax = *((rsp + 0x18));\n    *((rsp + 8)) = r8;\n    eax = memcmp (rbx, rbx + rax, r15);\n    r8 = *((rsp + 8));\n    if (eax != 0) {\n        goto label_11;\n    }\n    rax = r15 - 1;\n    r13d = 0;\n    r14d = 0;\n    *((rsp + 0x20)) = rax;\n    rax = rbp;\n    rax -= *((rsp + 0x18));\n    *((rsp + 0x28)) = rax;\n    eax = 1;\n    rax -= r15;\n    *((rsp + 0x10)) = rax;\nlabel_0:\n    r11 = rbp + r14;\n    rdx = r11;\n    *((rsp + 8)) = r11;\n    rdx -= r8;\n    rax = fcn_0040aed0 (r12 + r8, 0, rdx);\n    r11 = *((rsp + 8));\n    if (r11 == 0) {\n        goto label_2;\n    }\n    if (rax != 0) {\n        goto label_2;\n    }\n    rax = r13;\n    if (r15 >= r13) {\n        rax = r15;\n    }\n    if (rbp <= rax) {\n        goto label_12;\n    }\n    rdx = r12 + rax;\n    ecx = *((rbx + rax));\n    if (*((rdx + r14)) != cl) {\n        goto label_13;\n    }\n    rdx = r12 + r14;\n    while (rbp != rax) {\n        esi = *((rdx + rax));\n        if (*((rbx + rax)) != sil) {\n            goto label_13;\n        }\n        rax++;\n    }\nlabel_12:\n    rax = *((rsp + 0x20));\n    if (r15 <= r13) {\n        goto label_14;\n    }\n    rcx = *((rsp + 0x20));\n    rsi = r12 + r14;\n    edi = *((rsi + rcx));\n    if (*((rbx + rcx)) == dil) {\n        goto label_15;\n    }\n    goto label_14;\n    do {\n        edi = *((rax + rsi - 1));\n        if (*((rbx + rax - 1)) != dil) {\n            goto label_5;\n        }\n        rax = rdx;\nlabel_15:\n        rdx = rax - 1;\n    } while (r13 != rax);\nlabel_5:\n    r10 = r13 + 1;\n    if (r10 > rax) {\n        goto label_16;\n    }\n    r13 = *((rsp + 0x28));\n    r14 += *((rsp + 0x18));\n    do {\n        r8 = r11;\n        goto label_0;\nlabel_13:\n        rdi = *((rsp + 0x10));\n        r13d = 0;\n        r9 = rdi + r14;\n        r14 = rax + r9;\n    } while (1);\n    do {\nlabel_2:\n        r12d = 0;\n        goto label_1;\nlabel_11:\n        rax = rbp;\n        rax -= r15;\n        if (rax < r15) {\n            rax = r15;\n        }\n        r14d = 0;\n        rax++;\n        *((rsp + 0x18)) = rax;\n        *((rsp + 0x38)) = rax;\n        rax = r12 + r15;\n        *((rsp + 8)) = rax;\n        eax = 1;\n        rax -= r15;\n        *((rsp + 0x10)) = rax;\nlabel_3:\n        r13 = rbp + r14;\n        rdx -= r8;\n        rax = fcn_0040aed0 (r12 + r8, 0, r13);\n    } while (r13 == 0);\n    if (rax != 0) {\n        goto label_2;\n    }\n    rdx = r12 + r14;\n    if (rbp <= r15) {\n        goto label_17;\n    }\n    rsi = *((rsp + 8));\n    rax = r15;\n    rdx = r12 + r14;\n    ecx = *((rbx + r15));\n    if (*((rsi + r14)) == cl) {\n        goto label_18;\n    }\n    goto label_19;\n    do {\n        edi = *((rdx + rax));\n        if (*((rbx + rax)) != dil) {\n            goto label_19;\n        }\nlabel_18:\n        rax++;\n    } while (rbp > rax);\nlabel_17:\n    rax = r15 - 1;\n    if (rax == -1) {\n        goto label_20;\n    }\n    edi = *((rbx + r15 - 1));\n    if (*((rdx + rax)) == dil) {\n        goto label_21;\n    }\n    goto label_22;\n    do {\n        esi = *((rdx + rax));\n        if (*((rbx + rax)) != sil) {\n            goto label_22;\n        }\nlabel_21:\n        rax--;\n    } while (rax != -1);\nlabel_20:\n    r12 = rdx;\n    goto label_1;\nlabel_19:\n    rsi = *((rsp + 0x10));\n    r9 = rsi + r14;\n    r14 = rax + r9;\n    do {\n        r8 = r13;\n        goto label_3;\nlabel_22:\n        r14 += *((rsp + 0x18));\n    } while (1);\nlabel_6:\n    r12d = 0;\n    if (r9b == 0) {\n        r12 = rdi;\n    }\n    goto label_1;\nlabel_7:\n    r12 = rdi;\n    goto label_1;\nlabel_10:\n    *((rsp + 0x38)) = 1;\n    r15 = rbp - 1;\n    *((rsp + 0x18)) = 1;\n    goto label_4;\nlabel_14:\n    rax = r15;\n    goto label_5;\nlabel_16:\n    r12 += r14;\n    goto label_1;\n}\n"
        },
        {
            "funcName": "fcn_0040c0a0",
            "funcStartAddr": "0x40c0a0",
            "funcEndAddr": "0x40c0e5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40c0a0 */\n#include <stdint.h>\n \nuint32_t fcn_0040c0a0 (char * value) {\n    rdi = value;\n    if (*((rdi + 8)) != 0) {\n        goto label_0;\n    }\n    edi = 0x4106c6;\n    eax = unsetenv ();\n    do {\n        edx = 0;\n        if (eax == 0) {\n            tzset ();\n            edx = 1;\n        }\n        eax = 1;\n        return eax;\nlabel_0:\n        setenv (0x4106c6, rdi + 9, 1);\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040c0f0",
            "funcStartAddr": "0x40c0f0",
            "funcEndAddr": "0x40c119",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40c0f0 */\n#include <stdint.h>\n \nvoid fcn_0040c0f0 (int64_t arg1) {\n    rdi = arg1;\n    if (rdi == 0) {\n        goto label_0;\n    }\n    do {\n        rbx = *(rdi);\n        free (rdi);\n        rdi = rbx;\n    } while (rbx != 0);\n    return;\nlabel_0:\n}\n"
        },
        {
            "funcName": "fcn_0040c120",
            "funcStartAddr": "0x40c120",
            "funcEndAddr": "0x40c161",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40c120 */\n#include <stdint.h>\n \nuint64_t fcn_0040c120 (int64_t arg1) {\n    rdi = arg1;\n    r12 = rdi;\n    rax = errno_location ();\n    rbx = rax;\n    r13d = *(rax);\n    eax = fcn_0040c0a0 (r12);\n    if (al == 0) {\n        r13d = *(rbx);\n    }\n    fcn_0040c0f0 (r12);\n    *(rbx) = r13d;\n    eax = ebp;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040c170",
            "funcStartAddr": "0x40c170",
            "funcEndAddr": "0x40c1ff",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40c170 */\n#include <stdint.h>\n \nuint64_t fcn_0040c170 (int64_t arg1) {\n    rdi = arg1;\n    if (rdi == 0) {\n        goto label_0;\n    }\n    r12 = rdi;\n    strlen (rdi);\n    edi = 0x76;\n    rbp = rax + 1;\n    if (rbp >= 0x76) {\n        rdi = rbp;\n    }\n    rdi += 0x11;\n    rdi &= 0xfffffffffffffff8;\n    rax = malloc (rdi);\n    rbx = rax;\n    if (rax == 0) {\n        goto label_1;\n    }\n    *(rax) = 0;\n    eax = 1;\n    *((rbx + 8)) = ax;\n    memcpy (rbx + 9, r12, rbp);\n    *((rbx + rbp + 9)) = 0;\n    do {\nlabel_1:\n        rax = rbx;\n        return rax;\nlabel_0:\n        rax = malloc (0x80);\n        rbx = rax;\n    } while (rax == 0);\n    edx = 0;\n    *(rbx) = 0;\n    rax = rbx;\n    *((rbx + 8)) = dx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040c200",
            "funcStartAddr": "0x40c200",
            "funcEndAddr": "0x40c375",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40c200 */\n#include <stdint.h>\n \nint64_t fcn_0040c200 (int64_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    r12 = *((rsi + 0x30));\n    if (r12 == 0) {\n        goto label_4;\n    }\n    r13 = rsi;\n    if (rsi <= r12) {\n        rdx = rsi + 0x38;\n        eax = 1;\n        if (r12 < rdx) {\n            goto label_2;\n        }\n    }\n    rbx = rbp + 9;\n    if (*(r12) == 0) {\n        goto label_5;\n    }\n    do {\nlabel_0:\n        eax = strcmp (rbx, r12);\n        if (eax == 0) {\n            goto label_3;\n        }\nlabel_1:\n        if (*(rbx) == 0) {\n            r14 = rbp + 9;\n            if (r14 != rbx) {\n                goto label_6;\n            }\n            if (*((rbp + 8)) == 0) {\n                goto label_7;\n            }\n        }\n        strlen (rbx);\n        rbx = rbx + rax + 1;\n    } while (*(rbx) != 0);\n    rax = *(rbp);\n    if (rax == 0) {\n        goto label_0;\n    }\n    rbx = rax + 9;\n    eax = strcmp (rbx, r12);\n    if (eax != 0) {\n        goto label_1;\n    }\n    do {\nlabel_3:\n        *((r13 + 0x30)) = rbx;\n        eax = 1;\nlabel_2:\n        return rax;\nlabel_5:\n        ebx = 0x4137e7;\n    } while (1);\nlabel_4:\n    eax = 1;\n    return rax;\nlabel_6:\n    strlen (r12);\n    r15 = rax + 1;\n    rax = rbx;\n    rax -= r14;\n    rdx = rax;\n    rdx = ~rdx;\n    if (rdx < r15) {\n        errno_location ();\n        *(rax) = 0xc;\n        eax = 0;\n        goto label_2;\nlabel_7:\n        eax = strlen (r12);\n        r15 = rax + 1;\n        eax = 0;\n    }\n    rax += r15;\n    if (rax <= 0x76) {\n        memcpy (rbx, r12, r15);\n        *((rbx + r15)) = 0;\n        goto label_3;\n    }\n    rax = fcn_0040c170 (r12);\n    *(rbp) = rax;\n    if (rax != 0) {\n        *((rax + 8)) = 0;\n        rbx = rax + 9;\n        goto label_3;\n    }\n    eax = 0;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_0040c380",
            "funcStartAddr": "0x40c380",
            "funcEndAddr": "0x40c42f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40c380 */\n#include <stdint.h>\n \nuint64_t fcn_0040c380 (int64_t arg1) {\n    rdi = arg1;\n    r12 = rdi;\n    rax = getenv (0x4106c6);\n    if (rax == 0) {\n        goto label_1;\n    }\n    while (eax != 0) {\nlabel_0:\n        rax = fcn_0040c170 (rbp);\n        rbx = rax;\n        if (rax != 0) {\n            al = fcn_0040c0a0 (r12);\n            if (al == 0) {\n                goto label_2;\n            }\n        }\n        rax = rbx;\n        return rax;\n        ebx = 1;\n        eax = strcmp (r12 + 9, rax);\n    }\n    rax = rbx;\n    return rax;\nlabel_1:\n    ebx = 1;\n    if (*((r12 + 8)) != 0) {\n        goto label_0;\n    }\n    rax = rbx;\n    return rax;\nlabel_2:\n    rax = errno_location ();\n    r12d = *(rax);\n    if (rbx != 1) {\n        fcn_0040c0f0 (rbx);\n    }\n    ebx = 0;\n    *(rbp) = r12d;\n    rax = rbx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040c450",
            "funcStartAddr": "0x40c450",
            "funcEndAddr": "0x40c4f5",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40c450 */\n#include <stdint.h>\n \nuint64_t fcn_0040c450 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r12 = rsi;\n    if (rdi == 0) {\n        goto label_1;\n    }\n    rbx = rdx;\n    rax = fcn_0040c380 (rdi);\n    r13 = rax;\n    if (rax == 0) {\n        goto label_0;\n    }\n    rsi = rbx;\n    rdi = r12;\n    rax = localtime_r ();\n    if (rax == 0) {\n        goto label_2;\n    }\n    al = fcn_0040c200 (rbp, rbx);\n    if (al == 0) {\n        goto label_2;\n    }\n    while (al != 0) {\n        rax = rbx;\n        return rax;\nlabel_2:\n        if (r13 != 1) {\n            eax = fcn_0040c120 (r13);\n        }\nlabel_0:\n        eax = 0;\n        return rax;\n        al = fcn_0040c120 (r13);\n    }\n    goto label_0;\nlabel_1:\n    rdi = r12;\n    rsi = rdx;\n    return gmtime_r ();\n}\n"
        },
        {
            "funcName": "fcn_0040c500",
            "funcStartAddr": "0x40c500",
            "funcEndAddr": "0x40c61c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40c500 */\n#include <stdint.h>\n \nuint64_t fcn_0040c500 (tm * arg1, char * arg2) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_14h;\n    int64_t var_18h;\n    int64_t var_1ch;\n    int64_t var_20h;\n    int64_t var_24h;\n    int64_t var_30h;\n    rdi = arg1;\n    rsi = arg2;\n    rbx = rsi;\n    if (rdi == 0) {\n        goto label_3;\n    }\n    rax = fcn_0040c380 (rdi);\n    r12 = rax;\n    if (rax == 0) {\n        goto label_4;\n    }\n    rax = fcn_0040d6b0 (rbx);\n    *((rsp + 8)) = rax;\n    if (rax == -1) {\n        goto label_5;\n    }\nlabel_1:\n    al = fcn_0040c200 (rbp, rbx);\n    if (al != 0) {\n        goto label_0;\n    }\n    *((rsp + 8)) = 0xffffffffffffffff;\n    do {\nlabel_0:\n        if (r12 != 1) {\n            al = fcn_0040c120 (r12);\n            if (al == 0) {\n                goto label_4;\n            }\n        }\n        rax = *((rsp + 8));\nlabel_2:\n        return rax;\nlabel_5:\n        rsi = rsp + 0x10;\n        rdi = rsp + 8;\n        rax = localtime_r ();\n    } while (rax == 0);\n    eax = *((rbx + 0x20));\n    edx = *((rsp + 0x30));\n    sil = (eax == 0) ? 1 : 0;\n    cl = (edx == 0) ? 1 : 0;\n    if (sil == cl) {\n        goto label_6;\n    }\n    if (eax < 0) {\n        goto label_6;\n    }\n    if (edx >= 0) {\n        goto label_0;\n    }\nlabel_6:\n    eax = *((rbx + 0x10));\n    edx = *((rbx + 0x14));\n    eax ^= *((rsp + 0x20));\n    edx ^= *((rsp + 0x24));\n    eax |= edx;\n    edx = *((rbx + 0xc));\n    edx ^= *((rsp + 0x1c));\n    eax |= edx;\n    edx = *((rbx + 8));\n    edx ^= *((rsp + 0x18));\n    eax |= edx;\n    edx = *((rbx + 4));\n    edx ^= *((rsp + 0x14));\n    eax |= edx;\n    edx = *(rbx);\n    edx ^= *((rsp + 0x10));\n    eax |= edx;\n    if (eax == 0) {\n        goto label_1;\n    }\n    goto label_0;\nlabel_3:\n    fcn_0040c620 (rsi);\n    return rax;\nlabel_4:\n    rax = 0xffffffffffffffff;\n    goto label_2;\n}\n"
        },
        {
            "funcName": "fcn_0040c620",
            "funcStartAddr": "0x40c620",
            "funcEndAddr": "0x40c636",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40c620 */\n#include <stdint.h>\n \nvoid fcn_0040c620 (int64_t arg1) {\n    rdi = arg1;\n    *((rdi + 0x20)) = 0;\n    edx = 0x617618;\n    esi = imp.gmtime_r;\n    return void (*0x40d270)() ();\n}\n"
        },
        {
            "funcName": "fcn_0040c640",
            "funcStartAddr": "0x40c640",
            "funcEndAddr": "0x40c69d",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40c640 */\n#include <stdint.h>\n \nuint64_t fcn_0040c640 (int64_t arg1) {\n    rdi = arg1;\n    rax = fpending ();\n    ebx = *(rbp);\n    r12 = rax;\n    ebx &= 0x20;\n    eax = fcn_0040ced0 (rbp);\n    if (ebx != 0) {\n        goto label_1;\n    }\n    if (eax == 0) {\n        goto label_0;\n    }\n    if (r12 != 0) {\n        goto label_2;\n    }\n    rax = errno_location ();\n    al = (*(rax) != 9) ? 1 : 0;\n    eax = (int32_t) al;\n    eax = -eax;\n    do {\nlabel_0:\n        return rax;\nlabel_1:\n        if (eax != 0) {\n            goto label_2;\n        }\n        errno_location ();\n        *(rax) = 0;\n        eax = 0xffffffff;\n    } while (1);\nlabel_2:\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040c6a0",
            "funcStartAddr": "0x40c6a0",
            "funcEndAddr": "0x40c6ea",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40c6a0 */\n#include <stdint.h>\n \nuint64_t fcn_0040c6a0 (int64_t arg_60h, int64_t arg3, int32_t oflag, const char * path) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_30h;\n    rdx = arg3;\n    rsi = oflag;\n    rdi = path;\n    *((rsp + 0x30)) = rdx;\n    edx = 0;\n    while (1) {\n        eax = 0;\n        eax = open (rdi, rsi, rdx);\n        fcn_0040ccc0 (eax);\n        return eax;\n        rax = rsp + 0x60;\n        *((rsp + 8)) = 0x10;\n        edx = *((rsp + 0x30));\n        *((rsp + 0x10)) = rax;\n        rax = rsp + 0x20;\n        *((rsp + 0x18)) = rax;\n    }\n}\n"
        },
        {
            "funcName": "fcn_0040c6f0",
            "funcStartAddr": "0x40c6f0",
            "funcEndAddr": "0x40c74e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40c6f0 */\n#include <stdint.h>\n \nuint64_t fcn_0040c6f0 (int32_t category) {\n    rdi = category;\n    rax = setlocale (rdi, 0);\n    rdx = rax;\n    eax = 1;\n    if (rdx != 0) {\n        ecx = 2;\n        edi = 0x413870;\n        rsi = rdx;\n        __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n        cl = (rdx > 0) ? 1 : 0;\n        eax = 0;\n        if (cl != 0) {\n            goto label_0;\n        }\n    }\n    return rax;\nlabel_0:\n    edi = \"POSIX\";\n    ecx = 6;\n    rsi = rdx;\n    __asm (\"repe cmpsb byte [rsi], byte [rdi]\");\n    al = (cl > 0) ? 1 : 0;\n    al = (al != 0) ? 1 : 0;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040c750",
            "funcStartAddr": "0x40c750",
            "funcEndAddr": "0x40ccb2",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40c750 */\n#include <stdint.h>\n \nuint64_t fcn_0040c750 (void) {\n    uint32_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_60h;\n    rax = nl_langinfo (0xe);\n    r15 = imp.__libc_start_main;\n    rbx = rax;\n    eax = 0x4137e7;\n    if (rax == 0) {\n        rbx = rax;\n    }\n    if (r15 == 0) {\n        goto label_15;\n    }\nlabel_1:\n    ebp = *(r15);\n    if (bpl != 0) {\n        goto label_16;\n    }\n    goto label_17;\n    do {\nlabel_0:\n        strlen (r15);\n        rbp = r15 + rax + 1;\n        strlen (rbp);\n        r15 = rbp + rax + 1;\n        ebp = *(r15);\n        if (bpl == 0) {\n            goto label_17;\n        }\nlabel_16:\n        eax = strcmp (rbx, r15);\n        if (eax == 0) {\n            goto label_18;\n        }\n    } while (bpl != 0x2a);\n    if (*((r15 + 1)) != 0) {\n        goto label_0;\n    }\nlabel_18:\n    strlen (r15);\n    rbx = r15 + rax + 1;\nlabel_17:\n    eax = \"ASCII\";\n    if (*(rbx) == 0) {\n        rbx = rax;\n    }\n    rax = rbx;\n    return rax;\nlabel_15:\n    rax = getenv (\"CHARSETALIASDIR\");\n    r13 = rax;\n    if (rax == 0) {\n        goto label_19;\n    }\n    if (*(rax) == 0) {\n        goto label_19;\n    }\n    rax = strlen (rax);\n    r12 = rax;\n    r14 = rax;\n    if (rax != 0) {\n        goto label_20;\n    }\nlabel_13:\n    rax = malloc (0xe);\n    if (rax != 0) {\n        goto label_21;\n    }\n    do {\n        r15d = 0x4137e7;\nlabel_2:\n        *(0x00617620) = r15;\n        goto label_1;\nlabel_19:\n        r12d = 0x65;\n        r14d = 0x64;\n        r13d = \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\";\nlabel_14:\n        rax = malloc (0x73);\n    } while (rax == 0);\n    memcpy (rbp, r13, r14);\n    *((rbp + r14)) = 0x2f;\n    do {\n        r12 += rbp;\n        rax = 0x2e74657372616863;\n        *(r12) = rax;\n        eax = 0x73;\n        *((r12 + 0xc)) = ax;\n        eax = 0;\n        *((r12 + 8)) = 0x61696c61;\n        eax = open (rbp, 0, rdx);\n        r12d = eax;\n        if (eax >= 0) {\n            goto label_22;\n        }\nlabel_6:\n        r15d = 0x4137e7;\nlabel_7:\n        free (rbp);\n        goto label_2;\nlabel_21:\n        eax = memcpy (rbp, r13, r14);\n    } while (1);\nlabel_22:\n    esi = 0x4120a7;\n    edi = eax;\n    r15d = 0;\n    rax = fdopen ();\n    *((rsp + 8)) = 0;\n    r13 = rax;\n    if (rax == 0) {\n        goto label_23;\n    }\n    rax = rbx;\n    r12 = rsp + 0x60;\n    r14 = rsp + 0x20;\n    rbx = r13;\n    r13 = rax;\n    do {\nlabel_3:\n        rax = *((rbx + 8));\n        if (rax >= *((rbx + 0x10))) {\n            goto label_24;\n        }\nlabel_4:\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        edi = *(rax);\nlabel_5:\n        eax = rdi - 9;\n    } while (eax <= 1);\n    if (edi == 0x20) {\n        goto label_3;\n    }\n    if (edi == 0x23) {\n        goto label_25;\n    }\n    eax = ungetc (rdi, rbx);\n    eax = 0;\n    rcx = r12;\n    rdx = r14;\n    eax = fscanf (rbx, \"%50s %50s\");\n    if (eax <= 1) {\n        goto label_12;\n    }\n    rcx = r14;\n    do {\n        edx = *(rcx);\n        rcx += 4;\n        eax = rdx - 0x1010101;\n        edx = ~edx;\n        eax &= edx;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    edx = eax;\n    edx >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = edx;\n    }\n    rdx = rcx + 2;\n    if ((eax & 0x8080) == 0) {\n        rcx = rdx;\n    }\n    edx = eax;\n    dl += al;\n    rdx = r12;\n    rcx -= 3;\n    rcx -= r14;\n    do {\n        esi = *(rdx);\n        rdx += 4;\n        eax = rsi - 0x1010101;\n        esi = ~esi;\n        eax &= esi;\n        eax &= 0x80808080;\n    } while (eax == 0);\n    esi = eax;\n    *((rsp + 0x10)) = rcx;\n    esi >>= 0x10;\n    if ((eax & 0x8080) == 0) {\n        eax = esi;\n    }\n    rsi = rdx + 2;\n    if ((eax & 0x8080) == 0) {\n        rdx = rsi;\n    }\n    esi = eax;\n    sil += al;\n    rdx -= 3;\n    rdx -= r12;\n    rax = rcx + rdx;\n    *((rsp + 0x18)) = rdx;\n    if (*((rsp + 8)) != 0) {\n        goto label_26;\n    }\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    rax = malloc (rax + 3);\n    rcx = *((rsp + 0x10));\n    rdx = *((rsp + 0x18));\nlabel_9:\n    if (rax == 0) {\n        goto label_27;\n    }\n    rdi = *((rsp + 8));\n    rsi = 0xfffffffffffffffe;\n    rsi -= rcx;\n    rcx++;\n    rdi -= rdx;\n    rsi += rdi;\n    rsi += rax;\n    if (ecx >= 8) {\n        goto label_28;\n    }\n    if ((cl & 4) != 0) {\n        goto label_29;\n    }\n    if (ecx != 0) {\n        r9d = *(r14);\n        *(rsi) = r9b;\n        if ((cl & 2) != 0) {\n            goto label_30;\n        }\n    }\nlabel_10:\n    rdx++;\n    rcx = rax + rdi - 1;\n    if (edx >= 8) {\n        goto label_31;\n    }\n    if ((dl & 4) != 0) {\n        goto label_32;\n    }\n    if (edx != 0) {\n        esi = *(r12);\n        *(rcx) = sil;\n        if ((dl & 2) != 0) {\n            goto label_33;\n        }\n    }\nlabel_11:\n    r15 = rax;\n    rax = *((rbx + 8));\n    if (rax < *((rbx + 0x10))) {\n        goto label_4;\n    }\nlabel_24:\n    rdi = rbx;\n    eax = uflow ();\n    edi = eax;\n    if (eax != 0xffffffff) {\n        goto label_5;\n    }\nlabel_12:\n    rax = r13;\n    r13 = rbx;\n    rbx = rax;\n    fcn_0040ced0 (rbx);\n    rax = *((rsp + 8));\n    if (rax == 0) {\n        goto label_6;\n    }\n    *((r15 + rax)) = 0;\n    goto label_7;\n    do {\n        rdx = rax + 1;\n        *((rbx + 8)) = rdx;\n        eax = *(rax);\n        edx = 1;\nlabel_8:\n        if (eax == 0xa) {\n            goto label_34;\n        }\n        if (dl == 0) {\n            goto label_34;\n        }\nlabel_25:\n        rax = *((rbx + 8));\n    } while (rax < *((rbx + 0x10)));\n    rdi = rbx;\n    eax = uflow ();\n    dl = (eax != 0xffffffff) ? 1 : 0;\n    goto label_8;\nlabel_26:\n    rax += *((rsp + 8));\n    rcx = rax + 2;\n    *((rsp + 8)) = rcx;\n    eax = realloc (r15, rax + 3);\n    rdx = *((rsp + 0x18));\n    rcx = *((rsp + 0x10));\n    goto label_9;\nlabel_28:\n    r9 = *(r14);\n    *(rsi) = r9;\n    r9d = ecx;\n    r10 = *((r14 + r9 - 8));\n    *((rsi + r9 - 8)) = r10;\n    r9 = rsi + 8;\n    r10 = r14;\n    r9 &= 0xfffffffffffffff8;\n    rsi -= r9;\n    ecx += esi;\n    r10 -= rsi;\n    ecx &= 0xfffffff8;\n    if (ecx < 8) {\n        goto label_10;\n    }\n    ecx &= 0xfffffff8;\n    esi = 0;\n    do {\n        r8d = esi;\n        esi += 8;\n        r11 = *((r10 + r8));\n        *((r9 + r8)) = r11;\n    } while (esi < ecx);\n    goto label_10;\nlabel_31:\n    rsi = *(r12);\n    r9 = r12;\n    *(rcx) = rsi;\n    esi = edx;\n    rdi = *((r12 + rsi - 8));\n    *((rcx + rsi - 8)) = rdi;\n    rdi = rcx + 8;\n    rdi &= 0xfffffffffffffff8;\n    rcx -= rdi;\n    edx += ecx;\n    r9 -= rcx;\n    edx &= 0xfffffff8;\n    if (edx < 8) {\n        goto label_11;\n    }\n    edx &= 0xfffffff8;\n    ecx = 0;\n    do {\n        esi = ecx;\n        ecx += 8;\n        r8 = *((r9 + rsi));\n        *((rdi + rsi)) = r8;\n    } while (ecx < edx);\n    goto label_11;\nlabel_34:\n    if (eax == 0xffffffff) {\n        goto label_12;\n    }\n    goto label_3;\nlabel_20:\n    if (*((r13 + rax - 1)) == 0x2f) {\n        rdi = rax + 0xe;\n        goto label_13;\nlabel_23:\n        close (r12d);\n        goto label_6;\nlabel_29:\n        r9d = *(r14);\n        *(rsi) = r9d;\n        r9d = *((r14 + rcx - 4));\n        *((rsi + rcx - 4)) = r9d;\n        goto label_10;\nlabel_32:\n        esi = *(r12);\n        *(rcx) = esi;\n        esi = *((r12 + rdx - 4));\n        *((rcx + rdx - 4)) = esi;\n        goto label_11;\nlabel_27:\n        rax = r13;\n        r13 = rbx;\n        r15d = 0x4137e7;\n        rbx = rax;\n        free (r15);\n        fcn_0040ced0 (r13);\n        goto label_7;\nlabel_30:\n        r9d = *((r14 + rcx - 2));\n        *((rsi + rcx - 2)) = r9w;\n        goto label_10;\nlabel_33:\n        esi = edx;\n        edx = *((r12 + rsi - 2));\n        *((rcx + rsi - 2)) = dx;\n        goto label_11;\n    }\n    rdi = rax + 0xf;\n    r12++;\n    goto label_14;\n}\n"
        },
        {
            "funcName": "fcn_0040ccc0",
            "funcStartAddr": "0x40ccc0",
            "funcEndAddr": "0x40cd0e",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40ccc0 */\n#include <stdint.h>\n \nuint64_t fcn_0040ccc0 (uint32_t arg1) {\n    rdi = arg1;\n    ebx = edi;\n    if (edi > 2) {\n        eax = ebx;\n        return eax;\n    }\n    eax = fcn_0040d730 (rdi, rsi, rdx);\n    r12d = eax;\n    rax = errno_location ();\n    ebx = r12d;\n    r13d = *(rax);\n    close (ebx);\n    eax = ebx;\n    *(rbp) = r13d;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040cd10",
            "funcStartAddr": "0x40cd10",
            "funcEndAddr": "0x40ce37",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40cd10 */\n#include <stdint.h>\n \nuint64_t fcn_0040cd10 (int64_t arg1, int64_t arg2, int64_t arg7) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    rdi = arg1;\n    rsi = arg2;\n    xmm0 = arg7;\n    __asm (\"movdqu xmm0, xmmword [rsi]\");\n    __asm (\"movups xmmword [rsp + 8], xmm0\");\n    r15 = *((rsi + 0x10));\n    *((rsp + 0x18)) = r15;\n    if (rdi == 0) {\n        goto label_2;\n    }\n    r13 = rdi;\n    r12 = rsi;\n    ebx = 0;\n    r14 = 0xffffffffffffffff;\n    while (eax <= 0x2f) {\n        edx = eax;\n        eax += 8;\n        *((rsp + 8)) = eax;\n        rdx += r15;\nlabel_0:\n        rax = strlen (*(rdx));\n        rbx += rax;\n        if (rbx < 0) {\n            rbx = r14;\n        }\n        rbp--;\n        if (rbp == 0) {\n            goto label_3;\n        }\n        eax = *((rsp + 8));\n    }\n    rdx = *((rsp + 0x10));\n    rax = rdx + 8;\n    *((rsp + 0x10)) = rax;\n    goto label_0;\nlabel_3:\n    if (rbx > 0x7fffffff) {\n        goto label_4;\n    }\n    rax = fcn_00409560 (rbx + 1);\n    rbx = rax;\n    while (eax <= 0x2f) {\n        edx = eax;\n        eax += 8;\n        rdx += *((r12 + 0x10));\n        *(r12) = eax;\nlabel_1:\n        r15 = *(rdx);\n        rax = strlen (*(rdx));\n        r14 = rax;\n        memcpy (rbx, r15, rax);\n        rbx += r14;\n        r13--;\n        if (r13 == 0) {\n            goto label_5;\n        }\n        eax = *(r12);\n    }\n    rdx = *((r12 + 8));\n    rax = rdx + 8;\n    *((r12 + 8)) = rax;\n    goto label_1;\nlabel_2:\n    rax = fcn_00409560 (1);\n    rbx = rax;\nlabel_5:\n    *(rbx) = 0;\n    do {\n        rax = rbp;\n        return rax;\nlabel_4:\n        errno_location ();\n        ebp = 0;\n        *(rax) = 0x4b;\n    } while (1);\n}\n"
        },
        {
            "funcName": "fcn_0040ce40",
            "funcStartAddr": "0x40ce40",
            "funcEndAddr": "0x40ceca",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40ce40 */\n#include <stdint.h>\n \nuint64_t fcn_0040ce40 (uint32_t arg1, int64_t arg2) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    eax = *(rdi);\n    if (al == 0) {\n        goto label_0;\n    }\n    if (al != 0x25) {\n        goto label_1;\n    }\n    if (*((rdi + 1)) != 0x73) {\n        goto label_1;\n    }\n    eax = 0;\n    while (cl != 0) {\n        if (cl != 0x25) {\n            goto label_1;\n        }\n        if (*((rdi + rax*2 + 1)) != 0x73) {\n            goto label_1;\n        }\n        rax++;\n        ecx = *((rdi + rax*2));\n    }\n    do {\n        fcn_0040cd10 (rax, rsi, rdx);\n        return rax;\nlabel_1:\n        eax = fcn_0040d6d0 (rsp + 8, rdi, rsi);\n        if (eax >= 0) {\n            rax = *((rsp + 8));\n            return rax;\n        }\n        rax = errno_location ();\n        if (*(rax) == 0xc) {\n            goto label_2;\n        }\n        eax = 0;\n        return rax;\nlabel_0:\n        eax = 0;\n    } while (1);\nlabel_2:\n    return fcn_004097b0 ();\n}\n"
        },
        {
            "funcName": "fcn_0040ced0",
            "funcStartAddr": "0x40ced0",
            "funcEndAddr": "0x40cf4b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40ced0 */\n#include <stdint.h>\n \nuint64_t fcn_0040ced0 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    eax = fileno (rdi);\n    rdi = rbx;\n    if (eax < 0) {\n        goto label_1;\n    }\n    eax = freading ();\n    while (rax != -1) {\n        eax = fcn_0040cf50 (rbx);\n        if (eax == 0) {\n            goto label_2;\n        }\n        rax = errno_location ();\n        r12d = *(rax);\n        fclose (rbx);\n        if (r12d != 0) {\n            goto label_3;\n        }\nlabel_0:\n        return rax;\n        eax = fileno (rbx);\n        esi = 0;\n        edx = 1;\n        edi = eax;\n        rax = lseek ();\n    }\nlabel_2:\n    rdi = rbx;\nlabel_1:\n    void (*0x401ee0)() ();\nlabel_3:\n    *(rbp) = r12d;\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040cf50",
            "funcStartAddr": "0x40cf50",
            "funcEndAddr": "0x40cf90",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40cf50 */\n#include <stdint.h>\n \nuint32_t fcn_0040cf50 (int64_t arg1) {\n    rdi = arg1;\n    rbx = rdi;\n    if (rdi != 0) {\n        eax = freading ();\n        if (eax == 0) {\n            goto label_0;\n        }\n        if ((*(rbx) & 0x100) != 0) {\n            goto label_1;\n        }\n    }\nlabel_0:\n    rdi = rbx;\n    void (*0x402160)() ();\nlabel_1:\n    fcn_0040cf90 (rbx, 0, 1);\n    rdi = rbx;\n    return fflush ();\n}\n"
        },
        {
            "funcName": "fcn_0040cf90",
            "funcStartAddr": "0x40cf90",
            "funcEndAddr": "0x40cfe7",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40cf90 */\n#include <stdint.h>\n \nint64_t fcn_0040cf90 (uint32_t arg1, int64_t arg2, int64_t arg3) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rax = *((rdi + 8));\n    while (*((rdi + 0x28)) != rax) {\nlabel_0:\n        void (*0x402280)() ();\n        rax = *((rdi + 0x20));\n    }\n    if (*((rdi + 0x48)) != 0) {\n        goto label_0;\n    }\n    r12d = edx;\n    rbx = rdi;\n    eax = fileno (rdi);\n    edx = r12d;\n    rsi = rbp;\n    edi = eax;\n    rax = lseek ();\n    if (rax != -1) {\n        *(rbx) &= 0xffffffef;\n        *((rbx + 0x90)) = rax;\n        eax = 0;\n    }\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040cff0",
            "funcStartAddr": "0x40cff0",
            "funcEndAddr": "0x40d107",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40cff0 */\n#include <stdint.h>\n \nuint64_t fcn_0040cff0 (int64_t arg_20h, int64_t arg_28h, int64_t arg_30h, int64_t arg_38h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    r10 = rdi;\n    eax = 0;\n    r11 = (int64_t) edx;\n    r10 >>= 2;\n    rcx = (int64_t) ecx;\n    r8 = (int64_t) r8d;\n    rbx = (int64_t) r9d;\n    r10d += 0x1db;\n    r12 = rbx;\n    al = ((dil & 3) == 0) ? 1 : 0;\n    r12 >>= 2;\n    r10d -= eax;\n    eax = 0;\n    r12d += 0x1db;\n    r9d &= 3;\n    r9d = 0x51eb851f;\n    al = (r9d == 0) ? 1 : 0;\n    rdi -= rbx;\n    r12d -= eax;\n    eax = r10d;\n    edx:eax = eax * r9d;\n    eax = r10d;\n    eax >>= 0x1f;\n    edx >>= 3;\n    edx = r10d;\n    r10d -= r12d;\n    ebp -= eax;\n    eax = rbp + rbp*4;\n    eax = rax * 5;\n    edx -= eax;\n    eax = edx;\n    eax >>= 0x1f;\n    ebp -= eax;\n    eax = r12d;\n    edx:eax = eax * r9d;\n    eax = r12d;\n    r9d = r12d;\n    eax >>= 0x1f;\n    edx >>= 3;\n    edx -= eax;\n    eax = rdx * 5;\n    eax = rax * 5;\n    r9d -= eax;\n    eax = r9d;\n    eax >>= 0x1f;\n    edx -= eax;\n    eax = ebp;\n    eax -= edx;\n    rdx = (int64_t) edx;\n    r10d -= eax;\n    rdx >>= 2;\n    eax = r10d;\n    r10 = (int64_t) ebp;\n    r10 >>= 2;\n    r10d -= edx;\n    rdx = *((rsp + 0x28));\n    r10d += eax;\n    rax = rdi * 9;\n    rax = rdi + rax*8;\n    r10 = (int64_t) r10d;\n    rax *= 5;\n    rsi += rax;\n    rax = *((rsp + 0x20));\n    rsi -= rax;\n    rsi += r10;\n    rax = rsi * 3;\n    rax = r11 + rax*8;\n    rax -= rdx;\n    rdx = rax;\n    rdx <<= 4;\n    rdx -= rax;\n    rax = rcx + rdx*4;\n    rdx = *((rsp + 0x30));\n    rax -= rdx;\n    rdx = rax;\n    rdx <<= 4;\n    rdx -= rax;\n    rax = r8 + rdx*4;\n    rdx = *((rsp + 0x38));\n    r12 = rbx;\n    rax -= rdx;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040d110",
            "funcStartAddr": "0x40d110",
            "funcEndAddr": "0x40d1a1",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40d110 */\n#include <stdint.h>\n \nint64_t fcn_0040d110 (int64_t arg_10h, int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, int64_t arg5, int64_t arg6) {\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\n    r8 = arg5;\n    r9 = arg6;\n    rax = *((rsp + 0x10));\n    rbx = r9;\n    if (rax != 0) {\n        r9d = *(rax);\n        r9d = *((rax + 4));\n        r9d = *((rax + 8));\n        r9d = *((rax + 0x1c));\n        rax = fcn_0040cff0 (rdi, rsi, rdx, rcx, r8, *((rax + 0x14)));\n        rax += rbx;\n        if (rax overflow 0) {\n            goto label_0;\n        }\n        return rax;\n    }\nlabel_0:\n    if (rbx >= 0) {\n        rcx = 0x7ffffffffffffffd;\n        rdx = rbx - 1;\n        rax = 0x7fffffffffffffff;\n        if (rbx > rcx) {\n            rax = rdx;\n        }\n        return rax;\n    }\n    rax = 0x8000000000000002;\n    if (rbx < rax) {\n        rax = rbx + 1;\n        return rax;\n    }\n    rax = 0x8000000000000000;\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040d1b0",
            "funcStartAddr": "0x40d1b0",
            "funcEndAddr": "0x40d26f",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40d1b0 */\n#include <stdint.h>\n \nint64_t fcn_0040d1b0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    r13 = rdx;\n    r12 = rdi;\n    rbx = rsi;\n    rax = *(rsi);\n    rsi = rdx;\n    rdi = rsp + 8;\n    rax = void (*r12)(uint64_t, uint64_t, uint64_t, uint64_t) (rbx, rbp, r12, r13);\n    while (1) {\nlabel_1:\n        return rax;\n        r14 = *(rbx);\n        ebp = 0;\n        if (r14 != 0) {\n            goto label_2;\n        }\n    }\n    do {\nlabel_0:\nlabel_2:\n        rdx = r14;\n        rbx >>= 1;\n        rdx >>= 1;\n        rdx += rbx;\n        rbx = rbp;\n        rbx |= r14;\n        ebx &= 1;\n        rbx += rdx;\n        if (rbp != rbx) {\n            if (r14 != rbx) {\n                goto label_3;\n            }\n        }\n        rsi = r13;\n        rdi = rsp + 8;\n        rax = void (*r12)(uint64_t) (rbx);\n    } while (rax != 0);\n    r14 = rbx;\n    rbx = rbp;\n    goto label_0;\nlabel_3:\n    if (rax != 0) {\n        goto label_1;\n    }\n    if (rbp == 0) {\n        goto label_1;\n    }\n    rsi = r13;\n    rdi = rsp + 8;\n    void (*r12)(uint64_t) (rbp);\n    return rax;\n}\n"
        },
        {
            "funcName": "fcn_0040d6b0",
            "funcStartAddr": "0x40d6b0",
            "funcEndAddr": "0x40db0c",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40d6b0 */\n#include <stdint.h>\n \nint64_t fcn_0040d6b0 (int64_t arg1) {\n    int64_t var_ch;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_1ch;\n    int64_t var_20h;\n    int64_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_44h;\n    int64_t var_48h;\n    int64_t var_50h;\n    int64_t var_58h;\n    int64_t var_60h;\n    int64_t var_70h;\n    int64_t var_80h;\n    int64_t var_90h;\n    int64_t var_a0h;\n    int64_t var_c0h;\n    rdi = arg1;\nlabel_6:\n    r14 = rdi;\n    eax = *(rdi);\n    *((rsp + 0x10)) = rsi;\n    rsi = *((rdi + 0xc));\n    *((rsp + 0x40)) = eax;\n    eax = *((rdi + 4));\n    *((rsp + 0x30)) = rdx;\n    edx = 0x2aaaaaab;\n    *((rsp + 0xc)) = eax;\n    eax = *((rdi + 8));\n    edi = *((rdi + 0x10));\n    *((rsp + 0x18)) = eax;\n    eax = *((r14 + 0x20));\n    *((rsp + 0x28)) = eax;\n    eax = edi;\n    edx:eax = eax * edx;\n    eax = edi;\n    eax >>= 0x1f;\n    edx >>= 1;\n    ecx = edx;\n    edx = 0;\n    ecx -= eax;\n    eax = rcx * 3;\n    ebx = ecx;\n    eax <<= 2;\n    edi -= eax;\n    eax = edi;\n    ecx = edi;\n    eax >>= 0x1f;\n    ebx -= eax;\n    rax = *((r14 + 0x14));\n    rbx = (int64_t) ebx;\n    rbx += rax;\n    if ((bl & 3) == 0) {\n        rdx = 0xa3d70a3d70a3d70b;\n        rax = rbx;\n        rdx:rax = rax * rdx;\n        rax = rdx + rbx;\n        rdx = rbx;\n        rdx >>= 0x3f;\n        rax >>= 6;\n        rax -= rdx;\n        rdx = rax * 5;\n        rdi = rdx * 5;\n        edx = 1;\n        rdi <<= 2;\n        if (rbx == rdi) {\n            goto label_7;\n        }\n    }\nlabel_1:\n    eax = ecx;\n    r12d = 0x3b;\n    rdi = rbx;\n    eax >>= 0x1f;\n    r9d = 0x46;\n    eax &= 0xc;\n    ecx += eax;\n    rax = (int64_t) edx;\n    rdx = rax + rax;\n    rcx = (int64_t) ecx;\n    rdx += rax;\n    rax = rax + rdx*4;\n    rcx += rax;\n    eax = *((rcx + rcx + 0x413900));\n    eax--;\n    rax = (int64_t) eax;\n    rsi += rax;\n    eax = *((rsp + 0x40));\n    *((rsp + 0x20)) = rsi;\n    if (eax <= 0x3b) {\n        r12d = eax;\n    }\n    eax = 0;\n    __asm (\"cmovns eax, r12d\");\n    *((rsp + 0x1c)) = eax;\n    r8d = eax;\n    rax = *((rsp + 0x30));\n    rax = *(rax);\n    *((rsp + 0x38)) = rax;\n    eax = *((rsp + 0x38));\n    eax = -eax;\n    *((rsp + 0x44)) = eax;\n    rax = fcn_0040cff0 (rdi, rsi, *((rsp + 0x38)), *((rsp + 0x2c)), r8d, r9);\n    r13 = rax;\n    *((rsp + 0x38)) = rax;\n    *((rsp + 0x50)) = rax;\n    eax = 0;\n    *((rsp + 0x48)) = r14;\n    r12d = eax;\n    r14 = r13;\n    while (r15 != r13) {\nlabel_0:\n        ebp--;\n        if (ebp == 0) {\n            goto label_8;\n        }\n        r8d = *((rsp + 0x80));\n        *((rsp + 0x50)) = rax;\n        r12d = 0;\n        r13 = r14;\n        r14 = r15;\n        r12b = (r8d != 0) ? 1 : 0;\n        rax = fcn_0040d1b0 (*((rsp + 0x10)), rsp + 0x50, rsp + 0x60);\n        r15 = *((rsp + 0x50));\n        rax = fcn_0040d110 (rbx, *((rsp + 0x30)), *((rsp + 0x28)), *((rsp + 0x1c)), *((rsp + 0x2c)), r15);\n        if (r15 == rax) {\n            goto label_9;\n        }\n    }\n    if (r15 == r14) {\n        goto label_0;\n    }\n    r10d = *((rsp + 0x80));\n    if (r10d < 0) {\n        goto label_2;\n    }\n    r9d = *((rsp + 0x28));\n    dl = (r10d != 0) ? 1 : 0;\n    if (r9d < 0) {\n        goto label_10;\n    }\n    cl = (r9d != 0) ? 1 : 0;\n    if (cl == dl) {\n        goto label_0;\n    }\nlabel_2:\n    r14 = *((rsp + 0x48));\n    rax = r15;\nlabel_3:\n    rdx = *((rsp + 0x44));\n    rcx = rax;\n    rdx += *((rsp + 0x38));\n    rcx -= rdx;\n    esi = *((rsp + 0x60));\n    edi = *((rsp + 0x40));\n    rdx = rcx;\n    rcx = *((rsp + 0x30));\n    *(rcx) = rdx;\n    if (esi != edi) {\n        r12 = *((rsp + 0x1c));\n        cl = (edi <= 0) ? 1 : 0;\n        edx = 0;\n        dl = (esi == 0x3c) ? 1 : 0;\n        rdx &= rcx;\n        rcx = rdx;\n        rdx = (int64_t) edi;\n        rcx -= r12;\n        rdx += rcx;\n        rax += rdx;\n        *((rsp + 0x50)) = rax;\n        if (rax overflow 0) {\n            goto label_8;\n        }\n        rsi = rsp + 0x60;\n        rdi = rsp + 0xa0;\n        rax = *((rsp + 0x10));\n        rax = void (*rax)(uint64_t) (rax);\n        if (rax == 0) {\n            goto label_8;\n        }\n        rax = *((rsp + 0x50));\n    }\n    __asm (\"movdqa xmm0, xmmword [rsp + 0x60]\");\n    __asm (\"movdqa xmm1, xmmword [rsp + 0x70]\");\n    __asm (\"movdqa xmm2, xmmword [rsp + 0x80]\");\n    rdx = *((rsp + 0x90));\n    __asm (\"movups xmmword [r14], xmm0\");\n    __asm (\"movups xmmword [r14 + 0x10], xmm1\");\n    __asm (\"movups xmmword [r14 + 0x20], xmm2\");\n    *((r14 + 0x30)) = rdx;\n    goto label_11;\nlabel_8:\n    rax = 0xffffffffffffffff;\nlabel_11:\n    return rax;\nlabel_7:\n    eax &= 3;\n    edx = 0;\n    dl = (rax == 1) ? 1 : 0;\n    goto label_1;\nlabel_10:\n    edx = (int32_t) dl;\n    if (edx < r12d) {\n        goto label_0;\n    }\n    goto label_2;\nlabel_9:\n    esi = *((rsp + 0x28));\n    edx = *((rsp + 0x80));\n    r14 = *((rsp + 0x48));\n    rsp + 0x28 = (esi == 0) ? 1 : 0;\n    ebp = *((rsp + 0x28));\n    cl = (edx == 0) ? 1 : 0;\n    if (bpl == cl) {\n        goto label_3;\n    }\n    if (esi < 0) {\n        goto label_3;\n    }\n    if (edx < 0) {\n        goto label_3;\n    }\n    r13d = 0x92c70;\n    *((rsp + 0x28)) = rbx;\n    goto label_12;\nlabel_4:\n    r13d += 0x92c70;\n    if (r13d == 0x100dc400) {\n        goto label_3;\n    }\nlabel_12:\n    r15d = r13d;\n    ebx = r13 + r13;\n    r12d = 2;\n    r15d = -r15d;\n    rdx = (int64_t) r15d;\n    rdx += rax;\n    *((rsp + 0x58)) = rdx;\n    if (rdx !overflow 0) {\n        goto label_13;\n    }\nlabel_5:\n    r15d += ebx;\n    if (r12d == 1) {\n        goto label_4;\n    }\n    rdx = (int64_t) r15d;\n    r12d = 1;\n    rdx += rax;\n    *((rsp + 0x58)) = rdx;\n    if (rdx overflow 0) {\n        goto label_5;\n    }\nlabel_13:\n    fcn_0040d1b0 (*((rsp + 0x10)), rsp + 0x58, rsp + 0xa0);\n    eax = *((rsp + 0xc0));\n    dl = (eax == 0) ? 1 : 0;\n    if (bpl != dl) {\n        if (eax >= 0) {\n            goto label_14;\n        }\n    }\n    rbx = *((rsp + 0x28));\n    rax = rsp + 0xa8;\n    rax = fcn_0040d110 (rbx, *((rsp + 0x30)), *((rsp + 0x28)), *((rsp + 0x1c)), *((rsp + 0x2c)), *((rsp + 0x68)));\n    *((rsp + 0x50)) = rax;\n    fcn_0040d1b0 (*((rsp + 0x10)), rsp + 0x50, rsp + 0x60);\n    rax = *((rsp + 0x50));\n    goto label_3;\nlabel_14:\n    rax = *((rsp + 0x50));\n    goto label_5;\n    rbx = rdi;\n    tzset ();\n    rdi = rbx;\n    edx = 0x617628;\n    esi = imp.localtime_r;\n    goto label_6;\n}\n"
        },
        {
            "funcName": "fcn_0040d6d0",
            "funcStartAddr": "0x40d6d0",
            "funcEndAddr": "0x40d729",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40d6d0 */\n#include <stdint.h>\n \nuint64_t fcn_0040d6d0 (int64_t arg1, uint32_t arg2, int64_t arg3) {\n    int64_t var_8h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rbx = rdi;\n    rax = fcn_0040d880 (0, rsp + 8, rsi, rdx);\n    if (rax == 0) {\n        goto label_1;\n    }\n    rdx = *((rsp + 8));\n    if (rdx > 0x7fffffff) {\n        goto label_2;\n    }\n    *(rbx) = rax;\n    eax = edx;\n    do {\nlabel_0:\n        return rax;\nlabel_2:\n        free (rax);\n        errno_location ();\n        *(rax) = 0x4b;\n        eax = 0xffffffff;\n    } while (1);\nlabel_1:\n    eax = 0xffffffff;\n    goto label_0;\n}\n"
        },
        {
            "funcName": "fcn_0040d730",
            "funcStartAddr": "0x40d730",
            "funcEndAddr": "0x40d875",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40d730 */\n#include <stdint.h>\n \nuint64_t fcn_0040d730 (int64_t arg_70h, int64_t arg1, int64_t arg4) {\n    int64_t var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    int64_t var_30h;\n    int64_t var_38h;\n    rdi = arg1;\n    rcx = arg4;\n    edx = 3;\n    esi = 0;\n    eax = 0;\n    while (1) {\nlabel_2:\n        rax = rsp + 0x70;\n        *((rsp + 0x30)) = rdx;\n        *((rsp + 0x10)) = rax;\n        rax = rsp + 0x20;\n        *((rsp + 0x38)) = rcx;\n        *((rsp + 8)) = 0x10;\n        *((rsp + 0x18)) = rax;\n        if (esi != 0x406) {\n            goto label_4;\n        }\n        r12d = *((rax + 0x10));\n        eax = imp.__libc_start_main;\n        *((rsp + 8)) = 0x18;\n        edx = r12d;\n        if (eax >= 0) {\n            eax = 0;\n            eax = fcntl ();\n            ebx = eax;\n            if (eax < 0) {\n                goto label_5;\n            }\nlabel_1:\n            *(0x00617630) = 1;\nlabel_0:\n            eax = ebx;\n            return rax;\n        }\n        eax = 0;\n        eax = void (*0x40d740)(uint64_t, uint64_t, uint64_t) (rdi, 0, rdx);\n    }\n    ebx = eax;\n    if (eax < 0) {\n        goto label_0;\n    }\n    if (*(0x00617630) != 0xffffffff) {\n        goto label_0;\n    }\nlabel_3:\n    eax = 0;\n    esi = 1;\n    edi = ebx;\n    eax = fcntl ();\n    if (eax < 0) {\n        goto label_6;\n    }\n    eax |= 1;\n    esi = 2;\n    edi = ebx;\n    edx = eax;\n    eax = 0;\n    eax = fcntl ();\n    if (eax != 0xffffffff) {\n        goto label_0;\n    }\nlabel_6:\n    rax = errno_location ();\n    ebx = 0xffffffff;\n    r12d = *(rax);\n    close (ebx);\n    *(rbp) = r12d;\n    goto label_0;\nlabel_4:\n    rax = *((rsp + 0x18));\n    rdx = *((rax + 0x10));\n    eax = 0;\n    eax = fcntl ();\n    ebx = eax;\n    return rax;\nlabel_5:\n    rax = errno_location ();\n    if (*(rax) != 0x16) {\n        goto label_1;\n    }\n    eax = 0;\n    eax = void (*0x40d740)(uint64_t, uint64_t, uint64_t) (ebp, 0, r12d);\n    goto label_2;\n    ebx = eax;\n    if (eax < 0) {\n        goto label_0;\n    }\n    *(0x00617630) = 0xffffffff;\n    goto label_3;\n}\n"
        },
        {
            "funcName": "fcn_0040d880",
            "funcStartAddr": "0x40d880",
            "funcEndAddr": "0x41a89b",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40d880 */\n#include <stdint.h>\n \nuint64_t fcn_0040d880 (uint32_t arg1, int64_t arg2, int64_t arg3, int64_t arg4) {\n    int64_t var_6ech;\n    char ** var_6e8h;\n    char ** var_6e0h;\n    int64_t var_6d8h;\n    int64_t var_6d0h;\n    char ** var_6c8h;\n    void * var_6c0h;\n    uint32_t var_6b8h;\n    char ** var_6b0h;\n    void * var_6a8h;\n    char ** var_6a0h;\n    uint32_t var_690h;\n    uint32_t var_688h;\n    int64_t var_67ch;\n    int64_t var_678h;\n    int64_t var_674h;\n    int64_t var_670h;\n    int64_t var_668h;\n    uint32_t var_580h;\n    int64_t var_578h;\n    int64_t var_570h;\n    int64_t var_568h;\n    int64_t var_2f0h;\n    int64_t var_28h;\n    int64_t var_fh;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = arg4;\nlabel_1:\n    abort ();\n    r15 = rdx;\n    rbx = rcx;\n    *((rbp - 0x688)) = rdi;\n    *((rbp - 0x6d0)) = rsi;\n    eax = fcn_0040f5c0 (r15, rbp - 0x580, rbp - 0x670);\n    if (eax < 0) {\n        goto label_58;\n    }\n    eax = fcn_0040f3a0 (rbx, rbp - 0x670);\n    if (eax < 0) {\n        goto label_59;\n    }\n    rax = *((rbp - 0x570));\n    rdx = 0xffffffffffffffff;\n    rax += 7;\n    if (rax <= 6) {\n        rax = rdx;\n    }\n    rax += *((rbp - 0x568));\n    if (rax < 0) {\n        goto label_60;\n    }\n    rdi = rax;\n    rdi += 6;\n    if (rdi < 0) {\n        goto label_60;\n    }\n    if (rdi <= 0xf9f) {\n        goto label_61;\n    }\n    if (rdi == -1) {\n        goto label_60;\n    }\n    rax = malloc (rdi);\n    *((rbp - 0x6a8)) = rax;\n    if (rax == 0) {\n        goto label_60;\n    }\n    *((rbp - 0x6d8)) = rax;\n    do {\n        r12d = 0;\n        if (*((rbp - 0x688)) != 0) {\n            rax = *((rbp - 0x6d0));\n            r12 = *(rax);\n        }\n        r14 = *((rbp - 0x578));\n        r13d = 0;\n        r8 = r15;\n        rbx = *((rbp - 0x688));\n        *((rbp - 0x6b8)) = 0;\n        r15 = r13;\n        rcx = *(r14);\n        if (rcx == r8) {\n            goto label_62;\n        }\nlabel_2:\n        rcx -= r8;\n        rax = r15;\n        rax += rcx;\n        r13 = rax;\n        if (rax < 0) {\n            goto label_63;\n        }\n        if (r12 >= rax) {\n            goto label_6;\n        }\n        if (r12 != 0) {\n            goto label_64;\n        }\n        if (rax > 0xc) {\n            goto label_65;\n        }\n        r12d = 0xc;\n        dl = (rbx == *((rbp - 0x688))) ? 1 : 0;\n        if (rbx != 0) {\n            goto label_66;\n        }\nlabel_0:\n        *((rbp - 0x6b0)) = r8;\n        *((rbp - 0x6a0)) = dl;\n        *((rbp - 0x690)) = rcx;\n        rax = malloc (r12);\n        rcx = *((rbp - 0x690));\n        edx = *((rbp - 0x6a0));\n        r9 = rax;\n        r8 = *((rbp - 0x6b0));\n        if (rax == 0) {\n            goto label_5;\n        }\n        if (r15 == 0) {\n            goto label_67;\n        }\n        if (dl == 0) {\n            goto label_67;\n        }\n        *((rbp - 0x6a0)) = r8;\n        *((rbp - 0x690)) = rcx;\n        rax = memcpy (rax, rbx, r15);\n        rcx = *((rbp - 0x690));\n        r8 = *((rbp - 0x6a0));\n        rbx = rax;\n        goto label_6;\nlabel_61:\n        *((rbp - 0x6d8)) = 0;\n        rax += 0x1d;\n        rax &= 0xfffffffffffffff0;\n        rax = rsp + 0xf;\n        rax &= 0xfffffffffffffff0;\n        *((rbp - 0x6a8)) = rax;\n    } while (1);\n    if (rax < 0) {\nlabel_64:\n        goto label_5;\n    }\n    r12 += r12;\n    if (r12 < rax) {\nlabel_65:\n        if (rax == -1) {\n            goto label_5;\n        }\n        r12 = rax;\n    }\n    dl = (rbx == *((rbp - 0x688))) ? 1 : 0;\n    if (rbx == 0) {\n        goto label_0;\n    }\nlabel_66:\n    if (dl != 0) {\n        goto label_0;\n    }\n    *((rbp - 0x6a0)) = r8;\n    *((rbp - 0x690)) = rcx;\n    rax = realloc (rbx, r12);\n    if (rax == 0) {\n        goto label_37;\n    }\n    rcx = *((rbp - 0x690));\n    r8 = *((rbp - 0x6a0));\n    rbx = rax;\nlabel_6:\n    memcpy (rbx + r15, r8, rcx);\nlabel_3:\n    rax = *((rbp - 0x6b8));\n    if (*((rbp - 0x580)) == rax) {\n        goto label_68;\n    }\n    r15d = *((r14 + 0x48));\n    rax = *((r14 + 0x50));\n    if (r15b == 0x25) {\n        goto label_69;\n    }\n    if (rax == -1) {\n        goto label_34;\n    }\n    r8 = *((rbp - 0x668));\n    rax <<= 5;\n    rdx = r8 + rax;\n    eax = *(rdx);\n    *((rbp - 0x690)) = eax;\n    if (r15b == 0x6e) {\n        goto label_70;\n    }\n    eax = r15d;\n    eax &= 0xffffffdf;\n    ecx = rax - 0x45;\n    if (cl > 2) {\n        if (al != 0x41) {\n            goto label_71;\n        }\n    }\n    if (*((rbp - 0x690)) == 0xc) {\n        goto label_72;\n    }\n    goto label_71;\nlabel_8:\n    fp_stack++;\n    goto label_71;\nlabel_9:\n    fp_stack++;\nlabel_71:\n    rsi = *((rbp - 0x6a8));\n    eax = *((r14 + 0x10));\n    r15 = rsi + 1;\n    *(rsi) = 0x25;\n    if ((al & 1) != 0) {\n        rdi = *((rbp - 0x6a8));\n        *((rdi + 1)) = 0x27;\n        r15 = rdi + 2;\n    }\n    if ((al & 2) != 0) {\n        *(r15) = 0x2d;\n        r15++;\n    }\n    if ((al & 4) != 0) {\n        *(r15) = 0x2b;\n        r15++;\n    }\n    if ((al & 8) != 0) {\n        *(r15) = 0x20;\n        r15++;\n    }\n    if ((al & 0x10) != 0) {\n        *(r15) = 0x23;\n        r15++;\n    }\n    if ((al & 0x40) != 0) {\n        *(r15) = 0x49;\n        r15++;\n    }\n    if ((al & 0x20) != 0) {\n        *(r15) = 0x30;\n        r15++;\n    }\n    rsi = *((r14 + 0x18));\n    rdx = *((r14 + 0x20));\n    if (rsi != rdx) {\n        rcx = rdx;\n        *((rbp - 0x6b0)) = r8;\n        rcx -= rsi;\n        rdx = rcx;\n        *((rbp - 0x6a0)) = rcx;\n        memcpy (r15, rsi, rdx);\n        rcx = *((rbp - 0x6a0));\n        r8 = *((rbp - 0x6b0));\n        r15 += rcx;\n    }\n    rsi = *((r14 + 0x30));\n    rdx = *((r14 + 0x38));\n    if (rsi != rdx) {\n        rcx = rdx;\n        *((rbp - 0x6b0)) = r8;\n        rcx -= rsi;\n        rdx = rcx;\n        *((rbp - 0x6a0)) = rcx;\n        memcpy (r15, rsi, rdx);\n        rcx = *((rbp - 0x6a0));\n        r8 = *((rbp - 0x6b0));\n        r15 += rcx;\n    }\n    esi = *((rbp - 0x690));\n    if (esi <= 0x10) {\n        eax = 1;\n        ecx = esi;\n        rax <<= cl;\n        if ((eax & 0x14180) != 0) {\n            goto label_73;\n        }\n        if ((ah & 0x10) != 0) {\n            goto label_74;\n        }\n        if ((ah & 6) != 0) {\n            goto label_75;\n        }\n    }\nlabel_12:\n    eax = *((r14 + 0x48));\n    *((r15 + 1)) = 0;\n    *(r15) = al;\n    rax = *((r14 + 0x28));\n    if (rax == -1) {\n        goto label_76;\n    }\n    rax <<= 5;\n    rax += r8;\n    if (*(rax) != 5) {\n        goto label_34;\n    }\n    *((rbp - 0x6b0)) = 1;\n    eax = *((rax + 0x10));\n    *((rbp - 0x678)) = eax;\nlabel_28:\n    rax = *((r14 + 0x40));\n    if (rax != -1) {\n        rax <<= 5;\n        r8 += rax;\n        if (*(r8) != 5) {\n            goto label_34;\n        }\n        eax = *((rbp - 0x6b0));\n        edx = *((r8 + 0x10));\n        *((rbp + rax*4 - 0x678)) = edx;\n        eax = rax + 1;\n        *((rbp - 0x6b0)) = eax;\n    }\n    rax = r13;\n    rax += 2;\n    if (rax < 0) {\n        goto label_77;\n    }\n    if (r12 >= rax) {\n        goto label_78;\n    }\n    if (r12 != 0) {\n        goto label_79;\n    }\n    if (rax > 0xc) {\n        goto label_80;\n    }\n    r12d = 0xc;\nlabel_20:\n    dl = (rbx == *((rbp - 0x688))) ? 1 : 0;\n    if (rbx == 0) {\n        goto label_81;\n    }\n    if (dl != 0) {\n        goto label_81;\n    }\n    rax = realloc (rbx, r12);\n    r11 = rax;\n    if (rax == 0) {\n        goto label_5;\n    }\nlabel_30:\n    *((r11 + r13)) = 0;\n    *((rbp - 0x6c0)) = r11;\n    rax = errno_location ();\n    r11 = *((rbp - 0x6c0));\n    *((rbp - 0x6c0)) = r15;\n    *((rbp - 0x6a0)) = rax;\n    eax = *(rax);\n    *((rbp - 0x6e0)) = eax;\nlabel_14:\n    rax = *((rbp - 0x6a0));\n    r15 = r12;\n    ebx = 0x7fffffff;\n    *((rbp - 0x67c)) = 0xffffffff;\n    r15 -= r13;\n    *(rax) = 0;\n    eax = *((rbp - 0x690));\n    if (r15 <= 0x7fffffff) {\n        rbx = r15;\n    }\n    if (eax > 0x11) {\n        goto label_1;\n    }\n    /* switch table (18 cases) at 0x413938 */\nlabel_43:\n    if (rdi != rdx) {\n        goto label_82;\n    }\nlabel_42:\n    r10 = rcx;\nlabel_10:\n    rdx = *((r14 + 0x30));\n    rcx = *((r14 + 0x38));\n    if (rdx == rcx) {\n        goto label_83;\n    }\n    rsi = *((r14 + 0x40));\n    if (rsi == -1) {\n        goto label_84;\n    }\n    rsi <<= 5;\n    r8 += rsi;\n    if (*(r8) != 5) {\n        goto label_85;\n    }\n    rdx = *((r8 + 0x10));\n    if (edx < 0) {\n        goto label_83;\n    }\nlabel_44:\n    if (rdx == 0) {\n        goto label_86;\n    }\n    rax = rdx;\n    rax += 0xc;\n    rcx = rax;\n    if (rax >= 0) {\n        goto label_51;\n    }\n    fp_stack++;\n    goto label_5;\nlabel_21:\n    fp_stack++;\n    goto label_5;\nlabel_22:\n    fp_stack++;\n    goto label_5;\nlabel_46:\n    fp_stack++;\n    goto label_5;\nlabel_47:\n    fp_stack++;\nlabel_5:\n    rax = errno_location ();\n    r15 = rbx;\n    *((rbp - 0x6a0)) = rax;\nlabel_23:\n    if (r15 != *((rbp - 0x688))) {\n        if (r15 != 0) {\n            goto label_87;\n        }\n    }\nlabel_13:\n    rax = *((rbp - 0x6d8));\n    if (rax == 0) {\n        goto label_60;\n    }\n    free (rax);\nlabel_4:\n    rax = rbp - 0x580;\n    rdi = *((rbp - 0x578));\n    rax += 0x20;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = rbp - 0x670;\n    rdi = *((rbp - 0x668));\n    rax += 0x10;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = *((rbp - 0x6a0));\n    ebx = 0;\n    *(rax) = 0xc;\nlabel_7:\n    rsp = rbp - 0x28;\n    rax = rbx;\n    return rax;\nlabel_69:\n    if (rax != -1) {\n        goto label_34;\n    }\n    rax = r13;\n    rax++;\n    r15 = rax;\n    if (rax < 0) {\n        goto label_88;\n    }\n    if (r12 < rax) {\n        if (r12 != 0) {\n            goto label_89;\n        }\n        if (rax > 0xc) {\n            goto label_90;\n        }\n        r12d = 0xc;\nlabel_31:\n        dl = (rbx == *((rbp - 0x688))) ? 1 : 0;\n        if (rbx == 0) {\n            goto label_91;\n        }\n        if (dl != 0) {\n            goto label_91;\n        }\n        rax = realloc (rbx, r12);\n        if (rax == 0) {\n            goto label_37;\n        }\n        rbx = rax;\n    }\nlabel_29:\n    *((rbx + r13)) = 0x25;\nlabel_11:\n    r8 = *((r14 + 8));\n    r14 += 0x58;\n    rcx = *(r14);\n    *((rbp - 0x6b8))++;\n    if (rcx != r8) {\n        goto label_2;\n    }\nlabel_62:\n    r13 = r15;\n    goto label_3;\nlabel_60:\n    rax = errno_location ();\n    *((rbp - 0x6a0)) = rax;\n    goto label_4;\nlabel_63:\n    if (r12 != -1) {\n        goto label_5;\n    }\n    r13 = 0xffffffffffffffff;\n    goto label_6;\nlabel_70:\n    eax -= 0x12;\n    if (eax > 4) {\n        goto label_1;\n    }\n    /* switch table (5 cases) at 0x4139c8 */\nlabel_58:\n    ebx = 0;\n    goto label_7;\nlabel_72:\n    *(fp_stack--) = fp_stack[?];\n    if (fp_stack[0] == fp_stack[0]) {\n        goto label_92;\n    }\n    *(fp_stack--) = fp_stack[0];\n    fp_stack[0] += fp_stack[1];\n    fp_tmp_0 = fp_stack[1];\n    fp_stack[1] = fp_stack[0];\n    fp_stack[0] = fp_tmp_0;\n    fp_stack[1] = fp_stack[0];\n    fp_stack--;\n    if (fp_stack[0] == fp_stack[1]) {\n        goto label_8;\n    }\n    if (fp_stack[0] != fp_stack[1]) {\n        goto label_9;\n    }\nlabel_92:\n    rdx = *((r14 + 0x18));\n    rdi = *((r14 + 0x20));\n    r11d = *((r14 + 0x10));\n    if (rdx == rdi) {\n        goto label_93;\n    }\n    rcx = *((r14 + 0x28));\n    if (rcx == -1) {\n        goto label_94;\n    }\n    rcx <<= 5;\n    rcx += r8;\n    if (*(rcx) != 5) {\n        goto label_95;\n    }\n    r10 = *((rcx + 0x10));\n    if (r10d >= 0) {\n        goto label_10;\n    }\n    r11d |= 2;\n    r10 = -r10;\n    goto label_10;\n    rax = *((rdx + 0x10));\n    r15 = r13;\n    *(rax) = r13;\n    goto label_11;\nlabel_75:\n    *(r15) = 0x6c;\n    r15++;\nlabel_73:\n    *(r15) = 0x6c;\n    r15++;\n    goto label_12;\nlabel_37:\n    rax = errno_location ();\n    r15 = rbx;\n    *((rbp - 0x6a0)) = rax;\nlabel_87:\n    free (r15);\n    goto label_13;\n    rax = *((r14 + 0x50));\n    rdi = r11 + r13;\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    r9 = *((rax + 0x10));\n    eax = *((rbp - 0x6b0));\n    *((rbp - 0x6c8)) = r11;\n    if (eax == 1) {\n        goto label_96;\n    }\n    if (eax == 2) {\n        goto label_97;\n    }\n    rax = rbp - 0x67c;\nlabel_17:\n    r8 = *((rbp - 0x6a8));\n    rsi = rbx;\n    edx = 1;\n    eax = 0;\n    rcx = 0xffffffffffffffff;\n    eax = snprintf_chk ();\n    r11 = *((rbp - 0x6c8));\nlabel_19:\n    edx = *((rbp - 0x67c));\n    if (edx < 0) {\n        goto label_98;\n    }\nlabel_15:\n    rcx = (int64_t) edx;\n    if (rcx < rbx) {\n        rcx += r11;\n        if (*((rcx + r13)) != 0) {\n            goto label_34;\n        }\n    }\n    if (edx < eax) {\nlabel_16:\n        *((rbp - 0x67c)) = eax;\n        edx = eax;\n    }\n    eax = rdx + 1;\n    if (rax < rbx) {\n        goto label_99;\n    }\n    if (r15 > 0x7ffffffe) {\n        goto label_100;\n    }\n    eax = rdx + 2;\n    ecx = 0;\n    rax += r13;\n    cl = (rax < 0) ? 1 : 0;\n    if (r12 < 0) {\n        goto label_101;\n    }\n    rdx = r12 + r12;\n    if (rcx != 0) {\n        goto label_24;\n    }\n    if (rdx >= rax) {\n        rax = rdx;\n    }\n    if (r12 >= rax) {\n        goto label_14;\n    }\n    r12 += r12;\n    if (r12 < rax) {\n        goto label_102;\n    }\nlabel_25:\n    bl = (r11 == *((rbp - 0x688))) ? 1 : 0;\n    if (r11 == 0) {\n        goto label_103;\n    }\n    if (bl != 0) {\n        goto label_103;\n    }\n    rdi = r11;\n    *((rbp - 0x6c8)) = r11;\n    rax = realloc (rdi, r12);\n    r11 = *((rbp - 0x6c8));\n    if (rax == 0) {\n        goto label_24;\n    }\n    r11 = rax;\n    goto label_14;\n    rax = *((r14 + 0x50));\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    r9d = *((rax + 0x10));\nlabel_18:\n    eax = *((rbp - 0x6b0));\n    rdi = r11 + r13;\n    *((rbp - 0x6c8)) = r11;\n    if (eax == 1) {\n        goto label_104;\n    }\n    if (eax == 2) {\n        goto label_105;\n    }\n    rax = rbp - 0x67c;\nlabel_26:\n    r8 = *((rbp - 0x6a8));\n    rcx = 0xffffffffffffffff;\n    rsi = rbx;\n    eax = 0;\n    edx = 1;\n    eax = snprintf_chk ();\n    edx = *((rbp - 0x67c));\n    r11 = *((rbp - 0x6c8));\n    if (edx >= 0) {\n        goto label_15;\n    }\nlabel_98:\n    rsi = *((rbp - 0x6c0));\n    if (*((rsi + 1)) != 0) {\n        goto label_106;\n    }\n    if (eax >= 0) {\n        goto label_16;\n    }\n    rax = *((rbp - 0x6a0));\n    r15 = r11;\n    ebx = *(rax);\n    if (ebx == 0) {\n        eax = *((r14 + 0x48));\n        ebx = 0x54;\n        eax &= 0xffffffef;\n        eax = 0x16;\n        if (al == 0x63) {\n            ebx = eax;\n            goto label_107;\n        }\n    }\nlabel_107:\n    if (r15 != *((rbp - 0x688))) {\n        if (r15 == 0) {\n            goto label_108;\n        }\n        free (r15);\n    }\nlabel_108:\n    rax = *((rbp - 0x6d8));\n    if (rax != 0) {\n        free (rax);\n    }\n    rax = rbp - 0x580;\n    rdi = *((rbp - 0x578));\n    rax += 0x20;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = rbp - 0x670;\n    rdi = *((rbp - 0x668));\n    rax += 0x10;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = *((rbp - 0x6a0));\n    *(rax) = ebx;\n    ebx = 0;\n    goto label_7;\n    rax = *((r14 + 0x50));\n    rdi = r11 + r13;\n    *((rbp - 0x6c8)) = r11;\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    *(fp_stack--) = fp_stack[?];\n    eax = *((rbp - 0x6b0));\n    if (eax == 1) {\n        goto label_109;\n    }\n    if (eax == 2) {\n        goto label_110;\n    }\n    r9 = rbp - 0x67c;\n    ? = fp_stack[0];\n    fp_stack--;\n    goto label_17;\n    rax = *((r14 + 0x50));\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    r9d = *((rax + 0x10));\n    goto label_18;\n    rax = *((r14 + 0x50));\n    rdi = r11 + r13;\n    *((rbp - 0x6c8)) = r11;\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    xmm0 = *((rax + 0x10));\n    eax = *((rbp - 0x6b0));\n    if (eax == 1) {\n        goto label_111;\n    }\n    if (eax == 2) {\n        goto label_112;\n    }\n    r8 = *((rbp - 0x6a8));\n    r9 = rbp - 0x67c;\n    edx = 1;\n    rsi = rbx;\n    rcx = 0xffffffffffffffff;\n    eax = 1;\n    snprintf_chk ();\n    r11 = *((rbp - 0x6c8));\n    goto label_19;\n    rax = *((r14 + 0x50));\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    r9d = *((rax + 0x10));\n    goto label_18;\n    rax = *((r14 + 0x50));\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    r9d = *((rax + 0x10));\n    goto label_18;\n    rax = *((r14 + 0x50));\n    rax <<= 5;\n    rax += *((rbp - 0x668));\n    r9d = *((rax + 0x10));\n    goto label_18;\n    if (rax < 0) {\nlabel_79:\n        goto label_5;\n    }\n    r12 += r12;\n    if (r12 >= rax) {\n        goto label_20;\n    }\nlabel_80:\n    if (rax == -1) {\n        goto label_5;\n    }\n    r12 = rax;\n    goto label_20;\n    rax = *((rdx + 0x10));\n    r15 = r13;\n    *(rax) = r13d;\n    goto label_11;\n    rax = *((rdx + 0x10));\n    r15 = r13;\n    *(rax) = r13w;\n    goto label_11;\n    rax = *((rdx + 0x10));\n    r15 = r13;\n    *(rax) = r13b;\n    goto label_11;\nlabel_83:\n    edx = 0x12;\n    ecx = 0xc;\n    eax = 6;\n    if (al != 0x41) {\n        rcx = rdx;\n    }\n    edx = 0;\n    if (al != 0x41) {\n        rdx = rax;\n    }\nlabel_51:\n    rax = rcx;\n    if (r10 >= rcx) {\n        rax = r10;\n    }\n    rax++;\n    *((rbp - 0x690)) = rax;\n    if (rax < 0) {\n        goto label_21;\n    }\n    if (rax <= 0x2bc) {\n        goto label_113;\n    }\n    *((rbp - 0x6c8)) = r10;\n    *((rbp - 0x6c0)) = rdx;\n    *((rbp - 0x6b0)) = r11d;\n    ? = fp_stack[0];\n    fp_stack--;\n    if (rax == -1) {\n        goto label_5;\n    }\n    rax = malloc (rax);\n    r11d = *((rbp - 0x6b0));\n    *(fp_stack--) = fp_stack[?];\n    rcx = rax;\n    rdx = *((rbp - 0x6c0));\n    r10 = *((rbp - 0x6c8));\n    if (rax == 0) {\n        goto label_22;\n    }\nlabel_33:\n    if (fp_stack[0] == fp_stack[0]) {\n        goto label_114;\n    }\n    r8d = *((rbp - 0x678));\n    eax = r8d;\n    ah |= 3;\n    *((rbp - 0x678)) = ax;\n    __asm (\"fxam\");\n    ax = fp_status;\n    if ((ah & 2) == 0) {\n        goto label_115;\n    }\n    *(rcx) = 0x2d;\n    fp_stack[0] = -fp_stack[0];\n    r15 = rcx + 1;\nlabel_35:\n    *(fp_stack--) = 0.0;\n    fp_tmp_1 = fp_stack[1];\n    fp_stack[1] = fp_stack[0];\n    fp_stack[0] = fp_tmp_1;\n    if (fp_stack[0] <= fp_stack[1]) {\n        goto label_116;\n    }\n    fp_stack[1] = fp_stack[0];\n    fp_stack--;\n    *(fp_stack--) = fp_stack[0];\n    fp_stack[0] += fp_stack[1];\n    __asm (\"fucompi st(1)\");\n    fp_stack++;\n    if (fp_stack[0] != fp_stack[1]) {\n        goto label_117;\n    }\n    goto label_34;\nlabel_85:\n    fp_stack++;\n    goto label_34;\nlabel_95:\n    fp_stack++;\nlabel_34:\n    abort ();\nlabel_101:\n    if (r12 == -1) {\n        goto label_14;\n    }\n    do {\nlabel_24:\n        r15 = r11;\n        goto label_23;\nlabel_103:\n        *((rbp - 0x6c8)) = r11;\n        rax = malloc (r12);\n        r11 = *((rbp - 0x6c8));\n        rcx = rax;\n    } while (rax == 0);\n    if (r13 == 0) {\n        goto label_118;\n    }\n    if (bl == 0) {\n        goto label_118;\n    }\n    rax = memcpy (rax, r11, r13);\n    r11 = rax;\n    goto label_14;\nlabel_102:\n    if (rax == -1) {\n        goto label_24;\n    }\n    r12 = rax;\n    goto label_25;\nlabel_105:\n    rax = rbp - 0x67c;\n    do {\n        eax = *((rbp - 0x674));\nlabel_32:\n        r9d = *((rbp - 0x678));\n        edx = 1;\n        rsi = rbx;\n        eax = 0;\n        r8 = *((rbp - 0x6a8));\n        rcx = 0xffffffffffffffff;\n        snprintf_chk ();\n        r11 = *((rbp - 0x6c8));\n        goto label_19;\nlabel_104:\n        rax = rbp - 0x67c;\nlabel_27:\n        r9d = *((rbp - 0x678));\n        goto label_26;\nlabel_97:\n        rax = rbp - 0x67c;\n    } while (1);\nlabel_96:\n    rax = rbp - 0x67c;\n    goto label_27;\nlabel_106:\n    *((rsi + 1)) = 0;\n    goto label_14;\nlabel_118:\n    r11 = rcx;\n    goto label_14;\nlabel_76:\n    *((rbp - 0x6b0)) = 0;\n    goto label_28;\nlabel_88:\n    if (r12 != -1) {\n        goto label_5;\n    }\n    r15 = 0xffffffffffffffff;\n    goto label_29;\nlabel_81:\n    *((rbp - 0x6a0)) = dl;\n    rax = malloc (r12);\n    edx = *((rbp - 0x6a0));\n    r11 = rax;\n    if (rax == 0) {\n        goto label_5;\n    }\n    if (r13 == 0) {\n        goto label_30;\n    }\n    if (dl == 0) {\n        goto label_30;\n    }\n    rax = memcpy (rax, rbx, r13);\n    r11 = rax;\n    goto label_30;\nlabel_77:\n    if (r12 != -1) {\n        goto label_5;\n    }\nlabel_78:\n    r11 = rbx;\n    goto label_30;\nlabel_91:\n    *((rbp - 0x690)) = dl;\n    rax = malloc (r12);\n    edx = *((rbp - 0x690));\n    rcx = rax;\n    if (rax == 0) {\n        goto label_5;\n    }\n    if (r13 == 0) {\n        goto label_119;\n    }\n    if (dl == 0) {\n        goto label_119;\n    }\n    rax = memcpy (rax, rbx, r13);\n    rbx = rax;\n    goto label_29;\nlabel_67:\n    rbx = r9;\n    goto label_6;\nlabel_59:\n    rax = rbp - 0x580;\n    rdi = *((rbp - 0x578));\n    rax += 0x20;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = rbp - 0x670;\n    rdi = *((rbp - 0x668));\n    rax += 0x10;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    errno_location ();\n    ebx = 0;\n    *(rax) = 0x16;\n    goto label_7;\n    if (rdi < rax) {\nlabel_89:\n        goto label_5;\n    }\n    r12 += r12;\n    if (r12 >= rax) {\n        goto label_31;\n    }\nlabel_90:\n    if (rax == -1) {\n        goto label_5;\n    }\n    r12 = rax;\n    goto label_31;\nlabel_74:\n    *(r15) = 0x4c;\n    r15++;\n    goto label_12;\nlabel_112:\n    rax = rbp - 0x67c;\n    eax = *((rbp - 0x674));\n    do {\n        r9d = *((rbp - 0x678));\n        r8 = *((rbp - 0x6a8));\n        edx = 1;\n        rsi = rbx;\n        rcx = 0xffffffffffffffff;\n        eax = 1;\n        snprintf_chk ();\n        r11 = *((rbp - 0x6c8));\n        goto label_19;\nlabel_111:\n        rax = rbp - 0x67c;\n    } while (1);\nlabel_110:\n    rax = rbp - 0x67c;\n    r9d = *((rbp - 0x678));\n    r8 = *((rbp - 0x6a8));\n    eax = *((rbp - 0x674));\n    edx = 1;\n    rsi = rbx;\n    rcx = 0xffffffffffffffff;\n    ? = fp_stack[0];\n    fp_stack--;\n    eax = 0;\n    snprintf_chk ();\n    r11 = *((rbp - 0x6c8));\n    goto label_19;\nlabel_109:\n    rax = rbp - 0x67c;\n    ? = fp_stack[0];\n    fp_stack--;\n    goto label_32;\nlabel_99:\n    rax = *((rbp - 0x6a0));\n    esi = *((rbp - 0x6e0));\n    r15 = (int64_t) edx;\n    rbx = r11;\n    r15 += r13;\n    *(rax) = esi;\n    goto label_11;\nlabel_100:\n    if (r11 != *((rbp - 0x688))) {\n        if (r11 == 0) {\n            goto label_120;\n        }\n        free (r11);\n    }\nlabel_120:\n    rax = *((rbp - 0x6d8));\n    if (rax != 0) {\n        free (rax);\n    }\n    rax = rbp - 0x580;\n    rdi = *((rbp - 0x578));\n    rax += 0x20;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = rbp - 0x670;\n    rdi = *((rbp - 0x668));\n    rax += 0x10;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = *((rbp - 0x6a0));\n    ebx = 0;\n    *(rax) = 0x4b;\n    goto label_7;\nlabel_113:\n    rcx = rbp - 0x2f0;\n    goto label_33;\nlabel_116:\n    __asm (\"fucompi st(1)\");\n    fp_stack++;\n    if (rdi == rax) {\n        goto label_34;\n    }\n    if (rdi != rax) {\n        goto label_34;\n    }\n    eax = *((r14 + 0x48));\n    eax &= 0xffffffdf;\n    if (al != 0x46) {\n        goto label_121;\n    }\n    *(r15) = 0x30;\n    if ((r11b & 0x10) != 0) {\n        goto label_122;\n    }\n    if (rdx != 0) {\n        goto label_122;\n    }\nlabel_40:\n    r9 = r15 + 1;\nlabel_36:\n    *((rbp - 0x678)) = r8w;\nlabel_50:\n    r8 = r9;\n    r8 -= rcx;\n    if (r10 <= r8) {\n        goto label_39;\n    }\n    r10 -= r8;\n    rdi = r9 + r10;\n    r8 = rdi;\n    r8 -= rcx;\n    if ((r11b & 2) != 0) {\n        goto label_123;\n    }\n    r11d &= 0x20;\n    if (r11d == 0) {\n        goto label_124;\n    }\n    if (r15 == 0) {\n        goto label_124;\n    }\n    if (r15 >= r9) {\n        goto label_125;\n    }\n    rdx = r15 - 1;\n    rax = 0xffffffffffffffff;\n    rdx -= r9;\n    do {\n        esi = *((r9 + rax));\n        *((rdi + rax)) = sil;\n        rax--;\n    } while (rax != rdx);\nlabel_56:\n    if (r10 == 0) {\n        goto label_39;\n    }\n    r10 += r15;\n    do {\n        r15++;\n        *((r15 - 1)) = 0x30;\n    } while (r15 != r10);\nlabel_39:\n    if (*((rbp - 0x690)) <= r8) {\n        goto label_34;\n    }\n    rdx = r12;\n    rax = r13;\n    esi = 0;\n    rdx -= r13;\n    rax += r8;\n    sil = (rax < 0) ? 1 : 0;\n    r15 = rax;\n    if (rdx > r8) {\n        goto label_38;\n    }\n    if (rsi != 0) {\n        goto label_126;\n    }\n    if (r12 >= rax) {\n        goto label_38;\n    }\n    if (r12 != 0) {\n        goto label_127;\n    }\n    if (rax > 0xc) {\n        goto label_128;\n    }\n    r12d = 0xc;\nlabel_49:\n    dl = (rbx == *((rbp - 0x688))) ? 1 : 0;\n    if (rbx == 0) {\n        goto label_129;\n    }\n    if (dl != 0) {\n        goto label_129;\n    }\n    *((rbp - 0x6a0)) = r8;\n    *((rbp - 0x690)) = rcx;\n    rax = realloc (rbx, r12);\n    if (rax == 0) {\n        goto label_5;\n    }\n    rcx = *((rbp - 0x690));\n    r8 = *((rbp - 0x6a0));\n    rbx = rax;\nlabel_38:\n    rsi = rcx;\n    *((rbp - 0x690)) = rcx;\n    memcpy (rbx + r13, rsi, r8);\n    rcx = *((rbp - 0x690));\n    rax = rbp - 0x2f0;\n    if (rcx == rax) {\n        goto label_11;\n    }\n    al = free (rcx);\n    goto label_11;\nlabel_115:\n    if ((r11b & 4) == 0) {\n        goto label_130;\n    }\n    r15 = rcx + 1;\n    *(rcx) = 0x2b;\n    goto label_35;\nlabel_119:\n    rbx = rcx;\n    goto label_29;\nlabel_121:\n    if (al != 0x45) {\n        goto label_131;\n    }\n    *(r15) = 0x30;\n    if ((r11b & 0x10) != 0) {\n        goto label_132;\n    }\n    rsi = r15 + 1;\n    al = (rdx != 0) ? 1 : 0;\n    if (al != 0) {\n        goto label_132;\n    }\nlabel_52:\n    eax = *((r14 + 0x48));\n    r9 = rsi + 4;\n    *((rsi + 3)) = 0x30;\n    *(rsi) = al;\n    eax = 0x302b;\n    *((rsi + 1)) = ax;\n    goto label_36;\nlabel_93:\n    r10d = 0;\n    goto label_10;\n    if (al != 0) {\nlabel_117:\n        goto label_34;\n    }\n    eax = *((r14 + 0x48));\n    r9 = r15 + 3;\n    eax -= 0x41;\n    if (al > 0x19) {\n        goto label_133;\n    }\n    eax = 0x4e49;\n    *((r15 + 2)) = 0x46;\n    *(r15) = ax;\n    r15d = 0;\n    goto label_36;\nlabel_68:\n    r14 = r13;\n    r15 = r13;\n    r14++;\n    if (r14 < 0) {\n        goto label_134;\n    }\n    if (r12 >= r14) {\n        goto label_53;\n    }\n    if (r12 != 0) {\n        goto label_135;\n    }\n    if (r14 > 0xc) {\n        goto label_136;\n    }\n    r12d = 0xc;\nlabel_54:\n    r13b = (rbx == *((rbp - 0x688))) ? 1 : 0;\n    if (rbx == 0) {\n        goto label_137;\n    }\n    if (r13b != 0) {\n        goto label_137;\n    }\n    rax = realloc (rbx, r12);\n    if (rax == 0) {\n        goto label_37;\n    }\n    rbx = rax;\nlabel_53:\n    *((rbx + r15)) = 0;\n    if (r12 > r14) {\n        if (rbx == *((rbp - 0x688))) {\n            goto label_138;\n        }\n        rax = realloc (rbx, r14);\n        if (rax == 0) {\n            rbx = rax;\n            goto label_138;\n        }\n    }\nlabel_138:\n    rax = *((rbp - 0x6d8));\n    if (rax != 0) {\n        free (rax);\n    }\n    rax = rbp - 0x580;\n    rdi = *((rbp - 0x578));\n    rax += 0x20;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = rbp - 0x670;\n    rdi = *((rbp - 0x668));\n    rax += 0x10;\n    if (rdi != rax) {\n        free (rdi);\n    }\n    rax = *((rbp - 0x6d0));\n    *(rax) = r15;\n    goto label_7;\nlabel_126:\n    if (r12 != -1) {\n        goto label_5;\n    }\n    goto label_38;\nlabel_130:\n    r15 = rcx;\n    if ((r11b & 8) == 0) {\n        goto label_35;\n    }\n    r15 = rcx + 1;\n    *(rcx) = 0x20;\n    goto label_35;\nlabel_124:\n    rdx = rcx - 1;\n    rax = 0xffffffffffffffff;\n    rdx -= r9;\n    if (rcx >= r9) {\n        goto label_139;\n    }\n    do {\n        esi = *((r9 + rax));\n        *((rdi + rax)) = sil;\n        rax--;\n    } while (rdx != rax);\n    r9 = rcx;\nlabel_139:\n    if (r10 == 0) {\n        goto label_39;\n    }\n    r10 += r9;\n    do {\n        r9++;\n        *((r9 - 1)) = 0x20;\n    } while (r9 != r10);\n    goto label_39;\nlabel_129:\n    *((rbp - 0x6b0)) = dl;\n    *((rbp - 0x6a0)) = r8;\n    *((rbp - 0x690)) = rcx;\n    rax = malloc (r12);\n    rcx = *((rbp - 0x690));\n    r8 = *((rbp - 0x6a0));\n    r9 = rax;\n    edx = *((rbp - 0x6b0));\n    if (rax == 0) {\n        goto label_5;\n    }\n    if (r13 == 0) {\n        goto label_140;\n    }\n    if (dl == 0) {\n        goto label_140;\n    }\n    *((rbp - 0x6a0)) = r8;\n    *((rbp - 0x690)) = rcx;\n    rax = memcpy (rax, rbx, r13);\n    rcx = *((rbp - 0x690));\n    r8 = *((rbp - 0x6a0));\n    rbx = rax;\n    goto label_38;\nlabel_131:\n    if (al != 0x47) {\n        goto label_141;\n    }\n    *(r15) = 0x30;\n    if ((r11b & 0x10) == 0) {\n        goto label_40;\n    }\n    r9 = r15 + 2;\n    if (rdx == 0) {\n        goto label_142;\n    }\n    rsi = rdx - 1;\n    *((rbp - 0x6ec)) = r8d;\n    *((rbp - 0x6e8)) = r10;\n    *((rbp - 0x6e0)) = r9;\n    *((rbp - 0x6c8)) = rcx;\n    *((rbp - 0x6c0)) = r11d;\n    *((rbp - 0x6b0)) = rdx;\n    *((rbp - 0x6a0)) = rsi;\n    rax = nl_langinfo (0x10000);\n    rsi = *((rbp - 0x6a0));\n    rdx = *((rbp - 0x6b0));\n    eax = *(rax);\n    r11d = *((rbp - 0x6c0));\n    rcx = *((rbp - 0x6c8));\n    r9 = *((rbp - 0x6e0));\n    r10 = *((rbp - 0x6e8));\n    r8d = *((rbp - 0x6ec));\n    if (al == 0) {\n        goto label_143;\n    }\nlabel_57:\n    *((r15 + 1)) = al;\n    if (rsi == 0) {\n        goto label_36;\n    }\n    rdx = r15 + rdx + 1;\n    rax = r9;\n    do {\n        rax++;\n        *((rax - 1)) = 0x30;\n    } while (rax != rdx);\n    r9 += rsi;\n    goto label_36;\nlabel_123:\n    if (r10 == 0) {\n        goto label_39;\n    }\n    do {\n        r9++;\n        *((r9 - 1)) = 0x20;\n    } while (rdi != r9);\n    goto label_39;\nlabel_133:\n    eax = 0x6e69;\n    *((r15 + 2)) = 0x66;\n    *(r15) = ax;\n    r15d = 0;\n    goto label_36;\nlabel_122:\n    r9 = r15 + 2;\n    *((rbp - 0x6e8)) = r8d;\n    *((rbp - 0x6e0)) = r10;\n    *((rbp - 0x6c8)) = rcx;\n    *((rbp - 0x6c0)) = rdx;\n    *((rbp - 0x6b0)) = r11d;\n    *((rbp - 0x6a0)) = r9;\n    rax = nl_langinfo (0x10000);\n    esi = 0x2e;\n    rdx = *((rbp - 0x6c0));\n    r9 = *((rbp - 0x6a0));\n    eax = *(rax);\n    r11d = *((rbp - 0x6b0));\n    rcx = *((rbp - 0x6c8));\n    r10 = *((rbp - 0x6e0));\n    r8d = *((rbp - 0x6e8));\n    if (al == 0) {\n        eax = esi;\n    }\n    *((r15 + 1)) = al;\n    if (rdx == 0) {\n        goto label_36;\n    }\n    rsi = r15 + rdx + 2;\n    rax = r9;\n    do {\n        rax++;\n        *((rax - 1)) = 0x30;\n    } while (rax != rsi);\n    r9 += rdx;\n    goto label_36;\nlabel_94:\n    r10d = 0;\n    *((rbp - 0x690)) = rcx;\n    goto label_144;\nlabel_41:\n    if (rdi == rdx) {\n        goto label_10;\n    }\nlabel_144:\n    rsi = rdx + 1;\n    edx = *(rdx);\n    rcx = 0x1999999999999999;\n    r9 = 0xffffffffffffffff;\n    edx -= 0x30;\n    rdx = (int64_t) edx;\n    if (r10 <= rcx) {\n        r9 = r10 * 5;\n        r9 += r9;\n    }\n    rdx += r9;\n    r10 = rdx;\n    rdx = rsi;\n    if (rdx >= 0) {\n        goto label_41;\n    }\n    rcx = *((rbp - 0x690));\n    if (rdi == rsi) {\n        goto label_42;\n    }\nlabel_82:\n    rdx++;\n    if (*((rdx - 1)) != 0x30) {\n        goto label_43;\n    }\n    *((rbp - 0x690)) = rcx;\n    r10 = 0xffffffffffffffff;\n    goto label_41;\nlabel_84:\n    rax = rdx + 1;\n    edx = 0;\n    if (rcx == rax) {\n        goto label_86;\n    }\n    rsi = rax;\n    goto label_145;\nlabel_45:\n    if (rcx == rsi) {\n        goto label_44;\n    }\nlabel_145:\n    r9 = 0x1999999999999999;\n    rdi = rsi + 1;\n    esi = *(rsi);\n    esi -= 0x30;\n    rax = (int64_t) esi;\n    rsi = 0xffffffffffffffff;\n    if (rdx <= r9) {\n        rsi = rdx * 5;\n        rsi += rsi;\n    }\n    rax += rsi;\n    rsi = rdi;\n    rdx = rax;\n    if (rax >= 0) {\n        goto label_45;\n    }\n    if (rcx == rdi) {\n        goto label_46;\n    }\nlabel_48:\n    rsi = rdi + 1;\n    if (*((rsi - 1)) == 0x30) {\n        rdx = 0xffffffffffffffff;\n        goto label_45;\n    }\n    if (rcx == rsi) {\n        goto label_47;\n    }\n    rdi = rsi;\n    goto label_48;\n    if (rcx < rsi) {\nlabel_127:\n        goto label_5;\n    }\n    r12 += r12;\n    if (r12 >= rax) {\n        goto label_49;\n    }\nlabel_128:\n    if (rax == -1) {\n        goto label_5;\n    }\n    r12 = rax;\n    goto label_49;\nlabel_114:\n    fp_stack++;\n    r15d -= 0x41;\n    r9 = rcx + 3;\n    if (r15b > 0x19) {\n        goto label_146;\n    }\n    eax = 0x414e;\n    *((rcx + 2)) = 0x4e;\n    r15d = 0;\n    *(rcx) = ax;\n    goto label_50;\nlabel_86:\n    ecx = 0xc;\n    goto label_51;\nlabel_141:\n    if (al != 0x41) {\n        goto label_34;\n    }\n    rax = r15 + 2;\n    *(r15) = 0x30;\n    *((rbp - 0x6a0)) = rax;\n    eax = *((r14 + 0x48));\n    *((r15 + 2)) = 0x30;\n    eax += 0x17;\n    *((r15 + 1)) = al;\n    if ((r11b & 0x10) != 0) {\n        goto label_147;\n    }\n    rsi = r15 + 3;\n    al = (rdx != 0) ? 1 : 0;\n    if (al != 0) {\n        goto label_147;\n    }\nlabel_55:\n    eax = *((r14 + 0x48));\n    r15d = 0x302b;\n    r9 = rsi + 3;\n    *((rsi + 1)) = r15w;\n    r15 = *((rbp - 0x6a0));\n    eax += 0xf;\n    *(rsi) = al;\n    goto label_36;\nlabel_132:\n    rsi = r15 + 2;\n    *((rbp - 0x6e8)) = r8d;\n    *((rbp - 0x6e0)) = r10;\n    *((rbp - 0x6c8)) = rcx;\n    *((rbp - 0x6c0)) = rdx;\n    *((rbp - 0x6b0)) = r11d;\n    *((rbp - 0x6a0)) = rsi;\n    rax = nl_langinfo (0x10000);\n    edi = 0x2e;\n    rdx = *((rbp - 0x6c0));\n    rsi = *((rbp - 0x6a0));\n    eax = *(rax);\n    r11d = *((rbp - 0x6b0));\n    rcx = *((rbp - 0x6c8));\n    r10 = *((rbp - 0x6e0));\n    r8d = *((rbp - 0x6e8));\n    if (al == 0) {\n        eax = edi;\n    }\n    *((r15 + 1)) = al;\n    if (rdx == 0) {\n        goto label_52;\n    }\n    rdi = r15 + rdx + 2;\n    rax = rsi;\n    do {\n        rax++;\n        *((rax - 1)) = 0x30;\n    } while (rax != rdi);\n    rsi += rdx;\n    goto label_52;\nlabel_140:\n    rbx = r9;\n    goto label_38;\nlabel_146:\n    eax = 0x616e;\n    *((rcx + 2)) = 0x6e;\n    r15d = 0;\n    *(rcx) = ax;\n    goto label_50;\nlabel_137:\n    rax = malloc (r12);\n    rcx = rax;\n    if (rax == 0) {\n        goto label_5;\n    }\n    rdx = r15;\n    if (r15 == 0) {\n        goto label_148;\n    }\n    if (r13b == 0) {\n        goto label_148;\n    }\n    rax = memcpy (rax, rbx, rdx);\n    rbx = rax;\n    goto label_53;\n    if (r13b < 0) {\nlabel_135:\n        goto label_5;\n    }\n    r12 += r12;\n    if (r12 >= r14) {\n        goto label_54;\n    }\nlabel_136:\n    if (r14 == -1) {\n        goto label_5;\n    }\n    r12 = r14;\n    goto label_54;\nlabel_147:\n    rsi = r15 + 4;\n    *((rbp - 0x6ec)) = r8d;\n    *((rbp - 0x6e8)) = r10;\n    *((rbp - 0x6e0)) = rcx;\n    *((rbp - 0x6c8)) = rdx;\n    *((rbp - 0x6c0)) = r11d;\n    *((rbp - 0x6b0)) = rsi;\n    rax = nl_langinfo (0x10000);\n    edi = 0x2e;\n    rdx = *((rbp - 0x6c8));\n    rsi = *((rbp - 0x6b0));\n    eax = *(rax);\n    r11d = *((rbp - 0x6c0));\n    rcx = *((rbp - 0x6e0));\n    r10 = *((rbp - 0x6e8));\n    r8d = *((rbp - 0x6ec));\n    if (al == 0) {\n        eax = edi;\n    }\n    *((r15 + 3)) = al;\n    if (rdx == 0) {\n        goto label_55;\n    }\n    rdi = r15 + rdx + 4;\n    rax = rsi;\n    do {\n        rax++;\n        *((rax - 1)) = 0x30;\n    } while (rax != rdi);\n    rsi += rdx;\n    goto label_55;\nlabel_125:\n    r15 = r9;\n    goto label_56;\nlabel_148:\n    rbx = rcx;\n    goto label_53;\nlabel_142:\n    *((rbp - 0x6e0)) = r8d;\n    *((rbp - 0x6c8)) = r10;\n    *((rbp - 0x6c0)) = r9;\n    *((rbp - 0x6b0)) = rcx;\n    *((rbp - 0x6a0)) = r11d;\n    rax = nl_langinfo (0x10000);\n    edx = 0x2e;\n    r11d = *((rbp - 0x6a0));\n    rcx = *((rbp - 0x6b0));\n    eax = *(rax);\n    r9 = *((rbp - 0x6c0));\n    r10 = *((rbp - 0x6c8));\n    r8d = *((rbp - 0x6e0));\n    if (al == 0) {\n        eax = edx;\n    }\n    *((r15 + 1)) = al;\n    goto label_36;\nlabel_143:\n    eax = 0x2e;\n    goto label_57;\nlabel_134:\n    if (r12 == -1) {\n        goto label_53;\n    }\n    goto label_5;\n}\n"
        },
        {
            "funcName": "fcn_0040f3a0",
            "funcStartAddr": "0x40f3a0",
            "funcEndAddr": "0x40f5b9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40f3a0 */\n#include <stdint.h>\n \nint64_t fcn_0040f3a0 (int64_t arg1, uint32_t arg2) {\n    rdi = arg1;\n    rsi = arg2;\n    rax = *((rsi + 8));\n    if (*(rsi) == 0) {\n        goto label_6;\n    }\n    edx = 0;\n    r9d = \"(NULL)\";\n    r8d = \"(NULL)\";\n    do {\n        if (*(rax) > 0x16) {\n            goto label_7;\n        }\n        ecx = *(rax);\n        /* switch table (23 cases) at 0x413a00 */\n        ecx = *(rdi);\n        if (ecx > 0x2f) {\n            goto label_8;\n        }\n        r10d = ecx;\n        ecx += 8;\n        r10 += *((rdi + 0x10));\n        *(rdi) = ecx;\nlabel_1:\n        rcx = *(r10);\n        *((rax + 0x10)) = rcx;\nlabel_0:\n        rdx++;\n        rax += 0x20;\n    } while (*(rsi) > rdx);\nlabel_6:\n    eax = 0;\n    return rax;\n    ecx = *(rdi);\n    if (ecx > 0x2f) {\n        goto label_9;\n    }\n    r10d = ecx;\n    ecx += 8;\n    r10 += *((rdi + 0x10));\n    *(rdi) = ecx;\n    do {\n        ecx = *(r10);\n        *((rax + 0x10)) = ecx;\n        goto label_0;\n        ecx = *(rdi);\n        if (ecx > 0x2f) {\n            goto label_10;\n        }\n        r10d = ecx;\n        ecx += 8;\n        r10 += *((rdi + 0x10));\n        *(rdi) = ecx;\nlabel_3:\n        ecx = *(r10);\n        *((rax + 0x10)) = cx;\n        goto label_0;\n        ecx = *(rdi);\n        if (ecx > 0x2f) {\n            goto label_11;\n        }\n        r10d = ecx;\n        ecx += 8;\n        r10 += *((rdi + 0x10));\n        *(rdi) = ecx;\nlabel_2:\n        ecx = *(r10);\n        *((rax + 0x10)) = cl;\n        goto label_0;\nlabel_8:\n        r10 = *((rdi + 8));\n        rcx = r10 + 8;\n        *((rdi + 8)) = rcx;\n        goto label_1;\nlabel_9:\n        r10 = *((rdi + 8));\n        rcx = r10 + 8;\n        *((rdi + 8)) = rcx;\n    } while (1);\nlabel_11:\n    r10 = *((rdi + 8));\n    rcx = r10 + 8;\n    *((rdi + 8)) = rcx;\n    goto label_2;\nlabel_10:\n    r10 = *((rdi + 8));\n    rcx = r10 + 8;\n    *((rdi + 8)) = rcx;\n    goto label_3;\n    ecx = *((rdi + 4));\n    if (ecx > 0xaf) {\n        goto label_12;\n    }\n    r10d = ecx;\n    ecx += 0x10;\n    r10 += *((rdi + 0x10));\n    *((rdi + 4)) = ecx;\nlabel_4:\n    xmm0 = *(r10);\n    *((rax + 0x10)) = xmm0;\n    goto label_0;\n    rcx = *((rdi + 8));\n    rcx += 0xf;\n    rcx &= 0xfffffffffffffff0;\n    r10 = rcx + 0x10;\n    *((rdi + 8)) = r10;\n    *(fp_stack--) = fp_stack[?];\n    ? = fp_stack[0];\n    fp_stack--;\n    goto label_0;\n    ecx = *(rdi);\n    if (ecx > 0x2f) {\n        goto label_13;\n    }\n    r10d = ecx;\n    ecx += 8;\n    r10 += *((rdi + 0x10));\n    *(rdi) = ecx;\nlabel_5:\n    rcx = *(r10);\n    if (rcx == 0) {\n        rcx = r9;\n    }\n    *((rax + 0x10)) = rcx;\n    goto label_0;\n    ecx = *(rdi);\n    if (ecx > 0x2f) {\n        goto label_14;\n    }\n    r10d = ecx;\n    ecx += 8;\n    r10 += *((rdi + 0x10));\n    *(rdi) = ecx;\n    do {\n        rcx = *(r10);\n        if (rcx == 0) {\n            rcx = r8;\n        }\n        *((rax + 0x10)) = rcx;\n        goto label_0;\nlabel_7:\n        eax = 0xffffffff;\n        return rax;\nlabel_14:\n        r10 = *((rdi + 8));\n        rcx = r10 + 8;\n        *((rdi + 8)) = rcx;\n    } while (1);\nlabel_12:\n    r10 = *((rdi + 8));\n    rcx = r10 + 8;\n    *((rdi + 8)) = rcx;\n    goto label_4;\nlabel_13:\n    r10 = *((rdi + 8));\n    rcx = r10 + 8;\n    *((rdi + 8)) = rcx;\n    goto label_5;\n}\n"
        },
        {
            "funcName": "fcn_0040f5c0",
            "funcStartAddr": "0x40f5c0",
            "funcEndAddr": "0x4102c9",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x40f5c0 */\n#include <stdint.h>\n \nuint64_t fcn_0040f5c0 (int64_t arg1, int64_t arg2, int64_t arg3) {\n    void ** var_8h;\n    int64_t var_10h;\n    int64_t var_18h;\n    int64_t var_20h;\n    uint32_t var_28h;\n    int64_t var_30h;\n    int64_t var_38h;\n    int64_t var_40h;\n    int64_t var_48h;\n    rdi = arg1;\n    rsi = arg2;\n    rdx = arg3;\n    rcx = rsi + 0x20;\n    rax = rdx + 0x10;\n    r8 = rsi;\n    r15 = rdx;\n    r9d = 7;\n    r11d = 7;\n    r10 = 0xffffffffffffffff;\n    r13d = 0;\n    *(rsi) = 0;\n    *((rsi + 8)) = rcx;\n    *((rsp + 0x28)) = rcx;\n    *(rdx) = 0;\n    *((rsp + 8)) = rax;\n    *((rdx + 8)) = rax;\n    *((rsp + 0x18)) = 0;\n    *((rsp + 0x10)) = 0;\n    *((rsp + 0x20)) = 0;\n    while (al != 0) {\n        rbp = rdi + 1;\n        if (al == 0x25) {\n            goto label_32;\n        }\nlabel_3:\n        rdi = rbp;\n        eax = *(rdi);\n    }\n    rax = r13 * 5;\n    rax = r13 + rax*2;\n    *((rcx + rax*8)) = rdi;\n    rax = *((rsp + 0x10));\n    *((r8 + 0x10)) = rax;\n    rax = *((rsp + 0x18));\n    *((r8 + 0x18)) = rax;\n    eax = 0;\nlabel_11:\n    return rax;\nlabel_32:\n    rax = r13 * 5;\n    r14 = r10;\n    rax = r13 + rax*2;\n    r12 = rcx + rax*8;\n    *(r12) = rdi;\n    *((r12 + 0x10)) = 0;\n    *((r12 + 0x18)) = 0;\n    *((r12 + 0x20)) = 0;\n    *((r12 + 0x28)) = r10;\n    *((r12 + 0x30)) = 0;\n    *((r12 + 0x38)) = 0;\n    *((r12 + 0x40)) = r10;\n    *((r12 + 0x50)) = r10;\n    ebx = *((rdi + 1));\n    eax = rbx - 0x30;\n    if (al > 9) {\n        goto label_4;\n    }\n    goto label_33;\n    do {\n        if (bl == 0x2d) {\n            goto label_34;\n        }\n        if (bl == 0x2b) {\n            goto label_35;\n        }\n        if (bl == 0x20) {\n            goto label_36;\n        }\n        if (bl == 0x23) {\n            goto label_37;\n        }\n        if (bl == 0x30) {\n            goto label_38;\n        }\n        if (bl != 0x49) {\n            goto label_39;\n        }\n        *((r12 + 0x10)) |= 0x40;\nlabel_0:\n        ebx = *(rcx);\nlabel_4:\n        rcx = rbp + 1;\n    } while (bl != 0x27);\n    *((r12 + 0x10)) |= 1;\n    goto label_0;\nlabel_34:\n    *((r12 + 0x10)) |= 2;\n    goto label_0;\nlabel_35:\n    *((r12 + 0x10)) |= 4;\n    goto label_0;\nlabel_36:\n    *((r12 + 0x10)) |= 8;\n    goto label_0;\nlabel_37:\n    *((r12 + 0x10)) |= 0x10;\n    goto label_0;\nlabel_38:\n    *((r12 + 0x10)) |= 0x20;\n    goto label_0;\nlabel_39:\n    if (bl == 0x2a) {\n        goto label_40;\n    }\n    eax = rbx - 0x30;\n    if (al <= 9) {\n        goto label_41;\n    }\nlabel_17:\n    if (bl == 0x2e) {\n        goto label_42;\n    }\nlabel_2:\n    eax = 0;\n    esi = 1;\n    while (bl != 0x68) {\n        if (bl == 0x4c) {\n            goto label_43;\n        }\n        if (bl != 0x6c) {\n            if (bl == 0x6a) {\n                goto label_44;\n            }\n            edx = ebx;\n            edx &= 0xffffffdf;\n            if (dl == 0x5a) {\n                goto label_44;\n            }\n            if (bl != 0x74) {\n                goto label_45;\n            }\n        }\nlabel_44:\n        eax += 8;\nlabel_1:\n        ebx = *(rbp);\n        rbp++;\n    }\n    ecx = eax;\n    edx = esi;\n    ecx &= 1;\n    edx <<= cl;\n    eax |= edx;\n    goto label_1;\nlabel_40:\n    rsi = *((rsp + 0x10));\n    eax = 1;\n    *((r12 + 0x18)) = rbp;\n    *((r12 + 0x20)) = rcx;\n    if (rsi != 0) {\n        rax = rsi;\n    }\n    *((rsp + 0x10)) = rax;\n    eax = *((rbp + 1));\n    edx = rax - 0x30;\n    if (dl <= 9) {\n        goto label_46;\n    }\nlabel_8:\n    rbx = *((r12 + 0x28));\n    if (rbx == -1) {\n        goto label_47;\n    }\nlabel_7:\n    r13 = *((r15 + 8));\n    if (r9 <= rbx) {\n        goto label_48;\n    }\n    rdx = *(r15);\nlabel_5:\n    if (rdx > rbx) {\n        goto label_49;\n    }\n    do {\n        rdx++;\n        rax = rdx;\n        rax <<= 5;\n        *((r13 + rax - 0x20)) = 0;\n    } while (rdx <= rbx);\n    *(r15) = rdx;\nlabel_49:\n    rbx <<= 5;\n    rax = r13 + rbx;\n    edx = *(rax);\n    if (edx != 0) {\n        goto label_50;\n    }\n    *(rax) = 5;\n    ebx = *(rcx);\n    rcx++;\n    if (bl != 0x2e) {\n        goto label_2;\n    }\nlabel_42:\n    *((r12 + 0x30)) = rbp;\n    if (*((rbp + 1)) != 0x2a) {\n        goto label_51;\n    }\n    rsi = *((rsp + 0x18));\n    eax = 2;\n    rcx = rbp + 2;\n    *((r12 + 0x38)) = rcx;\n    if (rsi >= 2) {\n        rax = rsi;\n    }\n    *((rsp + 0x18)) = rax;\n    eax = *((rbp + 2));\n    edx = rax - 0x30;\n    if (dl <= 9) {\n        goto label_52;\n    }\nlabel_27:\n    rbx = *((r12 + 0x40));\n    if (rbx == -1) {\n        goto label_53;\n    }\nlabel_26:\n    r13 = *((r15 + 8));\n    if (r9 <= rbx) {\n        goto label_54;\n    }\n    rdx = *(r15);\nlabel_20:\n    if (rdx > rbx) {\n        goto label_55;\n    }\n    do {\n        rdx++;\n        rax = rdx;\n        rax <<= 5;\n        *((r13 + rax - 0x20)) = 0;\n    } while (rdx <= rbx);\n    *(r15) = rdx;\nlabel_55:\n    rax = rbx;\n    rax <<= 5;\n    rax += r13;\n    edx = *(rax);\n    if (edx != 0) {\n        goto label_56;\n    }\n    *(rax) = 5;\n    ebx = *(rcx);\n    goto label_2;\nlabel_43:\n    eax |= 4;\n    goto label_1;\nlabel_45:\n    edx = rbx - 0x25;\n    if (dl > 0x53) {\n        goto label_15;\n    }\n    edx = (int32_t) dl;\n    /* switch table (84 cases) at 0x413ae0 */\n    ecx = 0;\n    cl = (eax > 7) ? 1 : 0;\n    ecx += 0xf;\nlabel_10:\n    if (r14 == -1) {\n        goto label_57;\n    }\n    *((r12 + 0x50)) = r14;\nlabel_16:\n    r13 = *((r15 + 8));\n    if (r9 <= r14) {\n        goto label_58;\n    }\nlabel_14:\n    rax = *(r15);\n    if (rax > r14) {\n        goto label_59;\n    }\n    do {\n        rax++;\n        rdx = rax;\n        rdx <<= 5;\n        *((r13 + rdx - 0x20)) = 0;\n    } while (rax <= r14);\n    *(r15) = rax;\nlabel_59:\n    r14 <<= 5;\n    rax = r13 + r14;\n    edx = *(rax);\n    if (edx != 0) {\n        goto label_60;\n    }\n    *(rax) = ecx;\nlabel_12:\n    *((r12 + 0x48)) = bl;\n    rax = *(r8);\n    *((r12 + 8)) = rbp;\n    r13 = rax + 1;\n    *(r8) = r13;\n    if (r11 > r13) {\n        rcx = *((r8 + 8));\n        goto label_3;\n    }\n    if (r11 < 0) {\n        goto label_61;\n    }\n    rax = 0x2e8ba2e8ba2e8ba;\n    rbx = r11 + r11;\n    if (rbx > rax) {\n        goto label_61;\n    }\n    rax = r11 * 5;\n    r12 = *((r8 + 8));\n    *((rsp + 0x38)) = r8;\n    rsi = r11 + rax*2;\n    *((rsp + 0x30)) = r9;\n    rsi <<= 4;\n    if (*((rsp + 0x28)) == r12) {\n        goto label_62;\n    }\n    rax = realloc (r12, rsi);\n    r9 = *((rsp + 0x30));\n    r8 = *((rsp + 0x38));\n    r10 = 0xffffffffffffffff;\n    rcx = rax;\n    if (rax == 0) {\n        goto label_61;\n    }\n    r12 = *((r8 + 8));\n    r13 = *(r8);\n    if (*((rsp + 0x28)) == r12) {\n        goto label_63;\n    }\nlabel_6:\n    *((r8 + 8)) = rcx;\n    r11 = rbx;\n    goto label_3;\nlabel_33:\n    rax = rbp;\n    do {\n        rax++;\n        edx = *(rax);\n        ecx = rdx - 0x30;\n    } while (cl <= 9);\n    if (dl == 0x24) {\n        goto label_64;\n    }\n    r14 = r10;\n    goto label_4;\nlabel_51:\n    eax = *((rbp + 1));\n    eax -= 0x30;\n    if (al > 9) {\n        goto label_65;\n    }\n    do {\n        rcx++;\n        eax = *(rcx);\n        eax -= 0x30;\n    } while (al <= 9);\n    rax = rcx;\n    rax -= rbp;\nlabel_30:\n    rsi = *((rsp + 0x18));\n    *((r12 + 0x38)) = rcx;\n    ebx = *(rcx);\n    if (rsi >= rax) {\n        rax = rsi;\n    }\n    *((rsp + 0x18)) = rax;\n    goto label_2;\nlabel_48:\n    r9 += r9;\n    rax = rbx + 1;\n    if (r9 <= rbx) {\n        r9 = rax;\n    }\n    rax = 0x7ffffffffffffff;\n    if (r9 > rax) {\n        goto label_66;\n    }\n    rsi = r9;\n    *((rsp + 0x48)) = r8;\n    rsi <<= 5;\n    *((rsp + 0x40)) = r9;\n    *((rsp + 0x38)) = r11;\n    *((rsp + 0x30)) = rcx;\n    if (*((rsp + 8)) == r13) {\n        goto label_67;\n    }\n    rax = realloc (r13, rsi);\n    rsi = *((r15 + 8));\n    rcx = *((rsp + 0x30));\n    r10 = 0xffffffffffffffff;\n    r13 = rax;\n    r11 = *((rsp + 0x38));\n    r9 = *((rsp + 0x40));\n    r8 = *((rsp + 0x48));\n    if (rax == 0) {\n        goto label_19;\n    }\n    rdx = *(r15);\n    if (*((rsp + 8)) == rsi) {\n        goto label_68;\n    }\nlabel_22:\n    *((r15 + 8)) = r13;\n    goto label_5;\nlabel_62:\n    rax = malloc (rsi);\n    r9 = *((rsp + 0x30));\n    r8 = *((rsp + 0x38));\n    rcx = rax;\n    if (rax == 0) {\n        goto label_69;\n    }\nlabel_63:\n    rax = r13 * 5;\n    *((rsp + 0x38)) = r8;\n    *((rsp + 0x30)) = r9;\n    rdx <<= 3;\n    rax = memcpy (rcx, r12, r13 + rax*2);\n    r8 = *((rsp + 0x38));\n    r9 = *((rsp + 0x30));\n    r10 = 0xffffffffffffffff;\n    rcx = rax;\n    r13 = *(r8);\n    goto label_6;\nlabel_47:\n    rsi = *((rsp + 0x20));\n    rax = rsi + 1;\n    *((r12 + 0x28)) = rsi;\n    if (rsi == -1) {\n        goto label_15;\n    }\n    rbx = *((rsp + 0x20));\n    *((rsp + 0x20)) = rax;\n    goto label_7;\nlabel_46:\n    rdx = rcx;\n    do {\n        rdx++;\n        esi = *(rdx);\n        edi = rsi - 0x30;\n    } while (dil <= 9);\n    if (sil != 0x24) {\n        goto label_8;\n    }\n    esi = 0;\n    while (rbp == 0) {\n        if (bl > 9) {\n            goto label_70;\n        }\n        rdi = 0x1999999999999999;\n        eax -= 0x30;\n        rdx = r10;\n        rax = (int64_t) eax;\n        if (rsi <= rdi) {\n            rdx = rsi * 5;\n            rdx += rdx;\n        }\n        rdi = rcx;\nlabel_9:\n        ebp = 0;\n        rdx += rax;\n        eax = *((rcx + 1));\n        bpl = (rdx < 0) ? 1 : 0;\n        rsi = rdx;\n        rcx++;\n        ebx = rax - 0x30;\n    }\n    if (bl > 9) {\n        goto label_15;\n    }\n    eax -= 0x30;\n    rdx = r10;\n    rdi = rcx;\n    rax = (int64_t) eax;\n    goto label_9;\n    ecx = 0;\n    cl = (eax > 7) ? 1 : 0;\n    ecx += 0xd;\n    goto label_10;\n    ecx = 0x16;\n    if (eax > 0xf) {\n        goto label_10;\n    }\n    if ((al & 4) != 0) {\n        goto label_10;\n    }\n    ecx = 0x15;\n    if (eax > 7) {\n        goto label_10;\n    }\n    ecx = 0x12;\n    if ((al & 2) != 0) {\n        goto label_10;\n    }\n    ecx = 0;\n    cl = ((al & 1) == 0) ? 1 : 0;\n    ecx += 0x13;\n    goto label_10;\n    ecx = 9;\n    if (eax > 0xf) {\n        goto label_10;\n    }\n    if ((al & 4) != 0) {\n        goto label_10;\n    }\n    ecx = 7;\n    if (eax > 7) {\n        goto label_10;\n    }\n    ecx = 1;\n    if ((al & 2) != 0) {\n        goto label_10;\n    }\n    eax &= 1;\n    ecx -= ecx;\n    ecx &= 2;\n    ecx += 3;\n    goto label_10;\n    ecx = 0x11;\n    goto label_10;\n    ecx = 0xc;\n    if (eax > 0xf) {\n        goto label_10;\n    }\n    ecx = 0;\n    cl = ((al & 4) != 0) ? 1 : 0;\n    ecx += 0xb;\n    goto label_10;\n    ecx = 0x10;\n    ebx = 0x73;\n    goto label_10;\n    ecx = 0xe;\n    ebx = 0x63;\n    goto label_10;\n    ecx = 0xa;\n    if (eax > 0xf) {\n        goto label_10;\n    }\n    if ((al & 4) != 0) {\n        goto label_10;\n    }\n    ecx = 8;\n    if (eax > 7) {\n        goto label_10;\n    }\n    ecx = 2;\n    if ((al & 2) != 0) {\n        goto label_10;\n    }\n    eax &= 1;\n    ecx -= ecx;\n    ecx &= 2;\n    ecx += 4;\n    goto label_10;\nlabel_15:\n    r13 = *((r15 + 8));\nlabel_13:\n    if (*((rsp + 8)) != r13) {\n        *((rsp + 8)) = r8;\n        free (r13);\n        r8 = *((rsp + 8));\n    }\n    rdi = *((r8 + 8));\n    if (*((rsp + 0x28)) != rdi) {\n        free (rdi);\n    }\n    errno_location ();\n    *(rax) = 0x16;\n    eax = 0xffffffff;\n    goto label_11;\nlabel_60:\n    if (edx == ecx) {\n        goto label_12;\n    }\n    goto label_13;\nlabel_58:\n    r9 += r9;\n    rax = r14 + 1;\n    if (r9 <= r14) {\n        r9 = rax;\n    }\n    rax = 0x7ffffffffffffff;\n    if (r9 > rax) {\n        goto label_66;\n    }\n    rsi = r9;\n    *((rsp + 0x48)) = r8;\n    rsi <<= 5;\n    *((rsp + 0x40)) = r9;\n    *((rsp + 0x38)) = r11;\n    *((rsp + 0x30)) = ecx;\n    if (*((rsp + 8)) == r13) {\n        goto label_71;\n    }\n    rax = realloc (r13, rsi);\n    ecx = *((rsp + 0x30));\n    r11 = *((rsp + 0x38));\n    r10 = 0xffffffffffffffff;\n    r13 = rax;\n    r9 = *((rsp + 0x40));\n    r8 = *((rsp + 0x48));\n    if (rax == 0) {\n        goto label_61;\n    }\n    rax = *((rsp + 8));\n    if (rax == *((r15 + 8))) {\n        goto label_72;\n    }\nlabel_18:\n    *((r15 + 8)) = r13;\n    goto label_14;\nlabel_57:\n    rsi = *((rsp + 0x20));\n    rax = rsi + 1;\n    *((r12 + 0x50)) = rsi;\n    if (rsi == -1) {\n        goto label_15;\n    }\n    r14 = *((rsp + 0x20));\n    *((rsp + 0x20)) = rax;\n    goto label_16;\nlabel_41:\n    *((r12 + 0x18)) = rbp;\n    eax = *(rbp);\n    eax -= 0x30;\n    if (al > 9) {\n        goto label_73;\n    }\n    rcx = rbp;\n    while (al <= 9) {\n        rcx = rdx;\n        eax = *((rcx + 1));\n        rdx = rcx + 1;\n        eax -= 0x30;\n    }\n    rsi = *((rsp + 0x10));\n    rax = rdx;\n    rcx += 2;\n    rax -= rbp;\n    if (rsi >= rax) {\n        rax = rsi;\n    }\n    *((rsp + 0x10)) = rax;\nlabel_73:\n    *((r12 + 0x20)) = rbp;\n    ebx = *(rbp);\n    goto label_17;\nlabel_50:\n    if (edx != 5) {\n        goto label_13;\n    }\n    ebx = *(rcx);\n    rcx++;\n    goto label_17;\nlabel_71:\n    rax = malloc (rsi);\n    ecx = *((rsp + 0x30));\n    r11 = *((rsp + 0x38));\n    r9 = *((rsp + 0x40));\n    r8 = *((rsp + 0x48));\n    if (rax == 0) {\n        goto label_21;\n    }\nlabel_31:\n    rdi = rax;\n    *((rsp + 0x48)) = r8;\n    *((rsp + 0x40)) = r9;\n    r13 = rax;\n    rdx <<= 5;\n    *((rsp + 0x38)) = r11;\n    *((rsp + 0x30)) = ecx;\n    memcpy (rdi, r13, *(r15));\n    r8 = *((rsp + 0x48));\n    ecx = *((rsp + 0x30));\n    r10 = 0xffffffffffffffff;\n    r9 = *((rsp + 0x40));\n    r11 = *((rsp + 0x38));\n    goto label_18;\n    do {\nlabel_66:\n        rsi = r13;\nlabel_19:\n        if (*((rsp + 8)) != rsi) {\nlabel_23:\n            *((rsp + 8)) = r8;\n            free (rsi);\n            r8 = *((rsp + 8));\n        }\nlabel_21:\n        rdi = *((r8 + 8));\n        if (*((rsp + 0x28)) != rdi) {\n            free (rdi);\n        }\nlabel_24:\n        errno_location ();\n        *(rax) = 0xc;\n        eax = 0xffffffff;\n        return rax;\nlabel_54:\n        r9 += r9;\n        rax = rbx + 1;\n        if (r9 <= rbx) {\n            r9 = rax;\n        }\n        rax = 0x7ffffffffffffff;\n    } while (r9 > rax);\n    rsi = r9;\n    *((rsp + 0x48)) = r8;\n    rsi <<= 5;\n    *((rsp + 0x40)) = r9;\n    *((rsp + 0x38)) = r11;\n    *((rsp + 0x30)) = rcx;\n    if (*((rsp + 8)) == r13) {\n        goto label_74;\n    }\n    rax = realloc (r13, rsi);\n    rsi = *((r15 + 8));\n    rcx = *((rsp + 0x30));\n    r10 = 0xffffffffffffffff;\n    r13 = rax;\n    r11 = *((rsp + 0x38));\n    r9 = *((rsp + 0x40));\n    r8 = *((rsp + 0x48));\n    if (rax == 0) {\n        goto label_19;\n    }\n    rdx = *(r15);\n    if (*((rsp + 8)) == rsi) {\n        goto label_75;\n    }\nlabel_29:\n    *((r15 + 8)) = r13;\n    goto label_20;\nlabel_56:\n    if (edx != 5) {\n        goto label_13;\n    }\n    ebx = *(rcx);\n    goto label_2;\nlabel_67:\n    rax = malloc (rsi);\n    rcx = *((rsp + 0x30));\n    r11 = *((rsp + 0x38));\n    r9 = *((rsp + 0x40));\n    r8 = *((rsp + 0x48));\n    if (rax == 0) {\n        goto label_21;\n    }\n    r13 = rax;\nlabel_68:\n    rdx <<= 5;\n    *((rsp + 0x48)) = r8;\n    *((rsp + 0x40)) = r9;\n    *((rsp + 0x38)) = r11;\n    *((rsp + 0x30)) = rcx;\n    eax = memcpy (r13, *((rsp + 8)), *(r15));\n    rdx = *(r15);\n    r8 = *((rsp + 0x48));\n    r10 = 0xffffffffffffffff;\n    r9 = *((rsp + 0x40));\n    r11 = *((rsp + 0x38));\n    rcx = *((rsp + 0x30));\n    goto label_22;\nlabel_69:\n    rsi = *((r15 + 8));\n    if (*((rsp + 8)) != rsi) {\n        goto label_23;\n    }\n    goto label_24;\nlabel_64:\n    eax = 0;\n    while (rdi == 0) {\n        if (sil > 9) {\n            goto label_76;\n        }\n        rdi = 0x1999999999999999;\n        edx = (int32_t) bl;\n        rsi = r10;\n        edx -= 0x30;\n        rdx = (int64_t) edx;\n        if (rax <= rdi) {\n            rsi = rax * 5;\n            rsi += rsi;\n        }\n        rcx = rbp;\nlabel_25:\n        edi = 0;\n        ebx = *((rbp + 1));\n        rdx += rsi;\n        dil = (rdx < 0) ? 1 : 0;\n        rax = rdx;\n        rbp++;\n        esi = rbx - 0x30;\n    }\n    if (sil > 9) {\n        goto label_15;\n    }\n    edx = (int32_t) bl;\n    rsi = r10;\n    rcx = rbp;\n    edx -= 0x30;\n    rdx = (int64_t) edx;\n    goto label_25;\nlabel_53:\n    rsi = *((rsp + 0x20));\n    rax = rsi + 1;\n    *((r12 + 0x40)) = rsi;\n    if (rsi == -1) {\n        goto label_15;\n    }\n    rbx = *((rsp + 0x20));\n    *((rsp + 0x20)) = rax;\n    goto label_26;\nlabel_52:\n    rdx = rcx;\n    do {\n        rdx++;\n        esi = *(rdx);\n        edi = rsi - 0x30;\n    } while (dil <= 9);\n    if (sil != 0x24) {\n        goto label_27;\n    }\n    esi = 0;\n    while (rbp == 0) {\n        if (bl > 9) {\n            goto label_77;\n        }\n        rdi = 0x1999999999999999;\n        eax -= 0x30;\n        rdx = r10;\n        rax = (int64_t) eax;\n        if (rsi <= rdi) {\n            rdx = rsi * 5;\n            rdx += rdx;\n        }\n        rdi = rcx;\nlabel_28:\n        ebp = 0;\n        rdx += rax;\n        bpl = (rdx < 0) ? 1 : 0;\n        rcx++;\n        eax = *(rcx);\n        rsi = rdx;\n        ebx = rax - 0x30;\n    }\n    if (bl > 9) {\n        goto label_15;\n    }\n    eax -= 0x30;\n    rdx = r10;\n    rdi = rcx;\n    rax = (int64_t) eax;\n    goto label_28;\nlabel_76:\n    r14 = rdx;\n    r14--;\n    if (r14 > 0xfffffffffffffffd) {\n        goto label_15;\n    }\n    rbp = rcx + 2;\n    ebx = *((rcx + 2));\n    goto label_4;\nlabel_74:\n    rax = malloc (rsi);\n    rcx = *((rsp + 0x30));\n    r11 = *((rsp + 0x38));\n    r9 = *((rsp + 0x40));\n    r8 = *((rsp + 0x48));\n    if (rax == 0) {\n        goto label_21;\n    }\n    r13 = rax;\nlabel_75:\n    rdx <<= 5;\n    *((rsp + 0x48)) = r8;\n    *((rsp + 0x40)) = r9;\n    *((rsp + 0x38)) = r11;\n    *((rsp + 0x30)) = rcx;\n    memcpy (r13, *((rsp + 8)), *(r15));\n    rdx = *(r15);\n    r8 = *((rsp + 0x48));\n    r10 = 0xffffffffffffffff;\n    r9 = *((rsp + 0x40));\n    r11 = *((rsp + 0x38));\n    rcx = *((rsp + 0x30));\n    goto label_29;\nlabel_65:\n    eax = 1;\n    goto label_30;\nlabel_70:\n    rbx = rdx - 1;\n    if (rbx > 0xfffffffffffffffd) {\n        goto label_15;\n    }\n    *((r12 + 0x28)) = rbx;\n    rcx = rdi + 2;\n    goto label_7;\nlabel_77:\n    rbx = rdx - 1;\n    if (rbx > 0xfffffffffffffffd) {\n        goto label_15;\n    }\n    *((r12 + 0x40)) = rbx;\n    rcx = rdi + 2;\n    goto label_26;\nlabel_61:\n    rsi = *((r15 + 8));\n    goto label_19;\nlabel_72:\n    rax = r13;\n    r13 = *((rsp + 8));\n    goto label_31;\n}\n"
        },
        {
            "funcName": "fcn_00410340",
            "funcStartAddr": "0x410340",
            "funcEndAddr": "0x410358",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x410340 */\n#include <stdint.h>\n \nint64_t fcn_00410340 (void) {\n    rax = 0x617308;\n    edx = 0;\n    if (rax != 0) {\n        rdx = *(rax);\n    }\n    esi = 0;\n    return cxa_atexit ();\n}\n"
        },
        {
            "funcName": "fcn_00410358",
            "funcStartAddr": "0x410358",
            "funcEndAddr": "0x410378",
            "decompiledFuncCode": "/* r2dec pseudo code output */\n/* ../dataset/coreutils_strip_8.2/coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf @ 0x410358 */\n#include <stdint.h>\n \nvoid fcn_00410358 (int64_t arg3) {\n    rdx = arg3;\n    ebx = segment.GNU_RELRO;\n    do {\n        rax = *(rbx);\n        if (rax == -1) {\n            goto label_0;\n        }\n        void (*rax)() ();\n        rbx -= 8;\n    } while (1);\nlabel_0:\n}\n"
        }
    ],
    "funcCount": 103
}