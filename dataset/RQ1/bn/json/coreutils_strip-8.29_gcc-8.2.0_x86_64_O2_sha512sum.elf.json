{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sha512sum.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 144,
    "funcInfo": [
        {
            "funcName": "sub_401560",
            "funcStartAddr": "0x401560",
            "funcEndAddr": "0x40156c",
            "decompiledFuncCode": "int64_t sub_401560()\n{\n    int64_t var_8 = data_60f008;\n    /* jump -> data_60f010 */\n}\n\n"
        },
        {
            "funcName": "sub_401576",
            "funcStartAddr": "0x401576",
            "funcEndAddr": "0x401580",
            "decompiledFuncCode": "int64_t sub_401576()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401586",
            "funcStartAddr": "0x401586",
            "funcEndAddr": "0x401590",
            "decompiledFuncCode": "int64_t sub_401586()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401596",
            "funcStartAddr": "0x401596",
            "funcEndAddr": "0x4015a0",
            "decompiledFuncCode": "int64_t sub_401596()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4015a6",
            "funcStartAddr": "0x4015a6",
            "funcEndAddr": "0x4015b0",
            "decompiledFuncCode": "int64_t sub_4015a6()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4015b6",
            "funcStartAddr": "0x4015b6",
            "funcEndAddr": "0x4015c0",
            "decompiledFuncCode": "int64_t sub_4015b6()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4015c6",
            "funcStartAddr": "0x4015c6",
            "funcEndAddr": "0x4015d0",
            "decompiledFuncCode": "int64_t sub_4015c6()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4015d6",
            "funcStartAddr": "0x4015d6",
            "funcEndAddr": "0x4015e0",
            "decompiledFuncCode": "int64_t sub_4015d6()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4015e6",
            "funcStartAddr": "0x4015e6",
            "funcEndAddr": "0x4015f0",
            "decompiledFuncCode": "int64_t sub_4015e6()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4015f6",
            "funcStartAddr": "0x4015f6",
            "funcEndAddr": "0x401600",
            "decompiledFuncCode": "int64_t sub_4015f6()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401606",
            "funcStartAddr": "0x401606",
            "funcEndAddr": "0x401610",
            "decompiledFuncCode": "int64_t sub_401606()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401616",
            "funcStartAddr": "0x401616",
            "funcEndAddr": "0x401620",
            "decompiledFuncCode": "int64_t sub_401616()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401626",
            "funcStartAddr": "0x401626",
            "funcEndAddr": "0x401630",
            "decompiledFuncCode": "int64_t sub_401626()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401636",
            "funcStartAddr": "0x401636",
            "funcEndAddr": "0x401640",
            "decompiledFuncCode": "int64_t sub_401636()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401646",
            "funcStartAddr": "0x401646",
            "funcEndAddr": "0x401650",
            "decompiledFuncCode": "int64_t sub_401646()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401656",
            "funcStartAddr": "0x401656",
            "funcEndAddr": "0x401660",
            "decompiledFuncCode": "int64_t sub_401656()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401666",
            "funcStartAddr": "0x401666",
            "funcEndAddr": "0x401670",
            "decompiledFuncCode": "int64_t sub_401666()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401676",
            "funcStartAddr": "0x401676",
            "funcEndAddr": "0x401680",
            "decompiledFuncCode": "int64_t sub_401676()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401686",
            "funcStartAddr": "0x401686",
            "funcEndAddr": "0x401690",
            "decompiledFuncCode": "int64_t sub_401686()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401696",
            "funcStartAddr": "0x401696",
            "funcEndAddr": "0x4016a0",
            "decompiledFuncCode": "int64_t sub_401696()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4016a6",
            "funcStartAddr": "0x4016a6",
            "funcEndAddr": "0x4016b0",
            "decompiledFuncCode": "int64_t sub_4016a6()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4016b6",
            "funcStartAddr": "0x4016b6",
            "funcEndAddr": "0x4016c0",
            "decompiledFuncCode": "int64_t sub_4016b6()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4016c6",
            "funcStartAddr": "0x4016c6",
            "funcEndAddr": "0x4016d0",
            "decompiledFuncCode": "int64_t sub_4016c6()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4016d6",
            "funcStartAddr": "0x4016d6",
            "funcEndAddr": "0x4016e0",
            "decompiledFuncCode": "int64_t sub_4016d6()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4016e6",
            "funcStartAddr": "0x4016e6",
            "funcEndAddr": "0x4016f0",
            "decompiledFuncCode": "int64_t sub_4016e6()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4016f6",
            "funcStartAddr": "0x4016f6",
            "funcEndAddr": "0x401700",
            "decompiledFuncCode": "int64_t sub_4016f6()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401706",
            "funcStartAddr": "0x401706",
            "funcEndAddr": "0x401710",
            "decompiledFuncCode": "int64_t sub_401706()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401716",
            "funcStartAddr": "0x401716",
            "funcEndAddr": "0x401720",
            "decompiledFuncCode": "int64_t sub_401716()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401726",
            "funcStartAddr": "0x401726",
            "funcEndAddr": "0x401730",
            "decompiledFuncCode": "int64_t sub_401726()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401736",
            "funcStartAddr": "0x401736",
            "funcEndAddr": "0x401740",
            "decompiledFuncCode": "int64_t sub_401736()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401746",
            "funcStartAddr": "0x401746",
            "funcEndAddr": "0x401750",
            "decompiledFuncCode": "int64_t sub_401746()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401756",
            "funcStartAddr": "0x401756",
            "funcEndAddr": "0x401760",
            "decompiledFuncCode": "int64_t sub_401756()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401766",
            "funcStartAddr": "0x401766",
            "funcEndAddr": "0x401770",
            "decompiledFuncCode": "int64_t sub_401766()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401776",
            "funcStartAddr": "0x401776",
            "funcEndAddr": "0x401780",
            "decompiledFuncCode": "int64_t sub_401776()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401786",
            "funcStartAddr": "0x401786",
            "funcEndAddr": "0x401790",
            "decompiledFuncCode": "int64_t sub_401786()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401796",
            "funcStartAddr": "0x401796",
            "funcEndAddr": "0x4017a0",
            "decompiledFuncCode": "int64_t sub_401796()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4017a6",
            "funcStartAddr": "0x4017a6",
            "funcEndAddr": "0x4017b0",
            "decompiledFuncCode": "int64_t sub_4017a6()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4017b6",
            "funcStartAddr": "0x4017b6",
            "funcEndAddr": "0x4017c0",
            "decompiledFuncCode": "int64_t sub_4017b6()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4017c6",
            "funcStartAddr": "0x4017c6",
            "funcEndAddr": "0x4017d0",
            "decompiledFuncCode": "int64_t sub_4017c6()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4017d6",
            "funcStartAddr": "0x4017d6",
            "funcEndAddr": "0x4017e0",
            "decompiledFuncCode": "int64_t sub_4017d6()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4017e6",
            "funcStartAddr": "0x4017e6",
            "funcEndAddr": "0x4017f0",
            "decompiledFuncCode": "int64_t sub_4017e6()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401806",
            "funcStartAddr": "0x401806",
            "funcEndAddr": "0x401810",
            "decompiledFuncCode": "int64_t sub_401806()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401826",
            "funcStartAddr": "0x401826",
            "funcEndAddr": "0x401830",
            "decompiledFuncCode": "int64_t sub_401826()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401836",
            "funcStartAddr": "0x401836",
            "funcEndAddr": "0x401840",
            "decompiledFuncCode": "int64_t sub_401836()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401846",
            "funcStartAddr": "0x401846",
            "funcEndAddr": "0x401850",
            "decompiledFuncCode": "int64_t sub_401846()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401856",
            "funcStartAddr": "0x401856",
            "funcEndAddr": "0x401860",
            "decompiledFuncCode": "int64_t sub_401856()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401866",
            "funcStartAddr": "0x401866",
            "funcEndAddr": "0x401870",
            "decompiledFuncCode": "int64_t sub_401866()\n{\n    int64_t var_8 = 0x2f;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401876",
            "funcStartAddr": "0x401876",
            "funcEndAddr": "0x401880",
            "decompiledFuncCode": "int64_t sub_401876()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401886",
            "funcStartAddr": "0x401886",
            "funcEndAddr": "0x401890",
            "decompiledFuncCode": "int64_t sub_401886()\n{\n    int64_t var_8 = 0x31;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401896",
            "funcStartAddr": "0x401896",
            "funcEndAddr": "0x4018a0",
            "decompiledFuncCode": "int64_t sub_401896()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4018a6",
            "funcStartAddr": "0x4018a6",
            "funcEndAddr": "0x4018b0",
            "decompiledFuncCode": "int64_t sub_4018a6()\n{\n    int64_t var_8 = 0x33;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4018b6",
            "funcStartAddr": "0x4018b6",
            "funcEndAddr": "0x4018c0",
            "decompiledFuncCode": "int64_t sub_4018b6()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4018c6",
            "funcStartAddr": "0x4018c6",
            "funcEndAddr": "0x4018d0",
            "decompiledFuncCode": "int64_t sub_4018c6()\n{\n    int64_t var_8 = 0x35;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4018d6",
            "funcStartAddr": "0x4018d6",
            "funcEndAddr": "0x4018e0",
            "decompiledFuncCode": "int64_t sub_4018d6()\n{\n    int64_t var_8 = 0x36;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4018e6",
            "funcStartAddr": "0x4018e6",
            "funcEndAddr": "0x4018f0",
            "decompiledFuncCode": "int64_t sub_4018e6()\n{\n    int64_t var_8 = 0x37;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401906",
            "funcStartAddr": "0x401906",
            "funcEndAddr": "0x401910",
            "decompiledFuncCode": "int64_t sub_401906()\n{\n    int64_t var_8 = 0x39;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x401940",
            "funcEndAddr": "0x402869",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    uint64_t r14 = 0;\n    void* r13 = nullptr;\n    uint64_t r12 = 0xffffffff;\n    uint64_t rbp = argc;\n    char** rbx = argv;\n    char* rdi = *argv;\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_407930(rdi);\n    int32_t var_148;\n    int32_t var_140;\n    setlocale(6, &data_40d52c[0x1b], rdx, rcx, r8, r9, var_148, var_140);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    sub_40b500(sub_403080);\n    setvbuf(stdout, nullptr, 1, 0);\n    while (true)\n    {\n        int32_t rax_1 = getopt_long(rbp, rbx, \"bctw\", &data_40c0c0, nullptr);\n        if (rax_1 == 0xffffffff)\n        {\n            data_60f2e8 = 0x82;\n            data_60f2e0 = 0x80;\n            char const* const rsi_1;\n            if ((r12 == 0 && r14 != 0))\n            {\n                rsi_1 = \"--tag does not support --text mo\u2026\";\n            }\n            if ((r12 != 0 || (r12 == 0 && r14 == 0)))\n            {\n                if (r13 != 0)\n                {\n                    rsi_1 = \"the --tag option is meaningless \u2026\";\n                }\n                if ((r13 == 0 || (r13 != 0 && r14 == 0)))\n                {\n                    rsi_1 = \"the --binary and --text options \u2026\";\n                    if ((r13 & ((!r12) >> 0x1f)) == 0)\n                    {\n                        if (data_60f2da != 0)\n                        {\n                            goto label_401df8;\n                        }\n                        if (data_60f2dc != 0)\n                        {\n                            rsi_1 = \"the --status option is meaningfu\u2026\";\n                            if (r13 != 0)\n                            {\n                                goto label_401bb6;\n                            }\n                        }\n                        else if (data_60f2db == 0)\n                        {\n                            while (true)\n                            {\n                                if (data_60f2d9 == 1)\n                                {\n                                    rsi_1 = \"the --quiet option is meaningful\u2026\";\n                                    if (r13 == 0)\n                                    {\n                                        break;\n                                    }\n                                }\n                                void* var_148_1;\n                                uint64_t var_140_1;\n                                void* var_110_1;\n                                char var_100_1;\n                                char var_fe_1;\n                                char var_fd_1;\n                                void var_d8;\n                                int32_t rax_12;\n                                char rbx_5;\n                                while (true)\n                                {\n                                    if (data_60f2d8 != 0)\n                                    {\n                                        rsi_1 = \"the --strict option is meaningfu\u2026\";\n                                        if (r13 == 0)\n                                        {\n                                            break;\n                                        }\n                                    }\n                                label_401bdb:\n                                    if (r12 == 0xffffffff)\n                                    {\n                                        r12 = 0;\n                                    }\n                                    var_110_1 = &rbx[rbp];\n                                    int64_t rax_8 = data_60f29c;\n                                    if (rax_8 == rbp)\n                                    {\n                                        *var_110_1 = &data_40d52a;\n                                        var_110_1 = (var_110_1 + 8);\n                                    }\n                                    void* rax_9 = &rbx[rax_8];\n                                    var_148_1 = rax_9;\n                                    if (var_110_1 <= rax_9)\n                                    {\n                                        var_100_1 = 1;\n                                        goto label_4021c5;\n                                    }\n                                    var_100_1 = 1;\n                                    char var_135_1 = r13;\n                                    var_fe_1 = r14;\n                                    rax_12 = (((rax_9 - rax_9) & 0xfffffff6) + 0x2a);\n                                    var_fd_1 = rax_12;\n                                label_401c59:\n                                    uint64_t rdi_6 = *var_148_1;\n                                    var_140_1 = rdi_6;\n                                    void var_88;\n                                    if (var_135_1 == 0)\n                                    {\n                                        if (sub_402af0(var_140_1, &var_d8, &var_88) != 0)\n                                        {\n                                            char* rax_56 = strchr(var_140_1, 0x5c);\n                                            char* rax_81;\n                                            if (rax_56 == 0)\n                                            {\n                                                rax_81 = strchr(var_140_1, 0xa);\n                                                if (rax_81 == 0)\n                                                {\n                                                    rbx_5 = 0;\n                                                    if ((var_fe_1 == 0 && (data_60f2e0 >> 1) == 0))\n                                                    {\n                                                        goto label_402371;\n                                                    }\n                                                }\n                                            }\n                                            if (((rax_56 != 0 || (rax_56 == 0 && rax_81 != 0)) && var_fe_1 != 0))\n                                            {\n                                                uint64_t* const rdi_36 = stdout;\n                                                char* rax_100 = stdout[5];\n                                                if (stdout[6] <= rax_100)\n                                                {\n                                                    rbx_5 = 1;\n                                                    __overflow(rdi_36, 0x5c);\n                                                }\n                                                else\n                                                {\n                                                    rbx_5 = 1;\n                                                    stdout[5] = &rax_100[1];\n                                                    *rax_100 = 0x5c;\n                                                }\n                                            }\n                                            if ((((rax_56 == 0 && rax_81 == 0) && var_fe_1 != 0) || ((rax_56 != 0 || (rax_56 == 0 && rax_81 != 0)) && var_fe_1 != 0)))\n                                            {\n                                                fwrite_unlocked(\"SHA512\", 1, 6, stdout);\n                                                fwrite_unlocked(&data_40b6a8, 1, 2, stdout);\n                                                sub_402a40(var_140_1, rbx_5);\n                                                fwrite_unlocked(\") = \", 1, 4, stdout);\n                                                if ((data_60f2e0 >> 1) == 0)\n                                                {\n                                                    goto label_402339;\n                                                }\n                                            }\n                                            if (((rax_56 != 0 || (rax_56 == 0 && rax_81 != 0)) && var_fe_1 == 0))\n                                            {\n                                                uint64_t* const rdi_22 = stdout;\n                                                char* rax_57 = stdout[5];\n                                                if (rax_57 >= stdout[6])\n                                                {\n                                                    __overflow(rdi_22, 0x5c);\n                                                }\n                                                else\n                                                {\n                                                    stdout[5] = &rax_57[1];\n                                                    *rax_57 = 0x5c;\n                                                }\n                                                rbx_5 = 1;\n                                                if ((data_60f2e0 >> 1) == 0)\n                                                {\n                                                    goto label_402371;\n                                                }\n                                            }\n                                            rbp = 0;\n                                            break;\n                                        }\n                                        var_100_1 = 0;\n                                        goto label_4021b1;\n                                    }\n                                    int32_t rax_14 = strcmp(rdi_6, &data_40d52a);\n                                    char rax_38;\n                                    FILE* rax_52;\n                                    if (rax_14 != 0)\n                                    {\n                                        rax_52 = sub_407890(var_140_1, \"r\");\n                                        rbp = rax_52;\n                                        if (rax_52 == 0)\n                                        {\n                                        label_402265:\n                                            error(0, *__errno_location(), \"%s\", sub_4093d0(0, 3, var_140_1));\n                                            rax_38 = 0;\n                                        }\n                                    }\n                                    else\n                                    {\n                                        data_60f2f0 = 1;\n                                        rbp = stdin;\n                                        var_140_1 = dcgettext(nullptr, \"standard input\", 5);\n                                    }\n                                    if ((rax_14 == 0 || (rax_14 != 0 && rax_52 != 0)))\n                                    {\n                                        char var_ff_1 = 0;\n                                        r14 = 0;\n                                        r12 = 0;\n                                        int64_t rbx_1 = 1;\n                                        char* var_e8 = nullptr;\n                                        uint64_t var_e0 = 0;\n                                        uint64_t var_108_1 = 0;\n                                        uint64_t var_130_1 = 0;\n                                    label_401cea:\n                                        ssize_t rax_16 = __getdelim(&var_e8, &var_e0, 0xa, rbp);\n                                        if (rax_16 > 0)\n                                        {\n                                            char* r15_1 = var_e8;\n                                            char rcx_3 = *r15_1;\n                                            int64_t rdx_1;\n                                            ssize_t r8_2;\n                                            if (rcx_3 != 0x23)\n                                            {\n                                                r8_2 = rax_16;\n                                                if (r15_1[(rax_16 - 1)] == 0xa)\n                                                {\n                                                    r8_2 = (r8_2 - 1);\n                                                    r15_1[r8_2] = 0;\n                                                    r15_1 = var_e8;\n                                                    rcx_3 = *r15_1;\n                                                }\n                                                rdx_1 = 0;\n                                                if (rcx_3 != 0x20)\n                                                {\n                                                label_401d3e:\n                                                }\n                                            }\n                                            if ((rcx_3 == 0x20 || rcx_3 == 9))\n                                            {\n                                            label_401d30:\n                                                rdx_1 = (rdx_1 + 1);\n                                                rcx_3 = r15_1[rdx_1];\n                                                if (rcx_3 != 0x20)\n                                                {\n                                                    goto label_401d3e;\n                                                }\n                                                goto label_401d30;\n                                            }\n                                            int64_t rax_21;\n                                            if (((rcx_3 != 0x20 && rcx_3 != 0x23) && rcx_3 != 9))\n                                            {\n                                                char r10_1 = 0;\n                                                bool c_2 = rcx_3 < 0x5c;\n                                                bool z_1 = rcx_3 == 0x5c;\n                                                if (z_1)\n                                                {\n                                                    r10_1 = var_135_1;\n                                                    int64_t temp2_1 = rdx_1;\n                                                    rdx_1 = (rdx_1 + 1);\n                                                    c_2 = temp2_1 >= -1;\n                                                    z_1 = temp2_1 == -1;\n                                                }\n                                                r13 = &r15_1[rdx_1];\n                                                char const* const rdi_8 = \"SHA512\";\n                                                int64_t rcx_4 = 6;\n                                                void* rsi_3 = r13;\n                                            label_401d66:\n                                                if (rcx_4 != 0)\n                                                {\n                                                    char temp3_1 = *rsi_3;\n                                                    char const temp4_1 = *rdi_8;\n                                                    c_2 = temp3_1 < temp4_1;\n                                                    z_1 = temp3_1 == temp4_1;\n                                                    rsi_3 = (rsi_3 + 1);\n                                                    rdi_8 = &rdi_8[1];\n                                                    rcx_4 = (rcx_4 - 1);\n                                                    if (z_1)\n                                                    {\n                                                        goto label_401d66;\n                                                    }\n                                                }\n                                                rax_16 = ((!z_1) && (!c_2));\n                                                rax_16 = (rax_16 - 0);\n                                                char rax_24;\n                                                uint64_t rax_70;\n                                                int32_t rcx_10;\n                                                ssize_t r15_2;\n                                                if (rax_16 != 0)\n                                                {\n                                                    rax_21 = *r13 == 0x5c;\n                                                    if ((r8_2 - rdx_1) >= (rax_21 + data_60f2e8))\n                                                    {\n                                                        int64_t rdx_4 = (rdx_1 + data_60f2e0);\n                                                        void* rcx_9 = &r15_1[rdx_4];\n                                                        char rax_23 = *rcx_9;\n                                                        if ((rax_23 != 0x20 && rax_23 != 9))\n                                                        {\n                                                            goto label_401d95;\n                                                        }\n                                                        *rcx_9 = 0;\n                                                        rax_24 = sub_402950(r13);\n                                                        if (rax_24 == 0)\n                                                        {\n                                                            goto label_401d95;\n                                                        }\n                                                        rcx_10 = data_60f210;\n                                                        int64_t rax_25 = (rdx_4 + 1);\n                                                        if ((r8_2 - rax_25) != 1)\n                                                        {\n                                                            char rsi_6 = r15_1[(rdx_4 + 1)];\n                                                            if ((rsi_6 == 0x20 || rsi_6 == 0x2a))\n                                                            {\n                                                                if (rcx_10 == 1)\n                                                                {\n                                                                    goto label_401ebe;\n                                                                }\n                                                                data_60f210 = 0;\n                                                                rax_25 = (rdx_4 + 2);\n                                                                goto label_401ebe;\n                                                            }\n                                                        }\n                                                        if (rcx_10 == 0)\n                                                        {\n                                                            goto label_401d95;\n                                                        }\n                                                        data_60f210 = 1;\n                                                    label_401ebe:\n                                                        r15_2 = &r15_1[rax_25];\n                                                        if (r10_1 != 0)\n                                                        {\n                                                            rax_70 = sub_4029b0(r15_2, (r8_2 - rax_25)) != 0;\n                                                        }\n                                                        else\n                                                        {\n                                                        label_401ece:\n                                                            bool c_3 = false;\n                                                            bool z_2 = (rax_14 & rax_14) == 0;\n                                                            if (z_2)\n                                                            {\n                                                                void* const rdi_10 = &data_40d52a;\n                                                                int64_t rcx_11 = 2;\n                                                                ssize_t rsi_7 = r15_2;\n                                                            label_401edf:\n                                                                if (rcx_11 != 0)\n                                                                {\n                                                                    char temp9_1 = *rsi_7;\n                                                                    char temp10_1 = *rdi_10;\n                                                                    c_3 = temp9_1 < temp10_1;\n                                                                    z_2 = temp9_1 == temp10_1;\n                                                                    rsi_7 = (rsi_7 + 1);\n                                                                    rdi_10 = (rdi_10 + 1);\n                                                                    rcx_11 = (rcx_11 - 1);\n                                                                    if (z_2)\n                                                                    {\n                                                                        goto label_401edf;\n                                                                    }\n                                                                }\n                                                                int32_t rax_26;\n                                                                rax_26 = ((!z_2) && (!c_3));\n                                                                rax_26 = (rax_26 - 0);\n                                                                if (rax_26 == 0)\n                                                                {\n                                                                    goto label_401d95;\n                                                                }\n                                                                goto label_401eee;\n                                                            }\n                                                        label_401eee:\n                                                            int32_t r14_1 = 0;\n                                                            if (data_60f2dc == 0)\n                                                            {\n                                                                r14_1 = strchr(r15_2, 0xa) != 0;\n                                                            }\n                                                            char var_e9;\n                                                            char rax_28 = sub_402af0(r15_2, &var_88, &var_e9);\n                                                            char r8_4 = rax_28;\n                                                            char const* const rsi_10;\n                                                            if (rax_28 == 0)\n                                                            {\n                                                                var_130_1 = (var_130_1 + 1);\n                                                                if (data_60f2dc == 0)\n                                                                {\n                                                                    if (r14_1 != 0)\n                                                                    {\n                                                                        uint64_t* const rdi_13 = stdout;\n                                                                        char* rax_29 = stdout[5];\n                                                                        if (rax_29 >= stdout[6])\n                                                                        {\n                                                                            __overflow(rdi_13, 0x5c);\n                                                                        }\n                                                                        else\n                                                                        {\n                                                                            stdout[5] = &rax_29[1];\n                                                                            *rax_29 = 0x5c;\n                                                                        }\n                                                                    }\n                                                                    sub_402a40(r15_2, r14_1);\n                                                                    rsi_10 = \"FAILED open or read\";\n                                                                    goto label_401f90;\n                                                                }\n                                                            }\n                                                            else if ((data_60f2da == 0 || (data_60f2da != 0 && var_e9 == 0)))\n                                                            {\n                                                                ssize_t rcx_14 = (data_60f2e0 >> 1);\n                                                                ssize_t var_128;\n                                                                char var_120;\n                                                                uint32_t rax_45;\n                                                                ssize_t rdx_11;\n                                                                uint32_t rsi_12;\n                                                                int32_t* rdi_16;\n                                                                if (rcx_14 == 0)\n                                                                {\n                                                                    rdx_11 = 0;\n                                                                }\n                                                                else\n                                                                {\n                                                                    var_120 = rcx_14;\n                                                                    var_128 = r8_4;\n                                                                    rdx_11 = 0;\n                                                                    r8_4 = var_128;\n                                                                    rcx_14 = var_120;\n                                                                    rdi_16 = *__ctype_tolower_loc();\n                                                                label_4020fa:\n                                                                    rax_45 = *(&var_88 + rdx_11);\n                                                                    rsi_12 = (rax_45 >> 4);\n                                                                    if ((rdi_16[*(r13 + (rdx_11 << 1))] != *\"0123456789abcdef\"[(rsi_12 & 0xf)] || (*(rdi_16 + (*(r13 + (rdx_11 << 1)) << 2)) == *((rsi_12 & 0xf) + \"0123456789abcdef\") && rdi_16[*((r13 + (rdx_11 << 1)) + 1)] != *\"0123456789abcdef\"[(rax_45 & 0xf)])))\n                                                                    {\n                                                                        var_108_1 = (var_108_1 + 1);\n                                                                        if (data_60f2dc == 0)\n                                                                        {\n                                                                            if (r14_1 != 0)\n                                                                            {\n                                                                                goto label_402136;\n                                                                            }\n                                                                        label_40215c:\n                                                                            var_120 = rdx_11;\n                                                                            sub_402a40(r15_2, r14_1);\n                                                                            if (rcx_14 != var_120)\n                                                                            {\n                                                                                rsi_10 = \"FAILED\";\n                                                                                goto label_401f90;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                    if ((*(rdi_16 + (*(r13 + (rdx_11 << 1)) << 2)) == *((rsi_12 & 0xf) + \"0123456789abcdef\") && *(rdi_16 + (*((r13 + (rdx_11 << 1)) + 1) << 2)) == *((rax_45 & 0xf) + \"0123456789abcdef\")))\n                                                                    {\n                                                                        rdx_11 = (rdx_11 + 1);\n                                                                        if (rcx_14 != rdx_11)\n                                                                        {\n                                                                            goto label_4020fa;\n                                                                        }\n                                                                        rdx_11 = rcx_14;\n                                                                    }\n                                                                }\n                                                                char rax_72;\n                                                                char rax_73;\n                                                                if ((rcx_14 == 0 || ((rcx_14 != 0 && *(rdi_16 + (*(r13 + (rdx_11 << 1)) << 2)) == *((rsi_12 & 0xf) + \"0123456789abcdef\")) && *(rdi_16 + (*((r13 + (rdx_11 << 1)) + 1) << 2)) == *((rax_45 & 0xf) + \"0123456789abcdef\"))))\n                                                                {\n                                                                    rax_72 = data_60f2dc;\n                                                                    var_ff_1 = rax_72;\n                                                                    if (rax_72 == 0)\n                                                                    {\n                                                                        rax_73 = data_60f2d9;\n                                                                        var_ff_1 = rax_73;\n                                                                        if (rax_73 == 0)\n                                                                        {\n                                                                            if (r14_1 != 0)\n                                                                            {\n                                                                                var_ff_1 = r8_4;\n                                                                            label_402136:\n                                                                                uint64_t* const rdi_17 = stdout;\n                                                                                char* rax_46 = stdout[5];\n                                                                                if (rax_46 >= stdout[6])\n                                                                                {\n                                                                                    var_120 = rdx_11;\n                                                                                    __overflow(rdi_17, 0x5c);\n                                                                                    rdx_11 = var_120;\n                                                                                }\n                                                                                else\n                                                                                {\n                                                                                    stdout[5] = &rax_46[1];\n                                                                                    *rax_46 = 0x5c;\n                                                                                }\n                                                                                goto label_40215c;\n                                                                            }\n                                                                            var_128 = r8_4;\n                                                                            sub_402a40(r15_2, 0);\n                                                                            var_ff_1 = var_128;\n                                                                        }\n                                                                    }\n                                                                }\n                                                                if ((((((rcx_14 == 0 || ((rcx_14 != 0 && *(rdi_16 + (*(r13 + (rdx_11 << 1)) << 2)) == *((rsi_12 & 0xf) + \"0123456789abcdef\")) && *(rdi_16 + (*((r13 + (rdx_11 << 1)) + 1) << 2)) == *((rax_45 & 0xf) + \"0123456789abcdef\"))) && rax_72 == 0) && rax_73 == 0) || ((rcx_14 != 0 && (*(rdi_16 + (*(r13 + (rdx_11 << 1)) << 2)) != *((rsi_12 & 0xf) + \"0123456789abcdef\") || (*(rdi_16 + (*(r13 + (rdx_11 << 1)) << 2)) == *((rsi_12 & 0xf) + \"0123456789abcdef\") && *(rdi_16 + (*((r13 + (rdx_11 << 1)) + 1) << 2)) != *((rax_45 & 0xf) + \"0123456789abcdef\")))) && data_60f2dc == 0)) && data_60f2d9 == 0))\n                                                                {\n                                                                    rsi_10 = &data_40b678;\n                                                                label_401f90:\n                                                                    __printf_chk(1, \": %s\\n\", dcgettext(nullptr, rsi_10, 5));\n                                                                }\n                                                            }\n                                                            r14 = var_135_1;\n                                                            if ((*rbp & 0x30) == 0)\n                                                            {\n                                                                goto label_401db0;\n                                                            }\n                                                        }\n                                                    }\n                                                    else\n                                                    {\n                                                    label_401d95:\n                                                        r12 = (r12 + 1);\n                                                        if (data_60f2db != 0)\n                                                        {\n                                                            error(0, 0, dcgettext(nullptr, \"%s: %lu: improperly formatted %s\u2026\", 5), sub_4093d0(0, 3, var_140_1), rbx_1, \"SHA512\", var_148_1, var_140_1);\n                                                        }\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    char rax_17 = r15_1[(rdx_1 + 6)];\n                                                    int64_t rcx_5 = (rdx_1 + 6);\n                                                    if (rax_17 == 0x20)\n                                                    {\n                                                        rax_17 = r15_1[(rdx_1 + 7)];\n                                                        rcx_5 = (rdx_1 + 7);\n                                                    }\n                                                    if (rax_17 != 0x28)\n                                                    {\n                                                        goto label_401d95;\n                                                    }\n                                                    int64_t rcx_16 = (rcx_5 + 1);\n                                                    int64_t r8_6 = (r8_2 - rcx_16);\n                                                    if (r8_2 == rcx_16)\n                                                    {\n                                                        goto label_401d95;\n                                                    }\n                                                    r15_2 = &r15_1[rcx_16];\n                                                    void* r11_2 = (r8_6 - 1);\n                                                    ssize_t rdx_14;\n                                                    void* temp8_1;\n                                                    if (r8_6 != 1)\n                                                    {\n                                                        if (*((r15_2 + r8_6) - 1) != 0x29)\n                                                        {\n                                                        label_402223:\n                                                            temp8_1 = r11_2;\n                                                            r11_2 = (r11_2 - 1);\n                                                            if ((temp8_1 != 1 && *(r15_2 + r11_2) != 0x29))\n                                                            {\n                                                                goto label_402223;\n                                                            }\n                                                        }\n                                                        if ((*((r15_2 + r8_6) - 1) == 0x29 || (*((r15_2 + r8_6) - 1) != 0x29 && temp8_1 != 1)))\n                                                        {\n                                                            rdx_14 = (r15_2 + r11_2);\n                                                        }\n                                                    }\n                                                    if (((r8_6 == 1 || ((r8_6 != 1 && *((r15_2 + r8_6) - 1) != 0x29) && temp8_1 == 1)) && *r15_2 == 0x29))\n                                                    {\n                                                        rdx_14 = r15_2;\n                                                        r11_2 = nullptr;\n                                                    }\n                                                    if ((((r8_6 == 1 || ((r8_6 != 1 && *((r15_2 + r8_6) - 1) != 0x29) && temp8_1 == 1)) && *r15_2 == 0x29) || (r8_6 != 1 && (*((r15_2 + r8_6) - 1) == 0x29 || (*((r15_2 + r8_6) - 1) != 0x29 && temp8_1 != 1)))))\n                                                    {\n                                                        if (r10_1 != 0)\n                                                        {\n                                                            if (sub_4029b0(r15_2, r11_2) == 0)\n                                                            {\n                                                                goto label_401d95;\n                                                            }\n                                                            goto label_4023d4;\n                                                        }\n                                                    label_4023d4:\n                                                        *rdx_14 = 0;\n                                                        char rdx_21 = *((r15_2 + r11_2) + 1);\n                                                        void* rax_68 = (r11_2 + 1);\n                                                        if ((rdx_21 == 9 || rdx_21 == 0x20))\n                                                        {\n                                                        label_4023f0:\n                                                            rax_68 = (rax_68 + 1);\n                                                            rdx_21 = *(r15_2 + rax_68);\n                                                            if (rdx_21 == 0x20)\n                                                            {\n                                                                goto label_4023f0;\n                                                            }\n                                                            if (rdx_21 == 9)\n                                                            {\n                                                                goto label_4023f0;\n                                                            }\n                                                        }\n                                                        if (rdx_21 != 0x3d)\n                                                        {\n                                                            goto label_401d95;\n                                                        }\n                                                        r13 = ((r15_2 + rax_68) + 1);\n                                                        char rdx_22 = *r13;\n                                                        if ((rdx_22 == 0x20 || rdx_22 == 9))\n                                                        {\n                                                            void* rax_69 = ((r15_2 + rax_68) + 2);\n                                                        label_402425:\n                                                            char rdx_23 = *rax_69;\n                                                            r13 = rax_69;\n                                                            rax_69 = (rax_69 + 1);\n                                                            if (rdx_23 == 0x20)\n                                                            {\n                                                                goto label_402425;\n                                                            }\n                                                            if (rdx_23 == 9)\n                                                            {\n                                                                goto label_402425;\n                                                            }\n                                                        }\n                                                        rax_70 = sub_402950(r13);\n                                                    }\n                                                    if (((r8_6 == 1 || ((r8_6 != 1 && *((r15_2 + r8_6) - 1) != 0x29) && temp8_1 == 1)) && *r15_2 != 0x29))\n                                                    {\n                                                        goto label_401d95;\n                                                    }\n                                                }\n                                                if ((((((rax_16 != 0 && (r8_2 - rdx_1) >= (rax_21 + data_60f2e8)) && rax_24 != 0) && rcx_10 != 0) && r10_1 != 0) || rax_16 == 0))\n                                                {\n                                                    if (rax_70 == 0)\n                                                    {\n                                                        goto label_401d95;\n                                                    }\n                                                    goto label_401ece;\n                                                }\n                                            }\n                                            if (((rcx_3 == 0x23 || ((((rcx_3 != 0x23 && rcx_3 != 0x20) && rcx_3 != 9) && rax_16 != 0) && (r8_2 - rdx_1) < (rax_21 + data_60f2e8))) && (*rbp & 0x30) == 0))\n                                            {\n                                            label_401db0:\n                                                int64_t temp1_1 = rbx_1;\n                                                rbx_1 = (rbx_1 + 1);\n                                                if (temp1_1 != -1)\n                                                {\n                                                    goto label_401cea;\n                                                }\n                                                rbx = sub_4093d0(0, 3, var_140_1);\n                                                error(1, 0, dcgettext(nullptr, \"%s: too many checksum lines\", 5), rbx);\n                                            label_401df8:\n                                                rsi_1 = \"the --ignore-missing option is m\u2026\";\n                                                if (r13 == 0)\n                                                {\n                                                    break;\n                                                }\n                                            label_401bb6:\n                                                if (data_60f2db != 0)\n                                                {\n                                                    goto label_401bdb;\n                                                }\n                                                continue;\n                                            }\n                                        }\n                                        free(var_e8);\n                                        uint32_t rbx_3 = (*rbp & 0x20);\n                                        if (rbx_3 != 0)\n                                        {\n                                            error(0, 0, dcgettext(nullptr, \"%s: read error\", 5), sub_4093d0(0, 3, var_140_1));\n                                            rax_38 = 0;\n                                        }\n                                        else\n                                        {\n                                            if ((rax_14 != 0 && sub_409db0(rbp) != 0))\n                                            {\n                                                goto label_402265;\n                                            }\n                                            if (r14 == 0)\n                                            {\n                                                rbp = sub_4093d0(0, 3, var_140_1);\n                                                error(0, 0, dcgettext(nullptr, \"%s: no properly formatted %s che\u2026\", 5), rbp, \"SHA512\");\n                                            }\n                                            else\n                                            {\n                                                if (data_60f2dc == 0)\n                                                {\n                                                    if (r12 != 0)\n                                                    {\n                                                        error(0, 0, dcngettext(nullptr, \"WARNING: %lu line is improperly \u2026\", \"WARNING: %lu lines are improperl\u2026\", r12, 5), r12);\n                                                    }\n                                                    if (var_130_1 != 0)\n                                                    {\n                                                        r14 = var_130_1;\n                                                        error(0, 0, dcngettext(nullptr, \"WARNING: %lu listed file could n\u2026\", \"WARNING: %lu listed files could \u2026\", r14, 5), r14);\n                                                    }\n                                                    if (var_108_1 != 0)\n                                                    {\n                                                        r14 = var_108_1;\n                                                        error(0, 0, dcngettext(nullptr, \"WARNING: %lu computed checksum d\u2026\", \"WARNING: %lu computed checksums \u2026\", r14, 5), r14);\n                                                    }\n                                                    if ((data_60f2da != 0 && var_ff_1 == 0))\n                                                    {\n                                                        rbp = sub_4093d0(0, 3, var_140_1);\n                                                        error(0, 0, dcgettext(nullptr, \"%s: no file was verified\", 5), rbp);\n                                                    }\n                                                }\n                                                if (((((data_60f2dc != 0 || (data_60f2dc == 0 && data_60f2da == 0)) && var_ff_1 != 0) || ((data_60f2dc == 0 && data_60f2da != 0) && var_ff_1 != 0)) && (var_130_1 | var_108_1) == 0))\n                                                {\n                                                    rbx_3 = r12 == 0;\n                                                    rbx_3 = ((data_60f2d8 ^ 1) | rbx_3);\n                                                }\n                                            }\n                                            rax_38 = (rbx_3 & 1);\n                                        }\n                                    }\n                                    var_100_1 = (var_100_1 & rax_38);\n                                    goto label_4021b1;\n                                }\n                                if ((/* if (unimplemented  {cmp byte [rel &data_60f2d8], 0x0} && r13.b == 0)... */ && r13 == 0))\n                                {\n                                    break;\n                                }\n                                do\n                                {\n                                    uint64_t rdx_17 = *(&var_d8 + rbp);\n                                    rbp = (rbp + 1);\n                                    __printf_chk(1, \"%02x\", rdx_17);\n                                } while ((data_60f2e0 >> 1) > rbp);\n                            label_402339:\n                                if (var_fe_1 == 0)\n                                {\n                                label_402371:\n                                    uint64_t* const rdi_24 = stdout;\n                                    char* rax_66 = stdout[5];\n                                    if (rax_66 >= stdout[6])\n                                    {\n                                        __overflow(rdi_24, 0x20);\n                                    }\n                                    else\n                                    {\n                                        stdout[5] = &rax_66[1];\n                                        *rax_66 = 0x20;\n                                    }\n                                    uint64_t* const rdi_25 = stdout;\n                                    char* rax_67 = stdout[5];\n                                    if (rax_67 >= stdout[6])\n                                    {\n                                        __overflow(rdi_25, rax_12);\n                                    }\n                                    else\n                                    {\n                                        stdout[5] = &rax_67[1];\n                                        *rax_67 = var_fd_1;\n                                    }\n                                    sub_402a40(var_140_1, rbx_5);\n                                }\n                                uint64_t* const rdi_23 = stdout;\n                                char* rax_63 = stdout[5];\n                                if (rax_63 >= stdout[6])\n                                {\n                                    __overflow(rdi_23, 0xa);\n                                }\n                                else\n                                {\n                                    stdout[5] = &rax_63[1];\n                                    *rax_63 = 0xa;\n                                }\n                            label_4021b1:\n                                var_148_1 = (var_148_1 + 8);\n                                if (var_110_1 > var_148_1)\n                                {\n                                    goto label_401c59;\n                                }\n                            label_4021c5:\n                                if ((data_60f2f0 != 0 && sub_409db0(stdin) == 0xffffffff))\n                                {\n                                    rbx = dcgettext(nullptr, \"standard input\", 5);\n                                    error(1, *__errno_location(), rbx);\n                                    continue;\n                                }\n                                return (var_100_1 ^ 1);\n                            }\n                        }\n                        else\n                        {\n                            rsi_1 = \"the --warn option is meaningful \u2026\";\n                            if (r13 != 0)\n                            {\n                                goto label_401bdb;\n                            }\n                        }\n                    }\n                }\n            }\n            error(0, 0, dcgettext(nullptr, rsi_1, 5));\n            break;\n        }\n        bool cond:0_1 = rax_1 <= 0x77;\n        if (rax_1 == 0x77)\n        {\n            data_60f2dc = 0;\n            data_60f2db = 1;\n            data_60f2d9 = 0;\n        }\n        else\n        {\n            if (cond:0_1)\n            {\n                bool cond:1_1 = rax_1 <= 0x62;\n                if (rax_1 != 0x62)\n                {\n                    if (cond:1_1)\n                    {\n                        if (rax_1 == 0xffffff7d)\n                        {\n                            int64_t var_150 = 0;\n                            char const* const var_158 = \"David Madore\";\n                            sub_4099e0(stdout, \"sha512sum\", \"GNU coreutils\", data_60f218);\n                            exit(0);\n                            /* no return */\n                        }\n                        if (rax_1 == 0xffffff7e)\n                        {\n                            sub_402c90(0);\n                            /* no return */\n                        }\n                        break;\n                    }\n                    if (rax_1 == 0x63)\n                    {\n                        r13 = 1;\n                        continue;\n                    }\n                    else\n                    {\n                        if (rax_1 != 0x74)\n                        {\n                            break;\n                        }\n                        r12 = 0;\n                        continue;\n                    }\n                }\n            }\n            else\n            {\n                bool cond:2_1 = rax_1 > 0x82;\n                if (rax_1 == 0x82)\n                {\n                    data_60f2dc = 0;\n                    data_60f2db = 0;\n                    data_60f2d9 = 1;\n                    continue;\n                }\n                else if (cond:2_1)\n                {\n                    if (rax_1 == 0x83)\n                    {\n                        data_60f2d8 = 1;\n                        continue;\n                    }\n                    else\n                    {\n                        if (rax_1 != 0x84)\n                        {\n                            break;\n                        }\n                        r14 = 1;\n                    }\n                }\n                else if (rax_1 == 0x80)\n                {\n                    data_60f2da = 1;\n                    continue;\n                }\n                else\n                {\n                    if (rax_1 != 0x81)\n                    {\n                        break;\n                    }\n                    data_60f2dc = 1;\n                    data_60f2db = 0;\n                    data_60f2d9 = 0;\n                    continue;\n                }\n            }\n            r12 = 1;\n        }\n    }\n    sub_402c90(1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x402870",
            "funcEndAddr": "0x40289a",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40289b",
            "funcStartAddr": "0x40289b",
            "funcEndAddr": "0x4028ba",
            "decompiledFuncCode": "void sub_40289b()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_4028ba",
            "funcStartAddr": "0x4028ba",
            "funcEndAddr": "0x4028f1",
            "decompiledFuncCode": "int64_t sub_4028ba()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_4028f1",
            "funcStartAddr": "0x4028f1",
            "funcEndAddr": "0x402948",
            "decompiledFuncCode": "void sub_4028f1()\n{\n    if (data_60f2c8 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_60f2d0;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_60f2d0 = (rax_1 + 1);\n        *(0x60ee40 + ((rax_1 + 1) << 3))();\n    }\n    sub_40289b();\n    data_60f2c8 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_402948",
            "funcStartAddr": "0x402948",
            "funcEndAddr": "0x40294d",
            "decompiledFuncCode": "int64_t j_sub_4028ba()\n{\n    /* tailcall */\n    return sub_4028ba();\n}\n\n"
        },
        {
            "funcName": "sub_402950",
            "funcStartAddr": "0x402950",
            "funcEndAddr": "0x4029ad",
            "decompiledFuncCode": "uint64_t sub_402950(char* arg1)\n{\n    char* rbx = arg1;\n    int64_t rbp = data_60f2e0;\n    uint64_t rax;\n    if (rbp != 0)\n    {\n        uint16_t* rcx_1 = *__ctype_b_loc();\n        rax = 0;\n        uint64_t rdx_1;\n        do\n        {\n            if ((*(&rcx_1[*rbx] + 1) & 0x10) == 0)\n            {\n                return 0;\n            }\n            rdx_1 = (rax + 1);\n            rbx = &rbx[1];\n            rax = rdx_1;\n        } while (rdx_1 < rbp);\n    }\n    rax = *rbx == 0;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4029b0",
            "funcStartAddr": "0x4029b0",
            "funcEndAddr": "0x402a31",
            "decompiledFuncCode": "char* sub_4029b0(char* arg1, void* arg2)\n{\n    void* rax = &arg1[1];\n    int64_t rdx = 0;\n    void* r8 = (arg2 - 1);\n    if (arg2 != 0)\n    {\n        char* r9_1;\n        while (true)\n        {\n            char rcx_1 = arg1[rdx];\n            if (rcx_1 != 0)\n            {\n                char rcx_2;\n                if (rcx_1 != 0x5c)\n                {\n                    *(rax - 1) = rcx_1;\n                    r9_1 = rax;\n                }\n                else if (r8 != rdx)\n                {\n                    rdx = (rdx + 1);\n                    rcx_2 = arg1[rdx];\n                    if (rcx_2 == 0x5c)\n                    {\n                        r9_1 = rax;\n                        *(rax - 1) = 0x5c;\n                    }\n                    if (rcx_2 == 0x6e)\n                    {\n                        r9_1 = rax;\n                        *(rax - 1) = 0xa;\n                    }\n                }\n                if (((rcx_1 != 0x5c || ((rcx_1 == 0x5c && r8 != rdx) && rcx_2 == 0x5c)) || ((rcx_1 == 0x5c && r8 != rdx) && rcx_2 == 0x6e)))\n                {\n                    rdx = (rdx + 1);\n                    rax = (rax + 1);\n                    if (arg2 <= rdx)\n                    {\n                        break;\n                    }\n                    continue;\n                }\n            }\n            return 0;\n        }\n        if (r9_1 < (arg2 + arg1))\n        {\n            *r9_1 = 0;\n        }\n    }\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_402a40",
            "funcStartAddr": "0x402a40",
            "funcEndAddr": "0x402ae5",
            "decompiledFuncCode": "void sub_402a40(char* arg1, char arg2)\n{\n    char* rbx = arg1;\n    if (arg2 == 0)\n    {\n        /* tailcall */\n        return fputs_unlocked(arg1, stdout);\n    }\n    while (true)\n    {\n        uint32_t rsi = *rbx;\n        if (rsi == 0)\n        {\n            break;\n        }\n        FILE* rcx_1 = stdout;\n        if (rsi == 0xa)\n        {\n            fwrite_unlocked(&data_40b564, 1, 2, rcx_1);\n        }\n        else if (rsi == 0x5c)\n        {\n            fwrite_unlocked(&data_40b567, 1, 2, rcx_1);\n        }\n        else\n        {\n            char* rax = stdout[5];\n            if (rax >= stdout[6])\n            {\n                __overflow(stdout, rsi);\n            }\n            else\n            {\n                stdout[5] = &rax[1];\n                *rax = rsi;\n            }\n        }\n        rbx = &rbx[1];\n    }\n}\n\n"
        },
        {
            "funcName": "sub_402af0",
            "funcStartAddr": "0x402af0",
            "funcEndAddr": "0x402c82",
            "decompiledFuncCode": "uint64_t sub_402af0(char* arg1, uint64_t* arg2, char* arg3)\n{\n    int64_t rcx = 2;\n    void* const rdi = &data_40d52a;\n    char* rsi = arg1;\n    int64_t __saved_rbx;\n    bool c = &__saved_rbx < 8;\n    bool z = &__saved_rbx == 8;\n    while (rcx != 0)\n    {\n        char temp1_1 = *rsi;\n        char temp2_1 = *rdi;\n        c = temp1_1 < temp2_1;\n        z = temp1_1 == temp2_1;\n        rsi = &rsi[1];\n        rdi = (rdi + 1);\n        rcx = (rcx - 1);\n        if ((!z))\n        {\n            break;\n        }\n    }\n    *arg3 = 0;\n    int32_t rax_1;\n    uint64_t* rax_3;\n    int32_t rax_4;\n    int32_t rax_5;\n    uint64_t* const rbx;\n    uint32_t r12_1;\n    if ((((!z) && (!c)) - 0) != 0)\n    {\n        rax_3 = sub_407890(arg1, \"r\");\n        rbx = rax_3;\n        if (rax_3 != 0)\n        {\n            sub_407860(rax_3, 2);\n            rax_4 = sub_407510(rbx, arg2);\n            if (rax_4 == 0)\n            {\n                rax_5 = sub_409db0(rbx);\n                if (rax_5 != 0)\n                {\n                    r12_1 = 0;\n                    error(0, *__errno_location(), \"%s\", sub_4093d0(0, 3, arg1));\n                }\n            }\n        }\n        else\n        {\n            int32_t* rax_12 = __errno_location();\n            r12_1 = data_60f2da;\n            if ((r12_1 == 0 || (r12_1 != 0 && *rax_12 != 2)))\n            {\n                r12_1 = 0;\n                error(0, *rax_12, \"%s\", sub_4093d0(0, 3, arg1));\n            }\n            if ((r12_1 != 0 && *rax_12 == 2))\n            {\n                *arg3 = 1;\n            }\n        }\n    }\n    else\n    {\n        rbx = stdin;\n        data_60f2f0 = 1;\n        sub_407860(stdin, 2);\n        rax_1 = sub_407510(stdin, arg2);\n    }\n    if ((((((!z) && (!c)) - 0) == 0 && rax_1 != 0) || (((((!z) && (!c)) - 0) != 0 && rax_3 != 0) && rax_4 != 0)))\n    {\n        r12_1 = 0;\n        error(0, *__errno_location(), \"%s\", sub_4093d0(0, 3, arg1));\n        if (stdin != rbx)\n        {\n            sub_409db0(rbx);\n        }\n    }\n    if ((((((!z) && (!c)) - 0) == 0 && rax_1 == 0) || ((((((!z) && (!c)) - 0) != 0 && rax_3 != 0) && rax_4 == 0) && rax_5 == 0)))\n    {\n        r12_1 = 1;\n    }\n    return r12_1;\n}\n\n"
        },
        {
            "funcName": "sub_402c90",
            "funcStartAddr": "0x402c90",
            "funcEndAddr": "0x40305d",
            "decompiledFuncCode": "int64_t sub_402c90(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_60f308;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [OPTION]... [FILE]...\\n\u2026\", 5), rbp, \"SHA512\", 0x200);\n        fputs_unlocked(dcgettext(nullptr, \"\\nWith no FILE, or when FILE is \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\n  -b, --binary         read in\u2026\", 5), stdout);\n        __printf_chk(1, dcgettext(nullptr, \"  -c, --check          read %s s\u2026\", 5), \"SHA512\");\n        fputs_unlocked(dcgettext(nullptr, \"      --tag            create a \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -t, --text           read in t\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nThe following five options are\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        __printf_chk(1, dcgettext(nullptr, \"\\nThe sums are computed as descr\u2026\", 5), \"FIPS-180-2\");\n        void* const var_88 = &data_40b586;\n        void* const* rax_15 = &var_88;\n        void* const var_78_1 = \"coreutils\";\n        void* const var_70_1 = \"Multi-call invocation\";\n        void* const var_68_1 = \"sha224sum\";\n        void* const var_60_1 = \"sha2 utilities\";\n        void* const var_58_1 = \"sha256sum\";\n        void* const var_50_1 = \"sha2 utilities\";\n        void* const var_48_1 = \"sha384sum\";\n        void* const var_40_1 = \"sha2 utilities\";\n        void* const var_38_1 = \"sha512sum\";\n        void* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_15 = &rax_15[2];\n            void* const rdi_9 = *rax_15;\n            c_1 = false;\n            z_1 = (rdi_9 & rdi_9) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_11 = \"sha512sum\";\n            int64_t rcx_2 = 0xa;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_11;\n                char temp1_1 = *rdi_9;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_11 = (rsi_11 + 1);\n                rdi_9 = (rdi_9 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbp_1 = rax_15[1];\n        char* rax_26;\n        int32_t rax_27;\n        void* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_5;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_26 = setlocale(5, nullptr, rdx_5, rcx_5, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_26 != 0)\n            {\n                rax_27 = strncmp(rax_26, &data_40b600, 3);\n                if (rax_27 != 0)\n                {\n                    rbp_1 = \"sha512sum\";\n                }\n            }\n            if ((rax_26 == 0 || (rax_26 != 0 && rax_27 == 0)))\n            {\n                rbp_1 = \"sha512sum\";\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"sha512sum\");\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_3;\n            uint64_t r8_1;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_18 = setlocale(5, nullptr, rdx_3, rcx_3, r8_1, r9_1, var_88, \"test invocation\");\n            if (rax_18 == 0)\n            {\n                goto label_402f50;\n            }\n            if (strncmp(rax_18, &data_40b600, 3) == 0)\n            {\n                goto label_402f50;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_26 != 0) && rax_27 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), \"sha512sum\");\n        label_402f50:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"sha512sum\");\n            if (rbp_1 != \"sha512sum\")\n            {\n                r12_1 = &data_40d52c[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_403060",
            "funcStartAddr": "0x403060",
            "funcEndAddr": "0x403068",
            "decompiledFuncCode": "int64_t sub_403060(int64_t arg1)\n{\n    data_60f300 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_403070",
            "funcStartAddr": "0x403070",
            "funcEndAddr": "0x403078",
            "decompiledFuncCode": "int64_t sub_403070(char arg1)\n{\n    data_60f2f8 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_403080",
            "funcStartAddr": "0x403080",
            "funcEndAddr": "0x40311e",
            "decompiledFuncCode": "void sub_403080(void* arg1)\n{\n    int32_t rax = sub_40ae60(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_60f2f8 == 0 || (data_60f2f8 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_60f300;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_4093a0(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_60f2f8 != 0) && *rax_1 == 0x20)) && sub_40ae60(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_60f220);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_403120",
            "funcStartAddr": "0x403120",
            "funcEndAddr": "0x4031a8",
            "decompiledFuncCode": "void sub_403120(int64_t* arg1)\n{\n    arg1[9] = 0;\n    *arg1 = 0x6a09e667f3bcc908;\n    arg1[1] = -0x4498517a7b3558c5;\n    arg1[2] = 0x3c6ef372fe94f82b;\n    arg1[3] = -0x5ab00ac5a0e2c90f;\n    arg1[4] = 0x510e527fade682d1;\n    arg1[5] = -0x64fa9773d4c193e1;\n    arg1[6] = 0x1f83d9abfb41bd6b;\n    arg1[7] = 0x5be0cd19137e2179;\n    arg1[8] = 0;\n    arg1[0xa] = 0;\n}\n\n"
        },
        {
            "funcName": "sub_4031b0",
            "funcStartAddr": "0x4031b0",
            "funcEndAddr": "0x403238",
            "decompiledFuncCode": "void sub_4031b0(int64_t* arg1)\n{\n    arg1[9] = 0;\n    *arg1 = -0x344462a23efa6128;\n    arg1[1] = 0x629a292a367cd507;\n    arg1[2] = -0x6ea6fea5cf8f22e9;\n    arg1[3] = 0x152fecd8f70e5939;\n    arg1[4] = 0x67332667ffc00b31;\n    arg1[5] = -0x714bb57897a7eaef;\n    arg1[6] = -0x24f3d1f29b067059;\n    arg1[7] = 0x47b5481dbefa4fa4;\n    arg1[8] = 0;\n    arg1[0xa] = 0;\n}\n\n"
        },
        {
            "funcName": "sub_403240",
            "funcStartAddr": "0x403240",
            "funcEndAddr": "0x40325e",
            "decompiledFuncCode": "uint64_t* sub_403240(int64_t* arg1, uint64_t* arg2)\n{\n    int64_t rdx = 0;\n    do\n    {\n        *(arg2 + rdx) = _bswap(*(arg1 + rdx));\n        rdx = (rdx + 8);\n    } while (rdx != 0x40);\n    return arg2;\n}\n\n"
        },
        {
            "funcName": "sub_403260",
            "funcStartAddr": "0x403260",
            "funcEndAddr": "0x40327e",
            "decompiledFuncCode": "uint64_t* sub_403260(int64_t* arg1, uint64_t* arg2)\n{\n    int64_t rdx = 0;\n    do\n    {\n        *(arg2 + rdx) = _bswap(*(arg1 + rdx));\n        rdx = (rdx + 8);\n    } while (rdx != 0x30);\n    return arg2;\n}\n\n"
        },
        {
            "funcName": "sub_403280",
            "funcStartAddr": "0x403280",
            "funcEndAddr": "0x406ece",
            "decompiledFuncCode": "int64_t sub_403280(int64_t* arg1, int64_t arg2, int64_t* arg3)\n{\n    void* rax_2 = ((arg2 & 0xfffffffffffffff8) + arg1);\n    bool c = (arg2 + arg3[8]) < arg2;\n    int64_t r13 = arg3[2];\n    int64_t rbp = arg3[3];\n    int64_t r9 = arg3[4];\n    int64_t* var_118 = arg1;\n    int64_t r8 = arg3[5];\n    int64_t rdi = arg3[1];\n    int64_t r10 = arg3[6];\n    int64_t rax_3 = *arg3;\n    int64_t r11 = arg3[7];\n    arg3[8] = (arg2 + arg3[8]);\n    arg3[9] = (arg3[9] + 0);\n    if (arg1 < rax_2)\n    {\n        int64_t var_e0_1 = r11;\n        int64_t rcx_1 = r9;\n        int64_t r14_1 = r8;\n        int64_t var_e8_1 = r10;\n        int64_t var_f0_1 = r8;\n        int64_t var_100_1 = rbp;\n        int64_t var_108_1 = r13;\n        int64_t var_110_1 = rdi;\n        int64_t var_d0_1 = rax_3;\n        int64_t var_f8_1 = r9;\n        int64_t r9_1 = r10;\n        do\n        {\n            int64_t rdx = 0;\n            int64_t var_b8;\n            do\n            {\n                *(&var_b8 + rdx) = _bswap(*(var_118 + rdx));\n                rdx = (rdx + 8);\n            } while (rdx != 0x80);\n            var_118 = (var_118 - -0x80);\n            int64_t rsi_8 = (((r11 + (0x428a2f98d728ae22 + var_b8)) + ((ROLQ(rcx_1, 0x17)) ^ ((RORQ(rcx_1, 0xe)) ^ (RORQ(rcx_1, 0x12))))) + (((r14_1 ^ r9_1) & rcx_1) ^ r9_1));\n            int64_t r12_1 = (rsi_8 + rbp);\n            int64_t rdx_18 = (((((rax_3 | rdi) & r13) | (rax_3 & rdi)) + (((ROLQ(rax_3, 0x1e)) ^ (RORQ(rax_3, 0x1c))) ^ (ROLQ(rax_3, 0x19)))) + rsi_8);\n            int64_t var_b0;\n            int64_t r10_12 = (((ROLQ(r12_1, 0x17)) ^ ((RORQ(r12_1, 0x12)) ^ (RORQ(r12_1, 0xe)))) + (((var_b0 + 0x7137449123ef65cd) + r9_1) + (((rcx_1 ^ r14_1) & r12_1) ^ r14_1)));\n            int64_t rbp_1 = (r10_12 + r13);\n            int64_t rsi_21 = (((((rdx_18 | rax_3) & rdi) | (rdx_18 & rax_3)) + (((ROLQ(rdx_18, 0x1e)) ^ (RORQ(rdx_18, 0x1c))) ^ (ROLQ(rdx_18, 0x19)))) + r10_12);\n            int64_t var_a8;\n            int64_t r8_18 = (((ROLQ(rbp_1, 0x17)) ^ ((RORQ(rbp_1, 0x12)) ^ (RORQ(rbp_1, 0xe)))) + (((-0x4a3f043013b2c4d1 + var_a8) + r14_1) + (((r12_1 ^ rcx_1) & rbp_1) ^ rcx_1)));\n            int64_t rdi_1 = (rdi + r8_18);\n            int64_t rbx_7 = (((((rdx_18 | rsi_21) & rax_3) | (rdx_18 & rsi_21)) + (((ROLQ(rsi_21, 0x1e)) ^ (RORQ(rsi_21, 0x1c))) ^ (ROLQ(rsi_21, 0x19)))) + r8_18);\n            int64_t var_a0;\n            int64_t r8_28 = (((ROLQ(rdi_1, 0x17)) ^ ((RORQ(rdi_1, 0x12)) ^ (RORQ(rdi_1, 0xe)))) + ((rcx_1 + (-0x164a245a7e762444 + var_a0)) + (((r12_1 ^ rbp_1) & rdi_1) ^ r12_1)));\n            int64_t rcx_4 = (r8_28 + rax_3);\n            int64_t r11_19 = (((((rsi_21 | rbx_7) & rdx_18) | (rsi_21 & rbx_7)) + (((ROLQ(rbx_7, 0x1e)) ^ (RORQ(rbx_7, 0x1c))) ^ (ROLQ(rbx_7, 0x19)))) + r8_28);\n            int64_t var_98;\n            int64_t rax_17 = (((ROLQ(rcx_4, 0x17)) ^ ((RORQ(rcx_4, 0x12)) ^ (RORQ(rcx_4, 0xe)))) + ((r12_1 + (0x3956c25bf348b538 + var_98)) + (((rbp_1 ^ rdi_1) & rcx_4) ^ rbp_1)));\n            int64_t rdx_19 = (rdx_18 + rax_17);\n            int64_t r10_35 = (((((rbx_7 | r11_19) & rsi_21) | (rbx_7 & r11_19)) + (((ROLQ(r11_19, 0x1e)) ^ (RORQ(r11_19, 0x1c))) ^ (ROLQ(r11_19, 0x19)))) + rax_17);\n            int64_t var_90;\n            int64_t r8_43 = (((ROLQ(rdx_19, 0x17)) ^ ((RORQ(rdx_19, 0x12)) ^ (RORQ(rdx_19, 0xe)))) + ((rbp_1 + (0x59f111f1b605d019 + var_90)) + (((rdi_1 ^ rcx_4) & rdx_19) ^ rdi_1)));\n            int64_t r9_16 = (rsi_21 + r8_43);\n            int64_t rax_31 = (((((r11_19 | r10_35) & rbx_7) | (r11_19 & r10_35)) + (((ROLQ(r10_35, 0x1e)) ^ (RORQ(r10_35, 0x1c))) ^ (ROLQ(r10_35, 0x19)))) + r8_43);\n            int64_t var_88;\n            int64_t rsi_35 = (((ROLQ(r9_16, 0x17)) ^ ((RORQ(r9_16, 0x12)) ^ (RORQ(r9_16, 0xe)))) + ((rdi_1 + (-0x6dc07d5b50e6b065 + var_88)) + (((rcx_4 ^ rdx_19) & r9_16) ^ rcx_4)));\n            int64_t rbx_8 = (rbx_7 + rsi_35);\n            int64_t r8_57 = (((((r10_35 | rax_31) & r11_19) | (r10_35 & rax_31)) + (((ROLQ(rax_31, 0x1e)) ^ (RORQ(rax_31, 0x1c))) ^ (ROLQ(rax_31, 0x19)))) + rsi_35);\n            int64_t var_80;\n            int64_t rcx_11 = (((ROLQ(rbx_8, 0x17)) ^ ((RORQ(rbx_8, 0x12)) ^ (RORQ(rbx_8, 0xe)))) + ((((rdx_19 ^ r9_16) & rbx_8) ^ rdx_19) + (rcx_4 + (-0x54e3a12a25927ee8 + var_80))));\n            int64_t r11_20 = (r11_19 + rcx_11);\n            int64_t rdi_21 = (((((rax_31 | r8_57) & r10_35) | (rax_31 & r8_57)) + (((ROLQ(r8_57, 0x1e)) ^ (RORQ(r8_57, 0x1c))) ^ (ROLQ(r8_57, 0x19)))) + rcx_11);\n            int64_t var_78;\n            int64_t rdx_26 = (((ROLQ(r11_20, 0x17)) ^ ((RORQ(r11_20, 0x12)) ^ (RORQ(r11_20, 0xe)))) + ((((r9_16 ^ rbx_8) & r11_20) ^ r9_16) + (rdx_19 + (-0x27f855675cfcfdbe + var_78))));\n            int64_t r10_36 = (r10_35 + rdx_26);\n            int64_t rsi_58 = (((((r8_57 | rdi_21) & rax_31) | (r8_57 & rdi_21)) + (((ROLQ(rdi_21, 0x1e)) ^ (RORQ(rdi_21, 0x1c))) ^ (ROLQ(rdi_21, 0x19)))) + rdx_26);\n            int64_t var_70;\n            int64_t rdx_36 = (((ROLQ(r10_36, 0x17)) ^ ((RORQ(r10_36, 0x12)) ^ (RORQ(r10_36, 0xe)))) + ((r9_16 + (0x12835b0145706fbe + var_70)) + (((rbx_8 ^ r11_20) & r10_36) ^ rbx_8)));\n            int64_t rax_32 = (rax_31 + rdx_36);\n            int64_t rcx_34 = (((((rdi_21 | rsi_58) & r8_57) | (rdi_21 & rsi_58)) + (((ROLQ(rsi_58, 0x1e)) ^ (RORQ(rsi_58, 0x1c))) ^ (ROLQ(rsi_58, 0x19)))) + rdx_36);\n            int64_t var_68;\n            int64_t r9_32 = (((ROLQ(rax_32, 0x17)) ^ ((RORQ(rax_32, 0x12)) ^ (RORQ(rax_32, 0xe)))) + ((rbx_8 + (0x243185be4ee4b28c + var_68)) + (((r11_20 ^ r10_36) & rax_32) ^ r11_20)));\n            int64_t r8_58 = (r8_57 + r9_32);\n            int64_t rdx_50 = (((((rsi_58 | rcx_34) & rdi_21) | (rsi_58 & rcx_34)) + (((ROLQ(rcx_34, 0x1e)) ^ (RORQ(rcx_34, 0x1c))) ^ (ROLQ(rcx_34, 0x19)))) + r9_32);\n            int64_t var_60;\n            int64_t r9_42 = (((ROLQ(r8_58, 0x17)) ^ ((RORQ(r8_58, 0x12)) ^ (RORQ(r8_58, 0xe)))) + ((r11_20 + (0x550c7dc3d5ffb4e2 + var_60)) + (((r10_36 ^ rax_32) & r8_58) ^ r10_36)));\n            int64_t rdi_22 = (rdi_21 + r9_42);\n            int64_t r13_13 = (((((rcx_34 | rdx_50) & rsi_58) | (rcx_34 & rdx_50)) + (((ROLQ(rdx_50, 0x1e)) ^ (RORQ(rdx_50, 0x1c))) ^ (ROLQ(rdx_50, 0x19)))) + r9_42);\n            int64_t var_58;\n            int64_t r9_52 = (((ROLQ(rdi_22, 0x17)) ^ ((RORQ(rdi_22, 0x12)) ^ (RORQ(rdi_22, 0xe)))) + ((r10_36 + (0x72be5d74f27b896f + var_58)) + (((rax_32 ^ r8_58) & rdi_22) ^ rax_32)));\n            int64_t rsi_59 = (rsi_58 + r9_52);\n            int64_t r14_18 = (((((rdx_50 | r13_13) & rcx_34) | (rdx_50 & r13_13)) + (((ROLQ(r13_13, 0x1e)) ^ (RORQ(r13_13, 0x1c))) ^ (ROLQ(r13_13, 0x19)))) + r9_52);\n            int64_t var_50;\n            int64_t rax_39 = (((ROLQ(rsi_59, 0x17)) ^ ((RORQ(rsi_59, 0x12)) ^ (RORQ(rsi_59, 0xe)))) + ((((r8_58 ^ rdi_22) & rsi_59) ^ r8_58) + (rax_32 + (-0x7f214e01c4e9694f + var_50))));\n            int64_t rcx_35 = (rcx_34 + rax_39);\n            int64_t r12_16 = (((((r13_13 | r14_18) & rdx_50) | (r13_13 & r14_18)) + (((ROLQ(r14_18, 0x1e)) ^ (RORQ(r14_18, 0x1c))) ^ (ROLQ(r14_18, 0x19)))) + rax_39);\n            int64_t var_48;\n            int64_t rax_49 = (((ROLQ(rcx_35, 0x17)) ^ ((RORQ(rcx_35, 0x12)) ^ (RORQ(rcx_35, 0xe)))) + ((r8_58 + (-0x6423f958da38edcb + var_48)) + (((rdi_22 ^ rsi_59) & rcx_35) ^ rdi_22)));\n            int64_t rdx_51 = (rdx_50 + rax_49);\n            int64_t rbp_28 = (((((r14_18 | r12_16) & r13_13) | (r14_18 & r12_16)) + (((ROLQ(r12_16, 0x1e)) ^ (RORQ(r12_16, 0x1c))) ^ (ROLQ(r12_16, 0x19)))) + rax_49);\n            int64_t var_40;\n            int64_t rax_59 = (((ROLQ(rdx_51, 0x17)) ^ ((RORQ(rdx_51, 0x12)) ^ (RORQ(rdx_51, 0xe)))) + ((rdi_22 + (-0x3e640e8b3096d96c + var_40)) + (((rsi_59 ^ rcx_35) & rdx_51) ^ rsi_59)));\n            int64_t r13_14 = (r13_13 + rax_59);\n            int64_t r8_78 = (((((r12_16 | rbp_28) & r14_18) | (r12_16 & rbp_28)) + (((ROLQ(rbp_28, 0x1e)) ^ (RORQ(rbp_28, 0x1c))) ^ (ROLQ(rbp_28, 0x19)))) + rax_59);\n            int64_t rbx_21 = ((((RORQ(var_b0, 8)) ^ (RORQ(var_b0, 1))) ^ (var_b0 >> 7)) + (((var_48 >> 6) ^ ((ROLQ(var_48, 3)) ^ (RORQ(var_48, 0x13)))) + (var_b8 + var_70)));\n            int64_t rax_75 = (((ROLQ(r13_14, 0x17)) ^ ((RORQ(r13_14, 0x12)) ^ (RORQ(r13_14, 0xe)))) + ((rsi_59 + (-0x1b64963e610eb52e + rbx_21)) + (((rcx_35 ^ rdx_51) & r13_14) ^ rcx_35)));\n            int64_t r14_19 = (r14_18 + rax_75);\n            int64_t rdi_50 = (((((rbp_28 | r8_78) & r12_16) | (rbp_28 & r8_78)) + (((ROLQ(r8_78, 0x1e)) ^ (RORQ(r8_78, 0x1c))) ^ (ROLQ(r8_78, 0x19)))) + rax_75);\n            int64_t r11_39 = ((((RORQ(var_a8, 8)) ^ (RORQ(var_a8, 1))) ^ (var_a8 >> 7)) + (((var_40 >> 6) ^ ((ROLQ(var_40, 3)) ^ (RORQ(var_40, 0x13)))) + (var_68 + var_b0)));\n            int64_t rax_89 = (((ROLQ(r14_19, 0x17)) ^ ((RORQ(r14_19, 0x12)) ^ (RORQ(r14_19, 0xe)))) + ((rcx_35 + (-0x1041b879c7b0da1d + r11_39)) + (((rdx_51 ^ r13_14) & r14_19) ^ rdx_51)));\n            int64_t r12_17 = (r12_16 + rax_89);\n            int64_t rsi_85 = (((((r8_78 | rdi_50) & rbp_28) | (r8_78 & rdi_50)) + (((ROLQ(rdi_50, 0x1e)) ^ (RORQ(rdi_50, 0x1c))) ^ (ROLQ(rdi_50, 0x19)))) + rax_89);\n            int64_t r10_57 = ((((ROLQ(rbx_21, 3)) ^ (RORQ(rbx_21, 0x13))) ^ (rbx_21 >> 6)) + (((var_a0 >> 7) ^ ((RORQ(var_a0, 8)) ^ (RORQ(var_a0, 1)))) + (var_a8 + var_60)));\n            int64_t rax_103 = (((ROLQ(r12_17, 0x17)) ^ ((RORQ(r12_17, 0x12)) ^ (RORQ(r12_17, 0xe)))) + ((rdx_51 + (0xfc19dc68b8cd5b5 + r10_57)) + (((r13_14 ^ r14_19) & r12_17) ^ r13_14)));\n            int64_t rbp_29 = (rbp_28 + rax_103);\n            int64_t rcx_61 = (((((rdi_50 | rsi_85) & r8_78) | (rdi_50 & rsi_85)) + (((ROLQ(rsi_85, 0x1e)) ^ (RORQ(rsi_85, 0x1c))) ^ (ROLQ(rsi_85, 0x19)))) + rax_103);\n            int64_t r9_82 = ((((ROLQ(r11_39, 3)) ^ (RORQ(r11_39, 0x13))) ^ (r11_39 >> 6)) + (((var_98 >> 7) ^ ((RORQ(var_98, 8)) ^ (RORQ(var_98, 1)))) + (var_a0 + var_58)));\n            int64_t rdx_73 = (((ROLQ(rbp_29, 0x17)) ^ ((RORQ(rbp_29, 0x12)) ^ (RORQ(rbp_29, 0xe)))) + ((r13_14 + (0x240ca1cc77ac9c65 + r9_82)) + (((r14_19 ^ r12_17) & rbp_29) ^ r14_19)));\n            int64_t r8_79 = (r8_78 + rdx_73);\n            int64_t rax_121 = (((((rsi_85 | rcx_61) & rdi_50) | (rsi_85 & rcx_61)) + (((ROLQ(rcx_61, 0x1e)) ^ (RORQ(rcx_61, 0x1c))) ^ (ROLQ(rcx_61, 0x19)))) + rdx_73);\n            int64_t r15_8 = ((((var_90 >> 7) ^ ((RORQ(var_90, 1)) ^ (RORQ(var_90, 8)))) + (var_98 + var_50)) + (((ROLQ(r10_57, 3)) ^ (RORQ(r10_57, 0x13))) ^ (r10_57 >> 6)));\n            int64_t r13_36 = (((ROLQ(r8_79, 0x17)) ^ ((RORQ(r8_79, 0x12)) ^ (RORQ(r8_79, 0xe)))) + ((r14_19 + (0x2de92c6f592b0275 + r15_8)) + (((r12_17 ^ rbp_29) & r8_79) ^ r12_17)));\n            int64_t rdi_51 = (rdi_50 + r13_36);\n            int64_t rdx_96 = (((((rcx_61 | rax_121) & rsi_85) | (rcx_61 & rax_121)) + (((ROLQ(rax_121, 0x1e)) ^ (RORQ(rax_121, 0x1c))) ^ (ROLQ(rax_121, 0x19)))) + r13_36);\n            int64_t r14_32 = ((((var_88 >> 7) ^ ((RORQ(var_88, 1)) ^ (RORQ(var_88, 8)))) + (var_90 + var_48)) + (((ROLQ(r9_82, 3)) ^ (RORQ(r9_82, 0x13))) ^ (r9_82 >> 6)));\n            int64_t r12_23 = (((ROLQ(rdi_51, 0x17)) ^ ((RORQ(rdi_51, 0x12)) ^ (RORQ(rdi_51, 0xe)))) + ((((rbp_29 ^ r8_79) & rdi_51) ^ rbp_29) + (r12_17 + (0x4a7484aa6ea6e483 + r14_32))));\n            int64_t rsi_86 = (rsi_85 + r12_23);\n            int64_t r14_48 = (((((rax_121 | rdx_96) & rcx_61) | (rax_121 & rdx_96)) + (((ROLQ(rdx_96, 0x1e)) ^ (RORQ(rdx_96, 0x1c))) ^ (ROLQ(rdx_96, 0x19)))) + r12_23);\n            int64_t r15_20 = ((((var_80 >> 7) ^ ((RORQ(var_80, 1)) ^ (RORQ(var_80, 8)))) + (var_88 + var_40)) + (((ROLQ(r15_8, 3)) ^ (RORQ(r15_8, 0x13))) ^ (r15_8 >> 6)));\n            int64_t rbp_36 = (((ROLQ(rsi_86, 0x17)) ^ ((RORQ(rsi_86, 0x12)) ^ (RORQ(rsi_86, 0xe)))) + ((((r8_79 ^ rdi_51) & rsi_86) ^ r8_79) + (rbp_29 + (0x5cb0a9dcbd41fbd4 + r15_20))));\n            int64_t rcx_62 = (rcx_61 + rbp_36);\n            int64_t r13_80 = (((((rdx_96 | r14_48) & rax_121) | (rdx_96 & r14_48)) + (((ROLQ(r14_48, 0x1e)) ^ (RORQ(r14_48, 0x1c))) ^ (ROLQ(r14_48, 0x19)))) + rbp_36);\n            int64_t rbp_43 = ((((((RORQ(var_78, 8)) ^ (RORQ(var_78, 1))) ^ (var_78 >> 7)) + var_80) + rbx_21) + (((ROLQ(r14_32, 3)) ^ (RORQ(r14_32, 0x13))) ^ (r14_32 >> 6)));\n            int64_t r8_86 = (((ROLQ(rcx_62, 0x17)) ^ ((RORQ(rcx_62, 0x12)) ^ (RORQ(rcx_62, 0xe)))) + ((((rdi_51 ^ rsi_86) & rcx_62) ^ rdi_51) + (r8_79 + (0x76f988da831153b5 + rbp_43))));\n            int64_t rax_122 = (rax_121 + r8_86);\n            int64_t r12_49 = (((((r14_48 | r13_80) & rdx_96) | (r14_48 & r13_80)) + (((ROLQ(r13_80, 0x1e)) ^ (RORQ(r13_80, 0x1c))) ^ (ROLQ(r13_80, 0x19)))) + r8_86);\n            int64_t r8_95 = ((((((RORQ(var_70, 8)) ^ (RORQ(var_70, 1))) ^ (var_70 >> 7)) + var_78) + r11_39) + (((ROLQ(r15_20, 3)) ^ (RORQ(r15_20, 0x13))) ^ (r15_20 >> 6)));\n            int64_t rdi_58 = (((ROLQ(rax_122, 0x17)) ^ ((RORQ(rax_122, 0x12)) ^ (RORQ(rax_122, 0xe)))) + ((((rsi_86 ^ rcx_62) & rax_122) ^ rsi_86) + (rdi_51 + (-0x67c1aead11992055 + r8_95))));\n            int64_t rdx_97 = (rdx_96 + rdi_58);\n            int64_t rbp_72 = (((((r13_80 | r12_49) & r14_48) | (r13_80 & r12_49)) + (((ROLQ(r12_49, 0x1e)) ^ (RORQ(r12_49, 0x1c))) ^ (ROLQ(r12_49, 0x19)))) + rdi_58);\n            int64_t rdi_67 = ((((((RORQ(var_68, 8)) ^ (RORQ(var_68, 1))) ^ (var_68 >> 7)) + var_70) + r10_57) + (((ROLQ(rbp_43, 3)) ^ (RORQ(rbp_43, 0x13))) ^ (rbp_43 >> 6)));\n            int64_t rsi_93 = (((ROLQ(rdx_97, 0x17)) ^ ((RORQ(rdx_97, 0x12)) ^ (RORQ(rdx_97, 0xe)))) + ((((rcx_62 ^ rax_122) & rdx_97) ^ rcx_62) + (rsi_86 + (-0x57ce3992d24bcdf0 + rdi_67))));\n            int64_t r14_49 = (r14_48 + rsi_93);\n            int64_t r8_125 = (((((r12_49 | rbp_72) & r13_80) | (r12_49 & rbp_72)) + (((ROLQ(rbp_72, 0x1e)) ^ (RORQ(rbp_72, 0x1c))) ^ (ROLQ(rbp_72, 0x19)))) + rsi_93);\n            int64_t rsi_102 = ((((((RORQ(var_60, 8)) ^ (RORQ(var_60, 1))) ^ (var_60 >> 7)) + var_68) + r9_82) + (((ROLQ(r8_95, 3)) ^ (RORQ(r8_95, 0x13))) ^ (r8_95 >> 6)));\n            int64_t rcx_69 = (((ROLQ(r14_49, 0x17)) ^ ((RORQ(r14_49, 0x12)) ^ (RORQ(r14_49, 0xe)))) + ((((rax_122 ^ rdx_97) & r14_49) ^ rax_122) + (rcx_62 + (-0x4ffcd8376704dec1 + rsi_102))));\n            int64_t r13_81 = (r13_80 + rcx_69);\n            int64_t rdi_97 = (((((rbp_72 | r8_125) & r12_49) | (rbp_72 & r8_125)) + (((ROLQ(r8_125, 0x1e)) ^ (RORQ(r8_125, 0x1c))) ^ (ROLQ(r8_125, 0x19)))) + rcx_69);\n            int64_t rcx_78 = ((((((RORQ(var_58, 8)) ^ (RORQ(var_58, 1))) ^ (var_58 >> 7)) + var_60) + r15_8) + (((ROLQ(rdi_67, 3)) ^ (RORQ(rdi_67, 0x13))) ^ (rdi_67 >> 6)));\n            int64_t rcx_87 = (((ROLQ(r13_81, 0x17)) ^ ((RORQ(r13_81, 0x12)) ^ (RORQ(r13_81, 0xe)))) + ((((rdx_97 ^ r14_49) & r13_81) ^ rdx_97) + (rax_122 + (-0x40a680384110f11c + rcx_78))));\n            int64_t r12_50 = (r12_49 + rcx_87);\n            int64_t rax_138 = (((((r8_125 | rdi_97) & rbp_72) | (r8_125 & rdi_97)) + (((ROLQ(rdi_97, 0x1e)) ^ (RORQ(rdi_97, 0x1c))) ^ (ROLQ(rdi_97, 0x19)))) + rcx_87);\n            int64_t rcx_96 = ((((((RORQ(var_50, 8)) ^ (RORQ(var_50, 1))) ^ (var_50 >> 7)) + var_58) + r14_32) + (((ROLQ(rsi_102, 3)) ^ (RORQ(rsi_102, 0x13))) ^ (rsi_102 >> 6)));\n            int64_t rdx_104 = (((ROLQ(r12_50, 0x17)) ^ ((RORQ(r12_50, 0x12)) ^ (RORQ(r12_50, 0xe)))) + ((((r14_49 ^ r13_81) & r12_50) ^ r14_49) + (rdx_97 + (-0x391ff40cc257703e + rcx_96))));\n            int64_t rbp_73 = (rbp_72 + rdx_104);\n            int64_t rsi_141 = (((((rdi_97 | rax_138) & r8_125) | (rdi_97 & rax_138)) + (((ROLQ(rax_138, 0x1e)) ^ (RORQ(rax_138, 0x1c))) ^ (ROLQ(rax_138, 0x19)))) + rdx_104);\n            int64_t rdx_113 = ((((((RORQ(var_48, 8)) ^ (RORQ(var_48, 1))) ^ (var_48 >> 7)) + var_50) + r15_20) + (((ROLQ(rcx_78, 3)) ^ (RORQ(rcx_78, 0x13))) ^ (rcx_78 >> 6)));\n            int64_t rdx_123 = (((ROLQ(rbp_73, 0x17)) ^ ((RORQ(rbp_73, 0x12)) ^ (RORQ(rbp_73, 0xe)))) + ((r14_49 + (-0x2a586eb86cf558db + rdx_113)) + (((r13_81 ^ r12_50) & rbp_73) ^ r13_81)));\n            int64_t r8_126 = (r8_125 + rdx_123);\n            int64_t rcx_127 = (((((rax_138 | rsi_141) & rdi_97) | (rax_138 & rsi_141)) + (((ROLQ(rsi_141, 0x1e)) ^ (RORQ(rsi_141, 0x1c))) ^ (ROLQ(rsi_141, 0x19)))) + rdx_123);\n            int64_t rdx_132 = ((((((RORQ(var_40, 8)) ^ (RORQ(var_40, 1))) ^ (var_40 >> 7)) + var_48) + rbp_43) + (((ROLQ(rcx_96, 3)) ^ (RORQ(rcx_96, 0x13))) ^ (rcx_96 >> 6)));\n            int64_t r14_72 = (((ROLQ(r8_126, 0x17)) ^ ((RORQ(r8_126, 0x12)) ^ (RORQ(r8_126, 0xe)))) + ((r13_81 + (0x6ca6351e003826f + rdx_132)) + (((r12_50 ^ rbp_73) & r8_126) ^ r12_50)));\n            int64_t r13_84 = (rdi_97 + r14_72);\n            int64_t rdx_150 = (((((rsi_141 | rcx_127) & rax_138) | (rsi_141 & rcx_127)) + (((ROLQ(rcx_127, 0x1e)) ^ (RORQ(rcx_127, 0x1c))) ^ (ROLQ(rcx_127, 0x19)))) + r14_72);\n            int64_t rdi_110 = ((((((RORQ(rbx_21, 8)) ^ (RORQ(rbx_21, 1))) ^ (rbx_21 >> 7)) + var_40) + r8_95) + (((ROLQ(rdx_113, 3)) ^ (RORQ(rdx_113, 0x13))) ^ (rdx_113 >> 6)));\n            int64_t r12_58 = ((((RORQ(r13_84, 0x12)) ^ (RORQ(r13_84, 0xe))) ^ (ROLQ(r13_84, 0x17))) + ((((rbp_73 ^ r8_126) & r13_84) ^ rbp_73) + (r12_50 + (0x142929670a0e6e70 + rdi_110))));\n            int64_t rdi_116 = (rax_138 + r12_58);\n            int64_t r12_59 = (r12_58 + ((((rcx_127 | rdx_150) & rsi_141) | (rcx_127 & rdx_150)) + (((ROLQ(rdx_150, 0x1e)) ^ (RORQ(rdx_150, 0x1c))) ^ (ROLQ(rdx_150, 0x19)))));\n            int64_t r15_103 = (((rbx_21 + (((RORQ(r11_39, 8)) ^ (RORQ(r11_39, 1))) ^ (r11_39 >> 7))) + rdi_67) + (((ROLQ(rdx_132, 3)) ^ (RORQ(rdx_132, 0x13))) ^ (rdx_132 >> 6)));\n            int64_t rax_163 = ((((RORQ(rdi_116, 0x12)) ^ (RORQ(rdi_116, 0xe))) ^ (ROLQ(rdi_116, 0x17))) + ((rbp_73 + (0x27b70a8546d22ffc + r15_103)) + (((r8_126 ^ r13_84) & rdi_116) ^ r8_126)));\n            int64_t rsi_142 = (rsi_141 + rax_163);\n            int64_t rbx_34 = (((((ROLQ(r12_59, 0x1e)) ^ (RORQ(r12_59, 0x1c))) ^ (ROLQ(r12_59, 0x19))) + (((rdx_150 | r12_59) & rcx_127) | (rdx_150 & r12_59))) + rax_163);\n            int64_t r14_102 = (((r11_39 + (((RORQ(r10_57, 8)) ^ (RORQ(r10_57, 1))) ^ (r10_57 >> 7))) + rsi_102) + (((ROLQ(rdi_110, 3)) ^ (RORQ(rdi_110, 0x13))) ^ (rdi_110 >> 6)));\n            int64_t rax_180 = ((((RORQ(rsi_142, 0x12)) ^ (RORQ(rsi_142, 0xe))) ^ (ROLQ(rsi_142, 0x17))) + ((r8_126 + (0x2e1b21385c26c926 + r14_102)) + (((r13_84 ^ rdi_116) & rsi_142) ^ r13_84)));\n            int64_t rcx_128 = (rcx_127 + rax_180);\n            int64_t r8_134 = (((((ROLQ(rbx_34, 0x1e)) ^ (RORQ(rbx_34, 0x1c))) ^ (ROLQ(rbx_34, 0x19))) + (((r12_59 | rbx_34) & rdx_150) | (r12_59 & rbx_34))) + rax_180);\n            int64_t r10_60 = (((r10_57 + (((RORQ(r9_82, 8)) ^ (RORQ(r9_82, 1))) ^ (r9_82 >> 7))) + rcx_78) + (((ROLQ(r15_103, 3)) ^ (RORQ(r15_103, 0x13))) ^ (r15_103 >> 6)));\n            int64_t rax_197 = ((((RORQ(rcx_128, 0x12)) ^ (RORQ(rcx_128, 0xe))) ^ (ROLQ(rcx_128, 0x17))) + ((r13_84 + (0x4d2c6dfc5ac42aed + r10_60)) + (((rdi_116 ^ rsi_142) & rcx_128) ^ rdi_116)));\n            int64_t rdx_151 = (rdx_150 + rax_197);\n            int64_t r10_73 = (((((ROLQ(r8_134, 0x1e)) ^ (RORQ(r8_134, 0x1c))) ^ (ROLQ(r8_134, 0x19))) + (((rbx_34 | r8_134) & r12_59) | (rbx_34 & r8_134))) + rax_197);\n            int64_t r9_85 = (((r9_82 + (((RORQ(r15_8, 8)) ^ (RORQ(r15_8, 1))) ^ (r15_8 >> 7))) + rcx_96) + (((ROLQ(r14_102, 3)) ^ (RORQ(r14_102, 0x13))) ^ (r14_102 >> 6)));\n            int64_t rax_215 = ((((RORQ(rdx_151, 0x12)) ^ (RORQ(rdx_151, 0xe))) ^ (ROLQ(rdx_151, 0x17))) + ((rdi_116 + (0x53380d139d95b3df + r9_85)) + (((rsi_142 ^ rcx_128) & rdx_151) ^ rsi_142)));\n            int64_t r9_93 = (r12_59 + rax_215);\n            int64_t rdi_126 = (((((ROLQ(r10_73, 0x1e)) ^ (RORQ(r10_73, 0x1c))) ^ (ROLQ(r10_73, 0x19))) + (((r8_134 | r10_73) & rbx_34) | (r8_134 & r10_73))) + rax_215);\n            int64_t rax_222 = ((((((RORQ(r14_32, 8)) ^ (RORQ(r14_32, 1))) ^ (r14_32 >> 7)) + r15_8) + rdx_113) + (((ROLQ(r10_60, 3)) ^ (RORQ(r10_60, 0x13))) ^ (r10_60 >> 6)));\n            int64_t rax_231 = ((((RORQ(r9_93, 0x12)) ^ (RORQ(r9_93, 0xe))) ^ (ROLQ(r9_93, 0x17))) + ((rsi_142 + (0x650a73548baf63de + rax_222)) + (((rcx_128 ^ rdx_151) & r9_93) ^ rcx_128)));\n            int64_t rbx_35 = (rbx_34 + rax_231);\n            int64_t rsi_150 = (((((ROLQ(rdi_126, 0x1e)) ^ (RORQ(rdi_126, 0x1c))) ^ (ROLQ(rdi_126, 0x19))) + (((r10_73 | rdi_126) & r8_134) | (r10_73 & rdi_126))) + rax_231);\n            int64_t rax_238 = ((((((RORQ(r15_20, 8)) ^ (RORQ(r15_20, 1))) ^ (r15_20 >> 7)) + r14_32) + rdx_132) + (((ROLQ(r9_85, 3)) ^ (RORQ(r9_85, 0x13))) ^ (r9_85 >> 6)));\n            int64_t rax_247 = ((((RORQ(rbx_35, 0x12)) ^ (RORQ(rbx_35, 0xe))) ^ (ROLQ(rbx_35, 0x17))) + ((rcx_128 + (0x766a0abb3c77b2a8 + rax_238)) + (((rdx_151 ^ r9_93) & rbx_35) ^ rdx_151)));\n            int64_t r11_116 = (r8_134 + rax_247);\n            int64_t rcx_138 = (((((ROLQ(rsi_150, 0x1e)) ^ (RORQ(rsi_150, 0x1c))) ^ (ROLQ(rsi_150, 0x19))) + (((rdi_126 | rsi_150) & r10_73) | (rdi_126 & rsi_150))) + rax_247);\n            int64_t r13_91 = ((((((RORQ(rbp_43, 8)) ^ (RORQ(rbp_43, 1))) ^ (rbp_43 >> 7)) + r15_20) + rdi_110) + (((ROLQ(rax_222, 3)) ^ (RORQ(rax_222, 0x13))) ^ (rax_222 >> 6)));\n            int64_t rax_264 = ((((RORQ(r11_116, 0x12)) ^ (RORQ(r11_116, 0xe))) ^ (ROLQ(r11_116, 0x17))) + ((rdx_151 + (-0x7e3d36d1b812511a + r13_91)) + (((r9_93 ^ rbx_35) & r11_116) ^ r9_93)));\n            int64_t r10_74 = (r10_73 + rax_264);\n            int64_t rdx_161 = (((((ROLQ(rcx_138, 0x1e)) ^ (RORQ(rcx_138, 0x1c))) ^ (ROLQ(rcx_138, 0x19))) + (((rsi_150 | rcx_138) & rdi_126) | (rsi_150 & rcx_138))) + rax_264);\n            int64_t rax_269 = ((((ROLQ(rax_238, 3)) ^ (RORQ(rax_238, 0x13))) ^ (rax_238 >> 6)) + (((((RORQ(r8_95, 8)) ^ (RORQ(r8_95, 1))) ^ (r8_95 >> 7)) + rbp_43) + r15_103));\n            int64_t rax_280 = ((((RORQ(r10_74, 0x12)) ^ (RORQ(r10_74, 0xe))) ^ (ROLQ(r10_74, 0x17))) + ((r9_93 + (-0x6d8dd37aeb7dcac5 + rax_269)) + (((rbx_35 ^ r11_116) & r10_74) ^ rbx_35)));\n            int64_t r9_96 = (rdi_126 + rax_280);\n            int64_t r12_83 = (((((rcx_138 | rdx_161) & rsi_150) | (rcx_138 & rdx_161)) + (((ROLQ(rdx_161, 0x1e)) ^ (RORQ(rdx_161, 0x1c))) ^ (ROLQ(rdx_161, 0x19)))) + rax_280);\n            int64_t r13_94 = ((((((RORQ(rdi_67, 8)) ^ (RORQ(rdi_67, 1))) ^ (rdi_67 >> 7)) + r8_95) + r14_102) + (((ROLQ(r13_91, 3)) ^ (RORQ(r13_91, 0x13))) ^ (r13_91 >> 6)));\n            int64_t rax_297 = ((((RORQ(r9_96, 0x12)) ^ (RORQ(r9_96, 0xe))) ^ (ROLQ(r9_96, 0x17))) + ((rbx_35 + (-0x5d40175eb30efc9c + r13_94)) + (((r11_116 ^ r10_74) & r9_96) ^ r11_116)));\n            int64_t rbx_38 = (rsi_150 + rax_297);\n            int64_t rbp_128 = (((((rdx_161 | r12_83) & rcx_138) | (rdx_161 & r12_83)) + (((ROLQ(r12_83, 0x1e)) ^ (RORQ(r12_83, 0x1c))) ^ (ROLQ(r12_83, 0x19)))) + rax_297);\n            int64_t rax_303 = ((((ROLQ(rax_269, 3)) ^ (RORQ(rax_269, 0x13))) ^ (rax_269 >> 6)) + (((((RORQ(rsi_102, 8)) ^ (RORQ(rsi_102, 1))) ^ (rsi_102 >> 7)) + rdi_67) + r10_60));\n            int64_t rax_314 = ((((RORQ(rbx_38, 0x12)) ^ (RORQ(rbx_38, 0xe))) ^ (ROLQ(rbx_38, 0x17))) + (((-0x57e599b443bdcfff + rax_303) + r11_116) + (((r10_74 ^ r9_96) & rbx_38) ^ r10_74)));\n            int64_t r11_117 = (rcx_138 + rax_314);\n            int64_t r13_99 = (((((r12_83 | rbp_128) & rdx_161) | (r12_83 & rbp_128)) + (((ROLQ(rbp_128, 0x1e)) ^ (RORQ(rbp_128, 0x1c))) ^ (ROLQ(rbp_128, 0x19)))) + rax_314);\n            int64_t rax_323 = ((((ROLQ(r13_94, 3)) ^ (RORQ(r13_94, 0x13))) ^ (r13_94 >> 6)) + (((((RORQ(rcx_78, 8)) ^ (RORQ(rcx_78, 1))) ^ (rcx_78 >> 7)) + rsi_102) + r9_85));\n            int64_t rax_334 = ((((RORQ(r11_117, 0x12)) ^ (RORQ(r11_117, 0xe))) ^ (ROLQ(r11_117, 0x17))) + ((r10_74 + (-0x3db4748f2f07686f + rax_323)) + (((r9_96 ^ rbx_38) & r11_117) ^ r9_96)));\n            int64_t rdx_162 = (rdx_161 + rax_334);\n            int64_t r10_87 = (((((rbp_128 | r13_99) & r12_83) | (rbp_128 & r13_99)) + (((ROLQ(r13_99, 0x1e)) ^ (RORQ(r13_99, 0x1c))) ^ (ROLQ(r13_99, 0x19)))) + rax_334);\n            int64_t rax_343 = ((((ROLQ(rax_303, 3)) ^ (RORQ(rax_303, 0x13))) ^ (rax_303 >> 6)) + (((((RORQ(rcx_96, 8)) ^ (RORQ(rcx_96, 1))) ^ (rcx_96 >> 7)) + rcx_78) + rax_222));\n            int64_t rax_351 = ((((RORQ(rdx_162, 0x12)) ^ (RORQ(rdx_162, 0xe))) ^ (ROLQ(rdx_162, 0x17))) + (((-0x3893ae5cf9ab41d0 + rax_343) + r9_96) + (((rbx_38 ^ r11_117) & rdx_162) ^ rbx_38)));\n            int64_t r12_84 = (r12_83 + rax_351);\n            int64_t r8_181 = (((((r13_99 | r10_87) & rbp_128) | (r13_99 & r10_87)) + (((ROLQ(r10_87, 0x1e)) ^ (RORQ(r10_87, 0x1c))) ^ (ROLQ(r10_87, 0x19)))) + rax_351);\n            int64_t rdi_163 = ((((((RORQ(rdx_113, 8)) ^ (RORQ(rdx_113, 1))) ^ (rdx_113 >> 7)) + rcx_96) + rax_238) + (((ROLQ(rax_323, 3)) ^ (RORQ(rax_323, 0x13))) ^ (rax_323 >> 6)));\n            int64_t rax_369 = ((((RORQ(r12_84, 0x12)) ^ (RORQ(r12_84, 0xe))) ^ (ROLQ(r12_84, 0x17))) + (((-0x2e6d17e62910ade8 + rdi_163) + rbx_38) + (((r11_117 ^ rdx_162) & r12_84) ^ r11_117)));\n            int64_t rbp_129 = (rbp_128 + rax_369);\n            int64_t r9_119 = (((((r10_87 | r8_181) & r13_99) | (r10_87 & r8_181)) + (((ROLQ(r8_181, 0x1e)) ^ (RORQ(r8_181, 0x1c))) ^ (ROLQ(r8_181, 0x19)))) + rax_369);\n            int64_t rax_378 = ((((ROLQ(rax_343, 3)) ^ (RORQ(rax_343, 0x13))) ^ (rax_343 >> 6)) + (((((RORQ(rdx_132, 8)) ^ (RORQ(rdx_132, 1))) ^ (rdx_132 >> 7)) + rdx_113) + r13_91));\n            int64_t rax_389 = ((((RORQ(rbp_129, 0x12)) ^ (RORQ(rbp_129, 0xe))) ^ (ROLQ(rbp_129, 0x17))) + (((-0x2966f9dbaa9a56f0 + rax_378) + r11_117) + (((rdx_162 ^ r12_84) & rbp_129) ^ rdx_162)));\n            int64_t r13_100 = (r13_99 + rax_389);\n            int64_t rdi_171 = (((((ROLQ(r9_119, 0x1e)) ^ (RORQ(r9_119, 0x1c))) ^ (ROLQ(r9_119, 0x19))) + (((r8_181 | r9_119) & r10_87) | (r8_181 & r9_119))) + rax_389);\n            int64_t rax_396 = ((((((RORQ(rdi_110, 8)) ^ (RORQ(rdi_110, 1))) ^ (rdi_110 >> 7)) + rdx_132) + rax_269) + (((ROLQ(rdi_163, 3)) ^ (RORQ(rdi_163, 0x13))) ^ (rdi_163 >> 6)));\n            int64_t rax_407 = ((((RORQ(r13_100, 0x12)) ^ (RORQ(r13_100, 0xe))) ^ (ROLQ(r13_100, 0x17))) + ((rdx_162 + (-0xbf1ca7aa88edfd6 + rax_396)) + (((r12_84 ^ rbp_129) & r13_100) ^ r12_84)));\n            int64_t r10_88 = (r10_87 + rax_407);\n            int64_t rdx_172 = (((((ROLQ(rdi_171, 0x1e)) ^ (RORQ(rdi_171, 0x1c))) ^ (ROLQ(rdi_171, 0x19))) + (((r9_119 | rdi_171) & r8_181) | (r9_119 & rdi_171))) + rax_407);\n            int64_t rax_416 = ((((((RORQ(r15_103, 8)) ^ (RORQ(r15_103, 1))) ^ (r15_103 >> 7)) + rdi_110) + r13_94) + (((ROLQ(rax_378, 3)) ^ (RORQ(rax_378, 0x13))) ^ (rax_378 >> 6)));\n            int64_t rax_425 = ((((RORQ(r10_88, 0x12)) ^ (RORQ(r10_88, 0xe))) ^ (ROLQ(r10_88, 0x17))) + ((r12_84 + (0x106aa07032bbd1b8 + rax_416)) + (((rbp_129 ^ r13_100) & r10_88) ^ rbp_129)));\n            int64_t r8_182 = (r8_181 + rax_425);\n            int64_t rcx_236 = (((((ROLQ(rdx_172, 0x1e)) ^ (RORQ(rdx_172, 0x1c))) ^ (ROLQ(rdx_172, 0x19))) + (((rdi_171 | rdx_172) & r9_119) | (rdi_171 & rdx_172))) + rax_425);\n            int64_t r15_104 = ((((((RORQ(r14_102, 8)) ^ (RORQ(r14_102, 1))) ^ (r14_102 >> 7)) + r15_103) + rax_303) + (((ROLQ(rax_396, 3)) ^ (RORQ(rax_396, 0x13))) ^ (rax_396 >> 6)));\n            int64_t rax_444 = ((((RORQ(r8_182, 0x12)) ^ (RORQ(r8_182, 0xe))) ^ (ROLQ(r8_182, 0x17))) + ((rbp_129 + (0x19a4c116b8d2d0c8 + r15_104)) + (((r13_100 ^ r10_88) & r8_182) ^ r13_100)));\n            int64_t r9_120 = (r9_119 + rax_444);\n            int64_t rsi_244 = (((((ROLQ(rcx_236, 0x1e)) ^ (RORQ(rcx_236, 0x1c))) ^ (ROLQ(rcx_236, 0x19))) + (((rdx_172 | rcx_236) & rdi_171) | (rdx_172 & rcx_236))) + rax_444);\n            int64_t rax_451 = ((((((RORQ(r10_60, 8)) ^ (RORQ(r10_60, 1))) ^ (r10_60 >> 7)) + r14_102) + rax_323) + (((ROLQ(rax_416, 3)) ^ (RORQ(rax_416, 0x13))) ^ (rax_416 >> 6)));\n            int64_t rax_462 = ((((RORQ(r9_120, 0x12)) ^ (RORQ(r9_120, 0xe))) ^ (ROLQ(r9_120, 0x17))) + ((r13_100 + (0x1e376c085141ab53 + rax_451)) + (((r10_88 ^ r8_182) & r9_120) ^ r10_88)));\n            int64_t rdi_172 = (rdi_171 + rax_462);\n            int64_t rbx_52 = (((((rcx_236 | rsi_244) & rdx_172) | (rcx_236 & rsi_244)) + (((ROLQ(rsi_244, 0x1e)) ^ (RORQ(rsi_244, 0x1c))) ^ (ROLQ(rsi_244, 0x19)))) + rax_462);\n            int64_t rax_469 = ((((((RORQ(r9_85, 8)) ^ (RORQ(r9_85, 1))) ^ (r9_85 >> 7)) + r10_60) + rax_343) + (((ROLQ(r15_104, 3)) ^ (RORQ(r15_104, 0x13))) ^ (r15_104 >> 6)));\n            int64_t rax_480 = ((((RORQ(rdi_172, 0x12)) ^ (RORQ(rdi_172, 0xe))) ^ (ROLQ(rdi_172, 0x17))) + ((r10_88 + (0x2748774cdf8eeb99 + rax_469)) + (((r8_182 ^ r9_120) & rdi_172) ^ r8_182)));\n            int64_t rdx_173 = (rdx_172 + rax_480);\n            int64_t r10_98 = (((((ROLQ(rbx_52, 0x1e)) ^ (RORQ(rbx_52, 0x1c))) ^ (ROLQ(rbx_52, 0x19))) + (((rsi_244 | rbx_52) & rcx_236) | (rsi_244 & rbx_52))) + rax_480);\n            int64_t rax_487 = ((((((RORQ(rax_222, 8)) ^ (RORQ(rax_222, 1))) ^ (rax_222 >> 7)) + r9_85) + rdi_163) + (((ROLQ(rax_451, 3)) ^ (RORQ(rax_451, 0x13))) ^ (rax_451 >> 6)));\n            int64_t rax_498 = ((((RORQ(rdx_173, 0x12)) ^ (RORQ(rdx_173, 0xe))) ^ (ROLQ(rdx_173, 0x17))) + ((r8_182 + (0x34b0bcb5e19b48a8 + rax_487)) + (((r9_120 ^ rdi_172) & rdx_173) ^ r9_120)));\n            int64_t rcx_237 = (rcx_236 + rax_498);\n            int64_t r8_192 = (((((ROLQ(r10_98, 0x1e)) ^ (RORQ(r10_98, 0x1c))) ^ (ROLQ(r10_98, 0x19))) + (((rbx_52 | r10_98) & rsi_244) | (rbx_52 & r10_98))) + rax_498);\n            int64_t rax_507 = ((((ROLQ(rax_469, 3)) ^ (RORQ(rax_469, 0x13))) ^ (rax_469 >> 6)) + (((((RORQ(rax_238, 8)) ^ (RORQ(rax_238, 1))) ^ (rax_238 >> 7)) + rax_222) + rax_378));\n            int64_t rax_518 = ((((RORQ(rcx_237, 0x12)) ^ (RORQ(rcx_237, 0xe))) ^ (ROLQ(rcx_237, 0x17))) + ((r9_120 + (0x391c0cb3c5c95a63 + rax_507)) + (((rdi_172 ^ rdx_173) & rcx_237) ^ rdi_172)));\n            int64_t rsi_245 = (rsi_244 + rax_518);\n            int64_t r9_130 = (((((ROLQ(r8_192, 0x1e)) ^ (RORQ(r8_192, 0x1c))) ^ (ROLQ(r8_192, 0x19))) + (((r10_98 | r8_192) & rbx_52) | (r10_98 & r8_192))) + rax_518);\n            int64_t rax_527 = ((((ROLQ(rax_487, 3)) ^ (RORQ(rax_487, 0x13))) ^ (rax_487 >> 6)) + (((((RORQ(r13_91, 8)) ^ (RORQ(r13_91, 1))) ^ (r13_91 >> 7)) + rax_238) + rax_396));\n            int64_t rax_538 = ((((RORQ(rsi_245, 0x12)) ^ (RORQ(rsi_245, 0xe))) ^ (ROLQ(rsi_245, 0x17))) + ((rdi_172 + (0x4ed8aa4ae3418acb + rax_527)) + (((rdx_173 ^ rcx_237) & rsi_245) ^ rdx_173)));\n            int64_t rbx_53 = (rbx_52 + rax_538);\n            int64_t rdi_182 = (((((ROLQ(r9_130, 0x1e)) ^ (RORQ(r9_130, 0x1c))) ^ (ROLQ(r9_130, 0x19))) + (((r8_192 | r9_130) & r10_98) | (r8_192 & r9_130))) + rax_538);\n            int64_t rax_545 = ((((((RORQ(rax_269, 8)) ^ (RORQ(rax_269, 1))) ^ (rax_269 >> 7)) + r13_91) + rax_416) + (((ROLQ(rax_507, 3)) ^ (RORQ(rax_507, 0x13))) ^ (rax_507 >> 6)));\n            int64_t rax_554 = ((((RORQ(rbx_53, 0x12)) ^ (RORQ(rbx_53, 0xe))) ^ (ROLQ(rbx_53, 0x17))) + ((rdx_173 + (0x5b9cca4f7763e373 + rax_545)) + (((rcx_237 ^ rsi_245) & rbx_53) ^ rcx_237)));\n            int64_t r10_99 = (r10_98 + rax_554);\n            int64_t rdx_183 = (((((ROLQ(rdi_182, 0x1e)) ^ (RORQ(rdi_182, 0x1c))) ^ (ROLQ(rdi_182, 0x19))) + (((r9_130 | rdi_182) & r8_192) | (r9_130 & rdi_182))) + rax_554);\n            int64_t rax_561 = ((((((RORQ(r13_94, 8)) ^ (RORQ(r13_94, 1))) ^ (r13_94 >> 7)) + rax_269) + r15_104) + (((ROLQ(rax_527, 3)) ^ (RORQ(rax_527, 0x13))) ^ (rax_527 >> 6)));\n            int64_t rax_572 = ((((RORQ(r10_99, 0x12)) ^ (RORQ(r10_99, 0xe))) ^ (ROLQ(r10_99, 0x17))) + ((rcx_237 + (0x682e6ff3d6b2b8a3 + rax_561)) + (((rsi_245 ^ rbx_53) & r10_99) ^ rsi_245)));\n            int64_t r8_193 = (r8_192 + rax_572);\n            int64_t r12_101 = (((((rdi_182 | rdx_183) & r9_130) | (rdi_182 & rdx_183)) + (((ROLQ(rdx_183, 0x1e)) ^ (RORQ(rdx_183, 0x1c))) ^ (ROLQ(rdx_183, 0x19)))) + rax_572);\n            int64_t rax_582 = ((((ROLQ(rax_545, 3)) ^ (RORQ(rax_545, 0x13))) ^ (rax_545 >> 6)) + (rax_451 + ((((RORQ(rax_303, 8)) ^ (RORQ(rax_303, 1))) ^ (rax_303 >> 7)) + r13_94)));\n            int64_t rax_592 = (((ROLQ(r8_193, 0x17)) ^ ((RORQ(r8_193, 0x12)) ^ (RORQ(r8_193, 0xe)))) + ((rsi_245 + (0x748f82ee5defb2fc + rax_582)) + (((rbx_53 ^ r10_99) & r8_193) ^ rbx_53)));\n            int64_t r9_131 = (r9_130 + rax_592);\n            int64_t rcx_265 = (((((rdx_183 | r12_101) & rdi_182) | (rdx_183 & r12_101)) + (((ROLQ(r12_101, 0x1e)) ^ (RORQ(r12_101, 0x1c))) ^ (ROLQ(r12_101, 0x19)))) + rax_592);\n            int64_t rsi_258 = ((rax_469 + ((((RORQ(rax_323, 8)) ^ (RORQ(rax_323, 1))) ^ (rax_323 >> 7)) + rax_303)) + (((ROLQ(rax_561, 3)) ^ (RORQ(rax_561, 0x13))) ^ (rax_561 >> 6)));\n            int64_t rax_608 = (((ROLQ(r9_131, 0x17)) ^ ((RORQ(r9_131, 0x12)) ^ (RORQ(r9_131, 0xe)))) + ((rbx_53 + (0x78a5636f43172f60 + rsi_258)) + (((r10_99 ^ r8_193) & r9_131) ^ r10_99)));\n            int64_t rdi_183 = (rdi_182 + rax_608);\n            int64_t r11_283 = (((((r12_101 | rcx_265) & rdx_183) | (r12_101 & rcx_265)) + (((ROLQ(rcx_265, 0x1e)) ^ (RORQ(rcx_265, 0x1c))) ^ (ROLQ(rcx_265, 0x19)))) + rax_608);\n            int64_t rsi_280 = ((rax_487 + ((((RORQ(rax_343, 8)) ^ (RORQ(rax_343, 1))) ^ (rax_343 >> 7)) + rax_323)) + (((ROLQ(rax_582, 3)) ^ (RORQ(rax_582, 0x13))) ^ (rax_582 >> 6)));\n            int64_t rax_626 = (((ROLQ(rdi_183, 0x17)) ^ ((RORQ(rdi_183, 0x12)) ^ (RORQ(rdi_183, 0xe)))) + ((((r8_193 ^ r9_131) & rdi_183) ^ r8_193) + (r10_99 + (-0x7b3787eb5e0f548e + rsi_280))));\n            int64_t rdx_184 = (rdx_183 + rax_626);\n            int64_t r10_115 = (((((rcx_265 | r11_283) & r12_101) | (rcx_265 & r11_283)) + (((ROLQ(r11_283, 0x1e)) ^ (RORQ(r11_283, 0x1c))) ^ (ROLQ(r11_283, 0x19)))) + rax_626);\n            int64_t rax_636 = ((((ROLQ(rsi_258, 3)) ^ (RORQ(rsi_258, 0x13))) ^ (rsi_258 >> 6)) + (rax_507 + ((((RORQ(rdi_163, 8)) ^ (RORQ(rdi_163, 1))) ^ (rdi_163 >> 7)) + rax_343)));\n            int64_t rsi_298 = (((ROLQ(rdx_184, 0x17)) ^ ((RORQ(rdx_184, 0x12)) ^ (RORQ(rdx_184, 0xe)))) + ((r8_193 + (-0x7338fdf7e59bc614 + rax_636)) + (((r9_131 ^ rdi_183) & rdx_184) ^ r9_131)));\n            int64_t r8_196 = (r12_101 + rsi_298);\n            int64_t rbx_70 = (((((r11_283 | r10_115) & rcx_265) | (r11_283 & r10_115)) + (((ROLQ(r10_115, 0x1e)) ^ (RORQ(r10_115, 0x1c))) ^ (ROLQ(r10_115, 0x19)))) + rsi_298);\n            int64_t rax_663 = ((((((RORQ(rax_378, 8)) ^ (RORQ(rax_378, 1))) ^ (rax_378 >> 7)) + rdi_163) + rax_527) + (((ROLQ(rsi_280, 3)) ^ (RORQ(rsi_280, 0x13))) ^ (rsi_280 >> 6)));\n            int64_t rax_673 = (((ROLQ(r8_196, 0x17)) ^ ((RORQ(r8_196, 0x12)) ^ (RORQ(r8_196, 0xe)))) + ((r9_131 + (-0x6f410005dc9ce1d8 + rax_663)) + (((rdi_183 ^ rdx_184) & r8_196) ^ rdi_183)));\n            int64_t rcx_266 = (rcx_265 + rax_673);\n            int64_t r13_140 = (((((r10_115 | rbx_70) & r11_283) | (r10_115 & rbx_70)) + (((ROLQ(rbx_70, 0x1e)) ^ (RORQ(rbx_70, 0x1c))) ^ (ROLQ(rbx_70, 0x19)))) + rax_673);\n            int64_t rax_680 = ((((((RORQ(rax_396, 8)) ^ (RORQ(rax_396, 1))) ^ (rax_396 >> 7)) + rax_378) + rax_545) + (((ROLQ(rax_636, 3)) ^ (RORQ(rax_636, 0x13))) ^ (rax_636 >> 6)));\n            int64_t rax_690 = (((ROLQ(rcx_266, 0x17)) ^ ((RORQ(rcx_266, 0x12)) ^ (RORQ(rcx_266, 0xe)))) + ((rdi_183 + (-0x5baf9314217d4217 + rax_680)) + (((rdx_184 ^ r8_196) & rcx_266) ^ rdx_184)));\n            int64_t r11_284 = (r11_283 + rax_690);\n            int64_t r14_125 = (((((rbx_70 | r13_140) & r10_115) | (rbx_70 & r13_140)) + (((ROLQ(r13_140, 0x1e)) ^ (RORQ(r13_140, 0x1c))) ^ (ROLQ(r13_140, 0x19)))) + rax_690);\n            int64_t rax_697 = ((((((RORQ(rax_416, 8)) ^ (RORQ(rax_416, 1))) ^ (rax_416 >> 7)) + rax_396) + rax_561) + (((ROLQ(rax_663, 3)) ^ (RORQ(rax_663, 0x13))) ^ (rax_663 >> 6)));\n            int64_t rax_707 = (((ROLQ(r11_284, 0x17)) ^ ((RORQ(r11_284, 0x12)) ^ (RORQ(r11_284, 0xe)))) + ((((r8_196 ^ rcx_266) & r11_284) ^ r8_196) + (rdx_184 + (-0x41065c084d3986eb + rax_697))));\n            int64_t rsi_338 = (r10_115 + rax_707);\n            int64_t rdx_198 = (((((r13_140 | r14_125) & rbx_70) | (r13_140 & r14_125)) + (((ROLQ(r14_125, 0x1e)) ^ (RORQ(r14_125, 0x1c))) ^ (ROLQ(r14_125, 0x19)))) + rax_707);\n            int64_t rax_716 = ((((((RORQ(r15_104, 8)) ^ (RORQ(r15_104, 1))) ^ (r15_104 >> 7)) + rax_416) + rax_582) + (((ROLQ(rax_680, 3)) ^ (RORQ(rax_680, 0x13))) ^ (rax_680 >> 6)));\n            int64_t r8_203 = (((ROLQ(rsi_338, 0x17)) ^ ((RORQ(rsi_338, 0x12)) ^ (RORQ(rsi_338, 0xe)))) + ((((rcx_266 ^ r11_284) & rsi_338) ^ rcx_266) + (r8_196 + (-0x398e870d1c8dacd5 + rax_716))));\n            int64_t rax_722 = (rbx_70 + r8_203);\n            int64_t rdi_225 = (((((r14_125 | rdx_198) & r13_140) | (r14_125 & rdx_198)) + (((ROLQ(rdx_198, 0x1e)) ^ (RORQ(rdx_198, 0x1c))) ^ (ROLQ(rdx_198, 0x19)))) + r8_203);\n            int64_t r8_214 = ((((ROLQ(rax_697, 3)) ^ (RORQ(rax_697, 0x13))) ^ (rax_697 >> 6)) + ((r15_104 + (((RORQ(rax_451, 8)) ^ (RORQ(rax_451, 1))) ^ (rax_451 >> 7))) + rsi_258));\n            var_b8 = r8_214;\n            int64_t rcx_273 = (((ROLQ(rax_722, 0x17)) ^ ((RORQ(rax_722, 0x12)) ^ (RORQ(rax_722, 0xe)))) + ((((r11_284 ^ rsi_338) & rax_722) ^ r11_284) + (rcx_266 + (-0x35d8c13115d99e64 + r8_214))));\n            int64_t r13_141 = (r13_140 + rcx_273);\n            int64_t r10_135 = (((((rdx_198 | rdi_225) & r14_125) | (rdx_198 & rdi_225)) + (((ROLQ(rdi_225, 0x1e)) ^ (RORQ(rdi_225, 0x1c))) ^ (ROLQ(rdi_225, 0x19)))) + rcx_273);\n            int64_t r12_114 = ((((ROLQ(rax_716, 3)) ^ (RORQ(rax_716, 0x13))) ^ (rax_716 >> 6)) + (((((RORQ(rax_469, 8)) ^ (RORQ(rax_469, 1))) ^ (rax_469 >> 7)) + rax_451) + rsi_280));\n            var_b0 = r12_114;\n            int64_t rcx_289 = (((ROLQ(r13_141, 0x17)) ^ ((RORQ(r13_141, 0x12)) ^ (RORQ(r13_141, 0xe)))) + ((r11_284 + (-0x2e794738de3f3df9 + r12_114)) + (((rsi_338 ^ rax_722) & r13_141) ^ rsi_338)));\n            int64_t r14_126 = (r14_125 + rcx_289);\n            int64_t r9_174 = (((((rdi_225 | r10_135) & rdx_198) | (rdi_225 & r10_135)) + (((ROLQ(r10_135, 0x1e)) ^ (RORQ(r10_135, 0x1c))) ^ (ROLQ(r10_135, 0x19)))) + rcx_289);\n            int64_t rbp_178 = ((((ROLQ(r8_214, 3)) ^ (RORQ(r8_214, 0x13))) ^ (r8_214 >> 6)) + (((((RORQ(rax_487, 8)) ^ (RORQ(rax_487, 1))) ^ (rax_487 >> 7)) + rax_469) + rax_636));\n            var_a8 = rbp_178;\n            int64_t rcx_303 = (((ROLQ(r14_126, 0x17)) ^ ((RORQ(r14_126, 0x12)) ^ (RORQ(r14_126, 0xe)))) + ((rsi_338 + (-0x15258229321f14e2 + rbp_178)) + (((rax_722 ^ r13_141) & r14_126) ^ rax_722)));\n            int64_t rdx_199 = (rdx_198 + rcx_303);\n            int64_t r8_241 = (((((r10_135 | r9_174) & rdi_225) | (r10_135 & r9_174)) + (((ROLQ(r9_174, 0x1e)) ^ (RORQ(r9_174, 0x1c))) ^ (ROLQ(r9_174, 0x19)))) + rcx_303);\n            int64_t rbx_79 = ((((ROLQ(r12_114, 3)) ^ (RORQ(r12_114, 0x13))) ^ (r12_114 >> 6)) + (((((RORQ(rax_507, 8)) ^ (RORQ(rax_507, 1))) ^ (rax_507 >> 7)) + rax_487) + rax_663));\n            var_a0 = rbx_79;\n            int64_t rcx_321 = (((ROLQ(rdx_199, 0x17)) ^ ((RORQ(rdx_199, 0x12)) ^ (RORQ(rdx_199, 0xe)))) + ((((r13_141 ^ r14_126) & rdx_199) ^ r13_141) + (rax_722 + (-0xa82b08011912e88 + rbx_79))));\n            int64_t rdi_226 = (rdi_225 + rcx_321);\n            int64_t rax_731 = (((((r9_174 | r8_241) & r10_135) | (r9_174 & r8_241)) + (((ROLQ(r8_241, 0x1e)) ^ (RORQ(r8_241, 0x1c))) ^ (ROLQ(r8_241, 0x19)))) + rcx_321);\n            int64_t r11_343 = ((((ROLQ(rbp_178, 3)) ^ (RORQ(rbp_178, 0x13))) ^ (rbp_178 >> 6)) + (rax_680 + ((((RORQ(rax_527, 8)) ^ (RORQ(rax_527, 1))) ^ (rax_527 >> 7)) + rax_507)));\n            var_98 = r11_343;\n            int64_t rcx_337 = (((ROLQ(rdi_226, 0x17)) ^ ((RORQ(rdi_226, 0x12)) ^ (RORQ(rdi_226, 0xe)))) + ((r13_141 + (0x6f067aa72176fba + r11_343)) + (((r14_126 ^ rdx_199) & rdi_226) ^ r14_126)));\n            int64_t r10_136 = (r10_135 + rcx_337);\n            int64_t rsi_368 = (((((r8_241 | rax_731) & r9_174) | (r8_241 & rax_731)) + (((ROLQ(rax_731, 0x1e)) ^ (RORQ(rax_731, 0x1c))) ^ (ROLQ(rax_731, 0x19)))) + rcx_337);\n            int64_t r15_116 = ((((((RORQ(rax_545, 8)) ^ (RORQ(rax_545, 1))) ^ (rax_545 >> 7)) + rax_527) + rax_697) + (((ROLQ(rbx_79, 3)) ^ (RORQ(rbx_79, 0x13))) ^ (rbx_79 >> 6)));\n            var_90 = r15_116;\n            int64_t r13_163 = (((ROLQ(r10_136, 0x17)) ^ ((RORQ(r10_136, 0x12)) ^ (RORQ(r10_136, 0xe)))) + ((r14_126 + (0xa637dc5a2c898a6 + r15_116)) + (((rdx_199 ^ rdi_226) & r10_136) ^ rdx_199)));\n            int64_t r9_175 = (r9_174 + r13_163);\n            int64_t rcx_361 = (((((rax_731 | rsi_368) & r8_241) | (rax_731 & rsi_368)) + (((ROLQ(rsi_368, 0x1e)) ^ (RORQ(rsi_368, 0x1c))) ^ (ROLQ(rsi_368, 0x19)))) + r13_163);\n            int64_t r13_170 = ((((((RORQ(rax_561, 8)) ^ (RORQ(rax_561, 1))) ^ (rax_561 >> 7)) + rax_545) + rax_716) + (((ROLQ(r11_343, 3)) ^ (RORQ(r11_343, 0x13))) ^ (r11_343 >> 6)));\n            var_88 = r13_170;\n            int64_t r13_179 = (((ROLQ(r9_175, 0x17)) ^ ((RORQ(r9_175, 0x12)) ^ (RORQ(r9_175, 0xe)))) + ((((rdi_226 ^ r10_136) & r9_175) ^ rdi_226) + (rdx_199 + (0x113f9804bef90dae + r13_170))));\n            int64_t r8_242 = (r8_241 + r13_179);\n            int64_t rdx_215 = (((((rsi_368 | rcx_361) & rax_731) | (rsi_368 & rcx_361)) + (((ROLQ(rcx_361, 0x1e)) ^ (RORQ(rcx_361, 0x1c))) ^ (ROLQ(rcx_361, 0x19)))) + r13_179);\n            int64_t r13_186 = ((((((RORQ(rax_582, 8)) ^ (RORQ(rax_582, 1))) ^ (rax_582 >> 7)) + rax_561) + r8_214) + (((ROLQ(r15_116, 3)) ^ (RORQ(r15_116, 0x13))) ^ (r15_116 >> 6)));\n            var_80 = r13_186;\n            int64_t r13_197 = ((((RORQ(r8_242, 0x12)) ^ (RORQ(r8_242, 0xe))) ^ (ROLQ(r8_242, 0x17))) + ((rdi_226 + (0x1b710b35131c471b + r13_186)) + (((r10_136 ^ r9_175) & r8_242) ^ r10_136)));\n            int64_t rdi_229 = (rax_731 + r13_197);\n            int64_t r13_198 = (r13_197 + ((((rcx_361 | rdx_215) & rsi_368) | (rcx_361 & rdx_215)) + (((ROLQ(rdx_215, 0x1e)) ^ (RORQ(rdx_215, 0x1c))) ^ (ROLQ(rdx_215, 0x19)))));\n            int64_t r15_148 = ((r12_114 + ((((RORQ(rsi_258, 8)) ^ (RORQ(rsi_258, 1))) ^ (rsi_258 >> 7)) + rax_582)) + (((ROLQ(r13_170, 3)) ^ (RORQ(r13_170, 0x13))) ^ (r13_170 >> 6)));\n            var_78 = r15_148;\n            int64_t rax_754 = (((ROLQ(rdi_229, 0x17)) ^ ((RORQ(rdi_229, 0x12)) ^ (RORQ(rdi_229, 0xe)))) + ((((r9_175 ^ r8_242) & rdi_229) ^ r9_175) + (r10_136 + (0x28db77f523047d84 + r15_148))));\n            int64_t rsi_369 = (rsi_368 + rax_754);\n            int64_t r10_152 = (((((rdx_215 | r13_198) & rcx_361) | (rdx_215 & r13_198)) + (((ROLQ(r13_198, 0x1e)) ^ (RORQ(r13_198, 0x1c))) ^ (ROLQ(r13_198, 0x19)))) + rax_754);\n            int64_t rbp_183 = ((((ROLQ(r13_186, 3)) ^ (RORQ(r13_186, 0x13))) ^ (r13_186 >> 6)) + (((((RORQ(rsi_280, 8)) ^ (RORQ(rsi_280, 1))) ^ (rsi_280 >> 7)) + rsi_258) + rbp_178));\n            var_70 = rbp_183;\n            int64_t rax_769 = (((ROLQ(rsi_369, 0x17)) ^ ((RORQ(rsi_369, 0x12)) ^ (RORQ(rsi_369, 0xe)))) + ((((r8_242 ^ rdi_229) & rsi_369) ^ r8_242) + (r9_175 + (0x32caab7b40c72493 + rbp_183))));\n            int64_t rcx_362 = (rcx_361 + rax_769);\n            int64_t r9_191 = (((((r13_198 | r10_152) & rdx_215) | (r13_198 & r10_152)) + (((ROLQ(r10_152, 0x1e)) ^ (RORQ(r10_152, 0x1c))) ^ (ROLQ(r10_152, 0x19)))) + rax_769);\n            int64_t rbx_84 = ((((ROLQ(r15_148, 3)) ^ (RORQ(r15_148, 0x13))) ^ (r15_148 >> 6)) + (((((RORQ(rax_636, 8)) ^ (RORQ(rax_636, 1))) ^ (rax_636 >> 7)) + rsi_280) + rbx_79));\n            var_68 = rbx_84;\n            int64_t r8_250 = ((((RORQ(rcx_362, 0x12)) ^ (RORQ(rcx_362, 0xe))) ^ (ROLQ(rcx_362, 0x17))) + ((((rdi_229 ^ rsi_369) & rcx_362) ^ rdi_229) + (r8_242 + (0x3c9ebe0a15c9bebc + rbx_84))));\n            int64_t rdx_216 = (rdx_215 + r8_250);\n            int64_t r8_251 = (r8_250 + ((((r10_152 | r9_191) & r13_198) | (r10_152 & r9_191)) + (((ROLQ(r9_191, 0x1e)) ^ (RORQ(r9_191, 0x1c))) ^ (ROLQ(r9_191, 0x19)))));\n            int64_t r11_350 = ((((ROLQ(rbp_183, 3)) ^ (RORQ(rbp_183, 0x13))) ^ (rbp_183 >> 6)) + (((((RORQ(rax_663, 8)) ^ (RORQ(rax_663, 1))) ^ (rax_663 >> 7)) + rax_636) + r11_343));\n            var_60 = r11_350;\n            int64_t rax_803 = ((((RORQ(rdx_216, 0x12)) ^ (RORQ(rdx_216, 0xe))) ^ (ROLQ(rdx_216, 0x17))) + ((rdi_229 + (0x431d67c49c100d4c + r11_350)) + (((rsi_369 ^ rcx_362) & rdx_216) ^ rsi_369)));\n            int64_t r13_199 = (r13_198 + rax_803);\n            int64_t rax_804 = (rax_803 + ((((r9_191 | r8_251) & r10_152) | (r9_191 & r8_251)) + (((ROLQ(r8_251, 0x1e)) ^ (RORQ(r8_251, 0x1c))) ^ (ROLQ(r8_251, 0x19)))));\n            int64_t rdi_249 = ((((ROLQ(rbx_84, 3)) ^ (RORQ(rbx_84, 0x13))) ^ (rbx_84 >> 6)) + (((((RORQ(rax_680, 8)) ^ (RORQ(rax_680, 1))) ^ (rax_680 >> 7)) + rax_663) + r15_116));\n            var_58 = rdi_249;\n            int64_t rbx_96 = ((((RORQ(r13_199, 0x12)) ^ (RORQ(r13_199, 0xe))) ^ (ROLQ(r13_199, 0x17))) + ((rsi_369 + (0x4cc5d4becb3e42b6 + rdi_249)) + (((rcx_362 ^ rdx_216) & r13_199) ^ rcx_362)));\n            int64_t r10_153 = (r10_152 + rbx_96);\n            int64_t rbx_97 = (rbx_96 + ((((r8_251 | rax_804) & r9_191) | (r8_251 & rax_804)) + (((ROLQ(rax_804, 0x1e)) ^ (RORQ(rax_804, 0x1c))) ^ (ROLQ(rax_804, 0x19)))));\n            int64_t r11_353 = (((r11_350 >> 6) ^ ((ROLQ(r11_350, 3)) ^ (RORQ(r11_350, 0x13)))) + (((((RORQ(rax_697, 8)) ^ (RORQ(rax_697, 1))) ^ (rax_697 >> 7)) + rax_680) + r13_170));\n            var_50 = r11_353;\n            int64_t rsi_393 = ((((RORQ(r10_153, 0x12)) ^ (RORQ(r10_153, 0xe))) ^ (ROLQ(r10_153, 0x17))) + ((rcx_362 + (0x597f299cfc657e2a + r11_353)) + (((rdx_216 ^ r13_199) & r10_153) ^ rdx_216)));\n            int64_t r9_192 = (r9_191 + rsi_393);\n            int64_t rsi_394 = (rsi_393 + ((((rax_804 | rbx_97) & r8_251) | (rax_804 & rbx_97)) + (((ROLQ(rbx_97, 0x1e)) ^ (RORQ(rbx_97, 0x1c))) ^ (ROLQ(rbx_97, 0x19)))));\n            int64_t r14_189 = ((((((RORQ(rax_716, 8)) ^ (RORQ(rax_716, 1))) ^ (rax_716 >> 7)) + rax_697) + r13_186) + (((ROLQ(rdi_249, 3)) ^ (RORQ(rdi_249, 0x13))) ^ (rdi_249 >> 6)));\n            var_48 = r14_189;\n            int64_t rdx_222 = ((((RORQ(r9_192, 0x12)) ^ (RORQ(r9_192, 0xe))) ^ (ROLQ(r9_192, 0x17))) + ((((r13_199 ^ r10_153) & r9_192) ^ r13_199) + (rdx_216 + (r14_189 + 0x5fcb6fab3ad6faec))));\n            int64_t r8_252 = (r8_251 + rdx_222);\n            int64_t rdx_223 = (rdx_222 + ((((rbx_97 | rsi_394) & rax_804) | (rbx_97 & rsi_394)) + (((ROLQ(rsi_394, 0x1e)) ^ (RORQ(rsi_394, 0x1c))) ^ (ROLQ(rsi_394, 0x19)))));\n            var_110_1 = (var_110_1 + rdx_223);\n            int64_t r12_170 = ((((((RORQ(r8_214, 8)) ^ (RORQ(r8_214, 1))) ^ (r8_214 >> 7)) + rax_716) + r15_148) + (((ROLQ(r11_353, 3)) ^ (RORQ(r11_353, 0x13))) ^ (r11_353 >> 6)));\n            var_40 = r12_170;\n            int64_t rcx_405 = ((((RORQ(r8_252, 0x12)) ^ (RORQ(r8_252, 0xe))) ^ (ROLQ(r8_252, 0x17))) + ((r13_199 + (r12_170 + 0x6c44198c4a475817)) + (((r10_153 ^ r9_192) & r8_252) ^ r10_153)));\n            int64_t r12_172 = ((((((ROLQ(rdx_223, 0x1e)) ^ (RORQ(rdx_223, 0x1c))) ^ (ROLQ(rdx_223, 0x19))) + (((rsi_394 | rdx_223) & rbx_97) | (rsi_394 & rdx_223))) + var_d0_1) + rcx_405);\n            var_d0_1 = r12_172;\n            *arg3 = r12_172;\n            rdi = var_110_1;\n            arg3[1] = var_110_1;\n            var_108_1 = (var_108_1 + rsi_394);\n            r13 = var_108_1;\n            var_100_1 = (var_100_1 + rbx_97);\n            rbp = var_100_1;\n            var_f8_1 = (var_f8_1 + (rax_804 + rcx_405));\n            rcx_1 = var_f8_1;\n            rax_3 = r12_172;\n            var_f0_1 = (var_f0_1 + r8_252);\n            r14_1 = var_f0_1;\n            var_e8_1 = (var_e8_1 + r9_192);\n            r9_1 = var_e8_1;\n            var_e0_1 = (var_e0_1 + r10_153);\n            r11 = var_e0_1;\n            arg3[2] = r13;\n            arg3[3] = rbp;\n            arg3[4] = rcx_1;\n            arg3[5] = r14_1;\n            arg3[6] = r9_1;\n            arg3[7] = r11;\n        } while (var_118 < rax_2);\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_406ed0",
            "funcStartAddr": "0x406ed0",
            "funcEndAddr": "0x406ff5",
            "decompiledFuncCode": "int64_t sub_406ed0(int64_t* arg1, int64_t arg2, int64_t arg3 @ rbp)\n{\n    int64_t var_10 = arg3;\n    int64_t rcx = arg1[0xa];\n    int64_t rax = arg1[9];\n    int64_t rbp_2 = (((arg3 - arg3) & 0xffffffffffffff80) + 0x100);\n    int64_t rsi_2 = (((arg2 - arg2) & 0xfffffffffffffff0) + 0x1f);\n    int64_t rdi_2 = (((arg1 - arg1) & 0xfffffffffffffff0) + 0x1e);\n    int64_t rdx_1 = (rcx + arg1[8]);\n    bool c_3 = (rcx + arg1[8]) < rcx;\n    arg1[8] = rdx_1;\n    if (c_3)\n    {\n        rax = (rax + 1);\n        arg1[9] = rax;\n    }\n    arg1[(rdi_2 + 0xb)] = _bswap(((rax << 3) | (rdx_1 >> 0x3d)));\n    int64_t rdi_3 = (rdx_1 << 3);\n    int64_t rax_11 = (((((((rdx_1 << 0x2b) & 0xff000000000000) | ((rdx_1 << 0x1b) & 0xff0000000000)) | (rdx_1 << 0x3b)) | ((rdx_1 << 0xb) & 0xff00000000)) | (rdi_3 >> 0x38)) | ((rdi_3 >> 8) & 0xff000000));\n    arg1[(rsi_2 + 0xb)] = ((rax_11 | ((rdi_3 >> 0x18) & 0xff0000)) | ((rdi_3 >> 0x28) & 0xff00));\n    memcpy((&arg1[0xb] + rcx), &data_40c260, ((rbp_2 - rcx) - 0x10));\n    /* tailcall */\n    return sub_403280(&arg1[0xb], rbp_2, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_407000",
            "funcStartAddr": "0x407000",
            "funcEndAddr": "0x407022",
            "decompiledFuncCode": "int64_t sub_407000(int64_t* arg1, uint64_t* arg2)\n{\n    sub_406ed0(arg1, arg2, arg2);\n    /* tailcall */\n    return sub_403240(arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_407030",
            "funcStartAddr": "0x407030",
            "funcEndAddr": "0x407052",
            "decompiledFuncCode": "int64_t sub_407030(int64_t* arg1, uint64_t* arg2)\n{\n    sub_406ed0(arg1, arg2, arg2);\n    /* tailcall */\n    return sub_403260(arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_407060",
            "funcStartAddr": "0x407060",
            "funcEndAddr": "0x40736e",
            "decompiledFuncCode": "void sub_407060(int128_t* arg1, uint64_t arg2, int64_t* arg3)\n{\n    uint64_t r13 = arg2;\n    int128_t* rbx = arg1;\n    int64_t rbp = arg3[0xa];\n    if (rbp != 0)\n    {\n        void* r15_2 = &arg3[0xb];\n        uint64_t r14_4 = (0x100 - rbp);\n        void* rdi_2 = (r15_2 + rbp);\n        if (r14_4 > arg2)\n        {\n            r14_4 = arg2;\n        }\n        memcpy(rdi_2, rbx, r14_4);\n        int64_t rsi_4 = (arg3[0xa] + r14_4);\n        arg3[0xa] = rsi_4;\n        if (rsi_4 > 0x80)\n        {\n            sub_403280(r15_2, (rsi_4 & 0xffffffffffffff80), arg3);\n            void* rsi_9 = (r15_2 + ((rbp + r14_4) & 0xffffffffffffff80));\n            uint64_t rcx_7 = (arg3[0xa] & 0x7f);\n            arg3[0xa] = rcx_7;\n            if (rcx_7 >= 8)\n            {\n                int64_t* rdi_9 = (&arg3[0xc] & 0xfffffffffffffff8);\n                arg3[0xb] = *rsi_9;\n                uint64_t rax_7 = rcx_7;\n                *((r15_2 + rax_7) - 8) = *((rsi_9 + rax_7) - 8);\n                void* rax_9 = (r15_2 - rdi_9);\n                void* rsi_10 = (rsi_9 - rax_9);\n                for (uint64_t rcx_10 = ((rcx_7 + rax_9) >> 3); rcx_10 != 0; rcx_10 = (rcx_10 - 1))\n                {\n                    *rdi_9 = *rsi_10;\n                    rdi_9 = &rdi_9[1];\n                    rsi_10 = (rsi_10 + 8);\n                }\n            }\n            else if ((rcx_7 & 4) != 0)\n            {\n                uint64_t rcx_11 = rcx_7;\n                arg3[0xb] = *rsi_9;\n                *((r15_2 + rcx_11) - 4) = *((rsi_9 + rcx_11) - 4);\n            }\n            else if (rcx_7 != 0)\n            {\n                arg3[0xb] = *rsi_9;\n                if ((rcx_7 & 2) != 0)\n                {\n                    uint64_t rcx_8 = rcx_7;\n                    *((r15_2 + rcx_8) - 2) = *((rsi_9 + rcx_8) - 2);\n                }\n            }\n        }\n        rbx = (rbx + r14_4);\n        r13 = (r13 - r14_4);\n    }\n    int128_t* rbp_1;\n    char* r14_3;\n    if (r13 > 0x7f)\n    {\n        if ((rbx & 7) == 0)\n        {\n            uint64_t rbp_2 = r13;\n            int64_t* rdi_1 = rbx;\n            r13 = (r13 & 0x7f);\n            int64_t rbp_3 = (rbp_2 & 0xffffffffffffff80);\n            rbx = (rbx + rbp_3);\n            sub_403280(rdi_1, rbp_3, arg3);\n        }\n        else\n        {\n            rbp_1 = &arg3[0xb];\n            if (r13 == 0x80)\n            {\n                r14_3 = rbx;\n            }\n            else\n            {\n                uint64_t rax_2 = ((r13 - 0x81) >> 7);\n                r14_3 = &rbx[((rax_2 + 1) * 8)];\n                do\n                {\n                    int128_t zmm0 = *rbx;\n                    rbx = (rbx - -0x80);\n                    *rbp_1 = zmm0;\n                    rbp_1[1] = rbx[-7];\n                    rbp_1[2] = rbx[-6];\n                    rbp_1[3] = rbx[-5];\n                    rbp_1[4] = rbx[-4];\n                    rbp_1[5] = rbx[-3];\n                    rbp_1[6] = rbx[-2];\n                    rbp_1[7] = rbx[-1];\n                    sub_403280(rbp_1, 0x80, arg3);\n                } while (rbx != r14_3);\n                r13 = ((r13 + ((-rax_2) << 7)) - 0x80);\n            }\n        }\n    }\n    if ((((r13 > 0x7f && (rbx & 7) == 0) || r13 <= 0x7f) && r13 != 0))\n    {\n        rbp_1 = &arg3[0xb];\n        r14_3 = rbx;\n    }\n    if (((((r13 > 0x7f && (rbx & 7) == 0) || r13 <= 0x7f) && r13 != 0) || (r13 > 0x7f && (rbx & 7) != 0)))\n    {\n        int64_t rdx_1 = arg3[0xa];\n        char* rsi = (rbp_1 + rdx_1);\n        uint64_t r13_1;\n        int64_t rax;\n        if (r13 >= 8)\n        {\n            void* rdi_4 = (&rsi[8] & 0xfffffffffffffff8);\n            *rsi = *r14_3;\n            rax = r13;\n            *((rsi + rax) - 8) = *((r14_3 + rax) - 8);\n            void* rcx_3 = (rsi - rdi_4);\n            void* rsi_6 = (r14_3 - rcx_3);\n            r13_1 = (r13 + rdx_1);\n            for (uint64_t rcx_5 = ((rcx_3 + r13) >> 3); rcx_5 != 0; rcx_5 = (rcx_5 - 1))\n            {\n                *rdi_4 = *rsi_6;\n                rdi_4 = (rdi_4 + 8);\n                rsi_6 = (rsi_6 + 8);\n            }\n        }\n        else\n        {\n            if ((r13 & 4) != 0)\n            {\n                *rsi = *r14_3;\n                rax = r13;\n                *((rsi + rax) - 4) = *((r14_3 + rax) - 4);\n            }\n            else if (r13 != 0)\n            {\n                *rsi = *r14_3;\n                if ((r13 & 2) != 0)\n                {\n                    rax = r13;\n                    *((rsi + rax) - 2) = *((r14_3 + rax) - 2);\n                }\n            }\n            r13_1 = (r13 + rdx_1);\n        }\n        if (((r13 >= 8 && r13_1 > 0x7f) || (r13 < 8 && r13_1 > 0x7f)))\n        {\n            r13_1 = (r13_1 - 0x80);\n            sub_403280(rbp_1, 0x80, arg3);\n            memcpy(rbp_1, &arg3[0x1b], r13_1);\n        }\n        arg3[0xa] = r13_1;\n        return;\n    }\n    if ((((r13 > 0x7f && (rbx & 7) == 0) || r13 <= 0x7f) && r13 == 0))\n    {\n        return;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_407370",
            "funcStartAddr": "0x407370",
            "funcEndAddr": "0x407431",
            "decompiledFuncCode": "uint64_t* sub_407370(int128_t* arg1, uint64_t arg2, uint64_t* arg3)\n{\n    int64_t var_168 = 0x6a09e667f3bcc908;\n    int64_t var_160 = -0x4498517a7b3558c5;\n    int64_t var_158 = 0x3c6ef372fe94f82b;\n    int64_t var_150 = -0x5ab00ac5a0e2c90f;\n    int64_t var_148 = 0x510e527fade682d1;\n    int64_t var_140 = -0x64fa9773d4c193e1;\n    int64_t var_138 = 0x1f83d9abfb41bd6b;\n    int64_t var_130 = 0x5be0cd19137e2179;\n    int64_t var_120 = 0;\n    int64_t var_128 = 0;\n    int64_t var_118 = 0;\n    int64_t rbp;\n    sub_406ed0(&var_168, sub_407060(arg1, arg2, &var_168), rbp);\n    return sub_403240(&var_168, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_407440",
            "funcStartAddr": "0x407440",
            "funcEndAddr": "0x407501",
            "decompiledFuncCode": "uint64_t* sub_407440(int128_t* arg1, uint64_t arg2, uint64_t* arg3)\n{\n    int64_t var_168 = -0x344462a23efa6128;\n    int64_t var_160 = 0x629a292a367cd507;\n    int64_t var_158 = -0x6ea6fea5cf8f22e9;\n    int64_t var_150 = 0x152fecd8f70e5939;\n    int64_t var_148 = 0x67332667ffc00b31;\n    int64_t var_140 = -0x714bb57897a7eaef;\n    int64_t var_138 = -0x24f3d1f29b067059;\n    int64_t var_130 = 0x47b5481dbefa4fa4;\n    int64_t var_120 = 0;\n    int64_t var_128 = 0;\n    int64_t var_118 = 0;\n    int64_t rbp;\n    sub_406ed0(&var_168, sub_407060(arg1, arg2, &var_168), rbp);\n    return sub_403260(&var_168, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_407510",
            "funcStartAddr": "0x407510",
            "funcEndAddr": "0x4076a5",
            "decompiledFuncCode": "int64_t sub_407510(int32_t* arg1, uint64_t* arg2)\n{\n    int64_t* rax = malloc(0x8048);\n    if (rax == 0)\n    {\n        return 1;\n    }\n    int64_t var_140 = 0;\n    int64_t var_188 = 0x6a09e667f3bcc908;\n    int64_t var_180 = -0x4498517a7b3558c5;\n    int64_t var_178 = 0x3c6ef372fe94f82b;\n    int64_t var_170 = -0x5ab00ac5a0e2c90f;\n    int64_t var_168 = 0x510e527fade682d1;\n    int64_t var_160 = -0x64fa9773d4c193e1;\n    int64_t var_158 = 0x1f83d9abfb41bd6b;\n    int64_t var_150 = 0x5be0cd19137e2179;\n    int64_t var_148 = 0;\n    int64_t var_138 = 0;\n    while (true)\n    {\n        uint64_t rbx_1 = 0;\n        while (true)\n        {\n            uint64_t rax_1;\n            int64_t rsi;\n            rax_1 = fread_unlocked((rax + rbx_1), 1, (0x8000 - rbx_1), arg1);\n            rbx_1 = (rbx_1 + rax_1);\n            if (rbx_1 == 0x8000)\n            {\n                sub_403280(rax, 0x8000, &var_188);\n                break;\n            }\n            int32_t rdx_1 = *arg1;\n            if ((rax_1 != 0 && (rdx_1 & 0x10) == 0))\n            {\n                continue;\n            }\n            if ((rax_1 == 0 && (rdx_1 & 0x20) != 0))\n            {\n                free(rax);\n                return 1;\n            }\n            if (rbx_1 != 0)\n            {\n                rsi = sub_407060(rax, rbx_1, &var_188);\n            }\n            sub_406ed0(&var_188, rsi, arg1);\n            sub_403240(&var_188, arg2);\n            free(rax);\n            return 0;\n        }\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4076b0",
            "funcStartAddr": "0x4076b0",
            "funcEndAddr": "0x407845",
            "decompiledFuncCode": "int64_t sub_4076b0(int32_t* arg1, uint64_t* arg2)\n{\n    int64_t* rax = malloc(0x8048);\n    if (rax == 0)\n    {\n        return 1;\n    }\n    int64_t var_140 = 0;\n    int64_t var_188 = -0x344462a23efa6128;\n    int64_t var_180 = 0x629a292a367cd507;\n    int64_t var_178 = -0x6ea6fea5cf8f22e9;\n    int64_t var_170 = 0x152fecd8f70e5939;\n    int64_t var_168 = 0x67332667ffc00b31;\n    int64_t var_160 = -0x714bb57897a7eaef;\n    int64_t var_158 = -0x24f3d1f29b067059;\n    int64_t var_150 = 0x47b5481dbefa4fa4;\n    int64_t var_148 = 0;\n    int64_t var_138 = 0;\n    while (true)\n    {\n        uint64_t rbx_1 = 0;\n        while (true)\n        {\n            uint64_t rax_1;\n            int64_t rsi;\n            rax_1 = fread_unlocked((rax + rbx_1), 1, (0x8000 - rbx_1), arg1);\n            rbx_1 = (rbx_1 + rax_1);\n            if (rbx_1 == 0x8000)\n            {\n                sub_403280(rax, 0x8000, &var_188);\n                break;\n            }\n            int32_t rdx_1 = *arg1;\n            if ((rax_1 != 0 && (rdx_1 & 0x10) == 0))\n            {\n                continue;\n            }\n            if ((rax_1 == 0 && (rdx_1 & 0x20) != 0))\n            {\n                free(rax);\n                return 1;\n            }\n            if (rbx_1 != 0)\n            {\n                rsi = sub_407060(rax, rbx_1, &var_188);\n            }\n            sub_406ed0(&var_188, rsi, arg1);\n            sub_403260(&var_188, arg2);\n            free(rax);\n            return 0;\n        }\n    }\n}\n\n"
        },
        {
            "funcName": "sub_407850",
            "funcStartAddr": "0x407850",
            "funcEndAddr": "0x407855",
            "decompiledFuncCode": "int64_t sub_407850(int32_t arg1, int64_t arg2, off64_t arg3, int32_t arg4)\n{\n    /* tailcall */\n    return posix_fadvise(arg1, arg2, arg3, arg4);\n}\n\n"
        },
        {
            "funcName": "sub_407860",
            "funcStartAddr": "0x407860",
            "funcEndAddr": "0x407881",
            "decompiledFuncCode": "void sub_407860(FILE* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        return;\n    }\n    /* tailcall */\n    return posix_fadvise(fileno(arg1), 0, 0, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_407890",
            "funcStartAddr": "0x407890",
            "funcEndAddr": "0x407923",
            "decompiledFuncCode": "FILE* sub_407890(char* arg1, char* arg2)\n{\n    FILE* rax = fopen(arg1, arg2);\n    FILE* rbx = rax;\n    if (rax != 0)\n    {\n        int32_t rax_1 = fileno(rax);\n        if (rax_1 <= 2)\n        {\n            int32_t rax_3 = sub_409570(rax_1);\n            if (rax_3 < 0)\n            {\n                int32_t* rax_7 = __errno_location();\n                FILE* rdi_5 = rbx;\n                rbx = nullptr;\n                int32_t r12_2 = *rax_7;\n                sub_409db0(rdi_5);\n                *rax_7 = r12_2;\n            }\n            else\n            {\n                int32_t rax_4 = sub_409db0(rbx);\n                FILE* rax_5;\n                if (rax_4 == 0)\n                {\n                    rax_5 = fdopen(rax_3, arg2);\n                    rbx = rax_5;\n                }\n                if ((rax_4 != 0 || (rax_4 == 0 && rax_5 == 0)))\n                {\n                    int32_t* rax_6 = __errno_location();\n                    int32_t rbp_1 = *rax_6;\n                    close(rax_3);\n                    *rax_6 = rbp_1;\n                    rbx = nullptr;\n                }\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_407930",
            "funcStartAddr": "0x407930",
            "funcEndAddr": "0x4079c9",
            "decompiledFuncCode": "char* sub_407930(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_40c320;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_60f308 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4079d0",
            "funcStartAddr": "0x4079d0",
            "funcEndAddr": "0x407ac2",
            "decompiledFuncCode": "char* sub_4079d0(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_40af20();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_407ab1:\n                void* const rbx_1 = &data_40c324;\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_407ab1;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_407ab1;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_407ab1;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_407ab1;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_407ab1;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_407ab1;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_407ab1;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_40c32d;\n            if (cond:2_1)\n            {\n                rbx = &data_40c32a;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_407ab1;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_407ab1;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_407ab1;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_407ab1;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_407ab1;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_40c331;\n            if (cond:1_1)\n            {\n                rbx = &data_40c326;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_407ad0",
            "funcStartAddr": "0x401920",
            "funcEndAddr": "0x408cf1",
            "decompiledFuncCode": "int64_t sub_407ad0(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    char const* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n    label_407b68:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_407edc:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_407f24;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_407ad0(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char const rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_407f3b;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_408075;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_407cc5;\n                            }\n                            goto label_407fb0;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_408075;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_407ea0;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_407ea0:\n                            if (var_c0 == 0)\n                            {\n                                goto label_407eab;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_407d07:\n                            if (var_5c == 0)\n                            {\n                                goto label_407d18;\n                            }\n                        label_407ed0:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_407ed8;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_40810b;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_40810b:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_40811a:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_407edc;\n                            }\n                            goto label_407ea0;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_407ea0;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_407ea0;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_40810b;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_407ca6;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_407ca6:\n                            if (var_5c == 0)\n                            {\n                                goto label_407cc5;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_407cc5;\n                            }\n                            goto label_40811a;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_407c9d:\n                            if (r12_1 != 0)\n                            {\n                                goto label_407eab;\n                            }\n                            goto label_407ca6;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_4080d0:\n                            rdx = r11_1 == 2;\n                        label_407cc5:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_407dcc;\n                            }\n                            goto label_407ccf;\n                        }\n                        case 0x27:\n                        {\n                            goto label_407e4d;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_407e1d;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_407e7a;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_408c0d;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_407de4;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_407c79;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_408270;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_408270;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_408bc0:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_407f24:\n                            rbx_1 = sub_407ad0(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_407f3b:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_408075;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_407fc7;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_408075;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_407f90:\n                                r13 = 0;\n                                goto label_407d4b;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_407d18:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_407d4b:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_407d55;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_407d55:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_407d5d;\n                            }\n                            case 9:\n                            {\n                                goto label_407f40;\n                            }\n                            case 0xa:\n                            {\n                                goto label_407eb8;\n                            }\n                            case 0xb:\n                            {\n                                goto label_407fa0;\n                            }\n                            case 0xc:\n                            {\n                                goto label_407f80;\n                            }\n                            case 0xd:\n                            {\n                                goto label_407f69;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_4082ca;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_407f55;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_4082aa;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_408292;\n                            }\n                            case 0x27:\n                            {\n                                goto label_407e4d;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_407e1d;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_407e7a;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_407c79;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_408270:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_408070:\n                            var_b8 = 0;\n                        label_408075:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_4080c4:\n                                if (rdx == 0)\n                                {\n                                    goto label_4080d0;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_4085c1:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_407de4;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_407edc;\n                                }\n                                r13 = var_98;\n                                goto label_407d5d;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_40ade0(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_407edc;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_4085c1;\n                            }\n                            goto label_4080c4;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_407fb0:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_407edc;\n                                }\n                                var_b8 = 0;\n                            label_407fc7:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_408012;\n                                    }\n                                    rax_8 = r10;\n                                label_40800a:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_408012:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_407dcc;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_408053;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_40800a;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_407dcc;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_408070;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_407f85;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_407ebd;\n                            }\n                            case 9:\n                            {\n                            label_407f40:\n                                rbp_3 = 0x74;\n                                goto label_407ebd;\n                            }\n                            case 0xa:\n                            {\n                            label_407eb8:\n                                rbp_3 = 0x6e;\n                            label_407ebd:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_407ed0;\n                                }\n                                goto label_407d18;\n                            }\n                            case 0xb:\n                            {\n                            label_407fa0:\n                                rbp_3 = 0x76;\n                                goto label_407f85;\n                            }\n                            case 0xc:\n                            {\n                            label_407f80:\n                                rbp_3 = 0x66;\n                            label_407f85:\n                                if (var_5c == 0)\n                                {\n                                    goto label_407f90;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_407ed8:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_407edc;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_407f69:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_407ea0;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_4082ca:\n                                rbp_3 = 0x20;\n                                goto label_408292;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_407f55:\n                                rdx = 0;\n                            label_407eab:\n                                r13 = 0;\n                                goto label_407cc5;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_4082aa:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_407cc5;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_407ccf:\n                                rax_8 = 0;\n                                goto label_407cd1;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_408292:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_407cd1;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_407e4d:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_407cc5;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_408c0d;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_407dcc;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_407e1d:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_408c0d:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_407edc;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_407dcc:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_407d07;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_407de4;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_407cc5;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_4083b0:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_407cc5;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_4083b0;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_4083b0;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_4083b0;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_4083b0;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_408bc0;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_408053:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_407dcc;\n                                }\n                            label_407cd1:\n                                if (arg7 == 0)\n                                {\n                                    goto label_407dcc;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_407dcc;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_407d07;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_407e7a:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_407ea0;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_407de4:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_407d5d;\n                                }\n                            label_407d5d:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_407d66;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_407d66:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_407c79:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_407eab;\n                                }\n                                goto label_407c9d;\n                            }\n                        }\n                    }\n                }\n            }\n        label_408356:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"'\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_407b68;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"'\";\n                goto label_407b68;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"'\";\n            goto label_407b68;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40c324;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40c324;\n            }\n            goto label_407b68;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_40c324;\n            goto label_407b68;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_407b68;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_4079d0(&data_40c335, r13);\n                arg9 = sub_4079d0(\"'\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_407b68;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_408356;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n        goto label_407b68;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_408d00",
            "funcStartAddr": "0x401925",
            "funcEndAddr": "0x408e9e",
            "decompiledFuncCode": "char* sub_408d00(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_60f278;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_60f290 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_409d70();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x60f280)\n        {\n            int64_t rax_9 = sub_409b80(0, rsi_1);\n            int128_t zmm0 = data_60f280;\n            rbx = rax_9;\n            data_60f278 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_409b80(rbx, rsi_1);\n            data_60f278 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_60f290;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_60f290 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_407ad0(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        uint64_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x60f320)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_409b20(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_407ad0(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_408ea0",
            "funcStartAddr": "0x408ea0",
            "funcEndAddr": "0x408ed4",
            "decompiledFuncCode": "int64_t sub_408ea0(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x60f420;\n    }\n    int64_t rax_1 = sub_409d20(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_408ee0",
            "funcStartAddr": "0x408ee0",
            "funcEndAddr": "0x408eef",
            "decompiledFuncCode": "uint64_t sub_408ee0(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60f420;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_408ef0",
            "funcStartAddr": "0x408ef0",
            "funcEndAddr": "0x408eff",
            "decompiledFuncCode": "void sub_408ef0(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60f420;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_408f00",
            "funcStartAddr": "0x408f00",
            "funcEndAddr": "0x408f33",
            "decompiledFuncCode": "uint64_t sub_408f00(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x60f420;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_408f40",
            "funcStartAddr": "0x408f40",
            "funcEndAddr": "0x408f53",
            "decompiledFuncCode": "uint64_t sub_408f40(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60f420;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_408f60",
            "funcStartAddr": "0x408f60",
            "funcEndAddr": "0x408f8b",
            "decompiledFuncCode": "void sub_408f60(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60f420;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x60f420;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_408f90",
            "funcStartAddr": "0x408f90",
            "funcEndAddr": "0x409002",
            "decompiledFuncCode": "int64_t sub_408f90(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_60f420;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_407ad0(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_409010",
            "funcStartAddr": "0x409010",
            "funcEndAddr": "0x4090f1",
            "decompiledFuncCode": "char* sub_409010(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_60f420;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_407ad0(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_409b20((rax_2 + 1));\n    sub_407ad0(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_409100",
            "funcStartAddr": "0x409100",
            "funcEndAddr": "0x40910a",
            "decompiledFuncCode": "int64_t sub_409100(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_409010(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_409110",
            "funcStartAddr": "0x409110",
            "funcEndAddr": "0x4091a5",
            "decompiledFuncCode": "uint64_t sub_409110()\n{\n    uint64_t rax_2 = data_60f290;\n    int64_t r12 = data_60f278;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x60f320)\n    {\n        rax_2 = free(rdi_2);\n        *data_60f280 = 0x100;\n        *(data_60f280 + 8) = 0x60f320;\n    }\n    if (r12 != 0x60f280)\n    {\n        rax_2 = free(r12);\n        data_60f278 = 0x60f280;\n    }\n    data_60f290 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_4091b0",
            "funcStartAddr": "0x4091b0",
            "funcEndAddr": "0x4091c1",
            "decompiledFuncCode": "int64_t sub_4091b0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_408d00(arg1, arg2, -1, &data_60f420);\n}\n\n"
        },
        {
            "funcName": "sub_4091d0",
            "funcStartAddr": "0x4091d0",
            "funcEndAddr": "0x4091da",
            "decompiledFuncCode": "int64_t sub_4091d0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_408d00(arg1, arg2, arg3, &data_60f420);\n}\n\n"
        },
        {
            "funcName": "sub_4091e0",
            "funcStartAddr": "0x4091e0",
            "funcEndAddr": "0x4091f6",
            "decompiledFuncCode": "int64_t sub_4091e0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_408d00(0, arg1, -1, &data_60f420);\n}\n\n"
        },
        {
            "funcName": "sub_409200",
            "funcStartAddr": "0x409200",
            "funcEndAddr": "0x409212",
            "decompiledFuncCode": "int64_t sub_409200(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_408d00(0, arg1, arg2, &data_60f420);\n}\n\n"
        },
        {
            "funcName": "sub_409220",
            "funcStartAddr": "0x40192a",
            "funcEndAddr": "0x409288",
            "decompiledFuncCode": "char* sub_409220(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_408d00(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_409290",
            "funcStartAddr": "0x40192f",
            "funcEndAddr": "0x4092f4",
            "decompiledFuncCode": "char* sub_409290(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_408d00(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_409300",
            "funcStartAddr": "0x409300",
            "funcEndAddr": "0x40930c",
            "decompiledFuncCode": "int64_t sub_409300(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_409220(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_409310",
            "funcStartAddr": "0x409310",
            "funcEndAddr": "0x40931f",
            "decompiledFuncCode": "int64_t sub_409310(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_409290(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_409320",
            "funcStartAddr": "0x409320",
            "funcEndAddr": "0x409390",
            "decompiledFuncCode": "char* sub_409320(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_60f450;\n    int128_t var_48 = data_60f420;\n    int128_t var_38 = data_60f430;\n    int128_t var_28 = data_60f440;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_408d00(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_409390",
            "funcStartAddr": "0x409390",
            "funcEndAddr": "0x40939d",
            "decompiledFuncCode": "int64_t sub_409390(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_409320(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4093a0",
            "funcStartAddr": "0x4093a0",
            "funcEndAddr": "0x4093b1",
            "decompiledFuncCode": "int64_t sub_4093a0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_409320(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_4093c0",
            "funcStartAddr": "0x4093c0",
            "funcEndAddr": "0x4093ca",
            "decompiledFuncCode": "int64_t sub_4093c0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_409320(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_4093d0",
            "funcStartAddr": "0x401934",
            "funcEndAddr": "0x40943e",
            "decompiledFuncCode": "char* sub_4093d0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_408d00(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_409440",
            "funcStartAddr": "0x409440",
            "funcEndAddr": "0x4094ac",
            "decompiledFuncCode": "char* sub_409440(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_60f420;\n    int128_t var_38 = data_60f430;\n    int128_t var_28 = data_60f440;\n    int64_t var_18 = data_60f450;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_408d00(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_409570",
            "funcStartAddr": "0x409570",
            "funcEndAddr": "0x40957e",
            "decompiledFuncCode": "int64_t sub_409570(int32_t arg1)\n{\n    /* tailcall */\n    return sub_409e30(arg1, 0, 3);\n}\n\n"
        },
        {
            "funcName": "sub_409580",
            "funcStartAddr": "0x401939",
            "funcEndAddr": "0x40995d",
            "decompiledFuncCode": "int64_t sub_409580(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_40d08b, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_409960",
            "funcStartAddr": "0x409960",
            "funcEndAddr": "0x409980",
            "decompiledFuncCode": "int64_t sub_409960(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_409580(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_409980",
            "funcStartAddr": "0x409980",
            "funcEndAddr": "0x4099e0",
            "decompiledFuncCode": "int64_t sub_409980(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_409580(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_4099e0",
            "funcStartAddr": "0x4099e0",
            "funcEndAddr": "0x409a9c",
            "decompiledFuncCode": "int64_t sub_4099e0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_409580(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_409aa0",
            "funcStartAddr": "0x409aa0",
            "funcEndAddr": "0x409b14",
            "decompiledFuncCode": "int64_t sub_409aa0()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_409b20",
            "funcStartAddr": "0x409b20",
            "funcEndAddr": "0x409b3a",
            "decompiledFuncCode": "int64_t sub_409b20(uint64_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_409d70();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_409b80",
            "funcStartAddr": "0x409b80",
            "funcEndAddr": "0x409bb6",
            "decompiledFuncCode": "int64_t sub_409b80(int64_t arg1, uint64_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_409d70();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_409cca",
            "funcStartAddr": "0x409cca",
            "funcEndAddr": "0x409cd0",
            "decompiledFuncCode": "int64_t sub_409cca() __noreturn\n{\n    sub_409d70();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_409cd0",
            "funcStartAddr": "0x409cd0",
            "funcEndAddr": "0x409ce7",
            "decompiledFuncCode": "int64_t sub_409cd0(uint64_t arg1)\n{\n    /* tailcall */\n    return memset(sub_409b20(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_409cf0",
            "funcStartAddr": "0x409cf0",
            "funcEndAddr": "0x409d1e",
            "decompiledFuncCode": "int64_t sub_409cf0(uint64_t arg1, uint64_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_409d70();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_409d20",
            "funcStartAddr": "0x409d20",
            "funcEndAddr": "0x409d48",
            "decompiledFuncCode": "int64_t sub_409d20(int64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_409b20(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_409d50",
            "funcStartAddr": "0x409d50",
            "funcEndAddr": "0x409d63",
            "decompiledFuncCode": "int64_t sub_409d50(char* arg1)\n{\n    /* tailcall */\n    return sub_409d20(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_409d70",
            "funcStartAddr": "0x409d70",
            "funcEndAddr": "0x409da1",
            "decompiledFuncCode": "int64_t sub_409d70() __noreturn\n{\n    error(data_60f220, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_409db0",
            "funcStartAddr": "0x409db0",
            "funcEndAddr": "0x409e2b",
            "decompiledFuncCode": "int64_t sub_409db0(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_409f70(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_409e30",
            "funcStartAddr": "0x409e30",
            "funcEndAddr": "0x409f65",
            "decompiledFuncCode": "uint64_t sub_409e30(int32_t arg1, int32_t arg2, int32_t arg3)\n{\n    void* var_58 = &arg_8;\n    int64_t rcx;\n    int64_t var_30 = rcx;\n    int32_t var_60 = 0x10;\n    void var_48;\n    void* var_50 = &var_48;\n    if (arg2 != 0x406)\n    {\n        return fcntl();\n    }\n    int32_t var_60_1 = 0x18;\n    int32_t rax_2;\n    int32_t rax_5;\n    int32_t* rax_15;\n    int32_t rax_17;\n    int32_t rbx;\n    if (data_60f458 < 0)\n    {\n        rax_5 = sub_409e30();\n        rbx = rax_5;\n    }\n    else\n    {\n        rax_2 = fcntl();\n        rbx = rax_2;\n        if (rax_2 < 0)\n        {\n            rax_15 = __errno_location();\n            if (*rax_15 == 0x16)\n            {\n                rax_17 = sub_409e30(arg1, 0, arg3);\n                rbx = rax_17;\n                if (rax_17 >= 0)\n                {\n                    data_60f458 = 0xffffffff;\n                }\n            }\n        }\n    }\n    if (((((data_60f458 >= 0 && rax_2 < 0) && *rax_15 == 0x16) && rax_17 >= 0) || (rax_5 >= 0 && data_60f458 == 0xffffffff)))\n    {\n        int32_t rax_7 = fcntl(rbx, 1);\n        int32_t rax_10;\n        if (rax_7 >= 0)\n        {\n            rax_10 = fcntl(rbx, 2, (rax_7 | 1));\n        }\n        if ((rax_7 < 0 || (rax_7 >= 0 && rax_10 == 0xffffffff)))\n        {\n            int32_t* rax_11 = __errno_location();\n            int32_t rdi_2 = rbx;\n            rbx = -1;\n            int32_t r12_1 = *rax_11;\n            close(rdi_2);\n            *rax_11 = r12_1;\n        }\n    }\n    if ((data_60f458 >= 0 && (rax_2 >= 0 || (rax_2 < 0 && *rax_15 != 0x16))))\n    {\n        data_60f458 = 1;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_409f70",
            "funcStartAddr": "0x409f70",
            "funcEndAddr": "0x409fb0",
            "decompiledFuncCode": "int64_t sub_409f70(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_409fb0(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_409fb0",
            "funcStartAddr": "0x409fb0",
            "funcEndAddr": "0x40a007",
            "decompiledFuncCode": "off64_t sub_409fb0(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_40a010",
            "funcStartAddr": "0x40a010",
            "funcEndAddr": "0x40a0ef",
            "decompiledFuncCode": "uint64_t sub_40a010(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_40a0f0",
            "funcStartAddr": "0x40a0f0",
            "funcEndAddr": "0x40a70c",
            "decompiledFuncCode": "uint64_t sub_40a0f0(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_40a320;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_40a246;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_40a246;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_40a246:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_40a320:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_40a34e;\n                }\n                *arg5 = r12;\n            label_40a34e:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_40a36c;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_40a36c:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_40a36c;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_40a2de;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_40a2de:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_40a710",
            "funcStartAddr": "0x40a710",
            "funcEndAddr": "0x40acd6",
            "decompiledFuncCode": "uint64_t sub_40a710(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_40a94c;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_40a7d8;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_40a7d8:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_40a010(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_40d529;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_40a010(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_40a94c;\n                }\n                *arg7 = rdx_2;\n            label_40a94c:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_40aa50;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_40d529;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_40aac0;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_40aa50;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_40aa50;\n                            }\n                            goto label_40aa11;\n                        }\n                    label_40aa11:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_40a0f0(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_40d52a);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_40aa50:\n                            rdx = &r14_1[1];\n                        label_40a891:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_40aa8e;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_40aa8e:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_40d548;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_40aac0:\n                                        r14_2 = sub_40a0f0(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_40ab7d;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_40ab7d:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_40a94c;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_40a7d8;\n        }\n        goto label_40a891;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40ad40",
            "funcStartAddr": "0x40ad40",
            "funcEndAddr": "0x40ad58",
            "decompiledFuncCode": "uint64_t sub_40ad40(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_40ade0",
            "funcStartAddr": "0x40ade0",
            "funcEndAddr": "0x40ae5a",
            "decompiledFuncCode": "uint64_t sub_40ade0(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_40d52c[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_40ae0a;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_40ae0a:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_40aec0() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_40ae60",
            "funcStartAddr": "0x40ae60",
            "funcEndAddr": "0x40aebd",
            "decompiledFuncCode": "uint64_t sub_40ae60(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_409db0(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40aec0",
            "funcStartAddr": "0x40aec0",
            "funcEndAddr": "0x40af1e",
            "decompiledFuncCode": "int64_t sub_40aec0()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_40d54c;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            void* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40af20",
            "funcStartAddr": "0x40af20",
            "funcEndAddr": "0x40b482",
            "decompiledFuncCode": "char* sub_40af20()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_60f498;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_40d52c[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        uint64_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            uint64_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_40b01c;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_40b066;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_40b01c:\n            r15 = &data_40d52c[0x1b];\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_40b066:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, \"r\");\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_40b11c:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_40b2ab;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_40b158:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_40b158;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_40b192:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_40b192;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_40d52c[0x1b];\n                                    free(rdi_26);\n                                    sub_409db0(rax_12);\n                                    goto label_40b0a7;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_40b36b:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_40b36b;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_40b3b9:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_40b3b9;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_40b11c;\n                        }\n                        break;\n                    }\n                label_40b2ab:\n                    sub_409db0(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_40d52c[0x1b];\n            }\n        label_40b0a7:\n            free(rbp_3);\n        }\n        data_60f498 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x40b490",
            "funcEndAddr": "0x40b4ed",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x40b4f0",
            "funcEndAddr": "0x40b4f1",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_40b500",
            "funcStartAddr": "0x40b500",
            "funcEndAddr": "0x40b518",
            "decompiledFuncCode": "int64_t sub_40b500(void (* arg1)(void*))\n{\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, data_60f208);\n}\n\n"
        },
        {
            "funcName": "sub_40b518",
            "funcStartAddr": "0x40b518",
            "funcEndAddr": "0x40b538",
            "decompiledFuncCode": "int64_t sub_40b518(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_60ee30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}