{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stat.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 216,
    "funcInfo": [
        {
            "funcName": "sub_401da0",
            "funcStartAddr": "0x401da0",
            "funcEndAddr": "0x401dac",
            "decompiledFuncCode": "int64_t sub_401da0()\n{\n    int64_t var_8 = data_617008;\n    /* jump -> data_617010 */\n}\n\n"
        },
        {
            "funcName": "sub_401db6",
            "funcStartAddr": "0x401db6",
            "funcEndAddr": "0x401dc0",
            "decompiledFuncCode": "int64_t sub_401db6()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401dc6",
            "funcStartAddr": "0x401dc6",
            "funcEndAddr": "0x401dd0",
            "decompiledFuncCode": "int64_t sub_401dc6()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401dd6",
            "funcStartAddr": "0x401dd6",
            "funcEndAddr": "0x401de0",
            "decompiledFuncCode": "int64_t sub_401dd6()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401de6",
            "funcStartAddr": "0x401de6",
            "funcEndAddr": "0x401df0",
            "decompiledFuncCode": "int64_t sub_401de6()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401df6",
            "funcStartAddr": "0x401df6",
            "funcEndAddr": "0x401e00",
            "decompiledFuncCode": "int64_t sub_401df6()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401e06",
            "funcStartAddr": "0x401e06",
            "funcEndAddr": "0x401e10",
            "decompiledFuncCode": "int64_t sub_401e06()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401e16",
            "funcStartAddr": "0x401e16",
            "funcEndAddr": "0x401e20",
            "decompiledFuncCode": "int64_t sub_401e16()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401e26",
            "funcStartAddr": "0x401e26",
            "funcEndAddr": "0x401e30",
            "decompiledFuncCode": "int64_t sub_401e26()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401e36",
            "funcStartAddr": "0x401e36",
            "funcEndAddr": "0x401e40",
            "decompiledFuncCode": "int64_t sub_401e36()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401e46",
            "funcStartAddr": "0x401e46",
            "funcEndAddr": "0x401e50",
            "decompiledFuncCode": "int64_t sub_401e46()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401e56",
            "funcStartAddr": "0x401e56",
            "funcEndAddr": "0x401e60",
            "decompiledFuncCode": "int64_t sub_401e56()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401e66",
            "funcStartAddr": "0x401e66",
            "funcEndAddr": "0x401e70",
            "decompiledFuncCode": "int64_t sub_401e66()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401e76",
            "funcStartAddr": "0x401e76",
            "funcEndAddr": "0x401e80",
            "decompiledFuncCode": "int64_t sub_401e76()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401e86",
            "funcStartAddr": "0x401e86",
            "funcEndAddr": "0x401e90",
            "decompiledFuncCode": "int64_t sub_401e86()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401e96",
            "funcStartAddr": "0x401e96",
            "funcEndAddr": "0x401ea0",
            "decompiledFuncCode": "int64_t sub_401e96()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401ea6",
            "funcStartAddr": "0x401ea6",
            "funcEndAddr": "0x401eb0",
            "decompiledFuncCode": "int64_t sub_401ea6()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401eb6",
            "funcStartAddr": "0x401eb6",
            "funcEndAddr": "0x401ec0",
            "decompiledFuncCode": "int64_t sub_401eb6()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401ec6",
            "funcStartAddr": "0x401ec6",
            "funcEndAddr": "0x401ed0",
            "decompiledFuncCode": "int64_t sub_401ec6()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401ed6",
            "funcStartAddr": "0x401ed6",
            "funcEndAddr": "0x401ee0",
            "decompiledFuncCode": "int64_t sub_401ed6()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401ee6",
            "funcStartAddr": "0x401ee6",
            "funcEndAddr": "0x401ef0",
            "decompiledFuncCode": "int64_t sub_401ee6()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401ef6",
            "funcStartAddr": "0x401ef6",
            "funcEndAddr": "0x401f00",
            "decompiledFuncCode": "int64_t sub_401ef6()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401f06",
            "funcStartAddr": "0x401f06",
            "funcEndAddr": "0x401f10",
            "decompiledFuncCode": "int64_t sub_401f06()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401f16",
            "funcStartAddr": "0x401f16",
            "funcEndAddr": "0x401f20",
            "decompiledFuncCode": "int64_t sub_401f16()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401f26",
            "funcStartAddr": "0x401f26",
            "funcEndAddr": "0x401f30",
            "decompiledFuncCode": "int64_t sub_401f26()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401f36",
            "funcStartAddr": "0x401f36",
            "funcEndAddr": "0x401f40",
            "decompiledFuncCode": "int64_t sub_401f36()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401f46",
            "funcStartAddr": "0x401f46",
            "funcEndAddr": "0x401f50",
            "decompiledFuncCode": "int64_t sub_401f46()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401f56",
            "funcStartAddr": "0x401f56",
            "funcEndAddr": "0x401f60",
            "decompiledFuncCode": "int64_t sub_401f56()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401f66",
            "funcStartAddr": "0x401f66",
            "funcEndAddr": "0x401f70",
            "decompiledFuncCode": "int64_t sub_401f66()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401f76",
            "funcStartAddr": "0x401f76",
            "funcEndAddr": "0x401f80",
            "decompiledFuncCode": "int64_t sub_401f76()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401f86",
            "funcStartAddr": "0x401f86",
            "funcEndAddr": "0x401f90",
            "decompiledFuncCode": "int64_t sub_401f86()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401f96",
            "funcStartAddr": "0x401f96",
            "funcEndAddr": "0x401fa0",
            "decompiledFuncCode": "int64_t sub_401f96()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401fa6",
            "funcStartAddr": "0x401fa6",
            "funcEndAddr": "0x401fb0",
            "decompiledFuncCode": "int64_t sub_401fa6()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401fb6",
            "funcStartAddr": "0x401fb6",
            "funcEndAddr": "0x401fc0",
            "decompiledFuncCode": "int64_t sub_401fb6()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401fc6",
            "funcStartAddr": "0x401fc6",
            "funcEndAddr": "0x401fd0",
            "decompiledFuncCode": "int64_t sub_401fc6()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401fd6",
            "funcStartAddr": "0x401fd6",
            "funcEndAddr": "0x401fe0",
            "decompiledFuncCode": "int64_t sub_401fd6()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_401fe6",
            "funcStartAddr": "0x401fe6",
            "funcEndAddr": "0x401ff0",
            "decompiledFuncCode": "int64_t sub_401fe6()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_402006",
            "funcStartAddr": "0x402006",
            "funcEndAddr": "0x402010",
            "decompiledFuncCode": "int64_t sub_402006()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_402026",
            "funcStartAddr": "0x402026",
            "funcEndAddr": "0x402030",
            "decompiledFuncCode": "int64_t sub_402026()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_402046",
            "funcStartAddr": "0x402046",
            "funcEndAddr": "0x402050",
            "decompiledFuncCode": "int64_t sub_402046()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_402066",
            "funcStartAddr": "0x402066",
            "funcEndAddr": "0x402070",
            "decompiledFuncCode": "int64_t sub_402066()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_402076",
            "funcStartAddr": "0x402076",
            "funcEndAddr": "0x402080",
            "decompiledFuncCode": "int64_t sub_402076()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_402086",
            "funcStartAddr": "0x402086",
            "funcEndAddr": "0x402090",
            "decompiledFuncCode": "int64_t sub_402086()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_402096",
            "funcStartAddr": "0x402096",
            "funcEndAddr": "0x4020a0",
            "decompiledFuncCode": "int64_t sub_402096()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_4020a6",
            "funcStartAddr": "0x4020a6",
            "funcEndAddr": "0x4020b0",
            "decompiledFuncCode": "int64_t sub_4020a6()\n{\n    int64_t var_8 = 0x2f;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_4020b6",
            "funcStartAddr": "0x4020b6",
            "funcEndAddr": "0x4020c0",
            "decompiledFuncCode": "int64_t sub_4020b6()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_4020c6",
            "funcStartAddr": "0x4020c6",
            "funcEndAddr": "0x4020d0",
            "decompiledFuncCode": "int64_t sub_4020c6()\n{\n    int64_t var_8 = 0x31;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_4020d6",
            "funcStartAddr": "0x4020d6",
            "funcEndAddr": "0x4020e0",
            "decompiledFuncCode": "int64_t sub_4020d6()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_4020e6",
            "funcStartAddr": "0x4020e6",
            "funcEndAddr": "0x4020f0",
            "decompiledFuncCode": "int64_t sub_4020e6()\n{\n    int64_t var_8 = 0x33;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_402106",
            "funcStartAddr": "0x402106",
            "funcEndAddr": "0x402110",
            "decompiledFuncCode": "int64_t sub_402106()\n{\n    int64_t var_8 = 0x35;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_402126",
            "funcStartAddr": "0x402126",
            "funcEndAddr": "0x402130",
            "decompiledFuncCode": "int64_t sub_402126()\n{\n    int64_t var_8 = 0x37;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_402146",
            "funcStartAddr": "0x402146",
            "funcEndAddr": "0x402150",
            "decompiledFuncCode": "int64_t sub_402146()\n{\n    int64_t var_8 = 0x39;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_402166",
            "funcStartAddr": "0x402166",
            "funcEndAddr": "0x402170",
            "decompiledFuncCode": "int64_t sub_402166()\n{\n    int64_t var_8 = 0x3b;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_402176",
            "funcStartAddr": "0x402176",
            "funcEndAddr": "0x402180",
            "decompiledFuncCode": "int64_t sub_402176()\n{\n    int64_t var_8 = 0x3c;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_402186",
            "funcStartAddr": "0x402186",
            "funcEndAddr": "0x402190",
            "decompiledFuncCode": "int64_t sub_402186()\n{\n    int64_t var_8 = 0x3d;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_402196",
            "funcStartAddr": "0x402196",
            "funcEndAddr": "0x4021a0",
            "decompiledFuncCode": "int64_t sub_402196()\n{\n    int64_t var_8 = 0x3e;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_4021a6",
            "funcStartAddr": "0x4021a6",
            "funcEndAddr": "0x4021b0",
            "decompiledFuncCode": "int64_t sub_4021a6()\n{\n    int64_t var_8 = 0x3f;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_4021b6",
            "funcStartAddr": "0x4021b6",
            "funcEndAddr": "0x4021c0",
            "decompiledFuncCode": "int64_t sub_4021b6()\n{\n    int64_t var_8 = 0x40;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_4021c6",
            "funcStartAddr": "0x4021c6",
            "funcEndAddr": "0x4021d0",
            "decompiledFuncCode": "int64_t sub_4021c6()\n{\n    int64_t var_8 = 0x41;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_4021d6",
            "funcStartAddr": "0x4021d6",
            "funcEndAddr": "0x4021e0",
            "decompiledFuncCode": "int64_t sub_4021d6()\n{\n    int64_t var_8 = 0x42;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_4021e6",
            "funcStartAddr": "0x4021e6",
            "funcEndAddr": "0x4021f0",
            "decompiledFuncCode": "int64_t sub_4021e6()\n{\n    int64_t var_8 = 0x43;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_402206",
            "funcStartAddr": "0x402206",
            "funcEndAddr": "0x402210",
            "decompiledFuncCode": "int64_t sub_402206()\n{\n    int64_t var_8 = 0x45;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_402226",
            "funcStartAddr": "0x402226",
            "funcEndAddr": "0x402230",
            "decompiledFuncCode": "int64_t sub_402226()\n{\n    int64_t var_8 = 0x47;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_402246",
            "funcStartAddr": "0x402246",
            "funcEndAddr": "0x402250",
            "decompiledFuncCode": "int64_t sub_402246()\n{\n    int64_t var_8 = 0x49;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_402266",
            "funcStartAddr": "0x402266",
            "funcEndAddr": "0x402270",
            "decompiledFuncCode": "int64_t sub_402266()\n{\n    int64_t var_8 = 0x4b;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_402276",
            "funcStartAddr": "0x402276",
            "funcEndAddr": "0x402280",
            "decompiledFuncCode": "int64_t sub_402276()\n{\n    int64_t var_8 = 0x4c;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_402286",
            "funcStartAddr": "0x402286",
            "funcEndAddr": "0x402290",
            "decompiledFuncCode": "int64_t sub_402286()\n{\n    int64_t var_8 = 0x4d;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_402296",
            "funcStartAddr": "0x402296",
            "funcEndAddr": "0x4022a0",
            "decompiledFuncCode": "int64_t sub_402296()\n{\n    int64_t var_8 = 0x4e;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_4022a6",
            "funcStartAddr": "0x4022a6",
            "funcEndAddr": "0x4022b0",
            "decompiledFuncCode": "int64_t sub_4022a6()\n{\n    int64_t var_8 = 0x4f;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_4022b6",
            "funcStartAddr": "0x4022b6",
            "funcEndAddr": "0x4022c0",
            "decompiledFuncCode": "int64_t sub_4022b6()\n{\n    int64_t var_8 = 0x50;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_4022c6",
            "funcStartAddr": "0x4022c6",
            "funcEndAddr": "0x4022d0",
            "decompiledFuncCode": "int64_t sub_4022c6()\n{\n    int64_t var_8 = 0x51;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_4022d6",
            "funcStartAddr": "0x4022d6",
            "funcEndAddr": "0x4022e0",
            "decompiledFuncCode": "int64_t sub_4022d6()\n{\n    int64_t var_8 = 0x52;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_4022e6",
            "funcStartAddr": "0x4022e6",
            "funcEndAddr": "0x4022f0",
            "decompiledFuncCode": "int64_t sub_4022e6()\n{\n    int64_t var_8 = 0x53;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_402306",
            "funcStartAddr": "0x402306",
            "funcEndAddr": "0x402310",
            "decompiledFuncCode": "int64_t sub_402306()\n{\n    int64_t var_8 = 0x55;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_402326",
            "funcStartAddr": "0x402326",
            "funcEndAddr": "0x402330",
            "decompiledFuncCode": "int64_t sub_402326()\n{\n    int64_t var_8 = 0x57;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "sub_402346",
            "funcStartAddr": "0x402346",
            "funcEndAddr": "0x402350",
            "decompiledFuncCode": "int64_t sub_402346()\n{\n    int64_t var_8 = 0x59;\n    /* tailcall */\n    return sub_401da0();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x402390",
            "funcEndAddr": "0x4028a0",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_4072f0(*argv);\n    void var_e8;\n    int32_t var_e0;\n    setlocale(6, &data_4137cc[0x1b], rdx, rcx, r8, r9, var_e8, var_e0);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    char* rdi_1 = localeconv()->decimal_point;\n    if (*rdi_1 == 0)\n    {\n        rdi_1 = &data_411fe4;\n    }\n    char rbx = 0;\n    char rbp = 0;\n    data_617478 = rdi_1;\n    data_617470 = strlen(rdi_1);\n    sub_410340(sub_405530);\n    int64_t var_e0_1 = 0;\n    while (true)\n    {\n        int32_t rax_2 = getopt_long(argc, argv, \"c:fLt\", &data_410e20, nullptr);\n        if (rax_2 == 0xffffffff)\n        {\n            if (data_61739c != argc)\n            {\n                int64_t var_d8;\n                if (var_e0_1 == 0)\n                {\n                    var_e0_1 = sub_403e80(rbp, rbx, 0);\n                    var_d8 = sub_403e80(rbp, rbx, 1);\n                }\n                else\n                {\n                    var_d8 = var_e0_1;\n                    if (sub_40bd00(var_e0_1, &data_4107fa) != 0)\n                    {\n                        char* rax_7 = getenv(\"QUOTING_STYLE\");\n                        if (rax_7 == 0)\n                        {\n                            sub_4088b0(nullptr, 4);\n                            var_d8 = var_e0_1;\n                        }\n                        else\n                        {\n                            int32_t rax_8 = sub_405190(rax_7, &data_413240, 0x413200, 4);\n                            if (rax_8 < 0)\n                            {\n                                sub_4088b0(nullptr, 4);\n                                error(0, 0, dcgettext(nullptr, \"ignoring invalid value of enviro\u2026\", 5), sub_408f10(rax_7));\n                                var_d8 = var_e0_1;\n                            }\n                            else\n                            {\n                                sub_4088b0(nullptr, *((rax_8 << 2) + 0x413200));\n                                var_d8 = var_e0_1;\n                            }\n                        }\n                    }\n                }\n                int32_t rax_10 = data_61739c;\n                int32_t r13_1;\n                if (argc <= rax_10)\n                {\n                    r13_1 = 1;\n                }\n                else\n                {\n                    int64_t rdx_1 = rax_10;\n                    uint64_t rax_12 = ((!rax_10) + argc);\n                    void* rbx_2 = &argv[rdx_1];\n                    bool c_1 = (rax_12 + rdx_1) < rax_12;\n                    bool z_1 = rax_12 == (-rdx_1);\n                    void* r15_1 = &argv[((rax_12 + rdx_1) + 1)];\n                    r13_1 = 1;\n                    do\n                    {\n                        char* r14_1 = *rbx_2;\n                        int64_t rcx_2 = 2;\n                        void* const rdi_8 = &data_4137ca;\n                        char* rsi_3 = r14_1;\n                        while (rcx_2 != 0)\n                        {\n                            char temp1_1 = *rsi_3;\n                            char temp2_1 = *rdi_8;\n                            c_1 = temp1_1 < temp2_1;\n                            z_1 = temp1_1 == temp2_1;\n                            rsi_3 = &rsi_3[1];\n                            rdi_8 = (rdi_8 + 1);\n                            rcx_2 = (rcx_2 - 1);\n                            if ((!z_1))\n                            {\n                                break;\n                            }\n                        }\n                        int64_t rax_13;\n                        rax_13 = ((!z_1) && (!c_1));\n                        rax_13 = (rax_13 - 0);\n                        int32_t rax_17 = rax_13;\n                        int64_t var_d0_1;\n                        int32_t rax_14;\n                        char rax_16;\n                        int32_t rax_18;\n                        char const* const rsi_10;\n                        void var_c8;\n                        if (rbp != 0)\n                        {\n                            if (rax_17 == 0)\n                            {\n                                error(0, 0, dcgettext(nullptr, \"using %s to denote standard inpu\u2026\", 5), sub_408cc0(4, r14_1));\n                                rax_16 = 0;\n                            }\n                            else\n                            {\n                                rax_14 = statfs(r14_1, &var_c8);\n                                if (rax_14 != 0)\n                                {\n                                    rsi_10 = \"cannot read file system informat\u2026\";\n                                    var_d0_1 = sub_408cc0(4, r14_1);\n                                }\n                                else\n                                {\n                                    rax_16 = (sub_4037b0(var_e0_1, 0xffffffff, r14_1, 0x402b30, &var_c8) ^ 1);\n                                }\n                            }\n                        }\n                        else\n                        {\n                            int32_t rax_23;\n                            int32_t rsi_5;\n                            if (rax_17 == 0)\n                            {\n                                rax_23 = __fxstat(1, 0, &var_c8);\n                                rsi_5 = rax_23;\n                                if (rax_23 != 0)\n                                {\n                                    error(0, *__errno_location(), dcgettext(nullptr, \"cannot stat standard input\", 5));\n                                    rax_16 = 0;\n                                }\n                            }\n                            else\n                            {\n                                if (data_617481 == 0)\n                                {\n                                    rax_18 = __lxstat(1, r14_1, &var_c8) != 0;\n                                }\n                                else\n                                {\n                                    rax_18 = __xstat(1, r14_1, &var_c8) != 0;\n                                }\n                                rsi_5 = rax_2;\n                            }\n                            if (((rax_17 == 0 && rax_23 == 0) || (rax_17 != 0 && rax_18 == 0)))\n                            {\n                                int64_t rdi_9 = var_d8;\n                                void* r8_3 = &var_c8;\n                                int32_t var_b0;\n                                if ((var_b0 & 0xb000) != 0x2000)\n                                {\n                                    rdi_9 = var_e0_1;\n                                }\n                                rax_16 = (sub_4037b0(rdi_9, rsi_5, r14_1, 0x4042e0, r8_3) ^ 1);\n                            }\n                            if ((rax_17 != 0 && rax_18 != 0))\n                            {\n                                rsi_10 = \"cannot stat %s\";\n                                var_d0_1 = sub_408cc0(4, r14_1);\n                            }\n                        }\n                        if ((((rbp != 0 && rax_17 != 0) && rax_14 != 0) || ((rbp == 0 && rax_17 != 0) && rax_18 != 0)))\n                        {\n                            error(0, *__errno_location(), dcgettext(nullptr, rsi_10, 5), var_d0_1);\n                            rax_16 = 0;\n                        }\n                        rbx_2 = (rbx_2 + 8);\n                        r13_1 = (r13_1 & rax_16);\n                        c_1 = r15_1 < rbx_2;\n                        z_1 = r15_1 == rbx_2;\n                    } while ((!z_1));\n                }\n                return (r13_1 ^ 1);\n            }\n            error(0, 0, dcgettext(nullptr, \"missing operand\", 5));\n            break;\n        }\n        bool cond:0_1 = rax_2 <= 0x63;\n        if (rax_2 == 0x63)\n        {\n            int64_t rax_5 = data_617638;\n            data_617480 = 0;\n            data_617310 = \"\\n\";\n            var_e0_1 = rax_5;\n        }\n        else if (cond:0_1)\n        {\n            if (rax_2 == 0xffffff7e)\n            {\n                sub_404870(0);\n                /* no return */\n            }\n            if (rax_2 != 0x4c)\n            {\n                if (rax_2 == 0xffffff7d)\n                {\n                    sub_409420(stdout, \"stat\", \"GNU coreutils\", data_617318);\n                    exit(0);\n                    /* no return */\n                }\n                break;\n            }\n            data_617481 = 1;\n        }\n        else if (rax_2 == 0x74)\n        {\n            rbx = 1;\n        }\n        else if (rax_2 == 0x80)\n        {\n            int64_t rax_3 = data_617638;\n            data_617480 = 1;\n            data_617310 = 0x4137e7;\n            var_e0_1 = rax_3;\n        }\n        else\n        {\n            if (rax_2 != 0x66)\n            {\n                break;\n            }\n            rbp = 1;\n        }\n    }\n    sub_404870(1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x4028a0",
            "funcEndAddr": "0x4028ca",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4028cb",
            "funcStartAddr": "0x4028cb",
            "funcEndAddr": "0x4028ea",
            "decompiledFuncCode": "void sub_4028cb()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_4028ea",
            "funcStartAddr": "0x4028ea",
            "funcEndAddr": "0x402921",
            "decompiledFuncCode": "int64_t sub_4028ea()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_402921",
            "funcStartAddr": "0x402921",
            "funcEndAddr": "0x402978",
            "decompiledFuncCode": "void sub_402921()\n{\n    if (data_6173c8 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_6173d0;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_6173d0 = (rax_1 + 1);\n        *(0x616e40 + ((rax_1 + 1) << 3))();\n    }\n    sub_4028cb();\n    data_6173c8 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_402978",
            "funcStartAddr": "0x402978",
            "funcEndAddr": "0x40297d",
            "decompiledFuncCode": "int64_t j_sub_4028ea()\n{\n    /* tailcall */\n    return sub_4028ea();\n}\n\n"
        },
        {
            "funcName": "sub_402980",
            "funcStartAddr": "0x402980",
            "funcEndAddr": "0x402a27",
            "decompiledFuncCode": "int64_t sub_402980(void* arg1, int64_t arg2, char* arg3, char* arg4)\n{\n    void* r13 = (arg1 + arg2);\n    char* r12 = (arg1 + 1);\n    char* rbx = r12;\n    if (r12 < r13)\n    {\n        do\n        {\n            int32_t r14_1 = *rbx;\n            char rbp_1 = r14_1;\n            char* rax_2 = strchr(\"'-+ #0I\", r14_1);\n            if (rax_2 == 0)\n            {\n                if (rbx < r13)\n                {\n                    void* r13_1 = (r13 - rbx);\n                    while (true)\n                    {\n                        *(r12 + rax_2) = rbp_1;\n                        rax_2 = &rax_2[1];\n                        if (r13_1 == rax_2)\n                        {\n                            break;\n                        }\n                        rbp_1 = *(rbx + rax_2);\n                    }\n                    r12 = (r12 + r13_1);\n                }\n                break;\n            }\n            if (strchr(arg3, r14_1) != 0)\n            {\n                *r12 = rbp_1;\n                r12 = &r12[1];\n            }\n            rbx = &rbx[1];\n        } while (r13 > rbx);\n    }\n    /* tailcall */\n    return strcpy(r12, arg4);\n}\n\n"
        },
        {
            "funcName": "sub_402a30",
            "funcStartAddr": "0x402a30",
            "funcEndAddr": "0x402a63",
            "decompiledFuncCode": "int64_t sub_402a30(char* arg1, int64_t arg2, int64_t arg3)\n{\n    sub_402980(arg1, arg2, &data_4103a7, &data_4103a4);\n    /* tailcall */\n    return __printf_chk(1, arg1, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_402a70",
            "funcStartAddr": "0x402a70",
            "funcEndAddr": "0x402aa3",
            "decompiledFuncCode": "int64_t sub_402a70(char* arg1, int64_t arg2, int64_t arg3)\n{\n    sub_402980(arg1, arg2, &data_4137ca, \"s\");\n    /* tailcall */\n    return __printf_chk(1, arg1, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_402ab0",
            "funcStartAddr": "0x402ab0",
            "funcEndAddr": "0x402ae3",
            "decompiledFuncCode": "int64_t sub_402ab0(char* arg1, int64_t arg2, int64_t arg3)\n{\n    sub_402980(arg1, arg2, &data_4103ae, &data_4103ab);\n    /* tailcall */\n    return __printf_chk(1, arg1, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_402af0",
            "funcStartAddr": "0x402af0",
            "funcEndAddr": "0x402b23",
            "decompiledFuncCode": "int64_t sub_402af0(char* arg1, int64_t arg2, int64_t arg3)\n{\n    sub_402980(arg1, arg2, \"'-+ 0\", &data_4103b2);\n    /* tailcall */\n    return __printf_chk(1, arg1, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_402b30",
            "funcStartAddr": "0x402b30",
            "funcEndAddr": "0x4037af",
            "decompiledFuncCode": "int64_t sub_402b30(char* arg1, int64_t arg2, int32_t arg3, int64_t arg4, \n    int64_t arg5, int64_t* arg6)\n{\n    uint64_t rax = (arg3 - 0x53);\n    if (rax > 0x21)\n    {\n    label_402d20:\n        uint64_t* const rdi_2 = stdout;\n        char* rax_4 = stdout[5];\n        if (rax_4 >= stdout[6])\n        {\n            __overflow(rdi_2, 0x3f);\n        }\n        else\n        {\n            stdout[5] = &rax_4[1];\n            *rax_4 = 0x3f;\n        }\n    }\n    else\n    {\n        int64_t rdx;\n        if (rax == 0)\n        {\n            rdx = arg6[9];\n        }\n        if ((rax == 0x20 || (rax == 0 && rdx == 0)))\n        {\n            rdx = arg6[1];\n        }\n        switch (rax)\n        {\n            case 0xe:\n            {\n                sub_402af0(arg1, arg2, arg6[4]);\n                break;\n            }\n            case 0xf:\n            {\n                sub_402af0(arg1, arg2, arg6[2]);\n                break;\n            }\n            case 0x10:\n            {\n                rdx = arg6[5];\n                break;\n            }\n            case 0x13:\n            {\n                sub_402af0(arg1, arg2, arg6[3]);\n                break;\n            }\n            case 0x16:\n            {\n                sub_402a30(arg1, arg2, ((arg6[7] << 0x20) | *(arg6 + 0x3c)));\n                break;\n            }\n            case 0x19:\n            {\n                sub_402ab0(arg1, arg2, arg6[8]);\n                break;\n            }\n            case 0x1b:\n            {\n                sub_402a70(arg1, arg2, arg5);\n                break;\n            }\n            case 0x21:\n            {\n                sub_402a30(arg1, arg2, *arg6);\n                break;\n            }\n        }\n        if ((((rax == 0x20 || (rax == 0 && rdx == 0)) || rax == 0x10) || (rax == 0 && rdx != 0)))\n        {\n            sub_402ab0(arg1, arg2, rdx);\n        }\n        if (rax == 0x11)\n        {\n            sub_402af0(arg1, arg2, arg6[6]);\n        }\n        if (rax == 1)\n        {\n            int64_t r8 = *arg6;\n            bool cond:0_1 = r8 <= 0x28cd3d45;\n            void* const rdx_2;\n            if (r8 == 0x28cd3d45)\n            {\n                rdx_2 = \"cramfs\";\n            }\n            else if (cond:0_1)\n            {\n                bool cond:1_1 = r8 <= 0xadf5;\n                if (r8 == 0xadf5)\n                {\n                    rdx_2 = \"adfs\";\n                }\n                else if (cond:1_1)\n                {\n                    bool cond:3_1 = r8 > 0x4244;\n                    if (r8 == 0x4244)\n                    {\n                        rdx_2 = \"hfs\";\n                    }\n                    else if (cond:3_1)\n                    {\n                        bool cond:7_1 = r8 <= 0x5df5;\n                        if (r8 == 0x5df5)\n                        {\n                            rdx_2 = \"exofs\";\n                        }\n                        else if (cond:7_1)\n                        {\n                            bool cond:15_1 = r8 <= 0x4d44;\n                            if (r8 == 0x4d44)\n                            {\n                                rdx_2 = \"msdos\";\n                            }\n                            else if (cond:15_1)\n                            {\n                                rdx_2 = \"hfs+\";\n                                if (r8 != 0x482b)\n                                {\n                                    rdx_2 = \"hfsx\";\n                                    if (r8 != 0x4858)\n                                    {\n                                    label_402c33:\n                                        __sprintf_chk(&data_617450, 1, 0x1d, \"UNKNOWN (0x%lx)\");\n                                        rdx_2 = &data_617450;\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                rdx_2 = &data_410622;\n                                if (r8 != 0x517b)\n                                {\n                                    rdx_2 = \"novell\";\n                                    if (r8 != 0x564c)\n                                    {\n                                        rdx_2 = \"minix3\";\n                                        if (r8 != 0x4d5a)\n                                        {\n                                            goto label_402c33;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else\n                        {\n                            bool cond:16_1 = r8 > 0x9660;\n                            if (r8 == 0x9660)\n                            {\n                                rdx_2 = \"isofs\";\n                            }\n                            else if (cond:16_1)\n                            {\n                                rdx_2 = \"openprom\";\n                                if (r8 != 0x9fa1)\n                                {\n                                    rdx_2 = \"usbdevfs\";\n                                    if (r8 != 0x9fa2)\n                                    {\n                                        rdx_2 = \"proc\";\n                                        if (r8 != 0x9fa0)\n                                        {\n                                            goto label_402c33;\n                                        }\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                rdx_2 = \"romfs\";\n                                if (r8 != 0x7275)\n                                {\n                                    rdx_2 = \"jffs2\";\n                                    if (r8 != 0x72b6)\n                                    {\n                                        rdx_2 = \"nfs\";\n                                        if (r8 != 0x6969)\n                                        {\n                                            goto label_402c33;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else\n                    {\n                        bool cond:8_1 = r8 <= 0x138f;\n                        if (r8 == 0x138f)\n                        {\n                            rdx_2 = \"minix (30 char.)\";\n                        }\n                        else if (cond:8_1)\n                        {\n                            bool cond:17_1 = r8 <= 0x7c0;\n                            if (r8 == 0x7c0)\n                            {\n                                rdx_2 = \"jffs\";\n                            }\n                            else if (cond:17_1)\n                            {\n                                rdx_2 = \"qnx4\";\n                                if (r8 != 0x2f)\n                                {\n                                    rdx_2 = \"autofs\";\n                                    if (r8 != 0x187)\n                                    {\n                                        goto label_402c33;\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                rdx_2 = &data_41048a;\n                                if (r8 != 0x137d)\n                                {\n                                    rdx_2 = \"minix\";\n                                    if (r8 != 0x137f)\n                                    {\n                                        rdx_2 = \"devfs\";\n                                        if (r8 != 0x1373)\n                                        {\n                                            goto label_402c33;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else\n                        {\n                            bool cond:18_1 = r8 > 0x3434;\n                            if (r8 == 0x3434)\n                            {\n                                rdx_2 = \"nilfs\";\n                            }\n                            else if (cond:18_1)\n                            {\n                                rdx_2 = \"isofs\";\n                                if (r8 != 0x4004)\n                                {\n                                    rdx_2 = &data_4104a2;\n                                    if (r8 != 0x4006)\n                                    {\n                                        rdx_2 = \"isofs\";\n                                        if (r8 != 0x4000)\n                                        {\n                                            goto label_402c33;\n                                        }\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                rdx_2 = \"minix v2\";\n                                if (r8 != 0x2468)\n                                {\n                                    rdx_2 = \"minix v2 (30 char.)\";\n                                    if (r8 != 0x2478)\n                                    {\n                                        rdx_2 = \"devpts\";\n                                        if (r8 != 0x1cd1)\n                                        {\n                                            goto label_402c33;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else\n                {\n                    bool cond:4_1 = r8 > 0x12ff7b5;\n                    if (r8 == 0x12ff7b5)\n                    {\n                        rdx_2 = \"sysv4\";\n                    }\n                    else if (cond:4_1)\n                    {\n                        bool cond:9_1 = r8 <= 0xbd00bd0;\n                        if (r8 == 0xbd00bd0)\n                        {\n                            rdx_2 = \"lustre\";\n                        }\n                        else if (cond:9_1)\n                        {\n                            bool cond:19_1 = r8 <= 0x13111a8;\n                            if (r8 == 0x13111a8)\n                            {\n                                rdx_2 = \"ibrix\";\n                            }\n                            else if (cond:19_1)\n                            {\n                                rdx_2 = \"sysv2\";\n                                if (r8 != 0x12ff7b6)\n                                {\n                                    rdx_2 = &data_41043d;\n                                    if (r8 != 0x12ff7b7)\n                                    {\n                                        goto label_402c33;\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                rdx_2 = \"anon-inode FS\";\n                                if (r8 != 0x9041934)\n                                {\n                                    rdx_2 = \"futexfs\";\n                                    if (r8 != 0xbad1dea)\n                                    {\n                                        rdx_2 = &data_4105e9;\n                                        if (r8 != 0x7655821)\n                                        {\n                                            goto label_402c33;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else\n                        {\n                            bool cond:20_1 = r8 > 0x19800202;\n                            if (r8 == 0x19800202)\n                            {\n                                rdx_2 = \"mqueue\";\n                            }\n                            else if (cond:20_1)\n                            {\n                                rdx_2 = \"bfs\";\n                                if (r8 != 0x1badface)\n                                {\n                                    rdx_2 = \"ubifs\";\n                                    if (r8 != 0x24051905)\n                                    {\n                                        rdx_2 = \"fhgfs\";\n                                        if (r8 != 0x19830326)\n                                        {\n                                            goto label_402c33;\n                                        }\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                rdx_2 = \"balloon-kvm-fs\";\n                                if (r8 != 0x13661366)\n                                {\n                                    rdx_2 = &data_410666;\n                                    if (r8 != 0x15013346)\n                                    {\n                                        rdx_2 = \"inodefs\";\n                                        if (r8 != 0x11307854)\n                                        {\n                                            goto label_402c33;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else\n                    {\n                        bool cond:10_1 = r8 <= 0x414a53;\n                        if (r8 == 0x414a53)\n                        {\n                            rdx_2 = \"efs\";\n                        }\n                        else if (cond:10_1)\n                        {\n                            bool cond:21_1 = r8 <= 0xef53;\n                            if (r8 == 0xef53)\n                            {\n                                rdx_2 = \"ext2/ext3\";\n                            }\n                            else if (cond:21_1)\n                            {\n                                rdx_2 = \"affs\";\n                                if (r8 != 0xadff)\n                                {\n                                    rdx_2 = \"ext2\";\n                                    if (r8 != 0xef51)\n                                    {\n                                        goto label_402c33;\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                rdx_2 = \"ufs\";\n                                if (r8 != 0x11954)\n                                {\n                                    rdx_2 = \"cgroupfs\";\n                                    if (r8 != 0x27e0eb)\n                                    {\n                                        rdx_2 = \"ecryptfs\";\n                                        if (r8 != 0xf15f)\n                                        {\n                                            goto label_402c33;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else\n                        {\n                            bool cond:22_1 = r8 > 0x1021997;\n                            if (r8 == 0x1021997)\n                            {\n                                rdx_2 = \"v9fs\";\n                            }\n                            else if (cond:22_1)\n                            {\n                                rdx_2 = &data_4103bb;\n                                if (r8 != 0x12fd16d)\n                                {\n                                    rdx_2 = \"xenix\";\n                                    if (r8 != 0x12ff7b4)\n                                    {\n                                        rdx_2 = \"gfs/gfs2\";\n                                        if (r8 != 0x1161970)\n                                        {\n                                            goto label_402c33;\n                                        }\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                rdx_2 = \"ceph\";\n                                if (r8 != 0xc36400)\n                                {\n                                    rdx_2 = \"tmpfs\";\n                                    if (r8 != 0x1021994)\n                                    {\n                                        rdx_2 = \"hostfs\";\n                                        if (r8 != 0xc0ffee)\n                                        {\n                                            goto label_402c33;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else\n            {\n                bool cond:2_1 = r8 <= 0x65735543;\n                if (r8 == 0x65735543)\n                {\n                    rdx_2 = \"fusectl\";\n                }\n                else if (cond:2_1)\n                {\n                    bool cond:5_1 = r8 > 0x534f434b;\n                    if (r8 == 0x534f434b)\n                    {\n                        rdx_2 = \"sockfs\";\n                    }\n                    else if (cond:5_1)\n                    {\n                        bool cond:11_1 = r8 <= 0x6165676c;\n                        if (r8 == 0x6165676c)\n                        {\n                            rdx_2 = \"pstorefs\";\n                        }\n                        else if (cond:11_1)\n                        {\n                            bool cond:23_1 = r8 <= 0x58295829;\n                            if (r8 == 0x58295829)\n                            {\n                                rdx_2 = \"zsmallocfs\";\n                            }\n                            else if (cond:23_1)\n                            {\n                                rdx_2 = \"ufs\";\n                                if (r8 != 0x54190100)\n                                {\n                                    rdx_2 = \"vzfs\";\n                                    if (r8 != 0x565a4653)\n                                    {\n                                        goto label_402c33;\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                rdx_2 = \"aafs\";\n                                if (r8 != 0x5a3c69f0)\n                                {\n                                    rdx_2 = \"acfs\";\n                                    if (r8 != 0x61636673)\n                                    {\n                                        rdx_2 = \"xfs\";\n                                        if (r8 != 0x58465342)\n                                        {\n                                            goto label_402c33;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else\n                        {\n                            bool cond:24_1 = r8 > 0x62656572;\n                            if (r8 == 0x62656572)\n                            {\n                                rdx_2 = \"sysfs\";\n                            }\n                            else if (cond:24_1)\n                            {\n                                rdx_2 = \"debugfs\";\n                                if (r8 != 0x64626720)\n                                {\n                                    rdx_2 = \"daxfs\";\n                                    if (r8 != 0x64646178)\n                                    {\n                                        rdx_2 = \"cgroup2fs\";\n                                        if (r8 != 0x63677270)\n                                        {\n                                            goto label_402c33;\n                                        }\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                rdx_2 = \"bdevfs\";\n                                if (r8 != 0x62646576)\n                                {\n                                    rdx_2 = \"configfs\";\n                                    if (r8 != 0x62656570)\n                                    {\n                                        rdx_2 = \"aufs\";\n                                        if (r8 != 0x61756673)\n                                        {\n                                            goto label_402c33;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else\n                    {\n                        bool cond:12_1 = r8 <= 0x453dcd28;\n                        if (r8 == 0x453dcd28)\n                        {\n                            rdx_2 = \"cramfs-wend\";\n                        }\n                        else if (cond:12_1)\n                        {\n                            bool cond:25_1 = r8 <= 0x3153464a;\n                            if (r8 == 0x3153464a)\n                            {\n                                rdx_2 = &data_41052b;\n                            }\n                            else if (cond:25_1)\n                            {\n                                rdx_2 = \"inotifyfs\";\n                                if (r8 != 0x2bad1dea)\n                                {\n                                    rdx_2 = \"zfs\";\n                                    if (r8 != 0x2fc12fc1)\n                                    {\n                                        goto label_402c33;\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                rdx_2 = \"binfmt_misc\";\n                                if (r8 != 0x42494e4d)\n                                {\n                                    rdx_2 = \"smackfs\";\n                                    if (r8 != 0x43415d53)\n                                    {\n                                        rdx_2 = \"befs\";\n                                        if (r8 != 0x42465331)\n                                        {\n                                            goto label_402c33;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else\n                        {\n                            bool cond:26_1 = r8 > 0x5346314d;\n                            if (r8 == 0x5346314d)\n                            {\n                                rdx_2 = \"m1fs\";\n                            }\n                            else if (cond:26_1)\n                            {\n                                rdx_2 = \"wslfs\";\n                                if (r8 != 0x53464846)\n                                {\n                                    rdx_2 = \"ntfs\";\n                                    if (r8 != 0x5346544e)\n                                    {\n                                        rdx_2 = \"afs\";\n                                        if (r8 != 0x5346414f)\n                                        {\n                                            goto label_402c33;\n                                        }\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                rdx_2 = \"pipefs\";\n                                if (r8 != 0x50495045)\n                                {\n                                    rdx_2 = \"reiserfs\";\n                                    if (r8 != 0x52654973)\n                                    {\n                                        rdx_2 = \"gpfs\";\n                                        if (r8 != 0x47504653)\n                                        {\n                                            goto label_402c33;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else\n                {\n                    bool cond:6_1 = r8 <= 0x858458f6;\n                    if (r8 == 0x858458f6)\n                    {\n                        rdx_2 = \"ramfs\";\n                    }\n                    else if (cond:6_1)\n                    {\n                        bool cond:13_1 = r8 <= 0x73636673;\n                        if (r8 == 0x73636673)\n                        {\n                            rdx_2 = \"securityfs\";\n                        }\n                        else if (cond:13_1)\n                        {\n                            bool cond:27_1 = r8 <= 0x68191122;\n                            if (r8 == 0x68191122)\n                            {\n                                rdx_2 = \"qnx6\";\n                            }\n                            else if (cond:27_1)\n                            {\n                                rdx_2 = \"fuseblk\";\n                                if (r8 != 0x65735546)\n                                {\n                                    rdx_2 = \"rpc_pipefs\";\n                                    if (r8 != 0x67596969)\n                                    {\n                                        goto label_402c33;\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                rdx_2 = \"nfsd\";\n                                if (r8 != 0x6e667364)\n                                {\n                                    rdx_2 = \"nsfs\";\n                                    if (r8 != 0x6e736673)\n                                    {\n                                        rdx_2 = \"k-afs\";\n                                        if (r8 != 0x6b414653)\n                                        {\n                                            goto label_402c33;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else\n                        {\n                            bool cond:28_1 = r8 > 0x7461636f;\n                            if (r8 == 0x7461636f)\n                            {\n                                rdx_2 = \"ocfs2\";\n                            }\n                            else if (cond:28_1)\n                            {\n                                rdx_2 = \"overlayfs\";\n                                if (r8 != 0x794c7630)\n                                {\n                                    rdx_2 = \"prl_fs\";\n                                    if (r8 != 0x7c7c6673)\n                                    {\n                                        rdx_2 = \"tracefs\";\n                                        if (r8 != 0x74726163)\n                                        {\n                                            goto label_402c33;\n                                        }\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                rdx_2 = \"btrfs_test\";\n                                if (r8 != 0x73727279)\n                                {\n                                    rdx_2 = \"coda\";\n                                    if (r8 != 0x73757245)\n                                    {\n                                        rdx_2 = \"squashfs\";\n                                        if (r8 != 0x73717368)\n                                        {\n                                            goto label_402c33;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else\n                    {\n                        bool cond:14_1 = r8 <= 0xc97e8168;\n                        if (r8 == 0xc97e8168)\n                        {\n                            rdx_2 = \"logfs\";\n                        }\n                        else if (cond:14_1)\n                        {\n                            bool cond:29_1 = r8 > 0xaad7aaea;\n                            if (r8 == 0xaad7aaea)\n                            {\n                                rdx_2 = \"panfs\";\n                            }\n                            else if (cond:29_1)\n                            {\n                                rdx_2 = \"vmhgfs\";\n                                if (r8 != 0xbacbacbc)\n                                {\n                                    rdx_2 = \"snfs\";\n                                    if (r8 != 0xbeefdead)\n                                    {\n                                        rdx_2 = \"xenfs\";\n                                        if (r8 != 0xabba1974)\n                                        {\n                                            goto label_402c33;\n                                        }\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                rdx_2 = \"hugetlbfs\";\n                                if (r8 != 0x958458f6)\n                                {\n                                    rdx_2 = \"vxfs\";\n                                    if (r8 != 0xa501fcf5)\n                                    {\n                                        rdx_2 = \"btrfs\";\n                                        if (r8 != 0x9123683e)\n                                        {\n                                            goto label_402c33;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else\n                        {\n                            bool cond:30_1 = r8 > 0xf97cff8c;\n                            if (r8 == 0xf97cff8c)\n                            {\n                                rdx_2 = \"selinux\";\n                            }\n                            else if (cond:30_1)\n                            {\n                                rdx_2 = \"smb2\";\n                                if (r8 != 0xfe534d42)\n                                {\n                                    rdx_2 = \"cifs\";\n                                    if (r8 != 0xff534d42)\n                                    {\n                                        rdx_2 = \"hpfs\";\n                                        if (r8 != 0xf995e849)\n                                        {\n                                            goto label_402c33;\n                                        }\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                rdx_2 = \"efivarfs\";\n                                if (r8 != 0xde5e81e4)\n                                {\n                                    rdx_2 = \"f2fs\";\n                                    if (r8 != 0xf2f52010)\n                                    {\n                                        rdx_2 = \"bpf_fs\";\n                                        if (r8 != 0xcafe4a11)\n                                        {\n                                            goto label_402c33;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            sub_402a70(arg1, arg2, rdx_2);\n        }\n        if ((((((((((((((((((((((rax == 2 || rax == 3) || rax == 4) || rax == 5) || rax == 6) || rax == 7) || rax == 8) || rax == 9) || rax == 0xa) || rax == 0xb) || rax == 0xc) || rax == 0xd) || rax == 0x12) || rax == 0x14) || rax == 0x15) || rax == 0x17) || rax == 0x18) || rax == 0x1a) || rax == 0x1c) || rax == 0x1d) || rax == 0x1e) || rax == 0x1f))\n        {\n            goto label_402d20;\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_4037b0",
            "funcStartAddr": "0x4037b0",
            "funcEndAddr": "0x403ca0",
            "decompiledFuncCode": "uint64_t sub_4037b0(char* arg1, int32_t arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5)\n{\n    char* r14 = arg1;\n    char* rax_1 = sub_409560((strlen(arg1) + 3));\n    uint32_t rsi = *r14;\n    char var_55 = 0;\n    if (rsi != 0)\n    {\n        do\n        {\n            void* r12_1 = &r14[1];\n            void* rbp_1;\n            if (rsi == 0x25)\n            {\n                void* rbp_4 = &r14[(strspn(r12_1, \"'-+ #0I\") + 1)];\n                rbp_1 = (rbp_4 + strspn(rbp_4, \"0123456789\"));\n                char r15_1 = *rbp_1;\n                if (r15_1 == 0x2e)\n                {\n                    rbp_1 = ((rbp_1 + strspn((rbp_1 + 1), \"0123456789\")) + 1);\n                    r15_1 = *rbp_1;\n                }\n                void* rax_12 = (rbp_1 - r12_1);\n                void* r13_1 = (rax_12 + 1);\n                memcpy(rax_1, r14, r13_1);\n                if (r15_1 == 0)\n                {\n                    rbp_1 = (rbp_1 - 1);\n                }\n                if ((r15_1 != 0 && r15_1 != 0x25))\n                {\n                    r14 = (rbp_1 + 1);\n                    var_55 = (var_55 | arg4(rax_1, r13_1, r15_1, arg2, arg3, arg5));\n                }\n                if ((r15_1 == 0 || r15_1 == 0x25))\n                {\n                    if (rax_12 != 0)\n                    {\n                        *(rax_1 + r13_1) = r15_1;\n                        *((rax_1 + rax_12) + 2) = 0;\n                        int32_t rsi_12;\n                        time_t rdi_15;\n                        rsi_12 = error(1, 0, dcgettext(nullptr, \"%s: invalid directive\", 5), sub_408f10(rax_1));\n                        /* tailcall */\n                        return sub_403ca0(rdi_15, rsi_12);\n                    }\n                    uint64_t* const rdi_10 = stdout;\n                    r14 = (rbp_1 + 1);\n                    char* rax_15 = stdout[5];\n                    if (rax_15 >= stdout[6])\n                    {\n                        __overflow(rdi_10, 0x25);\n                    }\n                    else\n                    {\n                        stdout[5] = &rax_15[1];\n                        *rax_15 = 0x25;\n                    }\n                }\n            }\n            else if (rsi != 0x5c)\n            {\n                FILE* rdi_1 = stdout;\n                char* rax_2 = stdout[5];\n                if (rax_2 >= stdout[6])\n                {\n                    __overflow(rdi_1, rsi);\n                    rbp_1 = r14;\n                    r14 = r12_1;\n                }\n                else\n                {\n                    rbp_1 = r14;\n                    r14 = r12_1;\n                    stdout[5] = &rax_2[1];\n                    *rax_2 = rsi;\n                }\n            }\n            else\n            {\n                char rbp_2;\n                if (data_617480 != 0)\n                {\n                    rbp_2 = r14[1];\n                    if ((rbp_2 - 0x30) > 7)\n                    {\n                        int32_t r13_2;\n                        if (rbp_2 == 0x78)\n                        {\n                            uint64_t rcx_1 = r14[2];\n                            uint16_t* rdx_6 = *__ctype_b_loc();\n                            char rax_19 = rcx_1;\n                            if ((*(&rdx_6[rcx_1] + 1) & 0x10) != 0)\n                            {\n                                int32_t rcx_3 = rcx_1;\n                                int32_t rax_27;\n                                if ((rax_19 - 0x61) <= 5)\n                                {\n                                    rax_27 = (rcx_3 - 0x57);\n                                }\n                                else\n                                {\n                                    int32_t rcx_4 = (rcx_3 - 0x30);\n                                    rax_27 = (rcx_3 - 0x37);\n                                    if ((rax_19 - 0x41) > 5)\n                                    {\n                                        rax_27 = rcx_4;\n                                    }\n                                }\n                                uint64_t rsi_6 = r14[3];\n                                rbp_1 = &r14[2];\n                                char rcx_5 = rsi_6;\n                                if ((*(&rdx_6[rsi_6] + 1) & 0x10) != 0)\n                                {\n                                    int32_t rdx_12 = rsi_6;\n                                    rbp_1 = &r14[3];\n                                    int32_t rax_28 = (rax_27 << 4);\n                                    int32_t rdx_13;\n                                    if ((rsi_6 - 0x61) <= 5)\n                                    {\n                                        rdx_13 = (rdx_12 - 0x57);\n                                    }\n                                    else\n                                    {\n                                        int32_t rsi_8 = (rdx_12 - 0x37);\n                                        rdx_13 = (rdx_12 - 0x30);\n                                        if ((rcx_5 - 0x41) <= 5)\n                                        {\n                                            rdx_13 = rsi_8;\n                                        }\n                                    }\n                                    rax_27 = (rax_28 + rdx_13);\n                                }\n                                uint64_t* const rdi_13 = stdout;\n                                r14 = (rbp_1 + 1);\n                                char* rdx_14 = stdout[5];\n                                if (rdx_14 >= stdout[6])\n                                {\n                                    __overflow(rdi_13, rax_27);\n                                }\n                                else\n                                {\n                                    stdout[5] = &rdx_14[1];\n                                    *rdx_14 = rax_27;\n                                }\n                            }\n                            else\n                            {\n                                r13_2 = 0x78;\n                            label_403a26:\n                                error(0, 0, dcgettext(nullptr, \"warning: unrecognized escape '\\%\u2026\", 5), r13_2);\n                            label_403a30:\n                                FILE* rdi_11 = stdout;\n                                r14 = &r14[2];\n                                char* rax_22 = stdout[5];\n                                if (rax_22 >= stdout[6])\n                                {\n                                    rbp_1 = r12_1;\n                                    __overflow(rdi_11, r13_2);\n                                }\n                                else\n                                {\n                                    stdout[5] = &rax_22[1];\n                                    *rax_22 = rbp_2;\n                                    rbp_1 = r12_1;\n                                }\n                            }\n                        }\n                        else if (rbp_2 == 0)\n                        {\n                            error(0, 0, dcgettext(nullptr, \"warning: backslash at end of for\u2026\", 5));\n                        }\n                        else\n                        {\n                            char rax_16 = (rbp_2 - 0x22);\n                            r13_2 = rbp_2;\n                            if (rax_16 > 0x54)\n                            {\n                                goto label_403a26;\n                            }\n                            switch (rax_16)\n                            {\n                                case 0:\n                                case 0x3a:\n                                {\n                                    goto label_403a30;\n                                }\n                                case 1:\n                                case 2:\n                                case 3:\n                                case 4:\n                                case 5:\n                                case 6:\n                                case 7:\n                                case 8:\n                                case 9:\n                                case 0xa:\n                                case 0xb:\n                                case 0xc:\n                                case 0xd:\n                                case 0xe:\n                                case 0xf:\n                                case 0x10:\n                                case 0x11:\n                                case 0x12:\n                                case 0x13:\n                                case 0x14:\n                                case 0x15:\n                                case 0x16:\n                                case 0x17:\n                                case 0x18:\n                                case 0x19:\n                                case 0x1a:\n                                case 0x1b:\n                                case 0x1c:\n                                case 0x1d:\n                                case 0x1e:\n                                case 0x1f:\n                                case 0x20:\n                                case 0x21:\n                                case 0x22:\n                                case 0x23:\n                                case 0x24:\n                                case 0x25:\n                                case 0x26:\n                                case 0x27:\n                                case 0x28:\n                                case 0x29:\n                                case 0x2a:\n                                case 0x2b:\n                                case 0x2c:\n                                case 0x2d:\n                                case 0x2e:\n                                case 0x2f:\n                                case 0x30:\n                                case 0x31:\n                                case 0x32:\n                                case 0x33:\n                                case 0x34:\n                                case 0x35:\n                                case 0x36:\n                                case 0x37:\n                                case 0x38:\n                                case 0x39:\n                                case 0x3b:\n                                case 0x3c:\n                                case 0x3d:\n                                case 0x3e:\n                                case 0x41:\n                                case 0x42:\n                                case 0x45:\n                                case 0x46:\n                                case 0x47:\n                                case 0x48:\n                                case 0x49:\n                                case 0x4a:\n                                case 0x4b:\n                                case 0x4d:\n                                case 0x4e:\n                                case 0x4f:\n                                case 0x51:\n                                case 0x53:\n                                {\n                                    goto label_403a26;\n                                }\n                                case 0x3f:\n                                {\n                                    r13_2 = 7;\n                                    rbp_2 = 7;\n                                    goto label_403a30;\n                                }\n                                case 0x40:\n                                {\n                                    r13_2 = 8;\n                                    rbp_2 = 8;\n                                    goto label_403a30;\n                                }\n                                case 0x43:\n                                {\n                                    r13_2 = 0x1b;\n                                    rbp_2 = 0x1b;\n                                    goto label_403a30;\n                                }\n                                case 0x44:\n                                {\n                                    r13_2 = 0xc;\n                                    rbp_2 = 0xc;\n                                    goto label_403a30;\n                                }\n                                case 0x4c:\n                                {\n                                    r13_2 = 0xa;\n                                    rbp_2 = 0xa;\n                                    goto label_403a30;\n                                }\n                                case 0x50:\n                                {\n                                    r13_2 = 0xd;\n                                    rbp_2 = 0xd;\n                                    goto label_403a30;\n                                }\n                                case 0x52:\n                                {\n                                    r13_2 = 9;\n                                    rbp_2 = 9;\n                                    goto label_403a30;\n                                }\n                                case 0x54:\n                                {\n                                    r13_2 = 0xb;\n                                    rbp_2 = 0xb;\n                                    goto label_403a30;\n                                }\n                            }\n                        }\n                    }\n                    else\n                    {\n                        int32_t rax_23 = r14[2];\n                        uint64_t r10_2 = (rbp_2 - 0x30);\n                        if ((rax_23 - 0x30) > 7)\n                        {\n                            r14 = &r14[2];\n                        }\n                        else\n                        {\n                            r10_2 = ((rax_23 + (r10_2 << 3)) - 0x30);\n                            int32_t rax_24 = r14[3];\n                            if ((rax_24 - 0x30) > 7)\n                            {\n                                r14 = &r14[3];\n                            }\n                            else\n                            {\n                                r10_2 = ((rax_24 + (r10_2 << 3)) - 0x30);\n                                r14 = &r14[4];\n                            }\n                        }\n                        FILE* rdi_12 = stdout;\n                        char* rax_25 = stdout[5];\n                        if (rax_25 >= stdout[6])\n                        {\n                            __overflow(rdi_12, r10_2);\n                        }\n                        else\n                        {\n                            stdout[5] = &rax_25[1];\n                            *rax_25 = r10_2;\n                        }\n                        rbp_1 = &r14[-1];\n                    }\n                }\n                if ((data_617480 == 0 || ((data_617480 != 0 && (rbp_2 - 0x30) > 7) && rbp_2 != 0x78)))\n                {\n                    uint64_t* const rdi_2 = stdout;\n                    char* rax_6 = stdout[5];\n                    if (rax_6 >= stdout[6])\n                    {\n                        rbp_1 = r14;\n                        r14 = r12_1;\n                        __overflow(rdi_2, 0x5c);\n                    }\n                    else\n                    {\n                        char* rbp_3 = r14;\n                        r14 = r12_1;\n                        stdout[5] = &rax_6[1];\n                        *rax_6 = 0x5c;\n                        rsi = rbp_3[1];\n                        if (rsi == 0)\n                        {\n                            break;\n                        }\n                        continue;\n                    }\n                }\n            }\n            rsi = *(rbp_1 + 1);\n        } while (rsi != 0);\n    }\n    free(rax_1);\n    fputs_unlocked(data_617310, stdout);\n    return var_55;\n}\n\n"
        },
        {
            "funcName": "sub_403ca0",
            "funcStartAddr": "0x403ca0",
            "funcEndAddr": "0x403d69",
            "decompiledFuncCode": "int64_t sub_403ca0(time_t arg1, int32_t arg2)\n{\n    time_t var_78 = arg1;\n    int64_t rdi = data_617420;\n    if (rdi == 0)\n    {\n        int64_t rax_7 = sub_40c170(getenv(&data_4106c6));\n        rdi = rax_7;\n        data_617420 = rax_7;\n    }\n    void var_48;\n    if (sub_40c450(rdi, &var_78, &var_48) == 0)\n    {\n        void var_68;\n        __sprintf_chk(&data_6173e0, 1, 0x3d, \"%s.%09d\", sub_4059c0(var_78, &var_68), arg2);\n        return 0x6173e0;\n    }\n    sub_4072d0(&data_6173e0, 0x3d, \"%Y-%m-%d %H:%M:%S.%N %z\", &var_48, data_617420, arg2);\n    return 0x6173e0;\n}\n\n"
        },
        {
            "funcName": "sub_403d70",
            "funcStartAddr": "0x403d70",
            "funcEndAddr": "0x403e7d",
            "decompiledFuncCode": "int64_t sub_403d70(char* arg1)\n{\n    if (data_617430 == 0)\n    {\n        int64_t* rax_7 = sub_40b0c0();\n        data_617428 = rax_7;\n        if (rax_7 == 0)\n        {\n            error(0, *__errno_location(), \"%s\", dcgettext(nullptr, \"cannot read table of mounted fil\u2026\", 5));\n        }\n        data_617430 = 1;\n    }\n    int64_t var_138;\n    int64_t rax_6;\n    if (__xstat(1, arg1, &var_138) == 0)\n    {\n        int64_t* rbx_1 = data_617428;\n        if (rbx_1 != 0)\n        {\n            do\n            {\n                if ((rbx_1[5] & 1) != 0)\n                {\n                    char* rbp_1 = *rbx_1;\n                    int64_t var_130;\n                    int64_t var_a8;\n                    int64_t var_a0;\n                    if (((*rbp_1 == 0x2f && strcmp(rbx_1[1], arg1) == 0) && (__xstat(1, rbp_1, &var_a8) == 0 && (var_130 == var_a0 && var_138 == var_a8))))\n                    {\n                        rax_6 = *rbx_1;\n                        goto label_403e25;\n                    }\n                }\n                rbx_1 = rbx_1[6];\n            } while (rbx_1 != 0);\n        }\n    }\n    rax_6 = 0;\nlabel_403e25:\n    return rax_6;\n}\n\n"
        },
        {
            "funcName": "sub_403e80",
            "funcStartAddr": "0x403e80",
            "funcEndAddr": "0x403f85",
            "decompiledFuncCode": "char* sub_403e80(char arg1, char arg2, char arg3)\n{\n    if (arg1 == 0)\n    {\n        if (arg2 != 0)\n        {\n            /* tailcall */\n            return sub_409790(\"%n %s %b %f %u %g %D %i %h %t %T\u2026\");\n        }\n        int64_t rax_5 = sub_409790(dcgettext(nullptr, \"  File: %N\\n  Size: %-10s\\tBlock\u2026\", 5));\n        char const* const rsi_3 = \"Device: %Dh/%dd\\tInode: %-10i  L\u2026\";\n        if (arg3 == 0)\n        {\n            rsi_3 = \"Device: %Dh/%dd\\tInode: %-10i  L\u2026\";\n        }\n        dcgettext(nullptr, rsi_3, 5);\n        char* rax_7 = __sanitizer::Report(\"%s%s\", 0);\n        free(rax_5);\n        dcgettext(nullptr, \"Access: (%04a/%10.10A)  Uid: (%5\u2026\", 5);\n        char* rax_9 = __sanitizer::Report(\"%s%s\", 0);\n        free(rax_7);\n        dcgettext(nullptr, \"Access: %x\\nModify: %y\\nChange: \u2026\", 5);\n        char* rax_11 = __sanitizer::Report(\"%s%s\", 0);\n        free(rax_9);\n        return rax_11;\n    }\n    if (arg2 == 0)\n    {\n        /* tailcall */\n        return sub_409790(dcgettext(nullptr, \"  File: \"%n\"\\n    ID: %-8i Namel\u2026\", 5));\n    }\n    /* tailcall */\n    return sub_409790(\"%n %i %l %t %s %S %b %f %a %c %d\u2026\");\n}\n\n"
        },
        {
            "funcName": "sub_403f90",
            "funcStartAddr": "0x403f90",
            "funcEndAddr": "0x4042d8",
            "decompiledFuncCode": "uint64_t sub_403f90(char* arg1, void* arg2, int64_t arg3, int64_t arg4)\n{\n    char* r14 = arg1;\n    void* r13 = arg2;\n    int64_t var_50 = arg3;\n    char* rax = sub_40aed0(arg1, 0x2e, arg2);\n    uint64_t rcx_5;\n    int32_t rbx;\n    int64_t rsi_2;\n    int32_t r15_3;\n    int32_t var_48_1;\n    if (rax == 0)\n    {\n        var_48_1 = 0;\n        rbx = 0;\n    label_404120:\n        int32_t rsi_1 = rbx;\n        rcx_5 = 1;\n        do\n        {\n            int32_t rcx_6 = (rcx_5 * 5);\n            rsi_1 = (rsi_1 + 1);\n            rcx_5 = (rcx_6 + rcx_6);\n        } while (rsi_1 != 9);\n        rsi_2 = rcx_5;\n        int64_t rax_14;\n        int64_t rdx_4;\n        rdx_4 = HIGHD(arg4);\n        rax_14 = LOWD(arg4);\n        r15_3 = (COMBINE(rdx_4, rax_14) / rsi_2);\n    }\n    else\n    {\n        char* r15_1 = rax;\n        *(r14 + r13) = 0;\n        void* rcx_1 = (rax - r14);\n        int64_t rax_10;\n        if ((rax[1] - 0x30) <= 9)\n        {\n            int32_t var_48;\n            var_48 = rcx_1;\n            rax_10 = strtol(&r15_1[1], nullptr, 0xa);\n            rcx_1 = var_48;\n            if (rax_10 > 0x7fffffff)\n            {\n                rax_10 = 0x7fffffff;\n            }\n            rbx = rax_10;\n            if ((rax_10 != 0 && (r15_1[-1] - 0x30) > 9))\n            {\n                var_48_1 = 0;\n                r13 = rcx_1;\n            }\n            if (rax_10 == 0)\n            {\n                var_48_1 = 0;\n                r13 = rcx_1;\n                goto label_404120;\n            }\n        }\n        else\n        {\n            rbx = 9;\n            if ((r15_1[-1] - 0x30) > 9)\n            {\n                r13 = rcx_1;\n                r15_3 = arg4;\n                rsi_2 = 1;\n                var_48_1 = 0;\n                rcx_5 = 1;\n            }\n        }\n        if ((((rax[1] - 0x30) > 9 && (r15_1[-1] - 0x30) <= 9) || (((rax[1] - 0x30) <= 9 && rax_10 != 0) && (r15_1[-1] - 0x30) <= 9)))\n        {\n            *r15_1 = 0;\n            do\n            {\n                r15_1 = (r15_1 - 1);\n            } while ((r15_1[-1] - 0x30) <= 9);\n            int64_t rax_7 = strtol(r15_1, nullptr, 0xa);\n            if (rax_7 > 0x7fffffff)\n            {\n                rax_7 = 0x7fffffff;\n            }\n            r13 = rcx_1;\n            var_48_1 = rax_7;\n            if (rax_7 > 1)\n            {\n                int64_t rdx_1;\n                rdx_1 = *r15_1 == 0x30;\n                void* r15_2 = &r15_1[rdx_1];\n                int64_t rdx_2 = data_617470;\n                r13 = (r15_2 - r14);\n                if (rax_7 > rdx_2)\n                {\n                    int32_t rax_8 = (rax_7 - rdx_2);\n                    if (rax_8 > 1)\n                    {\n                        int32_t rax_9 = (rax_8 - rbx);\n                        if (rax_9 > 1)\n                        {\n                            char* rdi_1 = r14;\n                            char rsi;\n                            if (r14 >= r15_2)\n                            {\n                                r13 = nullptr;\n                            }\n                            else\n                            {\n                                char* rdx_3 = r14;\n                                rsi = 0;\n                                do\n                                {\n                                    char rcx_4 = *rdx_3;\n                                    if (rcx_4 != 0x2d)\n                                    {\n                                        *rdi_1 = rcx_4;\n                                        rdi_1 = &rdi_1[1];\n                                    }\n                                    else\n                                    {\n                                        rsi = 1;\n                                    }\n                                    rdx_3 = &rdx_3[1];\n                                } while (r15_2 != rdx_3);\n                                r13 = (rdi_1 - r14);\n                            }\n                            if ((r14 >= r15_2 || (r14 < r15_2 && rsi == 0)))\n                            {\n                                r13 = (r13 + __sprintf_chk(rdi_1, 1, -1, \"%d\", rax_9));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if ((((((rax[1] - 0x30) <= 9 && rax_10 != 0) && (r15_1[-1] - 0x30) > 9) || ((rax[1] - 0x30) > 9 && (r15_1[-1] - 0x30) <= 9)) || (((rax[1] - 0x30) <= 9 && rax_10 != 0) && (r15_1[-1] - 0x30) <= 9)))\n        {\n            if (rbx <= 8)\n            {\n                goto label_404120;\n            }\n            r15_3 = arg4;\n            rsi_2 = 1;\n            rcx_5 = 1;\n        }\n    }\n    uint64_t rax_24;\n    if ((arg3 < 0 && arg4 != 0))\n    {\n        int32_t temp2_1;\n        int32_t temp3_1;\n        temp2_1 = HIGHW(0x3b9aca00);\n        temp3_1 = LOWW(0x3b9aca00);\n        int64_t rax_22;\n        int64_t rdx_10;\n        rdx_10 = HIGHD(arg4);\n        rax_22 = LOWD(arg4);\n        int32_t rax_23;\n        rax_23 = (COMBINE(rdx_10, rax_22) % rsi_2) != 0;\n        rax_23 = ((COMBINE(0, 0x3b9aca00) / rcx_5) - r15_3) != rax_23;\n        rax_24 = rax_23;\n        var_50 = (arg3 + rax_24);\n    }\n    uint64_t rax_16;\n    if (((arg3 >= 0 || (arg3 < 0 && arg4 == 0)) || ((arg3 < 0 && arg4 != 0) && arg3 != (-rax_24))))\n    {\n        rax_16 = sub_402af0(r14, r13, var_50);\n    }\n    if (((arg3 < 0 && arg4 != 0) && arg3 == (-rax_24)))\n    {\n        sub_402980(r14, r13, \"'-+ 0\", &data_4106ee);\n        int512_t zmm0;\n        zmm0 = -0x4030000000000000;\n        rax_16 = __printf_chk(1, r14);\n    }\n    if (rbx != 0)\n    {\n        int32_t rcx_7 = 9;\n        if (rbx <= 9)\n        {\n            rcx_7 = rbx;\n        }\n        uint64_t rbx_1 = (rbx - rcx_7);\n        if (rax_16 < 0)\n        {\n            /* nop */\n        }\n        __printf_chk(1, \"%s%.*d%-*.*d\", data_617478);\n        rax_16 = rbx_1;\n    }\n    return rax_16;\n}\n\n"
        },
        {
            "funcName": "sub_4042e0",
            "funcStartAddr": "0x4042e0",
            "funcEndAddr": "0x404867",
            "decompiledFuncCode": "uint64_t sub_4042e0(char* arg1, void* arg2, int32_t arg3, int64_t arg4, \n    uint64_t arg5, int64_t* arg6)\n{\n    uint64_t rdx = (arg3 - 0x41);\n    int32_t rbp_1;\n    if (rdx > 0x39)\n    {\n    label_404760:\n        uint64_t* const rdi_18 = stdout;\n        char* rax_26 = stdout[5];\n        if (rax_26 >= stdout[6])\n        {\n            rbp_1 = 0;\n            __overflow(rdi_18, 0x3f);\n        }\n        else\n        {\n            rbp_1 = 0;\n            stdout[5] = &rax_26[1];\n            *rax_26 = 0x3f;\n        }\n    }\n    else\n    {\n        int64_t rax_1;\n        uint32_t rcx_1;\n        uint32_t rdx_7;\n        char* rdx_12;\n        int32_t rsi;\n        time_t rdi;\n        char* r13_1;\n        switch (rdx)\n        {\n            case 0:\n            {\n                rbp_1 = 0;\n                sub_4059b0(arg6, &data_617438);\n                data_617442 = 0;\n                sub_402a70(arg1, arg2, 0x617438);\n                break;\n            }\n            case 1:\n            {\n                rbp_1 = 0;\n                sub_402ab0(arg1, arg2, 0x200);\n                break;\n            }\n            case 2:\n            {\n                int32_t* rax_21 = __errno_location();\n                *rax_21 = 0x5f;\n                rbp_1 = 1;\n                error(0, *rax_21, dcgettext(nullptr, \"failed to get security context o\u2026\", 5), sub_408cc0(4, arg5));\n                *(arg1 + arg2) = 0x73;\n                __printf_chk(1, arg1, &data_410707);\n                break;\n            }\n            case 3:\n            {\n                rbp_1 = 0;\n                sub_402a30(arg1, arg2, *arg6);\n                break;\n            }\n            case 5:\n            {\n                rax_1 = sub_405740(arg6);\n                break;\n            }\n            case 0xd:\n            {\n                rbp_1 = 0;\n                sub_402a70(arg1, arg2, sub_408cc0(sub_4088a0(nullptr), arg5));\n                break;\n            }\n            case 0x13:\n            {\n                rcx_1 = arg6[5];\n                rdx_7 = 0;\n                break;\n            }\n            case 0x16:\n            {\n                rbp_1 = 0;\n                sub_403f90(arg1, arg2, 0, 0);\n                break;\n            }\n            case 0x17:\n            {\n                rbp_1 = 0;\n                sub_403f90(arg1, arg2, arg6[9], arg6[0xa]);\n                break;\n            }\n            case 0x18:\n            {\n                rbp_1 = 0;\n                sub_403f90(arg1, arg2, arg6[0xb], arg6[0xc]);\n                break;\n            }\n            case 0x19:\n            {\n                rbp_1 = 0;\n                sub_403f90(arg1, arg2, arg6[0xd], arg6[0xe]);\n                break;\n            }\n            case 0x20:\n            {\n                int32_t rbp_2 = arg6[3];\n                sub_402980(arg1, arg2, &data_4103a7, &data_41072b);\n                rbp_1 = 0;\n                __printf_chk(1, arg1, (rbp_2 & 0xfff));\n                break;\n            }\n            case 0x21:\n            {\n                rbp_1 = 0;\n                sub_402ab0(arg1, arg2, arg6[8]);\n                break;\n            }\n            case 0x23:\n            {\n                rbp_1 = 0;\n                sub_402ab0(arg1, arg2, *arg6);\n                break;\n            }\n            case 0x25:\n            {\n                rbp_1 = 0;\n                sub_402a30(arg1, arg2, arg6[3]);\n                break;\n            }\n            case 0x26:\n            {\n                rbp_1 = 0;\n                sub_402ab0(arg1, arg2, arg6[4]);\n                break;\n            }\n            case 0x27:\n            {\n                rbp_1 = 0;\n                sub_402ab0(arg1, arg2, arg6[2]);\n                break;\n            }\n            case 0x28:\n            {\n                rbp_1 = 0;\n                sub_402ab0(arg1, arg2, arg6[1]);\n                break;\n            }\n            case 0x2c:\n            {\n                char* r14_1;\n                if ((data_617481 != 0 || (data_617481 == 0 && (arg6[3] & 0xf000) != 0xa000)))\n                {\n                    char* rax_7 = canonicalize_file_name(arg5);\n                    r13_1 = rax_7;\n                    if (rax_7 == 0)\n                    {\n                        error(0, *__errno_location(), dcgettext(nullptr, \"failed to canonicalize %s\", 5), sub_408cc0(4, arg5));\n                    label_4047f8:\n                        rbp_1 = 1;\n                        r14_1 = &data_410707;\n                    }\n                    else\n                    {\n                        rbp_1 = 0;\n                        char* rdi_6 = r13_1;\n                        r13_1 = nullptr;\n                        r14_1 = sub_403d70(rax_7);\n                        free(rdi_6);\n                        if (r14_1 == 0)\n                        {\n                            goto label_404796;\n                        }\n                    }\n                }\n                if ((data_617481 == 0 && (arg6[3] & 0xf000) == 0xa000))\n                {\n                label_404796:\n                    void* rax_27 = sub_404d10(arg5, arg6);\n                    r13_1 = rax_27;\n                    if (rax_27 == 0)\n                    {\n                        goto label_4047f8;\n                    }\n                    char* rax_28 = sub_403d70(rax_27);\n                    r14_1 = rax_28;\n                    if (rax_28 == 0)\n                    {\n                        r14_1 = r13_1;\n                        rbp_1 = 0;\n                    }\n                    else\n                    {\n                        rbp_1 = 0;\n                    }\n                }\n                rdx_12 = r14_1;\n                break;\n            }\n            case 0x2d:\n            {\n                rbp_1 = 0;\n                sub_402a70(arg1, arg2, arg5);\n                break;\n            }\n            case 0x2e:\n            {\n                int64_t rdx_10 = arg6[7];\n                if ((rdx_10 - 1) > 0x1fffffffffffffff)\n                {\n                    rdx_10 = 0x200;\n                }\n                rbp_1 = 0;\n                sub_402ab0(arg1, arg2, rdx_10);\n                break;\n            }\n            case 0x32:\n            {\n                rbp_1 = 0;\n                sub_402af0(arg1, arg2, arg6[6]);\n                break;\n            }\n            case 0x33:\n            {\n                int64_t rax_3 = arg6[5];\n                rcx_1 = ((rax_3 >> 8) & 0xfff);\n                rdx_7 = ((rax_3 >> 0x20) & 0xfffff000);\n                break;\n            }\n            case 0x34:\n            {\n                rbp_1 = 0;\n                sub_402ab0(arg1, arg2, *(arg6 + 0x1c));\n                break;\n            }\n            case 0x37:\n            {\n                rsi = arg6[0xa];\n                rdi = arg6[9];\n                break;\n            }\n            case 0x38:\n            {\n                rsi = arg6[0xc];\n                rdi = arg6[0xb];\n                break;\n            }\n            case 0x39:\n            {\n                rsi = arg6[0xe];\n                rdi = arg6[0xd];\n                break;\n            }\n        }\n        if (((rdx == 0x37 || rdx == 0x38) || rdx == 0x39))\n        {\n            rax_1 = sub_403ca0(rdi, rsi);\n        }\n        else if ((rdx == 0x13 || rdx == 0x33))\n        {\n            rbp_1 = 0;\n            sub_402a30(arg1, arg2, (rdx_7 | rcx_1));\n        }\n        if ((((rdx == 5 || rdx == 0x37) || rdx == 0x38) || rdx == 0x39))\n        {\n            rbp_1 = 0;\n            sub_402a70(arg1, arg2, rax_1);\n        }\n        char* rax_17;\n        if ((rdx == 0xd && (arg6[3] & 0xf000) == 0xa000))\n        {\n            rax_17 = sub_405090(arg5, arg6[6]);\n            r13_1 = rax_17;\n            if (rax_17 == 0)\n            {\n                rbp_1 = 1;\n                error(0, *__errno_location(), dcgettext(nullptr, \"cannot read symbolic link %s\", 5), sub_408cc0(4, arg5));\n            }\n            else\n            {\n                __printf_chk(1, \" -> \");\n                rdx_12 = sub_408cc0(sub_4088a0(nullptr), r13_1);\n            }\n        }\n        if ((((rdx == 0xd && (arg6[3] & 0xf000) == 0xa000) && rax_17 != 0) || rdx == 0x2c))\n        {\n            sub_402a70(arg1, arg2, rdx_12);\n            free(r13_1);\n        }\n        struct group* rax_10;\n        error_t (* rdx_2)(int32_t, char*, struct argp_state*);\n        switch (rdx)\n        {\n            case 4:\n            case 7:\n            case 8:\n            case 9:\n            case 0xa:\n            case 0xb:\n            case 0xc:\n            case 0xe:\n            case 0xf:\n            case 0x10:\n            case 0x11:\n            case 0x12:\n            case 0x15:\n            case 0x1a:\n            case 0x1b:\n            case 0x1c:\n            case 0x1d:\n            case 0x1e:\n            case 0x1f:\n            case 0x22:\n            case 0x24:\n            case 0x29:\n            case 0x2a:\n            case 0x2b:\n            case 0x2f:\n            case 0x30:\n            case 0x31:\n            case 0x35:\n            {\n                goto label_404760;\n            }\n            case 6:\n            {\n                rax_10 = getgrgid(arg6[4]);\n                rdx_2 = \"UNKNOWN\";\n                if (rax_10 == 0)\n                {\n                    goto label_404363;\n                }\n                break;\n            }\n            case 0x14:\n            {\n                rax_10 = getpwuid(*(arg6 + 0x1c));\n                rdx_2 = \"UNKNOWN\";\n                if (rax_10 == 0)\n                {\n                    goto label_404363;\n                }\n                break;\n            }\n            case 0x36:\n            {\n                rdx_2 = &data_4137ca;\n            label_404363:\n                rbp_1 = 0;\n                sub_402a70(arg1, arg2, rdx_2);\n                break;\n            }\n        }\n        if ((rdx == 6 || rdx == 0x14))\n        {\n            rdx_2 = rax_10->parser;\n            goto label_404363;\n        }\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_404870",
            "funcStartAddr": "0x404870",
            "funcEndAddr": "0x404d0d",
            "decompiledFuncCode": "int64_t sub_404870(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_617498;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [OPTION]... FILE...\\n\", 5), rbp);\n        fputs_unlocked(dcgettext(nullptr, \"Display file or file system stat\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nMandatory arguments to long op\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -L, --dereference     follow l\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -c  --format=FORMAT   use the \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nThe valid format sequences for\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  %d   device number in decimal\\n\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  %h   number of hard links\\n  %\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  %u   user ID of owner\\n  %U   \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"Valid format sequences for file \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  %i   file system ID in hex\\n  \u2026\", 5), stdout);\n        __printf_chk(1, dcgettext(nullptr, \"\\n--terse is equivalent to the f\u2026\", 5), \"%n %s %b %f %u %g %D %i %h %t %T\u2026\");\n        __printf_chk(1, dcgettext(nullptr, \"--terse --file-system is equival\u2026\", 5), \"%n %i %l %t %s %S %b %f %a %c %d\u2026\");\n        __printf_chk(1, dcgettext(nullptr, \"\\nNOTE: your shell may have its \u2026\", 5), \"stat\");\n        void* const var_88 = &data_41074d;\n        void* const* rax_22 = &var_88;\n        void* const var_78_1 = \"coreutils\";\n        void* const var_70_1 = \"Multi-call invocation\";\n        void* const var_68_1 = \"sha224sum\";\n        void* const var_60_1 = \"sha2 utilities\";\n        void* const var_58_1 = \"sha256sum\";\n        void* const var_50_1 = \"sha2 utilities\";\n        void* const var_48_1 = \"sha384sum\";\n        void* const var_40_1 = \"sha2 utilities\";\n        void* const var_38_1 = \"sha512sum\";\n        void* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_22 = &rax_22[2];\n            void* const rdi_14 = *rax_22;\n            c_1 = false;\n            z_1 = (rdi_14 & rdi_14) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_17 = \"stat\";\n            int64_t rcx_2 = 5;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_17;\n                char temp1_1 = *rdi_14;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_17 = (rsi_17 + 1);\n                rdi_14 = (rdi_14 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbp_1 = rax_22[1];\n        char* rax_33;\n        int32_t rax_34;\n        void* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_5;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_33 = setlocale(5, nullptr, rdx_5, rcx_5, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_33 != 0)\n            {\n                rax_34 = strncmp(rax_33, &data_4107d1, 3);\n                if (rax_34 != 0)\n                {\n                    rbp_1 = \"stat\";\n                }\n            }\n            if ((rax_33 == 0 || (rax_33 != 0 && rax_34 == 0)))\n            {\n                rbp_1 = \"stat\";\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"stat\");\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_3;\n            uint64_t r8_1;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_25 = setlocale(5, nullptr, rdx_3, rcx_3, r8_1, r9_1, var_88, \"test invocation\");\n            if (rax_25 == 0)\n            {\n                goto label_404c00;\n            }\n            if (strncmp(rax_25, &data_4107d1, 3) == 0)\n            {\n                goto label_404c00;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_33 != 0) && rax_34 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), \"stat\");\n        label_404c00:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"stat\");\n            if (rbp_1 != \"stat\")\n            {\n                r12_1 = &data_4137cc[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404d10",
            "funcStartAddr": "0x404d10",
            "funcEndAddr": "0x405090",
            "decompiledFuncCode": "void* sub_404d10(uint64_t arg1, int128_t* arg2)\n{\n    void var_158;\n    int32_t rax = sub_408f30(&var_158);\n    int32_t* rax_1 = __errno_location();\n    void* rbx_3;\n    if (rax != 0)\n    {\n        rbx_3 = nullptr;\n        error(0, *rax_1, dcgettext(nullptr, \"cannot get current directory\", 5));\n    }\n    else\n    {\n        int128_t var_148;\n        uint64_t rax_8;\n        int32_t rax_9;\n        int32_t rax_24;\n        uint64_t rsi_5;\n        if ((*(arg2 + 0x18) & 0xf000) == 0x4000)\n        {\n            var_148 = *arg2;\n            int128_t var_138_2 = arg2[1];\n            int128_t var_128_2 = arg2[2];\n            int128_t var_118_2 = arg2[3];\n            int128_t var_108_2 = arg2[4];\n            int128_t var_f8_2 = arg2[5];\n            int128_t var_e8_2 = arg2[6];\n            int128_t var_d8_2 = arg2[7];\n            int128_t var_c8_2 = arg2[8];\n            rax_24 = chdir(arg1);\n            rsi_5 = arg1;\n        }\n        else\n        {\n            char* rax_4 = sub_4055d0(arg1);\n            uint64_t rax_5 = strlen(rax_4);\n            rax_8 = memcpy((((&var_158 - ((rax_5 + 0x18) & 0xfffffffffffffff0)) + 0xf) & 0xfffffffffffffff0), rax_4, (rax_5 + 1));\n            free(rax_4);\n            rax_9 = chdir(rax_8);\n            if (rax_9 < 0)\n            {\n                rsi_5 = rax_8;\n            }\n        }\n        if ((((*(arg2 + 0x18) & 0xf000) != 0x4000 && rax_9 < 0) || ((*(arg2 + 0x18) & 0xf000) == 0x4000 && rax_24 < 0)))\n        {\n            rbx_3 = nullptr;\n            error(0, *rax_1, dcgettext(nullptr, \"cannot change to directory %s\", 5), sub_408cc0(4, rsi_5));\n        }\n        int32_t rax_10;\n        if (((*(arg2 + 0x18) & 0xf000) != 0x4000 && rax_9 >= 0))\n        {\n            rax_10 = __xstat(1, &data_411fe4, &var_148);\n        }\n        if ((((*(arg2 + 0x18) & 0xf000) == 0x4000 && rax_24 >= 0) || (((*(arg2 + 0x18) & 0xf000) != 0x4000 && rax_9 >= 0) && rax_10 >= 0)))\n        {\n            while (true)\n            {\n                int64_t var_b8;\n                int64_t rbx_4;\n                char* rsi_3;\n                if (__xstat(1, &data_411fe3, &var_b8) < 0)\n                {\n                    rsi_3 = \"cannot stat %s\";\n                    rbx_4 = sub_408cc0(4, &data_411fe3);\n                }\n                else\n                {\n                    int64_t var_b0;\n                    if ((var_b8 != var_148 || (var_b8 == var_148 && var_b0 == *var_148[8])))\n                    {\n                        rbx_3 = sub_4097f0();\n                        break;\n                    }\n                    if ((var_b8 == var_148 && var_b0 != *var_148[8]))\n                    {\n                        if (chdir(&data_411fe3) < 0)\n                        {\n                            rsi_3 = \"cannot change to directory %s\";\n                            rbx_4 = sub_408cc0(4, &data_411fe3);\n                        }\n                        else\n                        {\n                            var_148 = var_b8;\n                            int128_t var_a8;\n                            int128_t var_138_1 = var_a8;\n                            int128_t var_98;\n                            int128_t var_128_1 = var_98;\n                            int128_t var_88;\n                            int128_t var_118_1 = var_88;\n                            int128_t var_78;\n                            int128_t var_108_1 = var_78;\n                            int128_t var_68;\n                            int128_t var_f8_1 = var_68;\n                            int128_t var_58;\n                            int128_t var_e8_1 = var_58;\n                            int128_t var_48;\n                            int128_t var_d8_1 = var_48;\n                            int128_t var_38;\n                            int128_t var_c8_1 = var_38;\n                            continue;\n                        }\n                    }\n                }\n                rbx_3 = nullptr;\n                error(0, *rax_1, dcgettext(nullptr, rsi_3, 5), rbx_4);\n                break;\n            }\n            goto label_404f1f;\n        }\n        if ((((*(arg2 + 0x18) & 0xf000) != 0x4000 && rax_9 >= 0) && rax_10 < 0))\n        {\n            rbx_3 = nullptr;\n            error(0, *rax_1, dcgettext(nullptr, \"cannot stat current directory (n\u2026\", 5), sub_408cc0(4, rax_8));\n        label_404f1f:\n            int32_t r13_2 = *rax_1;\n            if (sub_408f80(&var_158) != 0)\n            {\n                int64_t rsi_9;\n                int64_t rdi_10;\n                rsi_9 = error(1, *rax_1, dcgettext(nullptr, \"failed to return to initial work\u2026\", 5));\n                /* tailcall */\n                return sub_405090(rdi_10, rsi_9);\n            }\n            sub_408fa0(&var_158);\n            *rax_1 = r13_2;\n        }\n    }\n    return rbx_3;\n}\n\n"
        },
        {
            "funcName": "sub_405090",
            "funcStartAddr": "0x405090",
            "funcEndAddr": "0x40517f",
            "decompiledFuncCode": "char* sub_405090(int64_t arg1, int64_t arg2)\n{\n    size_t rbx = (arg2 + 1);\n    if (arg2 >= 0x401)\n    {\n        rbx = 0x401;\n    }\n    char* rbp_1;\n    while (true)\n    {\n        char* rax_1 = malloc(rbx);\n        rbp_1 = rax_1;\n        if (rax_1 == 0)\n        {\n            break;\n        }\n        while (true)\n        {\n            int64_t rax_2 = readlink(arg1, rax_1, rbx);\n            if ((rax_2 < 0 && *__errno_location() != 0x22))\n            {\n                free(rbp_1);\n                return nullptr;\n            }\n            if (rbx > rax_2)\n            {\n                rbp_1[rax_2] = 0;\n                return rbp_1;\n            }\n            free(rbp_1);\n            if (rbx > 0x3fffffffffffffff)\n            {\n                break;\n            }\n            rbx = (rbx + rbx);\n            rax_1 = malloc(rbx);\n            rbp_1 = rax_1;\n            if (rax_1 == 0)\n            {\n                return rbp_1;\n            }\n        }\n        if (rbx > 0x7ffffffffffffffe)\n        {\n            rbp_1 = nullptr;\n            *__errno_location() = 0xc;\n            break;\n        }\n        rbx = 0x7fffffffffffffff;\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_405180",
            "funcStartAddr": "0x405180",
            "funcEndAddr": "0x40518a",
            "decompiledFuncCode": "int64_t sub_405180() __noreturn\n{\n    /* tailcall */\n    return sub_404870(1);\n}\n\n"
        },
        {
            "funcName": "sub_405190",
            "funcStartAddr": "0x405190",
            "funcEndAddr": "0x4052a6",
            "decompiledFuncCode": "int64_t sub_405190(char* arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t rbp = arg3;\n    uint64_t rax = strlen(arg1);\n    char* r14 = *arg2;\n    int64_t var_58 = -1;\n    if (r14 != 0)\n    {\n        char var_41_1 = 0;\n        int64_t rbx_1 = 0;\n        while (true)\n        {\n            if (strncmp(r14, arg1, rax) == 0)\n            {\n                if (strlen(r14) == rax)\n                {\n                    var_58 = rbx_1;\n                    break;\n                }\n                if (var_58 == -1)\n                {\n                    var_58 = rbx_1;\n                    rbx_1 = (rbx_1 + 1);\n                    rbp = (rbp + arg4);\n                    r14 = arg2[rbx_1];\n                    if (r14 != 0)\n                    {\n                        continue;\n                    }\n                    goto label_40526d;\n                }\n                if (arg3 == 0)\n                {\n                    var_41_1 = 1;\n                }\n                else\n                {\n                    char rax_3 = var_41_1;\n                    if (memcmp(((var_58 * arg4) + arg3), rbp, arg4) != 0)\n                    {\n                        rax_3 = 1;\n                    }\n                    var_41_1 = rax_3;\n                }\n            }\n            rbx_1 = (rbx_1 + 1);\n            rbp = (rbp + arg4);\n            r14 = arg2[rbx_1];\n            if (r14 == 0)\n            {\n            label_40526d:\n                int64_t rax_6 = -2;\n                if (var_41_1 == 0)\n                {\n                    rax_6 = var_58;\n                }\n                var_58 = rax_6;\n                break;\n            }\n        }\n    }\n    return var_58;\n}\n\n"
        },
        {
            "funcName": "sub_4052b0",
            "funcStartAddr": "0x4052b0",
            "funcEndAddr": "0x405321",
            "decompiledFuncCode": "int64_t sub_4052b0(uint64_t arg1, uint64_t arg2, int64_t arg3)\n{\n    char* rbx;\n    if (arg3 == -1)\n    {\n        rbx = dcgettext(nullptr, \"invalid argument %s for %s\", 5);\n    }\n    else\n    {\n        rbx = dcgettext(nullptr, \"ambiguous argument %s for %s\", 5);\n    }\n    /* tailcall */\n    return error(0, 0, rbx, sub_408be0(0, 8, arg2), sub_408ef0(1, arg1));\n}\n\n"
        },
        {
            "funcName": "sub_405330",
            "funcStartAddr": "0x405330",
            "funcEndAddr": "0x405448",
            "decompiledFuncCode": "char* sub_405330(int64_t* arg1, int64_t arg2, uint64_t arg3)\n{\n    int64_t r14 = 0;\n    int64_t rbp = arg2;\n    int64_t rbx = 0;\n    fputs_unlocked(dcgettext(nullptr, \"Valid arguments are:\", 5), stderr);\n    uint64_t r12 = *arg1;\n    if (r12 != 0)\n    {\n        do\n        {\n            if ((rbx != 0 && memcmp(r14, rbp, arg3) == 0))\n            {\n                rbx = (rbx + 1);\n                rbp = (rbp + arg3);\n                __fprintf_chk(stderr, 1, \", %s\", sub_408f10(r12));\n                r12 = arg1[rbx];\n                if (r12 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = (rbx + 1);\n            r14 = rbp;\n            rbp = (rbp + arg3);\n            __fprintf_chk(stderr, 1, \"\\n  - %s\", sub_408f10(r12));\n            r12 = arg1[rbx];\n        } while (r12 != 0);\n    }\n    uint64_t* const rdi_6 = stderr;\n    char* rax_6 = stderr[5];\n    if (rax_6 >= stderr[6])\n    {\n        /* tailcall */\n        return __overflow(rdi_6, 0xa);\n    }\n    stderr[5] = &rax_6[1];\n    *rax_6 = 0xa;\n    return rax_6;\n}\n\n"
        },
        {
            "funcName": "sub_405450",
            "funcStartAddr": "0x405450",
            "funcEndAddr": "0x4054c0",
            "decompiledFuncCode": "int64_t sub_405450(uint64_t arg1, char* arg2, int64_t* arg3, int64_t arg4, \n    uint64_t arg5, int64_t arg6)\n{\n    int64_t rax = sub_405190(arg2, arg3, arg4, arg5);\n    if (rax < 0)\n    {\n        sub_4052b0(arg1, arg2, rax);\n        sub_405330(arg3, arg4, arg5);\n        arg6();\n        rax = -1;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4054c0",
            "funcStartAddr": "0x4054c0",
            "funcEndAddr": "0x40550d",
            "decompiledFuncCode": "int64_t sub_4054c0(int64_t arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t r14 = *arg2;\n    if (r14 != 0)\n    {\n        void* rbx_1 = &arg2[1];\n        int64_t rbp_1 = arg3;\n        do\n        {\n            if (memcmp(arg1, rbp_1, arg4) == 0)\n            {\n                break;\n            }\n            r14 = *rbx_1;\n            rbp_1 = (rbp_1 + arg4);\n            rbx_1 = (rbx_1 + 8);\n        } while (r14 != 0);\n    }\n    return r14;\n}\n\n"
        },
        {
            "funcName": "sub_405510",
            "funcStartAddr": "0x405510",
            "funcEndAddr": "0x405518",
            "decompiledFuncCode": "int64_t sub_405510(int64_t arg1)\n{\n    data_617490 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_405520",
            "funcStartAddr": "0x405520",
            "funcEndAddr": "0x405528",
            "decompiledFuncCode": "int64_t sub_405520(char arg1)\n{\n    data_617488 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_405530",
            "funcStartAddr": "0x405530",
            "funcEndAddr": "0x4055ce",
            "decompiledFuncCode": "void sub_405530(void* arg1)\n{\n    int32_t rax = sub_40c640(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_617488 == 0 || (data_617488 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_617490;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_408d60(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_617488 != 0) && *rax_1 == 0x20)) && sub_40c640(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_617328);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4055d0",
            "funcStartAddr": "0x4055d0",
            "funcEndAddr": "0x4055e8",
            "decompiledFuncCode": "char* sub_4055d0(char* arg1)\n{\n    char* rax = sub_405650(arg1);\n    if (rax == 0)\n    {\n        sub_4097b0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4055f0",
            "funcStartAddr": "0x4055f0",
            "funcEndAddr": "0x40564d",
            "decompiledFuncCode": "void* sub_4055f0(char* arg1)\n{\n    int64_t rbp;\n    rbp = *arg1 == 0x2f;\n    char* rax = sub_4056b0(arg1);\n    void* rcx_1 = (rax - arg1);\n    if (rcx_1 > rbp)\n    {\n        void* rdx_1 = (rcx_1 - 1);\n        if (rax[-1] == 0x2f)\n        {\n            void* rax_1;\n            for (; rbp != rdx_1; rdx_1 = rax_1)\n            {\n                rax_1 = (rdx_1 - 1);\n                if (*((arg1 + rdx_1) - 1) != 0x2f)\n                {\n                    break;\n                }\n            }\n            return rdx_1;\n        }\n    }\n    return rcx_1;\n}\n\n"
        },
        {
            "funcName": "sub_405650",
            "funcStartAddr": "0x405650",
            "funcEndAddr": "0x4056aa",
            "decompiledFuncCode": "char* sub_405650(char* arg1)\n{\n    void* rax = sub_4055f0(arg1);\n    void* rbx = rax;\n    rax = rax == 0;\n    char* rax_2 = malloc(((rbx + rax) + 1));\n    char* rcx = rax_2;\n    if (rax_2 != 0)\n    {\n        char* rax_3 = memcpy(rax_2, arg1, rbx);\n        rcx = rax_3;\n        if (rbx == 0)\n        {\n            *rax_3 = 0x2e;\n            rbx = 1;\n        }\n        *(rcx + rbx) = 0;\n    }\n    return rcx;\n}\n\n"
        },
        {
            "funcName": "sub_4056b0",
            "funcStartAddr": "0x4056b0",
            "funcEndAddr": "0x40570b",
            "decompiledFuncCode": "char* sub_4056b0(char* arg1)\n{\n    char rdx = *arg1;\n    char* rax = arg1;\n    if (rdx == 0x2f)\n    {\n        do\n        {\n            rax = &rax[1];\n            rdx = *rax;\n        } while (rdx == 0x2f);\n    }\n    if (rdx != 0)\n    {\n        char* rcx_1 = rax;\n        char rsi_1 = 0;\n        while (true)\n        {\n            if (rdx == 0x2f)\n            {\n                rcx_1 = &rcx_1[1];\n                rdx = *rcx_1;\n                rsi_1 = 1;\n                if (rdx == 0)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                if (rsi_1 != 0)\n                {\n                    rax = rcx_1;\n                    rsi_1 = 0;\n                }\n                rcx_1 = &rcx_1[1];\n                rdx = *rcx_1;\n                if (rdx == 0)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405710",
            "funcStartAddr": "0x405710",
            "funcEndAddr": "0x40573b",
            "decompiledFuncCode": "uint64_t sub_405710(char* arg1)\n{\n    uint64_t rax = strlen(arg1);\n    if (rax > 1)\n    {\n        while (true)\n        {\n            uint64_t rdx_1 = (rax - 1);\n            if (arg1[(rax - 1)] != 0x2f)\n            {\n                break;\n            }\n            rax = rdx_1;\n            if (rdx_1 == 1)\n            {\n                return rax;\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405740",
            "funcStartAddr": "0x405740",
            "funcEndAddr": "0x405824",
            "decompiledFuncCode": "int64_t sub_405740(void* arg1)\n{\n    int32_t rax = (*(arg1 + 0x18) & 0xf000);\n    if (rax == 0x8000)\n    {\n        if (*(arg1 + 0x30) != 0)\n        {\n            /* tailcall */\n            return dcgettext(nullptr, \"regular file\", 5);\n        }\n        /* tailcall */\n        return dcgettext(nullptr, \"regular empty file\", 5);\n    }\n    if (rax == 0x4000)\n    {\n        /* tailcall */\n        return dcgettext(nullptr, \"directory\", 5);\n    }\n    if (rax == 0xa000)\n    {\n        /* tailcall */\n        return dcgettext(nullptr, \"symbolic link\", 5);\n    }\n    if (rax == 0x6000)\n    {\n        /* tailcall */\n        return dcgettext(nullptr, \"block special file\", 5);\n    }\n    if (rax == 0x2000)\n    {\n        /* tailcall */\n        return dcgettext(nullptr, \"character special file\", 5);\n    }\n    if (rax == 0x1000)\n    {\n        /* tailcall */\n        return dcgettext(nullptr, \"fifo\", 5);\n    }\n    if (rax == 0xc000)\n    {\n        /* tailcall */\n        return dcgettext(nullptr, \"socket\", 5);\n    }\n    /* tailcall */\n    return dcgettext(nullptr, \"weird file\", 5);\n}\n\n"
        },
        {
            "funcName": "sub_405830",
            "funcStartAddr": "0x405830",
            "funcEndAddr": "0x4059a3",
            "decompiledFuncCode": "uint64_t sub_405830(int32_t arg1, char* arg2)\n{\n    char rax = 0x2d;\n    int32_t rdx = (arg1 & 0xf000);\n    if (rdx != 0x8000)\n    {\n        rax = 0x64;\n        if (rdx != 0x4000)\n        {\n            rax = 0x62;\n            if (rdx != 0x6000)\n            {\n                rax = 0x63;\n                if (rdx != 0x2000)\n                {\n                    rax = 0x6c;\n                    if (rdx != 0xa000)\n                    {\n                        rax = 0x70;\n                        if (rdx != 0x1000)\n                        {\n                            rax = 0x73;\n                            if (rdx != 0xc000)\n                            {\n                                rax = 0x3f;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    *arg2 = rax;\n    int32_t rax_2 = (arg1 & 0x100);\n    arg2[1] = (((rax_2 - rax_2) & 0xbb) + 0x72);\n    int32_t rax_7 = (arg1 & 0x80);\n    arg2[2] = (((rax_7 - rax_7) & 0xb6) + 0x77);\n    int32_t rax_12 = (arg1 & 0x40);\n    char rax_13 = (rax_12 - rax_12);\n    char rax_15;\n    if ((arg1 & 0x800) == 0)\n    {\n        rax_15 = ((rax_13 & 0xb5) + 0x78);\n    }\n    else\n    {\n        rax_15 = ((rax_13 & 0xe0) + 0x73);\n    }\n    arg2[3] = rax_15;\n    int32_t rax_17 = (arg1 & 0x20);\n    arg2[4] = (((rax_17 - rax_17) & 0xbb) + 0x72);\n    int32_t rax_22 = (arg1 & 0x10);\n    arg2[5] = (((rax_22 - rax_22) & 0xb6) + 0x77);\n    int32_t rax_27 = (arg1 & 8);\n    char rax_28 = (rax_27 - rax_27);\n    char rax_30;\n    if ((arg1 & 0x400) == 0)\n    {\n        rax_30 = ((rax_28 & 0xb5) + 0x78);\n    }\n    else\n    {\n        rax_30 = ((rax_28 & 0xe0) + 0x73);\n    }\n    arg2[6] = rax_30;\n    int32_t rax_32 = (arg1 & 4);\n    arg2[7] = (((rax_32 - rax_32) & 0xbb) + 0x72);\n    int32_t rax_37 = (arg1 & 2);\n    arg2[8] = (((rax_37 - rax_37) & 0xb6) + 0x77);\n    int32_t rax_42 = (arg1 & 1);\n    int32_t rax_43 = (rax_42 - rax_42);\n    if ((arg1 & 0x200) == 0)\n    {\n        uint64_t rax_49 = ((rax_43 & 0xffffffb5) + 0x78);\n        arg2[9] = rax_49;\n        *(arg2 + 0xa) = 0x20;\n        return rax_49;\n    }\n    uint64_t rax_45 = ((rax_43 & 0xffffffe0) + 0x74);\n    arg2[9] = rax_45;\n    *(arg2 + 0xa) = 0x20;\n    return rax_45;\n}\n\n"
        },
        {
            "funcName": "sub_4059b0",
            "funcStartAddr": "0x4059b0",
            "funcEndAddr": "0x4059b8",
            "decompiledFuncCode": "int64_t sub_4059b0(void* arg1, char* arg2)\n{\n    /* tailcall */\n    return sub_405830(*(arg1 + 0x18), arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4059c0",
            "funcStartAddr": "0x4059c0",
            "funcEndAddr": "0x405a5c",
            "decompiledFuncCode": "void* sub_4059c0(uint64_t arg1, void* arg2)\n{\n    void* rcx = (arg2 + 0x14);\n    *(arg2 + 0x14) = 0;\n    if (arg1 < 0)\n    {\n        void* rsi;\n        while (true)\n        {\n            rsi = (rcx - 1);\n            int64_t rax_7;\n            int64_t rdx_3;\n            rdx_3 = HIGHD((arg1 * 0x6666666666666667));\n            rax_7 = LOWD((arg1 * 0x6666666666666667));\n            int64_t rdx_5 = ((rdx_3 >> 2) - (arg1 >> 0x3f));\n            char rax_12 = ((0x30 + (rdx_5 * 0xa)) - arg1);\n            arg1 = rdx_5;\n            *(rcx - 1) = rax_12;\n            if (rdx_5 == 0)\n            {\n                break;\n            }\n            rcx = rsi;\n        }\n        *(rsi - 1) = 0x2d;\n        return (rcx - 2);\n    }\n    uint64_t rdx_2;\n    do\n    {\n        rcx = (rcx - 1);\n        int64_t rax_2;\n        int64_t rdx_1;\n        rdx_1 = HIGHD((arg1 * -0x3333333333333333));\n        rax_2 = LOWD((arg1 * -0x3333333333333333));\n        rdx_2 = (rdx_1 >> 3);\n        char rax_3 = (rdx_2 + (rdx_2 << 2));\n        *rcx = ((arg1 - (rax_3 + rax_3)) + 0x30);\n        arg1 = rdx_2;\n    } while (rdx_2 != 0);\n    return rcx;\n}\n\n"
        },
        {
            "funcName": "sub_405a60",
            "funcStartAddr": "0x405a60",
            "funcEndAddr": "0x405aa1",
            "decompiledFuncCode": "char* sub_405a60(char* arg1, void* arg2, int64_t arg3)\n{\n    if (arg3 != 0)\n    {\n        int64_t rbx_1 = (arg3 - 1);\n        int32_t** rax_1 = __ctype_tolower_loc();\n        do\n        {\n            arg1[rbx_1] = *rax_1[*(arg2 + rbx_1)];\n            rbx_1 = (rbx_1 - 1);\n        } while (rbx_1 != -1);\n    }\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_405ab0",
            "funcStartAddr": "0x405ab0",
            "funcEndAddr": "0x405af1",
            "decompiledFuncCode": "char* sub_405ab0(char* arg1, void* arg2, int64_t arg3)\n{\n    if (arg3 != 0)\n    {\n        int64_t rbx_1 = (arg3 - 1);\n        int32_t** rax_1 = __ctype_toupper_loc();\n        do\n        {\n            arg1[rbx_1] = *rax_1[*(arg2 + rbx_1)];\n            rbx_1 = (rbx_1 - 1);\n        } while (rbx_1 != -1);\n    }\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_405b00",
            "funcStartAddr": "0x405b00",
            "funcEndAddr": "0x4072c5",
            "decompiledFuncCode": "int64_t sub_405b00(char* arg1, int64_t arg2, char* arg3, struct tm* arg4, \n    char arg5, int64_t arg6, int64_t** arg7, int32_t arg8)\n{\n    char* r15 = arg1;\n    char* rbx = arg3;\n    char* r12 = arg4->tm_zone;\n    int32_t r11 = arg4->tm_hour;\n    if (r12 == 0)\n    {\n        r12 = &data_4137cc[0x1b];\n    }\n    if (r11 > 0xc)\n    {\n        r11 = (r11 - 0xc);\n    }\n    else if (r11 == 0)\n    {\n        r11 = 0xc;\n    }\n    char rax = *rbx;\n    int64_t r14 = 0;\n    if (rax != 0)\n    {\n        char var_456;\n        char* var_4b8_1 = &var_456;\n        do\n        {\n            char* r8;\n            if (rax == 0x25)\n            {\n                char r11_1 = arg5;\n                uint32_t r8_1 = 0;\n                int32_t r12_1 = 0;\n                char rcx;\n                uint64_t rbp_1;\n                int32_t r9;\n                while (true)\n                {\n                    rbx = &rbx[1];\n                    int32_t rax_2 = *rbx;\n                    rcx = rax_2;\n                    r9 = rax_2;\n                    bool cond:2_1 = rax_2 > 0x30;\n                    if (rax_2 != 0x30)\n                    {\n                        while ((!cond:2_1))\n                        {\n                            if (rax_2 != 0x23)\n                            {\n                                break;\n                            }\n                            rbx = &rbx[1];\n                            rax_2 = *rbx;\n                            r8_1 = 1;\n                            rcx = rax_2;\n                            r9 = rax_2;\n                            cond:2_1 = rax_2 > 0x30;\n                            if (rax_2 == 0x30)\n                            {\n                                break;\n                            }\n                        }\n                        if (((!cond:2_1) && rax_2 != 0x23))\n                        {\n                            if (rax_2 != 0x2d)\n                            {\n                                rbp_1 = 0xffffffff;\n                                if ((rax_2 - 0x30) > 9)\n                                {\n                                    break;\n                                }\n                            label_405c91:\n                                rbp_1 = 0;\n                                while (true)\n                                {\n                                    int32_t rax_6 = rbx[1];\n                                    void* rsi = &rbx[1];\n                                    rcx = rax_6;\n                                    int32_t rdx_2 = (rax_6 - 0x30);\n                                    bool cond:3_1 = rbp_1 == 0xccccccc;\n                                    int32_t rdi;\n                                    if (rbp_1 <= 0xccccccc)\n                                    {\n                                        rdi = *rbx;\n                                        if (((!cond:3_1) || (cond:3_1 && rdi <= 0x37)))\n                                        {\n                                            rbx = rsi;\n                                            rbp_1 = ((rdi + ((rbp_1 * 5) << 1)) - 0x30);\n                                        }\n                                    }\n                                    if ((rbp_1 > 0xccccccc || ((rbp_1 <= 0xccccccc && cond:3_1) && rdi > 0x37)))\n                                    {\n                                        if (rdx_2 > 9)\n                                        {\n                                            r9 = rax_6;\n                                            rbx = rsi;\n                                            rbp_1 = 0x7fffffff;\n                                            break;\n                                        }\n                                        rax_6 = rbx[2];\n                                        rbp_1 = 0x7fffffff;\n                                        rbx = &rbx[2];\n                                        rcx = rax_6;\n                                        rdx_2 = (rax_6 - 0x30);\n                                    }\n                                    if ((((rbp_1 > 0xccccccc || ((rbp_1 <= 0xccccccc && cond:3_1) && rdi > 0x37)) && rdx_2 <= 9) || (rbp_1 <= 0xccccccc && ((!cond:3_1) || (cond:3_1 && rdi <= 0x37)))))\n                                    {\n                                        if (rdx_2 > 9)\n                                        {\n                                            r9 = rax_6;\n                                            break;\n                                        }\n                                    }\n                                }\n                                break;\n                            }\n                        }\n                        else if (cond:2_1)\n                        {\n                            if (rax_2 == 0x5e)\n                            {\n                                r11_1 = 1;\n                                continue;\n                            }\n                            else if (rax_2 != 0x5f)\n                            {\n                                rbp_1 = 0xffffffff;\n                                if ((rax_2 - 0x30) > 9)\n                                {\n                                    break;\n                                }\n                                goto label_405c91;\n                            }\n                        }\n                    }\n                    r12_1 = rax_2;\n                }\n                if ((rcx == 0x45 || rcx == 0x4f))\n                {\n                    rcx = rbx[1];\n                    rbx = &rbx[1];\n                }\n                if ((rcx != 0x45 && rcx != 0x4f))\n                {\n                    r9 = 0;\n                }\n                if (rcx > 0x7a)\n                {\n                    goto label_406948;\n                }\n                uint64_t var_498;\n                char var_480;\n                int64_t rax_110;\n                int64_t rdx_83;\n                char r13_1;\n                int64_t r13_10;\n                int64_t r13_12;\n                switch (rcx)\n                {\n                    case 0x25:\n                    {\n                        int32_t rax_126 = 0;\n                        r13_10 = 1;\n                        rdx_83 = (arg2 - r14);\n                        if (rbp_1 >= 0)\n                        {\n                            rax_126 = rbp_1;\n                        }\n                        rax_110 = rax_126;\n                        if (rax_110 != 0)\n                        {\n                            r13_10 = rax_110;\n                        }\n                        break;\n                    }\n                    case 0x50:\n                    {\n                        r13_1 = 1;\n                        break;\n                    }\n                    case 0x52:\n                    {\n                        var_498 = \"%H:%M\";\n                        break;\n                    }\n                    case 0x54:\n                    {\n                        var_498 = \"%H:%M:%S\";\n                        break;\n                    }\n                    case 0x5a:\n                    {\n                        char* rdi_17 = r12;\n                        var_480 = r8_1;\n                        if (r8_1 != 0)\n                        {\n                            r11_1 = 0;\n                        }\n                        uint64_t rax_56 = strlen(rdi_17);\n                        int32_t rax_57 = 0;\n                        if (rbp_1 >= 0)\n                        {\n                            rax_57 = rbp_1;\n                        }\n                        uint64_t rax_58 = rax_57;\n                        uint64_t rsi_20 = rax_58;\n                        if (rax_56 >= rax_58)\n                        {\n                            rsi_20 = rax_56;\n                        }\n                        if ((arg2 - r14) <= rsi_20)\n                        {\n                            break;\n                        }\n                        if (r15 != 0)\n                        {\n                            char r11_4 = r11_1;\n                            char r8_7 = var_480;\n                            if (rax_56 < rax_58)\n                            {\n                                uint64_t rdx_49 = (rbp_1 - rax_56);\n                                void* rbp_5 = &r15[rdx_49];\n                                if (r12_1 == 0x30)\n                                {\n                                    char* rdi_52 = r15;\n                                    r15 = rbp_5;\n                                    memset(rdi_52, 0x30, rdx_49);\n                                    r11_4 = r11_1;\n                                    r8_7 = var_480;\n                                }\n                                else\n                                {\n                                    char* rdi_18 = r15;\n                                    r15 = rbp_5;\n                                    memset(rdi_18, 0x20, rdx_49);\n                                }\n                            }\n                            char* rdi_19 = r15;\n                            if (r8_7 != 0)\n                            {\n                                sub_405a60(rdi_19, r12, rax_56);\n                            }\n                            else if (r11_4 == 0)\n                            {\n                                memcpy(rdi_19, r12, rax_56);\n                            }\n                            else\n                            {\n                                sub_405ab0(rdi_19, r12, rax_56);\n                            }\n                            r15 = &r15[rax_56];\n                        }\n                        r14 = (r14 + rsi_20);\n                        r8 = rbx;\n                        break;\n                    }\n                    case 0x6e:\n                    {\n                        int32_t r13_9 = 0;\n                        if (rbp_1 >= 0)\n                        {\n                            r13_9 = rbp_1;\n                        }\n                        r13_10 = r13_9;\n                        if (r13_10 == 0)\n                        {\n                            r13_10 = 1;\n                        }\n                        if ((arg2 - r14) <= r13_10)\n                        {\n                            break;\n                        }\n                        if (r15 != 0)\n                        {\n                            if (rbp_1 > 1)\n                            {\n                                uint64_t rdx_52 = (rbp_1 - 1);\n                                void* rbp_6 = &r15[rdx_52];\n                                if (r12_1 == 0x30)\n                                {\n                                    char* rdi_48 = r15;\n                                    r15 = rbp_6;\n                                    memset(rdi_48, 0x30, rdx_52);\n                                }\n                                else\n                                {\n                                    char* rdi_20 = r15;\n                                    r15 = rbp_6;\n                                    memset(rdi_20, 0x20, rdx_52);\n                                }\n                            }\n                            *r15 = 0xa;\n                            r15 = &r15[1];\n                        }\n                        break;\n                    }\n                    case 0x70:\n                    {\n                        r13_1 = 0;\n                        break;\n                    }\n                    case 0x74:\n                    {\n                        int32_t r13_11 = 0;\n                        if (rbp_1 >= 0)\n                        {\n                            r13_11 = rbp_1;\n                        }\n                        r13_10 = r13_11;\n                        if (r13_10 == 0)\n                        {\n                            r13_10 = 1;\n                        }\n                        if ((arg2 - r14) <= r13_10)\n                        {\n                            break;\n                        }\n                        if (r15 != 0)\n                        {\n                            if (rbp_1 > 1)\n                            {\n                                uint64_t rdx_63 = (rbp_1 - 1);\n                                void* rbp_8 = &r15[rdx_63];\n                                if (r12_1 == 0x30)\n                                {\n                                    char* rdi_49 = r15;\n                                    r15 = rbp_8;\n                                    memset(rdi_49, 0x30, rdx_63);\n                                }\n                                else\n                                {\n                                    char* rdi_23 = r15;\n                                    r15 = rbp_8;\n                                    memset(rdi_23, 0x20, rdx_63);\n                                }\n                            }\n                            *r15 = 9;\n                            r15 = &r15[1];\n                        }\n                        break;\n                    }\n                    case 0x7a:\n                    {\n                        r13_12 = 0;\n                        break;\n                    }\n                }\n                if ((rcx == 0x50 || rcx == 0x70))\n                {\n                    char temp6_1 = r8_1;\n                    bool cond:15_1 = temp6_1 != 0;\n                    rcx = 0x70;\n                    if (temp6_1 != 0)\n                    {\n                        r13_1 = r8_1;\n                    }\n                    if (cond:15_1)\n                    {\n                        r11_1 = 0;\n                    }\n                }\n                uint64_t rcx_12;\n                char* r9_12;\n                if (rcx == 0x25)\n                {\n                    if (r9 != 0)\n                    {\n                        r8 = rbx;\n                        r9_12 = rbx;\n                        rcx_12 = 1;\n                    }\n                    else\n                    {\n                        if (r13_10 >= rdx_83)\n                        {\n                            break;\n                        }\n                        if (r15 != 0)\n                        {\n                            if (rbp_1 > 1)\n                            {\n                                uint64_t rdx_96 = (rbp_1 - 1);\n                                void* rbp_9 = &r15[rdx_96];\n                                if (r12_1 == 0x30)\n                                {\n                                    char* rdi_51 = r15;\n                                    r15 = rbp_9;\n                                    memset(rdi_51, 0x30, rdx_96);\n                                    rcx = *rbx;\n                                }\n                                else\n                                {\n                                    char* rdi_36 = r15;\n                                    r15 = rbp_9;\n                                    memset(rdi_36, 0x20, rdx_96);\n                                    rcx = *rbx;\n                                }\n                            }\n                            *r15 = rcx;\n                            r15 = &r15[1];\n                        }\n                    }\n                }\n                int32_t rsi_19;\n                int32_t rdi_16;\n                int32_t r10_1;\n                if ((rcx == 0x59 && r9 != 0x45))\n                {\n                    if (r9 == 0x4f)\n                    {\n                        goto label_406948;\n                    }\n                    var_498 = 0;\n                    r10_1 = 4;\n                    int32_t rsi_28 = arg4->tm_year;\n                    r8_1 = rsi_28 < 0xfffff894;\n                    rsi_19 = (rsi_28 + 0x76c);\n                    rdi_16 = 0;\n                }\n                if ((rcx == 0x43 && r9 != 0x45))\n                {\n                    var_498 = 0;\n                    r10_1 = 2;\n                    int32_t rdi_28 = arg4->tm_year;\n                    int32_t temp9_1;\n                    int32_t temp10_1;\n                    temp9_1 = HIGHW((rdi_28 * 0x51eb851f));\n                    temp10_1 = LOWW((rdi_28 * 0x51eb851f));\n                    int32_t rax_93 = ((temp9_1 >> 5) - (rdi_28 >> 0x1f));\n                    int32_t rdx_74;\n                    rdx_74 = (rax_93 + 0x13) > 0;\n                    r8_1 = rdi_28 < 0xfffff894;\n                    rsi_19 = ((rax_93 + 0x13) - (((rdi_28 - (rax_93 * 0x64)) >> 0x1f) & rdx_74));\n                    rdi_16 = 0;\n                }\n                if (((rcx == 0x6e || rcx == 0x74) || (rcx == 0x25 && r9 == 0)))\n                {\n                    r14 = (r14 + r13_10);\n                    r8 = rbx;\n                }\n                char var_488;\n                uint64_t var_478;\n                void var_441;\n                int128_t var_438;\n                int64_t rax_20;\n                uint64_t rcx_6;\n                char rcx_14;\n                char rcx_15;\n                int32_t rdx_69;\n                int32_t rdi_26;\n                int32_t r9_4;\n                uint64_t r9_6;\n                uint64_t r9_11;\n                void* r13_2;\n                switch (rcx)\n                {\n                    case 0:\n                    {\n                        r9_12 = &rbx[-1];\n                        rcx_14 = rbx[-1];\n                    label_406adb:\n                        int32_t rax_122 = 0;\n                        rdx_83 = (arg2 - r14);\n                        if (rbp_1 >= 0)\n                        {\n                            rax_122 = rbp_1;\n                        }\n                        rax_110 = rax_122;\n                        if (rcx_14 == 0x25)\n                        {\n                            r13_10 = 1;\n                            r8 = r9_12;\n                            rcx_12 = 1;\n                            if (rax_110 != 0)\n                            {\n                                r13_10 = rax_110;\n                            }\n                        }\n                        else\n                        {\n                            rbx = r9_12;\n                        label_406948:\n                            void* rax_108 = &rbx[-1];\n                            int32_t rdx_81 = (rax_108 + 2);\n                            int32_t rcx_11;\n                            do\n                            {\n                                r9_12 = rax_108;\n                                rcx_11 = (rdx_81 - rax_108);\n                                rax_108 = (rax_108 - 1);\n                            } while (*(rax_108 + 1) != 0x25);\n                            int32_t rax_109 = 0;\n                            rcx_12 = rcx_11;\n                            r8 = rbx;\n                            rdx_83 = (arg2 - r14);\n                            if (rbp_1 >= 0)\n                            {\n                                rax_109 = rbp_1;\n                            }\n                            rax_110 = rax_109;\n                            r13_10 = rax_110;\n                            if (rcx_12 >= rax_110)\n                            {\n                                r13_10 = rcx_12;\n                            }\n                        }\n                        break;\n                    }\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 0xa:\n                    case 0xb:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x32:\n                    case 0x33:\n                    case 0x34:\n                    case 0x35:\n                    case 0x36:\n                    case 0x37:\n                    case 0x38:\n                    case 0x39:\n                    case 0x3b:\n                    case 0x3c:\n                    case 0x3d:\n                    case 0x3e:\n                    case 0x3f:\n                    case 0x40:\n                    case 0x45:\n                    case 0x4a:\n                    case 0x4b:\n                    case 0x4c:\n                    case 0x4f:\n                    case 0x51:\n                    case 0x5b:\n                    case 0x5c:\n                    case 0x5d:\n                    case 0x5e:\n                    case 0x5f:\n                    case 0x60:\n                    case 0x66:\n                    case 0x69:\n                    case 0x6f:\n                    case 0x76:\n                    {\n                        goto label_406948;\n                    }\n                    case 0x3a:\n                    {\n                        char rax_134 = rbx[1];\n                        void* rdx_98 = &rbx[1];\n                        r13_12 = 1;\n                        if (rax_134 == 0x3a)\n                        {\n                            do\n                            {\n                                r13_12 = (r13_12 + 1);\n                                rax_134 = rbx[r13_12];\n                                rdx_98 = &rbx[r13_12];\n                            } while (rax_134 == 0x3a);\n                        }\n                        if (rax_134 != 0x7a)\n                        {\n                            goto label_406948;\n                        }\n                        rbx = rdx_98;\n                        break;\n                    }\n                    case 0x41:\n                    case 0x42:\n                    case 0x61:\n                    {\n                        if (r9 != 0)\n                        {\n                            goto label_406948;\n                        }\n                        if (r8_1 != 0)\n                        {\n                            r11_1 = r8_1;\n                        }\n                        break;\n                    }\n                    case 0x44:\n                    {\n                        if (r9 != 0)\n                        {\n                            goto label_406948;\n                        }\n                        var_498 = \"%m/%d/%y\";\n                        break;\n                    }\n                    case 0x46:\n                    {\n                        if (r9 != 0)\n                        {\n                            goto label_406948;\n                        }\n                        var_498 = \"%Y-%m-%d\";\n                        break;\n                    }\n                    case 0x47:\n                    case 0x56:\n                    case 0x67:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406948;\n                        }\n                        int32_t rsi_6 = arg4->tm_year;\n                        int32_t r10_4 = arg4->tm_yday;\n                        int32_t r13_4 = arg4->tm_wday;\n                        var_498 = rsi_6;\n                        int32_t rdi_8 = ((rsi_6 + ((rsi_6 >> 0x1f) & 0x190)) - 0x64);\n                        int32_t temp4_1;\n                        int32_t temp5_1;\n                        temp4_1 = HIGHW((((r10_4 - r13_4) + 0x17e) * 0x92492493));\n                        temp5_1 = LOWW((((r10_4 - r13_4) + 0x17e) * 0x92492493));\n                        uint64_t rax_32 = (((temp4_1 + ((r10_4 - r13_4) + 0x17e)) >> 2) - (((r10_4 - r13_4) + 0x17e) >> 0x1f));\n                        r8_1 = (((r10_4 - ((r10_4 - r13_4) + 0x17e)) + ((rax_32 << 3) - rax_32)) + 3);\n                        int32_t r13_7;\n                        if (r8_1 < 0)\n                        {\n                            int32_t rsi_41 = (rdi_8 - 1);\n                            int32_t rdx_104 = 0x16d;\n                            if ((rsi_41 & 3) == 0)\n                            {\n                                int32_t temp21_1;\n                                int32_t temp22_1;\n                                temp21_1 = HIGHW((rsi_41 * 0x51eb851f));\n                                temp22_1 = LOWW((rsi_41 * 0x51eb851f));\n                                rdx_104 = 0x16e;\n                                if (rsi_41 == (((temp21_1 >> 5) - (rsi_41 >> 0x1f)) * 0x64))\n                                {\n                                    int32_t temp33_1;\n                                    int32_t temp34_1;\n                                    temp33_1 = HIGHW(rsi_41);\n                                    temp34_1 = LOWW(rsi_41);\n                                    int32_t temp1_1 = (COMBINE(temp33_1, temp34_1) % 0x190);\n                                    rdx_104 = ((!(temp1_1 - temp1_1)) + 0x16e);\n                                }\n                            }\n                            int32_t r10_10 = (r10_4 + rdx_104);\n                            r13_7 = -1;\n                            int32_t temp19_1;\n                            int32_t temp20_1;\n                            temp19_1 = HIGHW((((r10_10 - r13_4) + 0x17e) * 0x92492493));\n                            temp20_1 = LOWW((((r10_10 - r13_4) + 0x17e) * 0x92492493));\n                            uint64_t rax_157 = (((temp19_1 + ((r10_10 - r13_4) + 0x17e)) >> 2) - (((r10_10 - r13_4) + 0x17e) >> 0x1f));\n                            r8_1 = (((r10_10 - ((r10_10 - r13_4) + 0x17e)) + ((rax_157 << 3) - rax_157)) + 3);\n                        }\n                        else\n                        {\n                            int32_t rax_34 = 0x16d;\n                            if ((rdi_8 & 3) == 0)\n                            {\n                                int32_t temp25_1;\n                                int32_t temp26_1;\n                                temp25_1 = HIGHW((rdi_8 * 0x51eb851f));\n                                temp26_1 = LOWW((rdi_8 * 0x51eb851f));\n                                int32_t rax_37 = (rdi_8 >> 0x1f);\n                                var_488 = rax_37;\n                                rax_34 = 0x16e;\n                                if (rdi_8 == (((temp25_1 >> 5) - rax_37) * 0x64))\n                                {\n                                    int32_t rax_40;\n                                    rax_40 = rdi_8 == (((temp25_1 >> 7) - var_488) * 0x190);\n                                    rax_34 = (rax_40 + 0x16d);\n                                }\n                            }\n                            int32_t rsi_13 = (r10_4 - rax_34);\n                            int32_t temp23_1;\n                            int32_t temp24_1;\n                            temp23_1 = HIGHW((((rsi_13 - r13_4) + 0x17e) * 0x92492493));\n                            temp24_1 = LOWW((((rsi_13 - r13_4) + 0x17e) * 0x92492493));\n                            uint64_t rax_45 = (((temp23_1 + ((rsi_13 - r13_4) + 0x17e)) >> 2) - (((rsi_13 - r13_4) + 0x17e) >> 0x1f));\n                            uint32_t r13_5 = (((rsi_13 - ((rsi_13 - r13_4) + 0x17e)) + ((rax_45 << 3) - rax_45)) + 3);\n                            if (r13_5 >= 0)\n                            {\n                                r8_1 = r13_5;\n                            }\n                            r13_7 = ((r13_5 >> 0x1f) + 1);\n                        }\n                        if (rcx != 0x47)\n                        {\n                            if (rcx != 0x67)\n                            {\n                                r10_1 = 2;\n                                int32_t temp43_1;\n                                int32_t temp44_1;\n                                temp43_1 = HIGHW((r8_1 * 0x92492493));\n                                temp44_1 = LOWW((r8_1 * 0x92492493));\n                                rsi_19 = ((((temp43_1 + r8_1) >> 2) - (r8_1 >> 0x1f)) + 1);\n                            }\n                            else\n                            {\n                                int32_t r8_6 = var_498;\n                                r10_1 = 2;\n                                int32_t temp45_1;\n                                int32_t temp46_1;\n                                temp45_1 = HIGHW((var_498 * 0x51eb851f));\n                                temp46_1 = LOWW((var_498 * 0x51eb851f));\n                                int32_t rdi_14 = ((r8_6 - (((temp45_1 >> 5) - (r8_6 >> 0x1f)) * 0x64)) + r13_7);\n                                int32_t temp47_1;\n                                int32_t temp48_1;\n                                temp47_1 = HIGHW((rdi_14 * 0x51eb851f));\n                                temp48_1 = LOWW((rdi_14 * 0x51eb851f));\n                                int32_t rsi_18 = (((temp47_1 >> 5) - (rdi_14 >> 0x1f)) * 0x64);\n                                int32_t rdi_15 = (rdi_14 - rsi_18);\n                                rsi_19 = rdi_15;\n                                if ((rdi_14 - rsi_18) < 0)\n                                {\n                                    rsi_19 = (rsi_19 + 0x64);\n                                    int32_t rdx_45 = (-rdi_15);\n                                    if (r8_6 < (0xfffff894 - r13_7))\n                                    {\n                                        rsi_19 = rdx_45;\n                                    }\n                                }\n                            }\n                            goto label_406292;\n                        }\n                        int32_t rsi_49 = var_498;\n                        var_498 = 0;\n                        r10_1 = 4;\n                        rsi_19 = ((rsi_49 + r13_7) + 0x76c);\n                        r8_1 = rsi_49 < (0xfffff894 - r13_7);\n                        rdi_16 = 0;\n                        break;\n                    }\n                    case 0x48:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406948;\n                        }\n                        r10_1 = 2;\n                        rsi_19 = arg4->tm_hour;\n                        goto label_406292;\n                    }\n                    case 0x49:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406948;\n                        }\n                        rsi_19 = r11;\n                        r10_1 = 2;\n                        goto label_406292;\n                    }\n                    case 0x4d:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406948;\n                        }\n                        r10_1 = 2;\n                        rsi_19 = arg4->tm_min;\n                        goto label_406292;\n                    }\n                    case 0x4e:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406948;\n                        }\n                        if (rbp_1 == 0xffffffff)\n                        {\n                            rsi_19 = arg8;\n                            rbp_1 = 9;\n                            r10_1 = 9;\n                        }\n                        else\n                        {\n                            if (rbp_1 > 8)\n                            {\n                                rsi_19 = arg8;\n                            }\n                            else\n                            {\n                                rsi_19 = arg8;\n                                int32_t rdi_46 = rbp_1;\n                                do\n                                {\n                                    rdi_46 = (rdi_46 + 1);\n                                    int32_t temp39_1;\n                                    int32_t temp40_1;\n                                    temp39_1 = HIGHW((rsi_19 * 0x66666667));\n                                    temp40_1 = LOWW((rsi_19 * 0x66666667));\n                                    rsi_19 = ((temp39_1 >> 2) - (rsi_19 >> 0x1f));\n                                } while (rdi_46 != 9);\n                            }\n                            r10_1 = rbp_1;\n                        }\n                        goto label_406292;\n                    }\n                    case 0x53:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406948;\n                        }\n                        r10_1 = 2;\n                        rsi_19 = *arg4;\n                        goto label_406292;\n                    }\n                    case 0x55:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406948;\n                        }\n                        rdi_26 = ((arg4->tm_yday - arg4->tm_wday) + 7);\n                        int32_t temp7_1;\n                        int32_t temp8_1;\n                        temp7_1 = HIGHW((rdi_26 * 0x92492493));\n                        temp8_1 = LOWW((rdi_26 * 0x92492493));\n                        rdx_69 = temp7_1;\n                        break;\n                    }\n                    case 0x57:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406948;\n                        }\n                        int32_t rax_98 = arg4->tm_wday;\n                        var_498 = rax_98;\n                        int32_t temp11_1;\n                        int32_t temp12_1;\n                        temp11_1 = HIGHW(((rax_98 + 6) * 0x92492493));\n                        temp12_1 = LOWW(((rax_98 + 6) * 0x92492493));\n                        uint64_t rax_102 = (((temp11_1 + (rax_98 + 6)) >> 2) - ((rax_98 + 6) >> 0x1f));\n                        rdi_26 = (((((rax_102 << 3) - rax_102) - (rax_98 + 6)) + arg4->tm_yday) + 7);\n                        int32_t temp13_1;\n                        int32_t temp14_1;\n                        temp13_1 = HIGHW((rdi_26 * 0x92492493));\n                        temp14_1 = LOWW((rdi_26 * 0x92492493));\n                        rdx_69 = temp13_1;\n                        break;\n                    }\n                    case 0x58:\n                    case 0x63:\n                    case 0x78:\n                    {\n                        if (r9 == 0x4f)\n                        {\n                            goto label_406948;\n                        }\n                        break;\n                    }\n                    case 0x64:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406948;\n                        }\n                        r10_1 = 2;\n                        rsi_19 = arg4->tm_mday;\n                        goto label_406292;\n                    }\n                    case 0x65:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406948;\n                        }\n                        rsi_19 = arg4->tm_mday;\n                        break;\n                    }\n                    case 0x6a:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406948;\n                        }\n                        var_498 = 0;\n                        r10_1 = 3;\n                        int32_t rsi_36 = arg4->tm_yday;\n                        r8_1 = rsi_36 < 0xffffffff;\n                        rsi_19 = (rsi_36 + 1);\n                        rdi_16 = 0;\n                        break;\n                    }\n                    case 0x6b:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406948;\n                        }\n                        rsi_19 = arg4->tm_hour;\n                        break;\n                    }\n                    case 0x6c:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406948;\n                        }\n                        rsi_19 = r11;\n                        break;\n                    }\n                    case 0x6d:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406948;\n                        }\n                        var_498 = 0;\n                        r10_1 = 2;\n                        int32_t rsi_22 = arg4->tm_mon;\n                        r8_1 = rsi_22 < 0xffffffff;\n                        rsi_19 = (rsi_22 + 1);\n                        rdi_16 = 0;\n                        break;\n                    }\n                    case 0x71:\n                    {\n                        r10_1 = 1;\n                        uint64_t rax_66 = arg4->tm_mon;\n                        if (r9 == 0x4f)\n                        {\n                            goto label_4062b7;\n                        }\n                        var_498 = 0;\n                        r8_1 = 0;\n                        rdi_16 = 0;\n                        rsi_19 = (((rax_66 + ((rax_66 * 5) << 1)) >> 5) + 1);\n                    label_406560:\n                        var_488 = r8_1;\n                        void* rcx_9 = &var_441;\n                        while (true)\n                        {\n                            r13_2 = (rcx_9 - 1);\n                            if ((rdi_16 & 1) != 0)\n                            {\n                                void* rax_67 = (rcx_9 - 2);\n                                *(rcx_9 - 1) = 0x3a;\n                                rcx_9 = r13_2;\n                                r13_2 = rax_67;\n                            }\n                            rdi_16 = (rdi_16 >> 1);\n                            int32_t temp41_1;\n                            int32_t temp42_1;\n                            temp41_1 = HIGHW((rsi_19 * 0xcccccccd));\n                            temp42_1 = LOWW((rsi_19 * 0xcccccccd));\n                            uint64_t rdx_55 = (temp41_1 >> 3);\n                            uint8_t rax_69 = (rdx_55 * 5);\n                            *(rcx_9 - 1) = ((rsi_19 - (rax_69 + rax_69)) + 0x30);\n                            rcx_9 = r13_2;\n                            if ((rsi_19 <= 9 && rdi_16 == 0))\n                            {\n                                break;\n                            }\n                            rsi_19 = rdx_55;\n                        }\n                        if (r10_1 < rbp_1)\n                        {\n                            r10_1 = rbp_1;\n                        }\n                        if (var_488 != 0)\n                        {\n                            goto label_406ca8;\n                        }\n                        if (var_498 == 0)\n                        {\n                            goto label_405f59;\n                        }\n                        if (r12_1 == 0x2d)\n                        {\n                            rcx_15 = 0x2b;\n                        label_406cbe:\n                            int32_t r9_13 = 0;\n                            uint64_t r12_2 = 1;\n                            if (rbp_1 >= 0)\n                            {\n                                r9_13 = rbp_1;\n                            }\n                            r9_6 = r9_13;\n                            if (r9_6 != 0)\n                            {\n                                r12_2 = r9_6;\n                            }\n                            if ((arg2 - r14) <= r12_2)\n                            {\n                                break;\n                            }\n                            if (r15 != 0)\n                            {\n                                if ((r10_1 == 0 && r9_6 > 1))\n                                {\n                                    uint64_t var_470;\n                                    var_470 = rcx_15;\n                                    var_480 = r10_1;\n                                    memset(r15, 0x20, (rbp_1 - 1));\n                                    rcx_15 = var_470;\n                                    r10_1 = var_480;\n                                    r15 = &r15[(rbp_1 - 1)];\n                                }\n                                *r15 = rcx_15;\n                                r15 = &r15[1];\n                            }\n                            r14 = (r14 + r12_2);\n                            r8 = rbx;\n                            r12_1 = 0x2d;\n                            rcx_6 = (&var_441 - r13_2);\n                            rax_20 = (arg2 - r14);\n                            goto label_405f89;\n                        }\n                        var_498 = 0x2b;\n                    label_406600:\n                        rcx_6 = (&var_441 - r13_2);\n                        r9_4 = ((r10_1 - 1) - rcx_6);\n                        rax_20 = (arg2 - r14);\n                        if (r9_4 <= 0)\n                        {\n                            int32_t r9_14 = 0;\n                            uint64_t r8_14 = 1;\n                            if (rbp_1 >= 0)\n                            {\n                                r9_14 = rbp_1;\n                            }\n                            r9_6 = r9_14;\n                            if (r9_6 != 0)\n                            {\n                                r8_14 = r9_6;\n                            }\n                            if (r8_14 >= rax_20)\n                            {\n                                break;\n                            }\n                            if (r15 != 0)\n                            {\n                                if ((r10_1 == 0 && r9_6 > 1))\n                                {\n                                    uint64_t rdx_101 = (rbp_1 - 1);\n                                    var_488 = &r15[rdx_101];\n                                    var_478 = r10_1;\n                                    if (r12_1 == 0x30)\n                                    {\n                                        memset(r15, 0x30, rdx_101);\n                                        r15 = var_488;\n                                        r10_1 = var_478;\n                                    }\n                                    else\n                                    {\n                                        memset(r15, 0x20, rdx_101);\n                                        r15 = var_488;\n                                        r10_1 = var_478;\n                                    }\n                                }\n                                r15 = &r15[1];\n                                r15[-1] = var_498;\n                            }\n                            r14 = (r14 + r8_14);\n                            r8 = rbx;\n                            rax_20 = (arg2 - r14);\n                            goto label_405f89;\n                        }\n                        if (r12_1 == 0x5f)\n                        {\n                            goto label_406e73;\n                        }\n                        if (r10_1 >= rax_20)\n                        {\n                            break;\n                        }\n                        int32_t rdx_57 = 0;\n                        int64_t rsi_25 = 1;\n                        if (rbp_1 >= 0)\n                        {\n                            rdx_57 = rbp_1;\n                        }\n                        int64_t rdx_58 = rdx_57;\n                        if (rdx_58 != 0)\n                        {\n                            rsi_25 = rdx_58;\n                        }\n                        if (rsi_25 >= rax_20)\n                        {\n                            break;\n                        }\n                        r14 = (r14 + rsi_25);\n                        r9_11 = r9_4;\n                        r8 = rbx;\n                        if (r15 == 0)\n                        {\n                            goto label_406714;\n                        }\n                        if ((r10_1 == 0 && rdx_58 > 1))\n                        {\n                            uint64_t rdx_60 = (rbp_1 - 1);\n                            void* rbp_7 = &r15[rdx_60];\n                            var_480 = r10_1;\n                            if (r12_1 == 0x30)\n                            {\n                                char* rdi_53 = r15;\n                                r15 = rbp_7;\n                                memset(rdi_53, 0x30, rdx_60);\n                                r10_1 = var_480;\n                            }\n                            else\n                            {\n                                char* rdi_21 = r15;\n                                r15 = rbp_7;\n                                memset(rdi_21, 0x20, rdx_60);\n                                r10_1 = var_480;\n                            }\n                        }\n                        r15 = &r15[1];\n                        r8 = rbx;\n                        r15[-1] = var_498;\n                        break;\n                    }\n                    case 0x73:\n                    {\n                        r13_2 = &var_441;\n                        int128_t zmm4;\n                        zmm4 = arg4->tm_isdst;\n                        *zmm4[8] = arg4->tm_gmtoff;\n                        int128_t zmm0;\n                        zmm0 = arg4->tm_sec;\n                        *zmm0[4] = arg4->tm_min;\n                        *zmm0[8] = arg4->tm_hour;\n                        *zmm0[0xc] = arg4->tm_mday;\n                        int128_t zmm2;\n                        zmm2 = arg4->tm_mon;\n                        *zmm2[4] = arg4->tm_year;\n                        *zmm2[8] = arg4->tm_wday;\n                        *zmm2[0xc] = arg4->tm_yday;\n                        var_438 = zmm0;\n                        int128_t var_428_1 = zmm2;\n                        var_498 = zmm4;\n                        int128_t var_418_1 = zmm4;\n                        char const* var_408_1 = arg4->tm_zone;\n                        time_t rax_13 = sub_40c500(arg7, &var_438);\n                        time_t rcx_4 = rax_13;\n                        do\n                        {\n                            int64_t rax_14;\n                            int64_t rdx_9;\n                            rdx_9 = HIGHD((0x6666666666666667 * rcx_4));\n                            rax_14 = LOWD((0x6666666666666667 * rcx_4));\n                            time_t rdx_11 = ((rdx_9 >> 2) - (rcx_4 >> 0x3f));\n                            char rdx_12 = (rdx_11 + (rdx_11 << 2));\n                            char rcx_5 = (rcx_4 - (rdx_12 + rdx_12));\n                            rcx_4 = rdx_11;\n                            char rax_18 = (0x30 - rcx_5);\n                            char rdx_15 = (rcx_5 + 0x30);\n                            if (rax_13 < 0)\n                            {\n                                rdx_15 = rax_18;\n                            }\n                            r13_2 = (r13_2 - 1);\n                            *r13_2 = rdx_15;\n                        } while (rcx_4 != 0);\n                        r10_1 = 1;\n                        if (rbp_1 > 0)\n                        {\n                            r10_1 = rbp_1;\n                        }\n                        if (rax_13 < 0)\n                        {\n                        label_406ca8:\n                            var_498 = 0x2d;\n                            rcx_15 = 0x2d;\n                            if (r12_1 != 0x2d)\n                            {\n                                goto label_406600;\n                            }\n                            goto label_406cbe;\n                        }\n                    label_405f59:\n                        rcx_6 = (&var_441 - r13_2);\n                        rax_20 = (arg2 - r14);\n                        if (r12_1 == 0x2d)\n                        {\n                        label_405f76:\n                            int32_t r9_5 = 0;\n                            r8 = rbx;\n                            if (rbp_1 >= 0)\n                            {\n                                r9_5 = rbp_1;\n                            }\n                            r9_6 = r9_5;\n                            goto label_405f89;\n                        }\n                        r9_4 = (r10_1 - rcx_6);\n                        if (r9_4 <= 0)\n                        {\n                            goto label_405f76;\n                        }\n                        if (r12_1 == 0x5f)\n                        {\n                            var_498 = 0;\n                        label_406e73:\n                            uint64_t r12_3 = r9_4;\n                            if (r12_3 >= rax_20)\n                            {\n                                break;\n                            }\n                            if (r15 != 0)\n                            {\n                                char* rdi_41 = r15;\n                                var_478 = r9_4;\n                                var_480 = r10_1;\n                                r15 = &r15[r12_3];\n                                memset(rdi_41, 0x20, r12_3);\n                                r9_4 = var_478;\n                                r10_1 = var_480;\n                            }\n                            r14 = (r14 + r12_3);\n                            int32_t rax_142 = (rbp_1 - r9_4);\n                            bool cond:28_1 = r9_4 < rbp_1;\n                            rbp_1 = 0;\n                            if (cond:28_1)\n                            {\n                                rbp_1 = rax_142;\n                            }\n                            rax_20 = (arg2 - r14);\n                            if (var_498 == 0)\n                            {\n                                r9_6 = rbp_1;\n                                r8 = rbx;\n                                r12_1 = 0x5f;\n                                rcx_6 = (&var_441 - r13_2);\n                            }\n                            else\n                            {\n                                r9_6 = rbp_1;\n                                uint64_t rcx_16 = 1;\n                                if (r9_6 != 0)\n                                {\n                                    rcx_16 = r9_6;\n                                }\n                                if (rcx_16 >= rax_20)\n                                {\n                                    break;\n                                }\n                                if (r15 != 0)\n                                {\n                                    if ((r10_1 == 0 && r9_6 > 1))\n                                    {\n                                        char* rdi_44 = r15;\n                                        var_478 = r10_1;\n                                        r15 = &r15[(r9_6 - 1)];\n                                        var_488 = r9_6;\n                                        memset(rdi_44, 0x20, (r9_6 - 1));\n                                        r10_1 = var_478;\n                                        r9_6 = var_488;\n                                    }\n                                    r15 = &r15[1];\n                                    r15[-1] = var_498;\n                                }\n                                r14 = (r14 + rcx_16);\n                                r8 = rbx;\n                                r12_1 = 0x5f;\n                                rcx_6 = (&var_441 - r13_2);\n                                rax_20 = (arg2 - r14);\n                            }\n                            goto label_405f89;\n                        }\n                        if (r10_1 >= rax_20)\n                        {\n                            break;\n                        }\n                        r9_11 = r9_4;\n                        r8 = rbx;\n                        break;\n                    }\n                    case 0x75:\n                    {\n                        r10_1 = 1;\n                        int32_t rax_79 = arg4->tm_wday;\n                        var_498 = rax_79;\n                        int32_t temp2_1;\n                        int32_t temp3_1;\n                        temp2_1 = HIGHW(((rax_79 + 6) * 0x92492493));\n                        temp3_1 = LOWW(((rax_79 + 6) * 0x92492493));\n                        uint64_t rax_83 = (((temp2_1 + (rax_79 + 6)) >> 2) - ((rax_79 + 6) >> 0x1f));\n                        rsi_19 = (((rax_79 + 6) - ((rax_83 << 3) - rax_83)) + 1);\n                    label_406292:\n                        var_498 = 0;\n                        rdi_16 = 0;\n                        r8_1 = (rsi_19 >> 0x1f);\n                        break;\n                    }\n                    case 0x77:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406948;\n                        }\n                        r10_1 = 1;\n                        rsi_19 = arg4->tm_wday;\n                        goto label_406292;\n                    }\n                    case 0x79:\n                    {\n                        if (r9 != 0x45)\n                        {\n                            r10_1 = 2;\n                            int32_t rdi_37 = arg4->tm_year;\n                            int32_t temp15_1;\n                            int32_t temp16_1;\n                            temp15_1 = HIGHW((rdi_37 * 0x51eb851f));\n                            temp16_1 = LOWW((rdi_37 * 0x51eb851f));\n                            int32_t rsi_40 = (((temp15_1 >> 5) - (rdi_37 >> 0x1f)) * 0x64);\n                            int32_t rax_132 = (rdi_37 - rsi_40);\n                            rsi_19 = rax_132;\n                            if ((rdi_37 - rsi_40) < 0)\n                            {\n                                int32_t rax_133 = (-rax_132);\n                                rsi_19 = (rsi_19 + 0x64);\n                                if (rdi_37 <= 0xfffff893)\n                                {\n                                    rsi_19 = rax_133;\n                                }\n                            }\n                            goto label_406292;\n                        }\n                        break;\n                    }\n                }\n                switch (rcx)\n                {\n                    case 0x44:\n                    case 0x46:\n                    case 0x52:\n                    case 0x54:\n                    {\n                        uint32_t r13_3 = r11_1;\n                        int64_t r10_2 = sub_405b00(0, -1, var_498, arg4, r13_3, arg6, arg7, arg8, arg2, arg4, var_4b8_1, arg6, r12);\n                        int32_t rax_23 = 0;\n                        if (rbp_1 >= 0)\n                        {\n                            rax_23 = rbp_1;\n                        }\n                        int64_t rax_24 = rax_23;\n                        int64_t rsi_4 = rax_24;\n                        if (r10_2 >= rax_24)\n                        {\n                            rsi_4 = r10_2;\n                        }\n                        int64_t r11_3 = (arg2 - r14);\n                        var_488 = rsi_4;\n                        if (r11_3 <= rsi_4)\n                        {\n                            break;\n                        }\n                        if (r15 != 0)\n                        {\n                            if (r10_2 < rax_24)\n                            {\n                                uint64_t rdx_20 = (rbp_1 - r10_2);\n                                var_480 = r11_3;\n                                void* rbp_4 = &r15[rdx_20];\n                                if (r12_1 == 0x30)\n                                {\n                                    char* rdi_45 = r15;\n                                    r15 = rbp_4;\n                                    memset(rdi_45, 0x30, rdx_20);\n                                    r11_3 = var_480;\n                                }\n                                else\n                                {\n                                    char* rdi_6 = r15;\n                                    r15 = rbp_4;\n                                    memset(rdi_6, 0x20, rdx_20);\n                                    r11_3 = var_480;\n                                }\n                            }\n                            var_480 = r10_2;\n                            sub_405b00(r15, r11_3, var_498, arg4, r13_3, arg6, arg7, arg8);\n                            r15 = &r15[var_480];\n                        }\n                        r14 = (r14 + var_488);\n                        r8 = rbx;\n                        break;\n                    }\n                    case 0x55:\n                    case 0x57:\n                    {\n                        r10_1 = 2;\n                        rsi_19 = (((rdx_69 + rdi_26) >> 2) - (rdi_26 >> 0x1f));\n                        goto label_406292;\n                    }\n                    case 0x58:\n                    case 0x63:\n                    case 0x72:\n                    case 0x78:\n                    {\n                        r13_1 = 0;\n                        break;\n                    }\n                    case 0x65:\n                    case 0x6b:\n                    case 0x6c:\n                    {\n                        r10_1 = 2;\n                        if ((r12_1 != 0x30 && r12_1 != 0x2d))\n                        {\n                            r12_1 = 0x5f;\n                        }\n                        goto label_406292;\n                    }\n                }\n                int16_t var_458;\n                if ((((((rcx == 0x50 || rcx == 0x58) || rcx == 0x63) || rcx == 0x70) || rcx == 0x72) || rcx == 0x78))\n                {\n                    var_458 = 0x2520;\n                }\n                uint64_t rdx_8;\n                uint64_t rbx_1;\n                void* rsi_1;\n                char* rdi_3;\n                if ((rcx == 0x73 || rcx == 0x71))\n                {\n                    if (r15 == 0)\n                    {\n                        goto label_406714;\n                    }\n                    var_478 = r10_1;\n                    var_480 = r8;\n                    memset(r15, 0x30, r9_11);\n                    r10_1 = var_478;\n                    r8 = var_480;\n                    r15 = &r15[r9_11];\n                label_406714:\n                    r14 = (r14 + r9_11);\n                    rbp_1 = 0;\n                    r9_6 = 0;\n                    rax_20 = (arg2 - r14);\n                label_405f89:\n                    rbx_1 = r9_6;\n                    if (rcx_6 >= r9_6)\n                    {\n                        rbx_1 = rcx_6;\n                    }\n                    if (rbx_1 >= rax_20)\n                    {\n                        break;\n                    }\n                    if (r15 == 0)\n                    {\n                        goto label_405e46;\n                    }\n                    if ((r10_1 == 0 && rcx_6 < r9_6))\n                    {\n                        var_480 = rcx_6;\n                        uint64_t rdx_17 = (rbp_1 - rcx_6);\n                        var_488 = r8;\n                        void* rbp_3 = &r15[rdx_17];\n                        var_498 = r11_1;\n                        if (r12_1 == 0x30)\n                        {\n                            char* rdi_42 = r15;\n                            r15 = rbp_3;\n                            memset(rdi_42, 0x30, rdx_17);\n                            r11_1 = var_498;\n                            r8 = var_488;\n                            rcx_6 = var_480;\n                        }\n                        else\n                        {\n                            char* rdi_5 = r15;\n                            r15 = rbp_3;\n                            memset(rdi_5, 0x20, rdx_17);\n                            rcx_6 = var_480;\n                            r8 = var_488;\n                            r11_1 = var_498;\n                        }\n                    }\n                    var_488 = r8;\n                    rdx_8 = rcx_6;\n                    rsi_1 = r13_2;\n                    rdi_3 = r15;\n                    var_498 = rcx_6;\n                }\n                if (((rcx == 0x25 && r9 != 0) || rcx == 0))\n                {\n                    if (rdx_83 <= r13_10)\n                    {\n                        break;\n                    }\n                    if (r15 != 0)\n                    {\n                        if (rcx_12 < rax_110)\n                        {\n                            uint64_t rdx_85 = (rbp_1 - rcx_12);\n                            var_480 = r8;\n                            void* rbx_2 = &r15[rdx_85];\n                            var_488 = r9_12;\n                            var_498 = r11_1;\n                            if (r12_1 == 0x30)\n                            {\n                                char* rdi_43 = r15;\n                                r15 = rbx_2;\n                                memset(rdi_43, 0x30, rdx_85);\n                                r11_1 = var_498;\n                                r9_12 = var_488;\n                                r8 = var_480;\n                            }\n                            else\n                            {\n                                char* rdi_30 = r15;\n                                r15 = rbx_2;\n                                memset(rdi_30, 0x20, rdx_85);\n                                r8 = var_480;\n                                r9_12 = var_488;\n                                r11_1 = var_498;\n                            }\n                        }\n                        var_488 = r8;\n                        char* rdi_31 = r15;\n                        uint64_t rcx_13;\n                        if (r11_1 == 0)\n                        {\n                            memcpy(rdi_31, r9_12, rcx_12);\n                            r8 = var_488;\n                            rcx_13 = rcx_12;\n                        }\n                        else\n                        {\n                            sub_405ab0(rdi_31, r9_12, rcx_12);\n                            rcx_13 = rcx_12;\n                            r8 = var_488;\n                        }\n                        r15 = &r15[rcx_13];\n                    }\n                    r14 = (r14 + r13_10);\n                }\n                if ((rcx == 0x7a || rcx == 0x3a))\n                {\n                    if (arg4->tm_isdst < 0)\n                    {\n                        r8 = rbx;\n                    }\n                    else\n                    {\n                        int32_t rsi_34 = arg4->tm_gmtoff;\n                        r8_1 = 1;\n                        bool cond:19_1 = rsi_34 != 0;\n                        if (rsi_34 >= 0)\n                        {\n                            r8_1 = 0;\n                            if ((!cond:19_1))\n                            {\n                                r8_1 = *r12 == 0x2d;\n                            }\n                        }\n                        int32_t temp27_1;\n                        int32_t temp28_1;\n                        temp27_1 = HIGHW((rsi_34 * 0x91a2b3c5));\n                        temp28_1 = LOWW((rsi_34 * 0x91a2b3c5));\n                        int32_t rax_115 = (rsi_34 >> 0x1f);\n                        var_488 = rax_115;\n                        var_498 = (((temp27_1 + rsi_34) >> 0xb) - rax_115);\n                        int32_t temp29_1;\n                        int32_t temp30_1;\n                        temp29_1 = HIGHW((rsi_34 * 0x88888889));\n                        temp30_1 = LOWW((rsi_34 * 0x88888889));\n                        int32_t r10_8 = (((temp29_1 + rsi_34) >> 5) - var_488);\n                        int32_t temp31_1;\n                        int32_t temp32_1;\n                        temp31_1 = HIGHW((r10_8 * 0x88888889));\n                        temp32_1 = LOWW((r10_8 * 0x88888889));\n                        int32_t rax_121 = (r10_8 - ((((temp31_1 + r10_8) >> 5) - (r10_8 >> 0x1f)) * 0x3c));\n                        rdi_16 = rax_121;\n                        int32_t rsi_35 = (rsi_34 - (r10_8 * 0x3c));\n                        if (r13_12 == 0)\n                        {\n                            int32_t rsi_51 = (var_498 * 0x64);\n                            rdi_16 = 0;\n                            var_498 = 1;\n                            r10_1 = 5;\n                            rsi_19 = (rsi_51 + rax_121);\n                        }\n                        if ((r13_12 == 2 || (r13_12 == 3 && rsi_35 != 0)))\n                        {\n                            int32_t rax_163 = (var_498 * 0x2710);\n                            r10_1 = 9;\n                            var_498 = 1;\n                            int32_t rax_164 = (rax_163 + (rdi_16 * 0x64));\n                            rdi_16 = 0x14;\n                            rsi_19 = (rsi_35 + rax_164);\n                        }\n                        if ((r13_12 == 1 || ((r13_12 == 3 && rsi_35 == 0) && rax_121 != 0)))\n                        {\n                            int32_t rsi_50 = (var_498 * 0x64);\n                            r10_1 = 6;\n                            var_498 = 1;\n                            rsi_19 = (rsi_50 + rdi_16);\n                            rdi_16 = 4;\n                        }\n                        if (((r13_12 == 3 && rsi_35 == 0) && rax_121 == 0))\n                        {\n                            rsi_19 = var_498;\n                            r10_1 = 3;\n                            var_498 = 1;\n                        }\n                        if ((((r13_12 != 1 && r13_12 != 0) && r13_12 != 2) && r13_12 != 3))\n                        {\n                            rcx_14 = *rbx;\n                            r9_12 = rbx;\n                            goto label_406adb;\n                        }\n                    }\n                }\n                char* rax_7;\n                uint64_t rax_8;\n                char* r8_2;\n                if (((((((rcx == 0x72 || rcx == 0x58) || rcx == 0x63) || rcx == 0x78) || rcx == 0x50) || rcx == 0x70) && r9 == 0))\n                {\n                    r8_2 = rbx;\n                    rax_7 = var_4b8_1;\n                label_405d40:\n                    *rax_7 = rcx;\n                    rax_7[1] = 0;\n                    var_480 = r9;\n                    rax_8 = strftime(&var_438, 0x400, &var_458, arg4);\n                    r8 = r8_2;\n                    if (rax_8 != 0)\n                    {\n                        uint64_t rcx_2 = (rax_8 - 1);\n                        int32_t rax_9 = 0;\n                        if (rbp_1 >= 0)\n                        {\n                            rax_9 = rbp_1;\n                        }\n                        uint64_t rax_10 = rax_9;\n                        rbx_1 = rax_10;\n                        if (rcx_2 >= rax_10)\n                        {\n                            rbx_1 = rcx_2;\n                        }\n                        if ((arg2 - r14) <= rbx_1)\n                        {\n                            break;\n                        }\n                        if (((arg2 - r14) > rbx_1 && r15 != 0))\n                        {\n                            if ((var_480 == 0 && rcx_2 < rax_10))\n                            {\n                                var_480 = rcx_2;\n                                uint64_t rdx_7 = (rbp_1 - rcx_2);\n                                var_488 = r8;\n                                void* rbp_2 = &r15[rdx_7];\n                                var_498 = r11_1;\n                                if (r12_1 == 0x30)\n                                {\n                                    char* rdi_39 = r15;\n                                    r15 = rbp_2;\n                                    memset(rdi_39, 0x30, rdx_7);\n                                    r11_1 = var_498;\n                                    r8 = var_488;\n                                    rcx_2 = var_480;\n                                }\n                                else\n                                {\n                                    char* rdi_2 = r15;\n                                    r15 = rbp_2;\n                                    memset(rdi_2, 0x20, rdx_7);\n                                    rcx_2 = var_480;\n                                    r8 = var_488;\n                                    r11_1 = var_498;\n                                }\n                            }\n                            var_488 = r8;\n                            rsi_1 = &*var_438[1];\n                            rdx_8 = rcx_2;\n                            rdi_3 = r15;\n                            var_498 = rcx_2;\n                        }\n                    }\n                }\n                uint64_t rcx_3;\n                if ((((((((((((rcx == 0x72 || rcx == 0x58) || rcx == 0x63) || rcx == 0x78) || rcx == 0x50) || rcx == 0x70) && r9 == 0) && rax_8 != 0) && (arg2 - r14) > rbx_1) && r15 != 0) && r13_1 == 0) || ((rcx == 0x73 || rcx == 0x71) && r15 != 0)))\n                {\n                    if (r11_1 == 0)\n                    {\n                        memcpy(rdi_3, rsi_1, rdx_8);\n                        r8 = var_488;\n                        rcx_3 = var_498;\n                        goto label_405e43;\n                    }\n                    sub_405ab0(rdi_3, rsi_1, rdx_8);\n                    rcx_3 = var_498;\n                    r8 = var_488;\n                    goto label_405e43;\n                }\n                if ((((((rcx == 0x72 || rcx == 0x58) || rcx == 0x63) || rcx == 0x78) || rcx == 0x50) || rcx == 0x70))\n                {\n                    if (r9 != 0)\n                    {\n                        r10_1 = 0;\n                    label_4062bf:\n                        var_456 = r9;\n                        r8_2 = rbx;\n                        r9 = r10_1;\n                        void var_455;\n                        rax_7 = &var_455;\n                        goto label_405d40;\n                    }\n                    if ((rax_8 != 0 && (arg2 - r14) > rbx_1))\n                    {\n                        if ((r15 != 0 && r13_1 != 0))\n                        {\n                            sub_405a60(rdi_3, rsi_1, rdx_8);\n                            rcx_3 = var_498;\n                            r8 = var_488;\n                        label_405e43:\n                            r15 = &r15[rcx_3];\n                        label_405e46:\n                            r14 = (r14 + rbx_1);\n                        }\n                        if (r15 == 0)\n                        {\n                            goto label_405e46;\n                        }\n                    }\n                }\n                if (((((((((((rcx == 0x43 && r9 != 0x45) || rcx == 0x75) || ((rcx == 0x7a || rcx == 0x3a) && arg4->tm_isdst >= 0)) || rcx == 0x47) || rcx == 0x56) || rcx == 0x67) || rcx == 0x6d) || rcx == 0x6a) && r9 != 0x4f) || (rcx == 0x59 && r9 != 0x45)))\n                {\n                    if (r8_1 == 0)\n                    {\n                        goto label_406560;\n                    }\n                    goto label_406819;\n                }\n                if ((((((((((rcx == 0x43 && r9 != 0x45) || rcx == 0x75) || ((rcx == 0x7a || rcx == 0x3a) && arg4->tm_isdst >= 0)) || rcx == 0x47) || rcx == 0x56) || rcx == 0x67) || rcx == 0x6d) || rcx == 0x6a) && r9 == 0x4f))\n                {\n                    if (r8_1 == 0)\n                    {\n                        goto label_4062b7;\n                    }\n                label_406819:\n                    rsi_19 = (-rsi_19);\n                    goto label_406560;\n                }\n                if ((((rcx == 0x59 && r9 == 0x45) || (rcx == 0x43 && r9 == 0x45)) || rcx == 0x79))\n                {\n                    r10_1 = 0;\n                label_4062b7:\n                    r13_1 = 0;\n                    var_458 = 0x2520;\n                    goto label_4062bf;\n                }\n                if ((rcx == 0x62 || rcx == 0x68))\n                {\n                    if (r8_1 != 0)\n                    {\n                        r11_1 = r8_1;\n                    }\n                    if (r9 != 0)\n                    {\n                        goto label_406948;\n                    }\n                }\n                if (((((rcx == 0x41 || rcx == 0x42) || rcx == 0x61) || rcx == 0x62) || rcx == 0x68))\n                {\n                    rax_7 = var_4b8_1;\n                    r8_2 = rbx;\n                    r13_1 = 0;\n                    var_458 = 0x2520;\n                    r9 = 0;\n                    goto label_405d40;\n                }\n            }\n            else\n            {\n                if ((arg2 - r14) <= 1)\n                {\n                    break;\n                }\n                if (r15 != 0)\n                {\n                    *r15 = rax;\n                    r15 = &r15[1];\n                }\n                r14 = (r14 + 1);\n                r8 = rbx;\n            }\n            rax = r8[1];\n            rbx = &r8[1];\n        } while (rax != 0);\n        if ((rax != 0x25 && (arg2 - r14) <= 1))\n        {\n            r14 = 0;\n        }\n    }\n    if ((((rax == 0 || (rax != 0 && (!(rax != 0x25 && (arg2 - r14) <= 1)))) && r15 != 0) && arg2 != 0))\n    {\n        *r15 = 0;\n    }\n    return r14;\n}\n\n"
        },
        {
            "funcName": "sub_4072d0",
            "funcStartAddr": "0x4072d0",
            "funcEndAddr": "0x4072ef",
            "decompiledFuncCode": "int64_t sub_4072d0(char* arg1, int64_t arg2, char* arg3, struct tm* arg4, \n    int64_t** arg5, int32_t arg6)\n{\n    char var_9 = 0;\n    return sub_405b00(arg1, arg2, arg3, arg4, 0, &var_9, arg5, arg6);\n}\n\n"
        },
        {
            "funcName": "sub_4072f0",
            "funcStartAddr": "0x4072f0",
            "funcEndAddr": "0x407389",
            "decompiledFuncCode": "char* sub_4072f0(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_412558;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_617498 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_407390",
            "funcStartAddr": "0x407390",
            "funcEndAddr": "0x407482",
            "decompiledFuncCode": "char* sub_407390(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_40c750();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_407471:\n                void* const rbx_1 = &data_41255c;\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_407471;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_407471;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_407471;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_407471;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_407471;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_407471;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_407471;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_412565;\n            if (cond:2_1)\n            {\n                rbx = &data_412562;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_407471;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_407471;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_407471;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_407471;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_407471;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_412569;\n            if (cond:1_1)\n            {\n                rbx = &data_41255e;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_407490",
            "funcStartAddr": "0x402360",
            "funcEndAddr": "0x4086b1",
            "decompiledFuncCode": "int64_t sub_407490(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    void* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n    label_407528:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_40789c:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_4078e4;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_407490(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_4078fb;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_407a35;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_407685;\n                            }\n                            goto label_407970;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_407a35;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_407860;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_407860:\n                            if (var_c0 == 0)\n                            {\n                                goto label_40786b;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_4076c7:\n                            if (var_5c == 0)\n                            {\n                                goto label_4076d8;\n                            }\n                        label_407890:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_407898;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_407acb;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_407acb:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_407ada:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_40789c;\n                            }\n                            goto label_407860;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_407860;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_407860;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_407acb;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_407666;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_407666:\n                            if (var_5c == 0)\n                            {\n                                goto label_407685;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_407685;\n                            }\n                            goto label_407ada;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_40765d:\n                            if (r12_1 != 0)\n                            {\n                                goto label_40786b;\n                            }\n                            goto label_407666;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_407a90:\n                            rdx = r11_1 == 2;\n                        label_407685:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_40778c;\n                            }\n                            goto label_40768f;\n                        }\n                        case 0x27:\n                        {\n                            goto label_40780d;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_4077dd;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_40783a;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_4085cd;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_4077a4;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_407639;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_407c30;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_407c30;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_408580:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_4078e4:\n                            rbx_1 = sub_407490(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_4078fb:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_407a35;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_407987;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_407a35;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_407950:\n                                r13 = 0;\n                                goto label_40770b;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_4076d8:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_40770b:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_407715;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_407715:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_40771d;\n                            }\n                            case 9:\n                            {\n                                goto label_407900;\n                            }\n                            case 0xa:\n                            {\n                                goto label_407878;\n                            }\n                            case 0xb:\n                            {\n                                goto label_407960;\n                            }\n                            case 0xc:\n                            {\n                                goto label_407940;\n                            }\n                            case 0xd:\n                            {\n                                goto label_407929;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_407c8a;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_407915;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_407c6a;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_407c52;\n                            }\n                            case 0x27:\n                            {\n                                goto label_40780d;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_4077dd;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_40783a;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_407639;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_407c30:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_407a30:\n                            var_b8 = 0;\n                        label_407a35:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_407a84:\n                                if (rdx == 0)\n                                {\n                                    goto label_407a90;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_407f81:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_4077a4;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_40789c;\n                                }\n                                r13 = var_98;\n                                goto label_40771d;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_40ae50(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_40789c;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_407f81;\n                            }\n                            goto label_407a84;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_407970:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_40789c;\n                                }\n                                var_b8 = 0;\n                            label_407987:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_4079d2;\n                                    }\n                                    rax_8 = r10;\n                                label_4079ca:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_4079d2:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_40778c;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_407a13;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_4079ca;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_40778c;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_407a30;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_407945;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_40787d;\n                            }\n                            case 9:\n                            {\n                            label_407900:\n                                rbp_3 = 0x74;\n                                goto label_40787d;\n                            }\n                            case 0xa:\n                            {\n                            label_407878:\n                                rbp_3 = 0x6e;\n                            label_40787d:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_407890;\n                                }\n                                goto label_4076d8;\n                            }\n                            case 0xb:\n                            {\n                            label_407960:\n                                rbp_3 = 0x76;\n                                goto label_407945;\n                            }\n                            case 0xc:\n                            {\n                            label_407940:\n                                rbp_3 = 0x66;\n                            label_407945:\n                                if (var_5c == 0)\n                                {\n                                    goto label_407950;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_407898:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_40789c;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_407929:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_407860;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_407c8a:\n                                rbp_3 = 0x20;\n                                goto label_407c52;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_407915:\n                                rdx = 0;\n                            label_40786b:\n                                r13 = 0;\n                                goto label_407685;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_407c6a:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_407685;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_40768f:\n                                rax_8 = 0;\n                                goto label_407691;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_407c52:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_407691;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_40780d:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_407685;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_4085cd;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_40778c;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_4077dd:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_4085cd:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_40789c;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_40778c:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_4076c7;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_4077a4;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_407685;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_407d70:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_407685;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_407d70;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_407d70;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_407d70;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_407d70;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_408580;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_407a13:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_40778c;\n                                }\n                            label_407691:\n                                if (arg7 == 0)\n                                {\n                                    goto label_40778c;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_40778c;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_4076c7;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_40783a:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_407860;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_4077a4:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_40771d;\n                                }\n                            label_40771d:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_407726;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_407726:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_407639:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_40786b;\n                                }\n                                goto label_40765d;\n                            }\n                        }\n                    }\n                }\n            }\n        label_407d16:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"'\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_407528;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"'\";\n                goto label_407528;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"'\";\n            goto label_407528;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_41255c;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_41255c;\n            }\n            goto label_407528;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_41255c;\n            goto label_407528;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_407528;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_407390(&data_41256d, r13);\n                arg9 = sub_407390(\"'\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_407528;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_407d16;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n        goto label_407528;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4086c0",
            "funcStartAddr": "0x402365",
            "funcEndAddr": "0x40885e",
            "decompiledFuncCode": "char* sub_4086c0(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_617378;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_617390 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_4097b0();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x617380)\n        {\n            int64_t rax_9 = sub_4095c0(0, rsi_1);\n            int128_t zmm0 = data_617380;\n            rbx = rax_9;\n            data_617378 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_4095c0(rbx, rsi_1);\n            data_617378 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_617390;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_617390 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_407490(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        size_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x6174a0)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_409560(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_407490(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_408860",
            "funcStartAddr": "0x408860",
            "funcEndAddr": "0x408894",
            "decompiledFuncCode": "int64_t sub_408860(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x6175a0;\n    }\n    int64_t rax_1 = sub_409760(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4088a0",
            "funcStartAddr": "0x4088a0",
            "funcEndAddr": "0x4088af",
            "decompiledFuncCode": "uint64_t sub_4088a0(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6175a0;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4088b0",
            "funcStartAddr": "0x4088b0",
            "funcEndAddr": "0x4088bf",
            "decompiledFuncCode": "void sub_4088b0(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6175a0;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_4088c0",
            "funcStartAddr": "0x4088c0",
            "funcEndAddr": "0x4088f3",
            "decompiledFuncCode": "uint64_t sub_4088c0(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x6175a0;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_408900",
            "funcStartAddr": "0x408900",
            "funcEndAddr": "0x408913",
            "decompiledFuncCode": "uint64_t sub_408900(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6175a0;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_408920",
            "funcStartAddr": "0x408920",
            "funcEndAddr": "0x40894b",
            "decompiledFuncCode": "void sub_408920(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6175a0;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x6175a0;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_408950",
            "funcStartAddr": "0x408950",
            "funcEndAddr": "0x4089c2",
            "decompiledFuncCode": "int64_t sub_408950(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_6175a0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_407490(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_4089d0",
            "funcStartAddr": "0x4089d0",
            "funcEndAddr": "0x408ab1",
            "decompiledFuncCode": "char* sub_4089d0(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_6175a0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_407490(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_409560((rax_2 + 1));\n    sub_407490(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_408ac0",
            "funcStartAddr": "0x408ac0",
            "funcEndAddr": "0x408aca",
            "decompiledFuncCode": "int64_t sub_408ac0(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_4089d0(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_408ad0",
            "funcStartAddr": "0x408ad0",
            "funcEndAddr": "0x408b65",
            "decompiledFuncCode": "uint64_t sub_408ad0()\n{\n    uint64_t rax_2 = data_617390;\n    int64_t r12 = data_617378;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x6174a0)\n    {\n        rax_2 = free(rdi_2);\n        *data_617380 = 0x100;\n        *(data_617380 + 8) = 0x6174a0;\n    }\n    if (r12 != 0x617380)\n    {\n        rax_2 = free(r12);\n        data_617378 = 0x617380;\n    }\n    data_617390 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_408b70",
            "funcStartAddr": "0x408b70",
            "funcEndAddr": "0x408b81",
            "decompiledFuncCode": "int64_t sub_408b70(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4086c0(arg1, arg2, -1, &data_6175a0);\n}\n\n"
        },
        {
            "funcName": "sub_408b90",
            "funcStartAddr": "0x408b90",
            "funcEndAddr": "0x408b9a",
            "decompiledFuncCode": "int64_t sub_408b90(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_4086c0(arg1, arg2, arg3, &data_6175a0);\n}\n\n"
        },
        {
            "funcName": "sub_408ba0",
            "funcStartAddr": "0x408ba0",
            "funcEndAddr": "0x408bb6",
            "decompiledFuncCode": "int64_t sub_408ba0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_4086c0(0, arg1, -1, &data_6175a0);\n}\n\n"
        },
        {
            "funcName": "sub_408bc0",
            "funcStartAddr": "0x408bc0",
            "funcEndAddr": "0x408bd2",
            "decompiledFuncCode": "int64_t sub_408bc0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4086c0(0, arg1, arg2, &data_6175a0);\n}\n\n"
        },
        {
            "funcName": "sub_408be0",
            "funcStartAddr": "0x40236a",
            "funcEndAddr": "0x408c48",
            "decompiledFuncCode": "char* sub_408be0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_4086c0(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_408c50",
            "funcStartAddr": "0x40236f",
            "funcEndAddr": "0x408cb4",
            "decompiledFuncCode": "char* sub_408c50(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_4086c0(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_408cc0",
            "funcStartAddr": "0x408cc0",
            "funcEndAddr": "0x408ccc",
            "decompiledFuncCode": "int64_t sub_408cc0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_408be0(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_408cd0",
            "funcStartAddr": "0x408cd0",
            "funcEndAddr": "0x408cdf",
            "decompiledFuncCode": "int64_t sub_408cd0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_408c50(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_408ce0",
            "funcStartAddr": "0x408ce0",
            "funcEndAddr": "0x408d50",
            "decompiledFuncCode": "char* sub_408ce0(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_6175d0;\n    int128_t var_48 = data_6175a0;\n    int128_t var_38 = data_6175b0;\n    int128_t var_28 = data_6175c0;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_4086c0(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_408d50",
            "funcStartAddr": "0x408d50",
            "funcEndAddr": "0x408d5d",
            "decompiledFuncCode": "int64_t sub_408d50(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_408ce0(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_408d60",
            "funcStartAddr": "0x408d60",
            "funcEndAddr": "0x408d71",
            "decompiledFuncCode": "int64_t sub_408d60(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_408ce0(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_408d80",
            "funcStartAddr": "0x408d80",
            "funcEndAddr": "0x408d8a",
            "decompiledFuncCode": "int64_t sub_408d80(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_408ce0(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_408d90",
            "funcStartAddr": "0x402374",
            "funcEndAddr": "0x408dfe",
            "decompiledFuncCode": "char* sub_408d90(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_4086c0(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_408e00",
            "funcStartAddr": "0x408e00",
            "funcEndAddr": "0x408e6c",
            "decompiledFuncCode": "char* sub_408e00(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_6175a0;\n    int128_t var_38 = data_6175b0;\n    int128_t var_28 = data_6175c0;\n    int64_t var_18 = data_6175d0;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_4086c0(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_408ef0",
            "funcStartAddr": "0x408ef0",
            "funcEndAddr": "0x408f01",
            "decompiledFuncCode": "int64_t sub_408ef0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4086c0(arg1, arg2, -1, &data_617340);\n}\n\n"
        },
        {
            "funcName": "sub_408f10",
            "funcStartAddr": "0x408f10",
            "funcEndAddr": "0x408f26",
            "decompiledFuncCode": "int64_t sub_408f10(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_4086c0(0, arg1, -1, &data_617340);\n}\n\n"
        },
        {
            "funcName": "sub_408f30",
            "funcStartAddr": "0x408f30",
            "funcEndAddr": "0x408f7a",
            "decompiledFuncCode": "uint64_t sub_408f30(int32_t* arg1)\n{\n    *(arg1 + 8) = 0;\n    int32_t rdx;\n    int32_t rax_1 = sub_40c6a0(&data_411fe4, 0x80000, rdx);\n    *arg1 = rax_1;\n    if (rax_1 < 0)\n    {\n        void* rax_3 = sub_409bb0(nullptr, 0);\n        *(arg1 + 8) = rax_3;\n        rax_3 = rax_3 == 0;\n        return (-rax_3);\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_408f80",
            "funcStartAddr": "0x408f80",
            "funcEndAddr": "0x408f99",
            "decompiledFuncCode": "int64_t sub_408f80(int32_t* arg1)\n{\n    int32_t rax_2 = *arg1;\n    if (rax_2 < 0)\n    {\n        /* tailcall */\n        return sub_409940(*(arg1 + 8));\n    }\n    /* tailcall */\n    return fchdir(rax_2);\n}\n\n"
        },
        {
            "funcName": "sub_408fa0",
            "funcStartAddr": "0x408fa0",
            "funcEndAddr": "0x408fb9",
            "decompiledFuncCode": "int64_t sub_408fa0(int32_t* arg1)\n{\n    int32_t rdi = *arg1;\n    if (rdi >= 0)\n    {\n        close(rdi);\n    }\n    /* tailcall */\n    return free(*(arg1 + 8));\n}\n\n"
        },
        {
            "funcName": "sub_408fc0",
            "funcStartAddr": "0x402379",
            "funcEndAddr": "0x40939d",
            "decompiledFuncCode": "int64_t sub_408fc0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_4132ab, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4093a0",
            "funcStartAddr": "0x4093a0",
            "funcEndAddr": "0x4093c0",
            "decompiledFuncCode": "int64_t sub_4093a0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_408fc0(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_4093c0",
            "funcStartAddr": "0x4093c0",
            "funcEndAddr": "0x409420",
            "decompiledFuncCode": "int64_t sub_4093c0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_408fc0(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_409420",
            "funcStartAddr": "0x409420",
            "funcEndAddr": "0x4094dc",
            "decompiledFuncCode": "int64_t sub_409420(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_408fc0(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_4094e0",
            "funcStartAddr": "0x4094e0",
            "funcEndAddr": "0x409554",
            "decompiledFuncCode": "int64_t sub_4094e0()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_409560",
            "funcStartAddr": "0x409560",
            "funcEndAddr": "0x40957a",
            "decompiledFuncCode": "int64_t sub_409560(size_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_4097b0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4095c0",
            "funcStartAddr": "0x4095c0",
            "funcEndAddr": "0x4095f6",
            "decompiledFuncCode": "int64_t sub_4095c0(int64_t arg1, size_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_4097b0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40970a",
            "funcStartAddr": "0x40970a",
            "funcEndAddr": "0x409710",
            "decompiledFuncCode": "int64_t sub_40970a() __noreturn\n{\n    sub_4097b0();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_409710",
            "funcStartAddr": "0x409710",
            "funcEndAddr": "0x409727",
            "decompiledFuncCode": "int64_t sub_409710(size_t arg1)\n{\n    /* tailcall */\n    return memset(sub_409560(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_409730",
            "funcStartAddr": "0x409730",
            "funcEndAddr": "0x40975e",
            "decompiledFuncCode": "int64_t sub_409730(size_t arg1, size_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_4097b0();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_409760",
            "funcStartAddr": "0x409760",
            "funcEndAddr": "0x409788",
            "decompiledFuncCode": "int64_t sub_409760(int64_t arg1, size_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_409560(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_409790",
            "funcStartAddr": "0x409790",
            "funcEndAddr": "0x4097a3",
            "decompiledFuncCode": "int64_t sub_409790(char* arg1)\n{\n    /* tailcall */\n    return sub_409760(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_4097b0",
            "funcStartAddr": "0x4097b0",
            "funcEndAddr": "0x4097e1",
            "decompiledFuncCode": "int64_t sub_4097b0() __noreturn\n{\n    error(data_617328, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4097f0",
            "funcStartAddr": "0x4097f0",
            "funcEndAddr": "0x40981f",
            "decompiledFuncCode": "void* sub_4097f0()\n{\n    void* rax = sub_409bb0(nullptr, 0);\n    if ((rax == 0 && *__errno_location() == 0xc))\n    {\n        sub_4097b0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4098c0",
            "funcStartAddr": "0x4098c0",
            "funcEndAddr": "0x4098f3",
            "decompiledFuncCode": "void sub_4098c0(int32_t arg1)\n{\n    if (arg1 < 0)\n    {\n        return;\n    }\n    if (close(arg1) != 0)\n    {\n        __assert_fail(\"! close_fail\", \"lib/chdir-long.c\", 0x40, \"cdb_free\");\n        /* no return */\n    }\n}\n\n"
        },
        {
            "funcName": "sub_409900",
            "funcStartAddr": "0x409900",
            "funcEndAddr": "0x409937",
            "decompiledFuncCode": "int64_t sub_409900(int32_t* arg1, char* arg2)\n{\n    int32_t rax_1 = openat(*arg1, arg2, 0x10900);\n    int64_t rax_2;\n    if (rax_1 < 0)\n    {\n        rax_2 = 0xffffffff;\n    }\n    else\n    {\n        sub_4098c0(*arg1);\n        *arg1 = rax_1;\n        rax_2 = 0;\n    }\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_409940",
            "funcStartAddr": "0x409940",
            "funcEndAddr": "0x409bab",
            "decompiledFuncCode": "uint64_t sub_409940(char* arg1)\n{\n    int32_t rax = chdir();\n    int32_t rbx = rax;\n    if (rax != 0)\n    {\n        int32_t* rax_1 = __errno_location();\n        if (*rax_1 == 0x24)\n        {\n            uint64_t rax_2 = strlen(arg1);\n            int32_t var_2c = 0xffffff9c;\n            if (rax_2 == 0)\n            {\n                __assert_fail(\"0 < len\", \"lib/chdir-long.c\", 0x7e, \"chdir_long\");\n                /* no return */\n            }\n            if (rax_2 <= 0xfff)\n            {\n                __assert_fail(\"4096 <= len\", \"lib/chdir-long.c\", 0x7f, \"chdir_long\");\n                /* no return */\n            }\n            uint64_t rax_3 = strspn(arg1, \"/\");\n            char* rax_14;\n            int32_t rax_15;\n            void* rbp_1;\n            if (rax_3 == 2)\n            {\n                rax_14 = sub_40aed0(&arg1[3], 0x2f, (rax_2 - 3));\n                if (rax_14 == 0)\n                {\n                    goto label_409a81;\n                }\n                *rax_14 = 0;\n                rax_15 = sub_409900(&var_2c, arg1);\n                *rax_14 = 0x2f;\n                if (rax_15 == 0)\n                {\n                    rbp_1 = &rax_14[(1 + strspn(&rax_14[1], \"/\"))];\n                }\n                else\n                {\n                label_409a70:\n                    int32_t rbx_4 = *rax_1;\n                    sub_4098c0(var_2c);\n                    *rax_1 = rbx_4;\n                label_409a81:\n                    rbx = -1;\n                }\n            }\n            else\n            {\n                rbp_1 = arg1;\n                if (rax_3 != 0)\n                {\n                    if (sub_409900(&var_2c, \"/\") != 0)\n                    {\n                        goto label_409a70;\n                    }\n                    rbp_1 = &arg1[rax_3];\n                }\n            }\n            if ((((rax_3 == 2 && rax_14 != 0) && rax_15 == 0) || rax_3 != 2))\n            {\n                if (*rbp_1 == 0x2f)\n                {\n                    __assert_fail(\"*dir != '/'\", \"lib/chdir-long.c\", 0xa2, \"chdir_long\");\n                    /* no return */\n                }\n                void* r13_1 = &arg1[rax_2];\n                if (rbp_1 > r13_1)\n                {\n                    __assert_fail(\"dir <= dir_end\", \"lib/chdir-long.c\", 0xa3, \"chdir_long\");\n                    /* no return */\n                }\n                while (true)\n                {\n                    if ((r13_1 - rbp_1) <= 0xfff)\n                    {\n                        if ((r13_1 > rbp_1 && sub_409900(&var_2c, rbp_1) != 0))\n                        {\n                            break;\n                        }\n                        int32_t rax_11 = fchdir(var_2c);\n                        if (rax_11 != 0)\n                        {\n                            break;\n                        }\n                        sub_4098c0(var_2c);\n                        return rax_11;\n                    }\n                    char* rax_4 = memrchr(rbp_1, 0x2f, 0x1000);\n                    if (rax_4 == 0)\n                    {\n                        *rax_1 = 0x24;\n                        return -1;\n                    }\n                    *rax_4 = 0;\n                    if ((rax_4 - rbp_1) > 0xfff)\n                    {\n                        __assert_fail(\"slash - dir < 4096\", \"lib/chdir-long.c\", 0xb3, \"chdir_long\");\n                        /* no return */\n                    }\n                    int32_t rax_6 = sub_409900(&var_2c, rbp_1);\n                    *rax_4 = 0x2f;\n                    if (rax_6 != 0)\n                    {\n                        break;\n                    }\n                    rbp_1 = &rax_4[(1 + strspn(&rax_4[1], \"/\"))];\n                }\n                goto label_409a70;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_409bb0",
            "funcStartAddr": "0x409bb0",
            "funcEndAddr": "0x40a072",
            "decompiledFuncCode": "void* const sub_409bb0(void* arg1, size_t arg2)\n{\n    void* var_108 = arg1;\n    void* const var_110;\n    size_t var_100;\n    if (arg2 != 0)\n    {\n        var_100 = arg2;\n        if (var_108 != 0)\n        {\n            var_110 = var_108;\n        }\n    }\n    else\n    {\n        var_100 = 0x1000;\n        if (arg1 != 0)\n        {\n            var_110 = nullptr;\n            *__errno_location() = 0x16;\n        }\n    }\n    void* rax_1;\n    if (((arg2 != 0 && var_108 == 0) || (arg2 == 0 && arg1 == 0)))\n    {\n        rax_1 = malloc(var_100);\n        var_110 = rax_1;\n    }\n    if (((arg2 != 0 && var_108 != 0) || (((arg2 != 0 && var_108 == 0) || (arg2 == 0 && arg1 == 0)) && rax_1 != 0)))\n    {\n        void* rbx_2 = (var_110 + var_100);\n        *(rbx_2 - 1) = 0;\n        int64_t var_c8;\n        int32_t rax_5 = __lxstat(1, &data_411fe4, &var_c8);\n        int32_t rax_6;\n        int32_t rbx_6;\n        int32_t* r12_1;\n        if (rax_5 >= 0)\n        {\n            int64_t r15_1 = var_c8;\n            int64_t var_c0;\n            int64_t r14_1 = var_c0;\n            int64_t var_120_1 = r15_1;\n            rax_6 = __lxstat(1, \"/\", &var_c8);\n            if (rax_6 >= 0)\n            {\n                void* var_e8_1 = (rbx_2 - 1);\n                int64_t rax_8 = var_c8;\n                bool cond:1_1 = r15_1 != rax_8;\n                int64_t var_e0_1 = rax_8;\n                rax_8 = r14_1 != var_c0;\n                bool rdx_3 = (cond:1_1 | rax_8);\n                if (rdx_3 != 0)\n                {\n                    DIR* rbp_1 = nullptr;\n                    int32_t r15_2 = -0x64;\n                    r12_1 = __errno_location();\n                    do\n                    {\n                        int32_t rax_11 = openat(r15_2, &data_411fe3, 0);\n                        r15_2 = rax_11;\n                        if (rax_11 < 0)\n                        {\n                            rbx_6 = *r12_1;\n                            if (rbp_1 != 0)\n                            {\n                            label_409f84:\n                                closedir(rbp_1);\n                            }\n                        }\n                        else\n                        {\n                            if (__fxstat(1, rax_11, &var_c8) != 0)\n                            {\n                                rbx_6 = *r12_1;\n                                if (rbp_1 != 0)\n                                {\n                                    closedir(rbp_1);\n                                }\n                                goto label_409ff0;\n                            }\n                            int32_t rax_13;\n                            if (rbp_1 != 0)\n                            {\n                                rax_13 = closedir(rbp_1);\n                            }\n                            if ((rbp_1 == 0 || (rbp_1 != 0 && rax_13 == 0)))\n                            {\n                                int64_t rax_14 = var_c8;\n                                DIR* rax_16 = fdopendir(r15_2);\n                                rbp_1 = rax_16;\n                                if (rax_16 != 0)\n                                {\n                                    bool r13_1 = rdx_3;\n                                    struct dirent64* rax_17;\n                                    char* rbx_3;\n                                    while (true)\n                                    {\n                                        *r12_1 = 0;\n                                        rax_17 = readdir(rbp_1);\n                                        if (rax_17 == 0)\n                                        {\n                                            rbx_6 = *r12_1;\n                                            if (rbx_6 != 0)\n                                            {\n                                                break;\n                                            }\n                                            if (r13_1 == 0)\n                                            {\n                                                break;\n                                            }\n                                            rewinddir(rbp_1);\n                                            rax_17 = readdir(rbp_1);\n                                            if (rax_17 == 0)\n                                            {\n                                                rbx_6 = *r12_1;\n                                                break;\n                                            }\n                                            r13_1 = false;\n                                            if (rax_17->d_name[0] != 0x2e)\n                                            {\n                                                goto label_409d82;\n                                            }\n                                        }\n                                        if (((rax_17 != 0 && rax_17->d_name[0] == 0x2e) || rax_17 == 0))\n                                        {\n                                            if (rax_17->d_name[1] == 0)\n                                            {\n                                                continue;\n                                            }\n                                            if ((rax_17->d_name[1] != 0 && rax_17->d_name[1] == 0x2e))\n                                            {\n                                                continue;\n                                            }\n                                        }\n                                        if (r13_1 != 0)\n                                        {\n                                            int64_t rcx_1;\n                                            rcx_1 = rax_14 != var_120_1;\n                                            bool rdx_5 = (rax_17->d_ino == r14_1 | rcx_1);\n                                            if (rdx_5 == 0)\n                                            {\n                                                continue;\n                                            }\n                                            else\n                                            {\n                                                r13_1 = rdx_5;\n                                            }\n                                            goto label_409d82;\n                                        }\n                                    label_409d82:\n                                        rbx_3 = &rax_17->d_name;\n                                        int32_t var_b0;\n                                        if (((__fxstatat(1, r15_2, rbx_3, &var_c8, 0x100) == 0 && (var_b0 & 0xf000) == 0x4000) && var_c8 == var_120_1))\n                                        {\n                                            if (var_c0 == r14_1)\n                                            {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                    if ((!((rax_17 == 0 && rbx_6 == 0) && r13_1 != 0)))\n                                    {\n                                        void* r13_3 = (var_e8_1 - var_110);\n                                        size_t rax_22 = strlen(rbx_3);\n                                        void* rax_25;\n                                        size_t rdx_7;\n                                        if (r13_3 <= rax_22)\n                                        {\n                                            if (arg2 != 0)\n                                            {\n                                                *r12_1 = 0x22;\n                                                rbx_6 = 0x22;\n                                            }\n                                            else\n                                            {\n                                                rdx_7 = var_100;\n                                                if (rax_22 >= var_100)\n                                                {\n                                                    rdx_7 = rax_22;\n                                                }\n                                                size_t rax_24 = (var_100 + rdx_7);\n                                                if ((var_100 + rdx_7) >= var_100)\n                                                {\n                                                    rax_25 = realloc(var_110, rax_24);\n                                                    if (rax_25 != 0)\n                                                    {\n                                                        var_110 = rax_25;\n                                                        var_e8_1 = memcpy((rax_25 + (rdx_7 + r13_3)), (rax_25 + r13_3), (var_100 - r13_3));\n                                                        var_100 = rax_24;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        if (((((r13_3 <= rax_22 && arg2 == 0) && (var_100 + rdx_7) >= var_100) && rax_25 != 0) || r13_3 > rax_22))\n                                        {\n                                            void* rax_28 = memcpy((var_e8_1 - rax_22), rbx_3, rax_22);\n                                            var_e8_1 = (rax_28 - 1);\n                                            r14_1 = var_c0;\n                                            *(rax_28 - 1) = 0x2f;\n                                            var_120_1 = rax_14;\n                                            if (var_e0_1 != rax_14)\n                                            {\n                                                continue;\n                                            }\n                                            else\n                                            {\n                                                if (var_c0 == var_c0)\n                                                {\n                                                    if (closedir(rbp_1) != 0)\n                                                    {\n                                                        goto label_409fb6;\n                                                    }\n                                                    rbx_2 = (var_110 + var_100);\n                                                    goto label_409ed7;\n                                                }\n                                                continue;\n                                            }\n                                        }\n                                        if (((r13_3 <= rax_22 && arg2 == 0) && ((var_100 + rdx_7) < var_100 || ((var_100 + rdx_7) >= var_100 && rax_25 == 0))))\n                                        {\n                                            *r12_1 = 0xc;\n                                            rbx_6 = 0xc;\n                                        }\n                                    }\n                                    else if (rbx_6 == 0)\n                                    {\n                                        *r12_1 = 2;\n                                        rbx_6 = 2;\n                                    }\n                                    goto label_409f84;\n                                }\n                            }\n                            rbx_6 = *r12_1;\n                        label_409ff0:\n                            close(r15_2);\n                        }\n                    } while (var_108 == 0);\n                    if (var_108 != 0)\n                    {\n                        goto label_409f91;\n                    }\n                    goto label_409fc1;\n                }\n            label_409ed7:\n                if (var_e8_1 == ((var_110 + var_100) - 1))\n                {\n                    *(var_e8_1 - 1) = 0x2f;\n                    var_e8_1 = (var_e8_1 - 1);\n                }\n                void* rbx_5 = (rbx_2 - var_e8_1);\n                memmove(var_110, var_e8_1, rbx_5);\n                if (arg2 == 0)\n                {\n                    var_108 = realloc(var_110, rbx_5);\n                }\n                void* const rax_34 = var_108;\n                if (rax_34 == 0)\n                {\n                    rax_34 = var_110;\n                }\n                var_110 = rax_34;\n            }\n        }\n        if ((rax_5 < 0 || (rax_5 >= 0 && rax_6 < 0)))\n        {\n            r12_1 = __errno_location();\n        label_409fb6:\n            rbx_6 = *r12_1;\n            if (var_108 != 0)\n            {\n                goto label_409f91;\n            }\n        label_409fc1:\n            free(var_110);\n        label_409f91:\n            *r12_1 = rbx_6;\n            var_110 = nullptr;\n        }\n    }\n    return var_110;\n}\n\n"
        },
        {
            "funcName": "sub_40a080",
            "funcStartAddr": "0x40a080",
            "funcEndAddr": "0x40a15f",
            "decompiledFuncCode": "uint64_t sub_40a080(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_40a160",
            "funcStartAddr": "0x40a160",
            "funcEndAddr": "0x40a77c",
            "decompiledFuncCode": "uint64_t sub_40a160(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_40a390;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_40a2b6;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_40a2b6;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_40a2b6:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_40a390:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_40a3be;\n                }\n                *arg5 = r12;\n            label_40a3be:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_40a3dc;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_40a3dc:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_40a3dc;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_40a34e;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_40a34e:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_40a780",
            "funcStartAddr": "0x40a780",
            "funcEndAddr": "0x40ad46",
            "decompiledFuncCode": "uint64_t sub_40a780(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_40a9bc;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_40a848;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_40a848:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_40a080(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_4137c9;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_40a080(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_40a9bc;\n                }\n                *arg7 = rdx_2;\n            label_40a9bc:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_40aac0;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_4137c9;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_40ab30;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_40aac0;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_40aac0;\n                            }\n                            goto label_40aa81;\n                        }\n                    label_40aa81:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_40a160(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_4137ca);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_40aac0:\n                            rdx = &r14_1[1];\n                        label_40a901:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_40aafe;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_40aafe:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_4137e8;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_40ab30:\n                                        r14_2 = sub_40a160(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_40abed;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_40abed:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_40a9bc;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_40a848;\n        }\n        goto label_40a901;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40adb0",
            "funcStartAddr": "0x40adb0",
            "funcEndAddr": "0x40adc8",
            "decompiledFuncCode": "uint64_t sub_40adb0(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_40ae50",
            "funcStartAddr": "0x40ae50",
            "funcEndAddr": "0x40aeca",
            "decompiledFuncCode": "uint64_t sub_40ae50(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_4137cc[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_40ae7a;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_40ae7a:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_40c6f0() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_40aed0",
            "funcStartAddr": "0x40aed0",
            "funcEndAddr": "0x40afd4",
            "decompiledFuncCode": "char* sub_40aed0(char* arg1, int32_t arg2, int64_t arg3)\n{\n    char r8 = arg2;\n    if (arg3 != 0)\n    {\n        if ((arg1 & 7) != 0)\n        {\n            if (arg2 == *arg1)\n            {\n            label_40afd0:\n                return arg1;\n            }\n            do\n            {\n                arg1 = &arg1[1];\n                int64_t temp0_1 = arg3;\n                arg3 = (arg3 - 1);\n                if (temp0_1 == 1)\n                {\n                    return 0;\n                }\n                if ((arg1 & 7) == 0)\n                {\n                    break;\n                }\n            } while (*arg1 != r8);\n            if ((arg1 & 7) != 0)\n            {\n                goto label_40afd0;\n            }\n        }\n        int64_t r9_5 = ((arg2 << 8) | arg2);\n        int64_t r9_6 = (r9_5 | (r9_5 << 0x10));\n        int64_t r9_7 = (r9_6 | (r9_6 << 0x20));\n        int64_t rax_8;\n        if (arg3 > 7)\n        {\n            rax_8 = (*arg1 ^ r9_7);\n            if ((((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0)\n            {\n                int64_t rax_12;\n                do\n                {\n                    arg3 = (arg3 - 8);\n                    arg1 = &arg1[8];\n                    if (arg3 <= 7)\n                    {\n                        break;\n                    }\n                    rax_12 = (*arg1 ^ r9_7);\n                } while ((((!rax_12) & (rax_12 - 0x101010101010101)) & 0x8080808080808080) == 0);\n            }\n        }\n        if ((((arg3 <= 7 || (arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) != 0)) || (((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 <= 7) && arg3 != 0)) || ((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 > 7)))\n        {\n            if (arg2 == *arg1)\n            {\n                goto label_40afd0;\n            }\n            char* rcx_3 = &arg1[1];\n            void* rdi = &arg1[arg3];\n            while (true)\n            {\n                char* rax_15 = rcx_3;\n                if (rcx_3 == rdi)\n                {\n                    return 0;\n                }\n                rcx_3 = &rcx_3[1];\n                if (rcx_3[-1] == r8)\n                {\n                    return rax_15;\n                }\n            }\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40afe0",
            "funcStartAddr": "0x40afe0",
            "funcEndAddr": "0x40b06a",
            "decompiledFuncCode": "int64_t sub_40afe0(char* arg1)\n{\n    char* rcx = arg1;\n    int64_t rdx = 0;\n    int64_t rax_1 = (strlen(arg1) + 1);\n    while (true)\n    {\n        char rdi = arg1[rdx];\n        int64_t rsi_1 = (rdx + 1);\n        if (rdi == 0x5c)\n        {\n            int64_t r8_1 = (rdx + 4);\n            if (r8_1 >= rax_1)\n            {\n                goto label_40aff8;\n            }\n            uint64_t r9_1 = arg1[rsi_1];\n            if ((r9_1 - 0x30) > 3)\n            {\n                goto label_40aff8;\n            }\n            uint32_t r10_2 = arg1[(rdx + 2)];\n            if ((r10_2 - 0x30) > 7)\n            {\n                goto label_40aff8;\n            }\n            char r11_2 = (arg1[(rdx + 3)] - 0x30);\n            if (r11_2 > 7)\n            {\n                goto label_40aff8;\n            }\n            rcx = &rcx[1];\n            rsi_1 = r8_1;\n            rcx[-1] = ((r11_2 + ((r10_2 + (r9_1 << 3)) << 3)) - 0x80);\n        }\n        else\n        {\n        label_40aff8:\n            *rcx = rdi;\n            rcx = &rcx[1];\n            if (rax_1 <= rsi_1)\n            {\n                return rax_1;\n            }\n        }\n        rdx = rsi_1;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40b070",
            "funcStartAddr": "0x40b070",
            "funcEndAddr": "0x40b0b2",
            "decompiledFuncCode": "int64_t sub_40b070(int64_t* arg1)\n{\n    free(*arg1);\n    free(arg1[1]);\n    free(arg1[2]);\n    if ((arg1[5] & 4) != 0)\n    {\n        free(arg1[3]);\n        /* tailcall */\n        return free(arg1);\n    }\n    /* tailcall */\n    return free(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_40b0c0",
            "funcStartAddr": "0x40b0c0",
            "funcEndAddr": "0x40b87f",
            "decompiledFuncCode": "int64_t* sub_40b0c0()\n{\n    FILE* rax = fopen(\"/proc/self/mountinfo\", \"r\");\n    int64_t* var_50;\n    int32_t rax_29;\n    int64_t* rax_30;\n    FILE* rax_33;\n    int32_t rax_50;\n    int64_t* r12_1;\n    if (rax == 0)\n    {\n        rax_33 = setmntent(\"/etc/mtab\", \"r\");\n        if (rax_33 == 0)\n        {\n            rax_30 = nullptr;\n        label_40b388:\n            return rax_30;\n        }\n        r12_1 = &var_50;\n        struct mntent* rax_34 = getmntent(rax_33);\n        struct mntent* rbp_2 = rax_34;\n        if (rax_34 != 0)\n        {\n            struct mntent* rax_49;\n            do\n            {\n                char* rax_35 = hasmntopt(rbp_2, \"bind\");\n                int64_t* rax_36 = sub_409560(0x38);\n                *rax_36 = sub_409790(rbp_2->mnt_fsname);\n                int64_t rax_38 = sub_409790(rbp_2->mnt_dir);\n                rax_36[2] = 0;\n                char* rdi_41 = rbp_2->mnt_type;\n                rax_36[1] = rax_38;\n                char* rax_39 = sub_409790(rdi_41);\n                void* const rdi_42 = \"autofs\";\n                int64_t rcx_21 = 7;\n                char temp0_1 = rax_36[5];\n                rax_36[5] = (rax_36[5] | 4);\n                bool c_13 = false;\n                bool z_13 = (temp0_1 | 4) == 0;\n                char* rsi_14 = rax_39;\n                char* rbp_3 = rax_39;\n                rax_36[3] = rax_39;\n                char rdx_13 = 1;\n                while (rcx_21 != 0)\n                {\n                    char temp1_1 = *rsi_14;\n                    char temp2_1 = *rdi_42;\n                    c_13 = temp1_1 < temp2_1;\n                    z_13 = temp1_1 == temp2_1;\n                    rsi_14 = &rsi_14[1];\n                    rdi_42 = (rdi_42 + 1);\n                    rcx_21 = (rcx_21 - 1);\n                    if ((!z_13))\n                    {\n                        break;\n                    }\n                }\n                rax_39 = ((!z_13) && (!c_13));\n                rax_39 = (rax_39 - 0);\n                bool c_14 = false;\n                bool z_14 = (rax_39 & rax_39) == 0;\n                if ((!z_14))\n                {\n                    void* const rdi_43 = \"proc\";\n                    int64_t rcx_22 = 5;\n                    char* rsi_15 = rbp_3;\n                    while (rcx_22 != 0)\n                    {\n                        char temp8_1 = *rsi_15;\n                        char temp9_1 = *rdi_43;\n                        c_14 = temp8_1 < temp9_1;\n                        z_14 = temp8_1 == temp9_1;\n                        rsi_15 = &rsi_15[1];\n                        rdi_43 = (rdi_43 + 1);\n                        rcx_22 = (rcx_22 - 1);\n                        if ((!z_14))\n                        {\n                            break;\n                        }\n                    }\n                    rax_39 = ((!z_14) && (!c_14));\n                    rax_39 = (rax_39 - 0);\n                    bool c_15 = false;\n                    bool z_15 = (rax_39 & rax_39) == 0;\n                    if ((!z_15))\n                    {\n                        void* const rdi_44 = \"subfs\";\n                        int64_t rcx_23 = 6;\n                        char* rsi_16 = rbp_3;\n                        while (rcx_23 != 0)\n                        {\n                            char temp18_1 = *rsi_16;\n                            char temp19_1 = *rdi_44;\n                            c_15 = temp18_1 < temp19_1;\n                            z_15 = temp18_1 == temp19_1;\n                            rsi_16 = &rsi_16[1];\n                            rdi_44 = (rdi_44 + 1);\n                            rcx_23 = (rcx_23 - 1);\n                            if ((!z_15))\n                            {\n                                break;\n                            }\n                        }\n                        rax_39 = ((!z_15) && (!c_15));\n                        rax_39 = (rax_39 - 0);\n                        bool c_16 = false;\n                        bool z_16 = (rax_39 & rax_39) == 0;\n                        if ((!z_16))\n                        {\n                            void* const rdi_45 = \"debugfs\";\n                            int64_t rcx_24 = 8;\n                            char* rsi_17 = rbp_3;\n                            while (rcx_24 != 0)\n                            {\n                                char temp28_1 = *rsi_17;\n                                char temp29_1 = *rdi_45;\n                                c_16 = temp28_1 < temp29_1;\n                                z_16 = temp28_1 == temp29_1;\n                                rsi_17 = &rsi_17[1];\n                                rdi_45 = (rdi_45 + 1);\n                                rcx_24 = (rcx_24 - 1);\n                                if ((!z_16))\n                                {\n                                    break;\n                                }\n                            }\n                            rax_39 = ((!z_16) && (!c_16));\n                            rax_39 = (rax_39 - 0);\n                            bool c_17 = false;\n                            bool z_17 = (rax_39 & rax_39) == 0;\n                            if ((!z_17))\n                            {\n                                void* const rdi_46 = \"devpts\";\n                                int64_t rcx_25 = 7;\n                                char* rsi_18 = rbp_3;\n                                while (rcx_25 != 0)\n                                {\n                                    char temp34_1 = *rsi_18;\n                                    char temp35_1 = *rdi_46;\n                                    c_17 = temp34_1 < temp35_1;\n                                    z_17 = temp34_1 == temp35_1;\n                                    rsi_18 = &rsi_18[1];\n                                    rdi_46 = (rdi_46 + 1);\n                                    rcx_25 = (rcx_25 - 1);\n                                    if ((!z_17))\n                                    {\n                                        break;\n                                    }\n                                }\n                                rax_39 = ((!z_17) && (!c_17));\n                                rax_39 = (rax_39 - 0);\n                                bool c_18 = false;\n                                bool z_18 = (rax_39 & rax_39) == 0;\n                                if ((!z_18))\n                                {\n                                    void* const rdi_47 = \"fusectl\";\n                                    int64_t rcx_26 = 8;\n                                    char* rsi_19 = rbp_3;\n                                    while (rcx_26 != 0)\n                                    {\n                                        char temp38_1 = *rsi_19;\n                                        char temp39_1 = *rdi_47;\n                                        c_18 = temp38_1 < temp39_1;\n                                        z_18 = temp38_1 == temp39_1;\n                                        rsi_19 = &rsi_19[1];\n                                        rdi_47 = (rdi_47 + 1);\n                                        rcx_26 = (rcx_26 - 1);\n                                        if ((!z_18))\n                                        {\n                                            break;\n                                        }\n                                    }\n                                    rax_39 = ((!z_18) && (!c_18));\n                                    rax_39 = (rax_39 - 0);\n                                    bool c_19 = false;\n                                    bool z_19 = (rax_39 & rax_39) == 0;\n                                    if ((!z_19))\n                                    {\n                                        void* const rdi_48 = \"mqueue\";\n                                        int64_t rcx_27 = 7;\n                                        char* rsi_20 = rbp_3;\n                                        while (rcx_27 != 0)\n                                        {\n                                            char temp42_1 = *rsi_20;\n                                            char temp43_1 = *rdi_48;\n                                            c_19 = temp42_1 < temp43_1;\n                                            z_19 = temp42_1 == temp43_1;\n                                            rsi_20 = &rsi_20[1];\n                                            rdi_48 = (rdi_48 + 1);\n                                            rcx_27 = (rcx_27 - 1);\n                                            if ((!z_19))\n                                            {\n                                                break;\n                                            }\n                                        }\n                                        rax_39 = ((!z_19) && (!c_19));\n                                        rax_39 = (rax_39 - 0);\n                                        bool c_20 = false;\n                                        bool z_20 = (rax_39 & rax_39) == 0;\n                                        if ((!z_20))\n                                        {\n                                            void* const rdi_49 = \"rpc_pipefs\";\n                                            int64_t rcx_28 = 0xb;\n                                            char* rsi_21 = rbp_3;\n                                            while (rcx_28 != 0)\n                                            {\n                                                char temp46_1 = *rsi_21;\n                                                char temp47_1 = *rdi_49;\n                                                c_20 = temp46_1 < temp47_1;\n                                                z_20 = temp46_1 == temp47_1;\n                                                rsi_21 = &rsi_21[1];\n                                                rdi_49 = (rdi_49 + 1);\n                                                rcx_28 = (rcx_28 - 1);\n                                                if ((!z_20))\n                                                {\n                                                    break;\n                                                }\n                                            }\n                                            rax_39 = ((!z_20) && (!c_20));\n                                            rax_39 = (rax_39 - 0);\n                                            bool c_21 = false;\n                                            bool z_21 = (rax_39 & rax_39) == 0;\n                                            if ((!z_21))\n                                            {\n                                                void* const rdi_50 = \"sysfs\";\n                                                int64_t rcx_29 = 6;\n                                                char* rsi_22 = rbp_3;\n                                                while (rcx_29 != 0)\n                                                {\n                                                    char temp50_1 = *rsi_22;\n                                                    char temp51_1 = *rdi_50;\n                                                    c_21 = temp50_1 < temp51_1;\n                                                    z_21 = temp50_1 == temp51_1;\n                                                    rsi_22 = &rsi_22[1];\n                                                    rdi_50 = (rdi_50 + 1);\n                                                    rcx_29 = (rcx_29 - 1);\n                                                    if ((!z_21))\n                                                    {\n                                                        break;\n                                                    }\n                                                }\n                                                rax_39 = ((!z_21) && (!c_21));\n                                                rax_39 = (rax_39 - 0);\n                                                bool c_22 = false;\n                                                bool z_22 = (rax_39 & rax_39) == 0;\n                                                if ((!z_22))\n                                                {\n                                                    void* const rdi_51 = \"devfs\";\n                                                    int64_t rcx_30 = 6;\n                                                    char* rsi_23 = rbp_3;\n                                                    while (rcx_30 != 0)\n                                                    {\n                                                        char temp54_1 = *rsi_23;\n                                                        char temp55_1 = *rdi_51;\n                                                        c_22 = temp54_1 < temp55_1;\n                                                        z_22 = temp54_1 == temp55_1;\n                                                        rsi_23 = &rsi_23[1];\n                                                        rdi_51 = (rdi_51 + 1);\n                                                        rcx_30 = (rcx_30 - 1);\n                                                        if ((!z_22))\n                                                        {\n                                                            break;\n                                                        }\n                                                    }\n                                                    rax_39 = ((!z_22) && (!c_22));\n                                                    rax_39 = (rax_39 - 0);\n                                                    bool c_23 = false;\n                                                    bool z_23 = (rax_39 & rax_39) == 0;\n                                                    if ((!z_23))\n                                                    {\n                                                        void* const rdi_52 = \"kernfs\";\n                                                        int64_t rcx_31 = 7;\n                                                        char* rsi_24 = rbp_3;\n                                                        while (rcx_31 != 0)\n                                                        {\n                                                            char temp58_1 = *rsi_24;\n                                                            char temp59_1 = *rdi_52;\n                                                            c_23 = temp58_1 < temp59_1;\n                                                            z_23 = temp58_1 == temp59_1;\n                                                            rsi_24 = &rsi_24[1];\n                                                            rdi_52 = (rdi_52 + 1);\n                                                            rcx_31 = (rcx_31 - 1);\n                                                            if ((!z_23))\n                                                            {\n                                                                break;\n                                                            }\n                                                        }\n                                                        rax_39 = ((!z_23) && (!c_23));\n                                                        rax_39 = (rax_39 - 0);\n                                                        if (rax_39 != 0)\n                                                        {\n                                                            char var_89_1 = 1;\n                                                            rdx_13 = 1;\n                                                            if (strcmp(rbp_3, \"ignore\") != 0)\n                                                            {\n                                                                int32_t rax_41;\n                                                                rax_41 = strcmp(rbp_3, \"none\") == 0;\n                                                                rdx_13 = (rax_35 == 0 & rax_41);\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                char* r15_4 = *rax_36;\n                rax_36[5] = ((rax_36[5] & 0xfe) | rdx_13);\n                bool rdx_15 = true;\n                if (strchr(r15_4, 0x3a) == 0)\n                {\n                    char temp4_1 = *r15_4;\n                    bool c_24 = temp4_1 < 0x2f;\n                    bool z_24 = temp4_1 == 0x2f;\n                    char* rax_45;\n                    if (z_24)\n                    {\n                        char temp7_1 = r15_4[1];\n                        c_24 = temp7_1 < 0x2f;\n                        z_24 = temp7_1 == 0x2f;\n                        if ((!z_24))\n                        {\n                            goto label_40b7a2;\n                        }\n                        void* const rdi_63 = \"smbfs\";\n                        int64_t rcx_35 = 6;\n                        char* rsi_28 = rbp_3;\n                        while (rcx_35 != 0)\n                        {\n                            char temp16_1 = *rsi_28;\n                            char temp17_1 = *rdi_63;\n                            c_24 = temp16_1 < temp17_1;\n                            z_24 = temp16_1 == temp17_1;\n                            rsi_28 = &rsi_28[1];\n                            rdi_63 = (rdi_63 + 1);\n                            rcx_35 = (rcx_35 - 1);\n                            if ((!z_24))\n                            {\n                                break;\n                            }\n                        }\n                        rax_45 = ((!z_24) && (!c_24));\n                        rax_45 = (rax_45 - 0);\n                        bool c_26 = false;\n                        bool z_26 = (rax_45 & rax_45) == 0;\n                        if ((!z_26))\n                        {\n                            void* const rdi_64 = \"cifs\";\n                            int64_t rcx_36 = 5;\n                            char* rsi_29 = rbp_3;\n                            while (rcx_36 != 0)\n                            {\n                                char temp26_1 = *rsi_29;\n                                char temp27_1 = *rdi_64;\n                                c_26 = temp26_1 < temp27_1;\n                                z_26 = temp26_1 == temp27_1;\n                                rsi_29 = &rsi_29[1];\n                                rdi_64 = (rdi_64 + 1);\n                                rcx_36 = (rcx_36 - 1);\n                                if ((!z_26))\n                                {\n                                    break;\n                                }\n                            }\n                            rax_45 = ((!z_26) && (!c_26));\n                            rax_45 = (rax_45 - 0);\n                            c_24 = false;\n                            z_24 = (rax_45 & rax_45) == 0;\n                            if ((!z_24))\n                            {\n                                goto label_40b7a2;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_40b7a2:\n                        void* const rsi_25 = \"-hosts\";\n                        int64_t rcx_32 = 7;\n                        char* rdi_59 = r15_4;\n                        while (rcx_32 != 0)\n                        {\n                            char temp11_1 = *rsi_25;\n                            char temp12_1 = *rdi_59;\n                            c_24 = temp11_1 < temp12_1;\n                            z_24 = temp11_1 == temp12_1;\n                            rsi_25 = (rsi_25 + 1);\n                            rdi_59 = &rdi_59[1];\n                            rcx_32 = (rcx_32 - 1);\n                            if ((!z_24))\n                            {\n                                break;\n                            }\n                        }\n                        rax_45 = ((!z_24) && (!c_24));\n                        rax_45 = (rax_45 - 0);\n                        rdx_15 = rax_45 == 0;\n                    }\n                }\n                char rax_46 = rax_36[5];\n                rax_36[4] = -1;\n                rax_36[5] = ((rax_46 & 0xfd) | (rdx_15 + rdx_15));\n                *r12_1 = rax_36;\n                r12_1 = &rax_36[6];\n                rax_49 = getmntent(rax_33);\n                rbp_2 = rax_49;\n            } while (rax_49 != 0);\n        }\n        rax_50 = endmntent(rax_33);\n    }\n    else\n    {\n        char* var_48 = nullptr;\n        r12_1 = &var_50;\n        uint64_t var_40 = 0;\n        while (true)\n        {\n            if (__getdelim(&var_48, &var_40, 0xa, rax) == -1)\n            {\n                break;\n            }\n            void var_79;\n            int32_t var_78;\n            int32_t var_74;\n            int32_t var_70;\n            int32_t var_6c;\n            int32_t var_58;\n            int32_t var_54;\n            if ((sscanf(var_48, \"%*u %*u %u:%u %n%*s%n %n%*s%n%c\", &var_78, &var_74, &var_58, &var_54, &var_70, &var_6c, &var_79) & 0xfffffffb) == 3)\n            {\n                char* rax_5 = sub_40bd00(&var_48[var_6c], &data_413801);\n                int32_t var_68;\n                int32_t var_64;\n                int32_t var_60;\n                int32_t var_5c;\n                if ((rax_5 != 0 && (sscanf(rax_5, \" - %n%*s%n %n%*s%n %c\", &var_68, &var_64, &var_60, &var_5c, &var_79) & 0xfffffffb) == 1))\n                {\n                    char r13_1 = 1;\n                    var_48[var_54] = 0;\n                    var_48[var_6c] = 0;\n                    rax_5[var_64] = 0;\n                    rax_5[var_5c] = 0;\n                    sub_40afe0(&rax_5[var_60]);\n                    sub_40afe0(&var_48[var_70]);\n                    sub_40afe0(&var_48[var_58]);\n                    int64_t* rax_13 = sub_409560(0x38);\n                    *rax_13 = sub_409790(&rax_5[var_60]);\n                    rax_13[1] = sub_409790(&var_48[var_70]);\n                    rax_13[2] = sub_409790(&var_48[var_58]);\n                    char* rax_17 = sub_409790(&rax_5[var_68]);\n                    uint64_t rdx_6 = var_78;\n                    void* const rdi_20 = \"autofs\";\n                    rax_13[3] = rax_17;\n                    uint64_t rax_18 = var_74;\n                    rax_13[5] = (rax_13[5] | 4);\n                    int64_t rdx_10 = ((((rdx_6 << 0x20) & 0xfffff00000000000) | ((rdx_6 << 8) & 0xfff00)) | rax_18);\n                    int64_t rax_20 = ((rax_18 << 0xc) & 0xffffff00000);\n                    int64_t rcx_9 = 7;\n                    char* rsi_2 = rax_17;\n                    int64_t rax_21 = (rax_20 | rdx_10);\n                    bool c_1 = false;\n                    bool z_1 = (rax_20 | rdx_10) == 0;\n                    while (rcx_9 != 0)\n                    {\n                        char temp5_1 = *rsi_2;\n                        char temp6_1 = *rdi_20;\n                        c_1 = temp5_1 < temp6_1;\n                        z_1 = temp5_1 == temp6_1;\n                        rsi_2 = &rsi_2[1];\n                        rdi_20 = (rdi_20 + 1);\n                        rcx_9 = (rcx_9 - 1);\n                        if ((!z_1))\n                        {\n                            break;\n                        }\n                    }\n                    rax_13[4] = rax_21;\n                    rax_21 = ((!z_1) && (!c_1));\n                    rax_21 = (rax_21 - 0);\n                    bool c_2 = false;\n                    bool z_2 = (rax_21 & rax_21) == 0;\n                    if ((!z_2))\n                    {\n                        void* const rdi_21 = \"proc\";\n                        int64_t rcx_10 = 5;\n                        char* rsi_3 = rax_17;\n                        while (rcx_10 != 0)\n                        {\n                            char temp14_1 = *rsi_3;\n                            char temp15_1 = *rdi_21;\n                            c_2 = temp14_1 < temp15_1;\n                            z_2 = temp14_1 == temp15_1;\n                            rsi_3 = &rsi_3[1];\n                            rdi_21 = (rdi_21 + 1);\n                            rcx_10 = (rcx_10 - 1);\n                            if ((!z_2))\n                            {\n                                break;\n                            }\n                        }\n                        rax_21 = ((!z_2) && (!c_2));\n                        rax_21 = (rax_21 - 0);\n                        bool c_3 = false;\n                        bool z_3 = (rax_21 & rax_21) == 0;\n                        if ((!z_3))\n                        {\n                            void* const rdi_25 = \"subfs\";\n                            int64_t rcx_11 = 6;\n                            char* rsi_4 = rax_17;\n                            while (rcx_11 != 0)\n                            {\n                                char temp24_1 = *rsi_4;\n                                char temp25_1 = *rdi_25;\n                                c_3 = temp24_1 < temp25_1;\n                                z_3 = temp24_1 == temp25_1;\n                                rsi_4 = &rsi_4[1];\n                                rdi_25 = (rdi_25 + 1);\n                                rcx_11 = (rcx_11 - 1);\n                                if ((!z_3))\n                                {\n                                    break;\n                                }\n                            }\n                            rax_21 = ((!z_3) && (!c_3));\n                            rax_21 = (rax_21 - 0);\n                            bool c_4 = false;\n                            bool z_4 = (rax_21 & rax_21) == 0;\n                            if ((!z_4))\n                            {\n                                void* const rdi_26 = \"debugfs\";\n                                int64_t rcx_12 = 8;\n                                char* rsi_5 = rax_17;\n                                while (rcx_12 != 0)\n                                {\n                                    char temp32_1 = *rsi_5;\n                                    char temp33_1 = *rdi_26;\n                                    c_4 = temp32_1 < temp33_1;\n                                    z_4 = temp32_1 == temp33_1;\n                                    rsi_5 = &rsi_5[1];\n                                    rdi_26 = (rdi_26 + 1);\n                                    rcx_12 = (rcx_12 - 1);\n                                    if ((!z_4))\n                                    {\n                                        break;\n                                    }\n                                }\n                                rax_21 = ((!z_4) && (!c_4));\n                                rax_21 = (rax_21 - 0);\n                                bool c_5 = false;\n                                bool z_5 = (rax_21 & rax_21) == 0;\n                                if ((!z_5))\n                                {\n                                    void* const rdi_27 = \"devpts\";\n                                    int64_t rcx_13 = 7;\n                                    char* rsi_6 = rax_17;\n                                    while (rcx_13 != 0)\n                                    {\n                                        char temp36_1 = *rsi_6;\n                                        char temp37_1 = *rdi_27;\n                                        c_5 = temp36_1 < temp37_1;\n                                        z_5 = temp36_1 == temp37_1;\n                                        rsi_6 = &rsi_6[1];\n                                        rdi_27 = (rdi_27 + 1);\n                                        rcx_13 = (rcx_13 - 1);\n                                        if ((!z_5))\n                                        {\n                                            break;\n                                        }\n                                    }\n                                    rax_21 = ((!z_5) && (!c_5));\n                                    rax_21 = (rax_21 - 0);\n                                    bool c_6 = false;\n                                    bool z_6 = (rax_21 & rax_21) == 0;\n                                    if ((!z_6))\n                                    {\n                                        void* const rdi_28 = \"fusectl\";\n                                        int64_t rcx_14 = 8;\n                                        char* rsi_7 = rax_17;\n                                        while (rcx_14 != 0)\n                                        {\n                                            char temp40_1 = *rsi_7;\n                                            char temp41_1 = *rdi_28;\n                                            c_6 = temp40_1 < temp41_1;\n                                            z_6 = temp40_1 == temp41_1;\n                                            rsi_7 = &rsi_7[1];\n                                            rdi_28 = (rdi_28 + 1);\n                                            rcx_14 = (rcx_14 - 1);\n                                            if ((!z_6))\n                                            {\n                                                break;\n                                            }\n                                        }\n                                        rax_21 = ((!z_6) && (!c_6));\n                                        rax_21 = (rax_21 - 0);\n                                        bool c_7 = false;\n                                        bool z_7 = (rax_21 & rax_21) == 0;\n                                        if ((!z_7))\n                                        {\n                                            void* const rdi_29 = \"mqueue\";\n                                            int64_t rcx_15 = 7;\n                                            char* rsi_8 = rax_17;\n                                            while (rcx_15 != 0)\n                                            {\n                                                char temp44_1 = *rsi_8;\n                                                char temp45_1 = *rdi_29;\n                                                c_7 = temp44_1 < temp45_1;\n                                                z_7 = temp44_1 == temp45_1;\n                                                rsi_8 = &rsi_8[1];\n                                                rdi_29 = (rdi_29 + 1);\n                                                rcx_15 = (rcx_15 - 1);\n                                                if ((!z_7))\n                                                {\n                                                    break;\n                                                }\n                                            }\n                                            rax_21 = ((!z_7) && (!c_7));\n                                            rax_21 = (rax_21 - 0);\n                                            bool c_8 = false;\n                                            bool z_8 = (rax_21 & rax_21) == 0;\n                                            if ((!z_8))\n                                            {\n                                                void* const rdi_30 = \"rpc_pipefs\";\n                                                int64_t rcx_16 = 0xb;\n                                                char* rsi_9 = rax_17;\n                                                while (rcx_16 != 0)\n                                                {\n                                                    char temp48_1 = *rsi_9;\n                                                    char temp49_1 = *rdi_30;\n                                                    c_8 = temp48_1 < temp49_1;\n                                                    z_8 = temp48_1 == temp49_1;\n                                                    rsi_9 = &rsi_9[1];\n                                                    rdi_30 = (rdi_30 + 1);\n                                                    rcx_16 = (rcx_16 - 1);\n                                                    if ((!z_8))\n                                                    {\n                                                        break;\n                                                    }\n                                                }\n                                                rax_21 = ((!z_8) && (!c_8));\n                                                rax_21 = (rax_21 - 0);\n                                                bool c_9 = false;\n                                                bool z_9 = (rax_21 & rax_21) == 0;\n                                                if ((!z_9))\n                                                {\n                                                    void* const rdi_31 = \"sysfs\";\n                                                    int64_t rcx_17 = 6;\n                                                    char* rsi_10 = rax_17;\n                                                    while (rcx_17 != 0)\n                                                    {\n                                                        char temp52_1 = *rsi_10;\n                                                        char temp53_1 = *rdi_31;\n                                                        c_9 = temp52_1 < temp53_1;\n                                                        z_9 = temp52_1 == temp53_1;\n                                                        rsi_10 = &rsi_10[1];\n                                                        rdi_31 = (rdi_31 + 1);\n                                                        rcx_17 = (rcx_17 - 1);\n                                                        if ((!z_9))\n                                                        {\n                                                            break;\n                                                        }\n                                                    }\n                                                    rax_21 = ((!z_9) && (!c_9));\n                                                    rax_21 = (rax_21 - 0);\n                                                    bool c_10 = false;\n                                                    bool z_10 = (rax_21 & rax_21) == 0;\n                                                    if ((!z_10))\n                                                    {\n                                                        void* const rdi_32 = \"devfs\";\n                                                        int64_t rcx_18 = 6;\n                                                        char* rsi_11 = rax_17;\n                                                        while (rcx_18 != 0)\n                                                        {\n                                                            char temp56_1 = *rsi_11;\n                                                            char temp57_1 = *rdi_32;\n                                                            c_10 = temp56_1 < temp57_1;\n                                                            z_10 = temp56_1 == temp57_1;\n                                                            rsi_11 = &rsi_11[1];\n                                                            rdi_32 = (rdi_32 + 1);\n                                                            rcx_18 = (rcx_18 - 1);\n                                                            if ((!z_10))\n                                                            {\n                                                                break;\n                                                            }\n                                                        }\n                                                        rax_21 = ((!z_10) && (!c_10));\n                                                        rax_21 = (rax_21 - 0);\n                                                        bool c_11 = false;\n                                                        bool z_11 = (rax_21 & rax_21) == 0;\n                                                        if ((!z_11))\n                                                        {\n                                                            void* const rdi_33 = \"kernfs\";\n                                                            int64_t rcx_19 = 7;\n                                                            char* rsi_12 = rax_17;\n                                                            while (rcx_19 != 0)\n                                                            {\n                                                                char temp60_1 = *rsi_12;\n                                                                char temp61_1 = *rdi_33;\n                                                                c_11 = temp60_1 < temp61_1;\n                                                                z_11 = temp60_1 == temp61_1;\n                                                                rsi_12 = &rsi_12[1];\n                                                                rdi_33 = (rdi_33 + 1);\n                                                                rcx_19 = (rcx_19 - 1);\n                                                                if ((!z_11))\n                                                                {\n                                                                    break;\n                                                                }\n                                                            }\n                                                            rax_21 = ((!z_11) && (!c_11));\n                                                            rax_21 = (rax_21 - 0);\n                                                            if ((rax_21 != 0 && strcmp(rax_17, \"ignore\") != 0))\n                                                            {\n                                                                r13_1 = strcmp(rax_17, \"none\") == 0;\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    char* r13_2 = *rax_13;\n                    rax_13[5] = ((rax_13[5] & 0xfe) | r13_1);\n                    bool rdx_11 = true;\n                    if (strchr(r13_2, 0x3a) == 0)\n                    {\n                        char temp10_1 = *r13_2;\n                        bool c_12 = temp10_1 < 0x2f;\n                        bool z_12 = temp10_1 == 0x2f;\n                        char* rax_25;\n                        if (z_12)\n                        {\n                            char temp13_1 = r13_2[1];\n                            c_12 = temp13_1 < 0x2f;\n                            z_12 = temp13_1 == 0x2f;\n                            if ((!z_12))\n                            {\n                                goto label_40b4cb;\n                            }\n                            void* const rdi_60 = \"smbfs\";\n                            int64_t rcx_33 = 6;\n                            char* rsi_26 = rax_17;\n                            while (rcx_33 != 0)\n                            {\n                                char temp22_1 = *rsi_26;\n                                char temp23_1 = *rdi_60;\n                                c_12 = temp22_1 < temp23_1;\n                                z_12 = temp22_1 == temp23_1;\n                                rsi_26 = &rsi_26[1];\n                                rdi_60 = (rdi_60 + 1);\n                                rcx_33 = (rcx_33 - 1);\n                                if ((!z_12))\n                                {\n                                    break;\n                                }\n                            }\n                            rax_25 = ((!z_12) && (!c_12));\n                            rax_25 = (rax_25 - 0);\n                            bool c_25 = false;\n                            bool z_25 = (rax_25 & rax_25) == 0;\n                            if ((!z_25))\n                            {\n                                void* const rdi_61 = \"cifs\";\n                                int64_t rcx_34 = 5;\n                                char* rsi_27 = rax_17;\n                                while (rcx_34 != 0)\n                                {\n                                    char temp30_1 = *rsi_27;\n                                    char temp31_1 = *rdi_61;\n                                    c_25 = temp30_1 < temp31_1;\n                                    z_25 = temp30_1 == temp31_1;\n                                    rsi_27 = &rsi_27[1];\n                                    rdi_61 = (rdi_61 + 1);\n                                    rcx_34 = (rcx_34 - 1);\n                                    if ((!z_25))\n                                    {\n                                        break;\n                                    }\n                                }\n                                rax_25 = ((!z_25) && (!c_25));\n                                rax_25 = (rax_25 - 0);\n                                c_12 = false;\n                                z_12 = (rax_25 & rax_25) == 0;\n                                if ((!z_12))\n                                {\n                                    goto label_40b4cb;\n                                }\n                            }\n                        }\n                        else\n                        {\n                        label_40b4cb:\n                            void* const rsi_13 = \"-hosts\";\n                            int64_t rcx_20 = 7;\n                            char* rdi_36 = r13_2;\n                            while (rcx_20 != 0)\n                            {\n                                char temp20_1 = *rsi_13;\n                                char temp21_1 = *rdi_36;\n                                c_12 = temp20_1 < temp21_1;\n                                z_12 = temp20_1 == temp21_1;\n                                rsi_13 = (rsi_13 + 1);\n                                rdi_36 = &rdi_36[1];\n                                rcx_20 = (rcx_20 - 1);\n                                if ((!z_12))\n                                {\n                                    break;\n                                }\n                            }\n                            rax_25 = ((!z_12) && (!c_12));\n                            rax_25 = (rax_25 - 0);\n                            rdx_11 = rax_25 == 0;\n                        }\n                    }\n                    rax_13[5] = ((rax_13[5] & 0xfd) | (rdx_11 + rdx_11));\n                    *r12_1 = rax_13;\n                    r12_1 = &rax_13[6];\n                }\n            }\n        }\n        free(var_48);\n        if ((rax->_flags & 0x20) == 0)\n        {\n            rax_29 = sub_40ced0(rax);\n        }\n    }\n    if ((((rax == 0 && rax_33 != 0) && rax_50 != 0) || ((rax != 0 && (rax->_flags & 0x20) == 0) && rax_29 != 0xffffffff)))\n    {\n        *r12_1 = 0;\n        rax_30 = var_50;\n        goto label_40b388;\n    }\n    int32_t* r13_4;\n    int32_t r14;\n    if ((((rax == 0 && rax_33 != 0) && rax_50 == 0) || ((rax != 0 && (rax->_flags & 0x20) == 0) && rax_29 == 0xffffffff)))\n    {\n        int32_t* rax_51 = __errno_location();\n        r14 = *rax_51;\n        r13_4 = rax_51;\n        goto label_40b753;\n    }\n    if ((rax != 0 && (rax->_flags & 0x20) != 0))\n    {\n        int32_t* rax_53 = __errno_location();\n        r14 = *rax_53;\n        r13_4 = rax_53;\n        sub_40ced0(rax);\n        *r13_4 = r14;\n    label_40b753:\n        *r12_1 = 0;\n        int64_t* rdi_58 = var_50;\n        if (rdi_58 != 0)\n        {\n            int64_t* rbx_3;\n            do\n            {\n                rbx_3 = rdi_58[6];\n                sub_40b070(rdi_58);\n                var_50 = rbx_3;\n                rdi_58 = rbx_3;\n            } while (rbx_3 != 0);\n        }\n        *r13_4 = r14;\n        return 0;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40b880",
            "funcStartAddr": "0x40b880",
            "funcEndAddr": "0x40b9ae",
            "decompiledFuncCode": "int64_t sub_40b880(char* arg1, int64_t arg2, int64_t* arg3)\n{\n    int64_t r11 = 1;\n    int64_t r8 = 1;\n    int64_t r9 = 0;\n    int64_t rax = -1;\n    while (true)\n    {\n        int64_t rcx_1 = (r8 + r9);\n        if (rcx_1 >= arg2)\n        {\n            break;\n        }\n        char rbx_1;\n        char temp0_1;\n        bool cond:0_1;\n        do\n        {\n            rbx_1 = arg1[(rax + r8)];\n            temp0_1 = arg1[rcx_1];\n            cond:0_1 = temp0_1 == rbx_1;\n            if (temp0_1 >= rbx_1)\n            {\n                break;\n            }\n            r9 = rcx_1;\n            r8 = 1;\n            int64_t r11_1 = rcx_1;\n            rcx_1 = (1 + r9);\n            r11 = (r11_1 - rax);\n        } while (rcx_1 < arg2);\n        if (temp0_1 < rbx_1)\n        {\n            break;\n        }\n        if ((!cond:0_1))\n        {\n            rax = r9;\n            r11 = 1;\n            r9 = (r9 + 1);\n            r8 = 1;\n        }\n        else if (r8 == r11)\n        {\n            r9 = rcx_1;\n            r8 = 1;\n        }\n        else\n        {\n            r8 = (r8 + 1);\n        }\n    }\n    *arg3 = r11;\n    int64_t rbx_2 = 1;\n    int64_t r8_1 = 1;\n    int64_t r9_1 = 0;\n    int64_t r10_2 = -1;\n    while (true)\n    {\n        int64_t rcx_2 = (r8_1 + r9_1);\n        if (arg2 <= rcx_2)\n        {\n            break;\n        }\n        char r11_3;\n        char temp1_1;\n        bool cond:1_1;\n        do\n        {\n            r11_3 = arg1[(r10_2 + r8_1)];\n            temp1_1 = arg1[rcx_2];\n            cond:1_1 = temp1_1 == r11_3;\n            if (temp1_1 <= r11_3)\n            {\n                break;\n            }\n            r9_1 = rcx_2;\n            r8_1 = 1;\n            int64_t rbx_3 = rcx_2;\n            rcx_2 = (1 + r9_1);\n            rbx_2 = (rbx_3 - r10_2);\n        } while (arg2 > rcx_2);\n        if (temp1_1 > r11_3)\n        {\n            break;\n        }\n        if ((!cond:1_1))\n        {\n            r10_2 = r9_1;\n            rbx_2 = 1;\n            r9_1 = (r9_1 + 1);\n            r8_1 = 1;\n        }\n        else if (r8_1 == rbx_2)\n        {\n            r9_1 = rcx_2;\n            r8_1 = 1;\n        }\n        else\n        {\n            r8_1 = (r8_1 + 1);\n        }\n    }\n    int64_t r10_3 = (r10_2 + 1);\n    int64_t rax_1 = (rax + 1);\n    if (r10_3 >= rax_1)\n    {\n        *arg3 = rbx_2;\n        rax_1 = r10_3;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40b9b0",
            "funcStartAddr": "0x40b9b0",
            "funcEndAddr": "0x40bcf9",
            "decompiledFuncCode": "void* sub_40b9b0(void* arg1, void* arg2, char* arg3, void* arg4)\n{\n    void* rbp = arg2;\n    void* var_868;\n    void* var_840;\n    uint64_t r13;\n    if (arg4 <= 2)\n    {\n        var_840 = 1;\n        r13 = (arg4 - 1);\n        var_868 = 1;\n    }\n    else\n    {\n        r13 = sub_40b880(arg3, arg4, &var_840);\n        var_868 = var_840;\n    }\n    void var_838;\n    void* rax_3 = &var_838;\n    void var_38;\n    do\n    {\n        *rax_3 = arg4;\n        rax_3 = (rax_3 + 8);\n    } while (&var_38 != rax_3);\n    void* rsi_1 = (arg3 + var_868);\n    int32_t rax_6;\n    int32_t rax_15;\n    void* rax_16;\n    void* r10_1;\n    if (arg4 == 0)\n    {\n        rax_15 = memcmp(arg3, rsi_1, r13);\n        if (rax_15 == 0)\n        {\n        label_40bb7d:\n            rax_16 = nullptr;\n        }\n    }\n    else\n    {\n        r10_1 = (arg4 - 1);\n        void* r9_1 = (arg4 + arg3);\n        char* rax_5 = arg3;\n        void* rdi_1 = (arg3 + r10_1);\n        do\n        {\n            uint64_t rdx_1 = *rax_5;\n            int64_t rcx_1 = (rdi_1 - rax_5);\n            rax_5 = &rax_5[1];\n            *(&var_838 + (rdx_1 << 3)) = rcx_1;\n        } while (r9_1 != rax_5);\n        rax_6 = memcmp(arg3, rsi_1, r13);\n    }\n    if (((arg4 == 0 && rax_15 != 0) || (arg4 != 0 && rax_6 != 0)))\n    {\n        void* r14_1 = (arg4 - 1);\n        void* rax_8 = (arg4 - r13);\n        if (rax_8 < r13)\n        {\n            rax_8 = r13;\n        }\n        void* r9_2 = nullptr;\n        void* rax_9 = (rax_8 + 1);\n        var_840 = rax_9;\n        int64_t rax_10 = (1 - r13);\n        void* rcx_2;\n        void* rdx_5;\n        while (true)\n        {\n            rcx_2 = (r9_2 + arg4);\n            char* rax_12 = sub_40aed0((arg1 + rbp), 0, (rcx_2 - rbp));\n            if (rcx_2 == 0)\n            {\n                break;\n            }\n            void* r9_3 = r9_2;\n            if (rax_12 != 0)\n            {\n                break;\n            }\n            uint64_t rax_11 = *(&var_838 + (*((arg1 + rcx_2) - 1) << 3));\n            if (rax_11 == 0)\n            {\n                rdx_5 = (arg1 + r9_3);\n                if (r13 < r14_1)\n                {\n                    rax_11 = r13;\n                    if (*(rdx_5 + r13) == arg3[r13])\n                    {\n                        do\n                        {\n                            rax_11 = (rax_11 + 1);\n                            if (rax_11 >= r14_1)\n                            {\n                                break;\n                            }\n                        } while (arg3[rax_11] == *(rdx_5 + rax_11));\n                    }\n                    if ((*(rdx_5 + r13) != arg3[r13] || (*(rdx_5 + r13) == arg3[r13] && rax_11 < r14_1)))\n                    {\n                        r9_3 = (r9_3 + rax_10);\n                    }\n                }\n                if ((r13 >= r14_1 || ((r13 < r14_1 && *(rdx_5 + r13) == arg3[r13]) && rax_11 >= r14_1)))\n                {\n                    int64_t rax_14 = (r13 - 1);\n                    if (rax_14 == -1)\n                    {\n                        break;\n                    }\n                    if (*(rdx_5 + rax_14) == arg3[(r13 - 1)])\n                    {\n                        do\n                        {\n                            rax_14 = (rax_14 - 1);\n                            if (rax_14 == -1)\n                            {\n                                break;\n                            }\n                        } while (arg3[rax_14] == *(rdx_5 + rax_14));\n                        if (rax_14 == -1)\n                        {\n                            break;\n                        }\n                    }\n                    r9_2 = (r9_3 + rax_9);\n                }\n            }\n            if ((((rax_11 == 0 && r13 < r14_1) && (*(rdx_5 + r13) != arg3[r13] || (*(rdx_5 + r13) == arg3[r13] && rax_11 < r14_1))) || rax_11 != 0))\n            {\n                r9_2 = (r9_3 + rax_11);\n            }\n            rbp = rcx_2;\n        }\n        if (rcx_2 == 0)\n        {\n            goto label_40bb7d;\n        }\n        rax_16 = rdx_5;\n    }\n    if ((arg4 != 0 && rax_6 == 0))\n    {\n        uint64_t rax_17 = (r13 - 1);\n        void* r11_1 = nullptr;\n        void* r14_2 = nullptr;\n        void* rax_19 = (arg4 - var_868);\n        void* rax_20 = (1 - r13);\n        char* rax_22;\n        while (true)\n        {\n            void* r9_4 = (r14_2 + arg4);\n            rax_22 = sub_40aed0((arg1 + rbp), 0, (r9_4 - rbp));\n            if (rax_22 != 0)\n            {\n                break;\n            }\n            if (r9_4 == 0)\n            {\n                break;\n            }\n            void* rax_21 = *(&var_838 + (*((arg1 + r9_4) - 1) << 3));\n            if (rax_21 != 0)\n            {\n                if ((rax_21 < var_868 && r11_1 != 0))\n                {\n                    rax_21 = rax_19;\n                }\n                r14_2 = (r14_2 + rax_21);\n                r11_1 = nullptr;\n            }\n            else\n            {\n                void* rax_24 = r13;\n                if (r11_1 >= r13)\n                {\n                    rax_24 = r11_1;\n                }\n                char* rdx_9;\n                if (rax_24 < r10_1)\n                {\n                    rdx_9 = (arg1 + r14_2);\n                    while (*(arg3 + rax_24) == *(rdx_9 + rax_24))\n                    {\n                        rax_24 = (rax_24 + 1);\n                        if (rax_24 == r10_1)\n                        {\n                            break;\n                        }\n                    }\n                    if (*(arg3 + rax_24) != *(rdx_9 + rax_24))\n                    {\n                        r11_1 = nullptr;\n                        r14_2 = (rax_24 + (rax_20 + r14_2));\n                    }\n                }\n                if ((rax_24 >= r10_1 || (rax_24 < r10_1 && *(arg3 + rax_24) == *(rdx_9 + rax_24))))\n                {\n                    uint64_t rax_25 = rax_17;\n                    int64_t rdx_10;\n                    if (r11_1 < r13)\n                    {\n                        rdx_10 = (arg1 + r14_2);\n                        if (*(rdx_10 + rax_17) == arg3[rax_17])\n                        {\n                            while (true)\n                            {\n                                uint64_t rsi_6 = (rax_25 - 1);\n                                if (r11_1 == rax_25)\n                                {\n                                    break;\n                                }\n                                if (arg3[(rax_25 - 1)] != *((rax_25 + rdx_10) - 1))\n                                {\n                                    break;\n                                }\n                                rax_25 = rsi_6;\n                            }\n                        }\n                    }\n                    if ((r11_1 >= r13 || (r11_1 < r13 && *(rdx_10 + rax_17) != arg3[rax_17])))\n                    {\n                        rax_25 = r13;\n                    }\n                    if ((r11_1 + 1) > rax_25)\n                    {\n                        break;\n                    }\n                    r14_2 = (r14_2 + var_868);\n                    r11_1 = rax_19;\n                }\n            }\n            rbp = r9_4;\n        }\n        if (rax_22 != 0)\n        {\n            goto label_40bb7d;\n        }\n        rax_16 = (arg1 + r14_2);\n    }\n    return rax_16;\n}\n\n"
        },
        {
            "funcName": "sub_40bd00",
            "funcStartAddr": "0x40bd00",
            "funcEndAddr": "0x40c094",
            "decompiledFuncCode": "char* sub_40bd00(char* arg1, char* arg2)\n{\n    uint32_t rax = *arg1;\n    char r9 = *arg2;\n    char* r12_1;\n    if (rax == 0)\n    {\n        r12_1 = nullptr;\n        if (r9 == 0)\n        {\n            r12_1 = arg1;\n        }\n    }\n    else if (r9 == 0)\n    {\n        r12_1 = arg1;\n    }\n    else\n    {\n        char* rbx_1 = arg2;\n        char* rdx_1 = arg1;\n        char rcx_1 = r9;\n        int32_t r8_1 = 1;\n        while (true)\n        {\n            rdx_1 = &rdx_1[1];\n            rbx_1 = &rbx_1[1];\n            rax = rcx_1 == rax;\n            rcx_1 = *rbx_1;\n            r8_1 = (r8_1 & rax);\n            rax = *rdx_1;\n            if ((rax != 0 && rcx_1 != 0))\n            {\n                continue;\n            }\n            if (rax == 0)\n            {\n                r12_1 = nullptr;\n                if (rcx_1 != 0)\n                {\n                    break;\n                }\n            }\n            r12_1 = arg1;\n            if (r8_1 == 0)\n            {\n                void* rbp_2 = (rbx_1 - arg2);\n                char* rax_1 = strchr(&arg1[1], r9);\n                r12_1 = rax_1;\n                if ((rax_1 != 0 && rbp_2 != 1))\n                {\n                    int64_t rax_2 = (arg1 + rbp_2);\n                    char* rbx_2 = (rbx_1 - rbp_2);\n                    void* r8_3 = (rax_2 - r12_1);\n                    if (rax_2 < r12_1)\n                    {\n                        r8_3 = 1;\n                    }\n                    if (rbp_2 > 0x1f)\n                    {\n                        r12_1 = sub_40b9b0(r12_1, r8_3, rbx_2, rbp_2);\n                    }\n                    else\n                    {\n                        void* var_60_1;\n                        void* var_40;\n                        uint64_t r15_1;\n                        if (rbp_2 <= 2)\n                        {\n                            var_40 = 1;\n                            r15_1 = (rbp_2 - 1);\n                            var_60_1 = 1;\n                        }\n                        else\n                        {\n                            r15_1 = sub_40b880(rbx_2, rbp_2, &var_40);\n                            var_60_1 = var_40;\n                        }\n                        int32_t rax_8 = memcmp(rbx_2, (rbx_2 + var_60_1), r15_1);\n                        void* r8_4 = r8_3;\n                        void* r11_1;\n                        void* r13_3;\n                        void* r14_1;\n                        if (rax_8 != 0)\n                        {\n                            void* rax_17 = (rbp_2 - r15_1);\n                            if (rax_17 < r15_1)\n                            {\n                                rax_17 = r15_1;\n                            }\n                            void* r14_2 = nullptr;\n                            void* rax_18 = (rax_17 + 1);\n                            var_40 = rax_18;\n                            void* rax_19 = &r12_1[r15_1];\n                            void* rax_20 = (1 - r15_1);\n                            char* rdx_12;\n                            while (true)\n                            {\n                                r13_3 = (rbp_2 + r14_2);\n                                char* rax_21 = sub_40aed0((r12_1 + r8_4), 0, (r13_3 - r8_4));\n                                if (r13_3 == 0)\n                                {\n                                    break;\n                                }\n                                if (rax_21 != 0)\n                                {\n                                    break;\n                                }\n                                rdx_12 = (r12_1 + r14_2);\n                                uint64_t rax_22;\n                                if (rbp_2 > r15_1)\n                                {\n                                    rax_22 = r15_1;\n                                    rdx_12 = (r12_1 + r14_2);\n                                    if (*(rax_19 + r14_2) == rbx_2[r15_1])\n                                    {\n                                        do\n                                        {\n                                            rax_22 = (rax_22 + 1);\n                                            if (rbp_2 <= rax_22)\n                                            {\n                                                break;\n                                            }\n                                        } while (rbx_2[rax_22] == rdx_12[rax_22]);\n                                    }\n                                    if ((*(rax_19 + r14_2) != rbx_2[r15_1] || (*(rax_19 + r14_2) == rbx_2[r15_1] && rbp_2 > rax_22)))\n                                    {\n                                        r14_2 = (rax_22 + (rax_20 + r14_2));\n                                    }\n                                }\n                                if ((rbp_2 <= r15_1 || ((rbp_2 > r15_1 && *(rax_19 + r14_2) == rbx_2[r15_1]) && rbp_2 <= rax_22)))\n                                {\n                                    int64_t rax_23 = (r15_1 - 1);\n                                    if (rax_23 == -1)\n                                    {\n                                        break;\n                                    }\n                                    if (rdx_12[rax_23] == rbx_2[(r15_1 - 1)])\n                                    {\n                                        do\n                                        {\n                                            rax_23 = (rax_23 - 1);\n                                            if (rax_23 == -1)\n                                            {\n                                                break;\n                                            }\n                                        } while (rbx_2[rax_23] == rdx_12[rax_23]);\n                                        if (rax_23 == -1)\n                                        {\n                                            break;\n                                        }\n                                    }\n                                    r14_2 = (r14_2 + rax_18);\n                                }\n                                r8_4 = r13_3;\n                            }\n                            if (r13_3 != 0)\n                            {\n                                r12_1 = rdx_12;\n                            }\n                        }\n                        else\n                        {\n                            uint64_t rax_9 = (r15_1 - 1);\n                            void* r13_2 = nullptr;\n                            r14_1 = nullptr;\n                            void* rax_11 = (rbp_2 - var_60_1);\n                            void* rax_12 = (1 - r15_1);\n                            while (true)\n                            {\n                                r11_1 = (rbp_2 + r14_1);\n                                char* rax_13 = sub_40aed0((r12_1 + r8_4), 0, (r11_1 - r8_4));\n                                if (r11_1 == 0)\n                                {\n                                    break;\n                                }\n                                if (rax_13 != 0)\n                                {\n                                    break;\n                                }\n                                void* rax_14 = r13_2;\n                                if (r15_1 >= r13_2)\n                                {\n                                    rax_14 = r15_1;\n                                }\n                                if ((rbp_2 > rax_14 && *((r12_1 + rax_14) + r14_1) == *(rbx_2 + rax_14)))\n                                {\n                                    void* rdx_8 = (r12_1 + r14_1);\n                                    do\n                                    {\n                                        rax_14 = (rax_14 + 1);\n                                        if (rbp_2 == rax_14)\n                                        {\n                                            break;\n                                        }\n                                    } while (*(rbx_2 + rax_14) == *(rdx_8 + rax_14));\n                                }\n                                if ((rbp_2 <= rax_14 || ((rbp_2 > rax_14 && *((r12_1 + rax_14) + r14_1) == *(rbx_2 + rax_14)) && rbp_2 == rax_14)))\n                                {\n                                    uint64_t rax_15 = rax_9;\n                                    int64_t rsi_5;\n                                    if (r15_1 > r13_2)\n                                    {\n                                        rsi_5 = (r12_1 + r14_1);\n                                        if (rbx_2[rax_9] == *(rsi_5 + rax_9))\n                                        {\n                                            while (true)\n                                            {\n                                                uint64_t rdx_9 = (rax_15 - 1);\n                                                if (r13_2 == rax_15)\n                                                {\n                                                    break;\n                                                }\n                                                if (rbx_2[(rax_15 - 1)] != *((rax_15 + rsi_5) - 1))\n                                                {\n                                                    break;\n                                                }\n                                                rax_15 = rdx_9;\n                                            }\n                                        }\n                                    }\n                                    if ((r15_1 <= r13_2 || (r15_1 > r13_2 && rbx_2[rax_9] != *(rsi_5 + rax_9))))\n                                    {\n                                        rax_15 = r15_1;\n                                    }\n                                    if ((r13_2 + 1) > rax_15)\n                                    {\n                                        break;\n                                    }\n                                    r13_2 = rax_11;\n                                    r14_1 = (r14_1 + var_60_1);\n                                }\n                                if ((rbp_2 > rax_14 && (*((r12_1 + rax_14) + r14_1) != *(rbx_2 + rax_14) || (*((r12_1 + rax_14) + r14_1) == *(rbx_2 + rax_14) && rbp_2 != rax_14))))\n                                {\n                                    r13_2 = nullptr;\n                                    r14_1 = (rax_14 + (rax_12 + r14_1));\n                                }\n                                r8_4 = r11_1;\n                            }\n                        }\n                        if (((rax_8 != 0 && r13_3 == 0) || (rax_8 == 0 && r11_1 == 0)))\n                        {\n                            r12_1 = nullptr;\n                        }\n                        if ((rax_8 == 0 && r11_1 != 0))\n                        {\n                            r12_1 = (r12_1 + r14_1);\n                        }\n                    }\n                }\n            }\n            break;\n        }\n    }\n    return r12_1;\n}\n\n"
        },
        {
            "funcName": "sub_40c0a0",
            "funcStartAddr": "0x40c0a0",
            "funcEndAddr": "0x40c0e5",
            "decompiledFuncCode": "uint64_t sub_40c0a0(void* arg1)\n{\n    int32_t rax;\n    if (*(arg1 + 8) != 0)\n    {\n        rax = setenv(&data_4106c6, (arg1 + 9), 1);\n    }\n    else\n    {\n        rax = unsetenv(&data_4106c6);\n    }\n    int32_t rdx = 0;\n    if (rax == 0)\n    {\n        tzset();\n        rdx = 1;\n    }\n    return rdx;\n}\n\n"
        },
        {
            "funcName": "sub_40c0f0",
            "funcStartAddr": "0x40c0f0",
            "funcEndAddr": "0x40c119",
            "decompiledFuncCode": "void sub_40c0f0(int64_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        return;\n    }\n    int64_t* rbx_1;\n    do\n    {\n        rbx_1 = *arg1;\n        free(arg1);\n        arg1 = rbx_1;\n    } while (rbx_1 != 0);\n}\n\n"
        },
        {
            "funcName": "sub_40c120",
            "funcStartAddr": "0x40c120",
            "funcEndAddr": "0x40c161",
            "decompiledFuncCode": "uint64_t sub_40c120(int64_t* arg1)\n{\n    int32_t* rax = __errno_location();\n    int32_t r13 = *rax;\n    int32_t rax_1 = sub_40c0a0(arg1);\n    if (rax_1 == 0)\n    {\n        r13 = *rax;\n    }\n    sub_40c0f0(arg1);\n    *rax = r13;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40c170",
            "funcStartAddr": "0x40c170",
            "funcEndAddr": "0x40c1ff",
            "decompiledFuncCode": "int64_t* sub_40c170(char* arg1)\n{\n    int64_t* rbx;\n    if (arg1 == 0)\n    {\n        int64_t* rax_3 = malloc(0x80);\n        rbx = rax_3;\n        if (rax_3 != 0)\n        {\n            *rbx = 0;\n            rbx[1] = 0;\n            return rbx;\n        }\n    }\n    else\n    {\n        uint64_t rdi = 0x76;\n        uint64_t rbp_1 = (strlen(arg1) + 1);\n        if (rbp_1 >= 0x76)\n        {\n            rdi = rbp_1;\n        }\n        int64_t* rax_1 = malloc(((rdi + 0x11) & 0xfffffffffffffff8));\n        rbx = rax_1;\n        if (rax_1 != 0)\n        {\n            *rax_1 = 0;\n            rbx[1] = 1;\n            memcpy((rbx + 9), arg1, rbp_1);\n            *((rbx + rbp_1) + 9) = 0;\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40c200",
            "funcStartAddr": "0x40c200",
            "funcEndAddr": "0x40c375",
            "decompiledFuncCode": "int64_t sub_40c200(int64_t** arg1, void* arg2)\n{\n    char* r12 = *(arg2 + 0x30);\n    if (r12 == 0)\n    {\n        return 1;\n    }\n    int64_t** rbp = arg1;\n    int64_t rax_1;\n    if (arg2 <= r12)\n    {\n        rax_1 = 1;\n    }\n    if ((arg2 > r12 || (arg2 <= r12 && r12 >= (arg2 + 0x38))))\n    {\n        void* rbx_1 = (rbp + 9);\n        if (*r12 == 0)\n        {\n            rbx_1 = &data_4137cc[0x1b];\n        }\n        else\n        {\n        label_40c24e:\n            if (strcmp(rbx_1, r12) != 0)\n            {\n                int32_t rax_5;\n                do\n                {\n                    if (*rbx_1 == 0)\n                    {\n                        void* r14_1 = (rbp + 9);\n                        void* rax_9;\n                        uint64_t r15_1;\n                        if ((r14_1 == rbx_1 && rbp[1] == 0))\n                        {\n                            r15_1 = (strlen(r12) + 1);\n                            rax_9 = nullptr;\n                        }\n                        if (r14_1 != rbx_1)\n                        {\n                            r15_1 = (strlen(r12) + 1);\n                            rax_9 = (rbx_1 - r14_1);\n                            if ((!rax_9) < r15_1)\n                            {\n                                *__errno_location() = 0xc;\n                                return 0;\n                            }\n                        }\n                        if (((r14_1 == rbx_1 && rbp[1] == 0) || r14_1 != rbx_1))\n                        {\n                            if ((rax_9 + r15_1) <= 0x76)\n                            {\n                                memcpy(rbx_1, r12, r15_1);\n                                *(rbx_1 + r15_1) = 0;\n                                break;\n                            }\n                            int64_t* rax_13 = sub_40c170(r12);\n                            *rbp = rax_13;\n                            if (rax_13 != 0)\n                            {\n                                rax_13[1] = 0;\n                                rbx_1 = (rax_13 + 9);\n                                break;\n                            }\n                            return 0;\n                        }\n                    }\n                    rbx_1 = ((rbx_1 + strlen(rbx_1)) + 1);\n                    if (*rbx_1 != 0)\n                    {\n                        goto label_40c24e;\n                    }\n                    int64_t* rax_4 = *rbp;\n                    if (rax_4 == 0)\n                    {\n                        goto label_40c24e;\n                    }\n                    rbx_1 = (rax_4 + 9);\n                    rbp = rax_4;\n                    rax_5 = strcmp(rbx_1, r12);\n                } while (rax_5 != 0);\n            }\n        }\n        *(arg2 + 0x30) = rbx_1;\n        rax_1 = 1;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40c380",
            "funcStartAddr": "0x40c380",
            "funcEndAddr": "0x40c42f",
            "decompiledFuncCode": "int64_t* sub_40c380(void* arg1)\n{\n    char* rax = getenv(&data_4106c6);\n    if (rax == 0)\n    {\n        if (*(arg1 + 8) == 0)\n        {\n            return 1;\n        }\n    }\n    else if ((*(arg1 + 8) != 0 && strcmp((arg1 + 9), rax) == 0))\n    {\n        return 1;\n    }\n    int64_t* rax_1 = sub_40c170(rax);\n    if ((rax_1 != 0 && sub_40c0a0(arg1) == 0))\n    {\n        int32_t* rax_7 = __errno_location();\n        int32_t r12_1 = *rax_7;\n        if (rax_1 != 1)\n        {\n            sub_40c0f0(rax_1);\n        }\n        *rax_7 = r12_1;\n        return 0;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40c430",
            "funcStartAddr": "0x40c430",
            "funcEndAddr": "0x40c441",
            "decompiledFuncCode": "void sub_40c430(int64_t* arg1)\n{\n    if (arg1 == 1)\n    {\n        return;\n    }\n    /* tailcall */\n    return sub_40c0f0(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_40c450",
            "funcStartAddr": "0x40c450",
            "funcEndAddr": "0x40c4f5",
            "decompiledFuncCode": "struct tm* sub_40c450(int64_t** arg1, time_t* arg2, struct tm* arg3)\n{\n    if (arg1 == 0)\n    {\n        /* tailcall */\n        return gmtime_r(arg2, arg3);\n    }\n    int64_t* rax = sub_40c380(arg1);\n    if (rax != 0)\n    {\n        struct tm* rax_1 = localtime_r(arg2, arg3);\n        char rax_2;\n        if (rax_1 != 0)\n        {\n            rax_2 = sub_40c200(arg1, arg3);\n            if (rax_2 != 0)\n            {\n                char rax_5;\n                if (rax != 1)\n                {\n                    rax_5 = sub_40c120(rax);\n                }\n                if ((rax == 1 || (rax != 1 && rax_5 != 0)))\n                {\n                    return arg3;\n                }\n            }\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_2 == 0)) && rax != 1))\n        {\n            sub_40c120(rax);\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40c500",
            "funcStartAddr": "0x40c500",
            "funcEndAddr": "0x40c61c",
            "decompiledFuncCode": "time_t sub_40c500(int64_t** arg1, int32_t* arg2)\n{\n    if (arg1 == 0)\n    {\n        return timegm(arg2);\n    }\n    int64_t* rax = sub_40c380(arg1);\n    time_t var_60;\n    char rax_3;\n    if (rax != 0)\n    {\n        time_t rax_1 = sub_40d6b0(arg2);\n        var_60 = rax_1;\n        int32_t var_58;\n        if (rax_1 == -1)\n        {\n            if (localtime_r(&var_60, &var_58) != 0)\n            {\n                int32_t rax_6 = arg2[8];\n                int32_t var_38;\n                if (((rax_6 == 0 == var_38 == 0 || (rax_6 == 0 != var_38 == 0 && rax_6 < 0)) || ((rax_6 == 0 != var_38 == 0 && rax_6 >= 0) && var_38 < 0)))\n                {\n                    int32_t var_54;\n                    int32_t var_50;\n                    int32_t var_4c;\n                    int32_t var_48;\n                    int32_t var_44;\n                    int32_t rax_12 = (((((arg2[4] ^ var_48) | (arg2[5] ^ var_44)) | (arg2[3] ^ var_4c)) | (arg2[2] ^ var_50)) | (arg2[1] ^ var_54));\n                    if ((rax_12 | (*arg2 ^ var_58)) == 0)\n                    {\n                        goto label_40c541;\n                    }\n                }\n            }\n        }\n        else\n        {\n        label_40c541:\n            if (sub_40c200(arg1, arg2) == 0)\n            {\n                var_60 = -1;\n            }\n        }\n        if (rax != 1)\n        {\n            rax_3 = sub_40c120(rax);\n        }\n    }\n    time_t rax_4;\n    if ((rax == 1 || ((rax != 0 && rax != 1) && rax_3 != 0)))\n    {\n        rax_4 = var_60;\n    }\n    if ((rax == 0 || ((rax != 0 && rax != 1) && rax_3 == 0)))\n    {\n        rax_4 = -1;\n    }\n    return rax_4;\n}\n\n"
        },
        {
            "funcName": "sub_40c640",
            "funcStartAddr": "0x40c640",
            "funcEndAddr": "0x40c69d",
            "decompiledFuncCode": "uint64_t sub_40c640(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_40ced0(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40c6a0",
            "funcStartAddr": "0x40c6a0",
            "funcEndAddr": "0x40c6ea",
            "decompiledFuncCode": "uint64_t sub_40c6a0(char* arg1, int64_t arg2, int32_t arg3)\n{\n    uint64_t rdx = 0;\n    if ((arg2 & 0x40) != 0)\n    {\n        int32_t var_50_1 = 0x10;\n        rdx = arg3;\n        void* var_48_1 = &arg_8;\n        void var_38;\n        void* var_40_1 = &var_38;\n    }\n    return sub_40ccc0(open(arg1, arg2, rdx));\n}\n\n"
        },
        {
            "funcName": "sub_40c6f0",
            "funcStartAddr": "0x40c6f0",
            "funcEndAddr": "0x40c74e",
            "decompiledFuncCode": "int64_t sub_40c6f0()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_413870;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            void* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40c750",
            "funcStartAddr": "0x40c750",
            "funcEndAddr": "0x40ccb2",
            "decompiledFuncCode": "char* sub_40c750()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_617620;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_4137cc[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        size_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            size_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_40c84c;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_40c896;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_40c84c:\n            r15 = &data_4137cc[0x1b];\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_40c896:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, \"r\");\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_40c94c:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_40cadb;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_40c988:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_40c988;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_40c9c2:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_40c9c2;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_4137cc[0x1b];\n                                    free(rdi_26);\n                                    sub_40ced0(rax_12);\n                                    goto label_40c8d7;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_40cb9b:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_40cb9b;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_40cbe9:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_40cbe9;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_40c94c;\n                        }\n                        break;\n                    }\n                label_40cadb:\n                    sub_40ced0(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_4137cc[0x1b];\n            }\n        label_40c8d7:\n            free(rbp_3);\n        }\n        data_617620 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40ccc0",
            "funcStartAddr": "0x40ccc0",
            "funcEndAddr": "0x40cd0e",
            "decompiledFuncCode": "uint64_t sub_40ccc0(int32_t arg1)\n{\n    if (arg1 <= 2)\n    {\n        int32_t rax_1 = sub_40d730(arg1);\n        int32_t* rax_2 = __errno_location();\n        int32_t r13 = *rax_2;\n        close(arg1);\n        *rax_2 = r13;\n        return rax_1;\n    }\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_40cd10",
            "funcStartAddr": "0x40cd10",
            "funcEndAddr": "0x40ce37",
            "decompiledFuncCode": "char* sub_40cd10(int64_t arg1, int128_t* arg2)\n{\n    int128_t var_50 = *arg2;\n    int64_t r15 = arg2[1];\n    int64_t var_40 = r15;\n    int64_t rbx;\n    char* rbx_1;\n    char* rbp_1;\n    if (arg1 == 0)\n    {\n        char* rax_10 = sub_409560(1);\n        rbx_1 = rax_10;\n        rbp_1 = rax_10;\n    }\n    else\n    {\n        int64_t r13_1 = arg1;\n        int64_t rbp = arg1;\n        rbx = 0;\n        int64_t temp1_1;\n        do\n        {\n            int32_t rax_3 = var_50;\n            int64_t* rdx_2;\n            if (rax_3 <= 0x2f)\n            {\n                var_50 = (rax_3 + 8);\n                rdx_2 = (rax_3 + r15);\n            }\n            else\n            {\n                rdx_2 = *var_50[8];\n                *var_50[8] = &rdx_2[1];\n            }\n            uint64_t rax_2 = strlen(*rdx_2);\n            int64_t temp0_1 = rbx;\n            rbx = (rbx + rax_2);\n            if ((temp0_1 + rax_2) < temp0_1)\n            {\n                rbx = -1;\n            }\n            temp1_1 = rbp;\n            rbp = (rbp - 1);\n        } while (temp1_1 != 1);\n        if (rbx > 0x7fffffff)\n        {\n            rbp_1 = nullptr;\n            *__errno_location() = 0x4b;\n        }\n        else\n        {\n            char* rax_5 = sub_409560((rbx + 1));\n            rbp_1 = rax_5;\n            rbx_1 = rax_5;\n            int64_t temp2_1;\n            do\n            {\n                int32_t rax_8 = *arg2;\n                int64_t* rdx_4;\n                if (rax_8 <= 0x2f)\n                {\n                    rdx_4 = (rax_8 + arg2[1]);\n                    *arg2 = (rax_8 + 8);\n                }\n                else\n                {\n                    rdx_4 = *(arg2 + 8);\n                    *(arg2 + 8) = &rdx_4[1];\n                }\n                char* r15_1 = *rdx_4;\n                uint64_t rax_7 = strlen(r15_1);\n                memcpy(rbx_1, r15_1, rax_7);\n                rbx_1 = &rbx_1[rax_7];\n                temp2_1 = r13_1;\n                r13_1 = (r13_1 - 1);\n            } while (temp2_1 != 1);\n        }\n    }\n    if ((arg1 == 0 || (arg1 != 0 && rbx <= 0x7fffffff)))\n    {\n        *rbx_1 = 0;\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_40ce40",
            "funcStartAddr": "0x40ce40",
            "funcEndAddr": "0x40ceca",
            "decompiledFuncCode": "char* sub_40ce40(char* arg1, int128_t* arg2)\n{\n    char rax = *arg1;\n    if (rax == 0)\n    {\n        return sub_40cd10(0, arg2);\n    }\n    if ((rax == 0x25 && arg1[1] == 0x73))\n    {\n        int64_t rax_1 = 0;\n        do\n        {\n            rax_1 = (rax_1 + 1);\n            char rcx_1 = arg1[(rax_1 << 1)];\n            if (rcx_1 == 0)\n            {\n                return sub_40cd10(rax_1, arg2);\n            }\n            if (rcx_1 != 0x25)\n            {\n                break;\n            }\n        } while (arg1[((rax_1 << 1) + 1)] == 0x73);\n    }\n    int64_t var_10;\n    if (sub_40d6d0(&var_10, arg1, arg2) >= 0)\n    {\n        return var_10;\n    }\n    if (*__errno_location() == 0xc)\n    {\n        sub_4097b0();\n        /* no return */\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40ced0",
            "funcStartAddr": "0x40ced0",
            "funcEndAddr": "0x40cf4b",
            "decompiledFuncCode": "int64_t sub_40ced0(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_40cf50(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_40cf50",
            "funcStartAddr": "0x40cf50",
            "funcEndAddr": "0x40cf90",
            "decompiledFuncCode": "int64_t sub_40cf50(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_40cf90(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_40cf90",
            "funcStartAddr": "0x40cf90",
            "funcEndAddr": "0x40cfe7",
            "decompiledFuncCode": "off64_t sub_40cf90(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_40cff0",
            "funcStartAddr": "0x40cff0",
            "funcEndAddr": "0x40d107",
            "decompiledFuncCode": "int64_t sub_40cff0(int64_t arg1, int64_t arg2, int32_t arg3, int32_t arg4, \n    int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8, int32_t arg9, \n    int32_t arg10)\n{\n    int64_t rbx = arg6;\n    int32_t rax;\n    rax = (arg1 & 3) == 0;\n    int32_t r10_2 = (((arg1 >> 2) + 0x1db) - rax);\n    int32_t rax_1;\n    rax_1 = (arg6 & 3) == 0;\n    int64_t rdi = (arg1 - rbx);\n    int32_t r12_3 = (((rbx >> 2) + 0x1db) - rax_1);\n    int32_t temp0;\n    int32_t temp1;\n    temp0 = HIGHW((r10_2 * 0x51eb851f));\n    temp1 = LOWW((r10_2 * 0x51eb851f));\n    uint64_t rbp_1 = ((temp0 >> 3) - (r10_2 >> 0x1f));\n    int32_t rbp_2 = (rbp_1 - ((r10_2 - ((rbp_1 * 5) * 5)) >> 0x1f));\n    int32_t temp2;\n    int32_t temp3;\n    temp2 = HIGHW((r12_3 * 0x51eb851f));\n    temp3 = LOWW((r12_3 * 0x51eb851f));\n    uint64_t rdx_6 = ((temp2 >> 3) - (r12_3 >> 0x1f));\n    int32_t rdx_7 = (rdx_6 - ((r12_3 - ((rdx_6 * 5) * 5)) >> 0x1f));\n    int64_t rsi_2 = (((arg2 + (rdi * 0x16d)) - arg7) + (((rbp_2 >> 2) - (rdx_7 >> 2)) + ((r10_2 - r12_3) - (rbp_2 - rdx_7))));\n    int64_t rax_25 = ((arg3 + (rsi_2 * 0x18)) - arg8);\n    int64_t rax_27 = ((arg4 + (((rax_25 << 4) - rax_25) << 2)) - arg9);\n    return ((arg5 + (((rax_27 << 4) - rax_27) << 2)) - arg10);\n}\n\n"
        },
        {
            "funcName": "sub_40d110",
            "funcStartAddr": "0x40d110",
            "funcEndAddr": "0x40d1a1",
            "decompiledFuncCode": "int64_t sub_40d110(int64_t arg1, int64_t arg2, int32_t arg3, int32_t arg4, \n    int32_t arg5, int64_t arg6, int32_t* arg7)\n{\n    if (arg7 != 0)\n    {\n        int64_t rax_1 = sub_40cff0(arg1, arg2, arg3, arg4, arg5, arg7[5], arg7[7], arg7[2], arg7[1], *arg7);\n        int64_t rax_2 = (rax_1 + arg6);\n        if ((!(rax_1 + arg6)))\n        {\n            return rax_2;\n        }\n    }\n    if (arg6 >= 0)\n    {\n        int64_t rdx = (arg6 - 1);\n        int64_t rax_3 = 0x7fffffffffffffff;\n        if (arg6 > 0x7ffffffffffffffd)\n        {\n            rax_3 = rdx;\n        }\n        return rax_3;\n    }\n    if (arg6 >= -0x7ffffffffffffffe)\n    {\n        return -0x8000000000000000;\n    }\n    return (arg6 + 1);\n}\n\n"
        },
        {
            "funcName": "sub_40d1b0",
            "funcStartAddr": "0x40d1b0",
            "funcEndAddr": "0x40d26f",
            "decompiledFuncCode": "int64_t sub_40d1b0(int64_t arg1, int64_t* arg2, int64_t arg3)\n{\n    int64_t var_30 = *arg2;\n    int64_t rax_1 = arg1(&var_30, arg3);\n    if (rax_1 == 0)\n    {\n        int64_t r14_1 = *arg2;\n        int64_t rbp_1 = 0;\n        if (r14_1 != 0)\n        {\n            while (true)\n            {\n                int64_t rbx_1 = (((rbp_1 | r14_1) & 1) + ((r14_1 >> 1) + (rbp_1 >> 1)));\n                if ((rbp_1 != rbx_1 && r14_1 != rbx_1))\n                {\n                    break;\n                }\n                var_30 = rbx_1;\n                rax_1 = arg1(&var_30, arg3);\n                if (rax_1 == 0)\n                {\n                    r14_1 = rbx_1;\n                    rbx_1 = rbp_1;\n                }\n                rbp_1 = rbx_1;\n            }\n            if ((rax_1 == 0 && rbp_1 != 0))\n            {\n                var_30 = rbp_1;\n                return arg1(&var_30, arg3);\n            }\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40d270",
            "funcStartAddr": "0x40d270",
            "funcEndAddr": "0x40d6aa",
            "decompiledFuncCode": "int64_t sub_40d270(int32_t* arg1, int64_t arg2, int64_t* arg3)\n{\n    int32_t rax = *arg1;\n    int64_t rsi = arg1[3];\n    int32_t rax_1 = arg1[1];\n    int32_t rax_2 = arg1[2];\n    int32_t rdi = arg1[4];\n    int32_t rax_3 = arg1[8];\n    int32_t temp0;\n    int32_t temp1;\n    temp0 = HIGHW((rdi * 0x2aaaaaab));\n    temp1 = LOWW((rdi * 0x2aaaaaab));\n    int32_t rdx_2 = 0;\n    uint64_t rcx_1 = ((temp0 >> 1) - (rdi >> 0x1f));\n    int32_t rdi_1 = (rdi - ((rcx_1 * 3) << 2));\n    int64_t rbx_3 = ((rcx_1 - (rdi_1 >> 0x1f)) + arg1[5]);\n    if ((rbx_3 & 3) == 0)\n    {\n        int64_t rax_13;\n        int64_t rdx_3;\n        rdx_3 = HIGHD((rbx_3 * -0x5c28f5c28f5c28f5));\n        rax_13 = LOWD((rbx_3 * -0x5c28f5c28f5c28f5));\n        int64_t rax_16 = (((rdx_3 + rbx_3) >> 6) - (rbx_3 >> 0x3f));\n        rdx_2 = 1;\n        if (rbx_3 == (rax_16 * 0x64))\n        {\n            rdx_2 = (rax_16 & 3) == 1;\n        }\n    }\n    int32_t r12 = 0x3b;\n    int32_t rbp = 6;\n    int64_t rax_20 = rdx_2;\n    int64_t rcx_5 = ((rdi_1 + ((rdi_1 >> 0x1f) & 0xc)) + (rax_20 + (((rax_20 + rax_20) + rax_20) << 2)));\n    int64_t rsi_1 = (rsi + (*((rcx_5 + rcx_5) + 0x413900) - 1));\n    if (rax <= 0x3b)\n    {\n        r12 = rax;\n    }\n    int32_t rax_26 = 0;\n    if (r12 >= 0)\n    {\n        rax_26 = r12;\n    }\n    uint64_t rax_30 = (-*arg3);\n    int32_t var_d4 = rax_30;\n    int64_t rax_31 = sub_40cff0(rbx_3, rsi_1, rax_2, rax_1, rax_26, 0x46, 0, 0, 0, rax_30);\n    int64_t r13 = rax_31;\n    int64_t var_c8 = rax_31;\n    int32_t r12_1 = 0;\n    int64_t r14_1 = r13;\n    int64_t rax_33;\n    while (true)\n    {\n        int64_t r15_1 = var_c8;\n        int32_t var_b8;\n        rax_33 = sub_40d110(rbx_3, rsi_1, rax_2, rax_1, rax_26, r15_1, sub_40d1b0(arg2, &var_c8, &var_b8));\n        int32_t var_98;\n        void* var_78;\n        int32_t* r14_2;\n        if (r15_1 != rax_33)\n        {\n            if (r15_1 != r13)\n            {\n            label_40d3d8:\n                int32_t temp2_1 = rbp;\n                rbp = (rbp - 1);\n                if (temp2_1 != 1)\n                {\n                    var_c8 = rax_33;\n                    r13 = r14_1;\n                    r14_1 = r15_1;\n                    r12_1 = var_98 != 0;\n                    continue;\n                }\n            }\n            else\n            {\n                if (r15_1 == r14_1)\n                {\n                    goto label_40d3d8;\n                }\n                bool cond:2_1 = var_98 != 0;\n                if (var_98 >= 0)\n                {\n                    bool cond:3_1 = rax_3 != 0;\n                    if (rax_3 < 0)\n                    {\n                        if (cond:2_1 < r12_1)\n                        {\n                            goto label_40d3d8;\n                        }\n                        goto label_40d477;\n                    }\n                    if (cond:3_1 == cond:2_1)\n                    {\n                        goto label_40d3d8;\n                    }\n                    goto label_40d477;\n                }\n            label_40d477:\n                r14_2 = arg1;\n                rax_33 = r15_1;\n            label_40d490:\n                int32_t rsi_5 = var_b8;\n                *arg3 = (rax_33 - (var_d4 + rax_31));\n                int64_t rax_36;\n                void* rdx_19;\n                if (rsi_5 != rax)\n                {\n                    int64_t* rcx_11;\n                    rcx_11 = rax <= 0;\n                    int64_t rdx_16;\n                    rdx_16 = rsi_5 == 0x3c;\n                    rdx_19 = (rax + ((rdx_16 & rcx_11) - rax_26));\n                    void* rax_34 = (rax_33 + rdx_19);\n                    var_c8 = rax_34;\n                    if ((!(rax_33 + rdx_19)))\n                    {\n                        var_78 = rax_34;\n                        rax_36 = arg2(&var_78, &var_b8);\n                        if (rax_36 != 0)\n                        {\n                            rax_33 = var_c8;\n                        }\n                    }\n                }\n                if ((((rsi_5 != rax && (!(rax_33 + rdx_19))) && rax_36 != 0) || rsi_5 == rax))\n                {\n                    *r14_2 = var_b8;\n                    int128_t var_a8;\n                    *(r14_2 + 0x10) = var_a8;\n                    *(r14_2 + 0x20) = var_98;\n                    int64_t var_88;\n                    *(r14_2 + 0x30) = var_88;\n                    break;\n                }\n            }\n            rax_33 = -1;\n            break;\n        }\n        r14_2 = arg1;\n        int32_t var_f0;\n        var_f0 = rax_3 == 0;\n        char rbp_1 = var_f0;\n        if ((rbp_1 != var_98 == 0 && (rax_3 >= 0 && var_98 >= 0)))\n        {\n            int32_t r13_1 = 0x92c70;\n            var_f0 = rbx_3;\n            do\n            {\n                int32_t rbx_4 = (r13_1 + r13_1);\n                int32_t r12_3 = 2;\n                int32_t r15_3 = (-r13_1);\n                int64_t rdx_23 = r15_3;\n                int64_t var_c0 = (rdx_23 + rax_33);\n                if ((!(rdx_23 + rax_33)))\n                {\n                    goto label_40d630;\n                }\n                while (true)\n                {\n                    r15_3 = (r15_3 + rbx_4);\n                    if (r12_3 == 1)\n                    {\n                        break;\n                    }\n                    int64_t rdx_25 = r15_3;\n                    r12_3 = 1;\n                    var_c0 = (rdx_25 + rax_33);\n                    if ((!(rdx_25 + rax_33)))\n                    {\n                    label_40d630:\n                        sub_40d1b0(arg2, &var_c0, &var_78);\n                        int32_t var_58;\n                        if (rbp_1 == var_58 == 0)\n                        {\n                            break;\n                        }\n                        if (var_58 < 0)\n                        {\n                            break;\n                        }\n                        rax_33 = var_c8;\n                    }\n                }\n                if (r12_3 != 1)\n                {\n                    var_c8 = sub_40d110(var_f0, rsi_1, rax_2, rax_1, rax_26, var_c0, &var_78);\n                    sub_40d1b0(arg2, &var_c8, &var_b8);\n                    rax_33 = var_c8;\n                    break;\n                }\n                r13_1 = (r13_1 + 0x92c70);\n            } while (r13_1 != 0x100dc400);\n        }\n        goto label_40d490;\n    }\n    return rax_33;\n}\n\n"
        },
        {
            "funcName": "sub_40d6b0",
            "funcStartAddr": "0x40d6b0",
            "funcEndAddr": "0x40d6cc",
            "decompiledFuncCode": "int64_t sub_40d6b0(int32_t* arg1)\n{\n    tzset();\n    /* tailcall */\n    return sub_40d270(arg1, 0x401e50, &data_617628);\n}\n\n"
        },
        {
            "funcName": "sub_40d6d0",
            "funcStartAddr": "0x40d6d0",
            "funcEndAddr": "0x40d729",
            "decompiledFuncCode": "uint64_t sub_40d6d0(int64_t* arg1, char* arg2, int64_t arg3)\n{\n    int64_t var_10;\n    int64_t rax;\n    uint16_t x87control;\n    int80_t st0;\n    st0 = sub_40d880(nullptr, &var_10, arg2, arg3, x87control);\n    uint64_t rax_1;\n    if (rax == 0)\n    {\n        rax_1 = 0xffffffff;\n    }\n    else\n    {\n        int64_t rdx_1 = var_10;\n        if (rdx_1 > 0x7fffffff)\n        {\n            free(rax);\n            *__errno_location() = 0x4b;\n            rax_1 = 0xffffffff;\n        }\n        else\n        {\n            *arg1 = rax;\n            rax_1 = rdx_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40d730",
            "funcStartAddr": "0x40d730",
            "funcEndAddr": "0x40d73e",
            "decompiledFuncCode": "int64_t sub_40d730(int32_t arg1)\n{\n    /* tailcall */\n    return sub_40d740(arg1, 0, 3);\n}\n\n"
        },
        {
            "funcName": "sub_40d740",
            "funcStartAddr": "0x40d740",
            "funcEndAddr": "0x40d875",
            "decompiledFuncCode": "uint64_t sub_40d740(int32_t arg1, int32_t arg2, int32_t arg3)\n{\n    void* var_58 = &arg_8;\n    int64_t rcx;\n    int64_t var_30 = rcx;\n    int32_t var_60 = 0x10;\n    void var_48;\n    void* var_50 = &var_48;\n    if (arg2 != 0x406)\n    {\n        return fcntl();\n    }\n    int32_t var_60_1 = 0x18;\n    int32_t rax_2;\n    int32_t rax_5;\n    int32_t* rax_15;\n    int32_t rax_17;\n    int32_t rbx;\n    if (data_617630 < 0)\n    {\n        rax_5 = sub_40d740();\n        rbx = rax_5;\n    }\n    else\n    {\n        rax_2 = fcntl();\n        rbx = rax_2;\n        if (rax_2 < 0)\n        {\n            rax_15 = __errno_location();\n            if (*rax_15 == 0x16)\n            {\n                rax_17 = sub_40d740(arg1, 0, arg3);\n                rbx = rax_17;\n                if (rax_17 >= 0)\n                {\n                    data_617630 = 0xffffffff;\n                }\n            }\n        }\n    }\n    if (((((data_617630 >= 0 && rax_2 < 0) && *rax_15 == 0x16) && rax_17 >= 0) || (rax_5 >= 0 && data_617630 == 0xffffffff)))\n    {\n        int32_t rax_7 = fcntl(rbx, 1);\n        int32_t rax_10;\n        if (rax_7 >= 0)\n        {\n            rax_10 = fcntl(rbx, 2, (rax_7 | 1));\n        }\n        if ((rax_7 < 0 || (rax_7 >= 0 && rax_10 == 0xffffffff)))\n        {\n            int32_t* rax_11 = __errno_location();\n            int32_t rdi_2 = rbx;\n            rbx = -1;\n            int32_t r12_1 = *rax_11;\n            close(rdi_2);\n            *rax_11 = r12_1;\n        }\n    }\n    if ((data_617630 >= 0 && (rax_2 >= 0 || (rax_2 < 0 && *rax_15 != 0x16))))\n    {\n        data_617630 = 1;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40d880",
            "funcStartAddr": "0x40237e",
            "funcEndAddr": "0x40f399",
            "decompiledFuncCode": "void sub_40d880(char* arg1, uint64_t* arg2, char* arg3, int64_t arg4, \n    uint16_t arg5 @ x87control)\n{\n    int64_t rbp;\n    int64_t __saved_rbp = rbp;\n    int64_t r15;\n    int64_t __saved_r15 = r15;\n    int64_t r14;\n    int64_t __saved_r14 = r14;\n    int64_t r13;\n    int64_t __saved_r13 = r13;\n    int64_t r12;\n    int64_t __saved_r12 = r12;\n    int64_t rbx;\n    int64_t __saved_rbx = rbx;\n    void var_6f8;\n    void* rsp_1 = &var_6f8;\n    void var_678;\n    int64_t var_588;\n    if (sub_40f5c0(arg3, &var_588, &var_678) >= 0)\n    {\n        char* var_670;\n        void var_668;\n        int64_t* var_580;\n        void var_568;\n        if (sub_40f3a0(arg4, &var_678) >= 0)\n        {\n            int64_t var_578;\n            int64_t rax_3 = (var_578 + 7);\n            if (rax_3 <= 6)\n            {\n                rax_3 = -1;\n            }\n            int64_t var_570;\n            int64_t rax_4 = (rax_3 + var_570);\n            char* var_6a8;\n            int64_t rcx;\n            char* r8_1;\n            if ((rax_3 + var_570) >= rax_3)\n            {\n                size_t rdi_3 = (rax_4 + 6);\n                if (rax_4 >= -6)\n                {\n                    goto label_40dfa5;\n                }\n                char* var_6e0_1;\n                char* var_6b0_1;\n                int32_t* rdx_1;\n                if (rdi_3 <= 0xf9f)\n                {\n                    var_6e0_1 = nullptr;\n                    rsp_1 = (&var_6f8 - ((rax_4 + 0x1d) & 0xfffffffffffffff0));\n                    var_6b0_1 = ((rsp_1 + 0xf) & 0xfffffffffffffff0);\n                }\n                else\n                {\n                    if (rdi_3 == -1)\n                    {\n                        goto label_40dfa5;\n                    }\n                    char* rax_5;\n                    rax_5 = malloc(rdi_3);\n                    var_6b0_1 = rax_5;\n                    if (rax_5 == 0)\n                    {\n                        goto label_40dfa5;\n                    }\n                    var_6e0_1 = rax_5;\n                }\n                size_t r12_1 = 0;\n                if (arg1 != 0)\n                {\n                    r12_1 = *arg2;\n                }\n                int64_t* r14_1 = var_580;\n                r8_1 = arg3;\n                char* rbx_2 = arg1;\n                int64_t var_6c0_1 = 0;\n                uint64_t r15_2 = 0;\n                rcx = *r14_1;\n                void* r13_1;\n                if (rcx != r8_1)\n                {\n                    while (true)\n                    {\n                        void* rcx_1 = (rcx - r8_1);\n                        void* rax_8 = (r15_2 + rcx_1);\n                        r13_1 = rax_8;\n                        int32_t var_698;\n                        char* r15_7;\n                        if ((r15_2 + rcx_1) < r15_2)\n                        {\n                            if (r12_1 != -1)\n                            {\n                            label_40de75:\n                                r15_7 = rbx_2;\n                                var_6a8 = __errno_location();\n                            }\n                            else\n                            {\n                                r13_1 = ffffffffffffffff;\n                            label_40daf3:\n                                memcpy(&rbx_2[r15_2], r8_1, rcx_1);\n                            label_40daff:\n                                if (var_588 == var_6c0_1)\n                                {\n                                    uint64_t r15_11 = r13_1;\n                                    size_t r14_3 = (r13_1 + 1);\n                                    if (r13_1 >= -1)\n                                    {\n                                        if (r12_1 != -1)\n                                        {\n                                            goto label_40de75;\n                                        }\n                                    }\n                                    else if (r12_1 < r14_3)\n                                    {\n                                        bool cond:2_1 = r12_1 < 0;\n                                        if ((r12_1 == 0 && r14_3 <= 0xc))\n                                        {\n                                            r12_1 = 0xc;\n                                        label_40ec55:\n                                            r13_1 = rbx_2 == arg1;\n                                            if ((rbx_2 == 0 || (rbx_2 != 0 && r13_1 != 0)))\n                                            {\n                                                char* rax_150 = malloc(r12_1);\n                                                if (rax_150 == 0)\n                                                {\n                                                    goto label_40de75;\n                                                }\n                                                if ((r15_11 == 0 || (r15_11 != 0 && r13_1 == 0)))\n                                                {\n                                                    rbx_2 = rax_150;\n                                                }\n                                                if ((r15_11 != 0 && r13_1 != 0))\n                                                {\n                                                    rbx_2 = memcpy(rax_150, rbx_2, r15_11);\n                                                }\n                                            }\n                                            if ((rbx_2 != 0 && r13_1 == 0))\n                                            {\n                                                char* rax_126 = realloc(rbx_2, r12_1);\n                                                if (rax_126 == 0)\n                                                {\n                                                    goto label_40e08a;\n                                                }\n                                                rbx_2 = rax_126;\n                                            }\n                                        }\n                                        if (r12_1 != 0)\n                                        {\n                                            if (cond:2_1)\n                                            {\n                                                goto label_40de75;\n                                            }\n                                            r12_1 = (r12_1 + r12_1);\n                                            if (r12_1 >= r14_3)\n                                            {\n                                                goto label_40ec55;\n                                            }\n                                        }\n                                        if (((r12_1 == 0 && r14_3 > 0xc) || r12_1 != 0))\n                                        {\n                                            if (r14_3 == -1)\n                                            {\n                                                goto label_40de75;\n                                            }\n                                            r12_1 = r14_3;\n                                            goto label_40ec55;\n                                        }\n                                    }\n                                    rbx_2[r15_11] = 0;\n                                    if ((r12_1 > r14_3 && rbx_2 != arg1))\n                                    {\n                                        realloc(rbx_2, r14_3);\n                                    }\n                                    if (var_6e0_1 != 0)\n                                    {\n                                        free(var_6e0_1);\n                                    }\n                                    if (var_580 != &var_568)\n                                    {\n                                        free(var_580);\n                                    }\n                                    if (var_670 != &var_668)\n                                    {\n                                        free(var_670);\n                                    }\n                                    *arg2 = r15_11;\n                                    goto label_40df01;\n                                }\n                                char r15_3 = r14_1[9];\n                                int64_t rax_17 = r14_1[0xa];\n                                if (r15_3 == 0x25)\n                                {\n                                    if (rax_17 != -1)\n                                    {\n                                    label_40e5ac:\n                                        abort();\n                                        /* no return */\n                                    }\n                                    uint64_t rax_47 = (r13_1 + 1);\n                                    r15_2 = rax_47;\n                                    if (r13_1 < -1)\n                                    {\n                                        if (r12_1 >= rax_47)\n                                        {\n                                            goto label_40df72;\n                                        }\n                                        bool cond:4_1 = r12_1 < 0;\n                                        if (r12_1 != 0)\n                                        {\n                                            if (cond:4_1)\n                                            {\n                                                goto label_40de75;\n                                            }\n                                            r12_1 = (r12_1 + r12_1);\n                                            if (r12_1 >= rax_47)\n                                            {\n                                                goto label_40df47;\n                                            }\n                                        }\n                                        else if (rax_47 <= 0xc)\n                                        {\n                                            r12_1 = 0xc;\n                                        label_40df47:\n                                            rdx_1 = rbx_2 == arg1;\n                                            if (rbx_2 == 0)\n                                            {\n                                            label_40e763:\n                                                var_698 = rdx_1;\n                                                char* rax_107 = malloc(r12_1);\n                                                rdx_1 = var_698;\n                                                if (rax_107 == 0)\n                                                {\n                                                    goto label_40de75;\n                                                }\n                                                if ((r13_1 == 0 || (r13_1 != 0 && rdx_1 == 0)))\n                                                {\n                                                    rbx_2 = rax_107;\n                                                }\n                                                if ((r13_1 != 0 && rdx_1 != 0))\n                                                {\n                                                    char* rax_108;\n                                                    rax_108 = memcpy(rax_107, rbx_2, r13_1);\n                                                    rbx_2 = rax_108;\n                                                }\n                                                goto label_40df72;\n                                            }\n                                            if (rdx_1 != 0)\n                                            {\n                                                goto label_40e763;\n                                            }\n                                            char* rax_48;\n                                            rax_48 = realloc(rbx_2, r12_1);\n                                            if (rax_48 == 0)\n                                            {\n                                                goto label_40e08a;\n                                            }\n                                            rbx_2 = rax_48;\n                                            goto label_40df72;\n                                        }\n                                        if (rax_47 == -1)\n                                        {\n                                            goto label_40de75;\n                                        }\n                                        r12_1 = rax_47;\n                                        goto label_40df47;\n                                    }\n                                    if (r12_1 != -1)\n                                    {\n                                        goto label_40de75;\n                                    }\n                                    r15_2 = -1;\n                                label_40df72:\n                                    *(rbx_2 + r13_1) = 0x25;\n                                label_40df77:\n                                    r8_1 = r14_1[1];\n                                    r14_1 = &r14_1[0xb];\n                                    rcx = *r14_1;\n                                    var_6c0_1 = (var_6c0_1 + 1);\n                                    if (rcx == r8_1)\n                                    {\n                                        break;\n                                    }\n                                    continue;\n                                }\n                                else\n                                {\n                                    if (rax_17 == -1)\n                                    {\n                                        goto label_40e5ac;\n                                    }\n                                    rdx_1 = &var_670[(rax_17 << 5)];\n                                    int32_t rax_19 = *rdx_1;\n                                    if (r15_3 == 0x6e)\n                                    {\n                                        uint64_t rax_50 = (rax_19 - 0x12);\n                                        if (rax_50 > 4)\n                                        {\n                                        label_40237e:\n                                            abort();\n                                            /* no return */\n                                        }\n                                        switch (rax_50)\n                                        {\n                                            case 0:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                            case 1:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                            case 2:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                            case 3:\n                                            case 4:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                        }\n                                        goto label_40df77;\n                                    }\n                                    char rax_21 = (r15_3 & 0xdf);\n                                    int64_t var_6c8;\n                                    char* var_6b8;\n                                    int16_t var_680;\n                                    if (((rax_21 - 0x45) > 2 && rax_21 != 0x41))\n                                    {\n                                    label_40db87:\n                                        char rax_22 = r14_1[2];\n                                        void* r15_4 = &var_6b0_1[1];\n                                        *var_6b0_1 = 0x25;\n                                        if ((rax_22 & 1) != 0)\n                                        {\n                                            var_6b0_1[1] = 0x27;\n                                            r15_4 = &var_6b0_1[2];\n                                        }\n                                        if ((rax_22 & 2) != 0)\n                                        {\n                                            *r15_4 = 0x2d;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 4) != 0)\n                                        {\n                                            *r15_4 = 0x2b;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 8) != 0)\n                                        {\n                                            *r15_4 = 0x20;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 0x10) != 0)\n                                        {\n                                            *r15_4 = 0x23;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 0x40) != 0)\n                                        {\n                                            *r15_4 = 0x49;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 0x20) != 0)\n                                        {\n                                            *r15_4 = 0x30;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        int64_t rsi_6 = r14_1[3];\n                                        int64_t rdx_5 = r14_1[4];\n                                        if (rsi_6 != rdx_5)\n                                        {\n                                            uint64_t rcx_4 = (rdx_5 - rsi_6);\n                                            memcpy(r15_4, rsi_6, rcx_4);\n                                            r15_4 = (r15_4 + rcx_4);\n                                        }\n                                        int64_t rsi_7 = r14_1[6];\n                                        uint64_t rdx_7 = r14_1[7];\n                                        if (rsi_7 != rdx_7)\n                                        {\n                                            uint64_t rcx_7 = (rdx_7 - rsi_7);\n                                            memcpy(r15_4, rsi_7, rcx_7);\n                                            r15_4 = (r15_4 + rcx_7);\n                                        }\n                                        if (rax_19 <= 0x10)\n                                        {\n                                            int32_t rax_23 = (1 << rax_19);\n                                            if ((rax_23 & 0x14180) == 0)\n                                            {\n                                                if ((*rax_23[1] & 0x10) != 0)\n                                                {\n                                                    *r15_4 = 0x4c;\n                                                    r15_4 = (r15_4 + 1);\n                                                }\n                                                if (((*rax_23[1] & 0x10) == 0 && (*rax_23[1] & 6) != 0))\n                                                {\n                                                    *r15_4 = 0x6c;\n                                                    r15_4 = (r15_4 + 1);\n                                                }\n                                            }\n                                            if (((((rax_23 & 0x14180) == 0 && (*rax_23[1] & 0x10) == 0) && (*rax_23[1] & 6) != 0) || (rax_23 & 0x14180) != 0))\n                                            {\n                                                *r15_4 = 0x6c;\n                                                r15_4 = (r15_4 + 1);\n                                            }\n                                        }\n                                        char rax_24 = r14_1[9];\n                                        *(r15_4 + 1) = 0;\n                                        *r15_4 = rax_24;\n                                        int64_t rax_25 = r14_1[5];\n                                        if (rax_25 != -1)\n                                        {\n                                            void* rax_27 = &var_670[(rax_25 << 5)];\n                                            if (*rax_27 != 5)\n                                            {\n                                                goto label_40e5ac;\n                                            }\n                                            var_6b8 = 1;\n                                            var_680 = *(rax_27 + 0x10);\n                                            goto label_40dcde;\n                                        }\n                                        var_6b8 = 0;\n                                    label_40dcde:\n                                        int64_t rax_29 = r14_1[8];\n                                        if (rax_29 == -1)\n                                        {\n                                            goto label_40dd16;\n                                        }\n                                        void* r8_3 = &var_670[(rax_29 << 5)];\n                                        if (*r8_3 != 5)\n                                        {\n                                            goto label_40e5ac;\n                                        }\n                                        uint64_t rax_31 = var_6b8;\n                                        *(&var_680 + (rax_31 << 2)) = *(r8_3 + 0x10);\n                                        var_6b8 = (rax_31 + 1);\n                                    label_40dd16:\n                                        void* rax_34 = (r13_1 + 2);\n                                        char* r11_1;\n                                        if (r13_1 < -2)\n                                        {\n                                            if (r12_1 >= rax_34)\n                                            {\n                                                goto label_40e758;\n                                            }\n                                            bool cond:22_1 = r12_1 < 0;\n                                            if (r12_1 != 0)\n                                            {\n                                                if (cond:22_1)\n                                                {\n                                                    goto label_40de75;\n                                                }\n                                                r12_1 = (r12_1 + r12_1);\n                                                if (r12_1 >= rax_34)\n                                                {\n                                                    goto label_40dd49;\n                                                }\n                                            }\n                                            else if (rax_34 <= 0xc)\n                                            {\n                                                r12_1 = 0xc;\n                                            label_40dd49:\n                                                rdx_7 = rbx_2 == arg1;\n                                                if (rbx_2 == 0)\n                                                {\n                                                label_40e703:\n                                                    var_6a8 = rdx_7;\n                                                    char* rax_105 = malloc(r12_1);\n                                                    char rdx_17 = var_6a8;\n                                                    r11_1 = rax_105;\n                                                    if (rax_105 == 0)\n                                                    {\n                                                        goto label_40de75;\n                                                    }\n                                                    if ((r13_1 != 0 && rdx_17 != 0))\n                                                    {\n                                                        r11_1 = memcpy(rax_105, rbx_2, r13_1);\n                                                    }\n                                                    goto label_40dd74;\n                                                }\n                                                if (rdx_7 != 0)\n                                                {\n                                                    goto label_40e703;\n                                                }\n                                                char* rax_35 = realloc(rbx_2, r12_1);\n                                                r11_1 = rax_35;\n                                                if (rax_35 == 0)\n                                                {\n                                                    goto label_40de75;\n                                                }\n                                                goto label_40dd74;\n                                            }\n                                            if (rax_34 == -1)\n                                            {\n                                                goto label_40de75;\n                                            }\n                                            r12_1 = rax_34;\n                                            goto label_40dd49;\n                                        }\n                                        if (r12_1 != -1)\n                                        {\n                                            goto label_40de75;\n                                        }\n                                    label_40e758:\n                                        r11_1 = rbx_2;\n                                    label_40dd74:\n                                        *(r11_1 + r13_1) = 0;\n                                        int32_t* rax_36 = __errno_location();\n                                        char* r11_2 = r11_1;\n                                        var_6c8 = r15_4;\n                                        var_6a8 = rax_36;\n                                        int32_t rax_37 = *rax_36;\n                                    label_40ddb2:\n                                        void* rbx_3 = 0x7fffffff;\n                                        int32_t var_684 = 0xffffffff;\n                                        void* r15_6 = (r12_1 - r13_1);\n                                        *var_6a8 = 0;\n                                        uint64_t rax_39 = rax_19;\n                                        if (r15_6 <= 0x7fffffff)\n                                        {\n                                            rbx_3 = r15_6;\n                                        }\n                                        if (rax_39 > 0x11)\n                                        {\n                                            goto label_40237e;\n                                        }\n                                        char* var_6d0_1;\n                                        int32_t var_67c;\n                                        int32_t rax_56;\n                                        int32_t rax_58;\n                                        void* rsp_3;\n                                        void* rsp_6;\n                                        void* rsp_10;\n                                        void* rsp_11;\n                                        int64_t rdi_18;\n                                        int32_t* r9_2;\n                                        uint64_t r9_3;\n                                        switch (rax_39)\n                                        {\n                                            case 0:\n                                            {\n                                                goto label_40237e;\n                                            }\n                                            case 1:\n                                            {\n                                                r9_3 = var_670[((r14_1[0xa] << 5) + 0x10)];\n                                                goto label_40e1fb;\n                                            }\n                                            case 2:\n                                            {\n                                                r9_3 = var_670[((r14_1[0xa] << 5) + 0x10)];\n                                                goto label_40e1fb;\n                                            }\n                                            case 3:\n                                            {\n                                                r9_3 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                goto label_40e1fb;\n                                            }\n                                            case 4:\n                                            {\n                                                r9_3 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                goto label_40e1fb;\n                                            }\n                                            case 5:\n                                            case 6:\n                                            case 0xd:\n                                            case 0xe:\n                                            {\n                                                r9_3 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                            label_40e1fb:\n                                                int32_t rax_66 = var_6b8;\n                                                rdi_18 = (r11_2 + r13_1);\n                                                var_6d0_1 = r11_2;\n                                                if (rax_66 == 1)\n                                                {\n                                                    *(rsp_1 - 8) = &var_684;\n                                                    *(rsp_1 - 0x10) = r9_3;\n                                                    rsp_6 = (rsp_1 - 0x10);\n                                                    goto label_40e682;\n                                                }\n                                                if (rax_66 == 2)\n                                                {\n                                                    *(rsp_1 - 0x10) = &var_684;\n                                                    *(rsp_1 - 0x18) = r9_3;\n                                                    rsp_10 = (rsp_1 - 0x18);\n                                                    goto label_40e63c;\n                                                }\n                                                *(rsp_1 - 0x10) = &var_684;\n                                                rsp_6 = (rsp_1 - 0x10);\n                                                goto label_40e242;\n                                            }\n                                            case 7:\n                                            case 8:\n                                            case 9:\n                                            case 0xa:\n                                            case 0xf:\n                                            case 0x10:\n                                            case 0x11:\n                                            {\n                                                rdi_18 = (r11_2 + r13_1);\n                                                r9_2 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                rax_56 = var_6b8;\n                                                var_6d0_1 = r11_2;\n                                                break;\n                                            }\n                                            case 0xb:\n                                            {\n                                                int512_t zmm0;\n                                                zmm0 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                int32_t rax_83 = var_6b8;\n                                                void* rsp_17;\n                                                if (rax_83 == 1)\n                                                {\n                                                    *(rsp_1 - 0x10) = &var_684;\n                                                    rsp_17 = (rsp_1 - 0x10);\n                                                }\n                                                if (rax_83 == 2)\n                                                {\n                                                    *(rsp_1 - 8) = &var_684;\n                                                    *(rsp_1 - 0x10) = var_67c;\n                                                    rsp_17 = (rsp_1 - 0x10);\n                                                }\n                                                if ((rax_83 == 1 || rax_83 == 2))\n                                                {\n                                                    rax_58 = __snprintf_chk();\n                                                    *rsp_17;\n                                                    *(rsp_17 + 8);\n                                                    rsp_1 = (rsp_17 + 0x10);\n                                                }\n                                                if ((rax_83 != 1 && rax_83 != 2))\n                                                {\n                                                    rax_58 = __snprintf_chk();\n                                                }\n                                                goto label_40e110;\n                                            }\n                                            case 0xc:\n                                            {\n                                                rdi_18 = (r11_2 + r13_1);\n                                                var_6d0_1 = r11_2;\n                                                int80_t x87_r7_2 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                int32_t rax_76 = var_6b8;\n                                                if (rax_76 != 1)\n                                                {\n                                                    if (rax_76 == 2)\n                                                    {\n                                                        *(rsp_1 - 0x10) = &var_684;\n                                                        *(rsp_1 - 0x20) = x87_r7_2;\n                                                        *(rsp_1 - 0x30) = var_67c;\n                                                        rax_58 = __snprintf_chk();\n                                                        r11_2 = var_6d0_1;\n                                                        goto label_40e110;\n                                                    }\n                                                    rsp_3 = (rsp_1 - 0x10);\n                                                    r9_2 = &var_684;\n                                                    *rsp_3 = x87_r7_2;\n                                                    goto label_40e102;\n                                                }\n                                                *(rsp_1 - 0x10) = &var_684;\n                                                rsp_11 = (rsp_1 - 0x20);\n                                                *rsp_11 = x87_r7_2;\n                                            label_40e65c:\n                                                rax_58 = __snprintf_chk(rdi_18, rbx_3, 1, -1, var_6b0_1, var_680);\n                                                rsp_1 = (rsp_11 + 0x20);\n                                                r11_2 = var_6d0_1;\n                                            label_40e110:\n                                                rdx_1 = var_684;\n                                                if (rdx_1 >= 0)\n                                                {\n                                                    goto label_40e11e;\n                                                }\n                                                break;\n                                            }\n                                        }\n                                        if (((((((rax_39 == 7 || rax_39 == 8) || rax_39 == 9) || rax_39 == 0xa) || rax_39 == 0xf) || rax_39 == 0x10) || rax_39 == 0x11))\n                                        {\n                                            if (rax_56 != 1)\n                                            {\n                                                if (rax_56 == 2)\n                                                {\n                                                    *(rsp_1 - 0x10) = &var_684;\n                                                    *(rsp_1 - 0x18) = r9_2;\n                                                    rsp_10 = (rsp_1 - 0x18);\n                                                label_40e63c:\n                                                    *(rsp_10 - 8) = var_67c;\n                                                    rsp_11 = (rsp_10 - 8);\n                                                    goto label_40e65c;\n                                                }\n                                                *(rsp_1 - 0x10) = &var_684;\n                                                rsp_3 = (rsp_1 - 0x10);\n                                            label_40e102:\n                                                rax_58 = __snprintf_chk(rdi_18, rbx_3, 1, -1, var_6b0_1, r9_2);\n                                                r11_2 = var_6d0_1;\n                                                *rsp_3;\n                                                *(rsp_3 + 8);\n                                                rsp_1 = (rsp_3 + 0x10);\n                                                goto label_40e110;\n                                            }\n                                            *(rsp_1 - 8) = &var_684;\n                                            *(rsp_1 - 0x10) = r9_2;\n                                            rsp_6 = (rsp_1 - 0x10);\n                                        label_40e682:\n                                            r9_3 = var_680;\n                                        label_40e242:\n                                            rax_58 = __snprintf_chk(rdi_18, rbx_3, 1, -1, var_6b0_1, r9_3);\n                                            rdx_1 = var_684;\n                                            *(rsp_6 + 8);\n                                            rsp_1 = (rsp_6 + 0x10);\n                                            r11_2 = var_6d0_1;\n                                            if (rdx_1 >= 0)\n                                            {\n                                            label_40e11e:\n                                                int64_t rcx_16 = rdx_1;\n                                                if ((rcx_16 < rbx_3 && *(&r11_2[rcx_16] + r13_1) != 0))\n                                                {\n                                                    goto label_40e5ac;\n                                                }\n                                                if (rdx_1 < rax_58)\n                                                {\n                                                label_40e138:\n                                                    var_684 = rax_58;\n                                                    rdx_1 = rax_58;\n                                                }\n                                                if ((rdx_1 + 1) < rbx_3)\n                                                {\n                                                    rbx_2 = r11_2;\n                                                    r15_2 = (rdx_1 + r13_1);\n                                                    *var_6a8 = rax_37;\n                                                    goto label_40df77;\n                                                }\n                                                if (r15_6 > 0x7ffffffe)\n                                                {\n                                                    if ((r11_2 != arg1 && r11_2 != 0))\n                                                    {\n                                                        free(r11_2);\n                                                    }\n                                                    if (var_6e0_1 != 0)\n                                                    {\n                                                        free(var_6e0_1);\n                                                    }\n                                                    if (var_580 != &var_568)\n                                                    {\n                                                        free(var_580);\n                                                    }\n                                                    if (var_670 != &var_668)\n                                                    {\n                                                        free(var_670);\n                                                    }\n                                                    *var_6a8 = 0x4b;\n                                                    break;\n                                                }\n                                                uint64_t rax_60 = (rdx_1 + 2);\n                                                void* rax_61 = (rax_60 + r13_1);\n                                                int64_t rcx_18;\n                                                rcx_18 = (rax_60 + r13_1) < rax_60;\n                                                if (r12_1 >= 0)\n                                                {\n                                                    void* rdx_13 = (r12_1 + r12_1);\n                                                    if (rcx_18 == 0)\n                                                    {\n                                                        if (rdx_13 >= rax_61)\n                                                        {\n                                                            rax_61 = rdx_13;\n                                                        }\n                                                        if (r12_1 >= rax_61)\n                                                        {\n                                                            goto label_40ddb2;\n                                                        }\n                                                        r12_1 = (r12_1 + r12_1);\n                                                        if ((r12_1 < rax_61 && rax_61 != -1))\n                                                        {\n                                                            r12_1 = rax_61;\n                                                        }\n                                                        if (((r12_1 < rax_61 && rax_61 != -1) || r12_1 >= rax_61))\n                                                        {\n                                                            rbx_3 = r11_2 == arg1;\n                                                            if ((r11_2 == 0 || (r11_2 != 0 && rbx_3 != 0)))\n                                                            {\n                                                                char* rax_101 = malloc(r12_1);\n                                                                if (rax_101 != 0)\n                                                                {\n                                                                    if ((r13_1 != 0 && rbx_3 != 0))\n                                                                    {\n                                                                        r11_2 = memcpy(rax_101, r11_2, r13_1);\n                                                                        goto label_40ddb2;\n                                                                    }\n                                                                    r11_2 = rax_101;\n                                                                    goto label_40ddb2;\n                                                                }\n                                                            }\n                                                            if ((r11_2 != 0 && rbx_3 == 0))\n                                                            {\n                                                                char* rax_62 = realloc(r11_2, r12_1);\n                                                                if (rax_62 != 0)\n                                                                {\n                                                                    r11_2 = rax_62;\n                                                                    goto label_40ddb2;\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                                else if (r12_1 == -1)\n                                                {\n                                                    goto label_40ddb2;\n                                                }\n                                                r15_7 = r11_2;\n                                            }\n                                        }\n                                        if ((((((((((rax_39 == 7 || rax_39 == 8) || rax_39 == 9) || rax_39 == 0xa) || rax_39 == 0xf) || rax_39 == 0x10) || rax_39 == 0x11) && rax_56 == 1) && rdx_1 < 0) || rax_39 == 0xc))\n                                        {\n                                            if (*(var_6c8 + 1) != 0)\n                                            {\n                                                *(var_6c8 + 1) = 0;\n                                                goto label_40ddb2;\n                                            }\n                                            if (rax_58 < 0)\n                                            {\n                                                int32_t rbx_4 = *var_6a8;\n                                                if (rbx_4 == 0)\n                                                {\n                                                    rbx_4 = 0x54;\n                                                    if ((r14_1[9] & 0xef) != 0x63)\n                                                    {\n                                                        rbx_4 = 0x16;\n                                                    }\n                                                }\n                                                if ((r11_2 != arg1 && r11_2 != 0))\n                                                {\n                                                    free(r11_2);\n                                                }\n                                                if (var_6e0_1 != 0)\n                                                {\n                                                    free(var_6e0_1);\n                                                }\n                                                if (var_580 != &var_568)\n                                                {\n                                                    free(var_580);\n                                                }\n                                                if (var_670 != &var_668)\n                                                {\n                                                    free(var_670);\n                                                }\n                                                *var_6a8 = rbx_4;\n                                                break;\n                                            }\n                                            goto label_40e138;\n                                        }\n                                    }\n                                    if (((rax_21 - 0x45) <= 2 || ((rax_21 - 0x45) > 2 && rax_21 == 0x41)))\n                                    {\n                                        if (rax_19 != 0xc)\n                                        {\n                                            goto label_40db87;\n                                        }\n                                        long double x87_r7_1 = *(rdx_1 + 0x10);\n                                        if ((!(FCMP_UO(x87_r7_1, x87_r7_1))))\n                                        {\n                                            long double x87_r6_3 = x87_r7_1;\n                                            x87_r7_1 = (x87_r7_1 + x87_r7_1);\n                                            (x87_r6_3 - x87_r7_1);\n                                            bool cond:7_1 = x87_r6_3 != x87_r7_1;\n                                            if ((FCMP_UO(x87_r6_3, x87_r7_1)))\n                                            {\n                                                goto label_40db87;\n                                            }\n                                            if (cond:7_1)\n                                            {\n                                                goto label_40db87;\n                                            }\n                                            goto label_40e00d;\n                                        }\n                                    label_40e00d:\n                                        char* rdx_11 = r14_1[3];\n                                        int64_t rdi_16 = r14_1[4];\n                                        int32_t r11_3 = r14_1[2];\n                                        int64_t r10_1;\n                                        if (rdx_11 == rdi_16)\n                                        {\n                                            r10_1 = 0;\n                                        label_40de00:\n                                            void* rdx_9 = r14_1[6];\n                                            int64_t rcx_10 = r14_1[7];\n                                            int64_t rcx_11;\n                                            int64_t rdx_10;\n                                            if (rdx_9 != rcx_10)\n                                            {\n                                                int64_t rsi_10 = r14_1[8];\n                                                if (rsi_10 == -1)\n                                                {\n                                                    char* rax_139 = (rdx_9 + 1);\n                                                    rdx_10 = 0;\n                                                    if (rcx_10 == rax_139)\n                                                    {\n                                                    label_40f0e4:\n                                                        rcx_11 = 0xc;\n                                                    label_40e4d1:\n                                                        int64_t rax_97 = rcx_11;\n                                                        if (r10_1 >= rcx_11)\n                                                        {\n                                                            rax_97 = r10_1;\n                                                        }\n                                                        size_t rax_98 = (rax_97 + 1);\n                                                        var_698 = rax_98;\n                                                        if (rax_97 >= -1)\n                                                        {\n                                                            goto label_40de75;\n                                                        }\n                                                        void var_2f8;\n                                                        int64_t rcx_21;\n                                                        if (rax_98 <= 0x2bc)\n                                                        {\n                                                            rcx_21 = &var_2f8;\n                                                        }\n                                                        else\n                                                        {\n                                                            var_6b8 = r11_3;\n                                                            var_6a8 = x87_r7_1;\n                                                            if (rax_98 == -1)\n                                                            {\n                                                                goto label_40de75;\n                                                            }\n                                                            int64_t rax_99 = malloc(rax_98);\n                                                            r11_3 = var_6b8;\n                                                            x87_r7_1 = var_6a8;\n                                                            rcx_21 = rax_99;\n                                                            if (rax_99 == 0)\n                                                            {\n                                                                goto label_40de75;\n                                                            }\n                                                        }\n                                                        int64_t r9_6;\n                                                        int64_t r15_9;\n                                                        if ((!(FCMP_UO(x87_r7_1, x87_r7_1))))\n                                                        {\n                                                            uint16_t x87status_1;\n                                                            int16_t temp0_2;\n                                                            temp0_2 = __fnstcw_memmem16(arg5);\n                                                            var_680 = temp0_2;\n                                                            int32_t r8_7 = var_680;\n                                                            int16_t rax_100;\n                                                            *rax_100[1] = (*r8_7[1] | 3);\n                                                            var_680 = rax_100;\n                                                            uint16_t x87control;\n                                                            uint16_t x87status_2;\n                                                            x87control = __fldcw_memmem16(var_680);\n                                                            bool c0_1;\n                                                            bool c1_1;\n                                                            bool c2_1;\n                                                            bool c3_1;\n                                                            c0_1 = __fxam(x87_r7_1);\n                                                            if ((*((((c0_1) ? 1 : 0) << 8) | ((((c1_1) ? 1 : 0) << 9) | ((((c2_1) ? 1 : 0) << 0xa) | ((((c3_1) ? 1 : 0) << 0xe) | 0x3800))))[1] & 2) != 0)\n                                                            {\n                                                                *rcx_21 = 0x2d;\n                                                                x87_r7_1 = (-x87_r7_1);\n                                                                r15_9 = (rcx_21 + 1);\n                                                            }\n                                                            else if ((r11_3 & 4) != 0)\n                                                            {\n                                                                r15_9 = (rcx_21 + 1);\n                                                                *rcx_21 = 0x2b;\n                                                            }\n                                                            else\n                                                            {\n                                                                r15_9 = rcx_21;\n                                                                if ((r11_3 & 8) != 0)\n                                                                {\n                                                                    r15_9 = (rcx_21 + 1);\n                                                                    *rcx_21 = 0x20;\n                                                                }\n                                                            }\n                                                            long double x87_r6_4 = 0;\n                                                            if (x87_r7_1 <= x87_r6_4)\n                                                            {\n                                                                (x87_r7_1 - x87_r6_4);\n                                                                bool cond:14_1 = x87_r7_1 != x87_r6_4;\n                                                                if ((FCMP_UO(x87_r7_1, x87_r6_4)))\n                                                                {\n                                                                    goto label_40e5ac;\n                                                                }\n                                                                if (cond:14_1)\n                                                                {\n                                                                    goto label_40e5ac;\n                                                                }\n                                                                bool rax_118 = (r14_1[9] & 0xdf);\n                                                                int32_t var_6e8;\n                                                                if (rax_118 == 0x46)\n                                                                {\n                                                                    *r15_9 = 0x30;\n                                                                    if ((r11_3 & 0x10) != 0)\n                                                                    {\n                                                                    label_40ef09:\n                                                                        var_6e8 = r10_1;\n                                                                        var_6b8 = r11_3;\n                                                                        r9_6 = (r15_9 + 2);\n                                                                        char rax_137 = *nl_langinfo(0x10000);\n                                                                        r11_3 = var_6b8;\n                                                                        r10_1 = var_6e8;\n                                                                        if (rax_137 == 0)\n                                                                        {\n                                                                            rax_137 = 0x2e;\n                                                                        }\n                                                                        *(r15_9 + 1) = rax_137;\n                                                                        if (rdx_10 != 0)\n                                                                        {\n                                                                            int64_t rsi_34 = ((r15_9 + rdx_10) + 2);\n                                                                            int64_t rax_138 = r9_6;\n                                                                        label_40ef80:\n                                                                            rax_138 = (rax_138 + 1);\n                                                                            *(rax_138 - 1) = 0x30;\n                                                                            if (rax_138 != rsi_34)\n                                                                            {\n                                                                                goto label_40ef80;\n                                                                            }\n                                                                            r9_6 = (r9_6 + rdx_10);\n                                                                        }\n                                                                        goto label_40e9fb;\n                                                                    }\n                                                                    if (rdx_10 != 0)\n                                                                    {\n                                                                        goto label_40ef09;\n                                                                    }\n                                                                label_40e9f7:\n                                                                    r9_6 = (r15_9 + 1);\n                                                                label_40e9fb:\n                                                                    var_680 = r8_7;\n                                                                    uint16_t x87status_3;\n                                                                    arg5 = __fldcw_memmem16(var_680);\n                                                                label_40ea0c:\n                                                                    uint64_t r8_11 = (r9_6 - rcx_21);\n                                                                    if (r10_1 > r8_11)\n                                                                    {\n                                                                        int64_t r10_2 = (r10_1 - r8_11);\n                                                                        int64_t rdi_38 = (r9_6 + r10_2);\n                                                                        r8_11 = (rdi_38 - rcx_21);\n                                                                        if ((r11_3 & 2) == 0)\n                                                                        {\n                                                                            if (((r11_3 & 0x20) == 0 || ((r11_3 & 0x20) != 0 && r15_9 == 0)))\n                                                                            {\n                                                                                int64_t rax_130 = -1;\n                                                                                int64_t rdx_26 = ((rcx_21 - 1) - r9_6);\n                                                                                if (rcx_21 < r9_6)\n                                                                                {\n                                                                                label_40ed45:\n                                                                                    *(rdi_38 + rax_130) = *(r9_6 + rax_130);\n                                                                                    rax_130 = (rax_130 - 1);\n                                                                                    if (rdx_26 != rax_130)\n                                                                                    {\n                                                                                        goto label_40ed45;\n                                                                                    }\n                                                                                    r9_6 = rcx_21;\n                                                                                }\n                                                                                if (r10_2 != 0)\n                                                                                {\n                                                                                    int64_t r10_4 = (r10_2 + r9_6);\n                                                                                label_40ed68:\n                                                                                    r9_6 = (r9_6 + 1);\n                                                                                    *(r9_6 - 1) = 0x20;\n                                                                                    if (r9_6 != r10_4)\n                                                                                    {\n                                                                                        goto label_40ed68;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                            if (((r11_3 & 0x20) != 0 && r15_9 != 0))\n                                                                            {\n                                                                                if (r15_9 >= r9_6)\n                                                                                {\n                                                                                    r15_9 = r9_6;\n                                                                                }\n                                                                                else\n                                                                                {\n                                                                                    int64_t rax_119 = -1;\n                                                                                    int64_t rdx_21 = ((r15_9 - 1) - r9_6);\n                                                                                label_40ea5d:\n                                                                                    *(rdi_38 + rax_119) = *(r9_6 + rax_119);\n                                                                                    rax_119 = (rax_119 - 1);\n                                                                                    if (rax_119 != rdx_21)\n                                                                                    {\n                                                                                        goto label_40ea5d;\n                                                                                    }\n                                                                                }\n                                                                                if (r10_2 != 0)\n                                                                                {\n                                                                                    int64_t r10_3 = (r10_2 + r15_9);\n                                                                                label_40ea78:\n                                                                                    r15_9 = (r15_9 + 1);\n                                                                                    *(r15_9 - 1) = 0x30;\n                                                                                    if (r15_9 != r10_3)\n                                                                                    {\n                                                                                        goto label_40ea78;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                        else if (r10_2 != 0)\n                                                                        {\n                                                                        label_40eed0:\n                                                                            r9_6 = (r9_6 + 1);\n                                                                            *(r9_6 - 1) = 0x20;\n                                                                            if (rdi_38 != r9_6)\n                                                                            {\n                                                                                goto label_40eed0;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                    if (var_698 <= r8_11)\n                                                                    {\n                                                                        goto label_40e5ac;\n                                                                    }\n                                                                    uint64_t rax_121 = (r13_1 + r8_11);\n                                                                    int64_t rsi_24;\n                                                                    rsi_24 = (r13_1 + r8_11) < r13_1;\n                                                                    r15_2 = rax_121;\n                                                                    if ((r12_1 - r13_1) > r8_11)\n                                                                    {\n                                                                        goto label_40eb3a;\n                                                                    }\n                                                                    if (rsi_24 != 0)\n                                                                    {\n                                                                        if (r12_1 != -1)\n                                                                        {\n                                                                            goto label_40de75;\n                                                                        }\n                                                                        goto label_40eb3a;\n                                                                    }\n                                                                    if (r12_1 >= rax_121)\n                                                                    {\n                                                                        goto label_40eb3a;\n                                                                    }\n                                                                    bool cond:21_1 = r12_1 < 0;\n                                                                    if (r12_1 != 0)\n                                                                    {\n                                                                        if (cond:21_1)\n                                                                        {\n                                                                            goto label_40de75;\n                                                                        }\n                                                                        r12_1 = (r12_1 + r12_1);\n                                                                        if (r12_1 >= rax_121)\n                                                                        {\n                                                                            goto label_40eae5;\n                                                                        }\n                                                                    }\n                                                                    else if (rax_121 <= 0xc)\n                                                                    {\n                                                                        r12_1 = 0xc;\n                                                                    label_40eae5:\n                                                                        void* rdx_23;\n                                                                        rdx_23 = rbx_2 == arg1;\n                                                                        if (rbx_2 == 0)\n                                                                        {\n                                                                        label_40ed7e:\n                                                                            var_6b8 = rdx_23;\n                                                                            var_698 = rcx_21;\n                                                                            char* rax_131 = malloc(r12_1);\n                                                                            rcx_21 = var_698;\n                                                                            char rdx_27 = var_6b8;\n                                                                            if (rax_131 == 0)\n                                                                            {\n                                                                                goto label_40de75;\n                                                                            }\n                                                                            if ((r13_1 == 0 || (r13_1 != 0 && rdx_27 == 0)))\n                                                                            {\n                                                                                rbx_2 = rax_131;\n                                                                            }\n                                                                            if ((r13_1 != 0 && rdx_27 != 0))\n                                                                            {\n                                                                                var_698 = rcx_21;\n                                                                                rcx_21 = var_698;\n                                                                                rbx_2 = memcpy(rax_131, rbx_2, r13_1);\n                                                                            }\n                                                                            goto label_40eb3a;\n                                                                        }\n                                                                        if (rdx_23 != 0)\n                                                                        {\n                                                                            goto label_40ed7e;\n                                                                        }\n                                                                        var_6a8 = r8_11;\n                                                                        var_698 = rcx_21;\n                                                                        char* rax_122 = realloc(rbx_2, r12_1);\n                                                                        if (rax_122 == 0)\n                                                                        {\n                                                                            goto label_40de75;\n                                                                        }\n                                                                        rcx_21 = var_698;\n                                                                        r8_11 = var_6a8;\n                                                                        rbx_2 = rax_122;\n                                                                    label_40eb3a:\n                                                                        var_698 = rcx_21;\n                                                                        memcpy((rbx_2 + r13_1), rcx_21, r8_11);\n                                                                        int64_t rcx_25 = var_698;\n                                                                        if (rcx_25 != &var_2f8)\n                                                                        {\n                                                                            free(rcx_25);\n                                                                        }\n                                                                        goto label_40df77;\n                                                                    }\n                                                                    if (rax_121 == -1)\n                                                                    {\n                                                                        goto label_40de75;\n                                                                    }\n                                                                    r12_1 = rax_121;\n                                                                    goto label_40eae5;\n                                                                }\n                                                                if (rax_118 != 0x45)\n                                                                {\n                                                                    int32_t var_6f0;\n                                                                    if (rax_118 == 0x47)\n                                                                    {\n                                                                        *r15_9 = 0x30;\n                                                                        if ((r11_3 & 0x10) == 0)\n                                                                        {\n                                                                            goto label_40e9f7;\n                                                                        }\n                                                                        int64_t r9_8 = (r15_9 + 2);\n                                                                        if (rdx_10 == 0)\n                                                                        {\n                                                                            var_6a8 = r11_3;\n                                                                            r11_3 = var_6a8;\n                                                                            char rax_156 = *nl_langinfo(0x10000);\n                                                                            r9_6 = r9_8;\n                                                                            if (rax_156 == 0)\n                                                                            {\n                                                                                rax_156 = 0x2e;\n                                                                            }\n                                                                            *(r15_9 + 1) = rax_156;\n                                                                        }\n                                                                        else\n                                                                        {\n                                                                            char* rsi_32 = (rdx_10 - 1);\n                                                                            var_6f0 = r10_1;\n                                                                            var_6e8 = r9_8;\n                                                                            var_6c8 = r11_3;\n                                                                            var_6b8 = rdx_10;\n                                                                            char rax_134 = *nl_langinfo(0x10000);\n                                                                            r11_3 = var_6c8;\n                                                                            r9_6 = var_6e8;\n                                                                            r10_1 = var_6f0;\n                                                                            if (rax_134 == 0)\n                                                                            {\n                                                                                rax_134 = 0x2e;\n                                                                            }\n                                                                            *(r15_9 + 1) = rax_134;\n                                                                            if (rsi_32 != 0)\n                                                                            {\n                                                                                void* rdx_30 = &var_6b8[(r15_9 + 1)];\n                                                                                int64_t rax_135 = r9_6;\n                                                                            label_40eeae:\n                                                                                rax_135 = (rax_135 + 1);\n                                                                                *(rax_135 - 1) = 0x30;\n                                                                                if (rax_135 != rdx_30)\n                                                                                {\n                                                                                    goto label_40eeae;\n                                                                                }\n                                                                                r9_6 = &rsi_32[r9_6];\n                                                                            }\n                                                                        }\n                                                                        goto label_40e9fb;\n                                                                    }\n                                                                    if (rax_118 != 0x41)\n                                                                    {\n                                                                        goto label_40e5ac;\n                                                                    }\n                                                                    char* rax_142 = (r15_9 + 2);\n                                                                    *r15_9 = 0x30;\n                                                                    char rax_143 = r14_1[9];\n                                                                    *(r15_9 + 2) = 0x30;\n                                                                    *(r15_9 + 1) = (rax_143 + 0x17);\n                                                                    char* rsi_41;\n                                                                    if ((r11_3 & 0x10) == 0)\n                                                                    {\n                                                                        rsi_41 = (r15_9 + 3);\n                                                                    }\n                                                                    if (((r11_3 & 0x10) != 0 || ((r11_3 & 0x10) == 0 && rdx_10 != 0 != 0)))\n                                                                    {\n                                                                        var_6f0 = r10_1;\n                                                                        var_6e8 = rcx_21;\n                                                                        var_6c8 = r11_3;\n                                                                        rsi_41 = (r15_9 + 4);\n                                                                        char rax_153 = *nl_langinfo(0x10000);\n                                                                        r11_3 = var_6c8;\n                                                                        rcx_21 = var_6e8;\n                                                                        r10_1 = var_6f0;\n                                                                        if (rax_153 == 0)\n                                                                        {\n                                                                            rax_153 = 0x2e;\n                                                                        }\n                                                                        *(r15_9 + 3) = rax_153;\n                                                                        if (rdx_10 != 0)\n                                                                        {\n                                                                            int64_t rdi_53 = ((r15_9 + rdx_10) + 4);\n                                                                            char* rax_154 = rsi_41;\n                                                                        label_40f2f5:\n                                                                            rax_154 = &rax_154[1];\n                                                                            rax_154[-1] = 0x30;\n                                                                            if (rax_154 != rdi_53)\n                                                                            {\n                                                                                goto label_40f2f5;\n                                                                            }\n                                                                            rsi_41 = &rsi_41[rdx_10];\n                                                                        }\n                                                                    }\n                                                                    char rax_145 = r14_1[9];\n                                                                    r9_6 = &rsi_41[3];\n                                                                    *(rsi_41 + 1) = 0x302b;\n                                                                    r15_9 = rax_142;\n                                                                    *rsi_41 = (rax_145 + 0xf);\n                                                                    goto label_40e9fb;\n                                                                }\n                                                                *r15_9 = 0x30;\n                                                                char* rsi_27;\n                                                                if ((r11_3 & 0x10) == 0)\n                                                                {\n                                                                    rsi_27 = (r15_9 + 1);\n                                                                }\n                                                                if (((r11_3 & 0x10) != 0 || ((r11_3 & 0x10) == 0 && rdx_10 != 0 != 0)))\n                                                                {\n                                                                    var_6e8 = r10_1;\n                                                                    var_6b8 = r11_3;\n                                                                    rsi_27 = (r15_9 + 2);\n                                                                    char rax_148 = *nl_langinfo(0x10000);\n                                                                    r11_3 = var_6b8;\n                                                                    r10_1 = var_6e8;\n                                                                    if (rax_148 == 0)\n                                                                    {\n                                                                        rax_148 = 0x2e;\n                                                                    }\n                                                                    *(r15_9 + 1) = rax_148;\n                                                                    if (rdx_10 != 0)\n                                                                    {\n                                                                        int64_t rdi_50 = ((r15_9 + rdx_10) + 2);\n                                                                        char* rax_149 = rsi_27;\n                                                                    label_40f1e0:\n                                                                        rax_149 = &rax_149[1];\n                                                                        rax_149[-1] = 0x30;\n                                                                        if (rax_149 != rdi_50)\n                                                                        {\n                                                                            goto label_40f1e0;\n                                                                        }\n                                                                        rsi_27 = &rsi_27[rdx_10];\n                                                                    }\n                                                                }\n                                                                char rax_123 = r14_1[9];\n                                                                r9_6 = &rsi_27[4];\n                                                                rsi_27[3] = 0x30;\n                                                                *rsi_27 = rax_123;\n                                                                *(rsi_27 + 1) = 0x302b;\n                                                                goto label_40e9fb;\n                                                            }\n                                                            long double x87_r6_7 = (x87_r6_4 + x87_r6_4);\n                                                            (x87_r6_7 - x87_r6_4);\n                                                            bool cond:15_1 = x87_r6_7 != x87_r6_4;\n                                                            if ((!(FCMP_O(x87_r6_7, x87_r6_4))))\n                                                            {\n                                                                goto label_40e5ac;\n                                                            }\n                                                            if (cond:15_1)\n                                                            {\n                                                                goto label_40e5ac;\n                                                            }\n                                                            r9_6 = (r15_9 + 3);\n                                                            if ((r14_1[9] - 0x41) > 0x19)\n                                                            {\n                                                                *(r15_9 + 2) = 0x66;\n                                                                *r15_9 = 0x6e69;\n                                                                r15_9 = 0;\n                                                            }\n                                                            else\n                                                            {\n                                                                *(r15_9 + 2) = 0x46;\n                                                                *r15_9 = 0x4e49;\n                                                                r15_9 = 0;\n                                                            }\n                                                            goto label_40e9fb;\n                                                        }\n                                                        r9_6 = (rcx_21 + 3);\n                                                        if ((r15_3 - 0x41) > 0x19)\n                                                        {\n                                                            *(rcx_21 + 2) = 0x6e;\n                                                            r15_9 = 0;\n                                                            *rcx_21 = 0x616e;\n                                                        }\n                                                        else\n                                                        {\n                                                            *(rcx_21 + 2) = 0x4e;\n                                                            r15_9 = 0;\n                                                            *rcx_21 = 0x414e;\n                                                        }\n                                                        goto label_40ea0c;\n                                                    }\n                                                    char* rsi_36 = rax_139;\n                                                label_40f043:\n                                                    char* rdi_49 = &rsi_36[1];\n                                                    int64_t rax_140 = (*rsi_36 - 0x30);\n                                                    int64_t rsi_39 = -1;\n                                                    if (rdx_10 <= 0x1999999999999999)\n                                                    {\n                                                        int64_t rsi_40 = (rdx_10 * 5);\n                                                        rsi_39 = (rsi_40 + rsi_40);\n                                                    }\n                                                    rsi_36 = rdi_49;\n                                                    rdx_10 = (rax_140 + rsi_39);\n                                                    if ((rax_140 + rsi_39) < rax_140)\n                                                    {\n                                                        if (rcx_10 == rdi_49)\n                                                        {\n                                                            goto label_40de75;\n                                                        }\n                                                    label_40f077:\n                                                        rsi_36 = &rdi_49[1];\n                                                        if (rsi_36[-1] != 0x30)\n                                                        {\n                                                            if (rcx_10 != rsi_36)\n                                                            {\n                                                                rdi_49 = rsi_36;\n                                                                goto label_40f077;\n                                                            }\n                                                            goto label_40de75;\n                                                        }\n                                                        rdx_10 = -1;\n                                                    }\n                                                    if (rcx_10 != rsi_36)\n                                                    {\n                                                        goto label_40f043;\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    void* r8_4 = &var_670[(rsi_10 << 5)];\n                                                    if (*r8_4 != 5)\n                                                    {\n                                                        goto label_40e5ac;\n                                                    }\n                                                    rdx_10 = *(r8_4 + 0x10);\n                                                    if (rdx_10 < 0)\n                                                    {\n                                                        goto label_40e4b0;\n                                                    }\n                                                }\n                                                if (rdx_10 == 0)\n                                                {\n                                                    goto label_40f0e4;\n                                                }\n                                                rcx_11 = (rdx_10 + 0xc);\n                                                if (rdx_10 >= -0xc)\n                                                {\n                                                    goto label_40de75;\n                                                }\n                                                goto label_40e4d1;\n                                            }\n                                        label_40e4b0:\n                                            bool cond:9_1 = rax_21 != 0x41;\n                                            rcx_11 = 0xc;\n                                            if (rax_21 != 0x41)\n                                            {\n                                                rcx_11 = 0x12;\n                                            }\n                                            rdx_10 = 0;\n                                            if (cond:9_1)\n                                            {\n                                                rdx_10 = 6;\n                                            }\n                                            goto label_40e4d1;\n                                        }\n                                        int64_t rcx_12 = r14_1[5];\n                                        if (rcx_12 != -1)\n                                        {\n                                            void* rcx_14 = &var_670[(rcx_12 << 5)];\n                                            if (*rcx_14 != 5)\n                                            {\n                                                goto label_40e5ac;\n                                            }\n                                            r10_1 = *(rcx_14 + 0x10);\n                                            if (r10_1 < 0)\n                                            {\n                                                r11_3 = (r11_3 | 2);\n                                                r10_1 = (-r10_1);\n                                            }\n                                            goto label_40de00;\n                                        }\n                                        r10_1 = 0;\n                                        var_698 = rcx_12;\n                                    label_40efb1:\n                                        char* rsi_35 = &rdx_11[1];\n                                        int64_t r9_10 = -1;\n                                        int64_t rdx_34 = (*rdx_11 - 0x30);\n                                        if (r10_1 <= 0x1999999999999999)\n                                        {\n                                            int64_t r9_11 = (r10_1 * 5);\n                                            r9_10 = (r9_11 + r9_11);\n                                        }\n                                        r10_1 = (rdx_34 + r9_10);\n                                        rdx_11 = rsi_35;\n                                        if ((rdx_34 + r9_10) < rdx_34)\n                                        {\n                                            int64_t rcx_26 = var_698;\n                                            if (rdi_16 != rsi_35)\n                                            {\n                                            label_40eff6:\n                                                rdx_11 = &rdx_11[1];\n                                                if (rdx_11[-1] == 0x30)\n                                                {\n                                                    var_698 = rcx_26;\n                                                    r10_1 = -1;\n                                                }\n                                                else if (rdi_16 != rdx_11)\n                                                {\n                                                    goto label_40eff6;\n                                                }\n                                            }\n                                            if ((rdi_16 == rsi_35 || (rdi_16 != rsi_35 && rdx_11[-1] != 0x30)))\n                                            {\n                                                r10_1 = rcx_26;\n                                            }\n                                        }\n                                        if ((((((rdx_34 + r9_10) < rdx_34 && rdi_16 != rsi_35) && rdx_11[-1] == 0x30) || (rdx_34 + r9_10) >= rdx_34) && rdi_16 != rdx_11))\n                                        {\n                                            goto label_40efb1;\n                                        }\n                                        goto label_40de00;\n                                    }\n                                }\n                            }\n                            if ((r15_7 != arg1 && r15_7 != 0))\n                            {\n                                goto label_40e09b;\n                            }\n                        }\n                        else\n                        {\n                            if (r12_1 >= rax_8)\n                            {\n                                goto label_40daf3;\n                            }\n                            bool cond:0_1 = r12_1 < 0;\n                            if ((r12_1 == 0 && rax_8 <= 0xc))\n                            {\n                                r12_1 = 0xc;\n                                rdx_1 = rbx_2 == arg1;\n                                if (rbx_2 == 0)\n                                {\n                                label_40d9da:\n                                    var_6a8 = rdx_1;\n                                    var_698 = rcx_1;\n                                    char* rax_9 = malloc(r12_1);\n                                    rcx_1 = var_698;\n                                    char rdx_2 = var_6a8;\n                                    if (rax_9 == 0)\n                                    {\n                                        goto label_40de75;\n                                    }\n                                    if ((r15_2 == 0 || (r15_2 != 0 && rdx_2 == 0)))\n                                    {\n                                        rbx_2 = rax_9;\n                                    }\n                                    if ((r15_2 != 0 && rdx_2 != 0))\n                                    {\n                                        var_698 = rcx_1;\n                                        rcx_1 = var_698;\n                                        rbx_2 = memcpy(rax_9, rbx_2, r15_2);\n                                    }\n                                    goto label_40daf3;\n                                }\n                            }\n                            if (r12_1 != 0)\n                            {\n                                if (cond:0_1)\n                                {\n                                    goto label_40de75;\n                                }\n                                r12_1 = (r12_1 + r12_1);\n                                if (r12_1 >= rax_8)\n                                {\n                                    goto label_40daa2;\n                                }\n                            }\n                            if (((r12_1 == 0 && rax_8 > 0xc) || r12_1 != 0))\n                            {\n                                if (rax_8 == -1)\n                                {\n                                    goto label_40de75;\n                                }\n                                r12_1 = rax_8;\n                            label_40daa2:\n                                rdx_1 = rbx_2 == arg1;\n                                if (rbx_2 == 0)\n                                {\n                                    goto label_40d9da;\n                                }\n                            }\n                            if (((((r12_1 == 0 && rax_8 > 0xc) || r12_1 != 0) && rax_8 != -1) || (r12_1 == 0 && rax_8 <= 0xc)))\n                            {\n                                if (rdx_1 != 0)\n                                {\n                                    goto label_40d9da;\n                                }\n                                var_698 = rcx_1;\n                                char* rax_15 = realloc(rbx_2, r12_1);\n                                if (rax_15 != 0)\n                                {\n                                    rcx_1 = var_698;\n                                    rbx_2 = rax_15;\n                                    goto label_40daf3;\n                                }\n                            label_40e08a:\n                                r15_7 = rbx_2;\n                                var_6a8 = __errno_location();\n                            label_40e09b:\n                                free(r15_7);\n                            }\n                        }\n                        if (var_6e0_1 == 0)\n                        {\n                            break;\n                        }\n                        free(var_6e0_1);\n                        break;\n                    }\n                }\n                if ((rcx == r8_1 || (((rcx != r8_1 && (!/* if (rcx == r8_1 || (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && not(unimplemented  {add rax, rcx} && var_6e0_1 == 0) && not(unimplemented  {add rax, rcx})))... */)) && (!(/* if (rcx == r8_1 || (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && not(unimplemented  {add rax, rcx} && var_6e0_1 == 0) && not(unimplemented  {add rax, rcx})))... */ && var_6e0_1 == 0))) && (!/* if (rcx == r8_1 || (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && not(unimplemented  {add rax, rcx} && var_6e0_1 == 0) && not(unimplemented  {add rax, rcx})))... */))))\n                {\n                    r13_1 = r15_2;\n                    goto label_40daff;\n                }\n                if ((((rcx != r8_1 && (!/* if (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && unimplemented  {add rax, rcx} && var_6e0_1 == 0)... */)) && /* if (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && unimplemented  {add rax, rcx} && var_6e0_1 == 0)... */) && var_6e0_1 == 0))\n                {\n                    goto label_40dfa5;\n                }\n            }\n            else\n            {\n            label_40dfa5:\n                var_6a8 = __errno_location();\n            }\n            if (((rax_3 + var_570) < rax_3 || ((((rax_3 + var_570) >= rax_3 && rax_4 < -6) && rcx != r8_1) && /* if (rax_3 + var_570 u< rax_3 || (rax_3 + var_570 u>= rax_3 && rax_4 u< -6 && rcx != r8_1 && unimplemented  {add rax, rcx}))... */)))\n            {\n                if (var_580 != &var_568)\n                {\n                    free(var_580);\n                }\n                if (var_670 == &var_668)\n                {\n                    goto label_40deea;\n                }\n                free(var_670);\n            label_40deea:\n                *var_6a8 = 0xc;\n            }\n        }\n        else\n        {\n            if (var_580 != &var_568)\n            {\n                free(var_580);\n            }\n            if (var_670 != &var_668)\n            {\n                free(var_670);\n            }\n            *__errno_location() = 0x16;\n        }\n    }\nlabel_40df01:\n}\n\n"
        },
        {
            "funcName": "sub_40f3a0",
            "funcStartAddr": "0x40f3a0",
            "funcEndAddr": "0x40f576",
            "decompiledFuncCode": "int64_t sub_40f3a0(int64_t, void* arg2)\n{\n    int32_t* rax = *(arg2 + 8);\n    if (*arg2 == 0)\n    {\n        return 0;\n    }\n    if (*rax > 0x16)\n    {\n        return 0xffffffff;\n    }\n    /* jump -> *((*rax << 3) + &data_413a00) */\n}\n\n"
        },
        {
            "funcName": "sub_40f5c0",
            "funcStartAddr": "0x40f5c0",
            "funcEndAddr": "0x4102c9",
            "decompiledFuncCode": "int64_t sub_40f5c0(char* arg1, int64_t* arg2, int64_t* arg3)\n{\n    void* rcx = &arg2[4];\n    void* rax = &arg3[2];\n    int64_t* r8 = arg2;\n    void* r9 = 7;\n    int64_t r11 = 7;\n    int64_t r13 = 0;\n    *arg2 = 0;\n    arg2[1] = rcx;\n    void* var_60 = rcx;\n    *arg3 = 0;\n    arg3[1] = rax;\n    void* var_70 = nullptr;\n    int64_t var_78 = 0;\n    void* var_68 = nullptr;\n    while (true)\n    {\n        char rax_1 = *arg1;\n        int64_t rax_6;\n        if (rax_1 == 0)\n        {\n            *(rcx + (r13 * 0x58)) = arg1;\n            r8[2] = var_78;\n            r8[3] = var_70;\n            rax_6 = 0;\n        }\n        else\n        {\n            void* rbp_1 = &arg1[1];\n            if (rax_1 != 0x25)\n            {\n                goto label_40f638;\n            }\n            void* r14_1 = ffffffffffffffff;\n            char** r12_1 = (rcx + (r13 * 0x58));\n            *r12_1 = arg1;\n            r12_1[2] = 0;\n            r12_1[3] = 0;\n            r12_1[4] = 0;\n            r12_1[5] = -1;\n            r12_1[6] = 0;\n            r12_1[7] = 0;\n            r12_1[8] = -1;\n            r12_1[0xa] = -1;\n            char rbx_1 = arg1[1];\n            if ((rbx_1 - 0x30) > 9)\n            {\n                goto label_40f706;\n            }\n            void* rax_29 = rbp_1;\n            char rdx_14;\n            do\n            {\n                rax_29 = (rax_29 + 1);\n                rdx_14 = *rax_29;\n            } while ((rdx_14 - 0x30) <= 9);\n            void* r13_1;\n            if (rdx_14 == 0x24)\n            {\n                int64_t rax_64 = 0;\n                void* rcx_16;\n                int64_t rdx_28;\n                int64_t rdi_16;\n                char rsi_21;\n                do\n                {\n                    int64_t rsi_19 = -1;\n                    int64_t rdx_27 = (rbx_1 - 0x30);\n                    if (rax_64 <= 0x1999999999999999)\n                    {\n                        int64_t rsi_20 = (rax_64 * 5);\n                        rsi_19 = (rsi_20 + rsi_20);\n                    }\n                    rcx_16 = rbp_1;\n                    while (true)\n                    {\n                        rbx_1 = *(rbp_1 + 1);\n                        rdx_28 = (rdx_27 + rsi_19);\n                        rdi_16 = (rdx_27 + rsi_19) < rdx_27;\n                        rax_64 = rdx_28;\n                        rbp_1 = (rbp_1 + 1);\n                        rsi_21 = (rbx_1 - 0x30);\n                        if (rdi_16 == 0)\n                        {\n                            break;\n                        }\n                        if (rsi_21 > 9)\n                        {\n                            break;\n                        }\n                        rsi_19 = -1;\n                        rcx_16 = rbp_1;\n                        rdx_27 = (rbx_1 - 0x30);\n                    }\n                    if (rdi_16 != 0)\n                    {\n                        break;\n                    }\n                } while (rsi_21 <= 9);\n                if (rdi_16 != 0)\n                {\n                    goto label_40fd88;\n                }\n                r14_1 = (rdx_28 - 1);\n                if (r14_1 <= -3)\n                {\n                    rbp_1 = (rcx_16 + 2);\n                    rbx_1 = *(rcx_16 + 2);\n                    goto label_40f706;\n                }\n            label_40fd88:\n                r13_1 = arg3[1];\n            }\n            else\n            {\n                r14_1 = ffffffffffffffff;\n            label_40f706:\n                void* rcx_1;\n                while (true)\n                {\n                    rcx_1 = (rbp_1 + 1);\n                    if (rbx_1 == 0x27)\n                    {\n                        r12_1[2] = (r12_1[2] | 1);\n                    }\n                    else if (rbx_1 == 0x2d)\n                    {\n                        r12_1[2] = (r12_1[2] | 2);\n                    }\n                    else if (rbx_1 == 0x2b)\n                    {\n                        r12_1[2] = (r12_1[2] | 4);\n                    }\n                    else if (rbx_1 == 0x20)\n                    {\n                        r12_1[2] = (r12_1[2] | 8);\n                    }\n                    else if (rbx_1 == 0x23)\n                    {\n                        r12_1[2] = (r12_1[2] | 0x10);\n                    }\n                    else if (rbx_1 == 0x30)\n                    {\n                        r12_1[2] = (r12_1[2] | 0x20);\n                    }\n                    else\n                    {\n                        if (rbx_1 != 0x49)\n                        {\n                            break;\n                        }\n                        r12_1[2] = (r12_1[2] | 0x40);\n                    }\n                    rbx_1 = *rcx_1;\n                    rbp_1 = rcx_1;\n                }\n                if (rbx_1 != 0x2a)\n                {\n                    if ((rbx_1 - 0x30) <= 9)\n                    {\n                        r12_1[3] = rbp_1;\n                        if ((*rbp_1 - 0x30) <= 9)\n                        {\n                            void* rcx_15 = rbp_1;\n                            void* rdx_21;\n                            while (true)\n                            {\n                                rdx_21 = (rcx_15 + 1);\n                                if ((*(rcx_15 + 1) - 0x30) > 9)\n                                {\n                                    break;\n                                }\n                                rcx_15 = rdx_21;\n                            }\n                            rcx_1 = (rcx_15 + 2);\n                            int64_t rax_57 = (rdx_21 - rbp_1);\n                            rbp_1 = rdx_21;\n                            if (var_78 >= rax_57)\n                            {\n                                rax_57 = var_78;\n                            }\n                            var_78 = rax_57;\n                        }\n                        r12_1[4] = rbp_1;\n                        rbx_1 = *rbp_1;\n                    }\n                    goto label_40f778;\n                }\n                int64_t rax_12 = 1;\n                r12_1[3] = rbp_1;\n                r12_1[4] = rcx_1;\n                if (var_78 != 0)\n                {\n                    rax_12 = var_78;\n                }\n                var_78 = rax_12;\n                int32_t rax_13 = *(rbp_1 + 1);\n                void* rbx_2;\n                if ((rax_13 - 0x30) <= 9)\n                {\n                    void* rdx_17 = rcx_1;\n                    char rsi_10;\n                    do\n                    {\n                        rdx_17 = (rdx_17 + 1);\n                        rsi_10 = *rdx_17;\n                    } while ((rsi_10 - 0x30) <= 9);\n                    if (rsi_10 == 0x24)\n                    {\n                        void* rsi_11 = nullptr;\n                        void* rdx_20;\n                        int64_t rbp_2;\n                        void* rdi_5;\n                        char rbx_6;\n                        do\n                        {\n                            void* const rdx_18 = ffffffffffffffff;\n                            int64_t rax_43 = (rax_13 - 0x30);\n                            if (rsi_11 <= 0x1999999999999999)\n                            {\n                                void* rdx_19 = (rsi_11 * 5);\n                                rdx_18 = (rdx_19 + rdx_19);\n                            }\n                            rdi_5 = rcx_1;\n                            while (true)\n                            {\n                                rdx_20 = (rdx_18 + rax_43);\n                                rax_13 = *(rcx_1 + 1);\n                                rbp_2 = (rdx_18 + rax_43) < rdx_18;\n                                rsi_11 = rdx_20;\n                                rcx_1 = (rcx_1 + 1);\n                                rbx_6 = (rax_13 - 0x30);\n                                if (rbp_2 == 0)\n                                {\n                                    break;\n                                }\n                                if (rbx_6 > 9)\n                                {\n                                    break;\n                                }\n                                rdx_18 = ffffffffffffffff;\n                                rdi_5 = rcx_1;\n                                rax_43 = (rax_13 - 0x30);\n                            }\n                            if (rbp_2 != 0)\n                            {\n                                break;\n                            }\n                        } while (rbx_6 <= 9);\n                        if (rbp_2 != 0)\n                        {\n                            goto label_40fd88;\n                        }\n                        rbx_2 = (rdx_20 - 1);\n                        if (rbx_2 > -3)\n                        {\n                            goto label_40fd88;\n                        }\n                        r12_1[5] = rbx_2;\n                        rcx_1 = (rdi_5 + 2);\n                        goto label_40f81c;\n                    }\n                }\n                rbx_2 = r12_1[5];\n                if (rbx_2 != -1)\n                {\n                    goto label_40f81c;\n                }\n                void* rax_41 = (var_68 + 1);\n                r12_1[5] = var_68;\n                if (var_68 == -1)\n                {\n                    goto label_40fd88;\n                }\n                rbx_2 = var_68;\n                var_68 = rax_41;\n            label_40f81c:\n                r13_1 = arg3[1];\n                int64_t rdx_4;\n                void* rsi_7;\n                if (r9 <= rbx_2)\n                {\n                    void* r9_1 = (r9 + r9);\n                    void* rax_36 = (rbx_2 + 1);\n                    if (r9_1 <= rbx_2)\n                    {\n                        r9_1 = rax_36;\n                    }\n                    if (r9_1 <= 0x7ffffffffffffff)\n                    {\n                        int64_t rsi_6 = (r9_1 << 5);\n                        if (rax == r13_1)\n                        {\n                            void* rax_63 = malloc(rsi_6);\n                            r9 = r9_1;\n                            if (rax_63 == 0)\n                            {\n                                goto label_40ff79;\n                            }\n                            rdx_4 = *arg3;\n                            rsi_7 = rax;\n                            r13_1 = rax_63;\n                        label_410094:\n                            memcpy(r13_1, rsi_7, (rdx_4 << 5));\n                            rdx_4 = *arg3;\n                        label_40fb4d:\n                            arg3[1] = r13_1;\n                            goto label_40f82c;\n                        }\n                        void* rax_37 = realloc(r13_1, rsi_6);\n                        rsi_7 = arg3[1];\n                        r13_1 = rax_37;\n                        r9 = r9_1;\n                        if (rax_37 != 0)\n                        {\n                            rdx_4 = *arg3;\n                            if (rax == rsi_7)\n                            {\n                                goto label_410094;\n                            }\n                            goto label_40fb4d;\n                        }\n                        goto label_40ff60;\n                    }\n                label_40ff5d:\n                    rsi_7 = r13_1;\n                label_40ff60:\n                    if (rax == rsi_7)\n                    {\n                        goto label_40ff79;\n                    }\n                label_40ff6f:\n                    free(rsi_7);\n                label_40ff79:\n                    int64_t rdi_12 = r8[1];\n                    if (var_60 != rdi_12)\n                    {\n                        free(rdi_12);\n                    }\n                    break;\n                }\n                rdx_4 = *arg3;\n            label_40f82c:\n                if (rdx_4 <= rbx_2)\n                {\n                    do\n                    {\n                        rdx_4 = (rdx_4 + 1);\n                        *((r13_1 + (rdx_4 << 5)) - 0x20) = 0;\n                    } while (rdx_4 <= rbx_2);\n                    *arg3 = rdx_4;\n                    goto label_40f858;\n                }\n            label_40f858:\n                void* rax_16 = (r13_1 + (rbx_2 << 5));\n                int32_t rdx_5 = *rax_16;\n                if (rdx_5 == 0)\n                {\n                    *rax_16 = 5;\n                    rbx_1 = *rcx_1;\n                    rbp_1 = rcx_1;\n                    rcx_1 = (rcx_1 + 1);\n                    if (rbx_1 == 0x2e)\n                    {\n                        goto label_40f880;\n                    }\n                    goto label_40f781;\n                }\n                if (rdx_5 == 5)\n                {\n                    rbx_1 = *rcx_1;\n                    rbp_1 = rcx_1;\n                    rcx_1 = (rcx_1 + 1);\n                label_40f778:\n                    if (rbx_1 != 0x2e)\n                    {\n                        goto label_40f781;\n                    }\n                label_40f880:\n                    bool cond:0_1 = *(rbp_1 + 1) != 0x2a;\n                    r12_1[6] = rbp_1;\n                    if (cond:0_1)\n                    {\n                        void* rax_35;\n                        if ((*(rbp_1 + 1) - 0x30) > 9)\n                        {\n                            rbp_1 = rcx_1;\n                            rax_35 = 1;\n                        }\n                        else\n                        {\n                            do\n                            {\n                                rcx_1 = (rcx_1 + 1);\n                            } while ((*rcx_1 - 0x30) <= 9);\n                            rax_35 = (rcx_1 - rbp_1);\n                            rbp_1 = rcx_1;\n                        }\n                        r12_1[7] = rcx_1;\n                        rbx_1 = *rcx_1;\n                        if (var_70 >= rax_35)\n                        {\n                            rax_35 = var_70;\n                        }\n                        var_70 = rax_35;\n                        goto label_40f781;\n                    }\n                    void* rax_17 = 2;\n                    char* rcx_4 = (rbp_1 + 2);\n                    r12_1[7] = rcx_4;\n                    if (var_70 >= 2)\n                    {\n                        rax_17 = var_70;\n                    }\n                    var_70 = rax_17;\n                    int32_t rax_18 = *(rbp_1 + 2);\n                    void* rbx_4;\n                    if ((rax_18 - 0x30) <= 9)\n                    {\n                        char* rdx_31 = rcx_4;\n                        char rsi_23;\n                        do\n                        {\n                            rdx_31 = &rdx_31[1];\n                            rsi_23 = *rdx_31;\n                        } while ((rsi_23 - 0x30) <= 9);\n                        if (rsi_23 != 0x24)\n                        {\n                            goto label_40f8bf;\n                        }\n                        void* rsi_24 = nullptr;\n                        void* rdx_34;\n                        int64_t rbp_3;\n                        char* rdi_18;\n                        char rbx_7;\n                        do\n                        {\n                            void* const rdx_32 = ffffffffffffffff;\n                            int64_t rax_67 = (rax_18 - 0x30);\n                            if (rsi_24 <= 0x1999999999999999)\n                            {\n                                void* rdx_33 = (rsi_24 * 5);\n                                rdx_32 = (rdx_33 + rdx_33);\n                            }\n                            rdi_18 = rcx_4;\n                            while (true)\n                            {\n                                rdx_34 = (rdx_32 + rax_67);\n                                rbp_3 = (rdx_32 + rax_67) < rdx_32;\n                                rcx_4 = &rcx_4[1];\n                                rax_18 = *rcx_4;\n                                rsi_24 = rdx_34;\n                                rbx_7 = (rax_18 - 0x30);\n                                if (rbp_3 == 0)\n                                {\n                                    break;\n                                }\n                                if (rbx_7 > 9)\n                                {\n                                    break;\n                                }\n                                rdx_32 = ffffffffffffffff;\n                                rdi_18 = rcx_4;\n                                rax_67 = (rax_18 - 0x30);\n                            }\n                            if (rbp_3 != 0)\n                            {\n                                break;\n                            }\n                        } while (rbx_7 <= 9);\n                        if (rbp_3 != 0)\n                        {\n                            goto label_40fd88;\n                        }\n                        rbx_4 = (rdx_34 - 1);\n                        if (rbx_4 > -3)\n                        {\n                            goto label_40fd88;\n                        }\n                        r12_1[8] = rbx_4;\n                        rcx_4 = &rdi_18[2];\n                        goto label_40f8ce;\n                    }\n                label_40f8bf:\n                    rbx_4 = r12_1[8];\n                    if (rbx_4 != -1)\n                    {\n                        goto label_40f8ce;\n                    }\n                    void* rax_65 = (var_68 + 1);\n                    r12_1[8] = var_68;\n                    if (var_68 == -1)\n                    {\n                        goto label_40fd88;\n                    }\n                    rbx_4 = var_68;\n                    var_68 = rax_65;\n                label_40f8ce:\n                    r13_1 = arg3[1];\n                    void* var_58;\n                    int64_t rdx_7;\n                    if (r9 <= rbx_4)\n                    {\n                        void* r9_3 = (r9 + r9);\n                        void* rax_61 = (rbx_4 + 1);\n                        if (r9_3 <= rbx_4)\n                        {\n                            r9_3 = rax_61;\n                        }\n                        if (r9_3 > 0x7ffffffffffffff)\n                        {\n                            goto label_40ff5d;\n                        }\n                        int64_t rsi_18 = (r9_3 << 5);\n                        var_58 = rcx_4;\n                        if (rax == r13_1)\n                        {\n                            void* rax_69 = malloc(rsi_18);\n                            rcx_4 = var_58;\n                            r9 = r9_3;\n                            if (rax_69 == 0)\n                            {\n                                goto label_40ff79;\n                            }\n                            rdx_7 = *arg3;\n                            rsi_7 = rax;\n                            r13_1 = rax_69;\n                        label_410246:\n                            memcpy(r13_1, rsi_7, (rdx_7 << 5));\n                            rdx_7 = *arg3;\n                        label_41002c:\n                            arg3[1] = r13_1;\n                            goto label_40f8de;\n                        }\n                        void* rax_62 = realloc(r13_1, rsi_18);\n                        rsi_7 = arg3[1];\n                        rcx_4 = var_58;\n                        r13_1 = rax_62;\n                        r9 = r9_3;\n                        if (rax_62 != 0)\n                        {\n                            rdx_7 = *arg3;\n                            if (rax == rsi_7)\n                            {\n                                goto label_410246;\n                            }\n                            goto label_41002c;\n                        }\n                        goto label_40ff60;\n                    }\n                    rdx_7 = *arg3;\n                label_40f8de:\n                    if (rdx_7 <= rbx_4)\n                    {\n                        do\n                        {\n                            rdx_7 = (rdx_7 + 1);\n                            *((r13_1 + (rdx_7 << 5)) - 0x20) = 0;\n                        } while (rdx_7 <= rbx_4);\n                        *arg3 = rdx_7;\n                        goto label_40f90b;\n                    }\n                label_40f90b:\n                    void* rax_23 = ((rbx_4 << 5) + r13_1);\n                    int32_t rdx_8 = *rax_23;\n                    if (rdx_8 == 0)\n                    {\n                        *rax_23 = 5;\n                        rbp_1 = rcx_4;\n                        rbx_1 = *rcx_4;\n                    label_40f781:\n                        int32_t rax_11 = 0;\n                        while (true)\n                        {\n                            rbp_1 = (rbp_1 + 1);\n                            if (rbx_1 == 0x68)\n                            {\n                                rax_11 = (rax_11 | (1 << (rax_11 & 1)));\n                            }\n                            else if (rbx_1 == 0x4c)\n                            {\n                                rax_11 = (rax_11 | 4);\n                            }\n                            else\n                            {\n                                if ((rbx_1 != 0x6c && (rbx_1 != 0x6a && ((rbx_1 & 0xdf) != 0x5a && rbx_1 != 0x74))))\n                                {\n                                    break;\n                                }\n                                rax_11 = (rax_11 + 8);\n                            }\n                            rbx_1 = *rbp_1;\n                        }\n                        char rdx_9 = (rbx_1 - 0x25);\n                        if (rdx_9 > 0x53)\n                        {\n                            goto label_40fd88;\n                        }\n                        int32_t rcx_6;\n                        switch (rdx_9)\n                        {\n                            case 0:\n                            {\n                                goto label_40f9b1;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 7:\n                            case 8:\n                            case 9:\n                            case 0xa:\n                            case 0xb:\n                            case 0xc:\n                            case 0xd:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1d:\n                            case 0x1f:\n                            case 0x23:\n                            case 0x24:\n                            case 0x25:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x3b:\n                            case 0x3d:\n                            case 0x46:\n                            case 0x48:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x51:\n                            case 0x52:\n                            {\n                                goto label_40fd88;\n                            }\n                            case 0x1c:\n                            case 0x20:\n                            case 0x21:\n                            case 0x22:\n                            case 0x3c:\n                            case 0x40:\n                            case 0x41:\n                            case 0x42:\n                            {\n                                rcx_6 = 0xc;\n                                if (rax_11 <= 0xf)\n                                {\n                                    int32_t rcx_12;\n                                    rcx_12 = (rax_11 & 4) != 0;\n                                    rcx_6 = (rcx_12 + 0xb);\n                                }\n                                goto label_40f959;\n                            }\n                            case 0x1e:\n                            {\n                                rcx_6 = 0xe;\n                                rbx_1 = 0x63;\n                                goto label_40f959;\n                            }\n                            case 0x2e:\n                            {\n                                rcx_6 = 0x10;\n                                rbx_1 = 0x73;\n                                goto label_40f959;\n                            }\n                            case 0x33:\n                            case 0x4a:\n                            case 0x50:\n                            case 0x53:\n                            {\n                                rcx_6 = 0xa;\n                                if ((rax_11 <= 0xf && (rax_11 & 4) == 0))\n                                {\n                                    rcx_6 = 8;\n                                    if (rax_11 <= 7)\n                                    {\n                                        rcx_6 = 2;\n                                        if ((rax_11 & 2) == 0)\n                                        {\n                                            rcx_6 = (((2 - 2) & 2) + 4);\n                                        }\n                                    }\n                                }\n                                goto label_40f959;\n                            }\n                            case 0x3e:\n                            {\n                                int32_t rcx_8;\n                                rcx_8 = rax_11 > 7;\n                                rcx_6 = (rcx_8 + 0xd);\n                                goto label_40f959;\n                            }\n                            case 0x3f:\n                            case 0x44:\n                            {\n                                rcx_6 = 9;\n                                if ((rax_11 <= 0xf && (rax_11 & 4) == 0))\n                                {\n                                    rcx_6 = 7;\n                                    if (rax_11 <= 7)\n                                    {\n                                        rcx_6 = 1;\n                                        if ((rax_11 & 2) == 0)\n                                        {\n                                            rcx_6 = (((1 - 1) & 2) + 3);\n                                        }\n                                    }\n                                }\n                                goto label_40f959;\n                            }\n                            case 0x49:\n                            {\n                                rcx_6 = 0x16;\n                                if ((rax_11 <= 0xf && (rax_11 & 4) == 0))\n                                {\n                                    rcx_6 = 0x15;\n                                    if (rax_11 <= 7)\n                                    {\n                                        rcx_6 = 0x12;\n                                        if ((rax_11 & 2) == 0)\n                                        {\n                                            int32_t rcx_9;\n                                            rcx_9 = (rax_11 & 1) == 0;\n                                            rcx_6 = (rcx_9 + 0x13);\n                                        }\n                                    }\n                                }\n                                goto label_40f959;\n                            }\n                            case 0x4b:\n                            {\n                                rcx_6 = 0x11;\n                                goto label_40f959;\n                            }\n                            case 0x4e:\n                            {\n                                int32_t rcx_5;\n                                rcx_5 = rax_11 > 7;\n                                rcx_6 = (rcx_5 + 0xf);\n                            label_40f959:\n                                if (r14_1 == -1)\n                                {\n                                    void* rax_51 = (var_68 + 1);\n                                    r12_1[0xa] = var_68;\n                                    if (var_68 == -1)\n                                    {\n                                        goto label_40fd88;\n                                    }\n                                    r14_1 = var_68;\n                                    var_68 = rax_51;\n                                    goto label_40f968;\n                                }\n                                r12_1[0xa] = r14_1;\n                            label_40f968:\n                                r13_1 = arg3[1];\n                                if (r9 > r14_1)\n                                {\n                                    goto label_40f975;\n                                }\n                                void* r9_2 = (r9 + r9);\n                                void* rax_48 = (r14_1 + 1);\n                                if (r9_2 <= r14_1)\n                                {\n                                    r9_2 = rax_48;\n                                }\n                                if (r9_2 > 0x7ffffffffffffff)\n                                {\n                                    goto label_40ff5d;\n                                }\n                                size_t rsi_13 = (r9_2 << 5);\n                                var_58 = rcx_6;\n                                void* rax_58;\n                                if (rax == r13_1)\n                                {\n                                    rax_58 = malloc(rsi_13);\n                                    rcx_6 = var_58;\n                                    r9 = r9_2;\n                                    if (rax_58 == 0)\n                                    {\n                                        goto label_40ff79;\n                                    }\n                                    goto label_40ff19;\n                                }\n                                void* rax_49 = realloc(r13_1, rsi_13);\n                                rcx_6 = var_58;\n                                r13_1 = rax_49;\n                                r9 = r9_2;\n                                if (rax_49 == 0)\n                                {\n                                    goto label_4102b3;\n                                }\n                                if (rax != arg3[1])\n                                {\n                                    goto label_40fe5b;\n                                }\n                                rax_58 = r13_1;\n                                r13_1 = rax;\n                            label_40ff19:\n                                void* rsi_16 = r13_1;\n                                r13_1 = rax_58;\n                                var_58 = rcx_6;\n                                memcpy(rax_58, rsi_16, (*arg3 << 5));\n                                rcx_6 = var_58;\n                            label_40fe5b:\n                                arg3[1] = r13_1;\n                            label_40f975:\n                                int64_t rax_24 = *arg3;\n                                if (rax_24 <= r14_1)\n                                {\n                                    do\n                                    {\n                                        rax_24 = (rax_24 + 1);\n                                        *((r13_1 + (rax_24 << 5)) - 0x20) = 0;\n                                    } while (rax_24 <= r14_1);\n                                    *arg3 = rax_24;\n                                }\n                                void* rax_25 = (r13_1 + (r14_1 << 5));\n                                int32_t rdx_13 = *rax_25;\n                                if (rdx_13 == 0)\n                                {\n                                    *rax_25 = rcx_6;\n                                label_40f9b1:\n                                    r12_1[9] = rbx_1;\n                                    int64_t rax_26 = *r8;\n                                    r12_1[1] = rbp_1;\n                                    r13 = (rax_26 + 1);\n                                    *r8 = r13;\n                                    if (r11 > r13)\n                                    {\n                                        rcx = r8[1];\n                                    label_40f638:\n                                        arg1 = rbp_1;\n                                        continue;\n                                    }\n                                    else\n                                    {\n                                        if (r11 >= 0)\n                                        {\n                                            int64_t rbx_5 = (r11 + r11);\n                                            if (rbx_5 > 0x2e8ba2e8ba2e8ba)\n                                            {\n                                                goto label_4102b3;\n                                            }\n                                            int64_t r12_2 = r8[1];\n                                            int64_t rsi_3 = (r11 * 0xb0);\n                                            if (var_60 == r12_2)\n                                            {\n                                                void* rax_38 = malloc(rsi_3);\n                                                rcx = rax_38;\n                                                if (rax_38 != 0)\n                                                {\n                                                label_40fba8:\n                                                    rcx = memcpy(rcx, r12_2, (r13 * 0x58));\n                                                    r13 = *r8;\n                                                label_40fa4f:\n                                                    r8[1] = rcx;\n                                                    r11 = rbx_5;\n                                                    goto label_40f638;\n                                                }\n                                                rsi_7 = arg3[1];\n                                                if (rax == rsi_7)\n                                                {\n                                                    break;\n                                                }\n                                                goto label_40ff6f;\n                                            }\n                                            void* rax_28 = realloc(r12_2, rsi_3);\n                                            rcx = rax_28;\n                                            if (rax_28 == 0)\n                                            {\n                                                goto label_4102b3;\n                                            }\n                                            r12_2 = r8[1];\n                                            r13 = *r8;\n                                            if (var_60 == r12_2)\n                                            {\n                                                goto label_40fba8;\n                                            }\n                                            goto label_40fa4f;\n                                        }\n                                    label_4102b3:\n                                        rsi_7 = arg3[1];\n                                    }\n                                    goto label_40ff60;\n                                }\n                                if (rdx_13 == rcx_6)\n                                {\n                                    goto label_40f9b1;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                    else if (rdx_8 == 5)\n                    {\n                        rbx_1 = *rcx_4;\n                        rbp_1 = rcx_4;\n                        goto label_40f781;\n                    }\n                }\n            }\n            if (rax == r13_1)\n            {\n                goto label_40fda5;\n            }\n            free(r13_1);\n        label_40fda5:\n            int64_t rdi_7 = r8[1];\n            if (var_60 != rdi_7)\n            {\n                free(rdi_7);\n            }\n            *__errno_location() = 0x16;\n            rax_6 = 0xffffffff;\n        }\n        return rax_6;\n    }\n    *__errno_location() = 0xc;\n    return 0xffffffff;\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x4102d0",
            "funcEndAddr": "0x41032d",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x410330",
            "funcEndAddr": "0x410331",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_410340",
            "funcStartAddr": "0x410340",
            "funcEndAddr": "0x410358",
            "decompiledFuncCode": "int64_t sub_410340(void (* arg1)(void*))\n{\n    int64_t rdx = data_617308;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_410358",
            "funcStartAddr": "0x410358",
            "funcEndAddr": "0x410378",
            "decompiledFuncCode": "int64_t sub_410358(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_616e30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}