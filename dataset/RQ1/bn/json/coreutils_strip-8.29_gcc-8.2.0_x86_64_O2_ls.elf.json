{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_ls.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 370,
    "funcInfo": [
        {
            "funcName": "sub_4026d0",
            "funcStartAddr": "0x4026d0",
            "funcEndAddr": "0x4026dc",
            "decompiledFuncCode": "int64_t sub_4026d0()\n{\n    int64_t var_8 = data_624008;\n    /* jump -> data_624010 */\n}\n\n"
        },
        {
            "funcName": "sub_4026e6",
            "funcStartAddr": "0x4026e6",
            "funcEndAddr": "0x4026f0",
            "decompiledFuncCode": "int64_t sub_4026e6()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_4026f6",
            "funcStartAddr": "0x4026f6",
            "funcEndAddr": "0x402700",
            "decompiledFuncCode": "int64_t sub_4026f6()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402706",
            "funcStartAddr": "0x402706",
            "funcEndAddr": "0x402710",
            "decompiledFuncCode": "int64_t sub_402706()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402716",
            "funcStartAddr": "0x402716",
            "funcEndAddr": "0x402720",
            "decompiledFuncCode": "int64_t sub_402716()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402726",
            "funcStartAddr": "0x402726",
            "funcEndAddr": "0x402730",
            "decompiledFuncCode": "int64_t sub_402726()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402736",
            "funcStartAddr": "0x402736",
            "funcEndAddr": "0x402740",
            "decompiledFuncCode": "int64_t sub_402736()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402746",
            "funcStartAddr": "0x402746",
            "funcEndAddr": "0x402750",
            "decompiledFuncCode": "int64_t sub_402746()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402756",
            "funcStartAddr": "0x402756",
            "funcEndAddr": "0x402760",
            "decompiledFuncCode": "int64_t sub_402756()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402766",
            "funcStartAddr": "0x402766",
            "funcEndAddr": "0x402770",
            "decompiledFuncCode": "int64_t sub_402766()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402776",
            "funcStartAddr": "0x402776",
            "funcEndAddr": "0x402780",
            "decompiledFuncCode": "int64_t sub_402776()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402786",
            "funcStartAddr": "0x402786",
            "funcEndAddr": "0x402790",
            "decompiledFuncCode": "int64_t sub_402786()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402796",
            "funcStartAddr": "0x402796",
            "funcEndAddr": "0x4027a0",
            "decompiledFuncCode": "int64_t sub_402796()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_4027a6",
            "funcStartAddr": "0x4027a6",
            "funcEndAddr": "0x4027b0",
            "decompiledFuncCode": "int64_t sub_4027a6()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_4027b6",
            "funcStartAddr": "0x4027b6",
            "funcEndAddr": "0x4027c0",
            "decompiledFuncCode": "int64_t sub_4027b6()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_4027c6",
            "funcStartAddr": "0x4027c6",
            "funcEndAddr": "0x4027d0",
            "decompiledFuncCode": "int64_t sub_4027c6()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_4027d6",
            "funcStartAddr": "0x4027d6",
            "funcEndAddr": "0x4027e0",
            "decompiledFuncCode": "int64_t sub_4027d6()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_4027e6",
            "funcStartAddr": "0x4027e6",
            "funcEndAddr": "0x4027f0",
            "decompiledFuncCode": "int64_t sub_4027e6()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402816",
            "funcStartAddr": "0x402816",
            "funcEndAddr": "0x402820",
            "decompiledFuncCode": "int64_t sub_402816()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402826",
            "funcStartAddr": "0x402826",
            "funcEndAddr": "0x402830",
            "decompiledFuncCode": "int64_t sub_402826()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402856",
            "funcStartAddr": "0x402856",
            "funcEndAddr": "0x402860",
            "decompiledFuncCode": "int64_t sub_402856()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402866",
            "funcStartAddr": "0x402866",
            "funcEndAddr": "0x402870",
            "decompiledFuncCode": "int64_t sub_402866()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402876",
            "funcStartAddr": "0x402876",
            "funcEndAddr": "0x402880",
            "decompiledFuncCode": "int64_t sub_402876()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402886",
            "funcStartAddr": "0x402886",
            "funcEndAddr": "0x402890",
            "decompiledFuncCode": "int64_t sub_402886()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402896",
            "funcStartAddr": "0x402896",
            "funcEndAddr": "0x4028a0",
            "decompiledFuncCode": "int64_t sub_402896()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_4028a6",
            "funcStartAddr": "0x4028a6",
            "funcEndAddr": "0x4028b0",
            "decompiledFuncCode": "int64_t sub_4028a6()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_4028b6",
            "funcStartAddr": "0x4028b6",
            "funcEndAddr": "0x4028c0",
            "decompiledFuncCode": "int64_t sub_4028b6()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_4028c6",
            "funcStartAddr": "0x4028c6",
            "funcEndAddr": "0x4028d0",
            "decompiledFuncCode": "int64_t sub_4028c6()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_4028d6",
            "funcStartAddr": "0x4028d6",
            "funcEndAddr": "0x4028e0",
            "decompiledFuncCode": "int64_t sub_4028d6()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_4028e6",
            "funcStartAddr": "0x4028e6",
            "funcEndAddr": "0x4028f0",
            "decompiledFuncCode": "int64_t sub_4028e6()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_4028f6",
            "funcStartAddr": "0x4028f6",
            "funcEndAddr": "0x402900",
            "decompiledFuncCode": "int64_t sub_4028f6()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402906",
            "funcStartAddr": "0x402906",
            "funcEndAddr": "0x402910",
            "decompiledFuncCode": "int64_t sub_402906()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402916",
            "funcStartAddr": "0x402916",
            "funcEndAddr": "0x402920",
            "decompiledFuncCode": "int64_t sub_402916()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402926",
            "funcStartAddr": "0x402926",
            "funcEndAddr": "0x402930",
            "decompiledFuncCode": "int64_t sub_402926()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402936",
            "funcStartAddr": "0x402936",
            "funcEndAddr": "0x402940",
            "decompiledFuncCode": "int64_t sub_402936()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402946",
            "funcStartAddr": "0x402946",
            "funcEndAddr": "0x402950",
            "decompiledFuncCode": "int64_t sub_402946()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402956",
            "funcStartAddr": "0x402956",
            "funcEndAddr": "0x402960",
            "decompiledFuncCode": "int64_t sub_402956()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402966",
            "funcStartAddr": "0x402966",
            "funcEndAddr": "0x402970",
            "decompiledFuncCode": "int64_t sub_402966()\n{\n    int64_t var_8 = 0x28;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402976",
            "funcStartAddr": "0x402976",
            "funcEndAddr": "0x402980",
            "decompiledFuncCode": "int64_t sub_402976()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402986",
            "funcStartAddr": "0x402986",
            "funcEndAddr": "0x402990",
            "decompiledFuncCode": "int64_t sub_402986()\n{\n    int64_t var_8 = 0x2a;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402996",
            "funcStartAddr": "0x402996",
            "funcEndAddr": "0x4029a0",
            "decompiledFuncCode": "int64_t sub_402996()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_4029a6",
            "funcStartAddr": "0x4029a6",
            "funcEndAddr": "0x4029b0",
            "decompiledFuncCode": "int64_t sub_4029a6()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_4029b6",
            "funcStartAddr": "0x4029b6",
            "funcEndAddr": "0x4029c0",
            "decompiledFuncCode": "int64_t sub_4029b6()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_4029c6",
            "funcStartAddr": "0x4029c6",
            "funcEndAddr": "0x4029d0",
            "decompiledFuncCode": "int64_t sub_4029c6()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_4029d6",
            "funcStartAddr": "0x4029d6",
            "funcEndAddr": "0x4029e0",
            "decompiledFuncCode": "int64_t sub_4029d6()\n{\n    int64_t var_8 = 0x2f;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_4029e6",
            "funcStartAddr": "0x4029e6",
            "funcEndAddr": "0x4029f0",
            "decompiledFuncCode": "int64_t sub_4029e6()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402a16",
            "funcStartAddr": "0x402a16",
            "funcEndAddr": "0x402a20",
            "decompiledFuncCode": "int64_t sub_402a16()\n{\n    int64_t var_8 = 0x33;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402a26",
            "funcStartAddr": "0x402a26",
            "funcEndAddr": "0x402a30",
            "decompiledFuncCode": "int64_t sub_402a26()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402a56",
            "funcStartAddr": "0x402a56",
            "funcEndAddr": "0x402a60",
            "decompiledFuncCode": "int64_t sub_402a56()\n{\n    int64_t var_8 = 0x37;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402a66",
            "funcStartAddr": "0x402a66",
            "funcEndAddr": "0x402a70",
            "decompiledFuncCode": "int64_t sub_402a66()\n{\n    int64_t var_8 = 0x38;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402a76",
            "funcStartAddr": "0x402a76",
            "funcEndAddr": "0x402a80",
            "decompiledFuncCode": "int64_t sub_402a76()\n{\n    int64_t var_8 = 0x39;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402a86",
            "funcStartAddr": "0x402a86",
            "funcEndAddr": "0x402a90",
            "decompiledFuncCode": "int64_t sub_402a86()\n{\n    int64_t var_8 = 0x3a;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402a96",
            "funcStartAddr": "0x402a96",
            "funcEndAddr": "0x402aa0",
            "decompiledFuncCode": "int64_t sub_402a96()\n{\n    int64_t var_8 = 0x3b;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402aa6",
            "funcStartAddr": "0x402aa6",
            "funcEndAddr": "0x402ab0",
            "decompiledFuncCode": "int64_t sub_402aa6()\n{\n    int64_t var_8 = 0x3c;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402ab6",
            "funcStartAddr": "0x402ab6",
            "funcEndAddr": "0x402ac0",
            "decompiledFuncCode": "int64_t sub_402ab6()\n{\n    int64_t var_8 = 0x3d;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402ac6",
            "funcStartAddr": "0x402ac6",
            "funcEndAddr": "0x402ad0",
            "decompiledFuncCode": "int64_t sub_402ac6()\n{\n    int64_t var_8 = 0x3e;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402ad6",
            "funcStartAddr": "0x402ad6",
            "funcEndAddr": "0x402ae0",
            "decompiledFuncCode": "int64_t sub_402ad6()\n{\n    int64_t var_8 = 0x3f;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402ae6",
            "funcStartAddr": "0x402ae6",
            "funcEndAddr": "0x402af0",
            "decompiledFuncCode": "int64_t sub_402ae6()\n{\n    int64_t var_8 = 0x40;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402af6",
            "funcStartAddr": "0x402af6",
            "funcEndAddr": "0x402b00",
            "decompiledFuncCode": "int64_t sub_402af6()\n{\n    int64_t var_8 = 0x41;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402b06",
            "funcStartAddr": "0x402b06",
            "funcEndAddr": "0x402b10",
            "decompiledFuncCode": "int64_t sub_402b06()\n{\n    int64_t var_8 = 0x42;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402b16",
            "funcStartAddr": "0x402b16",
            "funcEndAddr": "0x402b20",
            "decompiledFuncCode": "int64_t sub_402b16()\n{\n    int64_t var_8 = 0x43;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402b26",
            "funcStartAddr": "0x402b26",
            "funcEndAddr": "0x402b30",
            "decompiledFuncCode": "int64_t sub_402b26()\n{\n    int64_t var_8 = 0x44;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402b36",
            "funcStartAddr": "0x402b36",
            "funcEndAddr": "0x402b40",
            "decompiledFuncCode": "int64_t sub_402b36()\n{\n    int64_t var_8 = 0x45;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402b46",
            "funcStartAddr": "0x402b46",
            "funcEndAddr": "0x402b50",
            "decompiledFuncCode": "int64_t sub_402b46()\n{\n    int64_t var_8 = 0x46;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402b56",
            "funcStartAddr": "0x402b56",
            "funcEndAddr": "0x402b60",
            "decompiledFuncCode": "int64_t sub_402b56()\n{\n    int64_t var_8 = 0x47;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402b66",
            "funcStartAddr": "0x402b66",
            "funcEndAddr": "0x402b70",
            "decompiledFuncCode": "int64_t sub_402b66()\n{\n    int64_t var_8 = 0x48;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402b76",
            "funcStartAddr": "0x402b76",
            "funcEndAddr": "0x402b80",
            "decompiledFuncCode": "int64_t sub_402b76()\n{\n    int64_t var_8 = 0x49;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402b86",
            "funcStartAddr": "0x402b86",
            "funcEndAddr": "0x402b90",
            "decompiledFuncCode": "int64_t sub_402b86()\n{\n    int64_t var_8 = 0x4a;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402b96",
            "funcStartAddr": "0x402b96",
            "funcEndAddr": "0x402ba0",
            "decompiledFuncCode": "int64_t sub_402b96()\n{\n    int64_t var_8 = 0x4b;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402ba6",
            "funcStartAddr": "0x402ba6",
            "funcEndAddr": "0x402bb0",
            "decompiledFuncCode": "int64_t sub_402ba6()\n{\n    int64_t var_8 = 0x4c;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402bb6",
            "funcStartAddr": "0x402bb6",
            "funcEndAddr": "0x402bc0",
            "decompiledFuncCode": "int64_t sub_402bb6()\n{\n    int64_t var_8 = 0x4d;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402bc6",
            "funcStartAddr": "0x402bc6",
            "funcEndAddr": "0x402bd0",
            "decompiledFuncCode": "int64_t sub_402bc6()\n{\n    int64_t var_8 = 0x4e;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402bd6",
            "funcStartAddr": "0x402bd6",
            "funcEndAddr": "0x402be0",
            "decompiledFuncCode": "int64_t sub_402bd6()\n{\n    int64_t var_8 = 0x4f;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402be6",
            "funcStartAddr": "0x402be6",
            "funcEndAddr": "0x402bf0",
            "decompiledFuncCode": "int64_t sub_402be6()\n{\n    int64_t var_8 = 0x50;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402c16",
            "funcStartAddr": "0x402c16",
            "funcEndAddr": "0x402c20",
            "decompiledFuncCode": "int64_t sub_402c16()\n{\n    int64_t var_8 = 0x53;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402c26",
            "funcStartAddr": "0x402c26",
            "funcEndAddr": "0x402c30",
            "decompiledFuncCode": "int64_t sub_402c26()\n{\n    int64_t var_8 = 0x54;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402c56",
            "funcStartAddr": "0x402c56",
            "funcEndAddr": "0x402c60",
            "decompiledFuncCode": "int64_t sub_402c56()\n{\n    int64_t var_8 = 0x57;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402c66",
            "funcStartAddr": "0x402c66",
            "funcEndAddr": "0x402c70",
            "decompiledFuncCode": "int64_t sub_402c66()\n{\n    int64_t var_8 = 0x58;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402c76",
            "funcStartAddr": "0x402c76",
            "funcEndAddr": "0x402c80",
            "decompiledFuncCode": "int64_t sub_402c76()\n{\n    int64_t var_8 = 0x59;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402c86",
            "funcStartAddr": "0x402c86",
            "funcEndAddr": "0x402c90",
            "decompiledFuncCode": "int64_t sub_402c86()\n{\n    int64_t var_8 = 0x5a;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402c96",
            "funcStartAddr": "0x402c96",
            "funcEndAddr": "0x402ca0",
            "decompiledFuncCode": "int64_t sub_402c96()\n{\n    int64_t var_8 = 0x5b;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402ca6",
            "funcStartAddr": "0x402ca6",
            "funcEndAddr": "0x402cb0",
            "decompiledFuncCode": "int64_t sub_402ca6()\n{\n    int64_t var_8 = 0x5c;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402cb6",
            "funcStartAddr": "0x402cb6",
            "funcEndAddr": "0x402cc0",
            "decompiledFuncCode": "int64_t sub_402cb6()\n{\n    int64_t var_8 = 0x5d;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402cc6",
            "funcStartAddr": "0x402cc6",
            "funcEndAddr": "0x402cd0",
            "decompiledFuncCode": "int64_t sub_402cc6()\n{\n    int64_t var_8 = 0x5e;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402cd6",
            "funcStartAddr": "0x402cd6",
            "funcEndAddr": "0x402ce0",
            "decompiledFuncCode": "int64_t sub_402cd6()\n{\n    int64_t var_8 = 0x5f;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402ce6",
            "funcStartAddr": "0x402ce6",
            "funcEndAddr": "0x402cf0",
            "decompiledFuncCode": "int64_t sub_402ce6()\n{\n    int64_t var_8 = 0x60;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402cf6",
            "funcStartAddr": "0x402cf6",
            "funcEndAddr": "0x402d00",
            "decompiledFuncCode": "int64_t sub_402cf6()\n{\n    int64_t var_8 = 0x61;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402d06",
            "funcStartAddr": "0x402d06",
            "funcEndAddr": "0x402d10",
            "decompiledFuncCode": "int64_t sub_402d06()\n{\n    int64_t var_8 = 0x62;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402d16",
            "funcStartAddr": "0x402d16",
            "funcEndAddr": "0x402d20",
            "decompiledFuncCode": "int64_t sub_402d16()\n{\n    int64_t var_8 = 0x63;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402d26",
            "funcStartAddr": "0x402d26",
            "funcEndAddr": "0x402d30",
            "decompiledFuncCode": "int64_t sub_402d26()\n{\n    int64_t var_8 = 0x64;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402d36",
            "funcStartAddr": "0x402d36",
            "funcEndAddr": "0x402d40",
            "decompiledFuncCode": "int64_t sub_402d36()\n{\n    int64_t var_8 = 0x65;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402d46",
            "funcStartAddr": "0x402d46",
            "funcEndAddr": "0x402d50",
            "decompiledFuncCode": "int64_t sub_402d46()\n{\n    int64_t var_8 = 0x66;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402d56",
            "funcStartAddr": "0x402d56",
            "funcEndAddr": "0x402d60",
            "decompiledFuncCode": "int64_t sub_402d56()\n{\n    int64_t var_8 = 0x67;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402d66",
            "funcStartAddr": "0x402d66",
            "funcEndAddr": "0x402d70",
            "decompiledFuncCode": "int64_t sub_402d66()\n{\n    int64_t var_8 = 0x68;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402d76",
            "funcStartAddr": "0x402d76",
            "funcEndAddr": "0x402d80",
            "decompiledFuncCode": "int64_t sub_402d76()\n{\n    int64_t var_8 = 0x69;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402d86",
            "funcStartAddr": "0x402d86",
            "funcEndAddr": "0x402d90",
            "decompiledFuncCode": "int64_t sub_402d86()\n{\n    int64_t var_8 = 0x6a;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402d96",
            "funcStartAddr": "0x402d96",
            "funcEndAddr": "0x402da0",
            "decompiledFuncCode": "int64_t sub_402d96()\n{\n    int64_t var_8 = 0x6b;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402da6",
            "funcStartAddr": "0x402da6",
            "funcEndAddr": "0x402db0",
            "decompiledFuncCode": "int64_t sub_402da6()\n{\n    int64_t var_8 = 0x6c;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402db6",
            "funcStartAddr": "0x402db6",
            "funcEndAddr": "0x402dc0",
            "decompiledFuncCode": "int64_t sub_402db6()\n{\n    int64_t var_8 = 0x6d;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402dc6",
            "funcStartAddr": "0x402dc6",
            "funcEndAddr": "0x402dd0",
            "decompiledFuncCode": "int64_t sub_402dc6()\n{\n    int64_t var_8 = 0x6e;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402dd6",
            "funcStartAddr": "0x402dd6",
            "funcEndAddr": "0x402de0",
            "decompiledFuncCode": "int64_t sub_402dd6()\n{\n    int64_t var_8 = 0x6f;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402de6",
            "funcStartAddr": "0x402de6",
            "funcEndAddr": "0x402df0",
            "decompiledFuncCode": "int64_t sub_402de6()\n{\n    int64_t var_8 = 0x70;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402e16",
            "funcStartAddr": "0x402e16",
            "funcEndAddr": "0x402e20",
            "decompiledFuncCode": "int64_t sub_402e16()\n{\n    int64_t var_8 = 0x73;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "sub_402e26",
            "funcStartAddr": "0x402e26",
            "funcEndAddr": "0x402e30",
            "decompiledFuncCode": "int64_t sub_402e26()\n{\n    int64_t var_8 = 0x74;\n    /* tailcall */\n    return sub_4026d0();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x402e90",
            "funcEndAddr": "0x404719",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    char** rbx = argv;\n    char* rdi = *argv;\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_410670(rdi);\n    void var_68;\n    int32_t var_60;\n    setlocale(6, &data_41b08a, rdx, rcx, r8, r9, var_68, var_60);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    data_6245c0 = 2;\n    sub_418780(sub_40b710);\n    data_625678 = 1;\n    data_625730 = -0x8000000000000000;\n    int32_t rax = data_6245ac;\n    data_6255d0 = 0;\n    data_625740 = 0;\n    data_625738 = -1;\n    data_625698 = 0;\n    if (rax == 2)\n    {\n        data_6256f8 = 2;\n        sub_411c30(nullptr, 7);\n    }\n    else if (rax == 3)\n    {\n        data_6256f8 = 0;\n        sub_411c30(nullptr, 7);\n    }\n    else\n    {\n        if (rax != 1)\n        {\n            abort();\n            /* no return */\n        }\n        if (isatty(1) != 0)\n        {\n            data_6256f8 = 2;\n            sub_411c30(nullptr, 3);\n            data_625698 = 1;\n        }\n        else\n        {\n            data_6256f8 = 1;\n        }\n    }\n    data_6256ef = 0;\n    data_6256f4 = 0;\n    data_6256f0 = 0;\n    data_6256ed = 0;\n    data_6256ec = 0;\n    data_6256d4 = 0;\n    data_6256bc = 0;\n    data_6256b8 = 1;\n    data_6256b6 = 0;\n    data_6256b5 = 0;\n    data_6256b0 = 0;\n    data_6256a8 = 0;\n    data_6256a0 = 0;\n    data_625725 = 0;\n    char* rax_1 = getenv(\"QUOTING_STYLE\");\n    if (rax_1 != 0)\n    {\n        int32_t rax_2 = sub_40acf0(rax_1, &data_41ea00, 0x41e9c0, 4);\n        if (rax_2 < 0)\n        {\n            error(0, 0, dcgettext(nullptr, \"ignoring invalid value of enviro\u2026\", 5), sub_412290(rax_1));\n        }\n        else\n        {\n            sub_411c30(nullptr, *((rax_2 << 2) + 0x41e9c0));\n        }\n    }\n    data_625670 = 0x50;\n    char* rax_4 = getenv(\"COLUMNS\");\n    if (((rax_4 != 0 && *rax_4 != 0) && sub_404b40(rax_4) == 0))\n    {\n        error(0, 0, dcgettext(nullptr, \"ignoring invalid width in enviro\u2026\", 5), sub_412290(rax_4));\n    }\n    int32_t var_48;\n    if (ioctl(1, 0x5413, &var_48) != 0xffffffff)\n    {\n        int16_t var_46;\n        uint64_t rax_7 = var_46;\n        if (rax_7 != 0)\n        {\n            data_625670 = rax_7;\n        }\n    }\n    char* rax_8 = getenv(\"TABSIZE\");\n    data_625680 = 8;\n    if (rax_8 != 0)\n    {\n        if (sub_412df0(rax_8, nullptr, 0, &var_48, nullptr) != 0)\n        {\n            error(0, 0, dcgettext(nullptr, \"ignoring invalid tab size in env\u2026\", 5), sub_412290(rax_8));\n        }\n        else\n        {\n            data_625680 = var_48;\n        }\n    }\n    char r15 = 0;\n    char r14 = 0;\n    char const* const r12_3 = nullptr;\n    while (true)\n    {\n        var_48 = 0xffffffff;\n        int32_t rax_11 = getopt_long(argc, rbx, \"abcdfghiklmnopqrstuvw:xABCDFGHI:\u2026\", &data_419900, &var_48);\n        if (rax_11 == 0xffffffff)\n        {\n            if (data_6256e0 == 0)\n            {\n                char* rax_84 = getenv(\"LS_BLOCK_SIZE\");\n                sub_40dfa0(rax_84, &data_6256e8, &data_6256e0);\n                char* rax_142;\n                if (rax_84 == 0)\n                {\n                    rax_142 = getenv(\"BLOCK_SIZE\");\n                }\n                if ((rax_84 != 0 || (rax_84 == 0 && rax_142 != 0)))\n                {\n                    data_6256dc = data_6256e8;\n                    data_6245a0 = data_6256e0;\n                }\n                if (r15 != 0)\n                {\n                    data_6256e8 = 0;\n                    data_6256e0 = 0x400;\n                }\n            }\n            int64_t rax_13 = data_625670;\n            int64_t rdx_2 = 0;\n            uint64_t rdx_3;\n            rdx_3 = (COMBINE(rdx_2, rax_13) % 3) != 0;\n            data_6255c0 = ((COMBINE(rdx_2, rax_13) / 3) + rdx_3);\n            int32_t rax_16 = sub_411c20(nullptr);\n            int32_t rdx_5 = data_6256f8;\n            char rax_17;\n            if ((rdx_5 == 4 || rdx_5 == 1))\n            {\n                rax_17 = 0;\n            }\n            if ((rdx_5 != 4 && rdx_5 != 1))\n            {\n                if (data_625670 == 0)\n                {\n                    rax_17 = 0;\n                }\n                if ((data_625670 != 0 || (data_625670 == 0 && rdx_5 == 0)))\n                {\n                    rdx_5 = rax_16 == 6;\n                    rax_17 = ((rax_16 & 0xfffffffd) == 1 | rdx_5);\n                }\n            }\n            data_625768 = rax_17;\n            data_625768 = (data_625768 & 1);\n            int64_t rax_58 = sub_411be0(0);\n            data_625690 = rax_58;\n            if (rax_16 == 7)\n            {\n                sub_411c40(rax_58, 0x20, 1);\n            }\n            int32_t rax_59 = data_6256d4;\n            if (rax_59 > 1)\n            {\n                uint64_t rax_60 = (rax_59 - 2);\n                uint8_t rsi_12 = *\"*=>@|\"[rax_60];\n                void* r13_2 = &*\"*=>@|\"[rax_60];\n                if (rsi_12 != 0)\n                {\n                    do\n                    {\n                        r13_2 = (r13_2 + 1);\n                        sub_411c40(data_625690, rsi_12, 1);\n                        rsi_12 = *r13_2;\n                    } while (rsi_12 != 0);\n                }\n            }\n            int64_t rax_61 = sub_411be0(0);\n            data_625688 = rax_61;\n            sub_411c40(rax_61, 0x3a, 1);\n            if ((data_6256d8 != 0 && (data_6256f8 != 0 || (data_6256f8 == 0 && data_6256d1 != 0))))\n            {\n                data_6256d8 = 0;\n            }\n            if (((data_6256d8 != 0 && (data_6256f8 != 0 || (data_6256f8 == 0 && data_6256d1 != 0))) || data_6256d8 == 0))\n            {\n                int32_t rdx_17 = data_6256f8;\n                if ((((data_6256f4 - 1) <= 1 && r14 == 0) && rdx_17 != 0))\n                {\n                    data_6256f0 = 4;\n                label_4039e3:\n                    int64_t r12_6 = data_62463c;\n                    if (data_6256d2 != 0)\n                    {\n                        char* rax_91 = getenv(\"LS_COLORS\");\n                        char* var_50 = rax_91;\n                        if ((rax_91 == 0 || (rax_91 != 0 && *rax_91 == 0)))\n                        {\n                            char* rax_118 = getenv(\"COLORTERM\");\n                            if ((rax_118 == 0 || (rax_118 != 0 && *rax_118 == 0)))\n                            {\n                                char* rax_119 = getenv(\"TERM\");\n                                if (rax_119 == 0)\n                                {\n                                label_404511:\n                                    data_6256d2 = 0;\n                                }\n                                else\n                                {\n                                    if (*rax_119 == 0)\n                                    {\n                                        goto label_404511;\n                                    }\n                                    char const* const r15_1 = \"# Configuration file for dircolo\u2026\";\n                                    int32_t rax_124;\n                                    int32_t rax_125;\n                                    do\n                                    {\n                                        rax_124 = strncmp(r15_1, \"TERM \", 5);\n                                        if (rax_124 == 0)\n                                        {\n                                            rax_125 = sub_4159a0(&r15_1[5], rax_119, 0);\n                                            if (rax_125 == 0)\n                                            {\n                                                break;\n                                            }\n                                        }\n                                        char const* const rdi_44 = r15_1;\n                                        int64_t rcx_19 = -1;\n                                        while (rcx_19 != 0)\n                                        {\n                                            bool cond:5_1 = 0 != *rdi_44;\n                                            rdi_44 = &rdi_44[1];\n                                            rcx_19 = (rcx_19 - 1);\n                                            if ((!cond:5_1))\n                                            {\n                                                break;\n                                            }\n                                        }\n                                        r15_1 = &r15_1[(!rcx_19)];\n                                    } while ((r15_1 - \"# Configuration file for dircolo\u2026\") <= 0x104c);\n                                    if ((!(rax_124 == 0 && rax_125 == 0)))\n                                    {\n                                        goto label_404511;\n                                    }\n                                }\n                            }\n                        }\n                        if ((rax_91 != 0 && *rax_91 != 0))\n                        {\n                            int16_t var_53 = 0x3f3f;\n                            char var_51_1 = 0;\n                            int64_t rax_92 = sub_412bb0(rax_91);\n                            data_6256c0 = rax_92;\n                            var_48 = rax_92;\n                            while (true)\n                            {\n                                char* rax_93 = var_50;\n                                char rdx_22 = *rax_93;\n                                if (rdx_22 == 0x2a)\n                                {\n                                    int64_t rax_129 = sub_412980(0x28);\n                                    int64_t rax_130 = data_6256c8;\n                                    var_50 = &var_50[1];\n                                    data_6256c8 = rax_129;\n                                    *(rax_129 + 0x20) = rax_130;\n                                    *(rax_129 + 8) = var_48;\n                                    if (sub_404860(&var_48, &var_50, 1, rax_129) != 0)\n                                    {\n                                        char* rax_133 = var_50;\n                                        var_50 = &rax_133[1];\n                                        if (*rax_133 == 0x3d)\n                                        {\n                                            *(rax_129 + 0x18) = var_48;\n                                            if (sub_404860(&var_48, &var_50, 0, (rax_129 + 0x10)) != 0)\n                                            {\n                                                continue;\n                                            }\n                                        }\n                                    }\n                                }\n                                else if (rdx_22 == 0x3a)\n                                {\n                                    var_50 = &rax_93[1];\n                                    continue;\n                                }\n                                else\n                                {\n                                    if (rdx_22 == 0)\n                                    {\n                                        break;\n                                    }\n                                    var_50 = &rax_93[1];\n                                    var_53 = *rax_93;\n                                    if (rax_93[1] != 0)\n                                    {\n                                        var_50 = &rax_93[2];\n                                        *var_53[1] = rax_93[1];\n                                        var_50 = &rax_93[3];\n                                        if (rax_93[2] == 0x3d)\n                                        {\n                                            int64_t r13_7 = 0;\n                                            void* const rsi_14 = &data_41b1c8;\n                                            int32_t rax_94;\n                                            do\n                                            {\n                                                rax_94 = strcmp(&var_53, rsi_14);\n                                                if (rax_94 == 0)\n                                                {\n                                                    break;\n                                                }\n                                                r13_7 = (r13_7 + 1);\n                                                rsi_14 = *((r13_7 << 3) + 0x419e80);\n                                            } while (rsi_14 != 0);\n                                            if (rax_94 == 0)\n                                            {\n                                                *((r13_7 << 4) + 0x624428) = var_48;\n                                                if (sub_404860(&var_48, &var_50, 0, ((r13_7 << 4) + 0x624420)) != 0)\n                                                {\n                                                    continue;\n                                                }\n                                            }\n                                            error(0, 0, dcgettext(nullptr, \"unrecognized prefix: %s\", 5), sub_412290(&var_53));\n                                        }\n                                    }\n                                }\n                                error(0, 0, dcgettext(nullptr, \"unparsable value for LS_COLORS e\u2026\", 5));\n                                free(data_6256c0);\n                                int64_t r13_9;\n                                for (int64_t rdi_38 = data_6256c8; rdi_38 != 0; rdi_38 = r13_9)\n                                {\n                                    r13_9 = *(rdi_38 + 0x20);\n                                    free(rdi_38);\n                                }\n                                data_6256d2 = 0;\n                                break;\n                            }\n                            if ((data_624490 == 6 && strncmp(data_624498, \"target\", 6) == 0))\n                            {\n                                data_625750 = 1;\n                            }\n                        }\n                        if (data_6256d2 != 0)\n                        {\n                            if (sub_404ae0(0xd) != 0)\n                            {\n                            label_4040ba:\n                                data_6256bd = 1;\n                            }\n                            else\n                            {\n                                if ((sub_404ae0(0xe) != 0 && data_625750 != 0))\n                                {\n                                    goto label_4040ba;\n                                }\n                                if ((sub_404ae0(0xc) != 0 && data_6256f8 == 0))\n                                {\n                                    goto label_4040ba;\n                                }\n                            }\n                        }\n                    }\n                    if (data_6256b8 == 1)\n                    {\n                        int32_t rax_88 = 2;\n                        if ((data_6256b5 == 0 && data_6256d4 != 3))\n                        {\n                            rax_88 = (((2 - 2) & 0xfffffffe) + 4);\n                        }\n                        data_6256b8 = rax_88;\n                    }\n                    if (data_6256b6 != 0)\n                    {\n                        int64_t* rax_66 = sub_40ca80(0x1e, nullptr, 0x404800, 0x404810, 0x404850);\n                        data_625788 = rax_66;\n                        if (rax_66 == 0)\n                        {\n                            sub_412bd0();\n                            /* no return */\n                        }\n                        _obstack_begin(&data_6254a0, 0, 0, 0x402bc0, 0x402750);\n                    }\n                    data_625668 = sub_417410(getenv(&data_41b360));\n                    char rax_72;\n                    if (((data_6256f0 - 2) & 0xfffffffd) == 0)\n                    {\n                    label_403a7f:\n                        data_625661 = 1;\n                        rax_72 = 0;\n                    }\n                    else\n                    {\n                        if (data_6256f8 == 0)\n                        {\n                            goto label_403a7f;\n                        }\n                        if (data_625725 != 0)\n                        {\n                            goto label_403a7f;\n                        }\n                        if (data_6256ec != 0)\n                        {\n                            goto label_403a7f;\n                        }\n                        bool cond:6_1 = data_6256b6 != 0;\n                        data_625661 = 0;\n                        rax_72 = 1;\n                        if (((!cond:6_1) && (data_6256d2 == 0 && data_6256d4 == 0)))\n                        {\n                            rax_72 = data_6256b4;\n                        }\n                    }\n                    data_625660 = rax_72;\n                    data_625660 = (data_625660 & 1);\n                    if (data_6256d8 != 0)\n                    {\n                        _obstack_begin(&data_625560, 0, 0, 0x402bc0, 0x402750);\n                        _obstack_begin(&data_625500, 0, 0, 0x402bc0, 0x402750);\n                    }\n                    if (data_6256d1 != 0)\n                    {\n                        void* rax_106 = nullptr;\n                        while (true)\n                        {\n                            int32_t rcx_17 = rax_106;\n                            bool rdx_31;\n                            if (rax_106 <= 0x5a)\n                            {\n                                rdx_31 = true;\n                                if (rax_106 >= 0x41)\n                                {\n                                    goto label_4041c0;\n                                }\n                                if ((rax_106 - 0x30) <= 9)\n                                {\n                                    goto label_4041c0;\n                                }\n                                if ((rcx_17 - 0x2d) <= 1)\n                                {\n                                    goto label_4041ee;\n                                }\n                            }\n                            else\n                            {\n                                rdx_31 = true;\n                                if ((rax_106 - 0x61) <= 0x19)\n                                {\n                                    goto label_4041c0;\n                                }\n                                if ((rcx_17 - 0x2d) <= 1)\n                                {\n                                label_4041ee:\n                                    rdx_31 = true;\n                                label_4041c0:\n                                    *(rax_106 + 0x6253a0) = (*(rax_106 + 0x6253a0) | rdx_31);\n                                    rax_106 = (rax_106 + 1);\n                                    if (rax_106 == 0x100)\n                                    {\n                                        char* rax_107 = sub_412d40();\n                                        if (rax_107 == 0)\n                                        {\n                                            rax_107 = &data_41b08a;\n                                        }\n                                        data_625748 = rax_107;\n                                        break;\n                                    }\n                                    continue;\n                                }\n                            }\n                            if (rax_106 == 0x7e)\n                            {\n                                goto label_4041ee;\n                            }\n                            rdx_31 = rax_106 == 0x5f;\n                            goto label_4041c0;\n                        }\n                    }\n                    data_625778 = 0x64;\n                    int64_t rax_73 = sub_412980(0x4e20);\n                    int32_t r13_4 = (argc - r12_6);\n                    data_625770 = 0;\n                    data_625780 = rax_73;\n                    sub_4084b0();\n                    if (r13_4 > 0)\n                    {\n                        do\n                        {\n                            char* rdi_17 = rbx[r12_6];\n                            r12_6 = (r12_6 + 1);\n                            sub_408580(rdi_17, 0, 1, &data_41b08a);\n                        } while (argc > r12_6);\n                    }\n                    else if (data_6256b5 == 0)\n                    {\n                        sub_404d90(&data_41d794, nullptr, 1);\n                    }\n                    else\n                    {\n                        sub_408580(&data_41d794, 3, 1, &data_41b08a);\n                    }\n                    if (((r13_4 <= 0 && data_625770 != 0) || (r13_4 > 0 && data_625770 != 0)))\n                    {\n                        sub_404f40();\n                        if (data_6256b5 == 0)\n                        {\n                            sub_405140(nullptr, 1);\n                        }\n                    }\n                    int64_t rbx_1;\n                    if (((r13_4 > 0 && data_625770 == 0) || (((r13_4 <= 0 && data_625770 != 0) || (r13_4 > 0 && data_625770 != 0)) && data_625770 == 0)))\n                    {\n                        rbx_1 = data_625740;\n                        if (r13_4 <= 1)\n                        {\n                            goto label_403d0d;\n                        }\n                    label_403b67:\n                        for (; rbx_1 != 0; rbx_1 = data_625740)\n                        {\n                            char* rdi_21 = *rbx_1;\n                            data_625740 = *(rbx_1 + 0x18);\n                            int64_t rax_75 = data_625788;\n                            if ((rax_75 == 0 || (rax_75 != 0 && rdi_21 != 0)))\n                            {\n                                sub_4092a0(rdi_21, *(rbx_1 + 8), *(rbx_1 + 0x10));\n                                free(*rbx_1);\n                                free(*(rbx_1 + 8));\n                                free(rbx_1);\n                                data_625678 = 1;\n                            }\n                            if ((rax_75 != 0 && rdi_21 == 0))\n                            {\n                                int64_t rdx_19 = data_6254b8;\n                                if ((rdx_19 - data_6254b0) <= 0xf)\n                                {\n                                    __assert_fail(\"dev_ino_size <= obstack_object_s\u2026\", \"src/ls.c\", 0x402, \"dev_ino_pop\");\n                                    /* no return */\n                                }\n                                data_6254b8 = (rdx_19 - 0x10);\n                                var_48 = *(rdx_19 - 0x10);\n                                int64_t var_40_1 = *(rdx_19 - 8);\n                                int64_t rax_76 = sub_40d260(rax_75);\n                                if (rax_76 == 0)\n                                {\n                                    break;\n                                }\n                                free(rax_76);\n                                free(*rbx_1);\n                                free(*(rbx_1 + 8));\n                                free(rbx_1);\n                            }\n                        }\n                    }\n                    if ((((r13_4 <= 0 && data_625770 != 0) || (r13_4 > 0 && data_625770 != 0)) && data_625770 != 0))\n                    {\n                        sub_407ca0();\n                        if (data_625740 != 0)\n                        {\n                            uint64_t* const rdi_39 = stdout;\n                            char* rax_105 = stdout[5];\n                            if (stdout[6] <= rax_105)\n                            {\n                                __overflow(rdi_39, 0xa);\n                            }\n                            else\n                            {\n                                stdout[5] = &rax_105[1];\n                                *rax_105 = 0xa;\n                            }\n                            data_6255b8 = (data_6255b8 + 1);\n                            rbx_1 = data_625740;\n                            goto label_403b67;\n                        }\n                    }\n                    if ((r13_4 <= 0 && data_625770 == 0))\n                    {\n                    label_403d0d:\n                        rbx_1 = data_625740;\n                        if (rbx_1 != 0)\n                        {\n                            if (*(rbx_1 + 0x18) == 0)\n                            {\n                                data_625678 = 0;\n                            }\n                            goto label_403b67;\n                        }\n                    }\n                    if (((((((r13_4 > 0 && data_625770 == 0) || (((r13_4 <= 0 && data_625770 != 0) || (r13_4 > 0 && data_625770 != 0)) && data_625770 == 0)) && r13_4 > 1) && rbx_1 == 0) || (((r13_4 <= 0 && data_625770 != 0) || (r13_4 > 0 && data_625770 != 0)) && data_625770 != 0)) || (r13_4 <= 0 && data_625770 == 0)))\n                    {\n                        if ((data_6256d2 != 0 && data_6256d0 != 0))\n                        {\n                            if (data_624420 != 2)\n                            {\n                            label_403de7:\n                                sub_405d40();\n                            }\n                            else\n                            {\n                                if (**&data_624428 != 0x5b1b)\n                                {\n                                    goto label_403de7;\n                                }\n                                if (data_624430 != 1)\n                                {\n                                    goto label_403de7;\n                                }\n                                if (**&data_624438 != 0x6d)\n                                {\n                                    goto label_403de7;\n                                }\n                            }\n                            fflush_unlocked(stdout);\n                            sub_405af0(0);\n                            int32_t rbx_3 = data_6255d4;\n                            if (rbx_3 != 0)\n                            {\n                                int32_t temp6_1;\n                                do\n                                {\n                                    raise(0x13);\n                                    temp6_1 = rbx_3;\n                                    rbx_3 = (rbx_3 - 1);\n                                } while (temp6_1 != 1);\n                            }\n                            int32_t rdi_32 = data_6255d8;\n                            if (rdi_32 != 0)\n                            {\n                                raise(rdi_32);\n                            }\n                        }\n                        if (data_6256d8 == 0)\n                        {\n                            goto label_403c63;\n                        }\n                        sub_405390(\"//DIRED//\", &data_625560);\n                        sub_405390(\"//SUBDIRED//\", &data_625500);\n                        __printf_chk(1, \"//DIRED-OPTIONS// --quoting-styl\u2026\", *((sub_411c20(data_625690) << 3) + 0x41ea00));\n                    label_403c63:\n                        int64_t rbx_2 = data_625788;\n                        if (rbx_2 != 0)\n                        {\n                            if (sub_40c5f0(rbx_2) != 0)\n                            {\n                                __assert_fail(\"hash_get_n_entries (active_dir_s\u2026\", \"src/ls.c\", 0x66c, \"main\");\n                                /* no return */\n                            }\n                            sub_40ccc0(rbx_2);\n                        }\n                        return data_6255d0;\n                    }\n                    goto label_4046c4;\n                }\n                if ((((data_6256f4 - 1) > 1 || ((data_6256f4 - 1) <= 1 && r14 != 0)) && rdx_17 != 0))\n                {\n                    goto label_4039e3;\n                }\n            }\n            if (r12_3 != 0)\n            {\n            label_4039c1:\n                int32_t rax_64;\n                while (true)\n                {\n                    rax_64 = strncmp(r12_3, \"posix-\", 6);\n                    if (rax_64 != 0)\n                    {\n                        break;\n                    }\n                    if (sub_40c190() == 0)\n                    {\n                        break;\n                    }\n                    r12_3 = &r12_3[6];\n                }\n                if (rax_64 == 0)\n                {\n                    goto label_4039e3;\n                }\n                if (*r12_3 != 0x2b)\n                {\n                    goto label_4042a0;\n                }\n                void* r12_8 = &r12_3[1];\n                char* rax_139 = strchr(r12_8, 0xa);\n                void* r14_2;\n                if (rax_139 == 0)\n                {\n                    r14_2 = r12_8;\n                label_4045e7:\n                    data_624410 = r12_8;\n                    data_624418 = r14_2;\n                label_404310:\n                    sub_404bb0();\n                    goto label_4039e3;\n                }\n                r14_2 = &rax_139[1];\n                if (strchr(r14_2, 0xa) != 0)\n                {\n                    error(2, 0, dcgettext(nullptr, \"invalid time style format %s\", 5), sub_412290(r12_8));\n                label_4046c4:\n                    __assert_fail(\"found\", \"src/ls.c\", 0x638, \"main\");\n                    /* no return */\n                }\n                *rax_139 = 0;\n                goto label_4045e7;\n            }\n            char* rax_141 = getenv(\"TIME_STYLE\");\n            r12_3 = rax_141;\n            if (rax_141 != 0)\n            {\n                goto label_4039c1;\n            }\n            r12_3 = \"locale\";\n        label_4042a0:\n            int64_t rax_114 = sub_40acf0(r12_3, &data_419fa0, 0x419f90, 4);\n            if (rax_114 >= 0)\n            {\n                bool cond:4_1 = rax_114 <= 1;\n                if (rax_114 == 1)\n                {\n                    data_624418 = \"%Y-%m-%d %H:%M\";\n                    data_624410 = \"%Y-%m-%d %H:%M\";\n                }\n                else if (cond:4_1)\n                {\n                    if (rax_114 == 0)\n                    {\n                        data_624418 = \"%Y-%m-%d %H:%M:%S.%N %z\";\n                        data_624410 = \"%Y-%m-%d %H:%M:%S.%N %z\";\n                    }\n                }\n                else if (rax_114 == 2)\n                {\n                    data_624410 = \"%Y-%m-%d \";\n                    data_624418 = \"%m-%d %H:%M\";\n                }\n                else if ((rax_114 == 3 && sub_40c190() != 0))\n                {\n                    data_624410 = dcgettext(nullptr, data_624410, 2);\n                    data_624418 = dcgettext(nullptr, data_624418, 2);\n                }\n                goto label_404310;\n            }\n            sub_40ae10(\"time style\", r12_3, rax_114);\n            char** rbx_4 = &data_419fa0;\n            fputs_unlocked(dcgettext(nullptr, \"Valid arguments are:\\n\", 5), stderr);\n            char const* const rcx_22 = \"full-iso\";\n            do\n            {\n                rbx_4 = &rbx_4[1];\n                __fprintf_chk(stderr, 1, \"  - [posix-]%s\\n\", rcx_22);\n                rcx_22 = *rbx_4;\n            } while (rcx_22 != 0);\n            fputs_unlocked(dcgettext(nullptr, \"  - +FORMAT (e.g., +%H:%M) for a\u2026\", 5), stderr);\n            break;\n        }\n        uint64_t rax_12 = (rax_11 + 0x83);\n        if (rax_12 > 0x113)\n        {\n            break;\n        }\n        switch (rax_12)\n        {\n            case 0:\n            {\n                uint64_t rax_49 = data_6245ac;\n                int64_t rcx_4 = data_6245b0;\n                char const* const rsi_11;\n                if (rax_49 == 1)\n                {\n                    rsi_11 = \"ls\";\n                }\n                else\n                {\n                    bool cond:1_1 = rax_49 != 2;\n                    rsi_11 = \"dir\";\n                    rax_49 = \"vdir\";\n                    if (cond:1_1)\n                    {\n                        rsi_11 = \"vdir\";\n                    }\n                }\n                uint64_t var_70_2 = rax_49;\n                int64_t var_78 = 0;\n                sub_412840(stdout, rsi_11, \"GNU coreutils\", rcx_4);\n                exit(0);\n                /* no return */\n            }\n            case 1:\n            {\n                sub_40a530(0);\n                /* no return */\n            }\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 0xa:\n            case 0xb:\n            case 0xc:\n            case 0xd:\n            case 0xe:\n            case 0xf:\n            case 0x10:\n            case 0x11:\n            case 0x12:\n            case 0x13:\n            case 0x14:\n            case 0x15:\n            case 0x16:\n            case 0x17:\n            case 0x18:\n            case 0x19:\n            case 0x1a:\n            case 0x1b:\n            case 0x1c:\n            case 0x1d:\n            case 0x1e:\n            case 0x1f:\n            case 0x20:\n            case 0x21:\n            case 0x22:\n            case 0x23:\n            case 0x24:\n            case 0x25:\n            case 0x26:\n            case 0x27:\n            case 0x28:\n            case 0x29:\n            case 0x2a:\n            case 0x2b:\n            case 0x2c:\n            case 0x2d:\n            case 0x2e:\n            case 0x2f:\n            case 0x30:\n            case 0x31:\n            case 0x32:\n            case 0x33:\n            case 0x34:\n            case 0x35:\n            case 0x36:\n            case 0x37:\n            case 0x38:\n            case 0x39:\n            case 0x3a:\n            case 0x3b:\n            case 0x3c:\n            case 0x3d:\n            case 0x3e:\n            case 0x3f:\n            case 0x40:\n            case 0x41:\n            case 0x42:\n            case 0x43:\n            case 0x44:\n            case 0x45:\n            case 0x46:\n            case 0x47:\n            case 0x48:\n            case 0x49:\n            case 0x4a:\n            case 0x4b:\n            case 0x4c:\n            case 0x4d:\n            case 0x4e:\n            case 0x4f:\n            case 0x50:\n            case 0x51:\n            case 0x52:\n            case 0x53:\n            case 0x54:\n            case 0x55:\n            case 0x56:\n            case 0x57:\n            case 0x58:\n            case 0x59:\n            case 0x5a:\n            case 0x5b:\n            case 0x5c:\n            case 0x5d:\n            case 0x5e:\n            case 0x5f:\n            case 0x60:\n            case 0x61:\n            case 0x62:\n            case 0x63:\n            case 0x64:\n            case 0x65:\n            case 0x66:\n            case 0x67:\n            case 0x68:\n            case 0x69:\n            case 0x6a:\n            case 0x6b:\n            case 0x6c:\n            case 0x6d:\n            case 0x6e:\n            case 0x6f:\n            case 0x70:\n            case 0x71:\n            case 0x72:\n            case 0x73:\n            case 0x74:\n            case 0x75:\n            case 0x76:\n            case 0x77:\n            case 0x78:\n            case 0x79:\n            case 0x7a:\n            case 0x7b:\n            case 0x7c:\n            case 0x7d:\n            case 0x7e:\n            case 0x7f:\n            case 0x80:\n            case 0x81:\n            case 0x83:\n            case 0x84:\n            case 0x85:\n            case 0x86:\n            case 0x87:\n            case 0x88:\n            case 0x89:\n            case 0x8a:\n            case 0x8b:\n            case 0x8c:\n            case 0x8d:\n            case 0x8e:\n            case 0x8f:\n            case 0x90:\n            case 0x91:\n            case 0x92:\n            case 0x93:\n            case 0x94:\n            case 0x95:\n            case 0x96:\n            case 0x97:\n            case 0x98:\n            case 0x99:\n            case 0x9a:\n            case 0x9b:\n            case 0x9c:\n            case 0x9d:\n            case 0x9e:\n            case 0x9f:\n            case 0xa0:\n            case 0xa1:\n            case 0xa2:\n            case 0xa3:\n            case 0xa4:\n            case 0xa5:\n            case 0xa6:\n            case 0xa7:\n            case 0xa8:\n            case 0xa9:\n            case 0xaa:\n            case 0xab:\n            case 0xac:\n            case 0xad:\n            case 0xae:\n            case 0xaf:\n            case 0xb0:\n            case 0xb1:\n            case 0xb2:\n            case 0xb3:\n            case 0xb5:\n            case 0xb6:\n            case 0xb7:\n            case 0xb8:\n            case 0xb9:\n            case 0xba:\n            case 0xbb:\n            case 0xbc:\n            case 0xbd:\n            case 0xbe:\n            case 0xbf:\n            case 0xc0:\n            case 0xc1:\n            case 0xc2:\n            case 0xc3:\n            case 0xc8:\n            case 0xcd:\n            case 0xce:\n            case 0xd0:\n            case 0xd2:\n            case 0xd3:\n            case 0xd9:\n            case 0xda:\n            case 0xdc:\n            case 0xde:\n            case 0xdf:\n            case 0xe0:\n            case 0xe1:\n            case 0xe2:\n            case 0xe3:\n            case 0xe8:\n            case 0xed:\n            case 0xfc:\n            case 0xfd:\n            case 0xfe:\n            case 0xff:\n            case 0x100:\n            case 0x101:\n            case 0x102:\n            {\n                break;\n                break;\n            }\n            case 0xb4:\n            {\n                if (data_6256f8 == 0)\n                {\n                    continue;\n                }\n                else\n                {\n                    data_6256f8 = 1;\n                    continue;\n                }\n                break;\n            }\n            case 0xc4:\n            {\n                if (data_6256b0 != 0)\n                {\n                    continue;\n                }\n                else\n                {\n                    data_6256b0 = 1;\n                    continue;\n                }\n                break;\n            }\n            case 0xc5:\n            {\n                int64_t rax_47 = sub_412980(0x10);\n                int64_t rdx_13 = data_6256a8;\n                *rax_47 = &data_41b204;\n                *(rax_47 + 8) = rdx_13;\n                data_6256a8 = rax_47;\n                void** rax_48 = sub_412980(0x10);\n                int64_t rdx_14 = data_6256a8;\n                *rax_48 = &data_41b203;\n                rax_48[1] = rdx_14;\n                data_6256a8 = rax_48;\n                continue;\n            }\n            case 0xc6:\n            {\n                data_6256f8 = 2;\n                continue;\n            }\n            case 0xc7:\n            {\n                data_6256d8 = 1;\n                continue;\n            }\n            case 0xc9:\n            {\n                data_6256d4 = 3;\n                continue;\n            }\n            case 0xca:\n            {\n                data_6245a8 = 0;\n                continue;\n            }\n            case 0xcb:\n            {\n                data_6256b8 = 3;\n                continue;\n            }\n            case 0xcc:\n            {\n                int64_t rdx_10 = data_625970;\n                int64_t* rax_46 = sub_412980(0x10);\n                *rax_46 = rdx_10;\n                rax_46[1] = data_6256a8;\n                data_6256a8 = rax_46;\n                continue;\n            }\n            case 0xcf:\n            {\n                data_6256b8 = 5;\n                continue;\n            }\n            case 0xd1:\n            {\n                sub_411c30(nullptr, 0);\n                continue;\n            }\n            case 0xd4:\n            {\n                sub_411c30(nullptr, 5);\n                continue;\n            }\n            case 0xd5:\n            {\n                data_6256b6 = 1;\n                continue;\n            }\n            case 0xd6:\n            {\n                data_6256f0 = 2;\n                r14 = 1;\n                continue;\n            }\n            case 0xd7:\n            {\n                char* rax_44;\n                int64_t rdx_9;\n                rax_44 = dcgettext(nullptr, \"invalid tab size\", 5);\n                int64_t var_70_1 = rdx_9;\n                data_625680 = sub_412c10(data_625970, 0, 0, -1, &data_41b08a, rax_44, 2);\n                continue;\n            }\n            case 0xd8:\n            {\n                data_6256f0 = 0xffffffff;\n                r14 = 1;\n                continue;\n            }\n            case 0xdb:\n            {\n                data_6256f0 = 1;\n                r14 = 1;\n                continue;\n            }\n            case 0xdd:\n            {\n                data_625725 = 1;\n                continue;\n            }\n            case 0xe4:\n            {\n                data_6256b0 = 2;\n                continue;\n            }\n            case 0xe5:\n            {\n                sub_411c30(nullptr, 7);\n                continue;\n            }\n            case 0xe6:\n            {\n                data_6256f4 = 1;\n                continue;\n            }\n            case 0xe7:\n            {\n                data_6256b5 = 1;\n                continue;\n            }\n            case 0xe9:\n            {\n                bool cond:0_1 = data_6256f8 == 0;\n                data_6256b0 = 2;\n                data_6256f0 = 0xffffffff;\n                if (cond:0_1)\n                {\n                    int32_t rax_111 = isatty(1);\n                    data_6256f8 = ((rax_111 - rax_111) + 2);\n                }\n                data_6256ec = 0;\n                r14 = 1;\n                data_6256d2 = 0;\n                data_6256d1 = 0;\n                continue;\n            }\n            case 0xea:\n            {\n                data_6256f8 = 0;\n                data_6245a9 = 0;\n                continue;\n            }\n            case 0xeb:\n            {\n                data_6256e8 = 0xb0;\n                data_6256dc = 0xb0;\n                data_6256e0 = 1;\n                data_6245a0 = 1;\n                continue;\n            }\n            case 0xec:\n            {\n                data_6256bc = 1;\n                continue;\n            }\n            case 0xee:\n            {\n                r15 = 1;\n                continue;\n            }\n            case 0xf0:\n            {\n                data_6256f8 = 4;\n                continue;\n            }\n            case 0xf1:\n            {\n                data_6256ed = 1;\n                break;\n            }\n            case 0xf2:\n            {\n                data_6256f8 = 0;\n                data_6245a8 = 0;\n                continue;\n            }\n            case 0xf3:\n            {\n                data_6256d4 = 1;\n                continue;\n            }\n            case 0xf4:\n            {\n                data_625698 = 1;\n                continue;\n            }\n            case 0xf5:\n            {\n                data_6256ef = 1;\n                continue;\n            }\n            case 0xf6:\n            {\n                data_6256ec = 1;\n                continue;\n            }\n            case 0xf7:\n            {\n                data_6256f0 = 4;\n                r14 = 1;\n                continue;\n            }\n            case 0xf8:\n            {\n                data_6256f4 = 2;\n                continue;\n            }\n            case 0xfa:\n            {\n                if (sub_404b40(data_625970) != 0)\n                {\n                    continue;\n                }\n                else\n                {\n                    rbx = sub_412290(data_625970);\n                    error(2, 0, \"%s: %s\", dcgettext(nullptr, \"invalid line width\", 5), rbx);\n                }\n                break;\n            }\n            case 0xfb:\n            {\n                data_6256f8 = 3;\n                continue;\n            }\n            case 0x103:\n            {\n                data_6256ee = 1;\n                continue;\n            }\n            case 0x104:\n            {\n                int32_t rax_37 = sub_40dfa0(data_625970, &data_6256e8, &data_6256e0);\n                if (rax_37 != 0)\n                {\n                    sub_413220(rax_37, var_48, 0, &data_419900, data_625970);\n                    /* no return */\n                }\n                data_6256dc = data_6256e8;\n                data_6245a0 = data_6256e0;\n                continue;\n            }\n            case 0x105:\n            {\n                int64_t rsi_9 = data_625970;\n                if (rsi_9 != 0)\n                {\n                    int32_t rax_36 = *((sub_40afb0(\"--color\", rsi_9, &data_419780, 0x419740, 4, data_6245b8) << 2) + 0x419740);\n                    if (rax_36 != 1)\n                    {\n                        int32_t rax_77;\n                        if (rax_36 == 2)\n                        {\n                            rax_77 = isatty(1);\n                        }\n                        if ((rax_36 != 2 || (rax_36 == 2 && rax_77 == 0)))\n                        {\n                            data_6256d2 = 0;\n                            continue;\n                        }\n                    }\n                }\n                data_6256d2 = 1;\n                data_625680 = 0;\n                continue;\n            }\n            case 0x106:\n            {\n                data_6256b8 = 4;\n                continue;\n            }\n            case 0x107:\n            {\n                data_6256d4 = 2;\n                continue;\n            }\n            case 0x108:\n            {\n                data_6256f8 = *((sub_40afb0(\"--format\", data_625970, &data_4198c0, 0x419890, 4, data_6245b8) << 2) + 0x419890);\n                continue;\n            }\n            case 0x109:\n            {\n                data_6256f8 = 0;\n                r12_3 = \"full-iso\";\n                continue;\n            }\n            case 0x10a:\n            {\n                data_6256b4 = 1;\n                continue;\n            }\n            case 0x10b:\n            {\n                int64_t* rax_32 = sub_412980(0x10);\n                *rax_32 = data_625970;\n                int64_t rdx_8 = data_6256a0;\n                data_6256a0 = rax_32;\n                rax_32[1] = rdx_8;\n                continue;\n            }\n            case 0x10c:\n            {\n                int64_t rsi_7 = data_625970;\n                char rax_30;\n                int32_t rdx_6;\n                if (rsi_7 != 0)\n                {\n                    rdx_6 = *((sub_40afb0(\"--hyperlink\", rsi_7, &data_419780, 0x419740, 4, data_6245b8) << 2) + 0x419740);\n                    if (rdx_6 != 1)\n                    {\n                        rax_30 = 0;\n                        if (rdx_6 == 2)\n                        {\n                            int32_t rax_31;\n                            rax_31 = isatty(1) != 0;\n                            rax_30 = rax_31;\n                        }\n                    }\n                }\n                if ((rsi_7 == 0 || (rsi_7 != 0 && rdx_6 == 1)))\n                {\n                    rax_30 = 1;\n                }\n                data_6256d1 = rax_30;\n                data_6256d1 = (data_6256d1 & 1);\n                continue;\n            }\n            case 0x10d:\n            {\n                data_6256d4 = *((sub_40afb0(\"--indicator-style\", data_625970, &data_419f60, 0x419f50, 4, data_6245b8) << 2) + 0x419f50);\n                continue;\n            }\n            case 0x10e:\n            {\n                sub_411c30(nullptr, *((sub_40afb0(\"--quoting-style\", data_625970, &data_41ea00, 0x41e9c0, 4, data_6245b8) << 2) + 0x41e9c0));\n                continue;\n            }\n            case 0x10f:\n            {\n                data_625698 = 0;\n                continue;\n            }\n            case 0x110:\n            {\n                data_6256e8 = 0x90;\n                data_6256dc = 0x90;\n                data_6256e0 = 1;\n                data_6245a0 = 1;\n                continue;\n            }\n            case 0x111:\n            {\n                r14 = 1;\n                data_6256f0 = *((sub_40afb0(\"--sort\", data_625970, &data_419860, 0x419830, 4, data_6245b8) << 2) + 0x419830);\n                continue;\n            }\n            case 0x112:\n            {\n                data_6256f4 = *((sub_40afb0(\"--time\", data_625970, &data_419800, 0x4197d0, 4, data_6245b8) << 2) + 0x4197d0);\n                continue;\n            }\n            case 0x113:\n            {\n                r12_3 = data_625970;\n                continue;\n            }\n        }\n        if ((rax_12 == 0xef || rax_12 == 0xf1))\n        {\n            data_6256f8 = 0;\n        }\n        else if ((rax_12 == 0xf9 || rax_12 == 0xfa))\n        {\n            data_6256f0 = 3;\n            r14 = 1;\n        }\n    }\n    sub_40a530(2);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x404720",
            "funcEndAddr": "0x40474a",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40474b",
            "funcStartAddr": "0x40474b",
            "funcEndAddr": "0x40476a",
            "decompiledFuncCode": "void sub_40474b()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_40476a",
            "funcStartAddr": "0x40476a",
            "funcEndAddr": "0x4047a1",
            "decompiledFuncCode": "int64_t sub_40476a()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_4047a1",
            "funcStartAddr": "0x4047a1",
            "funcEndAddr": "0x4047f8",
            "decompiledFuncCode": "void sub_4047a1()\n{\n    if (data_624688 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_624690;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_624690 = (rax_1 + 1);\n        *(0x623e40 + ((rax_1 + 1) << 3))();\n    }\n    sub_40474b();\n    data_624688 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_4047f8",
            "funcStartAddr": "0x4047f8",
            "funcEndAddr": "0x4047fd",
            "decompiledFuncCode": "int64_t j_sub_40476a()\n{\n    /* tailcall */\n    return sub_40476a();\n}\n\n"
        },
        {
            "funcName": "sub_404800",
            "funcStartAddr": "0x404800",
            "funcEndAddr": "0x40480c",
            "decompiledFuncCode": "uint64_t sub_404800(int64_t* arg1, int64_t arg2)\n{\n    return (COMBINE(0, *arg1) % arg2);\n}\n\n"
        },
        {
            "funcName": "sub_404810",
            "funcStartAddr": "0x404810",
            "funcEndAddr": "0x40482c",
            "decompiledFuncCode": "int64_t sub_404810(int64_t* arg1, int64_t* arg2)\n{\n    if (*arg1 == *arg2)\n    {\n        int64_t rax;\n        rax = arg1[1] == arg2[1];\n        return rax;\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_404830",
            "funcStartAddr": "0x404830",
            "funcEndAddr": "0x404841",
            "decompiledFuncCode": "uint64_t sub_404830(int32_t arg1)\n{\n    uint64_t rax = data_6255d8;\n    if (rax == 0)\n    {\n        data_6255d8 = arg1;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404850",
            "funcStartAddr": "0x404850",
            "funcEndAddr": "0x404855",
            "decompiledFuncCode": "int64_t sub_404850(int64_t arg1)\n{\n    /* tailcall */\n    return free(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_404860",
            "funcStartAddr": "0x404860",
            "funcEndAddr": "0x404ada",
            "decompiledFuncCode": "uint64_t sub_404860(int64_t* arg1, int64_t* arg2, int32_t arg3, int64_t* arg4)\n{\n    char* r8 = *arg2;\n    int64_t r10 = 0;\n    char* r9 = *arg1;\n    char rbp = arg3;\n    uint64_t rax;\n    char rcx_1;\n    bool cond:0_1;\n    do\n    {\n        rcx_1 = *r8;\n        cond:0_1 = rcx_1 <= 0x3d;\n        if (rcx_1 == 0x3d)\n        {\n        label_404935:\n            if (rbp == 0)\n            {\n                goto label_404919;\n            }\n            rax = arg3;\n            break;\n        }\n        while (true)\n        {\n            if ((!cond:0_1))\n            {\n                uint64_t rcx;\n                if (rcx_1 == 0x5e)\n                {\n                    uint32_t rcx_2 = r8[1];\n                    void* r13_1 = &r8[1];\n                    if ((rcx_2 - 0x40) <= 0x3e)\n                    {\n                        r8 = &r8[2];\n                        rcx = (rcx_2 & 0x1f);\n                        goto label_404897;\n                    }\n                    if (rcx_2 == 0x3f)\n                    {\n                        *r9 = 0x7f;\n                        r10 = (r10 + 1);\n                        r9 = &r9[1];\n                        r8 = r13_1;\n                        break;\n                    }\n                    r8 = r13_1;\n                }\n                if (rcx_1 == 0x5c)\n                {\n                    rcx = r8[1];\n                    r8 = &r8[2];\n                    if (rcx > 0x78)\n                    {\n                        goto label_404897;\n                    }\n                    switch (rcx)\n                    {\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 7:\n                        case 8:\n                        case 9:\n                        case 0xa:\n                        case 0xb:\n                        case 0xc:\n                        case 0xd:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x20:\n                        case 0x21:\n                        case 0x22:\n                        case 0x23:\n                        case 0x24:\n                        case 0x25:\n                        case 0x26:\n                        case 0x27:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x40:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5b:\n                        case 0x5c:\n                        case 0x5d:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x63:\n                        case 0x64:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x73:\n                        case 0x75:\n                        case 0x77:\n                        {\n                            goto label_404897;\n                        }\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        {\n                            uint32_t r12_3 = *r8;\n                            rcx = (rcx - 0x30);\n                            if ((r12_3 - 0x30) <= 7)\n                            {\n                                do\n                                {\n                                    r8 = &r8[1];\n                                    rcx = ((r12_3 + (rcx << 3)) - 0x30);\n                                    r12_3 = *r8;\n                                } while ((r12_3 - 0x30) <= 7);\n                            }\n                            goto label_404897;\n                        }\n                        case 0x3f:\n                        {\n                            rcx = 0x7f;\n                            goto label_404897;\n                        }\n                        case 0x58:\n                        case 0x78:\n                        {\n                            int32_t r13_4 = 0;\n                            int64_t r14_1;\n                            do\n                            {\n                                uint32_t r12_4 = *r8;\n                                char rcx_3 = (r12_4 - 0x30);\n                                if (rcx_3 > 0x36)\n                                {\n                                    break;\n                                }\n                                do\n                                {\n                                    r14_1 = (1 << rcx_3);\n                                    if ((r14_1 & 0x7e0000) != 0)\n                                    {\n                                        r8 = &r8[1];\n                                        r13_4 = ((r12_4 + (r13_4 << 4)) - 0x37);\n                                        break;\n                                    }\n                                    if ((r14_1 & 0x7e000000000000) != 0)\n                                    {\n                                        r8 = &r8[1];\n                                        r13_4 = ((r12_4 + (r13_4 << 4)) - 0x57);\n                                        break;\n                                    }\n                                    if ((r14_1 & 0x3ff) == 0)\n                                    {\n                                        break;\n                                    }\n                                    r8 = &r8[1];\n                                    r13_4 = ((r12_4 + (r13_4 << 4)) - 0x30);\n                                    r12_4 = *r8;\n                                    rcx_3 = (r12_4 - 0x30);\n                                } while (rcx_3 <= 0x36);\n                            } while ((r14_1 & 0x7e0000) != 0);\n                            *r9 = r13_4;\n                            r10 = (r10 + 1);\n                            r9 = &r9[1];\n                            break;\n                            break;\n                        }\n                        case 0x5f:\n                        {\n                            rcx = 0x20;\n                            goto label_404897;\n                        }\n                        case 0x61:\n                        {\n                            rcx = 7;\n                        label_404897:\n                            *r9 = rcx;\n                            r10 = (r10 + 1);\n                            r9 = &r9[1];\n                            break;\n                            break;\n                        }\n                        case 0x62:\n                        {\n                            rcx = 8;\n                            goto label_404897;\n                        }\n                        case 0x65:\n                        {\n                            rcx = 0x1b;\n                            goto label_404897;\n                        }\n                        case 0x66:\n                        {\n                            rcx = 0xc;\n                            goto label_404897;\n                        }\n                        case 0x6e:\n                        {\n                            rcx = 0xa;\n                            goto label_404897;\n                        }\n                        case 0x72:\n                        {\n                            rcx = 0xd;\n                            goto label_404897;\n                        }\n                        case 0x74:\n                        {\n                            rcx = 9;\n                            goto label_404897;\n                        }\n                        case 0x76:\n                        {\n                            rcx = 0xb;\n                            goto label_404897;\n                        }\n                    }\n                }\n                if ((rcx_1 == 0x5c || rcx_1 == 0x5e))\n                {\n                    rax = 0;\n                    break;\n                }\n            }\n            else if ((rcx_1 == 0 || rcx_1 == 0x3a))\n            {\n                rax = 1;\n                break;\n            }\n        label_404919:\n            r8 = &r8[1];\n            *r9 = rcx_1;\n            r10 = (r10 + 1);\n            r9 = &r9[1];\n            rcx_1 = *r8;\n            cond:0_1 = rcx_1 <= 0x3d;\n            if (rcx_1 == 0x3d)\n            {\n                goto label_404935;\n            }\n        }\n    } while ((!(cond:0_1 && (rcx_1 == 0 || rcx_1 == 0x3a))));\n    *arg1 = r9;\n    *arg2 = r8;\n    *arg4 = r10;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404ae0",
            "funcStartAddr": "0x404ae0",
            "funcEndAddr": "0x404b37",
            "decompiledFuncCode": "int64_t sub_404ae0(int32_t arg1)\n{\n    int64_t rax = 0;\n    uint64_t rdi = (arg1 << 4);\n    int64_t rdx = *(rdi + 0x624420);\n    if (rdx != 0)\n    {\n        char* rsi_1 = *(rdi + 0x624428);\n        if (rdx == 1)\n        {\n            rax = *rsi_1 != 0x30;\n            return rax;\n        }\n        rax = 1;\n        bool c_1 = rdx < 2;\n        bool z_1 = rdx == 2;\n        if (z_1)\n        {\n            void* const rdi_1 = &data_41b02d;\n            int64_t rcx = 2;\n            while (rcx != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi_1;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = &rsi_1[1];\n                rdi_1 = (rdi_1 + 1);\n                rcx = (rcx - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax = ((!z_1) && (!c_1));\n            rax = (rax - 0);\n            rax = rax != 0;\n            return rax;\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404b40",
            "funcStartAddr": "0x404b40",
            "funcEndAddr": "0x404ba6",
            "decompiledFuncCode": "int64_t sub_404b40(char* arg1)\n{\n    int64_t var_10;\n    int32_t rax = sub_4132b0(arg1, nullptr, 0, &var_10, &data_41b08a);\n    if (rax == 0)\n    {\n        data_625670 = var_10;\n        return 1;\n    }\n    if (rax != 1)\n    {\n        return 0;\n    }\n    data_625670 = -1;\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_404bb0",
            "funcStartAddr": "0x404bb0",
            "funcEndAddr": "0x404d89",
            "decompiledFuncCode": "char* sub_404bb0()\n{\n    void* rsi = nullptr;\n    int64_t var_648;\n    char* rax_1;\n    do\n    {\n        rax_1 = *(rsi + 0x624410);\n        char rdx_1 = *rax_1;\n        char rcx_1;\n        if (rdx_1 != 0)\n        {\n            do\n            {\n                rcx_1 = rax_1[1];\n                if (rdx_1 == 0x25)\n                {\n                    if (rcx_1 == 0x25)\n                    {\n                        rdx_1 = rax_1[2];\n                        rax_1 = &rax_1[1];\n                    }\n                    if (rcx_1 == 0x62)\n                    {\n                        break;\n                    }\n                }\n                if ((rdx_1 != 0x25 || ((rdx_1 == 0x25 && rcx_1 != 0x25) && rcx_1 != 0x62)))\n                {\n                    rdx_1 = rcx_1;\n                }\n                rax_1 = &rax_1[1];\n            } while (rdx_1 != 0);\n        }\n        if ((rdx_1 == 0 || (rdx_1 != 0 && (!(rdx_1 == 0x25 && rcx_1 == 0x62)))))\n        {\n            rax_1 = nullptr;\n        }\n        *(&var_648 + rsi) = rax_1;\n        rsi = (rsi + 8);\n    } while (rsi != 0x10);\n    uint64_t r15 = 5;\n    int64_t var_640;\n    if ((var_648 != 0 || (var_648 == 0 && var_640 != 0)))\n    {\n        void var_638;\n        void var_38;\n        while (true)\n        {\n            void* rbx_1 = &var_638;\n            nl_item r12_1 = 0x2000e;\n            uint64_t rbp_1 = 0;\n            do\n            {\n                uint64_t var_650 = r15;\n                char* rax_2 = nl_langinfo(r12_1);\n                rax_1 = strchr(rax_2, 0x25);\n                if (rax_1 != 0)\n                {\n                    return rax_1;\n                }\n                rax_1 = sub_40e570(rax_2, rbx_1, 0x80, &var_650, 0, 0);\n                if (rax_1 > 0x7f)\n                {\n                    return rax_1;\n                }\n                uint64_t rax_3 = var_650;\n                if (rbp_1 < rax_3)\n                {\n                    rbp_1 = rax_3;\n                }\n                rbx_1 = (rbx_1 - -0x80);\n                r12_1 = (r12_1 + 1);\n            } while (rbx_1 != &var_38);\n            if (r15 <= rbp_1)\n            {\n                break;\n            }\n            r15 = rbp_1;\n        }\n        int64_t* rbx_2 = &var_648;\n        void* r12_2 = nullptr;\n        do\n        {\n            int64_t rbp_2 = *(r12_2 + 0x624410);\n            void* r15_1 = &var_638;\n            char* r13_2 = ((r12_2 * 0xc0) + 0x6247a0);\n            do\n            {\n                rax_1 = *rbx_2;\n                if (rax_1 == 0)\n                {\n                    rax_1 = snprintf(r13_2, 0x80, \"%s\", rbp_2);\n                }\n                else\n                {\n                    void* r9_2 = (rax_1 - rbp_2);\n                    if (r9_2 > 0x80)\n                    {\n                        return rax_1;\n                    }\n                    rax_1 = __snprintf_chk(r13_2, 0x80, 1, -1, \"%.*s%s%s\", r9_2, rbp_2, r15_1, &rax_1[2]);\n                }\n                if (rax_1 > 0x7f)\n                {\n                    return rax_1;\n                }\n                r15_1 = (r15_1 - -0x80);\n                r13_2 = (r13_2 - -0x80);\n            } while (r15_1 != &var_38);\n            r12_2 = (r12_2 + 8);\n            rbx_2 = &rbx_2[1];\n        } while (r12_2 != 0x10);\n        data_624788 = 1;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_404d90",
            "funcStartAddr": "0x404d90",
            "funcEndAddr": "0x404df6",
            "decompiledFuncCode": "int64_t sub_404d90(char* arg1, char* arg2, char arg3)\n{\n    int64_t* rax = sub_412980(0x20);\n    int64_t rax_1 = 0;\n    if (arg2 != 0)\n    {\n        rax_1 = sub_412bb0(arg2);\n    }\n    rax[1] = rax_1;\n    int64_t rax_2 = 0;\n    if (arg1 != 0)\n    {\n        rax_2 = sub_412bb0(arg1);\n    }\n    *rax = rax_2;\n    int64_t rax_3 = data_625740;\n    rax[2] = arg3;\n    rax[3] = rax_3;\n    data_625740 = rax;\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_404e00",
            "funcStartAddr": "0x404e00",
            "funcEndAddr": "0x404e0b",
            "decompiledFuncCode": "int64_t sub_404e00(int64_t* arg1, int64_t* arg2)\n{\n    /* tailcall */\n    return strcmp(*arg1, *arg2);\n}\n\n"
        },
        {
            "funcName": "sub_404e10",
            "funcStartAddr": "0x404e10",
            "funcEndAddr": "0x404e1e",
            "decompiledFuncCode": "int64_t sub_404e10(int64_t* arg1, int64_t* arg2)\n{\n    /* tailcall */\n    return strcmp(*arg2, *arg1);\n}\n\n"
        },
        {
            "funcName": "sub_404e20",
            "funcStartAddr": "0x404e20",
            "funcEndAddr": "0x404e78",
            "decompiledFuncCode": "uint64_t sub_404e20(char* arg1)\n{\n    char var_1a;\n    int64_t rax = sub_411cd0(&var_1a, 2, arg1, -1, data_625690);\n    if (*arg1 == var_1a)\n    {\n        uint64_t rax_2;\n        rax_2 = strlen(arg1) != rax;\n        return rax_2;\n    }\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_404e80",
            "funcStartAddr": "0x404e80",
            "funcEndAddr": "0x404f3f",
            "decompiledFuncCode": "char* sub_404e80(char* arg1, char arg2)\n{\n    char* rbx = arg1;\n    int64_t rcx = (strlen(arg1) + 1);\n    int64_t rax_1;\n    bool rdx;\n    rdx = HIGHD((3 * rcx));\n    rax_1 = LOWD((3 * rcx));\n    if ((rax_1 >= 0 && ((3 * rcx) >> 0x40) != 0 == 0))\n    {\n        char* rax_2 = sub_412980((rcx * 3));\n        char* rbp = rax_2;\n        char rax_3;\n        do\n        {\n            rax_3 = *rbx;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n            do\n            {\n                rbx = &rbx[1];\n                if ((rax_3 == 0x2f && arg2 != 0))\n                {\n                    *rbp = 0x2f;\n                    rbp = &rbp[1];\n                    break;\n                }\n                uint64_t rdx_2 = rax_3;\n                if (*(rdx_2 + 0x6253a0) == 0)\n                {\n                    char* rdi_1 = rbp;\n                    rbp = &rbp[3];\n                    __sprintf_chk(rdi_1, 1, -1, \"%%%02x\", rdx_2);\n                    break;\n                }\n                *rbp = rax_3;\n                rax_3 = *rbx;\n                rbp = &rbp[1];\n            } while (rax_3 != 0);\n        } while ((rax_3 == 0x2f && arg2 != 0));\n        *rbp = 0;\n        return rax_2;\n    }\n    sub_412bd0();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404f40",
            "funcStartAddr": "0x404f40",
            "funcEndAddr": "0x4050c7",
            "decompiledFuncCode": "int64_t sub_404f40()\n{\n    int64_t rbx = data_625770;\n    int64_t rax_2 = ((rbx >> 1) + rbx);\n    if (rax_2 > data_625758)\n    {\n        free(data_625760);\n        int64_t rax_9;\n        bool rdx_7;\n        rdx_7 = HIGHD((0x18 * rbx));\n        rax_9 = LOWD((0x18 * rbx));\n        uint64_t rdx_8 = ((0x18 * rbx) >> 0x40) != 0;\n        if (rax_9 < 0)\n        {\n            rdx_8 = 1;\n        }\n        if (rdx_8 != 0)\n        {\n            sub_412bd0();\n            /* no return */\n        }\n        rbx = data_625770;\n        data_625760 = sub_412980((rbx * 0x18));\n        rax_2 = (rbx * 3);\n        data_625758 = rax_2;\n    }\n    if (rbx != 0)\n    {\n        rax_2 = data_625760;\n        int64_t rdx_1 = data_625780;\n        int64_t rcx_1 = (rax_2 + (rbx << 3));\n        do\n        {\n            *rax_2 = rdx_1;\n            rax_2 = (rax_2 + 8);\n            rdx_1 = (rdx_1 + 0xc8);\n        } while (rcx_1 != rax_2);\n    }\n    if (data_6256f0 != 0xffffffff)\n    {\n        int32_t rax_3 = _setjmp(0x6246c0);\n        int32_t r8_1 = data_6256f0;\n        int64_t rsi_1;\n        int64_t* rdi_1;\n        if (rax_3 == 0)\n        {\n            rsi_1 = data_625770;\n            rdi_1 = data_625760;\n        }\n        else\n        {\n            if (r8_1 == 3)\n            {\n                __assert_fail(\"sort_type != sort_version\", \"src/ls.c\", 0xee5, \"sort_files\");\n                /* no return */\n            }\n            rsi_1 = data_625770;\n            rdi_1 = data_625760;\n            if (rsi_1 != 0)\n            {\n                int64_t rdx_2 = data_625780;\n                int64_t* rax_4 = rdi_1;\n                void* rcx_2 = &rdi_1[rsi_1];\n                do\n                {\n                    *rax_4 = rdx_2;\n                    rax_4 = &rax_4[1];\n                    rdx_2 = (rdx_2 + 0xc8);\n                } while (rax_4 != rcx_2);\n            }\n            rax_3 = 1;\n        }\n        int32_t rdx_3 = 0;\n        int64_t rax_5 = rax_3;\n        if (r8_1 == 4)\n        {\n            rdx_3 = data_6256f4;\n        }\n        rax_2 = sub_40edd0(rdi_1, rsi_1, *(((data_6256b4 + ((data_6256ef + ((rax_5 + ((rdx_3 + r8_1) << 1)) << 1)) << 1)) << 3) + 0x419580));\n    }\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_4050d0",
            "funcStartAddr": "0x4050d0",
            "funcEndAddr": "0x4050f8",
            "decompiledFuncCode": "int64_t sub_4050d0(char* arg1, char* arg2)\n{\n    *__errno_location() = 0;\n    /* tailcall */\n    return strcoll(arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405100",
            "funcStartAddr": "0x405100",
            "funcEndAddr": "0x405108",
            "decompiledFuncCode": "int64_t sub_405100(int64_t* arg1, int64_t* arg2)\n{\n    /* tailcall */\n    return sub_4050d0(*arg1, *arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405110",
            "funcStartAddr": "0x405110",
            "funcEndAddr": "0x40511b",
            "decompiledFuncCode": "int64_t sub_405110(int64_t* arg1, int64_t* arg2)\n{\n    /* tailcall */\n    return sub_4050d0(*arg2, *arg1);\n}\n\n"
        },
        {
            "funcName": "sub_405120",
            "funcStartAddr": "0x405120",
            "funcEndAddr": "0x40512e",
            "decompiledFuncCode": "int64_t sub_405120(int64_t* arg1, int64_t* arg2)\n{\n    /* tailcall */\n    return sub_40bd40(*arg2, *arg1);\n}\n\n"
        },
        {
            "funcName": "sub_405130",
            "funcStartAddr": "0x405130",
            "funcEndAddr": "0x40513b",
            "decompiledFuncCode": "int64_t sub_405130(int64_t* arg1, int64_t* arg2)\n{\n    /* tailcall */\n    return sub_40bd40(*arg1, *arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405140",
            "funcStartAddr": "0x405140",
            "funcEndAddr": "0x4052bb",
            "decompiledFuncCode": "void sub_405140(char* arg1, char arg2)\n{\n    if ((arg1 != 0 && data_625788 != 0))\n    {\n        sub_404d90(nullptr, arg1, 0);\n    }\n    int64_t rbx = data_625770;\n    uint64_t rax;\n    do\n    {\n        rbx = (rbx - 1);\n        if (rbx == -1)\n        {\n            break;\n        }\n        do\n        {\n            int64_t* rbp_1 = *(data_625760 + (rbx << 3));\n            rax = rbp_1[0x15];\n            if ((rax != 3 && rax != 9))\n            {\n                break;\n            }\n            char* r14_1 = *rbp_1;\n            if (arg1 != 0)\n            {\n                char* rax_2 = sub_40b870(r14_1);\n                if (*rax_2 == 0x2e)\n                {\n                    int64_t rdx_4;\n                    rdx_4 = rax_2[1] == 0x2e;\n                    rax = rax_2[(rdx_4 + 1)];\n                    if (rax == 0)\n                    {\n                        break;\n                    }\n                    if (rax == 0x2f)\n                    {\n                        break;\n                    }\n                }\n                if (*r14_1 != 0x2f)\n                {\n                    char* rax_3 = sub_40bb70(arg1, r14_1, nullptr);\n                    sub_404d90(rax_3, rbp_1[1], arg2);\n                    free(rax_3);\n                }\n            }\n            if ((arg1 == 0 || (arg1 != 0 && *r14_1 == 0x2f)))\n            {\n                sub_404d90(r14_1, rbp_1[1], arg2);\n            }\n            if (rbp_1[0x15] != 9)\n            {\n                break;\n            }\n            rbx = (rbx - 1);\n            free(*rbp_1);\n            free(rbp_1[1]);\n            free(rbp_1[2]);\n        } while (rbx != -1);\n    } while ((rax != 3 && rax != 9));\n    int64_t rdx_2 = data_625770;\n    if (rdx_2 != 0)\n    {\n        uint64_t rsi_3 = data_625760;\n        int64_t rdi_7 = (rsi_3 + (rdx_2 << 3));\n        rax = rsi_3;\n        rdx_2 = 0;\n        do\n        {\n            int64_t rcx_1 = *rax;\n            bool cond:0_1 = *(rcx_1 + 0xa8) != 9;\n            *(rsi_3 + (rdx_2 << 3)) = rcx_1;\n            rcx_1 = cond:0_1;\n            rax = (rax + 8);\n            rdx_2 = (rdx_2 + rcx_1);\n        } while (rdi_7 != rax);\n    }\n    data_625770 = rdx_2;\n}\n\n"
        },
        {
            "funcName": "sub_4052c0",
            "funcStartAddr": "0x4052c0",
            "funcEndAddr": "0x405381",
            "decompiledFuncCode": "void sub_4052c0(int64_t arg1, int64_t arg2)\n{\n    if (arg1 >= arg2)\n    {\n        return;\n    }\n    int64_t rbx = arg1;\n    do\n    {\n        uint64_t* const rdi = stdout;\n        int64_t rcx_1 = data_625680;\n        int64_t rbp_1 = (rbx + 1);\n        char* rsi = stdout[5];\n        int64_t r8_1 = stdout[6];\n        if ((rcx_1 != 0 && (COMBINE(0, arg2) / rcx_1) > (COMBINE(0, rbp_1) / rcx_1)))\n        {\n            if (rsi >= r8_1)\n            {\n                __overflow(rdi, 9);\n                rcx_1 = data_625680;\n            }\n            else\n            {\n                stdout[5] = &rsi[1];\n                *rsi = 9;\n            }\n            rbx = ((rcx_1 + rbx) - (COMBINE(0, rbx) % rcx_1));\n            if (rbx >= arg2)\n            {\n                break;\n            }\n            continue;\n        }\n        if (rsi >= r8_1)\n        {\n            __overflow(rdi, 0x20);\n        }\n        else\n        {\n            stdout[5] = &rsi[1];\n            *rsi = 0x20;\n        }\n        rbx = rbp_1;\n    } while (rbx < arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405390",
            "funcStartAddr": "0x405390",
            "funcEndAddr": "0x405456",
            "decompiledFuncCode": "char* sub_405390(char* arg1, void* arg2)\n{\n    char* rax = *(arg2 + 0x18);\n    int64_t* rbx = *(arg2 + 0x10);\n    int64_t rbp_1 = (rax - rbx);\n    if (rbp_1 > 7)\n    {\n        if (rax == rbx)\n        {\n            *(arg2 + 0x50) = (*(arg2 + 0x50) | 2);\n        }\n        int64_t rdx_1 = *(arg2 + 0x30);\n        int64_t rcx_1 = *(arg2 + 8);\n        void* rax_2 = (&rax[rdx_1] & (!rdx_1));\n        void* rdx_3 = *(arg2 + 0x20);\n        if ((rax_2 - rcx_1) > (rdx_3 - rcx_1))\n        {\n            rax_2 = rdx_3;\n        }\n        void* rbp_3 = ((rbp_1 & 0xfffffffffffffff8) + rbx);\n        *(arg2 + 0x18) = rax_2;\n        *(arg2 + 0x10) = rax_2;\n        fputs_unlocked(arg1, stdout);\n        do\n        {\n            int64_t rdx_4 = *rbx;\n            rbx = &rbx[1];\n            __printf_chk(1, \" %lu\", rdx_4);\n        } while (rbp_3 != rbx);\n        uint64_t* const rdi = stdout;\n        rax = stdout[5];\n        if (rax >= stdout[6])\n        {\n            /* tailcall */\n            return __overflow(rdi, 0xa);\n        }\n        stdout[5] = &rax[1];\n        *rax = 0xa;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405460",
            "funcStartAddr": "0x405460",
            "funcEndAddr": "0x405519",
            "decompiledFuncCode": "int64_t sub_405460(char* arg1, int64_t arg2, int32_t arg3)\n{\n    int64_t rbp_2;\n    if (arg1 == 0)\n    {\n        __printf_chk(1, \"%*lu \");\n        rbp_2 = arg3;\n    }\n    else\n    {\n        int32_t rax = sub_40eb70(arg1, 0);\n        uint64_t* const rsi = stdout;\n        int32_t rbx_1 = (arg3 - rax);\n        if ((arg3 - rax) < 0)\n        {\n            rbx_1 = 0;\n        }\n        fputs_unlocked(arg1, rsi);\n        rbp_2 = (rbx_1 + strlen(arg1));\n        do\n        {\n            uint64_t* const rdi_2 = stdout;\n            char* rdx = stdout[5];\n            if (rdx >= stdout[6])\n            {\n                __overflow(rdi_2, 0x20);\n            }\n            else\n            {\n                stdout[5] = &rdx[1];\n                *rdx = 0x20;\n            }\n            rbx_1 = (rbx_1 - 1);\n        } while (rbx_1 != 0xffffffff);\n    }\n    int64_t rax_3 = ((rbp_2 + data_6255b8) + 1);\n    data_6255b8 = rax_3;\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_405520",
            "funcStartAddr": "0x405520",
            "funcEndAddr": "0x40555f",
            "decompiledFuncCode": "int64_t sub_405520(uid_t arg1, int32_t arg2, char arg3)\n{\n    void* const rax = &data_41b06e;\n    uint64_t rbx = arg1;\n    if (arg3 != 0)\n    {\n        rax = nullptr;\n        if (data_6256ed == 0)\n        {\n            rax = sub_40e160(arg1);\n        }\n    }\n    /* tailcall */\n    return sub_405460(rax, rbx, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405560",
            "funcStartAddr": "0x405560",
            "funcEndAddr": "0x40557a",
            "decompiledFuncCode": "uint64_t sub_405560()\n{\n    uint64_t rax_1 = data_6255d8;\n    if (rax_1 == 0)\n    {\n        rax_1 = (data_6255d4 + 1);\n        data_6255d4 = rax_1;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_405580",
            "funcStartAddr": "0x405580",
            "funcEndAddr": "0x4055e1",
            "decompiledFuncCode": "uint64_t sub_405580(char arg1, char* arg2, int64_t arg3)\n{\n    uint64_t rax_3 = error(0, *__errno_location(), arg2, sub_412040(4, arg3));\n    if (arg1 != 0)\n    {\n        data_6255d0 = 2;\n    }\n    else\n    {\n        rax_3 = data_6255d0;\n        if (rax_3 == 0)\n        {\n            data_6255d0 = 1;\n            return rax_3;\n        }\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_4055f0",
            "funcStartAddr": "0x4055f0",
            "funcEndAddr": "0x405626",
            "decompiledFuncCode": "uint64_t sub_4055f0(int64_t* arg1, int64_t* arg2)\n{\n    int64_t rax_1 = arg2[9];\n    int64_t temp0 = arg1[9];\n    bool cond:0 = temp0 != rax_1;\n    bool cond:1 = temp0 < rax_1;\n    if (temp0 > rax_1)\n    {\n        return 0xffffffff;\n    }\n    if (cond:0)\n    {\n        rax_1 = cond:1;\n        return rax_1;\n    }\n    /* tailcall */\n    return strcmp(*arg1, *arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405630",
            "funcStartAddr": "0x405630",
            "funcEndAddr": "0x405686",
            "decompiledFuncCode": "int64_t sub_405630(int64_t* arg1, int64_t* arg2)\n{\n    int32_t rax = arg1[0x15];\n    int32_t rdx = arg2[0x15];\n    bool rcx = rax == 3;\n    rax = rax == 9;\n    char rcx_1 = (rcx | rax);\n    rax = rdx == 3;\n    rdx = rdx == 9;\n    rdx = (rdx | rax);\n    if ((rdx == 0 && rcx_1 != 0))\n    {\n        return 0xffffffff;\n    }\n    if ((rcx_1 == 0 && rdx != 0))\n    {\n        return 1;\n    }\n    /* tailcall */\n    return sub_4050d0(*arg1, *arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405690",
            "funcStartAddr": "0x405690",
            "funcEndAddr": "0x4056e7",
            "decompiledFuncCode": "uint64_t sub_405690(int64_t* arg1, int64_t* arg2)\n{\n    int32_t rax = arg1[0x15];\n    int32_t rcx = arg2[0x15];\n    bool rdx = rax == 3;\n    rax = rax == 9;\n    char rdx_1 = (rdx | rax);\n    rax = rcx == 3;\n    rcx = rcx == 9;\n    rax = (rax | rcx);\n    int32_t rdx_2;\n    if ((rax == 0 && rdx_1 != 0))\n    {\n        rdx_2 = -1;\n    label_4056cd:\n        return rdx_2;\n    }\n    if (rdx_1 == 0)\n    {\n        rdx_2 = 1;\n        if (rax != 0)\n        {\n            goto label_4056cd;\n        }\n    }\n    /* tailcall */\n    return strcmp(*arg1, *arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4056f0",
            "funcStartAddr": "0x4056f0",
            "funcEndAddr": "0x405746",
            "decompiledFuncCode": "int64_t sub_4056f0(int64_t* arg1, int64_t* arg2)\n{\n    int32_t rax = arg1[0x15];\n    int32_t rdx = arg2[0x15];\n    bool rcx = rax == 3;\n    rax = rax == 9;\n    char rcx_1 = (rcx | rax);\n    rax = rdx == 3;\n    rdx = rdx == 9;\n    rdx = (rdx | rax);\n    if ((rdx == 0 && rcx_1 != 0))\n    {\n        return 0xffffffff;\n    }\n    if ((rcx_1 == 0 && rdx != 0))\n    {\n        return 1;\n    }\n    /* tailcall */\n    return sub_4050d0(*arg2, *arg1);\n}\n\n"
        },
        {
            "funcName": "sub_405750",
            "funcStartAddr": "0x405750",
            "funcEndAddr": "0x4057af",
            "decompiledFuncCode": "uint64_t sub_405750(int64_t* arg1, int64_t* arg2)\n{\n    int32_t rax = arg1[0x15];\n    int32_t rcx = arg2[0x15];\n    bool rdx = rax == 3;\n    rax = rax == 9;\n    char rdx_1 = (rdx | rax);\n    rax = rcx == 3;\n    rcx = rcx == 9;\n    rax = (rax | rcx);\n    int32_t rdx_2;\n    if ((rax == 0 && rdx_1 != 0))\n    {\n        rdx_2 = -1;\n    label_405790:\n        return rdx_2;\n    }\n    if (rdx_1 == 0)\n    {\n        rdx_2 = 1;\n        if (rax != 0)\n        {\n            goto label_405790;\n        }\n    }\n    /* tailcall */\n    return strcmp(*arg2, *arg1);\n}\n\n"
        },
        {
            "funcName": "sub_4057b0",
            "funcStartAddr": "0x4057b0",
            "funcEndAddr": "0x405899",
            "decompiledFuncCode": "uint64_t sub_4057b0(char arg1, int32_t arg2, int32_t arg3)\n{\n    uint64_t rax_1;\n    int32_t rcx;\n    if (arg1 == 0)\n    {\n        rax_1 = 0;\n        if (arg3 != 5)\n        {\n            rcx = arg3 == 3;\n            rax_1 = arg3 == 9;\n            rcx = (rcx | rax_1);\n        }\n    }\n    else\n    {\n        rax_1 = (arg2 & 0xf000);\n        if (rax_1 != 0x8000)\n        {\n            rcx = rax_1 == 0x4000;\n        }\n    }\n    if (((arg1 == 0 && arg3 != 5) || (arg1 != 0 && rax_1 != 0x8000)))\n    {\n        rax_1 = 0x2f;\n        if (rcx == 0)\n        {\n            rax_1 = 0;\n            if (data_6256d4 != 1)\n            {\n                int32_t rax_3;\n                if (arg1 != 0)\n                {\n                    int32_t rsi = (arg2 & 0xf000);\n                    if (rsi == 0xa000)\n                    {\n                        return 0x40;\n                    }\n                    if (rsi == 0x1000)\n                    {\n                        return 0x7c;\n                    }\n                    rax_3 = rsi == 0xc000;\n                }\n                else\n                {\n                    if (arg3 == 6)\n                    {\n                        return 0x40;\n                    }\n                    if (arg3 == 1)\n                    {\n                        return 0x7c;\n                    }\n                    rax_3 = arg3 == 7;\n                }\n                rax_1 = ((-rax_3) & 0x3d);\n            }\n        }\n    }\n    if (((arg1 != 0 && rax_1 == 0x8000) && data_6256d4 == 3))\n    {\n        return ((!(0 - 0)) & 0x2a);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4058a0",
            "funcStartAddr": "0x4058a0",
            "funcEndAddr": "0x4058ea",
            "decompiledFuncCode": "uint64_t sub_4058a0(char arg1)\n{\n    int32_t rdx;\n    int32_t rsi;\n    uint64_t rax = sub_4057b0(arg1, rsi, rdx);\n    char rbx = rax;\n    if (rax != 0)\n    {\n        uint64_t* const rdi_1 = stdout;\n        rax = stdout[5];\n        if (rax >= stdout[6])\n        {\n            __overflow(rdi_1, rbx);\n        }\n        else\n        {\n            stdout[5] = (rax + 1);\n            *rax = rbx;\n        }\n        data_6255b8 = (data_6255b8 + 1);\n    }\n    rax = rbx != 0;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4058f0",
            "funcStartAddr": "0x4058f0",
            "funcEndAddr": "0x405966",
            "decompiledFuncCode": "uint64_t sub_4058f0(int64_t* arg1, int64_t* arg2)\n{\n    int32_t rax = arg1[0x15];\n    int32_t rdx = arg2[0x15];\n    bool rcx = rax == 3;\n    rax = rax == 9;\n    char rcx_1 = (rcx | rax);\n    rax = rdx == 3;\n    rdx = rdx == 9;\n    rdx = (rdx | rax);\n    if ((rdx == 0 && rcx_1 != 0))\n    {\n    label_405965:\n        return 0xffffffff;\n    }\n    uint64_t rax_1;\n    if (rcx_1 == 0)\n    {\n        rax_1 = 1;\n    }\n    if ((rcx_1 != 0 || (rcx_1 == 0 && rdx == 0)))\n    {\n        int64_t rax_2 = arg2[0xc];\n        int64_t temp0_1 = arg1[0xc];\n        bool cond:0_1 = temp0_1 < rax_2;\n        if (temp0_1 > rax_2)\n        {\n            goto label_405965;\n        }\n        if (cond:0_1)\n        {\n            return 1;\n        }\n        int32_t rax_3 = arg2[0xd];\n        rax_1 = (rax_3 - arg1[0xd]);\n        if (rax_3 == arg1[0xd])\n        {\n            /* tailcall */\n            return strcmp(*arg1, *arg2);\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_405970",
            "funcStartAddr": "0x405970",
            "funcEndAddr": "0x4059cf",
            "decompiledFuncCode": "uint64_t sub_405970(int64_t* arg1, int64_t* arg2)\n{\n    int32_t rax = arg1[0x15];\n    int32_t rcx = arg2[0x15];\n    bool rdx = rax == 3;\n    rax = rax == 9;\n    char rdx_1 = (rdx | rax);\n    rax = rcx == 9;\n    rcx = rcx == 3;\n    rax = (rax | rcx);\n    int32_t rdx_2;\n    if ((rax == 0 && rdx_1 != 0))\n    {\n        rdx_2 = -1;\n    label_4059b0:\n        return rdx_2;\n    }\n    if (rdx_1 == 0)\n    {\n        rdx_2 = 1;\n        if (rax != 0)\n        {\n            goto label_4059b0;\n        }\n    }\n    /* tailcall */\n    return sub_40bd40(*arg2, *arg1);\n}\n\n"
        },
        {
            "funcName": "sub_4059d0",
            "funcStartAddr": "0x4059d0",
            "funcEndAddr": "0x405a27",
            "decompiledFuncCode": "uint64_t sub_4059d0(int64_t* arg1, int64_t* arg2)\n{\n    int32_t rax = arg1[0x15];\n    int32_t rcx = arg2[0x15];\n    bool rdx = rax == 3;\n    rax = rax == 9;\n    char rdx_1 = (rdx | rax);\n    rax = rcx == 9;\n    rcx = rcx == 3;\n    rax = (rax | rcx);\n    int32_t rdx_2;\n    if ((rax == 0 && rdx_1 != 0))\n    {\n        rdx_2 = -1;\n    label_405a0d:\n        return rdx_2;\n    }\n    if (rdx_1 == 0)\n    {\n        rdx_2 = 1;\n        if (rax != 0)\n        {\n            goto label_405a0d;\n        }\n    }\n    /* tailcall */\n    return sub_40bd40(*arg1, *arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405a30",
            "funcStartAddr": "0x405a30",
            "funcEndAddr": "0x405ae6",
            "decompiledFuncCode": "int64_t sub_405a30(int64_t* arg1, int64_t* arg2)\n{\n    int32_t rax = arg1[0x15];\n    int32_t rdx = arg2[0x15];\n    bool rcx = rax == 3;\n    rax = rax == 9;\n    char rcx_1 = (rcx | rax);\n    rax = rdx == 3;\n    rdx = rdx == 9;\n    rdx = (rdx | rax);\n    if ((rdx == 0 && rcx_1 != 0))\n    {\n        return 0xffffffff;\n    }\n    if ((rcx_1 == 0 && rdx != 0))\n    {\n        return 1;\n    }\n    char* r12 = *arg2;\n    char* rbx_1 = *arg1;\n    char* rbp = strrchr(r12, 0x2e);\n    char* rax_3 = strrchr(rbx_1, 0x2e);\n    if (rax_3 == 0)\n    {\n        rax_3 = &data_41b08a;\n    }\n    else if (rbp == 0)\n    {\n        rbp = &data_41b08a;\n    }\n    if (((rax_3 == 0 && rbp != 0) || rax_3 != 0))\n    {\n        int64_t rax_4 = strcmp(rbp, rax_3);\n        if (rax_4 != 0)\n        {\n            return rax_4;\n        }\n    }\n    /* tailcall */\n    return strcmp(r12, rbx_1);\n}\n\n"
        },
        {
            "funcName": "sub_405af0",
            "funcStartAddr": "0x405af0",
            "funcEndAddr": "0x405c6f",
            "decompiledFuncCode": "__sighandler_t sub_405af0(char arg1)\n{\n    if (arg1 != 0)\n    {\n        int32_t* rbx_1 = &data_419504;\n        int32_t r12 = 0x14;\n        sigemptyset(&data_6255e0);\n        int32_t* rbp_1 = &data_419504;\n        int64_t var_b8;\n        while (true)\n        {\n            sigaction(r12, nullptr, &var_b8);\n            if (var_b8 != 1)\n            {\n                sigaddset(&data_6255e0, r12);\n            }\n            if (rbp_1 == 0x419530)\n            {\n                break;\n            }\n            r12 = *rbp_1;\n            rbp_1 = &rbp_1[1];\n        }\n        int32_t var_30 = 0x10000000;\n        int32_t rbp_2 = 0x14;\n        int128_t var_b0 = data_6255e0;\n        int128_t var_a0 = data_6255f0;\n        int128_t var_90 = data_625600;\n        int128_t var_80 = data_625610;\n        int128_t var_70 = data_625620;\n        int128_t var_60 = data_625630;\n        int128_t var_50 = data_625640;\n        int128_t var_40 = data_625650;\n        int64_t rax_2;\n        while (true)\n        {\n            rax_2 = sigismember(&data_6255e0, rbp_2);\n            if (rax_2 != 0)\n            {\n                int64_t rax_3 = 0x404830;\n                struct sigaction* rsi_4 = &var_b8;\n                if (rbp_2 == 0x14)\n                {\n                    rax_3 = 0x405560;\n                }\n                var_b8 = rax_3;\n                rax_2 = sigaction(rbp_2, rsi_4, nullptr);\n            }\n            if (rbx_1 == 0x419530)\n            {\n                break;\n            }\n            rbp_2 = *rbx_1;\n            rbx_1 = &rbx_1[1];\n        }\n        return rax_2;\n    }\n    int32_t* rbx = &data_419504;\n    int32_t rbp = 0x14;\n    __sighandler_t rax_1;\n    while (true)\n    {\n        rax_1 = sigismember(&data_6255e0, rbp);\n        if ((rax_1 == 0 && rbx == 0x419530))\n        {\n            break;\n        }\n        if (rax_1 != 0)\n        {\n            rax_1 = signal(rbp, nullptr);\n            if (rbx == 0x419530)\n            {\n                break;\n            }\n        }\n        rbp = *rbx;\n        rbx = &rbx[1];\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_405c70",
            "funcStartAddr": "0x405c70",
            "funcEndAddr": "0x405cc2",
            "decompiledFuncCode": "int64_t sub_405c70()\n{\n    if (data_624448 == 0)\n    {\n        sub_405cd0(&data_624420, &data_624428);\n        sub_405cd0(&data_624450, &data_624458);\n        /* tailcall */\n        return sub_405cd0(&data_624430, &data_624438);\n    }\n    /* tailcall */\n    return sub_405cd0(&data_624440, &data_624448);\n}\n\n"
        },
        {
            "funcName": "sub_405cd0",
            "funcStartAddr": "0x405cd0",
            "funcEndAddr": "0x405d39",
            "decompiledFuncCode": "int64_t sub_405cd0(int64_t* arg1, int64_t* arg2)\n{\n    if (data_6256d0 == 0)\n    {\n        data_6256d0 = 1;\n        if (tcgetpgrp(1) >= 0)\n        {\n            sub_405af0(1);\n            sub_405c70();\n        }\n        else\n        {\n            sub_405c70();\n        }\n    }\n    /* tailcall */\n    return fwrite_unlocked(*arg2, *arg1, 1, stdout);\n}\n\n"
        },
        {
            "funcName": "sub_405d40",
            "funcStartAddr": "0x405d40",
            "funcEndAddr": "0x405d66",
            "decompiledFuncCode": "int64_t sub_405d40()\n{\n    sub_405cd0(&data_624420, &data_624428);\n    /* tailcall */\n    return sub_405cd0(&data_624430, &data_624438);\n}\n\n"
        },
        {
            "funcName": "sub_405d70",
            "funcStartAddr": "0x405d70",
            "funcEndAddr": "0x405e21",
            "decompiledFuncCode": "uint64_t sub_405d70()\n{\n    if (data_6255d8 == 0)\n    {\n        uint64_t rax = data_6255d4;\n        if (rax == 0)\n        {\n            return rax;\n        }\n    }\n    uint64_t rax_4;\n    while (true)\n    {\n        if (data_6256d0 != 0)\n        {\n            sub_405d40();\n        }\n        fflush_unlocked(stdout);\n        void var_88;\n        sigprocmask(0, &data_6255e0, &var_88);\n        int32_t rbx_1 = data_6255d8;\n        int32_t rax_1 = data_6255d4;\n        if (rax_1 == 0)\n        {\n            signal(rbx_1, nullptr);\n        }\n        else\n        {\n            rbx_1 = 0x13;\n            data_6255d4 = (rax_1 - 1);\n        }\n        raise(rbx_1);\n        sigprocmask(2, &var_88, nullptr);\n        if (data_6255d8 == 0)\n        {\n            rax_4 = data_6255d4;\n            if (rax_4 == 0)\n            {\n                break;\n            }\n        }\n    }\n    return rax_4;\n}\n\n"
        },
        {
            "funcName": "sub_405e30",
            "funcStartAddr": "0x405e30",
            "funcEndAddr": "0x405e91",
            "decompiledFuncCode": "void sub_405e30()\n{\n    if (data_6256d2 == 0)\n    {\n        return;\n    }\n    if (sub_404ae0(4) != 0)\n    {\n        sub_405cd0(&data_624420, &data_624428);\n        sub_405cd0(&data_624460, &data_624468);\n        /* tailcall */\n        return sub_405cd0(&data_624430, &data_624438);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_405ea0",
            "funcStartAddr": "0x405ea0",
            "funcEndAddr": "0x4062c9",
            "decompiledFuncCode": "void* sub_405ea0(int64_t* arg1, char* arg2, int32_t* arg3, int32_t arg4, \n    void** arg5, char* arg6, void* arg7 @ rbx)\n{\n    void* var_30 = arg7;\n    char* r13 = *arg1;\n    int32_t rax;\n    rax = sub_411c20(arg3) <= 2;\n    rax = (rax & data_625698);\n    bool var_60 = rax;\n    void* r9;\n    int32_t r10_1;\n    if (rax == 0)\n    {\n        r10_1 = 0;\n        if (arg4 == 0)\n        {\n            r13 = arg2;\n            r9 = strlen(arg2);\n        }\n    }\n    else\n    {\n        if (arg4 == 0)\n        {\n            void* rax_10 = strlen(arg2);\n            arg7 = rax_10;\n            void* r12_1 = (rax_10 + 1);\n            if (rax_10 > 0x1fff)\n            {\n                r13 = sub_412980(r12_1);\n            }\n            memcpy(r13, arg2, r12_1);\n            var_60 = false;\n            goto label_406056;\n        }\n        r10_1 = 1;\n    }\n    int32_t var_70;\n    char rax_15;\n    if (((rax == 0 && arg4 != 0) || rax != 0))\n    {\n        void* rax_1 = sub_411cd0(r13, 0x2000, arg2, -1, arg3);\n        int32_t r10_2 = r10_1;\n        r9 = rax_1;\n        if (rax_1 > 0x1fff)\n        {\n            var_60 = r10_2;\n            var_70 = rax_1;\n            char* rax_26 = sub_412980((rax_1 + 1));\n            r13 = rax_26;\n            sub_411cd0(rax_26, (rax_1 + 1), arg2, -1, arg3);\n            r10_2 = var_60;\n            r9 = var_70;\n        }\n        var_60 = true;\n        if (*arg2 == *r13)\n        {\n            var_60 = r9;\n            r9 = 1;\n            var_60 = 1 != strlen(arg2);\n        }\n        if (r10_2 != 0)\n        {\n            arg7 = r9;\n        label_406056:\n            char* rbp_2 = (r13 + arg7);\n            if (__ctype_get_mb_cur_max() <= 1)\n            {\n                if (rbp_2 > r13)\n                {\n                    uint16_t** rax_12 = __ctype_b_loc();\n                    char* rdx_4 = r13;\n                    do\n                    {\n                        if ((*(&*rax_12[*rdx_4] + 1) & 0x40) == 0)\n                        {\n                            *rdx_4 = 0x3f;\n                        }\n                        rdx_4 = &rdx_4[1];\n                    } while (rdx_4 != rbp_2);\n                }\n                r9 = arg7;\n            }\n            else if (rbp_2 <= r13)\n            {\n                r9 = nullptr;\n                arg7 = nullptr;\n            }\n            else\n            {\n                char* r15_1 = r13;\n                char* r14_1 = r13;\n                arg7 = nullptr;\n                do\n                {\n                    char rax_19 = *r14_1;\n                    if (rax_19 <= 0x3f)\n                    {\n                        if (rax_19 < 0x25)\n                        {\n                            if ((rax_19 - 0x20) <= 3)\n                            {\n                                goto label_406114;\n                            }\n                            goto label_406144;\n                        }\n                    label_406114:\n                        *r15_1 = rax_19;\n                        r14_1 = &r14_1[1];\n                        arg7 = (arg7 + 1);\n                        r15_1 = &r15_1[1];\n                    }\n                    else\n                    {\n                        if (rax_19 >= 0x41)\n                        {\n                            if (rax_19 <= 0x5f)\n                            {\n                                goto label_406114;\n                            }\n                            if ((rax_19 - 0x61) <= 0x1d)\n                            {\n                                goto label_406114;\n                            }\n                            goto label_406144;\n                        }\n                    label_406144:\n                        mbstate_t var_40;\n                        var_40.__count = 0;\n                        var_40.__value = 0;\n                        while (true)\n                        {\n                            void* r12_2 = &r15_1[1];\n                            uint32_t var_44;\n                            uint64_t rax_22 = sub_416e80(&var_44, r14_1, (rbp_2 - r14_1), &var_40);\n                            if (rax_22 == -1)\n                            {\n                                *r15_1 = 0x3f;\n                                r14_1 = &r14_1[1];\n                                arg7 = (arg7 + 1);\n                            }\n                            else if (rax_22 == -2)\n                            {\n                                *r15_1 = 0x3f;\n                                arg7 = (arg7 + 1);\n                                r14_1 = rbp_2;\n                            }\n                            else\n                            {\n                                uint32_t rdi_8 = var_44;\n                                var_70 = rax_22;\n                                int32_t rax_20;\n                                void* rdx_7;\n                                if (rax_22 != 0)\n                                {\n                                    rax_20 = wcwidth(rdi_8);\n                                    int64_t rcx_3 = var_70;\n                                    rdx_7 = &r14_1[rcx_3];\n                                    if (rax_20 >= 0)\n                                    {\n                                        int64_t rdx_10 = 0;\n                                        do\n                                        {\n                                            r15_1[rdx_10] = r14_1[rdx_10];\n                                            rdx_10 = (rdx_10 + 1);\n                                        } while (rcx_3 != rdx_10);\n                                        r14_1 = &r14_1[rcx_3];\n                                        r15_1 = &r15_1[rcx_3];\n                                    }\n                                }\n                                else\n                                {\n                                    rax_20 = wcwidth(rdi_8);\n                                    rdx_7 = &r14_1[1];\n                                    if (rax_20 >= 0)\n                                    {\n                                        char rcx_5 = *r14_1;\n                                        r14_1 = rdx_7;\n                                        *r15_1 = rcx_5;\n                                        r15_1 = r12_2;\n                                    }\n                                }\n                                if (((rax_22 == 0 && rax_20 >= 0) || (rax_22 != 0 && rax_20 >= 0)))\n                                {\n                                    arg7 = (arg7 + rax_20);\n                                }\n                                if (((rax_22 != 0 && rax_20 < 0) || (rax_22 == 0 && rax_20 < 0)))\n                                {\n                                    *r15_1 = 0x3f;\n                                    arg7 = (arg7 + 1);\n                                    r15_1 = r12_2;\n                                    r14_1 = rdx_7;\n                                }\n                                if (mbsinit(&var_40) != 0)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                            r15_1 = r12_2;\n                            break;\n                        }\n                    }\n                } while (rbp_2 > r14_1);\n                r9 = (r15_1 - r13);\n            }\n            rax_15 = data_625768;\n            if (rax_15 != 0)\n            {\n                goto label_4060b5;\n            }\n            goto label_4060c3;\n        }\n    }\n    if (arg5 != 0)\n    {\n        var_70 = r9;\n        r9 = var_70;\n        if (__ctype_get_mb_cur_max() > 1)\n        {\n            r9 = var_70;\n            arg7 = sub_40e9b0(r13, r9, 0);\n        }\n        else\n        {\n            int64_t rbp_1 = (r13 + r9);\n            if (rbp_1 <= r13)\n            {\n                arg7 = nullptr;\n            }\n            else\n            {\n                var_70 = r9;\n                arg7 = nullptr;\n                r9 = var_70;\n                uint16_t* rcx_1 = *__ctype_b_loc();\n                char* rax_7 = r13;\n                do\n                {\n                    arg7 = (arg7 - -1);\n                    rax_7 = &rax_7[1];\n                } while (rbp_1 != rax_7);\n            }\n        }\n        if (data_625768 != 0)\n        {\n            goto label_4060b5;\n        }\n        *arg6 = 0;\n    label_4060cc:\n        *arg5 = arg7;\n    }\n    else if (data_625768 == 0)\n    {\n        *arg6 = 0;\n    }\n    else\n    {\n    label_4060b5:\n        rax_15 = (((data_625769 ^ 1) | var_60) ^ 1);\n    label_4060c3:\n        *arg6 = rax_15;\n        if (arg5 != 0)\n        {\n            goto label_4060cc;\n        }\n    }\n    *arg1 = r13;\n    return r9;\n}\n\n"
        },
        {
            "funcName": "sub_4062d0",
            "funcStartAddr": "0x4062d0",
            "funcEndAddr": "0x406687",
            "decompiledFuncCode": "void* sub_4062d0(char* arg1, int32_t* arg2, int32_t arg3, int64_t* arg4, \n    char arg5, void* arg6, char* arg7)\n{\n    void var_2038;\n    void* var_2040 = &var_2038;\n    char var_2041;\n    void* rax = sub_405ea0(&var_2040, arg1, arg2, arg3, nullptr, &var_2041, arg6);\n    if ((var_2041 != 0 && arg5 != 0))\n    {\n        uint64_t* const rdi_11 = stdout;\n        char* rax_16 = stdout[5];\n        if (rax_16 >= stdout[6])\n        {\n            __overflow(rdi_11, 0x20);\n        }\n        else\n        {\n            stdout[5] = &rax_16[1];\n            *rax_16 = 0x20;\n        }\n        data_6255b8 = (data_6255b8 + 1);\n    }\n    if (arg4 != 0)\n    {\n        if (sub_404ae0(4) != 0)\n        {\n            sub_405d40();\n        }\n        sub_405cd0(&data_624420, &data_624428);\n        sub_405cd0(arg4, &arg4[1]);\n        sub_405cd0(&data_624430, &data_624438);\n    }\n    int64_t r9_2;\n    void* r10_1;\n    char r12_1;\n    if (arg7 == 0)\n    {\n        r10_1 = rax;\n        r9_2 = 0;\n        r12_1 = 0;\n    }\n    else\n    {\n        r12_1 = data_625768;\n        int64_t r9_1;\n        void* r10;\n        if (r12_1 != 0)\n        {\n            r12_1 = data_625769;\n            if (r12_1 != 0)\n            {\n                if (var_2041 != 0)\n                {\n                    r10 = rax;\n                    r9_1 = 0;\n                    r12_1 = 0;\n                }\n                else\n                {\n                    uint64_t* const rdi_10 = stdout;\n                    r10 = (rax - 2);\n                    char rdx_7 = *var_2040;\n                    char* rax_15 = stdout[5];\n                    if (rax_15 >= stdout[6])\n                    {\n                        __overflow(rdi_10, rdx_7);\n                        r9_1 = 1;\n                    }\n                    else\n                    {\n                        r9_1 = 1;\n                        stdout[5] = &rax_15[1];\n                        *rax_15 = rdx_7;\n                    }\n                }\n            }\n        }\n        if ((r12_1 == 0 || r12_1 == 0))\n        {\n            r10 = rax;\n            r9_1 = 0;\n        }\n        char* rax_2 = sub_404e80(data_625748, 0);\n        char* rax_3 = sub_404e80(arg7, 1);\n        char const* const rcx_1 = &data_41b08a;\n        if (*rax_3 != 0x2f)\n        {\n            rcx_1 = \"/\";\n        }\n        __printf_chk(1, &data_41b070, rax_2, rcx_1, rax_3);\n        free(rax_2);\n        free(rax_3);\n        r9_2 = r9_1;\n        r10_1 = r10;\n    }\n    if (((arg7 == 0 && arg6 == 0) || (arg7 != 0 && arg6 == 0)))\n    {\n        fwrite_unlocked((var_2040 + r9_2), 1, r10_1, stdout);\n        data_6255b8 = (data_6255b8 + rax);\n    }\n    if (((arg7 == 0 && arg6 != 0) || (arg7 != 0 && arg6 != 0)))\n    {\n        if (data_6256d8 != 0)\n        {\n            int64_t* rdx_2 = *(arg6 + 0x18);\n            if ((*(arg6 + 0x20) - rdx_2) <= 7)\n            {\n                _obstack_newchunk(arg6, 8);\n                rdx_2 = *(arg6 + 0x18);\n            }\n            *rdx_2 = data_6255b8;\n            *(arg6 + 0x18) = (*(arg6 + 0x18) + 8);\n        }\n        fwrite_unlocked((var_2040 + r9_2), 1, r10_1, stdout);\n        void* rax_9 = (data_6255b8 + rax);\n        bool cond:1_1 = data_6256d8 == 0;\n        data_6255b8 = rax_9;\n        if ((!cond:1_1))\n        {\n            void** rcx_3 = *(arg6 + 0x18);\n            if ((*(arg6 + 0x20) - rcx_3) <= 7)\n            {\n                _obstack_newchunk(arg6, 8);\n                rcx_3 = *(arg6 + 0x18);\n                rax_9 = data_6255b8;\n            }\n            *rcx_3 = rax_9;\n            *(arg6 + 0x18) = (*(arg6 + 0x18) + 8);\n        }\n    }\n    if (arg7 != 0)\n    {\n        fwrite_unlocked(&data_41b084, 1, 6, stdout);\n        if (r12_1 != 0)\n        {\n            uint64_t* const rdi_8 = stdout;\n            char rdx_6 = *((var_2040 + rax) - 1);\n            char* rax_11 = stdout[5];\n            if (rax_11 >= stdout[6])\n            {\n                __overflow(rdi_8, rdx_6);\n            }\n            else\n            {\n                stdout[5] = &rax_11[1];\n                *rax_11 = rdx_6;\n            }\n        }\n    }\n    void* rdi_9 = var_2040;\n    if ((rdi_9 != &var_2038 && rdi_9 != arg1))\n    {\n        free(rdi_9);\n    }\n    return (var_2041 + rax);\n}\n\n"
        },
        {
            "funcName": "sub_406690",
            "funcStartAddr": "0x406690",
            "funcEndAddr": "0x406ae8",
            "decompiledFuncCode": "void* sub_406690(int64_t* arg1, char arg2, void* arg3, int64_t arg4)\n{\n    char rax = data_6256d2;\n    bool rcx_1;\n    uint32_t rdx_2;\n    void* rbx_1;\n    char* rbp;\n    int32_t r8_2;\n    if (arg2 == 0)\n    {\n        rbp = *arg1;\n        if (rax == 0)\n        {\n        label_4066ed:\n            rbx_1 = sub_4062d0(rbp, data_625690, *(arg1 + 0xc4), nullptr, (arg2 ^ 1), arg3, arg1[2]);\n            sub_405d70();\n        label_406708:\n            return rbx_1;\n        }\n        rdx_2 = *(arg1 + 0xb9);\n        if ((data_625750 != 0 && rdx_2 != 0))\n        {\n            r8_2 = *(arg1 + 0xac);\n        }\n        if ((data_625750 == 0 || (data_625750 != 0 && rdx_2 == 0)))\n        {\n            r8_2 = arg1[6];\n        }\n    }\n    else\n    {\n        rbp = arg1[1];\n        if (rax == 0)\n        {\n            goto label_4066ed;\n        }\n        r8_2 = *(arg1 + 0xac);\n        char rax_4;\n        int64_t* rcx_5;\n        uint64_t rcx;\n        if (*(arg1 + 0xb9) == 0)\n        {\n            rax_4 = sub_404ae0(0xc);\n            rdx_2 = -1;\n            if (rax_4 != 0)\n            {\n                rcx = 0xc0;\n            label_4067d0:\n                rcx_5 = (rcx + 0x624420);\n            }\n        }\n        else\n        {\n            rcx_1 = arg1[0x17];\n            rdx_2 = 0;\n            uint64_t rax_6;\n            if (rcx_1 == 0)\n            {\n            label_406782:\n                rax_6 = *((arg1[0x15] << 2) + &data_419540);\n                rcx_1 = rax_6 == 7;\n                if (rax_6 == 5)\n                {\n                label_406918:\n                    int64_t* rbx_2 = data_6256c8;\n                    uint64_t rcx_7 = strlen(rbp);\n                    if (rbx_2 == 0)\n                    {\n                    label_406961:\n                        rcx = 0x50;\n                        goto label_4067d0;\n                    }\n                    int32_t rax_17;\n                    uint64_t rdx_7;\n                    do\n                    {\n                        rdx_7 = *rbx_2;\n                        if (rcx_7 >= rdx_7)\n                        {\n                            rax_17 = strncmp(&rbp[(rcx_7 - rdx_7)], rbx_2[1], rdx_7);\n                            if (rax_17 == 0)\n                            {\n                                break;\n                            }\n                        }\n                        rbx_2 = rbx_2[4];\n                    } while (rbx_2 != 0);\n                    if ((!(rcx_7 >= rdx_7 && rax_17 == 0)))\n                    {\n                        goto label_406961;\n                    }\n                    rcx_5 = &rbx_2[2];\n                }\n            }\n            else\n            {\n            label_406885:\n                int32_t rax_15 = (r8_2 & 0xf000);\n                if (rax_15 == 0x8000)\n                {\n                    if (((r8_2 & 0x800) != 0 && sub_404ae0(0x10) != 0))\n                    {\n                        rcx = 0x100;\n                        goto label_4067d0;\n                    }\n                    if ((r8_2 & 0x400) != 0)\n                    {\n                        if (sub_404ae0(0x11) == 0)\n                        {\n                            goto label_4069b6;\n                        }\n                        rcx = 0x110;\n                        goto label_4067d0;\n                    }\n                label_4069b6:\n                    if ((sub_404ae0(0x15) != 0 && arg1[0x18] != 0))\n                    {\n                        rcx = 0x150;\n                        goto label_4067d0;\n                    }\n                    if (((r8_2 & 0x49) != 0 && sub_404ae0(0xe) != 0))\n                    {\n                        rcx = 0xe0;\n                        goto label_4067d0;\n                    }\n                    if (arg1[5] <= 1)\n                    {\n                        goto label_406918;\n                    }\n                    if (sub_404ae0(0x16) == 0)\n                    {\n                        goto label_406918;\n                    }\n                    rcx = 0x160;\n                    goto label_4067d0;\n                }\n                if (rax_15 == 0x4000)\n                {\n                    char rax_27;\n                    if ((r8_2 & 0x202) == 0x202)\n                    {\n                        rax_27 = sub_404ae0(0x14);\n                        rcx = 0x140;\n                    }\n                    if (((r8_2 & 0x202) != 0x202 || ((r8_2 & 0x202) == 0x202 && rax_27 == 0)))\n                    {\n                        char rax_23;\n                        if ((r8_2 & 2) != 0)\n                        {\n                            rax_23 = sub_404ae0(0x13);\n                            rcx = 0x130;\n                        }\n                        if (((r8_2 & 2) == 0 || ((r8_2 & 2) != 0 && rax_23 == 0)))\n                        {\n                            rcx = 0x60;\n                            if ((r8_2 & 0x200) != 0)\n                            {\n                                char rax_24;\n                                int64_t rcx_8;\n                                rax_24 = sub_404ae0(0x12);\n                                int64_t rcx_9;\n                                rcx_9 = ((rcx_8 - rcx_8) & 0x40);\n                                rcx = (rcx_9 + 0x120);\n                            }\n                        }\n                    }\n                    goto label_4067d0;\n                }\n                if (rax_15 != 0xa000)\n                {\n                    rcx = 0x80;\n                    if (rax_15 != 0x1000)\n                    {\n                        rcx = 0x90;\n                        if (rax_15 != 0xc000)\n                        {\n                            rcx = 0xa0;\n                            if (rax_15 != 0x6000)\n                            {\n                                rcx = 0xb0;\n                                if (rax_15 != 0x2000)\n                                {\n                                    rcx = 0xd0;\n                                }\n                            }\n                        }\n                    }\n                    goto label_4067d0;\n                }\n                rax_6 = 7;\n            }\n            if (((rcx_1 == 0 && rax_6 != 5) || rcx_1 != 0))\n            {\n                if (rdx_2 != 0)\n                {\n                label_406ae0:\n                    rcx = (rax_6 << 4);\n                    goto label_4067d0;\n                }\n                if (rcx_1 == 0)\n                {\n                    goto label_406ae0;\n                }\n                rcx = 0xd0;\n                if (data_625750 == 0)\n                {\n                    char rax_7;\n                    int64_t rcx_2;\n                    rax_7 = sub_404ae0(0xd);\n                    rcx = (((rcx_2 - rcx_2) & 0xffffffffffffffa0) + 0xd0);\n                }\n                goto label_4067d0;\n            }\n        }\n        if ((*(arg1 + 0xb9) != 0 || (*(arg1 + 0xb9) == 0 && rax_4 != 0)))\n        {\n            if (rcx_5[1] != 0)\n            {\n                goto label_40681b;\n            }\n            if (sub_404ae0(4) == 0)\n            {\n                goto label_4066ed;\n            }\n            rcx_5 = nullptr;\n        label_40681b:\n            rbx_1 = sub_4062d0(rbp, data_625690, *(arg1 + 0xc4), rcx_5, (arg2 ^ 1), arg3, arg1[2]);\n            sub_405d70();\n            sub_405c70();\n            int64_t rcx_6 = data_625670;\n            if ((rcx_6 != 0 && (COMBINE(0, arg4) / rcx_6) != (COMBINE(0, ((rbx_1 + arg4) - 1)) / rcx_6)))\n            {\n                sub_405cd0(&data_624590, &data_624598);\n            }\n            goto label_406708;\n        }\n    }\n    rcx_1 = arg1[0x17];\n    if (rcx_1 == 0)\n    {\n        goto label_406782;\n    }\n    goto label_406885;\n}\n\n"
        },
        {
            "funcName": "sub_406af0",
            "funcStartAddr": "0x406af0",
            "funcEndAddr": "0x406c60",
            "decompiledFuncCode": "void* sub_406af0(int64_t* arg1, int64_t arg2)\n{\n    sub_405e30();\n    void var_2a8;\n    if (data_6256bc != 0)\n    {\n        void* const rcx_1 = &data_41b06e;\n        if (arg1[0x17] != 0)\n        {\n            uint64_t rdi = arg1[4];\n            if (rdi != 0)\n            {\n                rcx_1 = sub_40e520(rdi, &var_2a8);\n            }\n        }\n        uint64_t rdx_1 = 0;\n        if (data_6256f8 != 4)\n        {\n            rdx_1 = data_625720;\n        }\n        __printf_chk(1, \"%*s \", rdx_1, rcx_1);\n    }\n    if (data_6256ec != 0)\n    {\n        void* const rcx_2 = &data_41b06e;\n        if (arg1[0x17] != 0)\n        {\n            void* rax_10;\n            int80_t st0_1;\n            st0_1 = sub_40d5d0(arg1[0xb], &var_2a8, data_6256e8, 0x200, data_6256e0);\n            rcx_2 = rax_10;\n        }\n        uint64_t rdx_2 = 0;\n        if (data_6256f8 != 4)\n        {\n            rdx_2 = data_62571c;\n        }\n        __printf_chk(1, \"%*s \", rdx_2, rcx_2);\n    }\n    if (data_625725 != 0)\n    {\n        uint64_t rdx_3 = 0;\n        int64_t rcx_3 = arg1[0x16];\n        if (data_6256f8 != 4)\n        {\n            rdx_3 = data_625714;\n        }\n        __printf_chk(1, \"%*s \", rdx_3, rcx_3);\n    }\n    void* rax_4 = sub_406690(arg1, 0, nullptr, arg2);\n    if (data_6256d4 != 0)\n    {\n        arg1[0x15];\n        arg1[6];\n        return (rax_4 + sub_4058a0(arg1[0x17]));\n    }\n    return rax_4;\n}\n\n"
        },
        {
            "funcName": "sub_406c60",
            "funcStartAddr": "0x406c60",
            "funcEndAddr": "0x407622",
            "decompiledFuncCode": "void* sub_406c60(int64_t* arg1)\n{\n    char var_1324;\n    int16_t var_131b;\n    if (arg1[0x17] == 0)\n    {\n        var_1324 = *\"?pcdb-lswd\"[arg1[0x15]];\n        int64_t var_1323_1 = 0x3f3f3f3f3f3f3f3f;\n        var_131b = 0x3f3f;\n        char var_1319_1 = 0;\n    }\n    else\n    {\n        sub_40bb60(&arg1[3], &var_1324);\n    }\n    int32_t rax_1;\n    int32_t rax_25;\n    if (data_625724 != 0)\n    {\n        rax_25 = *(arg1 + 0xbc);\n        if (rax_25 == 1)\n        {\n            *var_131b[1] = 0x2e;\n        }\n        if (rax_25 == 2)\n        {\n            rax_1 = data_6256f4;\n            *var_131b[1] = 0x2b;\n            if (rax_1 == 1)\n            {\n                goto label_406ffd;\n            }\n        }\n    }\n    else\n    {\n        *var_131b[1] = 0;\n    }\n    uint64_t var_1318;\n    int32_t var_1310;\n    char rdx_1;\n    if (((data_625724 == 0 || (data_625724 != 0 && rax_25 == 1)) || ((data_625724 != 0 && rax_25 != 1) && rax_25 != 2)))\n    {\n        rax_1 = data_6256f4;\n        if (rax_1 == 1)\n        {\n        label_406ffd:\n            var_1318 = arg1[0x10];\n            rdx_1 = arg1[0x17];\n            var_1310 = arg1[0x11];\n            void var_1268;\n            void var_e78;\n            void* rbx;\n            if (data_6256bc == 0)\n            {\n            label_406ce9:\n                rbx = &var_e78;\n            }\n            else\n            {\n            label_407060:\n                void* const r9_4 = &data_41b06e;\n                if (rdx_1 != 0)\n                {\n                    uint64_t rdi_11 = arg1[4];\n                    if (rdi_11 != 0)\n                    {\n                        r9_4 = sub_40e520(rdi_11, &var_1268);\n                    }\n                }\n                void* rbx_3 = &var_e78;\n                __sprintf_chk(&var_e78, 1, 0xe3b, \"%*s \", data_625720, r9_4);\n                uint32_t rdx_10;\n                do\n                {\n                    int32_t rax_30 = *rbx_3;\n                    rbx_3 = (rbx_3 + 4);\n                    rdx_10 = (((rax_30 - 0x1010101) & (!rax_30)) & 0x80808080);\n                } while (rdx_10 == 0);\n                uint32_t rax_33 = (rdx_10 >> 0x10);\n                int32_t temp0_1 = (rdx_10 & 0x8080);\n                bool cond:3_1 = temp0_1 == 0;\n                if (temp0_1 == 0)\n                {\n                    rdx_10 = rax_33;\n                }\n                void* rax_34 = (rbx_3 + 2);\n                if (cond:3_1)\n                {\n                    rbx_3 = rax_34;\n                }\n                char rax_35 = rdx_10;\n                rdx_1 = arg1[0x17];\n                rbx = (rbx_3 - 3);\n            }\n            if (data_6256ec == 0)\n            {\n            label_406d64:\n                void* const rax_9 = &data_41b06e;\n                if (rdx_1 != 0)\n                {\n                    rax_9 = sub_40e520(arg1[5], &var_1268);\n                }\n                __sprintf_chk(rbx, 1, -1, \"%s %*s \", &var_1324, data_625718, rax_9);\n                void* rbx_1 = (rbx + strlen(rbx));\n                if (data_6256d8 != 0)\n                {\n                    fwrite_unlocked(&data_41b093, 1, 2, stdout);\n                    data_6255b8 = (data_6255b8 + 2);\n                }\n                if (data_6245a9 != 0)\n                {\n                label_406ded:\n                    fputs_unlocked(&var_e78, stdout);\n                    data_6255b8 = (data_6255b8 + (rbx_1 - &var_e78));\n                    if (data_6245a9 != 0)\n                    {\n                        sub_405520(*(arg1 + 0x34), data_625710, arg1[0x17]);\n                    }\n                    if (data_6245a8 != 0)\n                    {\n                        int32_t rdx_23 = data_62570c;\n                        char* rdi_20 = &data_41b06e;\n                        uint64_t rsi_10 = arg1[7];\n                        if (arg1[0x17] != 0)\n                        {\n                            rdi_20 = nullptr;\n                            if (data_6256ed == 0)\n                            {\n                                rdi_20 = sub_40e2f0(rsi_10);\n                            }\n                        }\n                        sub_405460(rdi_20, rsi_10, rdx_23);\n                    }\n                    if (data_6256ee != 0)\n                    {\n                        sub_405520(*(arg1 + 0x34), data_625708, arg1[0x17]);\n                    }\n                    rbx_1 = &var_e78;\n                    if (data_625725 != 0)\n                    {\n                        sub_405460(arg1[0x16], 0, data_625714);\n                    }\n                }\n                else\n                {\n                    if (data_6245a8 != 0)\n                    {\n                        goto label_406ded;\n                    }\n                    if (data_6256ee != 0)\n                    {\n                        goto label_406ded;\n                    }\n                    if (data_625725 != 0)\n                    {\n                        goto label_406ded;\n                    }\n                }\n                char* r14_3;\n                if (arg1[0x17] == 0)\n                {\n                    r14_3 = &data_41b06e;\n                }\n                if ((arg1[0x17] != 0 && (arg1[6] & 0xb000) != 0x2000))\n                {\n                    /* unimplemented  {call sub_40d5d0} */;\n                    r14_3 = sub_40d5d0(arg1[9], &var_1268, data_6256dc, 1, data_6245a0);\n                }\n                if ((arg1[0x17] == 0 || (arg1[0x17] != 0 && (arg1[6] & 0xb000) != 0x2000)))\n                {\n                    int32_t r13_1 = (data_6256fc - sub_40eb70(r14_3, 0));\n                    if (r13_1 > 0)\n                    {\n                        uint64_t rax_17 = (r13_1 - 1);\n                        int32_t rdx_4 = rax_17;\n                        void* rcx_2 = ((rbx_1 + rax_17) + 1);\n                        void* rax_18 = rbx_1;\n                        do\n                        {\n                            rax_18 = (rax_18 + 1);\n                            *(rax_18 - 1) = 0x20;\n                        } while (rax_18 != rcx_2);\n                        rbx_1 = ((rbx_1 + rdx_4) + 1);\n                    }\n                    char rax_20;\n                    do\n                    {\n                        r14_3 = &r14_3[1];\n                        rax_20 = r14_3[-1];\n                        rbx_1 = (rbx_1 + 1);\n                        *(rbx_1 - 1) = rax_20;\n                    } while (rax_20 != 0);\n                    *(rbx_1 - 1) = 0x20;\n                }\n                void var_12a8;\n                if ((arg1[0x17] != 0 && (arg1[6] & 0xb000) == 0x2000))\n                {\n                    int32_t r13_6 = (data_6256fc - ((data_625704 + data_625700) + 2));\n                    uint32_t rdi_25;\n                    rdi_25 = 0;\n                    void* rax_48 = sub_40e520((rdi_25 | arg1[8]), &var_1268);\n                    uint64_t r14_4 = data_625700;\n                    int64_t rax_49 = arg1[8];\n                    void* rax_51 = sub_40e520((((rax_49 >> 0x20) & 0xfffff000) | ((rax_49 >> 8) & 0xfff)), &var_12a8);\n                    int32_t r8_7 = 0;\n                    if (r13_6 >= 0)\n                    {\n                        r8_7 = r13_6;\n                    }\n                    __sprintf_chk(rbx_1, 1, -1, \"%*s, %*s \", (r8_7 + data_625704), rax_51, r14_4, rax_48);\n                    rbx_1 = ((rbx_1 + data_6256fc) + 1);\n                }\n                *rbx_1 = 1;\n                void* const r13_2 = &data_41b06e;\n                struct tm* rax_36;\n                int64_t rax_40;\n                uint64_t r8_4;\n                void* r13_3;\n                if (arg1[0x17] != 0)\n                {\n                    void var_12e8;\n                    rax_36 = sub_4176f0(data_625668, &var_1318, &var_12e8);\n                    if (rax_36 != 0)\n                    {\n                        int64_t rdx_14 = data_625730;\n                        uint64_t rcx_6 = var_1318;\n                        int32_t rsi_7 = data_625738;\n                        int32_t r9_5 = var_1310;\n                        bool cond:8_1 = rdx_14 > rcx_6;\n                        int32_t rax_37;\n                        int32_t rdi_15;\n                        if ((rdx_14 >= rcx_6 && (!cond:8_1)))\n                        {\n                            rdi_15 = rsi_7;\n                            rax_37 = r9_5;\n                        }\n                        uint64_t rax_38;\n                        int64_t rdi_24;\n                        if ((rdx_14 < rcx_6 || ((rdx_14 >= rcx_6 && (!cond:8_1)) && (rsi_7 - r9_5) < 0)))\n                        {\n                            sub_40c150(&data_625730);\n                            rcx_6 = var_1318;\n                            r9_5 = var_1310;\n                            rdx_14 = data_625730;\n                            rsi_7 = data_625738;\n                            rdi_24 = (rdx_14 - 0xf0c2ac);\n                            if (rdi_24 >= rcx_6)\n                            {\n                            label_4073a0:\n                                rax_38 = 0;\n                                if ((rdi_24 <= rcx_6 && (rsi_7 - r9_5) < 0))\n                                {\n                                    goto label_4073b4;\n                                }\n                            }\n                            else\n                            {\n                            label_4073b4:\n                                bool cond:11_1 = rcx_6 > rdx_14;\n                                if (rcx_6 < rdx_14)\n                                {\n                                    goto label_407608;\n                                }\n                                rax_38 = 0;\n                                if ((!cond:11_1))\n                                {\n                                    rax_37 = r9_5;\n                                    rdi_15 = rsi_7;\n                                label_4073cf:\n                                    rax_38 = ((rax_37 - rdi_15) >> 0x1f);\n                                }\n                            }\n                        }\n                        if (rdx_14 >= rcx_6)\n                        {\n                            if (((!cond:8_1) && (rsi_7 - r9_5) >= 0))\n                            {\n                                if ((rdx_14 - 0xf0c2ac) < rcx_6)\n                                {\n                                    goto label_4073cf;\n                                }\n                                rax_38 = 0;\n                            }\n                            if (cond:8_1)\n                            {\n                                rdi_24 = (rdx_14 - 0xf0c2ac);\n                                if (rdi_24 >= rcx_6)\n                                {\n                                    goto label_4073a0;\n                                }\n                            label_407608:\n                                rax_38 = 1;\n                            }\n                        }\n                        int64_t** r8_6 = data_625668;\n                        char* rdx_20;\n                        int32_t var_12d8;\n                        if (data_624788 == 0)\n                        {\n                            rdx_20 = *((rax_38 << 3) + 0x624410);\n                        }\n                        else\n                        {\n                            rdx_20 = (((var_12d8 + ((rax_38 + (rax_38 + rax_38)) << 2)) << 7) + 0x6247a0);\n                        }\n                        rax_40 = sub_410650(rbx_1, 0x3e9, rdx_20, &var_12e8, r8_6, r9_5);\n                        if (rax_40 != 0)\n                        {\n                            rbx_1 = (rbx_1 + rax_40);\n                        }\n                    }\n                    if (((rax_36 != 0 && rax_40 != 0) || ((rax_36 == 0 || (rax_36 != 0 && rax_40 == 0)) && *rbx_1 == 0)))\n                    {\n                        r13_3 = (rbx_1 + 1);\n                        *rbx_1 = 0x20;\n                    }\n                    if (((rax_36 == 0 || (rax_36 != 0 && rax_40 == 0)) && *rbx_1 != 0))\n                    {\n                        if (arg1[0x17] != 0)\n                        {\n                            r8_4 = data_624404;\n                            void var_1308;\n                            r13_2 = sub_40e480(var_1318, &var_1308);\n                            if (r8_4 < 0)\n                            {\n                                goto label_40750e;\n                            }\n                            goto label_406f0c;\n                        }\n                        r13_2 = &data_41b06e;\n                    }\n                }\n                if ((arg1[0x17] == 0 || ((arg1[0x17] != 0 && (rax_36 == 0 || (rax_36 != 0 && rax_40 == 0))) && *rbx_1 != 0)))\n                {\n                    r8_4 = data_624404;\n                    if (r8_4 < 0)\n                    {\n                    label_40750e:\n                        time_t var_1330 = 0;\n                        struct tm* rax_56 = sub_4176f0(data_625668, &var_1330, &var_12a8);\n                        int64_t rax_57;\n                        if (rax_56 != 0)\n                        {\n                            int64_t r8_10 = data_625668;\n                            char* rdx_31 = data_624410;\n                            int32_t var_1298;\n                            if (data_624788 != 0)\n                            {\n                                rdx_31 = ((var_1298 << 7) + 0x6247a0);\n                            }\n                            rax_57 = sub_410650(&var_1268, 0x3e9, rdx_31, &var_12a8, r8_10, 0);\n                            if (rax_57 != 0)\n                            {\n                                int32_t rax_58 = sub_40e9b0(&var_1268, rax_57, 0);\n                                r8_4 = rax_58;\n                                data_624404 = rax_58;\n                            }\n                        }\n                        if ((rax_56 == 0 || (rax_56 != 0 && rax_57 == 0)))\n                        {\n                            r8_4 = data_624404;\n                        }\n                        if (r8_4 < 0)\n                        {\n                            data_624404 = 0;\n                            r8_4 = 0;\n                        }\n                        goto label_406f0c;\n                    }\n                label_406f0c:\n                    __sprintf_chk(rbx_1, 1, -1, \"%*s \", r8_4, r13_2);\n                    r13_3 = (rbx_1 + strlen(rbx_1));\n                }\n                int64_t r13_4 = (r13_3 - &var_e78);\n                fputs_unlocked(&var_e78, stdout);\n                data_6255b8 = (data_6255b8 + r13_4);\n                void* rax_23 = sub_406690(arg1, 0, &data_625560, r13_4);\n                if (arg1[0x15] != 6)\n                {\n                    rax_23 = data_6256d4;\n                    if (rax_23 != 0)\n                    {\n                        arg1[6];\n                        rax_23 = sub_4058a0(arg1[0x17]);\n                    }\n                }\n                else if (arg1[1] != 0)\n                {\n                    fwrite_unlocked(\" -> \", 1, 4, stdout);\n                    data_6255b8 = (data_6255b8 + 4);\n                    rax_23 = sub_406690(arg1, 1, nullptr, ((r13_4 + rax_23) + 4));\n                    if (data_6256d4 != 0)\n                    {\n                        *(arg1 + 0xac);\n                        rax_23 = sub_4058a0(1);\n                    }\n                }\n                return rax_23;\n            }\n            void* const r15_1 = &data_41b06e;\n            if (rdx_1 != 0)\n            {\n                void* rax_54;\n                int80_t st0_1;\n                st0_1 = sub_40d5d0(arg1[0xb], &var_1268, data_6256e8, 0x200, data_6256e0);\n                r15_1 = rax_54;\n            }\n            int32_t r14_2 = (data_62571c - sub_40eb70(r15_1, 0));\n            if (r14_2 > 0)\n            {\n                uint64_t rax_5 = (r14_2 - 1);\n                int32_t rdx_2 = rax_5;\n                void* rcx_1 = ((rbx + rax_5) + 1);\n                void* rax_6 = rbx;\n                do\n                {\n                    rax_6 = (rax_6 + 1);\n                    *(rax_6 - 1) = 0x20;\n                } while (rax_6 != rcx_1);\n                rbx = ((rbx + rdx_2) + 1);\n            }\n            char rax_8;\n            do\n            {\n                r15_1 = (r15_1 + 1);\n                rax_8 = *(r15_1 - 1);\n                rbx = (rbx + 1);\n                *(rbx - 1) = rax_8;\n            } while (rax_8 != 0);\n            *(rbx - 1) = 0x20;\n            rdx_1 = arg1[0x17];\n            goto label_406d64;\n        }\n    }\n    if (rax_1 == 0)\n    {\n        var_1318 = arg1[0xe];\n        rdx_1 = arg1[0x17];\n        var_1310 = arg1[0xf];\n        if (data_6256bc == 0)\n        {\n            goto label_406ce9;\n        }\n        goto label_407060;\n    }\n    if (rax_1 != 2)\n    {\n        abort();\n        /* no return */\n    }\n    var_1318 = arg1[0xc];\n    rdx_1 = arg1[0x17];\n    var_1310 = arg1[0xd];\n    if (data_6256bc == 0)\n    {\n        goto label_406ce9;\n    }\n    goto label_407060;\n}\n\n"
        },
        {
            "funcName": "sub_407630",
            "funcStartAddr": "0x407630",
            "funcEndAddr": "0x40768a",
            "decompiledFuncCode": "void* sub_407630(char* arg1, int32_t* arg2, int32_t arg3)\n{\n    void var_2018;\n    void* var_2028 = &var_2018;\n    char var_2029;\n    void* var_2020;\n    sub_405ea0(&var_2028, arg1, arg2, arg3, &var_2020, &var_2029, &var_2018);\n    void* rdi_1 = var_2028;\n    if ((rdi_1 != &var_2018 && rdi_1 != arg1))\n    {\n        free(rdi_1);\n    }\n    return (var_2029 + var_2020);\n}\n\n"
        },
        {
            "funcName": "sub_407690",
            "funcStartAddr": "0x407690",
            "funcEndAddr": "0x4077fd",
            "decompiledFuncCode": "void* sub_407690(char** arg1)\n{\n    void* rbx_1;\n    if (data_6256bc == 0)\n    {\n        rbx_1 = nullptr;\n    }\n    void var_2a8;\n    if ((data_6256bc != 0 && data_6256f8 == 4))\n    {\n        rbx_1 = (strlen(sub_40e520(arg1[4], &var_2a8)) + 1);\n    }\n    int64_t rax_2;\n    if (((data_6256bc == 0 || (data_6256bc != 0 && data_6256f8 == 4)) && data_6256ec != 0))\n    {\n        if (data_6256f8 != 4)\n        {\n            goto label_4076d5;\n        }\n        rax_2 = 2;\n        if (arg1[0x17] != 0)\n        {\n            char* rax_10;\n            int80_t st0_1;\n            st0_1 = sub_40d5d0(arg1[0xb], &var_2a8, data_6256e8, 0x200, data_6256e0);\n            rax_2 = (strlen(rax_10) + 1);\n        }\n        goto label_4076d9;\n    }\n    int64_t rax_4;\n    if ((data_6256bc != 0 && data_6256f8 != 4))\n    {\n        rbx_1 = (data_625720 + 1);\n        if (data_6256ec == 0)\n        {\n            if (data_625725 != 0)\n            {\n            label_4076f9:\n                rax_4 = (data_625714 + 1);\n            label_4076fd:\n                rbx_1 = (rbx_1 + rax_4);\n            }\n            goto label_407716;\n        }\n    label_4076d5:\n        rax_2 = (data_62571c + 1);\n    label_4076d9:\n        rbx_1 = (rbx_1 + rax_2);\n    }\n    if ((((data_6256bc == 0 || (data_6256bc != 0 && data_6256f8 == 4)) && data_6256ec == 0) || (data_6256bc != 0 && data_6256f8 != 4)))\n    {\n        if (data_625725 != 0)\n        {\n            if (data_6256f8 != 4)\n            {\n                goto label_4076f9;\n            }\n            rax_4 = (strlen(arg1[0x16]) + 1);\n            goto label_4076fd;\n        }\n    label_407716:\n        void* rbx_2 = (rbx_1 + sub_407630(*arg1, data_625690, *(arg1 + 0xc4)));\n        if (data_6256d4 != 0)\n        {\n            rbx_2 = (rbx_2 + sub_4057b0(arg1[0x17], arg1[6], arg1[0x15]) != 0);\n        }\n        return rbx_2;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_407800",
            "funcStartAddr": "0x407800",
            "funcEndAddr": "0x407ae0",
            "decompiledFuncCode": "int64_t sub_407800(char arg1)\n{\n    int64_t r9 = data_625770;\n    int64_t rcx = data_6255c0;\n    int64_t rbx = rcx;\n    if (r9 <= rcx)\n    {\n        rbx = r9;\n    }\n    if (rbx > data_6246a0)\n    {\n        int64_t rdi = data_6255c8;\n        int64_t rbp_1;\n        if (rbx < (rcx >> 1))\n        {\n            int64_t rax_27;\n            bool rdx_18;\n            rdx_18 = HIGHD((0x30 * rbx));\n            rax_27 = LOWD((0x30 * rbx));\n            uint64_t rdx_19 = ((0x30 * rbx) >> 0x40) != 0;\n            if (rax_27 < 0)\n            {\n            label_407adb:\n                sub_412bd0();\n                /* no return */\n            }\n            if (rdx_19 != 0)\n            {\n                goto label_407adb;\n            }\n            rbp_1 = (rbx + rbx);\n            data_6255c8 = sub_4129e0(rdi, ((rbp_1 + rbx) << 4));\n        }\n        else\n        {\n            int64_t rax_3;\n            bool rdx_1;\n            rdx_1 = HIGHD((0x18 * rcx));\n            rax_3 = LOWD((0x18 * rcx));\n            uint64_t rdx_2 = ((0x18 * rcx) >> 0x40) != 0;\n            if (rax_3 < 0)\n            {\n                goto label_407adb;\n            }\n            if (rdx_2 != 0)\n            {\n                goto label_407adb;\n            }\n            rbp_1 = data_6255c0;\n            data_6255c8 = sub_4129e0(rdi, (rcx * 0x18));\n        }\n        int64_t rax_5 = data_6246a0;\n        int64_t rdi_2 = (rbp_1 - rax_5);\n        int64_t rcx_1 = ((rax_5 + 1) + rbp_1);\n        int64_t rax_7;\n        rax_7 = ((rax_5 + 1) + rbp_1) < (rax_5 + 1);\n        int64_t rsi_4 = (rdi_2 * rcx_1);\n        if (rax_7 != 0)\n        {\n            goto label_407adb;\n        }\n        if (rcx_1 != (COMBINE(0, rsi_4) / rdi_2))\n        {\n            goto label_407adb;\n        }\n        int64_t rax_11;\n        rax_11 = (rsi_4 >> 0x3e) != 0;\n        uint64_t rdi_5 = ((rsi_4 >> 1) << 3);\n        if (rdi_5 < 0)\n        {\n            goto label_407adb;\n        }\n        if (rax_11 != 0)\n        {\n            goto label_407adb;\n        }\n        int64_t rax_12 = sub_412980(rdi_5);\n        int64_t rdx_5 = data_6246a0;\n        if (rbp_1 > rdx_5)\n        {\n            int64_t rdi_6 = data_6255c8;\n            int64_t rdx_6 = ((rdx_5 << 3) + 8);\n            int64_t rsi_6 = ((rbp_1 << 3) + 8);\n            do\n            {\n                *((rdi_6 + (rdx_6 * 3)) - 8) = rax_12;\n                rax_12 = (rax_12 + rdx_6);\n                rdx_6 = (rdx_6 + 8);\n            } while (rsi_6 != rdx_6);\n        }\n        data_6246a0 = rbp_1;\n        r9 = data_625770;\n    }\n    if (rbx != 0)\n    {\n        int64_t rdi_7 = data_6255c8;\n        int64_t r8_1 = ((rbx * 3) + 3);\n        int64_t rsi_7 = 0;\n        int64_t rcx_3 = 3;\n        do\n        {\n            int64_t* rax_13 = *((rdi_7 + (rcx_3 << 3)) - 8);\n            *((rdi_7 + (rcx_3 << 3)) - 0x18) = 1;\n            rsi_7 = (rsi_7 + 8);\n            *((rdi_7 + (rcx_3 << 3)) - 0x10) = rcx_3;\n            void* rdx_7 = (rax_13 + rsi_7);\n            do\n            {\n                *rax_13 = 3;\n                rax_13 = &rax_13[1];\n            } while (rdx_7 != rax_13);\n            rcx_3 = (rcx_3 + 3);\n        } while (rcx_3 != r8_1);\n    }\n    int64_t rbp_2 = 0;\n    if (r9 != 0)\n    {\n        int64_t r10_1;\n        do\n        {\n            void* rax_15 = sub_407690(*(data_625760 + (rbp_2 << 3)));\n            r10_1 = data_625770;\n            if (rbx != 0)\n            {\n                int64_t r11_1 = data_625670;\n                bool* rcx_4 = data_6255c8;\n                int64_t rsi_8 = 0;\n                void* rdi_9 = (rax_15 + 2);\n                int64_t r8_2;\n                do\n                {\n                    r8_2 = (rsi_8 + 1);\n                    if (*rcx_4 != 0)\n                    {\n                        uint64_t r13_2;\n                        if (arg1 != 0)\n                        {\n                            r13_2 = (COMBINE(0, rbp_2) / (COMBINE(0, ((r10_1 + r8_2) - 1)) / r8_2));\n                        }\n                        else\n                        {\n                            r13_2 = (COMBINE(0, rbp_2) % r8_2);\n                        }\n                        int64_t rdx_11 = *(rcx_4 + 0x10);\n                        void* rax_20 = rax_15;\n                        if (r13_2 != rsi_8)\n                        {\n                            rax_20 = rdi_9;\n                        }\n                        void** rsi_9 = (rdx_11 + (r13_2 << 3));\n                        void* rdx_12 = *rsi_9;\n                        if (rdx_12 < rax_20)\n                        {\n                            *(rcx_4 + 8) = ((*(rcx_4 + 8) - rdx_12) + rax_20);\n                            *rsi_9 = rax_20;\n                            *rcx_4 = *(rcx_4 + 8) < r11_1;\n                        }\n                    }\n                    rcx_4 = &rcx_4[0x18];\n                    rsi_8 = r8_2;\n                } while (rbx != r8_2);\n            }\n            rbp_2 = (rbp_2 + 1);\n        } while (rbp_2 < r10_1);\n    }\n    if (rbx > 1)\n    {\n        int64_t rdx_17 = data_6255c8;\n        int64_t rax_24 = (rbx * 0x18);\n        if (*((rdx_17 + rax_24) - 0x18) == 0)\n        {\n            void* rax_25 = ((rdx_17 + rax_24) - 0x30);\n            do\n            {\n                rbx = (rbx - 1);\n                if (rbx == 1)\n                {\n                    break;\n                }\n                rax_25 = (rax_25 - 0x18);\n            } while (*(rax_25 + 0x18) == 0);\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_407ca0",
            "funcStartAddr": "0x407ca0",
            "funcEndAddr": "0x407fd1",
            "decompiledFuncCode": "void sub_407ca0()\n{\n    if (data_6256f8 > 4)\n    {\n        return;\n    }\n    int64_t r15;\n    int64_t var_8 = r15;\n    int64_t r14;\n    int64_t var_10 = r14;\n    int64_t r13;\n    int64_t var_18 = r13;\n    int64_t r12;\n    int64_t var_20 = r12;\n    int64_t rbp;\n    int64_t var_28 = rbp;\n    int64_t rbx;\n    int64_t var_30 = rbx;\n    /* jump -> *((data_6256f8 << 3) + &data_418bc8) */\n}\n\n"
        },
        {
            "funcName": "sub_407dcd",
            "funcStartAddr": "0x407ae0",
            "funcEndAddr": "0x407de0",
            "decompiledFuncCode": "char* sub_407dcd(char arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5, int64_t arg6, int64_t arg7)\n{\n    if (data_625770 != 0)\n    {\n        void* r13_1 = nullptr;\n        int64_t rbx_1 = 0;\n        do\n        {\n            int64_t* r12_1 = *(data_625760 + (rbx_1 << 3));\n            void* rbp_1;\n            int32_t rcx_2;\n            char rdx_3;\n            if (data_625670 == 0)\n            {\n                rbp_1 = r13_1;\n                if (rbx_1 != 0)\n                {\n                    rbp_1 = (r13_1 + 2);\n                    r13_1 = rbp_1;\n                label_407b88:\n                    rcx_2 = 0x20;\n                    rdx_3 = 0x20;\n                label_407b92:\n                    uint64_t* const rdi_2 = stdout;\n                    char* rax_3 = stdout[5];\n                    if (rax_3 >= stdout[6])\n                    {\n                        __overflow(rdi_2, arg1);\n                    }\n                    else\n                    {\n                        stdout[5] = &rax_3[1];\n                        *rax_3 = arg1;\n                    }\n                    uint64_t* const rdi_3 = stdout;\n                    char* rax_4 = stdout[5];\n                    if (rax_4 >= stdout[6])\n                    {\n                        __overflow(rdi_3, rcx_2);\n                    }\n                    else\n                    {\n                        stdout[5] = &rax_4[1];\n                        *rax_4 = rdx_3;\n                    }\n                }\n            }\n            else\n            {\n                void* rax_2 = sub_407690(r12_1);\n                if (rbx_1 != 0)\n                {\n                    int64_t rdx_1 = data_625670;\n                    rbp_1 = (r13_1 + 2);\n                    void* rcx_1 = (rax_2 + rbp_1);\n                    if ((rdx_1 != 0 && (rdx_1 <= rcx_1 || (rdx_1 > rcx_1 && (-3 - rax_2) < r13_1))))\n                    {\n                        r13_1 = rax_2;\n                        rcx_2 = 0xa;\n                        rdx_3 = 0xa;\n                        rbp_1 = nullptr;\n                        goto label_407b92;\n                    }\n                    r13_1 = rcx_1;\n                    goto label_407b88;\n                }\n                rbp_1 = r13_1;\n                r13_1 = (r13_1 + rax_2);\n            }\n            rbx_1 = (rbx_1 + 1);\n            sub_406af0(r12_1, rbp_1);\n        } while (data_625770 > rbx_1);\n    }\n    uint64_t* const rdi_4 = stdout;\n    char* rax_5 = stdout[5];\n    if (rax_5 >= stdout[6])\n    {\n        /* tailcall */\n        return __overflow(rdi_4, 0xa);\n    }\n    stdout[5] = &rax_5[1];\n    *rax_5 = 0xa;\n    return rax_5;\n}\n\n"
        },
        {
            "funcName": "sub_407e98",
            "funcStartAddr": "0x407e98",
            "funcEndAddr": "0x40800f",
            "decompiledFuncCode": "uint64_t sub_407e98(int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5, int64_t arg6)\n{\n    int64_t rcx;\n    int64_t rdx;\n    int64_t rsi;\n    int64_t r8;\n    int64_t r9;\n    if (data_625670 == 0)\n    {\n        /* tailcall */\n        return sub_407dcd(0x20, rsi, rdx, rcx, r8, r9, __return_addr);\n    }\n    int64_t rax = sub_407800(1);\n    arg_10 = 0;\n    void* r15 = ((data_6255c8 + (rax * 0x18)) - 0x18);\n    int64_t rax_2 = data_625770;\n    int64_t rdx_2 = 0;\n    uint64_t rax_3 = (COMBINE(rdx_2, rax_2) / rax);\n    uint64_t rdx_3;\n    rdx_3 = (COMBINE(rdx_2, rax_2) % rax) != 0;\n    uint64_t rdx_4 = rdx_3;\n    uint64_t rdx_5 = (rdx_4 + rax_3);\n    if (rdx_4 != (-rax_3))\n    {\n        do\n        {\n            uint64_t r14_1 = arg_10;\n            int64_t r13_1 = 0;\n            int64_t rbp_1 = 0;\n            while (true)\n            {\n                int64_t* r12_1 = *(data_625760 + (r14_1 << 3));\n                void* rax_5 = sub_407690(r12_1);\n                int64_t rbx_2 = *(*(r15 + 0x10) + r13_1);\n                r13_1 = (r13_1 + 8);\n                sub_406af0(r12_1, rbp_1);\n                r14_1 = (r14_1 + rdx_5);\n                if (r14_1 >= data_625770)\n                {\n                    break;\n                }\n                int64_t rbx_1 = (rbx_2 + rbp_1);\n                void* rdi_2 = (rax_5 + rbp_1);\n                rbp_1 = rbx_1;\n                sub_4052c0(rdi_2, rbx_1);\n            }\n            uint64_t* const rdi_5 = stdout;\n            char* rax_7 = stdout[5];\n            if (rax_7 >= stdout[6])\n            {\n                __overflow(rdi_5, 0xa);\n            }\n            else\n            {\n                stdout[5] = &rax_7[1];\n                *rax_7 = 0xa;\n            }\n            arg_10 = (arg_10 + 1);\n            rax_3 = arg_10;\n        } while (rdx_5 != rax_3);\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_407fb0",
            "funcStartAddr": "0x407e50",
            "funcEndAddr": "0x407fbf",
            "decompiledFuncCode": "char* sub_407fb0(int64_t arg1 @ rbx, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5, int64_t arg6, int64_t arg7)\n{\n    while (true)\n    {\n        FILE* rdi;\n        char* rax_1 = __overflow(rdi, 0xa);\n        while (true)\n        {\n            arg1 = (arg1 + 1);\n            if (data_625770 <= arg1)\n            {\n                return rax_1;\n            }\n            sub_406af0(*(data_625760 + (arg1 << 3)), 0);\n            rdi = stdout;\n            rax_1 = stdout[5];\n            if (rax_1 >= stdout[6])\n            {\n                break;\n            }\n            stdout[5] = &rax_1[1];\n            *rax_1 = 0xa;\n        }\n    }\n}\n\n"
        },
        {
            "funcName": "sub_407fc0",
            "funcStartAddr": "0x407df0",
            "funcEndAddr": "0x407fcf",
            "decompiledFuncCode": "char* sub_407fc0(int64_t arg1 @ rbx, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5, int64_t arg6, int64_t arg7)\n{\n    while (true)\n    {\n        FILE* rdi;\n        char* rax_1 = __overflow(rdi, 0xa);\n        while (true)\n        {\n            data_6255b8 = (data_6255b8 + 1);\n            arg1 = (arg1 + 1);\n            if (data_625770 <= arg1)\n            {\n                return rax_1;\n            }\n            sub_405e30();\n            sub_406c60(*(data_625760 + (arg1 << 3)));\n            rdi = stdout;\n            rax_1 = stdout[5];\n            if (rax_1 >= stdout[6])\n            {\n                break;\n            }\n            stdout[5] = &rax_1[1];\n            *rax_1 = 0xa;\n        }\n    }\n}\n\n"
        },
        {
            "funcName": "sub_408010",
            "funcStartAddr": "0x407d40",
            "funcEndAddr": "0x40803a",
            "decompiledFuncCode": "char* sub_408010(int64_t arg1 @ rbx, uint64_t arg2 @ rbp, int64_t arg3 @ r14, \n    void* arg4 @ r15, int64_t arg5, int64_t arg6, int64_t arg7, int64_t arg8, \n    int64_t arg9, int64_t arg10)\n{\n    while (true)\n    {\n        void* r13_1 = nullptr;\n        FILE* rdi;\n        __overflow(rdi, 0xa);\n        while (true)\n        {\n            char** r12_2 = *(data_625760 + (arg1 << 3));\n            arg1 = (arg1 + 1);\n            sub_406af0(r12_2, r13_1);\n            void* rax_4 = sub_407690(r12_2);\n            void* r12_3 = *(*(arg4 + 0x10) + (arg2 << 3));\n            if (arg1 >= data_625770)\n            {\n                uint64_t* const rdi_5 = stdout;\n                char* rax_8 = stdout[5];\n                if (rax_8 >= stdout[6])\n                {\n                    /* tailcall */\n                    return __overflow(rdi_5, 0xa);\n                }\n                stdout[5] = &rax_8[1];\n                *rax_8 = 0xa;\n                return rax_8;\n            }\n            uint64_t temp1_1 = (COMBINE(0, arg1) % arg3);\n            arg2 = temp1_1;\n            if (temp1_1 != 0)\n            {\n                void* r12_4 = (r12_3 + r13_1);\n                void* rdi_4 = (r13_1 + rax_4);\n                r13_1 = r12_4;\n                sub_4052c0(rdi_4, r12_4);\n            }\n            else\n            {\n                rdi = stdout;\n                char* rax_2 = stdout[5];\n                if (rax_2 >= stdout[6])\n                {\n                    break;\n                }\n                r13_1 = nullptr;\n                stdout[5] = &rax_2[1];\n                *rax_2 = 0xa;\n            }\n        }\n    }\n}\n\n"
        },
        {
            "funcName": "sub_408040",
            "funcStartAddr": "0x408040",
            "funcEndAddr": "0x4080b6",
            "decompiledFuncCode": "uint64_t sub_408040(int64_t* arg1, int64_t* arg2)\n{\n    int32_t rax = arg1[0x15];\n    int32_t rdx = arg2[0x15];\n    bool rcx = rax == 3;\n    rax = rax == 9;\n    char rcx_1 = (rcx | rax);\n    rax = rdx == 3;\n    rdx = rdx == 9;\n    rdx = (rdx | rax);\n    if ((rdx != 0 || (rdx == 0 && rcx_1 == 0)))\n    {\n        if ((rcx_1 == 0 && rdx != 0))\n        {\n            return 1;\n        }\n        int64_t rax_3 = arg1[9];\n        int64_t temp0_1 = arg2[9];\n        bool cond:0_1 = temp0_1 != rax_3;\n        bool cond:1_1 = temp0_1 < rax_3;\n        if (temp0_1 <= rax_3)\n        {\n            if (cond:0_1)\n            {\n                rax_3 = cond:1_1;\n                return rax_3;\n            }\n            /* tailcall */\n            return strcmp(*arg2, *arg1);\n        }\n    }\n    return 0xffffffff;\n}\n\n"
        },
        {
            "funcName": "sub_4080c0",
            "funcStartAddr": "0x4080c0",
            "funcEndAddr": "0x4080f6",
            "decompiledFuncCode": "uint64_t sub_4080c0(int64_t* arg1, int64_t* arg2)\n{\n    int64_t rax_1 = arg2[9];\n    int64_t temp0 = arg1[9];\n    bool cond:0 = temp0 != rax_1;\n    bool cond:1 = temp0 < rax_1;\n    if (temp0 > rax_1)\n    {\n        return 0xffffffff;\n    }\n    if (cond:0)\n    {\n        rax_1 = cond:1;\n        return rax_1;\n    }\n    /* tailcall */\n    return sub_4050d0(*arg1, *arg2);\n}\n\n"
        },
        {
            "funcName": "sub_408100",
            "funcStartAddr": "0x408100",
            "funcEndAddr": "0x408176",
            "decompiledFuncCode": "uint64_t sub_408100(int64_t* arg1, int64_t* arg2)\n{\n    int32_t rax = arg1[0x15];\n    int32_t rdx = arg2[0x15];\n    bool rcx = rax == 3;\n    rax = rax == 9;\n    char rcx_1 = (rcx | rax);\n    rax = rdx == 3;\n    rdx = rdx == 9;\n    rdx = (rdx | rax);\n    if ((rdx != 0 || (rdx == 0 && rcx_1 == 0)))\n    {\n        if ((rcx_1 == 0 && rdx != 0))\n        {\n            return 1;\n        }\n        int64_t rax_3 = arg2[9];\n        int64_t temp0_1 = arg1[9];\n        bool cond:0_1 = temp0_1 != rax_3;\n        bool cond:1_1 = temp0_1 < rax_3;\n        if (temp0_1 <= rax_3)\n        {\n            if (cond:0_1)\n            {\n                rax_3 = cond:1_1;\n                return rax_3;\n            }\n            /* tailcall */\n            return sub_4050d0(*arg1, *arg2);\n        }\n    }\n    return 0xffffffff;\n}\n\n"
        },
        {
            "funcName": "sub_408180",
            "funcStartAddr": "0x408180",
            "funcEndAddr": "0x4081f6",
            "decompiledFuncCode": "uint64_t sub_408180(int64_t* arg1, int64_t* arg2)\n{\n    int32_t rax = arg1[0x15];\n    int32_t rdx = arg2[0x15];\n    bool rcx = rax == 3;\n    rax = rax == 9;\n    char rcx_1 = (rcx | rax);\n    rax = rdx == 3;\n    rdx = rdx == 9;\n    rdx = (rdx | rax);\n    if ((rdx != 0 || (rdx == 0 && rcx_1 == 0)))\n    {\n        if ((rcx_1 == 0 && rdx != 0))\n        {\n            return 1;\n        }\n        int64_t rax_3 = arg2[9];\n        int64_t temp0_1 = arg1[9];\n        bool cond:0_1 = temp0_1 != rax_3;\n        bool cond:1_1 = temp0_1 < rax_3;\n        if (temp0_1 <= rax_3)\n        {\n            if (cond:0_1)\n            {\n                rax_3 = cond:1_1;\n                return rax_3;\n            }\n            /* tailcall */\n            return strcmp(*arg1, *arg2);\n        }\n    }\n    return 0xffffffff;\n}\n\n"
        },
        {
            "funcName": "sub_408200",
            "funcStartAddr": "0x408200",
            "funcEndAddr": "0x408276",
            "decompiledFuncCode": "uint64_t sub_408200(int64_t* arg1, int64_t* arg2)\n{\n    int32_t rax = arg1[0x15];\n    int32_t rdx = arg2[0x15];\n    bool rcx = rax == 3;\n    rax = rax == 9;\n    char rcx_1 = (rcx | rax);\n    rax = rdx == 3;\n    rdx = rdx == 9;\n    rdx = (rdx | rax);\n    if ((rdx != 0 || (rdx == 0 && rcx_1 == 0)))\n    {\n        if ((rcx_1 == 0 && rdx != 0))\n        {\n            return 1;\n        }\n        int64_t rax_3 = arg1[9];\n        int64_t temp0_1 = arg2[9];\n        bool cond:0_1 = temp0_1 != rax_3;\n        bool cond:1_1 = temp0_1 < rax_3;\n        if (temp0_1 <= rax_3)\n        {\n            if (cond:0_1)\n            {\n                rax_3 = cond:1_1;\n                return rax_3;\n            }\n            /* tailcall */\n            return sub_4050d0(*arg2, *arg1);\n        }\n    }\n    return 0xffffffff;\n}\n\n"
        },
        {
            "funcName": "sub_408280",
            "funcStartAddr": "0x408280",
            "funcEndAddr": "0x4082b6",
            "decompiledFuncCode": "uint64_t sub_408280(int64_t* arg1, int64_t* arg2)\n{\n    int64_t rdx = arg1[9];\n    int64_t temp0 = arg2[9];\n    bool cond:0 = temp0 != rdx;\n    bool cond:1 = temp0 < rdx;\n    if (temp0 > rdx)\n    {\n        return 0xffffffff;\n    }\n    if (cond:0)\n    {\n        int64_t* rax_1;\n        rax_1 = cond:1;\n        return rax_1;\n    }\n    /* tailcall */\n    return sub_4050d0(*arg2, *arg1);\n}\n\n"
        },
        {
            "funcName": "sub_4082c0",
            "funcStartAddr": "0x4082c0",
            "funcEndAddr": "0x4082f6",
            "decompiledFuncCode": "uint64_t sub_4082c0(int64_t* arg1, int64_t* arg2)\n{\n    int64_t rdx = arg1[9];\n    int64_t temp0 = arg2[9];\n    bool cond:0 = temp0 != rdx;\n    bool cond:1 = temp0 < rdx;\n    if (temp0 > rdx)\n    {\n        return 0xffffffff;\n    }\n    if (cond:0)\n    {\n        int64_t* rax_1;\n        rax_1 = cond:1;\n        return rax_1;\n    }\n    /* tailcall */\n    return strcmp(*arg2, *arg1);\n}\n\n"
        },
        {
            "funcName": "sub_408300",
            "funcStartAddr": "0x408300",
            "funcEndAddr": "0x408386",
            "decompiledFuncCode": "uint64_t sub_408300(int64_t* arg1, int64_t* arg2)\n{\n    int32_t rax = arg1[0x15];\n    int32_t rdx = arg2[0x15];\n    bool rcx = rax == 3;\n    rax = rax == 9;\n    char rcx_1 = (rcx | rax);\n    rax = rdx == 3;\n    rdx = rdx == 9;\n    rdx = (rdx | rax);\n    if ((rdx == 0 && rcx_1 != 0))\n    {\n    label_408385:\n        return 0xffffffff;\n    }\n    uint64_t rax_1;\n    if (rcx_1 == 0)\n    {\n        rax_1 = 1;\n    }\n    if ((rcx_1 != 0 || (rcx_1 == 0 && rdx == 0)))\n    {\n        int64_t rax_2 = arg2[0x10];\n        int64_t temp0_1 = arg1[0x10];\n        bool cond:0_1 = temp0_1 < rax_2;\n        if (temp0_1 > rax_2)\n        {\n            goto label_408385;\n        }\n        if (cond:0_1)\n        {\n            return 1;\n        }\n        int32_t rax_3 = arg2[0x11];\n        rax_1 = (rax_3 - arg1[0x11]);\n        if (rax_3 == arg1[0x11])\n        {\n            /* tailcall */\n            return strcmp(*arg1, *arg2);\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_408390",
            "funcStartAddr": "0x408390",
            "funcEndAddr": "0x408406",
            "decompiledFuncCode": "uint64_t sub_408390(int64_t* arg1, int64_t* arg2)\n{\n    int32_t rax = arg1[0x15];\n    int32_t rdx = arg2[0x15];\n    bool rcx = rax == 3;\n    rax = rax == 9;\n    char rcx_1 = (rcx | rax);\n    rax = rdx == 3;\n    rdx = rdx == 9;\n    rdx = (rdx | rax);\n    if ((rdx == 0 && rcx_1 != 0))\n    {\n    label_408405:\n        return 0xffffffff;\n    }\n    uint64_t rax_1;\n    if (rcx_1 == 0)\n    {\n        rax_1 = 1;\n    }\n    if ((rcx_1 != 0 || (rcx_1 == 0 && rdx == 0)))\n    {\n        int64_t rax_2 = arg2[0xe];\n        int64_t temp0_1 = arg1[0xe];\n        bool cond:0_1 = temp0_1 < rax_2;\n        if (temp0_1 > rax_2)\n        {\n            goto label_408405;\n        }\n        if (cond:0_1)\n        {\n            return 1;\n        }\n        int32_t rax_3 = arg2[0xf];\n        rax_1 = (rax_3 - arg1[0xf]);\n        if (rax_3 == arg1[0xf])\n        {\n            /* tailcall */\n            return strcmp(*arg1, *arg2);\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_408410",
            "funcStartAddr": "0x408410",
            "funcEndAddr": "0x4084ad",
            "decompiledFuncCode": "uint64_t sub_408410(uid_t arg1)\n{\n    if (data_6256ed == 0)\n    {\n        void* rax_5 = sub_40e160(arg1);\n        if (rax_5 != 0)\n        {\n            int64_t rax_6 = sub_40eb70(rax_5, 0);\n            if (rax_6 < 0)\n            {\n                rax_6 = 0;\n            }\n            return rax_6;\n        }\n    }\n    void var_38;\n    __sprintf_chk(&var_38, 1, 0x15, \"%lu\", arg1);\n    void* rax_2 = &var_38;\n    uint32_t rdx_3;\n    do\n    {\n        int32_t rcx_1 = *rax_2;\n        rax_2 = (rax_2 + 4);\n        rdx_3 = (((rcx_1 - 0x1010101) & (!rcx_1)) & 0x80808080);\n    } while (rdx_3 == 0);\n    uint32_t rcx_4 = (rdx_3 >> 0x10);\n    int32_t temp0 = (rdx_3 & 0x8080);\n    bool cond:0 = temp0 == 0;\n    if (temp0 == 0)\n    {\n        rdx_3 = rcx_4;\n    }\n    void* rcx_5 = (rax_2 + 2);\n    if (cond:0)\n    {\n        rax_2 = rcx_5;\n    }\n    char rsi = rdx_3;\n    return ((rax_2 - 3) - &var_38);\n}\n\n"
        },
        {
            "funcName": "sub_4084b0",
            "funcStartAddr": "0x4084b0",
            "funcEndAddr": "0x408579",
            "decompiledFuncCode": "int64_t sub_4084b0()\n{\n    int64_t rax = data_625770;\n    int64_t* rbx = data_625760;\n    void* r12 = &rbx[rax];\n    if (rax != 0)\n    {\n        do\n        {\n            int64_t* rbp_1 = *rbx;\n            rbx = &rbx[1];\n            free(*rbp_1);\n            free(rbp_1[1]);\n            rax = free(rbp_1[2]);\n        } while (rbx != r12);\n    }\n    data_625769 = 0;\n    data_625770 = 0;\n    data_625724 = 0;\n    data_625720 = 0;\n    data_62571c = 0;\n    data_625718 = 0;\n    data_625710 = 0;\n    data_62570c = 0;\n    data_625708 = 0;\n    data_625714 = 0;\n    data_625704 = 0;\n    data_625700 = 0;\n    data_6256fc = 0;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_408580",
            "funcStartAddr": "0x408580",
            "funcEndAddr": "0x40929e",
            "decompiledFuncCode": "int64_t sub_408580(char* arg1, int32_t arg2, uint32_t arg3, char* arg4)\n{\n    char r13 = arg3;\n    int64_t rcx = data_625770;\n    int64_t rdi = data_625780;\n    if (rcx == data_625778)\n    {\n        int64_t rax_1;\n        bool rdx;\n        rdx = HIGHD((0x190 * rcx));\n        rax_1 = LOWD((0x190 * rcx));\n        uint64_t rdx_1 = ((0x190 * rcx) >> 0x40) != 0;\n        if ((rax_1 < 0 || (rax_1 >= 0 && rdx_1 != 0)))\n        {\n            sub_412bd0();\n            /* no return */\n        }\n        if ((rax_1 >= 0 && rdx_1 == 0))\n        {\n            int64_t rax_3;\n            rax_3 = sub_4129e0(rdi, (rcx * 0x190));\n            rcx = data_625770;\n            data_625778 = (data_625778 << 1);\n            data_625780 = rax_3;\n            rdi = rax_3;\n        }\n    }\n    int64_t rbx = (rdi + (rcx * 0xc8));\n    *rbx = 0;\n    *(rbx + 0xbc) = 0;\n    int64_t* rdi_2 = ((rbx + 8) & 0xfffffffffffffff8);\n    uint64_t rcx_4;\n    for (rcx_4 = (((rbx - rdi_2) + 0xc4) >> 3); rcx_4 != 0; rcx_4 = (rcx_4 - 1))\n    {\n        *rdi_2 = 0;\n        rdi_2 = &rdi_2[1];\n    }\n    *(rbx + 0x20) = 0;\n    *(rbx + 0xa8) = arg2;\n    bool cond:1 = data_625769 != 0;\n    *(rbx + 0xc4) = 0xffffffff;\n    if (((!cond:1) && data_625768 != 0))\n    {\n        char rax_56;\n        rax_56 = sub_404e20(arg1);\n        *(rbx + 0xc4) = rax_56;\n        if (rax_56 != 0)\n        {\n            data_625769 = 1;\n        }\n    }\n    char r8 = data_6256d1;\n    int64_t r12_2;\n    char var_2f8;\n    char rcx_5;\n    char rdx_2;\n    char* r12_1;\n    struct stat* r15_1;\n    if (r13 != 0)\n    {\n        rdx_2 = *arg1;\n        r12_1 = arg1;\n        if (rdx_2 != 0x2f)\n        {\n            rcx_5 = *arg4;\n            if (rcx_5 != 0)\n            {\n            label_408c5d:\n                char rcx_9 = rcx_5;\n                char r10_2 = arg4[1];\n                char rdx_16 = rdx_2;\n                void var_308;\n                char* rdi_26 = (((&var_308 - (((strlen(arg1) + strlen(arg4)) + 0x19) & 0xfffffffffffffff0)) + 0xf) & 0xfffffffffffffff0);\n                r12_1 = rdi_26;\n                char* rax_55;\n                if (rcx_9 == 0x2e)\n                {\n                    rax_55 = rdi_26;\n                }\n                if ((rcx_9 != 0x2e || (rcx_9 == 0x2e && r10_2 != 0)))\n                {\n                    char* rsi_12 = arg4;\n                    while (true)\n                    {\n                        rax_55 = &rdi_26[1];\n                        rsi_12 = &rsi_12[1];\n                        rax_55[-1] = rcx_9;\n                        if (r10_2 == 0)\n                        {\n                            break;\n                        }\n                        rcx_9 = r10_2;\n                        r10_2 = rsi_12[1];\n                        rdi_26 = rax_55;\n                    }\n                    if ((arg4 < rsi_12 && rsi_12[-1] != 0x2f))\n                    {\n                        *rax_55 = 0x2f;\n                        rax_55 = &rdi_26[2];\n                    }\n                }\n                if (rdx_16 != 0)\n                {\n                    char* rcx_10 = arg1;\n                    do\n                    {\n                        rcx_10 = &rcx_10[1];\n                        rax_55 = &rax_55[1];\n                        rax_55[-1] = rdx_16;\n                        rdx_16 = *rcx_10;\n                    } while (rdx_16 != 0);\n                }\n                *rax_55 = 0;\n            }\n        }\n        if (r8 != 0)\n        {\n            goto label_408b62;\n        }\n    label_4086a8:\n        int32_t rcx_6 = data_6256b8;\n        r15_1 = (rbx + 0x18);\n        if (rcx_6 < 3)\n        {\n        label_40893b:\n            if (__lxstat(1, r12_1, r15_1) == 0)\n            {\n            label_4086e5:\n                *(rbx + 0xb8) = 1;\n                if ((((arg2 == 5 || (arg2 != 5 && (*(rbx + 0x30) & 0xf000) == 0x8000)) && data_6256d2 != 0) && sub_404ae0(0x15) != 0))\n                {\n                    int64_t r14_2 = *(rbx + 0x18);\n                    bool cond:4_1 = r14_2 == data_6246b8;\n                    *__errno_location() = 0x5f;\n                    if ((!cond:4_1))\n                    {\n                        data_6246b8 = r14_2;\n                    }\n                    *(rbx + 0xc0) = 0;\n                }\n                if (data_6256f8 != 0)\n                {\n                    if (data_625725 != 0)\n                    {\n                        goto label_40871e;\n                    }\n                    goto label_408768;\n                }\n            label_40871e:\n                int32_t* rax_10 = __errno_location();\n                int64_t r14_1 = *(rbx + 0x18);\n                bool cond:3_1 = r14_1 == data_6246b0;\n                *rax_10 = 0x5f;\n                if ((!cond:3_1))\n                {\n                    data_6246b0 = r14_1;\n                }\n                int32_t r9_1 = data_6256f8;\n                *(rbx + 0xb0) = &data_6245aa;\n                int32_t rax_12;\n                if (r9_1 == 0)\n                {\n                    if (r14_1 != data_6246a8)\n                    {\n                        *rax_10 = 0;\n                        var_2f8 = rax_10;\n                        int32_t rdx_27 = *var_2f8;\n                        if ((((rdx_27 - 0x16) & 0xffffffef) == 0 || (((rdx_27 - 0x16) & 0xffffffef) != 0 && rdx_27 == 0x5f)))\n                        {\n                            data_6246a8 = *(rbx + 0x18);\n                        }\n                        *(rbx + 0xbc) = 0;\n                        rax_12 = (*(rbx + 0x30) & 0xf000);\n                        if (rax_12 != 0xa000)\n                        {\n                            goto label_408778;\n                        }\n                        if (data_6256f8 == 0)\n                        {\n                            goto label_408e24;\n                        }\n                        goto label_408e10;\n                    }\n                    *rax_10 = 0x5f;\n                    int32_t rax_84 = *(rbx + 0x30);\n                    *(rbx + 0xbc) = 0;\n                    rax_12 = (rax_84 & 0xf000);\n                    if (rax_12 == 0xa000)\n                    {\n                        goto label_408e24;\n                    }\n                    goto label_408778;\n                }\n                *(rbx + 0xbc) = 0;\n            label_408768:\n                rax_12 = (*(rbx + 0x30) & 0xf000);\n                void var_2c8;\n                if (rax_12 == 0xa000)\n                {\n                label_408e10:\n                    if (data_6256bd == 0)\n                    {\n                    label_408ee4:\n                        *(rbx + 0xa8) = 6;\n                        goto label_408793;\n                    }\n                label_408e24:\n                    char* rax_59 = sub_40abf0(r12_1, *(rbx + 0x48));\n                    char* r14_3 = rax_59;\n                    *(rbx + 8) = rax_59;\n                    char* r15_2;\n                    if (rax_59 == 0)\n                    {\n                        sub_405580(r13, dcgettext(nullptr, \"cannot read symbolic link %s\", 5), r12_1);\n                        r14_3 = *(rbx + 8);\n                        if (r14_3 == 0)\n                        {\n                        label_4091ad:\n                            r15_2 = nullptr;\n                        label_408ecc:\n                            free(r15_2);\n                            rax_12 = (*(rbx + 0x30) & 0xf000);\n                            if (rax_12 == 0xa000)\n                            {\n                                goto label_408ee4;\n                            }\n                        }\n                    }\n                    if ((rax_59 != 0 || (rax_59 == 0 && r14_3 != 0)))\n                    {\n                        if (*r14_3 == 0x2f)\n                        {\n                        label_409050:\n                            r15_2 = sub_412bb0(r14_3);\n                        }\n                        else\n                        {\n                            void* rax_60 = sub_40b7b0(r12_1);\n                            if (rax_60 == 0)\n                            {\n                                goto label_409050;\n                            }\n                            var_2f8 = rax_60;\n                            uint64_t rdx_19 = var_2f8;\n                            r15_2 = sub_412980(((var_2f8 + strlen(r14_3)) + 2));\n                            if (r12_1[(rdx_19 - 1)] != 0x2f)\n                            {\n                                rdx_19 = (rdx_19 + 1);\n                            }\n                            strcpy(stpncpy(r15_2, r12_1, rdx_19), r14_3);\n                        }\n                        if (r15_2 == 0)\n                        {\n                            goto label_4091ad;\n                        }\n                        if ((*(rbx + 0xc4) == 0 && sub_404e20(*(rbx + 8)) != 0))\n                        {\n                            *(rbx + 0xc4) = 0xffffffff;\n                        }\n                        if (((data_6256d4 > 1 || (data_6256d4 <= 1 && data_6256bd != 0)) && __xstat(1, r15_2, &var_2c8) == 0))\n                        {\n                            *(rbx + 0xb9) = 1;\n                            int32_t var_2b0;\n                            if (((r13 == 0 || (r13 != 0 && data_6256f8 == 0)) || ((r13 != 0 && data_6256f8 != 0) && (var_2b0 & 0xf000) != 0x4000)))\n                            {\n                                *(rbx + 0xac) = var_2b0;\n                            }\n                        }\n                        goto label_408ecc;\n                    }\n                    goto label_408778;\n                }\n            label_408778:\n                if (rax_12 == 0x4000)\n                {\n                    if ((r13 == 0 || (r13 != 0 && data_6256b5 != 0)))\n                    {\n                        *(rbx + 0xa8) = 3;\n                    }\n                    if ((r13 != 0 && data_6256b5 == 0))\n                    {\n                        *(rbx + 0xa8) = 9;\n                    }\n                    goto label_408793;\n                }\n                *(rbx + 0xa8) = 5;\n            label_408793:\n                r12_2 = *(rbx + 0x58);\n                if ((data_6256f8 == 0 || (data_6256f8 != 0 && data_6256ec != 0)))\n                {\n                    char* rax_25;\n                    int80_t st0_1;\n                    st0_1 = sub_40d5d0(r12_2, &var_2c8, data_6256e8, 0x200, data_6256e0);\n                    int32_t rax_26 = sub_40eb70(rax_25, 0);\n                    if (rax_26 > data_62571c)\n                    {\n                        data_62571c = rax_26;\n                    }\n                    if (data_6256f8 == 0)\n                    {\n                        if (data_6245a9 != 0)\n                        {\n                            int32_t rax_67 = sub_408410(*(rbx + 0x34));\n                            if (rax_67 > data_625710)\n                            {\n                                data_625710 = rax_67;\n                            }\n                        }\n                        if (data_6245a8 != 0)\n                        {\n                            gid_t r14_4 = *(rbx + 0x38);\n                            int32_t rax_72;\n                            char* rax_82;\n                            if (data_6256ed == 0)\n                            {\n                                rax_82 = sub_40e2f0(r14_4);\n                                if (rax_82 != 0)\n                                {\n                                    rax_72 = sub_40eb70(rax_82, 0);\n                                    if (rax_72 < 0)\n                                    {\n                                        rax_72 = 0;\n                                    }\n                                }\n                            }\n                            if ((data_6256ed != 0 || (data_6256ed == 0 && rax_82 == 0)))\n                            {\n                                __sprintf_chk(&var_2c8, 1, 0x15, \"%lu\", r14_4);\n                                void* rax_70 = &var_2c8;\n                                uint32_t rdx_25;\n                                do\n                                {\n                                    int32_t rcx_11 = *rax_70;\n                                    rax_70 = (rax_70 + 4);\n                                    rdx_25 = (((rcx_11 - 0x1010101) & (!rcx_11)) & 0x80808080);\n                                } while (rdx_25 == 0);\n                                uint32_t rcx_14 = (rdx_25 >> 0x10);\n                                int32_t temp1_1 = (rdx_25 & 0x8080);\n                                bool cond:7_1 = temp1_1 == 0;\n                                if (temp1_1 == 0)\n                                {\n                                    rdx_25 = rcx_14;\n                                }\n                                void* rcx_15 = (rax_70 + 2);\n                                if (cond:7_1)\n                                {\n                                    rax_70 = rcx_15;\n                                }\n                                char rsi_20 = rdx_25;\n                                rax_72 = ((rax_70 - 3) - &var_2c8);\n                            }\n                            if (data_62570c < rax_72)\n                            {\n                                data_62570c = rax_72;\n                            }\n                        }\n                        if (data_6256ee != 0)\n                        {\n                            int32_t rax_68 = sub_408410(*(rbx + 0x34));\n                            if (rax_68 > data_625708)\n                            {\n                                data_625708 = rax_68;\n                            }\n                        }\n                        if (data_625725 != 0)\n                        {\n                            goto label_408a01;\n                        }\n                    }\n                }\n                if ((((data_6256f8 != 0 && data_6256ec == 0) || ((data_6256f8 == 0 || (data_6256f8 != 0 && data_6256ec != 0)) && data_6256f8 != 0)) && data_625725 != 0))\n                {\n                label_408a01:\n                    int32_t rax_27 = strlen(*(rbx + 0xb0));\n                    if (rax_27 > data_625714)\n                    {\n                        data_625714 = rax_27;\n                    }\n                }\n                if ((((((data_6256f8 != 0 && data_6256ec == 0) || ((data_6256f8 == 0 || (data_6256f8 != 0 && data_6256ec != 0)) && data_6256f8 != 0)) && data_625725 != 0) || ((data_6256f8 == 0 || (data_6256f8 != 0 && data_6256ec != 0)) && data_6256f8 == 0)) && data_6256f8 == 0))\n                {\n                    void var_2e8;\n                    int32_t rax_30 = strlen(sub_40e520(*(rbx + 0x28), &var_2e8));\n                    if (rax_30 > data_625718)\n                    {\n                        data_625718 = rax_30;\n                    }\n                    int32_t rax_42;\n                    if ((*(rbx + 0x30) & 0xb000) != 0x2000)\n                    {\n                        /* unimplemented  {call sub_40d5d0} */;\n                        rax_42 = sub_40eb70(sub_40d5d0(*(rbx + 0x48), &var_2c8, data_6256dc, 1, data_6245a0), 0);\n                    }\n                    else\n                    {\n                        int64_t rax_33 = *(rbx + 0x40);\n                        int32_t rax_36 = strlen(sub_40e520((((rax_33 >> 0x20) & 0xfffff000) | ((rax_33 >> 8) & 0xfff)), &var_2c8));\n                        if (rax_36 > data_625704)\n                        {\n                            data_625704 = rax_36;\n                        }\n                        uint32_t rdi_16;\n                        rdi_16 = 0;\n                        int32_t rax_40 = strlen(sub_40e520((rdi_16 | *(rbx + 0x40)), &var_2c8));\n                        int32_t rdx_11 = data_625700;\n                        if (rax_40 > rdx_11)\n                        {\n                            data_625700 = rax_40;\n                            rdx_11 = rax_40;\n                        }\n                        rax_42 = ((rdx_11 + data_625704) + 2);\n                    }\n                    if ((((*(rbx + 0x30) & 0xb000) != 0x2000 && rax_42 > data_6256fc) || ((*(rbx + 0x30) & 0xb000) == 0x2000 && rax_42 > data_6256fc)))\n                    {\n                        data_6256fc = rax_42;\n                    }\n                }\n                if (data_6256bc != 0)\n                {\n                    int32_t rax_50 = strlen(sub_40e520(*(rbx + 0x20), &var_2c8));\n                    if (rax_50 > data_625720)\n                    {\n                        data_625720 = rax_50;\n                    }\n                }\n                goto label_4087cf;\n            }\n        label_408960:\n            r12_2 = 0;\n            sub_405580(r13, dcgettext(nullptr, \"cannot access %s\", 5), r12_1);\n            if (r13 == 0)\n            {\n                goto label_4087cf;\n            }\n        }\n        else\n        {\n            if (rcx_6 > 4)\n            {\n                if (rcx_6 != 5)\n                {\n                    goto label_40893b;\n                }\n            label_4086d8:\n                if (__xstat(1, r12_1, r15_1) == 0)\n                {\n                    goto label_4086e5;\n                }\n                goto label_408960;\n            }\n            if (r13 == 0)\n            {\n                goto label_40893b;\n            }\n            var_2f8 = rcx_6;\n            int32_t rax_48 = __xstat(1, r12_1, r15_1);\n            if (var_2f8 != 3)\n            {\n                if (rax_48 < 0)\n                {\n                    if (*__errno_location() == 2)\n                    {\n                        goto label_40893b;\n                    }\n                    goto label_4090e7;\n                }\n                if ((*(rbx + 0x30) & 0xf000) != 0x4000)\n                {\n                    goto label_40893b;\n                }\n            }\n            if (rax_48 == 0)\n            {\n                goto label_4086e5;\n            }\n        label_4090e7:\n            r12_2 = 0;\n            sub_405580(1, dcgettext(nullptr, \"cannot access %s\", 5), r12_1);\n        }\n    }\n    else\n    {\n        if (r8 != 0)\n        {\n            rdx_2 = *arg1;\n            if (rdx_2 != 0x2f)\n            {\n                rcx_5 = *arg4;\n                r12_1 = arg1;\n                if (rcx_5 == 0)\n                {\n                    goto label_408b62;\n                }\n                goto label_408c5d;\n            }\n            r12_1 = arg1;\n        label_408b62:\n            void* rax_46 = sub_40b070(r12_1, 2);\n            *(rbx + 0x10) = rax_46;\n            if (rax_46 == 0)\n            {\n                sub_405580(r13, dcgettext(nullptr, \"error canonicalizing %s\", 5), r12_1);\n            }\n            goto label_4086a8;\n        }\n        if (data_625661 != 0)\n        {\n        label_4088ef:\n            rdx_2 = *arg1;\n            if (rdx_2 != 0x2f)\n            {\n                rcx_5 = *arg4;\n                if (rcx_5 != 0)\n                {\n                    goto label_408c5d;\n                }\n                goto label_408903;\n            }\n        label_408903:\n            int32_t rax_22 = data_6256b8;\n            r15_1 = (rbx + 0x18);\n            r12_1 = arg1;\n            if (rax_22 < 3)\n            {\n                goto label_40893b;\n            }\n            if (rax_22 <= 4)\n            {\n                goto label_40893b;\n            }\n            if (rax_22 != 5)\n            {\n                goto label_40893b;\n            }\n            goto label_4086d8;\n        }\n        if ((arg2 == 3 && data_6256d2 != 0))\n        {\n            var_2f8 = r8;\n            r8 = var_2f8;\n            if (sub_404ae0(0x13) != 0)\n            {\n                goto label_4088ef;\n            }\n            r8 = var_2f8;\n            if (sub_404ae0(0x12) != 0)\n            {\n                goto label_4088ef;\n            }\n            char rax_81;\n            rax_81 = sub_404ae0(0x14);\n            r8 = var_2f8;\n            if (rax_81 != 0)\n            {\n                goto label_4088ef;\n            }\n        }\n        char rax_16 = data_6256bc;\n        if (rax_16 == 0)\n        {\n            if (data_625660 != 0)\n            {\n                rcx_4 = arg2 == 0;\n                arg3 = rcx_4;\n                if ((arg2 != 6 && rcx_4 == 0))\n                {\n                    if (data_625660 == 0)\n                    {\n                        goto label_409100;\n                    }\n                label_40885b:\n                    r12_2 = 0;\n                    if (arg2 != 5)\n                    {\n                        goto label_4087cf;\n                    }\n                    if (data_6256d4 == 3)\n                    {\n                        goto label_4088ef;\n                    }\n                    var_2f8 = r8;\n                    if (data_6256d2 == 0)\n                    {\n                        goto label_4087cf;\n                    }\n                    r8 = var_2f8;\n                    if (sub_404ae0(0xe) != 0)\n                    {\n                        goto label_4088ef;\n                    }\n                    r8 = var_2f8;\n                    if (sub_404ae0(0x10) != 0)\n                    {\n                        goto label_4088ef;\n                    }\n                    r8 = var_2f8;\n                    if (sub_404ae0(0x11) != 0)\n                    {\n                        goto label_4088ef;\n                    }\n                    r8 = var_2f8;\n                    if (sub_404ae0(0x15) != 0)\n                    {\n                        goto label_4088ef;\n                    }\n                    goto label_4087cf;\n                }\n            }\n            else\n            {\n            label_409100:\n                r12_2 = 0;\n            label_4087cf:\n                int64_t rax_14 = sub_412bb0(arg1);\n                data_625770 = (data_625770 + 1);\n                *rbx = rax_14;\n            }\n        }\n        else\n        {\n            arg3 = arg2 == 0;\n            if ((arg2 != 6 && arg3 == 0))\n            {\n                goto label_4088ef;\n            }\n        }\n        if ((rax_16 != 0 || (rax_16 == 0 && data_625660 != 0)))\n        {\n            if (data_6256b8 == 5)\n            {\n                goto label_4088ef;\n            }\n            if (data_625750 != 0)\n            {\n                goto label_4088ef;\n            }\n            if (data_6256bd != 0)\n            {\n                goto label_4088ef;\n            }\n            if (rax_16 != 0)\n            {\n                goto label_4088ef;\n            }\n            if (data_625660 == 0)\n            {\n                goto label_409100;\n            }\n            if (arg3 != 0)\n            {\n                goto label_4088ef;\n            }\n            goto label_40885b;\n        }\n    }\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_4092a0",
            "funcStartAddr": "0x4092a0",
            "funcEndAddr": "0x40995a",
            "decompiledFuncCode": "uint64_t sub_4092a0(char* arg1, char* arg2, char arg3)\n{\n    char* rbp = arg2;\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    DIR* rax_1 = opendir(arg1);\n    uint64_t rax_10;\n    if (rax_1 == 0)\n    {\n        rax_10 = sub_405580(arg3, dcgettext(nullptr, \"cannot open directory %s\", 5), arg1);\n    }\n    else\n    {\n        int64_t var_2c8;\n        if (data_625788 != 0)\n        {\n            int32_t rax_2 = dirfd(rax_1);\n            int64_t* rdx = &var_2c8;\n            uint8_t rax_4;\n            uint8_t rax_18;\n            if (rax_2 < 0)\n            {\n                rax_18 = (__xstat(1, arg1, rdx) >> 0x1f);\n            }\n            else\n            {\n                rax_4 = (__fxstat(1, rax_2, rdx) >> 0x1f);\n            }\n            if (((rax_2 < 0 && rax_18 == 0) || (rax_2 >= 0 && rax_4 == 0)))\n            {\n                int32_t var_2e0;\n                var_2e0 = var_2c8;\n                int64_t* rax_5 = sub_412980(0x10);\n                int64_t rdi_2 = data_625788;\n                int64_t var_2c0;\n                *rax_5 = var_2c0;\n                rax_5[1] = var_2e0;\n                int64_t rax_6 = sub_40d220(rdi_2, rax_5);\n                if (rax_6 == 0)\n                {\n                    sub_412bd0();\n                    /* no return */\n                }\n                if (rax_5 == rax_6)\n                {\n                    int64_t rax_11 = data_6254b8;\n                    int64_t rcx_4 = var_2c8;\n                    if ((data_6254c0 - rax_11) <= 0xf)\n                    {\n                        var_2e0 = rcx_4;\n                        _obstack_newchunk(&data_6254a0, 0x10);\n                        rax_11 = data_6254b8;\n                        rcx_4 = var_2e0;\n                    }\n                    data_6254b8 = (rax_11 + 0x10);\n                    *(rax_11 + 8) = rcx_4;\n                    *rax_11 = var_2c0;\n                    goto label_409423;\n                }\n                free(rax_5);\n                error(0, 0, dcgettext(nullptr, \"%s: not listing already-listed d\u2026\", 5), sub_412110(0, 3, arg1));\n                rax_10 = closedir(rax_1);\n                data_6255d0 = 2;\n            }\n            if (((rax_2 < 0 && rax_18 != 0) || (rax_2 >= 0 && rax_4 != 0)))\n            {\n                sub_405580(arg3, dcgettext(nullptr, \"cannot determine device and inod\u2026\", 5), arg1);\n                rax_10 = closedir(rax_1);\n            }\n        }\n        else\n        {\n        label_409423:\n            sub_4084b0();\n            if ((data_6256b6 != 0 || (data_6256b6 == 0 && data_625678 != 0)))\n            {\n                if (data_624400 == 0)\n                {\n                    uint64_t* const rdi_5 = stdout;\n                    char* rax_12 = stdout[5];\n                    if (rax_12 >= stdout[6])\n                    {\n                        __overflow(rdi_5, 0xa);\n                    }\n                    else\n                    {\n                        stdout[5] = &rax_12[1];\n                        *rax_12 = 0xa;\n                    }\n                    data_6255b8 = (data_6255b8 + 1);\n                }\n                bool cond:1_1 = data_6256d8 != 0;\n                data_624400 = 0;\n                char* r15_3;\n                if (cond:1_1)\n                {\n                    r15_3 = nullptr;\n                    fwrite_unlocked(&data_41b093, 1, 2, stdout);\n                    data_6255b8 = (data_6255b8 + 2);\n                }\n                else\n                {\n                    r15_3 = nullptr;\n                }\n                if (((cond:1_1 && data_6256d1 != 0) || ((!cond:1_1) && data_6256d1 != 0)))\n                {\n                    char* rax_34 = sub_40b070(arg1, 2);\n                    r15_3 = rax_34;\n                    if (rax_34 == 0)\n                    {\n                        sub_405580(arg3, dcgettext(nullptr, \"error canonicalizing %s\", 5), arg1);\n                    }\n                }\n                int32_t* rsi_2 = data_625688;\n                if (rbp == 0)\n                {\n                    rbp = arg1;\n                }\n                sub_4062d0(rbp, rsi_2, 0xffffffff, nullptr, 1, &data_625500, r15_3);\n                free(r15_3);\n                fwrite_unlocked(\":\\n\", 1, 2, stdout);\n                data_6255b8 = (data_6255b8 + 2);\n            }\n            int64_t var_2d8_2 = 0;\n            while (true)\n            {\n                *rax = 0;\n                struct dirent64* rax_14 = readdir(rax_1);\n                if (rax_14 != 0)\n                {\n                    char* rbp_1 = &rax_14->d_name;\n                    int32_t rax_15 = data_6256b0;\n                    if (rax_15 == 2)\n                    {\n                    label_409768:\n                        char** r15_5 = data_6256a8;\n                        int32_t rax_28;\n                        if (r15_5 != 0)\n                        {\n                            do\n                            {\n                                rax_28 = sub_4159a0(*r15_5, rbp_1, 4);\n                                if (rax_28 == 0)\n                                {\n                                    break;\n                                }\n                                r15_5 = r15_5[1];\n                            } while (r15_5 != 0);\n                        }\n                        if ((r15_5 == 0 || (r15_5 != 0 && rax_28 != 0)))\n                        {\n                            int32_t rsi_12 = 0;\n                            char rax_30 = (rax_14->d_type - 1);\n                            if (rax_30 <= 0xd)\n                            {\n                                rsi_12 = *((rax_30 << 2) + 0x4194a0);\n                            }\n                            var_2d8_2 = (var_2d8_2 + sub_408580(rbp_1, rsi_12, 0, arg1));\n                            if ((data_6256f8 == 1 && (data_6256f0 == 0xffffffff && (data_6256ec == 0 && data_6256b6 == 0))))\n                            {\n                                sub_404f40();\n                                sub_407ca0();\n                                sub_4084b0();\n                            }\n                        }\n                    }\n                    else if (rax_14->d_name[0] != 0x2e)\n                    {\n                        if (rax_15 != 0)\n                        {\n                            goto label_409768;\n                        }\n                        char** r15_4 = data_6256a0;\n                        if (r15_4 == 0)\n                        {\n                            goto label_409768;\n                        }\n                        int32_t rax_16;\n                        do\n                        {\n                            rax_16 = sub_4159a0(*r15_4, rbp_1, 4);\n                            if (rax_16 == 0)\n                            {\n                                break;\n                            }\n                            r15_4 = r15_4[1];\n                        } while (r15_4 != 0);\n                        if (rax_16 != 0)\n                        {\n                            goto label_409768;\n                        }\n                    }\n                    else if (rax_15 != 0)\n                    {\n                        int64_t rax_27;\n                        rax_27 = rax_14->d_name[1] == 0x2e;\n                        if (rax_14->d_name[(1 + rax_27)] != 0)\n                        {\n                            goto label_409768;\n                        }\n                    }\n                }\n                else\n                {\n                    if (*rax == 0)\n                    {\n                        break;\n                    }\n                    sub_405580(arg3, dcgettext(nullptr, \"reading directory %s\", 5), arg1);\n                    if (*rax != 0x4b)\n                    {\n                        break;\n                    }\n                }\n                sub_405d70();\n            }\n            if (closedir(rax_1) != 0)\n            {\n                sub_405580(arg3, dcgettext(nullptr, \"closing directory %s\", 5), arg1);\n            }\n            sub_404f40();\n            if (data_6256b6 != 0)\n            {\n                sub_405140(arg1, 0);\n            }\n            rax_10 = data_6256f8;\n            if ((rax_10 == 0 || (rax_10 != 0 && data_6256ec != 0)))\n            {\n                if (data_6256d8 != 0)\n                {\n                    fwrite_unlocked(&data_41b093, 1, 2, stdout);\n                    data_6255b8 = (data_6255b8 + 2);\n                }\n                char* rax_22 = dcgettext(nullptr, \"total\", 5);\n                fputs_unlocked(rax_22, stdout);\n                uint64_t* const rdi_16 = stdout;\n                data_6255b8 = (data_6255b8 + strlen(rax_22));\n                char* rax_24 = stdout[5];\n                if (rax_24 >= stdout[6])\n                {\n                    __overflow(rdi_16, 0x20);\n                }\n                else\n                {\n                    stdout[5] = &rax_24[1];\n                    *rax_24 = 0x20;\n                }\n                int32_t rdx_13 = data_6256e8;\n                int64_t r8_1 = data_6256e0;\n                data_6255b8 = (data_6255b8 + 1);\n                char* rax_25;\n                int80_t st0_1;\n                st0_1 = sub_40d5d0(var_2d8_2, &var_2c8, rdx_13, 0x200, r8_1);\n                fputs_unlocked(rax_25, stdout);\n                FILE* rdi_20 = stdout;\n                data_6255b8 = (data_6255b8 + strlen(rax_25));\n                rax_10 = stdout[5];\n                if (rax_10 >= stdout[6])\n                {\n                    rax_10 = __overflow(rdi_20, 0xa);\n                }\n                else\n                {\n                    stdout[5] = (rax_10 + 1);\n                    *rax_10 = 0xa;\n                }\n                data_6255b8 = (data_6255b8 + 1);\n            }\n            if (data_625770 != 0)\n            {\n                rax_10 = sub_407ca0();\n            }\n        }\n    }\n    return rax_10;\n}\n\n"
        },
        {
            "funcName": "sub_409fc0",
            "funcStartAddr": "0x409fc0",
            "funcEndAddr": "0x40a025",
            "decompiledFuncCode": "int64_t sub_409fc0(int64_t* arg1, int64_t* arg2)\n{\n    char* rbx = strrchr(*arg1, 0x2e);\n    char* rax_1 = strrchr(*arg2, 0x2e);\n    if (rax_1 == 0)\n    {\n        rax_1 = &data_41b08a;\n    }\n    if (rbx == 0)\n    {\n        rbx = &data_41b08a;\n    }\n    int64_t rax_2 = sub_4050d0(rbx, rax_1);\n    if (rax_2 != 0)\n    {\n        return rax_2;\n    }\n    /* tailcall */\n    return sub_4050d0(*arg1, *arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40a030",
            "funcStartAddr": "0x40a030",
            "funcEndAddr": "0x40a095",
            "decompiledFuncCode": "int64_t sub_40a030(int64_t* arg1, int64_t* arg2)\n{\n    char* rbx = strrchr(*arg2, 0x2e);\n    char* rax_1 = strrchr(*arg1, 0x2e);\n    if (rax_1 == 0)\n    {\n        rax_1 = &data_41b08a;\n    }\n    if (rbx == 0)\n    {\n        rbx = &data_41b08a;\n    }\n    int64_t rax_2 = sub_4050d0(rbx, rax_1);\n    if (rax_2 != 0)\n    {\n        return rax_2;\n    }\n    /* tailcall */\n    return sub_4050d0(*arg2, *arg1);\n}\n\n"
        },
        {
            "funcName": "sub_40a0a0",
            "funcStartAddr": "0x40a0a0",
            "funcEndAddr": "0x40a146",
            "decompiledFuncCode": "int64_t sub_40a0a0(int64_t* arg1, int64_t* arg2)\n{\n    int32_t rax = arg1[0x15];\n    int32_t rdx = arg2[0x15];\n    bool rcx = rax == 3;\n    rax = rax == 9;\n    char rcx_1 = (rcx | rax);\n    rax = rdx == 3;\n    rdx = rdx == 9;\n    rdx = (rdx | rax);\n    if ((rdx == 0 && rcx_1 != 0))\n    {\n        return 0xffffffff;\n    }\n    if ((rcx_1 == 0 && rdx != 0))\n    {\n        return 1;\n    }\n    char* r12 = strrchr(*arg2, 0x2e);\n    char* rax_3 = strrchr(*arg1, 0x2e);\n    if (rax_3 == 0)\n    {\n        rax_3 = &data_41b08a;\n    }\n    if (r12 == 0)\n    {\n        r12 = &data_41b08a;\n    }\n    int64_t rax_4 = sub_4050d0(r12, rax_3);\n    if (rax_4 == 0)\n    {\n        /* tailcall */\n        return sub_4050d0(*arg2, *arg1);\n    }\n    return rax_4;\n}\n\n"
        },
        {
            "funcName": "sub_40a150",
            "funcStartAddr": "0x40a150",
            "funcEndAddr": "0x40a1f6",
            "decompiledFuncCode": "int64_t sub_40a150(int64_t* arg1, int64_t* arg2)\n{\n    int32_t rax = arg1[0x15];\n    int32_t rdx = arg2[0x15];\n    bool rcx = rax == 3;\n    rax = rax == 9;\n    char rcx_1 = (rcx | rax);\n    rax = rdx == 3;\n    rdx = rdx == 9;\n    rdx = (rdx | rax);\n    if ((rdx == 0 && rcx_1 != 0))\n    {\n        return 0xffffffff;\n    }\n    if ((rcx_1 == 0 && rdx != 0))\n    {\n        return 1;\n    }\n    char* r12 = strrchr(*arg1, 0x2e);\n    char* rax_3 = strrchr(*arg2, 0x2e);\n    if (rax_3 == 0)\n    {\n        rax_3 = &data_41b08a;\n    }\n    if (r12 == 0)\n    {\n        r12 = &data_41b08a;\n    }\n    int64_t rax_4 = sub_4050d0(r12, rax_3);\n    if (rax_4 == 0)\n    {\n        /* tailcall */\n        return sub_4050d0(*arg1, *arg2);\n    }\n    return rax_4;\n}\n\n"
        },
        {
            "funcName": "sub_40a200",
            "funcStartAddr": "0x40a200",
            "funcEndAddr": "0x40a276",
            "decompiledFuncCode": "uint64_t sub_40a200(int64_t* arg1, int64_t* arg2)\n{\n    int32_t rax = arg1[0x15];\n    int32_t rdx = arg2[0x15];\n    bool rcx = rax == 3;\n    rax = rax == 9;\n    char rcx_1 = (rcx | rax);\n    rax = rdx == 3;\n    rdx = rdx == 9;\n    rdx = (rdx | rax);\n    if ((rdx == 0 && rcx_1 != 0))\n    {\n    label_40a275:\n        return 0xffffffff;\n    }\n    uint64_t rax_1;\n    if (rcx_1 == 0)\n    {\n        rax_1 = 1;\n    }\n    if ((rcx_1 != 0 || (rcx_1 == 0 && rdx == 0)))\n    {\n        int64_t rax_2 = arg1[0xe];\n        int64_t temp0_1 = arg2[0xe];\n        bool cond:0_1 = temp0_1 < rax_2;\n        if (temp0_1 > rax_2)\n        {\n            goto label_40a275;\n        }\n        if (cond:0_1)\n        {\n            return 1;\n        }\n        int32_t rax_3 = arg1[0xf];\n        rax_1 = (rax_3 - arg2[0xf]);\n        if (rax_3 == arg2[0xf])\n        {\n            /* tailcall */\n            return strcmp(*arg2, *arg1);\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40a280",
            "funcStartAddr": "0x40a280",
            "funcEndAddr": "0x40a306",
            "decompiledFuncCode": "uint64_t sub_40a280(int64_t* arg1, int64_t* arg2)\n{\n    int32_t rax = arg1[0x15];\n    int32_t rdx = arg2[0x15];\n    bool rcx = rax == 3;\n    rax = rax == 9;\n    char rcx_1 = (rcx | rax);\n    rax = rdx == 3;\n    rdx = rdx == 9;\n    rdx = (rdx | rax);\n    if ((rdx == 0 && rcx_1 != 0))\n    {\n    label_40a305:\n        return 0xffffffff;\n    }\n    uint64_t rax_1;\n    if (rcx_1 == 0)\n    {\n        rax_1 = 1;\n    }\n    if ((rcx_1 != 0 || (rcx_1 == 0 && rdx == 0)))\n    {\n        int64_t rax_2 = arg1[0x10];\n        int64_t temp0_1 = arg2[0x10];\n        bool cond:0_1 = temp0_1 < rax_2;\n        if (temp0_1 > rax_2)\n        {\n            goto label_40a305;\n        }\n        if (cond:0_1)\n        {\n            return 1;\n        }\n        int32_t rax_3 = arg1[0x11];\n        rax_1 = (rax_3 - arg2[0x11]);\n        if (rax_3 == arg2[0x11])\n        {\n            /* tailcall */\n            return strcmp(*arg2, *arg1);\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40a310",
            "funcStartAddr": "0x40a310",
            "funcEndAddr": "0x40a386",
            "decompiledFuncCode": "uint64_t sub_40a310(int64_t* arg1, int64_t* arg2)\n{\n    int32_t rax = arg1[0x15];\n    int32_t rdx = arg2[0x15];\n    bool rcx = rax == 3;\n    rax = rax == 9;\n    char rcx_1 = (rcx | rax);\n    rax = rdx == 3;\n    rdx = rdx == 9;\n    rdx = (rdx | rax);\n    if ((rdx == 0 && rcx_1 != 0))\n    {\n    label_40a385:\n        return 0xffffffff;\n    }\n    uint64_t rax_1;\n    if (rcx_1 == 0)\n    {\n        rax_1 = 1;\n    }\n    if ((rcx_1 != 0 || (rcx_1 == 0 && rdx == 0)))\n    {\n        int64_t rax_2 = arg1[0xc];\n        int64_t temp0_1 = arg2[0xc];\n        bool cond:0_1 = temp0_1 < rax_2;\n        if (temp0_1 > rax_2)\n        {\n            goto label_40a385;\n        }\n        if (cond:0_1)\n        {\n            return 1;\n        }\n        int32_t rax_3 = arg1[0xd];\n        rax_1 = (rax_3 - arg2[0xd]);\n        if (rax_3 == arg2[0xd])\n        {\n            /* tailcall */\n            return strcmp(*arg2, *arg1);\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40a390",
            "funcStartAddr": "0x40a390",
            "funcEndAddr": "0x40a3f9",
            "decompiledFuncCode": "int64_t sub_40a390(int64_t* arg1, int64_t* arg2)\n{\n    char* rbp = *arg2;\n    char* r12_1 = *arg1;\n    char* rbx = strrchr(rbp, 0x2e);\n    char* rax_1 = strrchr(r12_1, 0x2e);\n    if (rax_1 == 0)\n    {\n        rax_1 = &data_41b08a;\n    }\n    else if (rbx == 0)\n    {\n        rbx = &data_41b08a;\n    }\n    if (((rax_1 == 0 && rbx != 0) || rax_1 != 0))\n    {\n        int64_t rax_2 = strcmp(rbx, rax_1);\n        if (rax_2 != 0)\n        {\n            return rax_2;\n        }\n    }\n    /* tailcall */\n    return strcmp(rbp, r12_1);\n}\n\n"
        },
        {
            "funcName": "sub_40a400",
            "funcStartAddr": "0x40a400",
            "funcEndAddr": "0x40a469",
            "decompiledFuncCode": "int64_t sub_40a400(int64_t* arg1, int64_t* arg2)\n{\n    char* rbp = *arg1;\n    char* r12_1 = *arg2;\n    char* rbx = strrchr(rbp, 0x2e);\n    char* rax_1 = strrchr(r12_1, 0x2e);\n    if (rax_1 == 0)\n    {\n        rax_1 = &data_41b08a;\n    }\n    else if (rbx == 0)\n    {\n        rbx = &data_41b08a;\n    }\n    if (((rax_1 == 0 && rbx != 0) || rax_1 != 0))\n    {\n        int64_t rax_2 = strcmp(rbx, rax_1);\n        if (rax_2 != 0)\n        {\n            return rax_2;\n        }\n    }\n    /* tailcall */\n    return strcmp(rbp, r12_1);\n}\n\n"
        },
        {
            "funcName": "sub_40a470",
            "funcStartAddr": "0x40a470",
            "funcEndAddr": "0x40a526",
            "decompiledFuncCode": "int64_t sub_40a470(int64_t* arg1, int64_t* arg2)\n{\n    int32_t rax = arg1[0x15];\n    int32_t rdx = arg2[0x15];\n    bool rcx = rax == 3;\n    rax = rax == 9;\n    char rcx_1 = (rcx | rax);\n    rax = rdx == 3;\n    rdx = rdx == 9;\n    rdx = (rdx | rax);\n    if ((rdx == 0 && rcx_1 != 0))\n    {\n        return 0xffffffff;\n    }\n    if ((rcx_1 == 0 && rdx != 0))\n    {\n        return 1;\n    }\n    char* r12 = *arg1;\n    char* rbx_1 = *arg2;\n    char* rbp = strrchr(r12, 0x2e);\n    char* rax_3 = strrchr(rbx_1, 0x2e);\n    if (rax_3 == 0)\n    {\n        rax_3 = &data_41b08a;\n    }\n    else if (rbp == 0)\n    {\n        rbp = &data_41b08a;\n    }\n    if (((rax_3 == 0 && rbp != 0) || rax_3 != 0))\n    {\n        int64_t rax_4 = strcmp(rbp, rax_3);\n        if (rax_4 != 0)\n        {\n            return rax_4;\n        }\n    }\n    /* tailcall */\n    return strcmp(r12, rbx_1);\n}\n\n"
        },
        {
            "funcName": "sub_40a530",
            "funcStartAddr": "0x40a530",
            "funcEndAddr": "0x40abe9",
            "decompiledFuncCode": "int64_t sub_40a530(int32_t arg1) __noreturn\n{\n    int64_t rbx = data_6257c0;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbx);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [OPTION]... [FILE]...\\n\", 5), rbx);\n        fputs_unlocked(dcgettext(nullptr, \"List information about the FILEs\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nMandatory arguments to long op\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -a, --all                  do \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --block-size=SIZE      wit\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -B, --ignore-backups       do \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -C                         lis\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -f                         do \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -g                         lik\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --group-directories-first\\n\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -G, --no-group             in \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -h, --human-readable       wit\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -H, --dereference-command-line\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --hyperlink[=WHEN]     hyp\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --indicator-style=WORD  ap\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -k, --kibibytes            def\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -l                         use\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -n, --numeric-uid-gid      lik\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -q, --hide-control-chars   pri\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -r, --reverse              rev\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -S                         sor\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --time-style=TIME_STYLE  t\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -t                         sor\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -u                         wit\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -w, --width=COLS           set\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nThe SIZE argument is an intege\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nThe TIME_STYLE argument can be\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nUsing color to distinguish fil\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nExit status:\\n 0  if OK,\\n 1  \u2026\", 5), stdout);\n        int32_t rax_34 = data_6245ac;\n        void* const rbp_1;\n        if (rax_34 == 1)\n        {\n            rbp_1 = \"ls\";\n        }\n        else\n        {\n            rbp_1 = \"dir\";\n            if (rax_34 != 2)\n            {\n                rbp_1 = \"vdir\";\n            }\n        }\n        void* const var_88 = &data_41b568;\n        void* const rsi_32 = &data_41b568;\n        void* const* rbx_1 = &var_88;\n        void* const var_78_1 = \"coreutils\";\n        void* const var_70_1 = \"Multi-call invocation\";\n        void* const var_68_1 = \"sha224sum\";\n        void* const var_60_1 = \"sha2 utilities\";\n        void* const var_58_1 = \"sha256sum\";\n        void* const var_50_1 = \"sha2 utilities\";\n        void* const var_48_1 = \"sha384sum\";\n        void* const var_40_1 = \"sha2 utilities\";\n        void* const var_38_1 = \"sha512sum\";\n        void* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        do\n        {\n            if (strcmp(rbp_1, rsi_32) == 0)\n            {\n                break;\n            }\n            rbx_1 = &rbx_1[2];\n            rsi_32 = *rbx_1;\n        } while (rsi_32 != 0);\n        void* const rbx_2 = rbx_1[1];\n        char* rax_48;\n        int32_t rax_49;\n        void* const rbp_2;\n        if (rbx_2 == 0)\n        {\n            int64_t rcx_4;\n            int64_t rdx_5;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_4 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_48 = setlocale(5, nullptr, rdx_5, rcx_4, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_48 != 0)\n            {\n                rax_49 = strncmp(rax_48, &data_41b1bb, 3);\n                if (rax_49 != 0)\n                {\n                    rbx_2 = rbp_1;\n                }\n            }\n            if ((rax_48 == 0 || (rax_48 != 0 && rax_49 == 0)))\n            {\n                rbx_2 = rbp_1;\n                rbp_2 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", rbp_1);\n            }\n        }\n        else\n        {\n            int64_t rcx_1;\n            int64_t rdx_2;\n            uint64_t r8_1;\n            ssize_t r9_1;\n            rcx_1 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_38 = setlocale(5, nullptr, rdx_2, rcx_1, r8_1, r9_1, var_88, \"test invocation\");\n            if (rax_38 == 0)\n            {\n                goto label_40aaf9;\n            }\n            if (strncmp(rax_38, &data_41b1bb, 3) == 0)\n            {\n                goto label_40aaf9;\n            }\n        }\n        if ((((rbx_2 == 0 && rax_48 != 0) && rax_49 != 0) || rbx_2 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), rbp_1);\n        label_40aaf9:\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", rbp_1);\n            rbp_2 = \" invocation\";\n            if (rbp_1 != rbx_2)\n            {\n                rbp_2 = &data_41b08a;\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbx_2, rbp_2);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40abf0",
            "funcStartAddr": "0x40abf0",
            "funcEndAddr": "0x40acdf",
            "decompiledFuncCode": "char* sub_40abf0(int64_t arg1, int64_t arg2)\n{\n    size_t rbx = (arg2 + 1);\n    if (arg2 >= 0x401)\n    {\n        rbx = 0x401;\n    }\n    char* rbp_1;\n    while (true)\n    {\n        char* rax_1 = malloc(rbx);\n        rbp_1 = rax_1;\n        if (rax_1 == 0)\n        {\n            break;\n        }\n        while (true)\n        {\n            int64_t rax_2 = readlink(arg1, rax_1, rbx);\n            if ((rax_2 < 0 && *__errno_location() != 0x22))\n            {\n                free(rbp_1);\n                return nullptr;\n            }\n            if (rbx > rax_2)\n            {\n                rbp_1[rax_2] = 0;\n                return rbp_1;\n            }\n            free(rbp_1);\n            if (rbx > 0x3fffffffffffffff)\n            {\n                break;\n            }\n            rbx = (rbx + rbx);\n            rax_1 = malloc(rbx);\n            rbp_1 = rax_1;\n            if (rax_1 == 0)\n            {\n                return rbp_1;\n            }\n        }\n        if (rbx > 0x7ffffffffffffffe)\n        {\n            rbp_1 = nullptr;\n            *__errno_location() = 0xc;\n            break;\n        }\n        rbx = 0x7fffffffffffffff;\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_40ace0",
            "funcStartAddr": "0x40ace0",
            "funcEndAddr": "0x40acea",
            "decompiledFuncCode": "int64_t sub_40ace0() __noreturn\n{\n    /* tailcall */\n    return sub_40a530(1);\n}\n\n"
        },
        {
            "funcName": "sub_40acf0",
            "funcStartAddr": "0x40acf0",
            "funcEndAddr": "0x40ae06",
            "decompiledFuncCode": "int64_t sub_40acf0(char* arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t rbp = arg3;\n    uint64_t rax = strlen(arg1);\n    char* r14 = *arg2;\n    int64_t var_58 = -1;\n    if (r14 != 0)\n    {\n        char var_41_1 = 0;\n        int64_t rbx_1 = 0;\n        while (true)\n        {\n            if (strncmp(r14, arg1, rax) == 0)\n            {\n                if (strlen(r14) == rax)\n                {\n                    var_58 = rbx_1;\n                    break;\n                }\n                if (var_58 == -1)\n                {\n                    var_58 = rbx_1;\n                    rbx_1 = (rbx_1 + 1);\n                    rbp = (rbp + arg4);\n                    r14 = arg2[rbx_1];\n                    if (r14 != 0)\n                    {\n                        continue;\n                    }\n                    goto label_40adcd;\n                }\n                if (arg3 == 0)\n                {\n                    var_41_1 = 1;\n                }\n                else\n                {\n                    char rax_3 = var_41_1;\n                    if (memcmp(((var_58 * arg4) + arg3), rbp, arg4) != 0)\n                    {\n                        rax_3 = 1;\n                    }\n                    var_41_1 = rax_3;\n                }\n            }\n            rbx_1 = (rbx_1 + 1);\n            rbp = (rbp + arg4);\n            r14 = arg2[rbx_1];\n            if (r14 == 0)\n            {\n            label_40adcd:\n                int64_t rax_6 = -2;\n                if (var_41_1 == 0)\n                {\n                    rax_6 = var_58;\n                }\n                var_58 = rax_6;\n                break;\n            }\n        }\n    }\n    return var_58;\n}\n\n"
        },
        {
            "funcName": "sub_40ae10",
            "funcStartAddr": "0x40ae10",
            "funcEndAddr": "0x40ae81",
            "decompiledFuncCode": "int64_t sub_40ae10(uint64_t arg1, uint64_t arg2, int64_t arg3)\n{\n    char* rbx;\n    if (arg3 == -1)\n    {\n        rbx = dcgettext(nullptr, \"invalid argument %s for %s\", 5);\n    }\n    else\n    {\n        rbx = dcgettext(nullptr, \"ambiguous argument %s for %s\", 5);\n    }\n    /* tailcall */\n    return error(0, 0, rbx, sub_411f60(0, 8, arg2), sub_412270(1, arg1));\n}\n\n"
        },
        {
            "funcName": "sub_40ae90",
            "funcStartAddr": "0x40ae90",
            "funcEndAddr": "0x40afa8",
            "decompiledFuncCode": "char* sub_40ae90(int64_t* arg1, int64_t arg2, uint64_t arg3)\n{\n    int64_t r14 = 0;\n    int64_t rbp = arg2;\n    int64_t rbx = 0;\n    fputs_unlocked(dcgettext(nullptr, \"Valid arguments are:\", 5), stderr);\n    int64_t r12 = *arg1;\n    if (r12 != 0)\n    {\n        do\n        {\n            if ((rbx != 0 && memcmp(r14, rbp, arg3) == 0))\n            {\n                rbx = (rbx + 1);\n                rbp = (rbp + arg3);\n                __fprintf_chk(stderr, 1, \", %s\", sub_412290(r12));\n                r12 = arg1[rbx];\n                if (r12 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = (rbx + 1);\n            r14 = rbp;\n            rbp = (rbp + arg3);\n            __fprintf_chk(stderr, 1, \"\\n  - %s\", sub_412290(r12));\n            r12 = arg1[rbx];\n        } while (r12 != 0);\n    }\n    uint64_t* const rdi_6 = stderr;\n    char* rax_6 = stderr[5];\n    if (rax_6 >= stderr[6])\n    {\n        /* tailcall */\n        return __overflow(rdi_6, 0xa);\n    }\n    stderr[5] = &rax_6[1];\n    *rax_6 = 0xa;\n    return rax_6;\n}\n\n"
        },
        {
            "funcName": "sub_40afb0",
            "funcStartAddr": "0x40afb0",
            "funcEndAddr": "0x40b020",
            "decompiledFuncCode": "int64_t sub_40afb0(int64_t arg1, char* arg2, int64_t* arg3, int64_t arg4, \n    uint64_t arg5, int64_t arg6)\n{\n    int64_t rax = sub_40acf0(arg2, arg3, arg4, arg5);\n    if (rax < 0)\n    {\n        sub_40ae10(arg1, arg2, rax);\n        sub_40ae90(arg3, arg4, arg5);\n        arg6();\n        rax = -1;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40b020",
            "funcStartAddr": "0x40b020",
            "funcEndAddr": "0x40b06d",
            "decompiledFuncCode": "int64_t sub_40b020(int64_t arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t r14 = *arg2;\n    if (r14 != 0)\n    {\n        void* rbx_1 = &arg2[1];\n        int64_t rbp_1 = arg3;\n        do\n        {\n            if (memcmp(arg1, rbp_1, arg4) == 0)\n            {\n                break;\n            }\n            r14 = *rbx_1;\n            rbp_1 = (rbp_1 + arg4);\n            rbx_1 = (rbx_1 + 8);\n        } while (r14 != 0);\n    }\n    return r14;\n}\n\n"
        },
        {
            "funcName": "sub_40b070",
            "funcStartAddr": "0x40b070",
            "funcEndAddr": "0x40b6e3",
            "decompiledFuncCode": "void* sub_40b070(char* arg1, int32_t arg2)\n{\n    int32_t rcx_1 = (arg2 & 3);\n    void* r12;\n    if ((rcx_1 & (rcx_1 - 1)) == 0)\n    {\n        char* r15_1 = arg1;\n        if (arg1 != 0)\n        {\n            char rax_1 = *arg1;\n            if (rax_1 == 0)\n            {\n                r12 = nullptr;\n                *__errno_location() = 2;\n            }\n            else\n            {\n                void* rax_2;\n                void* rbx_2;\n                void* rbp_1;\n                if (rax_1 == 0x2f)\n                {\n                    char* rax_8 = sub_412980(0x1000);\n                    r12 = rax_8;\n                    rbp_1 = &rax_8[0x1000];\n                    rbx_2 = &rax_8[1];\n                    *rax_8 = 0x2f;\n                }\n                else\n                {\n                    rax_2 = sub_412d10();\n                    r12 = rax_2;\n                    if (rax_2 != 0)\n                    {\n                        uint64_t rax_3 = strlen(rax_2);\n                        if (rax_3 <= 0xfff)\n                        {\n                            void* rax_34 = sub_4129e0(r12, 0x1000);\n                            r12 = rax_34;\n                            rbx_2 = (rax_3 + rax_34);\n                            rbp_1 = (rax_34 + 0x1000);\n                        }\n                        else\n                        {\n                            rbx_2 = (rax_3 + r12);\n                            rbp_1 = rbx_2;\n                        }\n                    }\n                }\n                if ((rax_1 == 0x2f || (rax_1 != 0x2f && rax_2 != 0)))\n                {\n                    int32_t r14_2 = (arg2 & 4);\n                    char* var_e8_1 = r15_1;\n                    char rax_4 = *r15_1;\n                    int64_t* var_f0_1 = nullptr;\n                    size_t var_d8_1 = 0;\n                    int64_t var_e0_1 = 0;\n                    while (true)\n                    {\n                        if (rax_4 != 0)\n                        {\n                            char rdx_1 = rax_4;\n                            if (rax_4 == 0x2f)\n                            {\n                                do\n                                {\n                                    r15_1 = &r15_1[1];\n                                    rdx_1 = *r15_1;\n                                } while (rdx_1 == 0x2f);\n                            }\n                            if ((rax_4 != 0x2f || (rax_4 == 0x2f && rdx_1 != 0)))\n                            {\n                                char* r13_1 = r15_1;\n                                char* r14_3;\n                                while (true)\n                                {\n                                    rax_4 = r13_1[1];\n                                    r14_3 = &r13_1[1];\n                                    if (rax_4 == 0)\n                                    {\n                                        break;\n                                    }\n                                    if (rax_4 == 0x2f)\n                                    {\n                                        break;\n                                    }\n                                    r13_1 = r14_3;\n                                }\n                                if (r14_3 != r15_1)\n                                {\n                                    uint64_t r8_2 = (r14_3 - r15_1);\n                                    if (((rdx_1 == 0x2e && r8_2 == 2) && r15_1[1] == 0x2e))\n                                    {\n                                        r15_1 = r14_3;\n                                        if (rbx_2 <= (r12 + 1))\n                                        {\n                                            continue;\n                                        }\n                                        else\n                                        {\n                                            void* rdx_15 = (rbx_2 - 1);\n                                            if ((r12 >= rdx_15 || (r12 < rdx_15 && *(rbx_2 - 2) == 0x2f)))\n                                            {\n                                                rbx_2 = rdx_15;\n                                                continue;\n                                            }\n                                            if ((r12 < rdx_15 && *(rbx_2 - 2) != 0x2f))\n                                            {\n                                                rbx_2 = (rdx_15 - 1);\n                                                if (r12 != rbx_2)\n                                                {\n                                                    while (*(rbx_2 - 1) != 0x2f)\n                                                    {\n                                                        rbx_2 = (rbx_2 - 1);\n                                                        if (r12 == rbx_2)\n                                                        {\n                                                            break;\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    if (((r8_2 == 1 && rdx_1 == 0x2e) || ((rdx_1 == 0x2e && r8_2 == 2) && r15_1[1] == 0x2e)))\n                                    {\n                                        r15_1 = r14_3;\n                                        continue;\n                                    }\n                                    if (((((r8_2 == 1 && rdx_1 != 0x2e) || (r8_2 != 1 && rdx_1 != 0x2e)) || ((r8_2 != 1 && rdx_1 == 0x2e) && r8_2 != 2)) || ((rdx_1 == 0x2e && r8_2 == 2) && r15_1[1] != 0x2e)))\n                                    {\n                                        if (*(rbx_2 - 1) != 0x2f)\n                                        {\n                                            *rbx_2 = 0x2f;\n                                            rbx_2 = (rbx_2 + 1);\n                                        }\n                                        if (rbp_1 <= (rbx_2 + r8_2))\n                                        {\n                                            int64_t rbp_2 = (rbp_1 - r12);\n                                            void* rbx_3 = (rbx_2 - r12);\n                                            size_t rax_6 = ((r8_2 + rbp_2) + 1);\n                                            size_t rbp_3 = (rbp_2 + 0x1000);\n                                            if (r8_2 >= 0x1000)\n                                            {\n                                                rbp_3 = rax_6;\n                                            }\n                                            void* rax_7 = sub_4129e0(r12, rbp_3);\n                                            r12 = rax_7;\n                                            rbp_1 = (rbp_3 + rax_7);\n                                            rbx_2 = (rbx_3 + rax_7);\n                                            goto label_40b1eb;\n                                        }\n                                    label_40b1eb:\n                                        memcpy(rbx_2, r15_1, r8_2);\n                                        rbx_2 = (rbx_2 + r8_2);\n                                        *rbx_2 = 0;\n                                        int32_t var_b0;\n                                        int32_t rcx_2;\n                                        int32_t rcx_4;\n                                        int32_t* rdx_5;\n                                        int32_t* rdx_13;\n                                        if ((rcx_1 != 2 || (rcx_1 == 2 && r14_2 == 0)))\n                                        {\n                                            void var_c8;\n                                            void* rdx_4 = &var_c8;\n                                            char* rsi_2 = r12;\n                                            int32_t rax_10;\n                                            if (r14_2 == 0)\n                                            {\n                                                rax_10 = __lxstat(1, rsi_2, rdx_4) != 0;\n                                            }\n                                            else\n                                            {\n                                                rax_10 = __xstat(1, rsi_2, rdx_4) != 0;\n                                            }\n                                            if (rax_10 == 0)\n                                            {\n                                                int32_t rax_15 = (var_b0 & 0xf000);\n                                                if (rax_15 == 0xa000)\n                                                {\n                                                    if (var_f0_1 == 0)\n                                                    {\n                                                        int64_t* rax_29 = sub_40ca80(7, nullptr, 0x40d440, 0x40d4b0, 0x40d4f0);\n                                                        var_f0_1 = rax_29;\n                                                        if (rax_29 == 0)\n                                                        {\n                                                            sub_412bd0();\n                                                            /* no return */\n                                                        }\n                                                    }\n                                                    int32_t rcx_3;\n                                                    int32_t* rdx_12;\n                                                    if (sub_40b9a0(var_f0_1, var_e8_1, &var_c8) == 0)\n                                                    {\n                                                        sub_40b910(var_f0_1, var_e8_1, &var_c8);\n                                                        int64_t var_98;\n                                                        char* rax_22 = sub_40abf0(r12, var_98);\n                                                        if (rax_22 == 0)\n                                                        {\n                                                            int32_t* rax_35 = __errno_location();\n                                                            rdx_12 = rax_35;\n                                                            rcx_3 = *rax_35;\n                                                            if (rcx_1 != 2)\n                                                            {\n                                                                goto label_40b49f;\n                                                            }\n                                                            if (rcx_3 != 0xc)\n                                                            {\n                                                                goto label_40b2c9;\n                                                            }\n                                                            goto label_40b49f;\n                                                        }\n                                                        uint64_t rax_23 = strlen(rax_22);\n                                                        uint64_t rax_24 = strlen(r14_3);\n                                                        uint64_t rdx_8 = rax_24;\n                                                        size_t r8_4 = ((rax_23 + rax_24) + 1);\n                                                        if (var_d8_1 == 0)\n                                                        {\n                                                            size_t rax_31 = 0x1000;\n                                                            if (r8_4 >= 0x1000)\n                                                            {\n                                                                rax_31 = r8_4;\n                                                            }\n                                                            var_d8_1 = rax_31;\n                                                            rdx_8 = rax_24;\n                                                            var_e0_1 = sub_412980(rax_31);\n                                                        }\n                                                        else if (r8_4 > var_d8_1)\n                                                        {\n                                                            rdx_8 = rax_24;\n                                                            var_e0_1 = sub_4129e0(var_e0_1, r8_4);\n                                                            var_d8_1 = r8_4;\n                                                        }\n                                                        memmove((var_e0_1 + rax_23), r14_3, (rdx_8 + 1));\n                                                        char* rax_26 = memcpy(var_e0_1, rax_22, rax_23);\n                                                        void* rdx_11 = (r12 + 1);\n                                                        r14_3 = rax_26;\n                                                        var_e8_1 = rax_26;\n                                                        if (*rax_22 == 0x2f)\n                                                        {\n                                                            *r12 = 0x2f;\n                                                            rbx_2 = rdx_11;\n                                                        }\n                                                        else if (rbx_2 > rdx_11)\n                                                        {\n                                                            void* rdx_17 = (rbx_2 - 1);\n                                                            if (r12 >= rdx_17)\n                                                            {\n                                                                rbx_2 = rdx_17;\n                                                            }\n                                                            else\n                                                            {\n                                                                bool cond:6_1 = *(rbx_2 - 2) == 0x2f;\n                                                                rbx_2 = rdx_17;\n                                                                if ((!cond:6_1))\n                                                                {\n                                                                    do\n                                                                    {\n                                                                        rbx_2 = (rbx_2 - 1);\n                                                                        if (r12 == rbx_2)\n                                                                        {\n                                                                            break;\n                                                                        }\n                                                                    } while (*(rbx_2 - 1) != 0x2f);\n                                                                }\n                                                            }\n                                                        }\n                                                        free(rax_22);\n                                                        goto label_40b224;\n                                                    }\n                                                    if (rcx_1 == 2)\n                                                    {\n                                                        goto label_40b2c9;\n                                                    }\n                                                    rcx_3 = 0x28;\n                                                    rdx_12 = __errno_location();\n                                                label_40b49f:\n                                                    free(var_e0_1);\n                                                    free(r12);\n                                                    rdx_13 = rdx_12;\n                                                    rcx_4 = rcx_3;\n                                                label_40b4c3:\n                                                    sub_40ccc0(var_f0_1);\n                                                label_40b4d1:\n                                                    *rdx_13 = rcx_4;\n                                                    r12 = nullptr;\n                                                    break;\n                                                }\n                                                if (rax_15 == 0x4000)\n                                                {\n                                                    goto label_40b224;\n                                                }\n                                            }\n                                            else\n                                            {\n                                                int32_t* rax_11 = __errno_location();\n                                                rdx_5 = rax_11;\n                                                rcx_2 = *rax_11;\n                                                if (rcx_1 == 0)\n                                                {\n                                                    goto label_40b583;\n                                                }\n                                                if (rcx_1 != 1)\n                                                {\n                                                    goto label_40b20b;\n                                                }\n                                                if (r14_3[strspn(r14_3, \"/\")] != 0)\n                                                {\n                                                    goto label_40b583;\n                                                }\n                                                if (rcx_2 != 2)\n                                                {\n                                                    goto label_40b583;\n                                                }\n                                            label_40b2c9:\n                                                rax_4 = r13_1[1];\n                                                r15_1 = r14_3;\n                                                continue;\n                                            }\n                                        }\n                                        if ((rcx_1 == 2 && r14_2 != 0))\n                                        {\n                                        label_40b20b:\n                                            var_b0 = 0;\n                                        }\n                                        if (*r14_3 != 0)\n                                        {\n                                            if (rcx_1 == 2)\n                                            {\n                                                goto label_40b224;\n                                            }\n                                            rcx_2 = 0x14;\n                                            rdx_5 = __errno_location();\n                                        label_40b583:\n                                            free(var_e0_1);\n                                            free(r12);\n                                            rdx_13 = rdx_5;\n                                            rcx_4 = rcx_2;\n                                            if (var_f0_1 == 0)\n                                            {\n                                                goto label_40b4d1;\n                                            }\n                                            goto label_40b4c3;\n                                        }\n                                    label_40b224:\n                                        rax_4 = *r14_3;\n                                        r15_1 = r14_3;\n                                        continue;\n                                    }\n                                }\n                            }\n                        }\n                        void* rax_17;\n                        if ((rbx_2 <= (r12 + 1) || (rbx_2 > (r12 + 1) && *(rbx_2 - 1) != 0x2f)))\n                        {\n                            rax_17 = (rbx_2 + 1);\n                        }\n                        if ((rbx_2 > (r12 + 1) && *(rbx_2 - 1) == 0x2f))\n                        {\n                            rax_17 = rbx_2;\n                            rbx_2 = (rbx_2 - 1);\n                        }\n                        *rbx_2 = 0;\n                        if (rbp_1 != rax_17)\n                        {\n                            r12 = sub_4129e0(r12, ((rbx_2 - r12) + 1));\n                        }\n                        free(var_e0_1);\n                        if (var_f0_1 != 0)\n                        {\n                            sub_40ccc0(var_f0_1);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    if (((rcx_1 & (rcx_1 - 1)) != 0 || ((rcx_1 & (rcx_1 - 1)) == 0 && arg1 == 0)))\n    {\n        r12 = nullptr;\n        *__errno_location() = 0x16;\n    }\n    return r12;\n}\n\n"
        },
        {
            "funcName": "sub_40b6f0",
            "funcStartAddr": "0x40b6f0",
            "funcEndAddr": "0x40b6f8",
            "decompiledFuncCode": "int64_t sub_40b6f0(int64_t arg1)\n{\n    data_625798 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_40b700",
            "funcStartAddr": "0x40b700",
            "funcEndAddr": "0x40b708",
            "decompiledFuncCode": "int64_t sub_40b700(char arg1)\n{\n    data_625790 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_40b710",
            "funcStartAddr": "0x40b710",
            "funcEndAddr": "0x40b7ae",
            "decompiledFuncCode": "void sub_40b710(void* arg1)\n{\n    int32_t rax = sub_4178e0(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_625790 == 0 || (data_625790 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_625798;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_4120e0(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_625790 != 0) && *rax_1 == 0x20)) && sub_4178e0(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_6245c0);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40b7b0",
            "funcStartAddr": "0x40b7b0",
            "funcEndAddr": "0x40b80d",
            "decompiledFuncCode": "void* sub_40b7b0(char* arg1)\n{\n    int64_t rbp;\n    rbp = *arg1 == 0x2f;\n    char* rax = sub_40b870(arg1);\n    void* rcx_1 = (rax - arg1);\n    if (rcx_1 > rbp)\n    {\n        void* rdx_1 = (rcx_1 - 1);\n        if (rax[-1] == 0x2f)\n        {\n            void* rax_1;\n            for (; rbp != rdx_1; rdx_1 = rax_1)\n            {\n                rax_1 = (rdx_1 - 1);\n                if (*((arg1 + rdx_1) - 1) != 0x2f)\n                {\n                    break;\n                }\n            }\n            return rdx_1;\n        }\n    }\n    return rcx_1;\n}\n\n"
        },
        {
            "funcName": "sub_40b810",
            "funcStartAddr": "0x40b810",
            "funcEndAddr": "0x40b86a",
            "decompiledFuncCode": "char* sub_40b810(char* arg1)\n{\n    void* rax = sub_40b7b0(arg1);\n    void* rbx = rax;\n    rax = rax == 0;\n    char* rax_2 = malloc(((rbx + rax) + 1));\n    char* rcx = rax_2;\n    if (rax_2 != 0)\n    {\n        char* rax_3 = memcpy(rax_2, arg1, rbx);\n        rcx = rax_3;\n        if (rbx == 0)\n        {\n            *rax_3 = 0x2e;\n            rbx = 1;\n        }\n        *(rcx + rbx) = 0;\n    }\n    return rcx;\n}\n\n"
        },
        {
            "funcName": "sub_40b870",
            "funcStartAddr": "0x40b870",
            "funcEndAddr": "0x40b8cb",
            "decompiledFuncCode": "char* sub_40b870(char* arg1)\n{\n    char rdx = *arg1;\n    char* rax = arg1;\n    if (rdx == 0x2f)\n    {\n        do\n        {\n            rax = &rax[1];\n            rdx = *rax;\n        } while (rdx == 0x2f);\n    }\n    if (rdx != 0)\n    {\n        char* rcx_1 = rax;\n        char rsi_1 = 0;\n        while (true)\n        {\n            if (rdx == 0x2f)\n            {\n                rcx_1 = &rcx_1[1];\n                rdx = *rcx_1;\n                rsi_1 = 1;\n                if (rdx == 0)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                if (rsi_1 != 0)\n                {\n                    rax = rcx_1;\n                    rsi_1 = 0;\n                }\n                rcx_1 = &rcx_1[1];\n                rdx = *rcx_1;\n                if (rdx == 0)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40b8d0",
            "funcStartAddr": "0x40b8d0",
            "funcEndAddr": "0x40b8fb",
            "decompiledFuncCode": "uint64_t sub_40b8d0(char* arg1)\n{\n    uint64_t rax = strlen(arg1);\n    if (rax > 1)\n    {\n        while (true)\n        {\n            uint64_t rdx_1 = (rax - 1);\n            if (arg1[(rax - 1)] != 0x2f)\n            {\n                break;\n            }\n            rax = rdx_1;\n            if (rdx_1 == 1)\n            {\n                return rax;\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40b900",
            "funcStartAddr": "0x40b900",
            "funcEndAddr": "0x40b903",
            "decompiledFuncCode": "int64_t sub_40b900()\n{\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40b910",
            "funcStartAddr": "0x40b910",
            "funcEndAddr": "0x40b996",
            "decompiledFuncCode": "void sub_40b910(int64_t* arg1, char* arg2, int64_t* arg3)\n{\n    if (arg1 == 0)\n    {\n        return;\n    }\n    int64_t* rax = sub_412980(0x18);\n    *rax = sub_412bb0(arg2);\n    rax[1] = arg3[1];\n    rax[2] = *arg3;\n    int64_t rax_4 = sub_40d220(arg1, rax);\n    if (rax_4 == 0)\n    {\n        sub_412bd0();\n        /* no return */\n    }\n    if (rax == rax_4)\n    {\n        return;\n    }\n    /* tailcall */\n    return sub_40d4f0(rax);\n}\n\n"
        },
        {
            "funcName": "sub_40b9a0",
            "funcStartAddr": "0x40b9a0",
            "funcEndAddr": "0x40b9db",
            "decompiledFuncCode": "int64_t sub_40b9a0(void* arg1, int64_t arg2, int64_t* arg3)\n{\n    if (arg1 == 0)\n    {\n        return 0;\n    }\n    int64_t var_28 = arg2;\n    int64_t var_20 = arg3[1];\n    int64_t var_18 = *arg3;\n    int64_t rax_2;\n    rax_2 = sub_40c810(arg1, &var_28) != 0;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_40b9e0",
            "funcStartAddr": "0x40b9e0",
            "funcEndAddr": "0x40bb53",
            "decompiledFuncCode": "uint64_t sub_40b9e0(int32_t arg1, char* arg2)\n{\n    char rax = 0x2d;\n    int32_t rdx = (arg1 & 0xf000);\n    if (rdx != 0x8000)\n    {\n        rax = 0x64;\n        if (rdx != 0x4000)\n        {\n            rax = 0x62;\n            if (rdx != 0x6000)\n            {\n                rax = 0x63;\n                if (rdx != 0x2000)\n                {\n                    rax = 0x6c;\n                    if (rdx != 0xa000)\n                    {\n                        rax = 0x70;\n                        if (rdx != 0x1000)\n                        {\n                            rax = 0x73;\n                            if (rdx != 0xc000)\n                            {\n                                rax = 0x3f;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    *arg2 = rax;\n    int32_t rax_2 = (arg1 & 0x100);\n    arg2[1] = (((rax_2 - rax_2) & 0xbb) + 0x72);\n    int32_t rax_7 = (arg1 & 0x80);\n    arg2[2] = (((rax_7 - rax_7) & 0xb6) + 0x77);\n    int32_t rax_12 = (arg1 & 0x40);\n    char rax_13 = (rax_12 - rax_12);\n    char rax_15;\n    if ((arg1 & 0x800) == 0)\n    {\n        rax_15 = ((rax_13 & 0xb5) + 0x78);\n    }\n    else\n    {\n        rax_15 = ((rax_13 & 0xe0) + 0x73);\n    }\n    arg2[3] = rax_15;\n    int32_t rax_17 = (arg1 & 0x20);\n    arg2[4] = (((rax_17 - rax_17) & 0xbb) + 0x72);\n    int32_t rax_22 = (arg1 & 0x10);\n    arg2[5] = (((rax_22 - rax_22) & 0xb6) + 0x77);\n    int32_t rax_27 = (arg1 & 8);\n    char rax_28 = (rax_27 - rax_27);\n    char rax_30;\n    if ((arg1 & 0x400) == 0)\n    {\n        rax_30 = ((rax_28 & 0xb5) + 0x78);\n    }\n    else\n    {\n        rax_30 = ((rax_28 & 0xe0) + 0x73);\n    }\n    arg2[6] = rax_30;\n    int32_t rax_32 = (arg1 & 4);\n    arg2[7] = (((rax_32 - rax_32) & 0xbb) + 0x72);\n    int32_t rax_37 = (arg1 & 2);\n    arg2[8] = (((rax_37 - rax_37) & 0xb6) + 0x77);\n    int32_t rax_42 = (arg1 & 1);\n    int32_t rax_43 = (rax_42 - rax_42);\n    if ((arg1 & 0x200) == 0)\n    {\n        uint64_t rax_49 = ((rax_43 & 0xffffffb5) + 0x78);\n        arg2[9] = rax_49;\n        *(arg2 + 0xa) = 0x20;\n        return rax_49;\n    }\n    uint64_t rax_45 = ((rax_43 & 0xffffffe0) + 0x74);\n    arg2[9] = rax_45;\n    *(arg2 + 0xa) = 0x20;\n    return rax_45;\n}\n\n"
        },
        {
            "funcName": "sub_40bb60",
            "funcStartAddr": "0x40bb60",
            "funcEndAddr": "0x40bb68",
            "decompiledFuncCode": "int64_t sub_40bb60(void* arg1, char* arg2)\n{\n    /* tailcall */\n    return sub_40b9e0(*(arg1 + 0x18), arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40bb70",
            "funcStartAddr": "0x40bb70",
            "funcEndAddr": "0x40bb88",
            "decompiledFuncCode": "int64_t sub_40bb70(char* arg1, char* arg2, void** arg3)\n{\n    int64_t rax = sub_40bb90(arg1, arg2, arg3);\n    if (rax == 0)\n    {\n        sub_412bd0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40bb90",
            "funcStartAddr": "0x40bb90",
            "funcEndAddr": "0x40bc69",
            "decompiledFuncCode": "int64_t sub_40bb90(char* arg1, char* arg2, void** arg3)\n{\n    char* r12 = arg2;\n    char* rax = sub_40b870(arg1);\n    uint64_t rax_1 = sub_40b8d0(rax);\n    uint64_t rbx = rax_1;\n    void* rbp_2 = ((rax - arg1) + rax_1);\n    if (rax_1 != 0)\n    {\n        rbx = rax[(rax_1 - 1)] != 0x2f;\n        rbx = rbx;\n    }\n    char rax_2 = *r12;\n    if (rax_2 == 0x2f)\n    {\n        do\n        {\n            r12 = &r12[1];\n        } while (*r12 == 0x2f);\n    }\n    uint64_t rax_3 = strlen(r12);\n    int64_t rax_4 = malloc((((rbx + rbp_2) + 1) + rax_3));\n    if (rax_4 != 0)\n    {\n        char* rax_5 = mempcpy(rax_4, arg1, rbp_2);\n        *rax_5 = 0x2f;\n        void* rdi_5 = &rax_5[rbx];\n        if (arg3 != 0)\n        {\n            int64_t rax_6;\n            rax_6 = rax_2 == 0x2f;\n            *arg3 = (rdi_5 - rax_6);\n        }\n        *mempcpy(rdi_5, r12, rax_3) = 0;\n    }\n    return rax_4;\n}\n\n"
        },
        {
            "funcName": "sub_40bc70",
            "funcStartAddr": "0x40bc70",
            "funcEndAddr": "0x40bd33",
            "decompiledFuncCode": "char* sub_40bc70(int64_t* arg1)\n{\n    char* rsi = *arg1;\n    char rdx = *rsi;\n    if (rdx == 0)\n    {\n        return 0;\n    }\n    char rcx = 0;\n    char* rax = nullptr;\n    do\n    {\n        if (rcx != 0)\n        {\n            int32_t rcx_2 = (rdx - 0x41);\n            if (rcx_2 <= 0x39)\n            {\n                rcx = 0;\n            }\n            if ((rcx_2 > 0x39 || (rcx_2 <= 0x39 && ((1 << rcx_2) & 0x3ffffff03ffffff) == 0)))\n            {\n                rcx = 0;\n                if (rdx != 0x7e)\n                {\n                    rax = nullptr;\n                }\n            }\n        }\n        else if (rdx == 0x2e)\n        {\n            rcx = 1;\n            if (rax == 0)\n            {\n                rax = rsi;\n            }\n        }\n        else if (((rdx > 0x5a && (rdx - 0x61) > 0x19) || ((rdx <= 0x5a && rdx < 0x41) && (rdx - 0x30) > 9)))\n        {\n            if (rdx != 0x7e)\n            {\n                rax = nullptr;\n            }\n            rsi = &rsi[1];\n            *arg1 = rsi;\n            rdx = *rsi;\n            if (rdx == 0)\n            {\n                break;\n            }\n            continue;\n        }\n        rsi = &rsi[1];\n        *arg1 = rsi;\n        rdx = *rsi;\n    } while (rdx != 0);\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40bd40",
            "funcStartAddr": "0x40bd40",
            "funcEndAddr": "0x40c14d",
            "decompiledFuncCode": "uint64_t sub_40bd40(char* arg1, char* arg2)\n{\n    char* rbp = arg2;\n    char* rbx = arg1;\n    int32_t rax = strcmp(arg1, arg2);\n    int32_t r12 = rax;\n    if (rax != 0)\n    {\n        char r8_1 = *rbx;\n        if (r8_1 == 0)\n        {\n        label_40bfea:\n            r12 = -1;\n        }\n        else\n        {\n            char r9_1 = *rbp;\n            bool c_1 = false;\n            bool z_1 = (r9_1 & r9_1) == 0;\n            if ((!z_1))\n            {\n                int64_t rcx_1 = 2;\n                char* rdi = rbx;\n                void* const rsi = &data_41d794;\n                while (rcx_1 != 0)\n                {\n                    char temp0_1 = *rsi;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi = (rsi + 1);\n                    rdi = &rdi[1];\n                    rcx_1 = (rcx_1 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rax = ((!z_1) && (!c_1));\n                rax = (rax - 0);\n                bool c_2 = false;\n                bool z_2 = (rax & rax) == 0;\n                if (z_2)\n                {\n                    goto label_40bfea;\n                }\n                int64_t rcx_2 = 2;\n                void* const rsi_1 = &data_41d794;\n                char* rdi_1 = rbp;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_1;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_1 = (rsi_1 + 1);\n                    rdi_1 = &rdi_1[1];\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rax = ((!z_2) && (!c_2));\n                rax = (rax - 0);\n                bool c_3 = false;\n                bool z_3 = (rax & rax) == 0;\n                if (z_3)\n                {\n                    goto label_40bfc0;\n                }\n                int64_t rcx_3 = 3;\n                char* rdi_2 = rbx;\n                void* const rsi_2 = &data_41d793;\n                while (rcx_3 != 0)\n                {\n                    char temp4_1 = *rsi_2;\n                    char temp5_1 = *rdi_2;\n                    c_3 = temp4_1 < temp5_1;\n                    z_3 = temp4_1 == temp5_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_2 = &rdi_2[1];\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_3))\n                    {\n                        break;\n                    }\n                }\n                rax = ((!z_3) && (!c_3));\n                rax = (rax - 0);\n                bool c_4 = false;\n                bool z_4 = (rax & rax) == 0;\n                if (z_4)\n                {\n                    goto label_40bfea;\n                }\n                int64_t rcx_4 = 3;\n                void* const rsi_3 = &data_41d793;\n                char* rdi_3 = rbp;\n                while (rcx_4 != 0)\n                {\n                    char temp6_1 = *rsi_3;\n                    char temp7_1 = *rdi_3;\n                    c_4 = temp6_1 < temp7_1;\n                    z_4 = temp6_1 == temp7_1;\n                    rsi_3 = (rsi_3 + 1);\n                    rdi_3 = &rdi_3[1];\n                    rcx_4 = (rcx_4 - 1);\n                    if ((!z_4))\n                    {\n                        break;\n                    }\n                }\n                rax = ((!z_4) && (!c_4));\n                rax = (rax - 0);\n                if (rax == 0)\n                {\n                    goto label_40bfc0;\n                }\n                bool rdx_1 = r8_1 == 0x2e;\n                if ((r9_1 != 0x2e && rdx_1 != 0))\n                {\n                    goto label_40bfea;\n                }\n                rax = r9_1 == 0x2e;\n                if (r8_1 != 0x2e)\n                {\n                    if (rax != 0)\n                    {\n                        goto label_40bfc0;\n                    }\n                label_40be24:\n                    char* var_48 = rbx;\n                    char* var_40 = rbp;\n                    char* rax_1 = sub_40bc70(&var_48);\n                    char* rax_2 = sub_40bc70(&var_40);\n                    uint64_t r13_2;\n                    void* r14_1;\n                    if (rax_1 != 0)\n                    {\n                        r13_2 = (rax_1 - rbx);\n                        if (rax_2 == 0)\n                        {\n                            r14_1 = (var_40 - rbp);\n                        }\n                    }\n                    else\n                    {\n                        r13_2 = (var_48 - rbx);\n                        if (rax_2 == 0)\n                        {\n                            goto label_40c0ce;\n                        }\n                    }\n                    if (((rax_1 != 0 && rax_2 != 0) || rax_1 == 0))\n                    {\n                        r14_1 = (rax_2 - rbp);\n                    }\n                    if ((r13_2 == r14_1 && strncmp(rbx, rbp, r13_2) == 0))\n                    {\n                        r13_2 = (var_48 - rbx);\n                    label_40c0ce:\n                        r14_1 = (var_40 - rbp);\n                    }\n                    int64_t rsi_4 = 0;\n                    int64_t rdx_2 = 0;\n                    int32_t rax_14;\n                    int32_t r9_4;\n                    while (true)\n                    {\n                        if ((r13_2 <= rdx_2 && r14_1 <= rsi_4))\n                        {\n                            return r12;\n                        }\n                        int64_t r9_3 = (rsi_4 - rdx_2);\n                        char rax_4;\n                        uint32_t rcx_8;\n                        char rdi_7;\n                        uint32_t r10_1;\n                        if (r13_2 > rdx_2)\n                        {\n                            do\n                            {\n                                rax_4 = rbx[rdx_2];\n                                if ((rax_4 - 0x30) <= 9)\n                                {\n                                    break;\n                                }\n                                r10_1 = rax_4;\n                                if ((r10_1 - 0x30) > 9)\n                                {\n                                    break;\n                                }\n                                if (r14_1 != rsi_4)\n                                {\n                                    break;\n                                }\n                            label_40bf03:\n                                rdx_2 = (rdx_2 + 1);\n                                rsi_4 = (rsi_4 + 1);\n                            } while (r13_2 > rdx_2);\n                            uint32_t rax_6;\n                            if (((rax_4 - 0x30) > 9 && (r10_1 - 0x30) > 9))\n                            {\n                                rcx_8 = r10_1;\n                            label_40beb4:\n                                int32_t rcx_9 = (rcx_8 - 0x41);\n                                if ((rcx_9 <= 0x39 && ((1 << rcx_9) & 0x3ffffff03ffffff) != 0))\n                                {\n                                    rax_6 = 0;\n                                    if (r14_1 != (rdx_2 + r9_3))\n                                    {\n                                    label_40bee7:\n                                        rdi_7 = rbp[rsi_4];\n                                        rax_6 = rdi_7;\n                                        if ((rax_6 - 0x30) <= 9)\n                                        {\n                                            rax_6 = 0;\n                                        }\n                                        else\n                                        {\n                                        label_40bf59:\n                                            int32_t rcx_14 = (rdi_7 - 0x41);\n                                            if ((rcx_14 > 0x39 || (rcx_14 <= 0x39 && ((1 << rcx_14) & 0x3ffffff03ffffff) == 0)))\n                                            {\n                                                if (rdi_7 == 0x7e)\n                                                {\n                                                    rax_6 = -1;\n                                                }\n                                                else\n                                                {\n                                                    rax_6 = (rax_6 + 0x100);\n                                                }\n                                            }\n                                        }\n                                    }\n                                    if (rax_6 == r10_1)\n                                    {\n                                        goto label_40bf03;\n                                    }\n                                    return (r10_1 - rax_6);\n                                }\n                                if (rax_4 == 0x7e)\n                                {\n                                    r10_1 = -1;\n                                }\n                                else\n                                {\n                                    r10_1 = (r10_1 + 0x100);\n                                }\n                                if (r14_1 == (rdx_2 + r9_3))\n                                {\n                                    return r10_1;\n                                }\n                                goto label_40bee7;\n                            }\n                            if ((rax_4 - 0x30) > 9)\n                            {\n                                rdi_7 = rbp[rsi_4];\n                            label_40bf46:\n                                rax_6 = rdi_7;\n                                r10_1 = 0;\n                                if ((rax_6 - 0x30) <= 9)\n                                {\n                                    goto label_40bf03;\n                                }\n                                goto label_40bf59;\n                            }\n                        }\n                        rdi_7 = rbp[rsi_4];\n                        int32_t rcx_11 = rdi_7;\n                        if (r14_1 > rsi_4)\n                        {\n                            if ((rdi_7 - 0x30) <= 9)\n                            {\n                                goto label_40bf84;\n                            }\n                            if (r13_2 == rdx_2)\n                            {\n                                goto label_40bf46;\n                            }\n                            rcx_8 = rbx[rdx_2];\n                            rax_4 = rcx_8;\n                            r10_1 = rcx_8;\n                            if ((rcx_8 - 0x30) > 9)\n                            {\n                                goto label_40beb4;\n                            }\n                            goto label_40bf46;\n                        }\n                    label_40bf84:\n                        while (true)\n                        {\n                            rax_14 = rbx[rdx_2];\n                            if (rax_14 != 0x30)\n                            {\n                                break;\n                            }\n                            rdx_2 = (rdx_2 + 1);\n                        }\n                        if (rdi_7 == 0x30)\n                        {\n                            do\n                            {\n                                rsi_4 = (rsi_4 + 1);\n                                rcx_11 = rbp[rsi_4];\n                            } while (rcx_11 == 0x30);\n                        }\n                        r9_4 = (rcx_11 - 0x30);\n                        if ((rax_14 - 0x30) > 9)\n                        {\n                            if (r9_4 <= 9)\n                            {\n                                break;\n                            }\n                        }\n                        else\n                        {\n                            if (r9_4 > 9)\n                            {\n                                break;\n                            }\n                            int64_t rdi_9 = rdx_2;\n                            int32_t r9_5 = 0;\n                            void* r10_4 = ((rsi_4 - rdx_2) + rbp);\n                            int64_t rax_13;\n                            int32_t r11_3;\n                            do\n                            {\n                                int32_t rax_10 = (rax_14 - rcx_11);\n                                if (r9_5 == 0)\n                                {\n                                    r9_5 = rax_10;\n                                }\n                                rdi_9 = (rdi_9 + 1);\n                                rcx_11 = *(r10_4 + rdi_9);\n                                rax_13 = ((rdi_9 - rdx_2) + rsi_4);\n                                r11_3 = (rcx_11 - 0x30);\n                                rax_14 = rbx[rdi_9];\n                                if ((rax_14 - 0x30) > 9)\n                                {\n                                    break;\n                                }\n                            } while (r11_3 <= 9);\n                            if ((rax_14 - 0x30) <= 9)\n                            {\n                                break;\n                            }\n                            if (r11_3 <= 9)\n                            {\n                                break;\n                            }\n                            if (r9_5 != 0)\n                            {\n                                return r9_5;\n                            }\n                            rsi_4 = rax_13;\n                            rdx_2 = rdi_9;\n                        }\n                    }\n                    if (((rax_14 - 0x30) > 9 && r9_4 <= 9))\n                    {\n                        goto label_40bfea;\n                    }\n                    goto label_40bfc0;\n                }\n                if ((rax != 0 && rdx_1 != 0))\n                {\n                    rbx = &rbx[1];\n                    rbp = &rbp[1];\n                }\n                goto label_40be24;\n            }\n        label_40bfc0:\n            r12 = 1;\n        }\n    }\n    return r12;\n}\n\n"
        },
        {
            "funcName": "sub_40c150",
            "funcStartAddr": "0x40c150",
            "funcEndAddr": "0x40c18a",
            "decompiledFuncCode": "__syscall_slong_t sub_40c150(struct timespec* arg1)\n{\n    __syscall_slong_t rax = clock_gettime(0, arg1);\n    if (rax != 0)\n    {\n        int64_t var_18;\n        gettimeofday(&var_18, nullptr);\n        arg1->tv_sec = var_18;\n        int64_t var_10;\n        rax = (var_10 * 0x3e8);\n        arg1->tv_nsec = rax;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40c190",
            "funcStartAddr": "0x40c190",
            "funcEndAddr": "0x40c1ee",
            "decompiledFuncCode": "int64_t sub_40c190()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_41d796;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            void* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40c1f0",
            "funcStartAddr": "0x40c1f0",
            "funcEndAddr": "0x40c283",
            "decompiledFuncCode": "int64_t sub_40c1f0(int64_t arg1)\n{\n    int64_t rsi = 0xa;\n    if (arg1 >= 0xa)\n    {\n        rsi = arg1;\n    }\n    int64_t rsi_1 = (rsi | 1);\n    if (rsi_1 != -1)\n    {\n        do\n        {\n            int64_t rax_2;\n            int64_t rdx_1;\n            rdx_1 = HIGHD((rsi_1 * -0x5555555555555555));\n            rax_2 = LOWD((rsi_1 * -0x5555555555555555));\n            uint64_t rcx_2 = (rsi_1 - ((rdx_1 >> 1) * 3));\n            uint64_t rax_6 = rcx_2;\n            int64_t rdi;\n            if ((rsi_1 > 9 && rcx_2 != 0))\n            {\n                int64_t r8_1 = 0x10;\n                rdi = 9;\n                int64_t rcx_3 = 3;\n                uint64_t temp1_1;\n                do\n                {\n                    rcx_3 = (rcx_3 + 2);\n                    rdi = (rdi + r8_1);\n                    temp1_1 = (COMBINE(0, rsi_1) % rcx_3);\n                    rax_6 = temp1_1;\n                    if (rdi >= rsi_1)\n                    {\n                        break;\n                    }\n                    r8_1 = (r8_1 + 8);\n                } while (temp1_1 != 0);\n            }\n            if (((rsi_1 <= 9 || ((rsi_1 > 9 && rcx_2 != 0) && rdi >= rsi_1)) && rax_6 != 0))\n            {\n                break;\n            }\n            rsi_1 = (rsi_1 + 2);\n        } while (rsi_1 != -1);\n    }\n    return rsi_1;\n}\n\n"
        },
        {
            "funcName": "sub_40c290",
            "funcStartAddr": "0x40c290",
            "funcEndAddr": "0x40c2a0",
            "decompiledFuncCode": "uint64_t sub_40c290(int64_t arg1, int64_t arg2)\n{\n    return (COMBINE(0, (RORQ(arg1, 3))) % arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40c2a0",
            "funcStartAddr": "0x40c2a0",
            "funcEndAddr": "0x40c2a7",
            "decompiledFuncCode": "int64_t sub_40c2a0(int64_t arg1, int64_t arg2)\n{\n    int64_t rax;\n    rax = arg1 == arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40c2b0",
            "funcStartAddr": "0x402e50",
            "funcEndAddr": "0x40c2d1",
            "decompiledFuncCode": "int64_t sub_40c2b0(void* arg1, int64_t arg2)\n{\n    int64_t rax = *(arg1 + 0x30)(arg2, *(arg1 + 0x10));\n    if (*(arg1 + 0x10) <= rax)\n    {\n        abort();\n        /* no return */\n    }\n    return ((rax << 4) + *arg1);\n}\n\n"
        },
        {
            "funcName": "sub_40c2e0",
            "funcStartAddr": "0x40c2e0",
            "funcEndAddr": "0x40c3f9",
            "decompiledFuncCode": "int64_t sub_40c2e0(void* arg1, int64_t arg2, int64_t* arg3, char arg4)\n{\n    int64_t* rax = sub_40c2b0(arg1, arg2);\n    *arg3 = rax;\n    int64_t rsi = *rax;\n    if (rsi != 0)\n    {\n        int64_t* rbx_1 = rax;\n        char rax_1;\n        if (rsi != arg2)\n        {\n            rax_1 = *(arg1 + 0x38)(arg2, rsi);\n            if (rax_1 != 0)\n            {\n                rsi = *rbx_1;\n            }\n            else\n            {\n                int64_t* rax_2 = rbx_1[1];\n                if (rax_2 != 0)\n                {\n                    rsi = *rax_2;\n                    if (arg2 != rsi)\n                    {\n                        do\n                        {\n                            if (*(arg1 + 0x38)(arg2, rsi) != 0)\n                            {\n                                rax_2 = rbx_1[1];\n                                rsi = *rax_2;\n                                break;\n                            }\n                            rbx_1 = rbx_1[1];\n                            rax_2 = rbx_1[1];\n                            if (rax_2 == 0)\n                            {\n                                return 0;\n                            }\n                            rsi = *rax_2;\n                        } while (rsi != arg2);\n                    }\n                    if (arg4 != 0)\n                    {\n                        rbx_1[1] = rax_2[1];\n                        *rax_2 = 0;\n                        rax_2[1] = *(arg1 + 0x48);\n                        *(arg1 + 0x48) = rax_2;\n                    }\n                    goto label_40c399;\n                }\n            }\n        }\n        if (((rsi != arg2 && rax_1 != 0) || rsi == arg2))\n        {\n            if (arg4 == 0)\n            {\n            label_40c399:\n                return rsi;\n            }\n            int128_t* rax_5 = rbx_1[1];\n            if (rax_5 != 0)\n            {\n                *rbx_1 = *rax_5;\n                *rax_5 = 0;\n                *(rax_5 + 8) = *(arg1 + 0x48);\n                *(arg1 + 0x48) = rax_5;\n                return rsi;\n            }\n            *rbx_1 = 0;\n            goto label_40c399;\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40c400",
            "funcStartAddr": "0x40c400",
            "funcEndAddr": "0x40c47e",
            "decompiledFuncCode": "int64_t sub_40c400(int64_t* arg1)\n{\n    int32_t* rax_3 = *arg1;\n    if (rax_3 != 0x41d810)\n    {\n        int32_t zmm0 = rax_3[2];\n        if (((zmm0 == 0.100000001f | (FCMP_UO(zmm0, 0.100000001f))) || (zmm0 < 0.100000001f | (FCMP_UO(zmm0, 0.100000001f)))))\n        {\n        label_40c46a:\n            *arg1 = 0x41d810;\n            return 0;\n        }\n        if (((0.899999976f == zmm0 | (FCMP_UO(0.899999976f, zmm0))) || (0.899999976f < zmm0 | (FCMP_UO(0.899999976f, zmm0)))))\n        {\n            goto label_40c46a;\n        }\n        float zmm1 = rax_3[3];\n        if (((zmm1 == 1.10000002f | (FCMP_UO(zmm1, 1.10000002f))) || (zmm1 < 1.10000002f | (FCMP_UO(zmm1, 1.10000002f)))))\n        {\n            goto label_40c46a;\n        }\n        zmm1 = *rax_3;\n        if ((zmm1 < 0f | (FCMP_UO(zmm1, 0f))))\n        {\n            goto label_40c46a;\n        }\n        zmm1 = (zmm1 + 0.100000001f);\n        int32_t zmm2 = rax_3[1];\n        if (((zmm2 == zmm1 | (FCMP_UO(zmm2, zmm1))) || (zmm2 < zmm1 | (FCMP_UO(zmm2, zmm1)))))\n        {\n            goto label_40c46a;\n        }\n        int512_t zmm3;\n        zmm3 = 0x3f800000;\n        if ((1f < zmm2 | (FCMP_UO(1f, zmm2))))\n        {\n            goto label_40c46a;\n        }\n        if ((!((!(zmm0 == zmm1 | (FCMP_UO(zmm0, zmm1)))) && (!(zmm0 < zmm1 | (FCMP_UO(zmm0, zmm1)))))))\n        {\n            goto label_40c46a;\n        }\n    }\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_40c480",
            "funcStartAddr": "0x40c480",
            "funcEndAddr": "0x40c5ca",
            "decompiledFuncCode": "int64_t sub_40c480(void* arg1, int64_t* arg2, char arg3)\n{\n    int64_t* r12 = *arg2;\n    if (r12 < arg2[1])\n    {\n        do\n        {\n            int64_t r15_2 = *r12;\n            if (r15_2 != 0)\n            {\n                int64_t* rbx_1 = r12[1];\n                if (rbx_1 != 0)\n                {\n                    while (true)\n                    {\n                        int64_t r15_1 = *rbx_1;\n                        int64_t* rax_1 = sub_40c2b0(arg1, r15_1);\n                        int64_t* rdx = rbx_1[1];\n                        if (*rax_1 != 0)\n                        {\n                            rbx_1[1] = rax_1[1];\n                            rax_1[1] = rbx_1;\n                            rbx_1 = rdx;\n                            if (rdx == 0)\n                            {\n                                break;\n                            }\n                        }\n                        else\n                        {\n                            *rax_1 = r15_1;\n                            *(arg1 + 0x18) = (*(arg1 + 0x18) + 1);\n                            *rbx_1 = 0;\n                            rbx_1[1] = *(arg1 + 0x48);\n                            *(arg1 + 0x48) = rbx_1;\n                            rbx_1 = rdx;\n                            if (rdx == 0)\n                            {\n                                break;\n                            }\n                        }\n                    }\n                    r15_2 = *r12;\n                }\n                r12[1] = 0;\n                if (arg3 == 0)\n                {\n                    int64_t* rax_3 = sub_40c2b0(arg1, r15_2);\n                    if (*rax_3 == 0)\n                    {\n                        *rax_3 = r15_2;\n                        *(arg1 + 0x18) = (*(arg1 + 0x18) + 1);\n                    }\n                    else\n                    {\n                        int64_t* rax_4 = *(arg1 + 0x48);\n                        if (rax_4 != 0)\n                        {\n                            *(arg1 + 0x48) = rax_4[1];\n                        }\n                        else\n                        {\n                            rax_4 = malloc(0x10);\n                            if (rax_4 == 0)\n                            {\n                                return 0;\n                            }\n                        }\n                        int64_t rdx_2 = rax_3[1];\n                        *rax_4 = r15_2;\n                        rax_4[1] = rdx_2;\n                        rax_3[1] = rax_4;\n                    }\n                    *r12 = 0;\n                    r12 = &r12[2];\n                    arg2[3] = (arg2[3] - 1);\n                    if (arg2[1] <= r12)\n                    {\n                        break;\n                    }\n                    continue;\n                }\n            }\n            r12 = &r12[2];\n        } while (arg2[1] > r12);\n    }\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_40c5d0",
            "funcStartAddr": "0x40c5d0",
            "funcEndAddr": "0x40c5d5",
            "decompiledFuncCode": "int64_t sub_40c5d0(void* arg1)\n{\n    return *(arg1 + 0x10);\n}\n\n"
        },
        {
            "funcName": "sub_40c5e0",
            "funcStartAddr": "0x40c5e0",
            "funcEndAddr": "0x40c5e5",
            "decompiledFuncCode": "int64_t sub_40c5e0(void* arg1)\n{\n    return *(arg1 + 0x18);\n}\n\n"
        },
        {
            "funcName": "sub_40c5f0",
            "funcStartAddr": "0x40c5f0",
            "funcEndAddr": "0x40c5f5",
            "decompiledFuncCode": "int64_t sub_40c5f0(void* arg1)\n{\n    return *(arg1 + 0x20);\n}\n\n"
        },
        {
            "funcName": "sub_40c600",
            "funcStartAddr": "0x40c600",
            "funcEndAddr": "0x40c64f",
            "decompiledFuncCode": "int64_t sub_40c600(int64_t* arg1)\n{\n    int64_t* rsi = *arg1;\n    int64_t rdi = arg1[1];\n    int64_t rax = 0;\n    if (rsi >= rdi)\n    {\n        return 0;\n    }\n    while (true)\n    {\n        if (*rsi == 0)\n        {\n            rsi = &rsi[2];\n            if (rsi >= rdi)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rdx_1 = rsi[1];\n            int64_t rcx_1 = 1;\n            if (rdx_1 != 0)\n            {\n                do\n                {\n                    rdx_1 = *(rdx_1 + 8);\n                    rcx_1 = (rcx_1 + 1);\n                } while (rdx_1 != 0);\n            }\n            if (rax < rcx_1)\n            {\n                rax = rcx_1;\n            }\n            rsi = &rsi[2];\n            if (rsi >= rdi)\n            {\n                break;\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40c650",
            "funcStartAddr": "0x40c650",
            "funcEndAddr": "0x40c6b7",
            "decompiledFuncCode": "int64_t sub_40c650(int64_t* arg1)\n{\n    int64_t* rcx = *arg1;\n    int64_t rsi = arg1[1];\n    int64_t rdx = 0;\n    int64_t r8 = 0;\n    if (rcx < rsi)\n    {\n        do\n        {\n            if (*rcx != 0)\n            {\n                void* rax_1 = rcx[1];\n                r8 = (r8 + 1);\n                rdx = (rdx + 1);\n                if (rax_1 != 0)\n                {\n                    do\n                    {\n                        rax_1 = *(rax_1 + 8);\n                        rdx = (rdx + 1);\n                    } while (rax_1 != 0);\n                    rcx = &rcx[2];\n                    if (rcx >= rsi)\n                    {\n                        break;\n                    }\n                    continue;\n                }\n            }\n            rcx = &rcx[2];\n        } while (rcx < rsi);\n    }\n    if (arg1[3] == r8)\n    {\n        int64_t rax_2;\n        rax_2 = arg1[4] == rdx;\n        return rax_2;\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40c6c0",
            "funcStartAddr": "0x40c6c0",
            "funcEndAddr": "0x40c808",
            "decompiledFuncCode": "int64_t sub_40c6c0(int64_t* arg1, FILE* arg2)\n{\n    int64_t rbx = 0;\n    int64_t r12 = arg1[2];\n    int64_t r13 = arg1[3];\n    int64_t* rsi = *arg1;\n    int64_t rdi = arg1[1];\n    if (rsi < rdi)\n    {\n        while (true)\n        {\n            if (*rsi == 0)\n            {\n                rsi = &rsi[2];\n                if (rsi >= rdi)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                void* rax_1 = rsi[1];\n                int64_t rdx_1 = 1;\n                if (rax_1 != 0)\n                {\n                    do\n                    {\n                        rax_1 = *(rax_1 + 8);\n                        rdx_1 = (rdx_1 + 1);\n                    } while (rax_1 != 0);\n                }\n                if (rbx < rdx_1)\n                {\n                    rbx = rdx_1;\n                }\n                rsi = &rsi[2];\n                if (rsi >= rdi)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    __fprintf_chk(arg2, 1, \"# entries:         %lu\\n\");\n    __fprintf_chk(arg2, 1, \"# buckets:         %lu\\n\", r12);\n    __fprintf_chk(arg2, 1, \"# buckets used:    %lu (%.2f%%)\\n\", r13);\n    /* tailcall */\n    return __fprintf_chk(arg2, 1, \"max bucket length: %lu\\n\", rbx);\n}\n\n"
        },
        {
            "funcName": "sub_40c810",
            "funcStartAddr": "0x40c810",
            "funcEndAddr": "0x40c863",
            "decompiledFuncCode": "int64_t sub_40c810(void* arg1, int64_t arg2)\n{\n    int64_t rbp = arg2;\n    int64_t* rax = sub_40c2b0(arg1, arg2);\n    int64_t rsi = *rax;\n    if (rsi != 0)\n    {\n        int64_t* rbx_1 = rax;\n        while (true)\n        {\n            if (rsi != rbp)\n            {\n                if (*(arg1 + 0x38)(rbp, rsi) != 0)\n                {\n                    rbp = *rbx_1;\n                }\n                else\n                {\n                    rbx_1 = rbx_1[1];\n                    if (rbx_1 == 0)\n                    {\n                        break;\n                    }\n                    rsi = *rbx_1;\n                    continue;\n                }\n            }\n            return rbp;\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40c870",
            "funcStartAddr": "0x402e55",
            "funcEndAddr": "0x40c8b8",
            "decompiledFuncCode": "int64_t sub_40c870(int64_t* arg1)\n{\n    if (arg1[4] == 0)\n    {\n        return 0;\n    }\n    int64_t* rdx = *arg1;\n    int64_t rcx = arg1[1];\n    if (rdx < rcx)\n    {\n        do\n        {\n            int64_t rax_1 = *rdx;\n            if (rax_1 != 0)\n            {\n                return rax_1;\n            }\n            rdx = &rdx[2];\n        } while (rdx < rcx);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40c8c0",
            "funcStartAddr": "0x40c8c0",
            "funcEndAddr": "0x40c92a",
            "decompiledFuncCode": "int64_t sub_40c8c0(void* arg1, int64_t arg2)\n{\n    int64_t* rax = sub_40c2b0(arg1, arg2);\n    int64_t* rcx = rax;\n    int64_t* rdx = rax;\n    do\n    {\n        int64_t rax_1 = *rdx;\n        rdx = rdx[1];\n        if (rax_1 == arg2)\n        {\n            if (rdx != 0)\n            {\n                return *rdx;\n            }\n            break;\n        }\n    } while (rdx != 0);\n    int64_t rdx_1 = *(arg1 + 8);\n    int64_t rax_2;\n    do\n    {\n        rcx = &rcx[2];\n        if (rdx_1 <= rcx)\n        {\n            rax_2 = 0;\n            break;\n        }\n        rax_2 = *rcx;\n    } while (rax_2 == 0);\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_40c930",
            "funcStartAddr": "0x40c930",
            "funcEndAddr": "0x40c994",
            "decompiledFuncCode": "int64_t sub_40c930(int64_t* arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rdx = *arg1;\n    if (arg1[1] <= rdx)\n    {\n        return 0;\n    }\n    int64_t r9 = 0;\n    do\n    {\n        int64_t r8_1 = *rdx;\n        if (r8_1 != 0)\n        {\n            if (arg3 <= r9)\n            {\n                break;\n            }\n            *(arg2 + (r9 << 3)) = r8_1;\n            int64_t* r8_2 = rdx[1];\n            int64_t rcx_1 = (r9 + 1);\n            if (r8_2 != 0)\n            {\n                do\n                {\n                    if (arg3 == rcx_1)\n                    {\n                        return arg3;\n                    }\n                    rcx_1 = (rcx_1 + 1);\n                    *((arg2 + (rcx_1 << 3)) - 8) = *r8_2;\n                    r8_2 = r8_2[1];\n                } while (r8_2 != 0);\n            }\n            r9 = rcx_1;\n        }\n        rdx = &rdx[2];\n    } while (arg1[1] > rdx);\n    return r9;\n}\n\n"
        },
        {
            "funcName": "sub_40c9a0",
            "funcStartAddr": "0x40c9a0",
            "funcEndAddr": "0x40ca18",
            "decompiledFuncCode": "int64_t sub_40c9a0(int64_t* arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* r14 = *arg1;\n    int64_t rbp;\n    if (arg1[1] <= r14)\n    {\n        rbp = 0;\n    }\n    else\n    {\n        rbp = 0;\n        do\n        {\n            int64_t rdi = *r14;\n            if (rdi != 0)\n            {\n                int64_t* rbx_1 = r14;\n                while (true)\n                {\n                    if (arg2(rdi, arg3) == 0)\n                    {\n                        return rbp;\n                    }\n                    rbx_1 = rbx_1[1];\n                    rbp = (rbp + 1);\n                    if (rbx_1 == 0)\n                    {\n                        break;\n                    }\n                    rdi = *rbx_1;\n                }\n            }\n            r14 = &r14[2];\n        } while (arg1[1] > r14);\n    }\n    return rbp;\n}\n\n"
        },
        {
            "funcName": "sub_40ca20",
            "funcStartAddr": "0x40ca20",
            "funcEndAddr": "0x40ca51",
            "decompiledFuncCode": "uint64_t sub_40ca20(char* arg1, int64_t arg2)\n{\n    uint64_t rcx = *arg1;\n    uint64_t rdx = 0;\n    if (rcx != 0)\n    {\n        do\n        {\n            arg1 = &arg1[1];\n            int64_t rax_4 = (((rdx << 5) - rdx) + rcx);\n            rcx = *arg1;\n            rdx = (COMBINE(0, rax_4) % arg2);\n        } while (rcx != 0);\n    }\n    return rdx;\n}\n\n"
        },
        {
            "funcName": "sub_40ca60",
            "funcStartAddr": "0x40ca60",
            "funcEndAddr": "0x40ca80",
            "decompiledFuncCode": "void sub_40ca60(int64_t* arg1)\n{\n    arg1[2] = 0;\n    *arg1 = 0x3f80000000000000;\n    arg1[1] = 0x3fb4fdf43f4ccccd;\n}\n\n"
        },
        {
            "funcName": "sub_40ca80",
            "funcStartAddr": "0x40ca80",
            "funcEndAddr": "0x40cc0a",
            "decompiledFuncCode": "int64_t* sub_40ca80(int64_t arg1, void* arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5)\n{\n    int64_t r13 = arg4;\n    int64_t r12 = arg3;\n    int64_t rbp = arg1;\n    if (arg3 == 0)\n    {\n        r12 = 0x40c290;\n    }\n    if (arg4 == 0)\n    {\n        r13 = 0x40c2a0;\n    }\n    int64_t* rax = malloc(0x50);\n    int64_t* rbx = rax;\n    if (rax != 0)\n    {\n        int64_t* rdi = &rax[5];\n        float zmm1_1;\n        if (arg2 == 0)\n        {\n            rax[5] = 0x41d810;\n            zmm1_1 = 0.800000012f;\n            if (sub_40c400(rdi) != 0)\n            {\n                float zmm0_1;\n                if (rbp < 0)\n                {\n                label_40cbf3:\n                    zmm0_1 = ((rbp >> 1) | (rbp & 1));\n                    zmm0_1 = (zmm0_1 + zmm0_1);\n                label_40cba7:\n                    zmm0_1 = (zmm0_1 / zmm1_1);\n                    if ((!(zmm0_1 < 1.84467441e+19f | (FCMP_UO(zmm0_1, 1.84467441e+19f)))))\n                    {\n                        goto label_40cb60;\n                    }\n                    if ((zmm0_1 < 9.22337204e+18f | (FCMP_UO(zmm0_1, 9.22337204e+18f))))\n                    {\n                        rbp = (truncf(zmm0_1, arg4));\n                    }\n                    else\n                    {\n                        zmm0_1 = (zmm0_1 - 9.22337204e+18f);\n                        rbp = ((truncf(zmm0_1, arg4)) ^ 0x8000000000000000);\n                    }\n                    goto label_40caf3;\n                }\n            label_40cba2:\n                zmm0_1 = rbp;\n                goto label_40cba7;\n            }\n        label_40cb60:\n            int64_t* rdi_3 = rbx;\n            rbx = nullptr;\n            free(rdi_3);\n        }\n        else\n        {\n            rax[5] = arg2;\n            if (sub_40c400(rdi) == 0)\n            {\n                goto label_40cb60;\n            }\n            if (*(arg2 + 0x10) == 0)\n            {\n                zmm1_1 = *(arg2 + 8);\n                if (rbp < 0)\n                {\n                    goto label_40cbf3;\n                }\n                goto label_40cba2;\n            }\n        label_40caf3:\n            size_t rax_2 = sub_40c1f0(rbp);\n            uint64_t rax_3;\n            rax_3 = (rax_2 >> 0x3d) != 0;\n            uint64_t rax_4 = rax_3;\n            if ((TEST_BITQ(rax_2, 0x3c)))\n            {\n                goto label_40cb60;\n            }\n            if (rax_4 != 0)\n            {\n                goto label_40cb60;\n            }\n            rbx[2] = rax_2;\n            if (rax_2 == 0)\n            {\n                goto label_40cb60;\n            }\n            int64_t rax_5 = calloc(rax_2, 0x10);\n            *rbx = rax_5;\n            if (rax_5 == 0)\n            {\n                goto label_40cb60;\n            }\n            rbx[3] = 0;\n            rbx[4] = 0;\n            rbx[1] = ((rax_2 << 4) + rax_5);\n            rbx[6] = r12;\n            rbx[7] = r13;\n            rbx[8] = arg5;\n            rbx[9] = 0;\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40cc10",
            "funcStartAddr": "0x40cc10",
            "funcEndAddr": "0x40ccb8",
            "decompiledFuncCode": "void sub_40cc10(int64_t* arg1)\n{\n    int64_t* r12 = *arg1;\n    if (r12 < arg1[1])\n    {\n        while (true)\n        {\n            if (*r12 == 0)\n            {\n                r12 = &r12[2];\n                if (arg1[1] <= r12)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                int64_t* rbx_1 = r12[1];\n                int64_t rax = arg1[8];\n                if (rbx_1 != 0)\n                {\n                    int64_t* rdx_1;\n                    do\n                    {\n                        if (rax != 0)\n                        {\n                            rax(*rbx_1);\n                            rax = arg1[8];\n                        }\n                        rdx_1 = rbx_1[1];\n                        int64_t rcx_1 = arg1[9];\n                        *rbx_1 = 0;\n                        rbx_1[1] = rcx_1;\n                        arg1[9] = rbx_1;\n                        rbx_1 = rdx_1;\n                    } while (rdx_1 != 0);\n                }\n                if (rax != 0)\n                {\n                    rax(*r12);\n                }\n                *r12 = 0;\n                r12 = &r12[2];\n                r12[-1] = 0;\n                if (arg1[1] <= r12)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    arg1[3] = 0;\n    arg1[4] = 0;\n}\n\n"
        },
        {
            "funcName": "sub_40ccc0",
            "funcStartAddr": "0x40ccc0",
            "funcEndAddr": "0x40cd96",
            "decompiledFuncCode": "int64_t sub_40ccc0(int64_t* arg1)\n{\n    int64_t* rbp = *arg1;\n    int64_t rax = arg1[1];\n    if (((arg1[8] != 0 && arg1[4] != 0) && rbp < rax))\n    {\n        while (true)\n        {\n            int64_t rdi = *rbp;\n            if (rdi == 0)\n            {\n                rbp = &rbp[2];\n                if (rax <= rbp)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                int64_t* rbx_1 = rbp;\n                while (true)\n                {\n                    arg1[8](rdi);\n                    rbx_1 = rbx_1[1];\n                    if (rbx_1 == 0)\n                    {\n                        break;\n                    }\n                    rdi = *rbx_1;\n                }\n                rax = arg1[1];\n                rbp = &rbp[2];\n                if (rax <= rbp)\n                {\n                    break;\n                }\n            }\n        }\n        rbp = *arg1;\n    }\n    if ((((arg1[8] == 0 || (arg1[8] != 0 && arg1[4] == 0)) || ((arg1[8] != 0 && arg1[4] != 0) && rbp < rax)) && rbp < rax))\n    {\n        do\n        {\n            void* rdi_1 = rbp[1];\n            if (rdi_1 != 0)\n            {\n                void* rbx_2;\n                do\n                {\n                    rbx_2 = *(rdi_1 + 8);\n                    free(rdi_1);\n                    rdi_1 = rbx_2;\n                } while (rbx_2 != 0);\n            }\n            rbp = &rbp[2];\n        } while (arg1[1] > rbp);\n    }\n    void* rdi_2 = arg1[9];\n    if (rdi_2 != 0)\n    {\n        void* rbx_3;\n        do\n        {\n            rbx_3 = *(rdi_2 + 8);\n            free(rdi_2);\n            rdi_2 = rbx_3;\n        } while (rbx_3 != 0);\n    }\n    free(*arg1);\n    /* tailcall */\n    return free(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_40cda0",
            "funcStartAddr": "0x402e5a",
            "funcEndAddr": "0x40cf9a",
            "decompiledFuncCode": "uint64_t sub_40cda0(int64_t* arg1, int64_t arg2)\n{\n    void* r12 = arg1[5];\n    int32_t rbx_4;\n    if (*(r12 + 0x10) == 0)\n    {\n        float zmm0;\n        if (arg2 < 0)\n        {\n            zmm0 = ((arg2 >> 1) | (arg2 & 1));\n            zmm0 = (zmm0 + zmm0);\n        }\n        else\n        {\n            zmm0 = arg2;\n        }\n        zmm0 = (zmm0 / *(r12 + 8));\n        if ((!(zmm0 < 1.84467441e+19f | (FCMP_UO(zmm0, 1.84467441e+19f)))))\n        {\n        label_40cf10:\n            rbx_4 = 0;\n        label_40cf1c:\n            return rbx_4;\n        }\n        if ((zmm0 < 9.22337204e+18f | (FCMP_UO(zmm0, 9.22337204e+18f))))\n        {\n            arg2 = (truncf(zmm0, 0x28));\n        }\n        else\n        {\n            zmm0 = (zmm0 - 9.22337204e+18f);\n            arg2 = ((truncf(zmm0, 0x28)) ^ 0x8000000000000000);\n        }\n    }\n    size_t rax_1 = sub_40c1f0(arg2);\n    uint64_t rax_2;\n    rax_2 = (rax_1 >> 0x3d) != 0;\n    uint64_t rax_3 = rax_2;\n    if ((rax_1 << 3) < 0)\n    {\n        rax_3 = 1;\n    }\n    if (rax_1 == 0)\n    {\n        goto label_40cf10;\n    }\n    if (rax_3 != 0)\n    {\n        goto label_40cf10;\n    }\n    if (arg1[2] == rax_1)\n    {\n        return 1;\n    }\n    int64_t rax_4 = calloc(rax_1, 0x10);\n    int64_t var_68 = rax_4;\n    if (rax_4 == 0)\n    {\n        goto label_40cf10;\n    }\n    int64_t rbx_3 = ((rax_1 << 4) + rax_4);\n    int64_t var_38_1 = arg1[6];\n    int64_t var_48_1 = 0;\n    int64_t var_30_1 = arg1[7];\n    void* var_40_1 = r12;\n    int64_t var_28_1 = arg1[8];\n    int64_t rax_8 = arg1[9];\n    int32_t rax_9 = sub_40c480(&var_68, arg1, 0);\n    rbx_4 = rax_9;\n    if (rax_9 == 0)\n    {\n        arg1[9] = rax_8;\n        if ((sub_40c480(arg1, &var_68, 1) != 0 && sub_40c480(arg1, &var_68, 0) != 0))\n        {\n            free(var_68);\n            return rbx_4;\n        }\n        abort();\n        /* no return */\n    }\n    free(*arg1);\n    *arg1 = var_68;\n    arg1[1] = rbx_3;\n    arg1[2] = rax_1;\n    arg1[3] = 0;\n    arg1[9] = rax_8;\n    goto label_40cf1c;\n}\n\n"
        },
        {
            "funcName": "sub_40cfa0",
            "funcStartAddr": "0x402e5f",
            "funcEndAddr": "0x40d214",
            "decompiledFuncCode": "int64_t sub_40cfa0(int64_t* arg1, int64_t arg2, int64_t* arg3)\n{\n    if (arg2 != 0)\n    {\n        int64_t* var_20;\n        int64_t rax_1 = sub_40c2e0(arg1, arg2, &var_20, 0);\n        if (rax_1 != 0)\n        {\n            if (arg3 != 0)\n            {\n                *arg3 = rax_1;\n            }\n            return 0;\n        }\n        int64_t rax_3 = arg1[3];\n        int64_t rax_4;\n        void* rdx_2;\n        float zmm1;\n        if (rax_3 < 0)\n        {\n            rax_4 = arg1[2];\n            zmm1 = ((rax_3 >> 1) | (rax_3 & 1));\n            rdx_2 = arg1[5];\n            zmm1 = (zmm1 + zmm1);\n        }\n        else\n        {\n            rdx_2 = arg1[5];\n            zmm1 = rax_3;\n            rax_4 = arg1[2];\n        }\n        float zmm0_1;\n        if (((rax_3 < 0 && rax_4 >= 0) || (rax_3 >= 0 && rax_4 >= 0)))\n        {\n            zmm0_1 = (rax_4 * *(rdx_2 + 8));\n            if ((!((!(zmm1 == zmm0_1 | (FCMP_UO(zmm1, zmm0_1)))) && (!(zmm1 < zmm0_1 | (FCMP_UO(zmm1, zmm0_1)))))))\n            {\n            label_40d022:\n                int64_t* r12_2 = var_20;\n                if (*r12_2 == 0)\n                {\n                    *r12_2 = arg2;\n                    arg1[4] = (arg1[4] + 1);\n                    arg1[3] = (arg1[3] + 1);\n                    return 1;\n                }\n                int64_t* rax_5 = arg1[9];\n                if (rax_5 == 0)\n                {\n                    rax_5 = malloc(0x10);\n                }\n                else\n                {\n                    arg1[9] = rax_5[1];\n                }\n                int64_t rdx_4 = r12_2[1];\n                *rax_5 = arg2;\n                rax_5[1] = rdx_4;\n                r12_2[1] = rax_5;\n                arg1[4] = (arg1[4] + 1);\n                return 1;\n                goto label_40d134;\n            }\n        label_40d0c5:\n            sub_40c400(&arg1[5]);\n            void* rdx_8 = arg1[5];\n            int64_t rax_9 = arg1[2];\n            float zmm2_1 = *(rdx_8 + 8);\n            float zmm0_2;\n            if (rax_9 < 0)\n            {\n                zmm0_2 = ((rax_9 >> 1) | (rax_9 & 1));\n                zmm0_2 = (zmm0_2 + zmm0_2);\n            }\n            else\n            {\n                zmm0_2 = rax_9;\n            }\n            int64_t rax_10 = arg1[3];\n            float zmm1_1;\n            if (rax_10 < 0)\n            {\n                zmm1_1 = ((rax_10 >> 1) | (rax_10 & 1));\n                zmm1_1 = (zmm1_1 + zmm1_1);\n            }\n            else\n            {\n                zmm1_1 = rax_10;\n            }\n            float zmm3_1 = (zmm2_1 * zmm0_2);\n            if (((zmm1_1 == zmm3_1 | (FCMP_UO(zmm1_1, zmm3_1))) || (zmm1_1 < zmm3_1 | (FCMP_UO(zmm1_1, zmm3_1)))))\n            {\n                goto label_40d022;\n            }\n            zmm0_2 = (zmm0_2 * *(rdx_8 + 0xc));\n            if (*(rdx_8 + 0x10) == 0)\n            {\n                zmm0_2 = (zmm0_2 * zmm2_1);\n            }\n            if ((!(zmm0_2 < 1.84467441e+19f | (FCMP_UO(zmm0_2, 1.84467441e+19f)))))\n            {\n            label_40d134:\n                return 0xffffffff;\n            }\n            int64_t rsi;\n            if ((!(zmm0_2 < 9.22337204e+18f | (FCMP_UO(zmm0_2, 9.22337204e+18f)))))\n            {\n                zmm0_2 = (zmm0_2 - 9.22337204e+18f);\n                rsi = ((truncf(zmm0_2, arg1)) ^ 0x8000000000000000);\n            }\n            else\n            {\n                rsi = (truncf(zmm0_2, arg1));\n            }\n            if (sub_40cda0(arg1, rsi) == 0)\n            {\n                goto label_40d134;\n            }\n            if (sub_40c2e0(arg1, arg2, &var_20, 0) == 0)\n            {\n                goto label_40d022;\n            }\n        }\n        if (((rax_3 < 0 && rax_4 < 0) || (rax_3 >= 0 && rax_4 < 0)))\n        {\n            zmm0_1 = ((rax_4 >> 1) | (rax_4 & 1));\n            zmm0_1 = (zmm0_1 + zmm0_1);\n            zmm0_1 = (zmm0_1 * *(rdx_2 + 8));\n            if ((!((zmm1 == zmm0_1 | (FCMP_UO(zmm1, zmm0_1))) || (zmm1 < zmm0_1 | (FCMP_UO(zmm1, zmm0_1))))))\n            {\n                goto label_40d0c5;\n            }\n            goto label_40d022;\n        }\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40d220",
            "funcStartAddr": "0x40d220",
            "funcEndAddr": "0x40d25b",
            "decompiledFuncCode": "int64_t sub_40d220(int64_t* arg1, int64_t arg2)\n{\n    int64_t rbx = arg2;\n    int64_t var_10;\n    int32_t rax = sub_40cfa0(arg1, arg2, &var_10);\n    if (rax == 0xffffffff)\n    {\n        return 0;\n    }\n    if (rax == 0)\n    {\n        rbx = var_10;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40d260",
            "funcStartAddr": "0x40d260",
            "funcEndAddr": "0x40d437",
            "decompiledFuncCode": "int64_t sub_40d260(int64_t* arg1)\n{\n    int64_t* var_20;\n    int64_t rsi;\n    int64_t rax = sub_40c2e0(arg1, rsi, &var_20, 1);\n    if (rax != 0)\n    {\n        int64_t* rax_1 = var_20;\n        arg1[4] = (arg1[4] - 1);\n        if (*rax_1 == 0)\n        {\n            int64_t rax_3 = arg1[3];\n            int64_t rax_4 = (rax_3 - 1);\n            arg1[3] = rax_4;\n            int64_t rax_5;\n            float* rdx_1;\n            float zmm0_1;\n            if ((rax_3 - 1) < 0)\n            {\n                rax_5 = arg1[2];\n                zmm0_1 = ((rax_4 >> 1) | (rax_4 & 1));\n                rdx_1 = arg1[5];\n                zmm0_1 = (zmm0_1 + zmm0_1);\n            }\n            else\n            {\n                rdx_1 = arg1[5];\n                zmm0_1 = rax_4;\n                rax_5 = arg1[2];\n            }\n            float zmm1;\n            if ((((rax_3 - 1) < 0 && rax_5 >= 0) || ((rax_3 - 1) >= 0 && rax_5 >= 0)))\n            {\n                zmm1 = rax_5;\n            }\n            if ((((rax_3 - 1) < 0 && rax_5 < 0) || ((rax_3 - 1) >= 0 && rax_5 < 0)))\n            {\n                zmm1 = ((rax_5 >> 1) | (rax_5 & 1));\n                zmm1 = (zmm1 + zmm1);\n            }\n            zmm1 = (zmm1 * *rdx_1);\n            if ((!((zmm1 == zmm0_1 | (FCMP_UO(zmm1, zmm0_1))) || (zmm1 < zmm0_1 | (FCMP_UO(zmm1, zmm0_1))))))\n            {\n                sub_40c400(&arg1[5]);\n                int64_t rax_6 = arg1[2];\n                int32_t* rdx_2 = arg1[5];\n                float zmm0_2;\n                if (rax_6 < 0)\n                {\n                    zmm0_2 = ((rax_6 >> 1) | (rax_6 & 1));\n                    zmm0_2 = (zmm0_2 + zmm0_2);\n                }\n                else\n                {\n                    zmm0_2 = rax_6;\n                }\n                int64_t rax_7 = arg1[3];\n                float zmm1_1;\n                if (rax_7 < 0)\n                {\n                    zmm1_1 = ((rax_7 >> 1) | (rax_7 & 1));\n                    zmm1_1 = (zmm1_1 + zmm1_1);\n                }\n                else\n                {\n                    zmm1_1 = rax_7;\n                }\n                float zmm2_1 = (*rdx_2 * zmm0_2);\n                if ((!((zmm2_1 == zmm1_1 | (FCMP_UO(zmm2_1, zmm1_1))) || (zmm2_1 < zmm1_1 | (FCMP_UO(zmm2_1, zmm1_1))))))\n                {\n                    zmm0_2 = (zmm0_2 * rdx_2[1]);\n                    if (rdx_2[4] == 0)\n                    {\n                        zmm0_2 = (zmm0_2 * rdx_2[2]);\n                    }\n                    int64_t rsi_1;\n                    if ((!(zmm0_2 < 9.22337204e+18f | (FCMP_UO(zmm0_2, 9.22337204e+18f)))))\n                    {\n                        zmm0_2 = (zmm0_2 - 9.22337204e+18f);\n                        rsi_1 = ((truncf(zmm0_2, arg1)) ^ 0x8000000000000000);\n                    }\n                    else\n                    {\n                        rsi_1 = (truncf(zmm0_2, arg1));\n                    }\n                    if (sub_40cda0(arg1, rsi_1) == 0)\n                    {\n                        void* rdi_2 = arg1[9];\n                        if (rdi_2 != 0)\n                        {\n                            void* r12_1;\n                            do\n                            {\n                                r12_1 = *(rdi_2 + 8);\n                                free(rdi_2);\n                                rdi_2 = r12_1;\n                            } while (r12_1 != 0);\n                        }\n                        arg1[9] = 0;\n                    }\n                }\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40d440",
            "funcStartAddr": "0x40d440",
            "funcEndAddr": "0x40d467",
            "decompiledFuncCode": "uint64_t sub_40d440(int64_t* arg1, int64_t arg2)\n{\n    return (COMBINE(0, (sub_417960(*arg1, arg2) ^ arg1[1])) % arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40d470",
            "funcStartAddr": "0x40d470",
            "funcEndAddr": "0x40d47d",
            "decompiledFuncCode": "uint64_t sub_40d470(void* arg1, int64_t arg2)\n{\n    return (COMBINE(0, *(arg1 + 8)) % arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40d480",
            "funcStartAddr": "0x40d480",
            "funcEndAddr": "0x40d4a5",
            "decompiledFuncCode": "int64_t sub_40d480(int64_t* arg1, int64_t* arg2)\n{\n    if ((arg1[1] == arg2[1] && arg1[2] == arg2[2]))\n    {\n        /* tailcall */\n        return sub_4122b0(*arg1, *arg2);\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40d4b0",
            "funcStartAddr": "0x40d4b0",
            "funcEndAddr": "0x40d4e3",
            "decompiledFuncCode": "int64_t sub_40d4b0(int64_t* arg1, int64_t* arg2)\n{\n    if ((arg1[1] == arg2[1] && arg1[2] == arg2[2]))\n    {\n        int64_t rax;\n        rax = strcmp(*arg1, *arg2) == 0;\n        return rax;\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40d4f0",
            "funcStartAddr": "0x40d4f0",
            "funcEndAddr": "0x40d505",
            "decompiledFuncCode": "int64_t sub_40d4f0(int64_t* arg1)\n{\n    free(*arg1);\n    /* tailcall */\n    return free(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_40d510",
            "funcStartAddr": "0x40d510",
            "funcEndAddr": "0x40d5c7",
            "decompiledFuncCode": "long double sub_40d510(int32_t arg1, uint16_t arg2 @ x87control, \n    long double arg3)\n{\n    long double x87_r7 = 9.22337204e+18f;\n    int64_t rax_1;\n    if (arg3 >= x87_r7)\n    {\n        uint16_t x87status_3;\n        int16_t temp0_2;\n        temp0_2 = __fnstcw_memmem16(arg2);\n        long double x87_r7_1 = (arg3 - x87_r7);\n        x87_r7 = arg3;\n        int16_t rax_3;\n        *rax_3[1] = (*temp0_2[1] | 0xc);\n        uint16_t x87control_2;\n        uint16_t x87status_4;\n        x87control_2 = __fldcw_memmem16(rax_3);\n        uint16_t x87control_3;\n        uint16_t x87status_5;\n        x87control_3 = __fldcw_memmem16(temp0_2);\n        rax_1 = (x87_r7_1 ^ 0x8000000000000000);\n    }\n    else\n    {\n        uint16_t x87status;\n        int16_t temp0;\n        temp0 = __fnstcw_memmem16(arg2);\n        int16_t rax;\n        *rax[1] = (*temp0[1] | 0xc);\n        uint16_t x87control;\n        uint16_t x87status_1;\n        x87control = __fldcw_memmem16(rax);\n        uint16_t x87control_1;\n        uint16_t x87status_2;\n        x87control_1 = __fldcw_memmem16(temp0);\n        rax_1 = x87_r7;\n    }\n    long double x87_r6_2 = rax_1;\n    if (rax_1 < 0)\n    {\n        x87_r6_2 = (x87_r6_2 + 1.84467441e+19f);\n    }\n    if (arg1 == 0)\n    {\n        long double x87_r6_3 = x87_r7;\n        x87_r7 = x87_r6_2;\n        (x87_r6_3 - x87_r7);\n        if (((FCMP_UO(x87_r6_3, x87_r7)) || ((!(FCMP_UO(x87_r6_3, x87_r7))) && (!x87_r6_3 == x87_r7))))\n        {\n            x87_r7 = (rax_1 + 1);\n            if ((rax_1 + 1) < 0)\n            {\n                return (x87_r7 + 1.84467441e+19f);\n            }\n        }\n    }\n    return x87_r7;\n}\n\n"
        },
        {
            "funcName": "sub_40d5d0",
            "funcStartAddr": "0x40d5d0",
            "funcEndAddr": "0x40df9e",
            "decompiledFuncCode": "void sub_40d5d0(int64_t arg1, char* arg2, int32_t arg3, int64_t arg4, \n    int64_t arg5)\n{\n    int32_t rax_1 = (arg3 & 0x20);\n    int32_t rcx_1 = (arg3 & 3);\n    int32_t rax_4 = (((rax_1 - rax_1) & 0xffffffe8) + 0x400);\n    struct lconv* rax_5 = localeconv();\n    char* r15 = rax_5->decimal_point;\n    uint64_t rax_6 = strlen(r15);\n    uint64_t r8 = rax_6;\n    bool cond:1 = (rax_6 - 1) >= 0x10;\n    if ((rax_6 - 1) >= 0x10)\n    {\n        r15 = &data_41d794;\n    }\n    char* rax_8 = rax_5->grouping;\n    char* r12_1 = rax_5->thousands_sep;\n    if (cond:1)\n    {\n        r8 = 1;\n    }\n    uint64_t r8_1 = r8;\n    if (strlen(r12_1) >= 0x11)\n    {\n        r12_1 = &data_41b08a;\n    }\n    void* var_a8 = &arg2[0x287];\n    int32_t rcx_8;\n    int64_t rdx;\n    int32_t rbx_1;\n    uint64_t rsi_1;\n    uint32_t rdi_15;\n    uint32_t r9_1;\n    uint64_t temp0_1;\n    void* r14_3;\n    void* r15_5;\n    if (arg5 <= arg4)\n    {\n        rdx = 0;\n        temp0_1 = (COMBINE(rdx, arg4) / arg5);\n        if ((COMBINE(rdx, arg4) % arg5) != 0)\n        {\n            goto label_40d6ba;\n        }\n        rsi_1 = (temp0_1 * arg1);\n        if ((COMBINE(0, rsi_1) / temp0_1) != arg1)\n        {\n            goto label_40d6ba;\n        }\n        rdi_15 = 0;\n        r9_1 = 0;\n        rcx_8 = (arg3 & 0x10);\n        if (rcx_8 == 0)\n        {\n        label_40dc2a:\n            rbx_1 = -1;\n        label_40d986:\n            r14_3 = var_a8;\n            if (rcx_1 == 1)\n            {\n                if ((r9_1 + (rsi_1 & 1) != (-rdi_15)) > 5)\n                {\n                    r14_3 = var_a8;\n                label_40d9a1:\n                    rsi_1 = (rsi_1 + 1);\n                    if (rcx_8 == 0)\n                    {\n                        goto label_40d9ca;\n                    }\n                    if (rax_4 != rsi_1)\n                    {\n                        goto label_40d9ca;\n                    }\n                    if (rbx_1 == 8)\n                    {\n                        goto label_40d9ca;\n                    }\n                    rbx_1 = (rbx_1 + 1);\n                    if ((arg3 & 8) == 0)\n                    {\n                        *(r14_3 - 1) = 0x30;\n                        r14_3 = (r14_3 + (!r8_1));\n                        uint64_t rax_67 = r8_1;\n                        if (r8_1 >= 8)\n                        {\n                            void* rcx_21 = ((r14_3 + 8) & 0xfffffffffffffff8);\n                            *r14_3 = *r15;\n                            uint64_t rax_69 = r8_1;\n                            *((r14_3 + rax_69) - 8) = *((r15 + rax_69) - 8);\n                            void* rax_71 = (r14_3 - rcx_21);\n                            int64_t* r15_8 = (r15 - rax_71);\n                            int32_t rax_73 = ((rax_71 + r8_1) & 0xfffffff8);\n                            if (rax_73 >= 8)\n                            {\n                                int32_t rax_74 = (rax_73 & 0xfffffff8);\n                                int32_t rdx_37 = 0;\n                                do\n                                {\n                                    uint64_t rsi_11 = rdx_37;\n                                    rdx_37 = (rdx_37 + 8);\n                                    *(rcx_21 + rsi_11) = *(r15_8 + rsi_11);\n                                } while (rdx_37 < rax_74);\n                            }\n                        }\n                        else if ((r8_1 & 4) != 0)\n                        {\n                            *r14_3 = *r15;\n                            *((r14_3 + rax_67) - 4) = *((r15 + rax_67) - 4);\n                        }\n                        else if (rax_67 != 0)\n                        {\n                            *r14_3 = *r15;\n                            if ((rax_67 & 2) != 0)\n                            {\n                                *((r14_3 + rax_67) - 2) = *((r15 + rax_67) - 2);\n                            }\n                        }\n                    }\n                    r15_5 = (r14_3 - 1);\n                    *(r14_3 - 1) = 0x31;\n                }\n                else\n                {\n                label_40d9ca:\n                    r15_5 = r14_3;\n                    while (true)\n                    {\n                        r15_5 = (r15_5 - 1);\n                        int64_t rax_35;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rsi_1 * -0x3333333333333333));\n                        rax_35 = LOWD((rsi_1 * -0x3333333333333333));\n                        uint64_t rdx_13 = (rdx_12 >> 3);\n                        char rax_36 = (rdx_13 + (rdx_13 << 2));\n                        *r15_5 = ((rsi_1 - (rax_36 + rax_36)) + 0x30);\n                        if (rsi_1 <= 9)\n                        {\n                            break;\n                        }\n                        rsi_1 = rdx_13;\n                    }\n                    if ((arg3 & 4) != 0)\n                    {\n                    label_40da15:\n                        uint64_t rax_40 = strlen(r12_1);\n                        uint64_t rbp_4 = (r14_3 - r15_5);\n                        void var_68;\n                        __memcpy_chk(&var_68, r15_5, rbp_4, 0x29);\n                        char* r15_6 = rax_8;\n                        uint64_t rbx_4 = rbp_4;\n                        uint64_t rbp_5 = -1;\n                        while (true)\n                        {\n                            char rdx_15 = *r15_6;\n                            if (rdx_15 != 0)\n                            {\n                                uint64_t rax_41 = rdx_15;\n                                if (rdx_15 >= 0x7f)\n                                {\n                                    rax_41 = rbx_4;\n                                }\n                                r15_6 = &r15_6[1];\n                                rbp_5 = rax_41;\n                            }\n                            if (rbp_5 > rbx_4)\n                            {\n                                memcpy((r14_3 - rbx_4), &var_68, rbx_4);\n                                break;\n                            }\n                            void* r14_4 = (r14_3 - rbp_5);\n                            rbx_4 = (rbx_4 - rbp_5);\n                            memcpy(r14_4, (&var_68 + rbx_4), rbp_5);\n                            if (rbx_4 == 0)\n                            {\n                                break;\n                            }\n                            r14_3 = (r14_4 - rax_40);\n                            memcpy(r14_3, r12_1, rax_40);\n                        }\n                    }\n                }\n            }\n        }\n        else\n        {\n        label_40d96e:\n            uint64_t r10_1 = rax_4;\n            rbx_1 = 0;\n            int32_t rbp_2 = r10_1;\n            if (r10_1 > rsi_1)\n            {\n                goto label_40d986;\n            }\n            uint32_t rax_49;\n            int32_t rdx_24;\n            uint64_t temp0_8;\n            do\n            {\n                int64_t rdx_21 = 0;\n                temp0_8 = (COMBINE(rdx_21, rsi_1) / r10_1);\n                uint32_t rax_48 = (r9_1 + (((COMBINE(rdx_21, rsi_1) % r10_1) * 5) << 1));\n                rax_49 = (COMBINE(0, rax_48) / rbp_2);\n                rdx_24 = ((rdi_15 >> 1) + ((COMBINE(0, rax_48) % rbp_2) << 1));\n                r9_1 = rax_49;\n                rsi_1 = temp0_8;\n                int32_t rdi_26 = (rdi_15 + rdx_24);\n                if (rbp_2 > rdx_24)\n                {\n                    rdi_26 = rdi_26 != 0;\n                    rdi_15 = rdi_26;\n                }\n                else\n                {\n                    rdi_26 = rbp_2 < rdi_26;\n                    rdi_15 = (rdi_26 + 2);\n                }\n                rbx_1 = (rbx_1 + 1);\n                if (r10_1 > temp0_8)\n                {\n                    break;\n                }\n            } while (rbx_1 != 8);\n            if (r10_1 <= temp0_8)\n            {\n                goto label_40d986;\n            }\n            if (temp0_8 > 9)\n            {\n                goto label_40d986;\n            }\n            int32_t rdx_27;\n            if (rcx_1 == 1)\n            {\n                rdx_27 = ((rax_49 & 1) + rdi_15) > 2;\n            }\n            else\n            {\n                rdx_24 = rcx_1 == 0;\n                r9_1 = rdi_15 > 0;\n                rdx_27 = (rdx_24 & r9_1);\n            }\n            if (rdx_27 == 0)\n            {\n                if (rax_49 != 0)\n                {\n                    goto label_40de38;\n                }\n                goto label_40dda7;\n            }\n            rax_49 = (rax_49 + 1);\n            char rax_56;\n            if (rax_49 != 0xa)\n            {\n            label_40de38:\n                rax_56 = (rax_49 + 0x30);\n            label_40ddc3:\n                arg2[0x286] = rax_56;\n                uint64_t rax_57 = r8_1;\n                r14_3 = (&arg2[0x286] - r8_1);\n                if (r8_1 >= 8)\n                {\n                    void* r9_5 = ((r14_3 + 8) & 0xfffffffffffffff8);\n                    *r14_3 = *r15;\n                    uint64_t rax_59 = r8_1;\n                    *((r14_3 + rax_59) - 8) = *((r15 + rax_59) - 8);\n                    void* rax_61 = (r14_3 - r9_5);\n                    void* r10_4 = (r15 - rax_61);\n                    int32_t rax_63 = ((rax_61 + r8_1) & 0xfffffff8);\n                    if (rax_63 >= 8)\n                    {\n                        int32_t rax_64 = (rax_63 & 0xfffffff8);\n                        int32_t rdx_33 = 0;\n                        do\n                        {\n                            uint64_t rdi_33 = rdx_33;\n                            rdx_33 = (rdx_33 + 8);\n                            *(r9_5 + rdi_33) = *(r10_4 + rdi_33);\n                        } while (rdx_33 < rax_64);\n                    }\n                }\n                else if ((r8_1 & 4) != 0)\n                {\n                    *r14_3 = *r15;\n                    *((r14_3 + rax_57) - 4) = *((r15 + rax_57) - 4);\n                }\n                else if (rax_57 != 0)\n                {\n                    *r14_3 = *r15;\n                    if ((rax_57 & 2) != 0)\n                    {\n                        *((r14_3 + rax_57) - 2) = *((r15 + rax_57) - 2);\n                    }\n                }\n                goto label_40ddee;\n            }\n            rsi_1 = (temp0_8 + 1);\n            if (rsi_1 == 0xa)\n            {\n                r14_3 = var_a8;\n            label_40ddee:\n                rdi_15 = 0;\n            }\n            else\n            {\n                rdi_15 = 0;\n            label_40dda7:\n                r14_3 = var_a8;\n                if ((arg3 & 8) == 0)\n                {\n                    rax_56 = 0x30;\n                    goto label_40ddc3;\n                }\n            }\n            if (rcx_1 == 1)\n            {\n                goto label_40d9ca;\n            }\n            r9_1 = 0;\n        }\n        if (((rcx_8 == 0 && rcx_1 != 1) || rcx_8 != 0))\n        {\n            if (rcx_1 != 0)\n            {\n                goto label_40d9ca;\n            }\n            if ((rdi_15 + r9_1) <= 0)\n            {\n                goto label_40d9ca;\n            }\n            goto label_40d9a1;\n        }\n    }\n    else\n    {\n        if (arg4 != 0)\n        {\n            int64_t rdx_5 = 0;\n            uint64_t temp0_5 = (COMBINE(rdx_5, arg5) / arg4);\n            if ((COMBINE(rdx_5, arg5) % arg4) != 0)\n            {\n                goto label_40d6ba;\n            }\n            int64_t rdx_7 = 0;\n            uint64_t rax_30 = ((COMBINE(rdx_7, arg1) % temp0_5) * 5);\n            int64_t rdx_9 = 0;\n            uint64_t rax_31 = (rax_30 + rax_30);\n            rsi_1 = (COMBINE(rdx_7, arg1) / temp0_5);\n            uint64_t temp1_5 = (COMBINE(rdx_9, rax_31) % temp0_5);\n            uint64_t rdx_11 = (temp1_5 + temp1_5);\n            r9_1 = (COMBINE(rdx_9, rax_31) / temp0_5);\n            bool c_1 = temp0_5 < rdx_11;\n            if ((temp0_5 == rdx_11 || c_1))\n            {\n                rdi_15 = (c_1 + 2);\n            }\n            else\n            {\n                rdi_15 = rdx_11 != 0;\n            }\n            rcx_8 = (arg3 & 0x10);\n            if (rcx_8 != 0)\n            {\n                goto label_40d96e;\n            }\n            goto label_40dc2a;\n        }\n    label_40d6ba:\n        long double x87_r7_1 = arg4;\n        if (arg4 < 0)\n        {\n            x87_r7_1 = (x87_r7_1 + 1.84467441e+19f);\n        }\n        long double x87_r6_1 = arg5;\n        long double x87_r6_2;\n        long double x87_r7_2;\n        if (arg5 < 0)\n        {\n            x87_r7_2 = (x87_r7_1 / (x87_r6_1 + 1.84467441e+19f));\n            x87_r6_2 = arg1;\n        }\n        else\n        {\n            x87_r7_2 = (x87_r7_1 / x87_r6_1);\n            x87_r6_2 = arg1;\n        }\n        uint64_t rax_18;\n        uint64_t r14_2;\n        uint16_t x87control;\n        long double x87_r7_3;\n        if (((arg5 < 0 && arg1 >= 0) || (arg5 >= 0 && arg1 >= 0)))\n        {\n            x87_r7_3 = (x87_r7_2 * x87_r6_2);\n            if ((arg3 & 0x10) != 0)\n            {\n            label_40d6ff:\n                long double x87_r6_3 = rax_4;\n                rbx_1 = 0;\n                long double x87_r5_1 = x87_r6_3;\n                while (true)\n                {\n                    rbx_1 = (rbx_1 + 1);\n                    long double x87_r7_4 = (x87_r5_1 * x87_r6_3);\n                    if (x87_r7_3 < x87_r7_4)\n                    {\n                        break;\n                    }\n                    if (rbx_1 == 8)\n                    {\n                        break;\n                    }\n                    x87_r6_3 = x87_r7_3;\n                    int64_t temp0_3 = x87_r5_1;\n                    x87_r5_1 = x87_r7_4;\n                    x87_r7_3 = temp0_3;\n                }\n                int64_t r14_1 = (r8_1 + 1);\n                long double x87_r7_7 = (x87_r6_3 / x87_r6_3);\n                int64_t rax_16;\n                rax_16 = rax_1 == 0;\n                int64_t r15_1 = ((r14_1 + rax_16) + 1);\n                int64_t var_88_3;\n                long double x87_r6_6;\n                long double x87_r7_8;\n                long double x87_r7_9;\n                if (rcx_1 == 1)\n                {\n                    long double var_b8_7 = x87_r7_7;\n                    var_88_3 = x87_r7_7;\n                    __sprintf_chk(arg2, 1, -1, \"%.1Lf\");\n                    rax_18 = strlen(arg2);\n                    x87_r7_8 = var_88_3;\n                    if (rax_18 > r15_1)\n                    {\n                        x87_r6_6 = 10f;\n                        x87_r7_9 = (x87_r7_8 * x87_r6_6);\n                    label_40d7f7:\n                        int64_t var_b8_3 = (x87_r7_9 / x87_r6_6);\n                        __sprintf_chk(arg2, 1, -1, \"%.0Lf\");\n                        rax_18 = strlen(arg2);\n                        r14_2 = rax_18;\n                    }\n                }\n                else\n                {\n                    long double x87_r6_5;\n                    if (data_41d8d0 > x87_r7_7)\n                    {\n                        var_88_3 = x87_r7_7;\n                        long double st0_3;\n                        st0_3 = sub_40d510(rcx_1, x87control, x87_r7_7);\n                        x87_r7_7 = st0_3;\n                        x87_r6_5 = var_88_3;\n                    }\n                    else\n                    {\n                        x87_r6_5 = x87_r7_7;\n                    }\n                    var_88_3 = x87_r6_5;\n                    long double var_b8_1 = x87_r7_7;\n                    __sprintf_chk(arg2, 1, -1, \"%.1Lf\");\n                    rax_18 = strlen(arg2);\n                    x87_r7_8 = var_88_3;\n                    if (rax_18 > r15_1)\n                    {\n                        x87_r6_6 = 10f;\n                        x87_r7_9 = (x87_r7_8 * x87_r6_6);\n                    }\n                }\n                if (((rcx_1 == 1 && rax_18 <= r15_1) || (rcx_1 != 1 && rax_18 <= r15_1)))\n                {\n                    if (((arg3 & 8) == 0 || ((arg3 & 8) != 0 && arg2[(rax_18 - 1)] != 0x30)))\n                    {\n                        r14_2 = (rax_18 - r14_1);\n                    }\n                    if (((arg3 & 8) != 0 && arg2[(rax_18 - 1)] == 0x30))\n                    {\n                        x87_r6_6 = 10f;\n                        x87_r7_9 = (x87_r7_8 * x87_r6_6);\n                        if (rcx_1 == 1)\n                        {\n                            goto label_40d7f7;\n                        }\n                    }\n                }\n                if (((rcx_1 != 1 && rax_18 > r15_1) || ((((rcx_1 == 1 && rax_18 <= r15_1) || (rcx_1 != 1 && rax_18 <= r15_1)) && (arg3 & 8) != 0) && arg2[(rax_18 - 1)] == 0x30)))\n                {\n                    if (data_41d8d0 <= x87_r7_9)\n                    {\n                        goto label_40d7f7;\n                    }\n                    var_88_3 = x87_r6_6;\n                    x87_r7_9 = sub_40d510(rcx_1, x87control, x87_r7_9);\n                    x87_r6_6 = var_88_3;\n                    goto label_40d7f7;\n                }\n                goto label_40d86c;\n            }\n        }\n        if (((arg5 < 0 && arg1 < 0) || (arg5 >= 0 && arg1 < 0)))\n        {\n            x87_r7_3 = (x87_r7_2 * (x87_r6_2 + 1.84467441e+19f));\n            if ((arg3 & 0x10) != 0)\n            {\n                goto label_40d6ff;\n            }\n        }\n        if (rcx_1 != 1)\n        {\n            if (data_41d8d0 > x87_r7_3)\n            {\n                long double var_b8_5 = x87_r7_3;\n                x87_r7_3 = sub_40d510(rcx_1, x87control, var_b8_5);\n                r8_1 = var_b8_5;\n            }\n            goto label_40d843;\n        }\n    label_40d843:\n        long double var_b8_4 = x87_r7_3;\n        __sprintf_chk(arg2, 1, -1, \"%.0Lf\", r8_1);\n        rbx_1 = -1;\n        rax_18 = strlen(arg2);\n        r14_2 = rax_18;\n    label_40d86c:\n        r15_5 = (var_a8 - rax_18);\n        r14_3 = (r14_2 + r15_5);\n        memmove(r15_5, arg2, rax_18);\n    }\n    if (((((((((arg5 <= arg4 && (COMBINE(rdx, arg4) % arg5) == 0) && (COMBINE(0, rsi_1) / temp0_1) == arg1) && rcx_8 == 0) && rcx_1 == 1) && (r9_1 + (rsi_1 & 1) != (-rdi_15)) > 5) || arg5 > arg4) && (arg3 & 4) == 0) || (((((arg5 <= arg4 && (COMBINE(rdx, arg4) % arg5) == 0) && (COMBINE(0, rsi_1) / temp0_1) == arg1) && rcx_8 == 0) && rcx_1 == 1) && (r9_1 + (rsi_1 & 1) != (-rdi_15)) <= 5)))\n    {\n        if ((arg3 & 0x80) == 0)\n        {\n        label_40d8ac:\n            *var_a8 = 0;\n            return;\n        }\n        if ((rbx_1 == 0xffffffff && arg5 <= 1))\n        {\n            rbx_1 = 0;\n        }\n        int32_t rax_23;\n        void* rdx_20;\n        if (((rbx_1 == 0xffffffff && arg5 <= 1) || rbx_1 != 0xffffffff))\n        {\n            rax_23 = (arg3 & 0x100);\n            if ((rax_23 | rbx_1) != 0)\n            {\n                if ((arg3 & 0x40) != 0)\n                {\n                label_40db1d:\n                    arg2[0x287] = 0x20;\n                    var_a8 = &arg2[0x288];\n                }\n                if (rbx_1 == 0)\n                {\n                    rdx_20 = var_a8;\n                    if (rax_23 != 0)\n                    {\n                    label_40db71:\n                        *rdx_20 = 0x42;\n                        var_a8 = (rdx_20 + 1);\n                    }\n                }\n            }\n        }\n        if ((rbx_1 == 0xffffffff && arg5 > 1))\n        {\n            uint64_t rdx_19 = rax_4;\n            rbx_1 = 1;\n            int64_t rax_42 = 1;\n            do\n            {\n                rax_42 = (rax_42 * rdx_19);\n                if (arg5 <= rax_42)\n                {\n                    break;\n                }\n                rbx_1 = (rbx_1 + 1);\n            } while (rbx_1 != 8);\n            rax_23 = (arg3 & 0x100);\n            if ((arg3 & 0x40) != 0)\n            {\n                goto label_40db1d;\n            }\n        }\n        if ((((((rbx_1 == 0xffffffff && arg5 <= 1) || rbx_1 != 0xffffffff) && (rax_23 | rbx_1) != 0) && rbx_1 != 0) || (rbx_1 == 0xffffffff && arg5 > 1)))\n        {\n            if (rax_1 == 0)\n            {\n                if (rbx_1 != 1)\n                {\n                    goto label_40db46;\n                }\n                rdx_20 = (var_a8 + 1);\n                *var_a8 = 0x6b;\n                if (rax_23 != 0)\n                {\n                    goto label_40db71;\n                }\n                goto label_40dd63;\n            }\n        label_40db46:\n            char* rdi_25 = var_a8;\n            rdx_20 = &rdi_25[1];\n            *rdi_25 = *(rbx_1 + 0x41d8b8);\n            if (rax_23 != 0)\n            {\n                if (rax_1 != 0)\n                {\n                    rdx_20 = &rdi_25[2];\n                    rdi_25[1] = 0x69;\n                }\n                goto label_40db71;\n            }\n        label_40dd63:\n            var_a8 = rdx_20;\n        }\n        goto label_40d8ac;\n    }\n    if ((((((((arg5 <= arg4 && (COMBINE(rdx, arg4) % arg5) == 0) && (COMBINE(0, rsi_1) / temp0_1) == arg1) && rcx_8 == 0) && rcx_1 == 1) && (r9_1 + (rsi_1 & 1) != (-rdi_15)) > 5) || arg5 > arg4) && (arg3 & 4) != 0))\n    {\n        goto label_40da15;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40dfa0",
            "funcStartAddr": "0x40dfa0",
            "funcEndAddr": "0x40e157",
            "decompiledFuncCode": "uint64_t sub_40dfa0(char* arg1, int32_t* arg2, int64_t* arg3)\n{\n    char* rbx = arg1;\n    uint64_t rax_3;\n    char* rax_9;\n    char* rax_10;\n    if (arg1 == 0)\n    {\n        rax_9 = getenv(\"BLOCK_SIZE\");\n        rbx = rax_9;\n        if (rax_9 == 0)\n        {\n            rax_10 = getenv(\"BLOCKSIZE\");\n            rbx = rax_10;\n            if (rax_10 == 0)\n            {\n                rax_3 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_3 == 0)\n                {\n                    *arg3 = 0x400;\n                    *arg2 = 0;\n                }\n                else\n                {\n                    *arg3 = 0x200;\n                    rax_3 = 0;\n                    *arg2 = 0;\n                }\n            }\n        }\n    }\n    if (((arg1 != 0 || (arg1 == 0 && rax_9 != 0)) || ((arg1 == 0 && rax_9 == 0) && rax_10 != 0)))\n    {\n        int32_t rbp_1 = 0;\n        if (*rbx == 0x27)\n        {\n            rbx = &rbx[1];\n            rbp_1 = 4;\n        }\n        int32_t rax_1 = sub_40acf0(rbx, &data_41d8a0, 0x41d890, 4);\n        if (rax_1 >= 0)\n        {\n            *arg3 = 1;\n            rax_3 = 0;\n            *arg2 = (rbp_1 | *((rax_1 << 2) + 0x41d890));\n        }\n        else\n        {\n            void* var_30;\n            rax_3 = sub_4132b0(rbx, &var_30, 0, arg3, \"eEgGkKmMpPtTyYzZ0\");\n            int64_t rdx_2;\n            if (rax_3 != 0)\n            {\n                *arg2 = 0;\n                rdx_2 = *arg3;\n            }\n            else\n            {\n                if ((*rbx - 0x30) > 9)\n                {\n                    void* rcx_2 = var_30;\n                    if (rbx != rcx_2)\n                    {\n                        do\n                        {\n                            rbx = &rbx[1];\n                            if ((*rbx - 0x30) <= 9)\n                            {\n                                break;\n                            }\n                        } while (rbx != rcx_2);\n                    }\n                    if ((rbx == rcx_2 || (rbx != rcx_2 && (*rbx - 0x30) > 9)))\n                    {\n                        if (*(rcx_2 - 1) == 0x42)\n                        {\n                            rbp_1 = (rbp_1 | 0x180);\n                        }\n                        else\n                        {\n                            rbp_1 = (rbp_1 | 0x80);\n                        }\n                        if ((*(rcx_2 - 1) != 0x42 || (*(rcx_2 - 1) == 0x42 && *(rcx_2 - 2) == 0x69)))\n                        {\n                            rbp_1 = (rbp_1 | 0x20);\n                        }\n                    }\n                }\n                rdx_2 = *arg3;\n                *arg2 = rbp_1;\n            }\n            if (rdx_2 == 0)\n            {\n                char* rax_4 = getenv(\"POSIXLY_CORRECT\");\n                *arg3 = (((rax_4 - rax_4) & 0x200) + 0x200);\n                return 4;\n            }\n        }\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_40e160",
            "funcStartAddr": "0x40e160",
            "funcEndAddr": "0x40e1f0",
            "decompiledFuncCode": "void* sub_40e160(uid_t arg1)\n{\n    int32_t* rbx = data_6257b8;\n    if ((rbx != 0 && arg1 != *rbx))\n    {\n        do\n        {\n            rbx = *(rbx + 8);\n            if (rbx == 0)\n            {\n                break;\n            }\n        } while (*rbx != arg1);\n    }\n    if ((rbx == 0 || (arg1 != *rbx && rbx == 0)))\n    {\n        char* r12_1 = &data_41b08a;\n        char** rax_1 = getpwuid(arg1);\n        size_t rdi = 0x18;\n        if (rax_1 != 0)\n        {\n            r12_1 = *rax_1;\n            rdi = ((strlen(r12_1) + 0x18) & 0xfffffffffffffff8);\n        }\n        int32_t* rax_3 = sub_412980(rdi);\n        *rax_3 = arg1;\n        rbx = rax_3;\n        strcpy(&rax_3[4], r12_1);\n        int64_t rax_4 = data_6257b8;\n        data_6257b8 = rbx;\n        *(rbx + 8) = rax_4;\n    }\n    void* rax_5 = nullptr;\n    if (rbx[4] != 0)\n    {\n        rax_5 = &rbx[4];\n    }\n    return rax_5;\n}\n\n"
        },
        {
            "funcName": "sub_40e1f0",
            "funcStartAddr": "0x40e1f0",
            "funcEndAddr": "0x40e2e9",
            "decompiledFuncCode": "int64_t sub_40e1f0(char* arg1)\n{\n    int64_t rbx = data_6257b8;\n    if (rbx != 0)\n    {\n        char rbp_1 = *arg1;\n        do\n        {\n            if ((*(rbx + 0x10) == rbp_1 && strcmp((rbx + 0x10), arg1) == 0))\n            {\n                return rbx;\n            }\n            rbx = *(rbx + 8);\n        } while (rbx != 0);\n    }\n    void* rbx_1 = data_6257b0;\n    if (rbx_1 != 0)\n    {\n        char rbp_2 = *arg1;\n        do\n        {\n            if ((*(rbx_1 + 0x10) == rbp_2 && strcmp((rbx_1 + 0x10), arg1) == 0))\n            {\n                return 0;\n            }\n            rbx_1 = *(rbx_1 + 8);\n        } while (rbx_1 != 0);\n    }\n    struct passwd* rax_5 = getpwnam(arg1);\n    int64_t rax_7 = sub_412980(((strlen(arg1) + 0x18) & 0xfffffffffffffff8));\n    rbx = rax_7;\n    strcpy((rax_7 + 0x10), arg1);\n    if (rax_5 == 0)\n    {\n        int64_t rax_10 = data_6257b0;\n        data_6257b0 = rbx;\n        *(rbx + 8) = rax_10;\n        return 0;\n    }\n    *rbx = rax_5->pw_uid;\n    int64_t rax_9 = data_6257b8;\n    data_6257b8 = rbx;\n    *(rbx + 8) = rax_9;\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40e2f0",
            "funcStartAddr": "0x40e2f0",
            "funcEndAddr": "0x40e380",
            "decompiledFuncCode": "void* sub_40e2f0(gid_t arg1)\n{\n    int32_t* rbx = data_6257a8;\n    if ((rbx != 0 && arg1 != *rbx))\n    {\n        do\n        {\n            rbx = *(rbx + 8);\n            if (rbx == 0)\n            {\n                break;\n            }\n        } while (*rbx != arg1);\n    }\n    if ((rbx == 0 || (arg1 != *rbx && rbx == 0)))\n    {\n        char* r12_1 = &data_41b08a;\n        char** rax_1 = getgrgid(arg1);\n        size_t rdi = 0x18;\n        if (rax_1 != 0)\n        {\n            r12_1 = *rax_1;\n            rdi = ((strlen(r12_1) + 0x18) & 0xfffffffffffffff8);\n        }\n        int32_t* rax_3 = sub_412980(rdi);\n        *rax_3 = arg1;\n        rbx = rax_3;\n        strcpy(&rax_3[4], r12_1);\n        int64_t rax_4 = data_6257a8;\n        data_6257a8 = rbx;\n        *(rbx + 8) = rax_4;\n    }\n    void* rax_5 = nullptr;\n    if (rbx[4] != 0)\n    {\n        rax_5 = &rbx[4];\n    }\n    return rax_5;\n}\n\n"
        },
        {
            "funcName": "sub_40e380",
            "funcStartAddr": "0x40e380",
            "funcEndAddr": "0x40e479",
            "decompiledFuncCode": "int64_t sub_40e380(char* arg1)\n{\n    int64_t rbx = data_6257a8;\n    if (rbx != 0)\n    {\n        char rbp_1 = *arg1;\n        do\n        {\n            if ((*(rbx + 0x10) == rbp_1 && strcmp((rbx + 0x10), arg1) == 0))\n            {\n                return rbx;\n            }\n            rbx = *(rbx + 8);\n        } while (rbx != 0);\n    }\n    void* rbx_1 = data_6257a0;\n    if (rbx_1 != 0)\n    {\n        char rbp_2 = *arg1;\n        do\n        {\n            if ((*(rbx_1 + 0x10) == rbp_2 && strcmp((rbx_1 + 0x10), arg1) == 0))\n            {\n                return 0;\n            }\n            rbx_1 = *(rbx_1 + 8);\n        } while (rbx_1 != 0);\n    }\n    struct group* rax_5 = getgrnam(arg1);\n    int64_t rax_7 = sub_412980(((strlen(arg1) + 0x18) & 0xfffffffffffffff8));\n    rbx = rax_7;\n    strcpy((rax_7 + 0x10), arg1);\n    if (rax_5 == 0)\n    {\n        int64_t rax_10 = data_6257a0;\n        data_6257a0 = rbx;\n        *(rbx + 8) = rax_10;\n        return 0;\n    }\n    *rbx = rax_5->short_end;\n    int64_t rax_9 = data_6257a8;\n    data_6257a8 = rbx;\n    *(rbx + 8) = rax_9;\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40e480",
            "funcStartAddr": "0x40e480",
            "funcEndAddr": "0x40e51c",
            "decompiledFuncCode": "void* sub_40e480(uint64_t arg1, void* arg2)\n{\n    void* rcx = (arg2 + 0x14);\n    *(arg2 + 0x14) = 0;\n    if (arg1 < 0)\n    {\n        void* rsi;\n        while (true)\n        {\n            rsi = (rcx - 1);\n            int64_t rax_7;\n            int64_t rdx_3;\n            rdx_3 = HIGHD((arg1 * 0x6666666666666667));\n            rax_7 = LOWD((arg1 * 0x6666666666666667));\n            int64_t rdx_5 = ((rdx_3 >> 2) - (arg1 >> 0x3f));\n            char rax_12 = ((0x30 + (rdx_5 * 0xa)) - arg1);\n            arg1 = rdx_5;\n            *(rcx - 1) = rax_12;\n            if (rdx_5 == 0)\n            {\n                break;\n            }\n            rcx = rsi;\n        }\n        *(rsi - 1) = 0x2d;\n        return (rcx - 2);\n    }\n    uint64_t rdx_2;\n    do\n    {\n        rcx = (rcx - 1);\n        int64_t rax_2;\n        int64_t rdx_1;\n        rdx_1 = HIGHD((arg1 * -0x3333333333333333));\n        rax_2 = LOWD((arg1 * -0x3333333333333333));\n        rdx_2 = (rdx_1 >> 3);\n        char rax_3 = (rdx_2 + (rdx_2 << 2));\n        *rcx = ((arg1 - (rax_3 + rax_3)) + 0x30);\n        arg1 = rdx_2;\n    } while (rdx_2 != 0);\n    return rcx;\n}\n\n"
        },
        {
            "funcName": "sub_40e520",
            "funcStartAddr": "0x40e520",
            "funcEndAddr": "0x40e568",
            "decompiledFuncCode": "void* sub_40e520(uint64_t arg1, void* arg2)\n{\n    void* rcx = (arg2 + 0x14);\n    *(arg2 + 0x14) = 0;\n    while (true)\n    {\n        rcx = (rcx - 1);\n        int64_t rax_2;\n        int64_t rdx_1;\n        rdx_1 = HIGHD((arg1 * -0x3333333333333333));\n        rax_2 = LOWD((arg1 * -0x3333333333333333));\n        uint64_t rdx_2 = (rdx_1 >> 3);\n        char rax_3 = (rdx_2 + (rdx_2 << 2));\n        *rcx = ((arg1 - (rax_3 + rax_3)) + 0x30);\n        if (arg1 <= 9)\n        {\n            break;\n        }\n        arg1 = rdx_2;\n    }\n    return rcx;\n}\n\n"
        },
        {
            "funcName": "sub_40e570",
            "funcStartAddr": "0x40e570",
            "funcEndAddr": "0x40e90b",
            "decompiledFuncCode": "uint64_t sub_40e570(char* arg1, char* arg2, int64_t arg3, uint64_t* arg4, \n    int32_t arg5, int32_t arg6)\n{\n    char* var_50 = arg1;\n    uint64_t rax = strlen(arg1);\n    uint64_t r14 = rax;\n    wchar_t* var_68_1;\n    uint64_t rax_6;\n    uint64_t rax_7;\n    wchar_t* rax_9;\n    uint64_t rdx;\n    char* r12_1;\n    uint64_t r13_3;\n    uint64_t r15_1;\n    if ((arg6 & 2) == 0)\n    {\n        rax_6 = __ctype_get_mb_cur_max();\n        if (rax_6 > 1)\n        {\n            rax_7 = mbstowcs(nullptr, var_50, 0);\n            if (rax_7 != -1)\n            {\n                uint64_t r15_3 = (rax_7 + 1);\n                uint64_t rax_8 = (r15_3 << 2);\n                rax_9 = malloc(rax_8);\n                var_68_1 = rax_9;\n                if (rax_9 == 0)\n                {\n                    r15_1 = r14;\n                    r12_1 = nullptr;\n                    if ((arg6 & 1) != 0)\n                    {\n                        goto label_40e5b6;\n                    }\n                }\n                else\n                {\n                    if (mbstowcs(var_68_1, var_50, r15_3) == 0)\n                    {\n                        r15_1 = r14;\n                        r12_1 = nullptr;\n                        goto label_40e5b6;\n                    }\n                    *((var_68_1 + rax_8) - 4) = 0;\n                    int32_t rdi_5 = *var_68_1;\n                    wchar_t* rdx_9 = var_68_1;\n                    uint64_t var_48_1;\n                    if (rdi_5 == 0)\n                    {\n                        r15_1 = wcswidth(var_68_1);\n                    }\n                    else\n                    {\n                        var_48_1 = 0;\n                        do\n                        {\n                            if (iswprint(rdi_5) == 0)\n                            {\n                                *rdx_9 = 0xfffd;\n                                var_48_1 = 1;\n                            }\n                            rdx_9 = &rdx_9[1];\n                            rdi_5 = *rdx_9;\n                        } while (rdi_5 != 0);\n                        r15_1 = wcswidth(var_68_1);\n                    }\n                    uint64_t var_48_2;\n                    if ((rdi_5 == 0 || (rdi_5 != 0 && var_48_1 == 0)))\n                    {\n                        rdx = *arg4;\n                        if (rdx >= r15_1)\n                        {\n                            r12_1 = nullptr;\n                        }\n                        else\n                        {\n                            var_48_2 = (rax + 1);\n                        }\n                    }\n                    if ((rdi_5 != 0 && var_48_1 != 0))\n                    {\n                        var_48_2 = (wcstombs(nullptr, var_68_1, 0) + 1);\n                    }\n                    if ((((rdi_5 == 0 || (rdi_5 != 0 && var_48_1 == 0)) && rdx < r15_1) || (rdi_5 != 0 && var_48_1 != 0)))\n                    {\n                        char* rax_16 = malloc(var_48_2);\n                        r12_1 = rax_16;\n                        if (rax_16 != 0)\n                        {\n                            wchar_t* r14_1 = var_68_1;\n                            uint64_t rax_17 = *arg4;\n                            int32_t rdi_8 = *r14_1;\n                            if (rdi_8 == 0)\n                            {\n                                r14_1 = var_68_1;\n                                r15_1 = 0;\n                            }\n                            else\n                            {\n                                r15_1 = 0;\n                                do\n                                {\n                                    int32_t rax_20 = wcwidth(rdi_8);\n                                    int64_t rax_18;\n                                    if (rax_20 != 0xffffffff)\n                                    {\n                                        rax_18 = rax_20;\n                                    }\n                                    else\n                                    {\n                                        *r14_1 = 0xfffd;\n                                        rax_18 = 1;\n                                    }\n                                    uint64_t rax_19 = (rax_18 + r15_1);\n                                    if (rax_17 < rax_19)\n                                    {\n                                        break;\n                                    }\n                                    r14_1 = &r14_1[1];\n                                    rdi_8 = *r14_1;\n                                    r15_1 = rax_19;\n                                } while (rdi_8 != 0);\n                            }\n                            *r14_1 = 0;\n                            var_50 = r12_1;\n                            r14 = wcstombs(r12_1, var_68_1, var_48_2);\n                            goto label_40e5b6;\n                        }\n                        if ((arg6 & 1) != 0)\n                        {\n                            goto label_40e5b6;\n                        }\n                        r13_3 = -1;\n                        goto label_40e692;\n                    }\n                }\n            }\n            if (((rax_7 == -1 && (arg6 & 1) == 0) || (rax_7 != -1 && rax_9 == 0)))\n            {\n                var_68_1 = nullptr;\n                r12_1 = nullptr;\n                r13_3 = -1;\n            label_40e692:\n                free(var_68_1);\n                free(r12_1);\n                return r13_3;\n            }\n        }\n    }\n    uint64_t rax_1;\n    int32_t rsi;\n    if ((((arg6 & 2) != 0 || ((arg6 & 2) == 0 && rax_6 <= 1)) || ((((arg6 & 2) == 0 && rax_6 > 1) && rax_7 == -1) && (arg6 & 1) != 0)))\n    {\n        var_68_1 = nullptr;\n        r15_1 = r14;\n        r12_1 = nullptr;\n    label_40e5b6:\n        rdx = *arg4;\n        if (rdx < r15_1)\n        {\n            r14 = rdx;\n            rax_1 = 0;\n        label_40e5c8:\n            rsi = arg5;\n            *arg4 = rdx;\n            uint64_t r13_1;\n            if (rsi != 0)\n            {\n            label_40e5d8:\n                r13_1 = 0;\n                if (rsi != 1)\n                {\n                    r13_1 = (rax_1 >> 1);\n                    rax_1 = ((rax_1 & 1) + r13_1);\n                }\n                goto label_40e5ec;\n            }\n        label_40e6dd:\n            r13_1 = rax_1;\n            rax_1 = 0;\n        label_40e5ec:\n            uint64_t r15_2 = (rax_1 + r14);\n            if ((arg6 & 4) != 0)\n            {\n                r15_2 = r14;\n                rax_1 = 0;\n            }\n            if ((arg6 & 8) != 0)\n            {\n                r13_1 = 0;\n            }\n            if (arg3 != 0)\n            {\n                void* rbp_2 = &arg2[(arg3 - 1)];\n                char* rdi = arg2;\n                if ((arg2 < rbp_2 && rax_1 != 0))\n                {\n                    do\n                    {\n                        rdi = &rdi[1];\n                        rdi[-1] = 0x20;\n                        if ((arg2 - rdi) == (-rax_1))\n                        {\n                            break;\n                        }\n                    } while (rbp_2 > rdi);\n                }\n                *rdi = 0;\n                uint64_t rdx_5 = (rbp_2 - rdi);\n                if (rdx_5 > r14)\n                {\n                    rdx_5 = r14;\n                }\n                char* rax_3 = mempcpy(rdi, var_50, rdx_5);\n                char* rdx_6 = rax_3;\n                if ((rbp_2 > rax_3 && r13_1 != 0))\n                {\n                    do\n                    {\n                        rdx_6 = &rdx_6[1];\n                        rdx_6[-1] = 0x20;\n                        if ((r13_1 - rdx_6) == (-rax_3))\n                        {\n                            break;\n                        }\n                    } while (rbp_2 > rdx_6);\n                }\n                *rdx_6 = 0;\n            }\n            r13_3 = (r13_1 + r15_2);\n            goto label_40e692;\n        }\n    }\n    if ((((((((arg6 & 2) == 0 && rax_6 > 1) && rax_7 != -1) && rax_9 != 0) || (arg6 & 2) != 0) || ((arg6 & 2) == 0 && rax_6 <= 1)) || ((((arg6 & 2) == 0 && rax_6 > 1) && rax_7 == -1) && (arg6 & 1) != 0)))\n    {\n        if (r15_1 >= rdx)\n        {\n            rdx = r15_1;\n            rax_1 = 0;\n            goto label_40e5c8;\n        }\n        rsi = arg5;\n        rax_1 = (rdx - r15_1);\n        *arg4 = r15_1;\n        if (rsi == 0)\n        {\n            goto label_40e6dd;\n        }\n        goto label_40e5d8;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40e910",
            "funcStartAddr": "0x40e910",
            "funcEndAddr": "0x40e9ad",
            "decompiledFuncCode": "char* sub_40e910(char* arg1, int64_t* arg2, int32_t arg3, int32_t arg4)\n{\n    char* r12 = nullptr;\n    uint64_t r13 = *arg2;\n    uint64_t rax = r13;\n    char* r14_1;\n    size_t rbx_1;\n    do\n    {\n        rbx_1 = (rax + 1);\n        char* rax_1 = realloc(r12, rbx_1);\n        r14_1 = rax_1;\n        if (rax_1 == 0)\n        {\n            free(r12);\n            break;\n        }\n        *arg2 = r13;\n        rax = sub_40e570(arg1, rax_1, rbx_1, arg2, arg3, arg4);\n        if (rax == -1)\n        {\n            char* rdi_3 = r14_1;\n            r14_1 = nullptr;\n            free(rdi_3);\n            break;\n        }\n        r12 = r14_1;\n    } while (rbx_1 <= rax);\n    return r14_1;\n}\n\n"
        },
        {
            "funcName": "sub_40e9b0",
            "funcStartAddr": "0x40e9b0",
            "funcEndAddr": "0x40eb63",
            "decompiledFuncCode": "uint64_t sub_40e9b0(char* arg1, int64_t arg2, int32_t arg3)\n{\n    char* r13 = &arg1[arg2];\n    char* rbx = arg1;\n    uint64_t rax = __ctype_get_mb_cur_max();\n    int32_t r12;\n    if (rax <= 1)\n    {\n        r12 = 0;\n        if (rbx < r13)\n        {\n            r12 = 0;\n            int32_t r15_1 = (arg3 & 2);\n            uint16_t* rdx_3 = *__ctype_b_loc();\n            while (true)\n            {\n                rbx = &rbx[1];\n                int16_t rax_11 = rdx_3[rbx[-1]];\n                if (((*rax_11[1] & 0x40) == 0 && r15_1 != 0))\n                {\n                    break;\n                }\n                if ((((*rax_11[1] & 0x40) != 0 || (((*rax_11[1] & 0x40) == 0 && r15_1 == 0) && (rax_11 & 2) == 0)) && r12 != 0x7fffffff))\n                {\n                    r12 = (r12 + 1);\n                }\n                if (((((*rax_11[1] & 0x40) != 0 || (((*rax_11[1] & 0x40) == 0 && r15_1 == 0) && (rax_11 & 2) == 0)) && r12 != 0x7fffffff) || (((*rax_11[1] & 0x40) == 0 && r15_1 == 0) && (rax_11 & 2) != 0)))\n                {\n                    if (r13 == rbx)\n                    {\n                        return r12;\n                    }\n                    continue;\n                }\n                if ((((*rax_11[1] & 0x40) != 0 || (((*rax_11[1] & 0x40) == 0 && r15_1 == 0) && (rax_11 & 2) == 0)) && r12 == 0x7fffffff))\n                {\n                    return r12;\n                }\n            }\n        }\n    }\n    else\n    {\n        r12 = 0;\n        if (rbx < r13)\n        {\n            while (true)\n            {\n                char rax_2 = *rbx;\n                if (rax_2 <= 0x3f)\n                {\n                    if (rax_2 < 0x25)\n                    {\n                        if ((rax_2 - 0x20) <= 3)\n                        {\n                            goto label_40e9fb;\n                        }\n                        goto label_40ea22;\n                    }\n                label_40e9fb:\n                    rbx = &rbx[1];\n                    r12 = (r12 + 1);\n                }\n                else\n                {\n                    if (rax_2 >= 0x41)\n                    {\n                        if (rax_2 <= 0x5f)\n                        {\n                            goto label_40e9fb;\n                        }\n                        if ((rax_2 - 0x61) <= 0x1d)\n                        {\n                            goto label_40e9fb;\n                        }\n                        goto label_40ea22;\n                    }\n                label_40ea22:\n                    mbstate_t var_40;\n                    var_40.__count = 0;\n                    var_40.__value = 0;\n                    uint64_t rax_5;\n                    while (true)\n                    {\n                        uint32_t var_44;\n                        rax_5 = sub_416e80(&var_44, rbx, (r13 - rbx), &var_40);\n                        uint64_t rbp_1 = rax_5;\n                        if ((rax_5 == -1 && (arg3 & 1) != 0))\n                        {\n                            break;\n                        }\n                        if (rax_5 != -1)\n                        {\n                            if (rax_5 != -2)\n                            {\n                                uint32_t rdi_2 = var_44;\n                                if (rax_5 == 0)\n                                {\n                                    rbp_1 = 1;\n                                }\n                                int32_t rax_6 = wcwidth(rdi_2);\n                                if (rax_6 < 0)\n                                {\n                                    if ((arg3 & 2) != 0)\n                                    {\n                                        break;\n                                    }\n                                    if (iswcntrl(var_44) != 0)\n                                    {\n                                        goto label_40ea48;\n                                    }\n                                    if (r12 != 0x7fffffff)\n                                    {\n                                        r12 = (r12 + 1);\n                                        goto label_40ea48;\n                                    }\n                                }\n                                else if ((0x7fffffff - r12) >= rax_6)\n                                {\n                                    r12 = (r12 + rax_6);\n                                label_40ea48:\n                                    rbx = &rbx[rbp_1];\n                                    if (mbsinit(&var_40) != 0)\n                                    {\n                                        break;\n                                    }\n                                    continue;\n                                }\n                                return 0x7fffffff;\n                            }\n                            if ((arg3 & 1) != 0)\n                            {\n                                break;\n                            }\n                            r12 = (r12 + 1);\n                            rbx = r13;\n                            break;\n                        }\n                    }\n                    if (rax_5 == -1)\n                    {\n                        if (((!(rax_5 == -1 && (arg3 & 1) == 0)) && (arg3 & 1) != 0))\n                        {\n                            break;\n                        }\n                        if ((arg3 & 1) == 0)\n                        {\n                            goto label_40e9fb;\n                        }\n                    }\n                }\n                if (rbx >= r13)\n                {\n                    return r12;\n                }\n            }\n        }\n    }\n    if (((rax <= 1 && rbx < r13) || (rax > 1 && rbx < r13)))\n    {\n        r12 = -1;\n    }\n    return r12;\n}\n\n"
        },
        {
            "funcName": "sub_40eb70",
            "funcStartAddr": "0x40eb70",
            "funcEndAddr": "0x40eb93",
            "decompiledFuncCode": "int64_t sub_40eb70(char* arg1, int32_t arg2)\n{\n    /* tailcall */\n    return sub_40e9b0(arg1, strlen(arg1), arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40eba0",
            "funcStartAddr": "0x40eba0",
            "funcEndAddr": "0x40edc1",
            "decompiledFuncCode": "void sub_40eba0(int64_t* arg1, int64_t arg2, int64_t* arg3, int64_t arg4)\n{\n    bool cond:0 = arg2 == 2;\n    if (arg2 > 2)\n    {\n        uint64_t rcx_1 = (arg2 >> 1);\n        void* rdi_1 = &arg1[rcx_1];\n        sub_40eba0(rdi_1, (arg2 - rcx_1), arg3, arg4);\n        int64_t rbp_2;\n        if (arg2 == 3)\n        {\n            rbp_2 = *arg1;\n            *arg3 = rbp_2;\n        }\n        else\n        {\n            int64_t* r15_5 = arg3;\n            uint64_t r14_4 = (arg2 >> 2);\n            void* r12_3 = &arg1[r14_4];\n            uint64_t var_48_1 = r14_4;\n            sub_40eba0(r12_3, (rcx_1 - r14_4), r15_5, arg4);\n            sub_40eba0(arg1, r14_4, r15_5, arg4);\n            uint64_t var_68_2 = 0;\n            int64_t rbp_3 = *arg1;\n            int64_t r12_4 = *r12_3;\n            while (true)\n            {\n                r15_5 = &r15_5[1];\n                if (arg4(rbp_3, r12_4) <= 0)\n                {\n                    var_68_2 = (var_68_2 + 1);\n                    r15_5[-1] = rbp_3;\n                    if (var_48_1 == var_68_2)\n                    {\n                        var_68_2 = r14_4;\n                        var_48_1 = rcx_1;\n                        break;\n                    }\n                    rbp_3 = arg1[var_68_2];\n                }\n                else\n                {\n                    r15_5[-1] = r12_4;\n                    r14_4 = (r14_4 + 1);\n                    if (rcx_1 == r14_4)\n                    {\n                        break;\n                    }\n                    r12_4 = arg1[r14_4];\n                }\n            }\n            memcpy(r15_5, &arg1[var_68_2], ((var_48_1 - var_68_2) << 3));\n            rbp_2 = *arg3;\n        }\n        int64_t var_68_1 = 0;\n        int64_t r15_2 = 0;\n        uint64_t r14_2 = rcx_1;\n        int64_t r12_2 = *rdi_1;\n        while (true)\n        {\n            r15_2 = (r15_2 + 1);\n            if (arg4(rbp_2, r12_2) <= 0)\n            {\n                var_68_1 = (var_68_1 + 1);\n                arg1[(r15_2 - 1)] = rbp_2;\n                if (rcx_1 == var_68_1)\n                {\n                    break;\n                }\n                rbp_2 = arg3[var_68_1];\n            }\n            else\n            {\n                arg1[(r15_2 - 1)] = r12_2;\n                r14_2 = (r14_2 + 1);\n                if (arg2 == r14_2)\n                {\n                    /* tailcall */\n                    return memcpy(&arg1[r15_2], &arg3[var_68_1], ((rcx_1 - var_68_1) << 3));\n                }\n                r12_2 = arg1[r14_2];\n            }\n        }\n    }\n    else if (cond:0)\n    {\n        int64_t r12_1 = arg1[1];\n        int64_t rbp_1 = *arg1;\n        if (arg4(rbp_1, r12_1) > 0)\n        {\n            *arg1 = r12_1;\n            arg1[1] = rbp_1;\n            return;\n        }\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40edd0",
            "funcStartAddr": "0x40edd0",
            "funcEndAddr": "0x40eddf",
            "decompiledFuncCode": "int64_t sub_40edd0(int64_t* arg1, int64_t arg2, int64_t arg3)\n{\n    /* tailcall */\n    return sub_40eba0(arg1, arg2, &arg1[arg2], arg3);\n}\n\n"
        },
        {
            "funcName": "sub_40ede0",
            "funcStartAddr": "0x40ede0",
            "funcEndAddr": "0x40ee21",
            "decompiledFuncCode": "char* sub_40ede0(char* arg1, void* arg2, int64_t arg3)\n{\n    if (arg3 != 0)\n    {\n        int64_t rbx_1 = (arg3 - 1);\n        int32_t** rax_1 = __ctype_tolower_loc();\n        do\n        {\n            arg1[rbx_1] = *rax_1[*(arg2 + rbx_1)];\n            rbx_1 = (rbx_1 - 1);\n        } while (rbx_1 != -1);\n    }\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_40ee30",
            "funcStartAddr": "0x40ee30",
            "funcEndAddr": "0x40ee71",
            "decompiledFuncCode": "char* sub_40ee30(char* arg1, void* arg2, int64_t arg3)\n{\n    if (arg3 != 0)\n    {\n        int64_t rbx_1 = (arg3 - 1);\n        int32_t** rax_1 = __ctype_toupper_loc();\n        do\n        {\n            arg1[rbx_1] = *rax_1[*(arg2 + rbx_1)];\n            rbx_1 = (rbx_1 - 1);\n        } while (rbx_1 != -1);\n    }\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_40ee80",
            "funcStartAddr": "0x40ee80",
            "funcEndAddr": "0x410645",
            "decompiledFuncCode": "int64_t sub_40ee80(char* arg1, int64_t arg2, char* arg3, struct tm* arg4, \n    char arg5, int64_t arg6, int64_t** arg7, int32_t arg8)\n{\n    char* r15 = arg1;\n    char* rbx = arg3;\n    char* r12 = arg4->tm_zone;\n    int32_t r11 = arg4->tm_hour;\n    if (r12 == 0)\n    {\n        r12 = &data_41b08a;\n    }\n    if (r11 > 0xc)\n    {\n        r11 = (r11 - 0xc);\n    }\n    else if (r11 == 0)\n    {\n        r11 = 0xc;\n    }\n    char rax = *rbx;\n    int64_t r14 = 0;\n    if (rax != 0)\n    {\n        char var_456;\n        char* var_4b8_1 = &var_456;\n        do\n        {\n            char* r8;\n            if (rax == 0x25)\n            {\n                char r11_1 = arg5;\n                uint32_t r8_1 = 0;\n                int32_t r12_1 = 0;\n                char rcx;\n                uint64_t rbp_1;\n                int32_t r9;\n                while (true)\n                {\n                    rbx = &rbx[1];\n                    int32_t rax_2 = *rbx;\n                    rcx = rax_2;\n                    r9 = rax_2;\n                    bool cond:2_1 = rax_2 > 0x30;\n                    if (rax_2 != 0x30)\n                    {\n                        while ((!cond:2_1))\n                        {\n                            if (rax_2 != 0x23)\n                            {\n                                break;\n                            }\n                            rbx = &rbx[1];\n                            rax_2 = *rbx;\n                            r8_1 = 1;\n                            rcx = rax_2;\n                            r9 = rax_2;\n                            cond:2_1 = rax_2 > 0x30;\n                            if (rax_2 == 0x30)\n                            {\n                                break;\n                            }\n                        }\n                        if (((!cond:2_1) && rax_2 != 0x23))\n                        {\n                            if (rax_2 != 0x2d)\n                            {\n                                rbp_1 = 0xffffffff;\n                                if ((rax_2 - 0x30) > 9)\n                                {\n                                    break;\n                                }\n                            label_40f011:\n                                rbp_1 = 0;\n                                while (true)\n                                {\n                                    int32_t rax_6 = rbx[1];\n                                    void* rsi = &rbx[1];\n                                    rcx = rax_6;\n                                    int32_t rdx_2 = (rax_6 - 0x30);\n                                    bool cond:3_1 = rbp_1 == 0xccccccc;\n                                    int32_t rdi;\n                                    if (rbp_1 <= 0xccccccc)\n                                    {\n                                        rdi = *rbx;\n                                        if (((!cond:3_1) || (cond:3_1 && rdi <= 0x37)))\n                                        {\n                                            rbx = rsi;\n                                            rbp_1 = ((rdi + ((rbp_1 * 5) << 1)) - 0x30);\n                                        }\n                                    }\n                                    if ((rbp_1 > 0xccccccc || ((rbp_1 <= 0xccccccc && cond:3_1) && rdi > 0x37)))\n                                    {\n                                        if (rdx_2 > 9)\n                                        {\n                                            r9 = rax_6;\n                                            rbx = rsi;\n                                            rbp_1 = 0x7fffffff;\n                                            break;\n                                        }\n                                        rax_6 = rbx[2];\n                                        rbp_1 = 0x7fffffff;\n                                        rbx = &rbx[2];\n                                        rcx = rax_6;\n                                        rdx_2 = (rax_6 - 0x30);\n                                    }\n                                    if ((((rbp_1 > 0xccccccc || ((rbp_1 <= 0xccccccc && cond:3_1) && rdi > 0x37)) && rdx_2 <= 9) || (rbp_1 <= 0xccccccc && ((!cond:3_1) || (cond:3_1 && rdi <= 0x37)))))\n                                    {\n                                        if (rdx_2 > 9)\n                                        {\n                                            r9 = rax_6;\n                                            break;\n                                        }\n                                    }\n                                }\n                                break;\n                            }\n                        }\n                        else if (cond:2_1)\n                        {\n                            if (rax_2 == 0x5e)\n                            {\n                                r11_1 = 1;\n                                continue;\n                            }\n                            else if (rax_2 != 0x5f)\n                            {\n                                rbp_1 = 0xffffffff;\n                                if ((rax_2 - 0x30) > 9)\n                                {\n                                    break;\n                                }\n                                goto label_40f011;\n                            }\n                        }\n                    }\n                    r12_1 = rax_2;\n                }\n                if ((rcx == 0x45 || rcx == 0x4f))\n                {\n                    rcx = rbx[1];\n                    rbx = &rbx[1];\n                }\n                if ((rcx != 0x45 && rcx != 0x4f))\n                {\n                    r9 = 0;\n                }\n                if (rcx > 0x7a)\n                {\n                    goto label_40fcc8;\n                }\n                uint64_t var_498;\n                char var_480;\n                int64_t rax_110;\n                int64_t rdx_83;\n                char r13_1;\n                int64_t r13_10;\n                int64_t r13_12;\n                switch (rcx)\n                {\n                    case 0x25:\n                    {\n                        int32_t rax_126 = 0;\n                        r13_10 = 1;\n                        rdx_83 = (arg2 - r14);\n                        if (rbp_1 >= 0)\n                        {\n                            rax_126 = rbp_1;\n                        }\n                        rax_110 = rax_126;\n                        if (rax_110 != 0)\n                        {\n                            r13_10 = rax_110;\n                        }\n                        break;\n                    }\n                    case 0x50:\n                    {\n                        r13_1 = 1;\n                        break;\n                    }\n                    case 0x52:\n                    {\n                        var_498 = \"%H:%M\";\n                        break;\n                    }\n                    case 0x54:\n                    {\n                        var_498 = \"%H:%M:%S\";\n                        break;\n                    }\n                    case 0x5a:\n                    {\n                        char* rdi_17 = r12;\n                        var_480 = r8_1;\n                        if (r8_1 != 0)\n                        {\n                            r11_1 = 0;\n                        }\n                        uint64_t rax_56 = strlen(rdi_17);\n                        int32_t rax_57 = 0;\n                        if (rbp_1 >= 0)\n                        {\n                            rax_57 = rbp_1;\n                        }\n                        uint64_t rax_58 = rax_57;\n                        uint64_t rsi_20 = rax_58;\n                        if (rax_56 >= rax_58)\n                        {\n                            rsi_20 = rax_56;\n                        }\n                        if ((arg2 - r14) <= rsi_20)\n                        {\n                            break;\n                        }\n                        if (r15 != 0)\n                        {\n                            char r11_4 = r11_1;\n                            char r8_7 = var_480;\n                            if (rax_56 < rax_58)\n                            {\n                                uint64_t rdx_49 = (rbp_1 - rax_56);\n                                void* rbp_5 = &r15[rdx_49];\n                                if (r12_1 == 0x30)\n                                {\n                                    char* rdi_52 = r15;\n                                    r15 = rbp_5;\n                                    memset(rdi_52, 0x30, rdx_49);\n                                    r11_4 = r11_1;\n                                    r8_7 = var_480;\n                                }\n                                else\n                                {\n                                    char* rdi_18 = r15;\n                                    r15 = rbp_5;\n                                    memset(rdi_18, 0x20, rdx_49);\n                                }\n                            }\n                            char* rdi_19 = r15;\n                            if (r8_7 != 0)\n                            {\n                                sub_40ede0(rdi_19, r12, rax_56);\n                            }\n                            else if (r11_4 == 0)\n                            {\n                                memcpy(rdi_19, r12, rax_56);\n                            }\n                            else\n                            {\n                                sub_40ee30(rdi_19, r12, rax_56);\n                            }\n                            r15 = &r15[rax_56];\n                        }\n                        r14 = (r14 + rsi_20);\n                        r8 = rbx;\n                        break;\n                    }\n                    case 0x6e:\n                    {\n                        int32_t r13_9 = 0;\n                        if (rbp_1 >= 0)\n                        {\n                            r13_9 = rbp_1;\n                        }\n                        r13_10 = r13_9;\n                        if (r13_10 == 0)\n                        {\n                            r13_10 = 1;\n                        }\n                        if ((arg2 - r14) <= r13_10)\n                        {\n                            break;\n                        }\n                        if (r15 != 0)\n                        {\n                            if (rbp_1 > 1)\n                            {\n                                uint64_t rdx_52 = (rbp_1 - 1);\n                                void* rbp_6 = &r15[rdx_52];\n                                if (r12_1 == 0x30)\n                                {\n                                    char* rdi_48 = r15;\n                                    r15 = rbp_6;\n                                    memset(rdi_48, 0x30, rdx_52);\n                                }\n                                else\n                                {\n                                    char* rdi_20 = r15;\n                                    r15 = rbp_6;\n                                    memset(rdi_20, 0x20, rdx_52);\n                                }\n                            }\n                            *r15 = 0xa;\n                            r15 = &r15[1];\n                        }\n                        break;\n                    }\n                    case 0x70:\n                    {\n                        r13_1 = 0;\n                        break;\n                    }\n                    case 0x74:\n                    {\n                        int32_t r13_11 = 0;\n                        if (rbp_1 >= 0)\n                        {\n                            r13_11 = rbp_1;\n                        }\n                        r13_10 = r13_11;\n                        if (r13_10 == 0)\n                        {\n                            r13_10 = 1;\n                        }\n                        if ((arg2 - r14) <= r13_10)\n                        {\n                            break;\n                        }\n                        if (r15 != 0)\n                        {\n                            if (rbp_1 > 1)\n                            {\n                                uint64_t rdx_63 = (rbp_1 - 1);\n                                void* rbp_8 = &r15[rdx_63];\n                                if (r12_1 == 0x30)\n                                {\n                                    char* rdi_49 = r15;\n                                    r15 = rbp_8;\n                                    memset(rdi_49, 0x30, rdx_63);\n                                }\n                                else\n                                {\n                                    char* rdi_23 = r15;\n                                    r15 = rbp_8;\n                                    memset(rdi_23, 0x20, rdx_63);\n                                }\n                            }\n                            *r15 = 9;\n                            r15 = &r15[1];\n                        }\n                        break;\n                    }\n                    case 0x7a:\n                    {\n                        r13_12 = 0;\n                        break;\n                    }\n                }\n                if ((rcx == 0x50 || rcx == 0x70))\n                {\n                    char temp6_1 = r8_1;\n                    bool cond:15_1 = temp6_1 != 0;\n                    rcx = 0x70;\n                    if (temp6_1 != 0)\n                    {\n                        r13_1 = r8_1;\n                    }\n                    if (cond:15_1)\n                    {\n                        r11_1 = 0;\n                    }\n                }\n                uint64_t rcx_12;\n                char* r9_12;\n                if (rcx == 0x25)\n                {\n                    if (r9 != 0)\n                    {\n                        r8 = rbx;\n                        r9_12 = rbx;\n                        rcx_12 = 1;\n                    }\n                    else\n                    {\n                        if (r13_10 >= rdx_83)\n                        {\n                            break;\n                        }\n                        if (r15 != 0)\n                        {\n                            if (rbp_1 > 1)\n                            {\n                                uint64_t rdx_96 = (rbp_1 - 1);\n                                void* rbp_9 = &r15[rdx_96];\n                                if (r12_1 == 0x30)\n                                {\n                                    char* rdi_51 = r15;\n                                    r15 = rbp_9;\n                                    memset(rdi_51, 0x30, rdx_96);\n                                    rcx = *rbx;\n                                }\n                                else\n                                {\n                                    char* rdi_36 = r15;\n                                    r15 = rbp_9;\n                                    memset(rdi_36, 0x20, rdx_96);\n                                    rcx = *rbx;\n                                }\n                            }\n                            *r15 = rcx;\n                            r15 = &r15[1];\n                        }\n                    }\n                }\n                int32_t rsi_19;\n                int32_t rdi_16;\n                int32_t r10_1;\n                if ((rcx == 0x59 && r9 != 0x45))\n                {\n                    if (r9 == 0x4f)\n                    {\n                        goto label_40fcc8;\n                    }\n                    var_498 = 0;\n                    r10_1 = 4;\n                    int32_t rsi_28 = arg4->tm_year;\n                    r8_1 = rsi_28 < 0xfffff894;\n                    rsi_19 = (rsi_28 + 0x76c);\n                    rdi_16 = 0;\n                }\n                if ((rcx == 0x43 && r9 != 0x45))\n                {\n                    var_498 = 0;\n                    r10_1 = 2;\n                    int32_t rdi_28 = arg4->tm_year;\n                    int32_t temp9_1;\n                    int32_t temp10_1;\n                    temp9_1 = HIGHW((rdi_28 * 0x51eb851f));\n                    temp10_1 = LOWW((rdi_28 * 0x51eb851f));\n                    int32_t rax_93 = ((temp9_1 >> 5) - (rdi_28 >> 0x1f));\n                    int32_t rdx_74;\n                    rdx_74 = (rax_93 + 0x13) > 0;\n                    r8_1 = rdi_28 < 0xfffff894;\n                    rsi_19 = ((rax_93 + 0x13) - (((rdi_28 - (rax_93 * 0x64)) >> 0x1f) & rdx_74));\n                    rdi_16 = 0;\n                }\n                if (((rcx == 0x6e || rcx == 0x74) || (rcx == 0x25 && r9 == 0)))\n                {\n                    r14 = (r14 + r13_10);\n                    r8 = rbx;\n                }\n                char var_488;\n                uint64_t var_478;\n                void var_441;\n                int128_t var_438;\n                int64_t rax_20;\n                uint64_t rcx_6;\n                char rcx_14;\n                char rcx_15;\n                int32_t rdx_69;\n                int32_t rdi_26;\n                int32_t r9_4;\n                uint64_t r9_6;\n                uint64_t r9_11;\n                void* r13_2;\n                switch (rcx)\n                {\n                    case 0:\n                    {\n                        r9_12 = &rbx[-1];\n                        rcx_14 = rbx[-1];\n                    label_40fe5b:\n                        int32_t rax_122 = 0;\n                        rdx_83 = (arg2 - r14);\n                        if (rbp_1 >= 0)\n                        {\n                            rax_122 = rbp_1;\n                        }\n                        rax_110 = rax_122;\n                        if (rcx_14 == 0x25)\n                        {\n                            r13_10 = 1;\n                            r8 = r9_12;\n                            rcx_12 = 1;\n                            if (rax_110 != 0)\n                            {\n                                r13_10 = rax_110;\n                            }\n                        }\n                        else\n                        {\n                            rbx = r9_12;\n                        label_40fcc8:\n                            void* rax_108 = &rbx[-1];\n                            int32_t rdx_81 = (rax_108 + 2);\n                            int32_t rcx_11;\n                            do\n                            {\n                                r9_12 = rax_108;\n                                rcx_11 = (rdx_81 - rax_108);\n                                rax_108 = (rax_108 - 1);\n                            } while (*(rax_108 + 1) != 0x25);\n                            int32_t rax_109 = 0;\n                            rcx_12 = rcx_11;\n                            r8 = rbx;\n                            rdx_83 = (arg2 - r14);\n                            if (rbp_1 >= 0)\n                            {\n                                rax_109 = rbp_1;\n                            }\n                            rax_110 = rax_109;\n                            r13_10 = rax_110;\n                            if (rcx_12 >= rax_110)\n                            {\n                                r13_10 = rcx_12;\n                            }\n                        }\n                        break;\n                    }\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 0xa:\n                    case 0xb:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x32:\n                    case 0x33:\n                    case 0x34:\n                    case 0x35:\n                    case 0x36:\n                    case 0x37:\n                    case 0x38:\n                    case 0x39:\n                    case 0x3b:\n                    case 0x3c:\n                    case 0x3d:\n                    case 0x3e:\n                    case 0x3f:\n                    case 0x40:\n                    case 0x45:\n                    case 0x4a:\n                    case 0x4b:\n                    case 0x4c:\n                    case 0x4f:\n                    case 0x51:\n                    case 0x5b:\n                    case 0x5c:\n                    case 0x5d:\n                    case 0x5e:\n                    case 0x5f:\n                    case 0x60:\n                    case 0x66:\n                    case 0x69:\n                    case 0x6f:\n                    case 0x76:\n                    {\n                        goto label_40fcc8;\n                    }\n                    case 0x3a:\n                    {\n                        char rax_134 = rbx[1];\n                        void* rdx_98 = &rbx[1];\n                        r13_12 = 1;\n                        if (rax_134 == 0x3a)\n                        {\n                            do\n                            {\n                                r13_12 = (r13_12 + 1);\n                                rax_134 = rbx[r13_12];\n                                rdx_98 = &rbx[r13_12];\n                            } while (rax_134 == 0x3a);\n                        }\n                        if (rax_134 != 0x7a)\n                        {\n                            goto label_40fcc8;\n                        }\n                        rbx = rdx_98;\n                        break;\n                    }\n                    case 0x41:\n                    case 0x42:\n                    case 0x61:\n                    {\n                        if (r9 != 0)\n                        {\n                            goto label_40fcc8;\n                        }\n                        if (r8_1 != 0)\n                        {\n                            r11_1 = r8_1;\n                        }\n                        break;\n                    }\n                    case 0x44:\n                    {\n                        if (r9 != 0)\n                        {\n                            goto label_40fcc8;\n                        }\n                        var_498 = \"%m/%d/%y\";\n                        break;\n                    }\n                    case 0x46:\n                    {\n                        if (r9 != 0)\n                        {\n                            goto label_40fcc8;\n                        }\n                        var_498 = \"%Y-%m-%d\";\n                        break;\n                    }\n                    case 0x47:\n                    case 0x56:\n                    case 0x67:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40fcc8;\n                        }\n                        int32_t rsi_6 = arg4->tm_year;\n                        int32_t r10_4 = arg4->tm_yday;\n                        int32_t r13_4 = arg4->tm_wday;\n                        var_498 = rsi_6;\n                        int32_t rdi_8 = ((rsi_6 + ((rsi_6 >> 0x1f) & 0x190)) - 0x64);\n                        int32_t temp4_1;\n                        int32_t temp5_1;\n                        temp4_1 = HIGHW((((r10_4 - r13_4) + 0x17e) * 0x92492493));\n                        temp5_1 = LOWW((((r10_4 - r13_4) + 0x17e) * 0x92492493));\n                        uint64_t rax_32 = (((temp4_1 + ((r10_4 - r13_4) + 0x17e)) >> 2) - (((r10_4 - r13_4) + 0x17e) >> 0x1f));\n                        r8_1 = (((r10_4 - ((r10_4 - r13_4) + 0x17e)) + ((rax_32 << 3) - rax_32)) + 3);\n                        int32_t r13_7;\n                        if (r8_1 < 0)\n                        {\n                            int32_t rsi_41 = (rdi_8 - 1);\n                            int32_t rdx_104 = 0x16d;\n                            if ((rsi_41 & 3) == 0)\n                            {\n                                int32_t temp21_1;\n                                int32_t temp22_1;\n                                temp21_1 = HIGHW((rsi_41 * 0x51eb851f));\n                                temp22_1 = LOWW((rsi_41 * 0x51eb851f));\n                                rdx_104 = 0x16e;\n                                if (rsi_41 == (((temp21_1 >> 5) - (rsi_41 >> 0x1f)) * 0x64))\n                                {\n                                    int32_t temp33_1;\n                                    int32_t temp34_1;\n                                    temp33_1 = HIGHW(rsi_41);\n                                    temp34_1 = LOWW(rsi_41);\n                                    int32_t temp1_1 = (COMBINE(temp33_1, temp34_1) % 0x190);\n                                    rdx_104 = ((!(temp1_1 - temp1_1)) + 0x16e);\n                                }\n                            }\n                            int32_t r10_10 = (r10_4 + rdx_104);\n                            r13_7 = -1;\n                            int32_t temp19_1;\n                            int32_t temp20_1;\n                            temp19_1 = HIGHW((((r10_10 - r13_4) + 0x17e) * 0x92492493));\n                            temp20_1 = LOWW((((r10_10 - r13_4) + 0x17e) * 0x92492493));\n                            uint64_t rax_157 = (((temp19_1 + ((r10_10 - r13_4) + 0x17e)) >> 2) - (((r10_10 - r13_4) + 0x17e) >> 0x1f));\n                            r8_1 = (((r10_10 - ((r10_10 - r13_4) + 0x17e)) + ((rax_157 << 3) - rax_157)) + 3);\n                        }\n                        else\n                        {\n                            int32_t rax_34 = 0x16d;\n                            if ((rdi_8 & 3) == 0)\n                            {\n                                int32_t temp25_1;\n                                int32_t temp26_1;\n                                temp25_1 = HIGHW((rdi_8 * 0x51eb851f));\n                                temp26_1 = LOWW((rdi_8 * 0x51eb851f));\n                                int32_t rax_37 = (rdi_8 >> 0x1f);\n                                var_488 = rax_37;\n                                rax_34 = 0x16e;\n                                if (rdi_8 == (((temp25_1 >> 5) - rax_37) * 0x64))\n                                {\n                                    int32_t rax_40;\n                                    rax_40 = rdi_8 == (((temp25_1 >> 7) - var_488) * 0x190);\n                                    rax_34 = (rax_40 + 0x16d);\n                                }\n                            }\n                            int32_t rsi_13 = (r10_4 - rax_34);\n                            int32_t temp23_1;\n                            int32_t temp24_1;\n                            temp23_1 = HIGHW((((rsi_13 - r13_4) + 0x17e) * 0x92492493));\n                            temp24_1 = LOWW((((rsi_13 - r13_4) + 0x17e) * 0x92492493));\n                            uint64_t rax_45 = (((temp23_1 + ((rsi_13 - r13_4) + 0x17e)) >> 2) - (((rsi_13 - r13_4) + 0x17e) >> 0x1f));\n                            uint32_t r13_5 = (((rsi_13 - ((rsi_13 - r13_4) + 0x17e)) + ((rax_45 << 3) - rax_45)) + 3);\n                            if (r13_5 >= 0)\n                            {\n                                r8_1 = r13_5;\n                            }\n                            r13_7 = ((r13_5 >> 0x1f) + 1);\n                        }\n                        if (rcx != 0x47)\n                        {\n                            if (rcx != 0x67)\n                            {\n                                r10_1 = 2;\n                                int32_t temp43_1;\n                                int32_t temp44_1;\n                                temp43_1 = HIGHW((r8_1 * 0x92492493));\n                                temp44_1 = LOWW((r8_1 * 0x92492493));\n                                rsi_19 = ((((temp43_1 + r8_1) >> 2) - (r8_1 >> 0x1f)) + 1);\n                            }\n                            else\n                            {\n                                int32_t r8_6 = var_498;\n                                r10_1 = 2;\n                                int32_t temp45_1;\n                                int32_t temp46_1;\n                                temp45_1 = HIGHW((var_498 * 0x51eb851f));\n                                temp46_1 = LOWW((var_498 * 0x51eb851f));\n                                int32_t rdi_14 = ((r8_6 - (((temp45_1 >> 5) - (r8_6 >> 0x1f)) * 0x64)) + r13_7);\n                                int32_t temp47_1;\n                                int32_t temp48_1;\n                                temp47_1 = HIGHW((rdi_14 * 0x51eb851f));\n                                temp48_1 = LOWW((rdi_14 * 0x51eb851f));\n                                int32_t rsi_18 = (((temp47_1 >> 5) - (rdi_14 >> 0x1f)) * 0x64);\n                                int32_t rdi_15 = (rdi_14 - rsi_18);\n                                rsi_19 = rdi_15;\n                                if ((rdi_14 - rsi_18) < 0)\n                                {\n                                    rsi_19 = (rsi_19 + 0x64);\n                                    int32_t rdx_45 = (-rdi_15);\n                                    if (r8_6 < (0xfffff894 - r13_7))\n                                    {\n                                        rsi_19 = rdx_45;\n                                    }\n                                }\n                            }\n                            goto label_40f612;\n                        }\n                        int32_t rsi_49 = var_498;\n                        var_498 = 0;\n                        r10_1 = 4;\n                        rsi_19 = ((rsi_49 + r13_7) + 0x76c);\n                        r8_1 = rsi_49 < (0xfffff894 - r13_7);\n                        rdi_16 = 0;\n                        break;\n                    }\n                    case 0x48:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40fcc8;\n                        }\n                        r10_1 = 2;\n                        rsi_19 = arg4->tm_hour;\n                        goto label_40f612;\n                    }\n                    case 0x49:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40fcc8;\n                        }\n                        rsi_19 = r11;\n                        r10_1 = 2;\n                        goto label_40f612;\n                    }\n                    case 0x4d:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40fcc8;\n                        }\n                        r10_1 = 2;\n                        rsi_19 = arg4->tm_min;\n                        goto label_40f612;\n                    }\n                    case 0x4e:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40fcc8;\n                        }\n                        if (rbp_1 == 0xffffffff)\n                        {\n                            rsi_19 = arg8;\n                            rbp_1 = 9;\n                            r10_1 = 9;\n                        }\n                        else\n                        {\n                            if (rbp_1 > 8)\n                            {\n                                rsi_19 = arg8;\n                            }\n                            else\n                            {\n                                rsi_19 = arg8;\n                                int32_t rdi_46 = rbp_1;\n                                do\n                                {\n                                    rdi_46 = (rdi_46 + 1);\n                                    int32_t temp39_1;\n                                    int32_t temp40_1;\n                                    temp39_1 = HIGHW((rsi_19 * 0x66666667));\n                                    temp40_1 = LOWW((rsi_19 * 0x66666667));\n                                    rsi_19 = ((temp39_1 >> 2) - (rsi_19 >> 0x1f));\n                                } while (rdi_46 != 9);\n                            }\n                            r10_1 = rbp_1;\n                        }\n                        goto label_40f612;\n                    }\n                    case 0x53:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40fcc8;\n                        }\n                        r10_1 = 2;\n                        rsi_19 = *arg4;\n                        goto label_40f612;\n                    }\n                    case 0x55:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40fcc8;\n                        }\n                        rdi_26 = ((arg4->tm_yday - arg4->tm_wday) + 7);\n                        int32_t temp7_1;\n                        int32_t temp8_1;\n                        temp7_1 = HIGHW((rdi_26 * 0x92492493));\n                        temp8_1 = LOWW((rdi_26 * 0x92492493));\n                        rdx_69 = temp7_1;\n                        break;\n                    }\n                    case 0x57:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40fcc8;\n                        }\n                        int32_t rax_98 = arg4->tm_wday;\n                        var_498 = rax_98;\n                        int32_t temp11_1;\n                        int32_t temp12_1;\n                        temp11_1 = HIGHW(((rax_98 + 6) * 0x92492493));\n                        temp12_1 = LOWW(((rax_98 + 6) * 0x92492493));\n                        uint64_t rax_102 = (((temp11_1 + (rax_98 + 6)) >> 2) - ((rax_98 + 6) >> 0x1f));\n                        rdi_26 = (((((rax_102 << 3) - rax_102) - (rax_98 + 6)) + arg4->tm_yday) + 7);\n                        int32_t temp13_1;\n                        int32_t temp14_1;\n                        temp13_1 = HIGHW((rdi_26 * 0x92492493));\n                        temp14_1 = LOWW((rdi_26 * 0x92492493));\n                        rdx_69 = temp13_1;\n                        break;\n                    }\n                    case 0x58:\n                    case 0x63:\n                    case 0x78:\n                    {\n                        if (r9 == 0x4f)\n                        {\n                            goto label_40fcc8;\n                        }\n                        break;\n                    }\n                    case 0x64:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40fcc8;\n                        }\n                        r10_1 = 2;\n                        rsi_19 = arg4->tm_mday;\n                        goto label_40f612;\n                    }\n                    case 0x65:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40fcc8;\n                        }\n                        rsi_19 = arg4->tm_mday;\n                        break;\n                    }\n                    case 0x6a:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40fcc8;\n                        }\n                        var_498 = 0;\n                        r10_1 = 3;\n                        int32_t rsi_36 = arg4->tm_yday;\n                        r8_1 = rsi_36 < 0xffffffff;\n                        rsi_19 = (rsi_36 + 1);\n                        rdi_16 = 0;\n                        break;\n                    }\n                    case 0x6b:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40fcc8;\n                        }\n                        rsi_19 = arg4->tm_hour;\n                        break;\n                    }\n                    case 0x6c:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40fcc8;\n                        }\n                        rsi_19 = r11;\n                        break;\n                    }\n                    case 0x6d:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40fcc8;\n                        }\n                        var_498 = 0;\n                        r10_1 = 2;\n                        int32_t rsi_22 = arg4->tm_mon;\n                        r8_1 = rsi_22 < 0xffffffff;\n                        rsi_19 = (rsi_22 + 1);\n                        rdi_16 = 0;\n                        break;\n                    }\n                    case 0x71:\n                    {\n                        r10_1 = 1;\n                        uint64_t rax_66 = arg4->tm_mon;\n                        if (r9 == 0x4f)\n                        {\n                            goto label_40f637;\n                        }\n                        var_498 = 0;\n                        r8_1 = 0;\n                        rdi_16 = 0;\n                        rsi_19 = (((rax_66 + ((rax_66 * 5) << 1)) >> 5) + 1);\n                    label_40f8e0:\n                        var_488 = r8_1;\n                        void* rcx_9 = &var_441;\n                        while (true)\n                        {\n                            r13_2 = (rcx_9 - 1);\n                            if ((rdi_16 & 1) != 0)\n                            {\n                                void* rax_67 = (rcx_9 - 2);\n                                *(rcx_9 - 1) = 0x3a;\n                                rcx_9 = r13_2;\n                                r13_2 = rax_67;\n                            }\n                            rdi_16 = (rdi_16 >> 1);\n                            int32_t temp41_1;\n                            int32_t temp42_1;\n                            temp41_1 = HIGHW((rsi_19 * 0xcccccccd));\n                            temp42_1 = LOWW((rsi_19 * 0xcccccccd));\n                            uint64_t rdx_55 = (temp41_1 >> 3);\n                            uint8_t rax_69 = (rdx_55 * 5);\n                            *(rcx_9 - 1) = ((rsi_19 - (rax_69 + rax_69)) + 0x30);\n                            rcx_9 = r13_2;\n                            if ((rsi_19 <= 9 && rdi_16 == 0))\n                            {\n                                break;\n                            }\n                            rsi_19 = rdx_55;\n                        }\n                        if (r10_1 < rbp_1)\n                        {\n                            r10_1 = rbp_1;\n                        }\n                        if (var_488 != 0)\n                        {\n                            goto label_410028;\n                        }\n                        if (var_498 == 0)\n                        {\n                            goto label_40f2d9;\n                        }\n                        if (r12_1 == 0x2d)\n                        {\n                            rcx_15 = 0x2b;\n                        label_41003e:\n                            int32_t r9_13 = 0;\n                            uint64_t r12_2 = 1;\n                            if (rbp_1 >= 0)\n                            {\n                                r9_13 = rbp_1;\n                            }\n                            r9_6 = r9_13;\n                            if (r9_6 != 0)\n                            {\n                                r12_2 = r9_6;\n                            }\n                            if ((arg2 - r14) <= r12_2)\n                            {\n                                break;\n                            }\n                            if (r15 != 0)\n                            {\n                                if ((r10_1 == 0 && r9_6 > 1))\n                                {\n                                    uint64_t var_470;\n                                    var_470 = rcx_15;\n                                    var_480 = r10_1;\n                                    memset(r15, 0x20, (rbp_1 - 1));\n                                    rcx_15 = var_470;\n                                    r10_1 = var_480;\n                                    r15 = &r15[(rbp_1 - 1)];\n                                }\n                                *r15 = rcx_15;\n                                r15 = &r15[1];\n                            }\n                            r14 = (r14 + r12_2);\n                            r8 = rbx;\n                            r12_1 = 0x2d;\n                            rcx_6 = (&var_441 - r13_2);\n                            rax_20 = (arg2 - r14);\n                            goto label_40f309;\n                        }\n                        var_498 = 0x2b;\n                    label_40f980:\n                        rcx_6 = (&var_441 - r13_2);\n                        r9_4 = ((r10_1 - 1) - rcx_6);\n                        rax_20 = (arg2 - r14);\n                        if (r9_4 <= 0)\n                        {\n                            int32_t r9_14 = 0;\n                            uint64_t r8_14 = 1;\n                            if (rbp_1 >= 0)\n                            {\n                                r9_14 = rbp_1;\n                            }\n                            r9_6 = r9_14;\n                            if (r9_6 != 0)\n                            {\n                                r8_14 = r9_6;\n                            }\n                            if (r8_14 >= rax_20)\n                            {\n                                break;\n                            }\n                            if (r15 != 0)\n                            {\n                                if ((r10_1 == 0 && r9_6 > 1))\n                                {\n                                    uint64_t rdx_101 = (rbp_1 - 1);\n                                    var_488 = &r15[rdx_101];\n                                    var_478 = r10_1;\n                                    if (r12_1 == 0x30)\n                                    {\n                                        memset(r15, 0x30, rdx_101);\n                                        r15 = var_488;\n                                        r10_1 = var_478;\n                                    }\n                                    else\n                                    {\n                                        memset(r15, 0x20, rdx_101);\n                                        r15 = var_488;\n                                        r10_1 = var_478;\n                                    }\n                                }\n                                r15 = &r15[1];\n                                r15[-1] = var_498;\n                            }\n                            r14 = (r14 + r8_14);\n                            r8 = rbx;\n                            rax_20 = (arg2 - r14);\n                            goto label_40f309;\n                        }\n                        if (r12_1 == 0x5f)\n                        {\n                            goto label_4101f3;\n                        }\n                        if (r10_1 >= rax_20)\n                        {\n                            break;\n                        }\n                        int32_t rdx_57 = 0;\n                        int64_t rsi_25 = 1;\n                        if (rbp_1 >= 0)\n                        {\n                            rdx_57 = rbp_1;\n                        }\n                        int64_t rdx_58 = rdx_57;\n                        if (rdx_58 != 0)\n                        {\n                            rsi_25 = rdx_58;\n                        }\n                        if (rsi_25 >= rax_20)\n                        {\n                            break;\n                        }\n                        r14 = (r14 + rsi_25);\n                        r9_11 = r9_4;\n                        r8 = rbx;\n                        if (r15 == 0)\n                        {\n                            goto label_40fa94;\n                        }\n                        if ((r10_1 == 0 && rdx_58 > 1))\n                        {\n                            uint64_t rdx_60 = (rbp_1 - 1);\n                            void* rbp_7 = &r15[rdx_60];\n                            var_480 = r10_1;\n                            if (r12_1 == 0x30)\n                            {\n                                char* rdi_53 = r15;\n                                r15 = rbp_7;\n                                memset(rdi_53, 0x30, rdx_60);\n                                r10_1 = var_480;\n                            }\n                            else\n                            {\n                                char* rdi_21 = r15;\n                                r15 = rbp_7;\n                                memset(rdi_21, 0x20, rdx_60);\n                                r10_1 = var_480;\n                            }\n                        }\n                        r15 = &r15[1];\n                        r8 = rbx;\n                        r15[-1] = var_498;\n                        break;\n                    }\n                    case 0x73:\n                    {\n                        r13_2 = &var_441;\n                        int128_t zmm4;\n                        zmm4 = arg4->tm_isdst;\n                        *zmm4[8] = arg4->tm_gmtoff;\n                        int128_t zmm0;\n                        zmm0 = arg4->tm_sec;\n                        *zmm0[4] = arg4->tm_min;\n                        *zmm0[8] = arg4->tm_hour;\n                        *zmm0[0xc] = arg4->tm_mday;\n                        int128_t zmm2;\n                        zmm2 = arg4->tm_mon;\n                        *zmm2[4] = arg4->tm_year;\n                        *zmm2[8] = arg4->tm_wday;\n                        *zmm2[0xc] = arg4->tm_yday;\n                        var_438 = zmm0;\n                        int128_t var_428_1 = zmm2;\n                        var_498 = zmm4;\n                        int128_t var_418_1 = zmm4;\n                        char const* var_408_1 = arg4->tm_zone;\n                        time_t rax_13 = sub_4177a0(arg7, &var_438);\n                        time_t rcx_4 = rax_13;\n                        do\n                        {\n                            int64_t rax_14;\n                            int64_t rdx_9;\n                            rdx_9 = HIGHD((0x6666666666666667 * rcx_4));\n                            rax_14 = LOWD((0x6666666666666667 * rcx_4));\n                            time_t rdx_11 = ((rdx_9 >> 2) - (rcx_4 >> 0x3f));\n                            char rdx_12 = (rdx_11 + (rdx_11 << 2));\n                            char rcx_5 = (rcx_4 - (rdx_12 + rdx_12));\n                            rcx_4 = rdx_11;\n                            char rax_18 = (0x30 - rcx_5);\n                            char rdx_15 = (rcx_5 + 0x30);\n                            if (rax_13 < 0)\n                            {\n                                rdx_15 = rax_18;\n                            }\n                            r13_2 = (r13_2 - 1);\n                            *r13_2 = rdx_15;\n                        } while (rcx_4 != 0);\n                        r10_1 = 1;\n                        if (rbp_1 > 0)\n                        {\n                            r10_1 = rbp_1;\n                        }\n                        if (rax_13 < 0)\n                        {\n                        label_410028:\n                            var_498 = 0x2d;\n                            rcx_15 = 0x2d;\n                            if (r12_1 != 0x2d)\n                            {\n                                goto label_40f980;\n                            }\n                            goto label_41003e;\n                        }\n                    label_40f2d9:\n                        rcx_6 = (&var_441 - r13_2);\n                        rax_20 = (arg2 - r14);\n                        if (r12_1 == 0x2d)\n                        {\n                        label_40f2f6:\n                            int32_t r9_5 = 0;\n                            r8 = rbx;\n                            if (rbp_1 >= 0)\n                            {\n                                r9_5 = rbp_1;\n                            }\n                            r9_6 = r9_5;\n                            goto label_40f309;\n                        }\n                        r9_4 = (r10_1 - rcx_6);\n                        if (r9_4 <= 0)\n                        {\n                            goto label_40f2f6;\n                        }\n                        if (r12_1 == 0x5f)\n                        {\n                            var_498 = 0;\n                        label_4101f3:\n                            uint64_t r12_3 = r9_4;\n                            if (r12_3 >= rax_20)\n                            {\n                                break;\n                            }\n                            if (r15 != 0)\n                            {\n                                char* rdi_41 = r15;\n                                var_478 = r9_4;\n                                var_480 = r10_1;\n                                r15 = &r15[r12_3];\n                                memset(rdi_41, 0x20, r12_3);\n                                r9_4 = var_478;\n                                r10_1 = var_480;\n                            }\n                            r14 = (r14 + r12_3);\n                            int32_t rax_142 = (rbp_1 - r9_4);\n                            bool cond:28_1 = r9_4 < rbp_1;\n                            rbp_1 = 0;\n                            if (cond:28_1)\n                            {\n                                rbp_1 = rax_142;\n                            }\n                            rax_20 = (arg2 - r14);\n                            if (var_498 == 0)\n                            {\n                                r9_6 = rbp_1;\n                                r8 = rbx;\n                                r12_1 = 0x5f;\n                                rcx_6 = (&var_441 - r13_2);\n                            }\n                            else\n                            {\n                                r9_6 = rbp_1;\n                                uint64_t rcx_16 = 1;\n                                if (r9_6 != 0)\n                                {\n                                    rcx_16 = r9_6;\n                                }\n                                if (rcx_16 >= rax_20)\n                                {\n                                    break;\n                                }\n                                if (r15 != 0)\n                                {\n                                    if ((r10_1 == 0 && r9_6 > 1))\n                                    {\n                                        char* rdi_44 = r15;\n                                        var_478 = r10_1;\n                                        r15 = &r15[(r9_6 - 1)];\n                                        var_488 = r9_6;\n                                        memset(rdi_44, 0x20, (r9_6 - 1));\n                                        r10_1 = var_478;\n                                        r9_6 = var_488;\n                                    }\n                                    r15 = &r15[1];\n                                    r15[-1] = var_498;\n                                }\n                                r14 = (r14 + rcx_16);\n                                r8 = rbx;\n                                r12_1 = 0x5f;\n                                rcx_6 = (&var_441 - r13_2);\n                                rax_20 = (arg2 - r14);\n                            }\n                            goto label_40f309;\n                        }\n                        if (r10_1 >= rax_20)\n                        {\n                            break;\n                        }\n                        r9_11 = r9_4;\n                        r8 = rbx;\n                        break;\n                    }\n                    case 0x75:\n                    {\n                        r10_1 = 1;\n                        int32_t rax_79 = arg4->tm_wday;\n                        var_498 = rax_79;\n                        int32_t temp2_1;\n                        int32_t temp3_1;\n                        temp2_1 = HIGHW(((rax_79 + 6) * 0x92492493));\n                        temp3_1 = LOWW(((rax_79 + 6) * 0x92492493));\n                        uint64_t rax_83 = (((temp2_1 + (rax_79 + 6)) >> 2) - ((rax_79 + 6) >> 0x1f));\n                        rsi_19 = (((rax_79 + 6) - ((rax_83 << 3) - rax_83)) + 1);\n                    label_40f612:\n                        var_498 = 0;\n                        rdi_16 = 0;\n                        r8_1 = (rsi_19 >> 0x1f);\n                        break;\n                    }\n                    case 0x77:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40fcc8;\n                        }\n                        r10_1 = 1;\n                        rsi_19 = arg4->tm_wday;\n                        goto label_40f612;\n                    }\n                    case 0x79:\n                    {\n                        if (r9 != 0x45)\n                        {\n                            r10_1 = 2;\n                            int32_t rdi_37 = arg4->tm_year;\n                            int32_t temp15_1;\n                            int32_t temp16_1;\n                            temp15_1 = HIGHW((rdi_37 * 0x51eb851f));\n                            temp16_1 = LOWW((rdi_37 * 0x51eb851f));\n                            int32_t rsi_40 = (((temp15_1 >> 5) - (rdi_37 >> 0x1f)) * 0x64);\n                            int32_t rax_132 = (rdi_37 - rsi_40);\n                            rsi_19 = rax_132;\n                            if ((rdi_37 - rsi_40) < 0)\n                            {\n                                int32_t rax_133 = (-rax_132);\n                                rsi_19 = (rsi_19 + 0x64);\n                                if (rdi_37 <= 0xfffff893)\n                                {\n                                    rsi_19 = rax_133;\n                                }\n                            }\n                            goto label_40f612;\n                        }\n                        break;\n                    }\n                }\n                switch (rcx)\n                {\n                    case 0x44:\n                    case 0x46:\n                    case 0x52:\n                    case 0x54:\n                    {\n                        uint32_t r13_3 = r11_1;\n                        int64_t r10_2 = sub_40ee80(0, -1, var_498, arg4, r13_3, arg6, arg7, arg8, arg2, arg4, var_4b8_1, arg6, r12);\n                        int32_t rax_23 = 0;\n                        if (rbp_1 >= 0)\n                        {\n                            rax_23 = rbp_1;\n                        }\n                        int64_t rax_24 = rax_23;\n                        int64_t rsi_4 = rax_24;\n                        if (r10_2 >= rax_24)\n                        {\n                            rsi_4 = r10_2;\n                        }\n                        int64_t r11_3 = (arg2 - r14);\n                        var_488 = rsi_4;\n                        if (r11_3 <= rsi_4)\n                        {\n                            break;\n                        }\n                        if (r15 != 0)\n                        {\n                            if (r10_2 < rax_24)\n                            {\n                                uint64_t rdx_20 = (rbp_1 - r10_2);\n                                var_480 = r11_3;\n                                void* rbp_4 = &r15[rdx_20];\n                                if (r12_1 == 0x30)\n                                {\n                                    char* rdi_45 = r15;\n                                    r15 = rbp_4;\n                                    memset(rdi_45, 0x30, rdx_20);\n                                    r11_3 = var_480;\n                                }\n                                else\n                                {\n                                    char* rdi_6 = r15;\n                                    r15 = rbp_4;\n                                    memset(rdi_6, 0x20, rdx_20);\n                                    r11_3 = var_480;\n                                }\n                            }\n                            var_480 = r10_2;\n                            sub_40ee80(r15, r11_3, var_498, arg4, r13_3, arg6, arg7, arg8);\n                            r15 = &r15[var_480];\n                        }\n                        r14 = (r14 + var_488);\n                        r8 = rbx;\n                        break;\n                    }\n                    case 0x55:\n                    case 0x57:\n                    {\n                        r10_1 = 2;\n                        rsi_19 = (((rdx_69 + rdi_26) >> 2) - (rdi_26 >> 0x1f));\n                        goto label_40f612;\n                    }\n                    case 0x58:\n                    case 0x63:\n                    case 0x72:\n                    case 0x78:\n                    {\n                        r13_1 = 0;\n                        break;\n                    }\n                    case 0x65:\n                    case 0x6b:\n                    case 0x6c:\n                    {\n                        r10_1 = 2;\n                        if ((r12_1 != 0x30 && r12_1 != 0x2d))\n                        {\n                            r12_1 = 0x5f;\n                        }\n                        goto label_40f612;\n                    }\n                }\n                int16_t var_458;\n                if ((((((rcx == 0x50 || rcx == 0x58) || rcx == 0x63) || rcx == 0x70) || rcx == 0x72) || rcx == 0x78))\n                {\n                    var_458 = 0x2520;\n                }\n                uint64_t rdx_8;\n                uint64_t rbx_1;\n                void* rsi_1;\n                char* rdi_3;\n                if ((rcx == 0x73 || rcx == 0x71))\n                {\n                    if (r15 == 0)\n                    {\n                        goto label_40fa94;\n                    }\n                    var_478 = r10_1;\n                    var_480 = r8;\n                    memset(r15, 0x30, r9_11);\n                    r10_1 = var_478;\n                    r8 = var_480;\n                    r15 = &r15[r9_11];\n                label_40fa94:\n                    r14 = (r14 + r9_11);\n                    rbp_1 = 0;\n                    r9_6 = 0;\n                    rax_20 = (arg2 - r14);\n                label_40f309:\n                    rbx_1 = r9_6;\n                    if (rcx_6 >= r9_6)\n                    {\n                        rbx_1 = rcx_6;\n                    }\n                    if (rbx_1 >= rax_20)\n                    {\n                        break;\n                    }\n                    if (r15 == 0)\n                    {\n                        goto label_40f1c6;\n                    }\n                    if ((r10_1 == 0 && rcx_6 < r9_6))\n                    {\n                        var_480 = rcx_6;\n                        uint64_t rdx_17 = (rbp_1 - rcx_6);\n                        var_488 = r8;\n                        void* rbp_3 = &r15[rdx_17];\n                        var_498 = r11_1;\n                        if (r12_1 == 0x30)\n                        {\n                            char* rdi_42 = r15;\n                            r15 = rbp_3;\n                            memset(rdi_42, 0x30, rdx_17);\n                            r11_1 = var_498;\n                            r8 = var_488;\n                            rcx_6 = var_480;\n                        }\n                        else\n                        {\n                            char* rdi_5 = r15;\n                            r15 = rbp_3;\n                            memset(rdi_5, 0x20, rdx_17);\n                            rcx_6 = var_480;\n                            r8 = var_488;\n                            r11_1 = var_498;\n                        }\n                    }\n                    var_488 = r8;\n                    rdx_8 = rcx_6;\n                    rsi_1 = r13_2;\n                    rdi_3 = r15;\n                    var_498 = rcx_6;\n                }\n                if (((rcx == 0x25 && r9 != 0) || rcx == 0))\n                {\n                    if (rdx_83 <= r13_10)\n                    {\n                        break;\n                    }\n                    if (r15 != 0)\n                    {\n                        if (rcx_12 < rax_110)\n                        {\n                            uint64_t rdx_85 = (rbp_1 - rcx_12);\n                            var_480 = r8;\n                            void* rbx_2 = &r15[rdx_85];\n                            var_488 = r9_12;\n                            var_498 = r11_1;\n                            if (r12_1 == 0x30)\n                            {\n                                char* rdi_43 = r15;\n                                r15 = rbx_2;\n                                memset(rdi_43, 0x30, rdx_85);\n                                r11_1 = var_498;\n                                r9_12 = var_488;\n                                r8 = var_480;\n                            }\n                            else\n                            {\n                                char* rdi_30 = r15;\n                                r15 = rbx_2;\n                                memset(rdi_30, 0x20, rdx_85);\n                                r8 = var_480;\n                                r9_12 = var_488;\n                                r11_1 = var_498;\n                            }\n                        }\n                        var_488 = r8;\n                        char* rdi_31 = r15;\n                        uint64_t rcx_13;\n                        if (r11_1 == 0)\n                        {\n                            memcpy(rdi_31, r9_12, rcx_12);\n                            r8 = var_488;\n                            rcx_13 = rcx_12;\n                        }\n                        else\n                        {\n                            sub_40ee30(rdi_31, r9_12, rcx_12);\n                            rcx_13 = rcx_12;\n                            r8 = var_488;\n                        }\n                        r15 = &r15[rcx_13];\n                    }\n                    r14 = (r14 + r13_10);\n                }\n                if ((rcx == 0x7a || rcx == 0x3a))\n                {\n                    if (arg4->tm_isdst < 0)\n                    {\n                        r8 = rbx;\n                    }\n                    else\n                    {\n                        int32_t rsi_34 = arg4->tm_gmtoff;\n                        r8_1 = 1;\n                        bool cond:19_1 = rsi_34 != 0;\n                        if (rsi_34 >= 0)\n                        {\n                            r8_1 = 0;\n                            if ((!cond:19_1))\n                            {\n                                r8_1 = *r12 == 0x2d;\n                            }\n                        }\n                        int32_t temp27_1;\n                        int32_t temp28_1;\n                        temp27_1 = HIGHW((rsi_34 * 0x91a2b3c5));\n                        temp28_1 = LOWW((rsi_34 * 0x91a2b3c5));\n                        int32_t rax_115 = (rsi_34 >> 0x1f);\n                        var_488 = rax_115;\n                        var_498 = (((temp27_1 + rsi_34) >> 0xb) - rax_115);\n                        int32_t temp29_1;\n                        int32_t temp30_1;\n                        temp29_1 = HIGHW((rsi_34 * 0x88888889));\n                        temp30_1 = LOWW((rsi_34 * 0x88888889));\n                        int32_t r10_8 = (((temp29_1 + rsi_34) >> 5) - var_488);\n                        int32_t temp31_1;\n                        int32_t temp32_1;\n                        temp31_1 = HIGHW((r10_8 * 0x88888889));\n                        temp32_1 = LOWW((r10_8 * 0x88888889));\n                        int32_t rax_121 = (r10_8 - ((((temp31_1 + r10_8) >> 5) - (r10_8 >> 0x1f)) * 0x3c));\n                        rdi_16 = rax_121;\n                        int32_t rsi_35 = (rsi_34 - (r10_8 * 0x3c));\n                        if (r13_12 == 0)\n                        {\n                            int32_t rsi_51 = (var_498 * 0x64);\n                            rdi_16 = 0;\n                            var_498 = 1;\n                            r10_1 = 5;\n                            rsi_19 = (rsi_51 + rax_121);\n                        }\n                        if ((r13_12 == 2 || (r13_12 == 3 && rsi_35 != 0)))\n                        {\n                            int32_t rax_163 = (var_498 * 0x2710);\n                            r10_1 = 9;\n                            var_498 = 1;\n                            int32_t rax_164 = (rax_163 + (rdi_16 * 0x64));\n                            rdi_16 = 0x14;\n                            rsi_19 = (rsi_35 + rax_164);\n                        }\n                        if ((r13_12 == 1 || ((r13_12 == 3 && rsi_35 == 0) && rax_121 != 0)))\n                        {\n                            int32_t rsi_50 = (var_498 * 0x64);\n                            r10_1 = 6;\n                            var_498 = 1;\n                            rsi_19 = (rsi_50 + rdi_16);\n                            rdi_16 = 4;\n                        }\n                        if (((r13_12 == 3 && rsi_35 == 0) && rax_121 == 0))\n                        {\n                            rsi_19 = var_498;\n                            r10_1 = 3;\n                            var_498 = 1;\n                        }\n                        if ((((r13_12 != 1 && r13_12 != 0) && r13_12 != 2) && r13_12 != 3))\n                        {\n                            rcx_14 = *rbx;\n                            r9_12 = rbx;\n                            goto label_40fe5b;\n                        }\n                    }\n                }\n                char* rax_7;\n                uint64_t rax_8;\n                char* r8_2;\n                if (((((((rcx == 0x72 || rcx == 0x58) || rcx == 0x63) || rcx == 0x78) || rcx == 0x50) || rcx == 0x70) && r9 == 0))\n                {\n                    r8_2 = rbx;\n                    rax_7 = var_4b8_1;\n                label_40f0c0:\n                    *rax_7 = rcx;\n                    rax_7[1] = 0;\n                    var_480 = r9;\n                    rax_8 = strftime(&var_438, 0x400, &var_458, arg4);\n                    r8 = r8_2;\n                    if (rax_8 != 0)\n                    {\n                        uint64_t rcx_2 = (rax_8 - 1);\n                        int32_t rax_9 = 0;\n                        if (rbp_1 >= 0)\n                        {\n                            rax_9 = rbp_1;\n                        }\n                        uint64_t rax_10 = rax_9;\n                        rbx_1 = rax_10;\n                        if (rcx_2 >= rax_10)\n                        {\n                            rbx_1 = rcx_2;\n                        }\n                        if ((arg2 - r14) <= rbx_1)\n                        {\n                            break;\n                        }\n                        if (((arg2 - r14) > rbx_1 && r15 != 0))\n                        {\n                            if ((var_480 == 0 && rcx_2 < rax_10))\n                            {\n                                var_480 = rcx_2;\n                                uint64_t rdx_7 = (rbp_1 - rcx_2);\n                                var_488 = r8;\n                                void* rbp_2 = &r15[rdx_7];\n                                var_498 = r11_1;\n                                if (r12_1 == 0x30)\n                                {\n                                    char* rdi_39 = r15;\n                                    r15 = rbp_2;\n                                    memset(rdi_39, 0x30, rdx_7);\n                                    r11_1 = var_498;\n                                    r8 = var_488;\n                                    rcx_2 = var_480;\n                                }\n                                else\n                                {\n                                    char* rdi_2 = r15;\n                                    r15 = rbp_2;\n                                    memset(rdi_2, 0x20, rdx_7);\n                                    rcx_2 = var_480;\n                                    r8 = var_488;\n                                    r11_1 = var_498;\n                                }\n                            }\n                            var_488 = r8;\n                            rsi_1 = &*var_438[1];\n                            rdx_8 = rcx_2;\n                            rdi_3 = r15;\n                            var_498 = rcx_2;\n                        }\n                    }\n                }\n                uint64_t rcx_3;\n                if ((((((((((((rcx == 0x72 || rcx == 0x58) || rcx == 0x63) || rcx == 0x78) || rcx == 0x50) || rcx == 0x70) && r9 == 0) && rax_8 != 0) && (arg2 - r14) > rbx_1) && r15 != 0) && r13_1 == 0) || ((rcx == 0x73 || rcx == 0x71) && r15 != 0)))\n                {\n                    if (r11_1 == 0)\n                    {\n                        memcpy(rdi_3, rsi_1, rdx_8);\n                        r8 = var_488;\n                        rcx_3 = var_498;\n                        goto label_40f1c3;\n                    }\n                    sub_40ee30(rdi_3, rsi_1, rdx_8);\n                    rcx_3 = var_498;\n                    r8 = var_488;\n                    goto label_40f1c3;\n                }\n                if ((((((rcx == 0x72 || rcx == 0x58) || rcx == 0x63) || rcx == 0x78) || rcx == 0x50) || rcx == 0x70))\n                {\n                    if (r9 != 0)\n                    {\n                        r10_1 = 0;\n                    label_40f63f:\n                        var_456 = r9;\n                        r8_2 = rbx;\n                        r9 = r10_1;\n                        void var_455;\n                        rax_7 = &var_455;\n                        goto label_40f0c0;\n                    }\n                    if ((rax_8 != 0 && (arg2 - r14) > rbx_1))\n                    {\n                        if ((r15 != 0 && r13_1 != 0))\n                        {\n                            sub_40ede0(rdi_3, rsi_1, rdx_8);\n                            rcx_3 = var_498;\n                            r8 = var_488;\n                        label_40f1c3:\n                            r15 = &r15[rcx_3];\n                        label_40f1c6:\n                            r14 = (r14 + rbx_1);\n                        }\n                        if (r15 == 0)\n                        {\n                            goto label_40f1c6;\n                        }\n                    }\n                }\n                if (((((((((((rcx == 0x43 && r9 != 0x45) || rcx == 0x75) || ((rcx == 0x7a || rcx == 0x3a) && arg4->tm_isdst >= 0)) || rcx == 0x47) || rcx == 0x56) || rcx == 0x67) || rcx == 0x6d) || rcx == 0x6a) && r9 != 0x4f) || (rcx == 0x59 && r9 != 0x45)))\n                {\n                    if (r8_1 == 0)\n                    {\n                        goto label_40f8e0;\n                    }\n                    goto label_40fb99;\n                }\n                if ((((((((((rcx == 0x43 && r9 != 0x45) || rcx == 0x75) || ((rcx == 0x7a || rcx == 0x3a) && arg4->tm_isdst >= 0)) || rcx == 0x47) || rcx == 0x56) || rcx == 0x67) || rcx == 0x6d) || rcx == 0x6a) && r9 == 0x4f))\n                {\n                    if (r8_1 == 0)\n                    {\n                        goto label_40f637;\n                    }\n                label_40fb99:\n                    rsi_19 = (-rsi_19);\n                    goto label_40f8e0;\n                }\n                if ((((rcx == 0x59 && r9 == 0x45) || (rcx == 0x43 && r9 == 0x45)) || rcx == 0x79))\n                {\n                    r10_1 = 0;\n                label_40f637:\n                    r13_1 = 0;\n                    var_458 = 0x2520;\n                    goto label_40f63f;\n                }\n                if ((rcx == 0x62 || rcx == 0x68))\n                {\n                    if (r8_1 != 0)\n                    {\n                        r11_1 = r8_1;\n                    }\n                    if (r9 != 0)\n                    {\n                        goto label_40fcc8;\n                    }\n                }\n                if (((((rcx == 0x41 || rcx == 0x42) || rcx == 0x61) || rcx == 0x62) || rcx == 0x68))\n                {\n                    rax_7 = var_4b8_1;\n                    r8_2 = rbx;\n                    r13_1 = 0;\n                    var_458 = 0x2520;\n                    r9 = 0;\n                    goto label_40f0c0;\n                }\n            }\n            else\n            {\n                if ((arg2 - r14) <= 1)\n                {\n                    break;\n                }\n                if (r15 != 0)\n                {\n                    *r15 = rax;\n                    r15 = &r15[1];\n                }\n                r14 = (r14 + 1);\n                r8 = rbx;\n            }\n            rax = r8[1];\n            rbx = &r8[1];\n        } while (rax != 0);\n        if ((rax != 0x25 && (arg2 - r14) <= 1))\n        {\n            r14 = 0;\n        }\n    }\n    if ((((rax == 0 || (rax != 0 && (!(rax != 0x25 && (arg2 - r14) <= 1)))) && r15 != 0) && arg2 != 0))\n    {\n        *r15 = 0;\n    }\n    return r14;\n}\n\n"
        },
        {
            "funcName": "sub_410650",
            "funcStartAddr": "0x410650",
            "funcEndAddr": "0x41066f",
            "decompiledFuncCode": "int64_t sub_410650(char* arg1, int64_t arg2, char* arg3, struct tm* arg4, \n    int64_t** arg5, int32_t arg6)\n{\n    char var_9 = 0;\n    return sub_40ee80(arg1, arg2, arg3, arg4, 0, &var_9, arg5, arg6);\n}\n\n"
        },
        {
            "funcName": "sub_410670",
            "funcStartAddr": "0x410670",
            "funcEndAddr": "0x410709",
            "decompiledFuncCode": "char* sub_410670(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_41dd18;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_6257c0 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_410710",
            "funcStartAddr": "0x410710",
            "funcEndAddr": "0x410802",
            "decompiledFuncCode": "char* sub_410710(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_4179a0();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_4107f1:\n                void* const rbx_1 = &data_41dd1c;\n                if (arg2 != 9)\n                {\n                    rbx_1 = &data_41f1aa;\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_4107f1;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_4107f1;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_4107f1;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_4107f1;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_4107f1;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_4107f1;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_4107f1;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_41dd25;\n            if (cond:2_1)\n            {\n                rbx = &data_41dd22;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_4107f1;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_4107f1;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_4107f1;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_4107f1;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_4107f1;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_41dd29;\n            if (cond:1_1)\n            {\n                rbx = &data_41dd1e;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_410810",
            "funcStartAddr": "0x402e64",
            "funcEndAddr": "0x411a31",
            "decompiledFuncCode": "int64_t sub_410810(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    void* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = &data_41f1aa;\n    label_4108a8:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_410c1c:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_410c64;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_410810(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_410c7b;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_410db5;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_410a05;\n                            }\n                            goto label_410cf0;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_410db5;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_410be0;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_410be0:\n                            if (var_c0 == 0)\n                            {\n                                goto label_410beb;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_410a47:\n                            if (var_5c == 0)\n                            {\n                                goto label_410a58;\n                            }\n                        label_410c10:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_410c18;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_410e4b;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_410e4b:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_410e5a:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_410c1c;\n                            }\n                            goto label_410be0;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_410be0;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_410be0;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_410e4b;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_4109e6;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_4109e6:\n                            if (var_5c == 0)\n                            {\n                                goto label_410a05;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_410a05;\n                            }\n                            goto label_410e5a;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_4109dd:\n                            if (r12_1 != 0)\n                            {\n                                goto label_410beb;\n                            }\n                            goto label_4109e6;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_410e10:\n                            rdx = r11_1 == 2;\n                        label_410a05:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_410b0c;\n                            }\n                            goto label_410a0f;\n                        }\n                        case 0x27:\n                        {\n                            goto label_410b8d;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_410b5d;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_410bba;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_41194d;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_410b24;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_4109b9;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_410fb0;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_410fb0;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_411900:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_410c64:\n                            rbx_1 = sub_410810(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_410c7b:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_410db5;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_410d07;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_410db5;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_410cd0:\n                                r13 = 0;\n                                goto label_410a8b;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_410a58:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_410a8b:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_410a95;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_410a95:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_410a9d;\n                            }\n                            case 9:\n                            {\n                                goto label_410c80;\n                            }\n                            case 0xa:\n                            {\n                                goto label_410bf8;\n                            }\n                            case 0xb:\n                            {\n                                goto label_410ce0;\n                            }\n                            case 0xc:\n                            {\n                                goto label_410cc0;\n                            }\n                            case 0xd:\n                            {\n                                goto label_410ca9;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_41100a;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_410c95;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_410fea;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_410fd2;\n                            }\n                            case 0x27:\n                            {\n                                goto label_410b8d;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_410b5d;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_410bba;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_4109b9;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_410fb0:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_410db0:\n                            var_b8 = 0;\n                        label_410db5:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_410e04:\n                                if (rdx == 0)\n                                {\n                                    goto label_410e10;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_411301:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_410b24;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_410c1c;\n                                }\n                                r13 = var_98;\n                                goto label_410a9d;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_416e80(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_410c1c;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_411301;\n                            }\n                            goto label_410e04;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_410cf0:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_410c1c;\n                                }\n                                var_b8 = 0;\n                            label_410d07:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_410d52;\n                                    }\n                                    rax_8 = r10;\n                                label_410d4a:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_410d52:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_410b0c;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_410d93;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_410d4a;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_410b0c;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_410db0;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_410cc5;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_410bfd;\n                            }\n                            case 9:\n                            {\n                            label_410c80:\n                                rbp_3 = 0x74;\n                                goto label_410bfd;\n                            }\n                            case 0xa:\n                            {\n                            label_410bf8:\n                                rbp_3 = 0x6e;\n                            label_410bfd:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_410c10;\n                                }\n                                goto label_410a58;\n                            }\n                            case 0xb:\n                            {\n                            label_410ce0:\n                                rbp_3 = 0x76;\n                                goto label_410cc5;\n                            }\n                            case 0xc:\n                            {\n                            label_410cc0:\n                                rbp_3 = 0x66;\n                            label_410cc5:\n                                if (var_5c == 0)\n                                {\n                                    goto label_410cd0;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_410c18:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_410c1c;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_410ca9:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_410be0;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_41100a:\n                                rbp_3 = 0x20;\n                                goto label_410fd2;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_410c95:\n                                rdx = 0;\n                            label_410beb:\n                                r13 = 0;\n                                goto label_410a05;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_410fea:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_410a05;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_410a0f:\n                                rax_8 = 0;\n                                goto label_410a11;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_410fd2:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_410a11;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_410b8d:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_410a05;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_41194d;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_410b0c;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_410b5d:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_41194d:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_410c1c;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_410b0c:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_410a47;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_410b24;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_410a05;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_4110f0:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_410a05;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_4110f0;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_4110f0;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_4110f0;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_4110f0;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_411900;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_410d93:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_410b0c;\n                                }\n                            label_410a11:\n                                if (arg7 == 0)\n                                {\n                                    goto label_410b0c;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_410b0c;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_410a47;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_410bba:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_410be0;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_410b24:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_410a9d;\n                                }\n                            label_410a9d:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_410aa6;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_410aa6:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_4109b9:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_410beb;\n                                }\n                                goto label_4109dd;\n                            }\n                        }\n                    }\n                }\n            }\n        label_411096:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = &data_41f1aa;\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_4108a8;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = &data_41f1aa;\n                goto label_4108a8;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_41f1aa;\n            goto label_4108a8;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_41dd1c;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_41dd1c;\n            }\n            goto label_4108a8;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_41dd1c;\n            goto label_4108a8;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_4108a8;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_410710(&data_41dd2d, r13);\n                arg9 = sub_410710(&data_41f1aa, r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_4108a8;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_411096;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = &data_41f1aa;\n        goto label_4108a8;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_411a40",
            "funcStartAddr": "0x402e69",
            "funcEndAddr": "0x411bde",
            "decompiledFuncCode": "char* sub_411a40(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_624618;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_624630 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_412bd0();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x624620)\n        {\n            int64_t rax_9 = sub_4129e0(0, rsi_1);\n            int128_t zmm0 = data_624620;\n            rbx = rax_9;\n            data_624618 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_4129e0(rbx, rsi_1);\n            data_624618 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_624630;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_624630 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_410810(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        size_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x6257e0)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_412980(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_410810(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_411be0",
            "funcStartAddr": "0x411be0",
            "funcEndAddr": "0x411c14",
            "decompiledFuncCode": "int64_t sub_411be0(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x6258e0;\n    }\n    int64_t rax_1 = sub_412b80(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_411c20",
            "funcStartAddr": "0x411c20",
            "funcEndAddr": "0x411c2f",
            "decompiledFuncCode": "uint64_t sub_411c20(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6258e0;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_411c30",
            "funcStartAddr": "0x411c30",
            "funcEndAddr": "0x411c3f",
            "decompiledFuncCode": "void sub_411c30(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6258e0;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_411c40",
            "funcStartAddr": "0x411c40",
            "funcEndAddr": "0x411c73",
            "decompiledFuncCode": "uint64_t sub_411c40(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x6258e0;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_411c80",
            "funcStartAddr": "0x411c80",
            "funcEndAddr": "0x411c93",
            "decompiledFuncCode": "uint64_t sub_411c80(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6258e0;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_411ca0",
            "funcStartAddr": "0x411ca0",
            "funcEndAddr": "0x411ccb",
            "decompiledFuncCode": "void sub_411ca0(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6258e0;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x6258e0;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_411cd0",
            "funcStartAddr": "0x411cd0",
            "funcEndAddr": "0x411d42",
            "decompiledFuncCode": "int64_t sub_411cd0(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_6258e0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_410810(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_411d50",
            "funcStartAddr": "0x411d50",
            "funcEndAddr": "0x411e31",
            "decompiledFuncCode": "char* sub_411d50(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_6258e0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_410810(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_412980((rax_2 + 1));\n    sub_410810(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_411e40",
            "funcStartAddr": "0x411e40",
            "funcEndAddr": "0x411e4a",
            "decompiledFuncCode": "int64_t sub_411e40(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_411d50(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_411e50",
            "funcStartAddr": "0x411e50",
            "funcEndAddr": "0x411ee5",
            "decompiledFuncCode": "uint64_t sub_411e50()\n{\n    uint64_t rax_2 = data_624630;\n    int64_t r12 = data_624618;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x6257e0)\n    {\n        rax_2 = free(rdi_2);\n        *data_624620 = 0x100;\n        *(data_624620 + 8) = 0x6257e0;\n    }\n    if (r12 != 0x624620)\n    {\n        rax_2 = free(r12);\n        data_624618 = 0x624620;\n    }\n    data_624630 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_411ef0",
            "funcStartAddr": "0x411ef0",
            "funcEndAddr": "0x411f01",
            "decompiledFuncCode": "int64_t sub_411ef0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_411a40(arg1, arg2, -1, &data_6258e0);\n}\n\n"
        },
        {
            "funcName": "sub_411f10",
            "funcStartAddr": "0x411f10",
            "funcEndAddr": "0x411f1a",
            "decompiledFuncCode": "int64_t sub_411f10(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_411a40(arg1, arg2, arg3, &data_6258e0);\n}\n\n"
        },
        {
            "funcName": "sub_411f20",
            "funcStartAddr": "0x411f20",
            "funcEndAddr": "0x411f36",
            "decompiledFuncCode": "int64_t sub_411f20(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_411a40(0, arg1, -1, &data_6258e0);\n}\n\n"
        },
        {
            "funcName": "sub_411f40",
            "funcStartAddr": "0x411f40",
            "funcEndAddr": "0x411f52",
            "decompiledFuncCode": "int64_t sub_411f40(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_411a40(0, arg1, arg2, &data_6258e0);\n}\n\n"
        },
        {
            "funcName": "sub_411f60",
            "funcStartAddr": "0x402e6e",
            "funcEndAddr": "0x411fc8",
            "decompiledFuncCode": "char* sub_411f60(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_411a40(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_411fd0",
            "funcStartAddr": "0x402e73",
            "funcEndAddr": "0x412034",
            "decompiledFuncCode": "char* sub_411fd0(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_411a40(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_412040",
            "funcStartAddr": "0x412040",
            "funcEndAddr": "0x41204c",
            "decompiledFuncCode": "int64_t sub_412040(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_411f60(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_412050",
            "funcStartAddr": "0x412050",
            "funcEndAddr": "0x41205f",
            "decompiledFuncCode": "int64_t sub_412050(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_411fd0(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_412060",
            "funcStartAddr": "0x412060",
            "funcEndAddr": "0x4120d0",
            "decompiledFuncCode": "char* sub_412060(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_625910;\n    int128_t var_48 = data_6258e0;\n    int128_t var_38 = data_6258f0;\n    int128_t var_28 = data_625900;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_411a40(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_4120d0",
            "funcStartAddr": "0x4120d0",
            "funcEndAddr": "0x4120dd",
            "decompiledFuncCode": "int64_t sub_4120d0(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_412060(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4120e0",
            "funcStartAddr": "0x4120e0",
            "funcEndAddr": "0x4120f1",
            "decompiledFuncCode": "int64_t sub_4120e0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_412060(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_412100",
            "funcStartAddr": "0x412100",
            "funcEndAddr": "0x41210a",
            "decompiledFuncCode": "int64_t sub_412100(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_412060(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_412110",
            "funcStartAddr": "0x402e78",
            "funcEndAddr": "0x41217e",
            "decompiledFuncCode": "char* sub_412110(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_411a40(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_412180",
            "funcStartAddr": "0x412180",
            "funcEndAddr": "0x4121ec",
            "decompiledFuncCode": "char* sub_412180(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_6258e0;\n    int128_t var_38 = data_6258f0;\n    int128_t var_28 = data_625900;\n    int64_t var_18 = data_625910;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_411a40(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_412240",
            "funcStartAddr": "0x412240",
            "funcEndAddr": "0x41224a",
            "decompiledFuncCode": "int64_t sub_412240(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_411a40(arg1, arg2, arg3, &data_6245e0);\n}\n\n"
        },
        {
            "funcName": "sub_412250",
            "funcStartAddr": "0x412250",
            "funcEndAddr": "0x412262",
            "decompiledFuncCode": "int64_t sub_412250(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_411a40(0, arg1, arg2, &data_6245e0);\n}\n\n"
        },
        {
            "funcName": "sub_412270",
            "funcStartAddr": "0x412270",
            "funcEndAddr": "0x412281",
            "decompiledFuncCode": "int64_t sub_412270(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_411a40(arg1, arg2, -1, &data_6245e0);\n}\n\n"
        },
        {
            "funcName": "sub_412290",
            "funcStartAddr": "0x412290",
            "funcEndAddr": "0x4122a6",
            "decompiledFuncCode": "int64_t sub_412290(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_411a40(0, arg1, -1, &data_6245e0);\n}\n\n"
        },
        {
            "funcName": "sub_4122b0",
            "funcStartAddr": "0x4122b0",
            "funcEndAddr": "0x4123e0",
            "decompiledFuncCode": "uint64_t sub_4122b0(char* arg1, char* arg2)\n{\n    char* r15 = arg1;\n    int32_t rbx = 0;\n    char* rax = sub_40b870(arg1);\n    char* rax_1 = sub_40b870(arg2);\n    uint64_t rax_2 = sub_40b8d0(rax);\n    if ((rax_2 == sub_40b8d0(rax_1) && memcmp(rax, rax_1, rax_2) == 0))\n    {\n        char* rax_6 = sub_417940(r15);\n        char* rax_7 = sub_417940(arg2);\n        int64_t var_158;\n        if (__xstat(1, rax_6, &var_158) != 0)\n        {\n            error(1, *__errno_location(), \"%s\", rax_6);\n        }\n        int64_t var_c8;\n        if (__xstat(1, rax_7, &var_c8) != 0)\n        {\n            error(1, *__errno_location(), \"%s\", rax_7);\n        }\n        rbx = 0;\n        int64_t var_150;\n        int64_t var_c0;\n        if (var_150 == var_c0)\n        {\n            rbx = var_158 == var_c8;\n        }\n        free(rax_6);\n        free(rax_7);\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_4123e0",
            "funcStartAddr": "0x402e7d",
            "funcEndAddr": "0x4127bd",
            "decompiledFuncCode": "int64_t sub_4123e0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_41ea6b, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4127c0",
            "funcStartAddr": "0x4127c0",
            "funcEndAddr": "0x4127e0",
            "decompiledFuncCode": "int64_t sub_4127c0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_4123e0(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_4127e0",
            "funcStartAddr": "0x4127e0",
            "funcEndAddr": "0x412840",
            "decompiledFuncCode": "int64_t sub_4127e0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_4123e0(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_412840",
            "funcStartAddr": "0x412840",
            "funcEndAddr": "0x4128fc",
            "decompiledFuncCode": "int64_t sub_412840(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_4123e0(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_412900",
            "funcStartAddr": "0x412900",
            "funcEndAddr": "0x412974",
            "decompiledFuncCode": "int64_t sub_412900()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_412980",
            "funcStartAddr": "0x412980",
            "funcEndAddr": "0x41299a",
            "decompiledFuncCode": "int64_t sub_412980(size_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_412bd0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4129e0",
            "funcStartAddr": "0x4129e0",
            "funcEndAddr": "0x412a16",
            "decompiledFuncCode": "int64_t sub_4129e0(int64_t arg1, size_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_412bd0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_412ae0",
            "funcStartAddr": "0x412ae0",
            "funcEndAddr": "0x412b30",
            "decompiledFuncCode": "int64_t sub_412ae0(int64_t arg1, int64_t* arg2)\n{\n    size_t rax = *arg2;\n    bool cond:0_1;\n    if (arg1 == 0)\n    {\n        cond:0_1 = rax >= 0;\n        if (rax == 0)\n        {\n            *arg2 = 0x80;\n            /* tailcall */\n            return sub_4129e0(arg1, 0x80);\n        }\n    }\n    if ((arg1 != 0 && rax <= 0x5555555555555553))\n    {\n        rax = (((rax >> 1) + rax) + 1);\n    }\n    if (((arg1 != 0 && rax <= 0x5555555555555553) || ((arg1 == 0 && rax != 0) && cond:0_1)))\n    {\n        *arg2 = rax;\n        /* tailcall */\n        return sub_4129e0(arg1, rax);\n    }\n    if (((arg1 != 0 && rax > 0x5555555555555553) || ((arg1 == 0 && rax != 0) && (!cond:0_1))))\n    {\n        size_t var_8 = rax;\n        sub_412bd0();\n        /* no return */\n    }\n}\n\n"
        },
        {
            "funcName": "sub_412b30",
            "funcStartAddr": "0x412b30",
            "funcEndAddr": "0x412b47",
            "decompiledFuncCode": "int64_t sub_412b30(size_t arg1)\n{\n    /* tailcall */\n    return memset(sub_412980(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_412b50",
            "funcStartAddr": "0x412b50",
            "funcEndAddr": "0x412b7e",
            "decompiledFuncCode": "int64_t sub_412b50(size_t arg1, size_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_412bd0();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_412b80",
            "funcStartAddr": "0x412b80",
            "funcEndAddr": "0x412ba8",
            "decompiledFuncCode": "int64_t sub_412b80(int64_t arg1, size_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_412980(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_412bb0",
            "funcStartAddr": "0x412bb0",
            "funcEndAddr": "0x412bc3",
            "decompiledFuncCode": "int64_t sub_412bb0(char* arg1)\n{\n    /* tailcall */\n    return sub_412b80(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_412bd0",
            "funcStartAddr": "0x412bd0",
            "funcEndAddr": "0x412c01",
            "decompiledFuncCode": "int64_t sub_412bd0() __noreturn\n{\n    error(data_6245c0, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_412c10",
            "funcStartAddr": "0x412c10",
            "funcEndAddr": "0x412ce0",
            "decompiledFuncCode": "int64_t sub_412c10(char* arg1, int32_t arg2, int64_t arg3, int64_t arg4, \n    char* arg5, int64_t arg6, int32_t arg7)\n{\n    int32_t rbx = arg7;\n    int64_t var_40;\n    int32_t rax = sub_4132b0(arg1, nullptr, arg2, &var_40, arg5);\n    int64_t rbp;\n    int32_t* r14_1;\n    if (rax == 0)\n    {\n        rbp = var_40;\n        if ((rbp < arg3 || (rbp >= arg3 && rbp > arg4)))\n        {\n            int32_t* rax_1 = __errno_location();\n            r14_1 = rax_1;\n            *r14_1 = (((rax_1 - rax_1) & 0xffffffd7) + 0x4b);\n        }\n    }\n    else\n    {\n        int32_t* rax_8 = __errno_location();\n        r14_1 = rax_8;\n        if (rax == 1)\n        {\n            *rax_8 = 0x4b;\n        }\n        else if (rax == 3)\n        {\n            *rax_8 = 0;\n        }\n    }\n    if (((rax == 0 && (rbp < arg3 || (rbp >= arg3 && rbp > arg4))) || rax != 0))\n    {\n        int64_t rax_5 = sub_412290(arg1);\n        uint64_t rsi = *r14_1;\n        if (rsi == 0x16)\n        {\n            rsi = 0;\n        }\n        if (rbx == 0)\n        {\n            rbx = 1;\n        }\n        error(rbx, rsi, \"%s: %s\", arg6, rax_5);\n        rbp = var_40;\n    }\n    return rbp;\n}\n\n"
        },
        {
            "funcName": "sub_412ce0",
            "funcStartAddr": "0x412ce0",
            "funcEndAddr": "0x412d01",
            "decompiledFuncCode": "int64_t sub_412ce0(char* arg1, int64_t arg2, int64_t arg3, char* arg4, \n    int64_t arg5, int32_t arg6)\n{\n    return sub_412c10(arg1, 0xa, arg2, arg3, arg4, arg5, arg6);\n}\n\n"
        },
        {
            "funcName": "sub_412d10",
            "funcStartAddr": "0x412d10",
            "funcEndAddr": "0x412d3f",
            "decompiledFuncCode": "void* sub_412d10()\n{\n    void* rax = sub_415be0(nullptr, 0);\n    if ((rax == 0 && *__errno_location() == 0xc))\n    {\n        sub_412bd0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_412d40",
            "funcStartAddr": "0x412d40",
            "funcEndAddr": "0x412df0",
            "decompiledFuncCode": "char* sub_412d40()\n{\n    char* rbx = nullptr;\n    int64_t var_30 = 0x22;\n    int32_t* rax = __errno_location();\n    uint64_t rbp_2;\n    while (true)\n    {\n        char* rax_1 = sub_412ae0(rbx, &var_30);\n        int64_t rsi_2 = var_30;\n        rbx = rax_1;\n        char* rbp_1 = &rax_1[(rsi_2 - 2)];\n        *rbp_1 = 0;\n        *rax = 0;\n        if (gethostname(rax_1, (rsi_2 - 1)) != 0)\n        {\n            rbp_2 = *rax;\n            if (rbp_2 > 0x24)\n            {\n                break;\n            }\n            if ((!(TEST_BITQ(0x1000401001, rbp_2))))\n            {\n                break;\n            }\n        }\n        else\n        {\n            if (*rbp_1 == 0)\n            {\n                return rbx;\n            }\n        }\n    }\n    free(rbx);\n    *rax = rbp_2;\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_412df0",
            "funcStartAddr": "0x412df0",
            "funcEndAddr": "0x413214",
            "decompiledFuncCode": "uint64_t sub_412df0(char* arg1, int64_t* arg2, int32_t arg3, uint64_t* arg4, \n    char* arg5)\n{\n    if (arg3 > 0x24)\n    {\n        __assert_fail(\"0 <= strtol_base && strtol_base \u2026\", \"lib/xstrtol.c\", 0x60, \"xstrtoul\");\n        /* no return */\n    }\n    int64_t* r15 = arg2;\n    void var_40;\n    if (arg2 == 0)\n    {\n        r15 = &var_40;\n    }\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char rbx = *arg1;\n    uint16_t* rsi = *__ctype_b_loc();\n    char* rax_2 = arg1;\n    while ((*(&rsi[rbx] + 1) & 0x20) != 0)\n    {\n        rax_2 = &rax_2[1];\n        rbx = *rax_2;\n    }\n    int32_t rbp_1;\n    if (rbx == 0x2d)\n    {\n    label_412eb2:\n        rbp_1 = 4;\n    }\n    else\n    {\n        char* r8 = *r15;\n        uint64_t rbx_1 = strtoul(arg1, r15, arg3);\n        int32_t var_58;\n        void* r8_1;\n        uint32_t r12_1;\n        if (r8 == arg1)\n        {\n            var_58 = r8;\n            if (arg5 == 0)\n            {\n                goto label_412eb2;\n            }\n            r12_1 = *arg1;\n            if (r12_1 == 0)\n            {\n                goto label_412eb2;\n            }\n            rbp_1 = 0;\n            rbx_1 = 1;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) == 0)\n            {\n                goto label_412eb2;\n            }\n        label_412eef:\n            uint64_t rdx_1 = (r12_1 - 0x45);\n            int64_t rdx_3;\n            int32_t rsi_3;\n            if (rdx_1 <= 0x2f)\n            {\n                var_58 = rdx_1;\n                if ((!(TEST_BITQ(0x814400308945, rdx_1))))\n                {\n                    goto label_412f50;\n                }\n                if (strchr(arg5, 0x30) == 0)\n                {\n                    goto label_412f50;\n                }\n                char rax_8 = *(r8_1 + 1);\n                if (rax_8 == 0x44)\n                {\n                label_413178:\n                    rsi_3 = 2;\n                    rdx_3 = 0x3e8;\n                    goto label_412f5a;\n                }\n                if (rax_8 == 0x69)\n                {\n                    rdx_3 = 0x400;\n                    int32_t rsi_6;\n                    rsi_6 = *(r8_1 + 2) == 0x42;\n                    rsi_3 = ((rsi_6 + rsi_6) + 1);\n                    goto label_412f5a;\n                }\n                uint64_t rdx_2 = var_58;\n                if (rax_8 == 0x42)\n                {\n                    goto label_413178;\n                }\n                int32_t r9_1;\n                switch (rdx_2)\n                {\n                    case 0:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4130fb:\n                        int64_t rcx_6 = rdx_3;\n                        int32_t rdi_8 = 6;\n                        r9_1 = 0;\n                        int32_t temp15_1;\n                        do\n                        {\n                            uint64_t rax_28;\n                            int64_t rdx_11;\n                            rdx_11 = HIGHD((rbx_1 * rcx_6));\n                            rax_28 = LOWD((rbx_1 * rcx_6));\n                            bool o_8 = ((rbx_1 * rcx_6) >> 0x40) != 0;\n                            rbx_1 = rax_28;\n                            if (o_8)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp15_1 = rdi_8;\n                            rdi_8 = (rdi_8 - 1);\n                        } while (temp15_1 != 1);\n                        goto label_413054;\n                    }\n                    case 1:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 7:\n                    case 9:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                    case 0x23:\n                    case 0x24:\n                    case 0x25:\n                    case 0x27:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    {\n                        goto label_412ff5;\n                    }\n                    case 2:\n                    case 0x22:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_413133:\n                        int64_t rcx_7 = rdx_3;\n                        int64_t rax_30;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rbx_1 * rcx_7));\n                        rax_30 = LOWD((rbx_1 * rcx_7));\n                        int64_t rax_31;\n                        if (((rbx_1 * rcx_7) >> 0x40) == 0)\n                        {\n                            int64_t rdx_13;\n                            rdx_13 = HIGHD((rax_30 * rcx_7));\n                            rax_31 = LOWD((rax_30 * rcx_7));\n                            if (((rax_30 * rcx_7) >> 0x40) == 0)\n                            {\n                                uint64_t rax_32;\n                                int64_t rdx_14;\n                                rdx_14 = HIGHD((rax_31 * rcx_7));\n                                rax_32 = LOWD((rax_31 * rcx_7));\n                                if (((rax_31 * rcx_7) >> 0x40) == 0)\n                                {\n                                    rbx_1 = rax_32;\n                                    rbp_1 = (rbp_1 | 0);\n                                }\n                            }\n                        }\n                        if (((((rbx_1 * rcx_7) >> 0x40) != 0 || (((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) != 0)) || ((((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) == 0) && ((rax_31 * rcx_7) >> 0x40) != 0)))\n                        {\n                            rbx_1 = -1;\n                            rbp_1 = (rbp_1 | 1);\n                        }\n                        goto label_412f9d;\n                    }\n                    case 6:\n                    case 0x26:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_412fbf:\n                        uint64_t rax_15;\n                        int64_t rdx_6;\n                        rdx_6 = HIGHD((rbx_1 * rdx_3));\n                        rax_15 = LOWD((rbx_1 * rdx_3));\n                        bool o_3 = ((rbx_1 * rdx_3) >> 0x40) != 0;\n                        rbx_1 = rax_15;\n                        if ((!o_3))\n                        {\n                            goto label_412f9d;\n                        }\n                        goto label_412fc7;\n                    }\n                    case 8:\n                    case 0x28:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_412f7e:\n                        int64_t rcx_1 = rdx_3;\n                        int64_t rax_10;\n                        int64_t rdx_4;\n                        rdx_4 = HIGHD((rbx_1 * rcx_1));\n                        rax_10 = LOWD((rbx_1 * rcx_1));\n                        if (((rbx_1 * rcx_1) >> 0x40) == 0)\n                        {\n                            uint64_t rax_11;\n                            int64_t rdx_5;\n                            rdx_5 = HIGHD((rax_10 * rcx_1));\n                            rax_11 = LOWD((rax_10 * rcx_1));\n                            if (((rax_10 * rcx_1) >> 0x40) != 0)\n                            {\n                                goto label_412fc7;\n                            }\n                            rbx_1 = rax_11;\n                            goto label_412f9d;\n                        }\n                    label_412fc7:\n                        rbp_1 = 1;\n                        rbx_1 = -1;\n                        goto label_412f9d;\n                    }\n                    case 0xb:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4130c8:\n                        int64_t rcx_5 = rdx_3;\n                        int32_t rdi_7 = 5;\n                        r9_1 = 0;\n                        int32_t temp14_1;\n                        do\n                        {\n                            uint64_t rax_26;\n                            int64_t rdx_10;\n                            rdx_10 = HIGHD((rbx_1 * rcx_5));\n                            rax_26 = LOWD((rbx_1 * rcx_5));\n                            bool o_7 = ((rbx_1 * rcx_5) >> 0x40) != 0;\n                            rbx_1 = rax_26;\n                            if (o_7)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp14_1 = rdi_7;\n                            rdi_7 = (rdi_7 - 1);\n                        } while (temp14_1 != 1);\n                        goto label_413054;\n                    }\n                    case 0xf:\n                    case 0x2f:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_413098:\n                        int64_t rcx_4 = rdx_3;\n                        int32_t rdi_6 = 4;\n                        r9_1 = 0;\n                        int32_t temp13_1;\n                        do\n                        {\n                            uint64_t rax_24;\n                            int64_t rdx_9;\n                            rdx_9 = HIGHD((rbx_1 * rcx_4));\n                            rax_24 = LOWD((rbx_1 * rcx_4));\n                            bool o_6 = ((rbx_1 * rcx_4) >> 0x40) != 0;\n                            rbx_1 = rax_24;\n                            if (o_6)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp13_1 = rdi_6;\n                            rdi_6 = (rdi_6 - 1);\n                        } while (temp13_1 != 1);\n                        goto label_413054;\n                    }\n                    case 0x14:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_413066:\n                        int64_t rcx_3 = rdx_3;\n                        int32_t rdi_5 = 8;\n                        r9_1 = 0;\n                        int32_t temp12_1;\n                        do\n                        {\n                            uint64_t rax_22;\n                            int64_t rdx_8;\n                            rdx_8 = HIGHD((rbx_1 * rcx_3));\n                            rax_22 = LOWD((rbx_1 * rcx_3));\n                            bool o_5 = ((rbx_1 * rcx_3) >> 0x40) != 0;\n                            rbx_1 = rax_22;\n                            if (o_5)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp12_1 = rdi_5;\n                            rdi_5 = (rdi_5 - 1);\n                        } while (temp12_1 != 1);\n                        goto label_413054;\n                    }\n                    case 0x15:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_41302b:\n                        int64_t rcx_2 = rdx_3;\n                        int32_t rdi_4 = 7;\n                        r9_1 = 0;\n                        int32_t temp11_1;\n                        do\n                        {\n                            uint64_t rax_20;\n                            int64_t rdx_7;\n                            rdx_7 = HIGHD((rbx_1 * rcx_2));\n                            rax_20 = LOWD((rbx_1 * rcx_2));\n                            bool o_4 = ((rbx_1 * rcx_2) >> 0x40) != 0;\n                            rbx_1 = rax_20;\n                            if (o_4)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp11_1 = rdi_4;\n                            rdi_4 = (rdi_4 - 1);\n                        } while (temp11_1 != 1);\n                    label_413054:\n                        rbp_1 = (rbp_1 | r9_1);\n                        goto label_412f9d;\n                    }\n                    case 0x1d:\n                    {\n                        rsi_3 = 1;\n                        break;\n                    }\n                    case 0x1e:\n                    {\n                        rsi_3 = 1;\n                        goto label_412f9d;\n                    }\n                }\n            }\n            else\n            {\n            label_412f50:\n                rsi_3 = 1;\n                rdx_3 = 0x400;\n            label_412f5a:\n                char r12_2 = (r12_1 - 0x42);\n                if (r12_2 > 0x35)\n                {\n                    goto label_412ff5;\n                }\n                switch (r12_2)\n                {\n                    case 0:\n                    {\n                        if ((rbx_1 >> 0x36) != 0)\n                        {\n                            goto label_412fc7;\n                        }\n                        rbx_1 = (rbx_1 << 0xa);\n                        goto label_412f9d;\n                    }\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x2a:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x33:\n                    case 0x34:\n                    {\n                        goto label_412ff5;\n                    }\n                    case 3:\n                    {\n                        goto label_4130fb;\n                    }\n                    case 5:\n                    case 0x25:\n                    {\n                        goto label_413133;\n                    }\n                    case 9:\n                    case 0x29:\n                    {\n                        goto label_412fbf;\n                    }\n                    case 0xb:\n                    case 0x2b:\n                    {\n                        goto label_412f7e;\n                    }\n                    case 0xe:\n                    {\n                        goto label_4130c8;\n                    }\n                    case 0x12:\n                    case 0x32:\n                    {\n                        goto label_413098;\n                    }\n                    case 0x17:\n                    {\n                        goto label_413066;\n                    }\n                    case 0x18:\n                    {\n                        goto label_41302b;\n                    }\n                    case 0x21:\n                    {\n                        goto label_412f9d;\n                    }\n                    case 0x35:\n                    {\n                        if (rbx_1 < 0)\n                        {\n                            goto label_412fc7;\n                        }\n                        rbx_1 = (rbx_1 + rbx_1);\n                    label_412f9d:\n                        void* r8_2 = (r8_1 + rsi_3);\n                        int32_t rax_13 = (rbp_1 | 2);\n                        *r15 = r8_2;\n                        if (*r8_2 != 0)\n                        {\n                            rbp_1 = rax_13;\n                        }\n                        goto label_412e90;\n                    }\n                }\n            }\n            if ((rbx_1 >> 0x37) != 0)\n            {\n                goto label_412fc7;\n            }\n            rbx_1 = (rbx_1 << 9);\n            goto label_412f9d;\n        }\n        int32_t rax_4 = *rax;\n        if (rax_4 == 0)\n        {\n            rbp_1 = 0;\n        }\n        else\n        {\n            rbp_1 = 1;\n            if (rax_4 != 0x22)\n            {\n                goto label_412eb2;\n            }\n        }\n        if (arg5 == 0)\n        {\n        label_412e90:\n            *arg4 = rbx_1;\n        }\n        else\n        {\n            r12_1 = *r8;\n            if (r12_1 == 0)\n            {\n                goto label_412e90;\n            }\n            var_58 = r8;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) != 0)\n            {\n                goto label_412eef;\n            }\n        label_412ff5:\n            *arg4 = rbx_1;\n            rbp_1 = (rbp_1 | 2);\n        }\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_413220",
            "funcStartAddr": "0x402e82",
            "funcEndAddr": "0x4132a1",
            "decompiledFuncCode": "int64_t sub_413220(int32_t arg1, int32_t arg2, char arg3, int64_t* arg4, \n    int64_t arg5) __noreturn\n{\n    uint64_t rdi = (arg1 - 1);\n    int32_t rbx = data_6245c0;\n    if (rdi > 3)\n    {\n        abort();\n        /* no return */\n    }\n    char* rsi = *((rdi << 3) + 0x41f1e0);\n    int64_t rax = arg2;\n    void* const r12;\n    char* r13;\n    if (arg2 < 0)\n    {\n        char var_2a = arg3;\n        r13 = &var_2a;\n        r12 = (&data_41f171 - rax);\n        char var_29_1 = 0;\n    }\n    else\n    {\n        r12 = &data_41f171;\n        r13 = arg4[(rax * 4)];\n    }\n    error(rbx, 0, dcgettext(nullptr, rsi, 5), r12, r13, arg5);\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4132b0",
            "funcStartAddr": "0x4132b0",
            "funcEndAddr": "0x4136e4",
            "decompiledFuncCode": "uint64_t sub_4132b0(char* arg1, int64_t* arg2, int32_t arg3, uint64_t* arg4, \n    char* arg5)\n{\n    if (arg3 > 0x24)\n    {\n        __assert_fail(\"0 <= strtol_base && strtol_base \u2026\", \"lib/xstrtol.c\", 0x60, \"xstrtoumax\");\n        /* no return */\n    }\n    int64_t* r15 = arg2;\n    void var_40;\n    if (arg2 == 0)\n    {\n        r15 = &var_40;\n    }\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char rbx = *arg1;\n    uint16_t* rsi = *__ctype_b_loc();\n    char* rax_2 = arg1;\n    while ((*(&rsi[rbx] + 1) & 0x20) != 0)\n    {\n        rax_2 = &rax_2[1];\n        rbx = *rax_2;\n    }\n    int32_t rbp_1;\n    if (rbx == 0x2d)\n    {\n    label_41337a:\n        rbp_1 = 4;\n    }\n    else\n    {\n        char* r8 = *r15;\n        uint64_t rbx_1 = __strtoul_internal(arg1, r15, arg3, 0);\n        int32_t var_58;\n        void* r8_1;\n        uint32_t r12_1;\n        if (r8 == arg1)\n        {\n            var_58 = r8;\n            if (arg5 == 0)\n            {\n                goto label_41337a;\n            }\n            r12_1 = *arg1;\n            if (r12_1 == 0)\n            {\n                goto label_41337a;\n            }\n            rbp_1 = 0;\n            rbx_1 = 1;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) == 0)\n            {\n                goto label_41337a;\n            }\n        label_4133b7:\n            uint64_t rdx_1 = (r12_1 - 0x45);\n            int64_t rdx_3;\n            int32_t rsi_3;\n            if (rdx_1 <= 0x2f)\n            {\n                var_58 = rdx_1;\n                if ((!(TEST_BITQ(0x814400308945, rdx_1))))\n                {\n                    goto label_413420;\n                }\n                if (strchr(arg5, 0x30) == 0)\n                {\n                    goto label_413420;\n                }\n                char rax_8 = *(r8_1 + 1);\n                if (rax_8 == 0x44)\n                {\n                label_413648:\n                    rsi_3 = 2;\n                    rdx_3 = 0x3e8;\n                    goto label_41342a;\n                }\n                if (rax_8 == 0x69)\n                {\n                    rdx_3 = 0x400;\n                    int32_t rsi_6;\n                    rsi_6 = *(r8_1 + 2) == 0x42;\n                    rsi_3 = ((rsi_6 + rsi_6) + 1);\n                    goto label_41342a;\n                }\n                uint64_t rdx_2 = var_58;\n                if (rax_8 == 0x42)\n                {\n                    goto label_413648;\n                }\n                int32_t r9_1;\n                switch (rdx_2)\n                {\n                    case 0:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4135cb:\n                        int64_t rcx_6 = rdx_3;\n                        int32_t rdi_8 = 6;\n                        r9_1 = 0;\n                        int32_t temp15_1;\n                        do\n                        {\n                            uint64_t rax_28;\n                            int64_t rdx_11;\n                            rdx_11 = HIGHD((rbx_1 * rcx_6));\n                            rax_28 = LOWD((rbx_1 * rcx_6));\n                            bool o_8 = ((rbx_1 * rcx_6) >> 0x40) != 0;\n                            rbx_1 = rax_28;\n                            if (o_8)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp15_1 = rdi_8;\n                            rdi_8 = (rdi_8 - 1);\n                        } while (temp15_1 != 1);\n                        goto label_413524;\n                    }\n                    case 1:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 7:\n                    case 9:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                    case 0x23:\n                    case 0x24:\n                    case 0x25:\n                    case 0x27:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    {\n                        goto label_4134c5;\n                    }\n                    case 2:\n                    case 0x22:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_413603:\n                        int64_t rcx_7 = rdx_3;\n                        int64_t rax_30;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rbx_1 * rcx_7));\n                        rax_30 = LOWD((rbx_1 * rcx_7));\n                        int64_t rax_31;\n                        if (((rbx_1 * rcx_7) >> 0x40) == 0)\n                        {\n                            int64_t rdx_13;\n                            rdx_13 = HIGHD((rax_30 * rcx_7));\n                            rax_31 = LOWD((rax_30 * rcx_7));\n                            if (((rax_30 * rcx_7) >> 0x40) == 0)\n                            {\n                                uint64_t rax_32;\n                                int64_t rdx_14;\n                                rdx_14 = HIGHD((rax_31 * rcx_7));\n                                rax_32 = LOWD((rax_31 * rcx_7));\n                                if (((rax_31 * rcx_7) >> 0x40) == 0)\n                                {\n                                    rbx_1 = rax_32;\n                                    rbp_1 = (rbp_1 | 0);\n                                }\n                            }\n                        }\n                        if (((((rbx_1 * rcx_7) >> 0x40) != 0 || (((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) != 0)) || ((((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) == 0) && ((rax_31 * rcx_7) >> 0x40) != 0)))\n                        {\n                            rbx_1 = -1;\n                            rbp_1 = (rbp_1 | 1);\n                        }\n                        goto label_41346d;\n                    }\n                    case 6:\n                    case 0x26:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_41348f:\n                        uint64_t rax_15;\n                        int64_t rdx_6;\n                        rdx_6 = HIGHD((rbx_1 * rdx_3));\n                        rax_15 = LOWD((rbx_1 * rdx_3));\n                        bool o_3 = ((rbx_1 * rdx_3) >> 0x40) != 0;\n                        rbx_1 = rax_15;\n                        if ((!o_3))\n                        {\n                            goto label_41346d;\n                        }\n                        goto label_413497;\n                    }\n                    case 8:\n                    case 0x28:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_41344e:\n                        int64_t rcx_1 = rdx_3;\n                        int64_t rax_10;\n                        int64_t rdx_4;\n                        rdx_4 = HIGHD((rbx_1 * rcx_1));\n                        rax_10 = LOWD((rbx_1 * rcx_1));\n                        if (((rbx_1 * rcx_1) >> 0x40) == 0)\n                        {\n                            uint64_t rax_11;\n                            int64_t rdx_5;\n                            rdx_5 = HIGHD((rax_10 * rcx_1));\n                            rax_11 = LOWD((rax_10 * rcx_1));\n                            if (((rax_10 * rcx_1) >> 0x40) != 0)\n                            {\n                                goto label_413497;\n                            }\n                            rbx_1 = rax_11;\n                            goto label_41346d;\n                        }\n                    label_413497:\n                        rbp_1 = 1;\n                        rbx_1 = -1;\n                        goto label_41346d;\n                    }\n                    case 0xb:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_413598:\n                        int64_t rcx_5 = rdx_3;\n                        int32_t rdi_7 = 5;\n                        r9_1 = 0;\n                        int32_t temp14_1;\n                        do\n                        {\n                            uint64_t rax_26;\n                            int64_t rdx_10;\n                            rdx_10 = HIGHD((rbx_1 * rcx_5));\n                            rax_26 = LOWD((rbx_1 * rcx_5));\n                            bool o_7 = ((rbx_1 * rcx_5) >> 0x40) != 0;\n                            rbx_1 = rax_26;\n                            if (o_7)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp14_1 = rdi_7;\n                            rdi_7 = (rdi_7 - 1);\n                        } while (temp14_1 != 1);\n                        goto label_413524;\n                    }\n                    case 0xf:\n                    case 0x2f:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_413568:\n                        int64_t rcx_4 = rdx_3;\n                        int32_t rdi_6 = 4;\n                        r9_1 = 0;\n                        int32_t temp13_1;\n                        do\n                        {\n                            uint64_t rax_24;\n                            int64_t rdx_9;\n                            rdx_9 = HIGHD((rbx_1 * rcx_4));\n                            rax_24 = LOWD((rbx_1 * rcx_4));\n                            bool o_6 = ((rbx_1 * rcx_4) >> 0x40) != 0;\n                            rbx_1 = rax_24;\n                            if (o_6)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp13_1 = rdi_6;\n                            rdi_6 = (rdi_6 - 1);\n                        } while (temp13_1 != 1);\n                        goto label_413524;\n                    }\n                    case 0x14:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_413536:\n                        int64_t rcx_3 = rdx_3;\n                        int32_t rdi_5 = 8;\n                        r9_1 = 0;\n                        int32_t temp12_1;\n                        do\n                        {\n                            uint64_t rax_22;\n                            int64_t rdx_8;\n                            rdx_8 = HIGHD((rbx_1 * rcx_3));\n                            rax_22 = LOWD((rbx_1 * rcx_3));\n                            bool o_5 = ((rbx_1 * rcx_3) >> 0x40) != 0;\n                            rbx_1 = rax_22;\n                            if (o_5)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp12_1 = rdi_5;\n                            rdi_5 = (rdi_5 - 1);\n                        } while (temp12_1 != 1);\n                        goto label_413524;\n                    }\n                    case 0x15:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4134fb:\n                        int64_t rcx_2 = rdx_3;\n                        int32_t rdi_4 = 7;\n                        r9_1 = 0;\n                        int32_t temp11_1;\n                        do\n                        {\n                            uint64_t rax_20;\n                            int64_t rdx_7;\n                            rdx_7 = HIGHD((rbx_1 * rcx_2));\n                            rax_20 = LOWD((rbx_1 * rcx_2));\n                            bool o_4 = ((rbx_1 * rcx_2) >> 0x40) != 0;\n                            rbx_1 = rax_20;\n                            if (o_4)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp11_1 = rdi_4;\n                            rdi_4 = (rdi_4 - 1);\n                        } while (temp11_1 != 1);\n                    label_413524:\n                        rbp_1 = (rbp_1 | r9_1);\n                        goto label_41346d;\n                    }\n                    case 0x1d:\n                    {\n                        rsi_3 = 1;\n                        break;\n                    }\n                    case 0x1e:\n                    {\n                        rsi_3 = 1;\n                        goto label_41346d;\n                    }\n                }\n            }\n            else\n            {\n            label_413420:\n                rsi_3 = 1;\n                rdx_3 = 0x400;\n            label_41342a:\n                char r12_2 = (r12_1 - 0x42);\n                if (r12_2 > 0x35)\n                {\n                    goto label_4134c5;\n                }\n                switch (r12_2)\n                {\n                    case 0:\n                    {\n                        if ((rbx_1 >> 0x36) != 0)\n                        {\n                            goto label_413497;\n                        }\n                        rbx_1 = (rbx_1 << 0xa);\n                        goto label_41346d;\n                    }\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x2a:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x33:\n                    case 0x34:\n                    {\n                        goto label_4134c5;\n                    }\n                    case 3:\n                    {\n                        goto label_4135cb;\n                    }\n                    case 5:\n                    case 0x25:\n                    {\n                        goto label_413603;\n                    }\n                    case 9:\n                    case 0x29:\n                    {\n                        goto label_41348f;\n                    }\n                    case 0xb:\n                    case 0x2b:\n                    {\n                        goto label_41344e;\n                    }\n                    case 0xe:\n                    {\n                        goto label_413598;\n                    }\n                    case 0x12:\n                    case 0x32:\n                    {\n                        goto label_413568;\n                    }\n                    case 0x17:\n                    {\n                        goto label_413536;\n                    }\n                    case 0x18:\n                    {\n                        goto label_4134fb;\n                    }\n                    case 0x21:\n                    {\n                        goto label_41346d;\n                    }\n                    case 0x35:\n                    {\n                        if (rbx_1 < 0)\n                        {\n                            goto label_413497;\n                        }\n                        rbx_1 = (rbx_1 + rbx_1);\n                    label_41346d:\n                        void* r8_2 = (r8_1 + rsi_3);\n                        int32_t rax_13 = (rbp_1 | 2);\n                        *r15 = r8_2;\n                        if (*r8_2 != 0)\n                        {\n                            rbp_1 = rax_13;\n                        }\n                        goto label_413352;\n                    }\n                }\n            }\n            if ((rbx_1 >> 0x37) != 0)\n            {\n                goto label_413497;\n            }\n            rbx_1 = (rbx_1 << 9);\n            goto label_41346d;\n        }\n        int32_t rax_4 = *rax;\n        if (rax_4 == 0)\n        {\n            rbp_1 = 0;\n        }\n        else\n        {\n            rbp_1 = 1;\n            if (rax_4 != 0x22)\n            {\n                goto label_41337a;\n            }\n        }\n        if (arg5 == 0)\n        {\n        label_413352:\n            *arg4 = rbx_1;\n        }\n        else\n        {\n            r12_1 = *r8;\n            if (r12_1 == 0)\n            {\n                goto label_413352;\n            }\n            var_58 = r8;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) != 0)\n            {\n                goto label_4133b7;\n            }\n        label_4134c5:\n            *arg4 = rbx_1;\n            rbp_1 = (rbp_1 | 2);\n        }\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_4136f0",
            "funcStartAddr": "0x4136f0",
            "funcEndAddr": "0x4137e9",
            "decompiledFuncCode": "void* sub_4136f0(void* arg1)\n{\n    void* rbx = arg1;\n    while (true)\n    {\n        int32_t rdx_1 = *(rbx + 4);\n        if (rdx_1 == 0)\n        {\n            break;\n        }\n        while (true)\n        {\n            if (rdx_1 == 0x5b)\n            {\n                if (data_625918 == 0)\n                {\n                    char* rax_4 = getenv(\"POSIXLY_CORRECT\");\n                    data_625918 = ((rax_4 - rax_4) | 1);\n                }\n                int32_t rdx_3 = *(rbx + 8);\n                if ((rdx_3 == 0x21 || (data_625918 < 0 && rdx_3 == 0x5e)))\n                {\n                    rdx_3 = *(rbx + 0xc);\n                    rbx = (rbx + 0xc);\n                }\n                if ((rdx_3 != 0x21 && (data_625918 >= 0 || (data_625918 < 0 && rdx_3 != 0x5e))))\n                {\n                    rbx = (rbx + 8);\n                }\n                if (rdx_3 == 0x5d)\n                {\n                    rdx_3 = *(rbx + 4);\n                    rbx = (rbx + 4);\n                }\n                while (true)\n                {\n                    void* rcx_2 = (rbx + 4);\n                    if (rdx_3 == 0x5d)\n                    {\n                        break;\n                    }\n                    if (rdx_3 == 0)\n                    {\n                        return arg1;\n                    }\n                    rdx_3 = *rcx_2;\n                    rbx = rcx_2;\n                }\n                break;\n            }\n            uint64_t rcx_1 = (rdx_1 - 0x21);\n            if (rcx_1 <= 0x1f)\n            {\n                if (((TEST_BITQ(0xc0000601, rcx_1)) && *(rbx + 8) == 0x28))\n                {\n                    rbx = sub_4136f0((rbx + 8));\n                    break;\n                }\n                if (rdx_1 == 0x29)\n                {\n                    return (rbx + 8);\n                }\n            }\n            rbx = (rbx + 4);\n            rdx_1 = *(rbx + 4);\n            if (rdx_1 == 0)\n            {\n                return arg1;\n            }\n        }\n    }\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4137f0",
            "funcStartAddr": "0x4137f0",
            "funcEndAddr": "0x4138e9",
            "decompiledFuncCode": "void* sub_4137f0(void* arg1)\n{\n    void* rbx = arg1;\n    while (true)\n    {\n        uint32_t rdx_1 = *(rbx + 1);\n        if (rdx_1 == 0)\n        {\n            break;\n        }\n        while (true)\n        {\n            if (rdx_1 == 0x5b)\n            {\n                if (data_625918 == 0)\n                {\n                    char* rax_4 = getenv(\"POSIXLY_CORRECT\");\n                    data_625918 = ((rax_4 - rax_4) | 1);\n                }\n                char rdx_3 = *(rbx + 2);\n                if ((rdx_3 == 0x21 || (data_625918 < 0 && rdx_3 == 0x5e)))\n                {\n                    rdx_3 = *(rbx + 3);\n                    rbx = (rbx + 3);\n                }\n                if ((rdx_3 != 0x21 && (data_625918 >= 0 || (data_625918 < 0 && rdx_3 != 0x5e))))\n                {\n                    rbx = (rbx + 2);\n                }\n                if (rdx_3 == 0x5d)\n                {\n                    rdx_3 = *(rbx + 1);\n                    rbx = (rbx + 1);\n                }\n                while (true)\n                {\n                    void* rcx_2 = (rbx + 1);\n                    if (rdx_3 == 0x5d)\n                    {\n                        break;\n                    }\n                    if (rdx_3 == 0)\n                    {\n                        return arg1;\n                    }\n                    rdx_3 = *rcx_2;\n                    rbx = rcx_2;\n                }\n                break;\n            }\n            uint64_t rcx_1 = (rdx_1 - 0x21);\n            if (rcx_1 <= 0x1f)\n            {\n                if (((TEST_BITQ(0xc0000601, rcx_1)) && *(rbx + 2) == 0x28))\n                {\n                    rbx = sub_4137f0((rbx + 2));\n                    break;\n                }\n                if (rdx_1 == 0x29)\n                {\n                    return (rbx + 2);\n                }\n            }\n            rbx = (rbx + 1);\n            rdx_1 = *(rbx + 1);\n            if (rdx_1 == 0)\n            {\n                return arg1;\n            }\n        }\n    }\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4138f0",
            "funcStartAddr": "0x4138f0",
            "funcEndAddr": "0x413e73",
            "decompiledFuncCode": "int64_t sub_4138f0(int32_t arg1, wchar_t* arg2, uint64_t arg3, uint64_t arg4, \n    bool arg5, int32_t arg6)\n{\n    void var_88;\n    void* rsp = &var_88;\n    void** var_40 = nullptr;\n    uint64_t var_50 = wcslen(arg2);\n    int32_t rax_1 = arg2[1];\n    int64_t rax_2;\n    if (rax_1 == 0)\n    {\n    label_4139b0:\n        rax_2 = 0xffffffff;\n    }\n    else\n    {\n        void* r14_1 = &arg2[1];\n        void* rsi = r14_1;\n        int64_t* rbx_1 = &var_40;\n        int64_t r13_1 = 0;\n        uint64_t rdx;\n        do\n        {\n            if (rax_1 != 0x5b)\n            {\n                while (true)\n                {\n                    rdx = (rax_1 - 0x21);\n                    if (rdx > 0x1f)\n                    {\n                        break;\n                    }\n                    if ((!(TEST_BITQ(0xc0000601, rdx))))\n                    {\n                        break;\n                    }\n                    if (*(r14_1 + 4) != 0x28)\n                    {\n                        break;\n                    }\n                    r13_1 = (r13_1 + 1);\n                    r14_1 = (r14_1 + 4);\n                    rax_1 = 0x28;\n                }\n                if (((rdx > 0x1f && rax_1 == 0x7c) && r13_1 == 0))\n                {\n                    uint64_t rdx_4 = var_50;\n                    if ((arg1 - 0x3f) > 1)\n                    {\n                        rdx_4 = (((r14_1 - rsi) >> 2) + 1);\n                    }\n                    int64_t rax_7 = (((rdx_4 << 2) + 0xf) & 0xfffffffffffffff8);\n                    if ((rax_7 - 8) > 0x1f37)\n                    {\n                        break;\n                    }\n                    if (rdx_4 > 0x3fffffffffffffff)\n                    {\n                        break;\n                    }\n                    rsp = (rsp - ((rax_7 + 0x17) & 0xfffffffffffffff0));\n                    int64_t* r13_3 = ((rsp + 0xf) & 0xfffffffffffffff0);\n                    rsi = (r14_1 + 4);\n                    *wmempcpy(&r13_3[1], rsi, ((r14_1 - rsi) >> 2)) = 0;\n                    rax_1 = *(r14_1 + 4);\n                    r14_1 = rsi;\n                    *r13_3 = 0;\n                    *rbx_1 = r13_3;\n                    rbx_1 = r13_3;\n                    r13_1 = 0;\n                }\n                if ((rdx <= 0x1f && rax_1 == 0x29))\n                {\n                    int64_t rdx_1 = (r13_1 - 1);\n                    if (r13_1 == 0)\n                    {\n                        break;\n                    }\n                    rax_1 = *(r14_1 + 4);\n                    r13_1 = rdx_1;\n                    r14_1 = (r14_1 + 4);\n                    if (rax_1 == 0)\n                    {\n                        break;\n                    }\n                    continue;\n                }\n                if ((((rdx > 0x1f && rax_1 != 0x7c) || ((rdx > 0x1f && rax_1 == 0x7c) && r13_1 != 0)) || rdx <= 0x1f))\n                {\n                    rax_1 = *(r14_1 + 4);\n                    r14_1 = (r14_1 + 4);\n                }\n            }\n            else\n            {\n                if (data_625918 == 0)\n                {\n                    char* rax_11 = getenv(\"POSIXLY_CORRECT\");\n                    data_625918 = ((rax_11 - rax_11) | 1);\n                }\n                int32_t rax_3 = *(r14_1 + 4);\n                void* rdx_3;\n                if ((rax_3 == 0x21 || (data_625918 < 0 && rax_3 == 0x5e)))\n                {\n                    rdx_3 = (r14_1 + 8);\n                    rax_3 = *(r14_1 + 8);\n                }\n                if ((rax_3 != 0x21 && (data_625918 >= 0 || (data_625918 < 0 && rax_3 != 0x5e))))\n                {\n                    rdx_3 = (r14_1 + 4);\n                }\n                if (rax_3 == 0x5d)\n                {\n                    rax_3 = *(rdx_3 + 4);\n                    rdx_3 = (rdx_3 + 4);\n                }\n                while (true)\n                {\n                    r14_1 = (rdx_3 + 4);\n                    if (rax_3 == 0x5d)\n                    {\n                        break;\n                    }\n                    if (rax_3 == 0)\n                    {\n                        break;\n                    }\n                    rax_3 = *r14_1;\n                    rdx_3 = r14_1;\n                }\n                if (rax_3 == 0)\n                {\n                    break;\n                }\n                rax_1 = *(rdx_3 + 4);\n            }\n        } while (rax_1 != 0);\n        if ((!((rdx <= 0x1f && rax_1 == 0x29) && r13_1 == 0)))\n        {\n            goto label_4139b0;\n        }\n        void** r13_4 = rbx_1;\n        if ((arg1 - 0x3f) > 1)\n        {\n            var_50 = (((r14_1 - rsi) >> 2) + 1);\n        }\n        int64_t rax_21 = (((var_50 << 2) + 0xf) & 0xfffffffffffffff8);\n        if ((rax_21 - 8) > 0x1f37)\n        {\n            goto label_4139b0;\n        }\n        if (var_50 > 0x3fffffffffffffff)\n        {\n            goto label_4139b0;\n        }\n        void* rax_25 = (((rsp - ((rax_21 + 0x17) & 0xfffffffffffffff0)) + 0xf) & 0xfffffffffffffff0);\n        *wmempcpy((rax_25 + 8), rsi, ((r14_1 - rsi) >> 2)) = 0;\n        *r13_4 = rax_25;\n        void** r13_5 = var_40;\n        *rax_25 = 0;\n        if (r13_5 == 0)\n        {\n            __assert_fail(\"list != NULL\", \"lib/fnmatch_loop.c\", 0x454, \"ext_wmatch\");\n            /* no return */\n        }\n        if (*(r14_1 - 4) != 0x29)\n        {\n            __assert_fail(\"p[-1] == L_(')')\", \"lib/fnmatch_loop.c\", 0x455, \"ext_wmatch\");\n            /* no return */\n        }\n        uint64_t r15_3 = (arg1 - 0x21);\n        if (r15_3 > 0x1f)\n        {\n        label_413e3c:\n            __assert_fail(\"! \"Invalid extended matching ope\u2026\", \"lib/fnmatch_loop.c\", 0x4ad, \"ext_wmatch\");\n            /* no return */\n        }\n        int32_t rax_27;\n        if (r15_3 == 9)\n        {\n            rax_27 = sub_413e80(r14_1, arg3, arg4, arg5, arg6);\n        }\n        if ((r15_3 == 0xa || (r15_3 == 9 && rax_27 != 0)))\n        {\n            int32_t* var_78_2 = r14_1;\n            int32_t* r14_2 = arg3;\n            int32_t r12_2 = (arg6 & 0xfffffffb);\n            int32_t r15_5 = (arg6 & 1);\n            if (r15_5 != 0)\n            {\n                r12_2 = arg6;\n            }\n            void* rax_29 = &arg2[-1];\n            int32_t var_58_1 = r15_5;\n            do\n            {\n                if (r14_2 <= arg4)\n                {\n                    int32_t* r15_6 = r14_2;\n                    var_50 = arg5;\n                    int32_t rax_37;\n                    int32_t rax_38;\n                    do\n                    {\n                        rax_37 = sub_413e80(&r13_5[1], r14_2, r15_6, var_50, r12_2);\n                        if (rax_37 == 0)\n                        {\n                            if (r14_2 != r15_6)\n                            {\n                                bool rcx_3 = false;\n                                if (r15_6[-1] == 0x2f)\n                                {\n                                    rcx_3 = (arg6 & 5) == 5;\n                                }\n                                if (sub_413e80(var_78_2, r15_6, arg4, rcx_3, r12_2) == 0)\n                                {\n                                    break;\n                                }\n                                bool rcx_4 = false;\n                                if (r15_6[-1] == 0x2f)\n                                {\n                                    rcx_4 = (arg6 & 5) == 5;\n                                }\n                                if (sub_413e80(rax_29, r15_6, arg4, rcx_4, r12_2) == 0)\n                                {\n                                    break;\n                                }\n                            }\n                            else\n                            {\n                                rax_38 = sub_413e80(var_78_2, r14_2, arg4, var_50, r12_2);\n                                if (rax_38 == 0)\n                                {\n                                    break;\n                                }\n                            }\n                            r13_5 = var_40;\n                        }\n                        r15_6 = &r15_6[1];\n                    } while (arg4 >= r15_6);\n                    if (((rax_37 == 0 && r14_2 == r15_6) && rax_38 == 0))\n                    {\n                        goto label_413ce3;\n                    }\n                }\n                r13_5 = *r13_5;\n                var_40 = r13_5;\n            } while (r13_5 != 0);\n            goto label_413d87;\n        }\n        bool r12_4;\n        if (r15_3 == 0x1f)\n        {\n            r12_4 = arg5;\n        }\n        int32_t rax_47;\n        if (r15_3 == 0x1e)\n        {\n            r12_4 = arg5;\n            rax_47 = sub_413e80(r14_1, arg3, arg4, r12_4, arg6);\n        }\n        if ((r15_3 == 0x1f || (r15_3 == 0x1e && rax_47 != 0)))\n        {\n            int32_t rbx_7 = (arg6 & 0xfffffffb);\n            if ((arg6 & 1) != 0)\n            {\n                rbx_7 = arg6;\n            }\n            int32_t rax_46;\n            do\n            {\n                rax_46 = sub_413e80(wcscat(&r13_5[1], r14_1), arg3, arg4, r12_4, rbx_7);\n                if (rax_46 == 0)\n                {\n                    break;\n                }\n                r13_5 = *r13_5;\n                var_40 = r13_5;\n            } while (r13_5 != 0);\n            if (rax_46 != 0)\n            {\n                goto label_413d87;\n            }\n            rax_2 = 0;\n        }\n        if ((r15_3 == 0x1e && rax_47 == 0))\n        {\n            rax_2 = 0;\n        }\n        if (r15_3 == 0)\n        {\n            if (arg3 > arg4)\n            {\n            label_413d87:\n                rax_2 = 1;\n            }\n            else\n            {\n                int32_t var_58;\n                var_58 = r14_1;\n                uint64_t r14_3 = arg3;\n                int32_t rbx_5 = (arg6 & 0xfffffffb);\n                if ((arg6 & 1) != 0)\n                {\n                    rbx_5 = arg6;\n                }\n                int32_t rax_40;\n                int32_t rax_43;\n                do\n                {\n                    void** r13_6 = r13_5;\n                    do\n                    {\n                        rax_40 = sub_413e80(&r13_6[1], arg3, r14_3, arg5, rbx_5);\n                        if (rax_40 == 0)\n                        {\n                            break;\n                        }\n                        r13_6 = *r13_6;\n                    } while (r13_6 != 0);\n                    if (rax_40 != 0)\n                    {\n                        bool rcx_9;\n                        if (arg3 == r14_3)\n                        {\n                            rcx_9 = arg5;\n                        }\n                        else\n                        {\n                            rcx_9 = false;\n                            if (*(r14_3 - 4) == 0x2f)\n                            {\n                                rcx_9 = (arg6 & 5) == 5;\n                            }\n                        }\n                        rax_43 = sub_413e80(var_58, r14_3, arg4, rcx_9, rbx_5);\n                        if (rax_43 == 0)\n                        {\n                            break;\n                        }\n                    }\n                    r14_3 = (r14_3 + 4);\n                } while (arg4 >= r14_3);\n                if ((!(rax_40 != 0 && rax_43 == 0)))\n                {\n                    goto label_413d87;\n                }\n            }\n        }\n        if (((r15_3 == 9 && rax_27 == 0) || (r15_3 == 0 && arg3 <= arg4)))\n        {\n        label_413ce3:\n            rax_2 = 0;\n        }\n        if (((((((((((((((((((((((((((r15_3 == 1 || r15_3 == 2) || r15_3 == 3) || r15_3 == 4) || r15_3 == 5) || r15_3 == 6) || r15_3 == 7) || r15_3 == 8) || r15_3 == 0xb) || r15_3 == 0xc) || r15_3 == 0xd) || r15_3 == 0xe) || r15_3 == 0xf) || r15_3 == 0x10) || r15_3 == 0x11) || r15_3 == 0x12) || r15_3 == 0x13) || r15_3 == 0x14) || r15_3 == 0x15) || r15_3 == 0x16) || r15_3 == 0x17) || r15_3 == 0x18) || r15_3 == 0x19) || r15_3 == 0x1a) || r15_3 == 0x1b) || r15_3 == 0x1c) || r15_3 == 0x1d))\n        {\n            goto label_413e3c;\n        }\n    }\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_413e80",
            "funcStartAddr": "0x413e80",
            "funcEndAddr": "0x41495c",
            "decompiledFuncCode": "uint64_t sub_413e80(int32_t* arg1, int32_t* arg2, uint64_t arg3, bool arg4, \n    int32_t arg5)\n{\n    uint64_t r14 = arg3;\n    int32_t* rbx = arg2;\n    wint_t r15 = *arg1;\n    int32_t var_570 = arg5;\n    wchar_t* var_580 = &arg1[1];\n    uint64_t rax_12;\n    if (r15 != 0)\n    {\n        int32_t r8 = (arg5 & 5);\n        uint64_t var_578_1 = arg3;\n        int32_t rbp_2 = (arg5 & 0x10);\n        bool r10_1 = arg4;\n        int32_t r12_2 = (arg5 & 2);\n        int32_t* rbp_3 = arg1;\n        while (true)\n        {\n            if (rbp_2 != 0)\n            {\n                wint_t rax_1;\n                rax_1 = towlower(r15);\n                r15 = rax_1;\n            }\n            uint64_t rax_2 = (r15 - 0x21);\n            bool var_56c;\n            if (rax_2 <= 0x3b)\n            {\n                switch (rax_2)\n                {\n                    case 0:\n                    case 0xa:\n                    case 0x1f:\n                    {\n                        if (((var_570 & 0x20) != 0 && rbp_3[1] == 0x28))\n                        {\n                            rax_12 = sub_4138f0(r15, var_580, rbx, var_578_1, r10_1, var_570);\n                            if (rax_12 != 0xffffffff)\n                            {\n                                return rax_12;\n                            }\n                        }\n                        break;\n                    }\n                    case 9:\n                    {\n                        wchar_t* r14_3 = var_578_1;\n                        int32_t rax_15 = (var_570 & 0x20);\n                        if ((rax_15 != 0 && rbp_3[1] == 0x28))\n                        {\n                            var_578_1 = r10_1;\n                            rax_12 = sub_4138f0(0x2a, var_580, rbx, r14_3, r10_1, var_570);\n                            if (rax_12 != 0xffffffff)\n                            {\n                                return rax_12;\n                            }\n                            r10_1 = var_578_1;\n                        }\n                        if ((r14_3 != rbx && (*rbx == 0x2e && r10_1 != 0)))\n                        {\n                            goto label_414130;\n                        }\n                        int32_t r11_1 = rbp_3[1];\n                        void* r15_2 = &rbp_3[2];\n                        if ((r11_1 == 0x2a || r11_1 == 0x3f))\n                        {\n                            arg3 = rax_15 != 0;\n                            int32_t r13_4 = (var_570 & 1);\n                            while (true)\n                            {\n                                void* rax_17;\n                                if ((arg3 != 0 && *r15_2 == 0x28))\n                                {\n                                    var_578_1 = r10_1;\n                                    var_580 = arg3;\n                                    var_56c = r11_1;\n                                    rax_17 = sub_4136f0(r15_2);\n                                    arg3 = var_580;\n                                    r10_1 = var_578_1;\n                                    if (rax_17 == r15_2)\n                                    {\n                                        r11_1 = var_56c;\n                                    }\n                                }\n                                if (((((*r15_2 == 0x28 && arg3 != 0) && rax_17 == r15_2) || *r15_2 != 0x28) || (*r15_2 == 0x28 && arg3 == 0)))\n                                {\n                                    if (r11_1 == 0x3f)\n                                    {\n                                        if (rbx == r14_3)\n                                        {\n                                            goto label_414130;\n                                        }\n                                        if ((*rbx == 0x2f && r13_4 != 0))\n                                        {\n                                            goto label_414130;\n                                        }\n                                        rbx = &rbx[1];\n                                    }\n                                    rax_17 = r15_2;\n                                }\n                                r11_1 = *rax_17;\n                                r15_2 = (rax_17 + 4);\n                                if (r11_1 == 0x3f)\n                                {\n                                    continue;\n                                }\n                                if ((r11_1 != 0x3f && r11_1 != 0x2a))\n                                {\n                                    break;\n                                }\n                                if (r11_1 != 0x2a)\n                                {\n                                    /* nop */\n                                }\n                            }\n                        }\n                        int32_t rcx_2 = (var_570 & 1);\n                        if (r11_1 != 0)\n                        {\n                            var_578_1 = r11_1;\n                            var_580 = rcx_2;\n                            wchar_t* rax_18 = wmemchr(rbx, ((-rcx_2) & 0x2f), ((r14_3 - rbx) >> 2));\n                            wint_t r11_2 = var_578_1;\n                            int32_t rcx_3 = var_580;\n                            wchar_t* r9_2 = rax_18;\n                            bool r10_2 = r10_1;\n                            if (rax_18 == 0)\n                            {\n                                r9_2 = r14_3;\n                            }\n                            if (r11_2 != 0x5b)\n                            {\n                                uint64_t rax_25;\n                                if (rax_15 != 0)\n                                {\n                                    rax_25 = (r11_2 - 0x21);\n                                }\n                                if ((((rax_15 == 0 || (rax_15 != 0 && rax_25 > 0x1f)) || ((rax_15 != 0 && rax_25 <= 0x1f) && (!(TEST_BITQ(0x80000401, rax_25))))) || (((rax_15 != 0 && rax_25 <= 0x1f) && (TEST_BITQ(0x80000401, rax_25))) && *r15_2 != 0x28)))\n                                {\n                                    if (r11_2 != 0x2f)\n                                    {\n                                        if (rcx_3 != 0)\n                                        {\n                                            goto label_414298;\n                                        }\n                                    label_41484f:\n                                        var_570 = (var_570 & 0xfffffffb);\n                                    label_414298:\n                                        uint32_t r13_6 = r10_2;\n                                        if ((r11_2 == 0x5c && r12_2 == 0))\n                                        {\n                                            r11_2 = *r15_2;\n                                        }\n                                        if (rbp_2 != 0)\n                                        {\n                                            r11_2 = towlower(r11_2);\n                                        }\n                                        void* r15_3 = (r15_2 - 4);\n                                        if (r9_2 <= rbx)\n                                        {\n                                            goto label_414130;\n                                        }\n                                        uint32_t r14_4 = r13_6;\n                                        int32_t* r13_7 = rbx;\n                                        wint_t rax_20;\n                                        int32_t rax_21;\n                                        do\n                                        {\n                                            rax_20 = *r13_7;\n                                            if (rbp_2 != 0)\n                                            {\n                                                rax_20 = towlower(rax_20);\n                                            }\n                                            if (r11_2 == rax_20)\n                                            {\n                                                rax_21 = sub_413e80(r15_3, r13_7, r14_3, r14_4, var_570);\n                                                if (rax_21 == 0)\n                                                {\n                                                    break;\n                                                }\n                                            }\n                                            r13_7 = &r13_7[1];\n                                            r14_4 = 0;\n                                        } while (r9_2 > r13_7);\n                                        if ((r11_2 == rax_20 && rax_21 == 0))\n                                        {\n                                            goto label_414320;\n                                        }\n                                        goto label_414130;\n                                    }\n                                    if (rcx_3 != 0)\n                                    {\n                                        if (r14_3 <= rbx)\n                                        {\n                                            goto label_414130;\n                                        }\n                                        while (*rbx != 0x2f)\n                                        {\n                                            rbx = &rbx[1];\n                                            if (r14_3 <= rbx)\n                                            {\n                                                break;\n                                            }\n                                        }\n                                        if (*rbx != 0x2f)\n                                        {\n                                            goto label_414130;\n                                        }\n                                        int32_t rax_31;\n                                        rax_31 = sub_413e80(r15_2, &rbx[1], r14_3, ((var_570 >> 2) & 1)) != 0;\n                                        rax_12 = rax_31;\n                                        return rax_12;\n                                    }\n                                    goto label_41484f;\n                                }\n                            }\n                            int32_t rax_27 = (var_570 & 0xfffffffb);\n                            if (rcx_3 != 0)\n                            {\n                                rax_27 = var_570;\n                            }\n                            void* r15_4 = (r15_2 - 4);\n                            if (r9_2 <= rbx)\n                            {\n                                goto label_414130;\n                            }\n                            int32_t rax_28;\n                            do\n                            {\n                                rax_28 = sub_413e80(r15_4, rbx, r14_3, r10_2, rax_27);\n                                if (rax_28 == 0)\n                                {\n                                    break;\n                                }\n                                rbx = &rbx[1];\n                                r10_2 = false;\n                            } while (r9_2 > rbx);\n                            if (rax_28 == 0)\n                            {\n                                goto label_414320;\n                            }\n                            goto label_414130;\n                        }\n                        if (rcx_2 == 0)\n                        {\n                            goto label_414320;\n                        }\n                        if ((var_570 & 8) != 0)\n                        {\n                            goto label_414320;\n                        }\n                        wchar_t* rax_29;\n                        rax_29 = wmemchr(rbx, 0x2f, ((r14_3 - rbx) >> 2)) != 0;\n                        rax_12 = rax_29;\n                        return rax_12;\n                        break;\n                    }\n                    case 0xe:\n                    {\n                        if (r8 == 5)\n                        {\n                            if (var_578_1 == rbx)\n                            {\n                                goto label_414130;\n                            }\n                            if (*rbx != 0x2f)\n                            {\n                                goto label_414130;\n                            }\n                            rbp_3 = var_580;\n                            r10_1 = true;\n                            goto label_4140fd;\n                        }\n                        break;\n                    }\n                    case 0x1e:\n                    {\n                        if (((var_570 & 0x20) != 0 && rbp_3[1] == 0x28))\n                        {\n                            rax_12 = sub_4138f0(0x3f, var_580, rbx, var_578_1, r10_1, var_570);\n                            if (rax_12 != 0xffffffff)\n                            {\n                                return rax_12;\n                            }\n                        }\n                        if (var_578_1 == rbx)\n                        {\n                            goto label_414130;\n                        }\n                        int32_t rax_9 = *rbx;\n                        if (rax_9 != 0x2f)\n                        {\n                            rax_9 = rax_9 == 0x2e;\n                            r10_1 = (r10_1 & rax_9);\n                            if (r10_1 != 0)\n                            {\n                                goto label_414130;\n                            }\n                            rbp_3 = var_580;\n                            goto label_4140fd;\n                        }\n                        if ((var_570 & 1) != 0)\n                        {\n                            goto label_414130;\n                        }\n                        goto label_4140f5;\n                    }\n                    case 0x3a:\n                    {\n                        if (data_625918 == 0)\n                        {\n                            char* rax_22;\n                            rax_22 = getenv(\"POSIXLY_CORRECT\");\n                            data_625918 = ((rax_22 - rax_22) | 1);\n                        }\n                        if (var_578_1 == rbx)\n                        {\n                            goto label_414130;\n                        }\n                        wint_t r8_2 = *rbx;\n                        if (r8_2 == 0x2e)\n                        {\n                            if (r10_1 != 0)\n                            {\n                                goto label_414130;\n                            }\n                        }\n                        else if ((r8_2 == 0x2f && (var_570 & 1) != 0))\n                        {\n                            goto label_414130;\n                        }\n                        int32_t rax_6 = rbp_3[1];\n                        wchar_t* r14_1;\n                        if ((rax_6 == 0x21 || (data_625918 < 0 && rax_6 == 0x5e)))\n                        {\n                            r14_1 = &rbp_3[2];\n                            var_56c = 1;\n                        }\n                        if ((rax_6 != 0x21 && (data_625918 >= 0 || (data_625918 < 0 && rax_6 != 0x5e))))\n                        {\n                            var_56c = 0;\n                            r14_1 = var_580;\n                        }\n                        if (rbp_2 != 0)\n                        {\n                            wint_t rax_7;\n                            rax_7 = towlower(r8_2);\n                            r8_2 = rax_7;\n                        }\n                        rbp_3 = &r14_1[1];\n                        wint_t* r15_1 = rbx;\n                        uint64_t rax_8 = *r14_1;\n                        while (true)\n                        {\n                            int32_t r14_2;\n                            if ((r12_2 == 0 && rax_8 == 0x5c))\n                            {\n                                rax_8 = *rbp_3;\n                                if (rax_8 != 0)\n                                {\n                                    if (rbp_2 != 0)\n                                    {\n                                        rax_8 = towlower(rax_8);\n                                    }\n                                    r14_2 = rbp_3[1];\n                                    rbp_3 = &rbp_3[1];\n                                    goto label_414036;\n                                }\n                                goto label_414130;\n                            }\n                            void* rsi_1;\n                            if (rax_8 == 0x5b)\n                            {\n                                r14_2 = *rbp_3;\n                                if (r14_2 == 0x3a)\n                                {\n                                    void* r14_5 = rbp_3;\n                                    arg3 = 0;\n                                    void* r8_5;\n                                    do\n                                    {\n                                        rax_8 = *(r14_5 + 4);\n                                        r8_5 = (r14_5 + 4);\n                                        if (rax_8 == 0x3a)\n                                        {\n                                            break;\n                                        }\n                                        if ((rax_8 - 0x61) > 0x18)\n                                        {\n                                            break;\n                                        }\n                                        arg3 = (arg3 + 1);\n                                        r14_5 = r8_5;\n                                        var_44c;\n                                        *(&var_44c + (arg3 << 2)) = rax_8;\n                                    } while (arg3 != 0x100);\n                                    if ((rax_8 == 0x3a && *(r8_5 + 4) == 0x5d))\n                                    {\n                                        int32_t var_448;\n                                        &var_448[arg3] = 0;\n                                        void var_558;\n                                        void* rsi_11 = &var_558;\n                                        int32_t* rdx_13 = &var_448;\n                                        int32_t rax_30 = var_448;\n                                        do\n                                        {\n                                            if (rax_30 > 0x3f)\n                                            {\n                                                if (rax_30 < 0x41)\n                                                {\n                                                    break;\n                                                }\n                                                if ((rax_30 > 0x5f && (rax_30 - 0x61) > 0x1d))\n                                                {\n                                                    break;\n                                                }\n                                            }\n                                            else if ((rax_30 < 0x25 && (rax_30 - 0x20) > 3))\n                                            {\n                                                break;\n                                            }\n                                            void var_48;\n                                            if (rdx_13 == &var_48)\n                                            {\n                                                break;\n                                            }\n                                            rdx_13 = &rdx_13[1];\n                                            rsi_11 = (rsi_11 + 1);\n                                            *(rsi_11 - 1) = rax_30;\n                                            rax_30 = *rdx_13;\n                                        } while (rax_30 != 0);\n                                        if ((rax_30 > 0x3f && rax_30 < 0x41))\n                                        {\n                                            goto label_414130;\n                                        }\n                                        *rsi_11 = 0;\n                                        wctype_t rax_33 = wctype(&var_558);\n                                        if (rax_33 == 0)\n                                        {\n                                            goto label_414130;\n                                        }\n                                        rax_8 = iswctype(*r15_1, rax_33);\n                                        if (rax_8 != 0)\n                                        {\n                                            rbp_3 = (r14_5 + 0xc);\n                                            rbx = r15_1;\n                                            r14_2 = *(r14_5 + 0xc);\n                                            rsi_1 = (r14_5 + 0x10);\n                                            goto label_414663;\n                                        }\n                                        rbp_3 = (r8_5 + 0xc);\n                                        rax_8 = *(r8_5 + 8);\n                                    }\n                                    if ((rax_8 != 0x3a && (!(rax_8 != 0x3a && (rax_8 - 0x61) > 0x18))))\n                                    {\n                                        goto label_414130;\n                                    }\n                                    if (((rax_8 == 0x3a && *(r8_5 + 4) != 0x5d) || rax_8 != 0x3a))\n                                    {\n                                        rsi_1 = &rbp_3[1];\n                                        if (r8_2 != 0x5b)\n                                        {\n                                            rbp_3 = rsi_1;\n                                            rax_8 = 0x3a;\n                                            continue;\n                                        }\n                                        goto label_414640;\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                if (rax_8 == 0)\n                                {\n                                    rbx = r15_1;\n                                    break;\n                                }\n                                r14_2 = *rbp_3;\n                            }\n                            if (((rax_8 == 0x5b && r14_2 != 0x3a) || rax_8 != 0x5b))\n                            {\n                                while (true)\n                                {\n                                    if (rbp_2 != 0)\n                                    {\n                                        rax_8 = towlower(rax_8);\n                                    }\n                                label_414036:\n                                    rsi_1 = &rbp_3[1];\n                                    if (r14_2 != 0x2d)\n                                    {\n                                        break;\n                                    }\n                                    arg3 = rbp_3[1];\n                                    if ((arg3 != 0x5d && arg3 != 0))\n                                    {\n                                        break;\n                                    }\n                                    if (rax_8 == r8_2)\n                                    {\n                                        break;\n                                    }\n                                    if (arg3 != 0x5d)\n                                    {\n                                        break;\n                                    }\n                                    r14_2 = 0x5d;\n                                    rbp_3 = rsi_1;\n                                    rax_8 = 0x2d;\n                                }\n                                if (r14_2 != 0x2d)\n                                {\n                                    if (rax_8 == r8_2)\n                                    {\n                                    label_414640:\n                                        rbx = r15_1;\n                                        r14_2 = *rbp_3;\n                                    label_414663:\n                                        void* r8_9;\n                                        while (true)\n                                        {\n                                            r8_9 = rsi_1;\n                                            arg3 = r14_2;\n                                            if (r14_2 == 0)\n                                            {\n                                                break;\n                                            }\n                                            rax_8 = r12_2 == 0;\n                                            r10_1 = (r14_2 == 0x5c & rax_8);\n                                            if (r10_1 != 0)\n                                            {\n                                                if (rbp_3[1] == 0)\n                                                {\n                                                    break;\n                                                }\n                                                r14_2 = rbp_3[2];\n                                                rbp_3 = &rbp_3[2];\n                                            }\n                                            else\n                                            {\n                                                if (r14_2 == 0x5b)\n                                                {\n                                                    r14_2 = rbp_3[1];\n                                                    if (r14_2 == 0x3a)\n                                                    {\n                                                        rax_8 = &rbp_3[2];\n                                                        r14_2 = rbp_3[2];\n                                                        void* rbp_7 = &rbp_3[0x101];\n                                                        while (r14_2 != 0x3a)\n                                                        {\n                                                            if ((r14_2 - 0x61) > 0x18)\n                                                            {\n                                                                break;\n                                                            }\n                                                            rax_8 = (rax_8 + 4);\n                                                            r14_2 = *rax_8;\n                                                            if (rbp_7 == rax_8)\n                                                            {\n                                                                break;\n                                                            }\n                                                        }\n                                                        if ((r14_2 == 0x3a && *(rax_8 + 4) == 0x5d))\n                                                        {\n                                                            r8_9 = (rax_8 + 0xc);\n                                                            arg3 = *(rax_8 + 8);\n                                                        }\n                                                        if (r14_2 != 0x3a)\n                                                        {\n                                                            if ((!(r14_2 != 0x3a && (r14_2 - 0x61) > 0x18)))\n                                                            {\n                                                                break;\n                                                            }\n                                                            r14_2 = 0x3a;\n                                                            rbp_3 = rsi_1;\n                                                        }\n                                                    }\n                                                    void* rbp_6 = &rbp_3[2];\n                                                    if ((r14_2 == 0x3a && *(rax_8 + 4) != 0x5d))\n                                                    {\n                                                        rbp_3 = rsi_1;\n                                                    }\n                                                    if (r14_2 != 0x3a)\n                                                    {\n                                                        if (r14_2 == 0x2e)\n                                                        {\n                                                            while (true)\n                                                            {\n                                                                rax_8 = *(rbp_6 + 4);\n                                                                void* rdx_8 = (rbp_6 + 4);\n                                                                if (rax_8 == 0)\n                                                                {\n                                                                    break;\n                                                                }\n                                                                if ((rax_8 == 0x2e && *(rdx_8 + 4) == 0x5d))\n                                                                {\n                                                                    break;\n                                                                }\n                                                                rbp_6 = rdx_8;\n                                                            }\n                                                            if (rax_8 == 0)\n                                                            {\n                                                                break;\n                                                            }\n                                                            r8_9 = (rbp_6 + 0x10);\n                                                            arg3 = *(rbp_6 + 0xc);\n                                                        }\n                                                        if (r14_2 == 0x3d)\n                                                        {\n                                                            if (rbp_3[2] == 0)\n                                                            {\n                                                                break;\n                                                            }\n                                                            if (rbp_3[3] != 0x3d)\n                                                            {\n                                                                break;\n                                                            }\n                                                            if (rbp_3[4] != 0x5d)\n                                                            {\n                                                                break;\n                                                            }\n                                                            r8_9 = &rbp_3[6];\n                                                            arg3 = rbp_3[5];\n                                                        }\n                                                    }\n                                                }\n                                                if (((((((r14_2 == 0x5b && r14_2 == 0x3a) && r14_2 == 0x3a) && *(rax_8 + 4) == 0x5d) || r14_2 != 0x5b) || (((r14_2 == 0x5b && r14_2 != 0x3a) && r14_2 != 0x3d) && r14_2 == 0x2e)) || ((r14_2 == 0x5b && r14_2 != 0x3a) && r14_2 == 0x3d)))\n                                                {\n                                                    if (arg3 == 0x5d)\n                                                    {\n                                                        break;\n                                                    }\n                                                    r14_2 = *r8_9;\n                                                    rbp_3 = r8_9;\n                                                }\n                                            }\n                                            rsi_1 = &rbp_3[1];\n                                        }\n                                        if (r14_2 == 0)\n                                        {\n                                            goto label_414130;\n                                        }\n                                        if (var_56c == 0)\n                                        {\n                                            rbp_3 = r8_9;\n                                            break;\n                                        }\n                                        goto label_414130;\n                                    }\n                                    rax_8 = r14_2;\n                                    rbp_3 = rsi_1;\n                                }\n                                else\n                                {\n                                    if (((r14_2 == 0x2d && (arg3 == 0x5d || arg3 == 0)) && rax_8 == r8_2))\n                                    {\n                                        rbx = r15_1;\n                                        goto label_414663;\n                                    }\n                                    int32_t* rsi = &rbp_3[2];\n                                    if ((arg3 == 0x5c && r12_2 == 0))\n                                    {\n                                        rsi = &rbp_3[3];\n                                        arg3 = rbp_3[2];\n                                    }\n                                    if (arg3 == 0)\n                                    {\n                                        goto label_414130;\n                                    }\n                                    r14_2 = *rsi;\n                                    rbp_3 = &rsi[1];\n                                    arg1 = rax_8 <= r8_2;\n                                    arg3 = arg3 >= r8_2;\n                                    rax_8 = r14_2;\n                                    if ((arg1 & arg3) != 0)\n                                    {\n                                        rbp_3 = rsi;\n                                        rbx = r15_1;\n                                        rsi_1 = &rsi[1];\n                                        goto label_414663;\n                                    }\n                                }\n                            }\n                            if (rax_8 == 0x5d)\n                            {\n                                rbx = r15_1;\n                                if (var_56c == 0)\n                                {\n                                    goto label_414130;\n                                }\n                                goto label_414354;\n                            }\n                        }\n                        if (rax_8 == 0)\n                        {\n                            goto label_4140e2;\n                        }\n                        goto label_4140fd;\n                    }\n                    case 0x3b:\n                    {\n                        if (r12_2 == 0)\n                        {\n                            r15 = rbp_3[1];\n                            var_580 = &rbp_3[2];\n                            if (r15 == 0)\n                            {\n                                goto label_414130;\n                            }\n                            if (rbp_2 != 0)\n                            {\n                                r15 = towlower(r15);\n                                if (var_578_1 == rbx)\n                                {\n                                    goto label_414130;\n                                }\n                            }\n                            else if (var_578_1 == rbx)\n                            {\n                                goto label_414130;\n                            }\n                        }\n                        wint_t rax_5;\n                        if ((((r12_2 != 0 && var_578_1 != rbx) && rbp_2 != 0) || ((r12_2 == 0 && r15 != 0) && rbp_2 != 0)))\n                        {\n                            rax_5 = towlower(*rbx);\n                            rbp_3 = var_580;\n                        }\n                        if ((((r12_2 != 0 && var_578_1 != rbx) && rbp_2 == 0) || ((r12_2 == 0 && r15 != 0) && rbp_2 == 0)))\n                        {\n                            rax_5 = *rbx;\n                            rbp_3 = var_580;\n                        }\n                        if ((((((r12_2 != 0 && var_578_1 != rbx) && rbp_2 != 0) || ((r12_2 == 0 && r15 != 0) && rbp_2 != 0)) || ((r12_2 != 0 && var_578_1 != rbx) && rbp_2 == 0)) || ((r12_2 == 0 && r15 != 0) && rbp_2 == 0)))\n                        {\n                            if (rax_5 != r15)\n                            {\n                                goto label_414130;\n                            }\n                        label_414354:\n                            r10_1 = false;\n                        }\n                        if ((r12_2 != 0 && var_578_1 == rbx))\n                        {\n                            goto label_414130;\n                        }\n                        goto label_4140fd;\n                    }\n                }\n            }\n            if (var_578_1 == rbx)\n            {\n                goto label_414130;\n            }\n        label_4140e2:\n            wint_t rax_10 = *rbx;\n            if (rbp_2 != 0)\n            {\n                rax_10 = towlower(rax_10);\n            }\n            if (rax_10 != r15)\n            {\n                goto label_414130;\n            }\n        label_4140f5:\n            rbp_3 = var_580;\n            r10_1 = false;\n        label_4140fd:\n            r15 = *rbp_3;\n            rbx = &rbx[1];\n            var_580 = &rbp_3[1];\n            if (r15 == 0)\n            {\n                r14 = var_578_1;\n                break;\n            }\n        }\n    }\n    if (rbx == r14)\n    {\n    label_414320:\n        rax_12 = 0;\n    }\n    else if ((var_570 & 8) != 0)\n    {\n        rax_12 = *rbx != 0x2f;\n    }\n    else\n    {\n    label_414130:\n        rax_12 = 1;\n    }\n    return rax_12;\n}\n\n"
        },
        {
            "funcName": "sub_414960",
            "funcStartAddr": "0x414960",
            "funcEndAddr": "0x414ea3",
            "decompiledFuncCode": "int64_t sub_414960(int32_t arg1, char* arg2, char* arg3, char* arg4, char arg5, \n    int32_t arg6)\n{\n    void* var_88;\n    int64_t* rsp = &var_88;\n    void** var_40 = nullptr;\n    uint64_t rax = strlen(arg2);\n    uint32_t rax_1 = arg2[1];\n    int64_t rax_2;\n    if (rax_1 == 0)\n    {\n    label_414a30:\n        rax_2 = 0xffffffff;\n    }\n    else\n    {\n        void* r14_1 = &arg2[1];\n        void* rsi = r14_1;\n        int64_t* rbx_1 = &var_40;\n        int32_t rdi_2 = (arg1 - 0x3f);\n        int64_t r15_1 = 0;\n        uint64_t rdx;\n        do\n        {\n            if (rax_1 != 0x5b)\n            {\n                while (true)\n                {\n                    rdx = (rax_1 - 0x21);\n                    if (rdx > 0x1f)\n                    {\n                        break;\n                    }\n                    if ((!(TEST_BITQ(0xc0000601, rdx))))\n                    {\n                        break;\n                    }\n                    if (*(r14_1 + 1) != 0x28)\n                    {\n                        break;\n                    }\n                    r15_1 = (r15_1 + 1);\n                    r14_1 = (r14_1 + 1);\n                    rax_1 = 0x28;\n                }\n                if (((rdx > 0x1f && rax_1 == 0x7c) && r15_1 == 0))\n                {\n                    uint64_t rdx_4 = (r14_1 - rsi);\n                    uint64_t rax_4 = (rdx_4 + 1);\n                    if (rdi_2 <= 1)\n                    {\n                        rax_4 = rax;\n                    }\n                    int64_t rax_6 = ((rax_4 + 0xf) & 0xfffffffffffffff8);\n                    if ((rax_6 - 8) > 0x1f37)\n                    {\n                        break;\n                    }\n                    rsp = (rsp - ((rax_6 + 0x17) & 0xfffffffffffffff0));\n                    int64_t* r15_3 = ((rsp + 0xf) & 0xfffffffffffffff0);\n                    rsi = (r14_1 + 1);\n                    *mempcpy(&r15_3[1], rsi, rdx_4) = 0;\n                    rax_1 = *(r14_1 + 1);\n                    r14_1 = rsi;\n                    *r15_3 = 0;\n                    *rbx_1 = r15_3;\n                    rbx_1 = r15_3;\n                    r15_1 = 0;\n                }\n                if ((rdx <= 0x1f && rax_1 == 0x29))\n                {\n                    int64_t rdx_1 = (r15_1 - 1);\n                    if (r15_1 == 0)\n                    {\n                        break;\n                    }\n                    rax_1 = *(r14_1 + 1);\n                    r15_1 = rdx_1;\n                    r14_1 = (r14_1 + 1);\n                    if (rax_1 == 0)\n                    {\n                        break;\n                    }\n                    continue;\n                }\n                if ((((rdx > 0x1f && rax_1 != 0x7c) || ((rdx > 0x1f && rax_1 == 0x7c) && r15_1 != 0)) || rdx <= 0x1f))\n                {\n                    rax_1 = *(r14_1 + 1);\n                    r14_1 = (r14_1 + 1);\n                }\n            }\n            else\n            {\n                if (data_625918 == 0)\n                {\n                    var_88 = rsi;\n                    char* rax_10 = getenv(\"POSIXLY_CORRECT\");\n                    rsi = var_88;\n                    data_625918 = ((rax_10 - rax_10) | 1);\n                }\n                char rax_3 = *(r14_1 + 1);\n                void* rcx_1;\n                if ((rax_3 == 0x21 || (data_625918 < 0 && rax_3 == 0x5e)))\n                {\n                    rcx_1 = (r14_1 + 2);\n                    rax_3 = *(r14_1 + 2);\n                }\n                if ((rax_3 != 0x21 && (data_625918 >= 0 || (data_625918 < 0 && rax_3 != 0x5e))))\n                {\n                    rcx_1 = (r14_1 + 1);\n                }\n                if (rax_3 == 0x5d)\n                {\n                    rax_3 = *(rcx_1 + 1);\n                    rcx_1 = (rcx_1 + 1);\n                    r14_1 = (rcx_1 + 1);\n                    if (rax_3 != 0x5d)\n                    {\n                        goto label_414aa0;\n                    }\n                }\n                else\n                {\n                    while (true)\n                    {\n                        r14_1 = (rcx_1 + 1);\n                        if (rax_3 == 0x5d)\n                        {\n                            break;\n                        }\n                    label_414aa0:\n                        if (rax_3 == 0)\n                        {\n                            break;\n                        }\n                        rax_3 = *r14_1;\n                        rcx_1 = r14_1;\n                    }\n                    if (rax_3 == 0)\n                    {\n                        break;\n                    }\n                }\n                rax_1 = *(rcx_1 + 1);\n            }\n        } while (rax_1 != 0);\n        if ((!((rdx <= 0x1f && rax_1 == 0x29) && r15_1 == 0)))\n        {\n            goto label_414a30;\n        }\n        void** r15_4 = rbx_1;\n        uint64_t rdx_6 = (r14_1 - rsi);\n        uint64_t rax_14 = (rdx_6 + 1);\n        if ((arg1 - 0x3f) <= 1)\n        {\n            rax_14 = rax;\n        }\n        int64_t rax_16 = ((rax_14 + 0xf) & 0xfffffffffffffff8);\n        if ((rax_16 - 8) > 0x1f37)\n        {\n            goto label_414a30;\n        }\n        void* rax_20 = (((rsp - ((rax_16 + 0x17) & 0xfffffffffffffff0)) + 0xf) & 0xfffffffffffffff0);\n        char* rax_21 = mempcpy((rax_20 + 8), rsi, rdx_6);\n        *r15_4 = rax_20;\n        *rax_21 = 0;\n        void** rax_22 = var_40;\n        *rax_20 = 0;\n        if (rax_22 == 0)\n        {\n            __assert_fail(\"list != NULL\", \"lib/fnmatch_loop.c\", 0x454, \"ext_match\");\n            /* no return */\n        }\n        if (*(r14_1 - 1) != 0x29)\n        {\n            __assert_fail(\"p[-1] == L_(')')\", \"lib/fnmatch_loop.c\", 0x455, \"ext_match\");\n            /* no return */\n        }\n        uint64_t r13_3 = (arg1 - 0x21);\n        if (r13_3 > 0x1f)\n        {\n        label_414e6c:\n            __assert_fail(\"! \"Invalid extended matching ope\u2026\", \"lib/fnmatch_loop.c\", 0x4ad, \"ext_match\");\n            /* no return */\n        }\n        int32_t rax_23;\n        if (r13_3 == 9)\n        {\n            rax_23 = sub_414eb0(r14_1, arg3, arg4, arg5, arg6);\n        }\n        if ((r13_3 == 0xa || (r13_3 == 9 && rax_23 != 0)))\n        {\n            int32_t var_60_1;\n            var_60_1 = r14_1;\n            void** r14_2 = rax_22;\n            int32_t r12_2 = (arg6 & 0xfffffffb);\n            int32_t r13_5 = (arg6 & 1);\n            if (r13_5 != 0)\n            {\n                r12_2 = arg6;\n            }\n            void* rax_25 = &arg2[-1];\n            void** var_58_1;\n            var_58_1 = r13_5;\n            do\n            {\n                if (arg3 <= arg4)\n                {\n                    uint32_t rax_26 = arg5;\n                    char* r13_6 = arg3;\n                    int32_t rax_33;\n                    int32_t rax_34;\n                    do\n                    {\n                        rax_33 = sub_414eb0(&r14_2[1], arg3, r13_6, rax_26, r12_2);\n                        if (rax_33 == 0)\n                        {\n                            if (arg3 != r13_6)\n                            {\n                                int32_t rcx_6 = 0;\n                                if (r13_6[-1] == 0x2f)\n                                {\n                                    rcx_6 = (arg6 & 5) == 5;\n                                }\n                                if (sub_414eb0(var_60_1, r13_6, arg4, rcx_6, r12_2) == 0)\n                                {\n                                    break;\n                                }\n                                int32_t rcx_7 = 0;\n                                if (r13_6[-1] == 0x2f)\n                                {\n                                    rcx_7 = (arg6 & 5) == 5;\n                                }\n                                if (sub_414eb0(rax_25, r13_6, arg4, rcx_7, r12_2) == 0)\n                                {\n                                    break;\n                                }\n                            }\n                            else\n                            {\n                                rax_34 = sub_414eb0(var_60_1, arg3, arg4, rax_26, r12_2);\n                                if (rax_34 == 0)\n                                {\n                                    break;\n                                }\n                            }\n                            r14_2 = var_40;\n                        }\n                        r13_6 = &r13_6[1];\n                    } while (arg4 >= r13_6);\n                    if (((rax_33 == 0 && arg3 == r13_6) && rax_34 == 0))\n                    {\n                        goto label_414d0e;\n                    }\n                }\n                r14_2 = *r14_2;\n                var_40 = r14_2;\n            } while (r14_2 != 0);\n            goto label_414dae;\n        }\n        uint32_t r12_4;\n        if (r13_3 == 0x1f)\n        {\n            r12_4 = arg5;\n        }\n        int32_t rax_43;\n        if (r13_3 == 0x1e)\n        {\n            r12_4 = arg5;\n            rax_43 = sub_414eb0(r14_1, arg3, arg4, r12_4, arg6);\n        }\n        if ((r13_3 == 0x1f || (r13_3 == 0x1e && rax_43 != 0)))\n        {\n            void** r13_8 = rax_22;\n            int32_t rbx_7 = (arg6 & 0xfffffffb);\n            if ((arg6 & 1) != 0)\n            {\n                rbx_7 = arg6;\n            }\n            int32_t rax_42;\n            do\n            {\n                rax_42 = sub_414eb0(strcat(&r13_8[1], r14_1), arg3, arg4, r12_4, rbx_7);\n                if (rax_42 == 0)\n                {\n                    break;\n                }\n                r13_8 = *r13_8;\n                var_40 = r13_8;\n            } while (r13_8 != 0);\n            if (rax_42 != 0)\n            {\n                goto label_414dae;\n            }\n            rax_2 = 0;\n        }\n        if ((r13_3 == 0x1e && rax_43 == 0))\n        {\n            rax_2 = 0;\n        }\n        if (r13_3 == 0)\n        {\n            if (arg3 > arg4)\n            {\n            label_414dae:\n                rax_2 = 1;\n            }\n            else\n            {\n                int32_t var_50;\n                var_50 = r14_1;\n                uint32_t r12_3 = arg5;\n                char* r13_7 = arg3;\n                int32_t rbx_5 = (arg6 & 0xfffffffb);\n                if ((arg6 & 1) != 0)\n                {\n                    rbx_5 = arg6;\n                }\n                int32_t rax_36;\n                int32_t rax_39;\n                do\n                {\n                    void** r14_3 = rax_22;\n                    do\n                    {\n                        rax_36 = sub_414eb0(&r14_3[1], arg3, r13_7, r12_3, rbx_5);\n                        if (rax_36 == 0)\n                        {\n                            break;\n                        }\n                        r14_3 = *r14_3;\n                    } while (r14_3 != 0);\n                    if (rax_36 != 0)\n                    {\n                        uint32_t rcx_11;\n                        if (arg3 == r13_7)\n                        {\n                            rcx_11 = r12_3;\n                        }\n                        else\n                        {\n                            rcx_11 = 0;\n                            if (r13_7[-1] == 0x2f)\n                            {\n                                rcx_11 = (arg6 & 5) == 5;\n                            }\n                        }\n                        rax_39 = sub_414eb0(var_50, r13_7, arg4, rcx_11, rbx_5);\n                        if (rax_39 == 0)\n                        {\n                            break;\n                        }\n                    }\n                    r13_7 = &r13_7[1];\n                } while (arg4 >= r13_7);\n                if ((!(rax_36 != 0 && rax_39 == 0)))\n                {\n                    goto label_414dae;\n                }\n            }\n        }\n        if (((r13_3 == 9 && rax_23 == 0) || (r13_3 == 0 && arg3 <= arg4)))\n        {\n        label_414d0e:\n            rax_2 = 0;\n        }\n        if (((((((((((((((((((((((((((r13_3 == 1 || r13_3 == 2) || r13_3 == 3) || r13_3 == 4) || r13_3 == 5) || r13_3 == 6) || r13_3 == 7) || r13_3 == 8) || r13_3 == 0xb) || r13_3 == 0xc) || r13_3 == 0xd) || r13_3 == 0xe) || r13_3 == 0xf) || r13_3 == 0x10) || r13_3 == 0x11) || r13_3 == 0x12) || r13_3 == 0x13) || r13_3 == 0x14) || r13_3 == 0x15) || r13_3 == 0x16) || r13_3 == 0x17) || r13_3 == 0x18) || r13_3 == 0x19) || r13_3 == 0x1a) || r13_3 == 0x1b) || r13_3 == 0x1c) || r13_3 == 0x1d))\n        {\n            goto label_414e6c;\n        }\n    }\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_414eb0",
            "funcStartAddr": "0x414eb0",
            "funcEndAddr": "0x415993",
            "decompiledFuncCode": "uint64_t sub_414eb0(char* arg1, char* arg2, char* arg3, int32_t arg4, \n    int32_t arg5)\n{\n    char* r14 = arg2;\n    uint64_t r12 = *arg1;\n    char* var_170 = arg3;\n    int32_t var_158 = arg5;\n    void* var_168 = &arg1[1];\n    uint64_t rax_18;\n    if (r12 != 0)\n    {\n        int32_t r8 = (arg5 & 5);\n        char* r13_1 = arg1;\n        uint64_t r15_1 = arg4;\n        int32_t rbp_2 = (arg5 & 2);\n        int32_t rbx_2 = (arg5 & 0x10);\n        do\n        {\n            if (rbx_2 != 0)\n            {\n                int32_t** rax_1;\n                rax_1 = __ctype_tolower_loc();\n                r12 = *rax_1[r12];\n            }\n            char rax_3 = (r12 - 0x21);\n            uint64_t var_160;\n            if (rax_3 <= 0x3b)\n            {\n                switch (rax_3)\n                {\n                    case 0:\n                    case 0xa:\n                    case 0x1f:\n                    {\n                        if (((var_158 & 0x20) != 0 && r13_1[1] == 0x28))\n                        {\n                            rax_18 = sub_414960(r12, var_168, r14, var_170, r15_1, var_158);\n                            if (rax_18 != 0xffffffff)\n                            {\n                                return rax_18;\n                            }\n                        }\n                        break;\n                    }\n                    case 9:\n                    {\n                        int32_t rax_20 = (var_158 & 0x20);\n                        if ((rax_20 != 0 && r13_1[1] == 0x28))\n                        {\n                            rax_18 = sub_414960(0x2a, var_168, r14, var_170, r15_1, var_158);\n                            if (rax_18 != 0xffffffff)\n                            {\n                                return rax_18;\n                            }\n                        }\n                        if ((r14 != var_170 && (*r14 == 0x2e && r15_1 != 0)))\n                        {\n                            goto label_4151c0;\n                        }\n                        char r8_3 = r13_1[1];\n                        void* r9_2 = &r13_1[2];\n                        if ((r8_3 == 0x2a || r8_3 == 0x3f))\n                        {\n                            r12 = rax_20 != 0;\n                            int32_t r13_4 = (var_158 & 1);\n                            while (true)\n                            {\n                                void* rax_21;\n                                if ((r12 != 0 && *r9_2 == 0x28))\n                                {\n                                    var_160 = r8_3;\n                                    rax_21 = sub_4137f0(r9_2);\n                                    if (rax_21 == r9_2)\n                                    {\n                                        r8_3 = var_160;\n                                    }\n                                }\n                                if (((((*r9_2 == 0x28 && r12 != 0) && rax_21 == r9_2) || *r9_2 != 0x28) || (*r9_2 == 0x28 && r12 == 0)))\n                                {\n                                    if (r8_3 == 0x3f)\n                                    {\n                                        if (r14 == var_170)\n                                        {\n                                            goto label_4151c0;\n                                        }\n                                        if ((*r14 == 0x2f && r13_4 != 0))\n                                        {\n                                            goto label_4151c0;\n                                        }\n                                        r14 = &r14[1];\n                                    }\n                                    rax_21 = r9_2;\n                                }\n                                r8_3 = *rax_21;\n                                r9_2 = (rax_21 + 1);\n                                if (r8_3 == 0x3f)\n                                {\n                                    continue;\n                                }\n                                if ((r8_3 != 0x3f && r8_3 != 0x2a))\n                                {\n                                    break;\n                                }\n                                if (r8_3 != 0x2a)\n                                {\n                                    /* nop */\n                                }\n                            }\n                        }\n                        int32_t rcx_5 = (var_158 & 1);\n                        if (r8_3 != 0)\n                        {\n                            int32_t var_150_1;\n                            var_150_1 = r8_3;\n                            var_168 = rcx_5;\n                            char* rax_22 = sub_416f00(r14, ((-rcx_5) & 0x2f), (var_170 - r14));\n                            uint32_t r8_4 = var_150_1;\n                            int32_t rcx_6 = var_168;\n                            char* r12_3 = rax_22;\n                            void* r9_3 = r9_2;\n                            if (rax_22 == 0)\n                            {\n                                r12_3 = var_170;\n                            }\n                            if (r8_4 != 0x5b)\n                            {\n                                uint64_t rax_41;\n                                if (rax_20 != 0)\n                                {\n                                    rax_41 = (r8_4 - 0x21);\n                                }\n                                if ((((rax_20 == 0 || (rax_20 != 0 && rax_41 > 0x1f)) || ((rax_20 != 0 && rax_41 <= 0x1f) && (!(TEST_BITQ(0x80000401, rax_41))))) || (((rax_20 != 0 && rax_41 <= 0x1f) && (TEST_BITQ(0x80000401, rax_41))) && *r9_3 != 0x28)))\n                                {\n                                    if (r8_4 != 0x2f)\n                                    {\n                                        if (rcx_6 != 0)\n                                        {\n                                            goto label_415321;\n                                        }\n                                    label_4158d2:\n                                        var_158 = (var_158 & 0xfffffffb);\n                                    label_415321:\n                                        uint32_t r15_4 = r15_1;\n                                        if ((r8_4 == 0x5c && rbp_2 == 0))\n                                        {\n                                            r8_4 = *r9_3;\n                                        }\n                                        if (rbx_2 != 0)\n                                        {\n                                            void* var_160_1;\n                                            var_160_1 = r8_4;\n                                            r8_4 = *__ctype_tolower_loc()[var_160_1];\n                                        }\n                                        void* rax_25 = (r9_3 - 1);\n                                        if (r12_3 <= r14)\n                                        {\n                                            goto label_4151c0;\n                                        }\n                                        uint32_t rbp_3 = r8_4;\n                                        uint32_t r13_6 = r15_4;\n                                        uint32_t rax_28;\n                                        int32_t rax_29;\n                                        do\n                                        {\n                                            rax_28 = *r14;\n                                            char r15_5 = rax_28;\n                                            if (rbx_2 != 0)\n                                            {\n                                                rax_28 = *__ctype_tolower_loc()[r15_5];\n                                            }\n                                            if (rax_28 == rbp_3)\n                                            {\n                                                rax_29 = sub_414eb0(rax_25, r14, var_170, r13_6, var_158);\n                                                if (rax_29 == 0)\n                                                {\n                                                    break;\n                                                }\n                                            }\n                                            r14 = &r14[1];\n                                            r13_6 = 0;\n                                        } while (r12_3 != r14);\n                                        if ((rax_28 == rbp_3 && rax_29 == 0))\n                                        {\n                                            goto label_4153c0;\n                                        }\n                                        goto label_4151c0;\n                                    }\n                                    if (rcx_6 != 0)\n                                    {\n                                        if (var_170 <= r14)\n                                        {\n                                            goto label_4151c0;\n                                        }\n                                        while (*r14 != 0x2f)\n                                        {\n                                            r14 = &r14[1];\n                                            if (var_170 == r14)\n                                            {\n                                                break;\n                                            }\n                                        }\n                                        if (*r14 != 0x2f)\n                                        {\n                                            goto label_4151c0;\n                                        }\n                                        int32_t rax_50;\n                                        rax_50 = sub_414eb0(r9_3, &r14[1], var_170, ((var_158 >> 2) & 1)) != 0;\n                                        rax_18 = rax_50;\n                                        return rax_18;\n                                    }\n                                    goto label_4158d2;\n                                }\n                            }\n                            void* rbx_3 = (r9_3 - 1);\n                            int32_t rax_43 = (var_158 & 0xfffffffb);\n                            if (rcx_6 != 0)\n                            {\n                                rax_43 = var_158;\n                            }\n                            if (r12_3 <= r14)\n                            {\n                                goto label_4151c0;\n                            }\n                            int32_t rax_44;\n                            do\n                            {\n                                rax_44 = sub_414eb0(rbx_3, r14, var_170, r15_1, rax_43);\n                                if (rax_44 == 0)\n                                {\n                                    break;\n                                }\n                                r14 = &r14[1];\n                                r15_1 = 0;\n                            } while (r12_3 != r14);\n                            if (rax_44 == 0)\n                            {\n                                goto label_4153c0;\n                            }\n                            goto label_4151c0;\n                        }\n                        if (rcx_5 == 0)\n                        {\n                            goto label_4153c0;\n                        }\n                        if ((var_158 & 8) != 0)\n                        {\n                            goto label_4153c0;\n                        }\n                        char* rax_45;\n                        rax_45 = sub_416f00(r14, 0x2f, (var_170 - r14)) != 0;\n                        rax_18 = rax_45;\n                        return rax_18;\n                        break;\n                    }\n                    case 0xe:\n                    {\n                        if (r8 == 5)\n                        {\n                            if (r14 == var_170)\n                            {\n                                goto label_4151c0;\n                            }\n                            if (*r14 != 0x2f)\n                            {\n                                goto label_4151c0;\n                            }\n                            r13_1 = var_168;\n                            r15_1 = 1;\n                            goto label_41518e;\n                        }\n                        break;\n                    }\n                    case 0x1e:\n                    {\n                        if (((var_158 & 0x20) != 0 && r13_1[1] == 0x28))\n                        {\n                            rax_18 = sub_414960(0x3f, var_168, r14, var_170, r15_1, var_158);\n                            if (rax_18 != 0xffffffff)\n                            {\n                                return rax_18;\n                            }\n                        }\n                        if (r14 == var_170)\n                        {\n                            goto label_4151c0;\n                        }\n                        bool rax_13 = *r14;\n                        if (rax_13 != 0x2f)\n                        {\n                            rax_13 = rax_13 == 0x2e;\n                            r15_1 = (r15_1 & rax_13);\n                            if (r15_1 != 0)\n                            {\n                                goto label_4151c0;\n                            }\n                            r13_1 = var_168;\n                            goto label_41518e;\n                        }\n                        if ((var_158 & 1) != 0)\n                        {\n                            goto label_4151c0;\n                        }\n                        goto label_415186;\n                    }\n                    case 0x3a:\n                    {\n                        if (data_625918 == 0)\n                        {\n                            char* rax_35;\n                            rax_35 = getenv(\"POSIXLY_CORRECT\");\n                            data_625918 = ((rax_35 - rax_35) | 1);\n                        }\n                        if (r14 == var_170)\n                        {\n                            goto label_4151c0;\n                        }\n                        uint64_t r12_2 = *r14;\n                        if (r12_2 == 0x2e)\n                        {\n                            if (r15_1 != 0)\n                            {\n                                goto label_4151c0;\n                            }\n                        }\n                        else if ((r12_2 == 0x2f && (var_158 & 1) != 0))\n                        {\n                            goto label_4151c0;\n                        }\n                        char rax_6 = r13_1[1];\n                        int32_t var_14c;\n                        void* r15_3;\n                        if ((rax_6 == 0x21 || (data_625918 < 0 && rax_6 == 0x5e)))\n                        {\n                            r15_3 = &r13_1[2];\n                            var_14c = 1;\n                        }\n                        if ((rax_6 != 0x21 && (data_625918 >= 0 || (data_625918 < 0 && rax_6 != 0x5e))))\n                        {\n                            var_14c = 0;\n                            r15_3 = var_168;\n                        }\n                        if (rbx_2 != 0)\n                        {\n                            int32_t** rax_7;\n                            rax_7 = __ctype_tolower_loc();\n                            r12_2 = *rax_7[r12_2];\n                        }\n                        uint32_t rax_9 = r12_2;\n                        r13_1 = (r15_3 + 1);\n                        r15_1 = *r15_3;\n                        while (true)\n                        {\n                            char rsi_1;\n                            if ((rbp_2 == 0 && r15_1 == 0x5c))\n                            {\n                                r15_1 = *r13_1;\n                                if (r15_1 != 0)\n                                {\n                                    if (rbx_2 != 0)\n                                    {\n                                        int32_t** rax_32;\n                                        rax_32 = __ctype_tolower_loc();\n                                        r15_1 = *rax_32[r15_1];\n                                    }\n                                    rsi_1 = r13_1[1];\n                                    r13_1 = &r13_1[1];\n                                    goto label_41506b;\n                                }\n                                goto label_4151c0;\n                            }\n                            char* rax_12;\n                            if (r15_1 == 0x5b)\n                            {\n                                rsi_1 = *r13_1;\n                                if (rsi_1 == 0x3a)\n                                {\n                                    r15_1 = r13_1;\n                                    arg3 = nullptr;\n                                    char rax_31;\n                                    uint64_t rcx_8;\n                                    do\n                                    {\n                                        rax_31 = *(r15_1 + 1);\n                                        rcx_8 = (r15_1 + 1);\n                                        if (rax_31 == 0x3a)\n                                        {\n                                            break;\n                                        }\n                                        if ((rax_31 - 0x61) > 0x18)\n                                        {\n                                            break;\n                                        }\n                                        arg3 = &arg3[1];\n                                        r15_1 = rcx_8;\n                                        *(&*var_14c[3] + arg3) = rax_31;\n                                    } while (arg3 != 0x100);\n                                    if ((rax_31 == 0x3a && *(rcx_8 + 1) == 0x5d))\n                                    {\n                                        void var_148;\n                                        *(&var_148 + arg3) = 0;\n                                        wctype_t rax_46 = wctype(&var_148);\n                                        if (rax_46 == 0)\n                                        {\n                                            goto label_4151c0;\n                                        }\n                                        int32_t rax_48;\n                                        rax_48 = iswctype(btowc(*r14), rax_46);\n                                        if (rax_48 != 0)\n                                        {\n                                            r13_1 = (r15_1 + 3);\n                                            rsi_1 = *(r15_1 + 3);\n                                            rax_12 = (r15_1 + 4);\n                                        label_4150d7:\n                                            void* r8_1;\n                                            while (true)\n                                            {\n                                                r8_1 = rax_12;\n                                                char rcx_2 = rsi_1;\n                                                if (rsi_1 == 0)\n                                                {\n                                                    break;\n                                                }\n                                                r15_1 = rsi_1 == 0x5c;\n                                                arg3 = rbp_2 == 0;\n                                                r15_1 = (r15_1 & arg3);\n                                                if (r15_1 != 0)\n                                                {\n                                                    if (r13_1[1] == 0)\n                                                    {\n                                                        break;\n                                                    }\n                                                    rsi_1 = r13_1[2];\n                                                    r13_1 = &r13_1[2];\n                                                }\n                                                else\n                                                {\n                                                    if (rsi_1 == 0x5b)\n                                                    {\n                                                        rsi_1 = r13_1[1];\n                                                        if (rsi_1 == 0x3a)\n                                                        {\n                                                            arg3 = &r13_1[2];\n                                                            rsi_1 = r13_1[2];\n                                                            void* r13_9 = &r13_1[0x101];\n                                                            while (rsi_1 != 0x3a)\n                                                            {\n                                                                if ((rsi_1 - 0x61) > 0x18)\n                                                                {\n                                                                    break;\n                                                                }\n                                                                arg3 = &arg3[1];\n                                                                rsi_1 = *arg3;\n                                                                if (r13_9 == arg3)\n                                                                {\n                                                                    break;\n                                                                }\n                                                            }\n                                                            if ((rsi_1 == 0x3a && arg3[1] == 0x5d))\n                                                            {\n                                                                r8_1 = &arg3[3];\n                                                                rcx_2 = arg3[2];\n                                                            }\n                                                            if (rsi_1 != 0x3a)\n                                                            {\n                                                                if ((!(rsi_1 != 0x3a && (rsi_1 - 0x61) > 0x18)))\n                                                                {\n                                                                    break;\n                                                                }\n                                                                rsi_1 = 0x3a;\n                                                                r13_1 = rax_12;\n                                                            }\n                                                        }\n                                                        char* r13_7 = &r13_1[2];\n                                                        if ((rsi_1 == 0x3a && arg3[1] != 0x5d))\n                                                        {\n                                                        label_4150d0:\n                                                            r13_1 = rax_12;\n                                                        }\n                                                        if (rsi_1 != 0x3a)\n                                                        {\n                                                            if (rsi_1 == 0x2e)\n                                                            {\n                                                                char rax_34;\n                                                                while (true)\n                                                                {\n                                                                    rax_34 = r13_7[1];\n                                                                    arg3 = &r13_7[1];\n                                                                    if (rax_34 == 0)\n                                                                    {\n                                                                        break;\n                                                                    }\n                                                                    if ((rax_34 == 0x2e && arg3[1] == 0x5d))\n                                                                    {\n                                                                        break;\n                                                                    }\n                                                                    r13_7 = arg3;\n                                                                }\n                                                                if (rax_34 == 0)\n                                                                {\n                                                                    break;\n                                                                }\n                                                                r8_1 = &r13_7[4];\n                                                                rcx_2 = r13_7[3];\n                                                            }\n                                                            if (rsi_1 == 0x3d)\n                                                            {\n                                                                if (r13_1[2] == 0)\n                                                                {\n                                                                    break;\n                                                                }\n                                                                if (r13_1[3] != 0x3d)\n                                                                {\n                                                                    break;\n                                                                }\n                                                                if (r13_1[4] != 0x5d)\n                                                                {\n                                                                    break;\n                                                                }\n                                                                r8_1 = &r13_1[6];\n                                                                rcx_2 = r13_1[5];\n                                                            }\n                                                        }\n                                                    }\n                                                    if (((((((rsi_1 == 0x5b && rsi_1 == 0x3a) && rsi_1 == 0x3a) && arg3[1] == 0x5d) || rsi_1 != 0x5b) || (((rsi_1 == 0x5b && rsi_1 != 0x3a) && rsi_1 != 0x3d) && rsi_1 == 0x2e)) || ((rsi_1 == 0x5b && rsi_1 != 0x3a) && rsi_1 == 0x3d)))\n                                                    {\n                                                        if (rcx_2 == 0x5d)\n                                                        {\n                                                            break;\n                                                        }\n                                                        r13_1 = r8_1;\n                                                        rsi_1 = *r8_1;\n                                                        rax_12 = &r13_1[1];\n                                                        continue;\n                                                    }\n                                                }\n                                                rax_12 = &r13_1[1];\n                                            }\n                                            if (rsi_1 == 0)\n                                            {\n                                                goto label_4151c0;\n                                            }\n                                            if (var_14c == 0)\n                                            {\n                                                r13_1 = r8_1;\n                                                break;\n                                            }\n                                            goto label_4151c0;\n                                        }\n                                        r13_1 = (r15_1 + 4);\n                                        r15_1 = *(rcx_8 + 2);\n                                    }\n                                    if ((rax_31 != 0x3a && (!(rax_31 != 0x3a && (rax_31 - 0x61) > 0x18))))\n                                    {\n                                        goto label_4151c0;\n                                    }\n                                    if (((rax_31 == 0x3a && *(rcx_8 + 1) != 0x5d) || rax_31 != 0x3a))\n                                    {\n                                        rax_12 = &r13_1[1];\n                                        if (r12_2 != 0x5b)\n                                        {\n                                            r13_1 = rax_12;\n                                            r15_1 = 0x3a;\n                                            continue;\n                                        }\n                                        goto label_415820;\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                if (r15_1 == 0)\n                                {\n                                    r12 = 0x5b;\n                                    break;\n                                }\n                                rsi_1 = *r13_1;\n                            }\n                            if (((r15_1 == 0x5b && rsi_1 != 0x3a) || r15_1 != 0x5b))\n                            {\n                                int32_t rcx_1;\n                                while (true)\n                                {\n                                    if (rbx_2 != 0)\n                                    {\n                                        var_160 = rsi_1;\n                                        int32_t** rax_10;\n                                        rax_10 = __ctype_tolower_loc();\n                                        rsi_1 = var_160;\n                                        r15_1 = *rax_10[r15_1];\n                                    }\n                                label_41506b:\n                                    rax_12 = &r13_1[1];\n                                    if (rsi_1 != 0x2d)\n                                    {\n                                        break;\n                                    }\n                                    arg3 = r13_1[1];\n                                    if ((arg3 != 0x5d && arg3 != 0))\n                                    {\n                                        break;\n                                    }\n                                    if (r12_2 == r15_1)\n                                    {\n                                        break;\n                                    }\n                                    rcx_1 = r15_1;\n                                    if (arg3 != 0x5d)\n                                    {\n                                        break;\n                                    }\n                                    rsi_1 = 0x5d;\n                                    r13_1 = rax_12;\n                                    r15_1 = 0x2d;\n                                }\n                                if (rsi_1 != 0x2d)\n                                {\n                                    if (r12_2 == r15_1)\n                                    {\n                                    label_415820:\n                                        rsi_1 = *r13_1;\n                                        goto label_4150d7;\n                                    }\n                                    r15_1 = rsi_1;\n                                    r13_1 = rax_12;\n                                }\n                                else\n                                {\n                                    if (((rsi_1 == 0x2d && (arg3 == 0x5d || arg3 == 0)) && r12_2 != r15_1))\n                                    {\n                                        goto label_41508f;\n                                    }\n                                    if ((!((rsi_1 == 0x2d && arg3 != 0x5d) && arg3 != 0)))\n                                    {\n                                        goto label_4150d7;\n                                    }\n                                    rcx_1 = r15_1;\n                                label_41508f:\n                                    rax_12 = &r13_1[2];\n                                    if ((rbp_2 == 0 && arg3 == 0x5c))\n                                    {\n                                        rax_12 = &r13_1[3];\n                                        arg3 = r13_1[2];\n                                    }\n                                    if (arg3 == 0)\n                                    {\n                                        goto label_4151c0;\n                                    }\n                                    rsi_1 = *rax_12;\n                                    r13_1 = &rax_12[1];\n                                    r15_1 = rsi_1;\n                                    if ((rcx_1 <= rax_9 && r12_2 <= arg3))\n                                    {\n                                        goto label_4150d0;\n                                    }\n                                }\n                            }\n                            if (r15_1 == 0x5d)\n                            {\n                                if (var_14c == 0)\n                                {\n                                    goto label_4151c0;\n                                }\n                                goto label_414f77;\n                            }\n                        }\n                        if (r15_1 == 0)\n                        {\n                            goto label_41516a;\n                        }\n                        goto label_41518e;\n                    }\n                    case 0x3b:\n                    {\n                        uint32_t rax_5;\n                        int32_t* rdx_5;\n                        char r12_1;\n                        if (rbp_2 == 0)\n                        {\n                            r12_1 = r13_1[1];\n                            void* r15_2 = &r13_1[2];\n                            var_168 = r15_2;\n                            if (r12_1 == 0)\n                            {\n                                goto label_4151c0;\n                            }\n                            if (rbx_2 != 0)\n                            {\n                                rdx_5 = *__ctype_tolower_loc();\n                                char rax_40 = rdx_5[r12_1];\n                                if (r14 == var_170)\n                                {\n                                    goto label_4151c0;\n                                }\n                                rax_5 = rax_40;\n                                r13_1 = r15_2;\n                            }\n                            else\n                            {\n                                if (r14 == var_170)\n                                {\n                                    goto label_4151c0;\n                                }\n                                rax_5 = r12_1;\n                            }\n                        }\n                        if (((rbp_2 != 0 && r14 != var_170) && rbx_2 == 0))\n                        {\n                            rax_5 = 0x5c;\n                        }\n                        if ((((rbp_2 != 0 && r14 != var_170) && rbx_2 == 0) || ((rbp_2 == 0 && r12_1 != 0) && rbx_2 == 0)))\n                        {\n                            arg3 = *r14;\n                            r13_1 = var_168;\n                        }\n                        if (((rbp_2 != 0 && r14 != var_170) && rbx_2 != 0))\n                        {\n                            r13_1 = var_168;\n                            rdx_5 = *__ctype_tolower_loc();\n                            rax_5 = 0x5c;\n                        }\n                        if ((((rbp_2 != 0 && r14 != var_170) && rbx_2 != 0) || ((rbp_2 == 0 && r12_1 != 0) && rbx_2 != 0)))\n                        {\n                            arg3 = rdx_5[*r14];\n                        }\n                        if ((((((rbp_2 != 0 && r14 != var_170) && rbx_2 == 0) || ((rbp_2 == 0 && r12_1 != 0) && rbx_2 == 0)) || ((rbp_2 != 0 && r14 != var_170) && rbx_2 != 0)) || ((rbp_2 == 0 && r12_1 != 0) && rbx_2 != 0)))\n                        {\n                            if (arg3 != rax_5)\n                            {\n                                goto label_4151c0;\n                            }\n                        label_414f77:\n                            r15_1 = 0;\n                        }\n                        if ((rbp_2 != 0 && r14 == var_170))\n                        {\n                            goto label_4151c0;\n                        }\n                        goto label_41518e;\n                    }\n                }\n            }\n            if (r14 == var_170)\n            {\n                goto label_4151c0;\n            }\n        label_41516a:\n            uint64_t rax_16 = *r14;\n            if (rbx_2 != 0)\n            {\n                int32_t** rax_14;\n                rax_14 = __ctype_tolower_loc();\n                rax_16 = *rax_14[rax_16];\n            }\n            if (rax_16 != r12)\n            {\n                goto label_4151c0;\n            }\n        label_415186:\n            r13_1 = var_168;\n            r15_1 = 0;\n        label_41518e:\n            r12 = *r13_1;\n            r14 = &r14[1];\n            var_168 = &r13_1[1];\n        } while (r12 != 0);\n    }\n    if (var_170 == r14)\n    {\n    label_4153c0:\n        rax_18 = 0;\n    }\n    else if ((var_158 & 8) != 0)\n    {\n        rax_18 = *r14 != 0x2f;\n    }\n    else\n    {\n    label_4151c0:\n        rax_18 = 1;\n    }\n    return rax_18;\n}\n\n"
        },
        {
            "funcName": "sub_4159a0",
            "funcStartAddr": "0x4159a0",
            "funcEndAddr": "0x415bd8",
            "decompiledFuncCode": "uint64_t sub_4159a0(char* arg1, char* arg2, int32_t arg3)\n{\n    char* var_50 = arg1;\n    char* var_58 = arg2;\n    uint64_t rax_2;\n    if (__ctype_get_mb_cur_max() != 1)\n    {\n        mbstate_t var_40;\n        var_40.__count = 0;\n        var_40.__value = 0;\n        uint64_t rax_3 = mbsrtowcs(nullptr, &var_50, 0, &var_40);\n        uint64_t rax_4 = (rax_3 + 1);\n        if (rax_3 != -1)\n        {\n            if (mbsinit(&var_40) == 0)\n            {\n                __assert_fail(\"mbsinit (&ps)\", \"lib/fnmatch.c\", 0x129, \"gnu_fnmatch\");\n                /* no return */\n            }\n            uint64_t rax_6 = mbsrtowcs(nullptr, &var_58, 0, &var_40);\n            uint64_t rax_7 = (rax_6 + 1);\n            if (rax_6 != -1)\n            {\n                if (mbsinit(&var_40) == 0)\n                {\n                    __assert_fail(\"mbsinit (&ps)\", \"lib/fnmatch.c\", 0x12d, \"gnu_fnmatch\");\n                    /* no return */\n                }\n                uint64_t rax_10 = (rax_4 + rax_7);\n                wchar_t* rax_13;\n                uint64_t rdi_4;\n                int32_t* r14_3;\n                if (((rax_4 + rax_7) >= rax_4 && rax_10 <= 0x3fffffffffffffff))\n                {\n                    rdi_4 = (rax_10 << 2);\n                    if (rax_10 > 0x7cf)\n                    {\n                        rax_13 = malloc(rdi_4);\n                        r14_3 = rax_13;\n                    }\n                }\n                if ((((rax_4 + rax_7) < rax_4 || ((rax_4 + rax_7) >= rax_4 && rax_10 > 0x3fffffffffffffff)) || ((((rax_4 + rax_7) >= rax_4 && rax_10 <= 0x3fffffffffffffff) && rax_10 > 0x7cf) && rax_13 == 0)))\n                {\n                    *__errno_location() = 0xc;\n                    rax_2 = 0xffffffff;\n                }\n                if (((rax_4 + rax_7) >= rax_4 && rax_10 <= 0x3fffffffffffffff))\n                {\n                    int32_t rax_11;\n                    int32_t rax_14;\n                    if (rax_10 > 0x7cf)\n                    {\n                        if (rax_13 != 0)\n                        {\n                            void* r15_2 = &rax_13[rax_4];\n                            mbsrtowcs(rax_13, &var_50, rax_4, &var_40);\n                            rax_14 = mbsinit(&var_40);\n                            if (rax_14 != 0)\n                            {\n                                mbsrtowcs(r15_2, &var_58, rax_7, &var_40);\n                                int32_t rax_15 = sub_413e80(r14_3, r15_2, ((r15_2 + (rax_7 << 2)) - 4), ((arg3 >> 2) & 1), arg3);\n                                free(r14_3);\n                                rax_2 = rax_15;\n                            }\n                        }\n                    }\n                    else\n                    {\n                        void var_68;\n                        void* r14_2 = (((&var_68 - ((rdi_4 + 0x17) & 0xfffffffffffffff0)) + 0xf) & 0xfffffffffffffff0);\n                        int32_t* r15_1 = (r14_2 + (rax_4 << 2));\n                        mbsrtowcs(r14_2, &var_50, rax_4, &var_40);\n                        rax_11 = mbsinit(&var_40);\n                        if (rax_11 != 0)\n                        {\n                            mbsrtowcs(r15_1, &var_58, rax_7, &var_40);\n                            rax_2 = sub_413e80(r14_2, r15_1, &r15_1[(rax_7 - 1)], ((arg3 >> 2) & 1), arg3);\n                        }\n                    }\n                    if (((rax_10 <= 0x7cf && rax_11 == 0) || ((rax_10 > 0x7cf && rax_13 != 0) && rax_14 == 0)))\n                    {\n                        __assert_fail(\"mbsinit (&ps)\", \"lib/fnmatch.c\", 0x147, \"gnu_fnmatch\");\n                        /* no return */\n                    }\n                }\n                goto label_4159fd;\n            }\n        }\n    }\n    char* rbx_1 = var_58;\n    rax_2 = sub_414eb0(var_50, rbx_1, &rbx_1[strlen(rbx_1)], ((arg3 >> 2) & 1), arg3);\nlabel_4159fd:\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_415be0",
            "funcStartAddr": "0x415be0",
            "funcEndAddr": "0x4160a2",
            "decompiledFuncCode": "void* const sub_415be0(void* arg1, size_t arg2)\n{\n    void* var_108 = arg1;\n    void* const var_110;\n    size_t var_100;\n    if (arg2 != 0)\n    {\n        var_100 = arg2;\n        if (var_108 != 0)\n        {\n            var_110 = var_108;\n        }\n    }\n    else\n    {\n        var_100 = 0x1000;\n        if (arg1 != 0)\n        {\n            var_110 = nullptr;\n            *__errno_location() = 0x16;\n        }\n    }\n    void* rax_1;\n    if (((arg2 != 0 && var_108 == 0) || (arg2 == 0 && arg1 == 0)))\n    {\n        rax_1 = malloc(var_100);\n        var_110 = rax_1;\n    }\n    if (((arg2 != 0 && var_108 != 0) || (((arg2 != 0 && var_108 == 0) || (arg2 == 0 && arg1 == 0)) && rax_1 != 0)))\n    {\n        void* rbx_2 = (var_110 + var_100);\n        *(rbx_2 - 1) = 0;\n        int64_t var_c8;\n        int32_t rax_5 = __lxstat(1, &data_41d794, &var_c8);\n        int32_t rax_6;\n        int32_t rbx_6;\n        int32_t* r12_1;\n        if (rax_5 >= 0)\n        {\n            int64_t r15_1 = var_c8;\n            int64_t var_c0;\n            int64_t r14_1 = var_c0;\n            int64_t var_120_1 = r15_1;\n            rax_6 = __lxstat(1, \"/\", &var_c8);\n            if (rax_6 >= 0)\n            {\n                void* var_e8_1 = (rbx_2 - 1);\n                int64_t rax_8 = var_c8;\n                bool cond:1_1 = r15_1 != rax_8;\n                int64_t var_e0_1 = rax_8;\n                rax_8 = r14_1 != var_c0;\n                bool rdx_3 = (cond:1_1 | rax_8);\n                if (rdx_3 != 0)\n                {\n                    DIR* rbp_1 = nullptr;\n                    int32_t r15_2 = -0x64;\n                    r12_1 = __errno_location();\n                    do\n                    {\n                        int32_t rax_11 = openat(r15_2, &data_41d793, 0);\n                        r15_2 = rax_11;\n                        if (rax_11 < 0)\n                        {\n                            rbx_6 = *r12_1;\n                            if (rbp_1 != 0)\n                            {\n                            label_415fb4:\n                                closedir(rbp_1);\n                            }\n                        }\n                        else\n                        {\n                            if (__fxstat(1, rax_11, &var_c8) != 0)\n                            {\n                                rbx_6 = *r12_1;\n                                if (rbp_1 != 0)\n                                {\n                                    closedir(rbp_1);\n                                }\n                                goto label_416020;\n                            }\n                            int32_t rax_13;\n                            if (rbp_1 != 0)\n                            {\n                                rax_13 = closedir(rbp_1);\n                            }\n                            if ((rbp_1 == 0 || (rbp_1 != 0 && rax_13 == 0)))\n                            {\n                                int64_t rax_14 = var_c8;\n                                DIR* rax_16 = fdopendir(r15_2);\n                                rbp_1 = rax_16;\n                                if (rax_16 != 0)\n                                {\n                                    bool r13_1 = rdx_3;\n                                    struct dirent64* rax_17;\n                                    char* rbx_3;\n                                    while (true)\n                                    {\n                                        *r12_1 = 0;\n                                        rax_17 = readdir(rbp_1);\n                                        if (rax_17 == 0)\n                                        {\n                                            rbx_6 = *r12_1;\n                                            if (rbx_6 != 0)\n                                            {\n                                                break;\n                                            }\n                                            if (r13_1 == 0)\n                                            {\n                                                break;\n                                            }\n                                            rewinddir(rbp_1);\n                                            rax_17 = readdir(rbp_1);\n                                            if (rax_17 == 0)\n                                            {\n                                                rbx_6 = *r12_1;\n                                                break;\n                                            }\n                                            r13_1 = false;\n                                            if (rax_17->d_name[0] != 0x2e)\n                                            {\n                                                goto label_415db2;\n                                            }\n                                        }\n                                        if (((rax_17 != 0 && rax_17->d_name[0] == 0x2e) || rax_17 == 0))\n                                        {\n                                            if (rax_17->d_name[1] == 0)\n                                            {\n                                                continue;\n                                            }\n                                            if ((rax_17->d_name[1] != 0 && rax_17->d_name[1] == 0x2e))\n                                            {\n                                                continue;\n                                            }\n                                        }\n                                        if (r13_1 != 0)\n                                        {\n                                            int64_t rcx_1;\n                                            rcx_1 = rax_14 != var_120_1;\n                                            bool rdx_5 = (rax_17->d_ino == r14_1 | rcx_1);\n                                            if (rdx_5 == 0)\n                                            {\n                                                continue;\n                                            }\n                                            else\n                                            {\n                                                r13_1 = rdx_5;\n                                            }\n                                            goto label_415db2;\n                                        }\n                                    label_415db2:\n                                        rbx_3 = &rax_17->d_name;\n                                        int32_t var_b0;\n                                        if (((__fxstatat(1, r15_2, rbx_3, &var_c8, 0x100) == 0 && (var_b0 & 0xf000) == 0x4000) && var_c8 == var_120_1))\n                                        {\n                                            if (var_c0 == r14_1)\n                                            {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                    if ((!((rax_17 == 0 && rbx_6 == 0) && r13_1 != 0)))\n                                    {\n                                        void* r13_3 = (var_e8_1 - var_110);\n                                        size_t rax_22 = strlen(rbx_3);\n                                        void* rax_25;\n                                        size_t rdx_7;\n                                        if (r13_3 <= rax_22)\n                                        {\n                                            if (arg2 != 0)\n                                            {\n                                                *r12_1 = 0x22;\n                                                rbx_6 = 0x22;\n                                            }\n                                            else\n                                            {\n                                                rdx_7 = var_100;\n                                                if (rax_22 >= var_100)\n                                                {\n                                                    rdx_7 = rax_22;\n                                                }\n                                                size_t rax_24 = (var_100 + rdx_7);\n                                                if ((var_100 + rdx_7) >= var_100)\n                                                {\n                                                    rax_25 = realloc(var_110, rax_24);\n                                                    if (rax_25 != 0)\n                                                    {\n                                                        var_110 = rax_25;\n                                                        var_e8_1 = memcpy((rax_25 + (rdx_7 + r13_3)), (rax_25 + r13_3), (var_100 - r13_3));\n                                                        var_100 = rax_24;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        if (((((r13_3 <= rax_22 && arg2 == 0) && (var_100 + rdx_7) >= var_100) && rax_25 != 0) || r13_3 > rax_22))\n                                        {\n                                            void* rax_28 = memcpy((var_e8_1 - rax_22), rbx_3, rax_22);\n                                            var_e8_1 = (rax_28 - 1);\n                                            r14_1 = var_c0;\n                                            *(rax_28 - 1) = 0x2f;\n                                            var_120_1 = rax_14;\n                                            if (var_e0_1 != rax_14)\n                                            {\n                                                continue;\n                                            }\n                                            else\n                                            {\n                                                if (var_c0 == var_c0)\n                                                {\n                                                    if (closedir(rbp_1) != 0)\n                                                    {\n                                                        goto label_415fe6;\n                                                    }\n                                                    rbx_2 = (var_110 + var_100);\n                                                    goto label_415f07;\n                                                }\n                                                continue;\n                                            }\n                                        }\n                                        if (((r13_3 <= rax_22 && arg2 == 0) && ((var_100 + rdx_7) < var_100 || ((var_100 + rdx_7) >= var_100 && rax_25 == 0))))\n                                        {\n                                            *r12_1 = 0xc;\n                                            rbx_6 = 0xc;\n                                        }\n                                    }\n                                    else if (rbx_6 == 0)\n                                    {\n                                        *r12_1 = 2;\n                                        rbx_6 = 2;\n                                    }\n                                    goto label_415fb4;\n                                }\n                            }\n                            rbx_6 = *r12_1;\n                        label_416020:\n                            close(r15_2);\n                        }\n                    } while (var_108 == 0);\n                    if (var_108 != 0)\n                    {\n                        goto label_415fc1;\n                    }\n                    goto label_415ff1;\n                }\n            label_415f07:\n                if (var_e8_1 == ((var_110 + var_100) - 1))\n                {\n                    *(var_e8_1 - 1) = 0x2f;\n                    var_e8_1 = (var_e8_1 - 1);\n                }\n                void* rbx_5 = (rbx_2 - var_e8_1);\n                memmove(var_110, var_e8_1, rbx_5);\n                if (arg2 == 0)\n                {\n                    var_108 = realloc(var_110, rbx_5);\n                }\n                void* const rax_34 = var_108;\n                if (rax_34 == 0)\n                {\n                    rax_34 = var_110;\n                }\n                var_110 = rax_34;\n            }\n        }\n        if ((rax_5 < 0 || (rax_5 >= 0 && rax_6 < 0)))\n        {\n            r12_1 = __errno_location();\n        label_415fe6:\n            rbx_6 = *r12_1;\n            if (var_108 != 0)\n            {\n                goto label_415fc1;\n            }\n        label_415ff1:\n            free(var_110);\n        label_415fc1:\n            *r12_1 = rbx_6;\n            var_110 = nullptr;\n        }\n    }\n    return var_110;\n}\n\n"
        },
        {
            "funcName": "sub_4160b0",
            "funcStartAddr": "0x4160b0",
            "funcEndAddr": "0x41618f",
            "decompiledFuncCode": "uint64_t sub_4160b0(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_416190",
            "funcStartAddr": "0x416190",
            "funcEndAddr": "0x4167ac",
            "decompiledFuncCode": "uint64_t sub_416190(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_4163c0;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_4162e6;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_4162e6;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_4162e6:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_4163c0:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_4163ee;\n                }\n                *arg5 = r12;\n            label_4163ee:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_41640c;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_41640c:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_41640c;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_41637e;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_41637e:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_4167b0",
            "funcStartAddr": "0x4167b0",
            "funcEndAddr": "0x416d76",
            "decompiledFuncCode": "uint64_t sub_4167b0(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_4169ec;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_416878;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_416878:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_4160b0(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_41f171;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_4160b0(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_4169ec;\n                }\n                *arg7 = rdx_2;\n            label_4169ec:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_416af0;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_41f171;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_416b60;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_416af0;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_416af0;\n                            }\n                            goto label_416ab1;\n                        }\n                    label_416ab1:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_416190(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_41f172);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_416af0:\n                            rdx = &r14_1[1];\n                        label_416931:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_416b2e;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_416b2e:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_41fcb5;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_416b60:\n                                        r14_2 = sub_416190(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_416c1d;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_416c1d:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_4169ec;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_416878;\n        }\n        goto label_416931;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_416de0",
            "funcStartAddr": "0x416de0",
            "funcEndAddr": "0x416df8",
            "decompiledFuncCode": "uint64_t sub_416de0(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_416e80",
            "funcStartAddr": "0x416e80",
            "funcEndAddr": "0x416efa",
            "decompiledFuncCode": "uint64_t sub_416e80(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_41b08a;\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_416eaa;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_416eaa:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_40c190() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_416f00",
            "funcStartAddr": "0x416f00",
            "funcEndAddr": "0x417004",
            "decompiledFuncCode": "char* sub_416f00(char* arg1, int32_t arg2, int64_t arg3)\n{\n    char r8 = arg2;\n    if (arg3 != 0)\n    {\n        if ((arg1 & 7) != 0)\n        {\n            if (arg2 == *arg1)\n            {\n            label_417000:\n                return arg1;\n            }\n            do\n            {\n                arg1 = &arg1[1];\n                int64_t temp0_1 = arg3;\n                arg3 = (arg3 - 1);\n                if (temp0_1 == 1)\n                {\n                    return 0;\n                }\n                if ((arg1 & 7) == 0)\n                {\n                    break;\n                }\n            } while (*arg1 != r8);\n            if ((arg1 & 7) != 0)\n            {\n                goto label_417000;\n            }\n        }\n        int64_t r9_5 = ((arg2 << 8) | arg2);\n        int64_t r9_6 = (r9_5 | (r9_5 << 0x10));\n        int64_t r9_7 = (r9_6 | (r9_6 << 0x20));\n        int64_t rax_8;\n        if (arg3 > 7)\n        {\n            rax_8 = (*arg1 ^ r9_7);\n            if ((((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0)\n            {\n                int64_t rax_12;\n                do\n                {\n                    arg3 = (arg3 - 8);\n                    arg1 = &arg1[8];\n                    if (arg3 <= 7)\n                    {\n                        break;\n                    }\n                    rax_12 = (*arg1 ^ r9_7);\n                } while ((((!rax_12) & (rax_12 - 0x101010101010101)) & 0x8080808080808080) == 0);\n            }\n        }\n        if ((((arg3 <= 7 || (arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) != 0)) || (((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 <= 7) && arg3 != 0)) || ((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 > 7)))\n        {\n            if (arg2 == *arg1)\n            {\n                goto label_417000;\n            }\n            char* rcx_3 = &arg1[1];\n            void* rdi = &arg1[arg3];\n            while (true)\n            {\n                char* rax_15 = rcx_3;\n                if (rcx_3 == rdi)\n                {\n                    return 0;\n                }\n                rcx_3 = &rcx_3[1];\n                if (rcx_3[-1] == r8)\n                {\n                    return rax_15;\n                }\n            }\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_417010",
            "funcStartAddr": "0x417010",
            "funcEndAddr": "0x41704b",
            "decompiledFuncCode": "int64_t sub_417010() __noreturn\n{\n    __fprintf_chk(stderr, 1, \"%s\\n\", dcgettext(nullptr, \"memory exhausted\", 5));\n    exit(data_6245c0);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_417050",
            "funcStartAddr": "0x417050",
            "funcEndAddr": "0x417065",
            "decompiledFuncCode": "int64_t sub_417050(void* arg1)\n{\n    int64_t rax = *(arg1 + 0x38);\n    if ((*(arg1 + 0x50) & 1) == 0)\n    {\n        /* jump -> rax */\n    }\n    *(arg1 + 0x48);\n    /* jump -> rax */\n}\n\n"
        },
        {
            "funcName": "sub_417070",
            "funcStartAddr": "0x417070",
            "funcEndAddr": "0x417085",
            "decompiledFuncCode": "int64_t sub_417070(void* arg1)\n{\n    int64_t rax = *(arg1 + 0x40);\n    if ((*(arg1 + 0x50) & 1) == 0)\n    {\n        /* jump -> rax */\n    }\n    *(arg1 + 0x48);\n    /* jump -> rax */\n}\n\n"
        },
        {
            "funcName": "sub_417090",
            "funcStartAddr": "0x417090",
            "funcEndAddr": "0x417120",
            "decompiledFuncCode": "int64_t sub_417090(int64_t* arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t rbp;\n    int64_t r12;\n    if (arg3 == 0)\n    {\n        r12 = 0xf;\n        rbp = 0x10;\n    }\n    else\n    {\n        rbp = arg3;\n        r12 = (arg3 - 1);\n    }\n    arg1[6] = r12;\n    if (arg2 == 0)\n    {\n        arg2 = 0xfe0;\n    }\n    *arg1 = arg2;\n    int64_t* rax = sub_417050(arg1, arg2);\n    arg1[1] = rax;\n    if (rax == 0)\n    {\n        int64_t rcx;\n        int64_t rdx_3;\n        int64_t rsi;\n        int64_t* rdi_1;\n        int64_t r8;\n        rcx = obstack_alloc_failed_handler();\n        /* tailcall */\n        return _obstack_begin(rdi_1, rsi, rdx_3, rcx, r8);\n    }\n    void* rbp_2 = ((-rbp) & ((rax + r12) + 0x10));\n    void* rdx_1 = *arg1;\n    arg1[2] = rbp_2;\n    void* rdx_2 = (rdx_1 + rax);\n    arg1[3] = rbp_2;\n    *rax = rdx_2;\n    arg1[4] = rdx_2;\n    rax[1] = 0;\n    arg1[0xa] = (arg1[0xa] & 0xf9);\n    return 1;\n}\n\n"
        },
        {
            "funcName": "obstack_begin",
            "funcStartAddr": "0x417120",
            "funcEndAddr": "0x417131",
            "decompiledFuncCode": "int64_t _obstack_begin(int64_t* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5)\n{\n    arg1[0xa] = (arg1[0xa] & 0xfe);\n    arg1[7] = arg4;\n    arg1[8] = arg5;\n    /* tailcall */\n    return sub_417090(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "obstack_begin_1",
            "funcStartAddr": "0x417140",
            "funcEndAddr": "0x417155",
            "decompiledFuncCode": "int64_t _obstack_begin_1(int64_t* arg1, int64_t arg2, int64_t arg3, \n    int64_t arg4, int64_t arg5, int64_t arg6)\n{\n    arg1[0xa] = (arg1[0xa] | 1);\n    arg1[7] = arg4;\n    arg1[8] = arg5;\n    arg1[9] = arg6;\n    /* tailcall */\n    return sub_417090(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "obstack_newchunk",
            "funcStartAddr": "0x417160",
            "funcEndAddr": "0x417260",
            "decompiledFuncCode": "void* _obstack_newchunk(int64_t* arg1, int64_t arg2)\n{\n    uint64_t r13_1 = (arg1[3] - arg1[2]);\n    void* rbp = arg1[1];\n    int64_t rsi = (arg2 + r13_1);\n    int64_t rax;\n    rax = (arg2 + r13_1) < arg2;\n    int64_t rsi_1 = (rsi + arg1[6]);\n    bool c_1 = (rsi + arg1[6]) < rsi;\n    int64_t rbx = ((rsi_1 + (r13_1 >> 3)) + 0x64);\n    if (*arg1 >= rsi_1)\n    {\n        rsi_1 = *arg1;\n    }\n    if (rsi_1 >= rbx)\n    {\n        rbx = rsi_1;\n    }\n    if ((rax == 0 && c_1 == 0))\n    {\n        int64_t* rax_1 = sub_417050();\n        if (rax_1 != 0)\n        {\n            void* rsi_2 = (rax_1 + rbx);\n            arg1[1] = rax_1;\n            rax_1[1] = rbp;\n            arg1[4] = rsi_2;\n            *rax_1 = rsi_2;\n            int64_t rax_2 = arg1[6];\n            void* rbx_2 = (((rax_1 + rax_2) + 0x10) & (!rax_2));\n            void* rax_4 = memcpy(rbx_2, arg1[2], r13_1);\n            if ((arg1[0xa] & 2) == 0)\n            {\n                int64_t rax_5 = arg1[6];\n                rax_4 = ((!rax_5) & ((rbp + rax_5) + 0x10));\n                if (arg1[2] == rax_4)\n                {\n                    rax_1[1] = *(rbp + 8);\n                    rax_4 = sub_417070(arg1, rbp);\n                }\n            }\n            arg1[2] = rbx_2;\n            arg1[3] = (r13_1 + rbx_2);\n            arg1[0xa] = (arg1[0xa] & 0xfd);\n            return rax_4;\n        }\n    }\n    int64_t rsi_5;\n    void* rdi_2;\n    rsi_5 = obstack_alloc_failed_handler();\n    /* tailcall */\n    return _obstack_allocated_p(rdi_2, rsi_5);\n}\n\n"
        },
        {
            "funcName": "obstack_allocated_p",
            "funcStartAddr": "0x417260",
            "funcEndAddr": "0x417297",
            "decompiledFuncCode": "int64_t* _obstack_allocated_p(void* arg1, int64_t arg2)\n{\n    int64_t* rax = *(arg1 + 8);\n    if (rax == 0)\n    {\n        return rax;\n    }\n    do\n    {\n        if ((arg2 > rax && *rax >= arg2))\n        {\n            return 1;\n        }\n        rax = rax[1];\n    } while (rax != 0);\n    return 0;\n}\n\n"
        },
        {
            "funcName": "obstack_free",
            "funcStartAddr": "0x402e87",
            "funcEndAddr": "0x417305",
            "decompiledFuncCode": "void _obstack_free(void* arg1, int64_t arg2)\n{\n    int64_t* rsi = *(arg1 + 8);\n    if (rsi != 0)\n    {\n        int64_t* r12_1;\n        do\n        {\n            if (rsi < arg2)\n            {\n                int64_t rax_1 = *rsi;\n                if (rax_1 >= arg2)\n                {\n                    *(arg1 + 0x18) = arg2;\n                    *(arg1 + 0x10) = arg2;\n                    *(arg1 + 0x20) = rax_1;\n                    *(arg1 + 8) = rsi;\n                    return;\n                }\n            }\n            r12_1 = rsi[1];\n            sub_417070(arg1);\n            *(arg1 + 0x50) = (*(arg1 + 0x50) | 2);\n            rsi = r12_1;\n        } while (r12_1 != 0);\n    }\n    if (arg2 != 0)\n    {\n        abort();\n        /* no return */\n    }\n}\n\n"
        },
        {
            "funcName": "obstack_memory_used",
            "funcStartAddr": "0x417310",
            "funcEndAddr": "0x417339",
            "decompiledFuncCode": "void* _obstack_memory_used(void* arg1)\n{\n    int64_t* rdx = *(arg1 + 8);\n    void* rax = nullptr;\n    if (rdx == 0)\n    {\n        return 0;\n    }\n    do\n    {\n        void* rcx_2 = (*rdx - rdx);\n        rdx = rdx[1];\n        rax = (rax + rcx_2);\n    } while (rdx != 0);\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_417340",
            "funcStartAddr": "0x417340",
            "funcEndAddr": "0x417385",
            "decompiledFuncCode": "uint64_t sub_417340(void* arg1)\n{\n    int32_t rax;\n    if (*(arg1 + 8) != 0)\n    {\n        rax = setenv(&data_41b360, (arg1 + 9), 1);\n    }\n    else\n    {\n        rax = unsetenv(&data_41b360);\n    }\n    int32_t rdx = 0;\n    if (rax == 0)\n    {\n        tzset();\n        rdx = 1;\n    }\n    return rdx;\n}\n\n"
        },
        {
            "funcName": "sub_417390",
            "funcStartAddr": "0x417390",
            "funcEndAddr": "0x4173b9",
            "decompiledFuncCode": "void sub_417390(int64_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        return;\n    }\n    int64_t* rbx_1;\n    do\n    {\n        rbx_1 = *arg1;\n        free(arg1);\n        arg1 = rbx_1;\n    } while (rbx_1 != 0);\n}\n\n"
        },
        {
            "funcName": "sub_4173c0",
            "funcStartAddr": "0x4173c0",
            "funcEndAddr": "0x417401",
            "decompiledFuncCode": "uint64_t sub_4173c0(int64_t* arg1)\n{\n    int32_t* rax = __errno_location();\n    int32_t r13 = *rax;\n    int32_t rax_1 = sub_417340(arg1);\n    if (rax_1 == 0)\n    {\n        r13 = *rax;\n    }\n    sub_417390(arg1);\n    *rax = r13;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_417410",
            "funcStartAddr": "0x417410",
            "funcEndAddr": "0x41749f",
            "decompiledFuncCode": "int64_t* sub_417410(char* arg1)\n{\n    int64_t* rbx;\n    if (arg1 == 0)\n    {\n        int64_t* rax_3 = malloc(0x80);\n        rbx = rax_3;\n        if (rax_3 != 0)\n        {\n            *rbx = 0;\n            rbx[1] = 0;\n            return rbx;\n        }\n    }\n    else\n    {\n        uint64_t rdi = 0x76;\n        uint64_t rbp_1 = (strlen(arg1) + 1);\n        if (rbp_1 >= 0x76)\n        {\n            rdi = rbp_1;\n        }\n        int64_t* rax_1 = malloc(((rdi + 0x11) & 0xfffffffffffffff8));\n        rbx = rax_1;\n        if (rax_1 != 0)\n        {\n            *rax_1 = 0;\n            rbx[1] = 1;\n            memcpy((rbx + 9), arg1, rbp_1);\n            *((rbx + rbp_1) + 9) = 0;\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_4174a0",
            "funcStartAddr": "0x4174a0",
            "funcEndAddr": "0x417615",
            "decompiledFuncCode": "int64_t sub_4174a0(int64_t** arg1, void* arg2)\n{\n    char* r12 = *(arg2 + 0x30);\n    if (r12 == 0)\n    {\n        return 1;\n    }\n    int64_t** rbp = arg1;\n    int64_t rax_1;\n    if (arg2 <= r12)\n    {\n        rax_1 = 1;\n    }\n    if ((arg2 > r12 || (arg2 <= r12 && r12 >= (arg2 + 0x38))))\n    {\n        void* rbx_1 = (rbp + 9);\n        if (*r12 == 0)\n        {\n            rbx_1 = &data_41b08a;\n        }\n        else\n        {\n        label_4174ee:\n            if (strcmp(rbx_1, r12) != 0)\n            {\n                int32_t rax_5;\n                do\n                {\n                    if (*rbx_1 == 0)\n                    {\n                        void* r14_1 = (rbp + 9);\n                        void* rax_9;\n                        uint64_t r15_1;\n                        if ((r14_1 == rbx_1 && rbp[1] == 0))\n                        {\n                            r15_1 = (strlen(r12) + 1);\n                            rax_9 = nullptr;\n                        }\n                        if (r14_1 != rbx_1)\n                        {\n                            r15_1 = (strlen(r12) + 1);\n                            rax_9 = (rbx_1 - r14_1);\n                            if ((!rax_9) < r15_1)\n                            {\n                                *__errno_location() = 0xc;\n                                return 0;\n                            }\n                        }\n                        if (((r14_1 == rbx_1 && rbp[1] == 0) || r14_1 != rbx_1))\n                        {\n                            if ((rax_9 + r15_1) <= 0x76)\n                            {\n                                memcpy(rbx_1, r12, r15_1);\n                                *(rbx_1 + r15_1) = 0;\n                                break;\n                            }\n                            int64_t* rax_13 = sub_417410(r12);\n                            *rbp = rax_13;\n                            if (rax_13 != 0)\n                            {\n                                rax_13[1] = 0;\n                                rbx_1 = (rax_13 + 9);\n                                break;\n                            }\n                            return 0;\n                        }\n                    }\n                    rbx_1 = ((rbx_1 + strlen(rbx_1)) + 1);\n                    if (*rbx_1 != 0)\n                    {\n                        goto label_4174ee;\n                    }\n                    int64_t* rax_4 = *rbp;\n                    if (rax_4 == 0)\n                    {\n                        goto label_4174ee;\n                    }\n                    rbx_1 = (rax_4 + 9);\n                    rbp = rax_4;\n                    rax_5 = strcmp(rbx_1, r12);\n                } while (rax_5 != 0);\n            }\n        }\n        *(arg2 + 0x30) = rbx_1;\n        rax_1 = 1;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_417620",
            "funcStartAddr": "0x417620",
            "funcEndAddr": "0x4176cf",
            "decompiledFuncCode": "int64_t* sub_417620(void* arg1)\n{\n    char* rax = getenv(&data_41b360);\n    if (rax == 0)\n    {\n        if (*(arg1 + 8) == 0)\n        {\n            return 1;\n        }\n    }\n    else if ((*(arg1 + 8) != 0 && strcmp((arg1 + 9), rax) == 0))\n    {\n        return 1;\n    }\n    int64_t* rax_1 = sub_417410(rax);\n    if ((rax_1 != 0 && sub_417340(arg1) == 0))\n    {\n        int32_t* rax_7 = __errno_location();\n        int32_t r12_1 = *rax_7;\n        if (rax_1 != 1)\n        {\n            sub_417390(rax_1);\n        }\n        *rax_7 = r12_1;\n        return 0;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4176d0",
            "funcStartAddr": "0x4176d0",
            "funcEndAddr": "0x4176e1",
            "decompiledFuncCode": "void sub_4176d0(int64_t* arg1)\n{\n    if (arg1 == 1)\n    {\n        return;\n    }\n    /* tailcall */\n    return sub_417390(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_4176f0",
            "funcStartAddr": "0x4176f0",
            "funcEndAddr": "0x417795",
            "decompiledFuncCode": "struct tm* sub_4176f0(int64_t** arg1, time_t* arg2, struct tm* arg3)\n{\n    if (arg1 == 0)\n    {\n        /* tailcall */\n        return gmtime_r(arg2, arg3);\n    }\n    int64_t* rax = sub_417620(arg1);\n    if (rax != 0)\n    {\n        struct tm* rax_1 = localtime_r(arg2, arg3);\n        char rax_2;\n        if (rax_1 != 0)\n        {\n            rax_2 = sub_4174a0(arg1, arg3);\n            if (rax_2 != 0)\n            {\n                char rax_5;\n                if (rax != 1)\n                {\n                    rax_5 = sub_4173c0(rax);\n                }\n                if ((rax == 1 || (rax != 1 && rax_5 != 0)))\n                {\n                    return arg3;\n                }\n            }\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_2 == 0)) && rax != 1))\n        {\n            sub_4173c0(rax);\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_4177a0",
            "funcStartAddr": "0x4177a0",
            "funcEndAddr": "0x4178bc",
            "decompiledFuncCode": "time_t sub_4177a0(int64_t** arg1, int32_t* arg2)\n{\n    if (arg1 == 0)\n    {\n        return timegm(arg2);\n    }\n    int64_t* rax = sub_417620(arg1);\n    time_t var_60;\n    char rax_3;\n    if (rax != 0)\n    {\n        time_t rax_1 = sub_4186f0(arg2);\n        var_60 = rax_1;\n        int32_t var_58;\n        if (rax_1 == -1)\n        {\n            if (localtime_r(&var_60, &var_58) != 0)\n            {\n                int32_t rax_6 = arg2[8];\n                int32_t var_38;\n                if (((rax_6 == 0 == var_38 == 0 || (rax_6 == 0 != var_38 == 0 && rax_6 < 0)) || ((rax_6 == 0 != var_38 == 0 && rax_6 >= 0) && var_38 < 0)))\n                {\n                    int32_t var_54;\n                    int32_t var_50;\n                    int32_t var_4c;\n                    int32_t var_48;\n                    int32_t var_44;\n                    int32_t rax_12 = (((((arg2[4] ^ var_48) | (arg2[5] ^ var_44)) | (arg2[3] ^ var_4c)) | (arg2[2] ^ var_50)) | (arg2[1] ^ var_54));\n                    if ((rax_12 | (*arg2 ^ var_58)) == 0)\n                    {\n                        goto label_4177e1;\n                    }\n                }\n            }\n        }\n        else\n        {\n        label_4177e1:\n            if (sub_4174a0(arg1, arg2) == 0)\n            {\n                var_60 = -1;\n            }\n        }\n        if (rax != 1)\n        {\n            rax_3 = sub_4173c0(rax);\n        }\n    }\n    time_t rax_4;\n    if ((rax == 1 || ((rax != 0 && rax != 1) && rax_3 != 0)))\n    {\n        rax_4 = var_60;\n    }\n    if ((rax == 0 || ((rax != 0 && rax != 1) && rax_3 == 0)))\n    {\n        rax_4 = -1;\n    }\n    return rax_4;\n}\n\n"
        },
        {
            "funcName": "sub_4178e0",
            "funcStartAddr": "0x4178e0",
            "funcEndAddr": "0x41793d",
            "decompiledFuncCode": "uint64_t sub_4178e0(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_417f10(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_417940",
            "funcStartAddr": "0x417940",
            "funcEndAddr": "0x417958",
            "decompiledFuncCode": "char* sub_417940(char* arg1)\n{\n    char* rax = sub_40b810(arg1);\n    if (rax == 0)\n    {\n        sub_412bd0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_417960",
            "funcStartAddr": "0x417960",
            "funcEndAddr": "0x417996",
            "decompiledFuncCode": "uint64_t sub_417960(char* arg1, int64_t arg2)\n{\n    int64_t rcx = *arg1;\n    if (rcx == 0)\n    {\n        return 0;\n    }\n    int64_t rax = 0;\n    do\n    {\n        arg1 = &arg1[1];\n        rax = ((ROLQ(rax, 9)) + rcx);\n        rcx = *arg1;\n    } while (rcx != 0);\n    return (COMBINE(0, rax) % arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4179a0",
            "funcStartAddr": "0x4179a0",
            "funcEndAddr": "0x417f02",
            "decompiledFuncCode": "char* sub_4179a0()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_625960;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_41b08a;\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        size_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            size_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_417a9c;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_417ae6;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_417a9c:\n            r15 = &data_41b08a;\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_417ae6:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, &data_41b38e);\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_417b9c:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_417d2b;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_417bd8:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_417bd8;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_417c12:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_417c12;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_41b08a;\n                                    free(rdi_26);\n                                    sub_417f10(rax_12);\n                                    goto label_417b27;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_417deb:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_417deb;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_417e39:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_417e39;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_417b9c;\n                        }\n                        break;\n                    }\n                label_417d2b:\n                    sub_417f10(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_41b08a;\n            }\n        label_417b27:\n            free(rbp_3);\n        }\n        data_625960 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_417f10",
            "funcStartAddr": "0x417f10",
            "funcEndAddr": "0x417f8b",
            "decompiledFuncCode": "int64_t sub_417f10(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_417f90(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_417f90",
            "funcStartAddr": "0x417f90",
            "funcEndAddr": "0x417fd0",
            "decompiledFuncCode": "int64_t sub_417f90(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_417fd0(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_417fd0",
            "funcStartAddr": "0x417fd0",
            "funcEndAddr": "0x418027",
            "decompiledFuncCode": "off64_t sub_417fd0(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_418030",
            "funcStartAddr": "0x418030",
            "funcEndAddr": "0x418147",
            "decompiledFuncCode": "int64_t sub_418030(int64_t arg1, int64_t arg2, int32_t arg3, int32_t arg4, \n    int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8, int32_t arg9, \n    int32_t arg10)\n{\n    int64_t rbx = arg6;\n    int32_t rax;\n    rax = (arg1 & 3) == 0;\n    int32_t r10_2 = (((arg1 >> 2) + 0x1db) - rax);\n    int32_t rax_1;\n    rax_1 = (arg6 & 3) == 0;\n    int64_t rdi = (arg1 - rbx);\n    int32_t r12_3 = (((rbx >> 2) + 0x1db) - rax_1);\n    int32_t temp0;\n    int32_t temp1;\n    temp0 = HIGHW((r10_2 * 0x51eb851f));\n    temp1 = LOWW((r10_2 * 0x51eb851f));\n    uint64_t rbp_1 = ((temp0 >> 3) - (r10_2 >> 0x1f));\n    int32_t rbp_2 = (rbp_1 - ((r10_2 - ((rbp_1 * 5) * 5)) >> 0x1f));\n    int32_t temp2;\n    int32_t temp3;\n    temp2 = HIGHW((r12_3 * 0x51eb851f));\n    temp3 = LOWW((r12_3 * 0x51eb851f));\n    uint64_t rdx_6 = ((temp2 >> 3) - (r12_3 >> 0x1f));\n    int32_t rdx_7 = (rdx_6 - ((r12_3 - ((rdx_6 * 5) * 5)) >> 0x1f));\n    int64_t rsi_2 = (((arg2 + (rdi * 0x16d)) - arg7) + (((rbp_2 >> 2) - (rdx_7 >> 2)) + ((r10_2 - r12_3) - (rbp_2 - rdx_7))));\n    int64_t rax_25 = ((arg3 + (rsi_2 * 0x18)) - arg8);\n    int64_t rax_27 = ((arg4 + (((rax_25 << 4) - rax_25) << 2)) - arg9);\n    return ((arg5 + (((rax_27 << 4) - rax_27) << 2)) - arg10);\n}\n\n"
        },
        {
            "funcName": "sub_418150",
            "funcStartAddr": "0x418150",
            "funcEndAddr": "0x4181e1",
            "decompiledFuncCode": "int64_t sub_418150(int64_t arg1, int64_t arg2, int32_t arg3, int32_t arg4, \n    int32_t arg5, int64_t arg6, int32_t* arg7)\n{\n    if (arg7 != 0)\n    {\n        int64_t rax_1 = sub_418030(arg1, arg2, arg3, arg4, arg5, arg7[5], arg7[7], arg7[2], arg7[1], *arg7);\n        int64_t rax_2 = (rax_1 + arg6);\n        if ((!(rax_1 + arg6)))\n        {\n            return rax_2;\n        }\n    }\n    if (arg6 >= 0)\n    {\n        int64_t rdx = (arg6 - 1);\n        int64_t rax_3 = 0x7fffffffffffffff;\n        if (arg6 > 0x7ffffffffffffffd)\n        {\n            rax_3 = rdx;\n        }\n        return rax_3;\n    }\n    if (arg6 >= -0x7ffffffffffffffe)\n    {\n        return -0x8000000000000000;\n    }\n    return (arg6 + 1);\n}\n\n"
        },
        {
            "funcName": "sub_4181f0",
            "funcStartAddr": "0x4181f0",
            "funcEndAddr": "0x4182af",
            "decompiledFuncCode": "int64_t sub_4181f0(int64_t arg1, int64_t* arg2, int64_t arg3)\n{\n    int64_t var_30 = *arg2;\n    int64_t rax_1 = arg1(&var_30, arg3);\n    if (rax_1 == 0)\n    {\n        int64_t r14_1 = *arg2;\n        int64_t rbp_1 = 0;\n        if (r14_1 != 0)\n        {\n            while (true)\n            {\n                int64_t rbx_1 = (((rbp_1 | r14_1) & 1) + ((r14_1 >> 1) + (rbp_1 >> 1)));\n                if ((rbp_1 != rbx_1 && r14_1 != rbx_1))\n                {\n                    break;\n                }\n                var_30 = rbx_1;\n                rax_1 = arg1(&var_30, arg3);\n                if (rax_1 == 0)\n                {\n                    r14_1 = rbx_1;\n                    rbx_1 = rbp_1;\n                }\n                rbp_1 = rbx_1;\n            }\n            if ((rax_1 == 0 && rbp_1 != 0))\n            {\n                var_30 = rbp_1;\n                return arg1(&var_30, arg3);\n            }\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4182b0",
            "funcStartAddr": "0x4182b0",
            "funcEndAddr": "0x4186ea",
            "decompiledFuncCode": "int64_t sub_4182b0(int32_t* arg1, int64_t arg2, int64_t* arg3)\n{\n    int32_t rax = *arg1;\n    int64_t rsi = arg1[3];\n    int32_t rax_1 = arg1[1];\n    int32_t rax_2 = arg1[2];\n    int32_t rdi = arg1[4];\n    int32_t rax_3 = arg1[8];\n    int32_t temp0;\n    int32_t temp1;\n    temp0 = HIGHW((rdi * 0x2aaaaaab));\n    temp1 = LOWW((rdi * 0x2aaaaaab));\n    int32_t rdx_2 = 0;\n    uint64_t rcx_1 = ((temp0 >> 1) - (rdi >> 0x1f));\n    int32_t rdi_1 = (rdi - ((rcx_1 * 3) << 2));\n    int64_t rbx_3 = ((rcx_1 - (rdi_1 >> 0x1f)) + arg1[5]);\n    if ((rbx_3 & 3) == 0)\n    {\n        int64_t rax_13;\n        int64_t rdx_3;\n        rdx_3 = HIGHD((rbx_3 * -0x5c28f5c28f5c28f5));\n        rax_13 = LOWD((rbx_3 * -0x5c28f5c28f5c28f5));\n        int64_t rax_16 = (((rdx_3 + rbx_3) >> 6) - (rbx_3 >> 0x3f));\n        rdx_2 = 1;\n        if (rbx_3 == (rax_16 * 0x64))\n        {\n            rdx_2 = (rax_16 & 3) == 1;\n        }\n    }\n    int32_t r12 = 0x3b;\n    int32_t rbp = 6;\n    int64_t rax_20 = rdx_2;\n    int64_t rcx_5 = ((rdi_1 + ((rdi_1 >> 0x1f) & 0xc)) + (rax_20 + (((rax_20 + rax_20) + rax_20) << 2)));\n    int64_t rsi_1 = (rsi + (*((rcx_5 + rcx_5) + 0x41fd60) - 1));\n    if (rax <= 0x3b)\n    {\n        r12 = rax;\n    }\n    int32_t rax_26 = 0;\n    if (r12 >= 0)\n    {\n        rax_26 = r12;\n    }\n    uint64_t rax_30 = (-*arg3);\n    int32_t var_d4 = rax_30;\n    int64_t rax_31 = sub_418030(rbx_3, rsi_1, rax_2, rax_1, rax_26, 0x46, 0, 0, 0, rax_30);\n    int64_t r13 = rax_31;\n    int64_t var_c8 = rax_31;\n    int32_t r12_1 = 0;\n    int64_t r14_1 = r13;\n    int64_t rax_33;\n    while (true)\n    {\n        int64_t r15_1 = var_c8;\n        int32_t var_b8;\n        rax_33 = sub_418150(rbx_3, rsi_1, rax_2, rax_1, rax_26, r15_1, sub_4181f0(arg2, &var_c8, &var_b8));\n        int32_t var_98;\n        void* var_78;\n        int32_t* r14_2;\n        if (r15_1 != rax_33)\n        {\n            if (r15_1 != r13)\n            {\n            label_418418:\n                int32_t temp2_1 = rbp;\n                rbp = (rbp - 1);\n                if (temp2_1 != 1)\n                {\n                    var_c8 = rax_33;\n                    r13 = r14_1;\n                    r14_1 = r15_1;\n                    r12_1 = var_98 != 0;\n                    continue;\n                }\n            }\n            else\n            {\n                if (r15_1 == r14_1)\n                {\n                    goto label_418418;\n                }\n                bool cond:2_1 = var_98 != 0;\n                if (var_98 >= 0)\n                {\n                    bool cond:3_1 = rax_3 != 0;\n                    if (rax_3 < 0)\n                    {\n                        if (cond:2_1 < r12_1)\n                        {\n                            goto label_418418;\n                        }\n                        goto label_4184b7;\n                    }\n                    if (cond:3_1 == cond:2_1)\n                    {\n                        goto label_418418;\n                    }\n                    goto label_4184b7;\n                }\n            label_4184b7:\n                r14_2 = arg1;\n                rax_33 = r15_1;\n            label_4184d0:\n                int32_t rsi_5 = var_b8;\n                *arg3 = (rax_33 - (var_d4 + rax_31));\n                int64_t rax_36;\n                void* rdx_19;\n                if (rsi_5 != rax)\n                {\n                    int64_t* rcx_11;\n                    rcx_11 = rax <= 0;\n                    int64_t rdx_16;\n                    rdx_16 = rsi_5 == 0x3c;\n                    rdx_19 = (rax + ((rdx_16 & rcx_11) - rax_26));\n                    void* rax_34 = (rax_33 + rdx_19);\n                    var_c8 = rax_34;\n                    if ((!(rax_33 + rdx_19)))\n                    {\n                        var_78 = rax_34;\n                        rax_36 = arg2(&var_78, &var_b8);\n                        if (rax_36 != 0)\n                        {\n                            rax_33 = var_c8;\n                        }\n                    }\n                }\n                if ((((rsi_5 != rax && (!(rax_33 + rdx_19))) && rax_36 != 0) || rsi_5 == rax))\n                {\n                    *r14_2 = var_b8;\n                    int128_t var_a8;\n                    *(r14_2 + 0x10) = var_a8;\n                    *(r14_2 + 0x20) = var_98;\n                    int64_t var_88;\n                    *(r14_2 + 0x30) = var_88;\n                    break;\n                }\n            }\n            rax_33 = -1;\n            break;\n        }\n        r14_2 = arg1;\n        int32_t var_f0;\n        var_f0 = rax_3 == 0;\n        char rbp_1 = var_f0;\n        if ((rbp_1 != var_98 == 0 && (rax_3 >= 0 && var_98 >= 0)))\n        {\n            int32_t r13_1 = 0x92c70;\n            var_f0 = rbx_3;\n            do\n            {\n                int32_t rbx_4 = (r13_1 + r13_1);\n                int32_t r12_3 = 2;\n                int32_t r15_3 = (-r13_1);\n                int64_t rdx_23 = r15_3;\n                int64_t var_c0 = (rdx_23 + rax_33);\n                if ((!(rdx_23 + rax_33)))\n                {\n                    goto label_418670;\n                }\n                while (true)\n                {\n                    r15_3 = (r15_3 + rbx_4);\n                    if (r12_3 == 1)\n                    {\n                        break;\n                    }\n                    int64_t rdx_25 = r15_3;\n                    r12_3 = 1;\n                    var_c0 = (rdx_25 + rax_33);\n                    if ((!(rdx_25 + rax_33)))\n                    {\n                    label_418670:\n                        sub_4181f0(arg2, &var_c0, &var_78);\n                        int32_t var_58;\n                        if (rbp_1 == var_58 == 0)\n                        {\n                            break;\n                        }\n                        if (var_58 < 0)\n                        {\n                            break;\n                        }\n                        rax_33 = var_c8;\n                    }\n                }\n                if (r12_3 != 1)\n                {\n                    var_c8 = sub_418150(var_f0, rsi_1, rax_2, rax_1, rax_26, var_c0, &var_78);\n                    sub_4181f0(arg2, &var_c8, &var_b8);\n                    rax_33 = var_c8;\n                    break;\n                }\n                r13_1 = (r13_1 + 0x92c70);\n            } while (r13_1 != 0x100dc400);\n        }\n        goto label_4184d0;\n    }\n    return rax_33;\n}\n\n"
        },
        {
            "funcName": "sub_4186f0",
            "funcStartAddr": "0x4186f0",
            "funcEndAddr": "0x41870c",
            "decompiledFuncCode": "int64_t sub_4186f0(int32_t* arg1)\n{\n    tzset();\n    /* tailcall */\n    return sub_4182b0(arg1, 0x4027a0, &data_625968);\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x418710",
            "funcEndAddr": "0x41876d",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x418770",
            "funcEndAddr": "0x418771",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_418780",
            "funcStartAddr": "0x418780",
            "funcEndAddr": "0x418798",
            "decompiledFuncCode": "int64_t sub_418780(void (* arg1)(void*))\n{\n    int64_t rdx = data_6243e8;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_418798",
            "funcStartAddr": "0x418798",
            "funcEndAddr": "0x4187b8",
            "decompiledFuncCode": "int64_t sub_418798(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_623e30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}