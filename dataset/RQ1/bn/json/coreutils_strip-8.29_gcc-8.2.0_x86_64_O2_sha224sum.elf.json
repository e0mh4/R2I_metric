{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sha224sum.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 144,
    "funcInfo": [
        {
            "funcName": "sub_401560",
            "funcStartAddr": "0x401560",
            "funcEndAddr": "0x40156c",
            "decompiledFuncCode": "int64_t sub_401560()\n{\n    int64_t var_8 = data_60e008;\n    /* jump -> data_60e010 */\n}\n\n"
        },
        {
            "funcName": "sub_401576",
            "funcStartAddr": "0x401576",
            "funcEndAddr": "0x401580",
            "decompiledFuncCode": "int64_t sub_401576()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401586",
            "funcStartAddr": "0x401586",
            "funcEndAddr": "0x401590",
            "decompiledFuncCode": "int64_t sub_401586()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401596",
            "funcStartAddr": "0x401596",
            "funcEndAddr": "0x4015a0",
            "decompiledFuncCode": "int64_t sub_401596()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4015a6",
            "funcStartAddr": "0x4015a6",
            "funcEndAddr": "0x4015b0",
            "decompiledFuncCode": "int64_t sub_4015a6()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4015b6",
            "funcStartAddr": "0x4015b6",
            "funcEndAddr": "0x4015c0",
            "decompiledFuncCode": "int64_t sub_4015b6()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4015c6",
            "funcStartAddr": "0x4015c6",
            "funcEndAddr": "0x4015d0",
            "decompiledFuncCode": "int64_t sub_4015c6()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4015d6",
            "funcStartAddr": "0x4015d6",
            "funcEndAddr": "0x4015e0",
            "decompiledFuncCode": "int64_t sub_4015d6()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4015e6",
            "funcStartAddr": "0x4015e6",
            "funcEndAddr": "0x4015f0",
            "decompiledFuncCode": "int64_t sub_4015e6()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4015f6",
            "funcStartAddr": "0x4015f6",
            "funcEndAddr": "0x401600",
            "decompiledFuncCode": "int64_t sub_4015f6()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401606",
            "funcStartAddr": "0x401606",
            "funcEndAddr": "0x401610",
            "decompiledFuncCode": "int64_t sub_401606()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401616",
            "funcStartAddr": "0x401616",
            "funcEndAddr": "0x401620",
            "decompiledFuncCode": "int64_t sub_401616()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401626",
            "funcStartAddr": "0x401626",
            "funcEndAddr": "0x401630",
            "decompiledFuncCode": "int64_t sub_401626()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401636",
            "funcStartAddr": "0x401636",
            "funcEndAddr": "0x401640",
            "decompiledFuncCode": "int64_t sub_401636()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401646",
            "funcStartAddr": "0x401646",
            "funcEndAddr": "0x401650",
            "decompiledFuncCode": "int64_t sub_401646()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401656",
            "funcStartAddr": "0x401656",
            "funcEndAddr": "0x401660",
            "decompiledFuncCode": "int64_t sub_401656()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401666",
            "funcStartAddr": "0x401666",
            "funcEndAddr": "0x401670",
            "decompiledFuncCode": "int64_t sub_401666()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401676",
            "funcStartAddr": "0x401676",
            "funcEndAddr": "0x401680",
            "decompiledFuncCode": "int64_t sub_401676()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401686",
            "funcStartAddr": "0x401686",
            "funcEndAddr": "0x401690",
            "decompiledFuncCode": "int64_t sub_401686()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401696",
            "funcStartAddr": "0x401696",
            "funcEndAddr": "0x4016a0",
            "decompiledFuncCode": "int64_t sub_401696()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4016a6",
            "funcStartAddr": "0x4016a6",
            "funcEndAddr": "0x4016b0",
            "decompiledFuncCode": "int64_t sub_4016a6()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4016b6",
            "funcStartAddr": "0x4016b6",
            "funcEndAddr": "0x4016c0",
            "decompiledFuncCode": "int64_t sub_4016b6()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4016c6",
            "funcStartAddr": "0x4016c6",
            "funcEndAddr": "0x4016d0",
            "decompiledFuncCode": "int64_t sub_4016c6()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4016d6",
            "funcStartAddr": "0x4016d6",
            "funcEndAddr": "0x4016e0",
            "decompiledFuncCode": "int64_t sub_4016d6()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4016e6",
            "funcStartAddr": "0x4016e6",
            "funcEndAddr": "0x4016f0",
            "decompiledFuncCode": "int64_t sub_4016e6()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4016f6",
            "funcStartAddr": "0x4016f6",
            "funcEndAddr": "0x401700",
            "decompiledFuncCode": "int64_t sub_4016f6()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401706",
            "funcStartAddr": "0x401706",
            "funcEndAddr": "0x401710",
            "decompiledFuncCode": "int64_t sub_401706()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401716",
            "funcStartAddr": "0x401716",
            "funcEndAddr": "0x401720",
            "decompiledFuncCode": "int64_t sub_401716()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401726",
            "funcStartAddr": "0x401726",
            "funcEndAddr": "0x401730",
            "decompiledFuncCode": "int64_t sub_401726()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401736",
            "funcStartAddr": "0x401736",
            "funcEndAddr": "0x401740",
            "decompiledFuncCode": "int64_t sub_401736()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401746",
            "funcStartAddr": "0x401746",
            "funcEndAddr": "0x401750",
            "decompiledFuncCode": "int64_t sub_401746()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401756",
            "funcStartAddr": "0x401756",
            "funcEndAddr": "0x401760",
            "decompiledFuncCode": "int64_t sub_401756()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401766",
            "funcStartAddr": "0x401766",
            "funcEndAddr": "0x401770",
            "decompiledFuncCode": "int64_t sub_401766()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401776",
            "funcStartAddr": "0x401776",
            "funcEndAddr": "0x401780",
            "decompiledFuncCode": "int64_t sub_401776()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401786",
            "funcStartAddr": "0x401786",
            "funcEndAddr": "0x401790",
            "decompiledFuncCode": "int64_t sub_401786()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401796",
            "funcStartAddr": "0x401796",
            "funcEndAddr": "0x4017a0",
            "decompiledFuncCode": "int64_t sub_401796()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4017a6",
            "funcStartAddr": "0x4017a6",
            "funcEndAddr": "0x4017b0",
            "decompiledFuncCode": "int64_t sub_4017a6()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4017b6",
            "funcStartAddr": "0x4017b6",
            "funcEndAddr": "0x4017c0",
            "decompiledFuncCode": "int64_t sub_4017b6()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4017c6",
            "funcStartAddr": "0x4017c6",
            "funcEndAddr": "0x4017d0",
            "decompiledFuncCode": "int64_t sub_4017c6()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4017d6",
            "funcStartAddr": "0x4017d6",
            "funcEndAddr": "0x4017e0",
            "decompiledFuncCode": "int64_t sub_4017d6()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4017e6",
            "funcStartAddr": "0x4017e6",
            "funcEndAddr": "0x4017f0",
            "decompiledFuncCode": "int64_t sub_4017e6()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401806",
            "funcStartAddr": "0x401806",
            "funcEndAddr": "0x401810",
            "decompiledFuncCode": "int64_t sub_401806()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401826",
            "funcStartAddr": "0x401826",
            "funcEndAddr": "0x401830",
            "decompiledFuncCode": "int64_t sub_401826()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401836",
            "funcStartAddr": "0x401836",
            "funcEndAddr": "0x401840",
            "decompiledFuncCode": "int64_t sub_401836()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401846",
            "funcStartAddr": "0x401846",
            "funcEndAddr": "0x401850",
            "decompiledFuncCode": "int64_t sub_401846()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401856",
            "funcStartAddr": "0x401856",
            "funcEndAddr": "0x401860",
            "decompiledFuncCode": "int64_t sub_401856()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401866",
            "funcStartAddr": "0x401866",
            "funcEndAddr": "0x401870",
            "decompiledFuncCode": "int64_t sub_401866()\n{\n    int64_t var_8 = 0x2f;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401876",
            "funcStartAddr": "0x401876",
            "funcEndAddr": "0x401880",
            "decompiledFuncCode": "int64_t sub_401876()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401886",
            "funcStartAddr": "0x401886",
            "funcEndAddr": "0x401890",
            "decompiledFuncCode": "int64_t sub_401886()\n{\n    int64_t var_8 = 0x31;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401896",
            "funcStartAddr": "0x401896",
            "funcEndAddr": "0x4018a0",
            "decompiledFuncCode": "int64_t sub_401896()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4018a6",
            "funcStartAddr": "0x4018a6",
            "funcEndAddr": "0x4018b0",
            "decompiledFuncCode": "int64_t sub_4018a6()\n{\n    int64_t var_8 = 0x33;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4018b6",
            "funcStartAddr": "0x4018b6",
            "funcEndAddr": "0x4018c0",
            "decompiledFuncCode": "int64_t sub_4018b6()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4018c6",
            "funcStartAddr": "0x4018c6",
            "funcEndAddr": "0x4018d0",
            "decompiledFuncCode": "int64_t sub_4018c6()\n{\n    int64_t var_8 = 0x35;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4018d6",
            "funcStartAddr": "0x4018d6",
            "funcEndAddr": "0x4018e0",
            "decompiledFuncCode": "int64_t sub_4018d6()\n{\n    int64_t var_8 = 0x36;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4018e6",
            "funcStartAddr": "0x4018e6",
            "funcEndAddr": "0x4018f0",
            "decompiledFuncCode": "int64_t sub_4018e6()\n{\n    int64_t var_8 = 0x37;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401906",
            "funcStartAddr": "0x401906",
            "funcEndAddr": "0x401910",
            "decompiledFuncCode": "int64_t sub_401906()\n{\n    int64_t var_8 = 0x39;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x401940",
            "funcEndAddr": "0x402869",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    uint64_t r14 = 0;\n    void* r13 = nullptr;\n    uint64_t r12 = 0xffffffff;\n    uint64_t rbp = argc;\n    char** rbx = argv;\n    char* rdi = *argv;\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_406260(rdi);\n    int32_t var_e8;\n    int32_t var_e0;\n    setlocale(6, &data_40be0c[0x1b], rdx, rcx, r8, r9, var_e8, var_e0);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    sub_409e30(sub_403080);\n    setvbuf(stdout, nullptr, 1, 0);\n    while (true)\n    {\n        int32_t rax_1 = getopt_long(rbp, rbx, \"bctw\", &data_40a9e0, nullptr);\n        if (rax_1 == 0xffffffff)\n        {\n            data_60e2e8 = 0x3a;\n            data_60e2e0 = 0x38;\n            char const* const rsi_1;\n            if ((r12 == 0 && r14 != 0))\n            {\n                rsi_1 = \"--tag does not support --text mo\u2026\";\n            }\n            if ((r12 != 0 || (r12 == 0 && r14 == 0)))\n            {\n                if (r13 != 0)\n                {\n                    rsi_1 = \"the --tag option is meaningless \u2026\";\n                }\n                if ((r13 == 0 || (r13 != 0 && r14 == 0)))\n                {\n                    rsi_1 = \"the --binary and --text options \u2026\";\n                    if ((r13 & ((!r12) >> 0x1f)) == 0)\n                    {\n                        if (data_60e2da != 0)\n                        {\n                            goto label_401df8;\n                        }\n                        if (data_60e2dc != 0)\n                        {\n                            rsi_1 = \"the --status option is meaningfu\u2026\";\n                            if (r13 != 0)\n                            {\n                                goto label_401bb6;\n                            }\n                        }\n                        else if (data_60e2db == 0)\n                        {\n                            while (true)\n                            {\n                                if (data_60e2d9 == 1)\n                                {\n                                    rsi_1 = \"the --quiet option is meaningful\u2026\";\n                                    if (r13 == 0)\n                                    {\n                                        break;\n                                    }\n                                }\n                                void* var_e8_1;\n                                uint64_t var_e0_1;\n                                void* var_b0_1;\n                                char var_a0_1;\n                                char var_9e_1;\n                                char var_9d_1;\n                                void var_78;\n                                int32_t rax_12;\n                                char rbx_5;\n                                while (true)\n                                {\n                                    if (data_60e2d8 != 0)\n                                    {\n                                        rsi_1 = \"the --strict option is meaningfu\u2026\";\n                                        if (r13 == 0)\n                                        {\n                                            break;\n                                        }\n                                    }\n                                label_401bdb:\n                                    if (r12 == 0xffffffff)\n                                    {\n                                        r12 = 0;\n                                    }\n                                    var_b0_1 = &rbx[rbp];\n                                    int64_t rax_8 = data_60e29c;\n                                    if (rax_8 == rbp)\n                                    {\n                                        *var_b0_1 = &data_40be0a;\n                                        var_b0_1 = (var_b0_1 + 8);\n                                    }\n                                    void* rax_9 = &rbx[rax_8];\n                                    var_e8_1 = rax_9;\n                                    if (var_b0_1 <= rax_9)\n                                    {\n                                        var_a0_1 = 1;\n                                        goto label_4021c5;\n                                    }\n                                    var_a0_1 = 1;\n                                    char var_d5_1 = r13;\n                                    var_9e_1 = r14;\n                                    rax_12 = (((rax_9 - rax_9) & 0xfffffff6) + 0x2a);\n                                    var_9d_1 = rax_12;\n                                label_401c59:\n                                    uint64_t rdi_6 = *var_e8_1;\n                                    var_e0_1 = rdi_6;\n                                    void var_58;\n                                    if (var_d5_1 == 0)\n                                    {\n                                        if (sub_402af0(var_e0_1, &var_78, &var_58) != 0)\n                                        {\n                                            char* rax_56 = strchr(var_e0_1, 0x5c);\n                                            char* rax_81;\n                                            if (rax_56 == 0)\n                                            {\n                                                rax_81 = strchr(var_e0_1, 0xa);\n                                                if (rax_81 == 0)\n                                                {\n                                                    rbx_5 = 0;\n                                                    if ((var_9e_1 == 0 && (data_60e2e0 >> 1) == 0))\n                                                    {\n                                                        goto label_402371;\n                                                    }\n                                                }\n                                            }\n                                            if (((rax_56 != 0 || (rax_56 == 0 && rax_81 != 0)) && var_9e_1 != 0))\n                                            {\n                                                uint64_t* const rdi_36 = stdout;\n                                                char* rax_100 = stdout[5];\n                                                if (stdout[6] <= rax_100)\n                                                {\n                                                    rbx_5 = 1;\n                                                    __overflow(rdi_36, 0x5c);\n                                                }\n                                                else\n                                                {\n                                                    rbx_5 = 1;\n                                                    stdout[5] = &rax_100[1];\n                                                    *rax_100 = 0x5c;\n                                                }\n                                            }\n                                            if ((((rax_56 == 0 && rax_81 == 0) && var_9e_1 != 0) || ((rax_56 != 0 || (rax_56 == 0 && rax_81 != 0)) && var_9e_1 != 0)))\n                                            {\n                                                fwrite_unlocked(\"SHA224\", 1, 6, stdout);\n                                                fwrite_unlocked(&data_409fc6, 1, 2, stdout);\n                                                sub_402a40(var_e0_1, rbx_5);\n                                                fwrite_unlocked(\") = \", 1, 4, stdout);\n                                                if ((data_60e2e0 >> 1) == 0)\n                                                {\n                                                    goto label_402339;\n                                                }\n                                            }\n                                            if (((rax_56 != 0 || (rax_56 == 0 && rax_81 != 0)) && var_9e_1 == 0))\n                                            {\n                                                uint64_t* const rdi_22 = stdout;\n                                                char* rax_57 = stdout[5];\n                                                if (rax_57 >= stdout[6])\n                                                {\n                                                    __overflow(rdi_22, 0x5c);\n                                                }\n                                                else\n                                                {\n                                                    stdout[5] = &rax_57[1];\n                                                    *rax_57 = 0x5c;\n                                                }\n                                                rbx_5 = 1;\n                                                if ((data_60e2e0 >> 1) == 0)\n                                                {\n                                                    goto label_402371;\n                                                }\n                                            }\n                                            rbp = 0;\n                                            break;\n                                        }\n                                        var_a0_1 = 0;\n                                        goto label_4021b1;\n                                    }\n                                    int32_t rax_14 = strcmp(rdi_6, &data_40be0a);\n                                    char rax_38;\n                                    FILE* rax_52;\n                                    if (rax_14 != 0)\n                                    {\n                                        rax_52 = sub_4061c0(var_e0_1, \"r\");\n                                        rbp = rax_52;\n                                        if (rax_52 == 0)\n                                        {\n                                        label_402265:\n                                            error(0, *__errno_location(), \"%s\", sub_407d00(0, 3, var_e0_1));\n                                            rax_38 = 0;\n                                        }\n                                    }\n                                    else\n                                    {\n                                        data_60e2f0 = 1;\n                                        rbp = stdin;\n                                        var_e0_1 = dcgettext(nullptr, \"standard input\", 5);\n                                    }\n                                    if ((rax_14 == 0 || (rax_14 != 0 && rax_52 != 0)))\n                                    {\n                                        char var_9f_1 = 0;\n                                        r14 = 0;\n                                        r12 = 0;\n                                        int64_t rbx_1 = 1;\n                                        char* var_88 = nullptr;\n                                        uint64_t var_80 = 0;\n                                        uint64_t var_a8_1 = 0;\n                                        uint64_t var_d0_1 = 0;\n                                    label_401cea:\n                                        ssize_t rax_16 = __getdelim(&var_88, &var_80, 0xa, rbp);\n                                        if (rax_16 > 0)\n                                        {\n                                            char* r15_1 = var_88;\n                                            char rcx_3 = *r15_1;\n                                            int64_t rdx_1;\n                                            ssize_t r8_2;\n                                            if (rcx_3 != 0x23)\n                                            {\n                                                r8_2 = rax_16;\n                                                if (r15_1[(rax_16 - 1)] == 0xa)\n                                                {\n                                                    r8_2 = (r8_2 - 1);\n                                                    r15_1[r8_2] = 0;\n                                                    r15_1 = var_88;\n                                                    rcx_3 = *r15_1;\n                                                }\n                                                rdx_1 = 0;\n                                                if (rcx_3 != 0x20)\n                                                {\n                                                label_401d3e:\n                                                }\n                                            }\n                                            if ((rcx_3 == 0x20 || rcx_3 == 9))\n                                            {\n                                            label_401d30:\n                                                rdx_1 = (rdx_1 + 1);\n                                                rcx_3 = r15_1[rdx_1];\n                                                if (rcx_3 != 0x20)\n                                                {\n                                                    goto label_401d3e;\n                                                }\n                                                goto label_401d30;\n                                            }\n                                            int64_t rax_21;\n                                            if (((rcx_3 != 0x20 && rcx_3 != 0x23) && rcx_3 != 9))\n                                            {\n                                                char r10_1 = 0;\n                                                bool c_2 = rcx_3 < 0x5c;\n                                                bool z_1 = rcx_3 == 0x5c;\n                                                if (z_1)\n                                                {\n                                                    r10_1 = var_d5_1;\n                                                    int64_t temp2_1 = rdx_1;\n                                                    rdx_1 = (rdx_1 + 1);\n                                                    c_2 = temp2_1 >= -1;\n                                                    z_1 = temp2_1 == -1;\n                                                }\n                                                r13 = &r15_1[rdx_1];\n                                                char const* const rdi_8 = \"SHA224\";\n                                                int64_t rcx_4 = 6;\n                                                void* rsi_3 = r13;\n                                            label_401d66:\n                                                if (rcx_4 != 0)\n                                                {\n                                                    char temp3_1 = *rsi_3;\n                                                    char const temp4_1 = *rdi_8;\n                                                    c_2 = temp3_1 < temp4_1;\n                                                    z_1 = temp3_1 == temp4_1;\n                                                    rsi_3 = (rsi_3 + 1);\n                                                    rdi_8 = &rdi_8[1];\n                                                    rcx_4 = (rcx_4 - 1);\n                                                    if (z_1)\n                                                    {\n                                                        goto label_401d66;\n                                                    }\n                                                }\n                                                rax_16 = ((!z_1) && (!c_2));\n                                                rax_16 = (rax_16 - 0);\n                                                char rax_24;\n                                                uint64_t rax_70;\n                                                int32_t rcx_10;\n                                                ssize_t r15_2;\n                                                if (rax_16 != 0)\n                                                {\n                                                    rax_21 = *r13 == 0x5c;\n                                                    if ((r8_2 - rdx_1) >= (rax_21 + data_60e2e8))\n                                                    {\n                                                        int64_t rdx_4 = (rdx_1 + data_60e2e0);\n                                                        void* rcx_9 = &r15_1[rdx_4];\n                                                        char rax_23 = *rcx_9;\n                                                        if ((rax_23 != 0x20 && rax_23 != 9))\n                                                        {\n                                                            goto label_401d95;\n                                                        }\n                                                        *rcx_9 = 0;\n                                                        rax_24 = sub_402950(r13);\n                                                        if (rax_24 == 0)\n                                                        {\n                                                            goto label_401d95;\n                                                        }\n                                                        rcx_10 = data_60e210;\n                                                        int64_t rax_25 = (rdx_4 + 1);\n                                                        if ((r8_2 - rax_25) != 1)\n                                                        {\n                                                            char rsi_6 = r15_1[(rdx_4 + 1)];\n                                                            if ((rsi_6 == 0x20 || rsi_6 == 0x2a))\n                                                            {\n                                                                if (rcx_10 == 1)\n                                                                {\n                                                                    goto label_401ebe;\n                                                                }\n                                                                data_60e210 = 0;\n                                                                rax_25 = (rdx_4 + 2);\n                                                                goto label_401ebe;\n                                                            }\n                                                        }\n                                                        if (rcx_10 == 0)\n                                                        {\n                                                            goto label_401d95;\n                                                        }\n                                                        data_60e210 = 1;\n                                                    label_401ebe:\n                                                        r15_2 = &r15_1[rax_25];\n                                                        if (r10_1 != 0)\n                                                        {\n                                                            rax_70 = sub_4029b0(r15_2, (r8_2 - rax_25)) != 0;\n                                                        }\n                                                        else\n                                                        {\n                                                        label_401ece:\n                                                            bool c_3 = false;\n                                                            bool z_2 = (rax_14 & rax_14) == 0;\n                                                            if (z_2)\n                                                            {\n                                                                void* const rdi_10 = &data_40be0a;\n                                                                int64_t rcx_11 = 2;\n                                                                ssize_t rsi_7 = r15_2;\n                                                            label_401edf:\n                                                                if (rcx_11 != 0)\n                                                                {\n                                                                    char temp9_1 = *rsi_7;\n                                                                    char temp10_1 = *rdi_10;\n                                                                    c_3 = temp9_1 < temp10_1;\n                                                                    z_2 = temp9_1 == temp10_1;\n                                                                    rsi_7 = (rsi_7 + 1);\n                                                                    rdi_10 = (rdi_10 + 1);\n                                                                    rcx_11 = (rcx_11 - 1);\n                                                                    if (z_2)\n                                                                    {\n                                                                        goto label_401edf;\n                                                                    }\n                                                                }\n                                                                int32_t rax_26;\n                                                                rax_26 = ((!z_2) && (!c_3));\n                                                                rax_26 = (rax_26 - 0);\n                                                                if (rax_26 == 0)\n                                                                {\n                                                                    goto label_401d95;\n                                                                }\n                                                                goto label_401eee;\n                                                            }\n                                                        label_401eee:\n                                                            int32_t r14_1 = 0;\n                                                            if (data_60e2dc == 0)\n                                                            {\n                                                                r14_1 = strchr(r15_2, 0xa) != 0;\n                                                            }\n                                                            char var_89;\n                                                            char rax_28 = sub_402af0(r15_2, &var_58, &var_89);\n                                                            char r8_4 = rax_28;\n                                                            char const* const rsi_10;\n                                                            if (rax_28 == 0)\n                                                            {\n                                                                var_d0_1 = (var_d0_1 + 1);\n                                                                if (data_60e2dc == 0)\n                                                                {\n                                                                    if (r14_1 != 0)\n                                                                    {\n                                                                        uint64_t* const rdi_13 = stdout;\n                                                                        char* rax_29 = stdout[5];\n                                                                        if (rax_29 >= stdout[6])\n                                                                        {\n                                                                            __overflow(rdi_13, 0x5c);\n                                                                        }\n                                                                        else\n                                                                        {\n                                                                            stdout[5] = &rax_29[1];\n                                                                            *rax_29 = 0x5c;\n                                                                        }\n                                                                    }\n                                                                    sub_402a40(r15_2, r14_1);\n                                                                    rsi_10 = \"FAILED open or read\";\n                                                                    goto label_401f90;\n                                                                }\n                                                            }\n                                                            else if ((data_60e2da == 0 || (data_60e2da != 0 && var_89 == 0)))\n                                                            {\n                                                                ssize_t rcx_14 = (data_60e2e0 >> 1);\n                                                                ssize_t var_c8;\n                                                                char var_c0;\n                                                                uint32_t rax_45;\n                                                                ssize_t rdx_11;\n                                                                uint32_t rsi_12;\n                                                                int32_t* rdi_16;\n                                                                if (rcx_14 == 0)\n                                                                {\n                                                                    rdx_11 = 0;\n                                                                }\n                                                                else\n                                                                {\n                                                                    var_c0 = rcx_14;\n                                                                    var_c8 = r8_4;\n                                                                    rdx_11 = 0;\n                                                                    r8_4 = var_c8;\n                                                                    rcx_14 = var_c0;\n                                                                    rdi_16 = *__ctype_tolower_loc();\n                                                                label_4020fa:\n                                                                    rax_45 = *(&var_58 + rdx_11);\n                                                                    rsi_12 = (rax_45 >> 4);\n                                                                    if ((rdi_16[*(r13 + (rdx_11 << 1))] != *\"0123456789abcdef\"[(rsi_12 & 0xf)] || (*(rdi_16 + (*(r13 + (rdx_11 << 1)) << 2)) == *((rsi_12 & 0xf) + \"0123456789abcdef\") && rdi_16[*((r13 + (rdx_11 << 1)) + 1)] != *\"0123456789abcdef\"[(rax_45 & 0xf)])))\n                                                                    {\n                                                                        var_a8_1 = (var_a8_1 + 1);\n                                                                        if (data_60e2dc == 0)\n                                                                        {\n                                                                            if (r14_1 != 0)\n                                                                            {\n                                                                                goto label_402136;\n                                                                            }\n                                                                        label_40215c:\n                                                                            var_c0 = rdx_11;\n                                                                            sub_402a40(r15_2, r14_1);\n                                                                            if (rcx_14 != var_c0)\n                                                                            {\n                                                                                rsi_10 = \"FAILED\";\n                                                                                goto label_401f90;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                    if ((*(rdi_16 + (*(r13 + (rdx_11 << 1)) << 2)) == *((rsi_12 & 0xf) + \"0123456789abcdef\") && *(rdi_16 + (*((r13 + (rdx_11 << 1)) + 1) << 2)) == *((rax_45 & 0xf) + \"0123456789abcdef\")))\n                                                                    {\n                                                                        rdx_11 = (rdx_11 + 1);\n                                                                        if (rcx_14 != rdx_11)\n                                                                        {\n                                                                            goto label_4020fa;\n                                                                        }\n                                                                        rdx_11 = rcx_14;\n                                                                    }\n                                                                }\n                                                                char rax_72;\n                                                                char rax_73;\n                                                                if ((rcx_14 == 0 || ((rcx_14 != 0 && *(rdi_16 + (*(r13 + (rdx_11 << 1)) << 2)) == *((rsi_12 & 0xf) + \"0123456789abcdef\")) && *(rdi_16 + (*((r13 + (rdx_11 << 1)) + 1) << 2)) == *((rax_45 & 0xf) + \"0123456789abcdef\"))))\n                                                                {\n                                                                    rax_72 = data_60e2dc;\n                                                                    var_9f_1 = rax_72;\n                                                                    if (rax_72 == 0)\n                                                                    {\n                                                                        rax_73 = data_60e2d9;\n                                                                        var_9f_1 = rax_73;\n                                                                        if (rax_73 == 0)\n                                                                        {\n                                                                            if (r14_1 != 0)\n                                                                            {\n                                                                                var_9f_1 = r8_4;\n                                                                            label_402136:\n                                                                                uint64_t* const rdi_17 = stdout;\n                                                                                char* rax_46 = stdout[5];\n                                                                                if (rax_46 >= stdout[6])\n                                                                                {\n                                                                                    var_c0 = rdx_11;\n                                                                                    __overflow(rdi_17, 0x5c);\n                                                                                    rdx_11 = var_c0;\n                                                                                }\n                                                                                else\n                                                                                {\n                                                                                    stdout[5] = &rax_46[1];\n                                                                                    *rax_46 = 0x5c;\n                                                                                }\n                                                                                goto label_40215c;\n                                                                            }\n                                                                            var_c8 = r8_4;\n                                                                            sub_402a40(r15_2, 0);\n                                                                            var_9f_1 = var_c8;\n                                                                        }\n                                                                    }\n                                                                }\n                                                                if ((((((rcx_14 == 0 || ((rcx_14 != 0 && *(rdi_16 + (*(r13 + (rdx_11 << 1)) << 2)) == *((rsi_12 & 0xf) + \"0123456789abcdef\")) && *(rdi_16 + (*((r13 + (rdx_11 << 1)) + 1) << 2)) == *((rax_45 & 0xf) + \"0123456789abcdef\"))) && rax_72 == 0) && rax_73 == 0) || ((rcx_14 != 0 && (*(rdi_16 + (*(r13 + (rdx_11 << 1)) << 2)) != *((rsi_12 & 0xf) + \"0123456789abcdef\") || (*(rdi_16 + (*(r13 + (rdx_11 << 1)) << 2)) == *((rsi_12 & 0xf) + \"0123456789abcdef\") && *(rdi_16 + (*((r13 + (rdx_11 << 1)) + 1) << 2)) != *((rax_45 & 0xf) + \"0123456789abcdef\")))) && data_60e2dc == 0)) && data_60e2d9 == 0))\n                                                                {\n                                                                    rsi_10 = &data_409f96;\n                                                                label_401f90:\n                                                                    __printf_chk(1, \": %s\\n\", dcgettext(nullptr, rsi_10, 5));\n                                                                }\n                                                            }\n                                                            r14 = var_d5_1;\n                                                            if ((*rbp & 0x30) == 0)\n                                                            {\n                                                                goto label_401db0;\n                                                            }\n                                                        }\n                                                    }\n                                                    else\n                                                    {\n                                                    label_401d95:\n                                                        r12 = (r12 + 1);\n                                                        if (data_60e2db != 0)\n                                                        {\n                                                            error(0, 0, dcgettext(nullptr, \"%s: %lu: improperly formatted %s\u2026\", 5), sub_407d00(0, 3, var_e0_1), rbx_1, \"SHA224\", var_e8_1, var_e0_1);\n                                                        }\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    char rax_17 = r15_1[(rdx_1 + 6)];\n                                                    int64_t rcx_5 = (rdx_1 + 6);\n                                                    if (rax_17 == 0x20)\n                                                    {\n                                                        rax_17 = r15_1[(rdx_1 + 7)];\n                                                        rcx_5 = (rdx_1 + 7);\n                                                    }\n                                                    if (rax_17 != 0x28)\n                                                    {\n                                                        goto label_401d95;\n                                                    }\n                                                    int64_t rcx_16 = (rcx_5 + 1);\n                                                    int64_t r8_6 = (r8_2 - rcx_16);\n                                                    if (r8_2 == rcx_16)\n                                                    {\n                                                        goto label_401d95;\n                                                    }\n                                                    r15_2 = &r15_1[rcx_16];\n                                                    void* r11_2 = (r8_6 - 1);\n                                                    ssize_t rdx_14;\n                                                    void* temp8_1;\n                                                    if (r8_6 != 1)\n                                                    {\n                                                        if (*((r15_2 + r8_6) - 1) != 0x29)\n                                                        {\n                                                        label_402223:\n                                                            temp8_1 = r11_2;\n                                                            r11_2 = (r11_2 - 1);\n                                                            if ((temp8_1 != 1 && *(r15_2 + r11_2) != 0x29))\n                                                            {\n                                                                goto label_402223;\n                                                            }\n                                                        }\n                                                        if ((*((r15_2 + r8_6) - 1) == 0x29 || (*((r15_2 + r8_6) - 1) != 0x29 && temp8_1 != 1)))\n                                                        {\n                                                            rdx_14 = (r15_2 + r11_2);\n                                                        }\n                                                    }\n                                                    if (((r8_6 == 1 || ((r8_6 != 1 && *((r15_2 + r8_6) - 1) != 0x29) && temp8_1 == 1)) && *r15_2 == 0x29))\n                                                    {\n                                                        rdx_14 = r15_2;\n                                                        r11_2 = nullptr;\n                                                    }\n                                                    if ((((r8_6 == 1 || ((r8_6 != 1 && *((r15_2 + r8_6) - 1) != 0x29) && temp8_1 == 1)) && *r15_2 == 0x29) || (r8_6 != 1 && (*((r15_2 + r8_6) - 1) == 0x29 || (*((r15_2 + r8_6) - 1) != 0x29 && temp8_1 != 1)))))\n                                                    {\n                                                        if (r10_1 != 0)\n                                                        {\n                                                            if (sub_4029b0(r15_2, r11_2) == 0)\n                                                            {\n                                                                goto label_401d95;\n                                                            }\n                                                            goto label_4023d4;\n                                                        }\n                                                    label_4023d4:\n                                                        *rdx_14 = 0;\n                                                        char rdx_21 = *((r15_2 + r11_2) + 1);\n                                                        void* rax_68 = (r11_2 + 1);\n                                                        if ((rdx_21 == 9 || rdx_21 == 0x20))\n                                                        {\n                                                        label_4023f0:\n                                                            rax_68 = (rax_68 + 1);\n                                                            rdx_21 = *(r15_2 + rax_68);\n                                                            if (rdx_21 == 0x20)\n                                                            {\n                                                                goto label_4023f0;\n                                                            }\n                                                            if (rdx_21 == 9)\n                                                            {\n                                                                goto label_4023f0;\n                                                            }\n                                                        }\n                                                        if (rdx_21 != 0x3d)\n                                                        {\n                                                            goto label_401d95;\n                                                        }\n                                                        r13 = ((r15_2 + rax_68) + 1);\n                                                        char rdx_22 = *r13;\n                                                        if ((rdx_22 == 0x20 || rdx_22 == 9))\n                                                        {\n                                                            void* rax_69 = ((r15_2 + rax_68) + 2);\n                                                        label_402425:\n                                                            char rdx_23 = *rax_69;\n                                                            r13 = rax_69;\n                                                            rax_69 = (rax_69 + 1);\n                                                            if (rdx_23 == 0x20)\n                                                            {\n                                                                goto label_402425;\n                                                            }\n                                                            if (rdx_23 == 9)\n                                                            {\n                                                                goto label_402425;\n                                                            }\n                                                        }\n                                                        rax_70 = sub_402950(r13);\n                                                    }\n                                                    if (((r8_6 == 1 || ((r8_6 != 1 && *((r15_2 + r8_6) - 1) != 0x29) && temp8_1 == 1)) && *r15_2 != 0x29))\n                                                    {\n                                                        goto label_401d95;\n                                                    }\n                                                }\n                                                if ((((((rax_16 != 0 && (r8_2 - rdx_1) >= (rax_21 + data_60e2e8)) && rax_24 != 0) && rcx_10 != 0) && r10_1 != 0) || rax_16 == 0))\n                                                {\n                                                    if (rax_70 == 0)\n                                                    {\n                                                        goto label_401d95;\n                                                    }\n                                                    goto label_401ece;\n                                                }\n                                            }\n                                            if (((rcx_3 == 0x23 || ((((rcx_3 != 0x23 && rcx_3 != 0x20) && rcx_3 != 9) && rax_16 != 0) && (r8_2 - rdx_1) < (rax_21 + data_60e2e8))) && (*rbp & 0x30) == 0))\n                                            {\n                                            label_401db0:\n                                                int64_t temp1_1 = rbx_1;\n                                                rbx_1 = (rbx_1 + 1);\n                                                if (temp1_1 != -1)\n                                                {\n                                                    goto label_401cea;\n                                                }\n                                                rbx = sub_407d00(0, 3, var_e0_1);\n                                                error(1, 0, dcgettext(nullptr, \"%s: too many checksum lines\", 5), rbx);\n                                            label_401df8:\n                                                rsi_1 = \"the --ignore-missing option is m\u2026\";\n                                                if (r13 == 0)\n                                                {\n                                                    break;\n                                                }\n                                            label_401bb6:\n                                                if (data_60e2db != 0)\n                                                {\n                                                    goto label_401bdb;\n                                                }\n                                                continue;\n                                            }\n                                        }\n                                        free(var_88);\n                                        uint32_t rbx_3 = (*rbp & 0x20);\n                                        if (rbx_3 != 0)\n                                        {\n                                            error(0, 0, dcgettext(nullptr, \"%s: read error\", 5), sub_407d00(0, 3, var_e0_1));\n                                            rax_38 = 0;\n                                        }\n                                        else\n                                        {\n                                            if ((rax_14 != 0 && sub_4086e0(rbp) != 0))\n                                            {\n                                                goto label_402265;\n                                            }\n                                            if (r14 == 0)\n                                            {\n                                                rbp = sub_407d00(0, 3, var_e0_1);\n                                                error(0, 0, dcgettext(nullptr, \"%s: no properly formatted %s che\u2026\", 5), rbp, \"SHA224\");\n                                            }\n                                            else\n                                            {\n                                                if (data_60e2dc == 0)\n                                                {\n                                                    if (r12 != 0)\n                                                    {\n                                                        error(0, 0, dcngettext(nullptr, \"WARNING: %lu line is improperly \u2026\", \"WARNING: %lu lines are improperl\u2026\", r12, 5), r12);\n                                                    }\n                                                    if (var_d0_1 != 0)\n                                                    {\n                                                        r14 = var_d0_1;\n                                                        error(0, 0, dcngettext(nullptr, \"WARNING: %lu listed file could n\u2026\", \"WARNING: %lu listed files could \u2026\", r14, 5), r14);\n                                                    }\n                                                    if (var_a8_1 != 0)\n                                                    {\n                                                        r14 = var_a8_1;\n                                                        error(0, 0, dcngettext(nullptr, \"WARNING: %lu computed checksum d\u2026\", \"WARNING: %lu computed checksums \u2026\", r14, 5), r14);\n                                                    }\n                                                    if ((data_60e2da != 0 && var_9f_1 == 0))\n                                                    {\n                                                        rbp = sub_407d00(0, 3, var_e0_1);\n                                                        error(0, 0, dcgettext(nullptr, \"%s: no file was verified\", 5), rbp);\n                                                    }\n                                                }\n                                                if (((((data_60e2dc != 0 || (data_60e2dc == 0 && data_60e2da == 0)) && var_9f_1 != 0) || ((data_60e2dc == 0 && data_60e2da != 0) && var_9f_1 != 0)) && (var_d0_1 | var_a8_1) == 0))\n                                                {\n                                                    rbx_3 = r12 == 0;\n                                                    rbx_3 = ((data_60e2d8 ^ 1) | rbx_3);\n                                                }\n                                            }\n                                            rax_38 = (rbx_3 & 1);\n                                        }\n                                    }\n                                    var_a0_1 = (var_a0_1 & rax_38);\n                                    goto label_4021b1;\n                                }\n                                if ((/* if (unimplemented  {cmp byte [rel &data_60e2d8], 0x0} && r13.b == 0)... */ && r13 == 0))\n                                {\n                                    break;\n                                }\n                                do\n                                {\n                                    uint64_t rdx_17 = *(&var_78 + rbp);\n                                    rbp = (rbp + 1);\n                                    __printf_chk(1, \"%02x\", rdx_17);\n                                } while ((data_60e2e0 >> 1) > rbp);\n                            label_402339:\n                                if (var_9e_1 == 0)\n                                {\n                                label_402371:\n                                    uint64_t* const rdi_24 = stdout;\n                                    char* rax_66 = stdout[5];\n                                    if (rax_66 >= stdout[6])\n                                    {\n                                        __overflow(rdi_24, 0x20);\n                                    }\n                                    else\n                                    {\n                                        stdout[5] = &rax_66[1];\n                                        *rax_66 = 0x20;\n                                    }\n                                    uint64_t* const rdi_25 = stdout;\n                                    char* rax_67 = stdout[5];\n                                    if (rax_67 >= stdout[6])\n                                    {\n                                        __overflow(rdi_25, rax_12);\n                                    }\n                                    else\n                                    {\n                                        stdout[5] = &rax_67[1];\n                                        *rax_67 = var_9d_1;\n                                    }\n                                    sub_402a40(var_e0_1, rbx_5);\n                                }\n                                uint64_t* const rdi_23 = stdout;\n                                char* rax_63 = stdout[5];\n                                if (rax_63 >= stdout[6])\n                                {\n                                    __overflow(rdi_23, 0xa);\n                                }\n                                else\n                                {\n                                    stdout[5] = &rax_63[1];\n                                    *rax_63 = 0xa;\n                                }\n                            label_4021b1:\n                                var_e8_1 = (var_e8_1 + 8);\n                                if (var_b0_1 > var_e8_1)\n                                {\n                                    goto label_401c59;\n                                }\n                            label_4021c5:\n                                if ((data_60e2f0 != 0 && sub_4086e0(stdin) == 0xffffffff))\n                                {\n                                    rbx = dcgettext(nullptr, \"standard input\", 5);\n                                    error(1, *__errno_location(), rbx);\n                                    continue;\n                                }\n                                return (var_a0_1 ^ 1);\n                            }\n                        }\n                        else\n                        {\n                            rsi_1 = \"the --warn option is meaningful \u2026\";\n                            if (r13 != 0)\n                            {\n                                goto label_401bdb;\n                            }\n                        }\n                    }\n                }\n            }\n            error(0, 0, dcgettext(nullptr, rsi_1, 5));\n            break;\n        }\n        bool cond:0_1 = rax_1 <= 0x77;\n        if (rax_1 == 0x77)\n        {\n            data_60e2dc = 0;\n            data_60e2db = 1;\n            data_60e2d9 = 0;\n        }\n        else\n        {\n            if (cond:0_1)\n            {\n                bool cond:1_1 = rax_1 <= 0x62;\n                if (rax_1 != 0x62)\n                {\n                    if (cond:1_1)\n                    {\n                        if (rax_1 == 0xffffff7d)\n                        {\n                            int64_t var_f0 = 0;\n                            char const* const var_f8 = \"David Madore\";\n                            sub_408310(stdout, \"sha224sum\", \"GNU coreutils\", data_60e218);\n                            exit(0);\n                            /* no return */\n                        }\n                        if (rax_1 == 0xffffff7e)\n                        {\n                            sub_402c90(0);\n                            /* no return */\n                        }\n                        break;\n                    }\n                    if (rax_1 == 0x63)\n                    {\n                        r13 = 1;\n                        continue;\n                    }\n                    else\n                    {\n                        if (rax_1 != 0x74)\n                        {\n                            break;\n                        }\n                        r12 = 0;\n                        continue;\n                    }\n                }\n            }\n            else\n            {\n                bool cond:2_1 = rax_1 > 0x82;\n                if (rax_1 == 0x82)\n                {\n                    data_60e2dc = 0;\n                    data_60e2db = 0;\n                    data_60e2d9 = 1;\n                    continue;\n                }\n                else if (cond:2_1)\n                {\n                    if (rax_1 == 0x83)\n                    {\n                        data_60e2d8 = 1;\n                        continue;\n                    }\n                    else\n                    {\n                        if (rax_1 != 0x84)\n                        {\n                            break;\n                        }\n                        r14 = 1;\n                    }\n                }\n                else if (rax_1 == 0x80)\n                {\n                    data_60e2da = 1;\n                    continue;\n                }\n                else\n                {\n                    if (rax_1 != 0x81)\n                    {\n                        break;\n                    }\n                    data_60e2dc = 1;\n                    data_60e2db = 0;\n                    data_60e2d9 = 0;\n                    continue;\n                }\n            }\n            r12 = 1;\n        }\n    }\n    sub_402c90(1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x402870",
            "funcEndAddr": "0x40289a",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40289b",
            "funcStartAddr": "0x40289b",
            "funcEndAddr": "0x4028ba",
            "decompiledFuncCode": "void sub_40289b()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_4028ba",
            "funcStartAddr": "0x4028ba",
            "funcEndAddr": "0x4028f1",
            "decompiledFuncCode": "int64_t sub_4028ba()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_4028f1",
            "funcStartAddr": "0x4028f1",
            "funcEndAddr": "0x402948",
            "decompiledFuncCode": "void sub_4028f1()\n{\n    if (data_60e2c8 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_60e2d0;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_60e2d0 = (rax_1 + 1);\n        *(0x60de40 + ((rax_1 + 1) << 3))();\n    }\n    sub_40289b();\n    data_60e2c8 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_402948",
            "funcStartAddr": "0x402948",
            "funcEndAddr": "0x40294d",
            "decompiledFuncCode": "int64_t j_sub_4028ba()\n{\n    /* tailcall */\n    return sub_4028ba();\n}\n\n"
        },
        {
            "funcName": "sub_402950",
            "funcStartAddr": "0x402950",
            "funcEndAddr": "0x4029ad",
            "decompiledFuncCode": "uint64_t sub_402950(char* arg1)\n{\n    char* rbx = arg1;\n    int64_t rbp = data_60e2e0;\n    uint64_t rax;\n    if (rbp != 0)\n    {\n        uint16_t* rcx_1 = *__ctype_b_loc();\n        rax = 0;\n        uint64_t rdx_1;\n        do\n        {\n            if ((*(&rcx_1[*rbx] + 1) & 0x10) == 0)\n            {\n                return 0;\n            }\n            rdx_1 = (rax + 1);\n            rbx = &rbx[1];\n            rax = rdx_1;\n        } while (rdx_1 < rbp);\n    }\n    rax = *rbx == 0;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4029b0",
            "funcStartAddr": "0x4029b0",
            "funcEndAddr": "0x402a31",
            "decompiledFuncCode": "char* sub_4029b0(char* arg1, void* arg2)\n{\n    void* rax = &arg1[1];\n    int64_t rdx = 0;\n    void* r8 = (arg2 - 1);\n    if (arg2 != 0)\n    {\n        char* r9_1;\n        while (true)\n        {\n            char rcx_1 = arg1[rdx];\n            if (rcx_1 != 0)\n            {\n                char rcx_2;\n                if (rcx_1 != 0x5c)\n                {\n                    *(rax - 1) = rcx_1;\n                    r9_1 = rax;\n                }\n                else if (r8 != rdx)\n                {\n                    rdx = (rdx + 1);\n                    rcx_2 = arg1[rdx];\n                    if (rcx_2 == 0x5c)\n                    {\n                        r9_1 = rax;\n                        *(rax - 1) = 0x5c;\n                    }\n                    if (rcx_2 == 0x6e)\n                    {\n                        r9_1 = rax;\n                        *(rax - 1) = 0xa;\n                    }\n                }\n                if (((rcx_1 != 0x5c || ((rcx_1 == 0x5c && r8 != rdx) && rcx_2 == 0x5c)) || ((rcx_1 == 0x5c && r8 != rdx) && rcx_2 == 0x6e)))\n                {\n                    rdx = (rdx + 1);\n                    rax = (rax + 1);\n                    if (arg2 <= rdx)\n                    {\n                        break;\n                    }\n                    continue;\n                }\n            }\n            return 0;\n        }\n        if (r9_1 < (arg2 + arg1))\n        {\n            *r9_1 = 0;\n        }\n    }\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_402a40",
            "funcStartAddr": "0x402a40",
            "funcEndAddr": "0x402ae5",
            "decompiledFuncCode": "void sub_402a40(char* arg1, char arg2)\n{\n    char* rbx = arg1;\n    if (arg2 == 0)\n    {\n        /* tailcall */\n        return fputs_unlocked(arg1, stdout);\n    }\n    while (true)\n    {\n        uint32_t rsi = *rbx;\n        if (rsi == 0)\n        {\n            break;\n        }\n        FILE* rcx_1 = stdout;\n        if (rsi == 0xa)\n        {\n            fwrite_unlocked(&data_409e84, 1, 2, rcx_1);\n        }\n        else if (rsi == 0x5c)\n        {\n            fwrite_unlocked(&data_409e87, 1, 2, rcx_1);\n        }\n        else\n        {\n            char* rax = stdout[5];\n            if (rax >= stdout[6])\n            {\n                __overflow(stdout, rsi);\n            }\n            else\n            {\n                stdout[5] = &rax[1];\n                *rax = rsi;\n            }\n        }\n        rbx = &rbx[1];\n    }\n}\n\n"
        },
        {
            "funcName": "sub_402af0",
            "funcStartAddr": "0x402af0",
            "funcEndAddr": "0x402c82",
            "decompiledFuncCode": "uint64_t sub_402af0(char* arg1, int32_t* arg2, char* arg3)\n{\n    int64_t rcx = 2;\n    void* const rdi = &data_40be0a;\n    char* rsi = arg1;\n    int64_t __saved_rbx;\n    bool c = &__saved_rbx < 8;\n    bool z = &__saved_rbx == 8;\n    while (rcx != 0)\n    {\n        char temp1_1 = *rsi;\n        char temp2_1 = *rdi;\n        c = temp1_1 < temp2_1;\n        z = temp1_1 == temp2_1;\n        rsi = &rsi[1];\n        rdi = (rdi + 1);\n        rcx = (rcx - 1);\n        if ((!z))\n        {\n            break;\n        }\n    }\n    *arg3 = 0;\n    int32_t rax_1;\n    uint64_t* rax_3;\n    int32_t rax_4;\n    int32_t rax_5;\n    uint64_t* const rbx;\n    uint32_t r12_1;\n    if ((((!z) && (!c)) - 0) != 0)\n    {\n        rax_3 = sub_4061c0(arg1, \"r\");\n        rbx = rax_3;\n        if (rax_3 != 0)\n        {\n            sub_406190(rax_3, 2);\n            rax_4 = sub_406020(rbx, arg2);\n            if (rax_4 == 0)\n            {\n                rax_5 = sub_4086e0(rbx);\n                if (rax_5 != 0)\n                {\n                    r12_1 = 0;\n                    error(0, *__errno_location(), \"%s\", sub_407d00(0, 3, arg1));\n                }\n            }\n        }\n        else\n        {\n            int32_t* rax_12 = __errno_location();\n            r12_1 = data_60e2da;\n            if ((r12_1 == 0 || (r12_1 != 0 && *rax_12 != 2)))\n            {\n                r12_1 = 0;\n                error(0, *rax_12, \"%s\", sub_407d00(0, 3, arg1));\n            }\n            if ((r12_1 != 0 && *rax_12 == 2))\n            {\n                *arg3 = 1;\n            }\n        }\n    }\n    else\n    {\n        rbx = stdin;\n        data_60e2f0 = 1;\n        sub_406190(stdin, 2);\n        rax_1 = sub_406020(stdin, arg2);\n    }\n    if ((((((!z) && (!c)) - 0) == 0 && rax_1 != 0) || (((((!z) && (!c)) - 0) != 0 && rax_3 != 0) && rax_4 != 0)))\n    {\n        r12_1 = 0;\n        error(0, *__errno_location(), \"%s\", sub_407d00(0, 3, arg1));\n        if (stdin != rbx)\n        {\n            sub_4086e0(rbx);\n        }\n    }\n    if ((((((!z) && (!c)) - 0) == 0 && rax_1 == 0) || ((((((!z) && (!c)) - 0) != 0 && rax_3 != 0) && rax_4 == 0) && rax_5 == 0)))\n    {\n        r12_1 = 1;\n    }\n    return r12_1;\n}\n\n"
        },
        {
            "funcName": "sub_402c90",
            "funcStartAddr": "0x402c90",
            "funcEndAddr": "0x40305d",
            "decompiledFuncCode": "int64_t sub_402c90(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_60e308;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [OPTION]... [FILE]...\\n\u2026\", 5), rbp, \"SHA224\", 0xe0);\n        fputs_unlocked(dcgettext(nullptr, \"\\nWith no FILE, or when FILE is \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\n  -b, --binary         read in\u2026\", 5), stdout);\n        __printf_chk(1, dcgettext(nullptr, \"  -c, --check          read %s s\u2026\", 5), \"SHA224\");\n        fputs_unlocked(dcgettext(nullptr, \"      --tag            create a \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -t, --text           read in t\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nThe following five options are\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        __printf_chk(1, dcgettext(nullptr, \"\\nThe sums are computed as descr\u2026\", 5), \"RFC 3874\");\n        void* const var_88 = &data_409ea4;\n        void* const* rax_15 = &var_88;\n        void* const var_78_1 = \"coreutils\";\n        void* const var_70_1 = \"Multi-call invocation\";\n        void* const var_68_1 = \"sha224sum\";\n        void* const var_60_1 = \"sha2 utilities\";\n        void* const var_58_1 = \"sha256sum\";\n        void* const var_50_1 = \"sha2 utilities\";\n        void* const var_48_1 = \"sha384sum\";\n        void* const var_40_1 = \"sha2 utilities\";\n        void* const var_38_1 = \"sha512sum\";\n        void* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_15 = &rax_15[2];\n            void* const rdi_9 = *rax_15;\n            c_1 = false;\n            z_1 = (rdi_9 & rdi_9) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_11 = \"sha224sum\";\n            int64_t rcx_2 = 0xa;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_11;\n                char temp1_1 = *rdi_9;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_11 = (rsi_11 + 1);\n                rdi_9 = (rdi_9 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbp_1 = rax_15[1];\n        char* rax_26;\n        int32_t rax_27;\n        void* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_5;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_26 = setlocale(5, nullptr, rdx_5, rcx_5, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_26 != 0)\n            {\n                rax_27 = strncmp(rax_26, &data_409f1e, 3);\n                if (rax_27 != 0)\n                {\n                    rbp_1 = \"sha224sum\";\n                }\n            }\n            if ((rax_26 == 0 || (rax_26 != 0 && rax_27 == 0)))\n            {\n                rbp_1 = \"sha224sum\";\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"sha224sum\");\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_3;\n            uint64_t r8_1;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_18 = setlocale(5, nullptr, rdx_3, rcx_3, r8_1, r9_1, var_88, \"test invocation\");\n            if (rax_18 == 0)\n            {\n                goto label_402f50;\n            }\n            if (strncmp(rax_18, &data_409f1e, 3) == 0)\n            {\n                goto label_402f50;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_26 != 0) && rax_27 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), \"sha224sum\");\n        label_402f50:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"sha224sum\");\n            if (rbp_1 != \"sha224sum\")\n            {\n                r12_1 = &data_40be0c[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_403060",
            "funcStartAddr": "0x403060",
            "funcEndAddr": "0x403068",
            "decompiledFuncCode": "int64_t sub_403060(int64_t arg1)\n{\n    data_60e300 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_403070",
            "funcStartAddr": "0x403070",
            "funcEndAddr": "0x403078",
            "decompiledFuncCode": "int64_t sub_403070(char arg1)\n{\n    data_60e2f8 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_403080",
            "funcStartAddr": "0x403080",
            "funcEndAddr": "0x40311e",
            "decompiledFuncCode": "void sub_403080(void* arg1)\n{\n    int32_t rax = sub_409790(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_60e2f8 == 0 || (data_60e2f8 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_60e300;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_407cd0(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_60e2f8 != 0) && *rax_1 == 0x20)) && sub_409790(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_60e220);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_403120",
            "funcStartAddr": "0x403120",
            "funcEndAddr": "0x403168",
            "decompiledFuncCode": "void sub_403120(int64_t* arg1)\n{\n    arg1[4] = 0;\n    *arg1 = -0x4498517a95f61999;\n    arg1[1] = -0x5ab00ac5c3910c8e;\n    arg1[2] = -0x64fa9773aef1ad81;\n    arg1[3] = 0x5be0cd191f83d9ab;\n    arg1[5] = 0;\n}\n\n"
        },
        {
            "funcName": "sub_403170",
            "funcStartAddr": "0x403170",
            "funcEndAddr": "0x4031b8",
            "decompiledFuncCode": "void sub_403170(int64_t* arg1)\n{\n    arg1[4] = 0;\n    *arg1 = 0x367cd507c1059ed8;\n    arg1[1] = -0x8f1a6c6cf8f22e9;\n    arg1[2] = 0x68581511ffc00b31;\n    arg1[3] = -0x4105b05b9b067059;\n    arg1[5] = 0;\n}\n\n"
        },
        {
            "funcName": "sub_4031c0",
            "funcStartAddr": "0x4031c0",
            "funcEndAddr": "0x4031db",
            "decompiledFuncCode": "int32_t* sub_4031c0(int32_t* arg1, int32_t* arg2)\n{\n    int64_t rdx = 0;\n    do\n    {\n        *(arg2 + rdx) = _bswap(*(arg1 + rdx));\n        rdx = (rdx + 4);\n    } while (rdx != 0x20);\n    return arg2;\n}\n\n"
        },
        {
            "funcName": "sub_4031e0",
            "funcStartAddr": "0x4031e0",
            "funcEndAddr": "0x4031fb",
            "decompiledFuncCode": "int32_t* sub_4031e0(int32_t* arg1, int32_t* arg2)\n{\n    int64_t rdx = 0;\n    do\n    {\n        *(arg2 + rdx) = _bswap(*(arg1 + rdx));\n        rdx = (rdx + 4);\n    } while (rdx != 0x1c);\n    return arg2;\n}\n\n"
        },
        {
            "funcName": "sub_403200",
            "funcStartAddr": "0x403200",
            "funcEndAddr": "0x405984",
            "decompiledFuncCode": "uint64_t sub_403200(int32_t* arg1, int64_t arg2, int32_t* arg3)\n{\n    int32_t rcx = arg2;\n    void* rax_2 = ((arg2 & 0xfffffffffffffffc) + arg1);\n    int32_t r13 = arg3[2];\n    int32_t r12 = arg3[3];\n    int32_t r10 = arg3[4];\n    int32_t rbp = arg3[5];\n    int32_t* var_c0 = arg1;\n    int32_t r9 = arg3[6];\n    int32_t rdx = *arg3;\n    int32_t rdi;\n    rdi = (rcx + arg3[8]) < rcx;\n    arg3[8] = (rcx + arg3[8]);\n    int32_t r8 = arg3[7];\n    uint64_t rax_3 = arg3[1];\n    arg3[9] = ((arg3[9] + (arg2 >> 0x20)) + rdi);\n    if (arg1 < rax_2)\n    {\n        int32_t var_9c_1 = r8;\n        int32_t var_a0_1 = r9;\n        int32_t var_a4_1 = rbp;\n        int32_t var_a8_1 = r10;\n        int32_t var_ac_1 = r12;\n        int32_t var_b0_1 = r13;\n        int32_t var_b4_1 = rax_3;\n        int32_t var_8c_1 = rdx;\n        do\n        {\n            int64_t rcx_5 = 0;\n            int32_t var_78;\n            do\n            {\n                *(&var_78 + rcx_5) = _bswap(*(var_c0 + rcx_5));\n                rcx_5 = (rcx_5 + 4);\n            } while (rcx_5 != 0x40);\n            var_c0 = &var_c0[0x10];\n            int32_t rcx_11 = ((((var_78 + r8) + 0x428a2f98) + ((ROLD(r10, 7)) ^ ((RORD(r10, 0xb)) ^ (RORD(r10, 6))))) + (((rbp ^ r9) & r10) ^ r9));\n            int32_t r14_1 = (rcx_11 + r12);\n            int32_t rsi_19 = (((((rdx | rax_3) & r13) | (rdx & rax_3)) + (((RORD(rdx, 0xd)) ^ (RORD(rdx, 2))) ^ (ROLD(rdx, 0xa)))) + rcx_11);\n            int32_t var_74;\n            int32_t rdi_18 = (((ROLD(r14_1, 7)) ^ ((RORD(r14_1, 0xb)) ^ (RORD(r14_1, 6)))) + (((var_74 + r9) + 0x71374491) + (((r10 ^ rbp) & r14_1) ^ rbp)));\n            int32_t r9_1 = (rdi_18 + r13);\n            int32_t r8_15 = (((((rsi_19 | rdx) & rax_3) | (rsi_19 & rdx)) + (((RORD(rsi_19, 0xd)) ^ (RORD(rsi_19, 2))) ^ (ROLD(rsi_19, 0xa)))) + rdi_18);\n            int32_t var_70;\n            int32_t rdi_28 = (((ROLD(r9_1, 7)) ^ ((RORD(r9_1, 0xb)) ^ (RORD(r9_1, 6)))) + (((var_70 + rbp) - 0x4a3f0431) + (((r14_1 ^ r10) & r9_1) ^ r10)));\n            int32_t rcx_20 = (rdi_28 + rax_3);\n            int32_t rbx_8 = (((((rsi_19 | r8_15) & rdx) | (rsi_19 & r8_15)) + (((RORD(r8_15, 0xd)) ^ (RORD(r8_15, 2))) ^ (ROLD(r8_15, 0xa)))) + rdi_28);\n            int32_t var_6c;\n            int32_t rax_19 = (((ROLD(rcx_20, 7)) ^ ((RORD(rcx_20, 0xb)) ^ (RORD(rcx_20, 6)))) + (((r10 + var_6c) - 0x164a245b) + (((r14_1 ^ r9_1) & rcx_20) ^ r14_1)));\n            int32_t rdx_1 = (rdx + rax_19);\n            int32_t rdi_42 = (((((r8_15 | rbx_8) & rsi_19) | (r8_15 & rbx_8)) + (((RORD(rbx_8, 0xd)) ^ (RORD(rbx_8, 2))) ^ (ROLD(rbx_8, 0xa)))) + rax_19);\n            int32_t var_68;\n            int32_t rax_29 = (((ROLD(rdx_1, 7)) ^ ((RORD(rdx_1, 0xb)) ^ (RORD(rdx_1, 6)))) + (((var_68 + r14_1) + 0x3956c25b) + (((r9_1 ^ rcx_20) & rdx_1) ^ r9_1)));\n            int32_t rsi_20 = (rsi_19 + rax_29);\n            int32_t r11_26 = (((((rbx_8 | rdi_42) & r8_15) | (rbx_8 & rdi_42)) + (((RORD(rdi_42, 0xd)) ^ (RORD(rdi_42, 2))) ^ (ROLD(rdi_42, 0xa)))) + rax_29);\n            int32_t var_64;\n            int32_t r9_8 = (((ROLD(rsi_20, 7)) ^ ((RORD(rsi_20, 0xb)) ^ (RORD(rsi_20, 6)))) + ((((rcx_20 ^ rdx_1) & rsi_20) ^ rcx_20) + ((var_64 + r9_1) + 0x59f111f1)));\n            int32_t r8_16 = (r8_15 + r9_8);\n            int32_t rax_43 = (((((rdi_42 | r11_26) & rbx_8) | (rdi_42 & r11_26)) + (((RORD(r11_26, 0xd)) ^ (RORD(r11_26, 2))) ^ (ROLD(r11_26, 0xa)))) + r9_8);\n            int32_t var_60;\n            int32_t r9_18 = (((ROLD(r8_16, 7)) ^ ((RORD(r8_16, 0xb)) ^ (RORD(r8_16, 6)))) + (((var_60 + rcx_20) - 0x6dc07d5c) + (((rdx_1 ^ rsi_20) & r8_16) ^ rdx_1)));\n            int32_t rbx_9 = (rbx_8 + r9_18);\n            int32_t rcx_33 = (((((r11_26 | rax_43) & rdi_42) | (r11_26 & rax_43)) + (((RORD(rax_43, 0xd)) ^ (RORD(rax_43, 2))) ^ (ROLD(rax_43, 0xa)))) + r9_18);\n            int32_t var_5c;\n            int32_t r9_28 = (((ROLD(rbx_9, 7)) ^ ((RORD(rbx_9, 0xb)) ^ (RORD(rbx_9, 6)))) + (((var_5c + rdx_1) - 0x54e3a12b) + (((rsi_20 ^ r8_16) & rbx_9) ^ rsi_20)));\n            int32_t rdi_43 = (rdi_42 + r9_28);\n            int32_t rdx_14 = (((((rax_43 | rcx_33) & r11_26) | (rax_43 & rcx_33)) + (((RORD(rcx_33, 0xd)) ^ (RORD(rcx_33, 2))) ^ (ROLD(rcx_33, 0xa)))) + r9_28);\n            int32_t var_58;\n            int32_t rsi_27 = (((ROLD(rdi_43, 7)) ^ ((RORD(rdi_43, 0xb)) ^ (RORD(rdi_43, 6)))) + ((((r8_16 ^ rbx_9) & rdi_43) ^ r8_16) + ((var_58 + rsi_20) - 0x27f85568)));\n            int32_t r11_27 = (r11_26 + rsi_27);\n            int32_t r10_49 = (((((rcx_33 | rdx_14) & rax_43) | (rcx_33 & rdx_14)) + (((RORD(rdx_14, 0xd)) ^ (RORD(rdx_14, 2))) ^ (ROLD(rdx_14, 0xa)))) + rsi_27);\n            int32_t var_54;\n            int32_t rsi_37 = (((ROLD(r11_27, 7)) ^ ((RORD(r11_27, 0xb)) ^ (RORD(r11_27, 6)))) + (((var_54 + r8_16) + 0x12835b01) + (((rbx_9 ^ rdi_43) & r11_27) ^ rbx_9)));\n            int32_t rax_44 = (rax_43 + rsi_37);\n            int32_t r9_51 = (((((rdx_14 | r10_49) & rcx_33) | (rdx_14 & r10_49)) + (((RORD(r10_49, 0xd)) ^ (RORD(r10_49, 2))) ^ (ROLD(r10_49, 0xa)))) + rsi_37);\n            int32_t var_50;\n            int32_t rsi_47 = (((ROLD(rax_44, 7)) ^ ((RORD(rax_44, 0xb)) ^ (RORD(rax_44, 6)))) + (((var_50 + rbx_9) + 0x243185be) + (((rdi_43 ^ r11_27) & rax_44) ^ rdi_43)));\n            int32_t rcx_34 = (rcx_33 + rsi_47);\n            int32_t r8_36 = (((((r10_49 | r9_51) & rdx_14) | (r10_49 & r9_51)) + (((RORD(r9_51, 0xd)) ^ (RORD(r9_51, 2))) ^ (ROLD(r9_51, 0xa)))) + rsi_47);\n            int32_t var_4c;\n            int32_t rsi_57 = (((ROLD(rcx_34, 7)) ^ ((RORD(rcx_34, 0xb)) ^ (RORD(rcx_34, 6)))) + (((var_4c + rdi_43) + 0x550c7dc3) + (((r11_27 ^ rax_44) & rcx_34) ^ r11_27)));\n            int32_t rdx_15 = (rdx_14 + rsi_57);\n            int32_t rbx_22 = (((((r9_51 | r8_36) & r10_49) | (r9_51 & r8_36)) + (((RORD(r8_36, 0xd)) ^ (RORD(r8_36, 2))) ^ (ROLD(r8_36, 0xa)))) + rsi_57);\n            int32_t var_48;\n            int32_t rdi_61 = (((ROLD(rdx_15, 7)) ^ ((RORD(rdx_15, 0xb)) ^ (RORD(rdx_15, 6)))) + (((var_48 + r11_27) + 0x72be5d74) + (((rax_44 ^ rcx_34) & rdx_15) ^ rax_44)));\n            int32_t r10_50 = (r10_49 + rdi_61);\n            int32_t rsi_71 = (((((r8_36 | rbx_22) & r9_51) | (r8_36 & rbx_22)) + (((RORD(rbx_22, 0xd)) ^ (RORD(rbx_22, 2))) ^ (ROLD(rbx_22, 0xa)))) + rdi_61);\n            int32_t var_44;\n            int32_t rax_51 = (((ROLD(r10_50, 7)) ^ ((RORD(r10_50, 0xb)) ^ (RORD(r10_50, 6)))) + ((((rcx_34 ^ rdx_15) & r10_50) ^ rcx_34) + ((var_44 + rax_44) - 0x7f214e02)));\n            int32_t r9_52 = (r9_51 + rax_51);\n            int32_t rdi_75 = (((((rbx_22 | rsi_71) & r8_36) | (rbx_22 & rsi_71)) + (((RORD(rsi_71, 0xd)) ^ (RORD(rsi_71, 2))) ^ (ROLD(rsi_71, 0xa)))) + rax_51);\n            int32_t var_40;\n            int32_t rax_61 = (((ROLD(r9_52, 7)) ^ ((RORD(r9_52, 0xb)) ^ (RORD(r9_52, 6)))) + (((var_40 + rcx_34) - 0x6423f959) + (((rdx_15 ^ r10_50) & r9_52) ^ rdx_15)));\n            int32_t r8_37 = (r8_36 + rax_61);\n            int32_t r14_23 = (((((rsi_71 | rdi_75) & rbx_22) | (rsi_71 & rdi_75)) + (((RORD(rdi_75, 0xd)) ^ (RORD(rdi_75, 2))) ^ (ROLD(rdi_75, 0xa)))) + rax_61);\n            int32_t var_3c;\n            int32_t rax_71 = (((ROLD(r8_37, 7)) ^ ((RORD(r8_37, 0xb)) ^ (RORD(r8_37, 6)))) + (((var_3c + rdx_15) - 0x3e640e8c) + (((r10_50 ^ r9_52) & r8_37) ^ r10_50)));\n            int32_t rbx_23 = (rbx_22 + rax_71);\n            int32_t rcx_54 = (((((rdi_75 | r14_23) & rsi_71) | (rdi_75 & r14_23)) + (((RORD(r14_23, 0xd)) ^ (RORD(r14_23, 2))) ^ (ROLD(r14_23, 0xa)))) + rax_71);\n            int32_t r11_57 = ((((ROLD(var_74, 0xe)) ^ (RORD(var_74, 7))) ^ (var_74 >> 3)) + (((var_40 >> 0xa) ^ ((ROLD(var_40, 0xd)) ^ (ROLD(var_40, 0xf)))) + (var_78 + var_54)));\n            int32_t rax_85 = (((ROLD(rbx_23, 7)) ^ ((RORD(rbx_23, 0xb)) ^ (RORD(rbx_23, 6)))) + (((r10_50 + r11_57) - 0x1b64963f) + (((r9_52 ^ r8_37) & rbx_23) ^ r9_52)));\n            int32_t rsi_72 = (rsi_71 + rax_85);\n            int32_t rdx_40 = (((((r14_23 | rcx_54) & rdi_75) | (r14_23 & rcx_54)) + (((RORD(rcx_54, 0xd)) ^ (RORD(rcx_54, 2))) ^ (ROLD(rcx_54, 0xa)))) + rax_85);\n            int32_t r10_66 = ((((ROLD(var_70, 0xe)) ^ (RORD(var_70, 7))) ^ (var_70 >> 3)) + (((var_3c >> 0xa) ^ ((ROLD(var_3c, 0xd)) ^ (ROLD(var_3c, 0xf)))) + (var_50 + var_74)));\n            int32_t rax_99 = (((ROLD(rsi_72, 7)) ^ ((RORD(rsi_72, 0xb)) ^ (RORD(rsi_72, 6)))) + (((r9_52 + r10_66) - 0x1041b87a) + (((r8_37 ^ rbx_23) & rsi_72) ^ r8_37)));\n            int32_t rdi_76 = (rdi_75 + rax_99);\n            int32_t r13_13 = (((((rcx_54 | rdx_40) & r14_23) | (rcx_54 & rdx_40)) + (((RORD(rdx_40, 0xd)) ^ (RORD(rdx_40, 2))) ^ (ROLD(rdx_40, 0xa)))) + rax_99);\n            int32_t r9_68 = ((((var_6c >> 3) ^ ((RORD(var_6c, 7)) ^ (ROLD(var_6c, 0xe)))) + (var_4c + var_70)) + ((r11_57 >> 0xa) ^ ((ROLD(r11_57, 0xd)) ^ (ROLD(r11_57, 0xf)))));\n            int32_t rax_114 = (((ROLD(rdi_76, 7)) ^ ((RORD(rdi_76, 0xb)) ^ (RORD(rdi_76, 6)))) + (((r8_37 + r9_68) + 0xfc19dc6) + (((rbx_23 ^ rsi_72) & rdi_76) ^ rbx_23)));\n            int32_t r14_24 = (r14_23 + rax_114);\n            int32_t r12_14 = (((((rdx_40 | r13_13) & rcx_54) | (rdx_40 & r13_13)) + (((RORD(r13_13, 0xd)) ^ (RORD(r13_13, 2))) ^ (ROLD(r13_13, 0xa)))) + rax_114);\n            int32_t r8_53 = ((((var_68 >> 3) ^ ((RORD(var_68, 7)) ^ (ROLD(var_68, 0xe)))) + (var_6c + var_48)) + ((r10_66 >> 0xa) ^ ((ROLD(r10_66, 0xd)) ^ (ROLD(r10_66, 0xf)))));\n            int32_t rax_129 = (((ROLD(r14_24, 7)) ^ ((RORD(r14_24, 0xb)) ^ (RORD(r14_24, 6)))) + (((rbx_23 + r8_53) + 0x240ca1cc) + (((rsi_72 ^ rdi_76) & r14_24) ^ rsi_72)));\n            int32_t rcx_55 = (rcx_54 + rax_129);\n            int32_t rbp_55 = (((((r13_13 | r12_14) & rdx_40) | (r13_13 & r12_14)) + (((RORD(r12_14, 0xd)) ^ (RORD(r12_14, 2))) ^ (ROLD(r12_14, 0xa)))) + rax_129);\n            int32_t rbx_32 = ((((ROLD(r9_68, 0xd)) ^ (ROLD(r9_68, 0xf))) ^ (r9_68 >> 0xa)) + ((var_68 + var_44) + ((var_64 >> 3) ^ ((RORD(var_64, 7)) ^ (ROLD(var_64, 0xe))))));\n            int32_t rax_149 = (((ROLD(rcx_55, 7)) ^ ((RORD(rcx_55, 0xb)) ^ (RORD(rcx_55, 6)))) + (((rsi_72 + rbx_32) + 0x2de92c6f) + (((rdi_76 ^ r14_24) & rcx_55) ^ rdi_76)));\n            int32_t rdx_41 = (rdx_40 + rax_149);\n            int32_t rbx_44 = (((((r12_14 | rbp_55) & r13_13) | (r12_14 & rbp_55)) + (((RORD(rbp_55, 0xd)) ^ (RORD(rbp_55, 2))) ^ (ROLD(rbp_55, 0xa)))) + rax_149);\n            int32_t rax_160 = (((var_64 + var_40) + ((var_60 >> 3) ^ ((RORD(var_60, 7)) ^ (ROLD(var_60, 0xe))))) + (((ROLD(r8_53, 0xd)) ^ (ROLD(r8_53, 0xf))) ^ (r8_53 >> 0xa)));\n            int32_t rsi_94 = (((ROLD(rdx_41, 7)) ^ ((RORD(rdx_41, 0xb)) ^ (RORD(rdx_41, 6)))) + (((rdi_76 + rax_160) + 0x4a7484aa) + (((r14_24 ^ rcx_55) & rdx_41) ^ r14_24)));\n            int32_t r13_14 = (r13_13 + rsi_94);\n            int32_t rax_172 = (((((rbp_55 | rbx_44) & r12_14) | (rbp_55 & rbx_44)) + (((RORD(rbx_44, 0xd)) ^ (RORD(rbx_44, 2))) ^ (ROLD(rbx_44, 0xa)))) + rsi_94);\n            int32_t rdi_89 = ((((ROLD(rbx_32, 0xd)) ^ (ROLD(rbx_32, 0xf))) ^ (rbx_32 >> 0xa)) + ((var_60 + var_3c) + ((var_5c >> 3) ^ ((RORD(var_5c, 7)) ^ (ROLD(var_5c, 0xe))))));\n            int32_t rsi_114 = (((ROLD(r13_14, 7)) ^ ((RORD(r13_14, 0xb)) ^ (RORD(r13_14, 6)))) + (((r14_24 + rdi_89) + 0x5cb0a9dc) + (((rcx_55 ^ rdx_41) & r13_14) ^ rcx_55)));\n            int32_t r12_15 = (r12_14 + rsi_114);\n            int32_t rdi_102 = (((((rbx_44 | rax_172) & rbp_55) | (rbx_44 & rax_172)) + (((RORD(rax_172, 0xd)) ^ (RORD(rax_172, 2))) ^ (ROLD(rax_172, 0xa)))) + rsi_114);\n            int32_t rsi_127 = ((((((ROLD(var_58, 0xe)) ^ (RORD(var_58, 7))) ^ (var_58 >> 3)) + var_5c) + r11_57) + (((ROLD(rax_160, 0xd)) ^ (ROLD(rax_160, 0xf))) ^ (rax_160 >> 0xa)));\n            int32_t rcx_62 = (((ROLD(r12_15, 7)) ^ ((RORD(r12_15, 0xb)) ^ (RORD(r12_15, 6)))) + ((((rdx_41 ^ r13_14) & r12_15) ^ rdx_41) + ((rcx_55 + rsi_127) + 0x76f988da)));\n            int32_t rbp_56 = (rbp_55 + rcx_62);\n            int32_t rsi_139 = (((((rax_172 | rdi_102) & rbx_44) | (rax_172 & rdi_102)) + (((RORD(rdi_102, 0xd)) ^ (RORD(rdi_102, 2))) ^ (ROLD(rdi_102, 0xa)))) + rcx_62);\n            int32_t rcx_75 = ((((((ROLD(var_54, 0xe)) ^ (RORD(var_54, 7))) ^ (var_54 >> 3)) + var_58) + r10_66) + (((ROLD(rdi_89, 0xd)) ^ (ROLD(rdi_89, 0xf))) ^ (rdi_89 >> 0xa)));\n            int32_t rdx_48 = (((ROLD(rbp_56, 7)) ^ ((RORD(rbp_56, 0xb)) ^ (RORD(rbp_56, 6)))) + ((((r13_14 ^ r12_15) & rbp_56) ^ r13_14) + ((rdx_41 + rcx_75) - 0x67c1aeae)));\n            int32_t rbx_45 = (rbx_44 + rdx_48);\n            int32_t rcx_88 = (((((rdi_102 | rsi_139) & rax_172) | (rdi_102 & rsi_139)) + (((RORD(rsi_139, 0xd)) ^ (RORD(rsi_139, 2))) ^ (ROLD(rsi_139, 0xa)))) + rdx_48);\n            int32_t rdx_61 = ((((((ROLD(var_50, 0xe)) ^ (RORD(var_50, 7))) ^ (var_50 >> 3)) + var_54) + r9_68) + (((ROLD(rsi_127, 0xd)) ^ (ROLD(rsi_127, 0xf))) ^ (rsi_127 >> 0xa)));\n            int32_t r14_72 = (((ROLD(rbx_45, 7)) ^ ((RORD(rbx_45, 0xb)) ^ (RORD(rbx_45, 6)))) + (((r13_14 + rdx_61) - 0x57ce3993) + (((r12_15 ^ rbp_56) & rbx_45) ^ r12_15)));\n            int32_t r13_17 = (rax_172 + r14_72);\n            int32_t rdx_73 = (((((rsi_139 | rcx_88) & rdi_102) | (rsi_139 & rcx_88)) + (((RORD(rcx_88, 0xd)) ^ (RORD(rcx_88, 2))) ^ (ROLD(rcx_88, 0xa)))) + r14_72);\n            int32_t rax_191 = ((((((ROLD(var_4c, 0xe)) ^ (RORD(var_4c, 7))) ^ (var_4c >> 3)) + var_50) + r8_53) + (((ROLD(rcx_75, 0xd)) ^ (ROLD(rcx_75, 0xf))) ^ (rcx_75 >> 0xa)));\n            int32_t r14_86 = (((ROLD(r13_17, 7)) ^ ((RORD(r13_17, 0xb)) ^ (RORD(r13_17, 6)))) + (((r12_15 + rax_191) - 0x4ffcd838) + (((rbp_56 ^ rbx_45) & r13_17) ^ rbp_56)));\n            int32_t r12_18 = (rdi_102 + r14_86);\n            int32_t rax_203 = (((((rcx_88 | rdx_73) & rsi_139) | (rcx_88 & rdx_73)) + (((RORD(rdx_73, 0xd)) ^ (RORD(rdx_73, 2))) ^ (ROLD(rdx_73, 0xa)))) + r14_86);\n            int32_t rdi_121 = ((((((ROLD(var_48, 0xe)) ^ (RORD(var_48, 7))) ^ (var_48 >> 3)) + var_4c) + rbx_32) + (((ROLD(rdx_61, 0xd)) ^ (ROLD(rdx_61, 0xf))) ^ (rdx_61 >> 0xa)));\n            int32_t r14_100 = (((ROLD(r12_18, 7)) ^ ((RORD(r12_18, 0xb)) ^ (RORD(r12_18, 6)))) + (((rbp_56 + rdi_121) - 0x40a68039) + (((rbx_45 ^ r13_17) & r12_18) ^ rbx_45)));\n            int32_t rbp_59 = (rsi_139 + r14_100);\n            int32_t rdi_133 = (((((rdx_73 | rax_203) & rcx_88) | (rdx_73 & rax_203)) + (((RORD(rax_203, 0xd)) ^ (RORD(rax_203, 2))) ^ (ROLD(rax_203, 0xa)))) + r14_100);\n            int32_t rsi_158 = ((((((ROLD(var_44, 0xe)) ^ (RORD(var_44, 7))) ^ (var_44 >> 3)) + var_48) + rax_160) + (((ROLD(rax_191, 0xd)) ^ (ROLD(rax_191, 0xf))) ^ (rax_191 >> 0xa)));\n            int32_t r14_114 = (((ROLD(rbp_59, 7)) ^ ((RORD(rbp_59, 0xb)) ^ (RORD(rbp_59, 6)))) + (((rbx_45 + rsi_158) - 0x391ff40d) + (((r13_17 ^ r12_18) & rbp_59) ^ r13_17)));\n            int32_t rbx_48 = (rcx_88 + r14_114);\n            int32_t rsi_170 = (((((rax_203 | rdi_133) & rdx_73) | (rax_203 & rdi_133)) + (((RORD(rdi_133, 0xd)) ^ (RORD(rdi_133, 2))) ^ (ROLD(rdi_133, 0xa)))) + r14_114);\n            int32_t rcx_107 = ((((((ROLD(var_40, 0xe)) ^ (RORD(var_40, 7))) ^ (var_40 >> 3)) + var_44) + rdi_89) + (((ROLD(rdi_121, 0xd)) ^ (ROLD(rdi_121, 0xf))) ^ (rdi_121 >> 0xa)));\n            int32_t r14_128 = (((ROLD(rbx_48, 7)) ^ ((RORD(rbx_48, 0xb)) ^ (RORD(rbx_48, 6)))) + (((r13_17 + rcx_107) - 0x2a586eb9) + (((r12_18 ^ rbp_59) & rbx_48) ^ r12_18)));\n            int32_t r13_20 = (rdx_73 + r14_128);\n            int32_t rcx_119 = (((((rdi_133 | rsi_170) & rax_203) | (rdi_133 & rsi_170)) + (((RORD(rsi_170, 0xd)) ^ (RORD(rsi_170, 2))) ^ (ROLD(rsi_170, 0xa)))) + r14_128);\n            int32_t rdx_92 = ((((((ROLD(var_3c, 0xe)) ^ (RORD(var_3c, 7))) ^ (var_3c >> 3)) + var_40) + rsi_127) + (((ROLD(rsi_158, 0xd)) ^ (ROLD(rsi_158, 0xf))) ^ (rsi_158 >> 0xa)));\n            int32_t r12_25 = (((ROLD(r13_20, 7)) ^ ((RORD(r13_20, 0xb)) ^ (RORD(r13_20, 6)))) + ((((rbp_59 ^ rbx_48) & r13_20) ^ rbp_59) + ((r12_18 + rdx_92) + 0x6ca6351)));\n            int32_t r14_138 = (rax_203 + r12_25);\n            int32_t rdx_104 = (((((rsi_170 | rcx_119) & rdi_133) | (rsi_170 & rcx_119)) + (((RORD(rcx_119, 0xd)) ^ (RORD(rcx_119, 2))) ^ (ROLD(rcx_119, 0xa)))) + r12_25);\n            int32_t rax_222 = ((((((ROLD(r11_57, 0xe)) ^ (RORD(r11_57, 7))) ^ (r11_57 >> 3)) + var_3c) + rcx_75) + (((ROLD(rcx_107, 0xd)) ^ (ROLD(rcx_107, 0xf))) ^ (rcx_107 >> 0xa)));\n            int32_t rbp_66 = (((ROLD(r14_138, 7)) ^ ((RORD(r14_138, 0xb)) ^ (RORD(r14_138, 6)))) + ((((rbx_48 ^ r13_20) & r14_138) ^ rbx_48) + ((rbp_59 + rax_222) + 0x14292967)));\n            int32_t rdi_134 = (rdi_133 + rbp_66);\n            int32_t rax_235 = (((((rcx_119 | rdx_104) & rsi_170) | (rcx_119 & rdx_104)) + (((RORD(rdx_104, 0xd)) ^ (RORD(rdx_104, 2))) ^ (ROLD(rdx_104, 0xa)))) + rbp_66);\n            int32_t r11_60 = (((r11_57 + (((ROLD(r10_66, 0xe)) ^ (RORD(r10_66, 7))) ^ (r10_66 >> 3))) + rdx_61) + (((ROLD(rdx_92, 0xd)) ^ (ROLD(rdx_92, 0xf))) ^ (rdx_92 >> 0xa)));\n            int32_t rbx_54 = (((ROLD(rdi_134, 7)) ^ ((RORD(rdi_134, 0xb)) ^ (RORD(rdi_134, 6)))) + ((((r13_20 ^ r14_138) & rdi_134) ^ r13_20) + ((rbx_48 + r11_60) + 0x27b70a85)));\n            int32_t rsi_171 = (rsi_170 + rbx_54);\n            int32_t r11_75 = (((((rdx_104 | rax_235) & rcx_119) | (rdx_104 & rax_235)) + (((RORD(rax_235, 0xd)) ^ (RORD(rax_235, 2))) ^ (ROLD(rax_235, 0xa)))) + rbx_54);\n            int32_t r10_69 = (((r10_66 + (((ROLD(r9_68, 0xe)) ^ (RORD(r9_68, 7))) ^ (r9_68 >> 3))) + rax_191) + (((ROLD(rax_222, 0xd)) ^ (ROLD(rax_222, 0xf))) ^ (rax_222 >> 0xa)));\n            int32_t rbx_69 = (((ROLD(rsi_171, 7)) ^ ((RORD(rsi_171, 0xb)) ^ (RORD(rsi_171, 6)))) + (((r13_20 + r10_69) + 0x2e1b2138) + (((r14_138 ^ rdi_134) & rsi_171) ^ r14_138)));\n            int32_t rcx_120 = (rcx_119 + rbx_69);\n            int32_t r10_77 = (((((rax_235 | r11_75) & rdx_104) | (rax_235 & r11_75)) + (((RORD(r11_75, 0xd)) ^ (RORD(r11_75, 2))) ^ (ROLD(r11_75, 0xa)))) + rbx_69);\n            int32_t r9_71 = (((r9_68 + (((ROLD(r8_53, 0xe)) ^ (RORD(r8_53, 7))) ^ (r8_53 >> 3))) + rdi_121) + (((ROLD(r11_60, 0xd)) ^ (ROLD(r11_60, 0xf))) ^ (r11_60 >> 0xa)));\n            int32_t rbx_81 = (((ROLD(rcx_120, 7)) ^ ((RORD(rcx_120, 0xb)) ^ (RORD(rcx_120, 6)))) + (((r14_138 + r9_71) + 0x4d2c6dfc) + (((rdi_134 ^ rsi_171) & rcx_120) ^ rdi_134)));\n            int32_t rbp_100 = (rdx_104 + rbx_81);\n            int32_t r9_86 = (((((r11_75 | r10_77) & rax_235) | (r11_75 & r10_77)) + (((RORD(r10_77, 0xd)) ^ (RORD(r10_77, 2))) ^ (ROLD(r10_77, 0xa)))) + rbx_81);\n            int32_t r8_56 = (((r8_53 + (((ROLD(rbx_32, 0xe)) ^ (RORD(rbx_32, 7))) ^ (rbx_32 >> 3))) + rsi_158) + (((ROLD(r10_69, 0xd)) ^ (ROLD(r10_69, 0xf))) ^ (r10_69 >> 0xa)));\n            int32_t rdx_122 = (((ROLD(rbp_100, 7)) ^ ((RORD(rbp_100, 0xb)) ^ (RORD(rbp_100, 6)))) + (((rdi_134 + r8_56) + 0x53380d13) + (((rsi_171 ^ rcx_120) & rbp_100) ^ rsi_171)));\n            int32_t rax_236 = (rax_235 + rdx_122);\n            int32_t r8_69 = (((((r10_77 | r9_86) & r11_75) | (r10_77 & r9_86)) + (((RORD(r9_86, 0xd)) ^ (RORD(r9_86, 2))) ^ (ROLD(r9_86, 0xa)))) + rdx_122);\n            int32_t rdi_145 = ((((ROLD(r9_71, 0xd)) ^ (ROLD(r9_71, 0xf))) ^ (r9_71 >> 0xa)) + (((((ROLD(rax_160, 0xe)) ^ (RORD(rax_160, 7))) ^ (rax_160 >> 3)) + rbx_32) + rcx_107));\n            int32_t rdx_142 = (((ROLD(rax_236, 7)) ^ ((RORD(rax_236, 0xb)) ^ (RORD(rax_236, 6)))) + (((rsi_171 + rdi_145) + 0x650a7354) + (((rcx_120 ^ rbp_100) & rax_236) ^ rcx_120)));\n            int32_t r11_76 = (r11_75 + rdx_142);\n            int32_t rbx_102 = (((((r9_86 | r8_69) & r10_77) | (r9_86 & r8_69)) + (((RORD(r8_69, 0xd)) ^ (RORD(r8_69, 2))) ^ (ROLD(r8_69, 0xa)))) + rdx_142);\n            int32_t rdi_162 = ((((ROLD(r8_56, 0xd)) ^ (ROLD(r8_56, 0xf))) ^ (r8_56 >> 0xa)) + (((((ROLD(rdi_89, 0xe)) ^ (RORD(rdi_89, 7))) ^ (rdi_89 >> 3)) + rax_160) + rdx_92));\n            int32_t rdx_161 = (((ROLD(r11_76, 7)) ^ ((RORD(r11_76, 0xb)) ^ (RORD(r11_76, 6)))) + (((rcx_120 + rdi_162) + 0x766a0abb) + (((rbp_100 ^ rax_236) & r11_76) ^ rbp_100)));\n            int32_t r10_78 = (r10_77 + rdx_161);\n            int32_t r15_97 = (((((r8_69 | rbx_102) & r9_86) | (r8_69 & rbx_102)) + (((RORD(rbx_102, 0xd)) ^ (RORD(rbx_102, 2))) ^ (ROLD(rbx_102, 0xa)))) + rdx_161);\n            int32_t rcx_137 = ((((ROLD(rdi_145, 0xd)) ^ (ROLD(rdi_145, 0xf))) ^ (rdi_145 >> 0xa)) + (((((ROLD(rsi_127, 0xe)) ^ (RORD(rsi_127, 7))) ^ (rsi_127 >> 3)) + rdi_89) + rax_222));\n            int32_t rdx_175 = (((ROLD(r10_78, 7)) ^ ((RORD(r10_78, 0xb)) ^ (RORD(r10_78, 6)))) + (((rbp_100 + rcx_137) - 0x7e3d36d2) + (((rax_236 ^ r11_76) & r10_78) ^ rax_236)));\n            int32_t r9_87 = (r9_86 + rdx_175);\n            int32_t rdi_183 = (((((rbx_102 | r15_97) & r8_69) | (rbx_102 & r15_97)) + (((RORD(r15_97, 0xd)) ^ (RORD(r15_97, 2))) ^ (ROLD(r15_97, 0xa)))) + rdx_175);\n            int32_t rcx_146 = ((((ROLD(rdi_162, 0xd)) ^ (ROLD(rdi_162, 0xf))) ^ (rdi_162 >> 0xa)) + (((((ROLD(rcx_75, 0xe)) ^ (RORD(rcx_75, 7))) ^ (rcx_75 >> 3)) + rsi_127) + r11_60));\n            int32_t rax_243 = (((ROLD(r9_87, 7)) ^ ((RORD(r9_87, 0xb)) ^ (RORD(r9_87, 6)))) + ((((r11_76 ^ r10_78) & r9_87) ^ r11_76) + ((rax_236 + rcx_146) - 0x6d8dd37b)));\n            int32_t r8_70 = (r8_69 + rax_243);\n            int32_t rsi_209 = (((((r15_97 | rdi_183) & rbx_102) | (r15_97 & rdi_183)) + (((RORD(rdi_183, 0xd)) ^ (RORD(rdi_183, 2))) ^ (ROLD(rdi_183, 0xa)))) + rax_243);\n            int32_t r13_52 = ((((ROLD(rcx_137, 0xd)) ^ (ROLD(rcx_137, 0xf))) ^ (rcx_137 >> 0xa)) + (((((ROLD(rdx_61, 0xe)) ^ (RORD(rdx_61, 7))) ^ (rdx_61 >> 3)) + rcx_75) + r10_69));\n            int32_t rax_260 = (((ROLD(r8_70, 7)) ^ ((RORD(r8_70, 0xb)) ^ (RORD(r8_70, 6)))) + (((r11_76 + r13_52) - 0x5d40175f) + (((r10_78 ^ r9_87) & r8_70) ^ r10_78)));\n            int32_t rbx_103 = (rbx_102 + rax_260);\n            int32_t r11_91 = (((((rdi_183 | rsi_209) & r15_97) | (rdi_183 & rsi_209)) + (((RORD(rsi_209, 0xd)) ^ (RORD(rsi_209, 2))) ^ (ROLD(rsi_209, 0xa)))) + rax_260);\n            int32_t rdx_205 = ((((((ROLD(rax_191, 0xe)) ^ (RORD(rax_191, 7))) ^ (rax_191 >> 3)) + rdx_61) + r9_71) + (((ROLD(rcx_146, 0xd)) ^ (ROLD(rcx_146, 0xf))) ^ (rcx_146 >> 0xa)));\n            int32_t rax_275 = (((ROLD(rbx_103, 7)) ^ ((RORD(rbx_103, 0xb)) ^ (RORD(rbx_103, 6)))) + (((r10_78 + rdx_205) - 0x57e599b5) + (((r9_87 ^ r8_70) & rbx_103) ^ r9_87)));\n            int32_t r15_98 = (r15_97 + rax_275);\n            int32_t r10_93 = (((((rsi_209 | r11_91) & rdi_183) | (rsi_209 & r11_91)) + (((RORD(r11_91, 0xd)) ^ (RORD(r11_91, 2))) ^ (ROLD(r11_91, 0xa)))) + rax_275);\n            int32_t rbp_104 = ((((ROLD(r13_52, 0xd)) ^ (ROLD(r13_52, 0xf))) ^ (r13_52 >> 0xa)) + (((((ROLD(rdi_121, 0xe)) ^ (RORD(rdi_121, 7))) ^ (rdi_121 >> 3)) + rax_191) + r8_56));\n            int32_t rax_288 = (((ROLD(r15_98, 7)) ^ ((RORD(r15_98, 0xb)) ^ (RORD(r15_98, 6)))) + (((r9_87 + rbp_104) - 0x3db47490) + (((r8_70 ^ rbx_103) & r15_98) ^ r8_70)));\n            int32_t rbp_107 = (rdi_183 + rax_288);\n            int32_t r9_102 = (((((r11_91 | r10_93) & rsi_209) | (r11_91 & r10_93)) + (((RORD(r10_93, 0xd)) ^ (RORD(r10_93, 2))) ^ (ROLD(r10_93, 0xa)))) + rax_288);\n            int32_t r14_143 = ((((ROLD(rdx_205, 0xd)) ^ (ROLD(rdx_205, 0xf))) ^ (rdx_205 >> 0xa)) + (((((ROLD(rsi_158, 0xe)) ^ (RORD(rsi_158, 7))) ^ (rsi_158 >> 3)) + rdi_121) + rdi_145));\n            int32_t rcx_164 = (((ROLD(rbp_107, 7)) ^ ((RORD(rbp_107, 0xb)) ^ (RORD(rbp_107, 6)))) + (((r8_70 + r14_143) - 0x3893ae5d) + (((rbx_103 ^ r15_98) & rbp_107) ^ rbx_103)));\n            int32_t rax_294 = (rsi_209 + rcx_164);\n            int32_t rdx_237 = (((((r10_93 | r9_102) & r11_91) | (r10_93 & r9_102)) + (((RORD(r9_102, 0xd)) ^ (RORD(r9_102, 2))) ^ (ROLD(r9_102, 0xa)))) + rcx_164);\n            int32_t rdi_198 = ((((ROLD(rbp_104, 0xd)) ^ (ROLD(rbp_104, 0xf))) ^ (rbp_104 >> 0xa)) + (((((ROLD(rcx_107, 0xe)) ^ (RORD(rcx_107, 7))) ^ (rcx_107 >> 3)) + rsi_158) + rdi_162));\n            int32_t rsi_228 = (((ROLD(rax_294, 7)) ^ ((RORD(rax_294, 0xb)) ^ (RORD(rax_294, 6)))) + (((rbx_103 + rdi_198) - 0x2e6d17e7) + (((r15_98 ^ rbp_107) & rax_294) ^ r15_98)));\n            int32_t r8_89 = (r11_91 + rsi_228);\n            int32_t rcx_177 = (((((r9_102 | rdx_237) & r10_93) | (r9_102 & rdx_237)) + (((RORD(rdx_237, 0xd)) ^ (RORD(rdx_237, 2))) ^ (ROLD(rdx_237, 0xa)))) + rsi_228);\n            int32_t r14_147 = ((((ROLD(r14_143, 0xd)) ^ (ROLD(r14_143, 0xf))) ^ (r14_143 >> 0xa)) + (((((ROLD(rdx_92, 0xe)) ^ (RORD(rdx_92, 7))) ^ (rdx_92 >> 3)) + rcx_107) + rcx_137));\n            int32_t rsi_248 = (((ROLD(r8_89, 7)) ^ ((RORD(r8_89, 0xb)) ^ (RORD(r8_89, 6)))) + (((r15_98 + r14_147) - 0x2966f9dc) + (((rbp_107 ^ rax_294) & r8_89) ^ rbp_107)));\n            int32_t r11_106 = (r10_93 + rsi_248);\n            int32_t r13_63 = (((((rdx_237 | rcx_177) & r9_102) | (rdx_237 & rcx_177)) + (((RORD(rcx_177, 0xd)) ^ (RORD(rcx_177, 2))) ^ (ROLD(rcx_177, 0xa)))) + rsi_248);\n            int32_t r14_158 = ((((ROLD(rdi_198, 0xd)) ^ (ROLD(rdi_198, 0xf))) ^ (rdi_198 >> 0xa)) + (((((ROLD(rax_222, 0xe)) ^ (RORD(rax_222, 7))) ^ (rax_222 >> 3)) + rdx_92) + rcx_146));\n            int32_t rdi_224 = (((ROLD(r11_106, 7)) ^ ((RORD(r11_106, 0xb)) ^ (RORD(r11_106, 6)))) + (((rbp_107 + r14_158) - 0xbf1ca7b) + (((rax_294 ^ r8_89) & r11_106) ^ rax_294)));\n            int32_t rsi_261 = (r9_102 + rdi_224);\n            int32_t r14_165 = (((((rcx_177 | r13_63) & rdx_237) | (rcx_177 & r13_63)) + (((RORD(r13_63, 0xd)) ^ (RORD(r13_63, 2))) ^ (ROLD(r13_63, 0xa)))) + rdi_224);\n            int32_t r9_113 = ((((ROLD(r14_147, 0xd)) ^ (ROLD(r14_147, 0xf))) ^ (r14_147 >> 0xa)) + (((((ROLD(r11_60, 0xe)) ^ (RORD(r11_60, 7))) ^ (r11_60 >> 3)) + rax_222) + r13_52));\n            int32_t rdi_241 = (((ROLD(rsi_261, 7)) ^ ((RORD(rsi_261, 0xb)) ^ (RORD(rsi_261, 6)))) + (((rax_294 + r9_113) + 0x106aa070) + (((r8_89 ^ r11_106) & rsi_261) ^ r8_89)));\n            int32_t rdx_238 = (rdx_237 + rdi_241);\n            int32_t rax_307 = (((((r13_63 | r14_165) & rcx_177) | (r13_63 & r14_165)) + (((RORD(r14_165, 0xd)) ^ (RORD(r14_165, 2))) ^ (ROLD(r14_165, 0xa)))) + rdi_241);\n            int32_t r9_124 = ((((ROLD(r14_158, 0xd)) ^ (ROLD(r14_158, 0xf))) ^ (r14_158 >> 0xa)) + (((((ROLD(r10_69, 0xe)) ^ (RORD(r10_69, 7))) ^ (r10_69 >> 3)) + r11_60) + rdx_205));\n            var_78 = r9_124;\n            int32_t rdi_261 = (((ROLD(rdx_238, 7)) ^ ((RORD(rdx_238, 0xb)) ^ (RORD(rdx_238, 6)))) + (((r8_89 + r9_124) + 0x19a4c116) + (((r11_106 ^ rsi_261) & rdx_238) ^ r11_106)));\n            int32_t rcx_178 = (rcx_177 + rdi_261);\n            int32_t r10_124 = (((((r14_165 | rax_307) & r13_63) | (r14_165 & rax_307)) + (((RORD(rax_307, 0xd)) ^ (RORD(rax_307, 2))) ^ (ROLD(rax_307, 0xa)))) + rdi_261);\n            int32_t r12_97 = ((((ROLD(r9_113, 0xd)) ^ (ROLD(r9_113, 0xf))) ^ (r9_113 >> 0xa)) + (((((ROLD(r9_71, 0xe)) ^ (RORD(r9_71, 7))) ^ (r9_71 >> 3)) + r10_69) + rbp_104));\n            var_74 = r12_97;\n            int32_t rdi_279 = (((ROLD(rcx_178, 7)) ^ ((RORD(rcx_178, 0xb)) ^ (RORD(rcx_178, 6)))) + (((r11_106 + r12_97) + 0x1e376c08) + (((rsi_261 ^ rdx_238) & rcx_178) ^ rsi_261)));\n            int32_t r13_64 = (r13_63 + rdi_279);\n            int32_t r9_136 = (((((rax_307 | r10_124) & r14_165) | (rax_307 & r10_124)) + (((RORD(r10_124, 0xd)) ^ (RORD(r10_124, 2))) ^ (ROLD(r10_124, 0xa)))) + rdi_279);\n            int32_t rbp_128 = ((((ROLD(r9_124, 0xd)) ^ (ROLD(r9_124, 0xf))) ^ (r9_124 >> 0xa)) + (((((ROLD(r8_56, 0xe)) ^ (RORD(r8_56, 7))) ^ (r8_56 >> 3)) + r9_71) + r14_143));\n            var_70 = rbp_128;\n            int32_t rsi_268 = (((ROLD(r13_64, 7)) ^ ((RORD(r13_64, 0xb)) ^ (RORD(r13_64, 6)))) + ((((rdx_238 ^ rcx_178) & r13_64) ^ rdx_238) + ((rsi_261 + rbp_128) + 0x2748774c)));\n            int32_t r14_166 = (r14_165 + rsi_268);\n            int32_t r8_126 = (((((r10_124 | r9_136) & rax_307) | (r10_124 & r9_136)) + (((RORD(r9_136, 0xd)) ^ (RORD(r9_136, 2))) ^ (ROLD(r9_136, 0xa)))) + rsi_268);\n            int32_t rbx_111 = ((((ROLD(r12_97, 0xd)) ^ (ROLD(r12_97, 0xf))) ^ (r12_97 >> 0xa)) + (((((ROLD(rdi_145, 0xe)) ^ (RORD(rdi_145, 7))) ^ (rdi_145 >> 3)) + r8_56) + rdi_198));\n            var_6c = rbx_111;\n            int32_t rdx_245 = (((ROLD(r14_166, 7)) ^ ((RORD(r14_166, 0xb)) ^ (RORD(r14_166, 6)))) + ((((rcx_178 ^ r13_64) & r14_166) ^ rcx_178) + ((rdx_238 + rbx_111) + 0x34b0bcb5)));\n            int32_t rax_308 = (rax_307 + rdx_245);\n            int32_t rdi_310 = (((((r9_136 | r8_126) & r10_124) | (r9_136 & r8_126)) + (((RORD(r8_126, 0xd)) ^ (RORD(r8_126, 2))) ^ (ROLD(r8_126, 0xa)))) + rdx_245);\n            int32_t r11_122 = ((((ROLD(rbp_128, 0xd)) ^ (ROLD(rbp_128, 0xf))) ^ (rbp_128 >> 0xa)) + (((((ROLD(rdi_162, 0xe)) ^ (RORD(rdi_162, 7))) ^ (rdi_162 >> 3)) + rdi_145) + r14_147));\n            var_68 = r11_122;\n            int32_t rdx_262 = (((ROLD(rax_308, 7)) ^ ((RORD(rax_308, 0xb)) ^ (RORD(rax_308, 6)))) + (((rcx_178 + r11_122) + 0x391c0cb3) + (((r13_64 ^ r14_166) & rax_308) ^ r13_64)));\n            int32_t r10_125 = (r10_124 + rdx_262);\n            int32_t rsi_311 = (((((r8_126 | rdi_310) & r9_136) | (r8_126 & rdi_310)) + (((RORD(rdi_310, 0xd)) ^ (RORD(rdi_310, 2))) ^ (ROLD(rdi_310, 0xa)))) + rdx_262);\n            int32_t rcx_193 = ((((ROLD(rbx_111, 0xd)) ^ (ROLD(rbx_111, 0xf))) ^ (rbx_111 >> 0xa)) + (((((ROLD(rcx_137, 0xe)) ^ (RORD(rcx_137, 7))) ^ (rcx_137 >> 3)) + rdi_162) + r14_158));\n            var_64 = rcx_193;\n            int32_t rdx_281 = (((ROLD(r10_125, 7)) ^ ((RORD(r10_125, 0xb)) ^ (RORD(r10_125, 6)))) + (((r13_64 + rcx_193) + 0x4ed8aa4a) + (((r14_166 ^ rax_308) & r10_125) ^ r14_166)));\n            int32_t r9_137 = (r9_136 + rdx_281);\n            int32_t rcx_206 = (((((rdi_310 | rsi_311) & r8_126) | (rdi_310 & rsi_311)) + (((RORD(rsi_311, 0xd)) ^ (RORD(rsi_311, 2))) ^ (ROLD(rsi_311, 0xa)))) + rdx_281);\n            int32_t rdx_292 = ((((((ROLD(rcx_146, 0xe)) ^ (RORD(rcx_146, 7))) ^ (rcx_146 >> 3)) + rcx_137) + r9_113) + (((ROLD(r11_122, 0xd)) ^ (ROLD(r11_122, 0xf))) ^ (r11_122 >> 0xa)));\n            var_60 = rdx_292;\n            int32_t r13_81 = (((ROLD(r9_137, 7)) ^ ((RORD(r9_137, 0xb)) ^ (RORD(r9_137, 6)))) + (((r14_166 + rdx_292) + 0x5b9cca4f) + (((rax_308 ^ r10_125) & r9_137) ^ rax_308)));\n            int32_t r8_127 = (r8_126 + r13_81);\n            int32_t rdx_307 = (((((rsi_311 | rcx_206) & rdi_310) | (rsi_311 & rcx_206)) + (((RORD(rcx_206, 0xd)) ^ (RORD(rcx_206, 2))) ^ (ROLD(rcx_206, 0xa)))) + r13_81);\n            int32_t r14_177 = ((((ROLD(rcx_193, 0xd)) ^ (ROLD(rcx_193, 0xf))) ^ (rcx_193 >> 0xa)) + (((((ROLD(r13_52, 0xe)) ^ (RORD(r13_52, 7))) ^ (r13_52 >> 3)) + rcx_146) + r9_124));\n            var_5c = r14_177;\n            int32_t r13_99 = (((ROLD(r8_127, 7)) ^ ((RORD(r8_127, 0xb)) ^ (RORD(r8_127, 6)))) + (((rax_308 + r14_177) + 0x682e6ff3) + (((r10_125 ^ r9_137) & r8_127) ^ r10_125)));\n            int32_t rdi_311 = (rdi_310 + r13_99);\n            int32_t rax_323 = (((((rcx_206 | rdx_307) & rsi_311) | (rcx_206 & rdx_307)) + (((RORD(rdx_307, 0xd)) ^ (RORD(rdx_307, 2))) ^ (ROLD(rdx_307, 0xa)))) + r13_99);\n            int32_t r15_145 = ((((ROLD(rdx_292, 0xd)) ^ (ROLD(rdx_292, 0xf))) ^ (rdx_292 >> 0xa)) + (r12_97 + ((((ROLD(rdx_205, 0xe)) ^ (RORD(rdx_205, 7))) ^ (rdx_205 >> 3)) + r13_52)));\n            var_58 = r15_145;\n            int32_t r12_107 = (((ROLD(rdi_311, 7)) ^ ((RORD(rdi_311, 0xb)) ^ (RORD(rdi_311, 6)))) + (((r10_125 + r15_145) + 0x748f82ee) + (((r9_137 ^ r8_127) & rdi_311) ^ r9_137)));\n            int32_t rsi_312 = (rsi_311 + r12_107);\n            int32_t r10_140 = (((((rdx_307 | rax_323) & rcx_206) | (rdx_307 & rax_323)) + (((RORD(rax_323, 0xd)) ^ (RORD(rax_323, 2))) ^ (ROLD(rax_323, 0xa)))) + r12_107);\n            int32_t rbp_130 = ((rbp_128 + ((((ROLD(rbp_104, 0xe)) ^ (RORD(rbp_104, 7))) ^ (rbp_104 >> 3)) + rdx_205)) + (((ROLD(r14_177, 0xd)) ^ (ROLD(r14_177, 0xf))) ^ (r14_177 >> 0xa)));\n            var_54 = rbp_130;\n            int32_t r12_125 = (((ROLD(rsi_312, 7)) ^ ((RORD(rsi_312, 0xb)) ^ (RORD(rsi_312, 6)))) + (((r9_137 + rbp_130) + 0x78a5636f) + (((r8_127 ^ rdi_311) & rsi_312) ^ r8_127)));\n            int32_t rcx_207 = (rcx_206 + r12_125);\n            int32_t r9_152 = (((((rax_323 | r10_140) & rdx_307) | (rax_323 & r10_140)) + (((RORD(r10_140, 0xd)) ^ (RORD(r10_140, 2))) ^ (ROLD(r10_140, 0xa)))) + r12_125);\n            int32_t rbx_113 = ((rbx_111 + ((((ROLD(r14_143, 0xe)) ^ (RORD(r14_143, 7))) ^ (r14_143 >> 3)) + rbp_104)) + (((ROLD(r15_145, 0xd)) ^ (ROLD(r15_145, 0xf))) ^ (r15_145 >> 0xa)));\n            var_50 = rbx_113;\n            int32_t r12_145 = ((((RORD(rcx_207, 0xb)) ^ (RORD(rcx_207, 6))) ^ (ROLD(rcx_207, 7))) + (((r8_127 + rbx_113) - 0x7b3787ec) + (((rdi_311 ^ rsi_312) & rcx_207) ^ rdi_311)));\n            int32_t rdx_308 = (rdx_307 + r12_145);\n            int32_t r12_146 = (r12_145 + ((((r10_140 | r9_152) & rax_323) | (r10_140 & r9_152)) + (((RORD(r9_152, 0xd)) ^ (RORD(r9_152, 2))) ^ (ROLD(r9_152, 0xa)))));\n            int32_t r11_124 = ((r11_122 + ((((ROLD(rdi_198, 0xe)) ^ (RORD(rdi_198, 7))) ^ (rdi_198 >> 3)) + r14_143)) + ((rbp_130 >> 0xa) ^ ((ROLD(rbp_130, 0xd)) ^ (ROLD(rbp_130, 0xf)))));\n            var_4c = r11_124;\n            int32_t r8_156 = ((((RORD(rdx_308, 0xb)) ^ (RORD(rdx_308, 6))) ^ (ROLD(rdx_308, 7))) + (((rdi_311 + r11_124) - 0x7338fdf8) + (((rsi_312 ^ rcx_207) & rdx_308) ^ rsi_312)));\n            int32_t rax_324 = (rax_323 + r8_156);\n            int32_t r8_157 = (r8_156 + ((((r9_152 | r12_146) & r10_140) | (r9_152 & r12_146)) + (((RORD(r12_146, 0xd)) ^ (RORD(r12_146, 2))) ^ (ROLD(r12_146, 0xa)))));\n            int32_t rdi_331 = ((((((ROLD(r14_147, 0xe)) ^ (RORD(r14_147, 7))) ^ (r14_147 >> 3)) + rdi_198) + rcx_193) + ((rbx_113 >> 0xa) ^ ((ROLD(rbx_113, 0xd)) ^ (ROLD(rbx_113, 0xf)))));\n            var_48 = rdi_331;\n            int32_t rbx_123 = ((((RORD(rax_324, 0xb)) ^ (RORD(rax_324, 6))) ^ (ROLD(rax_324, 7))) + (((rsi_312 + rdi_331) - 0x6f410006) + (((rcx_207 ^ rdx_308) & rax_324) ^ rcx_207)));\n            int32_t r10_141 = (r10_140 + rbx_123);\n            int32_t rbx_124 = (rbx_123 + ((((r12_146 | r8_157) & r9_152) | (r12_146 & r8_157)) + (((RORD(r8_157, 0xd)) ^ (RORD(r8_157, 2))) ^ (ROLD(r8_157, 0xa)))));\n            int32_t rsi_328 = ((((((ROLD(r14_158, 0xe)) ^ (RORD(r14_158, 7))) ^ (r14_158 >> 3)) + r14_147) + rdx_292) + ((r11_124 >> 0xa) ^ ((ROLD(r11_124, 0xd)) ^ (ROLD(r11_124, 0xf)))));\n            var_44 = rsi_328;\n            int32_t r11_135 = ((((RORD(r10_141, 0xb)) ^ (RORD(r10_141, 6))) ^ (ROLD(r10_141, 7))) + (((rcx_207 + rsi_328) - 0x5baf9315) + (((rdx_308 ^ rax_324) & r10_141) ^ rdx_308)));\n            int32_t r9_153 = (r9_152 + r11_135);\n            int32_t r11_136 = (r11_135 + ((((r8_157 | rbx_124) & r12_146) | (r8_157 & rbx_124)) + (((RORD(rbx_124, 0xd)) ^ (RORD(rbx_124, 2))) ^ (ROLD(rbx_124, 0xa)))));\n            int32_t rdi_334 = (((rdi_331 >> 0xa) ^ ((ROLD(rdi_331, 0xd)) ^ (ROLD(rdi_331, 0xf)))) + (((((ROLD(r9_113, 0xe)) ^ (RORD(r9_113, 7))) ^ (r9_113 >> 3)) + r14_158) + r14_177));\n            var_40 = rdi_334;\n            int32_t rcx_231 = ((((RORD(r9_153, 0xb)) ^ (RORD(r9_153, 6))) ^ (ROLD(r9_153, 7))) + (((rdx_308 + rdi_334) - 0x41065c09) + (((rax_324 ^ r10_141) & r9_153) ^ rax_324)));\n            int32_t r12_147 = (r12_146 + rcx_231);\n            int32_t rcx_232 = (rcx_231 + ((((rbx_124 | r11_136) & r8_157) | (rbx_124 & r11_136)) + (((RORD(r11_136, 0xd)) ^ (RORD(r11_136, 2))) ^ (ROLD(r11_136, 0xa)))));\n            int32_t rsi_331 = (((rsi_328 >> 0xa) ^ ((ROLD(rsi_328, 0xd)) ^ (ROLD(rsi_328, 0xf)))) + (((((ROLD(r9_124, 0xe)) ^ (RORD(r9_124, 7))) ^ (r9_124 >> 3)) + r9_113) + r15_145));\n            var_b4_1 = (var_b4_1 + rcx_232);\n            var_3c = rsi_331;\n            var_ac_1 = (var_ac_1 + rbx_124);\n            var_b0_1 = (var_b0_1 + r11_136);\n            r13 = var_b0_1;\n            var_a4_1 = (var_a4_1 + r12_147);\n            rbp = var_a4_1;\n            var_a0_1 = (var_a0_1 + r9_153);\n            r9 = var_a0_1;\n            int32_t rax_330 = ((((RORD(r12_147, 0xb)) ^ (RORD(r12_147, 6))) ^ (ROLD(r12_147, 7))) + ((((r10_141 ^ r9_153) & r12_147) ^ r10_141) + ((rax_324 + rsi_331) - 0x398e870e)));\n            var_a8_1 = (var_a8_1 + (r8_157 + rax_330));\n            rdx = ((((((RORD(rcx_232, 0xd)) ^ (RORD(rcx_232, 2))) ^ (ROLD(rcx_232, 0xa))) + (((r11_136 | rcx_232) & rbx_124) | (r11_136 & rcx_232))) + var_8c_1) + rax_330);\n            *arg3 = rdx;\n            arg3[1] = var_b4_1;\n            rax_3 = var_b4_1;\n            arg3[2] = r13;\n            arg3[3] = var_ac_1;\n            arg3[5] = rbp;\n            r12 = var_ac_1;\n            arg3[4] = var_a8_1;\n            var_8c_1 = rdx;\n            arg3[6] = r9;\n            var_9c_1 = (var_9c_1 + r10_141);\n            r8 = var_9c_1;\n            r10 = var_a8_1;\n            arg3[7] = r8;\n        } while (var_c0 < rax_2);\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_405990",
            "funcStartAddr": "0x405990",
            "funcEndAddr": "0x405a51",
            "decompiledFuncCode": "int64_t sub_405990(int32_t* arg1, int64_t arg2 @ rax, int64_t arg3 @ rbp)\n{\n    int64_t var_10 = arg3;\n    int64_t rsi = *(arg1 + 0x28);\n    int32_t rdx = arg1[9];\n    int64_t rbp_2 = (((arg3 - arg3) & 0xffffffffffffffc0) - -0x80);\n    int64_t rdi_2 = (((arg1 - arg1) & 0xfffffffffffffff0) + 0x1f);\n    uint64_t rcx_1 = (arg1[8] + rsi);\n    arg1[8] = rcx_1;\n    int64_t rax_2 = (((arg2 - arg2) & 0xfffffffffffffff0) + 0x1e);\n    if (rcx_1 < rsi)\n    {\n        rdx = (rdx + 1);\n        arg1[9] = rdx;\n    }\n    arg1[(rax_2 + 0xc)] = _bswap(((rdx << 3) | (rcx_1 >> 0x1d)));\n    uint32_t rdx_4 = (rcx_1 << 3);\n    arg1[(rdi_2 + 0xc)] = (((((rcx_1 << 0xb) & 0xff0000) | (rdx_4 >> 0x18)) | (rcx_1 << 0x1b)) | ((rdx_4 >> 8) & 0xff00));\n    memcpy((&arg1[0xc] + rsi), &data_40ab80, ((rbp_2 - rsi) - 8));\n    /* tailcall */\n    return sub_403200(&arg1[0xc], rbp_2, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_405a60",
            "funcStartAddr": "0x405a60",
            "funcEndAddr": "0x405a82",
            "decompiledFuncCode": "int64_t sub_405a60(int32_t* arg1, int32_t* arg2)\n{\n    int64_t rax;\n    sub_405990(arg1, rax, arg2);\n    /* tailcall */\n    return sub_4031c0(arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405a90",
            "funcStartAddr": "0x405a90",
            "funcEndAddr": "0x405ab2",
            "decompiledFuncCode": "int64_t sub_405a90(int32_t* arg1, int32_t* arg2)\n{\n    int64_t rax;\n    sub_405990(arg1, rax, arg2);\n    /* tailcall */\n    return sub_4031e0(arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405ac0",
            "funcStartAddr": "0x405ac0",
            "funcEndAddr": "0x405dbe",
            "decompiledFuncCode": "void sub_405ac0(int128_t* arg1, uint64_t arg2, int32_t* arg3)\n{\n    uint64_t r13 = arg2;\n    int128_t* rbx = arg1;\n    int64_t rbp = *(arg3 + 0x28);\n    if (rbp != 0)\n    {\n        void* r15_2 = &arg3[0xc];\n        uint64_t r14_4 = (0x80 - rbp);\n        void* rdi_4 = (r15_2 + rbp);\n        if (r14_4 > arg2)\n        {\n            r14_4 = arg2;\n        }\n        memcpy(rdi_4, rbx, r14_4);\n        int64_t rsi_5 = (*(arg3 + 0x28) + r14_4);\n        *(arg3 + 0x28) = rsi_5;\n        if (rsi_5 > 0x40)\n        {\n            sub_403200(r15_2, (rsi_5 & 0xffffffffffffffc0), arg3);\n            void* rax = (r15_2 + ((rbp + r14_4) & 0xffffffffffffffc0));\n            uint64_t rcx_5 = (*(arg3 + 0x28) & 0x3f);\n            *(arg3 + 0x28) = rcx_5;\n            if (rcx_5 >= 8)\n            {\n                void* rdi_9 = (&arg3[0xe] & 0xfffffffffffffff8);\n                *(arg3 + 0x30) = *rax;\n                uint64_t rdx_16 = rcx_5;\n                *((r15_2 + rdx_16) - 8) = *((rax + rdx_16) - 8);\n                void* rdx_18 = (r15_2 - rdi_9);\n                rax = (rax - rdx_18);\n                int32_t rdx_20 = ((rdx_18 + rcx_5) & 0xfffffff8);\n                if (rdx_20 >= 8)\n                {\n                    int32_t rdx_21 = (rdx_20 & 0xfffffff8);\n                    int32_t rcx_6 = 0;\n                    do\n                    {\n                        uint64_t rsi_9 = rcx_6;\n                        rcx_6 = (rcx_6 + 8);\n                        *(rdi_9 + rsi_9) = *(rax + rsi_9);\n                    } while (rcx_6 < rdx_21);\n                }\n            }\n            else if ((rcx_5 & 4) != 0)\n            {\n                arg3[0xc] = *rax;\n                uint64_t rdx_23 = rcx_5;\n                rax = *((rax + rdx_23) - 4);\n                *((r15_2 + rdx_23) - 4) = rax;\n            }\n            else if (rcx_5 != 0)\n            {\n                arg3[0xc] = *rax;\n                if ((rcx_5 & 2) != 0)\n                {\n                    uint64_t rdx_14 = rcx_5;\n                    rax = *((rax + rdx_14) - 2);\n                    *((r15_2 + rdx_14) - 2) = rax;\n                }\n            }\n        }\n        rbx = (rbx + r14_4);\n        r13 = (r13 - r14_4);\n    }\n    void* rbp_1;\n    void* r14_3;\n    if (r13 > 0x3f)\n    {\n        if ((rbx & 3) == 0)\n        {\n            uint64_t rbp_2 = r13;\n            int32_t* rdi_3 = rbx;\n            r13 = (r13 & 0x3f);\n            int64_t rbp_3 = (rbp_2 & 0xffffffffffffffc0);\n            rbx = (rbx + rbp_3);\n            sub_403200(rdi_3, rbp_3, arg3);\n        }\n        else\n        {\n            rbp_1 = &arg3[0xc];\n            if (r13 == 0x40)\n            {\n                r14_3 = rbx;\n            }\n            else\n            {\n                uint64_t rax_2 = ((r13 - 0x41) >> 6);\n                r14_3 = &rbx[((rax_2 + 1) * 4)];\n                do\n                {\n                    int128_t zmm0 = *rbx;\n                    rbx = &rbx[4];\n                    *rbp_1 = zmm0;\n                    *(rbp_1 + 0x10) = rbx[-3];\n                    *(rbp_1 + 0x20) = rbx[-2];\n                    *(rbp_1 + 0x30) = rbx[-1];\n                    sub_403200(rbp_1, 0x40, arg3);\n                } while (rbx != r14_3);\n                r13 = ((r13 + ((-rax_2) << 6)) - 0x40);\n            }\n        }\n    }\n    if ((((r13 > 0x3f && (rbx & 3) == 0) || r13 <= 0x3f) && r13 != 0))\n    {\n        rbp_1 = &arg3[0xc];\n        r14_3 = rbx;\n    }\n    if (((((r13 > 0x3f && (rbx & 3) == 0) || r13 <= 0x3f) && r13 != 0) || (r13 > 0x3f && (rbx & 3) != 0)))\n    {\n        int64_t rax_6 = *(arg3 + 0x28);\n        void* rsi = (rbp_1 + rax_6);\n        if (r13 >= 8)\n        {\n            uint64_t rcx_2 = r13;\n            void* rdi_6 = ((rsi + 8) & 0xfffffffffffffff8);\n            *rsi = *r14_3;\n            *((rsi + rcx_2) - 8) = *((r14_3 + rcx_2) - 8);\n            void* rdx_8 = (rsi - rdi_6);\n            void* r14_5 = (r14_3 - rdx_8);\n            int32_t rdx_10 = ((rdx_8 + r13) & 0xfffffff8);\n            if (rdx_10 >= 8)\n            {\n                int32_t rdx_11 = (rdx_10 & 0xfffffff8);\n                int32_t rcx_3 = 0;\n                do\n                {\n                    uint64_t rsi_6 = rcx_3;\n                    rcx_3 = (rcx_3 + 8);\n                    *(rdi_6 + rsi_6) = *(r14_5 + rsi_6);\n                } while (rcx_3 < rdx_11);\n            }\n        }\n        else if ((r13 & 4) != 0)\n        {\n            *rsi = *r14_3;\n            uint64_t rcx_8 = r13;\n            *((rsi + rcx_8) - 4) = *((r14_3 + rcx_8) - 4);\n        }\n        else if (r13 != 0)\n        {\n            *rsi = *r14_3;\n            if ((r13 & 2) != 0)\n            {\n                uint64_t rcx_9 = r13;\n                *((rsi + rcx_9) - 2) = *((r14_3 + rcx_9) - 2);\n            }\n        }\n        uint64_t r13_1 = (r13 + rax_6);\n        if (r13_1 > 0x3f)\n        {\n            r13_1 = (r13_1 - 0x40);\n            sub_403200(rbp_1, 0x40, arg3);\n            memcpy(rbp_1, &arg3[0x1c], r13_1);\n        }\n        *(arg3 + 0x28) = r13_1;\n        return;\n    }\n    if ((((r13 > 0x3f && (rbx & 3) == 0) || r13 <= 0x3f) && r13 == 0))\n    {\n        return;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_405dc0",
            "funcStartAddr": "0x405dc0",
            "funcEndAddr": "0x405e3c",
            "decompiledFuncCode": "int32_t* sub_405dc0(int128_t* arg1, uint64_t arg2, int32_t* arg3)\n{\n    int64_t var_b8 = -0x4498517a95f61999;\n    int64_t var_b0 = -0x5ab00ac5c3910c8e;\n    int64_t var_a8 = -0x64fa9773aef1ad81;\n    int64_t var_a0 = 0x5be0cd191f83d9ab;\n    int64_t var_98 = 0;\n    int64_t var_90 = 0;\n    int64_t rbp;\n    sub_405990(&var_b8, sub_405ac0(arg1, arg2, &var_b8), rbp);\n    return sub_4031c0(&var_b8, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_405e40",
            "funcStartAddr": "0x405e40",
            "funcEndAddr": "0x405ebc",
            "decompiledFuncCode": "int32_t* sub_405e40(int128_t* arg1, uint64_t arg2, int32_t* arg3)\n{\n    int64_t var_b8 = 0x367cd507c1059ed8;\n    int64_t var_b0 = -0x8f1a6c6cf8f22e9;\n    int64_t var_a8 = 0x68581511ffc00b31;\n    int64_t var_a0 = -0x4105b05b9b067059;\n    int64_t var_98 = 0;\n    int64_t var_90 = 0;\n    int64_t rbp;\n    sub_405990(&var_b8, sub_405ac0(arg1, arg2, &var_b8), rbp);\n    return sub_4031e0(&var_b8, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_405ec0",
            "funcStartAddr": "0x405ec0",
            "funcEndAddr": "0x406015",
            "decompiledFuncCode": "int64_t sub_405ec0(int32_t* arg1, int32_t* arg2)\n{\n    int32_t* rax = malloc(0x8048);\n    if (rax == 0)\n    {\n        return 1;\n    }\n    int64_t var_b8 = 0;\n    int64_t var_d8 = -0x4498517a95f61999;\n    int64_t var_d0 = -0x5ab00ac5c3910c8e;\n    int64_t var_c8 = -0x64fa9773aef1ad81;\n    int64_t var_c0 = 0x5be0cd191f83d9ab;\n    int64_t var_b0 = 0;\n    while (true)\n    {\n        uint64_t rbx_1 = 0;\n        while (true)\n        {\n            uint64_t rax_1 = fread_unlocked((rax + rbx_1), 1, (0x8000 - rbx_1), arg1);\n            rbx_1 = (rbx_1 + rax_1);\n            if (rbx_1 == 0x8000)\n            {\n                sub_403200(rax, 0x8000, &var_d8);\n                break;\n            }\n            int32_t rdx_1 = *arg1;\n            if ((rax_1 != 0 && (rdx_1 & 0x10) == 0))\n            {\n                continue;\n            }\n            if ((rax_1 == 0 && (rdx_1 & 0x20) != 0))\n            {\n                free(rax);\n                return 1;\n            }\n            if (rbx_1 != 0)\n            {\n                rax_1 = sub_405ac0(rax, rbx_1, &var_d8);\n            }\n            sub_405990(&var_d8, rax_1, arg1);\n            sub_4031c0(&var_d8, arg2);\n            free(rax);\n            return 0;\n        }\n    }\n}\n\n"
        },
        {
            "funcName": "sub_406020",
            "funcStartAddr": "0x406020",
            "funcEndAddr": "0x406175",
            "decompiledFuncCode": "int64_t sub_406020(int32_t* arg1, int32_t* arg2)\n{\n    int32_t* rax = malloc(0x8048);\n    if (rax == 0)\n    {\n        return 1;\n    }\n    int64_t var_b8 = 0;\n    int64_t var_d8 = 0x367cd507c1059ed8;\n    int64_t var_d0 = -0x8f1a6c6cf8f22e9;\n    int64_t var_c8 = 0x68581511ffc00b31;\n    int64_t var_c0 = -0x4105b05b9b067059;\n    int64_t var_b0 = 0;\n    while (true)\n    {\n        uint64_t rbx_1 = 0;\n        while (true)\n        {\n            uint64_t rax_1 = fread_unlocked((rax + rbx_1), 1, (0x8000 - rbx_1), arg1);\n            rbx_1 = (rbx_1 + rax_1);\n            if (rbx_1 == 0x8000)\n            {\n                sub_403200(rax, 0x8000, &var_d8);\n                break;\n            }\n            int32_t rdx_1 = *arg1;\n            if ((rax_1 != 0 && (rdx_1 & 0x10) == 0))\n            {\n                continue;\n            }\n            if ((rax_1 == 0 && (rdx_1 & 0x20) != 0))\n            {\n                free(rax);\n                return 1;\n            }\n            if (rbx_1 != 0)\n            {\n                rax_1 = sub_405ac0(rax, rbx_1, &var_d8);\n            }\n            sub_405990(&var_d8, rax_1, arg1);\n            sub_4031e0(&var_d8, arg2);\n            free(rax);\n            return 0;\n        }\n    }\n}\n\n"
        },
        {
            "funcName": "sub_406180",
            "funcStartAddr": "0x406180",
            "funcEndAddr": "0x406185",
            "decompiledFuncCode": "int64_t sub_406180(int32_t arg1, int64_t arg2, off64_t arg3, int32_t arg4)\n{\n    /* tailcall */\n    return posix_fadvise(arg1, arg2, arg3, arg4);\n}\n\n"
        },
        {
            "funcName": "sub_406190",
            "funcStartAddr": "0x406190",
            "funcEndAddr": "0x4061b1",
            "decompiledFuncCode": "void sub_406190(FILE* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        return;\n    }\n    /* tailcall */\n    return posix_fadvise(fileno(arg1), 0, 0, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4061c0",
            "funcStartAddr": "0x4061c0",
            "funcEndAddr": "0x406253",
            "decompiledFuncCode": "FILE* sub_4061c0(char* arg1, char* arg2)\n{\n    FILE* rax = fopen(arg1, arg2);\n    FILE* rbx = rax;\n    if (rax != 0)\n    {\n        int32_t rax_1 = fileno(rax);\n        if (rax_1 <= 2)\n        {\n            int32_t rax_3 = sub_407ea0(rax_1);\n            if (rax_3 < 0)\n            {\n                int32_t* rax_7 = __errno_location();\n                FILE* rdi_5 = rbx;\n                rbx = nullptr;\n                int32_t r12_2 = *rax_7;\n                sub_4086e0(rdi_5);\n                *rax_7 = r12_2;\n            }\n            else\n            {\n                int32_t rax_4 = sub_4086e0(rbx);\n                FILE* rax_5;\n                if (rax_4 == 0)\n                {\n                    rax_5 = fdopen(rax_3, arg2);\n                    rbx = rax_5;\n                }\n                if ((rax_4 != 0 || (rax_4 == 0 && rax_5 == 0)))\n                {\n                    int32_t* rax_6 = __errno_location();\n                    int32_t rbp_1 = *rax_6;\n                    close(rax_3);\n                    *rax_6 = rbp_1;\n                    rbx = nullptr;\n                }\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_406260",
            "funcStartAddr": "0x406260",
            "funcEndAddr": "0x4062f9",
            "decompiledFuncCode": "char* sub_406260(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_40ac00;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_60e308 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_406300",
            "funcStartAddr": "0x406300",
            "funcEndAddr": "0x4063f2",
            "decompiledFuncCode": "char* sub_406300(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_409850();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_4063e1:\n                void* const rbx_1 = &data_40ac04;\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_4063e1;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_4063e1;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_4063e1;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_4063e1;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_4063e1;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_4063e1;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_4063e1;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_40ac0d;\n            if (cond:2_1)\n            {\n                rbx = &data_40ac0a;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_4063e1;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_4063e1;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_4063e1;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_4063e1;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_4063e1;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_40ac11;\n            if (cond:1_1)\n            {\n                rbx = &data_40ac06;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_406400",
            "funcStartAddr": "0x401920",
            "funcEndAddr": "0x407621",
            "decompiledFuncCode": "int64_t sub_406400(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    char const* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n    label_406498:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_40680c:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_406854;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_406400(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char const rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_40686b;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_4069a5;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_4065f5;\n                            }\n                            goto label_4068e0;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_4069a5;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_4067d0;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_4067d0:\n                            if (var_c0 == 0)\n                            {\n                                goto label_4067db;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_406637:\n                            if (var_5c == 0)\n                            {\n                                goto label_406648;\n                            }\n                        label_406800:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_406808;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_406a3b;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_406a3b:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_406a4a:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_40680c;\n                            }\n                            goto label_4067d0;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_4067d0;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_4067d0;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_406a3b;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_4065d6;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_4065d6:\n                            if (var_5c == 0)\n                            {\n                                goto label_4065f5;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_4065f5;\n                            }\n                            goto label_406a4a;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_4065cd:\n                            if (r12_1 != 0)\n                            {\n                                goto label_4067db;\n                            }\n                            goto label_4065d6;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_406a00:\n                            rdx = r11_1 == 2;\n                        label_4065f5:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_4066fc;\n                            }\n                            goto label_4065ff;\n                        }\n                        case 0x27:\n                        {\n                            goto label_40677d;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_40674d;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_4067aa;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_40753d;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_406714;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_4065a9;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_406ba0;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_406ba0;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_4074f0:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_406854:\n                            rbx_1 = sub_406400(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_40686b:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_4069a5;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_4068f7;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_4069a5;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_4068c0:\n                                r13 = 0;\n                                goto label_40667b;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_406648:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_40667b:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_406685;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_406685:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_40668d;\n                            }\n                            case 9:\n                            {\n                                goto label_406870;\n                            }\n                            case 0xa:\n                            {\n                                goto label_4067e8;\n                            }\n                            case 0xb:\n                            {\n                                goto label_4068d0;\n                            }\n                            case 0xc:\n                            {\n                                goto label_4068b0;\n                            }\n                            case 0xd:\n                            {\n                                goto label_406899;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_406bfa;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_406885;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_406bda;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_406bc2;\n                            }\n                            case 0x27:\n                            {\n                                goto label_40677d;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_40674d;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_4067aa;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_4065a9;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_406ba0:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_4069a0:\n                            var_b8 = 0;\n                        label_4069a5:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_4069f4:\n                                if (rdx == 0)\n                                {\n                                    goto label_406a00;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_406ef1:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_406714;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_40680c;\n                                }\n                                r13 = var_98;\n                                goto label_40668d;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_409710(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_40680c;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_406ef1;\n                            }\n                            goto label_4069f4;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_4068e0:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_40680c;\n                                }\n                                var_b8 = 0;\n                            label_4068f7:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_406942;\n                                    }\n                                    rax_8 = r10;\n                                label_40693a:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_406942:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_4066fc;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_406983;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_40693a;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_4066fc;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_4069a0;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_4068b5;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_4067ed;\n                            }\n                            case 9:\n                            {\n                            label_406870:\n                                rbp_3 = 0x74;\n                                goto label_4067ed;\n                            }\n                            case 0xa:\n                            {\n                            label_4067e8:\n                                rbp_3 = 0x6e;\n                            label_4067ed:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_406800;\n                                }\n                                goto label_406648;\n                            }\n                            case 0xb:\n                            {\n                            label_4068d0:\n                                rbp_3 = 0x76;\n                                goto label_4068b5;\n                            }\n                            case 0xc:\n                            {\n                            label_4068b0:\n                                rbp_3 = 0x66;\n                            label_4068b5:\n                                if (var_5c == 0)\n                                {\n                                    goto label_4068c0;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_406808:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_40680c;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_406899:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_4067d0;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_406bfa:\n                                rbp_3 = 0x20;\n                                goto label_406bc2;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_406885:\n                                rdx = 0;\n                            label_4067db:\n                                r13 = 0;\n                                goto label_4065f5;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_406bda:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_4065f5;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_4065ff:\n                                rax_8 = 0;\n                                goto label_406601;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_406bc2:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_406601;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_40677d:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_4065f5;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_40753d;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_4066fc;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_40674d:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_40753d:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_40680c;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_4066fc:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_406637;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_406714;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_4065f5;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_406ce0:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_4065f5;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_406ce0;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_406ce0;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_406ce0;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_406ce0;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_4074f0;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_406983:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_4066fc;\n                                }\n                            label_406601:\n                                if (arg7 == 0)\n                                {\n                                    goto label_4066fc;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_4066fc;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_406637;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_4067aa:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_4067d0;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_406714:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_40668d;\n                                }\n                            label_40668d:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_406696;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_406696:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_4065a9:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_4067db;\n                                }\n                                goto label_4065cd;\n                            }\n                        }\n                    }\n                }\n            }\n        label_406c86:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"'\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_406498;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"'\";\n                goto label_406498;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"'\";\n            goto label_406498;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40ac04;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40ac04;\n            }\n            goto label_406498;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_40ac04;\n            goto label_406498;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_406498;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_406300(&data_40ac15, r13);\n                arg9 = sub_406300(\"'\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_406498;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_406c86;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n        goto label_406498;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_407630",
            "funcStartAddr": "0x401925",
            "funcEndAddr": "0x4077ce",
            "decompiledFuncCode": "char* sub_407630(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_60e278;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_60e290 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_4086a0();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x60e280)\n        {\n            int64_t rax_9 = sub_4084b0(0, rsi_1);\n            int128_t zmm0 = data_60e280;\n            rbx = rax_9;\n            data_60e278 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_4084b0(rbx, rsi_1);\n            data_60e278 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_60e290;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_60e290 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_406400(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        uint64_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x60e320)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_408450(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_406400(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_4077d0",
            "funcStartAddr": "0x4077d0",
            "funcEndAddr": "0x407804",
            "decompiledFuncCode": "int64_t sub_4077d0(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x60e420;\n    }\n    int64_t rax_1 = sub_408650(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_407810",
            "funcStartAddr": "0x407810",
            "funcEndAddr": "0x40781f",
            "decompiledFuncCode": "uint64_t sub_407810(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60e420;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_407820",
            "funcStartAddr": "0x407820",
            "funcEndAddr": "0x40782f",
            "decompiledFuncCode": "void sub_407820(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60e420;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_407830",
            "funcStartAddr": "0x407830",
            "funcEndAddr": "0x407863",
            "decompiledFuncCode": "uint64_t sub_407830(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x60e420;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_407870",
            "funcStartAddr": "0x407870",
            "funcEndAddr": "0x407883",
            "decompiledFuncCode": "uint64_t sub_407870(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60e420;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_407890",
            "funcStartAddr": "0x407890",
            "funcEndAddr": "0x4078bb",
            "decompiledFuncCode": "void sub_407890(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60e420;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x60e420;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4078c0",
            "funcStartAddr": "0x4078c0",
            "funcEndAddr": "0x407932",
            "decompiledFuncCode": "int64_t sub_4078c0(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_60e420;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_406400(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_407940",
            "funcStartAddr": "0x407940",
            "funcEndAddr": "0x407a21",
            "decompiledFuncCode": "char* sub_407940(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_60e420;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_406400(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_408450((rax_2 + 1));\n    sub_406400(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_407a30",
            "funcStartAddr": "0x407a30",
            "funcEndAddr": "0x407a3a",
            "decompiledFuncCode": "int64_t sub_407a30(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_407940(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_407a40",
            "funcStartAddr": "0x407a40",
            "funcEndAddr": "0x407ad5",
            "decompiledFuncCode": "uint64_t sub_407a40()\n{\n    uint64_t rax_2 = data_60e290;\n    int64_t r12 = data_60e278;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x60e320)\n    {\n        rax_2 = free(rdi_2);\n        *data_60e280 = 0x100;\n        *(data_60e280 + 8) = 0x60e320;\n    }\n    if (r12 != 0x60e280)\n    {\n        rax_2 = free(r12);\n        data_60e278 = 0x60e280;\n    }\n    data_60e290 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_407ae0",
            "funcStartAddr": "0x407ae0",
            "funcEndAddr": "0x407af1",
            "decompiledFuncCode": "int64_t sub_407ae0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_407630(arg1, arg2, -1, &data_60e420);\n}\n\n"
        },
        {
            "funcName": "sub_407b00",
            "funcStartAddr": "0x407b00",
            "funcEndAddr": "0x407b0a",
            "decompiledFuncCode": "int64_t sub_407b00(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_407630(arg1, arg2, arg3, &data_60e420);\n}\n\n"
        },
        {
            "funcName": "sub_407b10",
            "funcStartAddr": "0x407b10",
            "funcEndAddr": "0x407b26",
            "decompiledFuncCode": "int64_t sub_407b10(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_407630(0, arg1, -1, &data_60e420);\n}\n\n"
        },
        {
            "funcName": "sub_407b30",
            "funcStartAddr": "0x407b30",
            "funcEndAddr": "0x407b42",
            "decompiledFuncCode": "int64_t sub_407b30(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_407630(0, arg1, arg2, &data_60e420);\n}\n\n"
        },
        {
            "funcName": "sub_407b50",
            "funcStartAddr": "0x40192a",
            "funcEndAddr": "0x407bb8",
            "decompiledFuncCode": "char* sub_407b50(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_407630(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_407bc0",
            "funcStartAddr": "0x40192f",
            "funcEndAddr": "0x407c24",
            "decompiledFuncCode": "char* sub_407bc0(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_407630(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_407c30",
            "funcStartAddr": "0x407c30",
            "funcEndAddr": "0x407c3c",
            "decompiledFuncCode": "int64_t sub_407c30(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_407b50(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_407c40",
            "funcStartAddr": "0x407c40",
            "funcEndAddr": "0x407c4f",
            "decompiledFuncCode": "int64_t sub_407c40(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_407bc0(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_407c50",
            "funcStartAddr": "0x407c50",
            "funcEndAddr": "0x407cc0",
            "decompiledFuncCode": "char* sub_407c50(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_60e450;\n    int128_t var_48 = data_60e420;\n    int128_t var_38 = data_60e430;\n    int128_t var_28 = data_60e440;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_407630(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_407cc0",
            "funcStartAddr": "0x407cc0",
            "funcEndAddr": "0x407ccd",
            "decompiledFuncCode": "int64_t sub_407cc0(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_407c50(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_407cd0",
            "funcStartAddr": "0x407cd0",
            "funcEndAddr": "0x407ce1",
            "decompiledFuncCode": "int64_t sub_407cd0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_407c50(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_407cf0",
            "funcStartAddr": "0x407cf0",
            "funcEndAddr": "0x407cfa",
            "decompiledFuncCode": "int64_t sub_407cf0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_407c50(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_407d00",
            "funcStartAddr": "0x401934",
            "funcEndAddr": "0x407d6e",
            "decompiledFuncCode": "char* sub_407d00(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_407630(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_407d70",
            "funcStartAddr": "0x407d70",
            "funcEndAddr": "0x407ddc",
            "decompiledFuncCode": "char* sub_407d70(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_60e420;\n    int128_t var_38 = data_60e430;\n    int128_t var_28 = data_60e440;\n    int64_t var_18 = data_60e450;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_407630(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_407ea0",
            "funcStartAddr": "0x407ea0",
            "funcEndAddr": "0x407eae",
            "decompiledFuncCode": "int64_t sub_407ea0(int32_t arg1)\n{\n    /* tailcall */\n    return sub_408760(arg1, 0, 3);\n}\n\n"
        },
        {
            "funcName": "sub_407eb0",
            "funcStartAddr": "0x401939",
            "funcEndAddr": "0x40828d",
            "decompiledFuncCode": "int64_t sub_407eb0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_40b96b, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_408290",
            "funcStartAddr": "0x408290",
            "funcEndAddr": "0x4082b0",
            "decompiledFuncCode": "int64_t sub_408290(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_407eb0(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_4082b0",
            "funcStartAddr": "0x4082b0",
            "funcEndAddr": "0x408310",
            "decompiledFuncCode": "int64_t sub_4082b0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_407eb0(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_408310",
            "funcStartAddr": "0x408310",
            "funcEndAddr": "0x4083cc",
            "decompiledFuncCode": "int64_t sub_408310(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_407eb0(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_4083d0",
            "funcStartAddr": "0x4083d0",
            "funcEndAddr": "0x408444",
            "decompiledFuncCode": "int64_t sub_4083d0()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_408450",
            "funcStartAddr": "0x408450",
            "funcEndAddr": "0x40846a",
            "decompiledFuncCode": "int64_t sub_408450(uint64_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_4086a0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4084b0",
            "funcStartAddr": "0x4084b0",
            "funcEndAddr": "0x4084e6",
            "decompiledFuncCode": "int64_t sub_4084b0(int64_t arg1, uint64_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_4086a0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4085fa",
            "funcStartAddr": "0x4085fa",
            "funcEndAddr": "0x408600",
            "decompiledFuncCode": "int64_t sub_4085fa() __noreturn\n{\n    sub_4086a0();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_408600",
            "funcStartAddr": "0x408600",
            "funcEndAddr": "0x408617",
            "decompiledFuncCode": "int64_t sub_408600(uint64_t arg1)\n{\n    /* tailcall */\n    return memset(sub_408450(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_408620",
            "funcStartAddr": "0x408620",
            "funcEndAddr": "0x40864e",
            "decompiledFuncCode": "int64_t sub_408620(uint64_t arg1, uint64_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_4086a0();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_408650",
            "funcStartAddr": "0x408650",
            "funcEndAddr": "0x408678",
            "decompiledFuncCode": "int64_t sub_408650(int64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_408450(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_408680",
            "funcStartAddr": "0x408680",
            "funcEndAddr": "0x408693",
            "decompiledFuncCode": "int64_t sub_408680(char* arg1)\n{\n    /* tailcall */\n    return sub_408650(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_4086a0",
            "funcStartAddr": "0x4086a0",
            "funcEndAddr": "0x4086d1",
            "decompiledFuncCode": "int64_t sub_4086a0() __noreturn\n{\n    error(data_60e220, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4086e0",
            "funcStartAddr": "0x4086e0",
            "funcEndAddr": "0x40875b",
            "decompiledFuncCode": "int64_t sub_4086e0(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_4088a0(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_408760",
            "funcStartAddr": "0x408760",
            "funcEndAddr": "0x408895",
            "decompiledFuncCode": "uint64_t sub_408760(int32_t arg1, int32_t arg2, int32_t arg3)\n{\n    void* var_58 = &arg_8;\n    int64_t rcx;\n    int64_t var_30 = rcx;\n    int32_t var_60 = 0x10;\n    void var_48;\n    void* var_50 = &var_48;\n    if (arg2 != 0x406)\n    {\n        return fcntl();\n    }\n    int32_t var_60_1 = 0x18;\n    int32_t rax_2;\n    int32_t rax_5;\n    int32_t* rax_15;\n    int32_t rax_17;\n    int32_t rbx;\n    if (data_60e458 < 0)\n    {\n        rax_5 = sub_408760();\n        rbx = rax_5;\n    }\n    else\n    {\n        rax_2 = fcntl();\n        rbx = rax_2;\n        if (rax_2 < 0)\n        {\n            rax_15 = __errno_location();\n            if (*rax_15 == 0x16)\n            {\n                rax_17 = sub_408760(arg1, 0, arg3);\n                rbx = rax_17;\n                if (rax_17 >= 0)\n                {\n                    data_60e458 = 0xffffffff;\n                }\n            }\n        }\n    }\n    if (((((data_60e458 >= 0 && rax_2 < 0) && *rax_15 == 0x16) && rax_17 >= 0) || (rax_5 >= 0 && data_60e458 == 0xffffffff)))\n    {\n        int32_t rax_7 = fcntl(rbx, 1);\n        int32_t rax_10;\n        if (rax_7 >= 0)\n        {\n            rax_10 = fcntl(rbx, 2, (rax_7 | 1));\n        }\n        if ((rax_7 < 0 || (rax_7 >= 0 && rax_10 == 0xffffffff)))\n        {\n            int32_t* rax_11 = __errno_location();\n            int32_t rdi_2 = rbx;\n            rbx = -1;\n            int32_t r12_1 = *rax_11;\n            close(rdi_2);\n            *rax_11 = r12_1;\n        }\n    }\n    if ((data_60e458 >= 0 && (rax_2 >= 0 || (rax_2 < 0 && *rax_15 != 0x16))))\n    {\n        data_60e458 = 1;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_4088a0",
            "funcStartAddr": "0x4088a0",
            "funcEndAddr": "0x4088e0",
            "decompiledFuncCode": "int64_t sub_4088a0(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_4088e0(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_4088e0",
            "funcStartAddr": "0x4088e0",
            "funcEndAddr": "0x408937",
            "decompiledFuncCode": "off64_t sub_4088e0(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_408940",
            "funcStartAddr": "0x408940",
            "funcEndAddr": "0x408a1f",
            "decompiledFuncCode": "uint64_t sub_408940(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_408a20",
            "funcStartAddr": "0x408a20",
            "funcEndAddr": "0x40903c",
            "decompiledFuncCode": "uint64_t sub_408a20(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_408c50;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_408b76;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_408b76;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_408b76:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_408c50:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_408c7e;\n                }\n                *arg5 = r12;\n            label_408c7e:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_408c9c;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_408c9c:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_408c9c;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_408c0e;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_408c0e:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_409040",
            "funcStartAddr": "0x409040",
            "funcEndAddr": "0x409606",
            "decompiledFuncCode": "uint64_t sub_409040(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_40927c;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_409108;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_409108:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_408940(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_40be09;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_408940(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_40927c;\n                }\n                *arg7 = rdx_2;\n            label_40927c:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_409380;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_40be09;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_4093f0;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_409380;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_409380;\n                            }\n                            goto label_409341;\n                        }\n                    label_409341:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_408a20(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_40be0a);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_409380:\n                            rdx = &r14_1[1];\n                        label_4091c1:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_4093be;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_4093be:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_40be28;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_4093f0:\n                                        r14_2 = sub_408a20(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_4094ad;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_4094ad:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_40927c;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_409108;\n        }\n        goto label_4091c1;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_409670",
            "funcStartAddr": "0x409670",
            "funcEndAddr": "0x409688",
            "decompiledFuncCode": "uint64_t sub_409670(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_409710",
            "funcStartAddr": "0x409710",
            "funcEndAddr": "0x40978a",
            "decompiledFuncCode": "uint64_t sub_409710(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_40be0c[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_40973a;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_40973a:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_4097f0() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_409790",
            "funcStartAddr": "0x409790",
            "funcEndAddr": "0x4097ed",
            "decompiledFuncCode": "uint64_t sub_409790(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_4086e0(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4097f0",
            "funcStartAddr": "0x4097f0",
            "funcEndAddr": "0x40984e",
            "decompiledFuncCode": "int64_t sub_4097f0()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_40be2c;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            void* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_409850",
            "funcStartAddr": "0x409850",
            "funcEndAddr": "0x409db2",
            "decompiledFuncCode": "char* sub_409850()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_60e498;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_40be0c[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        uint64_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            uint64_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_40994c;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_409996;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_40994c:\n            r15 = &data_40be0c[0x1b];\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_409996:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, \"r\");\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_409a4c:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_409bdb;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_409a88:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_409a88;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_409ac2:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_409ac2;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_40be0c[0x1b];\n                                    free(rdi_26);\n                                    sub_4086e0(rax_12);\n                                    goto label_4099d7;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_409c9b:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_409c9b;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_409ce9:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_409ce9;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_409a4c;\n                        }\n                        break;\n                    }\n                label_409bdb:\n                    sub_4086e0(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_40be0c[0x1b];\n            }\n        label_4099d7:\n            free(rbp_3);\n        }\n        data_60e498 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x409dc0",
            "funcEndAddr": "0x409e1d",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x409e20",
            "funcEndAddr": "0x409e21",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_409e30",
            "funcStartAddr": "0x409e30",
            "funcEndAddr": "0x409e48",
            "decompiledFuncCode": "int64_t sub_409e30(void (* arg1)(void*))\n{\n    int64_t rdx = data_60e208;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_409e48",
            "funcStartAddr": "0x409e48",
            "funcEndAddr": "0x409e68",
            "decompiledFuncCode": "int64_t sub_409e48(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_60de30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}