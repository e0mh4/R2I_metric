{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_od.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 150,
    "funcInfo": [
        {
            "funcName": "sub_401770",
            "funcStartAddr": "0x401770",
            "funcEndAddr": "0x40177c",
            "decompiledFuncCode": "int64_t sub_401770()\n{\n    int64_t var_8 = data_612008;\n    /* jump -> data_612010 */\n}\n\n"
        },
        {
            "funcName": "sub_401786",
            "funcStartAddr": "0x401786",
            "funcEndAddr": "0x401790",
            "decompiledFuncCode": "int64_t sub_401786()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_401796",
            "funcStartAddr": "0x401796",
            "funcEndAddr": "0x4017a0",
            "decompiledFuncCode": "int64_t sub_401796()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_4017a6",
            "funcStartAddr": "0x4017a6",
            "funcEndAddr": "0x4017b0",
            "decompiledFuncCode": "int64_t sub_4017a6()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_4017b6",
            "funcStartAddr": "0x4017b6",
            "funcEndAddr": "0x4017c0",
            "decompiledFuncCode": "int64_t sub_4017b6()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_4017c6",
            "funcStartAddr": "0x4017c6",
            "funcEndAddr": "0x4017d0",
            "decompiledFuncCode": "int64_t sub_4017c6()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_4017d6",
            "funcStartAddr": "0x4017d6",
            "funcEndAddr": "0x4017e0",
            "decompiledFuncCode": "int64_t sub_4017d6()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_4017e6",
            "funcStartAddr": "0x4017e6",
            "funcEndAddr": "0x4017f0",
            "decompiledFuncCode": "int64_t sub_4017e6()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_401836",
            "funcStartAddr": "0x401836",
            "funcEndAddr": "0x401840",
            "decompiledFuncCode": "int64_t sub_401836()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_401846",
            "funcStartAddr": "0x401846",
            "funcEndAddr": "0x401850",
            "decompiledFuncCode": "int64_t sub_401846()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_401856",
            "funcStartAddr": "0x401856",
            "funcEndAddr": "0x401860",
            "decompiledFuncCode": "int64_t sub_401856()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_401866",
            "funcStartAddr": "0x401866",
            "funcEndAddr": "0x401870",
            "decompiledFuncCode": "int64_t sub_401866()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_4018b6",
            "funcStartAddr": "0x4018b6",
            "funcEndAddr": "0x4018c0",
            "decompiledFuncCode": "int64_t sub_4018b6()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_4018c6",
            "funcStartAddr": "0x4018c6",
            "funcEndAddr": "0x4018d0",
            "decompiledFuncCode": "int64_t sub_4018c6()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_4018d6",
            "funcStartAddr": "0x4018d6",
            "funcEndAddr": "0x4018e0",
            "decompiledFuncCode": "int64_t sub_4018d6()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_4018e6",
            "funcStartAddr": "0x4018e6",
            "funcEndAddr": "0x4018f0",
            "decompiledFuncCode": "int64_t sub_4018e6()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_401936",
            "funcStartAddr": "0x401936",
            "funcEndAddr": "0x401940",
            "decompiledFuncCode": "int64_t sub_401936()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_401946",
            "funcStartAddr": "0x401946",
            "funcEndAddr": "0x401950",
            "decompiledFuncCode": "int64_t sub_401946()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_401956",
            "funcStartAddr": "0x401956",
            "funcEndAddr": "0x401960",
            "decompiledFuncCode": "int64_t sub_401956()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_401966",
            "funcStartAddr": "0x401966",
            "funcEndAddr": "0x401970",
            "decompiledFuncCode": "int64_t sub_401966()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_4019b6",
            "funcStartAddr": "0x4019b6",
            "funcEndAddr": "0x4019c0",
            "decompiledFuncCode": "int64_t sub_4019b6()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_4019c6",
            "funcStartAddr": "0x4019c6",
            "funcEndAddr": "0x4019d0",
            "decompiledFuncCode": "int64_t sub_4019c6()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_4019d6",
            "funcStartAddr": "0x4019d6",
            "funcEndAddr": "0x4019e0",
            "decompiledFuncCode": "int64_t sub_4019d6()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_4019e6",
            "funcStartAddr": "0x4019e6",
            "funcEndAddr": "0x4019f0",
            "decompiledFuncCode": "int64_t sub_4019e6()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_401a36",
            "funcStartAddr": "0x401a36",
            "funcEndAddr": "0x401a40",
            "decompiledFuncCode": "int64_t sub_401a36()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_401a46",
            "funcStartAddr": "0x401a46",
            "funcEndAddr": "0x401a50",
            "decompiledFuncCode": "int64_t sub_401a46()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_401a56",
            "funcStartAddr": "0x401a56",
            "funcEndAddr": "0x401a60",
            "decompiledFuncCode": "int64_t sub_401a56()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_401a66",
            "funcStartAddr": "0x401a66",
            "funcEndAddr": "0x401a70",
            "decompiledFuncCode": "int64_t sub_401a66()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_401ab6",
            "funcStartAddr": "0x401ab6",
            "funcEndAddr": "0x401ac0",
            "decompiledFuncCode": "int64_t sub_401ab6()\n{\n    int64_t var_8 = 0x33;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_401ac6",
            "funcStartAddr": "0x401ac6",
            "funcEndAddr": "0x401ad0",
            "decompiledFuncCode": "int64_t sub_401ac6()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_401ad6",
            "funcStartAddr": "0x401ad6",
            "funcEndAddr": "0x401ae0",
            "decompiledFuncCode": "int64_t sub_401ad6()\n{\n    int64_t var_8 = 0x35;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_401ae6",
            "funcStartAddr": "0x401ae6",
            "funcEndAddr": "0x401af0",
            "decompiledFuncCode": "int64_t sub_401ae6()\n{\n    int64_t var_8 = 0x36;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_401b36",
            "funcStartAddr": "0x401b36",
            "funcEndAddr": "0x401b40",
            "decompiledFuncCode": "int64_t sub_401b36()\n{\n    int64_t var_8 = 0x3b;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_401b46",
            "funcStartAddr": "0x401b46",
            "funcEndAddr": "0x401b50",
            "decompiledFuncCode": "int64_t sub_401b46()\n{\n    int64_t var_8 = 0x3c;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_401b56",
            "funcStartAddr": "0x401b56",
            "funcEndAddr": "0x401b60",
            "decompiledFuncCode": "int64_t sub_401b56()\n{\n    int64_t var_8 = 0x3d;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "sub_401b66",
            "funcStartAddr": "0x401b66",
            "funcEndAddr": "0x401b70",
            "decompiledFuncCode": "int64_t sub_401b66()\n{\n    int64_t var_8 = 0x3e;\n    /* tailcall */\n    return sub_401770();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x401be0",
            "funcEndAddr": "0x402c5f",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    uint64_t r15;\n    uint64_t var_8 = r15;\n    char** rbp = argv;\n    char* rdi = *argv;\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_4055f0(rdi);\n    void var_68;\n    uint64_t var_60;\n    setlocale(6, &data_40fba1[0x1b], rdx, rcx, r8, r9, var_68, var_60);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    sub_40c270(sub_4051b0);\n    int64_t rax = 0;\n    do\n    {\n        *((rax << 2) + 0x6123a0) = 0;\n        rax = (rax + 1);\n    } while (rax != 9);\n    data_6123b0 = 3;\n    data_6123c0 = 5;\n    data_6123a4 = 0x200000001;\n    int64_t rax_1 = 0;\n    do\n    {\n        *((rax_1 << 2) + 0x612340) = 0;\n        rax_1 = (rax_1 + 1);\n    } while (rax_1 != 0x11);\n    data_612350 = 6;\n    uint64_t rbx = 1;\n    char* r14 = nullptr;\n    char r13 = 0;\n    data_612380 = 8;\n    data_612360 = 7;\n    data_6123f0 = 0;\n    data_6123e8 = 0;\n    data_6123f8 = 0;\n    data_612420 = 0x402d50;\n    data_612444 = 8;\n    data_612440 = 7;\n    data_612432 = 0;\n    while (true)\n    {\n        int32_t var_50 = 0xffffffff;\n        int32_t rax_2 = getopt_long(argc, rbp, \"A:aBbcDdeFfHhIij:LlN:OoS:st:vw::\u2026\", &data_40cf80, &var_50);\n        int32_t rax_7;\n        uint64_t var_48;\n        if (rax_2 != 0xffffffff)\n        {\n            uint64_t rax_3 = (rax_2 + 0x83);\n            if (rax_3 > 0x104)\n            {\n                break;\n            }\n            switch (rax_3)\n            {\n                case 0:\n                {\n                    sub_407690(stdout, &data_40c3a1, \"GNU coreutils\", data_612258);\n                    exit(0);\n                    /* no return */\n                }\n                case 1:\n                {\n                    sub_404960(0);\n                    /* no return */\n                }\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 0xa:\n                case 0xb:\n                case 0xc:\n                case 0xd:\n                case 0xe:\n                case 0xf:\n                case 0x10:\n                case 0x11:\n                case 0x12:\n                case 0x13:\n                case 0x14:\n                case 0x15:\n                case 0x16:\n                case 0x17:\n                case 0x18:\n                case 0x19:\n                case 0x1a:\n                case 0x1b:\n                case 0x1c:\n                case 0x1d:\n                case 0x1e:\n                case 0x1f:\n                case 0x20:\n                case 0x21:\n                case 0x22:\n                case 0x23:\n                case 0x24:\n                case 0x25:\n                case 0x26:\n                case 0x27:\n                case 0x28:\n                case 0x29:\n                case 0x2a:\n                case 0x2b:\n                case 0x2c:\n                case 0x2d:\n                case 0x2e:\n                case 0x2f:\n                case 0x30:\n                case 0x31:\n                case 0x32:\n                case 0x33:\n                case 0x34:\n                case 0x35:\n                case 0x36:\n                case 0x37:\n                case 0x38:\n                case 0x39:\n                case 0x3a:\n                case 0x3b:\n                case 0x3c:\n                case 0x3d:\n                case 0x3e:\n                case 0x3f:\n                case 0x40:\n                case 0x41:\n                case 0x42:\n                case 0x43:\n                case 0x44:\n                case 0x45:\n                case 0x46:\n                case 0x47:\n                case 0x48:\n                case 0x49:\n                case 0x4a:\n                case 0x4b:\n                case 0x4c:\n                case 0x4d:\n                case 0x4e:\n                case 0x4f:\n                case 0x50:\n                case 0x51:\n                case 0x52:\n                case 0x53:\n                case 0x54:\n                case 0x55:\n                case 0x56:\n                case 0x57:\n                case 0x58:\n                case 0x59:\n                case 0x5a:\n                case 0x5b:\n                case 0x5c:\n                case 0x5d:\n                case 0x5e:\n                case 0x5f:\n                case 0x60:\n                case 0x61:\n                case 0x62:\n                case 0x63:\n                case 0x64:\n                case 0x65:\n                case 0x66:\n                case 0x67:\n                case 0x68:\n                case 0x69:\n                case 0x6a:\n                case 0x6b:\n                case 0x6c:\n                case 0x6d:\n                case 0x6e:\n                case 0x6f:\n                case 0x70:\n                case 0x71:\n                case 0x72:\n                case 0x73:\n                case 0x74:\n                case 0x75:\n                case 0x76:\n                case 0x77:\n                case 0x78:\n                case 0x79:\n                case 0x7a:\n                case 0x7b:\n                case 0x7c:\n                case 0x7d:\n                case 0x7e:\n                case 0x7f:\n                case 0x80:\n                case 0x81:\n                case 0x83:\n                case 0x84:\n                case 0x85:\n                case 0x86:\n                case 0x87:\n                case 0x88:\n                case 0x89:\n                case 0x8a:\n                case 0x8b:\n                case 0x8c:\n                case 0x8d:\n                case 0x8e:\n                case 0x8f:\n                case 0x90:\n                case 0x91:\n                case 0x92:\n                case 0x93:\n                case 0x94:\n                case 0x95:\n                case 0x96:\n                case 0x97:\n                case 0x98:\n                case 0x99:\n                case 0x9a:\n                case 0x9b:\n                case 0x9c:\n                case 0x9d:\n                case 0x9e:\n                case 0x9f:\n                case 0xa0:\n                case 0xa1:\n                case 0xa2:\n                case 0xa3:\n                case 0xa4:\n                case 0xa5:\n                case 0xa6:\n                case 0xa7:\n                case 0xa8:\n                case 0xa9:\n                case 0xaa:\n                case 0xab:\n                case 0xac:\n                case 0xad:\n                case 0xae:\n                case 0xaf:\n                case 0xb0:\n                case 0xb1:\n                case 0xb2:\n                case 0xb3:\n                case 0xb4:\n                case 0xb5:\n                case 0xb6:\n                case 0xb7:\n                case 0xb8:\n                case 0xb9:\n                case 0xba:\n                case 0xbb:\n                case 0xbc:\n                case 0xbd:\n                case 0xbe:\n                case 0xbf:\n                case 0xc0:\n                case 0xc1:\n                case 0xc2:\n                case 0xc3:\n                case 0xc6:\n                case 0xc8:\n                case 0xca:\n                case 0xcd:\n                case 0xce:\n                case 0xd0:\n                case 0xd3:\n                case 0xd4:\n                case 0xd5:\n                case 0xd7:\n                case 0xd8:\n                case 0xd9:\n                case 0xda:\n                case 0xdc:\n                case 0xdd:\n                case 0xde:\n                case 0xdf:\n                case 0xe0:\n                case 0xe1:\n                case 0xe2:\n                case 0xe3:\n                case 0xea:\n                case 0xee:\n                case 0xf0:\n                case 0xf1:\n                case 0xf3:\n                case 0xf4:\n                case 0xf5:\n                case 0xf8:\n                case 0xfc:\n                case 0xfd:\n                case 0xfe:\n                case 0xff:\n                case 0x100:\n                case 0x101:\n                case 0x102:\n                {\n                    break;\n                    break;\n                }\n                case 0xc4:\n                {\n                    char r13_1 = **&data_6125e0;\n                    bool cond:0_1 = r13_1 <= 0x6e;\n                    if (r13_1 == 0x6e)\n                    {\n                        data_612440 = 0;\n                        r13 = 1;\n                        data_612420 = 0x402d40;\n                        continue;\n                    }\n                    else\n                    {\n                        if (cond:0_1)\n                        {\n                            if (r13_1 == 0x64)\n                            {\n                                data_612444 = 0xa;\n                                r13 = 1;\n                                data_612420 = 0x402d50;\n                                data_612440 = 7;\n                                continue;\n                            }\n                        }\n                        else if (r13_1 == 0x6f)\n                        {\n                            data_612444 = 8;\n                            r13 = 1;\n                            data_612420 = 0x402d50;\n                            data_612440 = 7;\n                            continue;\n                        }\n                        else if (r13_1 == 0x78)\n                        {\n                            data_612444 = 0x10;\n                            r13 = 1;\n                            data_612420 = 0x402d50;\n                            data_612440 = 6;\n                            continue;\n                        }\n                        error(1, 0, dcgettext(nullptr, \"invalid output address radix '%c\u2026\", 5), r13_1);\n                    }\n                    break;\n                }\n                case 0xc5:\n                case 0xf2:\n                {\n                    rbx = (rbx & sub_4040c0(&data_40c45a));\n                    continue;\n                }\n                case 0xc7:\n                {\n                    rbx = (rbx & sub_4040c0(&data_40c442));\n                    continue;\n                }\n                case 0xc9:\n                case 0xe8:\n                {\n                    rbx = (rbx & sub_4040c0(&data_40c448));\n                    continue;\n                }\n                case 0xcb:\n                case 0xdb:\n                {\n                    rbx = (rbx & sub_4040c0(&data_40c44e));\n                    continue;\n                }\n                case 0xcc:\n                case 0xcf:\n                case 0xef:\n                {\n                    rbx = (rbx & sub_4040c0(&data_40c454));\n                    continue;\n                }\n                case 0xd1:\n                {\n                    int64_t rdi_6 = data_6125e0;\n                    data_612410 = 1;\n                    int32_t rax_21 = sub_407ce0(rdi_6, nullptr, 0, &data_612408, \"bEGKkMmPTYZ0\");\n                    if (rax_21 != 0)\n                    {\n                        sub_407c50(rax_21, var_50, 0x4e, &data_40cf80, data_6125e0);\n                        /* no return */\n                    }\n                    break;\n                }\n                case 0xd2:\n                {\n                    rbx = (rbx & sub_4040c0(&data_40c457));\n                    continue;\n                }\n                case 0xd6:\n                {\n                    int64_t rdi_5 = data_6125e0;\n                    if (rdi_5 == 0)\n                    {\n                        data_612438 = 3;\n                    }\n                    else\n                    {\n                        int32_t rax_18 = sub_407ce0(rdi_5, nullptr, 0, &var_48, \"bEGKkMmPTYZ0\");\n                        if (rax_18 != 0)\n                        {\n                            sub_407c50(rax_18, var_50, 0x53, &data_40cf80, data_6125e0);\n                            /* no return */\n                        }\n                        data_612438 = var_48;\n                    }\n                    data_612432 = 1;\n                    r13 = 1;\n                    continue;\n                }\n                case 0xe4:\n                {\n                    rbx = (rbx & sub_4040c0(&data_40c2fe));\n                    continue;\n                }\n                case 0xe5:\n                {\n                    rbx = (rbx & sub_4040c0(&data_40c43f));\n                    continue;\n                }\n                case 0xe6:\n                {\n                    rbx = (rbx & sub_4040c0(&data_40c2e1));\n                    continue;\n                }\n                case 0xe7:\n                {\n                    rbx = (rbx & sub_4040c0(&data_40c445));\n                    continue;\n                }\n                case 0xe9:\n                {\n                    rbx = (rbx & sub_4040c0(&data_40c44b));\n                    continue;\n                }\n                case 0xeb:\n                case 0xfb:\n                {\n                    rbx = (rbx & sub_4040c0(&data_40c460));\n                    continue;\n                }\n                case 0xec:\n                {\n                    rbx = (rbx & sub_4040c0(&data_40c451));\n                    continue;\n                }\n                case 0xed:\n                {\n                    int32_t rax_10 = sub_407ce0(data_6125e0, nullptr, 0, &data_612418, \"bEGKkMmPTYZ0\");\n                    if (rax_10 != 0)\n                    {\n                        sub_407c50(rax_10, var_50, 0x6a, &data_40cf80, data_6125e0);\n                        /* no return */\n                    }\n                    break;\n                }\n                case 0xf6:\n                {\n                    rbx = (rbx & sub_4040c0(&data_40c45d));\n                    continue;\n                }\n                case 0xf7:\n                {\n                    int64_t rdi_3 = data_6125e0;\n                    if (rdi_3 != 0)\n                    {\n                        r13 = 1;\n                        rbx = (rbx & sub_4040c0(rdi_3));\n                        continue;\n                    }\n                    break;\n                }\n                case 0xf9:\n                {\n                    data_612251 = 0;\n                    r13 = 1;\n                    continue;\n                }\n                case 0xfa:\n                {\n                    char* rdi_2 = data_6125e0;\n                    if (rdi_2 == 0)\n                    {\n                        r14 = 1;\n                        r13 = 1;\n                        r15 = 0x20;\n                        continue;\n                    }\n                    else\n                    {\n                        rax_7 = sub_407ce0(rdi_2, nullptr, 0xa, &var_48, &data_40fba1[0x1b]);\n                        if (rax_7 == 0)\n                        {\n                            r15 = var_48;\n                            r14 = 1;\n                            r13 = 1;\n                            continue;\n                        }\n                    }\n                    break;\n                }\n                case 0x103:\n                {\n                    data_612431 = 1;\n                    continue;\n                }\n                case 0x104:\n                {\n                    int32_t rax_5 = *((sub_4050d0(\"--endian\", data_6125e0, &data_40d110, 0x40d100, 4, data_612260) << 2) + 0x40d100);\n                    if (rax_5 == 0)\n                    {\n                        data_612321 = 0;\n                        continue;\n                    }\n                    else if (rax_5 != 1)\n                    {\n                        continue;\n                    }\n                    else\n                    {\n                        data_612321 = 1;\n                        continue;\n                    }\n                    break;\n                }\n            }\n            if ((rax_3 == 0xc4 || rax_3 == 0xf7))\n            {\n                __assert_fail(\"s != NULL\", \"src/od.c\", 0x3d7, \"decode_format_string\");\n                /* no return */\n            }\n            else if ((rax_3 == 0xd1 || rax_3 == 0xed))\n            {\n                r13 = 1;\n                continue;\n            }\n        }\n        else\n        {\n            if (rbx == 0)\n            {\n                return 1;\n            }\n            if ((data_612432 == 0 || (data_612432 != 0 && data_6123f0 == 0)))\n            {\n                int64_t rax_29 = data_6122dc;\n                char rdx_1 = data_612431;\n                int32_t r12_1 = (argc - rax_29);\n                if (r13 != 0)\n                {\n                    if (rdx_1 == 0)\n                    {\n                        goto label_4020ff;\n                    }\n                    if (r12_1 == 2)\n                    {\n                        goto label_402657;\n                    }\n                    if (r12_1 == 3)\n                    {\n                        goto label_402613;\n                    }\n                    if (r12_1 != 1)\n                    {\n                        goto label_4020f5;\n                    }\n                label_40248b:\n                    if (sub_402e40(rbp[rax_29], &var_50) == 0)\n                    {\n                        goto label_402932;\n                    }\n                    rbp = &rbp[1];\n                    r12_1 = 0;\n                    data_612418 = var_50;\n                    goto label_4020ff;\n                }\n                if (r12_1 != 2)\n                {\n                    if (r12_1 == 3)\n                    {\n                    label_402613:\n                        r12_1 = 3;\n                        if (rdx_1 == 0)\n                        {\n                            goto label_4020ff;\n                        }\n                        if (sub_402e40(rbp[(rax_29 + 1)], &var_50) != 0)\n                        {\n                            if (sub_402e40(rbp[(data_6122dc + 2)], &var_48) == 0)\n                            {\n                                goto label_402638;\n                            }\n                            int64_t rax_124 = var_50;\n                            data_612430 = 1;\n                            r12_1 = 1;\n                            data_612418 = rax_124;\n                            var_60 = var_48;\n                            int64_t rax_126 = data_6122dc;\n                            rbp[(rax_126 + 2)] = rbp[rax_126];\n                            rbp = &rbp[2];\n                            goto label_4020ff;\n                        }\n                    label_402638:\n                        r12_1 = 3;\n                        goto label_40263e;\n                    }\n                    if (r12_1 == 1)\n                    {\n                        char* rcx_14 = rbp[rax_29];\n                        if (rdx_1 != 0)\n                        {\n                            goto label_40248b;\n                        }\n                        if (*rcx_14 == 0x2b)\n                        {\n                            goto label_40248b;\n                        }\n                    label_402932:\n                        r12_1 = 1;\n                        goto label_4020ff;\n                    }\n                label_4020f5:\n                    if (r12_1 <= 1)\n                    {\n                        goto label_4020ff;\n                    }\n                    if (rdx_1 != 0)\n                    {\n                        goto label_4025bb;\n                    }\n                    goto label_4020ff;\n                }\n            label_402657:\n                char* rdi_21 = rbp[(rax_29 + 1)];\n                if (rdx_1 == 0)\n                {\n                    int32_t rax_83 = *rdi_21;\n                    if (rax_83 == 0x2b)\n                    {\n                        goto label_40288c;\n                    }\n                    if ((rax_83 - 0x30) <= 9)\n                    {\n                        goto label_40288c;\n                    }\n                    r12_1 = 2;\n                label_4020ff:\n                    if (data_612430 != 0)\n                    {\n                        if (data_612420 == 0x402d40)\n                        {\n                            data_612444 = 8;\n                            data_612440 = 7;\n                            data_612420 = 0x404010;\n                        }\n                        else\n                        {\n                            data_612420 = 0x404090;\n                        }\n                        goto label_402124;\n                    }\n                label_402124:\n                    if (data_612410 != 0)\n                    {\n                        int64_t rax_30 = data_612408;\n                        bool c_1 = (rax_30 + data_612418) < rax_30;\n                        data_612400 = (rax_30 + data_612418);\n                        if (c_1)\n                        {\n                            error(1, 0, dcgettext(nullptr, \"skip-bytes + read-bytes is too l\u2026\", 5));\n                        label_402b87:\n                            __assert_fail(\"n_bytes_read == bytes_per_block\", \"src/od.c\", 0x575, \"dump\");\n                            /* no return */\n                        }\n                        goto label_402148;\n                    }\n                label_402148:\n                    if (data_6123f0 == 0)\n                    {\n                        goto label_4024fe;\n                    }\n                    while (true)\n                    {\n                        void* rax_33 = &data_40d170;\n                        if (r12_1 > 0)\n                        {\n                            rax_33 = &rbp[data_6122dc];\n                        }\n                        data_6123d0 = rax_33;\n                        r12_1 = sub_403a50();\n                        if (data_6123c8 != 0)\n                        {\n                            r12_1 = (r12_1 & sub_403b50(data_612418));\n                            uint32_t rax_36 = r12_1;\n                            if (data_6123c8 != 0)\n                            {\n                                int64_t rax_37 = 0;\n                                if (data_612430 != 0)\n                                {\n                                    rax_37 = (var_60 - data_612418);\n                                }\n                                int64_t r10_1 = data_6123f0;\n                                data_612428 = rax_37;\n                                int32_t r8_4;\n                                int64_t r11_1;\n                                int64_t r12_2;\n                                if (r10_1 != 0)\n                                {\n                                    r11_1 = data_6123f8;\n                                    r8_4 = 1;\n                                    int32_t* rdi_10 = (r11_1 + 4);\n                                    int64_t r9_3 = ((r11_1 + (r10_1 * 0x28)) + 4);\n                                    do\n                                    {\n                                        int64_t r8_5 = r8_4;\n                                        int64_t rsi_3 = *((*rdi_10 << 2) + 0x40d220);\n                                        int64_t rax_41 = r8_5;\n                                        int64_t rcx_4 = rsi_3;\n                                        while (true)\n                                        {\n                                            int64_t rdx_3 = (COMBINE(0, rax_41) % rcx_4);\n                                            rax_41 = rcx_4;\n                                            if (rdx_3 == 0)\n                                            {\n                                                break;\n                                            }\n                                            rcx_4 = rdx_3;\n                                        }\n                                        rdi_10 = &rdi_10[0xa];\n                                        r8_4 = (r8_5 * (COMBINE(0, rsi_3) / rcx_4));\n                                    } while (r9_3 != rdi_10);\n                                    if ((r14 == 0 && r8_4 > 0xf))\n                                    {\n                                        data_6123e0 = r8_4;\n                                    label_4022a9:\n                                        int32_t* rcx_6 = (r11_1 + 4);\n                                        int64_t r8_7 = data_6123e0;\n                                        int64_t rdi_11 = 0;\n                                        int32_t* rsi_4 = rcx_6;\n                                        int64_t r9_4 = ((r11_1 + (r10_1 * 0x28)) + 4);\n                                        do\n                                        {\n                                            int64_t rax_51 = ((rsi_4[6] + 1) * (COMBINE(0, r8_7) / *((*rsi_4 << 2) + 0x40d220)));\n                                            if (rdi_11 < rax_51)\n                                            {\n                                                rdi_11 = rax_51;\n                                            }\n                                            rsi_4 = &rsi_4[0xa];\n                                        } while (r9_4 != rsi_4);\n                                        do\n                                        {\n                                            uint64_t rax_52 = *rcx_6;\n                                            rcx_6 = &rcx_6[0xa];\n                                            rcx_6[-3] = (rdi_11 - ((COMBINE(0, r8_7) / *((rax_52 << 2) + 0x40d220)) * rcx_6[-4]));\n                                        } while (r9_4 != rcx_6);\n                                    }\n                                    if (r14 != 0)\n                                    {\n                                        r12_2 = r8_4;\n                                        if (r15 == 0)\n                                        {\n                                            goto label_40226b;\n                                        }\n                                        if ((COMBINE(0, r15) % r12_2) == 0)\n                                        {\n                                            goto label_402a24;\n                                        }\n                                        goto label_40226b;\n                                    }\n                                }\n                                else\n                                {\n                                    r8_4 = 1;\n                                    if (r14 != 0)\n                                    {\n                                        if (r15 == 0)\n                                        {\n                                            r12_2 = 1;\n                                            r8_4 = 1;\n                                        label_40226b:\n                                            var_60 = r8_4;\n                                            error(0, 0, dcgettext(nullptr, \"warning: invalid width %lu; usin\u2026\", 5), r15, var_60);\n                                            data_6123e0 = r12_2;\n                                            r10_1 = data_6123f0;\n                                            goto label_402299;\n                                        }\n                                    label_402a24:\n                                        data_6123e0 = r15;\n                                        goto label_402299;\n                                    }\n                                }\n                                if ((((r10_1 != 0 && r14 == 0) && r8_4 <= 0xf) || r10_1 == 0))\n                                {\n                                    int32_t temp7_1;\n                                    int32_t temp8_1;\n                                    temp7_1 = HIGHW(0x10);\n                                    temp8_1 = LOWW(0x10);\n                                    data_6123e0 = ((COMBINE(0, 0x10) / r8_4) * r8_4);\n                                label_402299:\n                                    r11_1 = data_6123f8;\n                                    if (r10_1 != 0)\n                                    {\n                                        goto label_4022a9;\n                                    }\n                                }\n                                if (((((r10_1 != 0 && r14 == 0) && r8_4 <= 0xf) || r10_1 == 0) || ((r10_1 != 0 && r14 == 0) && r8_4 > 0xf)))\n                                {\n                                    uint32_t r12_3 = data_612432;\n                                    uint32_t r12_4;\n                                    if (r12_3 != 0)\n                                    {\n                                        uint64_t rdi_12 = 0x64;\n                                        if (data_612438 >= 0x64)\n                                        {\n                                            rdi_12 = data_612438;\n                                        }\n                                        var_48 = rdi_12;\n                                        int64_t r13_2 = data_612418;\n                                        r14 = sub_4077d0(rdi_12);\n                                    label_402350:\n                                        int64_t rsi_8 = data_612438;\n                                        while (true)\n                                        {\n                                            int64_t rbx_1 = rsi_8;\n                                            if (data_612410 != 0)\n                                            {\n                                                int64_t rax_57 = data_612400;\n                                                if ((rax_57 < rsi_8 || (rax_57 >= rsi_8 && (rax_57 - rsi_8) <= r13_2)))\n                                                {\n                                                    free(r14);\n                                                    r12_3 = (r12_3 & sub_4038f0(0));\n                                                    break;\n                                                }\n                                            }\n                                            if (rsi_8 != 0)\n                                            {\n                                                rbx_1 = 0;\n                                                r15 = (r13_2 + 1);\n                                                uint16_t* rax_60;\n                                                int32_t rbp_1;\n                                                do\n                                                {\n                                                    r13_2 = (r15 + rbx_1);\n                                                    rbp_1 = var_50;\n                                                    r12_3 = (r12_3 & sub_403d20(&var_50));\n                                                    if (rbp_1 < 0)\n                                                    {\n                                                        break;\n                                                    }\n                                                    rsi_8 = data_612438;\n                                                    rax_60 = *__ctype_b_loc();\n                                                    if ((*(&rax_60[rbp_1] + 1) & 0x40) == 0)\n                                                    {\n                                                        break;\n                                                    }\n                                                    r14[rbx_1] = rbp_1;\n                                                    rbx_1 = (rbx_1 + 1);\n                                                } while (rbx_1 < rsi_8);\n                                                if (rbp_1 < 0)\n                                                {\n                                                label_4023d6:\n                                                    free(r14);\n                                                    break;\n                                                }\n                                                if (((rbp_1 >= 0 && rbp_1 >= 0) && (*((rax_60 + (rbp_1 << 1)) + 1) & 0x40) == 0))\n                                                {\n                                                    continue;\n                                                }\n                                            }\n                                            while (true)\n                                            {\n                                                if ((data_612410 == 0 || (data_612410 != 0 && r13_2 < data_612400)))\n                                                {\n                                                    if (var_48 == rbx_1)\n                                                    {\n                                                        r14 = sub_407930(r14, &var_48);\n                                                    }\n                                                    r13_2 = (r13_2 + 1);\n                                                    r15 = var_50;\n                                                    r12_3 = (r12_3 & sub_403d20(&var_50));\n                                                    int32_t temp16_1 = r15;\n                                                    bool cond:8_1 = temp16_1 == 0;\n                                                    if (temp16_1 < 0)\n                                                    {\n                                                        goto label_4023d6;\n                                                    }\n                                                    if ((!cond:8_1))\n                                                    {\n                                                        if ((*(&*__ctype_b_loc()[r15] + 1) & 0x40) == 0)\n                                                        {\n                                                            goto label_402350;\n                                                        }\n                                                        r14[rbx_1] = r15;\n                                                        rbx_1 = (rbx_1 + 1);\n                                                        continue;\n                                                    }\n                                                }\n                                                r14[rbx_1] = 0;\n                                                char* rbx_5 = r14;\n                                                data_612420(((!rbx_1) + r13_2), 0x20);\n                                                while (true)\n                                                {\n                                                    char rdx_33 = *rbx_5;\n                                                    uint64_t* const rcx_15 = stdout;\n                                                    int32_t rax_111 = rdx_33;\n                                                    var_50 = rax_111;\n                                                    if (rax_111 == 0)\n                                                    {\n                                                        break;\n                                                    }\n                                                    char rax_112 = (rdx_33 - 7);\n                                                    if (rax_112 > 6)\n                                                    {\n                                                        char* rax_114 = stdout[5];\n                                                        if (rax_114 >= stdout[6])\n                                                        {\n                                                            __overflow(stdout, rdx_33);\n                                                        }\n                                                        else\n                                                        {\n                                                            stdout[5] = &rax_114[1];\n                                                            *rax_114 = rdx_33;\n                                                        }\n                                                    }\n                                                    else\n                                                    {\n                                                        switch (rax_112)\n                                                        {\n                                                            case 0:\n                                                            {\n                                                                fwrite_unlocked(&data_40c2fd, 1, 2, rcx_15);\n                                                                break;\n                                                            }\n                                                            case 1:\n                                                            {\n                                                                fwrite_unlocked(&data_40c2eb, 1, 2, rcx_15);\n                                                                break;\n                                                            }\n                                                            case 2:\n                                                            {\n                                                                fwrite_unlocked(&data_40c2f7, 1, 2, rcx_15);\n                                                                break;\n                                                            }\n                                                            case 3:\n                                                            {\n                                                                fwrite_unlocked(&data_40c2f1, 1, 2, rcx_15);\n                                                                break;\n                                                            }\n                                                            case 4:\n                                                            {\n                                                                fwrite_unlocked(&data_40c2fa, 1, 2, rcx_15);\n                                                                break;\n                                                            }\n                                                            case 5:\n                                                            {\n                                                                fwrite_unlocked(&data_40c2ee, 1, 2, rcx_15);\n                                                                break;\n                                                            }\n                                                            case 6:\n                                                            {\n                                                                fwrite_unlocked(&data_40c2f4, 1, 2, rcx_15);\n                                                                break;\n                                                            }\n                                                        }\n                                                    }\n                                                    rbx_5 = &rbx_5[1];\n                                                }\n                                                char* rax_115 = stdout[5];\n                                                if (rax_115 >= stdout[6])\n                                                {\n                                                    __overflow(stdout, 0xa);\n                                                    rsi_8 = data_612438;\n                                                    break;\n                                                }\n                                                rsi_8 = data_612438;\n                                                stdout[5] = &rax_115[1];\n                                                *rax_115 = 0xa;\n                                                break;\n                                            }\n                                        }\n                                        r12_4 = r12_3;\n                                    }\n                                    else\n                                    {\n                                        int64_t rdi_22 = data_6123e0;\n                                        int64_t rax_85;\n                                        bool rdx_19;\n                                        rdx_19 = HIGHD((2 * rdi_22));\n                                        rax_85 = LOWD((2 * rdi_22));\n                                        uint64_t rdx_20 = ((2 * rdi_22) >> 0x40) != 0;\n                                        if ((rax_85 < 0 || (rax_85 >= 0 && rdx_20 != 0)))\n                                        {\n                                            sub_407a20();\n                                            /* no return */\n                                        }\n                                        if ((rax_85 >= 0 && rdx_20 == 0))\n                                        {\n                                            uint64_t rax_86 = sub_4077d0((rdi_22 + rdi_22));\n                                            uint32_t r13_3 = data_612410;\n                                            r14 = data_612418;\n                                            var_48 = rax_86;\n                                            int64_t var_40_1 = (rax_86 + data_6123e0);\n                                            uint64_t rbx_3;\n                                            int64_t rdi_29;\n                                            int64_t temp15_1;\n                                            if (r13_3 == 0)\n                                            {\n                                                r15 = 0;\n                                                while (true)\n                                                {\n                                                    void* rbp_3 = &var_48[r15];\n                                                    rbx_3 = var_50;\n                                                    int64_t temp14_1 = data_6123e0;\n                                                    bool cond:7_1 = rbx_3 != temp14_1;\n                                                    r13_3 = (sub_4048a0(data_6123e0, rbp_3, &var_50) & rbx);\n                                                    if (rbx_3 < temp14_1)\n                                                    {\n                                                        break;\n                                                    }\n                                                    if (cond:7_1)\n                                                    {\n                                                        __assert_fail(\"n_bytes_read == bytes_per_block\", \"src/od.c\", 0x583, \"dump\");\n                                                        /* no return */\n                                                    }\n                                                    r12_3 = (r12_3 ^ 1);\n                                                    uint64_t rax_88 = r12_3;\n                                                    rbx = r13_3;\n                                                    r15 = rax_88;\n                                                    sub_403d80(r14, rbx_3, &var_48[rax_88], rbp_3);\n                                                    r14 = (r14 + var_50);\n                                                }\n                                            }\n                                            else\n                                            {\n                                                while (true)\n                                                {\n                                                    rdi_29 = data_612400;\n                                                    if (rdi_29 <= r14)\n                                                    {\n                                                        break;\n                                                    }\n                                                    uint64_t rax_97 = r12_3;\n                                                    void* rdi_27 = (rdi_29 - r14);\n                                                    int64_t* rdx_27 = &var_50;\n                                                    void* rbp_4 = &var_48[rax_97];\n                                                    r15 = rax_97;\n                                                    void* rax_98 = data_6123e0;\n                                                    if (rdi_27 > rax_98)\n                                                    {\n                                                        rdi_27 = rax_98;\n                                                    }\n                                                    rbx_3 = var_50;\n                                                    r13_3 = (r13_3 & sub_4048a0(rdi_27, rbp_4, rdx_27));\n                                                    temp15_1 = data_6123e0;\n                                                    bool cond:6_1 = rbx_3 != temp15_1;\n                                                    if (rbx_3 < temp15_1)\n                                                    {\n                                                        break;\n                                                    }\n                                                    if (cond:6_1)\n                                                    {\n                                                        break;\n                                                    }\n                                                    r12_3 = (r12_3 ^ 1);\n                                                    sub_403d80(r14, rbx_3, &var_48[r12_3], rbp_4);\n                                                    r14 = (r14 + var_50);\n                                                }\n                                            }\n                                            if (((r13_3 == 0 || ((r13_3 != 0 && rdi_29 > r14) && rbx_3 < temp15_1)) && rbx_3 != 0))\n                                            {\n                                                int64_t r9_5 = data_6123f0;\n                                                int64_t r10_4 = data_6123f8;\n                                                int64_t rdi_26 = 0;\n                                                int32_t r8_9 = 1;\n                                                int64_t r8_10;\n                                                while (true)\n                                                {\n                                                    r8_10 = r8_9;\n                                                    if (rdi_26 == r9_5)\n                                                    {\n                                                        break;\n                                                    }\n                                                    int64_t rsi_15 = *((*((r10_4 + (rdi_26 * 0x28)) + 4) << 2) + 0x40d220);\n                                                    int64_t rax_94 = r8_10;\n                                                    int64_t rcx_11 = rsi_15;\n                                                    while (true)\n                                                    {\n                                                        int64_t rdx_24 = (COMBINE(0, rax_94) % rcx_11);\n                                                        rax_94 = rcx_11;\n                                                        if (rdx_24 == 0)\n                                                        {\n                                                            break;\n                                                        }\n                                                        rcx_11 = rdx_24;\n                                                    }\n                                                    rdi_26 = (rdi_26 + 1);\n                                                    r8_9 = (r8_10 * (COMBINE(0, rsi_15) / rcx_11));\n                                                }\n                                                r15 = &var_48[r15];\n                                                memset((r15 + rbx_3), 0, (((COMBINE(0, ((r8_10 + rbx_3) - 1)) / r8_10) * r8_10) - rbx_3));\n                                                sub_403d80(r14, rbx_3, &var_48[(r12_3 ^ 1)], r15);\n                                                r14 = (r14 + var_50);\n                                            }\n                                            if ((r13_3 != 0 && (!(rdi_29 > r14 && rbx_3 < temp15_1))))\n                                            {\n                                                if (rdi_29 > r14)\n                                                {\n                                                    break;\n                                                }\n                                                var_50 = 0;\n                                            }\n                                            data_612420(r14, 0xa);\n                                            if ((data_612410 != 0 && r14 >= data_612400))\n                                            {\n                                                r13_3 = (r13_3 & sub_4038f0(0));\n                                            }\n                                            r12_4 = r13_3;\n                                            free(var_48);\n                                        }\n                                    }\n                                    rbp = (rax_36 & r12_4);\n                                    r12_1 = (rbp & 1);\n                                }\n                            }\n                        }\n                        if ((data_6123c4 != 0 && sub_408120(stdin) == 0xffffffff))\n                        {\n                            rbx = dcgettext(nullptr, \"standard input\", 5);\n                            error(1, *__errno_location(), rbx);\n                        label_4024fe:\n                            sub_4040c0(&data_40c481);\n                            continue;\n                        }\n                        uint32_t rax_62 = (r12_1 ^ 1);\n                        return rax_62;\n                    }\n                    goto label_402b87;\n                }\n            label_40288c:\n                if (sub_402e40(rdi_21, &var_48) != 0)\n                {\n                    char rax_118;\n                    if (data_612431 != 0)\n                    {\n                        rax_118 = sub_402e40(rbp[data_6122dc], &var_50);\n                        if (rax_118 != 0)\n                        {\n                            int64_t rax_119 = var_50;\n                            data_612430 = 1;\n                            rbp = &rbp[2];\n                            r12_1 = 0;\n                            data_612418 = rax_119;\n                            var_60 = var_48;\n                        }\n                    }\n                    if ((data_612431 == 0 || (data_612431 != 0 && rax_118 == 0)))\n                    {\n                        r12_1 = 1;\n                        data_612418 = var_48;\n                        int64_t rax_103 = data_6122dc;\n                        rbp[(rax_103 + 1)] = rbp[rax_103];\n                        rbp = &rbp[1];\n                    }\n                    goto label_4020ff;\n                }\n                r12_1 = 2;\n            label_40263e:\n                if (data_612431 == 0)\n                {\n                    goto label_4020ff;\n                }\n                rax_29 = data_6122dc;\n            label_4025bb:\n                error(0, 0, dcgettext(nullptr, \"extra operand %s\", 5), sub_407210(rbp[(rax_29 + 1)]));\n                error(0, 0, \"%s\", dcgettext(nullptr, \"compatibility mode supports at m\u2026\", 5));\n                break;\n            }\n            if ((data_612432 != 0 && data_6123f0 != 0))\n            {\n                rax_7 = error(1, 0, dcgettext(nullptr, \"no type may be specified when du\u2026\", 5));\n            }\n        }\n        sub_407c50(rax_7, var_50, 0x77, &data_40cf80, data_6125e0);\n        /* no return */\n    }\n    sub_404960(1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x402c60",
            "funcEndAddr": "0x402c8a",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_402c8b",
            "funcStartAddr": "0x402c8b",
            "funcEndAddr": "0x402caa",
            "decompiledFuncCode": "void sub_402c8b()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_402caa",
            "funcStartAddr": "0x402caa",
            "funcEndAddr": "0x402ce1",
            "decompiledFuncCode": "int64_t sub_402caa()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_402ce1",
            "funcStartAddr": "0x402ce1",
            "funcEndAddr": "0x402d38",
            "decompiledFuncCode": "void sub_402ce1()\n{\n    if (data_612308 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_612310;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_612310 = (rax_1 + 1);\n        *(0x611e40 + ((rax_1 + 1) << 3))();\n    }\n    sub_402c8b();\n    data_612308 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_402d38",
            "funcStartAddr": "0x402d38",
            "funcEndAddr": "0x402d3d",
            "decompiledFuncCode": "int64_t j_sub_402caa()\n{\n    /* tailcall */\n    return sub_402caa();\n}\n\n"
        },
        {
            "funcName": "sub_402d40",
            "funcStartAddr": "0x402d40",
            "funcEndAddr": "0x402d41",
            "decompiledFuncCode": "int64_t sub_402d40()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_402d50",
            "funcStartAddr": "0x402d50",
            "funcEndAddr": "0x402e3d",
            "decompiledFuncCode": "int64_t sub_402d50(uint64_t arg1, char arg2)\n{\n    uint64_t r8 = arg1;\n    char var_11;\n    char* rcx = &var_11;\n    char var_10 = 0;\n    var_11 = arg2;\n    void* rdi = (&var_11 - data_612440);\n    int32_t rax_1 = data_612444;\n    if (rax_1 == 0xa)\n    {\n        while (true)\n        {\n            rcx = (rcx - 1);\n            int64_t rax_10;\n            int64_t rdx_1;\n            rdx_1 = HIGHD((r8 * -0x3333333333333333));\n            rax_10 = LOWD((r8 * -0x3333333333333333));\n            uint64_t rdx_2 = (rdx_1 >> 3);\n            char rax_11 = (rdx_2 + (rdx_2 << 2));\n            *rcx = ((r8 - (rax_11 + rax_11)) + 0x30);\n            if (r8 <= 9)\n            {\n                break;\n            }\n            r8 = rdx_2;\n        }\n    }\n    else if (rax_1 == 0x10)\n    {\n        do\n        {\n            rcx = (rcx - 1);\n            uint64_t rax_4 = (r8 & 0xf);\n            r8 = (r8 >> 4);\n            *rcx = *\"0123456789abcdef\"[rax_4];\n        } while (r8 != 0);\n    }\n    else if (rax_1 == 8)\n    {\n        do\n        {\n            rcx = (rcx - 1);\n            char rax_8 = ((r8 & 7) + 0x30);\n            r8 = (r8 >> 3);\n            *rcx = rax_8;\n        } while (r8 != 0);\n    }\n    if (((rax_1 == 0xa && rdi >= rcx) || (rax_1 != 0xa && rdi >= rcx)))\n    {\n        rdi = rcx;\n    }\n    if (((rax_1 == 0xa && rdi < rcx) || (rax_1 != 0xa && rdi < rcx)))\n    {\n        do\n        {\n            rcx = (rcx - 1);\n            *rcx = 0x30;\n        } while (rdi != rcx);\n    }\n    return fputs_unlocked(rdi, stdout);\n}\n\n"
        },
        {
            "funcName": "sub_402e40",
            "funcStartAddr": "0x402e40",
            "funcEndAddr": "0x402eb2",
            "decompiledFuncCode": "uint64_t sub_402e40(char* arg1, uint64_t* arg2)\n{\n    char rdx_3 = *arg1;\n    if (rdx_3 == 0)\n    {\n        return 0;\n    }\n    char* rbx = arg1;\n    int64_t rcx;\n    int64_t var_18 = rcx;\n    if (rdx_3 == 0x2b)\n    {\n        rbx = &rbx[1];\n    }\n    int32_t rdx = 0xa;\n    if (strchr(rbx, 0x2e) == 0)\n    {\n        rdx = 8;\n        if (*rbx == 0x30)\n        {\n            int64_t rdx_2;\n            rdx_2 = (rbx[1] & 0xdf) == 0x58;\n            rdx = ((rdx_2 << 3) + 8);\n        }\n    }\n    uint64_t rax_1;\n    rax_1 = sub_407ce0(rbx, nullptr, rdx, arg2, (&data_40c2d5)) == 0;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_402ec0",
            "funcStartAddr": "0x402ec0",
            "funcEndAddr": "0x402f71",
            "decompiledFuncCode": "void sub_402ec0(int64_t arg1, int64_t arg2, void* arg3, int64_t arg4, \n    int32_t arg5, uint32_t arg6)\n{\n    if (arg1 <= arg2)\n    {\n        return;\n    }\n    void* r14 = arg3;\n    int64_t r12 = arg6;\n    int64_t r15_1 = ((arg1 - 1) * r12);\n    void* rax = (arg3 + (arg1 - arg2));\n    do\n    {\n        r14 = (r14 + 1);\n        char rax_6 = (*(r14 - 1) & 0x7f);\n        if ((rax_6 != 0x7f && rax_6 > 0x20))\n        {\n            char var_3a_1 = rax_6;\n            char var_39_1 = 0;\n        }\n        r15_1 = (r15_1 - r12);\n        __sanitizer::Report(0);\n    } while (r14 != rax);\n}\n\n"
        },
        {
            "funcName": "sub_402f80",
            "funcStartAddr": "0x402f80",
            "funcEndAddr": "0x40304f",
            "decompiledFuncCode": "void sub_402f80(int64_t arg1, int64_t arg2, void* arg3, int64_t arg4, \n    int32_t arg5, uint32_t arg6)\n{\n    int64_t var_60 = arg4;\n    if (arg1 > arg2)\n    {\n        int64_t rax_1 = arg6;\n        void* r13_1 = arg3;\n        int64_t r14_1 = arg1;\n        int64_t r15_1 = ((arg1 - 1) * rax_1);\n        do\n        {\n            r14_1 = (r14_1 - 1);\n            if (data_612321 == 0)\n            {\n                *r13_1;\n            }\n            else\n            {\n                char* rdx_3 = (r13_1 + 7);\n                int64_t var_40;\n                int64_t* rax_5 = &var_40;\n                void var_38;\n                do\n                {\n                    char rdi_1 = *rdx_3;\n                    rax_5 = (rax_5 + 1);\n                    rdx_3 = (rdx_3 - 1);\n                    *(rax_5 - 1) = rdi_1;\n                } while (&var_38 != rax_5);\n            }\n            r13_1 = (r13_1 + 8);\n            __sanitizer::Report(0);\n            r15_1 = (r15_1 - rax_1);\n        } while (r14_1 != arg2);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_403050",
            "funcStartAddr": "0x403050",
            "funcEndAddr": "0x40311f",
            "decompiledFuncCode": "void sub_403050(int64_t arg1, int64_t arg2, void* arg3, int64_t arg4, \n    int32_t arg5, uint32_t arg6)\n{\n    int64_t var_60 = arg4;\n    if (arg1 > arg2)\n    {\n        int64_t rax_1 = arg6;\n        void* r13_1 = arg3;\n        int64_t r14_1 = arg1;\n        int64_t r15_1 = ((arg1 - 1) * rax_1);\n        do\n        {\n            r14_1 = (r14_1 - 1);\n            if (data_612321 == 0)\n            {\n                *r13_1;\n            }\n            else\n            {\n                char* rdx_3 = (r13_1 + 7);\n                int64_t var_40;\n                int64_t* rax_5 = &var_40;\n                void var_38;\n                do\n                {\n                    char rdi_1 = *rdx_3;\n                    rax_5 = (rax_5 + 1);\n                    rdx_3 = (rdx_3 - 1);\n                    *(rax_5 - 1) = rdi_1;\n                } while (&var_38 != rax_5);\n            }\n            r13_1 = (r13_1 + 8);\n            __sanitizer::Report(0);\n            r15_1 = (r15_1 - rax_1);\n        } while (r14_1 != arg2);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_403120",
            "funcStartAddr": "0x403120",
            "funcEndAddr": "0x4031ff",
            "decompiledFuncCode": "void sub_403120(int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t arg5, uint32_t arg6)\n{\n    uint64_t r14;\n    uint64_t var_10 = r14;\n    int64_t var_58 = arg4;\n    if (arg1 > arg2)\n    {\n        int64_t rax_1 = arg6;\n        int64_t r15_1 = 0;\n        int64_t rax_3 = (arg1 - arg2);\n        int64_t r13_1 = ((arg1 - 1) * rax_1);\n        do\n        {\n            if (data_612321 == 0)\n            {\n                *(arg3 + (r15_1 << 2));\n            }\n            else\n            {\n                r14 = *((arg3 + (r15_1 << 2)) + 3);\n                int16_t rax_7;\n                *rax_7[1] = *((arg3 + (r15_1 << 2)) + 2);\n                ((rax_7 | (*((arg3 + (r15_1 << 2)) + 1) << 0x10)) | (*(arg3 + (r15_1 << 2)) << 0x18));\n            }\n            r15_1 = (r15_1 + 1);\n            __sanitizer::Report(0);\n            r13_1 = (r13_1 - rax_1);\n        } while (rax_3 != r15_1);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_403200",
            "funcStartAddr": "0x403200",
            "funcEndAddr": "0x4032bf",
            "decompiledFuncCode": "void sub_403200(int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t arg5, uint32_t arg6)\n{\n    uint64_t r14;\n    uint64_t var_10 = r14;\n    int64_t var_58 = arg4;\n    if (arg1 > arg2)\n    {\n        int64_t rax_1 = arg6;\n        int64_t r15_1 = 0;\n        int64_t rax_3 = (arg1 - arg2);\n        int64_t r13_1 = ((arg1 - 1) * rax_1);\n        do\n        {\n            if (data_612321 == 0)\n            {\n                *(arg3 + (r15_1 << 1));\n            }\n            else\n            {\n                r14 = *((arg3 + (r15_1 << 1)) + 1);\n                int32_t rcx;\n                *rcx[1] = *(arg3 + (r15_1 << 1));\n            }\n            r15_1 = (r15_1 + 1);\n            __sanitizer::Report(0);\n            r13_1 = (r13_1 - rax_1);\n        } while (rax_3 != r15_1);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4032c0",
            "funcStartAddr": "0x4032c0",
            "funcEndAddr": "0x40337f",
            "decompiledFuncCode": "void sub_4032c0(int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t arg5, uint32_t arg6)\n{\n    uint64_t r14;\n    uint64_t var_10 = r14;\n    int64_t var_58 = arg4;\n    if (arg1 > arg2)\n    {\n        int64_t rax_1 = arg6;\n        int64_t r15_1 = 0;\n        int64_t rax_3 = (arg1 - arg2);\n        int64_t r13_1 = ((arg1 - 1) * rax_1);\n        do\n        {\n            if (data_612321 == 0)\n            {\n                *(arg3 + (r15_1 << 1));\n            }\n            else\n            {\n                r14 = *((arg3 + (r15_1 << 1)) + 1);\n                int32_t rcx;\n                *rcx[1] = *(arg3 + (r15_1 << 1));\n            }\n            r15_1 = (r15_1 + 1);\n            __sanitizer::Report(0);\n            r13_1 = (r13_1 - rax_1);\n        } while (rax_3 != r15_1);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_403380",
            "funcStartAddr": "0x403380",
            "funcEndAddr": "0x403402",
            "decompiledFuncCode": "void sub_403380(int64_t arg1, int64_t arg2, void* arg3, int64_t arg4, \n    int32_t arg5, uint32_t arg6)\n{\n    int64_t var_48 = arg4;\n    if (arg1 > arg2)\n    {\n        int64_t r12_1 = arg6;\n        void* r15_1 = arg3;\n        void* rax_1 = (arg3 + (arg1 - arg2));\n        int64_t r13_1 = ((arg1 - 1) * r12_1);\n        do\n        {\n            r15_1 = (r15_1 + 1);\n            *(r15_1 - 1);\n            r13_1 = (r13_1 - r12_1);\n            __sanitizer::Report(0);\n        } while (r15_1 != rax_1);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_403410",
            "funcStartAddr": "0x403410",
            "funcEndAddr": "0x403492",
            "decompiledFuncCode": "void sub_403410(int64_t arg1, int64_t arg2, void* arg3, int64_t arg4, \n    int32_t arg5, uint32_t arg6)\n{\n    int64_t var_48 = arg4;\n    if (arg1 > arg2)\n    {\n        int64_t r12_1 = arg6;\n        void* r15_1 = arg3;\n        void* rax_1 = (arg3 + (arg1 - arg2));\n        int64_t r13_1 = ((arg1 - 1) * r12_1);\n        do\n        {\n            r15_1 = (r15_1 + 1);\n            *(r15_1 - 1);\n            r13_1 = (r13_1 - r12_1);\n            __sanitizer::Report(0);\n        } while (r15_1 != rax_1);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4034a0",
            "funcStartAddr": "0x4034a0",
            "funcEndAddr": "0x40358f",
            "decompiledFuncCode": "void sub_4034a0(int64_t arg1, int64_t arg2, void* arg3, int64_t arg4, \n    int32_t arg5, uint32_t arg6)\n{\n    if (arg1 > arg2)\n    {\n        int64_t rax_1 = arg6;\n        int64_t r15_1 = arg1;\n        void* r13_1 = arg3;\n        int64_t r14_1 = ((arg1 - 1) * rax_1);\n        do\n        {\n            r15_1 = (r15_1 - 1);\n            long double var_68;\n            long double x87_r7_1;\n            if (data_612321 == 0)\n            {\n                x87_r7_1 = *r13_1;\n            }\n            else\n            {\n                char* rdx_3 = (r13_1 + 0xf);\n                int80_t* rax_4 = &var_68;\n                void var_58;\n                do\n                {\n                    char rcx = *rdx_3;\n                    rax_4 = (rax_4 + 1);\n                    rdx_3 = (rdx_3 - 1);\n                    *(rax_4 - 1) = rcx;\n                } while (&var_58 != rax_4);\n                x87_r7_1 = var_68;\n            }\n            r13_1 = (r13_1 + 0x10);\n            sub_4054d0(&var_68, 0x2d, 0, 0, x87_r7_1);\n            __sanitizer::Report(0);\n            r14_1 = (r14_1 - rax_1);\n        } while (r15_1 != arg2);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_403590",
            "funcStartAddr": "0x403590",
            "funcEndAddr": "0x40367f",
            "decompiledFuncCode": "void sub_403590(int64_t arg1, int64_t arg2, int64_t* arg3, int64_t arg4, \n    int32_t arg5, uint32_t arg6)\n{\n    if (arg1 > arg2)\n    {\n        int64_t rax_1 = arg6;\n        int64_t r15_1 = arg1;\n        int64_t* r13_1 = arg3;\n        int64_t r14_1 = ((arg1 - 1) * rax_1);\n        do\n        {\n            r15_1 = (r15_1 - 1);\n            int64_t var_68;\n            uint128_t zmm0;\n            if (data_612321 == 0)\n            {\n                zmm0 = *r13_1;\n            }\n            else\n            {\n                char* rdx_2 = (r13_1 + 7);\n                int64_t* rax_4 = &var_68;\n                void var_60;\n                do\n                {\n                    char rcx = *rdx_2;\n                    rax_4 = (rax_4 + 1);\n                    rdx_2 = (rdx_2 - 1);\n                    *(rax_4 - 1) = rcx;\n                } while (&var_60 != rax_4);\n                zmm0 = var_68;\n            }\n            r13_1 = &r13_1[1];\n            sub_405250(&var_68, 0x28, 0, 0, zmm0);\n            __sanitizer::Report(0);\n            r14_1 = (r14_1 - rax_1);\n        } while (r15_1 != arg2);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_403680",
            "funcStartAddr": "0x403680",
            "funcEndAddr": "0x40377f",
            "decompiledFuncCode": "void sub_403680(int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t arg5, uint32_t arg6)\n{\n    uint64_t r13;\n    uint64_t var_18 = r13;\n    if (arg1 > arg2)\n    {\n        int64_t rdi = arg6;\n        int64_t rax_2 = (arg1 - arg2);\n        int64_t r15_1 = 0;\n        int64_t r14_1 = ((arg1 - 1) * rdi);\n        do\n        {\n            uint32_t zmm0[0x4];\n            if (data_612321 == 0)\n            {\n                zmm0 = *(arg3 + (r15_1 << 2));\n            }\n            else\n            {\n                r13 = *((arg3 + (r15_1 << 2)) + 3);\n                int16_t rax_5;\n                *rax_5[1] = *((arg3 + (r15_1 << 2)) + 2);\n                zmm0 = ((rax_5 | (*((arg3 + (r15_1 << 2)) + 1) << 0x10)) | (*(arg3 + (r15_1 << 2)) << 0x18));\n            }\n            r15_1 = (r15_1 + 1);\n            void var_58;\n            sub_405390(&var_58, 0x1f, 0, 0, zmm0);\n            __sanitizer::Report(0);\n            r14_1 = (r14_1 - rdi);\n        } while (rax_2 != r15_1);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_403780",
            "funcStartAddr": "0x403780",
            "funcEndAddr": "0x4038f0",
            "decompiledFuncCode": "void sub_403780(int64_t arg1, int64_t arg2, void* arg3, int64_t arg4, \n    int32_t arg5, uint32_t arg6)\n{\n    if (arg1 > arg2)\n    {\n        int64_t r13_1 = arg6;\n        int64_t r15_2 = ((arg1 - 1) * r13_1);\n        void* r14_1 = arg3;\n        void* rax_1 = (arg3 + (arg1 - arg2));\n        do\n        {\n            r14_1 = (r14_1 + 1);\n            char r8 = *(r14_1 - 1);\n            uint64_t rdx_1 = r8;\n            if ((r8 > 0xd || (r8 <= 0xd && (((((rdx_1 == 1 || rdx_1 == 2) || rdx_1 == 3) || rdx_1 == 4) || rdx_1 == 5) || rdx_1 == 6))))\n            {\n                void* const rcx = &data_40c2e0;\n                uint64_t r8_1 = r8;\n                void var_3c;\n                char* rdi_1 = &var_3c;\n                if ((*(&*__ctype_b_loc()[rdx_1] + 1) & 0x40) == 0)\n                {\n                    rcx = \"%03o\";\n                }\n                __sprintf_chk(rdi_1, 1, 4, rcx, r8_1);\n            }\n            if ((r8 <= 0xd && rdx_1 == 7))\n            {\n                /* nop */\n            }\n            r15_2 = (r15_2 - r13_1);\n            __sanitizer::Report(0);\n        } while (r14_1 != rax_1);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4038f0",
            "funcStartAddr": "0x4038f0",
            "funcEndAddr": "0x403a45",
            "decompiledFuncCode": "uint64_t sub_4038f0(int32_t arg1)\n{\n    int32_t rbx = 1;\n    int64_t rax = data_6123c8;\n    if (rax != 0)\n    {\n        bool c_1 = false;\n        bool z_1 = (*rax & 0x20) == 0;\n        if ((!z_1))\n        {\n            char* rax_2 = sub_407090(0, 3, data_6123d8);\n            char* rax_3 = dcgettext(nullptr, \"%s: read error\", 5);\n            bool c_2 = false;\n            bool z_2 = (rax_3 ^ rax_3) == 0;\n            error(0, arg1, rax_3, rax_2);\n            void* const rdi_1 = &data_40f681;\n            int64_t rcx_3 = 2;\n            char* rsi_3 = *(data_6123d0 - 8);\n            while (rcx_3 != 0)\n            {\n                char temp3_1 = *rsi_3;\n                char temp4_1 = *rdi_1;\n                c_2 = temp3_1 < temp4_1;\n                z_2 = temp3_1 == temp4_1;\n                rsi_3 = &rsi_3[1];\n                rdi_1 = (rdi_1 + 1);\n                rcx_3 = (rcx_3 - 1);\n                if ((!z_2))\n                {\n                    break;\n                }\n            }\n            int64_t rax_5;\n            rax_5 = ((!z_2) && (!c_2));\n            rax_5 = (rax_5 - 0);\n            rbx = 0;\n            if (rax_5 != 0)\n            {\n                sub_408120(data_6123c8);\n            }\n        }\n        else\n        {\n            void* const rdi = &data_40f681;\n            int64_t rcx_1 = 2;\n            char* rsi_1 = *(data_6123d0 - 8);\n            while (rcx_1 != 0)\n            {\n                char temp5_1 = *rsi_1;\n                char temp6_1 = *rdi;\n                c_1 = temp5_1 < temp6_1;\n                z_1 = temp5_1 == temp6_1;\n                rsi_1 = &rsi_1[1];\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            int64_t rdx_1;\n            rdx_1 = ((!z_1) && (!c_1));\n            rdx_1 = (rdx_1 - 0);\n            int32_t rax_9;\n            if (rdx_1 != 0)\n            {\n                rax_9 = sub_408120(rax);\n                if (rax_9 != 0)\n                {\n                    rbx = 0;\n                    error(0, *__errno_location(), \"%s\", sub_407090(0, 3, data_6123d8));\n                }\n            }\n            if ((rdx_1 == 0 || (rdx_1 != 0 && rax_9 == 0)))\n            {\n                rbx = 1;\n            }\n        }\n        data_6123c8 = 0;\n    }\n    if ((*stdout & 0x20) != 0)\n    {\n        error(0, 0, dcgettext(nullptr, \"write error\", 5));\n        return 0;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_403a50",
            "funcStartAddr": "0x403a50",
            "funcEndAddr": "0x403b4f",
            "decompiledFuncCode": "uint64_t sub_403a50()\n{\n    int32_t rbx = 1;\n    while (true)\n    {\n        int64_t rax_3 = data_6123d0;\n        int64_t rdx_1 = *rax_3;\n        data_6123d8 = rdx_1;\n        if (rdx_1 == 0)\n        {\n            break;\n        }\n        void* const rdi_1 = &data_40f681;\n        int64_t rcx_1 = 2;\n        int64_t rsi_1 = rdx_1;\n        int64_t rax_4 = (rax_3 + 8);\n        bool c_1 = rax_3 >= -8;\n        bool z_1 = rax_3 == -8;\n        while (rcx_1 != 0)\n        {\n            char temp1_1 = *rsi_1;\n            char temp2_1 = *rdi_1;\n            c_1 = temp1_1 < temp2_1;\n            z_1 = temp1_1 == temp2_1;\n            rsi_1 = (rsi_1 + 1);\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z_1))\n            {\n                break;\n            }\n        }\n        data_6123d0 = rax_4;\n        rax_4 = ((!z_1) && (!c_1));\n        rax_4 = (rax_4 - 0);\n        FILE* rax_2;\n        if (rax_4 == 0)\n        {\n            char* rax_1 = dcgettext(nullptr, \"standard input\", 5);\n            data_6123c4 = 1;\n            data_6123d8 = rax_1;\n            rax_2 = stdin;\n            data_6123c8 = stdin;\n        }\n        else\n        {\n            rax_2 = fopen(rdx_1, &data_40c2f5);\n            data_6123c8 = rax_2;\n            if (rax_2 == 0)\n            {\n                rbx = 0;\n                error(0, *__errno_location(), \"%s\", sub_407090(0, 3, data_6123d8));\n                rax_2 = data_6123c8;\n            }\n        }\n        if (((rax_4 == 0 || (rax_4 != 0 && rax_2 == 0)) && rax_2 == 0))\n        {\n            continue;\n        }\n        if (data_612410 == 0)\n        {\n            break;\n        }\n        if (data_612432 == 0)\n        {\n            setvbuf(rax_2, nullptr, 2, 0);\n        }\n        break;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_403b50",
            "funcStartAddr": "0x403b50",
            "funcEndAddr": "0x403d14",
            "decompiledFuncCode": "uint64_t sub_403b50(off_t arg1)\n{\n    if (arg1 != 0)\n    {\n        int64_t rbp_1 = data_6123c8;\n        if (rbp_1 != 0)\n        {\n            off_t rbx_1 = arg1;\n            int32_t r12_1 = 1;\n            do\n            {\n                void var_20b8;\n                if (__fxstat(1, fileno(rbp_1), &var_20b8) != 0)\n                {\n                    r12_1 = 0;\n                    error(0, *__errno_location(), \"%s\", sub_407090(0, 3, data_6123d8));\n                }\n                else\n                {\n                    int32_t var_20a0;\n                    int64_t var_2088;\n                    int64_t rax_3;\n                    if ((var_20a0 & 0xd000) == 0x8000)\n                    {\n                        int64_t var_2080;\n                        rax_3 = var_2080;\n                        if ((rax_3 - 1) > 0x1fffffffffffffff)\n                        {\n                            rax_3 = 0x200;\n                        }\n                        if (var_2088 > rax_3)\n                        {\n                            if (var_2088 >= rbx_1)\n                            {\n                                if (sub_4081e0(rbp_1, rbx_1, 1) != 0)\n                                {\n                                    r12_1 = 0;\n                                }\n                                return r12_1;\n                            }\n                            rbx_1 = (rbx_1 - var_2088);\n                        }\n                    }\n                    if (((var_20a0 & 0xd000) != 0x8000 || ((var_20a0 & 0xd000) == 0x8000 && var_2088 <= rax_3)))\n                    {\n                        off_t rbp_3 = 0x2000;\n                        while (true)\n                        {\n                            FILE* r8_1 = data_6123c8;\n                            if (rbp_3 > rbx_1)\n                            {\n                                rbp_3 = rbx_1;\n                            }\n                            void var_2028;\n                            uint64_t rax_11 = __fread_unlocked_chk(&var_2028, 0x2000, 1, rbp_3, r8_1);\n                            rbx_1 = (rbx_1 - rax_11);\n                            if (rax_11 != rbp_3)\n                            {\n                                char rax_13 = **&data_6123c8;\n                                if (((rax_13 & 0x20) == 0 && (rax_13 & 0x10) != 0))\n                                {\n                                    break;\n                                }\n                                if ((rax_13 & 0x20) != 0)\n                                {\n                                    return 0;\n                                }\n                            }\n                            if (rbx_1 == 0)\n                            {\n                                return r12_1;\n                            }\n                        }\n                        if (rbx_1 == 0)\n                        {\n                            return r12_1;\n                        }\n                    }\n                }\n                int32_t r12_2 = (r12_1 & sub_4038f0(0));\n                rbp_1 = data_6123c8;\n                r12_1 = (r12_2 & sub_403a50());\n            } while (rbp_1 != 0);\n        }\n        error(1, 0, dcgettext(nullptr, \"cannot skip past end of combined\u2026\", 5));\n    }\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_403d20",
            "funcStartAddr": "0x403d20",
            "funcEndAddr": "0x403d78",
            "decompiledFuncCode": "uint64_t sub_403d20(int32_t* arg1)\n{\n    int32_t* r12 = arg1;\n    int32_t rbp = 1;\n    *arg1 = 0xffffffff;\n    int64_t rdi = data_6123c8;\n    if (rdi != 0)\n    {\n        do\n        {\n            int32_t rax_4 = fgetc(rdi);\n            *r12 = rax_4;\n            if (rax_4 != 0xffffffff)\n            {\n                break;\n            }\n            rdi = data_6123c8;\n            rbp = (rbp & (sub_4038f0(*__errno_location()) & sub_403a50()));\n        } while (rdi != 0);\n    }\n    return rbp;\n}\n\n"
        },
        {
            "funcName": "sub_403d80",
            "funcStartAddr": "0x403d80",
            "funcEndAddr": "0x40400f",
            "decompiledFuncCode": "void sub_403d80(int64_t arg1, uint64_t arg2, int64_t arg3, void* arg4)\n{\n    if (data_612251 == 0)\n    {\n    label_403daf:\n        bool cond:1_1 = data_6123f0 == 0;\n        data_612320 = 0;\n        if ((!cond:1_1))\n        {\n            void* rax_1 = (arg4 + arg2);\n            int64_t rbp_1 = 0;\n            do\n            {\n                int64_t r12_1 = data_6123e0;\n                int64_t rbx_3 = (rbp_1 * 0x28);\n                int64_t rcx_1 = *((*((data_6123f8 + rbx_3) + 4) << 2) + 0x40d220);\n                int64_t r12_2 = (r12_1 - arg2);\n                uint32_t temp0_1 = (COMBINE(0, r12_1) / rcx_1);\n                int64_t rdx_3 = 0;\n                uint32_t temp0_2 = (COMBINE(rdx_3, r12_2) / rcx_1);\n                uint64_t temp1_1 = (COMBINE(rdx_3, r12_2) % rcx_1);\n                if (rbp_1 == 0)\n                {\n                    data_612420(arg1, 0, temp1_1);\n                }\n                else\n                {\n                    __printf_chk(1, &data_40c2dc, data_612440, 0x40fbbc);\n                }\n                int64_t rax_3 = (data_6123f8 + rbx_3);\n                *(rax_3 + 8)(temp0_1, temp0_2, arg4, (rax_3 + 0x10), *(rax_3 + 0x1c), *(rax_3 + 0x20));\n                int64_t rbx_1 = (rbx_3 + data_6123f8);\n                if (*(rbx_1 + 0x18) != 0)\n                {\n                    int32_t temp3_1;\n                    int32_t temp4_1;\n                    temp3_1 = HIGHW((*(rbx_1 + 0x20) * temp0_2));\n                    temp4_1 = LOWW((*(rbx_1 + 0x20) * temp0_2));\n                    __printf_chk(1, &data_40c2dc, ((COMBINE(temp3_1, temp4_1) / temp0_1) + (temp0_2 * *(rbx_1 + 0x1c))), 0x40fbbc);\n                    fwrite_unlocked(&data_40c32c, 1, 3, stdout);\n                    if (arg2 != 0)\n                    {\n                        uint16_t** rax_16 = __ctype_b_loc();\n                        void* rbx_4 = arg4;\n                        do\n                        {\n                            rbx_4 = (rbx_4 + 1);\n                            uint64_t rcx_3 = *(rbx_4 - 1);\n                            char rax_17 = rcx_3;\n                            uint32_t rsi_1 = rcx_3;\n                            if ((*(&*rax_16[rcx_3] + 1) & 0x40) == 0)\n                            {\n                                rsi_1 = 0x2e;\n                                rax_17 = 0x2e;\n                            }\n                            FILE* rdi_3 = stdout;\n                            char* rdx_9 = stdout[5];\n                            if (rdx_9 >= stdout[6])\n                            {\n                                __overflow(rdi_3, rsi_1);\n                            }\n                            else\n                            {\n                                stdout[5] = &rdx_9[1];\n                                *rdx_9 = rax_17;\n                            }\n                        } while (rbx_4 != rax_1);\n                    }\n                    uint64_t* const rdi_4 = stdout;\n                    char* rax_18 = stdout[5];\n                    if (rax_18 >= stdout[6])\n                    {\n                        __overflow(rdi_4, 0x3c);\n                    }\n                    else\n                    {\n                        stdout[5] = &rax_18[1];\n                        *rax_18 = 0x3c;\n                    }\n                }\n                uint64_t* const rdi_2 = stdout;\n                char* rax = stdout[5];\n                if (rax >= stdout[6])\n                {\n                    __overflow(rdi_2, 0xa);\n                }\n                else\n                {\n                    stdout[5] = &rax[1];\n                    *rax = 0xa;\n                }\n                rbp_1 = (rbp_1 + 1);\n            } while (data_6123f0 > rbp_1);\n        }\n    }\n    else\n    {\n        if (data_612250 != 0)\n        {\n            goto label_403daf;\n        }\n        if (data_6123e0 != arg2)\n        {\n            goto label_403daf;\n        }\n        if (memcmp(arg3, arg4, arg2) != 0)\n        {\n            goto label_403daf;\n        }\n        if (data_612320 == 0)\n        {\n            puts(&data_40c32a);\n            data_612320 = 1;\n        }\n    }\n    data_612250 = 0;\n}\n\n"
        },
        {
            "funcName": "sub_404010",
            "funcStartAddr": "0x404010",
            "funcEndAddr": "0x40408c",
            "decompiledFuncCode": "char* sub_404010(uint64_t arg1, char arg2)\n{\n    uint64_t* const rdi = stdout;\n    char* rax = stdout[5];\n    if (rax >= stdout[6])\n    {\n        __overflow(rdi, 0x28);\n    }\n    else\n    {\n        stdout[5] = &rax[1];\n        *rax = 0x28;\n    }\n    char* rax_1 = sub_402d50(arg1, 0x29);\n    if (arg2 != 0)\n    {\n        uint64_t* const rdi_2 = stdout;\n        rax_1 = stdout[5];\n        if (rax_1 >= stdout[6])\n        {\n            /* tailcall */\n            return __overflow(rdi_2, arg2);\n        }\n        stdout[5] = &rax_1[1];\n        *rax_1 = arg2;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_404090",
            "funcStartAddr": "0x404090",
            "funcEndAddr": "0x4040be",
            "decompiledFuncCode": "int64_t sub_404090(uint64_t arg1, char arg2)\n{\n    sub_402d50(arg1, 0x20);\n    /* tailcall */\n    return sub_404010((arg1 + data_612428), arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4040c0",
            "funcStartAddr": "0x4040c0",
            "funcEndAddr": "0x404894",
            "decompiledFuncCode": "int64_t sub_4040c0(char* arg1)\n{\n    int64_t rax = data_6123f0;\n    if (*arg1 == 0)\n    {\n        return 1;\n    }\n    char* r15 = arg1;\n    int32_t var_40;\n    int64_t rbx_2;\n    char const* const rsi_2;\n    while (true)\n    {\n        int64_t rcx_9 = data_6123e8;\n        int64_t rdi = data_6123f8;\n        if (rcx_9 <= rax)\n        {\n            size_t rsi_4;\n            if (rdi == 0)\n            {\n                if (rcx_9 == 0)\n                {\n                    rsi_4 = 0x78;\n                    rcx_9 = 3;\n                label_4043df:\n                    data_6123e8 = rcx_9;\n                    int64_t rax_25 = sub_407830(rdi, rsi_4);\n                    rdi = rax_25;\n                    data_6123f8 = rax_25;\n                    rax = data_6123f0;\n                }\n                else\n                {\n                    int64_t rax_34;\n                    bool rdx_9;\n                    rdx_9 = HIGHD((0x28 * rcx_9));\n                    rax_34 = LOWD((0x28 * rcx_9));\n                    uint64_t rdx_10 = ((0x28 * rcx_9) >> 0x40) != 0;\n                    if (rax_34 < 0)\n                    {\n                        goto label_404578;\n                    }\n                    if (rdx_10 != 0)\n                    {\n                        goto label_404578;\n                    }\n                }\n            }\n            else\n            {\n                if (rcx_9 > 0x222222222222221)\n                {\n                label_404578:\n                    sub_407a20();\n                    /* no return */\n                }\n                rcx_9 = ((rcx_9 + (rcx_9 >> 1)) + 1);\n            }\n            if (((rdi == 0 && rcx_9 != 0) || rdi != 0))\n            {\n                rsi_4 = (rcx_9 * 0x28);\n                goto label_4043df;\n            }\n        }\n        int64_t rbp_1 = (rdi + (rax * 0x28));\n        if (rbp_1 == 0)\n        {\n            __assert_fail(\"tspec != NULL\", \"src/od.c\", 0x285, \"decode_one_format\");\n            /* no return */\n        }\n        char rcx_1 = *r15;\n        char rax_2 = (rcx_1 - 0x61);\n        int32_t rax_15;\n        int64_t rdx_7;\n        void* rbx_1;\n        int32_t r11_2;\n        int32_t r14_1;\n        if (rax_2 <= 0x17)\n        {\n            switch (rax_2)\n            {\n                case 0:\n                {\n                    rbx_1 = &r15[1];\n                    r11_2 = 3;\n                    rdx_7 = 0x402ec0;\n                    rax_15 = 5;\n                    r14_1 = 1;\n                    goto label_4042ea;\n                }\n                case 2:\n                {\n                    rbx_1 = &r15[1];\n                    r11_2 = 3;\n                    rdx_7 = 0x403780;\n                    rax_15 = 6;\n                    r14_1 = 1;\n                label_4042ea:\n                    *rbp_1 = rax_15;\n                    *(rbp_1 + 4) = r14_1;\n                    *(rbp_1 + 8) = rdx_7;\n                    *(rbp_1 + 0x1c) = r11_2;\n                    rax_15 = *rbx_1 == 0x7a;\n                    *(rbp_1 + 0x18) = rax_15;\n                    void* rbx_3 = (rbx_1 + rax_15);\n                    if (rbx_3 == r15)\n                    {\n                        __assert_fail(\"s != next\", \"src/od.c\", 0x3e3, \"decode_format_string\");\n                        /* no return */\n                    }\n                    r15 = rbx_3;\n                    rax = (data_6123f0 + 1);\n                    bool cond:2_1 = *rbx_3 != 0;\n                    data_6123f0 = rax;\n                    if ((!cond:2_1))\n                    {\n                        return 1;\n                    }\n                    continue;\n                }\n                case 3:\n                case 0xe:\n                case 0x14:\n                case 0x17:\n                {\n                    int32_t rax_12 = r15[1];\n                    bool cond:1_1 = rax_12 <= 0x49;\n                    int64_t r8_3;\n                    bool cond:4_1;\n                    if (rax_12 == 0x49)\n                    {\n                        rbx_1 = &r15[2];\n                        r14_1 = data_6123b0;\n                        r8_3 = 4;\n                    label_404254:\n                        cond:4_1 = rcx_1 <= 0x6f;\n                        if (rcx_1 == 0x6f)\n                        {\n                        label_40442e:\n                            int32_t r11_3 = *((r8_3 << 2) + 0x40d380);\n                            void* const r9_1 = &data_40c333;\n                            char* rdi_4 = (rbp_1 + 0x10);\n                            if ((r14_1 - 4) >= 2)\n                            {\n                                r9_1 = \"o\";\n                            }\n                            __sprintf_chk(rdi_4, 1, 8, \"%%*.%d%s\", r11_3, r9_1);\n                            rax_15 = 2;\n                            r11_2 = r11_3;\n                        }\n                    }\n                    else\n                    {\n                        if ((cond:1_1 && rax_12 == 0x43))\n                        {\n                            rbx_1 = &r15[2];\n                            r14_1 = *data_6123a4;\n                            r8_3 = 1;\n                            cond:4_1 = rcx_1 <= 0x6f;\n                            if (rcx_1 == 0x6f)\n                            {\n                                goto label_40442e;\n                            }\n                        }\n                        if ((!cond:1_1))\n                        {\n                            if (rax_12 == 0x4c)\n                            {\n                                rbx_1 = &r15[2];\n                                r14_1 = data_6123c0;\n                                r8_3 = 8;\n                                goto label_404254;\n                            }\n                            if (rax_12 == 0x53)\n                            {\n                                r14_1 = *(data_6123a4 + 4);\n                                rbx_1 = &r15[2];\n                                r8_3 = 2;\n                                goto label_404254;\n                            }\n                        }\n                        if (((cond:1_1 && rax_12 != 0x43) || (!cond:1_1)))\n                        {\n                            int32_t rax_37 = (rax_12 - 0x30);\n                            void* rsi_5 = &r15[1];\n                            if (rax_37 > 9)\n                            {\n                                r14_1 = data_6123b0;\n                                rbx_1 = rsi_5;\n                                r8_3 = 4;\n                                goto label_404254;\n                            }\n                            rbx_1 = &r15[2];\n                            int64_t rdi_8 = rax_37;\n                            r8_3 = 0;\n                            int32_t rax_42;\n                            int64_t rdx_13;\n                            do\n                            {\n                                r8_3 = (rdi_8 + (r8_3 * 0xa));\n                                rax_42 = (*rbx_1 - 0x30);\n                                if (rax_42 > 9)\n                                {\n                                    break;\n                                }\n                                rdi_8 = rax_42;\n                                rbx_1 = (rbx_1 + 1);\n                                int64_t rax_39;\n                                rdx_13 = HIGHD(((!rdi_8) * -0x3333333333333333));\n                                rax_39 = LOWD(((!rdi_8) * -0x3333333333333333));\n                            } while ((rdx_13 >> 3) >= r8_3);\n                            if (rax_42 <= 9)\n                            {\n                                goto label_404773;\n                            }\n                            if (rbx_1 == rsi_5)\n                            {\n                                r14_1 = data_6123b0;\n                                r8_3 = 4;\n                            }\n                            else\n                            {\n                                if (r8_3 <= 8)\n                                {\n                                    r14_1 = *((r8_3 << 2) + 0x6123a0);\n                                }\n                                if ((r8_3 > 8 || (r8_3 <= 8 && r14_1 == 0)))\n                                {\n                                    var_40 = r8_3;\n                                    rsi_2 = \"invalid type string %s;\\nthis sy\u2026\";\n                                    rbx_2 = sub_407210(arg1);\n                                    break;\n                                }\n                            }\n                            goto label_404254;\n                        }\n                    }\n                    if (((rax_12 == 0x49 && rcx_1 != 0x6f) || rax_12 != 0x49))\n                    {\n                        if (cond:4_1)\n                        {\n                            if (rcx_1 != 0x64)\n                            {\n                            label_4045ce:\n                                abort();\n                                /* no return */\n                            }\n                            char* rdi_6 = (rbp_1 + 0x10);\n                            int32_t r11_5 = *((r8_3 << 2) + 0x40d320);\n                            void* const r8_8 = &data_40c330;\n                            if ((r14_1 - 4) >= 2)\n                            {\n                                r8_8 = \"d\";\n                            }\n                            __sprintf_chk(rdi_6, 1, 8, \"%%*%s\", r8_8);\n                            if (r14_1 > 5)\n                            {\n                                goto label_4045ce;\n                            }\n                            r11_2 = r11_5;\n                            switch (r14_1)\n                            {\n                                case 0:\n                                {\n                                    goto label_4045ce;\n                                }\n                                case 1:\n                                {\n                                    rdx_7 = 0x403410;\n                                    rax_15 = 0;\n                                    goto label_4042ea;\n                                }\n                                case 2:\n                                {\n                                    rdx_7 = 0x4032c0;\n                                    rax_15 = 0;\n                                    goto label_4042ea;\n                                }\n                                case 3:\n                                {\n                                    rdx_7 = 0x403120;\n                                    rax_15 = 0;\n                                    goto label_4042ea;\n                                }\n                                case 4:\n                                {\n                                    rdx_7 = 0x403050;\n                                    rax_15 = 0;\n                                    goto label_4042ea;\n                                }\n                                case 5:\n                                {\n                                    rdx_7 = 0x402f80;\n                                    rax_15 = 0;\n                                    goto label_4042ea;\n                                }\n                            }\n                        }\n                        else if (rcx_1 == 0x75)\n                        {\n                            char* rdi_2 = (rbp_1 + 0x10);\n                            int32_t r11_1 = *((r8_3 << 2) + 0x40d2c0);\n                            void* const r8_4 = &data_40c336;\n                            if ((r14_1 - 4) >= 2)\n                            {\n                                r8_4 = &data_40c337;\n                            }\n                            __sprintf_chk(rdi_2, 1, 8, \"%%*%s\", r8_4);\n                            r11_2 = r11_1;\n                            rax_15 = 1;\n                        }\n                        else\n                        {\n                            if (rcx_1 != 0x78)\n                            {\n                                goto label_4045ce;\n                            }\n                            int32_t r11_4 = *((r8_3 << 2) + 0x40d260);\n                            void* const r9_2 = &data_40c339;\n                            char* rdi_5 = (rbp_1 + 0x10);\n                            if ((r14_1 - 4) >= 2)\n                            {\n                                r9_2 = &data_40c49b;\n                            }\n                            __sprintf_chk(rdi_5, 1, 8, \"%%*.%d%s\", r11_4, r9_2);\n                            if (r14_1 > 5)\n                            {\n                                goto label_4045ce;\n                            }\n                            r11_2 = r11_4;\n                            switch (r14_1)\n                            {\n                                case 0:\n                                {\n                                    goto label_4045ce;\n                                }\n                                case 1:\n                                {\n                                    rdx_7 = 0x403380;\n                                    rax_15 = 3;\n                                    goto label_4042ea;\n                                }\n                                case 2:\n                                {\n                                    rdx_7 = 0x403200;\n                                    rax_15 = 3;\n                                    goto label_4042ea;\n                                }\n                                case 3:\n                                {\n                                    rdx_7 = 0x403120;\n                                    rax_15 = 3;\n                                    goto label_4042ea;\n                                }\n                                case 4:\n                                {\n                                    rdx_7 = 0x403050;\n                                    rax_15 = 3;\n                                    goto label_4042ea;\n                                }\n                                case 5:\n                                {\n                                    rdx_7 = 0x402f80;\n                                    rax_15 = 3;\n                                    goto label_4042ea;\n                                }\n                            }\n                        }\n                    }\n                    if (((rax_12 == 0x49 && rcx_1 == 0x6f) || (((rax_12 == 0x49 && rcx_1 != 0x6f) || rax_12 != 0x49) && (!cond:4_1))))\n                    {\n                        if (r14_1 > 5)\n                        {\n                            goto label_4045ce;\n                        }\n                        switch (r14_1)\n                        {\n                            case 0:\n                            {\n                                goto label_4045ce;\n                            }\n                            case 1:\n                            {\n                                rdx_7 = 0x403380;\n                                goto label_4042ea;\n                            }\n                            case 2:\n                            {\n                                rdx_7 = 0x403200;\n                                goto label_4042ea;\n                            }\n                            case 3:\n                            {\n                                rdx_7 = 0x403120;\n                                goto label_4042ea;\n                            }\n                            case 4:\n                            {\n                                rdx_7 = 0x403050;\n                                goto label_4042ea;\n                            }\n                            case 5:\n                            {\n                                rdx_7 = 0x402f80;\n                                goto label_4042ea;\n                            }\n                        }\n                    }\n                    break;\n                }\n                case 5:\n                {\n                    char rax_4 = r15[1];\n                    if (rax_4 == 0x46)\n                    {\n                        rbx_1 = &r15[2];\n                        r14_1 = data_612350;\n                    label_404590:\n                        char* rdi_7 = localeconv()->decimal_point;\n                        int32_t rax_36 = 1;\n                        if (*rdi_7 != 0)\n                        {\n                            rax_36 = strlen(rdi_7);\n                        }\n                        if (r14_1 == 7)\n                        {\n                            r11_2 = (rax_36 + 0x17);\n                            rdx_7 = 0x403590;\n                            rax_15 = 4;\n                            goto label_4042ea;\n                        }\n                        if (r14_1 == 8)\n                        {\n                            r11_2 = (rax_36 + 0x1c);\n                            rdx_7 = 0x4034a0;\n                            rax_15 = 4;\n                            goto label_4042ea;\n                        }\n                        if (r14_1 != 6)\n                        {\n                            goto label_4045ce;\n                        }\n                        r11_2 = (rax_36 + 0xe);\n                        rdx_7 = 0x403680;\n                        rax_15 = 4;\n                        goto label_4042ea;\n                    }\n                    if (rax_4 == 0x4c)\n                    {\n                        rbx_1 = &r15[2];\n                        r14_1 = data_612380;\n                        goto label_404590;\n                    }\n                    if (rax_4 == 0x44)\n                    {\n                        r14_1 = data_612360;\n                        rbx_1 = &r15[2];\n                        goto label_404590;\n                    }\n                    void* rsi_1 = &r15[1];\n                    int32_t rcx_3 = (rax_4 - 0x30);\n                    if (rcx_3 > 9)\n                    {\n                        r14_1 = data_612360;\n                        rbx_1 = rsi_1;\n                        goto label_404590;\n                    }\n                    rbx_1 = &r15[2];\n                    int64_t rcx_4 = rcx_3;\n                    int64_t r8_1 = 0;\n                    int32_t rcx_6;\n                    int64_t rdx_3;\n                    do\n                    {\n                        r8_1 = (rcx_4 + (r8_1 * 0xa));\n                        rcx_6 = (*rbx_1 - 0x30);\n                        if (rcx_6 > 9)\n                        {\n                            break;\n                        }\n                        rcx_4 = rcx_6;\n                        rbx_1 = (rbx_1 + 1);\n                        int64_t rax_6;\n                        rdx_3 = HIGHD(((!rcx_4) * -0x3333333333333333));\n                        rax_6 = LOWD(((!rcx_4) * -0x3333333333333333));\n                    } while ((rdx_3 >> 3) >= r8_1);\n                    if (rcx_6 <= 9)\n                    {\n                    label_404773:\n                        error(0, 0, dcgettext(nullptr, \"invalid type string %s\", 5), sub_407210(arg1));\n                        return 0;\n                    }\n                    r14_1 = data_612360;\n                    if (rsi_1 != rbx_1)\n                    {\n                        if (r8_1 <= 0x10)\n                        {\n                            r14_1 = *((r8_1 << 2) + 0x612340);\n                        }\n                        if ((r8_1 > 0x10 || (r8_1 <= 0x10 && r14_1 == 0)))\n                        {\n                            var_40 = r8_1;\n                            rsi_2 = \"invalid type string %s;\\nthis sy\u2026\";\n                            rbx_2 = sub_407210(arg1);\n                            break;\n                        }\n                    }\n                    goto label_404590;\n                }\n            }\n        }\n        error(0, 0, dcgettext(nullptr, \"invalid character '%c' in type s\u2026\", 5), *r15, sub_407210(arg1));\n        return 0;\n    }\n    error(0, 0, dcgettext(nullptr, rsi_2, 5), rbx_2, var_40);\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_4048a0",
            "funcStartAddr": "0x4048a0",
            "funcEndAddr": "0x404952",
            "decompiledFuncCode": "uint64_t sub_4048a0(int64_t arg1, int64_t arg2, int64_t* arg3)\n{\n    if ((arg1 != 0 && data_6123e0 >= arg1))\n    {\n        int64_t rcx = data_6123c8;\n        *arg3 = 0;\n        int32_t rbp;\n        if (rcx == 0)\n        {\n            rbp = 1;\n        }\n        else\n        {\n            int64_t rdi = 0;\n            rbp = 1;\n            while (true)\n            {\n                uint64_t r14_4 = (arg1 - rdi);\n                uint64_t rax_4 = fread_unlocked((rdi + arg2), 1, r14_4, rcx);\n                *arg3 = (*arg3 + rax_4);\n                if (r14_4 == rax_4)\n                {\n                    break;\n                }\n                rcx = data_6123c8;\n                rbp = (rbp & (sub_4038f0(*__errno_location()) & sub_403a50()));\n                if (rcx == 0)\n                {\n                    break;\n                }\n                rdi = *arg3;\n            }\n        }\n        return rbp;\n    }\n    __assert_fail(\"0 < n && n <= bytes_per_block\", \"src/od.c\", 0x507, \"read_block\");\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404960",
            "funcStartAddr": "0x404960",
            "funcEndAddr": "0x404dfd",
            "decompiledFuncCode": "int64_t sub_404960(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_612458;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [OPTION]... [FILE]...\\n\u2026\", 5), rbp, rbp, rbp);\n        fputs_unlocked(dcgettext(nullptr, \"\\nWrite an unambiguous represent\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nWith no FILE, or when FILE is \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nIf first and second call forma\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nMandatory arguments to long op\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -A, --address-radix=RADIX   ou\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -N, --read-bytes=BYTES      li\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\n\\nTraditional format specifica\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -f   same as -t fF, select flo\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\n\\nTYPE is made up of one or mo\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  d[SIZE]    signed decimal, SIZ\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nSIZE is a number.  For TYPE in\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nAdding a z suffix to any type \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\n\\nBYTES is hex with 0x or 0X p\u2026\", 5), stdout);\n        void* const var_88 = &data_40c3a4;\n        void* const* rax_19 = &var_88;\n        char const* const var_78_1 = \"coreutils\";\n        char const* const var_70_1 = \"Multi-call invocation\";\n        char const* const var_68_1 = \"sha224sum\";\n        char const* const var_60_1 = \"sha2 utilities\";\n        char const* const var_58_1 = \"sha256sum\";\n        char const* const var_50_1 = \"sha2 utilities\";\n        char const* const var_48_1 = \"sha384sum\";\n        char const* const var_40_1 = \"sha2 utilities\";\n        char const* const var_38_1 = \"sha512sum\";\n        char const* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_19 = &rax_19[2];\n            void* const rdi_17 = *rax_19;\n            c_1 = false;\n            z_1 = (rdi_17 & rdi_17) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_17 = &data_40c3a1;\n            int64_t rcx_2 = 3;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_17;\n                char temp1_1 = *rdi_17;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_17 = (rsi_17 + 1);\n                rdi_17 = (rdi_17 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbp_1 = rax_19[1];\n        char* rax_30;\n        int32_t rax_31;\n        char const* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_5;\n            uint64_t r8_3;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_30 = setlocale(5, nullptr, rdx_5, rcx_5, r8_3, r9_2, var_88, \"test invocation\");\n            if (rax_30 != 0)\n            {\n                rax_31 = strncmp(rax_30, &data_40c428, 3);\n                if (rax_31 != 0)\n                {\n                    rbp_1 = &data_40c3a1;\n                }\n            }\n            if ((rax_30 == 0 || (rax_30 != 0 && rax_31 == 0)))\n            {\n                rbp_1 = &data_40c3a1;\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", &data_40c3a1);\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_3;\n            uint64_t r8_2;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_22 = setlocale(5, nullptr, rdx_3, rcx_3, r8_2, r9_1, var_88, \"test invocation\");\n            if (rax_22 == 0)\n            {\n                goto label_404cf0;\n            }\n            if (strncmp(rax_22, &data_40c428, 3) == 0)\n            {\n                goto label_404cf0;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_30 != 0) && rax_31 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), &data_40c3a1);\n        label_404cf0:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", &data_40c3a1);\n            if (rbp_1 != &data_40c3a1)\n            {\n                r12_1 = &data_40fba1[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404e00",
            "funcStartAddr": "0x404e00",
            "funcEndAddr": "0x404e0a",
            "decompiledFuncCode": "int64_t sub_404e00() __noreturn\n{\n    /* tailcall */\n    return sub_404960(1);\n}\n\n"
        },
        {
            "funcName": "sub_404e10",
            "funcStartAddr": "0x404e10",
            "funcEndAddr": "0x404f26",
            "decompiledFuncCode": "int64_t sub_404e10(char* arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t rbp = arg3;\n    uint64_t rax = strlen(arg1);\n    char* r14 = *arg2;\n    int64_t var_58 = -1;\n    if (r14 != 0)\n    {\n        char var_41_1 = 0;\n        int64_t rbx_1 = 0;\n        while (true)\n        {\n            if (strncmp(r14, arg1, rax) == 0)\n            {\n                if (strlen(r14) == rax)\n                {\n                    var_58 = rbx_1;\n                    break;\n                }\n                if (var_58 == -1)\n                {\n                    var_58 = rbx_1;\n                    rbx_1 = (rbx_1 + 1);\n                    rbp = (rbp + arg4);\n                    r14 = arg2[rbx_1];\n                    if (r14 != 0)\n                    {\n                        continue;\n                    }\n                    goto label_404eed;\n                }\n                if (arg3 == 0)\n                {\n                    var_41_1 = 1;\n                }\n                else\n                {\n                    char rax_3 = var_41_1;\n                    if (memcmp(((var_58 * arg4) + arg3), rbp, arg4) != 0)\n                    {\n                        rax_3 = 1;\n                    }\n                    var_41_1 = rax_3;\n                }\n            }\n            rbx_1 = (rbx_1 + 1);\n            rbp = (rbp + arg4);\n            r14 = arg2[rbx_1];\n            if (r14 == 0)\n            {\n            label_404eed:\n                int64_t rax_6 = -2;\n                if (var_41_1 == 0)\n                {\n                    rax_6 = var_58;\n                }\n                var_58 = rax_6;\n                break;\n            }\n        }\n    }\n    return var_58;\n}\n\n"
        },
        {
            "funcName": "sub_404f30",
            "funcStartAddr": "0x404f30",
            "funcEndAddr": "0x404fa1",
            "decompiledFuncCode": "int64_t sub_404f30(uint64_t arg1, uint64_t arg2, int64_t arg3)\n{\n    char* rbx;\n    if (arg3 == -1)\n    {\n        rbx = dcgettext(nullptr, \"invalid argument %s for %s\", 5);\n    }\n    else\n    {\n        rbx = dcgettext(nullptr, \"ambiguous argument %s for %s\", 5);\n    }\n    /* tailcall */\n    return error(0, 0, rbx, sub_406ee0(0, 8, arg2), sub_4071f0(1, arg1));\n}\n\n"
        },
        {
            "funcName": "sub_404fb0",
            "funcStartAddr": "0x404fb0",
            "funcEndAddr": "0x4050c8",
            "decompiledFuncCode": "char* sub_404fb0(int64_t* arg1, int64_t arg2, uint64_t arg3)\n{\n    int64_t r14 = 0;\n    int64_t rbp = arg2;\n    int64_t rbx = 0;\n    fputs_unlocked(dcgettext(nullptr, \"Valid arguments are:\", 5), stderr);\n    uint64_t r12 = *arg1;\n    if (r12 != 0)\n    {\n        do\n        {\n            if ((rbx != 0 && memcmp(r14, rbp, arg3) == 0))\n            {\n                rbx = (rbx + 1);\n                rbp = (rbp + arg3);\n                __fprintf_chk(stderr, 1, \", %s\", sub_407210(r12));\n                r12 = arg1[rbx];\n                if (r12 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = (rbx + 1);\n            r14 = rbp;\n            rbp = (rbp + arg3);\n            __fprintf_chk(stderr, 1, \"\\n  - %s\", sub_407210(r12));\n            r12 = arg1[rbx];\n        } while (r12 != 0);\n    }\n    uint64_t* const rdi_6 = stderr;\n    char* rax_6 = stderr[5];\n    if (rax_6 >= stderr[6])\n    {\n        /* tailcall */\n        return __overflow(rdi_6, 0xa);\n    }\n    stderr[5] = &rax_6[1];\n    *rax_6 = 0xa;\n    return rax_6;\n}\n\n"
        },
        {
            "funcName": "sub_4050d0",
            "funcStartAddr": "0x4050d0",
            "funcEndAddr": "0x405140",
            "decompiledFuncCode": "int64_t sub_4050d0(uint64_t arg1, char* arg2, int64_t* arg3, int64_t arg4, \n    uint64_t arg5, int64_t arg6)\n{\n    int64_t rax = sub_404e10(arg2, arg3, arg4, arg5);\n    if (rax < 0)\n    {\n        sub_404f30(arg1, arg2, rax);\n        sub_404fb0(arg3, arg4, arg5);\n        arg6();\n        rax = -1;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405140",
            "funcStartAddr": "0x405140",
            "funcEndAddr": "0x40518d",
            "decompiledFuncCode": "int64_t sub_405140(int64_t arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t r14 = *arg2;\n    if (r14 != 0)\n    {\n        void* rbx_1 = &arg2[1];\n        int64_t rbp_1 = arg3;\n        do\n        {\n            if (memcmp(arg1, rbp_1, arg4) == 0)\n            {\n                break;\n            }\n            r14 = *rbx_1;\n            rbp_1 = (rbp_1 + arg4);\n            rbx_1 = (rbx_1 + 8);\n        } while (r14 != 0);\n    }\n    return r14;\n}\n\n"
        },
        {
            "funcName": "sub_405190",
            "funcStartAddr": "0x405190",
            "funcEndAddr": "0x405198",
            "decompiledFuncCode": "int64_t sub_405190(int64_t arg1)\n{\n    data_612450 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4051a0",
            "funcStartAddr": "0x4051a0",
            "funcEndAddr": "0x4051a8",
            "decompiledFuncCode": "int64_t sub_4051a0(char arg1)\n{\n    data_612448 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4051b0",
            "funcStartAddr": "0x4051b0",
            "funcEndAddr": "0x40524e",
            "decompiledFuncCode": "void sub_4051b0(void* arg1)\n{\n    int32_t rax = sub_409170(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_612448 == 0 || (data_612448 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_612450;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_407060(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_612448 != 0) && *rax_1 == 0x20)) && sub_409170(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_612268);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_405250",
            "funcStartAddr": "0x405250",
            "funcEndAddr": "0x405388",
            "decompiledFuncCode": "uint64_t sub_405250(char* arg1, uint64_t arg2, int32_t arg3, int32_t arg4, \n    uint64_t arg5[0x2] @ zmm0)\n{\n    double temp0[0x2] = _mm_cmpeq_sd(arg5[0], 0[0], 1);\n    uint64_t rbx = 1;\n    double zmm1[0x2] = _mm_andnot_pd(temp0, arg5);\n    int16_t var_43 = 0x2d25;\n    double var_50 = arg5;\n    uint64_t temp0_2[0x2] = __xorpd_xmmxuq_memxuq(arg5, data_40e4e0);\n    void var_58;\n    *((&var_58 + (arg3 & 1)) + 0x16) = 0x2b;\n    void* rsi = (((&var_58 + (arg3 & 1)) + 0x16) + ((arg3 >> 1) & 1));\n    uint64_t temp0_3[0x2] = _mm_and_pd(temp0_2, temp0);\n    void* rcx_3 = (rsi + ((arg3 >> 2) & 1));\n    int32_t rdx = (arg3 & 0x10);\n    *rsi = 0x20;\n    uint64_t temp0_4[0x2] = _mm_or_pd(temp0_3, zmm1);\n    *rcx_3 = 0x30;\n    zmm1 = 0x10000000000000;\n    void* rax_8 = (((arg3 >> 3) & 1) + rcx_3);\n    *rax_8 = 0x2e2a;\n    *(rax_8 + 2) = 0x2a;\n    bool c_1 = (zmm1[0] < temp0_4[0] | (FCMP_UO(zmm1[0], temp0_4[0])));\n    bool z = (zmm1[0] == temp0_4[0] | (FCMP_UO(zmm1[0], temp0_4[0])));\n    *(rax_8 + 4) = 0;\n    *(rax_8 + 3) = (((rdx - rdx) & 0x20) + 0x47);\n    if ((z || c_1))\n    {\n        rbx = 0xf;\n    }\n    int32_t rax_10;\n    while (true)\n    {\n        arg5 = var_50;\n        rax_10 = __snprintf_chk(arg1, arg2, 1, -1, &var_43, arg4, rbx);\n        if (rax_10 < 0)\n        {\n            break;\n        }\n        if (rbx > 0x10)\n        {\n            break;\n        }\n        if (rax_10 < arg2)\n        {\n            strtod(arg1, nullptr);\n            if (((!(FCMP_UO(arg5[0], var_50))) && (arg5[0] == var_50 | (FCMP_UO(arg5[0], var_50)))))\n            {\n                break;\n            }\n        }\n        rbx = (rbx + 1);\n    }\n    return rax_10;\n}\n\n"
        },
        {
            "funcName": "sub_405390",
            "funcStartAddr": "0x405390",
            "funcEndAddr": "0x4054c7",
            "decompiledFuncCode": "uint64_t sub_405390(char* arg1, uint64_t arg2, int32_t arg3, int32_t arg4, \n    uint32_t arg5[0x4] @ zmm0)\n{\n    float temp0[0x4] = _mm_cmpeq_ss(arg5[0], 0[0], 1);\n    double zmm5 = arg5[0];\n    float zmm1[0x4] = _mm_andnot_ps(temp0, arg5);\n    int16_t var_43 = 0x2d25;\n    float var_4c = arg5[0];\n    arg5 = (arg5 ^ data_40e500);\n    double var_58;\n    *((&var_58 + (arg3 & 1)) + 0x16) = 0x2b;\n    void* rsi = (((&var_58 + (arg3 & 1)) + 0x16) + ((arg3 >> 1) & 1));\n    uint32_t temp0_2[0x4] = _mm_and_ps(arg5, temp0);\n    var_58 = zmm5;\n    void* rcx_3 = (rsi + ((arg3 >> 2) & 1));\n    int32_t rdx = (arg3 & 0x10);\n    *rsi = 0x20;\n    uint32_t temp0_3[0x4] = _mm_or_ps(temp0_2, zmm1);\n    *rcx_3 = 0x30;\n    void* rax_8 = (((arg3 >> 3) & 1) + rcx_3);\n    *rax_8 = 0x2e2a;\n    *(rax_8 + 2) = 0x2a;\n    bool c_1 = (1.17549435e-38f < temp0_3[0] | (FCMP_UO(1.17549435e-38f, temp0_3[0])));\n    bool z = (1.17549435e-38f == temp0_3[0] | (FCMP_UO(1.17549435e-38f, temp0_3[0])));\n    *(rax_8 + 4) = 0;\n    *(rax_8 + 3) = (((rdx - rdx) & 0x20) + 0x47);\n    int64_t rbx;\n    rbx = (z || c_1);\n    uint64_t rbx_1 = ((rbx * 5) + 1);\n    int32_t rax_10;\n    while (true)\n    {\n        arg5 = var_58;\n        rax_10 = __snprintf_chk(arg1, arg2, 1, -1, &var_43, arg4, rbx_1);\n        if (rax_10 < 0)\n        {\n            break;\n        }\n        if (rbx_1 > 8)\n        {\n            break;\n        }\n        if (rax_10 < arg2)\n        {\n            strtof(arg1, nullptr);\n            if (((!(FCMP_UO(arg5[0], var_4c))) && (arg5[0] == var_4c | (FCMP_UO(arg5[0], var_4c)))))\n            {\n                break;\n            }\n        }\n        rbx_1 = (rbx_1 + 1);\n    }\n    return rax_10;\n}\n\n"
        },
        {
            "funcName": "sub_4054d0",
            "funcStartAddr": "0x4054d0",
            "funcEndAddr": "0x4055e4",
            "decompiledFuncCode": "uint64_t sub_4054d0(char* arg1, uint64_t arg2, int32_t arg3, int32_t arg4, \n    long double arg5)\n{\n    uint64_t rbx = 1;\n    int16_t var_43 = 0x2d25;\n    void var_48;\n    void* rsi = (((&var_48 + (arg3 & 1)) + 6) + ((arg3 >> 1) & 1));\n    int80_t x87_r6_1 = data_40e520;\n    *((&var_48 + (arg3 & 1)) + 6) = 0x2b;\n    *rsi = 0x20;\n    void* rcx_3 = (rsi + ((arg3 >> 2) & 1));\n    int32_t rdx = (arg3 & 0x10);\n    *rcx_3 = 0x30;\n    void* rax_8 = (((arg3 >> 3) & 1) + rcx_3);\n    *rax_8 = 0x4c2a2e2a;\n    *(rax_8 + 5) = 0;\n    int16_t top = 0;\n    *(rax_8 + 4) = (((rdx - rdx) & 0x20) + 0x47);\n    if (x87_r6_1 <= (-arg5))\n    {\n        rbx = 0x12;\n    }\n    int32_t rax_10;\n    while (true)\n    {\n        int64_t var_50_1 = *arg5[8];\n        int64_t var_58_1 = arg5;\n        rax_10 = __snprintf_chk(arg1, arg2, 1, -1, &var_43, arg4, rbx);\n        if (rax_10 < 0)\n        {\n            break;\n        }\n        if (rbx > 0x14)\n        {\n            break;\n        }\n        if (rax_10 < arg2)\n        {\n            strtold(arg1, nullptr);\n            /* unimplemented  {fld st0, tword [rsp+0x50]} */;\n            /* unimplemented  {fxch st0, st1} */;\n            /* unimplemented  {fxch st0, st1} */;\n            (/* unimplemented  {fucomip st0, st1} f- unimplemented  {fucomip st0, st1} */ - /* unimplemented  {fucomip st0, st1} f- unimplemented  {fucomip st0, st1} */);\n            bool cond:2_1 = (FCMP_UO(/* bool cond:2_1 = is_unordered.t(unimplemented  {fucomip st0, st1}, unimplemented  {fucomip st0, st1}) */, /* bool cond:2_1 = is_unordered.t(unimplemented  {fucomip st0, st1}, unimplemented  {fucomip st0, st1}) */));\n            bool cond:3_1 = /* bool cond:3_1 = unimplemented  {fucomip st0, st1} f!= unimplemented  {fucomip st0, st1} */ != /* bool cond:3_1 = unimplemented  {fucomip st0, st1} f!= unimplemented  {fucomip st0, st1} */;\n            /* unimplemented  {fucomip st0, st1} */;\n            /* unimplemented  {fstp st0, st0} */;\n            /* unimplemented  {fstp st0, st0} */;\n            top = (top + 1);\n            if (((!cond:2_1) && (!cond:3_1)))\n            {\n                break;\n            }\n        }\n        rbx = (rbx + 1);\n    }\n    return rax_10;\n}\n\n"
        },
        {
            "funcName": "sub_4055f0",
            "funcStartAddr": "0x4055f0",
            "funcEndAddr": "0x405689",
            "decompiledFuncCode": "char* sub_4055f0(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            char const* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char const temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = &rdi[1];\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_40e570;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_612458 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405690",
            "funcStartAddr": "0x405690",
            "funcEndAddr": "0x405782",
            "decompiledFuncCode": "char* sub_405690(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_409230();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_405771:\n                void* const rbx_1 = &data_40e574;\n                if (arg2 != 9)\n                {\n                    rbx_1 = &data_40f6b9;\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_405771;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_405771;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_405771;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_405771;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_405771;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_405771;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_405771;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_40e57d;\n            if (cond:2_1)\n            {\n                rbx = &data_40e57a;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_405771;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_405771;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_405771;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_405771;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_405771;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_40e581;\n            if (cond:1_1)\n            {\n                rbx = &data_40e576;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_405790",
            "funcStartAddr": "0x401bb0",
            "funcEndAddr": "0x4069b1",
            "decompiledFuncCode": "int64_t sub_405790(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    void* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = &data_40f6b9;\n    label_405828:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_405b9c:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_405be4;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_405790(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_405bfb;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_405d35;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_405985;\n                            }\n                            goto label_405c70;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_405d35;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_405b60;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_405b60:\n                            if (var_c0 == 0)\n                            {\n                                goto label_405b6b;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_4059c7:\n                            if (var_5c == 0)\n                            {\n                                goto label_4059d8;\n                            }\n                        label_405b90:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_405b98;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_405dcb;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_405dcb:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_405dda:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_405b9c;\n                            }\n                            goto label_405b60;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_405b60;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_405b60;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_405dcb;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_405966;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_405966:\n                            if (var_5c == 0)\n                            {\n                                goto label_405985;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_405985;\n                            }\n                            goto label_405dda;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_40595d:\n                            if (r12_1 != 0)\n                            {\n                                goto label_405b6b;\n                            }\n                            goto label_405966;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_405d90:\n                            rdx = r11_1 == 2;\n                        label_405985:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_405a8c;\n                            }\n                            goto label_40598f;\n                        }\n                        case 0x27:\n                        {\n                            goto label_405b0d;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_405add;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_405b3a;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_4068cd;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_405aa4;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_405939;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_405f30;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_405f30;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_406880:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_405be4:\n                            rbx_1 = sub_405790(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_405bfb:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_405d35;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_405c87;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_405d35;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_405c50:\n                                r13 = 0;\n                                goto label_405a0b;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_4059d8:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_405a0b:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_405a15;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_405a15:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_405a1d;\n                            }\n                            case 9:\n                            {\n                                goto label_405c00;\n                            }\n                            case 0xa:\n                            {\n                                goto label_405b78;\n                            }\n                            case 0xb:\n                            {\n                                goto label_405c60;\n                            }\n                            case 0xc:\n                            {\n                                goto label_405c40;\n                            }\n                            case 0xd:\n                            {\n                                goto label_405c29;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_405f8a;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_405c15;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_405f6a;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_405f52;\n                            }\n                            case 0x27:\n                            {\n                                goto label_405b0d;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_405add;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_405b3a;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_405939;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_405f30:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_405d30:\n                            var_b8 = 0;\n                        label_405d35:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_405d84:\n                                if (rdx == 0)\n                                {\n                                    goto label_405d90;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_406281:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_405aa4;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_405b9c;\n                                }\n                                r13 = var_98;\n                                goto label_405a1d;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_409010(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_405b9c;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_406281;\n                            }\n                            goto label_405d84;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_405c70:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_405b9c;\n                                }\n                                var_b8 = 0;\n                            label_405c87:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_405cd2;\n                                    }\n                                    rax_8 = r10;\n                                label_405cca:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_405cd2:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_405a8c;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_405d13;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_405cca;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_405a8c;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_405d30;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_405c45;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_405b7d;\n                            }\n                            case 9:\n                            {\n                            label_405c00:\n                                rbp_3 = 0x74;\n                                goto label_405b7d;\n                            }\n                            case 0xa:\n                            {\n                            label_405b78:\n                                rbp_3 = 0x6e;\n                            label_405b7d:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_405b90;\n                                }\n                                goto label_4059d8;\n                            }\n                            case 0xb:\n                            {\n                            label_405c60:\n                                rbp_3 = 0x76;\n                                goto label_405c45;\n                            }\n                            case 0xc:\n                            {\n                            label_405c40:\n                                rbp_3 = 0x66;\n                            label_405c45:\n                                if (var_5c == 0)\n                                {\n                                    goto label_405c50;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_405b98:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_405b9c;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_405c29:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_405b60;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_405f8a:\n                                rbp_3 = 0x20;\n                                goto label_405f52;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_405c15:\n                                rdx = 0;\n                            label_405b6b:\n                                r13 = 0;\n                                goto label_405985;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_405f6a:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_405985;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_40598f:\n                                rax_8 = 0;\n                                goto label_405991;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_405f52:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_405991;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_405b0d:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_405985;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_4068cd;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_405a8c;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_405add:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_4068cd:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_405b9c;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_405a8c:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_4059c7;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_405aa4;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_405985;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_406070:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_405985;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_406070;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_406070;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_406070;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_406070;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_406880;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_405d13:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_405a8c;\n                                }\n                            label_405991:\n                                if (arg7 == 0)\n                                {\n                                    goto label_405a8c;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_405a8c;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_4059c7;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_405b3a:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_405b60;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_405aa4:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_405a1d;\n                                }\n                            label_405a1d:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_405a26;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_405a26:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_405939:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_405b6b;\n                                }\n                                goto label_40595d;\n                            }\n                        }\n                    }\n                }\n            }\n        label_406016:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = &data_40f6b9;\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_405828;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = &data_40f6b9;\n                goto label_405828;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_40f6b9;\n            goto label_405828;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40e574;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40e574;\n            }\n            goto label_405828;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_40e574;\n            goto label_405828;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_405828;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_405690(&data_40e585, r13);\n                arg9 = sub_405690(&data_40f6b9, r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_405828;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_406016;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = &data_40f6b9;\n        goto label_405828;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4069c0",
            "funcStartAddr": "0x401bb5",
            "funcEndAddr": "0x406b5e",
            "decompiledFuncCode": "char* sub_4069c0(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_6122b8;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_6122d0 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_407a20();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x6122c0)\n        {\n            int64_t rax_9 = sub_407830(0, rsi_1);\n            int128_t zmm0 = data_6122c0;\n            rbx = rax_9;\n            data_6122b8 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_407830(rbx, rsi_1);\n            data_6122b8 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_6122d0;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_6122d0 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_405790(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        size_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x612460)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_4077d0(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_405790(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_406b60",
            "funcStartAddr": "0x406b60",
            "funcEndAddr": "0x406b94",
            "decompiledFuncCode": "int64_t sub_406b60(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x612560;\n    }\n    int64_t rax_1 = sub_4079d0(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_406ba0",
            "funcStartAddr": "0x406ba0",
            "funcEndAddr": "0x406baf",
            "decompiledFuncCode": "uint64_t sub_406ba0(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_612560;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_406bb0",
            "funcStartAddr": "0x406bb0",
            "funcEndAddr": "0x406bbf",
            "decompiledFuncCode": "void sub_406bb0(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_612560;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_406bc0",
            "funcStartAddr": "0x406bc0",
            "funcEndAddr": "0x406bf3",
            "decompiledFuncCode": "uint64_t sub_406bc0(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x612560;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_406c00",
            "funcStartAddr": "0x406c00",
            "funcEndAddr": "0x406c13",
            "decompiledFuncCode": "uint64_t sub_406c00(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_612560;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_406c20",
            "funcStartAddr": "0x406c20",
            "funcEndAddr": "0x406c4b",
            "decompiledFuncCode": "void sub_406c20(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_612560;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x612560;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_406c50",
            "funcStartAddr": "0x406c50",
            "funcEndAddr": "0x406cc2",
            "decompiledFuncCode": "int64_t sub_406c50(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_612560;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_405790(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_406cd0",
            "funcStartAddr": "0x406cd0",
            "funcEndAddr": "0x406db1",
            "decompiledFuncCode": "char* sub_406cd0(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_612560;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_405790(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_4077d0((rax_2 + 1));\n    sub_405790(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_406dc0",
            "funcStartAddr": "0x406dc0",
            "funcEndAddr": "0x406dca",
            "decompiledFuncCode": "int64_t sub_406dc0(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_406cd0(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_406dd0",
            "funcStartAddr": "0x406dd0",
            "funcEndAddr": "0x406e65",
            "decompiledFuncCode": "uint64_t sub_406dd0()\n{\n    uint64_t rax_2 = data_6122d0;\n    int64_t r12 = data_6122b8;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x612460)\n    {\n        rax_2 = free(rdi_2);\n        *data_6122c0 = 0x100;\n        *(data_6122c0 + 8) = 0x612460;\n    }\n    if (r12 != 0x6122c0)\n    {\n        rax_2 = free(r12);\n        data_6122b8 = 0x6122c0;\n    }\n    data_6122d0 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_406e70",
            "funcStartAddr": "0x406e70",
            "funcEndAddr": "0x406e81",
            "decompiledFuncCode": "int64_t sub_406e70(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4069c0(arg1, arg2, -1, &data_612560);\n}\n\n"
        },
        {
            "funcName": "sub_406e90",
            "funcStartAddr": "0x406e90",
            "funcEndAddr": "0x406e9a",
            "decompiledFuncCode": "int64_t sub_406e90(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_4069c0(arg1, arg2, arg3, &data_612560);\n}\n\n"
        },
        {
            "funcName": "sub_406ea0",
            "funcStartAddr": "0x406ea0",
            "funcEndAddr": "0x406eb6",
            "decompiledFuncCode": "int64_t sub_406ea0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_4069c0(0, arg1, -1, &data_612560);\n}\n\n"
        },
        {
            "funcName": "sub_406ec0",
            "funcStartAddr": "0x406ec0",
            "funcEndAddr": "0x406ed2",
            "decompiledFuncCode": "int64_t sub_406ec0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4069c0(0, arg1, arg2, &data_612560);\n}\n\n"
        },
        {
            "funcName": "sub_406ee0",
            "funcStartAddr": "0x401bba",
            "funcEndAddr": "0x406f48",
            "decompiledFuncCode": "char* sub_406ee0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_4069c0(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_406f50",
            "funcStartAddr": "0x401bbf",
            "funcEndAddr": "0x406fb4",
            "decompiledFuncCode": "char* sub_406f50(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_4069c0(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_406fc0",
            "funcStartAddr": "0x406fc0",
            "funcEndAddr": "0x406fcc",
            "decompiledFuncCode": "int64_t sub_406fc0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_406ee0(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_406fd0",
            "funcStartAddr": "0x406fd0",
            "funcEndAddr": "0x406fdf",
            "decompiledFuncCode": "int64_t sub_406fd0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_406f50(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_406fe0",
            "funcStartAddr": "0x406fe0",
            "funcEndAddr": "0x407050",
            "decompiledFuncCode": "char* sub_406fe0(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_612590;\n    int128_t var_48 = data_612560;\n    int128_t var_38 = data_612570;\n    int128_t var_28 = data_612580;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_4069c0(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_407050",
            "funcStartAddr": "0x407050",
            "funcEndAddr": "0x40705d",
            "decompiledFuncCode": "int64_t sub_407050(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_406fe0(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_407060",
            "funcStartAddr": "0x407060",
            "funcEndAddr": "0x407071",
            "decompiledFuncCode": "int64_t sub_407060(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_406fe0(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_407080",
            "funcStartAddr": "0x407080",
            "funcEndAddr": "0x40708a",
            "decompiledFuncCode": "int64_t sub_407080(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_406fe0(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_407090",
            "funcStartAddr": "0x401bc4",
            "funcEndAddr": "0x4070fe",
            "decompiledFuncCode": "char* sub_407090(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_4069c0(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_407100",
            "funcStartAddr": "0x407100",
            "funcEndAddr": "0x40716c",
            "decompiledFuncCode": "char* sub_407100(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_612560;\n    int128_t var_38 = data_612570;\n    int128_t var_28 = data_612580;\n    int64_t var_18 = data_612590;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_4069c0(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4071c0",
            "funcStartAddr": "0x4071c0",
            "funcEndAddr": "0x4071ca",
            "decompiledFuncCode": "int64_t sub_4071c0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_4069c0(arg1, arg2, arg3, &data_612280);\n}\n\n"
        },
        {
            "funcName": "sub_4071d0",
            "funcStartAddr": "0x4071d0",
            "funcEndAddr": "0x4071e2",
            "decompiledFuncCode": "int64_t sub_4071d0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4069c0(0, arg1, arg2, &data_612280);\n}\n\n"
        },
        {
            "funcName": "sub_4071f0",
            "funcStartAddr": "0x4071f0",
            "funcEndAddr": "0x407201",
            "decompiledFuncCode": "int64_t sub_4071f0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4069c0(arg1, arg2, -1, &data_612280);\n}\n\n"
        },
        {
            "funcName": "sub_407210",
            "funcStartAddr": "0x407210",
            "funcEndAddr": "0x407226",
            "decompiledFuncCode": "int64_t sub_407210(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_4069c0(0, arg1, -1, &data_612280);\n}\n\n"
        },
        {
            "funcName": "sub_407230",
            "funcStartAddr": "0x401bc9",
            "funcEndAddr": "0x40760d",
            "decompiledFuncCode": "int64_t sub_407230(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_40f2cb, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_407610",
            "funcStartAddr": "0x407610",
            "funcEndAddr": "0x407630",
            "decompiledFuncCode": "int64_t sub_407610(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_407230(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_407630",
            "funcStartAddr": "0x407630",
            "funcEndAddr": "0x407690",
            "decompiledFuncCode": "int64_t sub_407630(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_407230(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_407690",
            "funcStartAddr": "0x407690",
            "funcEndAddr": "0x40774c",
            "decompiledFuncCode": "int64_t sub_407690(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_407230(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_407750",
            "funcStartAddr": "0x407750",
            "funcEndAddr": "0x4077c4",
            "decompiledFuncCode": "int64_t sub_407750()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_4077d0",
            "funcStartAddr": "0x4077d0",
            "funcEndAddr": "0x4077ea",
            "decompiledFuncCode": "int64_t sub_4077d0(size_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_407a20();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_407830",
            "funcStartAddr": "0x407830",
            "funcEndAddr": "0x407866",
            "decompiledFuncCode": "int64_t sub_407830(int64_t arg1, size_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_407a20();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_407930",
            "funcStartAddr": "0x407930",
            "funcEndAddr": "0x407980",
            "decompiledFuncCode": "int64_t sub_407930(int64_t arg1, int64_t* arg2)\n{\n    size_t rax = *arg2;\n    bool cond:0_1;\n    if (arg1 == 0)\n    {\n        cond:0_1 = rax >= 0;\n        if (rax == 0)\n        {\n            *arg2 = 0x80;\n            /* tailcall */\n            return sub_407830(arg1, 0x80);\n        }\n    }\n    if ((arg1 != 0 && rax <= 0x5555555555555553))\n    {\n        rax = (((rax >> 1) + rax) + 1);\n    }\n    if (((arg1 != 0 && rax <= 0x5555555555555553) || ((arg1 == 0 && rax != 0) && cond:0_1)))\n    {\n        *arg2 = rax;\n        /* tailcall */\n        return sub_407830(arg1, rax);\n    }\n    if (((arg1 != 0 && rax > 0x5555555555555553) || ((arg1 == 0 && rax != 0) && (!cond:0_1))))\n    {\n        size_t var_8 = rax;\n        sub_407a20();\n        /* no return */\n    }\n}\n\n"
        },
        {
            "funcName": "sub_407980",
            "funcStartAddr": "0x407980",
            "funcEndAddr": "0x407997",
            "decompiledFuncCode": "int64_t sub_407980(size_t arg1)\n{\n    /* tailcall */\n    return memset(sub_4077d0(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_4079a0",
            "funcStartAddr": "0x4079a0",
            "funcEndAddr": "0x4079ce",
            "decompiledFuncCode": "int64_t sub_4079a0(size_t arg1, size_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_407a20();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4079d0",
            "funcStartAddr": "0x4079d0",
            "funcEndAddr": "0x4079f8",
            "decompiledFuncCode": "int64_t sub_4079d0(int64_t arg1, size_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_4077d0(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_407a00",
            "funcStartAddr": "0x407a00",
            "funcEndAddr": "0x407a13",
            "decompiledFuncCode": "int64_t sub_407a00(char* arg1)\n{\n    /* tailcall */\n    return sub_4079d0(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_407a20",
            "funcStartAddr": "0x407a20",
            "funcEndAddr": "0x407a51",
            "decompiledFuncCode": "int64_t sub_407a20() __noreturn\n{\n    error(data_612268, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_407a60",
            "funcStartAddr": "0x407a60",
            "funcEndAddr": "0x407abd",
            "decompiledFuncCode": "uint64_t sub_407a60()\n{\n    int32_t* rsi;\n    char* rdi;\n    int32_t rax = sub_409150(rdi, rsi);\n    if ((rax < 0 && ferror(stdout) == 0))\n    {\n        error(data_612268, *__errno_location(), dcgettext(nullptr, \"cannot perform formatted output\", 5));\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_407b60",
            "funcStartAddr": "0x407b60",
            "funcEndAddr": "0x407bb9",
            "decompiledFuncCode": "uint64_t sub_407b60(FILE* arg1)\n{\n    int32_t* rdx;\n    char* rsi;\n    int32_t rax = sub_409090(arg1, rsi, rdx);\n    if ((rax < 0 && ferror(arg1) == 0))\n    {\n        error(data_612268, *__errno_location(), dcgettext(nullptr, \"cannot perform formatted output\", 5));\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_407bc0",
            "funcStartAddr": "0x407bc0",
            "funcEndAddr": "0x407c4f",
            "decompiledFuncCode": "uint64_t sub_407bc0(FILE* arg1, char arg2 @ rax)\n{\n    int64_t rdx;\n    int64_t var_a8 = rdx;\n    int64_t rcx;\n    int64_t var_a0 = rcx;\n    int64_t r8;\n    int64_t var_98 = r8;\n    int64_t r9;\n    int64_t var_90 = r9;\n    if (arg2 != 0)\n    {\n        int128_t zmm0;\n        int128_t var_88_1 = zmm0;\n        int128_t zmm1;\n        int128_t var_78_1 = zmm1;\n        int128_t zmm2;\n        int128_t var_68_1 = zmm2;\n        int128_t zmm3;\n        int128_t var_58_1 = zmm3;\n        int128_t zmm4;\n        int128_t var_48_1 = zmm4;\n        int128_t zmm5;\n        int128_t var_38_1 = zmm5;\n        int128_t zmm6;\n        int128_t var_28_1 = zmm6;\n        int128_t zmm7;\n        int128_t var_18_1 = zmm7;\n    }\n    int32_t var_d0 = 0x10;\n    void* var_c8 = &arg_8;\n    int32_t var_cc = 0x30;\n    void var_b8;\n    void* var_c0 = &var_b8;\n    return sub_407b60(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_407c50",
            "funcStartAddr": "0x401bce",
            "funcEndAddr": "0x407cd1",
            "decompiledFuncCode": "int64_t sub_407c50(int32_t arg1, int32_t arg2, char arg3, int64_t* arg4, \n    int64_t arg5) __noreturn\n{\n    uint64_t rdi = (arg1 - 1);\n    int32_t rbx = data_612268;\n    if (rdi > 3)\n    {\n        abort();\n        /* no return */\n    }\n    char* rsi = *((rdi << 3) + 0x40f700);\n    int64_t rax = arg2;\n    void* const r12;\n    char* r13;\n    if (arg2 < 0)\n    {\n        char var_2a = arg3;\n        r13 = &var_2a;\n        r12 = (&data_40f680 - rax);\n        char var_29_1 = 0;\n    }\n    else\n    {\n        r12 = &data_40f680;\n        r13 = arg4[(rax * 4)];\n    }\n    error(rbx, 0, dcgettext(nullptr, rsi, 5), r12, r13, arg5);\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_407ce0",
            "funcStartAddr": "0x407ce0",
            "funcEndAddr": "0x408114",
            "decompiledFuncCode": "uint64_t sub_407ce0(char* arg1, int64_t* arg2, int32_t arg3, uint64_t* arg4, \n    char* arg5)\n{\n    if (arg3 > 0x24)\n    {\n        __assert_fail(\"0 <= strtol_base && strtol_base \u2026\", \"lib/xstrtol.c\", 0x60, \"xstrtoumax\");\n        /* no return */\n    }\n    int64_t* r15 = arg2;\n    void var_40;\n    if (arg2 == 0)\n    {\n        r15 = &var_40;\n    }\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char rbx = *arg1;\n    uint16_t* rsi = *__ctype_b_loc();\n    char* rax_2 = arg1;\n    while ((*(&rsi[rbx] + 1) & 0x20) != 0)\n    {\n        rax_2 = &rax_2[1];\n        rbx = *rax_2;\n    }\n    int32_t rbp_1;\n    if (rbx == 0x2d)\n    {\n    label_407daa:\n        rbp_1 = 4;\n    }\n    else\n    {\n        char* r8 = *r15;\n        uint64_t rbx_1 = __strtoul_internal(arg1, r15, arg3, 0);\n        int32_t var_58;\n        void* r8_1;\n        uint32_t r12_1;\n        if (r8 == arg1)\n        {\n            var_58 = r8;\n            if (arg5 == 0)\n            {\n                goto label_407daa;\n            }\n            r12_1 = *arg1;\n            if (r12_1 == 0)\n            {\n                goto label_407daa;\n            }\n            rbp_1 = 0;\n            rbx_1 = 1;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) == 0)\n            {\n                goto label_407daa;\n            }\n        label_407de7:\n            uint64_t rdx_1 = (r12_1 - 0x45);\n            int64_t rdx_3;\n            int32_t rsi_3;\n            if (rdx_1 <= 0x2f)\n            {\n                var_58 = rdx_1;\n                if ((!(TEST_BITQ(0x814400308945, rdx_1))))\n                {\n                    goto label_407e50;\n                }\n                if (strchr(arg5, 0x30) == 0)\n                {\n                    goto label_407e50;\n                }\n                char rax_8 = *(r8_1 + 1);\n                if (rax_8 == 0x44)\n                {\n                label_408078:\n                    rsi_3 = 2;\n                    rdx_3 = 0x3e8;\n                    goto label_407e5a;\n                }\n                if (rax_8 == 0x69)\n                {\n                    rdx_3 = 0x400;\n                    int32_t rsi_6;\n                    rsi_6 = *(r8_1 + 2) == 0x42;\n                    rsi_3 = ((rsi_6 + rsi_6) + 1);\n                    goto label_407e5a;\n                }\n                uint64_t rdx_2 = var_58;\n                if (rax_8 == 0x42)\n                {\n                    goto label_408078;\n                }\n                int32_t r9_1;\n                switch (rdx_2)\n                {\n                    case 0:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_407ffb:\n                        int64_t rcx_6 = rdx_3;\n                        int32_t rdi_8 = 6;\n                        r9_1 = 0;\n                        int32_t temp15_1;\n                        do\n                        {\n                            uint64_t rax_28;\n                            int64_t rdx_11;\n                            rdx_11 = HIGHD((rbx_1 * rcx_6));\n                            rax_28 = LOWD((rbx_1 * rcx_6));\n                            bool o_8 = ((rbx_1 * rcx_6) >> 0x40) != 0;\n                            rbx_1 = rax_28;\n                            if (o_8)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp15_1 = rdi_8;\n                            rdi_8 = (rdi_8 - 1);\n                        } while (temp15_1 != 1);\n                        goto label_407f54;\n                    }\n                    case 1:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 7:\n                    case 9:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                    case 0x23:\n                    case 0x24:\n                    case 0x25:\n                    case 0x27:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    {\n                        goto label_407ef5;\n                    }\n                    case 2:\n                    case 0x22:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_408033:\n                        int64_t rcx_7 = rdx_3;\n                        int64_t rax_30;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rbx_1 * rcx_7));\n                        rax_30 = LOWD((rbx_1 * rcx_7));\n                        int64_t rax_31;\n                        if (((rbx_1 * rcx_7) >> 0x40) == 0)\n                        {\n                            int64_t rdx_13;\n                            rdx_13 = HIGHD((rax_30 * rcx_7));\n                            rax_31 = LOWD((rax_30 * rcx_7));\n                            if (((rax_30 * rcx_7) >> 0x40) == 0)\n                            {\n                                uint64_t rax_32;\n                                int64_t rdx_14;\n                                rdx_14 = HIGHD((rax_31 * rcx_7));\n                                rax_32 = LOWD((rax_31 * rcx_7));\n                                if (((rax_31 * rcx_7) >> 0x40) == 0)\n                                {\n                                    rbx_1 = rax_32;\n                                    rbp_1 = (rbp_1 | 0);\n                                }\n                            }\n                        }\n                        if (((((rbx_1 * rcx_7) >> 0x40) != 0 || (((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) != 0)) || ((((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) == 0) && ((rax_31 * rcx_7) >> 0x40) != 0)))\n                        {\n                            rbx_1 = -1;\n                            rbp_1 = (rbp_1 | 1);\n                        }\n                        goto label_407e9d;\n                    }\n                    case 6:\n                    case 0x26:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_407ebf:\n                        uint64_t rax_15;\n                        int64_t rdx_6;\n                        rdx_6 = HIGHD((rbx_1 * rdx_3));\n                        rax_15 = LOWD((rbx_1 * rdx_3));\n                        bool o_3 = ((rbx_1 * rdx_3) >> 0x40) != 0;\n                        rbx_1 = rax_15;\n                        if ((!o_3))\n                        {\n                            goto label_407e9d;\n                        }\n                        goto label_407ec7;\n                    }\n                    case 8:\n                    case 0x28:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_407e7e:\n                        int64_t rcx_1 = rdx_3;\n                        int64_t rax_10;\n                        int64_t rdx_4;\n                        rdx_4 = HIGHD((rbx_1 * rcx_1));\n                        rax_10 = LOWD((rbx_1 * rcx_1));\n                        if (((rbx_1 * rcx_1) >> 0x40) == 0)\n                        {\n                            uint64_t rax_11;\n                            int64_t rdx_5;\n                            rdx_5 = HIGHD((rax_10 * rcx_1));\n                            rax_11 = LOWD((rax_10 * rcx_1));\n                            if (((rax_10 * rcx_1) >> 0x40) != 0)\n                            {\n                                goto label_407ec7;\n                            }\n                            rbx_1 = rax_11;\n                            goto label_407e9d;\n                        }\n                    label_407ec7:\n                        rbp_1 = 1;\n                        rbx_1 = -1;\n                        goto label_407e9d;\n                    }\n                    case 0xb:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_407fc8:\n                        int64_t rcx_5 = rdx_3;\n                        int32_t rdi_7 = 5;\n                        r9_1 = 0;\n                        int32_t temp14_1;\n                        do\n                        {\n                            uint64_t rax_26;\n                            int64_t rdx_10;\n                            rdx_10 = HIGHD((rbx_1 * rcx_5));\n                            rax_26 = LOWD((rbx_1 * rcx_5));\n                            bool o_7 = ((rbx_1 * rcx_5) >> 0x40) != 0;\n                            rbx_1 = rax_26;\n                            if (o_7)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp14_1 = rdi_7;\n                            rdi_7 = (rdi_7 - 1);\n                        } while (temp14_1 != 1);\n                        goto label_407f54;\n                    }\n                    case 0xf:\n                    case 0x2f:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_407f98:\n                        int64_t rcx_4 = rdx_3;\n                        int32_t rdi_6 = 4;\n                        r9_1 = 0;\n                        int32_t temp13_1;\n                        do\n                        {\n                            uint64_t rax_24;\n                            int64_t rdx_9;\n                            rdx_9 = HIGHD((rbx_1 * rcx_4));\n                            rax_24 = LOWD((rbx_1 * rcx_4));\n                            bool o_6 = ((rbx_1 * rcx_4) >> 0x40) != 0;\n                            rbx_1 = rax_24;\n                            if (o_6)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp13_1 = rdi_6;\n                            rdi_6 = (rdi_6 - 1);\n                        } while (temp13_1 != 1);\n                        goto label_407f54;\n                    }\n                    case 0x14:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_407f66:\n                        int64_t rcx_3 = rdx_3;\n                        int32_t rdi_5 = 8;\n                        r9_1 = 0;\n                        int32_t temp12_1;\n                        do\n                        {\n                            uint64_t rax_22;\n                            int64_t rdx_8;\n                            rdx_8 = HIGHD((rbx_1 * rcx_3));\n                            rax_22 = LOWD((rbx_1 * rcx_3));\n                            bool o_5 = ((rbx_1 * rcx_3) >> 0x40) != 0;\n                            rbx_1 = rax_22;\n                            if (o_5)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp12_1 = rdi_5;\n                            rdi_5 = (rdi_5 - 1);\n                        } while (temp12_1 != 1);\n                        goto label_407f54;\n                    }\n                    case 0x15:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_407f2b:\n                        int64_t rcx_2 = rdx_3;\n                        int32_t rdi_4 = 7;\n                        r9_1 = 0;\n                        int32_t temp11_1;\n                        do\n                        {\n                            uint64_t rax_20;\n                            int64_t rdx_7;\n                            rdx_7 = HIGHD((rbx_1 * rcx_2));\n                            rax_20 = LOWD((rbx_1 * rcx_2));\n                            bool o_4 = ((rbx_1 * rcx_2) >> 0x40) != 0;\n                            rbx_1 = rax_20;\n                            if (o_4)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp11_1 = rdi_4;\n                            rdi_4 = (rdi_4 - 1);\n                        } while (temp11_1 != 1);\n                    label_407f54:\n                        rbp_1 = (rbp_1 | r9_1);\n                        goto label_407e9d;\n                    }\n                    case 0x1d:\n                    {\n                        rsi_3 = 1;\n                        break;\n                    }\n                    case 0x1e:\n                    {\n                        rsi_3 = 1;\n                        goto label_407e9d;\n                    }\n                }\n            }\n            else\n            {\n            label_407e50:\n                rsi_3 = 1;\n                rdx_3 = 0x400;\n            label_407e5a:\n                char r12_2 = (r12_1 - 0x42);\n                if (r12_2 > 0x35)\n                {\n                    goto label_407ef5;\n                }\n                switch (r12_2)\n                {\n                    case 0:\n                    {\n                        if ((rbx_1 >> 0x36) != 0)\n                        {\n                            goto label_407ec7;\n                        }\n                        rbx_1 = (rbx_1 << 0xa);\n                        goto label_407e9d;\n                    }\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x2a:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x33:\n                    case 0x34:\n                    {\n                        goto label_407ef5;\n                    }\n                    case 3:\n                    {\n                        goto label_407ffb;\n                    }\n                    case 5:\n                    case 0x25:\n                    {\n                        goto label_408033;\n                    }\n                    case 9:\n                    case 0x29:\n                    {\n                        goto label_407ebf;\n                    }\n                    case 0xb:\n                    case 0x2b:\n                    {\n                        goto label_407e7e;\n                    }\n                    case 0xe:\n                    {\n                        goto label_407fc8;\n                    }\n                    case 0x12:\n                    case 0x32:\n                    {\n                        goto label_407f98;\n                    }\n                    case 0x17:\n                    {\n                        goto label_407f66;\n                    }\n                    case 0x18:\n                    {\n                        goto label_407f2b;\n                    }\n                    case 0x21:\n                    {\n                        goto label_407e9d;\n                    }\n                    case 0x35:\n                    {\n                        if (rbx_1 < 0)\n                        {\n                            goto label_407ec7;\n                        }\n                        rbx_1 = (rbx_1 + rbx_1);\n                    label_407e9d:\n                        void* r8_2 = (r8_1 + rsi_3);\n                        int32_t rax_13 = (rbp_1 | 2);\n                        *r15 = r8_2;\n                        if (*r8_2 != 0)\n                        {\n                            rbp_1 = rax_13;\n                        }\n                        goto label_407d82;\n                    }\n                }\n            }\n            if ((rbx_1 >> 0x37) != 0)\n            {\n                goto label_407ec7;\n            }\n            rbx_1 = (rbx_1 << 9);\n            goto label_407e9d;\n        }\n        int32_t rax_4 = *rax;\n        if (rax_4 == 0)\n        {\n            rbp_1 = 0;\n        }\n        else\n        {\n            rbp_1 = 1;\n            if (rax_4 != 0x22)\n            {\n                goto label_407daa;\n            }\n        }\n        if (arg5 == 0)\n        {\n        label_407d82:\n            *arg4 = rbx_1;\n        }\n        else\n        {\n            r12_1 = *r8;\n            if (r12_1 == 0)\n            {\n                goto label_407d82;\n            }\n            var_58 = r8;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) != 0)\n            {\n                goto label_407de7;\n            }\n        label_407ef5:\n            *arg4 = rbx_1;\n            rbp_1 = (rbp_1 | 2);\n        }\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_408120",
            "funcStartAddr": "0x408120",
            "funcEndAddr": "0x40819b",
            "decompiledFuncCode": "int64_t sub_408120(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_4081a0(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_4081a0",
            "funcStartAddr": "0x4081a0",
            "funcEndAddr": "0x4081e0",
            "decompiledFuncCode": "int64_t sub_4081a0(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_4081e0(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_4081e0",
            "funcStartAddr": "0x4081e0",
            "funcEndAddr": "0x408237",
            "decompiledFuncCode": "off64_t sub_4081e0(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_408240",
            "funcStartAddr": "0x408240",
            "funcEndAddr": "0x40831f",
            "decompiledFuncCode": "uint64_t sub_408240(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_408320",
            "funcStartAddr": "0x408320",
            "funcEndAddr": "0x40893c",
            "decompiledFuncCode": "uint64_t sub_408320(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_408550;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_408476;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_408476;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_408476:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_408550:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_40857e;\n                }\n                *arg5 = r12;\n            label_40857e:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_40859c;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_40859c:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_40859c;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_40850e;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_40850e:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_408940",
            "funcStartAddr": "0x408940",
            "funcEndAddr": "0x408f06",
            "decompiledFuncCode": "uint64_t sub_408940(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_408b7c;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_408a08;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_408a08:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_408240(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_40f680;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_408240(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_408b7c;\n                }\n                *arg7 = rdx_2;\n            label_408b7c:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_408c80;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_40f680;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_408cf0;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_408c80;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_408c80;\n                            }\n                            goto label_408c41;\n                        }\n                    label_408c41:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_408320(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_40f681);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_408c80:\n                            rdx = &r14_1[1];\n                        label_408ac1:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_408cbe;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_408cbe:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_40fbbd;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_408cf0:\n                                        r14_2 = sub_408320(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_408dad;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_408dad:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_408b7c;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_408a08;\n        }\n        goto label_408ac1;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_408f70",
            "funcStartAddr": "0x408f70",
            "funcEndAddr": "0x408f88",
            "decompiledFuncCode": "uint64_t sub_408f70(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_409010",
            "funcStartAddr": "0x409010",
            "funcEndAddr": "0x40908a",
            "decompiledFuncCode": "uint64_t sub_409010(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_40fba1[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_40903a;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_40903a:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_4091d0() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_409090",
            "funcStartAddr": "0x409090",
            "funcEndAddr": "0x40914d",
            "decompiledFuncCode": "uint64_t sub_409090(FILE* arg1, char* arg2, int32_t* arg3)\n{\n    uint64_t var_800 = 0x7d0;\n    void var_7f8;\n    char* rax;\n    uint16_t x87control;\n    int80_t st0;\n    rax = sub_4097b0(&var_7f8, &var_800, arg2, arg3, x87control);\n    uint64_t rbx = var_800;\n    uint64_t rax_1;\n    if (rax != 0)\n    {\n        rax_1 = fwrite(rax, 1, rbx, arg1);\n        if (rax_1 < rbx)\n        {\n            rbx = 0xffffffff;\n            if (rax != &var_7f8)\n            {\n                int32_t* rax_3 = __errno_location();\n                int32_t r13_1 = *rax_3;\n                free(rax);\n                *rax_3 = r13_1;\n            }\n        }\n        else\n        {\n            if (rax != &var_7f8)\n            {\n                free(rax);\n            }\n            if (rbx > 0x7fffffff)\n            {\n                *__errno_location() = 0x4b;\n            }\n        }\n    }\n    if ((((rax != 0 && rax_1 >= rbx) && rbx > 0x7fffffff) || rax == 0))\n    {\n        rbx = 0xffffffff;\n        sub_4097a0(arg1);\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_409150",
            "funcStartAddr": "0x409150",
            "funcEndAddr": "0x409162",
            "decompiledFuncCode": "int64_t sub_409150(char* arg1, int32_t* arg2)\n{\n    /* tailcall */\n    return sub_409090(stdout, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_409170",
            "funcStartAddr": "0x409170",
            "funcEndAddr": "0x4091cd",
            "decompiledFuncCode": "uint64_t sub_409170(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_408120(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4091d0",
            "funcStartAddr": "0x4091d0",
            "funcEndAddr": "0x40922e",
            "decompiledFuncCode": "int64_t sub_4091d0()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_40fbc1;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            char const* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char const temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = &rdi_2[1];\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_409230",
            "funcStartAddr": "0x409230",
            "funcEndAddr": "0x409792",
            "decompiledFuncCode": "char* sub_409230()\n{\n    char* rax = nl_langinfo(0xe);\n    int64_t r15 = data_6125d8;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_40fba1[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        size_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            size_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_40932c;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_409376;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_40932c:\n            r15 = 0x40fbbc;\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_409376:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = 0;\n                rax_12 = fdopen(rax_11, &data_40c2f5);\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_40942c:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_4095bb;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_409468:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_409468;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_4094a2:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_4094a2;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                int64_t rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    int64_t rdi_26 = r15;\n                                    r15 = 0x40fbbc;\n                                    free(rdi_26);\n                                    sub_408120(rax_12);\n                                    goto label_4093b7;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                char* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = (&rsi_13[8] & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_40967b:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_40967b;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_4096c9:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_4096c9;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_40942c;\n                        }\n                        break;\n                    }\n                label_4095bb:\n                    sub_408120(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = 0x40fbbc;\n            }\n        label_4093b7:\n            free(rbp_3);\n        }\n        data_6125d8 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && *(r15 + 1) != 0))))\n            {\n                char* rbp_1 = ((r15 + strlen(r15)) + 1);\n                r15 = &rbp_1[(strlen(rbp_1) + 1)];\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = ((r15 + strlen(r15)) + 1);\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_4097a0",
            "funcStartAddr": "0x4097a0",
            "funcEndAddr": "0x4097a4",
            "decompiledFuncCode": "int64_t sub_4097a0(int32_t* arg1)\n{\n    *arg1 = (*arg1 | 0x20);\n}\n\n"
        },
        {
            "funcName": "sub_4097b0",
            "funcStartAddr": "0x401bd3",
            "funcEndAddr": "0x40b2c9",
            "decompiledFuncCode": "char* sub_4097b0(char* arg1, uint64_t* arg2, char* arg3, int32_t* arg4, \n    uint16_t arg5 @ x87control)\n{\n    int64_t rbp;\n    int64_t __saved_rbp = rbp;\n    int64_t r15;\n    int64_t __saved_r15 = r15;\n    int64_t r14;\n    int64_t __saved_r14 = r14;\n    int64_t r13;\n    int64_t __saved_r13 = r13;\n    int64_t r12;\n    int64_t __saved_r12 = r12;\n    int64_t rbx;\n    int64_t __saved_rbx = rbx;\n    void var_6f8;\n    void* rsp_1 = &var_6f8;\n    void var_678;\n    int64_t var_588;\n    char* rbx_2;\n    if (sub_40b4f0(arg3, &var_588, &var_678) < 0)\n    {\n        rbx_2 = nullptr;\n    }\n    else\n    {\n        int32_t rax_1;\n        int512_t zmm0_1;\n        rax_1 = sub_40b2d0(arg4, &var_678);\n        char* var_670;\n        void var_668;\n        int64_t* var_580;\n        void var_568;\n        if (rax_1 >= 0)\n        {\n            int64_t var_578;\n            int64_t rax_3 = (var_578 + 7);\n            if (rax_3 <= 6)\n            {\n                rax_3 = -1;\n            }\n            int64_t var_570;\n            int64_t rax_4 = (rax_3 + var_570);\n            char* var_6a8;\n            int64_t rcx;\n            char* r8_1;\n            if ((rax_3 + var_570) >= rax_3)\n            {\n                size_t rdi_3 = (rax_4 + 6);\n                if (rax_4 >= -6)\n                {\n                    goto label_409ed5;\n                }\n                char* var_6e0_1;\n                char* var_6b0_1;\n                int32_t* rdx_1;\n                if (rdi_3 <= 0xf9f)\n                {\n                    var_6e0_1 = nullptr;\n                    rsp_1 = (&var_6f8 - ((rax_4 + 0x1d) & 0xfffffffffffffff0));\n                    var_6b0_1 = ((rsp_1 + 0xf) & 0xfffffffffffffff0);\n                }\n                else\n                {\n                    if (rdi_3 == -1)\n                    {\n                        goto label_409ed5;\n                    }\n                    char* rax_5;\n                    rax_5 = malloc(rdi_3);\n                    var_6b0_1 = rax_5;\n                    if (rax_5 == 0)\n                    {\n                        goto label_409ed5;\n                    }\n                    var_6e0_1 = rax_5;\n                }\n                size_t r12_1 = 0;\n                if (arg1 != 0)\n                {\n                    r12_1 = *arg2;\n                }\n                int64_t* r14_1 = var_580;\n                r8_1 = arg3;\n                rbx_2 = arg1;\n                int64_t var_6c0_1 = 0;\n                uint64_t r15_2 = 0;\n                rcx = *r14_1;\n                void* r13_1;\n                if (rcx != r8_1)\n                {\n                    while (true)\n                    {\n                        void* rcx_1 = (rcx - r8_1);\n                        void* rax_8 = (r15_2 + rcx_1);\n                        r13_1 = rax_8;\n                        int32_t var_698;\n                        char* r15_7;\n                        if ((r15_2 + rcx_1) < r15_2)\n                        {\n                            if (r12_1 != -1)\n                            {\n                            label_409da5:\n                                r15_7 = rbx_2;\n                                var_6a8 = __errno_location();\n                            }\n                            else\n                            {\n                                r13_1 = ffffffffffffffff;\n                            label_409a23:\n                                memcpy(&rbx_2[r15_2], r8_1, rcx_1);\n                            label_409a2f:\n                                if (var_588 == var_6c0_1)\n                                {\n                                    uint64_t r15_11 = r13_1;\n                                    size_t r14_3 = (r13_1 + 1);\n                                    if (r13_1 >= -1)\n                                    {\n                                        if (r12_1 != -1)\n                                        {\n                                            goto label_409da5;\n                                        }\n                                    }\n                                    else if (r12_1 < r14_3)\n                                    {\n                                        bool cond:2_1 = r12_1 < 0;\n                                        if ((r12_1 == 0 && r14_3 <= 0xc))\n                                        {\n                                            r12_1 = 0xc;\n                                        label_40ab85:\n                                            r13_1 = rbx_2 == arg1;\n                                            if ((rbx_2 == 0 || (rbx_2 != 0 && r13_1 != 0)))\n                                            {\n                                                char* rax_150 = malloc(r12_1);\n                                                if (rax_150 == 0)\n                                                {\n                                                    goto label_409da5;\n                                                }\n                                                if ((r15_11 == 0 || (r15_11 != 0 && r13_1 == 0)))\n                                                {\n                                                    rbx_2 = rax_150;\n                                                }\n                                                if ((r15_11 != 0 && r13_1 != 0))\n                                                {\n                                                    rbx_2 = memcpy(rax_150, rbx_2, r15_11);\n                                                }\n                                            }\n                                            if ((rbx_2 != 0 && r13_1 == 0))\n                                            {\n                                                char* rax_126 = realloc(rbx_2, r12_1);\n                                                if (rax_126 == 0)\n                                                {\n                                                    goto label_409fba;\n                                                }\n                                                rbx_2 = rax_126;\n                                            }\n                                        }\n                                        if (r12_1 != 0)\n                                        {\n                                            if (cond:2_1)\n                                            {\n                                                goto label_409da5;\n                                            }\n                                            r12_1 = (r12_1 + r12_1);\n                                            if (r12_1 >= r14_3)\n                                            {\n                                                goto label_40ab85;\n                                            }\n                                        }\n                                        if (((r12_1 == 0 && r14_3 > 0xc) || r12_1 != 0))\n                                        {\n                                            if (r14_3 == -1)\n                                            {\n                                                goto label_409da5;\n                                            }\n                                            r12_1 = r14_3;\n                                            goto label_40ab85;\n                                        }\n                                    }\n                                    rbx_2[r15_11] = 0;\n                                    if ((r12_1 > r14_3 && rbx_2 != arg1))\n                                    {\n                                        char* rax_127 = realloc(rbx_2, r14_3);\n                                        if (rax_127 != 0)\n                                        {\n                                            rbx_2 = rax_127;\n                                        }\n                                    }\n                                    if (var_6e0_1 != 0)\n                                    {\n                                        free(var_6e0_1);\n                                    }\n                                    if (var_580 != &var_568)\n                                    {\n                                        free(var_580);\n                                    }\n                                    if (var_670 != &var_668)\n                                    {\n                                        free(var_670);\n                                    }\n                                    *arg2 = r15_11;\n                                    goto label_409e31;\n                                }\n                                char r15_3 = r14_1[9];\n                                int64_t rax_17 = r14_1[0xa];\n                                if (r15_3 == 0x25)\n                                {\n                                    if (rax_17 != -1)\n                                    {\n                                    label_40a4dc:\n                                        abort();\n                                        /* no return */\n                                    }\n                                    uint64_t rax_47 = (r13_1 + 1);\n                                    r15_2 = rax_47;\n                                    if (r13_1 < -1)\n                                    {\n                                        if (r12_1 >= rax_47)\n                                        {\n                                            goto label_409ea2;\n                                        }\n                                        bool cond:4_1 = r12_1 < 0;\n                                        if (r12_1 != 0)\n                                        {\n                                            if (cond:4_1)\n                                            {\n                                                goto label_409da5;\n                                            }\n                                            r12_1 = (r12_1 + r12_1);\n                                            if (r12_1 >= rax_47)\n                                            {\n                                                goto label_409e77;\n                                            }\n                                        }\n                                        else if (rax_47 <= 0xc)\n                                        {\n                                            r12_1 = 0xc;\n                                        label_409e77:\n                                            rdx_1 = rbx_2 == arg1;\n                                            if (rbx_2 == 0)\n                                            {\n                                            label_40a693:\n                                                var_698 = rdx_1;\n                                                char* rax_107 = malloc(r12_1);\n                                                rdx_1 = var_698;\n                                                if (rax_107 == 0)\n                                                {\n                                                    goto label_409da5;\n                                                }\n                                                if ((r13_1 == 0 || (r13_1 != 0 && rdx_1 == 0)))\n                                                {\n                                                    rbx_2 = rax_107;\n                                                }\n                                                if ((r13_1 != 0 && rdx_1 != 0))\n                                                {\n                                                    char* rax_108;\n                                                    rax_108 = memcpy(rax_107, rbx_2, r13_1);\n                                                    rbx_2 = rax_108;\n                                                }\n                                                goto label_409ea2;\n                                            }\n                                            if (rdx_1 != 0)\n                                            {\n                                                goto label_40a693;\n                                            }\n                                            char* rax_48;\n                                            rax_48 = realloc(rbx_2, r12_1);\n                                            if (rax_48 == 0)\n                                            {\n                                                goto label_409fba;\n                                            }\n                                            rbx_2 = rax_48;\n                                            goto label_409ea2;\n                                        }\n                                        if (rax_47 == -1)\n                                        {\n                                            goto label_409da5;\n                                        }\n                                        r12_1 = rax_47;\n                                        goto label_409e77;\n                                    }\n                                    if (r12_1 != -1)\n                                    {\n                                        goto label_409da5;\n                                    }\n                                    r15_2 = -1;\n                                label_409ea2:\n                                    *(rbx_2 + r13_1) = 0x25;\n                                label_409ea7:\n                                    r8_1 = r14_1[1];\n                                    r14_1 = &r14_1[0xb];\n                                    rcx = *r14_1;\n                                    var_6c0_1 = (var_6c0_1 + 1);\n                                    if (rcx == r8_1)\n                                    {\n                                        break;\n                                    }\n                                    continue;\n                                }\n                                else\n                                {\n                                    if (rax_17 == -1)\n                                    {\n                                        goto label_40a4dc;\n                                    }\n                                    rdx_1 = &var_670[(rax_17 << 5)];\n                                    int32_t rax_19 = *rdx_1;\n                                    if (r15_3 == 0x6e)\n                                    {\n                                        uint64_t rax_50 = (rax_19 - 0x12);\n                                        if (rax_50 > 4)\n                                        {\n                                        label_401bd3:\n                                            abort();\n                                            /* no return */\n                                        }\n                                        switch (rax_50)\n                                        {\n                                            case 0:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                            case 1:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                            case 2:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                            case 3:\n                                            case 4:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                        }\n                                        goto label_409ea7;\n                                    }\n                                    char rax_21 = (r15_3 & 0xdf);\n                                    int64_t var_6c8;\n                                    char* var_6b8;\n                                    int16_t var_680;\n                                    if (((rax_21 - 0x45) > 2 && rax_21 != 0x41))\n                                    {\n                                    label_409ab7:\n                                        char rax_22 = r14_1[2];\n                                        void* r15_4 = &var_6b0_1[1];\n                                        *var_6b0_1 = 0x25;\n                                        if ((rax_22 & 1) != 0)\n                                        {\n                                            var_6b0_1[1] = 0x27;\n                                            r15_4 = &var_6b0_1[2];\n                                        }\n                                        if ((rax_22 & 2) != 0)\n                                        {\n                                            *r15_4 = 0x2d;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 4) != 0)\n                                        {\n                                            *r15_4 = 0x2b;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 8) != 0)\n                                        {\n                                            *r15_4 = 0x20;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 0x10) != 0)\n                                        {\n                                            *r15_4 = 0x23;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 0x40) != 0)\n                                        {\n                                            *r15_4 = 0x49;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 0x20) != 0)\n                                        {\n                                            *r15_4 = 0x30;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        int64_t rsi_6 = r14_1[3];\n                                        int64_t rdx_5 = r14_1[4];\n                                        if (rsi_6 != rdx_5)\n                                        {\n                                            uint64_t rcx_4 = (rdx_5 - rsi_6);\n                                            memcpy(r15_4, rsi_6, rcx_4);\n                                            r15_4 = (r15_4 + rcx_4);\n                                        }\n                                        int64_t rsi_7 = r14_1[6];\n                                        uint64_t rdx_7 = r14_1[7];\n                                        if (rsi_7 != rdx_7)\n                                        {\n                                            uint64_t rcx_7 = (rdx_7 - rsi_7);\n                                            memcpy(r15_4, rsi_7, rcx_7);\n                                            r15_4 = (r15_4 + rcx_7);\n                                        }\n                                        if (rax_19 <= 0x10)\n                                        {\n                                            int32_t rax_23 = (1 << rax_19);\n                                            if ((rax_23 & 0x14180) == 0)\n                                            {\n                                                if ((*rax_23[1] & 0x10) != 0)\n                                                {\n                                                    *r15_4 = 0x4c;\n                                                    r15_4 = (r15_4 + 1);\n                                                }\n                                                if (((*rax_23[1] & 0x10) == 0 && (*rax_23[1] & 6) != 0))\n                                                {\n                                                    *r15_4 = 0x6c;\n                                                    r15_4 = (r15_4 + 1);\n                                                }\n                                            }\n                                            if (((((rax_23 & 0x14180) == 0 && (*rax_23[1] & 0x10) == 0) && (*rax_23[1] & 6) != 0) || (rax_23 & 0x14180) != 0))\n                                            {\n                                                *r15_4 = 0x6c;\n                                                r15_4 = (r15_4 + 1);\n                                            }\n                                        }\n                                        char rax_24 = r14_1[9];\n                                        *(r15_4 + 1) = 0;\n                                        *r15_4 = rax_24;\n                                        int64_t rax_25 = r14_1[5];\n                                        if (rax_25 != -1)\n                                        {\n                                            void* rax_27 = &var_670[(rax_25 << 5)];\n                                            if (*rax_27 != 5)\n                                            {\n                                                goto label_40a4dc;\n                                            }\n                                            var_6b8 = 1;\n                                            var_680 = *(rax_27 + 0x10);\n                                            goto label_409c0e;\n                                        }\n                                        var_6b8 = 0;\n                                    label_409c0e:\n                                        int64_t rax_29 = r14_1[8];\n                                        if (rax_29 == -1)\n                                        {\n                                            goto label_409c46;\n                                        }\n                                        void* r8_3 = &var_670[(rax_29 << 5)];\n                                        if (*r8_3 != 5)\n                                        {\n                                            goto label_40a4dc;\n                                        }\n                                        uint64_t rax_31 = var_6b8;\n                                        *(&var_680 + (rax_31 << 2)) = *(r8_3 + 0x10);\n                                        var_6b8 = (rax_31 + 1);\n                                    label_409c46:\n                                        void* rax_34 = (r13_1 + 2);\n                                        char* r11_1;\n                                        if (r13_1 < -2)\n                                        {\n                                            if (r12_1 >= rax_34)\n                                            {\n                                                goto label_40a688;\n                                            }\n                                            bool cond:22_1 = r12_1 < 0;\n                                            if (r12_1 != 0)\n                                            {\n                                                if (cond:22_1)\n                                                {\n                                                    goto label_409da5;\n                                                }\n                                                r12_1 = (r12_1 + r12_1);\n                                                if (r12_1 >= rax_34)\n                                                {\n                                                    goto label_409c79;\n                                                }\n                                            }\n                                            else if (rax_34 <= 0xc)\n                                            {\n                                                r12_1 = 0xc;\n                                            label_409c79:\n                                                rdx_7 = rbx_2 == arg1;\n                                                if (rbx_2 == 0)\n                                                {\n                                                label_40a633:\n                                                    var_6a8 = rdx_7;\n                                                    char* rax_105 = malloc(r12_1);\n                                                    char rdx_17 = var_6a8;\n                                                    r11_1 = rax_105;\n                                                    if (rax_105 == 0)\n                                                    {\n                                                        goto label_409da5;\n                                                    }\n                                                    if ((r13_1 != 0 && rdx_17 != 0))\n                                                    {\n                                                        r11_1 = memcpy(rax_105, rbx_2, r13_1);\n                                                    }\n                                                    goto label_409ca4;\n                                                }\n                                                if (rdx_7 != 0)\n                                                {\n                                                    goto label_40a633;\n                                                }\n                                                char* rax_35 = realloc(rbx_2, r12_1);\n                                                r11_1 = rax_35;\n                                                if (rax_35 == 0)\n                                                {\n                                                    goto label_409da5;\n                                                }\n                                                goto label_409ca4;\n                                            }\n                                            if (rax_34 == -1)\n                                            {\n                                                goto label_409da5;\n                                            }\n                                            r12_1 = rax_34;\n                                            goto label_409c79;\n                                        }\n                                        if (r12_1 != -1)\n                                        {\n                                            goto label_409da5;\n                                        }\n                                    label_40a688:\n                                        r11_1 = rbx_2;\n                                    label_409ca4:\n                                        *(r11_1 + r13_1) = 0;\n                                        int32_t* rax_36 = __errno_location();\n                                        char* r11_2 = r11_1;\n                                        var_6c8 = r15_4;\n                                        var_6a8 = rax_36;\n                                        int32_t rax_37 = *rax_36;\n                                    label_409ce2:\n                                        void* rbx_3 = 0x7fffffff;\n                                        int32_t var_684 = 0xffffffff;\n                                        void* r15_6 = (r12_1 - r13_1);\n                                        *var_6a8 = 0;\n                                        uint64_t rax_39 = rax_19;\n                                        if (r15_6 <= 0x7fffffff)\n                                        {\n                                            rbx_3 = r15_6;\n                                        }\n                                        if (rax_39 > 0x11)\n                                        {\n                                            goto label_401bd3;\n                                        }\n                                        char* var_6d0_1;\n                                        int32_t var_67c;\n                                        int32_t rax_56;\n                                        int32_t rax_58;\n                                        void* rsp_3;\n                                        void* rsp_6;\n                                        void* rsp_10;\n                                        void* rsp_11;\n                                        int64_t rdi_18;\n                                        int32_t* r9_2;\n                                        uint64_t r9_3;\n                                        switch (rax_39)\n                                        {\n                                            case 0:\n                                            {\n                                                goto label_401bd3;\n                                            }\n                                            case 1:\n                                            {\n                                                r9_3 = var_670[((r14_1[0xa] << 5) + 0x10)];\n                                                goto label_40a12b;\n                                            }\n                                            case 2:\n                                            {\n                                                r9_3 = var_670[((r14_1[0xa] << 5) + 0x10)];\n                                                goto label_40a12b;\n                                            }\n                                            case 3:\n                                            {\n                                                r9_3 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                goto label_40a12b;\n                                            }\n                                            case 4:\n                                            {\n                                                r9_3 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                goto label_40a12b;\n                                            }\n                                            case 5:\n                                            case 6:\n                                            case 0xd:\n                                            case 0xe:\n                                            {\n                                                r9_3 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                            label_40a12b:\n                                                int32_t rax_66 = var_6b8;\n                                                rdi_18 = (r11_2 + r13_1);\n                                                var_6d0_1 = r11_2;\n                                                if (rax_66 == 1)\n                                                {\n                                                    *(rsp_1 - 8) = &var_684;\n                                                    *(rsp_1 - 0x10) = r9_3;\n                                                    rsp_6 = (rsp_1 - 0x10);\n                                                    goto label_40a5b2;\n                                                }\n                                                if (rax_66 == 2)\n                                                {\n                                                    *(rsp_1 - 0x10) = &var_684;\n                                                    *(rsp_1 - 0x18) = r9_3;\n                                                    rsp_10 = (rsp_1 - 0x18);\n                                                    goto label_40a56c;\n                                                }\n                                                *(rsp_1 - 0x10) = &var_684;\n                                                rsp_6 = (rsp_1 - 0x10);\n                                                goto label_40a172;\n                                            }\n                                            case 7:\n                                            case 8:\n                                            case 9:\n                                            case 0xa:\n                                            case 0xf:\n                                            case 0x10:\n                                            case 0x11:\n                                            {\n                                                rdi_18 = (r11_2 + r13_1);\n                                                r9_2 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                rax_56 = var_6b8;\n                                                var_6d0_1 = r11_2;\n                                                break;\n                                            }\n                                            case 0xb:\n                                            {\n                                                zmm0_1 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                int32_t rax_83 = var_6b8;\n                                                void* rsp_17;\n                                                if (rax_83 == 1)\n                                                {\n                                                    *(rsp_1 - 0x10) = &var_684;\n                                                    rsp_17 = (rsp_1 - 0x10);\n                                                }\n                                                if (rax_83 == 2)\n                                                {\n                                                    *(rsp_1 - 8) = &var_684;\n                                                    *(rsp_1 - 0x10) = var_67c;\n                                                    rsp_17 = (rsp_1 - 0x10);\n                                                }\n                                                if ((rax_83 == 1 || rax_83 == 2))\n                                                {\n                                                    rax_58 = __snprintf_chk();\n                                                    *rsp_17;\n                                                    *(rsp_17 + 8);\n                                                    rsp_1 = (rsp_17 + 0x10);\n                                                }\n                                                if ((rax_83 != 1 && rax_83 != 2))\n                                                {\n                                                    rax_58 = __snprintf_chk();\n                                                }\n                                                goto label_40a040;\n                                            }\n                                            case 0xc:\n                                            {\n                                                rdi_18 = (r11_2 + r13_1);\n                                                var_6d0_1 = r11_2;\n                                                int80_t x87_r7_2 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                int32_t rax_76 = var_6b8;\n                                                if (rax_76 != 1)\n                                                {\n                                                    if (rax_76 == 2)\n                                                    {\n                                                        *(rsp_1 - 0x10) = &var_684;\n                                                        *(rsp_1 - 0x20) = x87_r7_2;\n                                                        *(rsp_1 - 0x30) = var_67c;\n                                                        rax_58 = __snprintf_chk();\n                                                        r11_2 = var_6d0_1;\n                                                        goto label_40a040;\n                                                    }\n                                                    rsp_3 = (rsp_1 - 0x10);\n                                                    r9_2 = &var_684;\n                                                    *rsp_3 = x87_r7_2;\n                                                    goto label_40a032;\n                                                }\n                                                *(rsp_1 - 0x10) = &var_684;\n                                                rsp_11 = (rsp_1 - 0x20);\n                                                *rsp_11 = x87_r7_2;\n                                            label_40a58c:\n                                                rax_58 = __snprintf_chk(rdi_18, rbx_3, 1, -1, var_6b0_1, var_680);\n                                                rsp_1 = (rsp_11 + 0x20);\n                                                r11_2 = var_6d0_1;\n                                            label_40a040:\n                                                rdx_1 = var_684;\n                                                if (rdx_1 >= 0)\n                                                {\n                                                    goto label_40a04e;\n                                                }\n                                                break;\n                                            }\n                                        }\n                                        if (((((((rax_39 == 7 || rax_39 == 8) || rax_39 == 9) || rax_39 == 0xa) || rax_39 == 0xf) || rax_39 == 0x10) || rax_39 == 0x11))\n                                        {\n                                            if (rax_56 != 1)\n                                            {\n                                                if (rax_56 == 2)\n                                                {\n                                                    *(rsp_1 - 0x10) = &var_684;\n                                                    *(rsp_1 - 0x18) = r9_2;\n                                                    rsp_10 = (rsp_1 - 0x18);\n                                                label_40a56c:\n                                                    *(rsp_10 - 8) = var_67c;\n                                                    rsp_11 = (rsp_10 - 8);\n                                                    goto label_40a58c;\n                                                }\n                                                *(rsp_1 - 0x10) = &var_684;\n                                                rsp_3 = (rsp_1 - 0x10);\n                                            label_40a032:\n                                                rax_58 = __snprintf_chk(rdi_18, rbx_3, 1, -1, var_6b0_1, r9_2);\n                                                r11_2 = var_6d0_1;\n                                                *rsp_3;\n                                                *(rsp_3 + 8);\n                                                rsp_1 = (rsp_3 + 0x10);\n                                                goto label_40a040;\n                                            }\n                                            *(rsp_1 - 8) = &var_684;\n                                            *(rsp_1 - 0x10) = r9_2;\n                                            rsp_6 = (rsp_1 - 0x10);\n                                        label_40a5b2:\n                                            r9_3 = var_680;\n                                        label_40a172:\n                                            rax_58 = __snprintf_chk(rdi_18, rbx_3, 1, -1, var_6b0_1, r9_3);\n                                            rdx_1 = var_684;\n                                            *(rsp_6 + 8);\n                                            rsp_1 = (rsp_6 + 0x10);\n                                            r11_2 = var_6d0_1;\n                                            if (rdx_1 >= 0)\n                                            {\n                                            label_40a04e:\n                                                int64_t rcx_16 = rdx_1;\n                                                if ((rcx_16 < rbx_3 && *(&r11_2[rcx_16] + r13_1) != 0))\n                                                {\n                                                    goto label_40a4dc;\n                                                }\n                                                if (rdx_1 < rax_58)\n                                                {\n                                                label_40a068:\n                                                    var_684 = rax_58;\n                                                    rdx_1 = rax_58;\n                                                }\n                                                if ((rdx_1 + 1) < rbx_3)\n                                                {\n                                                    rbx_2 = r11_2;\n                                                    r15_2 = (rdx_1 + r13_1);\n                                                    *var_6a8 = rax_37;\n                                                    goto label_409ea7;\n                                                }\n                                                if (r15_6 > 0x7ffffffe)\n                                                {\n                                                    if ((r11_2 != arg1 && r11_2 != 0))\n                                                    {\n                                                        free(r11_2);\n                                                    }\n                                                    if (var_6e0_1 != 0)\n                                                    {\n                                                        free(var_6e0_1);\n                                                    }\n                                                    if (var_580 != &var_568)\n                                                    {\n                                                        free(var_580);\n                                                    }\n                                                    if (var_670 != &var_668)\n                                                    {\n                                                        free(var_670);\n                                                    }\n                                                    rbx_2 = nullptr;\n                                                    *var_6a8 = 0x4b;\n                                                    break;\n                                                }\n                                                uint64_t rax_60 = (rdx_1 + 2);\n                                                void* rax_61 = (rax_60 + r13_1);\n                                                int64_t rcx_18;\n                                                rcx_18 = (rax_60 + r13_1) < rax_60;\n                                                if (r12_1 >= 0)\n                                                {\n                                                    void* rdx_13 = (r12_1 + r12_1);\n                                                    if (rcx_18 == 0)\n                                                    {\n                                                        if (rdx_13 >= rax_61)\n                                                        {\n                                                            rax_61 = rdx_13;\n                                                        }\n                                                        if (r12_1 >= rax_61)\n                                                        {\n                                                            goto label_409ce2;\n                                                        }\n                                                        r12_1 = (r12_1 + r12_1);\n                                                        if ((r12_1 < rax_61 && rax_61 != -1))\n                                                        {\n                                                            r12_1 = rax_61;\n                                                        }\n                                                        if (((r12_1 < rax_61 && rax_61 != -1) || r12_1 >= rax_61))\n                                                        {\n                                                            rbx_3 = r11_2 == arg1;\n                                                            if ((r11_2 == 0 || (r11_2 != 0 && rbx_3 != 0)))\n                                                            {\n                                                                char* rax_101 = malloc(r12_1);\n                                                                if (rax_101 != 0)\n                                                                {\n                                                                    if ((r13_1 != 0 && rbx_3 != 0))\n                                                                    {\n                                                                        r11_2 = memcpy(rax_101, r11_2, r13_1);\n                                                                        goto label_409ce2;\n                                                                    }\n                                                                    r11_2 = rax_101;\n                                                                    goto label_409ce2;\n                                                                }\n                                                            }\n                                                            if ((r11_2 != 0 && rbx_3 == 0))\n                                                            {\n                                                                char* rax_62 = realloc(r11_2, r12_1);\n                                                                if (rax_62 != 0)\n                                                                {\n                                                                    r11_2 = rax_62;\n                                                                    goto label_409ce2;\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                                else if (r12_1 == -1)\n                                                {\n                                                    goto label_409ce2;\n                                                }\n                                                r15_7 = r11_2;\n                                            }\n                                        }\n                                        if ((((((((((rax_39 == 7 || rax_39 == 8) || rax_39 == 9) || rax_39 == 0xa) || rax_39 == 0xf) || rax_39 == 0x10) || rax_39 == 0x11) && rax_56 == 1) && rdx_1 < 0) || rax_39 == 0xc))\n                                        {\n                                            if (*(var_6c8 + 1) != 0)\n                                            {\n                                                *(var_6c8 + 1) = 0;\n                                                goto label_409ce2;\n                                            }\n                                            if (rax_58 < 0)\n                                            {\n                                                int32_t rbx_4 = *var_6a8;\n                                                if (rbx_4 == 0)\n                                                {\n                                                    rbx_4 = 0x54;\n                                                    if ((r14_1[9] & 0xef) != 0x63)\n                                                    {\n                                                        rbx_4 = 0x16;\n                                                    }\n                                                }\n                                                if ((r11_2 != arg1 && r11_2 != 0))\n                                                {\n                                                    free(r11_2);\n                                                }\n                                                if (var_6e0_1 != 0)\n                                                {\n                                                    free(var_6e0_1);\n                                                }\n                                                if (var_580 != &var_568)\n                                                {\n                                                    free(var_580);\n                                                }\n                                                if (var_670 != &var_668)\n                                                {\n                                                    free(var_670);\n                                                }\n                                                *var_6a8 = rbx_4;\n                                                rbx_2 = nullptr;\n                                                break;\n                                            }\n                                            goto label_40a068;\n                                        }\n                                    }\n                                    if (((rax_21 - 0x45) <= 2 || ((rax_21 - 0x45) > 2 && rax_21 == 0x41)))\n                                    {\n                                        if (rax_19 != 0xc)\n                                        {\n                                            goto label_409ab7;\n                                        }\n                                        long double x87_r7_1 = *(rdx_1 + 0x10);\n                                        if ((!(FCMP_UO(x87_r7_1, x87_r7_1))))\n                                        {\n                                            long double x87_r6_3 = x87_r7_1;\n                                            x87_r7_1 = (x87_r7_1 + x87_r7_1);\n                                            (x87_r6_3 - x87_r7_1);\n                                            bool cond:7_1 = x87_r6_3 != x87_r7_1;\n                                            if ((FCMP_UO(x87_r6_3, x87_r7_1)))\n                                            {\n                                                goto label_409ab7;\n                                            }\n                                            if (cond:7_1)\n                                            {\n                                                goto label_409ab7;\n                                            }\n                                            goto label_409f3d;\n                                        }\n                                    label_409f3d:\n                                        char* rdx_11 = r14_1[3];\n                                        int64_t rdi_16 = r14_1[4];\n                                        int32_t r11_3 = r14_1[2];\n                                        int64_t r10_1;\n                                        if (rdx_11 == rdi_16)\n                                        {\n                                            r10_1 = 0;\n                                        label_409d30:\n                                            void* rdx_9 = r14_1[6];\n                                            int64_t rcx_10 = r14_1[7];\n                                            int64_t rcx_11;\n                                            int64_t rdx_10;\n                                            if (rdx_9 != rcx_10)\n                                            {\n                                                int64_t rsi_10 = r14_1[8];\n                                                if (rsi_10 == -1)\n                                                {\n                                                    char* rax_139 = (rdx_9 + 1);\n                                                    rdx_10 = 0;\n                                                    if (rcx_10 == rax_139)\n                                                    {\n                                                    label_40b014:\n                                                        rcx_11 = 0xc;\n                                                    label_40a401:\n                                                        int64_t rax_97 = rcx_11;\n                                                        if (r10_1 >= rcx_11)\n                                                        {\n                                                            rax_97 = r10_1;\n                                                        }\n                                                        size_t rax_98 = (rax_97 + 1);\n                                                        var_698 = rax_98;\n                                                        if (rax_97 >= -1)\n                                                        {\n                                                            goto label_409da5;\n                                                        }\n                                                        void var_2f8;\n                                                        int64_t rcx_21;\n                                                        if (rax_98 <= 0x2bc)\n                                                        {\n                                                            rcx_21 = &var_2f8;\n                                                        }\n                                                        else\n                                                        {\n                                                            var_6b8 = r11_3;\n                                                            var_6a8 = x87_r7_1;\n                                                            if (rax_98 == -1)\n                                                            {\n                                                                goto label_409da5;\n                                                            }\n                                                            int64_t rax_99 = malloc(rax_98);\n                                                            r11_3 = var_6b8;\n                                                            x87_r7_1 = var_6a8;\n                                                            rcx_21 = rax_99;\n                                                            if (rax_99 == 0)\n                                                            {\n                                                                goto label_409da5;\n                                                            }\n                                                        }\n                                                        int64_t r9_6;\n                                                        int64_t r15_9;\n                                                        if ((!(FCMP_UO(x87_r7_1, x87_r7_1))))\n                                                        {\n                                                            uint16_t x87status_1;\n                                                            int16_t temp0_2;\n                                                            temp0_2 = __fnstcw_memmem16(arg5);\n                                                            var_680 = temp0_2;\n                                                            int32_t r8_7 = var_680;\n                                                            int16_t rax_100;\n                                                            *rax_100[1] = (*r8_7[1] | 3);\n                                                            var_680 = rax_100;\n                                                            uint16_t x87control;\n                                                            uint16_t x87status_2;\n                                                            x87control = __fldcw_memmem16(var_680);\n                                                            bool c0_1;\n                                                            bool c1_1;\n                                                            bool c2_1;\n                                                            bool c3_1;\n                                                            c0_1 = __fxam(x87_r7_1);\n                                                            if ((*((((c0_1) ? 1 : 0) << 8) | ((((c1_1) ? 1 : 0) << 9) | ((((c2_1) ? 1 : 0) << 0xa) | ((((c3_1) ? 1 : 0) << 0xe) | 0x3800))))[1] & 2) != 0)\n                                                            {\n                                                                *rcx_21 = 0x2d;\n                                                                x87_r7_1 = (-x87_r7_1);\n                                                                r15_9 = (rcx_21 + 1);\n                                                            }\n                                                            else if ((r11_3 & 4) != 0)\n                                                            {\n                                                                r15_9 = (rcx_21 + 1);\n                                                                *rcx_21 = 0x2b;\n                                                            }\n                                                            else\n                                                            {\n                                                                r15_9 = rcx_21;\n                                                                if ((r11_3 & 8) != 0)\n                                                                {\n                                                                    r15_9 = (rcx_21 + 1);\n                                                                    *rcx_21 = 0x20;\n                                                                }\n                                                            }\n                                                            long double x87_r6_4 = 0;\n                                                            if (x87_r7_1 <= x87_r6_4)\n                                                            {\n                                                                (x87_r7_1 - x87_r6_4);\n                                                                bool cond:14_1 = x87_r7_1 != x87_r6_4;\n                                                                if ((FCMP_UO(x87_r7_1, x87_r6_4)))\n                                                                {\n                                                                    goto label_40a4dc;\n                                                                }\n                                                                if (cond:14_1)\n                                                                {\n                                                                    goto label_40a4dc;\n                                                                }\n                                                                bool rax_118 = (r14_1[9] & 0xdf);\n                                                                int32_t var_6e8;\n                                                                if (rax_118 == 0x46)\n                                                                {\n                                                                    *r15_9 = 0x30;\n                                                                    if ((r11_3 & 0x10) != 0)\n                                                                    {\n                                                                    label_40ae39:\n                                                                        var_6e8 = r10_1;\n                                                                        var_6b8 = r11_3;\n                                                                        r9_6 = (r15_9 + 2);\n                                                                        char rax_137 = *nl_langinfo(0x10000);\n                                                                        r11_3 = var_6b8;\n                                                                        r10_1 = var_6e8;\n                                                                        if (rax_137 == 0)\n                                                                        {\n                                                                            rax_137 = 0x2e;\n                                                                        }\n                                                                        *(r15_9 + 1) = rax_137;\n                                                                        if (rdx_10 != 0)\n                                                                        {\n                                                                            int64_t rsi_34 = ((r15_9 + rdx_10) + 2);\n                                                                            int64_t rax_138 = r9_6;\n                                                                        label_40aeb0:\n                                                                            rax_138 = (rax_138 + 1);\n                                                                            *(rax_138 - 1) = 0x30;\n                                                                            if (rax_138 != rsi_34)\n                                                                            {\n                                                                                goto label_40aeb0;\n                                                                            }\n                                                                            r9_6 = (r9_6 + rdx_10);\n                                                                        }\n                                                                        goto label_40a92b;\n                                                                    }\n                                                                    if (rdx_10 != 0)\n                                                                    {\n                                                                        goto label_40ae39;\n                                                                    }\n                                                                label_40a927:\n                                                                    r9_6 = (r15_9 + 1);\n                                                                label_40a92b:\n                                                                    var_680 = r8_7;\n                                                                    uint16_t x87status_3;\n                                                                    arg5 = __fldcw_memmem16(var_680);\n                                                                label_40a93c:\n                                                                    uint64_t r8_11 = (r9_6 - rcx_21);\n                                                                    if (r10_1 > r8_11)\n                                                                    {\n                                                                        int64_t r10_2 = (r10_1 - r8_11);\n                                                                        int64_t rdi_38 = (r9_6 + r10_2);\n                                                                        r8_11 = (rdi_38 - rcx_21);\n                                                                        if ((r11_3 & 2) == 0)\n                                                                        {\n                                                                            if (((r11_3 & 0x20) == 0 || ((r11_3 & 0x20) != 0 && r15_9 == 0)))\n                                                                            {\n                                                                                int64_t rax_130 = -1;\n                                                                                int64_t rdx_26 = ((rcx_21 - 1) - r9_6);\n                                                                                if (rcx_21 < r9_6)\n                                                                                {\n                                                                                label_40ac75:\n                                                                                    *(rdi_38 + rax_130) = *(r9_6 + rax_130);\n                                                                                    rax_130 = (rax_130 - 1);\n                                                                                    if (rdx_26 != rax_130)\n                                                                                    {\n                                                                                        goto label_40ac75;\n                                                                                    }\n                                                                                    r9_6 = rcx_21;\n                                                                                }\n                                                                                if (r10_2 != 0)\n                                                                                {\n                                                                                    int64_t r10_4 = (r10_2 + r9_6);\n                                                                                label_40ac98:\n                                                                                    r9_6 = (r9_6 + 1);\n                                                                                    *(r9_6 - 1) = 0x20;\n                                                                                    if (r9_6 != r10_4)\n                                                                                    {\n                                                                                        goto label_40ac98;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                            if (((r11_3 & 0x20) != 0 && r15_9 != 0))\n                                                                            {\n                                                                                if (r15_9 >= r9_6)\n                                                                                {\n                                                                                    r15_9 = r9_6;\n                                                                                }\n                                                                                else\n                                                                                {\n                                                                                    int64_t rax_119 = -1;\n                                                                                    int64_t rdx_21 = ((r15_9 - 1) - r9_6);\n                                                                                label_40a98d:\n                                                                                    *(rdi_38 + rax_119) = *(r9_6 + rax_119);\n                                                                                    rax_119 = (rax_119 - 1);\n                                                                                    if (rax_119 != rdx_21)\n                                                                                    {\n                                                                                        goto label_40a98d;\n                                                                                    }\n                                                                                }\n                                                                                if (r10_2 != 0)\n                                                                                {\n                                                                                    int64_t r10_3 = (r10_2 + r15_9);\n                                                                                label_40a9a8:\n                                                                                    r15_9 = (r15_9 + 1);\n                                                                                    *(r15_9 - 1) = 0x30;\n                                                                                    if (r15_9 != r10_3)\n                                                                                    {\n                                                                                        goto label_40a9a8;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                        else if (r10_2 != 0)\n                                                                        {\n                                                                        label_40ae00:\n                                                                            r9_6 = (r9_6 + 1);\n                                                                            *(r9_6 - 1) = 0x20;\n                                                                            if (rdi_38 != r9_6)\n                                                                            {\n                                                                                goto label_40ae00;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                    if (var_698 <= r8_11)\n                                                                    {\n                                                                        goto label_40a4dc;\n                                                                    }\n                                                                    uint64_t rax_121 = (r13_1 + r8_11);\n                                                                    int64_t rsi_24;\n                                                                    rsi_24 = (r13_1 + r8_11) < r13_1;\n                                                                    r15_2 = rax_121;\n                                                                    if ((r12_1 - r13_1) > r8_11)\n                                                                    {\n                                                                        goto label_40aa6a;\n                                                                    }\n                                                                    if (rsi_24 != 0)\n                                                                    {\n                                                                        if (r12_1 != -1)\n                                                                        {\n                                                                            goto label_409da5;\n                                                                        }\n                                                                        goto label_40aa6a;\n                                                                    }\n                                                                    if (r12_1 >= rax_121)\n                                                                    {\n                                                                        goto label_40aa6a;\n                                                                    }\n                                                                    bool cond:21_1 = r12_1 < 0;\n                                                                    if (r12_1 != 0)\n                                                                    {\n                                                                        if (cond:21_1)\n                                                                        {\n                                                                            goto label_409da5;\n                                                                        }\n                                                                        r12_1 = (r12_1 + r12_1);\n                                                                        if (r12_1 >= rax_121)\n                                                                        {\n                                                                            goto label_40aa15;\n                                                                        }\n                                                                    }\n                                                                    else if (rax_121 <= 0xc)\n                                                                    {\n                                                                        r12_1 = 0xc;\n                                                                    label_40aa15:\n                                                                        void* rdx_23;\n                                                                        rdx_23 = rbx_2 == arg1;\n                                                                        if (rbx_2 == 0)\n                                                                        {\n                                                                        label_40acae:\n                                                                            var_6b8 = rdx_23;\n                                                                            var_698 = rcx_21;\n                                                                            char* rax_131 = malloc(r12_1);\n                                                                            rcx_21 = var_698;\n                                                                            char rdx_27 = var_6b8;\n                                                                            if (rax_131 == 0)\n                                                                            {\n                                                                                goto label_409da5;\n                                                                            }\n                                                                            if ((r13_1 == 0 || (r13_1 != 0 && rdx_27 == 0)))\n                                                                            {\n                                                                                rbx_2 = rax_131;\n                                                                            }\n                                                                            if ((r13_1 != 0 && rdx_27 != 0))\n                                                                            {\n                                                                                var_698 = rcx_21;\n                                                                                rcx_21 = var_698;\n                                                                                rbx_2 = memcpy(rax_131, rbx_2, r13_1);\n                                                                            }\n                                                                            goto label_40aa6a;\n                                                                        }\n                                                                        if (rdx_23 != 0)\n                                                                        {\n                                                                            goto label_40acae;\n                                                                        }\n                                                                        var_6a8 = r8_11;\n                                                                        var_698 = rcx_21;\n                                                                        char* rax_122 = realloc(rbx_2, r12_1);\n                                                                        if (rax_122 == 0)\n                                                                        {\n                                                                            goto label_409da5;\n                                                                        }\n                                                                        rcx_21 = var_698;\n                                                                        r8_11 = var_6a8;\n                                                                        rbx_2 = rax_122;\n                                                                    label_40aa6a:\n                                                                        var_698 = rcx_21;\n                                                                        memcpy((rbx_2 + r13_1), rcx_21, r8_11);\n                                                                        int64_t rcx_25 = var_698;\n                                                                        if (rcx_25 != &var_2f8)\n                                                                        {\n                                                                            free(rcx_25);\n                                                                        }\n                                                                        goto label_409ea7;\n                                                                    }\n                                                                    if (rax_121 == -1)\n                                                                    {\n                                                                        goto label_409da5;\n                                                                    }\n                                                                    r12_1 = rax_121;\n                                                                    goto label_40aa15;\n                                                                }\n                                                                if (rax_118 != 0x45)\n                                                                {\n                                                                    int32_t var_6f0;\n                                                                    if (rax_118 == 0x47)\n                                                                    {\n                                                                        *r15_9 = 0x30;\n                                                                        if ((r11_3 & 0x10) == 0)\n                                                                        {\n                                                                            goto label_40a927;\n                                                                        }\n                                                                        int64_t r9_8 = (r15_9 + 2);\n                                                                        if (rdx_10 == 0)\n                                                                        {\n                                                                            var_6a8 = r11_3;\n                                                                            r11_3 = var_6a8;\n                                                                            char rax_156 = *nl_langinfo(0x10000);\n                                                                            r9_6 = r9_8;\n                                                                            if (rax_156 == 0)\n                                                                            {\n                                                                                rax_156 = 0x2e;\n                                                                            }\n                                                                            *(r15_9 + 1) = rax_156;\n                                                                        }\n                                                                        else\n                                                                        {\n                                                                            char* rsi_32 = (rdx_10 - 1);\n                                                                            var_6f0 = r10_1;\n                                                                            var_6e8 = r9_8;\n                                                                            var_6c8 = r11_3;\n                                                                            var_6b8 = rdx_10;\n                                                                            char rax_134 = *nl_langinfo(0x10000);\n                                                                            r11_3 = var_6c8;\n                                                                            r9_6 = var_6e8;\n                                                                            r10_1 = var_6f0;\n                                                                            if (rax_134 == 0)\n                                                                            {\n                                                                                rax_134 = 0x2e;\n                                                                            }\n                                                                            *(r15_9 + 1) = rax_134;\n                                                                            if (rsi_32 != 0)\n                                                                            {\n                                                                                void* rdx_30 = &var_6b8[(r15_9 + 1)];\n                                                                                int64_t rax_135 = r9_6;\n                                                                            label_40adde:\n                                                                                rax_135 = (rax_135 + 1);\n                                                                                *(rax_135 - 1) = 0x30;\n                                                                                if (rax_135 != rdx_30)\n                                                                                {\n                                                                                    goto label_40adde;\n                                                                                }\n                                                                                r9_6 = &rsi_32[r9_6];\n                                                                            }\n                                                                        }\n                                                                        goto label_40a92b;\n                                                                    }\n                                                                    if (rax_118 != 0x41)\n                                                                    {\n                                                                        goto label_40a4dc;\n                                                                    }\n                                                                    char* rax_142 = (r15_9 + 2);\n                                                                    *r15_9 = 0x30;\n                                                                    char rax_143 = r14_1[9];\n                                                                    *(r15_9 + 2) = 0x30;\n                                                                    *(r15_9 + 1) = (rax_143 + 0x17);\n                                                                    char* rsi_41;\n                                                                    if ((r11_3 & 0x10) == 0)\n                                                                    {\n                                                                        rsi_41 = (r15_9 + 3);\n                                                                    }\n                                                                    if (((r11_3 & 0x10) != 0 || ((r11_3 & 0x10) == 0 && rdx_10 != 0 != 0)))\n                                                                    {\n                                                                        var_6f0 = r10_1;\n                                                                        var_6e8 = rcx_21;\n                                                                        var_6c8 = r11_3;\n                                                                        rsi_41 = (r15_9 + 4);\n                                                                        char rax_153 = *nl_langinfo(0x10000);\n                                                                        r11_3 = var_6c8;\n                                                                        rcx_21 = var_6e8;\n                                                                        r10_1 = var_6f0;\n                                                                        if (rax_153 == 0)\n                                                                        {\n                                                                            rax_153 = 0x2e;\n                                                                        }\n                                                                        *(r15_9 + 3) = rax_153;\n                                                                        if (rdx_10 != 0)\n                                                                        {\n                                                                            int64_t rdi_53 = ((r15_9 + rdx_10) + 4);\n                                                                            char* rax_154 = rsi_41;\n                                                                        label_40b225:\n                                                                            rax_154 = &rax_154[1];\n                                                                            rax_154[-1] = 0x30;\n                                                                            if (rax_154 != rdi_53)\n                                                                            {\n                                                                                goto label_40b225;\n                                                                            }\n                                                                            rsi_41 = &rsi_41[rdx_10];\n                                                                        }\n                                                                    }\n                                                                    char rax_145 = r14_1[9];\n                                                                    r9_6 = &rsi_41[3];\n                                                                    *(rsi_41 + 1) = 0x302b;\n                                                                    r15_9 = rax_142;\n                                                                    *rsi_41 = (rax_145 + 0xf);\n                                                                    goto label_40a92b;\n                                                                }\n                                                                *r15_9 = 0x30;\n                                                                char* rsi_27;\n                                                                if ((r11_3 & 0x10) == 0)\n                                                                {\n                                                                    rsi_27 = (r15_9 + 1);\n                                                                }\n                                                                if (((r11_3 & 0x10) != 0 || ((r11_3 & 0x10) == 0 && rdx_10 != 0 != 0)))\n                                                                {\n                                                                    var_6e8 = r10_1;\n                                                                    var_6b8 = r11_3;\n                                                                    rsi_27 = (r15_9 + 2);\n                                                                    char rax_148 = *nl_langinfo(0x10000);\n                                                                    r11_3 = var_6b8;\n                                                                    r10_1 = var_6e8;\n                                                                    if (rax_148 == 0)\n                                                                    {\n                                                                        rax_148 = 0x2e;\n                                                                    }\n                                                                    *(r15_9 + 1) = rax_148;\n                                                                    if (rdx_10 != 0)\n                                                                    {\n                                                                        int64_t rdi_50 = ((r15_9 + rdx_10) + 2);\n                                                                        char* rax_149 = rsi_27;\n                                                                    label_40b110:\n                                                                        rax_149 = &rax_149[1];\n                                                                        rax_149[-1] = 0x30;\n                                                                        if (rax_149 != rdi_50)\n                                                                        {\n                                                                            goto label_40b110;\n                                                                        }\n                                                                        rsi_27 = &rsi_27[rdx_10];\n                                                                    }\n                                                                }\n                                                                char rax_123 = r14_1[9];\n                                                                r9_6 = &rsi_27[4];\n                                                                rsi_27[3] = 0x30;\n                                                                *rsi_27 = rax_123;\n                                                                *(rsi_27 + 1) = 0x302b;\n                                                                goto label_40a92b;\n                                                            }\n                                                            long double x87_r6_7 = (x87_r6_4 + x87_r6_4);\n                                                            (x87_r6_7 - x87_r6_4);\n                                                            bool cond:15_1 = x87_r6_7 != x87_r6_4;\n                                                            if ((!(FCMP_O(x87_r6_7, x87_r6_4))))\n                                                            {\n                                                                goto label_40a4dc;\n                                                            }\n                                                            if (cond:15_1)\n                                                            {\n                                                                goto label_40a4dc;\n                                                            }\n                                                            r9_6 = (r15_9 + 3);\n                                                            if ((r14_1[9] - 0x41) > 0x19)\n                                                            {\n                                                                *(r15_9 + 2) = 0x66;\n                                                                *r15_9 = 0x6e69;\n                                                                r15_9 = 0;\n                                                            }\n                                                            else\n                                                            {\n                                                                *(r15_9 + 2) = 0x46;\n                                                                *r15_9 = 0x4e49;\n                                                                r15_9 = 0;\n                                                            }\n                                                            goto label_40a92b;\n                                                        }\n                                                        r9_6 = (rcx_21 + 3);\n                                                        if ((r15_3 - 0x41) > 0x19)\n                                                        {\n                                                            *(rcx_21 + 2) = 0x6e;\n                                                            r15_9 = 0;\n                                                            *rcx_21 = 0x616e;\n                                                        }\n                                                        else\n                                                        {\n                                                            *(rcx_21 + 2) = 0x4e;\n                                                            r15_9 = 0;\n                                                            *rcx_21 = 0x414e;\n                                                        }\n                                                        goto label_40a93c;\n                                                    }\n                                                    char* rsi_36 = rax_139;\n                                                label_40af73:\n                                                    char* rdi_49 = &rsi_36[1];\n                                                    int64_t rax_140 = (*rsi_36 - 0x30);\n                                                    int64_t rsi_39 = -1;\n                                                    if (rdx_10 <= 0x1999999999999999)\n                                                    {\n                                                        int64_t rsi_40 = (rdx_10 * 5);\n                                                        rsi_39 = (rsi_40 + rsi_40);\n                                                    }\n                                                    rsi_36 = rdi_49;\n                                                    rdx_10 = (rax_140 + rsi_39);\n                                                    if ((rax_140 + rsi_39) < rax_140)\n                                                    {\n                                                        if (rcx_10 == rdi_49)\n                                                        {\n                                                            goto label_409da5;\n                                                        }\n                                                    label_40afa7:\n                                                        rsi_36 = &rdi_49[1];\n                                                        if (rsi_36[-1] != 0x30)\n                                                        {\n                                                            if (rcx_10 != rsi_36)\n                                                            {\n                                                                rdi_49 = rsi_36;\n                                                                goto label_40afa7;\n                                                            }\n                                                            goto label_409da5;\n                                                        }\n                                                        rdx_10 = -1;\n                                                    }\n                                                    if (rcx_10 != rsi_36)\n                                                    {\n                                                        goto label_40af73;\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    void* r8_4 = &var_670[(rsi_10 << 5)];\n                                                    if (*r8_4 != 5)\n                                                    {\n                                                        goto label_40a4dc;\n                                                    }\n                                                    rdx_10 = *(r8_4 + 0x10);\n                                                    if (rdx_10 < 0)\n                                                    {\n                                                        goto label_40a3e0;\n                                                    }\n                                                }\n                                                if (rdx_10 == 0)\n                                                {\n                                                    goto label_40b014;\n                                                }\n                                                rcx_11 = (rdx_10 + 0xc);\n                                                if (rdx_10 >= -0xc)\n                                                {\n                                                    goto label_409da5;\n                                                }\n                                                goto label_40a401;\n                                            }\n                                        label_40a3e0:\n                                            bool cond:9_1 = rax_21 != 0x41;\n                                            rcx_11 = 0xc;\n                                            if (rax_21 != 0x41)\n                                            {\n                                                rcx_11 = 0x12;\n                                            }\n                                            rdx_10 = 0;\n                                            if (cond:9_1)\n                                            {\n                                                rdx_10 = 6;\n                                            }\n                                            goto label_40a401;\n                                        }\n                                        int64_t rcx_12 = r14_1[5];\n                                        if (rcx_12 != -1)\n                                        {\n                                            void* rcx_14 = &var_670[(rcx_12 << 5)];\n                                            if (*rcx_14 != 5)\n                                            {\n                                                goto label_40a4dc;\n                                            }\n                                            r10_1 = *(rcx_14 + 0x10);\n                                            if (r10_1 < 0)\n                                            {\n                                                r11_3 = (r11_3 | 2);\n                                                r10_1 = (-r10_1);\n                                            }\n                                            goto label_409d30;\n                                        }\n                                        r10_1 = 0;\n                                        var_698 = rcx_12;\n                                    label_40aee1:\n                                        char* rsi_35 = &rdx_11[1];\n                                        int64_t r9_10 = -1;\n                                        int64_t rdx_34 = (*rdx_11 - 0x30);\n                                        if (r10_1 <= 0x1999999999999999)\n                                        {\n                                            int64_t r9_11 = (r10_1 * 5);\n                                            r9_10 = (r9_11 + r9_11);\n                                        }\n                                        r10_1 = (rdx_34 + r9_10);\n                                        rdx_11 = rsi_35;\n                                        if ((rdx_34 + r9_10) < rdx_34)\n                                        {\n                                            int64_t rcx_26 = var_698;\n                                            if (rdi_16 != rsi_35)\n                                            {\n                                            label_40af26:\n                                                rdx_11 = &rdx_11[1];\n                                                if (rdx_11[-1] == 0x30)\n                                                {\n                                                    var_698 = rcx_26;\n                                                    r10_1 = -1;\n                                                }\n                                                else if (rdi_16 != rdx_11)\n                                                {\n                                                    goto label_40af26;\n                                                }\n                                            }\n                                            if ((rdi_16 == rsi_35 || (rdi_16 != rsi_35 && rdx_11[-1] != 0x30)))\n                                            {\n                                                r10_1 = rcx_26;\n                                            }\n                                        }\n                                        if ((((((rdx_34 + r9_10) < rdx_34 && rdi_16 != rsi_35) && rdx_11[-1] == 0x30) || (rdx_34 + r9_10) >= rdx_34) && rdi_16 != rdx_11))\n                                        {\n                                            goto label_40aee1;\n                                        }\n                                        goto label_409d30;\n                                    }\n                                }\n                            }\n                            if ((r15_7 != arg1 && r15_7 != 0))\n                            {\n                                goto label_409fcb;\n                            }\n                        }\n                        else\n                        {\n                            if (r12_1 >= rax_8)\n                            {\n                                goto label_409a23;\n                            }\n                            bool cond:0_1 = r12_1 < 0;\n                            if ((r12_1 == 0 && rax_8 <= 0xc))\n                            {\n                                r12_1 = 0xc;\n                                rdx_1 = rbx_2 == arg1;\n                                if (rbx_2 == 0)\n                                {\n                                label_40990a:\n                                    var_6a8 = rdx_1;\n                                    var_698 = rcx_1;\n                                    char* rax_9 = malloc(r12_1);\n                                    rcx_1 = var_698;\n                                    char rdx_2 = var_6a8;\n                                    if (rax_9 == 0)\n                                    {\n                                        goto label_409da5;\n                                    }\n                                    if ((r15_2 == 0 || (r15_2 != 0 && rdx_2 == 0)))\n                                    {\n                                        rbx_2 = rax_9;\n                                    }\n                                    if ((r15_2 != 0 && rdx_2 != 0))\n                                    {\n                                        var_698 = rcx_1;\n                                        rcx_1 = var_698;\n                                        rbx_2 = memcpy(rax_9, rbx_2, r15_2);\n                                    }\n                                    goto label_409a23;\n                                }\n                            }\n                            if (r12_1 != 0)\n                            {\n                                if (cond:0_1)\n                                {\n                                    goto label_409da5;\n                                }\n                                r12_1 = (r12_1 + r12_1);\n                                if (r12_1 >= rax_8)\n                                {\n                                    goto label_4099d2;\n                                }\n                            }\n                            if (((r12_1 == 0 && rax_8 > 0xc) || r12_1 != 0))\n                            {\n                                if (rax_8 == -1)\n                                {\n                                    goto label_409da5;\n                                }\n                                r12_1 = rax_8;\n                            label_4099d2:\n                                rdx_1 = rbx_2 == arg1;\n                                if (rbx_2 == 0)\n                                {\n                                    goto label_40990a;\n                                }\n                            }\n                            if (((((r12_1 == 0 && rax_8 > 0xc) || r12_1 != 0) && rax_8 != -1) || (r12_1 == 0 && rax_8 <= 0xc)))\n                            {\n                                if (rdx_1 != 0)\n                                {\n                                    goto label_40990a;\n                                }\n                                var_698 = rcx_1;\n                                char* rax_15 = realloc(rbx_2, r12_1);\n                                if (rax_15 != 0)\n                                {\n                                    rcx_1 = var_698;\n                                    rbx_2 = rax_15;\n                                    goto label_409a23;\n                                }\n                            label_409fba:\n                                r15_7 = rbx_2;\n                                var_6a8 = __errno_location();\n                            label_409fcb:\n                                free(r15_7);\n                            }\n                        }\n                        if (var_6e0_1 == 0)\n                        {\n                            break;\n                        }\n                        free(var_6e0_1);\n                        break;\n                    }\n                }\n                if ((rcx == r8_1 || (((rcx != r8_1 && (!/* if (rcx == r8_1 || (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && not(unimplemented  {add rax, rcx} && var_6e0_1 == 0) && not(unimplemented  {add rax, rcx})))... */)) && (!(/* if (rcx == r8_1 || (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && not(unimplemented  {add rax, rcx} && var_6e0_1 == 0) && not(unimplemented  {add rax, rcx})))... */ && var_6e0_1 == 0))) && (!/* if (rcx == r8_1 || (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && not(unimplemented  {add rax, rcx} && var_6e0_1 == 0) && not(unimplemented  {add rax, rcx})))... */))))\n                {\n                    r13_1 = r15_2;\n                    goto label_409a2f;\n                }\n                if ((((rcx != r8_1 && (!/* if (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && unimplemented  {add rax, rcx} && var_6e0_1 == 0)... */)) && /* if (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && unimplemented  {add rax, rcx} && var_6e0_1 == 0)... */) && var_6e0_1 == 0))\n                {\n                    goto label_409ed5;\n                }\n            }\n            else\n            {\n            label_409ed5:\n                var_6a8 = __errno_location();\n            }\n            if (((rax_3 + var_570) < rax_3 || ((((rax_3 + var_570) >= rax_3 && rax_4 < -6) && rcx != r8_1) && /* if (rax_3 + var_570 u< rax_3 || (rax_3 + var_570 u>= rax_3 && rax_4 u< -6 && rcx != r8_1 && unimplemented  {add rax, rcx}))... */)))\n            {\n                if (var_580 != &var_568)\n                {\n                    free(var_580);\n                }\n                if (var_670 == &var_668)\n                {\n                    goto label_409e18;\n                }\n                free(var_670);\n            label_409e18:\n                rbx_2 = nullptr;\n                *var_6a8 = 0xc;\n            }\n        }\n        else\n        {\n            if (var_580 != &var_568)\n            {\n                free(var_580);\n            }\n            if (var_670 != &var_668)\n            {\n                free(var_670);\n            }\n            rbx_2 = nullptr;\n            *__errno_location() = 0x16;\n        }\n    }\nlabel_409e31:\n    return rbx_2;\n}\n\n"
        },
        {
            "funcName": "sub_40b2d0",
            "funcStartAddr": "0x40b2d0",
            "funcEndAddr": "0x40b4e9",
            "decompiledFuncCode": "int64_t sub_40b2d0(int32_t* arg1, int64_t* arg2)\n{\n    int32_t* rax = arg2[1];\n    if (*arg2 != 0)\n    {\n        int64_t rdx_1 = 0;\n        while (true)\n        {\n            if (*rax <= 0x16)\n            {\n                switch (*rax)\n                {\n                    case 1:\n                    case 2:\n                    {\n                        int32_t rcx_11 = *arg1;\n                        int32_t* r10_8;\n                        if (rcx_11 > 0x2f)\n                        {\n                            r10_8 = *(arg1 + 8);\n                            *(arg1 + 8) = &r10_8[2];\n                        }\n                        else\n                        {\n                            r10_8 = (rcx_11 + *(arg1 + 0x10));\n                            *arg1 = (rcx_11 + 8);\n                        }\n                        rax[4] = *r10_8;\n                        break;\n                    }\n                    case 3:\n                    case 4:\n                    {\n                        int32_t rcx_8 = *arg1;\n                        int32_t* r10_6;\n                        if (rcx_8 > 0x2f)\n                        {\n                            r10_6 = *(arg1 + 8);\n                            *(arg1 + 8) = &r10_6[2];\n                        }\n                        else\n                        {\n                            r10_6 = (rcx_8 + *(arg1 + 0x10));\n                            *arg1 = (rcx_8 + 8);\n                        }\n                        rax[4] = *r10_6;\n                        break;\n                    }\n                    case 5:\n                    case 6:\n                    case 0xd:\n                    case 0xe:\n                    {\n                        int32_t rcx_5 = *arg1;\n                        int32_t* r10_4;\n                        if (rcx_5 > 0x2f)\n                        {\n                            r10_4 = *(arg1 + 8);\n                            *(arg1 + 8) = &r10_4[2];\n                        }\n                        else\n                        {\n                            r10_4 = (rcx_5 + *(arg1 + 0x10));\n                            *arg1 = (rcx_5 + 8);\n                        }\n                        rax[4] = *r10_4;\n                        break;\n                    }\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 0xa:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    {\n                        int32_t rcx_2 = *arg1;\n                        int64_t* r10_2;\n                        if (rcx_2 > 0x2f)\n                        {\n                            r10_2 = *(arg1 + 8);\n                            *(arg1 + 8) = &r10_2[1];\n                        }\n                        else\n                        {\n                            r10_2 = (rcx_2 + *(arg1 + 0x10));\n                            *arg1 = (rcx_2 + 8);\n                        }\n                        *(rax + 0x10) = *r10_2;\n                        break;\n                    }\n                    case 0xb:\n                    {\n                        int32_t rcx_18 = arg1[1];\n                        int64_t* r10_10;\n                        if (rcx_18 > 0xaf)\n                        {\n                            r10_10 = *(arg1 + 8);\n                            *(arg1 + 8) = &r10_10[1];\n                        }\n                        else\n                        {\n                            r10_10 = (rcx_18 + *(arg1 + 0x10));\n                            arg1[1] = (rcx_18 + 0x10);\n                        }\n                        *(rax + 0x10) = *r10_10;\n                        break;\n                    }\n                    case 0xc:\n                    {\n                        int80_t* rcx_22 = ((*(arg1 + 8) + 0xf) & 0xfffffffffffffff0);\n                        *(arg1 + 8) = (rcx_22 + 0x10);\n                        *(rax + 0x10) = *rcx_22;\n                        break;\n                    }\n                    case 0xf:\n                    {\n                        int32_t rcx_26 = *arg1;\n                        int64_t* r10_15;\n                        if (rcx_26 > 0x2f)\n                        {\n                            r10_15 = *(arg1 + 8);\n                            *(arg1 + 8) = &r10_15[1];\n                        }\n                        else\n                        {\n                            r10_15 = (rcx_26 + *(arg1 + 0x10));\n                            *arg1 = (rcx_26 + 8);\n                        }\n                        char const* const rcx_28 = *r10_15;\n                        if (rcx_28 == 0)\n                        {\n                            rcx_28 = \"(NULL)\";\n                        }\n                        *(rax + 0x10) = rcx_28;\n                        break;\n                    }\n                    case 0x10:\n                    {\n                        int32_t rcx_23 = *arg1;\n                        int64_t* r10_13;\n                        if (rcx_23 > 0x2f)\n                        {\n                            r10_13 = *(arg1 + 8);\n                            *(arg1 + 8) = &r10_13[1];\n                        }\n                        else\n                        {\n                            r10_13 = (rcx_23 + *(arg1 + 0x10));\n                            *arg1 = (rcx_23 + 8);\n                        }\n                        void* const rcx_25 = *r10_13;\n                        if (rcx_25 == 0)\n                        {\n                            rcx_25 = \"(NULL)\";\n                        }\n                        *(rax + 0x10) = rcx_25;\n                        break;\n                    }\n                }\n                if ((((((((((((((((((((((*rax == 1 || *rax == 2) || *rax == 3) || *rax == 4) || *rax == 5) || *rax == 6) || *rax == 7) || *rax == 8) || *rax == 9) || *rax == 0xa) || *rax == 0xb) || *rax == 0xc) || *rax == 0xd) || *rax == 0xe) || *rax == 0xf) || *rax == 0x10) || *rax == 0x11) || *rax == 0x12) || *rax == 0x13) || *rax == 0x14) || *rax == 0x15) || *rax == 0x16))\n                {\n                    rdx_1 = (rdx_1 + 1);\n                    rax = &rax[8];\n                }\n                if ((((((((((((((((((((((*rax == 0xc || *rax == 7) || *rax == 8) || *rax == 9) || *rax == 0xa) || *rax == 0x11) || *rax == 0x12) || *rax == 0x13) || *rax == 0x14) || *rax == 0x15) || *rax == 0x16) || *rax == 5) || *rax == 6) || *rax == 0xd) || *rax == 0xe) || *rax == 3) || *rax == 4) || *rax == 1) || *rax == 2) || *rax == 0xb) || *rax == 0x10) || *rax == 0xf))\n                {\n                    if (*arg2 <= rdx_1)\n                    {\n                        break;\n                    }\n                    continue;\n                }\n            }\n            return 0xffffffff;\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40b4f0",
            "funcStartAddr": "0x40b4f0",
            "funcEndAddr": "0x40c1f9",
            "decompiledFuncCode": "int64_t sub_40b4f0(char* arg1, int64_t* arg2, int64_t* arg3)\n{\n    void* rcx = &arg2[4];\n    void* rax = &arg3[2];\n    int64_t* r8 = arg2;\n    void* r9 = 7;\n    int64_t r11 = 7;\n    int64_t r13 = 0;\n    *arg2 = 0;\n    arg2[1] = rcx;\n    void* var_60 = rcx;\n    *arg3 = 0;\n    arg3[1] = rax;\n    void* var_70 = nullptr;\n    int64_t var_78 = 0;\n    void* var_68 = nullptr;\n    while (true)\n    {\n        char rax_1 = *arg1;\n        int64_t rax_6;\n        if (rax_1 == 0)\n        {\n            *(rcx + (r13 * 0x58)) = arg1;\n            r8[2] = var_78;\n            r8[3] = var_70;\n            rax_6 = 0;\n        }\n        else\n        {\n            void* rbp_1 = &arg1[1];\n            if (rax_1 != 0x25)\n            {\n                goto label_40b568;\n            }\n            void* r14_1 = ffffffffffffffff;\n            char** r12_1 = (rcx + (r13 * 0x58));\n            *r12_1 = arg1;\n            r12_1[2] = 0;\n            r12_1[3] = 0;\n            r12_1[4] = 0;\n            r12_1[5] = -1;\n            r12_1[6] = 0;\n            r12_1[7] = 0;\n            r12_1[8] = -1;\n            r12_1[0xa] = -1;\n            char rbx_1 = arg1[1];\n            if ((rbx_1 - 0x30) > 9)\n            {\n                goto label_40b636;\n            }\n            void* rax_29 = rbp_1;\n            char rdx_14;\n            do\n            {\n                rax_29 = (rax_29 + 1);\n                rdx_14 = *rax_29;\n            } while ((rdx_14 - 0x30) <= 9);\n            void* r13_1;\n            if (rdx_14 == 0x24)\n            {\n                int64_t rax_64 = 0;\n                void* rcx_16;\n                int64_t rdx_28;\n                int64_t rdi_16;\n                char rsi_21;\n                do\n                {\n                    int64_t rsi_19 = -1;\n                    int64_t rdx_27 = (rbx_1 - 0x30);\n                    if (rax_64 <= 0x1999999999999999)\n                    {\n                        int64_t rsi_20 = (rax_64 * 5);\n                        rsi_19 = (rsi_20 + rsi_20);\n                    }\n                    rcx_16 = rbp_1;\n                    while (true)\n                    {\n                        rbx_1 = *(rbp_1 + 1);\n                        rdx_28 = (rdx_27 + rsi_19);\n                        rdi_16 = (rdx_27 + rsi_19) < rdx_27;\n                        rax_64 = rdx_28;\n                        rbp_1 = (rbp_1 + 1);\n                        rsi_21 = (rbx_1 - 0x30);\n                        if (rdi_16 == 0)\n                        {\n                            break;\n                        }\n                        if (rsi_21 > 9)\n                        {\n                            break;\n                        }\n                        rsi_19 = -1;\n                        rcx_16 = rbp_1;\n                        rdx_27 = (rbx_1 - 0x30);\n                    }\n                    if (rdi_16 != 0)\n                    {\n                        break;\n                    }\n                } while (rsi_21 <= 9);\n                if (rdi_16 != 0)\n                {\n                    goto label_40bcb8;\n                }\n                r14_1 = (rdx_28 - 1);\n                if (r14_1 <= -3)\n                {\n                    rbp_1 = (rcx_16 + 2);\n                    rbx_1 = *(rcx_16 + 2);\n                    goto label_40b636;\n                }\n            label_40bcb8:\n                r13_1 = arg3[1];\n            }\n            else\n            {\n                r14_1 = ffffffffffffffff;\n            label_40b636:\n                void* rcx_1;\n                while (true)\n                {\n                    rcx_1 = (rbp_1 + 1);\n                    if (rbx_1 == 0x27)\n                    {\n                        r12_1[2] = (r12_1[2] | 1);\n                    }\n                    else if (rbx_1 == 0x2d)\n                    {\n                        r12_1[2] = (r12_1[2] | 2);\n                    }\n                    else if (rbx_1 == 0x2b)\n                    {\n                        r12_1[2] = (r12_1[2] | 4);\n                    }\n                    else if (rbx_1 == 0x20)\n                    {\n                        r12_1[2] = (r12_1[2] | 8);\n                    }\n                    else if (rbx_1 == 0x23)\n                    {\n                        r12_1[2] = (r12_1[2] | 0x10);\n                    }\n                    else if (rbx_1 == 0x30)\n                    {\n                        r12_1[2] = (r12_1[2] | 0x20);\n                    }\n                    else\n                    {\n                        if (rbx_1 != 0x49)\n                        {\n                            break;\n                        }\n                        r12_1[2] = (r12_1[2] | 0x40);\n                    }\n                    rbx_1 = *rcx_1;\n                    rbp_1 = rcx_1;\n                }\n                if (rbx_1 != 0x2a)\n                {\n                    if ((rbx_1 - 0x30) <= 9)\n                    {\n                        r12_1[3] = rbp_1;\n                        if ((*rbp_1 - 0x30) <= 9)\n                        {\n                            void* rcx_15 = rbp_1;\n                            void* rdx_21;\n                            while (true)\n                            {\n                                rdx_21 = (rcx_15 + 1);\n                                if ((*(rcx_15 + 1) - 0x30) > 9)\n                                {\n                                    break;\n                                }\n                                rcx_15 = rdx_21;\n                            }\n                            rcx_1 = (rcx_15 + 2);\n                            int64_t rax_57 = (rdx_21 - rbp_1);\n                            rbp_1 = rdx_21;\n                            if (var_78 >= rax_57)\n                            {\n                                rax_57 = var_78;\n                            }\n                            var_78 = rax_57;\n                        }\n                        r12_1[4] = rbp_1;\n                        rbx_1 = *rbp_1;\n                    }\n                    goto label_40b6a8;\n                }\n                int64_t rax_12 = 1;\n                r12_1[3] = rbp_1;\n                r12_1[4] = rcx_1;\n                if (var_78 != 0)\n                {\n                    rax_12 = var_78;\n                }\n                var_78 = rax_12;\n                int32_t rax_13 = *(rbp_1 + 1);\n                void* rbx_2;\n                if ((rax_13 - 0x30) <= 9)\n                {\n                    void* rdx_17 = rcx_1;\n                    char rsi_10;\n                    do\n                    {\n                        rdx_17 = (rdx_17 + 1);\n                        rsi_10 = *rdx_17;\n                    } while ((rsi_10 - 0x30) <= 9);\n                    if (rsi_10 == 0x24)\n                    {\n                        void* rsi_11 = nullptr;\n                        void* rdx_20;\n                        int64_t rbp_2;\n                        void* rdi_5;\n                        char rbx_6;\n                        do\n                        {\n                            void* const rdx_18 = ffffffffffffffff;\n                            int64_t rax_43 = (rax_13 - 0x30);\n                            if (rsi_11 <= 0x1999999999999999)\n                            {\n                                void* rdx_19 = (rsi_11 * 5);\n                                rdx_18 = (rdx_19 + rdx_19);\n                            }\n                            rdi_5 = rcx_1;\n                            while (true)\n                            {\n                                rdx_20 = (rdx_18 + rax_43);\n                                rax_13 = *(rcx_1 + 1);\n                                rbp_2 = (rdx_18 + rax_43) < rdx_18;\n                                rsi_11 = rdx_20;\n                                rcx_1 = (rcx_1 + 1);\n                                rbx_6 = (rax_13 - 0x30);\n                                if (rbp_2 == 0)\n                                {\n                                    break;\n                                }\n                                if (rbx_6 > 9)\n                                {\n                                    break;\n                                }\n                                rdx_18 = ffffffffffffffff;\n                                rdi_5 = rcx_1;\n                                rax_43 = (rax_13 - 0x30);\n                            }\n                            if (rbp_2 != 0)\n                            {\n                                break;\n                            }\n                        } while (rbx_6 <= 9);\n                        if (rbp_2 != 0)\n                        {\n                            goto label_40bcb8;\n                        }\n                        rbx_2 = (rdx_20 - 1);\n                        if (rbx_2 > -3)\n                        {\n                            goto label_40bcb8;\n                        }\n                        r12_1[5] = rbx_2;\n                        rcx_1 = (rdi_5 + 2);\n                        goto label_40b74c;\n                    }\n                }\n                rbx_2 = r12_1[5];\n                if (rbx_2 != -1)\n                {\n                    goto label_40b74c;\n                }\n                void* rax_41 = (var_68 + 1);\n                r12_1[5] = var_68;\n                if (var_68 == -1)\n                {\n                    goto label_40bcb8;\n                }\n                rbx_2 = var_68;\n                var_68 = rax_41;\n            label_40b74c:\n                r13_1 = arg3[1];\n                int64_t rdx_4;\n                void* rsi_7;\n                if (r9 <= rbx_2)\n                {\n                    void* r9_1 = (r9 + r9);\n                    void* rax_36 = (rbx_2 + 1);\n                    if (r9_1 <= rbx_2)\n                    {\n                        r9_1 = rax_36;\n                    }\n                    if (r9_1 <= 0x7ffffffffffffff)\n                    {\n                        int64_t rsi_6 = (r9_1 << 5);\n                        if (rax == r13_1)\n                        {\n                            void* rax_63 = malloc(rsi_6);\n                            r9 = r9_1;\n                            if (rax_63 == 0)\n                            {\n                                goto label_40bea9;\n                            }\n                            rdx_4 = *arg3;\n                            rsi_7 = rax;\n                            r13_1 = rax_63;\n                        label_40bfc4:\n                            memcpy(r13_1, rsi_7, (rdx_4 << 5));\n                            rdx_4 = *arg3;\n                        label_40ba7d:\n                            arg3[1] = r13_1;\n                            goto label_40b75c;\n                        }\n                        void* rax_37 = realloc(r13_1, rsi_6);\n                        rsi_7 = arg3[1];\n                        r13_1 = rax_37;\n                        r9 = r9_1;\n                        if (rax_37 != 0)\n                        {\n                            rdx_4 = *arg3;\n                            if (rax == rsi_7)\n                            {\n                                goto label_40bfc4;\n                            }\n                            goto label_40ba7d;\n                        }\n                        goto label_40be90;\n                    }\n                label_40be8d:\n                    rsi_7 = r13_1;\n                label_40be90:\n                    if (rax == rsi_7)\n                    {\n                        goto label_40bea9;\n                    }\n                label_40be9f:\n                    free(rsi_7);\n                label_40bea9:\n                    int64_t rdi_12 = r8[1];\n                    if (var_60 != rdi_12)\n                    {\n                        free(rdi_12);\n                    }\n                    break;\n                }\n                rdx_4 = *arg3;\n            label_40b75c:\n                if (rdx_4 <= rbx_2)\n                {\n                    do\n                    {\n                        rdx_4 = (rdx_4 + 1);\n                        *((r13_1 + (rdx_4 << 5)) - 0x20) = 0;\n                    } while (rdx_4 <= rbx_2);\n                    *arg3 = rdx_4;\n                    goto label_40b788;\n                }\n            label_40b788:\n                void* rax_16 = (r13_1 + (rbx_2 << 5));\n                int32_t rdx_5 = *rax_16;\n                if (rdx_5 == 0)\n                {\n                    *rax_16 = 5;\n                    rbx_1 = *rcx_1;\n                    rbp_1 = rcx_1;\n                    rcx_1 = (rcx_1 + 1);\n                    if (rbx_1 == 0x2e)\n                    {\n                        goto label_40b7b0;\n                    }\n                    goto label_40b6b1;\n                }\n                if (rdx_5 == 5)\n                {\n                    rbx_1 = *rcx_1;\n                    rbp_1 = rcx_1;\n                    rcx_1 = (rcx_1 + 1);\n                label_40b6a8:\n                    if (rbx_1 != 0x2e)\n                    {\n                        goto label_40b6b1;\n                    }\n                label_40b7b0:\n                    bool cond:0_1 = *(rbp_1 + 1) != 0x2a;\n                    r12_1[6] = rbp_1;\n                    if (cond:0_1)\n                    {\n                        void* rax_35;\n                        if ((*(rbp_1 + 1) - 0x30) > 9)\n                        {\n                            rbp_1 = rcx_1;\n                            rax_35 = 1;\n                        }\n                        else\n                        {\n                            do\n                            {\n                                rcx_1 = (rcx_1 + 1);\n                            } while ((*rcx_1 - 0x30) <= 9);\n                            rax_35 = (rcx_1 - rbp_1);\n                            rbp_1 = rcx_1;\n                        }\n                        r12_1[7] = rcx_1;\n                        rbx_1 = *rcx_1;\n                        if (var_70 >= rax_35)\n                        {\n                            rax_35 = var_70;\n                        }\n                        var_70 = rax_35;\n                        goto label_40b6b1;\n                    }\n                    void* rax_17 = 2;\n                    char* rcx_4 = (rbp_1 + 2);\n                    r12_1[7] = rcx_4;\n                    if (var_70 >= 2)\n                    {\n                        rax_17 = var_70;\n                    }\n                    var_70 = rax_17;\n                    int32_t rax_18 = *(rbp_1 + 2);\n                    void* rbx_4;\n                    if ((rax_18 - 0x30) <= 9)\n                    {\n                        char* rdx_31 = rcx_4;\n                        char rsi_23;\n                        do\n                        {\n                            rdx_31 = &rdx_31[1];\n                            rsi_23 = *rdx_31;\n                        } while ((rsi_23 - 0x30) <= 9);\n                        if (rsi_23 != 0x24)\n                        {\n                            goto label_40b7ef;\n                        }\n                        void* rsi_24 = nullptr;\n                        void* rdx_34;\n                        int64_t rbp_3;\n                        char* rdi_18;\n                        char rbx_7;\n                        do\n                        {\n                            void* const rdx_32 = ffffffffffffffff;\n                            int64_t rax_67 = (rax_18 - 0x30);\n                            if (rsi_24 <= 0x1999999999999999)\n                            {\n                                void* rdx_33 = (rsi_24 * 5);\n                                rdx_32 = (rdx_33 + rdx_33);\n                            }\n                            rdi_18 = rcx_4;\n                            while (true)\n                            {\n                                rdx_34 = (rdx_32 + rax_67);\n                                rbp_3 = (rdx_32 + rax_67) < rdx_32;\n                                rcx_4 = &rcx_4[1];\n                                rax_18 = *rcx_4;\n                                rsi_24 = rdx_34;\n                                rbx_7 = (rax_18 - 0x30);\n                                if (rbp_3 == 0)\n                                {\n                                    break;\n                                }\n                                if (rbx_7 > 9)\n                                {\n                                    break;\n                                }\n                                rdx_32 = ffffffffffffffff;\n                                rdi_18 = rcx_4;\n                                rax_67 = (rax_18 - 0x30);\n                            }\n                            if (rbp_3 != 0)\n                            {\n                                break;\n                            }\n                        } while (rbx_7 <= 9);\n                        if (rbp_3 != 0)\n                        {\n                            goto label_40bcb8;\n                        }\n                        rbx_4 = (rdx_34 - 1);\n                        if (rbx_4 > -3)\n                        {\n                            goto label_40bcb8;\n                        }\n                        r12_1[8] = rbx_4;\n                        rcx_4 = &rdi_18[2];\n                        goto label_40b7fe;\n                    }\n                label_40b7ef:\n                    rbx_4 = r12_1[8];\n                    if (rbx_4 != -1)\n                    {\n                        goto label_40b7fe;\n                    }\n                    void* rax_65 = (var_68 + 1);\n                    r12_1[8] = var_68;\n                    if (var_68 == -1)\n                    {\n                        goto label_40bcb8;\n                    }\n                    rbx_4 = var_68;\n                    var_68 = rax_65;\n                label_40b7fe:\n                    r13_1 = arg3[1];\n                    void* var_58;\n                    int64_t rdx_7;\n                    if (r9 <= rbx_4)\n                    {\n                        void* r9_3 = (r9 + r9);\n                        void* rax_61 = (rbx_4 + 1);\n                        if (r9_3 <= rbx_4)\n                        {\n                            r9_3 = rax_61;\n                        }\n                        if (r9_3 > 0x7ffffffffffffff)\n                        {\n                            goto label_40be8d;\n                        }\n                        int64_t rsi_18 = (r9_3 << 5);\n                        var_58 = rcx_4;\n                        if (rax == r13_1)\n                        {\n                            void* rax_69 = malloc(rsi_18);\n                            rcx_4 = var_58;\n                            r9 = r9_3;\n                            if (rax_69 == 0)\n                            {\n                                goto label_40bea9;\n                            }\n                            rdx_7 = *arg3;\n                            rsi_7 = rax;\n                            r13_1 = rax_69;\n                        label_40c176:\n                            memcpy(r13_1, rsi_7, (rdx_7 << 5));\n                            rdx_7 = *arg3;\n                        label_40bf5c:\n                            arg3[1] = r13_1;\n                            goto label_40b80e;\n                        }\n                        void* rax_62 = realloc(r13_1, rsi_18);\n                        rsi_7 = arg3[1];\n                        rcx_4 = var_58;\n                        r13_1 = rax_62;\n                        r9 = r9_3;\n                        if (rax_62 != 0)\n                        {\n                            rdx_7 = *arg3;\n                            if (rax == rsi_7)\n                            {\n                                goto label_40c176;\n                            }\n                            goto label_40bf5c;\n                        }\n                        goto label_40be90;\n                    }\n                    rdx_7 = *arg3;\n                label_40b80e:\n                    if (rdx_7 <= rbx_4)\n                    {\n                        do\n                        {\n                            rdx_7 = (rdx_7 + 1);\n                            *((r13_1 + (rdx_7 << 5)) - 0x20) = 0;\n                        } while (rdx_7 <= rbx_4);\n                        *arg3 = rdx_7;\n                        goto label_40b83b;\n                    }\n                label_40b83b:\n                    void* rax_23 = ((rbx_4 << 5) + r13_1);\n                    int32_t rdx_8 = *rax_23;\n                    if (rdx_8 == 0)\n                    {\n                        *rax_23 = 5;\n                        rbp_1 = rcx_4;\n                        rbx_1 = *rcx_4;\n                    label_40b6b1:\n                        int32_t rax_11 = 0;\n                        while (true)\n                        {\n                            rbp_1 = (rbp_1 + 1);\n                            if (rbx_1 == 0x68)\n                            {\n                                rax_11 = (rax_11 | (1 << (rax_11 & 1)));\n                            }\n                            else if (rbx_1 == 0x4c)\n                            {\n                                rax_11 = (rax_11 | 4);\n                            }\n                            else\n                            {\n                                if ((rbx_1 != 0x6c && (rbx_1 != 0x6a && ((rbx_1 & 0xdf) != 0x5a && rbx_1 != 0x74))))\n                                {\n                                    break;\n                                }\n                                rax_11 = (rax_11 + 8);\n                            }\n                            rbx_1 = *rbp_1;\n                        }\n                        char rdx_9 = (rbx_1 - 0x25);\n                        if (rdx_9 > 0x53)\n                        {\n                            goto label_40bcb8;\n                        }\n                        int32_t rcx_6;\n                        switch (rdx_9)\n                        {\n                            case 0:\n                            {\n                                goto label_40b8e1;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 7:\n                            case 8:\n                            case 9:\n                            case 0xa:\n                            case 0xb:\n                            case 0xc:\n                            case 0xd:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1d:\n                            case 0x1f:\n                            case 0x23:\n                            case 0x24:\n                            case 0x25:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x3b:\n                            case 0x3d:\n                            case 0x46:\n                            case 0x48:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x51:\n                            case 0x52:\n                            {\n                                goto label_40bcb8;\n                            }\n                            case 0x1c:\n                            case 0x20:\n                            case 0x21:\n                            case 0x22:\n                            case 0x3c:\n                            case 0x40:\n                            case 0x41:\n                            case 0x42:\n                            {\n                                rcx_6 = 0xc;\n                                if (rax_11 <= 0xf)\n                                {\n                                    int32_t rcx_12;\n                                    rcx_12 = (rax_11 & 4) != 0;\n                                    rcx_6 = (rcx_12 + 0xb);\n                                }\n                                goto label_40b889;\n                            }\n                            case 0x1e:\n                            {\n                                rcx_6 = 0xe;\n                                rbx_1 = 0x63;\n                                goto label_40b889;\n                            }\n                            case 0x2e:\n                            {\n                                rcx_6 = 0x10;\n                                rbx_1 = 0x73;\n                                goto label_40b889;\n                            }\n                            case 0x33:\n                            case 0x4a:\n                            case 0x50:\n                            case 0x53:\n                            {\n                                rcx_6 = 0xa;\n                                if ((rax_11 <= 0xf && (rax_11 & 4) == 0))\n                                {\n                                    rcx_6 = 8;\n                                    if (rax_11 <= 7)\n                                    {\n                                        rcx_6 = 2;\n                                        if ((rax_11 & 2) == 0)\n                                        {\n                                            rcx_6 = (((2 - 2) & 2) + 4);\n                                        }\n                                    }\n                                }\n                                goto label_40b889;\n                            }\n                            case 0x3e:\n                            {\n                                int32_t rcx_8;\n                                rcx_8 = rax_11 > 7;\n                                rcx_6 = (rcx_8 + 0xd);\n                                goto label_40b889;\n                            }\n                            case 0x3f:\n                            case 0x44:\n                            {\n                                rcx_6 = 9;\n                                if ((rax_11 <= 0xf && (rax_11 & 4) == 0))\n                                {\n                                    rcx_6 = 7;\n                                    if (rax_11 <= 7)\n                                    {\n                                        rcx_6 = 1;\n                                        if ((rax_11 & 2) == 0)\n                                        {\n                                            rcx_6 = (((1 - 1) & 2) + 3);\n                                        }\n                                    }\n                                }\n                                goto label_40b889;\n                            }\n                            case 0x49:\n                            {\n                                rcx_6 = 0x16;\n                                if ((rax_11 <= 0xf && (rax_11 & 4) == 0))\n                                {\n                                    rcx_6 = 0x15;\n                                    if (rax_11 <= 7)\n                                    {\n                                        rcx_6 = 0x12;\n                                        if ((rax_11 & 2) == 0)\n                                        {\n                                            int32_t rcx_9;\n                                            rcx_9 = (rax_11 & 1) == 0;\n                                            rcx_6 = (rcx_9 + 0x13);\n                                        }\n                                    }\n                                }\n                                goto label_40b889;\n                            }\n                            case 0x4b:\n                            {\n                                rcx_6 = 0x11;\n                                goto label_40b889;\n                            }\n                            case 0x4e:\n                            {\n                                int32_t rcx_5;\n                                rcx_5 = rax_11 > 7;\n                                rcx_6 = (rcx_5 + 0xf);\n                            label_40b889:\n                                if (r14_1 == -1)\n                                {\n                                    void* rax_51 = (var_68 + 1);\n                                    r12_1[0xa] = var_68;\n                                    if (var_68 == -1)\n                                    {\n                                        goto label_40bcb8;\n                                    }\n                                    r14_1 = var_68;\n                                    var_68 = rax_51;\n                                    goto label_40b898;\n                                }\n                                r12_1[0xa] = r14_1;\n                            label_40b898:\n                                r13_1 = arg3[1];\n                                if (r9 > r14_1)\n                                {\n                                    goto label_40b8a5;\n                                }\n                                void* r9_2 = (r9 + r9);\n                                void* rax_48 = (r14_1 + 1);\n                                if (r9_2 <= r14_1)\n                                {\n                                    r9_2 = rax_48;\n                                }\n                                if (r9_2 > 0x7ffffffffffffff)\n                                {\n                                    goto label_40be8d;\n                                }\n                                size_t rsi_13 = (r9_2 << 5);\n                                var_58 = rcx_6;\n                                void* rax_58;\n                                if (rax == r13_1)\n                                {\n                                    rax_58 = malloc(rsi_13);\n                                    rcx_6 = var_58;\n                                    r9 = r9_2;\n                                    if (rax_58 == 0)\n                                    {\n                                        goto label_40bea9;\n                                    }\n                                    goto label_40be49;\n                                }\n                                void* rax_49 = realloc(r13_1, rsi_13);\n                                rcx_6 = var_58;\n                                r13_1 = rax_49;\n                                r9 = r9_2;\n                                if (rax_49 == 0)\n                                {\n                                    goto label_40c1e3;\n                                }\n                                if (rax != arg3[1])\n                                {\n                                    goto label_40bd8b;\n                                }\n                                rax_58 = r13_1;\n                                r13_1 = rax;\n                            label_40be49:\n                                void* rsi_16 = r13_1;\n                                r13_1 = rax_58;\n                                var_58 = rcx_6;\n                                memcpy(rax_58, rsi_16, (*arg3 << 5));\n                                rcx_6 = var_58;\n                            label_40bd8b:\n                                arg3[1] = r13_1;\n                            label_40b8a5:\n                                int64_t rax_24 = *arg3;\n                                if (rax_24 <= r14_1)\n                                {\n                                    do\n                                    {\n                                        rax_24 = (rax_24 + 1);\n                                        *((r13_1 + (rax_24 << 5)) - 0x20) = 0;\n                                    } while (rax_24 <= r14_1);\n                                    *arg3 = rax_24;\n                                }\n                                void* rax_25 = (r13_1 + (r14_1 << 5));\n                                int32_t rdx_13 = *rax_25;\n                                if (rdx_13 == 0)\n                                {\n                                    *rax_25 = rcx_6;\n                                label_40b8e1:\n                                    r12_1[9] = rbx_1;\n                                    int64_t rax_26 = *r8;\n                                    r12_1[1] = rbp_1;\n                                    r13 = (rax_26 + 1);\n                                    *r8 = r13;\n                                    if (r11 > r13)\n                                    {\n                                        rcx = r8[1];\n                                    label_40b568:\n                                        arg1 = rbp_1;\n                                        continue;\n                                    }\n                                    else\n                                    {\n                                        if (r11 >= 0)\n                                        {\n                                            int64_t rbx_5 = (r11 + r11);\n                                            if (rbx_5 > 0x2e8ba2e8ba2e8ba)\n                                            {\n                                                goto label_40c1e3;\n                                            }\n                                            int64_t r12_2 = r8[1];\n                                            int64_t rsi_3 = (r11 * 0xb0);\n                                            if (var_60 == r12_2)\n                                            {\n                                                void* rax_38 = malloc(rsi_3);\n                                                rcx = rax_38;\n                                                if (rax_38 != 0)\n                                                {\n                                                label_40bad8:\n                                                    rcx = memcpy(rcx, r12_2, (r13 * 0x58));\n                                                    r13 = *r8;\n                                                label_40b97f:\n                                                    r8[1] = rcx;\n                                                    r11 = rbx_5;\n                                                    goto label_40b568;\n                                                }\n                                                rsi_7 = arg3[1];\n                                                if (rax == rsi_7)\n                                                {\n                                                    break;\n                                                }\n                                                goto label_40be9f;\n                                            }\n                                            void* rax_28 = realloc(r12_2, rsi_3);\n                                            rcx = rax_28;\n                                            if (rax_28 == 0)\n                                            {\n                                                goto label_40c1e3;\n                                            }\n                                            r12_2 = r8[1];\n                                            r13 = *r8;\n                                            if (var_60 == r12_2)\n                                            {\n                                                goto label_40bad8;\n                                            }\n                                            goto label_40b97f;\n                                        }\n                                    label_40c1e3:\n                                        rsi_7 = arg3[1];\n                                    }\n                                    goto label_40be90;\n                                }\n                                if (rdx_13 == rcx_6)\n                                {\n                                    goto label_40b8e1;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                    else if (rdx_8 == 5)\n                    {\n                        rbx_1 = *rcx_4;\n                        rbp_1 = rcx_4;\n                        goto label_40b6b1;\n                    }\n                }\n            }\n            if (rax == r13_1)\n            {\n                goto label_40bcd5;\n            }\n            free(r13_1);\n        label_40bcd5:\n            int64_t rdi_7 = r8[1];\n            if (var_60 != rdi_7)\n            {\n                free(rdi_7);\n            }\n            *__errno_location() = 0x16;\n            rax_6 = 0xffffffff;\n        }\n        return rax_6;\n    }\n    *__errno_location() = 0xc;\n    return 0xffffffff;\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x40c200",
            "funcEndAddr": "0x40c25d",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x40c260",
            "funcEndAddr": "0x40c261",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_40c270",
            "funcStartAddr": "0x40c270",
            "funcEndAddr": "0x40c288",
            "decompiledFuncCode": "int64_t sub_40c270(void (* arg1)(void*))\n{\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, data_612248);\n}\n\n"
        },
        {
            "funcName": "sub_40c288",
            "funcStartAddr": "0x40c288",
            "funcEndAddr": "0x40c2a8",
            "decompiledFuncCode": "int64_t sub_40c288(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_611e30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}