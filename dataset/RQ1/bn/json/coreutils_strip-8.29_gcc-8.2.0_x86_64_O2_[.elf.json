{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_[.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 127,
    "funcInfo": [
        {
            "funcName": "sub_401360",
            "funcStartAddr": "0x401360",
            "funcEndAddr": "0x40136c",
            "decompiledFuncCode": "int64_t sub_401360()\n{\n    int64_t var_8 = data_60d008;\n    /* jump -> data_60d010 */\n}\n\n"
        },
        {
            "funcName": "sub_401376",
            "funcStartAddr": "0x401376",
            "funcEndAddr": "0x401380",
            "decompiledFuncCode": "int64_t sub_401376()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_401386",
            "funcStartAddr": "0x401386",
            "funcEndAddr": "0x401390",
            "decompiledFuncCode": "int64_t sub_401386()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_401396",
            "funcStartAddr": "0x401396",
            "funcEndAddr": "0x4013a0",
            "decompiledFuncCode": "int64_t sub_401396()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_4013a6",
            "funcStartAddr": "0x4013a6",
            "funcEndAddr": "0x4013b0",
            "decompiledFuncCode": "int64_t sub_4013a6()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_4013b6",
            "funcStartAddr": "0x4013b6",
            "funcEndAddr": "0x4013c0",
            "decompiledFuncCode": "int64_t sub_4013b6()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_4013c6",
            "funcStartAddr": "0x4013c6",
            "funcEndAddr": "0x4013d0",
            "decompiledFuncCode": "int64_t sub_4013c6()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_4013d6",
            "funcStartAddr": "0x4013d6",
            "funcEndAddr": "0x4013e0",
            "decompiledFuncCode": "int64_t sub_4013d6()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_4013e6",
            "funcStartAddr": "0x4013e6",
            "funcEndAddr": "0x4013f0",
            "decompiledFuncCode": "int64_t sub_4013e6()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_401416",
            "funcStartAddr": "0x401416",
            "funcEndAddr": "0x401420",
            "decompiledFuncCode": "int64_t sub_401416()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_401426",
            "funcStartAddr": "0x401426",
            "funcEndAddr": "0x401430",
            "decompiledFuncCode": "int64_t sub_401426()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_401456",
            "funcStartAddr": "0x401456",
            "funcEndAddr": "0x401460",
            "decompiledFuncCode": "int64_t sub_401456()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_401466",
            "funcStartAddr": "0x401466",
            "funcEndAddr": "0x401470",
            "decompiledFuncCode": "int64_t sub_401466()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_401496",
            "funcStartAddr": "0x401496",
            "funcEndAddr": "0x4014a0",
            "decompiledFuncCode": "int64_t sub_401496()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_4014a6",
            "funcStartAddr": "0x4014a6",
            "funcEndAddr": "0x4014b0",
            "decompiledFuncCode": "int64_t sub_4014a6()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_4014d6",
            "funcStartAddr": "0x4014d6",
            "funcEndAddr": "0x4014e0",
            "decompiledFuncCode": "int64_t sub_4014d6()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_4014e6",
            "funcStartAddr": "0x4014e6",
            "funcEndAddr": "0x4014f0",
            "decompiledFuncCode": "int64_t sub_4014e6()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_4014f6",
            "funcStartAddr": "0x4014f6",
            "funcEndAddr": "0x401500",
            "decompiledFuncCode": "int64_t sub_4014f6()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_401506",
            "funcStartAddr": "0x401506",
            "funcEndAddr": "0x401510",
            "decompiledFuncCode": "int64_t sub_401506()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_401516",
            "funcStartAddr": "0x401516",
            "funcEndAddr": "0x401520",
            "decompiledFuncCode": "int64_t sub_401516()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_401526",
            "funcStartAddr": "0x401526",
            "funcEndAddr": "0x401530",
            "decompiledFuncCode": "int64_t sub_401526()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_401536",
            "funcStartAddr": "0x401536",
            "funcEndAddr": "0x401540",
            "decompiledFuncCode": "int64_t sub_401536()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_401546",
            "funcStartAddr": "0x401546",
            "funcEndAddr": "0x401550",
            "decompiledFuncCode": "int64_t sub_401546()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_401556",
            "funcStartAddr": "0x401556",
            "funcEndAddr": "0x401560",
            "decompiledFuncCode": "int64_t sub_401556()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_401566",
            "funcStartAddr": "0x401566",
            "funcEndAddr": "0x401570",
            "decompiledFuncCode": "int64_t sub_401566()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_401576",
            "funcStartAddr": "0x401576",
            "funcEndAddr": "0x401580",
            "decompiledFuncCode": "int64_t sub_401576()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_401586",
            "funcStartAddr": "0x401586",
            "funcEndAddr": "0x401590",
            "decompiledFuncCode": "int64_t sub_401586()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_401596",
            "funcStartAddr": "0x401596",
            "funcEndAddr": "0x4015a0",
            "decompiledFuncCode": "int64_t sub_401596()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_4015a6",
            "funcStartAddr": "0x4015a6",
            "funcEndAddr": "0x4015b0",
            "decompiledFuncCode": "int64_t sub_4015a6()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_4015b6",
            "funcStartAddr": "0x4015b6",
            "funcEndAddr": "0x4015c0",
            "decompiledFuncCode": "int64_t sub_4015b6()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_4015c6",
            "funcStartAddr": "0x4015c6",
            "funcEndAddr": "0x4015d0",
            "decompiledFuncCode": "int64_t sub_4015c6()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_4015d6",
            "funcStartAddr": "0x4015d6",
            "funcEndAddr": "0x4015e0",
            "decompiledFuncCode": "int64_t sub_4015d6()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_4015e6",
            "funcStartAddr": "0x4015e6",
            "funcEndAddr": "0x4015f0",
            "decompiledFuncCode": "int64_t sub_4015e6()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_401616",
            "funcStartAddr": "0x401616",
            "funcEndAddr": "0x401620",
            "decompiledFuncCode": "int64_t sub_401616()\n{\n    int64_t var_8 = 0x2a;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_401626",
            "funcStartAddr": "0x401626",
            "funcEndAddr": "0x401630",
            "decompiledFuncCode": "int64_t sub_401626()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_401656",
            "funcStartAddr": "0x401656",
            "funcEndAddr": "0x401660",
            "decompiledFuncCode": "int64_t sub_401656()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_401666",
            "funcStartAddr": "0x401666",
            "funcEndAddr": "0x401670",
            "decompiledFuncCode": "int64_t sub_401666()\n{\n    int64_t var_8 = 0x2f;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_401696",
            "funcStartAddr": "0x401696",
            "funcEndAddr": "0x4016a0",
            "decompiledFuncCode": "int64_t sub_401696()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "sub_4016a6",
            "funcStartAddr": "0x4016a6",
            "funcEndAddr": "0x4016b0",
            "decompiledFuncCode": "int64_t sub_4016a6()\n{\n    int64_t var_8 = 0x33;\n    /* tailcall */\n    return sub_401360();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x401700",
            "funcEndAddr": "0x401899",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_4032e0(*argv);\n    void var_18;\n    int32_t rbx;\n    setlocale(6, &data_40aeb6[0x1b], rdx, rcx, r8, r9, var_18, rbx);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    data_60d1f8 = 2;\n    sub_408f30(sub_4031f0);\n    data_60d298 = argv;\n    uint32_t rbx_2;\n    if (argc == 2)\n    {\n        char* rbp_1 = argv[1];\n        if (strcmp(rbp_1, \"--help\") == 0)\n        {\n            sub_402e30(0, argc);\n            /* no return */\n        }\n        int64_t rax_8 = strcmp(rbp_1, \"--version\");\n        rbx_2 = rax_8;\n        if (rax_8 == 0)\n        {\n            int64_t var_20_1 = rax_8;\n            sub_4056b0(stdout, \"[\", \"GNU coreutils\", data_60d1f0);\n        label_4017ba:\n            return rbx_2;\n        }\n        if (strcmp(rbp_1, &data_40911b) != 0)\n        {\n            goto label_401857;\n        }\n        data_60d2a0 = 1;\n        rbx_2 = 1;\n        data_60d2a4 = 1;\n        goto label_4017ba;\n    }\n    char const* const rsi;\n    if (argc > 1)\n    {\n        if (strcmp(argv[(argc - 1)], &data_40911b) != 0)\n        {\n            goto label_401857;\n        }\n        data_60d2a4 = 1;\n        data_60d2a0 = (argc - 1);\n        char rax_4 = sub_402790((argc - 2));\n        int64_t rdx_1 = data_60d2a4;\n        if (rdx_1 != data_60d2a0)\n        {\n            sub_404f00(*(data_60d298 + (rdx_1 << 3)));\n            rsi = \"extra argument %s\";\n            goto label_40186e;\n        }\n        rbx_2 = (rax_4 ^ 1);\n        goto label_4017ba;\n    }\nlabel_401857:\n    rsi = \"missing %s\";\n    sub_404f00(&data_40911b);\nlabel_40186e:\n    __sanitizer::Report(dcgettext(nullptr, rsi, 5), 0);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x4018a0",
            "funcEndAddr": "0x4018ca",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4018cb",
            "funcStartAddr": "0x4018cb",
            "funcEndAddr": "0x4018ea",
            "decompiledFuncCode": "void sub_4018cb()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_4018ea",
            "funcStartAddr": "0x4018ea",
            "funcEndAddr": "0x401921",
            "decompiledFuncCode": "int64_t sub_4018ea()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_401921",
            "funcStartAddr": "0x401921",
            "funcEndAddr": "0x401978",
            "decompiledFuncCode": "void sub_401921()\n{\n    if (data_60d288 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_60d290;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_60d290 = (rax_1 + 1);\n        *(0x60ce40 + ((rax_1 + 1) << 3))();\n    }\n    sub_4018cb();\n    data_60d288 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_401978",
            "funcStartAddr": "0x401978",
            "funcEndAddr": "0x40197d",
            "decompiledFuncCode": "int64_t j_sub_4018ea()\n{\n    /* tailcall */\n    return sub_4018ea();\n}\n\n"
        },
        {
            "funcName": "sub_401980",
            "funcStartAddr": "0x401980",
            "funcEndAddr": "0x401ac8",
            "decompiledFuncCode": "int64_t sub_401980(char* arg1)\n{\n    int64_t rcx = 2;\n    void* const rdi = &data_408f85;\n    char* rsi = arg1;\n    bool c;\n    bool z;\n    while (rcx != 0)\n    {\n        char temp0_1 = *rsi;\n        char temp1_1 = *rdi;\n        c = temp0_1 < temp1_1;\n        z = temp0_1 == temp1_1;\n        rsi = &rsi[1];\n        rdi = (rdi + 1);\n        rcx = (rcx - 1);\n        if ((!z))\n        {\n            break;\n        }\n    }\n    char rdx = (((!z) && (!c)) - 0);\n    bool c_1 = false;\n    bool z_1 = (rdx & rdx) == 0;\n    if ((!z_1))\n    {\n        void* const rdi_1 = &data_408f84;\n        int64_t rcx_1 = 3;\n        char* rsi_1 = arg1;\n        while (rcx_1 != 0)\n        {\n            char temp2_1 = *rsi_1;\n            char temp3_1 = *rdi_1;\n            c_1 = temp2_1 < temp3_1;\n            z_1 = temp2_1 == temp3_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z_1))\n            {\n                break;\n            }\n        }\n        rdx = (((!z_1) && (!c_1)) - 0);\n        bool c_2 = false;\n        bool z_2 = (rdx & rdx) == 0;\n        if ((!z_2))\n        {\n            void* const rdi_2 = &data_408f87;\n            int64_t rcx_2 = 3;\n            char* rsi_2 = arg1;\n            while (rcx_2 != 0)\n            {\n                char temp4_1 = *rsi_2;\n                char temp5_1 = *rdi_2;\n                c_2 = temp4_1 < temp5_1;\n                z_2 = temp4_1 == temp5_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_2))\n                {\n                    break;\n                }\n            }\n            rdx = (((!z_2) && (!c_2)) - 0);\n            bool c_3 = false;\n            bool z_3 = (rdx & rdx) == 0;\n            if ((!z_3))\n            {\n                void* const rdi_3 = &data_408f8a;\n                int64_t rcx_3 = 4;\n                char* rsi_3 = arg1;\n                while (rcx_3 != 0)\n                {\n                    char temp6_1 = *rsi_3;\n                    char temp7_1 = *rdi_3;\n                    c_3 = temp6_1 < temp7_1;\n                    z_3 = temp6_1 == temp7_1;\n                    rsi_3 = &rsi_3[1];\n                    rdi_3 = (rdi_3 + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_3))\n                    {\n                        break;\n                    }\n                }\n                rdx = (((!z_3) && (!c_3)) - 0);\n                bool c_4 = false;\n                bool z_4 = (rdx & rdx) == 0;\n                if ((!z_4))\n                {\n                    void* const rdi_4 = &data_408f8e;\n                    int64_t rcx_4 = 4;\n                    char* rsi_4 = arg1;\n                    while (rcx_4 != 0)\n                    {\n                        char temp8_1 = *rsi_4;\n                        char temp9_1 = *rdi_4;\n                        c_4 = temp8_1 < temp9_1;\n                        z_4 = temp8_1 == temp9_1;\n                        rsi_4 = &rsi_4[1];\n                        rdi_4 = (rdi_4 + 1);\n                        rcx_4 = (rcx_4 - 1);\n                        if ((!z_4))\n                        {\n                            break;\n                        }\n                    }\n                    rdx = (((!z_4) && (!c_4)) - 0);\n                    bool c_5 = false;\n                    bool z_5 = (rdx & rdx) == 0;\n                    if ((!z_5))\n                    {\n                        void* const rdi_5 = &data_408f92;\n                        int64_t rcx_5 = 4;\n                        char* rsi_5 = arg1;\n                        while (rcx_5 != 0)\n                        {\n                            char temp10_1 = *rsi_5;\n                            char temp11_1 = *rdi_5;\n                            c_5 = temp10_1 < temp11_1;\n                            z_5 = temp10_1 == temp11_1;\n                            rsi_5 = &rsi_5[1];\n                            rdi_5 = (rdi_5 + 1);\n                            rcx_5 = (rcx_5 - 1);\n                            if ((!z_5))\n                            {\n                                break;\n                            }\n                        }\n                        rdx = (((!z_5) && (!c_5)) - 0);\n                        bool c_6 = false;\n                        bool z_6 = (rdx & rdx) == 0;\n                        if ((!z_6))\n                        {\n                            void* const rdi_6 = &data_408f96;\n                            int64_t rcx_6 = 4;\n                            char* rsi_6 = arg1;\n                            while (rcx_6 != 0)\n                            {\n                                char temp12_1 = *rsi_6;\n                                char temp13_1 = *rdi_6;\n                                c_6 = temp12_1 < temp13_1;\n                                z_6 = temp12_1 == temp13_1;\n                                rsi_6 = &rsi_6[1];\n                                rdi_6 = (rdi_6 + 1);\n                                rcx_6 = (rcx_6 - 1);\n                                if ((!z_6))\n                                {\n                                    break;\n                                }\n                            }\n                            rdx = (((!z_6) && (!c_6)) - 0);\n                            bool c_7 = false;\n                            bool z_7 = (rdx & rdx) == 0;\n                            if ((!z_7))\n                            {\n                                void* const rdi_7 = &data_408f9a;\n                                int64_t rcx_7 = 4;\n                                char* rsi_7 = arg1;\n                                while (rcx_7 != 0)\n                                {\n                                    char temp14_1 = *rsi_7;\n                                    char temp15_1 = *rdi_7;\n                                    c_7 = temp14_1 < temp15_1;\n                                    z_7 = temp14_1 == temp15_1;\n                                    rsi_7 = &rsi_7[1];\n                                    rdi_7 = (rdi_7 + 1);\n                                    rcx_7 = (rcx_7 - 1);\n                                    if ((!z_7))\n                                    {\n                                        break;\n                                    }\n                                }\n                                rdx = (((!z_7) && (!c_7)) - 0);\n                                bool c_8 = false;\n                                bool z_8 = (rdx & rdx) == 0;\n                                if ((!z_8))\n                                {\n                                    void* const rdi_8 = &data_408f9e;\n                                    int64_t rcx_8 = 4;\n                                    char* rsi_8 = arg1;\n                                    while (rcx_8 != 0)\n                                    {\n                                        char temp16_1 = *rsi_8;\n                                        char temp17_1 = *rdi_8;\n                                        c_8 = temp16_1 < temp17_1;\n                                        z_8 = temp16_1 == temp17_1;\n                                        rsi_8 = &rsi_8[1];\n                                        rdi_8 = (rdi_8 + 1);\n                                        rcx_8 = (rcx_8 - 1);\n                                        if ((!z_8))\n                                        {\n                                            break;\n                                        }\n                                    }\n                                    rdx = (((!z_8) && (!c_8)) - 0);\n                                    bool c_9 = false;\n                                    bool z_9 = (rdx & rdx) == 0;\n                                    if ((!z_9))\n                                    {\n                                        void* const rdi_9 = &data_408fa2;\n                                        int64_t rcx_9 = 4;\n                                        char* rsi_9 = arg1;\n                                        while (rcx_9 != 0)\n                                        {\n                                            char temp18_1 = *rsi_9;\n                                            char temp19_1 = *rdi_9;\n                                            c_9 = temp18_1 < temp19_1;\n                                            z_9 = temp18_1 == temp19_1;\n                                            rsi_9 = &rsi_9[1];\n                                            rdi_9 = (rdi_9 + 1);\n                                            rcx_9 = (rcx_9 - 1);\n                                            if ((!z_9))\n                                            {\n                                                break;\n                                            }\n                                        }\n                                        if (((((!z_9) && (!c_9)) - 0) != 0 && strcmp(arg1, &data_408fa6) != 0))\n                                        {\n                                            int64_t rax_3;\n                                            rax_3 = strcmp(arg1, (&data_408faa)) == 0;\n                                            return rax_3;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_401ad0",
            "funcStartAddr": "0x401ad0",
            "funcEndAddr": "0x401b0c",
            "decompiledFuncCode": "int64_t sub_401ad0(char* arg1, int64_t* arg2)\n{\n    void var_98;\n    int32_t temp0 = __xstat(1, arg1, &var_98);\n    int64_t rax;\n    rax = temp0 == 0;\n    if (temp0 == 0)\n    {\n        int64_t var_40;\n        *arg2 = var_40;\n        int64_t var_38;\n        arg2[1] = var_38;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_401bb0",
            "funcStartAddr": "0x401bb0",
            "funcEndAddr": "0x401c82",
            "decompiledFuncCode": "char* sub_401bb0(uint64_t arg1)\n{\n    uint16_t* r8 = *__ctype_b_loc();\n    char* rax_1 = arg1;\n    uint64_t rcx_1;\n    char rdx_1;\n    while (true)\n    {\n        rcx_1 = *rax_1;\n        rdx_1 = rcx_1;\n        if ((r8[rcx_1] & 1) == 0)\n        {\n            break;\n        }\n        rax_1 = &rax_1[1];\n    }\n    void* rcx_3;\n    if (rcx_1 == 0x2b)\n    {\n        rcx_3 = &rax_1[1];\n        rax_1 = rcx_3;\n    }\n    else\n    {\n        void* const rcx_2;\n        rcx_2 = rdx_1 == 0x2d;\n        rcx_3 = (rcx_2 + rax_1);\n    }\n    void* rdx_2 = (rcx_3 + 1);\n    if ((*rcx_3 - 0x30) <= 9)\n    {\n        int32_t rsi_2 = *(rcx_3 + 1);\n        char rcx_4 = rsi_2;\n        if ((rsi_2 - 0x30) <= 9)\n        {\n            int32_t rsi_4;\n            do\n            {\n                rdx_2 = (rdx_2 + 1);\n                rsi_4 = *rdx_2;\n                rcx_4 = rsi_4;\n            } while ((rsi_4 - 0x30) <= 9);\n        }\n        if ((r8[rcx_4] & 1) != 0)\n        {\n            uint64_t rsi_7;\n            do\n            {\n                rdx_2 = (rdx_2 + 1);\n                rsi_7 = *rdx_2;\n                rcx_4 = rsi_7;\n            } while ((r8[rsi_7] & 1) != 0);\n        }\n        if (rcx_4 == 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_404f00(arg1);\n    __sanitizer::Report(dcgettext(nullptr, \"invalid integer %s\", 5), 0);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_401c90",
            "funcStartAddr": "0x401c90",
            "funcEndAddr": "0x401cca",
            "decompiledFuncCode": "int64_t sub_401c90() __noreturn\n{\n    sub_404f00(*((data_60d298 + (data_60d2a0 << 3)) - 8));\n    __sanitizer::Report(dcgettext(nullptr, \"missing argument after %s\", 5), 0);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_401cd0",
            "funcStartAddr": "0x401cd0",
            "funcEndAddr": "0x401cf7",
            "decompiledFuncCode": "uint64_t sub_401cd0()\n{\n    uint64_t rax_1 = data_60d2a4;\n    int32_t rdx = (rax_1 + 1);\n    bool cond:0 = rdx >= data_60d2a0;\n    data_60d2a4 = rdx;\n    if (cond:0)\n    {\n        uint64_t var_8 = rax_1;\n        sub_401c90();\n        /* no return */\n    }\n    uint64_t rax = (rax_1 + 2);\n    data_60d2a4 = rax;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_401d00",
            "funcStartAddr": "0x401d00",
            "funcEndAddr": "0x402209",
            "decompiledFuncCode": "uint64_t sub_401d00()\n{\n    int64_t rbx = data_60d298;\n    char rax_3 = (*(*(rbx + (data_60d2a4 << 3)) + 1) - 0x47);\n    int32_t rdx_1;\n    void var_a8;\n    int32_t var_90;\n    if (rax_3 > 0x33)\n    {\n    label_401d30:\n        rdx_1 = 0;\n    }\n    else\n    {\n        switch (rax_3)\n        {\n            case 0:\n            {\n                sub_401cd0();\n                if (__xstat(1, *((rbx + (data_60d2a4 << 3)) - 8), &var_a8) != 0)\n                {\n                    goto label_401d30;\n                }\n                int32_t* rax_65 = __errno_location();\n                *rax_65 = 0;\n                int32_t rax_66;\n                rax_66 = getegid();\n                if (rax_66 == 0xffffffff)\n                {\n                    rdx_1 = 0;\n                }\n                int32_t var_88;\n                if ((rax_66 != 0xffffffff || (rax_66 == 0xffffffff && *rax_65 == 0)))\n                {\n                    rdx_1 = var_88 == rax_66;\n                }\n                break;\n            }\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 6:\n            case 7:\n            case 9:\n            case 0xa:\n            case 0xb:\n            case 0xd:\n            case 0xe:\n            case 0xf:\n            case 0x10:\n            case 0x11:\n            case 0x12:\n            case 0x13:\n            case 0x14:\n            case 0x15:\n            case 0x16:\n            case 0x17:\n            case 0x18:\n            case 0x19:\n            case 0x22:\n            case 0x23:\n            case 0x25:\n            case 0x26:\n            case 0x28:\n            case 0x2a:\n            case 0x2f:\n            case 0x32:\n            {\n                goto label_401d30;\n            }\n            case 5:\n            case 0x21:\n            {\n                sub_401cd0();\n                rdx_1 = 0;\n                if (__lxstat(1, *((rbx + (data_60d2a4 << 3)) - 8), &var_a8) == 0)\n                {\n                    rdx_1 = (var_90 & 0xf000) == 0xa000;\n                }\n                break;\n            }\n            case 8:\n            {\n                sub_401cd0();\n                if (__xstat(1, *((rbx + (data_60d2a4 << 3)) - 8), &var_a8) != 0)\n                {\n                    goto label_401d30;\n                }\n                int32_t* rax_57 = __errno_location();\n                *rax_57 = 0;\n                int32_t rax_58;\n                rax_58 = geteuid();\n                if (rax_58 == 0xffffffff)\n                {\n                    rdx_1 = 0;\n                }\n                int32_t var_8c;\n                if ((rax_58 != 0xffffffff || (rax_58 == 0xffffffff && *rax_57 == 0)))\n                {\n                    rdx_1 = var_8c == rax_58;\n                }\n                break;\n            }\n            case 0xc:\n            {\n                sub_401cd0();\n                rdx_1 = 0;\n                if (__xstat(1, *((rbx + (data_60d2a4 << 3)) - 8), &var_a8) == 0)\n                {\n                    rdx_1 = (var_90 & 0xf000) == 0xc000;\n                }\n                break;\n            }\n            case 0x1a:\n            case 0x1e:\n            {\n                sub_401cd0();\n                int32_t rax_50;\n                rax_50 = __xstat(1, *((rbx + (data_60d2a4 << 3)) - 8), &var_a8);\n                rdx_1 = rax_50 == 0;\n                break;\n            }\n            case 0x1b:\n            {\n                sub_401cd0();\n                rdx_1 = 0;\n                if (__xstat(1, *((rbx + (data_60d2a4 << 3)) - 8), &var_a8) == 0)\n                {\n                    rdx_1 = (var_90 & 0xf000) == 0x6000;\n                }\n                break;\n            }\n            case 0x1c:\n            {\n                sub_401cd0();\n                rdx_1 = 0;\n                if (__xstat(1, *((rbx + (data_60d2a4 << 3)) - 8), &var_a8) == 0)\n                {\n                    rdx_1 = (var_90 & 0xf000) == 0x2000;\n                }\n                break;\n            }\n            case 0x1d:\n            {\n                sub_401cd0();\n                rdx_1 = 0;\n                if (__xstat(1, *((rbx + (data_60d2a4 << 3)) - 8), &var_a8) == 0)\n                {\n                    rdx_1 = (var_90 & 0xf000) == 0x4000;\n                }\n                break;\n            }\n            case 0x1f:\n            {\n                sub_401cd0();\n                rdx_1 = 0;\n                if (__xstat(1, *((rbx + (data_60d2a4 << 3)) - 8), &var_a8) == 0)\n                {\n                    rdx_1 = (var_90 & 0xf000) == 0x8000;\n                }\n                break;\n            }\n            case 0x20:\n            {\n                sub_401cd0();\n                rdx_1 = 0;\n                if (__xstat(1, *((rbx + (data_60d2a4 << 3)) - 8), &var_a8) == 0)\n                {\n                    rdx_1 = ((var_90 >> 0xa) & 1);\n                }\n                break;\n            }\n            case 0x24:\n            {\n                sub_401cd0();\n                rdx_1 = 0;\n                if (__xstat(1, *((rbx + (data_60d2a4 << 3)) - 8), &var_a8) == 0)\n                {\n                    rdx_1 = ((var_90 >> 9) & 1);\n                }\n                break;\n            }\n            case 0x27:\n            {\n                sub_401cd0();\n                rdx_1 = **((rbx + (data_60d2a4 << 3)) - 8) != 0;\n                break;\n            }\n            case 0x29:\n            {\n                sub_401cd0();\n                rdx_1 = 0;\n                if (__xstat(1, *((rbx + (data_60d2a4 << 3)) - 8), &var_a8) == 0)\n                {\n                    rdx_1 = (var_90 & 0xf000) == 0x1000;\n                }\n                break;\n            }\n            case 0x2b:\n            {\n                sub_401cd0();\n                int32_t rax_22;\n                rax_22 = euidaccess(*((rbx + (data_60d2a4 << 3)) - 8), 4);\n                rdx_1 = rax_22 == 0;\n                break;\n            }\n            case 0x2c:\n            {\n                sub_401cd0();\n                rdx_1 = 0;\n                int64_t var_78;\n                if (__xstat(1, *((rbx + (data_60d2a4 << 3)) - 8), &var_a8) == 0)\n                {\n                    rdx_1 = var_78 > 0;\n                }\n                break;\n            }\n            case 0x2d:\n            {\n                sub_401cd0();\n                char* rax_15 = sub_401bb0(*((rbx + (data_60d2a4 << 3)) - 8));\n                int32_t* rax_16 = __errno_location();\n                *rax_16 = 0;\n                int64_t rax_17 = strtol(rax_15, nullptr, 0xa);\n                rdx_1 = 0;\n                if ((*rax_16 != 0x22 && rax_17 <= 0x7fffffff))\n                {\n                    int32_t rax_18;\n                    rax_18 = isatty(rax_17);\n                    rdx_1 = rax_18 != 0;\n                }\n                break;\n            }\n            case 0x2e:\n            {\n                sub_401cd0();\n                rdx_1 = 0;\n                if (__xstat(1, *((rbx + (data_60d2a4 << 3)) - 8), &var_a8) == 0)\n                {\n                    rdx_1 = ((var_90 >> 0xb) & 1);\n                }\n                break;\n            }\n            case 0x30:\n            {\n                sub_401cd0();\n                int32_t rax_11;\n                rax_11 = euidaccess(*((rbx + (data_60d2a4 << 3)) - 8), 2);\n                rdx_1 = rax_11 == 0;\n                break;\n            }\n            case 0x31:\n            {\n                sub_401cd0();\n                int32_t rax_9;\n                rax_9 = euidaccess(*((rbx + (data_60d2a4 << 3)) - 8), 1);\n                rdx_1 = rax_9 == 0;\n                break;\n            }\n            case 0x33:\n            {\n                sub_401cd0();\n                rdx_1 = **((rbx + (data_60d2a4 << 3)) - 8) == 0;\n                break;\n            }\n        }\n    }\n    return rdx_1;\n}\n\n"
        },
        {
            "funcName": "sub_402210",
            "funcStartAddr": "0x4016d0",
            "funcEndAddr": "0x4026b4",
            "decompiledFuncCode": "uint64_t sub_402210(char arg1)\n{\n    int32_t rcx = data_60d2a4;\n    int32_t rdx = (rcx + 1);\n    if (arg1 != 0)\n    {\n        data_60d2a4 = rdx;\n        rdx = (rcx + 2);\n    }\n    int64_t r12 = data_60d298;\n    int64_t rbx = rdx;\n    uint32_t rbp = 0;\n    bool c = (data_60d2a0 - 2) < rdx;\n    bool z = (data_60d2a0 - 2) == rdx;\n    if ((!(z || ((data_60d2a0 - 2) - rdx) < 0 != ((data_60d2a0 - 2) + (-rdx)))))\n    {\n        char* rsi_1 = *((r12 + (rbx << 3)) + 8);\n        int64_t rcx_2 = 3;\n        char const* const rdi_1 = \"-l\";\n        while (rcx_2 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char const temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = &rdi_1[1];\n            rcx_2 = (rcx_2 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_2 = ((!z) && (!c));\n        rcx_2 = (rcx_2 - 0);\n        if (rcx_2 == 0)\n        {\n            data_60d2a4 = rdx;\n            rbp = 1;\n        }\n    }\n    char* rsi_2 = *(r12 + (rbx << 3));\n    int64_t r13 = (rbx << 3);\n    char rdx_1 = *rsi_2;\n    if (rdx_1 == 0x2d)\n    {\n        char rdx_2 = rsi_2[1];\n        int64_t var_148;\n        int64_t var_b8;\n        char rcx_5;\n        if ((rdx_2 == 0x6c || rdx_2 == 0x67))\n        {\n            rcx_5 = rsi_2[2];\n            if (((rcx_5 == 0x65 || rcx_5 == 0x74) && rsi_2[3] == 0))\n            {\n            label_40259b:\n                char* rdi_11 = *((r12 + r13) - 8);\n                void* r12_1;\n                if (arg1 == 0)\n                {\n                    r12_1 = sub_401bb0(rdi_11);\n                }\n                else\n                {\n                    r12_1 = sub_403290(strlen(rdi_11), &var_148);\n                }\n                int64_t rax_23 = data_60d298;\n                char* rsi_15;\n                if (rbp == 0)\n                {\n                    rsi_15 = sub_401bb0(*((rax_23 + r13) + 8));\n                }\n                else\n                {\n                    rsi_15 = sub_403290(strlen(*((rax_23 + r13) + 0x10)), &var_b8);\n                }\n                int32_t rax_26 = sub_404f20(r12_1, rsi_15);\n                void* rcx_7 = *(data_60d298 + (rbx << 3));\n                char rcx_8 = *(rcx_7 + 1);\n                int64_t rdx_9;\n                rdx_9 = *(rcx_7 + 2) == 0x65;\n                data_60d2a4 = (data_60d2a4 + 3);\n                if (rcx_8 == 0x6c)\n                {\n                    rbp = rdx_9 > rax_26;\n                }\n                else if (rcx_8 == 0x67)\n                {\n                    rbp = (-rdx_9) < rax_26;\n                }\n                else\n                {\n                    rax_26 = rax_26 != 0;\n                    rbp = rax_26 == rdx_9;\n                }\n            }\n        }\n        char rdx_4;\n        if (((rdx_2 != 0x6c && rdx_2 != 0x67) || (((rdx_2 == 0x6c || rdx_2 == 0x67) && rcx_5 != 0x65) && rcx_5 != 0x74)))\n        {\n            if (rdx_2 == 0x65)\n            {\n                rdx_4 = rsi_2[2];\n            }\n            if (rdx_2 == 0x6e)\n            {\n                rcx_5 = rsi_2[2];\n            }\n            if (((rdx_2 == 0x65 && rdx_4 == 0x71) || (rdx_2 == 0x6e && rcx_5 == 0x65)))\n            {\n                if (rsi_2[3] != 0)\n                {\n                label_40255c:\n                    sub_404f00(rsi_2);\n                    __sanitizer::Report(dcgettext(nullptr, \"%s: unknown binary operator\", 5), 0);\n                    /* no return */\n                }\n                goto label_40259b;\n            }\n        }\n        int64_t var_140;\n        int64_t var_b0;\n        char const* const rsi_16;\n        if ((((((rdx_2 == 0x6c || rdx_2 == 0x67) && (rcx_5 == 0x65 || rcx_5 == 0x74)) && rsi_2[3] != 0) && rdx_2 == 0x6e) || ((((rdx_2 != 0x6c && rdx_2 != 0x67) || (((rdx_2 == 0x6c || rdx_2 == 0x67) && rcx_5 != 0x65) && rcx_5 != 0x74)) && rdx_2 == 0x6e) && rcx_5 != 0x65)))\n        {\n            if (rcx_5 != 0x74)\n            {\n                goto label_40255c;\n            }\n            if (rsi_2[3] != 0)\n            {\n                goto label_40255c;\n            }\n            data_60d2a4 = (data_60d2a4 + 3);\n            rbp = (rbp | arg1);\n            if (rbp != 0)\n            {\n                rsi_16 = \"-nt does not accept -l\";\n                goto label_402697;\n            }\n            rbp = sub_401ad0(*((r12 + r13) - 8), &var_148);\n            uint32_t rax_18 = sub_401ad0(*((r12 + r13) + 8), &var_b8);\n            if ((rbp != 0 && rax_18 != 0))\n            {\n                int32_t rdx_7 = var_140;\n                int32_t rcx_6 = var_b0;\n                int64_t rbx_6 = var_148;\n                int64_t temp5_1 = var_b8;\n                bool cond:5_1 = temp5_1 < rbx_6;\n                if (temp5_1 > rbx_6)\n                {\n                    rbp = 0;\n                }\n                else\n                {\n                    rbp = rax_18;\n                    if ((!cond:5_1))\n                    {\n                        rbp = (rdx_7 - rcx_6) > 0;\n                    }\n                }\n            }\n        }\n        if (((((((rdx_2 != 0x6c && rdx_2 != 0x67) || (((rdx_2 == 0x6c || rdx_2 == 0x67) && rcx_5 != 0x65) && rcx_5 != 0x74)) && rdx_2 != 0x65) && rdx_2 != 0x6e) || (((rdx_2 == 0x6c || rdx_2 == 0x67) && (rcx_5 == 0x65 || rcx_5 == 0x74)) && rsi_2[3] != 0)) && rdx_2 != 0x6f))\n        {\n            if (rdx_2 != 0x65)\n            {\n                goto label_40255c;\n            }\n            rdx_4 = rsi_2[2];\n        }\n        if ((((((rdx_2 != 0x6c && rdx_2 != 0x67) || (((rdx_2 == 0x6c || rdx_2 == 0x67) && rcx_5 != 0x65) && rcx_5 != 0x74)) && rdx_2 == 0x65) && rdx_4 != 0x71) || ((((((rdx_2 != 0x6c && rdx_2 != 0x67) || (((rdx_2 == 0x6c || rdx_2 == 0x67) && rcx_5 != 0x65) && rcx_5 != 0x74)) && rdx_2 != 0x65) && rdx_2 != 0x6e) || (((rdx_2 == 0x6c || rdx_2 == 0x67) && (rcx_5 == 0x65 || rcx_5 == 0x74)) && rsi_2[3] != 0)) && rdx_2 != 0x6f)))\n        {\n            if (rdx_4 != 0x66)\n            {\n                goto label_40255c;\n            }\n            if (rsi_2[3] != 0)\n            {\n                goto label_40255c;\n            }\n            data_60d2a4 = (data_60d2a4 + 3);\n            rbp = (rbp | arg1);\n            if (rbp != 0)\n            {\n                rsi_16 = \"-ef does not accept -l\";\n            label_402697:\n                __sanitizer::Report(dcgettext(nullptr, rsi_16, 5), 0);\n                /* no return */\n            }\n            if ((__xstat(1, *((r12 + r13) - 8), &var_148) == 0 && (__xstat(1, *((r12 + r13) + 8), &var_b8) == 0 && var_148 == var_b8)))\n            {\n                rbp = var_140 == var_b0;\n            }\n        }\n        if (((((((rdx_2 != 0x6c && rdx_2 != 0x67) || (((rdx_2 == 0x6c || rdx_2 == 0x67) && rcx_5 != 0x65) && rcx_5 != 0x74)) && rdx_2 != 0x65) && rdx_2 != 0x6e) || (((rdx_2 == 0x6c || rdx_2 == 0x67) && (rcx_5 == 0x65 || rcx_5 == 0x74)) && rsi_2[3] != 0)) && rdx_2 == 0x6f))\n        {\n            if (rsi_2[2] != 0x74)\n            {\n                goto label_40255c;\n            }\n            if (rsi_2[3] != 0)\n            {\n                goto label_40255c;\n            }\n            data_60d2a4 = (data_60d2a4 + 3);\n            uint32_t rbx_5;\n            rbx_5 = (rbp | arg1);\n            if (rbx_5 != 0)\n            {\n                rsi_16 = \"-ot does not accept -l\";\n                goto label_402697;\n            }\n            uint32_t rax_8 = sub_401ad0(*((r12 + r13) - 8), &var_148);\n            uint32_t rax_9 = sub_401ad0(*((r12 + r13) + 8), &var_b8);\n            rbp = rax_9;\n            if ((rax_9 != 0 && rax_8 != 0))\n            {\n                int64_t rcx_4 = var_148;\n                int64_t rdx_3 = var_b8;\n                int32_t rax_10 = var_140;\n                int32_t rsi_7 = var_b0;\n                if (rcx_4 < rdx_3)\n                {\n                    rbp = rax_8;\n                }\n                else\n                {\n                    rbp = ((rax_10 - rsi_7) >> 0x1f);\n                    if (rcx_4 > rdx_3)\n                    {\n                        rbp = rbx_5;\n                    }\n                }\n            }\n        }\n    }\n    else\n    {\n        bool c_1 = rdx_1 < 0x3d;\n        bool z_1 = rdx_1 == 0x3d;\n        if (z_1)\n        {\n            char rax = rsi_2[1];\n            if (rax != 0)\n            {\n                c_1 = rax < 0x3d;\n                z_1 = rax == 0x3d;\n                if ((!z_1))\n                {\n                    goto label_402289;\n                }\n                char temp2_1 = rsi_2[2];\n                c_1 = temp2_1 < 0;\n                z_1 = temp2_1 == 0;\n                if ((!z_1))\n                {\n                    goto label_402289;\n                }\n            }\n            int64_t rax_5 = data_60d2a4;\n            rbp = strcmp(*((r12 + ((rax_5 + 2) << 3)) - 0x10), *(r12 + ((rax_5 + 2) << 3))) == 0;\n            data_60d2a4 = (rax_5 + 3);\n        }\n        else\n        {\n        label_402289:\n            void* const rdi_2 = &data_408f84;\n            int64_t rcx_3 = 3;\n            while (rcx_3 != 0)\n            {\n                char temp3_1 = *rsi_2;\n                char temp4_1 = *rdi_2;\n                c_1 = temp3_1 < temp4_1;\n                z_1 = temp3_1 == temp4_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_3 = (rcx_3 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            if ((((!z_1) && (!c_1)) - 0) != 0)\n            {\n                abort();\n                /* no return */\n            }\n            int64_t rax_1 = data_60d2a4;\n            rbp = strcmp(*((r12 + ((rax_1 + 2) << 3)) - 0x10), *(r12 + ((rax_1 + 2) << 3))) != 0;\n            data_60d2a4 = (rax_1 + 3);\n        }\n    }\n    return rbp;\n}\n\n"
        },
        {
            "funcName": "sub_4026c0",
            "funcStartAddr": "0x4026c0",
            "funcEndAddr": "0x4026e7",
            "decompiledFuncCode": "int64_t sub_4026c0(void* arg1)\n{\n    int64_t rax = 0;\n    char rcx = (*(arg1 + 1) - 0x47);\n    if (rcx <= 0x33)\n    {\n        rax = ((1 << rcx) & 0xb7b93fc0011a1) != 0;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4026f0",
            "funcStartAddr": "0x4026f0",
            "funcEndAddr": "0x402790",
            "decompiledFuncCode": "char* sub_4026f0()\n{\n    int64_t rax = data_60d2a4;\n    void* const rdi = &data_40903c;\n    int64_t rcx = 2;\n    int64_t r9 = data_60d298;\n    char* r8 = *(r9 + (rax << 3));\n    int32_t rdx = rax;\n    int64_t r10 = (rax << 3);\n    char* rsi = r8;\n    bool c;\n    bool z;\n    while (rcx != 0)\n    {\n        char temp0_1 = *rsi;\n        char temp1_1 = *rdi;\n        c = temp0_1 < temp1_1;\n        z = temp0_1 == temp1_1;\n        rsi = &rsi[1];\n        rdi = (rdi + 1);\n        rcx = (rcx - 1);\n        if ((!z))\n        {\n            break;\n        }\n    }\n    rax = ((!z) && (!c));\n    rax = (rax - 0);\n    if (rax == 0)\n    {\n        char* rax_3 = *((r9 + r10) + 8);\n        data_60d2a4 = (rdx + 2);\n        rax_3 = *rax_3 == 0;\n        return rax_3;\n    }\n    if ((*r8 == 0x2d && (r8[1] != 0 && r8[2] == 0)))\n    {\n        if (sub_4026c0(r8) == 0)\n        {\n            sub_404f00(r8);\n            __sanitizer::Report(dcgettext(nullptr, \"%s: unary operator expected\", 5), 0);\n            /* no return */\n        }\n        /* tailcall */\n        return sub_401d00();\n    }\n    sub_401c90();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_402790",
            "funcStartAddr": "0x402790",
            "funcEndAddr": "0x4028cb",
            "decompiledFuncCode": "char* sub_402790(int32_t arg1)\n{\n    bool cond:0 = arg1 <= 2;\n    if (arg1 == 2)\n    {\n        /* tailcall */\n        return sub_4026f0();\n    }\n    int32_t rax;\n    bool z_1;\n    if ((!cond:0))\n    {\n        if (arg1 == 3)\n        {\n            /* tailcall */\n            return sub_402cd0();\n        }\n        bool c_1 = arg1 < 4;\n        z_1 = arg1 == 4;\n        if (z_1)\n        {\n            int64_t rdx_1 = data_60d2a4;\n            void* const rdi = &data_40903c;\n            int64_t rcx_1 = 2;\n            int64_t r9_1 = data_60d298;\n            char* r8_1 = *(r9_1 + (rdx_1 << 3));\n            rax = rdx_1;\n            int64_t r10_1 = (rdx_1 << 3);\n            char* rsi_1 = r8_1;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = &rsi_1[1];\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_1 = ((!z_1) && (!c_1));\n            rdx_1 = (rdx_1 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_1 & rdx_1) == 0;\n            uint64_t rax_3;\n            bool z_3;\n            if ((!z_2))\n            {\n                void* const rdi_4 = &data_40905a;\n                int64_t rcx_5 = 2;\n                char* rsi_5 = r8_1;\n                while (rcx_5 != 0)\n                {\n                    char temp2_1 = *rsi_5;\n                    char temp3_1 = *rdi_4;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_5 = &rsi_5[1];\n                    rdi_4 = (rdi_4 + 1);\n                    rcx_5 = (rcx_5 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_1 = ((!z_2) && (!c_2));\n                rdx_1 = (rdx_1 - 0);\n                bool c_3 = false;\n                z_3 = (rdx_1 & rdx_1) == 0;\n                if (z_3)\n                {\n                    char* rsi_6 = *((r9_1 + r10_1) + 0x18);\n                    void* const rdi_5 = &data_40ae8d;\n                    int64_t rcx_6 = 2;\n                    while (rcx_6 != 0)\n                    {\n                        char temp4_1 = *rsi_6;\n                        char temp5_1 = *rdi_5;\n                        c_3 = temp4_1 < temp5_1;\n                        z_3 = temp4_1 == temp5_1;\n                        rsi_6 = &rsi_6[1];\n                        rdi_5 = (rdi_5 + 1);\n                        rcx_6 = (rcx_6 - 1);\n                        if ((!z_3))\n                        {\n                            break;\n                        }\n                    }\n                    rdx_1 = ((!z_3) && (!c_3));\n                    rdx_1 = (rdx_1 - 0);\n                    if (rdx_1 == 0)\n                    {\n                        data_60d2a4 = (rax + 1);\n                        rax_3 = sub_4026f0();\n                        data_60d2a4 = (data_60d2a4 + 1);\n                    }\n                }\n            }\n            else\n            {\n                bool cond:5_1 = (rax + 1) >= data_60d2a0;\n                data_60d2a4 = (rax + 1);\n                if (cond:5_1)\n                {\n                    goto label_4028c6;\n                }\n                rax_3 = (sub_402cd0() ^ 1);\n            }\n            if (((((!z_2) && z_3) && rdx_1 == 0) || z_2))\n            {\n                return rax_3;\n            }\n        }\n    }\n    else if (arg1 == 1)\n    {\n        int64_t rax_4 = data_60d2a4;\n        data_60d2a4 = (rax_4 + 1);\n        char* rax_5;\n        rax_5 = **(data_60d298 + (rax_4 << 3)) != 0;\n        return rax_5;\n    }\n    if (((((!cond:0) && arg1 != 3) && (!z_1)) || cond:0))\n    {\n        rax = data_60d2a4;\n    }\n    if ((((((!cond:0) && arg1 != 3) && (!z_1)) || cond:0) || (((!cond:0) && arg1 != 3) && z_1)))\n    {\n        if (rax < data_60d2a0)\n        {\n            /* tailcall */\n            return sub_4028d0();\n        }\n    label_4028c6:\n        sub_401c90();\n        /* no return */\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4028d0",
            "funcStartAddr": "0x4028d0",
            "funcEndAddr": "0x402cc7",
            "decompiledFuncCode": "uint64_t sub_4028d0()\n{\n    int32_t rbx = data_60d2a4;\n    int32_t r14 = data_60d2a0;\n    char var_39 = 0;\n    while (true)\n    {\n        char var_3a_1 = 1;\n        if (rbx >= r14)\n        {\n            break;\n        }\n        int32_t rbx_1;\n        int32_t rbx_3;\n        char r13_1;\n        char* r15_1;\n        while (true)\n        {\n            int64_t r10_2 = data_60d298;\n            int64_t rbp_1 = rbx;\n            r15_1 = *(r10_2 + (rbp_1 << 3));\n            r13_1 = *r15_1;\n            char rax_5;\n            char const* const rsi_8;\n            if (r13_1 != 0x21)\n            {\n                int32_t r12_1 = 0;\n            }\n            else\n            {\n                if (r15_1[1] != 0)\n                {\n                    r12_1 = 0;\n                label_402abd:\n                    int32_t rax_9 = (r14 - rbx);\n                    bool c_3 = rax_9 < 3;\n                    bool z_3 = rax_9 == 3;\n                    if ((!(z_3 || (rax_9 - 3) < 0 != (rax_9 - 3))))\n                    {\n                        char const* const rdi_4 = \"-l\";\n                        int64_t rcx_7 = 3;\n                        char* rsi_5 = r15_1;\n                        while (rcx_7 != 0)\n                        {\n                            char temp0_1 = *rsi_5;\n                            char const temp1_1 = *rdi_4;\n                            c_3 = temp0_1 < temp1_1;\n                            z_3 = temp0_1 == temp1_1;\n                            rsi_5 = &rsi_5[1];\n                            rdi_4 = &rdi_4[1];\n                            rcx_7 = (rcx_7 - 1);\n                            if ((!z_3))\n                            {\n                                break;\n                            }\n                        }\n                        rax_9 = ((!z_3) && (!c_3));\n                        rax_9 = (rax_9 - 0);\n                        if (rax_9 != 0)\n                        {\n                            goto label_402aff;\n                        }\n                        if (sub_401980(*((r10_2 + (rbp_1 << 3)) + 0x10)) == 0)\n                        {\n                            goto label_402aff;\n                        }\n                        rax_5 = sub_402210(1);\n                        rbx_3 = data_60d2a4;\n                        r14 = data_60d2a0;\n                        goto label_402a5b;\n                    }\n                    bool c_2;\n                    bool z_2;\n                    if (z_3)\n                    {\n                    label_402aff:\n                        if (sub_401980(*((r10_2 + (rbp_1 << 3)) + 8)) != 0)\n                        {\n                            rax_5 = sub_402210(0);\n                            rbx_3 = data_60d2a4;\n                            r14 = data_60d2a0;\n                        label_402a5b:\n                            var_3a_1 = (var_3a_1 & (rax_5 ^ r12_1));\n                            c_2 = r14 < rbx_3;\n                            z_2 = r14 == rbx_3;\n                            if ((!(z_2 || (r14 - rbx_3) < 0 != (r14 + (-rbx_3)))))\n                            {\n                                goto label_402a72;\n                            }\n                            goto label_402b36;\n                        }\n                        if (r13_1 != 0x2d)\n                        {\n                            goto label_402b15;\n                        }\n                    }\n                    else if (r13_1 != 0x2d)\n                    {\n                    label_402b15:\n                        rax_9 = r13_1 != 0;\n                        rbx_3 = (rbx + 1);\n                        data_60d2a4 = rbx_3;\n                        var_3a_1 = (var_3a_1 & (rax_9 ^ r12_1));\n                        c_2 = r14 < rbx_3;\n                        z_2 = r14 == rbx_3;\n                        if (((!z_2) && (r14 - rbx_3) < 0 == (r14 + (-rbx_3))))\n                        {\n                        label_402a72:\n                            void* const rdi_3 = &data_40907e;\n                            char* r8_3 = *(data_60d298 + (rbx_3 << 3));\n                            int64_t rcx_6 = 3;\n                            char* rsi_4 = r8_3;\n                            while (rcx_6 != 0)\n                            {\n                                char temp3_1 = *rsi_4;\n                                char temp4_1 = *rdi_3;\n                                c_2 = temp3_1 < temp4_1;\n                                z_2 = temp3_1 == temp4_1;\n                                rsi_4 = &rsi_4[1];\n                                rdi_3 = (rdi_3 + 1);\n                                rcx_6 = (rcx_6 - 1);\n                                if ((!z_2))\n                                {\n                                    break;\n                                }\n                            }\n                            int64_t rax_7;\n                            rax_7 = ((!z_2) && (!c_2));\n                            rax_7 = (rax_7 - 0);\n                            if (rax_7 != 0)\n                            {\n                                void* const rdi_8 = &data_409081;\n                                int64_t rcx_8 = 3;\n                                char* rsi_6 = r8_3;\n                                char temp7_1 = var_39;\n                                var_39 = (var_39 | var_3a_1);\n                                bool c_4 = false;\n                                bool z_4 = (temp7_1 | var_3a_1) == 0;\n                                while (rcx_8 != 0)\n                                {\n                                    char temp8_1 = *rsi_6;\n                                    char temp9_1 = *rdi_8;\n                                    c_4 = temp8_1 < temp9_1;\n                                    z_4 = temp8_1 == temp9_1;\n                                    rsi_6 = &rsi_6[1];\n                                    rdi_8 = (rdi_8 + 1);\n                                    rcx_8 = (rcx_8 - 1);\n                                    if ((!z_4))\n                                    {\n                                        break;\n                                    }\n                                }\n                                if ((((!z_4) && (!c_4)) - 0) == 0)\n                                {\n                                    break;\n                                }\n                            }\n                            else\n                            {\n                                rbx = (rbx_3 + 1);\n                                data_60d2a4 = rbx;\n                                if (rbx >= r14)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                            goto label_402b4d;\n                        }\n                    label_402b36:\n                        var_39 = (var_39 | var_3a_1);\n                    label_402b4d:\n                        return var_39;\n                    }\n                    if (r15_1[1] == 0)\n                    {\n                        goto label_402b15;\n                    }\n                    if (r15_1[2] != 0)\n                    {\n                        goto label_402b15;\n                    }\n                    if (sub_4026c0(r15_1) == 0)\n                    {\n                        sub_404f00(r15_1);\n                        rsi_8 = \"%s: unary operator expected\";\n                        goto label_402cae;\n                    }\n                    rax_5 = sub_401d00();\n                    rbx_3 = data_60d2a4;\n                    r14 = data_60d2a0;\n                    goto label_402a5b;\n                }\n                rbx_1 = (rbx + 1);\n                data_60d2a4 = rbx_1;\n                if (rbx_1 >= r14)\n                {\n                    break;\n                }\n                rbp_1 = rbx_1;\n                char rax_1 = 0;\n                r12_1 = 1;\n                char rsi_1;\n                while (true)\n                {\n                    r15_1 = *(r10_2 + (rbp_1 << 3));\n                    int32_t rcx_2 = rbp_1;\n                    rbx = rbp_1;\n                    rsi_1 = *r15_1;\n                    if (rsi_1 != 0x21)\n                    {\n                        break;\n                    }\n                    if (r15_1[1] != 0)\n                    {\n                        break;\n                    }\n                    rbp_1 = (rbp_1 + 1);\n                    int32_t rcx_1 = (rcx_2 + 1);\n                    if (r14 <= rbp_1)\n                    {\n                        data_60d2a4 = rcx_1;\n                        sub_401c90();\n                        /* no return */\n                    }\n                    r12_1 = (r12_1 ^ 1);\n                    rax_1 = 1;\n                }\n                if (rsi_1 == 0x21)\n                {\n                    if (rax_1 != 0)\n                    {\n                        data_60d2a4 = rbp_1;\n                    }\n                    goto label_402abd;\n                }\n                if (rax_1 != 0)\n                {\n                    data_60d2a4 = rbp_1;\n                }\n                r13_1 = rsi_1;\n            }\n            if (r13_1 != 0x28)\n            {\n                goto label_402abd;\n            }\n            if (r15_1[1] != 0)\n            {\n                goto label_402abd;\n            }\n            int32_t r9_1 = (rbx + 1);\n            data_60d2a4 = r9_1;\n            if (r9_1 >= r14)\n            {\n                break;\n            }\n            int32_t rax_2 = (rbx + 2);\n            int32_t rax_4;\n            if (rax_2 >= r14)\n            {\n                rax_4 = 1;\n            }\n            else\n            {\n                int64_t r10_1 = (r10_2 + (rax_2 << 3));\n                int32_t r8_2 = ((r14 - 1) - rbx);\n                bool c_1 = (r14 - 1) < rbx;\n                bool z_1 = (r14 - 1) == rbx;\n                rax_4 = 1;\n                do\n                {\n                    char* rsi_2 = *r10_1;\n                    int64_t rcx_3 = 2;\n                    void* const rdi_1 = &data_40ae8d;\n                    while (rcx_3 != 0)\n                    {\n                        char temp5_1 = *rsi_2;\n                        char temp6_1 = *rdi_1;\n                        c_1 = temp5_1 < temp6_1;\n                        z_1 = temp5_1 == temp6_1;\n                        rsi_2 = &rsi_2[1];\n                        rdi_1 = (rdi_1 + 1);\n                        rcx_3 = (rcx_3 - 1);\n                        if ((!z_1))\n                        {\n                            break;\n                        }\n                    }\n                    rcx_3 = ((!z_1) && (!c_1));\n                    rcx_3 = (rcx_3 - 0);\n                    if (rcx_3 == 0)\n                    {\n                        break;\n                    }\n                    if (rax_4 == 4)\n                    {\n                        rax_4 = (r14 - r9_1);\n                        break;\n                    }\n                    rax_4 = (rax_4 + 1);\n                    r10_1 = (r10_1 + 8);\n                    c_1 = rax_4 < r8_2;\n                    z_1 = rax_4 == r8_2;\n                } while ((!z_1));\n            }\n            rax_5 = sub_402790(rax_4);\n            int64_t rcx_4 = data_60d2a4;\n            char* rsi_3 = *(data_60d298 + (rcx_4 << 3));\n            int32_t rbx_2 = rcx_4;\n            if (rsi_3 == 0)\n            {\n                rsi_8 = \"%s expected\";\n                sub_404f00(&data_40ae8d);\n            label_402cae:\n                __sanitizer::Report(dcgettext(nullptr, rsi_8, 5), 0);\n                /* no return */\n            }\n            if ((*rsi_3 != 0x29 || (*rsi_3 == 0x29 && rsi_3[1] != 0)))\n            {\n                sub_404ee0(1, rsi_3);\n                sub_404ee0(0, &data_40ae8d);\n                __sanitizer::Report(dcgettext(nullptr, \"%s expected, found %s\", 5), 0);\n                /* no return */\n            }\n            if ((*rsi_3 == 0x29 && rsi_3[1] == 0))\n            {\n                rbx_3 = (rbx_2 + 1);\n                r14 = data_60d2a0;\n                data_60d2a4 = rbx_3;\n            }\n            goto label_402a5b;\n        }\n        if (((r13_1 == 0x21 && r15_1[1] == 0) && rbx_1 >= r14))\n        {\n            break;\n        }\n        rbx = (rbx_3 + 1);\n        data_60d2a4 = rbx;\n    }\n    sub_401c90();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_402cd0",
            "funcStartAddr": "0x402cd0",
            "funcEndAddr": "0x402e2f",
            "decompiledFuncCode": "uint64_t sub_402cd0()\n{\n    int64_t rax = data_60d2a4;\n    int64_t rbp = data_60d298;\n    int32_t rbx = rax;\n    char* r13 = *(rbp + ((rax + 1) << 3));\n    int64_t r12 = ((rax + 1) << 3);\n    uint64_t rax_2 = sub_401980(r13);\n    bool c = false;\n    bool z = (rax_2 & rax_2) == 0;\n    if ((!z))\n    {\n        /* tailcall */\n        return sub_402210(0);\n    }\n    char* rdx = *((rbp + r12) - 8);\n    void* const rdi_1 = &data_40903c;\n    int64_t rcx = 2;\n    char* rsi = rdx;\n    while (rcx != 0)\n    {\n        char temp0_1 = *rsi;\n        char temp1_1 = *rdi_1;\n        c = temp0_1 < temp1_1;\n        z = temp0_1 == temp1_1;\n        rsi = &rsi[1];\n        rdi_1 = (rdi_1 + 1);\n        rcx = (rcx - 1);\n        if ((!z))\n        {\n            break;\n        }\n    }\n    rax_2 = ((!z) && (!c));\n    rax_2 = (rax_2 - 0);\n    bool c_1 = false;\n    bool z_1 = (rax_2 & rax_2) == 0;\n    bool z_2;\n    bool cond:4_1;\n    if ((!z_1))\n    {\n        void* const rdi_2 = &data_40905a;\n        int64_t rcx_1 = 2;\n        char* rsi_1 = rdx;\n        while (rcx_1 != 0)\n        {\n            char temp2_1 = *rsi_1;\n            char temp3_1 = *rdi_2;\n            c_1 = temp2_1 < temp3_1;\n            z_1 = temp2_1 == temp3_1;\n            rsi_1 = &rsi_1[1];\n            rdi_2 = (rdi_2 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z_1))\n            {\n                break;\n            }\n        }\n        rax_2 = ((!z_1) && (!c_1));\n        rax_2 = (rax_2 - 0);\n        bool c_2 = false;\n        z_2 = (rax_2 & rax_2) == 0;\n        if (z_2)\n        {\n            char* rsi_2 = *((rbp + r12) + 8);\n            void* const rdi_3 = &data_40ae8d;\n            int64_t rcx_2 = 2;\n            while (rcx_2 != 0)\n            {\n                char temp6_1 = *rsi_2;\n                char temp7_1 = *rdi_3;\n                c_2 = temp6_1 < temp7_1;\n                z_2 = temp6_1 == temp7_1;\n                rsi_2 = &rsi_2[1];\n                rdi_3 = (rdi_3 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_2))\n                {\n                    break;\n                }\n            }\n            rax_2 = ((!z_2) && (!c_2));\n            rax_2 = (rax_2 - 0);\n            c_2 = false;\n            z_2 = (rax_2 & rax_2) == 0;\n            if (z_2)\n            {\n                rax_2 = *r13 != 0;\n                data_60d2a4 = (rbx + 3);\n            }\n        }\n        if (((!z_2) || (z_2 && (!z_2))))\n        {\n            void* const rdi_4 = &data_40907e;\n            int64_t rcx_3 = 3;\n            char* rsi_3 = r13;\n            while (rcx_3 != 0)\n            {\n                char temp4_1 = *rsi_3;\n                char temp5_1 = *rdi_4;\n                c_2 = temp4_1 < temp5_1;\n                z_2 = temp4_1 == temp5_1;\n                rsi_3 = &rsi_3[1];\n                rdi_4 = (rdi_4 + 1);\n                rcx_3 = (rcx_3 - 1);\n                if ((!z_2))\n                {\n                    break;\n                }\n            }\n            rax_2 = ((!z_2) && (!c_2));\n            rax_2 = (rax_2 - 0);\n            bool c_3 = false;\n            bool z_3 = (rax_2 & rax_2) == 0;\n            if ((!z_3))\n            {\n                void* const rdi_5 = &data_409081;\n                int64_t rcx_4 = 3;\n                char* rsi_4 = r13;\n                while (rcx_4 != 0)\n                {\n                    char temp8_1 = *rsi_4;\n                    char temp9_1 = *rdi_5;\n                    c_3 = temp8_1 < temp9_1;\n                    z_3 = temp8_1 == temp9_1;\n                    rsi_4 = &rsi_4[1];\n                    rdi_5 = (rdi_5 + 1);\n                    rcx_4 = (rcx_4 - 1);\n                    if ((!z_3))\n                    {\n                        break;\n                    }\n                }\n                rax_2 = ((!z_3) && (!c_3));\n                rax_2 = (rax_2 - 0);\n                if (rax_2 != 0)\n                {\n                    sub_404f00(r13);\n                    __sanitizer::Report(dcgettext(nullptr, \"%s: binary operator expected\", 5), 0);\n                    /* no return */\n                }\n            }\n            if (rbx < data_60d2a0)\n            {\n                /* tailcall */\n                return sub_4028d0();\n            }\n        }\n    }\n    else\n    {\n        cond:4_1 = (rbx + 1) >= data_60d2a0;\n        data_60d2a4 = (rbx + 1);\n        if ((!cond:4_1))\n        {\n            rax_2 = (sub_4026f0() ^ 1);\n        }\n    }\n    if (((z_1 && (!cond:4_1)) || (((!z_1) && z_2) && z_2)))\n    {\n        return rax_2;\n    }\n    if (((z_1 && cond:4_1) || ((!z_1) && ((!z_2) || (z_2 && (!z_2))))))\n    {\n        sub_401c90();\n        /* no return */\n    }\n}\n\n"
        },
        {
            "funcName": "sub_402e30",
            "funcStartAddr": "0x402e30",
            "funcEndAddr": "0x4031c6",
            "decompiledFuncCode": "int64_t sub_402e30(int32_t arg1, int32_t arg2 @ rbx) __noreturn\n{\n    if (arg1 != 0)\n    {\n        int64_t rbp = data_60d2b8;\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        fputs_unlocked(dcgettext(nullptr, \"Usage: test EXPRESSION\\n  or:  t\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"Exit with the status determined \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nAn omitted EXPRESSION defaults\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\n  ( EXPRESSION )              \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\n  -n STRING            the len\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\n  INTEGER1 -eq INTEGER2   INTE\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\n  FILE1 -ef FILE2   FILE1 and \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\n  -b FILE     FILE exists and \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -f FILE     FILE exists and is\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -L FILE     FILE exists and is\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -S FILE     FILE exists and is\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nExcept for -h and -L, all FILE\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nNOTE: Binary -a and -o are inh\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nNOTE: [ honors the --help and \u2026\", 5), stdout);\n        __printf_chk(1, dcgettext(nullptr, \"\\nNOTE: your shell may have its \u2026\", 5), dcgettext(nullptr, \"test and/or [\", 5));\n        int64_t rcx_1;\n        int64_t rdx_2;\n        uint64_t r8_1;\n        ssize_t r9_1;\n        rcx_1 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n        void var_18;\n        char* rax_23 = setlocale(5, nullptr, rdx_2, rcx_1, r8_1, r9_1, var_18, arg2);\n        if ((rax_23 != 0 && strncmp(rax_23, &data_4090d4, 3) != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), \"[\");\n        }\n        __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"[\");\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), \"test invocation\", &data_40aeb6[0x1b]);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4031d0",
            "funcStartAddr": "0x4031d0",
            "funcEndAddr": "0x4031d8",
            "decompiledFuncCode": "int64_t sub_4031d0(int64_t arg1)\n{\n    data_60d2b0 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4031e0",
            "funcStartAddr": "0x4031e0",
            "funcEndAddr": "0x4031e8",
            "decompiledFuncCode": "int64_t sub_4031e0(char arg1)\n{\n    data_60d2a8 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4031f0",
            "funcStartAddr": "0x4031f0",
            "funcEndAddr": "0x40328e",
            "decompiledFuncCode": "void sub_4031f0(void* arg1)\n{\n    int32_t rax = sub_405d20(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_60d2a8 == 0 || (data_60d2a8 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_60d2b0;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_404d50(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_60d2a8 != 0) && *rax_1 == 0x20)) && sub_405d20(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_60d1f8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_403290",
            "funcStartAddr": "0x403290",
            "funcEndAddr": "0x4032d8",
            "decompiledFuncCode": "void* sub_403290(uint64_t arg1, void* arg2)\n{\n    void* rcx = (arg2 + 0x14);\n    *(arg2 + 0x14) = 0;\n    while (true)\n    {\n        rcx = (rcx - 1);\n        int64_t rax_2;\n        int64_t rdx_1;\n        rdx_1 = HIGHD((arg1 * -0x3333333333333333));\n        rax_2 = LOWD((arg1 * -0x3333333333333333));\n        uint64_t rdx_2 = (rdx_1 >> 3);\n        char rax_3 = (rdx_2 + (rdx_2 << 2));\n        *rcx = ((arg1 - (rax_3 + rax_3)) + 0x30);\n        if (arg1 <= 9)\n        {\n            break;\n        }\n        arg1 = rdx_2;\n    }\n    return rcx;\n}\n\n"
        },
        {
            "funcName": "sub_4032e0",
            "funcStartAddr": "0x4032e0",
            "funcEndAddr": "0x403379",
            "decompiledFuncCode": "char* sub_4032e0(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_40a100;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_60d2b8 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_403380",
            "funcStartAddr": "0x403380",
            "funcEndAddr": "0x403472",
            "decompiledFuncCode": "char* sub_403380(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_405de0();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_403461:\n                void* const rbx_1 = &data_40a104;\n                if (arg2 != 9)\n                {\n                    rbx_1 = &data_40a115;\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_403461;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_403461;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_403461;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_403461;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_403461;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_403461;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_403461;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_40a10d;\n            if (cond:2_1)\n            {\n                rbx = &data_40a10a;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_403461;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_403461;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_403461;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_403461;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_403461;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_40a111;\n            if (cond:1_1)\n            {\n                rbx = &data_40a106;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_403480",
            "funcStartAddr": "0x4016d5",
            "funcEndAddr": "0x4046a1",
            "decompiledFuncCode": "int64_t sub_403480(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    void* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = &data_40a115;\n    label_403518:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_40388c:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_4038d4;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_403480(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_4038eb;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_403a25;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_403675;\n                            }\n                            goto label_403960;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_403a25;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_403850;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_403850:\n                            if (var_c0 == 0)\n                            {\n                                goto label_40385b;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_4036b7:\n                            if (var_5c == 0)\n                            {\n                                goto label_4036c8;\n                            }\n                        label_403880:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_403888;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_403abb;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_403abb:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_403aca:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_40388c;\n                            }\n                            goto label_403850;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_403850;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_403850;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_403abb;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_403656;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_403656:\n                            if (var_5c == 0)\n                            {\n                                goto label_403675;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_403675;\n                            }\n                            goto label_403aca;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_40364d:\n                            if (r12_1 != 0)\n                            {\n                                goto label_40385b;\n                            }\n                            goto label_403656;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_403a80:\n                            rdx = r11_1 == 2;\n                        label_403675:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_40377c;\n                            }\n                            goto label_40367f;\n                        }\n                        case 0x27:\n                        {\n                            goto label_4037fd;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_4037cd;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_40382a;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_4045bd;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_403794;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_403629;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_403c20;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_403c20;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_404570:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_4038d4:\n                            rbx_1 = sub_403480(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_4038eb:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_403a25;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_403977;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_403a25;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_403940:\n                                r13 = 0;\n                                goto label_4036fb;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_4036c8:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_4036fb:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_403705;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_403705:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_40370d;\n                            }\n                            case 9:\n                            {\n                                goto label_4038f0;\n                            }\n                            case 0xa:\n                            {\n                                goto label_403868;\n                            }\n                            case 0xb:\n                            {\n                                goto label_403950;\n                            }\n                            case 0xc:\n                            {\n                                goto label_403930;\n                            }\n                            case 0xd:\n                            {\n                                goto label_403919;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_403c7a;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_403905;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_403c5a;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_403c42;\n                            }\n                            case 0x27:\n                            {\n                                goto label_4037fd;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_4037cd;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_40382a;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_403629;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_403c20:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_403a20:\n                            var_b8 = 0;\n                        label_403a25:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_403a74:\n                                if (rdx == 0)\n                                {\n                                    goto label_403a80;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_403f71:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_403794;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_40388c;\n                                }\n                                r13 = var_98;\n                                goto label_40370d;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_405c40(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_40388c;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_403f71;\n                            }\n                            goto label_403a74;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_403960:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_40388c;\n                                }\n                                var_b8 = 0;\n                            label_403977:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_4039c2;\n                                    }\n                                    rax_8 = r10;\n                                label_4039ba:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_4039c2:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_40377c;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_403a03;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_4039ba;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_40377c;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_403a20;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_403935;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_40386d;\n                            }\n                            case 9:\n                            {\n                            label_4038f0:\n                                rbp_3 = 0x74;\n                                goto label_40386d;\n                            }\n                            case 0xa:\n                            {\n                            label_403868:\n                                rbp_3 = 0x6e;\n                            label_40386d:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_403880;\n                                }\n                                goto label_4036c8;\n                            }\n                            case 0xb:\n                            {\n                            label_403950:\n                                rbp_3 = 0x76;\n                                goto label_403935;\n                            }\n                            case 0xc:\n                            {\n                            label_403930:\n                                rbp_3 = 0x66;\n                            label_403935:\n                                if (var_5c == 0)\n                                {\n                                    goto label_403940;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_403888:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_40388c;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_403919:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_403850;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_403c7a:\n                                rbp_3 = 0x20;\n                                goto label_403c42;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_403905:\n                                rdx = 0;\n                            label_40385b:\n                                r13 = 0;\n                                goto label_403675;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_403c5a:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_403675;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_40367f:\n                                rax_8 = 0;\n                                goto label_403681;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_403c42:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_403681;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_4037fd:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_403675;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_4045bd;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_40377c;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_4037cd:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_4045bd:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_40388c;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_40377c:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_4036b7;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_403794;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_403675;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_403d60:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_403675;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_403d60;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_403d60;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_403d60;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_403d60;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_404570;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_403a03:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_40377c;\n                                }\n                            label_403681:\n                                if (arg7 == 0)\n                                {\n                                    goto label_40377c;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_40377c;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_4036b7;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_40382a:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_403850;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_403794:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_40370d;\n                                }\n                            label_40370d:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_403716;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_403716:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_403629:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_40385b;\n                                }\n                                goto label_40364d;\n                            }\n                        }\n                    }\n                }\n            }\n        label_403d06:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = &data_40a115;\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_403518;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = &data_40a115;\n                goto label_403518;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_40a115;\n            goto label_403518;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40a104;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40a104;\n            }\n            goto label_403518;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_40a104;\n            goto label_403518;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_403518;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_403380(&data_40a117, r13);\n                arg9 = sub_403380(&data_40a115, r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_403518;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_403d06;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = &data_40a115;\n        goto label_403518;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4046b0",
            "funcStartAddr": "0x4016da",
            "funcEndAddr": "0x40484e",
            "decompiledFuncCode": "char* sub_4046b0(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_60d238;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_60d250 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_405a40();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x60d240)\n        {\n            int64_t rax_9 = sub_405850(0, rsi_1);\n            int128_t zmm0 = data_60d240;\n            rbx = rax_9;\n            data_60d238 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_405850(rbx, rsi_1);\n            data_60d238 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_60d250;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_60d250 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_403480(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        size_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x60d2c0)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_4057f0(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_403480(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_404850",
            "funcStartAddr": "0x404850",
            "funcEndAddr": "0x404884",
            "decompiledFuncCode": "int64_t sub_404850(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x60d3c0;\n    }\n    int64_t rax_1 = sub_4059f0(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_404890",
            "funcStartAddr": "0x404890",
            "funcEndAddr": "0x40489f",
            "decompiledFuncCode": "uint64_t sub_404890(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60d3c0;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4048a0",
            "funcStartAddr": "0x4048a0",
            "funcEndAddr": "0x4048af",
            "decompiledFuncCode": "void sub_4048a0(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60d3c0;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_4048b0",
            "funcStartAddr": "0x4048b0",
            "funcEndAddr": "0x4048e3",
            "decompiledFuncCode": "uint64_t sub_4048b0(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x60d3c0;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_4048f0",
            "funcStartAddr": "0x4048f0",
            "funcEndAddr": "0x404903",
            "decompiledFuncCode": "uint64_t sub_4048f0(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60d3c0;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404910",
            "funcStartAddr": "0x404910",
            "funcEndAddr": "0x40493b",
            "decompiledFuncCode": "void sub_404910(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60d3c0;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x60d3c0;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404940",
            "funcStartAddr": "0x404940",
            "funcEndAddr": "0x4049b2",
            "decompiledFuncCode": "int64_t sub_404940(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_60d3c0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_403480(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_4049c0",
            "funcStartAddr": "0x4049c0",
            "funcEndAddr": "0x404aa1",
            "decompiledFuncCode": "char* sub_4049c0(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_60d3c0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_403480(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_4057f0((rax_2 + 1));\n    sub_403480(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_404ab0",
            "funcStartAddr": "0x404ab0",
            "funcEndAddr": "0x404aba",
            "decompiledFuncCode": "int64_t sub_404ab0(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_4049c0(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_404ac0",
            "funcStartAddr": "0x404ac0",
            "funcEndAddr": "0x404b55",
            "decompiledFuncCode": "uint64_t sub_404ac0()\n{\n    uint64_t rax_2 = data_60d250;\n    int64_t r12 = data_60d238;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x60d2c0)\n    {\n        rax_2 = free(rdi_2);\n        *data_60d240 = 0x100;\n        *(data_60d240 + 8) = 0x60d2c0;\n    }\n    if (r12 != 0x60d240)\n    {\n        rax_2 = free(r12);\n        data_60d238 = 0x60d240;\n    }\n    data_60d250 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_404b60",
            "funcStartAddr": "0x404b60",
            "funcEndAddr": "0x404b71",
            "decompiledFuncCode": "int64_t sub_404b60(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4046b0(arg1, arg2, -1, &data_60d3c0);\n}\n\n"
        },
        {
            "funcName": "sub_404b80",
            "funcStartAddr": "0x404b80",
            "funcEndAddr": "0x404b8a",
            "decompiledFuncCode": "int64_t sub_404b80(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_4046b0(arg1, arg2, arg3, &data_60d3c0);\n}\n\n"
        },
        {
            "funcName": "sub_404b90",
            "funcStartAddr": "0x404b90",
            "funcEndAddr": "0x404ba6",
            "decompiledFuncCode": "int64_t sub_404b90(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_4046b0(0, arg1, -1, &data_60d3c0);\n}\n\n"
        },
        {
            "funcName": "sub_404bb0",
            "funcStartAddr": "0x404bb0",
            "funcEndAddr": "0x404bc2",
            "decompiledFuncCode": "int64_t sub_404bb0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4046b0(0, arg1, arg2, &data_60d3c0);\n}\n\n"
        },
        {
            "funcName": "sub_404bd0",
            "funcStartAddr": "0x4016df",
            "funcEndAddr": "0x404c38",
            "decompiledFuncCode": "char* sub_404bd0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_4046b0(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_404c40",
            "funcStartAddr": "0x4016e4",
            "funcEndAddr": "0x404ca4",
            "decompiledFuncCode": "char* sub_404c40(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_4046b0(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_404cb0",
            "funcStartAddr": "0x404cb0",
            "funcEndAddr": "0x404cbc",
            "decompiledFuncCode": "int64_t sub_404cb0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_404bd0(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_404cc0",
            "funcStartAddr": "0x404cc0",
            "funcEndAddr": "0x404ccf",
            "decompiledFuncCode": "int64_t sub_404cc0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_404c40(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_404cd0",
            "funcStartAddr": "0x404cd0",
            "funcEndAddr": "0x404d40",
            "decompiledFuncCode": "char* sub_404cd0(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_60d3f0;\n    int128_t var_48 = data_60d3c0;\n    int128_t var_38 = data_60d3d0;\n    int128_t var_28 = data_60d3e0;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_4046b0(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_404d40",
            "funcStartAddr": "0x404d40",
            "funcEndAddr": "0x404d4d",
            "decompiledFuncCode": "int64_t sub_404d40(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_404cd0(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_404d50",
            "funcStartAddr": "0x404d50",
            "funcEndAddr": "0x404d61",
            "decompiledFuncCode": "int64_t sub_404d50(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_404cd0(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_404d70",
            "funcStartAddr": "0x404d70",
            "funcEndAddr": "0x404d7a",
            "decompiledFuncCode": "int64_t sub_404d70(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_404cd0(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_404d80",
            "funcStartAddr": "0x4016e9",
            "funcEndAddr": "0x404dee",
            "decompiledFuncCode": "char* sub_404d80(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_4046b0(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_404df0",
            "funcStartAddr": "0x404df0",
            "funcEndAddr": "0x404e5c",
            "decompiledFuncCode": "char* sub_404df0(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_60d3c0;\n    int128_t var_38 = data_60d3d0;\n    int128_t var_28 = data_60d3e0;\n    int64_t var_18 = data_60d3f0;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_4046b0(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404eb0",
            "funcStartAddr": "0x404eb0",
            "funcEndAddr": "0x404eba",
            "decompiledFuncCode": "int64_t sub_404eb0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_4046b0(arg1, arg2, arg3, &data_60d200);\n}\n\n"
        },
        {
            "funcName": "sub_404ec0",
            "funcStartAddr": "0x404ec0",
            "funcEndAddr": "0x404ed2",
            "decompiledFuncCode": "int64_t sub_404ec0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4046b0(0, arg1, arg2, &data_60d200);\n}\n\n"
        },
        {
            "funcName": "sub_404ee0",
            "funcStartAddr": "0x404ee0",
            "funcEndAddr": "0x404ef1",
            "decompiledFuncCode": "int64_t sub_404ee0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4046b0(arg1, arg2, -1, &data_60d200);\n}\n\n"
        },
        {
            "funcName": "sub_404f00",
            "funcStartAddr": "0x404f00",
            "funcEndAddr": "0x404f16",
            "decompiledFuncCode": "int64_t sub_404f00(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_4046b0(0, arg1, -1, &data_60d200);\n}\n\n"
        },
        {
            "funcName": "sub_404f20",
            "funcStartAddr": "0x404f20",
            "funcEndAddr": "0x405171",
            "decompiledFuncCode": "uint64_t sub_404f20(char* arg1, char* arg2)\n{\n    uint32_t rcx = *arg1;\n    uint32_t rdx = *arg2;\n    uint64_t rax_2;\n    int64_t r8_1;\n    if (rcx != 0x2d)\n    {\n        if (rdx == 0x2d)\n        {\n            uint32_t rax_8;\n            do\n            {\n                arg2 = &arg2[1];\n                rax_8 = *arg2;\n            } while (rax_8 == 0x30);\n            if ((rax_8 - 0x30) <= 9)\n            {\n                return 1;\n            }\n            while (rcx == 0x30)\n            {\n                arg1 = &arg1[1];\n                rcx = *arg1;\n            }\n            int64_t rax_10;\n            rax_10 = (rcx - 0x30) <= 9;\n            return rax_10;\n        }\n        while (rcx == 0x30)\n        {\n            arg1 = &arg1[1];\n            rcx = *arg1;\n        }\n        while (rdx == 0x30)\n        {\n            arg2 = &arg2[1];\n            rdx = *arg2;\n        }\n        uint32_t rax_1 = rcx;\n        int32_t r8 = (rax_1 - 0x30);\n        if (rdx == rcx)\n        {\n            while (r8 <= 9)\n            {\n                arg1 = &arg1[1];\n                arg2 = &arg2[1];\n                rax_1 = *arg1;\n                rdx = *arg2;\n                r8 = (rax_1 - 0x30);\n                if (rax_1 != rdx)\n                {\n                    break;\n                }\n            }\n        }\n        if ((rdx != rcx || (rdx == rcx && r8 <= 9)))\n        {\n            rax_2 = (rax_1 - rdx);\n            if (r8 <= 9)\n            {\n                r8_1 = 0;\n                uint32_t rcx_1;\n                do\n                {\n                    rcx_1 = arg1[(r8_1 + 1)];\n                    r8_1 = (r8_1 + 1);\n                } while ((rcx_1 - 0x30) <= 9);\n                if ((rdx - 0x30) > 9)\n                {\n                    int64_t rax_15;\n                    rax_15 = r8_1 != 0;\n                    return rax_15;\n                }\n                goto label_404fae;\n            }\n        }\n        if ((rdx == rcx && r8 > 9))\n        {\n            rax_2 = (rax_1 - rdx);\n        }\n        r8_1 = 0;\n        if ((rdx - 0x30) > 9)\n        {\n            goto label_405153;\n        }\n    label_404fae:\n        int64_t rcx_3 = 0;\n        uint32_t rdx_2;\n        do\n        {\n            rdx_2 = arg2[(rcx_3 + 1)];\n            rcx_3 = (rcx_3 + 1);\n        } while ((rdx_2 - 0x30) <= 9);\n        bool c = r8_1 < rcx_3;\n        if (r8_1 != rcx_3)\n        {\n            return ((rax_2 - rax_2) | 1);\n        }\n    }\n    else\n    {\n        char rax_5;\n        do\n        {\n            arg1 = &arg1[1];\n            rax_5 = *arg1;\n        } while (rax_5 == 0x30);\n        uint32_t r8_2 = rax_5;\n        int32_t r9_1 = (r8_2 - 0x30);\n        if (rdx != 0x2d)\n        {\n            if (r9_1 <= 9)\n            {\n                return 0xffffffff;\n            }\n            while (rdx == 0x30)\n            {\n                arg2 = &arg2[1];\n                rdx = *arg2;\n            }\n            int32_t rax_6;\n            rax_6 = (rdx - 0x30) <= 9;\n            return (-rax_6);\n        }\n        char rdx_6;\n        do\n        {\n            arg2 = &arg2[1];\n            rdx_6 = *arg2;\n        } while (rdx_6 == 0x30);\n        if (rax_5 == rdx_6)\n        {\n            while (r9_1 <= 9)\n            {\n                arg1 = &arg1[1];\n                arg2 = &arg2[1];\n                r8_2 = *arg1;\n                rdx_6 = *arg2;\n                r9_1 = (r8_2 - 0x30);\n                if (r8_2 != rdx_6)\n                {\n                    break;\n                }\n            }\n        }\n        uint32_t rcx_5;\n        if ((rax_5 != rdx_6 || (rax_5 == rdx_6 && r9_1 <= 9)))\n        {\n            rcx_5 = rdx_6;\n            rax_2 = (rcx_5 - r8_2);\n            if (r9_1 <= 9)\n            {\n                r8_1 = 0;\n                uint32_t rdx_7;\n                do\n                {\n                    rdx_7 = arg1[(r8_1 + 1)];\n                    r8_1 = (r8_1 + 1);\n                } while ((rdx_7 - 0x30) <= 9);\n                if ((rcx_5 - 0x30) > 9)\n                {\n                    int32_t rax_16;\n                    rax_16 = r8_1 != 0;\n                    return (-rax_16);\n                }\n                goto label_4050ba;\n            }\n        }\n        if ((rax_5 == rdx_6 && r9_1 > 9))\n        {\n            rcx_5 = rdx_6;\n            rax_2 = (rcx_5 - r8_2);\n        }\n        r8_1 = 0;\n        if ((rcx_5 - 0x30) > 9)\n        {\n        label_405153:\n            return 0;\n        }\n    label_4050ba:\n        int64_t rcx_6 = 0;\n        uint32_t rdx_10;\n        do\n        {\n            rdx_10 = arg2[(rcx_6 + 1)];\n            rcx_6 = (rcx_6 + 1);\n        } while ((rdx_10 - 0x30) <= 9);\n        bool c_1 = r8_1 < rcx_6;\n        if (r8_1 != rcx_6)\n        {\n            return (((rax_2 - rax_2) & 2) - 1);\n        }\n    }\n    if (r8_1 != 0)\n    {\n        goto label_40511b;\n    }\n    rax_2 = 0;\nlabel_40511b:\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_405180",
            "funcStartAddr": "0x405180",
            "funcEndAddr": "0x405231",
            "decompiledFuncCode": "int64_t sub_405180(int32_t arg1, int32_t arg2, char* arg3, int32_t arg4, \n    char* arg5, int128_t* arg6)\n{\n    char* rax = sub_405bb0(arg5, arg6);\n    if (rax == 0)\n    {\n        error(0, *__errno_location(), dcgettext(nullptr, \"unable to display error message\", 5));\n        abort();\n        /* no return */\n    }\n    if (arg3 == 0)\n    {\n        error(arg1, arg2, \"%s\", rax);\n        /* tailcall */\n        return free(rax);\n    }\n    error_at_line(arg1, arg2, arg3, arg4, \"%s\", rax);\n    /* tailcall */\n    return free(rax);\n}\n\n"
        },
        {
            "funcName": "sub_405240",
            "funcStartAddr": "0x405240",
            "funcEndAddr": "0x40524f",
            "decompiledFuncCode": "int64_t sub_405240(int32_t arg1, int32_t arg2, char* arg3, int128_t* arg4)\n{\n    /* tailcall */\n    return sub_405180(arg1, arg2, nullptr, 0, arg3, arg4);\n}\n\n"
        },
        {
            "funcName": "sub_405250",
            "funcStartAddr": "0x4016ee",
            "funcEndAddr": "0x40562d",
            "decompiledFuncCode": "int64_t sub_405250(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_40ae8b, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_405630",
            "funcStartAddr": "0x405630",
            "funcEndAddr": "0x405650",
            "decompiledFuncCode": "int64_t sub_405630(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_405250(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_405650",
            "funcStartAddr": "0x405650",
            "funcEndAddr": "0x4056b0",
            "decompiledFuncCode": "int64_t sub_405650(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_405250(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_4056b0",
            "funcStartAddr": "0x4056b0",
            "funcEndAddr": "0x40576c",
            "decompiledFuncCode": "int64_t sub_4056b0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_405250(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_405770",
            "funcStartAddr": "0x405770",
            "funcEndAddr": "0x4057e4",
            "decompiledFuncCode": "int64_t sub_405770()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_4057f0",
            "funcStartAddr": "0x4057f0",
            "funcEndAddr": "0x40580a",
            "decompiledFuncCode": "int64_t sub_4057f0(size_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_405a40();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405850",
            "funcStartAddr": "0x405850",
            "funcEndAddr": "0x405886",
            "decompiledFuncCode": "int64_t sub_405850(int64_t arg1, size_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_405a40();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40599a",
            "funcStartAddr": "0x40599a",
            "funcEndAddr": "0x4059a0",
            "decompiledFuncCode": "int64_t sub_40599a() __noreturn\n{\n    sub_405a40();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4059a0",
            "funcStartAddr": "0x4059a0",
            "funcEndAddr": "0x4059b7",
            "decompiledFuncCode": "int64_t sub_4059a0(size_t arg1)\n{\n    /* tailcall */\n    return memset(sub_4057f0(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_4059c0",
            "funcStartAddr": "0x4059c0",
            "funcEndAddr": "0x4059ee",
            "decompiledFuncCode": "int64_t sub_4059c0(size_t arg1, size_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_405a40();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4059f0",
            "funcStartAddr": "0x4059f0",
            "funcEndAddr": "0x405a18",
            "decompiledFuncCode": "int64_t sub_4059f0(int64_t arg1, size_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_4057f0(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405a20",
            "funcStartAddr": "0x405a20",
            "funcEndAddr": "0x405a33",
            "decompiledFuncCode": "int64_t sub_405a20(char* arg1)\n{\n    /* tailcall */\n    return sub_4059f0(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_405a40",
            "funcStartAddr": "0x405a40",
            "funcEndAddr": "0x405a71",
            "decompiledFuncCode": "int64_t sub_405a40() __noreturn\n{\n    error(data_60d1f8, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_405a80",
            "funcStartAddr": "0x405a80",
            "funcEndAddr": "0x405ba7",
            "decompiledFuncCode": "char* sub_405a80(int64_t arg1, int128_t* arg2)\n{\n    int128_t var_50 = *arg2;\n    int64_t r15 = arg2[1];\n    int64_t var_40 = r15;\n    int64_t rbx;\n    char* rbx_1;\n    char* rbp_1;\n    if (arg1 == 0)\n    {\n        char* rax_10 = sub_4057f0(1);\n        rbx_1 = rax_10;\n        rbp_1 = rax_10;\n    }\n    else\n    {\n        int64_t r13_1 = arg1;\n        int64_t rbp = arg1;\n        rbx = 0;\n        int64_t temp1_1;\n        do\n        {\n            int32_t rax_3 = var_50;\n            int64_t* rdx_2;\n            if (rax_3 <= 0x2f)\n            {\n                var_50 = (rax_3 + 8);\n                rdx_2 = (rax_3 + r15);\n            }\n            else\n            {\n                rdx_2 = *var_50[8];\n                *var_50[8] = &rdx_2[1];\n            }\n            uint64_t rax_2 = strlen(*rdx_2);\n            int64_t temp0_1 = rbx;\n            rbx = (rbx + rax_2);\n            if ((temp0_1 + rax_2) < temp0_1)\n            {\n                rbx = -1;\n            }\n            temp1_1 = rbp;\n            rbp = (rbp - 1);\n        } while (temp1_1 != 1);\n        if (rbx > 0x7fffffff)\n        {\n            rbp_1 = nullptr;\n            *__errno_location() = 0x4b;\n        }\n        else\n        {\n            char* rax_5 = sub_4057f0((rbx + 1));\n            rbp_1 = rax_5;\n            rbx_1 = rax_5;\n            int64_t temp2_1;\n            do\n            {\n                int32_t rax_8 = *arg2;\n                int64_t* rdx_4;\n                if (rax_8 <= 0x2f)\n                {\n                    rdx_4 = (rax_8 + arg2[1]);\n                    *arg2 = (rax_8 + 8);\n                }\n                else\n                {\n                    rdx_4 = *(arg2 + 8);\n                    *(arg2 + 8) = &rdx_4[1];\n                }\n                char* r15_1 = *rdx_4;\n                uint64_t rax_7 = strlen(r15_1);\n                memcpy(rbx_1, r15_1, rax_7);\n                rbx_1 = &rbx_1[rax_7];\n                temp2_1 = r13_1;\n                r13_1 = (r13_1 - 1);\n            } while (temp2_1 != 1);\n        }\n    }\n    if ((arg1 == 0 || (arg1 != 0 && rbx <= 0x7fffffff)))\n    {\n        *rbx_1 = 0;\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_405bb0",
            "funcStartAddr": "0x405bb0",
            "funcEndAddr": "0x405c3a",
            "decompiledFuncCode": "char* sub_405bb0(char* arg1, int128_t* arg2)\n{\n    char rax = *arg1;\n    if (rax == 0)\n    {\n        return sub_405a80(0, arg2);\n    }\n    if ((rax == 0x25 && arg1[1] == 0x73))\n    {\n        int64_t rax_1 = 0;\n        do\n        {\n            rax_1 = (rax_1 + 1);\n            char rcx_1 = arg1[(rax_1 << 1)];\n            if (rcx_1 == 0)\n            {\n                return sub_405a80(rax_1, arg2);\n            }\n            if (rcx_1 != 0x25)\n            {\n                break;\n            }\n        } while (arg1[((rax_1 << 1) + 1)] == 0x73);\n    }\n    int64_t var_10;\n    if (sub_405cc0(&var_10, arg1, arg2) >= 0)\n    {\n        return var_10;\n    }\n    if (*__errno_location() == 0xc)\n    {\n        sub_405a40();\n        /* no return */\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_405c40",
            "funcStartAddr": "0x405c40",
            "funcEndAddr": "0x405cba",
            "decompiledFuncCode": "uint64_t sub_405c40(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_40aeb6[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_405c6a;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_405c6a:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_405d80() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_405cc0",
            "funcStartAddr": "0x405cc0",
            "funcEndAddr": "0x405d19",
            "decompiledFuncCode": "uint64_t sub_405cc0(int64_t* arg1, char* arg2, int64_t arg3)\n{\n    int64_t var_10;\n    int64_t rax;\n    uint16_t x87control;\n    int80_t st0;\n    st0 = sub_406470(nullptr, &var_10, arg2, arg3, x87control);\n    uint64_t rax_1;\n    if (rax == 0)\n    {\n        rax_1 = 0xffffffff;\n    }\n    else\n    {\n        int64_t rdx_1 = var_10;\n        if (rdx_1 > 0x7fffffff)\n        {\n            free(rax);\n            *__errno_location() = 0x4b;\n            rax_1 = 0xffffffff;\n        }\n        else\n        {\n            *arg1 = rax;\n            rax_1 = rdx_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_405d20",
            "funcStartAddr": "0x405d20",
            "funcEndAddr": "0x405d7d",
            "decompiledFuncCode": "uint64_t sub_405d20(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_406350(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_405d80",
            "funcStartAddr": "0x405d80",
            "funcEndAddr": "0x405dde",
            "decompiledFuncCode": "int64_t sub_405d80()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_40b220;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            void* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_405de0",
            "funcStartAddr": "0x405de0",
            "funcEndAddr": "0x406342",
            "decompiledFuncCode": "char* sub_405de0()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_60d3f8;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_40aeb6[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        size_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            size_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_405edc;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_405f26;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_405edc:\n            r15 = &data_40aeb6[0x1b];\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_405f26:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, \"r\");\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_405fdc:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_40616b;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_406018:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_406018;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_406052:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_406052;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_40aeb6[0x1b];\n                                    free(rdi_26);\n                                    sub_406350(rax_12);\n                                    goto label_405f67;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_40622b:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_40622b;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_406279:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_406279;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_405fdc;\n                        }\n                        break;\n                    }\n                label_40616b:\n                    sub_406350(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_40aeb6[0x1b];\n            }\n        label_405f67:\n            free(rbp_3);\n        }\n        data_60d3f8 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_406350",
            "funcStartAddr": "0x406350",
            "funcEndAddr": "0x4063cb",
            "decompiledFuncCode": "int64_t sub_406350(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_4063d0(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_4063d0",
            "funcStartAddr": "0x4063d0",
            "funcEndAddr": "0x406410",
            "decompiledFuncCode": "int64_t sub_4063d0(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_406410(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_406410",
            "funcStartAddr": "0x406410",
            "funcEndAddr": "0x406467",
            "decompiledFuncCode": "off64_t sub_406410(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_406470",
            "funcStartAddr": "0x4016f3",
            "funcEndAddr": "0x407f89",
            "decompiledFuncCode": "void sub_406470(char* arg1, uint64_t* arg2, char* arg3, int64_t arg4, \n    uint16_t arg5 @ x87control)\n{\n    int64_t rbp;\n    int64_t __saved_rbp = rbp;\n    int64_t r15;\n    int64_t __saved_r15 = r15;\n    int64_t r14;\n    int64_t __saved_r14 = r14;\n    int64_t r13;\n    int64_t __saved_r13 = r13;\n    int64_t r12;\n    int64_t __saved_r12 = r12;\n    int64_t rbx;\n    int64_t __saved_rbx = rbx;\n    void var_6f8;\n    void* rsp_1 = &var_6f8;\n    void var_678;\n    int64_t var_588;\n    if (sub_4081b0(arg3, &var_588, &var_678) >= 0)\n    {\n        char* var_670;\n        void var_668;\n        int64_t* var_580;\n        void var_568;\n        if (sub_407f90(arg4, &var_678) >= 0)\n        {\n            int64_t var_578;\n            int64_t rax_3 = (var_578 + 7);\n            if (rax_3 <= 6)\n            {\n                rax_3 = -1;\n            }\n            int64_t var_570;\n            int64_t rax_4 = (rax_3 + var_570);\n            char* var_6a8;\n            int64_t rcx;\n            char* r8_1;\n            if ((rax_3 + var_570) >= rax_3)\n            {\n                size_t rdi_3 = (rax_4 + 6);\n                if (rax_4 >= -6)\n                {\n                    goto label_406b95;\n                }\n                char* var_6e0_1;\n                char* var_6b0_1;\n                int32_t* rdx_1;\n                if (rdi_3 <= 0xf9f)\n                {\n                    var_6e0_1 = nullptr;\n                    rsp_1 = (&var_6f8 - ((rax_4 + 0x1d) & 0xfffffffffffffff0));\n                    var_6b0_1 = ((rsp_1 + 0xf) & 0xfffffffffffffff0);\n                }\n                else\n                {\n                    if (rdi_3 == -1)\n                    {\n                        goto label_406b95;\n                    }\n                    char* rax_5;\n                    rax_5 = malloc(rdi_3);\n                    var_6b0_1 = rax_5;\n                    if (rax_5 == 0)\n                    {\n                        goto label_406b95;\n                    }\n                    var_6e0_1 = rax_5;\n                }\n                size_t r12_1 = 0;\n                if (arg1 != 0)\n                {\n                    r12_1 = *arg2;\n                }\n                int64_t* r14_1 = var_580;\n                r8_1 = arg3;\n                char* rbx_2 = arg1;\n                int64_t var_6c0_1 = 0;\n                uint64_t r15_2 = 0;\n                rcx = *r14_1;\n                void* r13_1;\n                if (rcx != r8_1)\n                {\n                    while (true)\n                    {\n                        void* rcx_1 = (rcx - r8_1);\n                        void* rax_8 = (r15_2 + rcx_1);\n                        r13_1 = rax_8;\n                        int32_t var_698;\n                        char* r15_7;\n                        if ((r15_2 + rcx_1) < r15_2)\n                        {\n                            if (r12_1 != -1)\n                            {\n                            label_406a65:\n                                r15_7 = rbx_2;\n                                var_6a8 = __errno_location();\n                            }\n                            else\n                            {\n                                r13_1 = ffffffffffffffff;\n                            label_4066e3:\n                                memcpy(&rbx_2[r15_2], r8_1, rcx_1);\n                            label_4066ef:\n                                if (var_588 == var_6c0_1)\n                                {\n                                    uint64_t r15_11 = r13_1;\n                                    size_t r14_3 = (r13_1 + 1);\n                                    if (r13_1 >= -1)\n                                    {\n                                        if (r12_1 != -1)\n                                        {\n                                            goto label_406a65;\n                                        }\n                                    }\n                                    else if (r12_1 < r14_3)\n                                    {\n                                        bool cond:2_1 = r12_1 < 0;\n                                        if ((r12_1 == 0 && r14_3 <= 0xc))\n                                        {\n                                            r12_1 = 0xc;\n                                        label_407845:\n                                            r13_1 = rbx_2 == arg1;\n                                            if ((rbx_2 == 0 || (rbx_2 != 0 && r13_1 != 0)))\n                                            {\n                                                char* rax_150 = malloc(r12_1);\n                                                if (rax_150 == 0)\n                                                {\n                                                    goto label_406a65;\n                                                }\n                                                if ((r15_11 == 0 || (r15_11 != 0 && r13_1 == 0)))\n                                                {\n                                                    rbx_2 = rax_150;\n                                                }\n                                                if ((r15_11 != 0 && r13_1 != 0))\n                                                {\n                                                    rbx_2 = memcpy(rax_150, rbx_2, r15_11);\n                                                }\n                                            }\n                                            if ((rbx_2 != 0 && r13_1 == 0))\n                                            {\n                                                char* rax_126 = realloc(rbx_2, r12_1);\n                                                if (rax_126 == 0)\n                                                {\n                                                    goto label_406c7a;\n                                                }\n                                                rbx_2 = rax_126;\n                                            }\n                                        }\n                                        if (r12_1 != 0)\n                                        {\n                                            if (cond:2_1)\n                                            {\n                                                goto label_406a65;\n                                            }\n                                            r12_1 = (r12_1 + r12_1);\n                                            if (r12_1 >= r14_3)\n                                            {\n                                                goto label_407845;\n                                            }\n                                        }\n                                        if (((r12_1 == 0 && r14_3 > 0xc) || r12_1 != 0))\n                                        {\n                                            if (r14_3 == -1)\n                                            {\n                                                goto label_406a65;\n                                            }\n                                            r12_1 = r14_3;\n                                            goto label_407845;\n                                        }\n                                    }\n                                    rbx_2[r15_11] = 0;\n                                    if ((r12_1 > r14_3 && rbx_2 != arg1))\n                                    {\n                                        realloc(rbx_2, r14_3);\n                                    }\n                                    if (var_6e0_1 != 0)\n                                    {\n                                        free(var_6e0_1);\n                                    }\n                                    if (var_580 != &var_568)\n                                    {\n                                        free(var_580);\n                                    }\n                                    if (var_670 != &var_668)\n                                    {\n                                        free(var_670);\n                                    }\n                                    *arg2 = r15_11;\n                                    goto label_406af1;\n                                }\n                                char r15_3 = r14_1[9];\n                                int64_t rax_17 = r14_1[0xa];\n                                if (r15_3 == 0x25)\n                                {\n                                    if (rax_17 != -1)\n                                    {\n                                    label_40719c:\n                                        abort();\n                                        /* no return */\n                                    }\n                                    uint64_t rax_47 = (r13_1 + 1);\n                                    r15_2 = rax_47;\n                                    if (r13_1 < -1)\n                                    {\n                                        if (r12_1 >= rax_47)\n                                        {\n                                            goto label_406b62;\n                                        }\n                                        bool cond:4_1 = r12_1 < 0;\n                                        if (r12_1 != 0)\n                                        {\n                                            if (cond:4_1)\n                                            {\n                                                goto label_406a65;\n                                            }\n                                            r12_1 = (r12_1 + r12_1);\n                                            if (r12_1 >= rax_47)\n                                            {\n                                                goto label_406b37;\n                                            }\n                                        }\n                                        else if (rax_47 <= 0xc)\n                                        {\n                                            r12_1 = 0xc;\n                                        label_406b37:\n                                            rdx_1 = rbx_2 == arg1;\n                                            if (rbx_2 == 0)\n                                            {\n                                            label_407353:\n                                                var_698 = rdx_1;\n                                                char* rax_107 = malloc(r12_1);\n                                                rdx_1 = var_698;\n                                                if (rax_107 == 0)\n                                                {\n                                                    goto label_406a65;\n                                                }\n                                                if ((r13_1 == 0 || (r13_1 != 0 && rdx_1 == 0)))\n                                                {\n                                                    rbx_2 = rax_107;\n                                                }\n                                                if ((r13_1 != 0 && rdx_1 != 0))\n                                                {\n                                                    char* rax_108;\n                                                    rax_108 = memcpy(rax_107, rbx_2, r13_1);\n                                                    rbx_2 = rax_108;\n                                                }\n                                                goto label_406b62;\n                                            }\n                                            if (rdx_1 != 0)\n                                            {\n                                                goto label_407353;\n                                            }\n                                            char* rax_48;\n                                            rax_48 = realloc(rbx_2, r12_1);\n                                            if (rax_48 == 0)\n                                            {\n                                                goto label_406c7a;\n                                            }\n                                            rbx_2 = rax_48;\n                                            goto label_406b62;\n                                        }\n                                        if (rax_47 == -1)\n                                        {\n                                            goto label_406a65;\n                                        }\n                                        r12_1 = rax_47;\n                                        goto label_406b37;\n                                    }\n                                    if (r12_1 != -1)\n                                    {\n                                        goto label_406a65;\n                                    }\n                                    r15_2 = -1;\n                                label_406b62:\n                                    *(rbx_2 + r13_1) = 0x25;\n                                label_406b67:\n                                    r8_1 = r14_1[1];\n                                    r14_1 = &r14_1[0xb];\n                                    rcx = *r14_1;\n                                    var_6c0_1 = (var_6c0_1 + 1);\n                                    if (rcx == r8_1)\n                                    {\n                                        break;\n                                    }\n                                    continue;\n                                }\n                                else\n                                {\n                                    if (rax_17 == -1)\n                                    {\n                                        goto label_40719c;\n                                    }\n                                    rdx_1 = &var_670[(rax_17 << 5)];\n                                    int32_t rax_19 = *rdx_1;\n                                    if (r15_3 == 0x6e)\n                                    {\n                                        uint64_t rax_50 = (rax_19 - 0x12);\n                                        if (rax_50 > 4)\n                                        {\n                                        label_4016f3:\n                                            abort();\n                                            /* no return */\n                                        }\n                                        switch (rax_50)\n                                        {\n                                            case 0:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                            case 1:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                            case 2:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                            case 3:\n                                            case 4:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                        }\n                                        goto label_406b67;\n                                    }\n                                    char rax_21 = (r15_3 & 0xdf);\n                                    int64_t var_6c8;\n                                    char* var_6b8;\n                                    int16_t var_680;\n                                    if (((rax_21 - 0x45) > 2 && rax_21 != 0x41))\n                                    {\n                                    label_406777:\n                                        char rax_22 = r14_1[2];\n                                        void* r15_4 = &var_6b0_1[1];\n                                        *var_6b0_1 = 0x25;\n                                        if ((rax_22 & 1) != 0)\n                                        {\n                                            var_6b0_1[1] = 0x27;\n                                            r15_4 = &var_6b0_1[2];\n                                        }\n                                        if ((rax_22 & 2) != 0)\n                                        {\n                                            *r15_4 = 0x2d;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 4) != 0)\n                                        {\n                                            *r15_4 = 0x2b;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 8) != 0)\n                                        {\n                                            *r15_4 = 0x20;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 0x10) != 0)\n                                        {\n                                            *r15_4 = 0x23;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 0x40) != 0)\n                                        {\n                                            *r15_4 = 0x49;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 0x20) != 0)\n                                        {\n                                            *r15_4 = 0x30;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        int64_t rsi_6 = r14_1[3];\n                                        int64_t rdx_5 = r14_1[4];\n                                        if (rsi_6 != rdx_5)\n                                        {\n                                            uint64_t rcx_4 = (rdx_5 - rsi_6);\n                                            memcpy(r15_4, rsi_6, rcx_4);\n                                            r15_4 = (r15_4 + rcx_4);\n                                        }\n                                        int64_t rsi_7 = r14_1[6];\n                                        uint64_t rdx_7 = r14_1[7];\n                                        if (rsi_7 != rdx_7)\n                                        {\n                                            uint64_t rcx_7 = (rdx_7 - rsi_7);\n                                            memcpy(r15_4, rsi_7, rcx_7);\n                                            r15_4 = (r15_4 + rcx_7);\n                                        }\n                                        if (rax_19 <= 0x10)\n                                        {\n                                            int32_t rax_23 = (1 << rax_19);\n                                            if ((rax_23 & 0x14180) == 0)\n                                            {\n                                                if ((*rax_23[1] & 0x10) != 0)\n                                                {\n                                                    *r15_4 = 0x4c;\n                                                    r15_4 = (r15_4 + 1);\n                                                }\n                                                if (((*rax_23[1] & 0x10) == 0 && (*rax_23[1] & 6) != 0))\n                                                {\n                                                    *r15_4 = 0x6c;\n                                                    r15_4 = (r15_4 + 1);\n                                                }\n                                            }\n                                            if (((((rax_23 & 0x14180) == 0 && (*rax_23[1] & 0x10) == 0) && (*rax_23[1] & 6) != 0) || (rax_23 & 0x14180) != 0))\n                                            {\n                                                *r15_4 = 0x6c;\n                                                r15_4 = (r15_4 + 1);\n                                            }\n                                        }\n                                        char rax_24 = r14_1[9];\n                                        *(r15_4 + 1) = 0;\n                                        *r15_4 = rax_24;\n                                        int64_t rax_25 = r14_1[5];\n                                        if (rax_25 != -1)\n                                        {\n                                            void* rax_27 = &var_670[(rax_25 << 5)];\n                                            if (*rax_27 != 5)\n                                            {\n                                                goto label_40719c;\n                                            }\n                                            var_6b8 = 1;\n                                            var_680 = *(rax_27 + 0x10);\n                                            goto label_4068ce;\n                                        }\n                                        var_6b8 = 0;\n                                    label_4068ce:\n                                        int64_t rax_29 = r14_1[8];\n                                        if (rax_29 == -1)\n                                        {\n                                            goto label_406906;\n                                        }\n                                        void* r8_3 = &var_670[(rax_29 << 5)];\n                                        if (*r8_3 != 5)\n                                        {\n                                            goto label_40719c;\n                                        }\n                                        uint64_t rax_31 = var_6b8;\n                                        *(&var_680 + (rax_31 << 2)) = *(r8_3 + 0x10);\n                                        var_6b8 = (rax_31 + 1);\n                                    label_406906:\n                                        void* rax_34 = (r13_1 + 2);\n                                        char* r11_1;\n                                        if (r13_1 < -2)\n                                        {\n                                            if (r12_1 >= rax_34)\n                                            {\n                                                goto label_407348;\n                                            }\n                                            bool cond:22_1 = r12_1 < 0;\n                                            if (r12_1 != 0)\n                                            {\n                                                if (cond:22_1)\n                                                {\n                                                    goto label_406a65;\n                                                }\n                                                r12_1 = (r12_1 + r12_1);\n                                                if (r12_1 >= rax_34)\n                                                {\n                                                    goto label_406939;\n                                                }\n                                            }\n                                            else if (rax_34 <= 0xc)\n                                            {\n                                                r12_1 = 0xc;\n                                            label_406939:\n                                                rdx_7 = rbx_2 == arg1;\n                                                if (rbx_2 == 0)\n                                                {\n                                                label_4072f3:\n                                                    var_6a8 = rdx_7;\n                                                    char* rax_105 = malloc(r12_1);\n                                                    char rdx_17 = var_6a8;\n                                                    r11_1 = rax_105;\n                                                    if (rax_105 == 0)\n                                                    {\n                                                        goto label_406a65;\n                                                    }\n                                                    if ((r13_1 != 0 && rdx_17 != 0))\n                                                    {\n                                                        r11_1 = memcpy(rax_105, rbx_2, r13_1);\n                                                    }\n                                                    goto label_406964;\n                                                }\n                                                if (rdx_7 != 0)\n                                                {\n                                                    goto label_4072f3;\n                                                }\n                                                char* rax_35 = realloc(rbx_2, r12_1);\n                                                r11_1 = rax_35;\n                                                if (rax_35 == 0)\n                                                {\n                                                    goto label_406a65;\n                                                }\n                                                goto label_406964;\n                                            }\n                                            if (rax_34 == -1)\n                                            {\n                                                goto label_406a65;\n                                            }\n                                            r12_1 = rax_34;\n                                            goto label_406939;\n                                        }\n                                        if (r12_1 != -1)\n                                        {\n                                            goto label_406a65;\n                                        }\n                                    label_407348:\n                                        r11_1 = rbx_2;\n                                    label_406964:\n                                        *(r11_1 + r13_1) = 0;\n                                        int32_t* rax_36 = __errno_location();\n                                        char* r11_2 = r11_1;\n                                        var_6c8 = r15_4;\n                                        var_6a8 = rax_36;\n                                        int32_t rax_37 = *rax_36;\n                                    label_4069a2:\n                                        void* rbx_3 = 0x7fffffff;\n                                        int32_t var_684 = 0xffffffff;\n                                        void* r15_6 = (r12_1 - r13_1);\n                                        *var_6a8 = 0;\n                                        uint64_t rax_39 = rax_19;\n                                        if (r15_6 <= 0x7fffffff)\n                                        {\n                                            rbx_3 = r15_6;\n                                        }\n                                        if (rax_39 > 0x11)\n                                        {\n                                            goto label_4016f3;\n                                        }\n                                        char* var_6d0_1;\n                                        int32_t var_67c;\n                                        int32_t rax_56;\n                                        int32_t rax_58;\n                                        void* rsp_3;\n                                        void* rsp_6;\n                                        void* rsp_10;\n                                        void* rsp_11;\n                                        int64_t rdi_18;\n                                        int32_t* r9_2;\n                                        uint64_t r9_3;\n                                        switch (rax_39)\n                                        {\n                                            case 0:\n                                            {\n                                                goto label_4016f3;\n                                            }\n                                            case 1:\n                                            {\n                                                r9_3 = var_670[((r14_1[0xa] << 5) + 0x10)];\n                                                goto label_406deb;\n                                            }\n                                            case 2:\n                                            {\n                                                r9_3 = var_670[((r14_1[0xa] << 5) + 0x10)];\n                                                goto label_406deb;\n                                            }\n                                            case 3:\n                                            {\n                                                r9_3 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                goto label_406deb;\n                                            }\n                                            case 4:\n                                            {\n                                                r9_3 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                goto label_406deb;\n                                            }\n                                            case 5:\n                                            case 6:\n                                            case 0xd:\n                                            case 0xe:\n                                            {\n                                                r9_3 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                            label_406deb:\n                                                int32_t rax_66 = var_6b8;\n                                                rdi_18 = (r11_2 + r13_1);\n                                                var_6d0_1 = r11_2;\n                                                if (rax_66 == 1)\n                                                {\n                                                    *(rsp_1 - 8) = &var_684;\n                                                    *(rsp_1 - 0x10) = r9_3;\n                                                    rsp_6 = (rsp_1 - 0x10);\n                                                    goto label_407272;\n                                                }\n                                                if (rax_66 == 2)\n                                                {\n                                                    *(rsp_1 - 0x10) = &var_684;\n                                                    *(rsp_1 - 0x18) = r9_3;\n                                                    rsp_10 = (rsp_1 - 0x18);\n                                                    goto label_40722c;\n                                                }\n                                                *(rsp_1 - 0x10) = &var_684;\n                                                rsp_6 = (rsp_1 - 0x10);\n                                                goto label_406e32;\n                                            }\n                                            case 7:\n                                            case 8:\n                                            case 9:\n                                            case 0xa:\n                                            case 0xf:\n                                            case 0x10:\n                                            case 0x11:\n                                            {\n                                                rdi_18 = (r11_2 + r13_1);\n                                                r9_2 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                rax_56 = var_6b8;\n                                                var_6d0_1 = r11_2;\n                                                break;\n                                            }\n                                            case 0xb:\n                                            {\n                                                int512_t zmm0;\n                                                zmm0 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                int32_t rax_83 = var_6b8;\n                                                void* rsp_17;\n                                                if (rax_83 == 1)\n                                                {\n                                                    *(rsp_1 - 0x10) = &var_684;\n                                                    rsp_17 = (rsp_1 - 0x10);\n                                                }\n                                                if (rax_83 == 2)\n                                                {\n                                                    *(rsp_1 - 8) = &var_684;\n                                                    *(rsp_1 - 0x10) = var_67c;\n                                                    rsp_17 = (rsp_1 - 0x10);\n                                                }\n                                                if ((rax_83 == 1 || rax_83 == 2))\n                                                {\n                                                    rax_58 = __snprintf_chk();\n                                                    *rsp_17;\n                                                    *(rsp_17 + 8);\n                                                    rsp_1 = (rsp_17 + 0x10);\n                                                }\n                                                if ((rax_83 != 1 && rax_83 != 2))\n                                                {\n                                                    rax_58 = __snprintf_chk();\n                                                }\n                                                goto label_406d00;\n                                            }\n                                            case 0xc:\n                                            {\n                                                rdi_18 = (r11_2 + r13_1);\n                                                var_6d0_1 = r11_2;\n                                                int80_t x87_r7_2 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                int32_t rax_76 = var_6b8;\n                                                if (rax_76 != 1)\n                                                {\n                                                    if (rax_76 == 2)\n                                                    {\n                                                        *(rsp_1 - 0x10) = &var_684;\n                                                        *(rsp_1 - 0x20) = x87_r7_2;\n                                                        *(rsp_1 - 0x30) = var_67c;\n                                                        rax_58 = __snprintf_chk();\n                                                        r11_2 = var_6d0_1;\n                                                        goto label_406d00;\n                                                    }\n                                                    rsp_3 = (rsp_1 - 0x10);\n                                                    r9_2 = &var_684;\n                                                    *rsp_3 = x87_r7_2;\n                                                    goto label_406cf2;\n                                                }\n                                                *(rsp_1 - 0x10) = &var_684;\n                                                rsp_11 = (rsp_1 - 0x20);\n                                                *rsp_11 = x87_r7_2;\n                                            label_40724c:\n                                                rax_58 = __snprintf_chk(rdi_18, rbx_3, 1, -1, var_6b0_1, var_680);\n                                                rsp_1 = (rsp_11 + 0x20);\n                                                r11_2 = var_6d0_1;\n                                            label_406d00:\n                                                rdx_1 = var_684;\n                                                if (rdx_1 >= 0)\n                                                {\n                                                    goto label_406d0e;\n                                                }\n                                                break;\n                                            }\n                                        }\n                                        if (((((((rax_39 == 7 || rax_39 == 8) || rax_39 == 9) || rax_39 == 0xa) || rax_39 == 0xf) || rax_39 == 0x10) || rax_39 == 0x11))\n                                        {\n                                            if (rax_56 != 1)\n                                            {\n                                                if (rax_56 == 2)\n                                                {\n                                                    *(rsp_1 - 0x10) = &var_684;\n                                                    *(rsp_1 - 0x18) = r9_2;\n                                                    rsp_10 = (rsp_1 - 0x18);\n                                                label_40722c:\n                                                    *(rsp_10 - 8) = var_67c;\n                                                    rsp_11 = (rsp_10 - 8);\n                                                    goto label_40724c;\n                                                }\n                                                *(rsp_1 - 0x10) = &var_684;\n                                                rsp_3 = (rsp_1 - 0x10);\n                                            label_406cf2:\n                                                rax_58 = __snprintf_chk(rdi_18, rbx_3, 1, -1, var_6b0_1, r9_2);\n                                                r11_2 = var_6d0_1;\n                                                *rsp_3;\n                                                *(rsp_3 + 8);\n                                                rsp_1 = (rsp_3 + 0x10);\n                                                goto label_406d00;\n                                            }\n                                            *(rsp_1 - 8) = &var_684;\n                                            *(rsp_1 - 0x10) = r9_2;\n                                            rsp_6 = (rsp_1 - 0x10);\n                                        label_407272:\n                                            r9_3 = var_680;\n                                        label_406e32:\n                                            rax_58 = __snprintf_chk(rdi_18, rbx_3, 1, -1, var_6b0_1, r9_3);\n                                            rdx_1 = var_684;\n                                            *(rsp_6 + 8);\n                                            rsp_1 = (rsp_6 + 0x10);\n                                            r11_2 = var_6d0_1;\n                                            if (rdx_1 >= 0)\n                                            {\n                                            label_406d0e:\n                                                int64_t rcx_16 = rdx_1;\n                                                if ((rcx_16 < rbx_3 && *(&r11_2[rcx_16] + r13_1) != 0))\n                                                {\n                                                    goto label_40719c;\n                                                }\n                                                if (rdx_1 < rax_58)\n                                                {\n                                                label_406d28:\n                                                    var_684 = rax_58;\n                                                    rdx_1 = rax_58;\n                                                }\n                                                if ((rdx_1 + 1) < rbx_3)\n                                                {\n                                                    rbx_2 = r11_2;\n                                                    r15_2 = (rdx_1 + r13_1);\n                                                    *var_6a8 = rax_37;\n                                                    goto label_406b67;\n                                                }\n                                                if (r15_6 > 0x7ffffffe)\n                                                {\n                                                    if ((r11_2 != arg1 && r11_2 != 0))\n                                                    {\n                                                        free(r11_2);\n                                                    }\n                                                    if (var_6e0_1 != 0)\n                                                    {\n                                                        free(var_6e0_1);\n                                                    }\n                                                    if (var_580 != &var_568)\n                                                    {\n                                                        free(var_580);\n                                                    }\n                                                    if (var_670 != &var_668)\n                                                    {\n                                                        free(var_670);\n                                                    }\n                                                    *var_6a8 = 0x4b;\n                                                    break;\n                                                }\n                                                uint64_t rax_60 = (rdx_1 + 2);\n                                                void* rax_61 = (rax_60 + r13_1);\n                                                int64_t rcx_18;\n                                                rcx_18 = (rax_60 + r13_1) < rax_60;\n                                                if (r12_1 >= 0)\n                                                {\n                                                    void* rdx_13 = (r12_1 + r12_1);\n                                                    if (rcx_18 == 0)\n                                                    {\n                                                        if (rdx_13 >= rax_61)\n                                                        {\n                                                            rax_61 = rdx_13;\n                                                        }\n                                                        if (r12_1 >= rax_61)\n                                                        {\n                                                            goto label_4069a2;\n                                                        }\n                                                        r12_1 = (r12_1 + r12_1);\n                                                        if ((r12_1 < rax_61 && rax_61 != -1))\n                                                        {\n                                                            r12_1 = rax_61;\n                                                        }\n                                                        if (((r12_1 < rax_61 && rax_61 != -1) || r12_1 >= rax_61))\n                                                        {\n                                                            rbx_3 = r11_2 == arg1;\n                                                            if ((r11_2 == 0 || (r11_2 != 0 && rbx_3 != 0)))\n                                                            {\n                                                                char* rax_101 = malloc(r12_1);\n                                                                if (rax_101 != 0)\n                                                                {\n                                                                    if ((r13_1 != 0 && rbx_3 != 0))\n                                                                    {\n                                                                        r11_2 = memcpy(rax_101, r11_2, r13_1);\n                                                                        goto label_4069a2;\n                                                                    }\n                                                                    r11_2 = rax_101;\n                                                                    goto label_4069a2;\n                                                                }\n                                                            }\n                                                            if ((r11_2 != 0 && rbx_3 == 0))\n                                                            {\n                                                                char* rax_62 = realloc(r11_2, r12_1);\n                                                                if (rax_62 != 0)\n                                                                {\n                                                                    r11_2 = rax_62;\n                                                                    goto label_4069a2;\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                                else if (r12_1 == -1)\n                                                {\n                                                    goto label_4069a2;\n                                                }\n                                                r15_7 = r11_2;\n                                            }\n                                        }\n                                        if ((((((((((rax_39 == 7 || rax_39 == 8) || rax_39 == 9) || rax_39 == 0xa) || rax_39 == 0xf) || rax_39 == 0x10) || rax_39 == 0x11) && rax_56 == 1) && rdx_1 < 0) || rax_39 == 0xc))\n                                        {\n                                            if (*(var_6c8 + 1) != 0)\n                                            {\n                                                *(var_6c8 + 1) = 0;\n                                                goto label_4069a2;\n                                            }\n                                            if (rax_58 < 0)\n                                            {\n                                                int32_t rbx_4 = *var_6a8;\n                                                if (rbx_4 == 0)\n                                                {\n                                                    rbx_4 = 0x54;\n                                                    if ((r14_1[9] & 0xef) != 0x63)\n                                                    {\n                                                        rbx_4 = 0x16;\n                                                    }\n                                                }\n                                                if ((r11_2 != arg1 && r11_2 != 0))\n                                                {\n                                                    free(r11_2);\n                                                }\n                                                if (var_6e0_1 != 0)\n                                                {\n                                                    free(var_6e0_1);\n                                                }\n                                                if (var_580 != &var_568)\n                                                {\n                                                    free(var_580);\n                                                }\n                                                if (var_670 != &var_668)\n                                                {\n                                                    free(var_670);\n                                                }\n                                                *var_6a8 = rbx_4;\n                                                break;\n                                            }\n                                            goto label_406d28;\n                                        }\n                                    }\n                                    if (((rax_21 - 0x45) <= 2 || ((rax_21 - 0x45) > 2 && rax_21 == 0x41)))\n                                    {\n                                        if (rax_19 != 0xc)\n                                        {\n                                            goto label_406777;\n                                        }\n                                        long double x87_r7_1 = *(rdx_1 + 0x10);\n                                        if ((!(FCMP_UO(x87_r7_1, x87_r7_1))))\n                                        {\n                                            long double x87_r6_3 = x87_r7_1;\n                                            x87_r7_1 = (x87_r7_1 + x87_r7_1);\n                                            (x87_r6_3 - x87_r7_1);\n                                            bool cond:7_1 = x87_r6_3 != x87_r7_1;\n                                            if ((FCMP_UO(x87_r6_3, x87_r7_1)))\n                                            {\n                                                goto label_406777;\n                                            }\n                                            if (cond:7_1)\n                                            {\n                                                goto label_406777;\n                                            }\n                                            goto label_406bfd;\n                                        }\n                                    label_406bfd:\n                                        char* rdx_11 = r14_1[3];\n                                        int64_t rdi_16 = r14_1[4];\n                                        int32_t r11_3 = r14_1[2];\n                                        int64_t r10_1;\n                                        if (rdx_11 == rdi_16)\n                                        {\n                                            r10_1 = 0;\n                                        label_4069f0:\n                                            void* rdx_9 = r14_1[6];\n                                            int64_t rcx_10 = r14_1[7];\n                                            int64_t rcx_11;\n                                            int64_t rdx_10;\n                                            if (rdx_9 != rcx_10)\n                                            {\n                                                int64_t rsi_10 = r14_1[8];\n                                                if (rsi_10 == -1)\n                                                {\n                                                    char* rax_139 = (rdx_9 + 1);\n                                                    rdx_10 = 0;\n                                                    if (rcx_10 == rax_139)\n                                                    {\n                                                    label_407cd4:\n                                                        rcx_11 = 0xc;\n                                                    label_4070c1:\n                                                        int64_t rax_97 = rcx_11;\n                                                        if (r10_1 >= rcx_11)\n                                                        {\n                                                            rax_97 = r10_1;\n                                                        }\n                                                        size_t rax_98 = (rax_97 + 1);\n                                                        var_698 = rax_98;\n                                                        if (rax_97 >= -1)\n                                                        {\n                                                            goto label_406a65;\n                                                        }\n                                                        void var_2f8;\n                                                        int64_t rcx_21;\n                                                        if (rax_98 <= 0x2bc)\n                                                        {\n                                                            rcx_21 = &var_2f8;\n                                                        }\n                                                        else\n                                                        {\n                                                            var_6b8 = r11_3;\n                                                            var_6a8 = x87_r7_1;\n                                                            if (rax_98 == -1)\n                                                            {\n                                                                goto label_406a65;\n                                                            }\n                                                            int64_t rax_99 = malloc(rax_98);\n                                                            r11_3 = var_6b8;\n                                                            x87_r7_1 = var_6a8;\n                                                            rcx_21 = rax_99;\n                                                            if (rax_99 == 0)\n                                                            {\n                                                                goto label_406a65;\n                                                            }\n                                                        }\n                                                        int64_t r9_6;\n                                                        int64_t r15_9;\n                                                        if ((!(FCMP_UO(x87_r7_1, x87_r7_1))))\n                                                        {\n                                                            uint16_t x87status_1;\n                                                            int16_t temp0_2;\n                                                            temp0_2 = __fnstcw_memmem16(arg5);\n                                                            var_680 = temp0_2;\n                                                            int32_t r8_7 = var_680;\n                                                            int16_t rax_100;\n                                                            *rax_100[1] = (*r8_7[1] | 3);\n                                                            var_680 = rax_100;\n                                                            uint16_t x87control;\n                                                            uint16_t x87status_2;\n                                                            x87control = __fldcw_memmem16(var_680);\n                                                            bool c0_1;\n                                                            bool c1_1;\n                                                            bool c2_1;\n                                                            bool c3_1;\n                                                            c0_1 = __fxam(x87_r7_1);\n                                                            if ((*((((c0_1) ? 1 : 0) << 8) | ((((c1_1) ? 1 : 0) << 9) | ((((c2_1) ? 1 : 0) << 0xa) | ((((c3_1) ? 1 : 0) << 0xe) | 0x3800))))[1] & 2) != 0)\n                                                            {\n                                                                *rcx_21 = 0x2d;\n                                                                x87_r7_1 = (-x87_r7_1);\n                                                                r15_9 = (rcx_21 + 1);\n                                                            }\n                                                            else if ((r11_3 & 4) != 0)\n                                                            {\n                                                                r15_9 = (rcx_21 + 1);\n                                                                *rcx_21 = 0x2b;\n                                                            }\n                                                            else\n                                                            {\n                                                                r15_9 = rcx_21;\n                                                                if ((r11_3 & 8) != 0)\n                                                                {\n                                                                    r15_9 = (rcx_21 + 1);\n                                                                    *rcx_21 = 0x20;\n                                                                }\n                                                            }\n                                                            long double x87_r6_4 = 0;\n                                                            if (x87_r7_1 <= x87_r6_4)\n                                                            {\n                                                                (x87_r7_1 - x87_r6_4);\n                                                                bool cond:14_1 = x87_r7_1 != x87_r6_4;\n                                                                if ((FCMP_UO(x87_r7_1, x87_r6_4)))\n                                                                {\n                                                                    goto label_40719c;\n                                                                }\n                                                                if (cond:14_1)\n                                                                {\n                                                                    goto label_40719c;\n                                                                }\n                                                                bool rax_118 = (r14_1[9] & 0xdf);\n                                                                int32_t var_6e8;\n                                                                if (rax_118 == 0x46)\n                                                                {\n                                                                    *r15_9 = 0x30;\n                                                                    if ((r11_3 & 0x10) != 0)\n                                                                    {\n                                                                    label_407af9:\n                                                                        var_6e8 = r10_1;\n                                                                        var_6b8 = r11_3;\n                                                                        r9_6 = (r15_9 + 2);\n                                                                        char rax_137 = *nl_langinfo(0x10000);\n                                                                        r11_3 = var_6b8;\n                                                                        r10_1 = var_6e8;\n                                                                        if (rax_137 == 0)\n                                                                        {\n                                                                            rax_137 = 0x2e;\n                                                                        }\n                                                                        *(r15_9 + 1) = rax_137;\n                                                                        if (rdx_10 != 0)\n                                                                        {\n                                                                            int64_t rsi_34 = ((r15_9 + rdx_10) + 2);\n                                                                            int64_t rax_138 = r9_6;\n                                                                        label_407b70:\n                                                                            rax_138 = (rax_138 + 1);\n                                                                            *(rax_138 - 1) = 0x30;\n                                                                            if (rax_138 != rsi_34)\n                                                                            {\n                                                                                goto label_407b70;\n                                                                            }\n                                                                            r9_6 = (r9_6 + rdx_10);\n                                                                        }\n                                                                        goto label_4075eb;\n                                                                    }\n                                                                    if (rdx_10 != 0)\n                                                                    {\n                                                                        goto label_407af9;\n                                                                    }\n                                                                label_4075e7:\n                                                                    r9_6 = (r15_9 + 1);\n                                                                label_4075eb:\n                                                                    var_680 = r8_7;\n                                                                    uint16_t x87status_3;\n                                                                    arg5 = __fldcw_memmem16(var_680);\n                                                                label_4075fc:\n                                                                    uint64_t r8_11 = (r9_6 - rcx_21);\n                                                                    if (r10_1 > r8_11)\n                                                                    {\n                                                                        int64_t r10_2 = (r10_1 - r8_11);\n                                                                        int64_t rdi_38 = (r9_6 + r10_2);\n                                                                        r8_11 = (rdi_38 - rcx_21);\n                                                                        if ((r11_3 & 2) == 0)\n                                                                        {\n                                                                            if (((r11_3 & 0x20) == 0 || ((r11_3 & 0x20) != 0 && r15_9 == 0)))\n                                                                            {\n                                                                                int64_t rax_130 = -1;\n                                                                                int64_t rdx_26 = ((rcx_21 - 1) - r9_6);\n                                                                                if (rcx_21 < r9_6)\n                                                                                {\n                                                                                label_407935:\n                                                                                    *(rdi_38 + rax_130) = *(r9_6 + rax_130);\n                                                                                    rax_130 = (rax_130 - 1);\n                                                                                    if (rdx_26 != rax_130)\n                                                                                    {\n                                                                                        goto label_407935;\n                                                                                    }\n                                                                                    r9_6 = rcx_21;\n                                                                                }\n                                                                                if (r10_2 != 0)\n                                                                                {\n                                                                                    int64_t r10_4 = (r10_2 + r9_6);\n                                                                                label_407958:\n                                                                                    r9_6 = (r9_6 + 1);\n                                                                                    *(r9_6 - 1) = 0x20;\n                                                                                    if (r9_6 != r10_4)\n                                                                                    {\n                                                                                        goto label_407958;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                            if (((r11_3 & 0x20) != 0 && r15_9 != 0))\n                                                                            {\n                                                                                if (r15_9 >= r9_6)\n                                                                                {\n                                                                                    r15_9 = r9_6;\n                                                                                }\n                                                                                else\n                                                                                {\n                                                                                    int64_t rax_119 = -1;\n                                                                                    int64_t rdx_21 = ((r15_9 - 1) - r9_6);\n                                                                                label_40764d:\n                                                                                    *(rdi_38 + rax_119) = *(r9_6 + rax_119);\n                                                                                    rax_119 = (rax_119 - 1);\n                                                                                    if (rax_119 != rdx_21)\n                                                                                    {\n                                                                                        goto label_40764d;\n                                                                                    }\n                                                                                }\n                                                                                if (r10_2 != 0)\n                                                                                {\n                                                                                    int64_t r10_3 = (r10_2 + r15_9);\n                                                                                label_407668:\n                                                                                    r15_9 = (r15_9 + 1);\n                                                                                    *(r15_9 - 1) = 0x30;\n                                                                                    if (r15_9 != r10_3)\n                                                                                    {\n                                                                                        goto label_407668;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                        else if (r10_2 != 0)\n                                                                        {\n                                                                        label_407ac0:\n                                                                            r9_6 = (r9_6 + 1);\n                                                                            *(r9_6 - 1) = 0x20;\n                                                                            if (rdi_38 != r9_6)\n                                                                            {\n                                                                                goto label_407ac0;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                    if (var_698 <= r8_11)\n                                                                    {\n                                                                        goto label_40719c;\n                                                                    }\n                                                                    uint64_t rax_121 = (r13_1 + r8_11);\n                                                                    int64_t rsi_24;\n                                                                    rsi_24 = (r13_1 + r8_11) < r13_1;\n                                                                    r15_2 = rax_121;\n                                                                    if ((r12_1 - r13_1) > r8_11)\n                                                                    {\n                                                                        goto label_40772a;\n                                                                    }\n                                                                    if (rsi_24 != 0)\n                                                                    {\n                                                                        if (r12_1 != -1)\n                                                                        {\n                                                                            goto label_406a65;\n                                                                        }\n                                                                        goto label_40772a;\n                                                                    }\n                                                                    if (r12_1 >= rax_121)\n                                                                    {\n                                                                        goto label_40772a;\n                                                                    }\n                                                                    bool cond:21_1 = r12_1 < 0;\n                                                                    if (r12_1 != 0)\n                                                                    {\n                                                                        if (cond:21_1)\n                                                                        {\n                                                                            goto label_406a65;\n                                                                        }\n                                                                        r12_1 = (r12_1 + r12_1);\n                                                                        if (r12_1 >= rax_121)\n                                                                        {\n                                                                            goto label_4076d5;\n                                                                        }\n                                                                    }\n                                                                    else if (rax_121 <= 0xc)\n                                                                    {\n                                                                        r12_1 = 0xc;\n                                                                    label_4076d5:\n                                                                        void* rdx_23;\n                                                                        rdx_23 = rbx_2 == arg1;\n                                                                        if (rbx_2 == 0)\n                                                                        {\n                                                                        label_40796e:\n                                                                            var_6b8 = rdx_23;\n                                                                            var_698 = rcx_21;\n                                                                            char* rax_131 = malloc(r12_1);\n                                                                            rcx_21 = var_698;\n                                                                            char rdx_27 = var_6b8;\n                                                                            if (rax_131 == 0)\n                                                                            {\n                                                                                goto label_406a65;\n                                                                            }\n                                                                            if ((r13_1 == 0 || (r13_1 != 0 && rdx_27 == 0)))\n                                                                            {\n                                                                                rbx_2 = rax_131;\n                                                                            }\n                                                                            if ((r13_1 != 0 && rdx_27 != 0))\n                                                                            {\n                                                                                var_698 = rcx_21;\n                                                                                rcx_21 = var_698;\n                                                                                rbx_2 = memcpy(rax_131, rbx_2, r13_1);\n                                                                            }\n                                                                            goto label_40772a;\n                                                                        }\n                                                                        if (rdx_23 != 0)\n                                                                        {\n                                                                            goto label_40796e;\n                                                                        }\n                                                                        var_6a8 = r8_11;\n                                                                        var_698 = rcx_21;\n                                                                        char* rax_122 = realloc(rbx_2, r12_1);\n                                                                        if (rax_122 == 0)\n                                                                        {\n                                                                            goto label_406a65;\n                                                                        }\n                                                                        rcx_21 = var_698;\n                                                                        r8_11 = var_6a8;\n                                                                        rbx_2 = rax_122;\n                                                                    label_40772a:\n                                                                        var_698 = rcx_21;\n                                                                        memcpy((rbx_2 + r13_1), rcx_21, r8_11);\n                                                                        int64_t rcx_25 = var_698;\n                                                                        if (rcx_25 != &var_2f8)\n                                                                        {\n                                                                            free(rcx_25);\n                                                                        }\n                                                                        goto label_406b67;\n                                                                    }\n                                                                    if (rax_121 == -1)\n                                                                    {\n                                                                        goto label_406a65;\n                                                                    }\n                                                                    r12_1 = rax_121;\n                                                                    goto label_4076d5;\n                                                                }\n                                                                if (rax_118 != 0x45)\n                                                                {\n                                                                    int32_t var_6f0;\n                                                                    if (rax_118 == 0x47)\n                                                                    {\n                                                                        *r15_9 = 0x30;\n                                                                        if ((r11_3 & 0x10) == 0)\n                                                                        {\n                                                                            goto label_4075e7;\n                                                                        }\n                                                                        int64_t r9_8 = (r15_9 + 2);\n                                                                        if (rdx_10 == 0)\n                                                                        {\n                                                                            var_6a8 = r11_3;\n                                                                            r11_3 = var_6a8;\n                                                                            char rax_156 = *nl_langinfo(0x10000);\n                                                                            r9_6 = r9_8;\n                                                                            if (rax_156 == 0)\n                                                                            {\n                                                                                rax_156 = 0x2e;\n                                                                            }\n                                                                            *(r15_9 + 1) = rax_156;\n                                                                        }\n                                                                        else\n                                                                        {\n                                                                            char* rsi_32 = (rdx_10 - 1);\n                                                                            var_6f0 = r10_1;\n                                                                            var_6e8 = r9_8;\n                                                                            var_6c8 = r11_3;\n                                                                            var_6b8 = rdx_10;\n                                                                            char rax_134 = *nl_langinfo(0x10000);\n                                                                            r11_3 = var_6c8;\n                                                                            r9_6 = var_6e8;\n                                                                            r10_1 = var_6f0;\n                                                                            if (rax_134 == 0)\n                                                                            {\n                                                                                rax_134 = 0x2e;\n                                                                            }\n                                                                            *(r15_9 + 1) = rax_134;\n                                                                            if (rsi_32 != 0)\n                                                                            {\n                                                                                void* rdx_30 = &var_6b8[(r15_9 + 1)];\n                                                                                int64_t rax_135 = r9_6;\n                                                                            label_407a9e:\n                                                                                rax_135 = (rax_135 + 1);\n                                                                                *(rax_135 - 1) = 0x30;\n                                                                                if (rax_135 != rdx_30)\n                                                                                {\n                                                                                    goto label_407a9e;\n                                                                                }\n                                                                                r9_6 = &rsi_32[r9_6];\n                                                                            }\n                                                                        }\n                                                                        goto label_4075eb;\n                                                                    }\n                                                                    if (rax_118 != 0x41)\n                                                                    {\n                                                                        goto label_40719c;\n                                                                    }\n                                                                    char* rax_142 = (r15_9 + 2);\n                                                                    *r15_9 = 0x30;\n                                                                    char rax_143 = r14_1[9];\n                                                                    *(r15_9 + 2) = 0x30;\n                                                                    *(r15_9 + 1) = (rax_143 + 0x17);\n                                                                    char* rsi_41;\n                                                                    if ((r11_3 & 0x10) == 0)\n                                                                    {\n                                                                        rsi_41 = (r15_9 + 3);\n                                                                    }\n                                                                    if (((r11_3 & 0x10) != 0 || ((r11_3 & 0x10) == 0 && rdx_10 != 0 != 0)))\n                                                                    {\n                                                                        var_6f0 = r10_1;\n                                                                        var_6e8 = rcx_21;\n                                                                        var_6c8 = r11_3;\n                                                                        rsi_41 = (r15_9 + 4);\n                                                                        char rax_153 = *nl_langinfo(0x10000);\n                                                                        r11_3 = var_6c8;\n                                                                        rcx_21 = var_6e8;\n                                                                        r10_1 = var_6f0;\n                                                                        if (rax_153 == 0)\n                                                                        {\n                                                                            rax_153 = 0x2e;\n                                                                        }\n                                                                        *(r15_9 + 3) = rax_153;\n                                                                        if (rdx_10 != 0)\n                                                                        {\n                                                                            int64_t rdi_53 = ((r15_9 + rdx_10) + 4);\n                                                                            char* rax_154 = rsi_41;\n                                                                        label_407ee5:\n                                                                            rax_154 = &rax_154[1];\n                                                                            rax_154[-1] = 0x30;\n                                                                            if (rax_154 != rdi_53)\n                                                                            {\n                                                                                goto label_407ee5;\n                                                                            }\n                                                                            rsi_41 = &rsi_41[rdx_10];\n                                                                        }\n                                                                    }\n                                                                    char rax_145 = r14_1[9];\n                                                                    r9_6 = &rsi_41[3];\n                                                                    *(rsi_41 + 1) = 0x302b;\n                                                                    r15_9 = rax_142;\n                                                                    *rsi_41 = (rax_145 + 0xf);\n                                                                    goto label_4075eb;\n                                                                }\n                                                                *r15_9 = 0x30;\n                                                                char* rsi_27;\n                                                                if ((r11_3 & 0x10) == 0)\n                                                                {\n                                                                    rsi_27 = (r15_9 + 1);\n                                                                }\n                                                                if (((r11_3 & 0x10) != 0 || ((r11_3 & 0x10) == 0 && rdx_10 != 0 != 0)))\n                                                                {\n                                                                    var_6e8 = r10_1;\n                                                                    var_6b8 = r11_3;\n                                                                    rsi_27 = (r15_9 + 2);\n                                                                    char rax_148 = *nl_langinfo(0x10000);\n                                                                    r11_3 = var_6b8;\n                                                                    r10_1 = var_6e8;\n                                                                    if (rax_148 == 0)\n                                                                    {\n                                                                        rax_148 = 0x2e;\n                                                                    }\n                                                                    *(r15_9 + 1) = rax_148;\n                                                                    if (rdx_10 != 0)\n                                                                    {\n                                                                        int64_t rdi_50 = ((r15_9 + rdx_10) + 2);\n                                                                        char* rax_149 = rsi_27;\n                                                                    label_407dd0:\n                                                                        rax_149 = &rax_149[1];\n                                                                        rax_149[-1] = 0x30;\n                                                                        if (rax_149 != rdi_50)\n                                                                        {\n                                                                            goto label_407dd0;\n                                                                        }\n                                                                        rsi_27 = &rsi_27[rdx_10];\n                                                                    }\n                                                                }\n                                                                char rax_123 = r14_1[9];\n                                                                r9_6 = &rsi_27[4];\n                                                                rsi_27[3] = 0x30;\n                                                                *rsi_27 = rax_123;\n                                                                *(rsi_27 + 1) = 0x302b;\n                                                                goto label_4075eb;\n                                                            }\n                                                            long double x87_r6_7 = (x87_r6_4 + x87_r6_4);\n                                                            (x87_r6_7 - x87_r6_4);\n                                                            bool cond:15_1 = x87_r6_7 != x87_r6_4;\n                                                            if ((!(FCMP_O(x87_r6_7, x87_r6_4))))\n                                                            {\n                                                                goto label_40719c;\n                                                            }\n                                                            if (cond:15_1)\n                                                            {\n                                                                goto label_40719c;\n                                                            }\n                                                            r9_6 = (r15_9 + 3);\n                                                            if ((r14_1[9] - 0x41) > 0x19)\n                                                            {\n                                                                *(r15_9 + 2) = 0x66;\n                                                                *r15_9 = 0x6e69;\n                                                                r15_9 = 0;\n                                                            }\n                                                            else\n                                                            {\n                                                                *(r15_9 + 2) = 0x46;\n                                                                *r15_9 = 0x4e49;\n                                                                r15_9 = 0;\n                                                            }\n                                                            goto label_4075eb;\n                                                        }\n                                                        r9_6 = (rcx_21 + 3);\n                                                        if ((r15_3 - 0x41) > 0x19)\n                                                        {\n                                                            *(rcx_21 + 2) = 0x6e;\n                                                            r15_9 = 0;\n                                                            *rcx_21 = 0x616e;\n                                                        }\n                                                        else\n                                                        {\n                                                            *(rcx_21 + 2) = 0x4e;\n                                                            r15_9 = 0;\n                                                            *rcx_21 = 0x414e;\n                                                        }\n                                                        goto label_4075fc;\n                                                    }\n                                                    char* rsi_36 = rax_139;\n                                                label_407c33:\n                                                    char* rdi_49 = &rsi_36[1];\n                                                    int64_t rax_140 = (*rsi_36 - 0x30);\n                                                    int64_t rsi_39 = -1;\n                                                    if (rdx_10 <= 0x1999999999999999)\n                                                    {\n                                                        int64_t rsi_40 = (rdx_10 * 5);\n                                                        rsi_39 = (rsi_40 + rsi_40);\n                                                    }\n                                                    rsi_36 = rdi_49;\n                                                    rdx_10 = (rax_140 + rsi_39);\n                                                    if ((rax_140 + rsi_39) < rax_140)\n                                                    {\n                                                        if (rcx_10 == rdi_49)\n                                                        {\n                                                            goto label_406a65;\n                                                        }\n                                                    label_407c67:\n                                                        rsi_36 = &rdi_49[1];\n                                                        if (rsi_36[-1] != 0x30)\n                                                        {\n                                                            if (rcx_10 != rsi_36)\n                                                            {\n                                                                rdi_49 = rsi_36;\n                                                                goto label_407c67;\n                                                            }\n                                                            goto label_406a65;\n                                                        }\n                                                        rdx_10 = -1;\n                                                    }\n                                                    if (rcx_10 != rsi_36)\n                                                    {\n                                                        goto label_407c33;\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    void* r8_4 = &var_670[(rsi_10 << 5)];\n                                                    if (*r8_4 != 5)\n                                                    {\n                                                        goto label_40719c;\n                                                    }\n                                                    rdx_10 = *(r8_4 + 0x10);\n                                                    if (rdx_10 < 0)\n                                                    {\n                                                        goto label_4070a0;\n                                                    }\n                                                }\n                                                if (rdx_10 == 0)\n                                                {\n                                                    goto label_407cd4;\n                                                }\n                                                rcx_11 = (rdx_10 + 0xc);\n                                                if (rdx_10 >= -0xc)\n                                                {\n                                                    goto label_406a65;\n                                                }\n                                                goto label_4070c1;\n                                            }\n                                        label_4070a0:\n                                            bool cond:9_1 = rax_21 != 0x41;\n                                            rcx_11 = 0xc;\n                                            if (rax_21 != 0x41)\n                                            {\n                                                rcx_11 = 0x12;\n                                            }\n                                            rdx_10 = 0;\n                                            if (cond:9_1)\n                                            {\n                                                rdx_10 = 6;\n                                            }\n                                            goto label_4070c1;\n                                        }\n                                        int64_t rcx_12 = r14_1[5];\n                                        if (rcx_12 != -1)\n                                        {\n                                            void* rcx_14 = &var_670[(rcx_12 << 5)];\n                                            if (*rcx_14 != 5)\n                                            {\n                                                goto label_40719c;\n                                            }\n                                            r10_1 = *(rcx_14 + 0x10);\n                                            if (r10_1 < 0)\n                                            {\n                                                r11_3 = (r11_3 | 2);\n                                                r10_1 = (-r10_1);\n                                            }\n                                            goto label_4069f0;\n                                        }\n                                        r10_1 = 0;\n                                        var_698 = rcx_12;\n                                    label_407ba1:\n                                        char* rsi_35 = &rdx_11[1];\n                                        int64_t r9_10 = -1;\n                                        int64_t rdx_34 = (*rdx_11 - 0x30);\n                                        if (r10_1 <= 0x1999999999999999)\n                                        {\n                                            int64_t r9_11 = (r10_1 * 5);\n                                            r9_10 = (r9_11 + r9_11);\n                                        }\n                                        r10_1 = (rdx_34 + r9_10);\n                                        rdx_11 = rsi_35;\n                                        if ((rdx_34 + r9_10) < rdx_34)\n                                        {\n                                            int64_t rcx_26 = var_698;\n                                            if (rdi_16 != rsi_35)\n                                            {\n                                            label_407be6:\n                                                rdx_11 = &rdx_11[1];\n                                                if (rdx_11[-1] == 0x30)\n                                                {\n                                                    var_698 = rcx_26;\n                                                    r10_1 = -1;\n                                                }\n                                                else if (rdi_16 != rdx_11)\n                                                {\n                                                    goto label_407be6;\n                                                }\n                                            }\n                                            if ((rdi_16 == rsi_35 || (rdi_16 != rsi_35 && rdx_11[-1] != 0x30)))\n                                            {\n                                                r10_1 = rcx_26;\n                                            }\n                                        }\n                                        if ((((((rdx_34 + r9_10) < rdx_34 && rdi_16 != rsi_35) && rdx_11[-1] == 0x30) || (rdx_34 + r9_10) >= rdx_34) && rdi_16 != rdx_11))\n                                        {\n                                            goto label_407ba1;\n                                        }\n                                        goto label_4069f0;\n                                    }\n                                }\n                            }\n                            if ((r15_7 != arg1 && r15_7 != 0))\n                            {\n                                goto label_406c8b;\n                            }\n                        }\n                        else\n                        {\n                            if (r12_1 >= rax_8)\n                            {\n                                goto label_4066e3;\n                            }\n                            bool cond:0_1 = r12_1 < 0;\n                            if ((r12_1 == 0 && rax_8 <= 0xc))\n                            {\n                                r12_1 = 0xc;\n                                rdx_1 = rbx_2 == arg1;\n                                if (rbx_2 == 0)\n                                {\n                                label_4065ca:\n                                    var_6a8 = rdx_1;\n                                    var_698 = rcx_1;\n                                    char* rax_9 = malloc(r12_1);\n                                    rcx_1 = var_698;\n                                    char rdx_2 = var_6a8;\n                                    if (rax_9 == 0)\n                                    {\n                                        goto label_406a65;\n                                    }\n                                    if ((r15_2 == 0 || (r15_2 != 0 && rdx_2 == 0)))\n                                    {\n                                        rbx_2 = rax_9;\n                                    }\n                                    if ((r15_2 != 0 && rdx_2 != 0))\n                                    {\n                                        var_698 = rcx_1;\n                                        rcx_1 = var_698;\n                                        rbx_2 = memcpy(rax_9, rbx_2, r15_2);\n                                    }\n                                    goto label_4066e3;\n                                }\n                            }\n                            if (r12_1 != 0)\n                            {\n                                if (cond:0_1)\n                                {\n                                    goto label_406a65;\n                                }\n                                r12_1 = (r12_1 + r12_1);\n                                if (r12_1 >= rax_8)\n                                {\n                                    goto label_406692;\n                                }\n                            }\n                            if (((r12_1 == 0 && rax_8 > 0xc) || r12_1 != 0))\n                            {\n                                if (rax_8 == -1)\n                                {\n                                    goto label_406a65;\n                                }\n                                r12_1 = rax_8;\n                            label_406692:\n                                rdx_1 = rbx_2 == arg1;\n                                if (rbx_2 == 0)\n                                {\n                                    goto label_4065ca;\n                                }\n                            }\n                            if (((((r12_1 == 0 && rax_8 > 0xc) || r12_1 != 0) && rax_8 != -1) || (r12_1 == 0 && rax_8 <= 0xc)))\n                            {\n                                if (rdx_1 != 0)\n                                {\n                                    goto label_4065ca;\n                                }\n                                var_698 = rcx_1;\n                                char* rax_15 = realloc(rbx_2, r12_1);\n                                if (rax_15 != 0)\n                                {\n                                    rcx_1 = var_698;\n                                    rbx_2 = rax_15;\n                                    goto label_4066e3;\n                                }\n                            label_406c7a:\n                                r15_7 = rbx_2;\n                                var_6a8 = __errno_location();\n                            label_406c8b:\n                                free(r15_7);\n                            }\n                        }\n                        if (var_6e0_1 == 0)\n                        {\n                            break;\n                        }\n                        free(var_6e0_1);\n                        break;\n                    }\n                }\n                if ((rcx == r8_1 || (((rcx != r8_1 && (!/* if (rcx == r8_1 || (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && not(unimplemented  {add rax, rcx} && var_6e0_1 == 0) && not(unimplemented  {add rax, rcx})))... */)) && (!(/* if (rcx == r8_1 || (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && not(unimplemented  {add rax, rcx} && var_6e0_1 == 0) && not(unimplemented  {add rax, rcx})))... */ && var_6e0_1 == 0))) && (!/* if (rcx == r8_1 || (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && not(unimplemented  {add rax, rcx} && var_6e0_1 == 0) && not(unimplemented  {add rax, rcx})))... */))))\n                {\n                    r13_1 = r15_2;\n                    goto label_4066ef;\n                }\n                if ((((rcx != r8_1 && (!/* if (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && unimplemented  {add rax, rcx} && var_6e0_1 == 0)... */)) && /* if (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && unimplemented  {add rax, rcx} && var_6e0_1 == 0)... */) && var_6e0_1 == 0))\n                {\n                    goto label_406b95;\n                }\n            }\n            else\n            {\n            label_406b95:\n                var_6a8 = __errno_location();\n            }\n            if (((rax_3 + var_570) < rax_3 || ((((rax_3 + var_570) >= rax_3 && rax_4 < -6) && rcx != r8_1) && /* if (rax_3 + var_570 u< rax_3 || (rax_3 + var_570 u>= rax_3 && rax_4 u< -6 && rcx != r8_1 && unimplemented  {add rax, rcx}))... */)))\n            {\n                if (var_580 != &var_568)\n                {\n                    free(var_580);\n                }\n                if (var_670 == &var_668)\n                {\n                    goto label_406ada;\n                }\n                free(var_670);\n            label_406ada:\n                *var_6a8 = 0xc;\n            }\n        }\n        else\n        {\n            if (var_580 != &var_568)\n            {\n                free(var_580);\n            }\n            if (var_670 != &var_668)\n            {\n                free(var_670);\n            }\n            *__errno_location() = 0x16;\n        }\n    }\nlabel_406af1:\n}\n\n"
        },
        {
            "funcName": "sub_407f90",
            "funcStartAddr": "0x407f90",
            "funcEndAddr": "0x408166",
            "decompiledFuncCode": "int64_t sub_407f90(int64_t, void* arg2)\n{\n    int32_t* rax = *(arg2 + 8);\n    if (*arg2 == 0)\n    {\n        return 0;\n    }\n    if (*rax > 0x16)\n    {\n        return 0xffffffff;\n    }\n    /* jump -> *((*rax << 3) + &data_40b370) */\n}\n\n"
        },
        {
            "funcName": "sub_4081b0",
            "funcStartAddr": "0x4081b0",
            "funcEndAddr": "0x408eb9",
            "decompiledFuncCode": "int64_t sub_4081b0(char* arg1, int64_t* arg2, int64_t* arg3)\n{\n    void* rcx = &arg2[4];\n    void* rax = &arg3[2];\n    int64_t* r8 = arg2;\n    void* r9 = 7;\n    int64_t r11 = 7;\n    int64_t r13 = 0;\n    *arg2 = 0;\n    arg2[1] = rcx;\n    void* var_60 = rcx;\n    *arg3 = 0;\n    arg3[1] = rax;\n    void* var_70 = nullptr;\n    int64_t var_78 = 0;\n    void* var_68 = nullptr;\n    while (true)\n    {\n        char rax_1 = *arg1;\n        int64_t rax_6;\n        if (rax_1 == 0)\n        {\n            *(rcx + (r13 * 0x58)) = arg1;\n            r8[2] = var_78;\n            r8[3] = var_70;\n            rax_6 = 0;\n        }\n        else\n        {\n            void* rbp_1 = &arg1[1];\n            if (rax_1 != 0x25)\n            {\n                goto label_408228;\n            }\n            void* r14_1 = ffffffffffffffff;\n            char** r12_1 = (rcx + (r13 * 0x58));\n            *r12_1 = arg1;\n            r12_1[2] = 0;\n            r12_1[3] = 0;\n            r12_1[4] = 0;\n            r12_1[5] = -1;\n            r12_1[6] = 0;\n            r12_1[7] = 0;\n            r12_1[8] = -1;\n            r12_1[0xa] = -1;\n            char rbx_1 = arg1[1];\n            if ((rbx_1 - 0x30) > 9)\n            {\n                goto label_4082f6;\n            }\n            void* rax_29 = rbp_1;\n            char rdx_14;\n            do\n            {\n                rax_29 = (rax_29 + 1);\n                rdx_14 = *rax_29;\n            } while ((rdx_14 - 0x30) <= 9);\n            void* r13_1;\n            if (rdx_14 == 0x24)\n            {\n                int64_t rax_64 = 0;\n                void* rcx_16;\n                int64_t rdx_28;\n                int64_t rdi_16;\n                char rsi_21;\n                do\n                {\n                    int64_t rsi_19 = -1;\n                    int64_t rdx_27 = (rbx_1 - 0x30);\n                    if (rax_64 <= 0x1999999999999999)\n                    {\n                        int64_t rsi_20 = (rax_64 * 5);\n                        rsi_19 = (rsi_20 + rsi_20);\n                    }\n                    rcx_16 = rbp_1;\n                    while (true)\n                    {\n                        rbx_1 = *(rbp_1 + 1);\n                        rdx_28 = (rdx_27 + rsi_19);\n                        rdi_16 = (rdx_27 + rsi_19) < rdx_27;\n                        rax_64 = rdx_28;\n                        rbp_1 = (rbp_1 + 1);\n                        rsi_21 = (rbx_1 - 0x30);\n                        if (rdi_16 == 0)\n                        {\n                            break;\n                        }\n                        if (rsi_21 > 9)\n                        {\n                            break;\n                        }\n                        rsi_19 = -1;\n                        rcx_16 = rbp_1;\n                        rdx_27 = (rbx_1 - 0x30);\n                    }\n                    if (rdi_16 != 0)\n                    {\n                        break;\n                    }\n                } while (rsi_21 <= 9);\n                if (rdi_16 != 0)\n                {\n                    goto label_408978;\n                }\n                r14_1 = (rdx_28 - 1);\n                if (r14_1 <= -3)\n                {\n                    rbp_1 = (rcx_16 + 2);\n                    rbx_1 = *(rcx_16 + 2);\n                    goto label_4082f6;\n                }\n            label_408978:\n                r13_1 = arg3[1];\n            }\n            else\n            {\n                r14_1 = ffffffffffffffff;\n            label_4082f6:\n                void* rcx_1;\n                while (true)\n                {\n                    rcx_1 = (rbp_1 + 1);\n                    if (rbx_1 == 0x27)\n                    {\n                        r12_1[2] = (r12_1[2] | 1);\n                    }\n                    else if (rbx_1 == 0x2d)\n                    {\n                        r12_1[2] = (r12_1[2] | 2);\n                    }\n                    else if (rbx_1 == 0x2b)\n                    {\n                        r12_1[2] = (r12_1[2] | 4);\n                    }\n                    else if (rbx_1 == 0x20)\n                    {\n                        r12_1[2] = (r12_1[2] | 8);\n                    }\n                    else if (rbx_1 == 0x23)\n                    {\n                        r12_1[2] = (r12_1[2] | 0x10);\n                    }\n                    else if (rbx_1 == 0x30)\n                    {\n                        r12_1[2] = (r12_1[2] | 0x20);\n                    }\n                    else\n                    {\n                        if (rbx_1 != 0x49)\n                        {\n                            break;\n                        }\n                        r12_1[2] = (r12_1[2] | 0x40);\n                    }\n                    rbx_1 = *rcx_1;\n                    rbp_1 = rcx_1;\n                }\n                if (rbx_1 != 0x2a)\n                {\n                    if ((rbx_1 - 0x30) <= 9)\n                    {\n                        r12_1[3] = rbp_1;\n                        if ((*rbp_1 - 0x30) <= 9)\n                        {\n                            void* rcx_15 = rbp_1;\n                            void* rdx_21;\n                            while (true)\n                            {\n                                rdx_21 = (rcx_15 + 1);\n                                if ((*(rcx_15 + 1) - 0x30) > 9)\n                                {\n                                    break;\n                                }\n                                rcx_15 = rdx_21;\n                            }\n                            rcx_1 = (rcx_15 + 2);\n                            int64_t rax_57 = (rdx_21 - rbp_1);\n                            rbp_1 = rdx_21;\n                            if (var_78 >= rax_57)\n                            {\n                                rax_57 = var_78;\n                            }\n                            var_78 = rax_57;\n                        }\n                        r12_1[4] = rbp_1;\n                        rbx_1 = *rbp_1;\n                    }\n                    goto label_408368;\n                }\n                int64_t rax_12 = 1;\n                r12_1[3] = rbp_1;\n                r12_1[4] = rcx_1;\n                if (var_78 != 0)\n                {\n                    rax_12 = var_78;\n                }\n                var_78 = rax_12;\n                int32_t rax_13 = *(rbp_1 + 1);\n                void* rbx_2;\n                if ((rax_13 - 0x30) <= 9)\n                {\n                    void* rdx_17 = rcx_1;\n                    char rsi_10;\n                    do\n                    {\n                        rdx_17 = (rdx_17 + 1);\n                        rsi_10 = *rdx_17;\n                    } while ((rsi_10 - 0x30) <= 9);\n                    if (rsi_10 == 0x24)\n                    {\n                        void* rsi_11 = nullptr;\n                        void* rdx_20;\n                        int64_t rbp_2;\n                        void* rdi_5;\n                        char rbx_6;\n                        do\n                        {\n                            void* const rdx_18 = ffffffffffffffff;\n                            int64_t rax_43 = (rax_13 - 0x30);\n                            if (rsi_11 <= 0x1999999999999999)\n                            {\n                                void* rdx_19 = (rsi_11 * 5);\n                                rdx_18 = (rdx_19 + rdx_19);\n                            }\n                            rdi_5 = rcx_1;\n                            while (true)\n                            {\n                                rdx_20 = (rdx_18 + rax_43);\n                                rax_13 = *(rcx_1 + 1);\n                                rbp_2 = (rdx_18 + rax_43) < rdx_18;\n                                rsi_11 = rdx_20;\n                                rcx_1 = (rcx_1 + 1);\n                                rbx_6 = (rax_13 - 0x30);\n                                if (rbp_2 == 0)\n                                {\n                                    break;\n                                }\n                                if (rbx_6 > 9)\n                                {\n                                    break;\n                                }\n                                rdx_18 = ffffffffffffffff;\n                                rdi_5 = rcx_1;\n                                rax_43 = (rax_13 - 0x30);\n                            }\n                            if (rbp_2 != 0)\n                            {\n                                break;\n                            }\n                        } while (rbx_6 <= 9);\n                        if (rbp_2 != 0)\n                        {\n                            goto label_408978;\n                        }\n                        rbx_2 = (rdx_20 - 1);\n                        if (rbx_2 > -3)\n                        {\n                            goto label_408978;\n                        }\n                        r12_1[5] = rbx_2;\n                        rcx_1 = (rdi_5 + 2);\n                        goto label_40840c;\n                    }\n                }\n                rbx_2 = r12_1[5];\n                if (rbx_2 != -1)\n                {\n                    goto label_40840c;\n                }\n                void* rax_41 = (var_68 + 1);\n                r12_1[5] = var_68;\n                if (var_68 == -1)\n                {\n                    goto label_408978;\n                }\n                rbx_2 = var_68;\n                var_68 = rax_41;\n            label_40840c:\n                r13_1 = arg3[1];\n                int64_t rdx_4;\n                void* rsi_7;\n                if (r9 <= rbx_2)\n                {\n                    void* r9_1 = (r9 + r9);\n                    void* rax_36 = (rbx_2 + 1);\n                    if (r9_1 <= rbx_2)\n                    {\n                        r9_1 = rax_36;\n                    }\n                    if (r9_1 <= 0x7ffffffffffffff)\n                    {\n                        int64_t rsi_6 = (r9_1 << 5);\n                        if (rax == r13_1)\n                        {\n                            void* rax_63 = malloc(rsi_6);\n                            r9 = r9_1;\n                            if (rax_63 == 0)\n                            {\n                                goto label_408b69;\n                            }\n                            rdx_4 = *arg3;\n                            rsi_7 = rax;\n                            r13_1 = rax_63;\n                        label_408c84:\n                            memcpy(r13_1, rsi_7, (rdx_4 << 5));\n                            rdx_4 = *arg3;\n                        label_40873d:\n                            arg3[1] = r13_1;\n                            goto label_40841c;\n                        }\n                        void* rax_37 = realloc(r13_1, rsi_6);\n                        rsi_7 = arg3[1];\n                        r13_1 = rax_37;\n                        r9 = r9_1;\n                        if (rax_37 != 0)\n                        {\n                            rdx_4 = *arg3;\n                            if (rax == rsi_7)\n                            {\n                                goto label_408c84;\n                            }\n                            goto label_40873d;\n                        }\n                        goto label_408b50;\n                    }\n                label_408b4d:\n                    rsi_7 = r13_1;\n                label_408b50:\n                    if (rax == rsi_7)\n                    {\n                        goto label_408b69;\n                    }\n                label_408b5f:\n                    free(rsi_7);\n                label_408b69:\n                    int64_t rdi_12 = r8[1];\n                    if (var_60 != rdi_12)\n                    {\n                        free(rdi_12);\n                    }\n                    break;\n                }\n                rdx_4 = *arg3;\n            label_40841c:\n                if (rdx_4 <= rbx_2)\n                {\n                    do\n                    {\n                        rdx_4 = (rdx_4 + 1);\n                        *((r13_1 + (rdx_4 << 5)) - 0x20) = 0;\n                    } while (rdx_4 <= rbx_2);\n                    *arg3 = rdx_4;\n                    goto label_408448;\n                }\n            label_408448:\n                void* rax_16 = (r13_1 + (rbx_2 << 5));\n                int32_t rdx_5 = *rax_16;\n                if (rdx_5 == 0)\n                {\n                    *rax_16 = 5;\n                    rbx_1 = *rcx_1;\n                    rbp_1 = rcx_1;\n                    rcx_1 = (rcx_1 + 1);\n                    if (rbx_1 == 0x2e)\n                    {\n                        goto label_408470;\n                    }\n                    goto label_408371;\n                }\n                if (rdx_5 == 5)\n                {\n                    rbx_1 = *rcx_1;\n                    rbp_1 = rcx_1;\n                    rcx_1 = (rcx_1 + 1);\n                label_408368:\n                    if (rbx_1 != 0x2e)\n                    {\n                        goto label_408371;\n                    }\n                label_408470:\n                    bool cond:0_1 = *(rbp_1 + 1) != 0x2a;\n                    r12_1[6] = rbp_1;\n                    if (cond:0_1)\n                    {\n                        void* rax_35;\n                        if ((*(rbp_1 + 1) - 0x30) > 9)\n                        {\n                            rbp_1 = rcx_1;\n                            rax_35 = 1;\n                        }\n                        else\n                        {\n                            do\n                            {\n                                rcx_1 = (rcx_1 + 1);\n                            } while ((*rcx_1 - 0x30) <= 9);\n                            rax_35 = (rcx_1 - rbp_1);\n                            rbp_1 = rcx_1;\n                        }\n                        r12_1[7] = rcx_1;\n                        rbx_1 = *rcx_1;\n                        if (var_70 >= rax_35)\n                        {\n                            rax_35 = var_70;\n                        }\n                        var_70 = rax_35;\n                        goto label_408371;\n                    }\n                    void* rax_17 = 2;\n                    char* rcx_4 = (rbp_1 + 2);\n                    r12_1[7] = rcx_4;\n                    if (var_70 >= 2)\n                    {\n                        rax_17 = var_70;\n                    }\n                    var_70 = rax_17;\n                    int32_t rax_18 = *(rbp_1 + 2);\n                    void* rbx_4;\n                    if ((rax_18 - 0x30) <= 9)\n                    {\n                        char* rdx_31 = rcx_4;\n                        char rsi_23;\n                        do\n                        {\n                            rdx_31 = &rdx_31[1];\n                            rsi_23 = *rdx_31;\n                        } while ((rsi_23 - 0x30) <= 9);\n                        if (rsi_23 != 0x24)\n                        {\n                            goto label_4084af;\n                        }\n                        void* rsi_24 = nullptr;\n                        void* rdx_34;\n                        int64_t rbp_3;\n                        char* rdi_18;\n                        char rbx_7;\n                        do\n                        {\n                            void* const rdx_32 = ffffffffffffffff;\n                            int64_t rax_67 = (rax_18 - 0x30);\n                            if (rsi_24 <= 0x1999999999999999)\n                            {\n                                void* rdx_33 = (rsi_24 * 5);\n                                rdx_32 = (rdx_33 + rdx_33);\n                            }\n                            rdi_18 = rcx_4;\n                            while (true)\n                            {\n                                rdx_34 = (rdx_32 + rax_67);\n                                rbp_3 = (rdx_32 + rax_67) < rdx_32;\n                                rcx_4 = &rcx_4[1];\n                                rax_18 = *rcx_4;\n                                rsi_24 = rdx_34;\n                                rbx_7 = (rax_18 - 0x30);\n                                if (rbp_3 == 0)\n                                {\n                                    break;\n                                }\n                                if (rbx_7 > 9)\n                                {\n                                    break;\n                                }\n                                rdx_32 = ffffffffffffffff;\n                                rdi_18 = rcx_4;\n                                rax_67 = (rax_18 - 0x30);\n                            }\n                            if (rbp_3 != 0)\n                            {\n                                break;\n                            }\n                        } while (rbx_7 <= 9);\n                        if (rbp_3 != 0)\n                        {\n                            goto label_408978;\n                        }\n                        rbx_4 = (rdx_34 - 1);\n                        if (rbx_4 > -3)\n                        {\n                            goto label_408978;\n                        }\n                        r12_1[8] = rbx_4;\n                        rcx_4 = &rdi_18[2];\n                        goto label_4084be;\n                    }\n                label_4084af:\n                    rbx_4 = r12_1[8];\n                    if (rbx_4 != -1)\n                    {\n                        goto label_4084be;\n                    }\n                    void* rax_65 = (var_68 + 1);\n                    r12_1[8] = var_68;\n                    if (var_68 == -1)\n                    {\n                        goto label_408978;\n                    }\n                    rbx_4 = var_68;\n                    var_68 = rax_65;\n                label_4084be:\n                    r13_1 = arg3[1];\n                    void* var_58;\n                    int64_t rdx_7;\n                    if (r9 <= rbx_4)\n                    {\n                        void* r9_3 = (r9 + r9);\n                        void* rax_61 = (rbx_4 + 1);\n                        if (r9_3 <= rbx_4)\n                        {\n                            r9_3 = rax_61;\n                        }\n                        if (r9_3 > 0x7ffffffffffffff)\n                        {\n                            goto label_408b4d;\n                        }\n                        int64_t rsi_18 = (r9_3 << 5);\n                        var_58 = rcx_4;\n                        if (rax == r13_1)\n                        {\n                            void* rax_69 = malloc(rsi_18);\n                            rcx_4 = var_58;\n                            r9 = r9_3;\n                            if (rax_69 == 0)\n                            {\n                                goto label_408b69;\n                            }\n                            rdx_7 = *arg3;\n                            rsi_7 = rax;\n                            r13_1 = rax_69;\n                        label_408e36:\n                            memcpy(r13_1, rsi_7, (rdx_7 << 5));\n                            rdx_7 = *arg3;\n                        label_408c1c:\n                            arg3[1] = r13_1;\n                            goto label_4084ce;\n                        }\n                        void* rax_62 = realloc(r13_1, rsi_18);\n                        rsi_7 = arg3[1];\n                        rcx_4 = var_58;\n                        r13_1 = rax_62;\n                        r9 = r9_3;\n                        if (rax_62 != 0)\n                        {\n                            rdx_7 = *arg3;\n                            if (rax == rsi_7)\n                            {\n                                goto label_408e36;\n                            }\n                            goto label_408c1c;\n                        }\n                        goto label_408b50;\n                    }\n                    rdx_7 = *arg3;\n                label_4084ce:\n                    if (rdx_7 <= rbx_4)\n                    {\n                        do\n                        {\n                            rdx_7 = (rdx_7 + 1);\n                            *((r13_1 + (rdx_7 << 5)) - 0x20) = 0;\n                        } while (rdx_7 <= rbx_4);\n                        *arg3 = rdx_7;\n                        goto label_4084fb;\n                    }\n                label_4084fb:\n                    void* rax_23 = ((rbx_4 << 5) + r13_1);\n                    int32_t rdx_8 = *rax_23;\n                    if (rdx_8 == 0)\n                    {\n                        *rax_23 = 5;\n                        rbp_1 = rcx_4;\n                        rbx_1 = *rcx_4;\n                    label_408371:\n                        int32_t rax_11 = 0;\n                        while (true)\n                        {\n                            rbp_1 = (rbp_1 + 1);\n                            if (rbx_1 == 0x68)\n                            {\n                                rax_11 = (rax_11 | (1 << (rax_11 & 1)));\n                            }\n                            else if (rbx_1 == 0x4c)\n                            {\n                                rax_11 = (rax_11 | 4);\n                            }\n                            else\n                            {\n                                if ((rbx_1 != 0x6c && (rbx_1 != 0x6a && ((rbx_1 & 0xdf) != 0x5a && rbx_1 != 0x74))))\n                                {\n                                    break;\n                                }\n                                rax_11 = (rax_11 + 8);\n                            }\n                            rbx_1 = *rbp_1;\n                        }\n                        char rdx_9 = (rbx_1 - 0x25);\n                        if (rdx_9 > 0x53)\n                        {\n                            goto label_408978;\n                        }\n                        int32_t rcx_6;\n                        switch (rdx_9)\n                        {\n                            case 0:\n                            {\n                                goto label_4085a1;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 7:\n                            case 8:\n                            case 9:\n                            case 0xa:\n                            case 0xb:\n                            case 0xc:\n                            case 0xd:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1d:\n                            case 0x1f:\n                            case 0x23:\n                            case 0x24:\n                            case 0x25:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x3b:\n                            case 0x3d:\n                            case 0x46:\n                            case 0x48:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x51:\n                            case 0x52:\n                            {\n                                goto label_408978;\n                            }\n                            case 0x1c:\n                            case 0x20:\n                            case 0x21:\n                            case 0x22:\n                            case 0x3c:\n                            case 0x40:\n                            case 0x41:\n                            case 0x42:\n                            {\n                                rcx_6 = 0xc;\n                                if (rax_11 <= 0xf)\n                                {\n                                    int32_t rcx_12;\n                                    rcx_12 = (rax_11 & 4) != 0;\n                                    rcx_6 = (rcx_12 + 0xb);\n                                }\n                                goto label_408549;\n                            }\n                            case 0x1e:\n                            {\n                                rcx_6 = 0xe;\n                                rbx_1 = 0x63;\n                                goto label_408549;\n                            }\n                            case 0x2e:\n                            {\n                                rcx_6 = 0x10;\n                                rbx_1 = 0x73;\n                                goto label_408549;\n                            }\n                            case 0x33:\n                            case 0x4a:\n                            case 0x50:\n                            case 0x53:\n                            {\n                                rcx_6 = 0xa;\n                                if ((rax_11 <= 0xf && (rax_11 & 4) == 0))\n                                {\n                                    rcx_6 = 8;\n                                    if (rax_11 <= 7)\n                                    {\n                                        rcx_6 = 2;\n                                        if ((rax_11 & 2) == 0)\n                                        {\n                                            rcx_6 = (((2 - 2) & 2) + 4);\n                                        }\n                                    }\n                                }\n                                goto label_408549;\n                            }\n                            case 0x3e:\n                            {\n                                int32_t rcx_8;\n                                rcx_8 = rax_11 > 7;\n                                rcx_6 = (rcx_8 + 0xd);\n                                goto label_408549;\n                            }\n                            case 0x3f:\n                            case 0x44:\n                            {\n                                rcx_6 = 9;\n                                if ((rax_11 <= 0xf && (rax_11 & 4) == 0))\n                                {\n                                    rcx_6 = 7;\n                                    if (rax_11 <= 7)\n                                    {\n                                        rcx_6 = 1;\n                                        if ((rax_11 & 2) == 0)\n                                        {\n                                            rcx_6 = (((1 - 1) & 2) + 3);\n                                        }\n                                    }\n                                }\n                                goto label_408549;\n                            }\n                            case 0x49:\n                            {\n                                rcx_6 = 0x16;\n                                if ((rax_11 <= 0xf && (rax_11 & 4) == 0))\n                                {\n                                    rcx_6 = 0x15;\n                                    if (rax_11 <= 7)\n                                    {\n                                        rcx_6 = 0x12;\n                                        if ((rax_11 & 2) == 0)\n                                        {\n                                            int32_t rcx_9;\n                                            rcx_9 = (rax_11 & 1) == 0;\n                                            rcx_6 = (rcx_9 + 0x13);\n                                        }\n                                    }\n                                }\n                                goto label_408549;\n                            }\n                            case 0x4b:\n                            {\n                                rcx_6 = 0x11;\n                                goto label_408549;\n                            }\n                            case 0x4e:\n                            {\n                                int32_t rcx_5;\n                                rcx_5 = rax_11 > 7;\n                                rcx_6 = (rcx_5 + 0xf);\n                            label_408549:\n                                if (r14_1 == -1)\n                                {\n                                    void* rax_51 = (var_68 + 1);\n                                    r12_1[0xa] = var_68;\n                                    if (var_68 == -1)\n                                    {\n                                        goto label_408978;\n                                    }\n                                    r14_1 = var_68;\n                                    var_68 = rax_51;\n                                    goto label_408558;\n                                }\n                                r12_1[0xa] = r14_1;\n                            label_408558:\n                                r13_1 = arg3[1];\n                                if (r9 > r14_1)\n                                {\n                                    goto label_408565;\n                                }\n                                void* r9_2 = (r9 + r9);\n                                void* rax_48 = (r14_1 + 1);\n                                if (r9_2 <= r14_1)\n                                {\n                                    r9_2 = rax_48;\n                                }\n                                if (r9_2 > 0x7ffffffffffffff)\n                                {\n                                    goto label_408b4d;\n                                }\n                                size_t rsi_13 = (r9_2 << 5);\n                                var_58 = rcx_6;\n                                void* rax_58;\n                                if (rax == r13_1)\n                                {\n                                    rax_58 = malloc(rsi_13);\n                                    rcx_6 = var_58;\n                                    r9 = r9_2;\n                                    if (rax_58 == 0)\n                                    {\n                                        goto label_408b69;\n                                    }\n                                    goto label_408b09;\n                                }\n                                void* rax_49 = realloc(r13_1, rsi_13);\n                                rcx_6 = var_58;\n                                r13_1 = rax_49;\n                                r9 = r9_2;\n                                if (rax_49 == 0)\n                                {\n                                    goto label_408ea3;\n                                }\n                                if (rax != arg3[1])\n                                {\n                                    goto label_408a4b;\n                                }\n                                rax_58 = r13_1;\n                                r13_1 = rax;\n                            label_408b09:\n                                void* rsi_16 = r13_1;\n                                r13_1 = rax_58;\n                                var_58 = rcx_6;\n                                memcpy(rax_58, rsi_16, (*arg3 << 5));\n                                rcx_6 = var_58;\n                            label_408a4b:\n                                arg3[1] = r13_1;\n                            label_408565:\n                                int64_t rax_24 = *arg3;\n                                if (rax_24 <= r14_1)\n                                {\n                                    do\n                                    {\n                                        rax_24 = (rax_24 + 1);\n                                        *((r13_1 + (rax_24 << 5)) - 0x20) = 0;\n                                    } while (rax_24 <= r14_1);\n                                    *arg3 = rax_24;\n                                }\n                                void* rax_25 = (r13_1 + (r14_1 << 5));\n                                int32_t rdx_13 = *rax_25;\n                                if (rdx_13 == 0)\n                                {\n                                    *rax_25 = rcx_6;\n                                label_4085a1:\n                                    r12_1[9] = rbx_1;\n                                    int64_t rax_26 = *r8;\n                                    r12_1[1] = rbp_1;\n                                    r13 = (rax_26 + 1);\n                                    *r8 = r13;\n                                    if (r11 > r13)\n                                    {\n                                        rcx = r8[1];\n                                    label_408228:\n                                        arg1 = rbp_1;\n                                        continue;\n                                    }\n                                    else\n                                    {\n                                        if (r11 >= 0)\n                                        {\n                                            int64_t rbx_5 = (r11 + r11);\n                                            if (rbx_5 > 0x2e8ba2e8ba2e8ba)\n                                            {\n                                                goto label_408ea3;\n                                            }\n                                            int64_t r12_2 = r8[1];\n                                            int64_t rsi_3 = (r11 * 0xb0);\n                                            if (var_60 == r12_2)\n                                            {\n                                                void* rax_38 = malloc(rsi_3);\n                                                rcx = rax_38;\n                                                if (rax_38 != 0)\n                                                {\n                                                label_408798:\n                                                    rcx = memcpy(rcx, r12_2, (r13 * 0x58));\n                                                    r13 = *r8;\n                                                label_40863f:\n                                                    r8[1] = rcx;\n                                                    r11 = rbx_5;\n                                                    goto label_408228;\n                                                }\n                                                rsi_7 = arg3[1];\n                                                if (rax == rsi_7)\n                                                {\n                                                    break;\n                                                }\n                                                goto label_408b5f;\n                                            }\n                                            void* rax_28 = realloc(r12_2, rsi_3);\n                                            rcx = rax_28;\n                                            if (rax_28 == 0)\n                                            {\n                                                goto label_408ea3;\n                                            }\n                                            r12_2 = r8[1];\n                                            r13 = *r8;\n                                            if (var_60 == r12_2)\n                                            {\n                                                goto label_408798;\n                                            }\n                                            goto label_40863f;\n                                        }\n                                    label_408ea3:\n                                        rsi_7 = arg3[1];\n                                    }\n                                    goto label_408b50;\n                                }\n                                if (rdx_13 == rcx_6)\n                                {\n                                    goto label_4085a1;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                    else if (rdx_8 == 5)\n                    {\n                        rbx_1 = *rcx_4;\n                        rbp_1 = rcx_4;\n                        goto label_408371;\n                    }\n                }\n            }\n            if (rax == r13_1)\n            {\n                goto label_408995;\n            }\n            free(r13_1);\n        label_408995:\n            int64_t rdi_7 = r8[1];\n            if (var_60 != rdi_7)\n            {\n                free(rdi_7);\n            }\n            *__errno_location() = 0x16;\n            rax_6 = 0xffffffff;\n        }\n        return rax_6;\n    }\n    *__errno_location() = 0xc;\n    return 0xffffffff;\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x408ec0",
            "funcEndAddr": "0x408f1d",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x408f20",
            "funcEndAddr": "0x408f21",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_408f30",
            "funcStartAddr": "0x408f30",
            "funcEndAddr": "0x408f48",
            "decompiledFuncCode": "int64_t sub_408f30(void (* arg1)(void*))\n{\n    int64_t rdx = data_60d1e8;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_408f48",
            "funcStartAddr": "0x408f48",
            "funcEndAddr": "0x408f68",
            "decompiledFuncCode": "int64_t sub_408f48(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_60ce30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}