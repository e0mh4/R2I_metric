{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_cp.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 331,
    "funcInfo": [
        {
            "funcName": "sub_402340",
            "funcStartAddr": "0x402340",
            "funcEndAddr": "0x40234c",
            "decompiledFuncCode": "int64_t sub_402340()\n{\n    int64_t var_8 = data_61b008;\n    /* jump -> data_61b010 */\n}\n\n"
        },
        {
            "funcName": "sub_402356",
            "funcStartAddr": "0x402356",
            "funcEndAddr": "0x402360",
            "decompiledFuncCode": "int64_t sub_402356()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402366",
            "funcStartAddr": "0x402366",
            "funcEndAddr": "0x402370",
            "decompiledFuncCode": "int64_t sub_402366()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402376",
            "funcStartAddr": "0x402376",
            "funcEndAddr": "0x402380",
            "decompiledFuncCode": "int64_t sub_402376()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402386",
            "funcStartAddr": "0x402386",
            "funcEndAddr": "0x402390",
            "decompiledFuncCode": "int64_t sub_402386()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402396",
            "funcStartAddr": "0x402396",
            "funcEndAddr": "0x4023a0",
            "decompiledFuncCode": "int64_t sub_402396()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4023a6",
            "funcStartAddr": "0x4023a6",
            "funcEndAddr": "0x4023b0",
            "decompiledFuncCode": "int64_t sub_4023a6()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4023b6",
            "funcStartAddr": "0x4023b6",
            "funcEndAddr": "0x4023c0",
            "decompiledFuncCode": "int64_t sub_4023b6()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4023c6",
            "funcStartAddr": "0x4023c6",
            "funcEndAddr": "0x4023d0",
            "decompiledFuncCode": "int64_t sub_4023c6()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4023d6",
            "funcStartAddr": "0x4023d6",
            "funcEndAddr": "0x4023e0",
            "decompiledFuncCode": "int64_t sub_4023d6()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4023e6",
            "funcStartAddr": "0x4023e6",
            "funcEndAddr": "0x4023f0",
            "decompiledFuncCode": "int64_t sub_4023e6()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4023f6",
            "funcStartAddr": "0x4023f6",
            "funcEndAddr": "0x402400",
            "decompiledFuncCode": "int64_t sub_4023f6()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402406",
            "funcStartAddr": "0x402406",
            "funcEndAddr": "0x402410",
            "decompiledFuncCode": "int64_t sub_402406()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402416",
            "funcStartAddr": "0x402416",
            "funcEndAddr": "0x402420",
            "decompiledFuncCode": "int64_t sub_402416()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402426",
            "funcStartAddr": "0x402426",
            "funcEndAddr": "0x402430",
            "decompiledFuncCode": "int64_t sub_402426()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402436",
            "funcStartAddr": "0x402436",
            "funcEndAddr": "0x402440",
            "decompiledFuncCode": "int64_t sub_402436()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402446",
            "funcStartAddr": "0x402446",
            "funcEndAddr": "0x402450",
            "decompiledFuncCode": "int64_t sub_402446()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402456",
            "funcStartAddr": "0x402456",
            "funcEndAddr": "0x402460",
            "decompiledFuncCode": "int64_t sub_402456()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402466",
            "funcStartAddr": "0x402466",
            "funcEndAddr": "0x402470",
            "decompiledFuncCode": "int64_t sub_402466()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402476",
            "funcStartAddr": "0x402476",
            "funcEndAddr": "0x402480",
            "decompiledFuncCode": "int64_t sub_402476()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402486",
            "funcStartAddr": "0x402486",
            "funcEndAddr": "0x402490",
            "decompiledFuncCode": "int64_t sub_402486()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402496",
            "funcStartAddr": "0x402496",
            "funcEndAddr": "0x4024a0",
            "decompiledFuncCode": "int64_t sub_402496()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4024a6",
            "funcStartAddr": "0x4024a6",
            "funcEndAddr": "0x4024b0",
            "decompiledFuncCode": "int64_t sub_4024a6()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4024b6",
            "funcStartAddr": "0x4024b6",
            "funcEndAddr": "0x4024c0",
            "decompiledFuncCode": "int64_t sub_4024b6()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4024c6",
            "funcStartAddr": "0x4024c6",
            "funcEndAddr": "0x4024d0",
            "decompiledFuncCode": "int64_t sub_4024c6()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4024d6",
            "funcStartAddr": "0x4024d6",
            "funcEndAddr": "0x4024e0",
            "decompiledFuncCode": "int64_t sub_4024d6()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4024e6",
            "funcStartAddr": "0x4024e6",
            "funcEndAddr": "0x4024f0",
            "decompiledFuncCode": "int64_t sub_4024e6()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4024f6",
            "funcStartAddr": "0x4024f6",
            "funcEndAddr": "0x402500",
            "decompiledFuncCode": "int64_t sub_4024f6()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402506",
            "funcStartAddr": "0x402506",
            "funcEndAddr": "0x402510",
            "decompiledFuncCode": "int64_t sub_402506()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402516",
            "funcStartAddr": "0x402516",
            "funcEndAddr": "0x402520",
            "decompiledFuncCode": "int64_t sub_402516()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402526",
            "funcStartAddr": "0x402526",
            "funcEndAddr": "0x402530",
            "decompiledFuncCode": "int64_t sub_402526()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402536",
            "funcStartAddr": "0x402536",
            "funcEndAddr": "0x402540",
            "decompiledFuncCode": "int64_t sub_402536()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402546",
            "funcStartAddr": "0x402546",
            "funcEndAddr": "0x402550",
            "decompiledFuncCode": "int64_t sub_402546()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402556",
            "funcStartAddr": "0x402556",
            "funcEndAddr": "0x402560",
            "decompiledFuncCode": "int64_t sub_402556()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402566",
            "funcStartAddr": "0x402566",
            "funcEndAddr": "0x402570",
            "decompiledFuncCode": "int64_t sub_402566()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402576",
            "funcStartAddr": "0x402576",
            "funcEndAddr": "0x402580",
            "decompiledFuncCode": "int64_t sub_402576()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402586",
            "funcStartAddr": "0x402586",
            "funcEndAddr": "0x402590",
            "decompiledFuncCode": "int64_t sub_402586()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402596",
            "funcStartAddr": "0x402596",
            "funcEndAddr": "0x4025a0",
            "decompiledFuncCode": "int64_t sub_402596()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4025a6",
            "funcStartAddr": "0x4025a6",
            "funcEndAddr": "0x4025b0",
            "decompiledFuncCode": "int64_t sub_4025a6()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4025b6",
            "funcStartAddr": "0x4025b6",
            "funcEndAddr": "0x4025c0",
            "decompiledFuncCode": "int64_t sub_4025b6()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4025c6",
            "funcStartAddr": "0x4025c6",
            "funcEndAddr": "0x4025d0",
            "decompiledFuncCode": "int64_t sub_4025c6()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4025d6",
            "funcStartAddr": "0x4025d6",
            "funcEndAddr": "0x4025e0",
            "decompiledFuncCode": "int64_t sub_4025d6()\n{\n    int64_t var_8 = 0x28;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4025e6",
            "funcStartAddr": "0x4025e6",
            "funcEndAddr": "0x4025f0",
            "decompiledFuncCode": "int64_t sub_4025e6()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4025f6",
            "funcStartAddr": "0x4025f6",
            "funcEndAddr": "0x402600",
            "decompiledFuncCode": "int64_t sub_4025f6()\n{\n    int64_t var_8 = 0x2a;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402606",
            "funcStartAddr": "0x402606",
            "funcEndAddr": "0x402610",
            "decompiledFuncCode": "int64_t sub_402606()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402616",
            "funcStartAddr": "0x402616",
            "funcEndAddr": "0x402620",
            "decompiledFuncCode": "int64_t sub_402616()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402626",
            "funcStartAddr": "0x402626",
            "funcEndAddr": "0x402630",
            "decompiledFuncCode": "int64_t sub_402626()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402636",
            "funcStartAddr": "0x402636",
            "funcEndAddr": "0x402640",
            "decompiledFuncCode": "int64_t sub_402636()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402646",
            "funcStartAddr": "0x402646",
            "funcEndAddr": "0x402650",
            "decompiledFuncCode": "int64_t sub_402646()\n{\n    int64_t var_8 = 0x2f;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402656",
            "funcStartAddr": "0x402656",
            "funcEndAddr": "0x402660",
            "decompiledFuncCode": "int64_t sub_402656()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402666",
            "funcStartAddr": "0x402666",
            "funcEndAddr": "0x402670",
            "decompiledFuncCode": "int64_t sub_402666()\n{\n    int64_t var_8 = 0x31;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402676",
            "funcStartAddr": "0x402676",
            "funcEndAddr": "0x402680",
            "decompiledFuncCode": "int64_t sub_402676()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402686",
            "funcStartAddr": "0x402686",
            "funcEndAddr": "0x402690",
            "decompiledFuncCode": "int64_t sub_402686()\n{\n    int64_t var_8 = 0x33;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402696",
            "funcStartAddr": "0x402696",
            "funcEndAddr": "0x4026a0",
            "decompiledFuncCode": "int64_t sub_402696()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4026a6",
            "funcStartAddr": "0x4026a6",
            "funcEndAddr": "0x4026b0",
            "decompiledFuncCode": "int64_t sub_4026a6()\n{\n    int64_t var_8 = 0x35;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4026b6",
            "funcStartAddr": "0x4026b6",
            "funcEndAddr": "0x4026c0",
            "decompiledFuncCode": "int64_t sub_4026b6()\n{\n    int64_t var_8 = 0x36;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4026c6",
            "funcStartAddr": "0x4026c6",
            "funcEndAddr": "0x4026d0",
            "decompiledFuncCode": "int64_t sub_4026c6()\n{\n    int64_t var_8 = 0x37;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4026d6",
            "funcStartAddr": "0x4026d6",
            "funcEndAddr": "0x4026e0",
            "decompiledFuncCode": "int64_t sub_4026d6()\n{\n    int64_t var_8 = 0x38;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4026e6",
            "funcStartAddr": "0x4026e6",
            "funcEndAddr": "0x4026f0",
            "decompiledFuncCode": "int64_t sub_4026e6()\n{\n    int64_t var_8 = 0x39;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4026f6",
            "funcStartAddr": "0x4026f6",
            "funcEndAddr": "0x402700",
            "decompiledFuncCode": "int64_t sub_4026f6()\n{\n    int64_t var_8 = 0x3a;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402706",
            "funcStartAddr": "0x402706",
            "funcEndAddr": "0x402710",
            "decompiledFuncCode": "int64_t sub_402706()\n{\n    int64_t var_8 = 0x3b;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402716",
            "funcStartAddr": "0x402716",
            "funcEndAddr": "0x402720",
            "decompiledFuncCode": "int64_t sub_402716()\n{\n    int64_t var_8 = 0x3c;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402726",
            "funcStartAddr": "0x402726",
            "funcEndAddr": "0x402730",
            "decompiledFuncCode": "int64_t sub_402726()\n{\n    int64_t var_8 = 0x3d;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402736",
            "funcStartAddr": "0x402736",
            "funcEndAddr": "0x402740",
            "decompiledFuncCode": "int64_t sub_402736()\n{\n    int64_t var_8 = 0x3e;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402746",
            "funcStartAddr": "0x402746",
            "funcEndAddr": "0x402750",
            "decompiledFuncCode": "int64_t sub_402746()\n{\n    int64_t var_8 = 0x3f;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402756",
            "funcStartAddr": "0x402756",
            "funcEndAddr": "0x402760",
            "decompiledFuncCode": "int64_t sub_402756()\n{\n    int64_t var_8 = 0x40;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402766",
            "funcStartAddr": "0x402766",
            "funcEndAddr": "0x402770",
            "decompiledFuncCode": "int64_t sub_402766()\n{\n    int64_t var_8 = 0x41;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402776",
            "funcStartAddr": "0x402776",
            "funcEndAddr": "0x402780",
            "decompiledFuncCode": "int64_t sub_402776()\n{\n    int64_t var_8 = 0x42;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402786",
            "funcStartAddr": "0x402786",
            "funcEndAddr": "0x402790",
            "decompiledFuncCode": "int64_t sub_402786()\n{\n    int64_t var_8 = 0x43;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402796",
            "funcStartAddr": "0x402796",
            "funcEndAddr": "0x4027a0",
            "decompiledFuncCode": "int64_t sub_402796()\n{\n    int64_t var_8 = 0x44;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4027a6",
            "funcStartAddr": "0x4027a6",
            "funcEndAddr": "0x4027b0",
            "decompiledFuncCode": "int64_t sub_4027a6()\n{\n    int64_t var_8 = 0x45;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4027b6",
            "funcStartAddr": "0x4027b6",
            "funcEndAddr": "0x4027c0",
            "decompiledFuncCode": "int64_t sub_4027b6()\n{\n    int64_t var_8 = 0x46;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4027c6",
            "funcStartAddr": "0x4027c6",
            "funcEndAddr": "0x4027d0",
            "decompiledFuncCode": "int64_t sub_4027c6()\n{\n    int64_t var_8 = 0x47;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4027d6",
            "funcStartAddr": "0x4027d6",
            "funcEndAddr": "0x4027e0",
            "decompiledFuncCode": "int64_t sub_4027d6()\n{\n    int64_t var_8 = 0x48;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4027e6",
            "funcStartAddr": "0x4027e6",
            "funcEndAddr": "0x4027f0",
            "decompiledFuncCode": "int64_t sub_4027e6()\n{\n    int64_t var_8 = 0x49;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402816",
            "funcStartAddr": "0x402816",
            "funcEndAddr": "0x402820",
            "decompiledFuncCode": "int64_t sub_402816()\n{\n    int64_t var_8 = 0x4c;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402826",
            "funcStartAddr": "0x402826",
            "funcEndAddr": "0x402830",
            "decompiledFuncCode": "int64_t sub_402826()\n{\n    int64_t var_8 = 0x4d;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402856",
            "funcStartAddr": "0x402856",
            "funcEndAddr": "0x402860",
            "decompiledFuncCode": "int64_t sub_402856()\n{\n    int64_t var_8 = 0x50;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402866",
            "funcStartAddr": "0x402866",
            "funcEndAddr": "0x402870",
            "decompiledFuncCode": "int64_t sub_402866()\n{\n    int64_t var_8 = 0x51;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402876",
            "funcStartAddr": "0x402876",
            "funcEndAddr": "0x402880",
            "decompiledFuncCode": "int64_t sub_402876()\n{\n    int64_t var_8 = 0x52;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402886",
            "funcStartAddr": "0x402886",
            "funcEndAddr": "0x402890",
            "decompiledFuncCode": "int64_t sub_402886()\n{\n    int64_t var_8 = 0x53;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402896",
            "funcStartAddr": "0x402896",
            "funcEndAddr": "0x4028a0",
            "decompiledFuncCode": "int64_t sub_402896()\n{\n    int64_t var_8 = 0x54;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4028a6",
            "funcStartAddr": "0x4028a6",
            "funcEndAddr": "0x4028b0",
            "decompiledFuncCode": "int64_t sub_4028a6()\n{\n    int64_t var_8 = 0x55;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4028b6",
            "funcStartAddr": "0x4028b6",
            "funcEndAddr": "0x4028c0",
            "decompiledFuncCode": "int64_t sub_4028b6()\n{\n    int64_t var_8 = 0x56;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4028c6",
            "funcStartAddr": "0x4028c6",
            "funcEndAddr": "0x4028d0",
            "decompiledFuncCode": "int64_t sub_4028c6()\n{\n    int64_t var_8 = 0x57;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4028d6",
            "funcStartAddr": "0x4028d6",
            "funcEndAddr": "0x4028e0",
            "decompiledFuncCode": "int64_t sub_4028d6()\n{\n    int64_t var_8 = 0x58;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4028e6",
            "funcStartAddr": "0x4028e6",
            "funcEndAddr": "0x4028f0",
            "decompiledFuncCode": "int64_t sub_4028e6()\n{\n    int64_t var_8 = 0x59;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4028f6",
            "funcStartAddr": "0x4028f6",
            "funcEndAddr": "0x402900",
            "decompiledFuncCode": "int64_t sub_4028f6()\n{\n    int64_t var_8 = 0x5a;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402906",
            "funcStartAddr": "0x402906",
            "funcEndAddr": "0x402910",
            "decompiledFuncCode": "int64_t sub_402906()\n{\n    int64_t var_8 = 0x5b;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402916",
            "funcStartAddr": "0x402916",
            "funcEndAddr": "0x402920",
            "decompiledFuncCode": "int64_t sub_402916()\n{\n    int64_t var_8 = 0x5c;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402926",
            "funcStartAddr": "0x402926",
            "funcEndAddr": "0x402930",
            "decompiledFuncCode": "int64_t sub_402926()\n{\n    int64_t var_8 = 0x5d;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402936",
            "funcStartAddr": "0x402936",
            "funcEndAddr": "0x402940",
            "decompiledFuncCode": "int64_t sub_402936()\n{\n    int64_t var_8 = 0x5e;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402946",
            "funcStartAddr": "0x402946",
            "funcEndAddr": "0x402950",
            "decompiledFuncCode": "int64_t sub_402946()\n{\n    int64_t var_8 = 0x5f;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402956",
            "funcStartAddr": "0x402956",
            "funcEndAddr": "0x402960",
            "decompiledFuncCode": "int64_t sub_402956()\n{\n    int64_t var_8 = 0x60;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402966",
            "funcStartAddr": "0x402966",
            "funcEndAddr": "0x402970",
            "decompiledFuncCode": "int64_t sub_402966()\n{\n    int64_t var_8 = 0x61;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402976",
            "funcStartAddr": "0x402976",
            "funcEndAddr": "0x402980",
            "decompiledFuncCode": "int64_t sub_402976()\n{\n    int64_t var_8 = 0x62;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402986",
            "funcStartAddr": "0x402986",
            "funcEndAddr": "0x402990",
            "decompiledFuncCode": "int64_t sub_402986()\n{\n    int64_t var_8 = 0x63;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402996",
            "funcStartAddr": "0x402996",
            "funcEndAddr": "0x4029a0",
            "decompiledFuncCode": "int64_t sub_402996()\n{\n    int64_t var_8 = 0x64;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4029a6",
            "funcStartAddr": "0x4029a6",
            "funcEndAddr": "0x4029b0",
            "decompiledFuncCode": "int64_t sub_4029a6()\n{\n    int64_t var_8 = 0x65;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4029b6",
            "funcStartAddr": "0x4029b6",
            "funcEndAddr": "0x4029c0",
            "decompiledFuncCode": "int64_t sub_4029b6()\n{\n    int64_t var_8 = 0x66;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4029c6",
            "funcStartAddr": "0x4029c6",
            "funcEndAddr": "0x4029d0",
            "decompiledFuncCode": "int64_t sub_4029c6()\n{\n    int64_t var_8 = 0x67;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4029d6",
            "funcStartAddr": "0x4029d6",
            "funcEndAddr": "0x4029e0",
            "decompiledFuncCode": "int64_t sub_4029d6()\n{\n    int64_t var_8 = 0x68;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_4029e6",
            "funcStartAddr": "0x4029e6",
            "funcEndAddr": "0x4029f0",
            "decompiledFuncCode": "int64_t sub_4029e6()\n{\n    int64_t var_8 = 0x69;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402a16",
            "funcStartAddr": "0x402a16",
            "funcEndAddr": "0x402a20",
            "decompiledFuncCode": "int64_t sub_402a16()\n{\n    int64_t var_8 = 0x6c;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "sub_402a26",
            "funcStartAddr": "0x402a26",
            "funcEndAddr": "0x402a30",
            "decompiledFuncCode": "int64_t sub_402a26()\n{\n    int64_t var_8 = 0x6d;\n    /* tailcall */\n    return sub_402340();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x402a90",
            "funcEndAddr": "0x4031a0",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    char** rbx = argv;\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_40c3a0(*argv);\n    void var_128;\n    int32_t var_120;\n    setlocale(6, &data_416f5c[0x1b], rdx, rcx, r8, r9, var_128, var_120);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    sub_4128f0(sub_40a800);\n    data_61b4ca = 0;\n    int32_t var_118;\n    sub_405170(&var_118);\n    int64_t var_110 = 0x200000004;\n    int32_t var_e4 = 0;\n    int32_t var_114 = 1;\n    int64_t var_108 = 0x100000000;\n    int16_t var_100 = 0;\n    int32_t var_fc = 0;\n    int64_t var_f8 = 0x1000000;\n    int64_t var_f0 = 0;\n    char var_122 = 0;\n    int64_t var_e0 = 0;\n    int64_t var_d8 = 0;\n    int64_t var_120_1 = 0;\n    char var_121 = 0;\n    bool var_e8 = getenv(\"POSIXLY_CORRECT\") != 0;\n    char* r12 = nullptr;\n    char* r14 = nullptr;\n    int64_t r15 = 0;\n    char r13 = 0;\n    while (true)\n    {\n        int32_t rax_1 = getopt_long(argc, rbx, \"abdfHilLnprst:uvxPRS:TZ\", &data_413540, nullptr);\n        if (rax_1 == 0xffffffff)\n        {\n            char const* const rsi_7;\n            int32_t rax_19;\n            if (r13 != 0)\n            {\n                rsi_7 = \"options --backup and --no-clobbe\u2026\";\n                if (var_110 == 2)\n                {\n                    goto label_4030c5;\n                }\n                if ((var_e4 != 2 || (var_e4 == 2 && *var_110[4] == 2)))\n                {\n                    rax_19 = sub_40a730(dcgettext(nullptr, \"backup type\", 5), r14);\n                    goto label_402f2f;\n                }\n            }\n            else\n            {\n                if (var_e4 != 2)\n                {\n                    rax_19 = 0;\n                label_402f2f:\n                    var_118 = rax_19;\n                    sub_40a180(r15);\n                    if (var_114 == 1)\n                    {\n                        int32_t var_114_2 = 4;\n                    }\n                    *var_f8[5] = 0;\n                    if (var_120_1 == 0)\n                    {\n                        sub_409500();\n                        int64_t rdx_4 = data_61b43c;\n                        return (sub_4041b0((argc - rdx_4), &rbx[rdx_4], r12, var_122, &var_118) ^ 1);\n                    }\n                    int32_t* rax_30 = __errno_location();\n                    *rax_30 = 0x5f;\n                    error(1, *rax_30, dcgettext(nullptr, \"failed to set default file creat\u2026\", 5), sub_40e020(var_120_1));\n                    error(1, 0, dcgettext(nullptr, \"cannot preserve extended attribu\u2026\", 5));\n                    goto label_403142;\n                }\n                if (*var_110[4] == 2)\n                {\n                    rax_19 = 0;\n                    goto label_402f2f;\n                }\n            }\n            rsi_7 = \"--reflink can be used only with \u2026\";\n        label_4030c5:\n            error(0, 0, dcgettext(nullptr, rsi_7, 5));\n        label_4030cf:\n            sub_403c80(1);\n            /* no return */\n        }\n        uint64_t rax_2 = (rax_1 + 0x83);\n        if (rax_2 > 0x10b)\n        {\n            goto label_4030cf;\n        }\n        switch (rax_2)\n        {\n            case 0:\n            {\n                int64_t var_130 = 0;\n                char const* const var_138 = \"Jim Meyering\";\n                sub_40ff60(stdout, &data_4129a5, \"GNU coreutils\", data_61b3c0);\n                exit(0);\n                /* no return */\n            }\n            case 1:\n            {\n                sub_403c80(0);\n                /* no return */\n            }\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 0xa:\n            case 0xb:\n            case 0xc:\n            case 0xd:\n            case 0xe:\n            case 0xf:\n            case 0x10:\n            case 0x11:\n            case 0x12:\n            case 0x13:\n            case 0x14:\n            case 0x15:\n            case 0x16:\n            case 0x17:\n            case 0x18:\n            case 0x19:\n            case 0x1a:\n            case 0x1b:\n            case 0x1c:\n            case 0x1d:\n            case 0x1e:\n            case 0x1f:\n            case 0x20:\n            case 0x21:\n            case 0x22:\n            case 0x23:\n            case 0x24:\n            case 0x25:\n            case 0x26:\n            case 0x27:\n            case 0x28:\n            case 0x29:\n            case 0x2a:\n            case 0x2b:\n            case 0x2c:\n            case 0x2d:\n            case 0x2e:\n            case 0x2f:\n            case 0x30:\n            case 0x31:\n            case 0x32:\n            case 0x33:\n            case 0x34:\n            case 0x35:\n            case 0x36:\n            case 0x37:\n            case 0x38:\n            case 0x39:\n            case 0x3a:\n            case 0x3b:\n            case 0x3c:\n            case 0x3d:\n            case 0x3e:\n            case 0x3f:\n            case 0x40:\n            case 0x41:\n            case 0x42:\n            case 0x43:\n            case 0x44:\n            case 0x45:\n            case 0x46:\n            case 0x47:\n            case 0x48:\n            case 0x49:\n            case 0x4a:\n            case 0x4b:\n            case 0x4c:\n            case 0x4d:\n            case 0x4e:\n            case 0x4f:\n            case 0x50:\n            case 0x51:\n            case 0x52:\n            case 0x53:\n            case 0x54:\n            case 0x55:\n            case 0x56:\n            case 0x57:\n            case 0x58:\n            case 0x59:\n            case 0x5a:\n            case 0x5b:\n            case 0x5c:\n            case 0x5d:\n            case 0x5e:\n            case 0x5f:\n            case 0x60:\n            case 0x61:\n            case 0x62:\n            case 0x63:\n            case 0x64:\n            case 0x65:\n            case 0x66:\n            case 0x67:\n            case 0x68:\n            case 0x69:\n            case 0x6a:\n            case 0x6b:\n            case 0x6c:\n            case 0x6d:\n            case 0x6e:\n            case 0x6f:\n            case 0x70:\n            case 0x71:\n            case 0x72:\n            case 0x73:\n            case 0x74:\n            case 0x75:\n            case 0x76:\n            case 0x77:\n            case 0x78:\n            case 0x79:\n            case 0x7a:\n            case 0x7b:\n            case 0x7c:\n            case 0x7d:\n            case 0x7e:\n            case 0x7f:\n            case 0x80:\n            case 0x81:\n            case 0x83:\n            case 0x84:\n            case 0x85:\n            case 0x86:\n            case 0x87:\n            case 0x88:\n            case 0x89:\n            case 0x8a:\n            case 0x8b:\n            case 0x8c:\n            case 0x8d:\n            case 0x8e:\n            case 0x8f:\n            case 0x90:\n            case 0x91:\n            case 0x92:\n            case 0x93:\n            case 0x94:\n            case 0x95:\n            case 0x96:\n            case 0x97:\n            case 0x98:\n            case 0x99:\n            case 0x9a:\n            case 0x9b:\n            case 0x9c:\n            case 0x9d:\n            case 0x9e:\n            case 0x9f:\n            case 0xa0:\n            case 0xa1:\n            case 0xa2:\n            case 0xa3:\n            case 0xa4:\n            case 0xa5:\n            case 0xa6:\n            case 0xa7:\n            case 0xa8:\n            case 0xa9:\n            case 0xaa:\n            case 0xab:\n            case 0xac:\n            case 0xad:\n            case 0xae:\n            case 0xaf:\n            case 0xb0:\n            case 0xb1:\n            case 0xb2:\n            case 0xb3:\n            case 0xb4:\n            case 0xb5:\n            case 0xb6:\n            case 0xb7:\n            case 0xb8:\n            case 0xb9:\n            case 0xba:\n            case 0xbb:\n            case 0xbc:\n            case 0xbd:\n            case 0xbe:\n            case 0xbf:\n            case 0xc0:\n            case 0xc1:\n            case 0xc2:\n            case 0xc3:\n            case 0xc4:\n            case 0xc5:\n            case 0xc6:\n            case 0xc7:\n            case 0xc8:\n            case 0xc9:\n            case 0xca:\n            case 0xcc:\n            case 0xcd:\n            case 0xce:\n            case 0xd0:\n            case 0xd1:\n            case 0xd2:\n            case 0xd4:\n            case 0xd8:\n            case 0xd9:\n            case 0xda:\n            case 0xdb:\n            case 0xdc:\n            case 0xde:\n            case 0xdf:\n            case 0xe0:\n            case 0xe1:\n            case 0xe2:\n            case 0xe3:\n            case 0xe6:\n            case 0xe8:\n            case 0xea:\n            case 0xeb:\n            case 0xed:\n            case 0xee:\n            case 0xf0:\n            case 0xf2:\n            case 0xf4:\n            case 0xfa:\n            case 0xfc:\n            case 0xfd:\n            case 0xfe:\n            case 0xff:\n            case 0x100:\n            case 0x101:\n            case 0x102:\n            {\n                goto label_4030cf;\n            }\n            case 0xcb:\n            {\n                var_114 = 3;\n                continue;\n            }\n            case 0xcf:\n            {\n                var_114 = 4;\n                continue;\n            }\n            case 0xd3:\n            {\n                var_114 = 2;\n                continue;\n            }\n            case 0xd5:\n            case 0xf5:\n            {\n                *var_f0[2] = 1;\n                continue;\n            }\n            case 0xd6:\n            {\n                r15 = data_61bae0;\n                r13 = 1;\n                continue;\n            }\n            case 0xd7:\n            {\n                var_122 = 1;\n                continue;\n            }\n            case 0xdd:\n            {\n                int64_t rax_4 = data_61bae0;\n                if (data_61b4ca == 0)\n                {\n                    if (rax_4 == 0)\n                    {\n                        continue;\n                    }\n                    else\n                    {\n                        error(0, 0, dcgettext(nullptr, \"warning: ignoring --context; it \u2026\", 5));\n                        continue;\n                    }\n                }\n                else if (rax_4 == 0)\n                {\n                    *var_f8[1] = 1;\n                    continue;\n                }\n                else\n                {\n                    var_120_1 = rax_4;\n                    continue;\n                }\n                break;\n            }\n            case 0xe4:\n            {\n                var_114 = 2;\n                *var_f8[2] = 1;\n                *var_fc[1] = 1;\n                *var_fc[2] = 0x101;\n                *var_f8[4] = 1;\n                if (data_61b4ca != 0)\n                {\n                    *var_f8[5] = 1;\n                }\n                *var_f8[7] = 1;\n                *var_f0[1] = 0x101;\n                continue;\n            }\n            case 0xe5:\n            {\n                char* rax_3 = data_61bae0;\n                r13 = 1;\n                if (rax_3 == 0)\n                {\n                    continue;\n                }\n                else\n                {\n                    r14 = rax_3;\n                    continue;\n                }\n                break;\n            }\n            case 0xe7:\n            {\n                *var_f8[2] = 1;\n                var_114 = 2;\n                continue;\n            }\n            case 0xe9:\n            {\n                *var_108[6] = 1;\n                continue;\n            }\n            case 0xec:\n            {\n                var_110 = 3;\n                continue;\n            }\n            case 0xef:\n            {\n                *var_108[7] = 1;\n                continue;\n            }\n            case 0xf1:\n            {\n                var_110 = 2;\n                continue;\n            }\n            case 0xf7:\n            {\n                if (r12 != 0)\n                {\n                    break;\n                }\n                void var_c8;\n                if (__xstat(1, data_61bae0, &var_c8) != 0)\n                {\n                label_403142:\n                    int64_t rax_36 = sub_40ddd0(4, data_61bae0);\n                    error(1, *__errno_location(), dcgettext(nullptr, \"failed to access %s\", 5), rax_36);\n                    break;\n                }\n                r12 = data_61bae0;\n                int32_t var_b0;\n                if ((var_b0 & 0xf000) == 0x4000)\n                {\n                    continue;\n                }\n                else\n                {\n                    rbx = sub_40ddd0(4, r12);\n                    error(1, 0, dcgettext(nullptr, \"target %s is not a directory\", 5), rbx);\n                }\n                break;\n            }\n            case 0xf8:\n            {\n                *var_f0[5] = 1;\n                continue;\n            }\n            case 0xf9:\n            {\n                *var_f0[6] = 1;\n                continue;\n            }\n            case 0xfb:\n            {\n                var_fc = 1;\n                continue;\n            }\n            case 0x103:\n            {\n                *var_f8[3] = 0;\n                continue;\n            }\n            case 0x104:\n            {\n                var_121 = 1;\n                continue;\n            }\n            case 0x105:\n            {\n                sub_403280(data_61bae0, &var_118, 0);\n                continue;\n            }\n            case 0x106:\n            {\n                data_61b4c9 = 1;\n                continue;\n            }\n            case 0x107:\n            {\n                char* rdi_3 = data_61bae0;\n                if (rdi_3 != 0)\n                {\n                    sub_403280(rdi_3, &var_118, 1);\n                    *var_f8[4] = 1;\n                    continue;\n                }\n                break;\n            }\n            case 0x108:\n            {\n                int64_t rsi_2 = data_61bae0;\n                if (rsi_2 == 0)\n                {\n                    var_e4 = 2;\n                    continue;\n                }\n                else\n                {\n                    var_e4 = *((sub_409ff0(\"--reflink\", rsi_2, &data_413910, 0x413900, 4, data_61b3c8) << 2) + 0x413900);\n                    continue;\n                }\n                break;\n            }\n            case 0x109:\n            {\n                *var_110[4] = *((sub_409ff0(\"--sparse\", data_61bae0, &data_413940, 0x413928, 4, data_61b3c8) << 2) + 0x413928);\n                continue;\n            }\n            case 0x10a:\n            {\n                data_61b4c8 = 1;\n                continue;\n            }\n            case 0x10b:\n            {\n                *var_108[5] = 1;\n                continue;\n            }\n        }\n        if ((rax_2 == 0xf3 || rax_2 == 0x107))\n        {\n            *var_fc[1] = 1;\n            *var_fc[2] = 0x101;\n            *var_f8[4] = 1;\n        }\n        else if ((rax_2 == 0xf6 || rax_2 == 0xf7))\n        {\n            *var_f0[4] = 1;\n        }\n    }\n    void (* rdx_13)();\n    int64_t rsi_13;\n    int64_t rdi_11;\n    rdx_13 = error(1, 0, dcgettext(nullptr, \"multiple target directories spec\u2026\", 5));\n    /* tailcall */\n    return _start(rdi_11, rsi_13, rdx_13);\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x4031a0",
            "funcEndAddr": "0x4031ca",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4031cb",
            "funcStartAddr": "0x4031cb",
            "funcEndAddr": "0x4031ea",
            "decompiledFuncCode": "void sub_4031cb()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_4031ea",
            "funcStartAddr": "0x4031ea",
            "funcEndAddr": "0x403221",
            "decompiledFuncCode": "int64_t sub_4031ea()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_403221",
            "funcStartAddr": "0x403221",
            "funcEndAddr": "0x403278",
            "decompiledFuncCode": "void sub_403221()\n{\n    if (data_61b468 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_61b470;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_61b470 = (rax_1 + 1);\n        *(0x61ae40 + ((rax_1 + 1) << 3))();\n    }\n    sub_4031cb();\n    data_61b468 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_403278",
            "funcStartAddr": "0x403278",
            "funcEndAddr": "0x40327d",
            "decompiledFuncCode": "int64_t j_sub_4031ea()\n{\n    /* tailcall */\n    return sub_4031ea();\n}\n\n"
        },
        {
            "funcName": "sub_403280",
            "funcStartAddr": "0x402a50",
            "funcEndAddr": "0x403312",
            "decompiledFuncCode": "int64_t sub_403280(char* arg1, int64_t arg2, int32_t arg3)\n{\n    void* const r13 = \"--preserve\";\n    char* rax = sub_410310(arg1);\n    if (arg3 == 0)\n    {\n        r13 = \"--no-preserve\";\n    }\n    char* rax_1 = strchr(rax, 0x2c);\n    if (rax_1 != 0)\n    {\n        *rax_1 = 0;\n    }\n    int64_t rax_2 = sub_409ff0(r13, rax, &data_413500, 0x4134e0, 4, data_61b3c8);\n    if (*((rax_2 << 2) + 0x4134e0) > 6)\n    {\n        abort();\n        /* no return */\n    }\n    /* jump -> *((*((rax_2 << 2) + 0x4134e0) << 3) + &data_412c40) */\n}\n\n"
        },
        {
            "funcName": "sub_4033e0",
            "funcStartAddr": "0x4033e0",
            "funcEndAddr": "0x4034a0",
            "decompiledFuncCode": "uint64_t sub_4033e0(char* arg1, struct stat* arg2, char* arg3)\n{\n    int32_t rax = __xstat(1, arg1, arg2);\n    uint64_t rax_1;\n    int32_t r12_1;\n    if (rax != 0)\n    {\n        r12_1 = *__errno_location();\n        if (r12_1 == 0)\n        {\n            int32_t rax_4;\n            rax_4 = (arg2->st_mode & 0xf000) == 0x4000;\n            rax = rax_4;\n        }\n        else\n        {\n            if (r12_1 != 2)\n            {\n                int64_t* rcx_1;\n                char* rdx_4;\n                int64_t rsi_3;\n                char* rdi;\n                char* r8;\n                void* r9;\n                rcx_1 = error(1, r12_1, dcgettext(nullptr, \"failed to access %s\", 5), sub_40ddd0(4, arg1));\n                /* tailcall */\n                return sub_4034a0(rdi, rsi_3, rdx_4, rcx_1, r8, r9);\n            }\n            *arg3 = 1;\n            rax_1 = 0;\n        }\n    }\n    if ((rax == 0 && (arg2->st_mode & 0xf000) == 0x4000))\n    {\n        rax_1 = 1;\n    }\n    if (((rax != 0 && r12_1 == 0) || (rax == 0 && (arg2->st_mode & 0xf000) != 0x4000)))\n    {\n        rax_1 = (rax & 1);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4034a0",
            "funcStartAddr": "0x4034a0",
            "funcEndAddr": "0x403a45",
            "decompiledFuncCode": "int64_t sub_4034a0(char* arg1, int64_t arg2, char* arg3, int64_t* arg4, \n    char* arg5, void* arg6)\n{\n    char* var_178 = arg3;\n    uint64_t rax = strlen(arg1);\n    void* rsp = (&var_178 - ((rax + 0x18) & 0xfffffffffffffff0));\n    char* rax_3 = memcpy(((rsp + 0xf) & 0xfffffffffffffff0), arg1, (rax + 1));\n    void* rax_4 = sub_40aa80(rax_3);\n    void* rbx_2 = (((rsp - ((rax_4 + 0x18) & 0xfffffffffffffff0)) + 0xf) & 0xfffffffffffffff0);\n    memcpy(rbx_2, rax_3, rax_4);\n    *(rbx_2 + rax_4) = 0;\n    *arg4 = 0;\n    void var_158;\n    int32_t rax_8 = __xstat(1, rbx_2, &var_158);\n    int32_t var_140;\n    char* rax_9;\n    char* rsi_17;\n    if (rax_8 != 0)\n    {\n        char* rdi_4 = &rax_3[arg2];\n        char* var_160_1 = rdi_4;\n        if (*rdi_4 != 0x2f)\n        {\n            rdi_4 = var_160_1;\n        }\n        else\n        {\n            do\n            {\n                rdi_4 = &rdi_4[1];\n            } while (*rdi_4 == 0x2f);\n        }\n        while (true)\n        {\n            rax_9 = strchr(rdi_4, 0x2f);\n            if (rax_9 == 0)\n            {\n                break;\n            }\n            *rax_9 = 0;\n            int32_t rax_10 = __xstat(1, rax_3, &var_158);\n            if ((rax_10 != 0 || (rax_10 == 0 && (*(arg6 + 0x1c) & 0xffffff00) != 0)))\n            {\n                int128_t var_c8;\n                int32_t rax_15 = __xstat(1, var_160_1, &var_c8);\n                int32_t r8_1;\n                if (rax_15 != 0)\n                {\n                    r8_1 = *__errno_location();\n                }\n                int32_t var_b0;\n                if ((rax_15 == 0 && (var_b0 & 0xf000) != 0x4000))\n                {\n                    r8_1 = 0x14;\n                }\n                if (((rax_15 == 0 && (var_b0 & 0xf000) != 0x4000) || (rax_15 != 0 && r8_1 != 0)))\n                {\n                    char* var_168;\n                    var_168 = r8_1;\n                    uint64_t r8_3 = var_168;\n                    error(0, r8_3, dcgettext(nullptr, \"failed to get attributes of %s\", 5), sub_40ddd0(4, var_160_1), r8_3);\n                    return 0;\n                }\n                if (((rax_15 == 0 && (var_b0 & 0xf000) == 0x4000) || (rax_15 != 0 && r8_1 == 0)))\n                {\n                    int128_t* rax_17 = sub_4100e0(0xa8);\n                    *rax_17 = var_c8;\n                    int128_t var_b8;\n                    rax_17[1] = var_b8;\n                    int128_t var_a8;\n                    rax_17[2] = var_a8;\n                    int128_t var_98;\n                    rax_17[3] = var_98;\n                    int128_t var_88;\n                    rax_17[4] = var_88;\n                    int128_t var_78;\n                    rax_17[5] = var_78;\n                    int128_t var_68;\n                    rax_17[6] = var_68;\n                    int128_t var_58;\n                    rax_17[7] = var_58;\n                    int128_t var_48;\n                    rax_17[8] = var_48;\n                    rax_17[9] = 0;\n                    *(rax_17 + 0x98) = (rax_9 - rax_3);\n                    int64_t rax_20 = *arg4;\n                    *arg4 = rax_17;\n                    rax_17[0xa] = rax_20;\n                    if (rax_10 == 0)\n                    {\n                        goto label_4035d3;\n                    }\n                    if (sub_404fc0(var_160_1, rax_3, *(rax_17 + 0x18), 1, arg6) == 0)\n                    {\n                        return 0;\n                    }\n                    int32_t rsi_7 = *(rax_17 + 0x18);\n                    *arg5 = 1;\n                    int32_t rax_24;\n                    int32_t r14_3;\n                    if (*(arg6 + 0x1d) != 0)\n                    {\n                        r14_3 = (rsi_7 & 0x3f);\n                        rax_24 = (!r14_3);\n                    }\n                    else\n                    {\n                        r14_3 = 0;\n                        rax_24 = -1;\n                        if (*(arg6 + 0x1e) != 0)\n                        {\n                            r14_3 = (rsi_7 & 0x12);\n                            rax_24 = (!r14_3);\n                        }\n                    }\n                    if (*(arg6 + 0x20) != 0)\n                    {\n                        rsi_7 = 0x1ff;\n                    }\n                    char const* const rsi_19;\n                    int64_t r12_1;\n                    if (mkdir(rax_3, ((rsi_7 & rax_24) & 0xfff)) != 0)\n                    {\n                        rsi_19 = \"cannot make directory %s\";\n                        r12_1 = sub_40ddd0(4, rax_3);\n                    label_4039de:\n                        error(0, *__errno_location(), dcgettext(nullptr, rsi_19, 5), r12_1);\n                        return 0;\n                    }\n                    char* rax_26 = var_178;\n                    if (rax_26 != 0)\n                    {\n                        __printf_chk(1, rax_26, var_160_1, rax_3);\n                    }\n                    if (__lxstat(1, rax_3, &var_158) != 0)\n                    {\n                        rsi_19 = \"failed to get attributes of %s\";\n                        r12_1 = sub_40ddd0(4, rax_3);\n                        goto label_4039de;\n                    }\n                    int32_t rsi_12 = var_140;\n                    if (*(arg6 + 0x1e) == 0)\n                    {\n                        if (((!rsi_12) & r14_3) != 0)\n                        {\n                            rsi_12 = var_140;\n                            r14_3 = (r14_3 & (!sub_4053d0()));\n                            if (((!rsi_12) & r14_3) != 0)\n                            {\n                                rax_17[9] = 1;\n                                *(rax_17 + 0x18) = (r14_3 | rsi_12);\n                            }\n                        }\n                        if (((((!rsi_12) & r14_3) == 0 || ((!rsi_12) & r14_3) == 0) && (rsi_12 & 0x1c0) != 0x1c0))\n                        {\n                            rax_17[9] = 1;\n                            *(rax_17 + 0x18) = (r14_3 | rsi_12);\n                        }\n                    }\n                    if (((((((*(arg6 + 0x1e) == 0 && ((!rsi_12) & r14_3) != 0) && ((!rsi_12) & r14_3) != 0) || ((*(arg6 + 0x1e) == 0 && (((!rsi_12) & r14_3) == 0 || ((!rsi_12) & r14_3) == 0)) && (rsi_12 & 0x1c0) != 0x1c0)) || *(arg6 + 0x1e) != 0) && (rsi_12 & 0x1c0) != 0x1c0) && chmod(rax_3, (rsi_12 | 0x1c0)) != 0))\n                    {\n                        rsi_19 = \"setting permissions for %s\";\n                        r12_1 = sub_40ddd0(4, rax_3);\n                        goto label_4039de;\n                    }\n                    if (*arg5 != 0)\n                    {\n                        goto label_403614;\n                    }\n                }\n            }\n            if ((rax_10 == 0 && (*(arg6 + 0x1c) & 0xffffff00) == 0))\n            {\n            label_4035d3:\n                if (sub_404fc0(var_160_1, rax_3, 0, 0, arg6) == 0)\n                {\n                    return 0;\n                }\n                if ((var_140 & 0xf000) != 0x4000)\n                {\n                    rsi_17 = rax_3;\n                    break;\n                }\n                *arg5 = 0;\n            }\n            if ((*(arg6 + 0x20) & 0xff000000ff00) != 0)\n            {\n                sub_405090(rax_3, *(arg6 + 0x25), 0, arg6);\n                if (*(arg6 + 0x26) != 0)\n                {\n                    return 0;\n                }\n                goto label_403614;\n            }\n        label_403614:\n            bool cond:1_1 = rax_9[1] != 0x2f;\n            rdi_4 = &rax_9[1];\n            *rax_9 = 0x2f;\n            if ((!cond:1_1))\n            {\n                do\n                {\n                    rdi_4 = &rdi_4[1];\n                } while (*rdi_4 == 0x2f);\n            }\n        }\n    }\n    if ((rax_8 == 0 && (var_140 & 0xf000) != 0x4000))\n    {\n        rsi_17 = rbx_2;\n    }\n    if (((rax_8 == 0 && (var_140 & 0xf000) != 0x4000) || (rax_8 != 0 && rax_9 != 0)))\n    {\n        error(0, 0, dcgettext(nullptr, \"%s exists but is not a directory\", 5), sub_40ddd0(4, rsi_17));\n        return 0;\n    }\n    if ((rax_8 == 0 && (var_140 & 0xf000) == 0x4000))\n    {\n        *arg5 = 0;\n    }\n    if (((rax_8 == 0 && (var_140 & 0xf000) == 0x4000) || (rax_8 != 0 && rax_9 == 0)))\n    {\n        return 1;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_403a50",
            "funcStartAddr": "0x403a50",
            "funcEndAddr": "0x403c74",
            "decompiledFuncCode": "uint64_t sub_403a50(char* arg1, void* arg2, void* arg3, void* arg4)\n{\n    void* rbx = arg3;\n    uint64_t rax = strlen(arg1);\n    int64_t var_58;\n    char* rax_3 = memcpy((((&var_58 - ((rax + 0x18) & 0xfffffffffffffff0)) + 0xf) & 0xfffffffffffffff0), arg1, (rax + 1));\n    void* r15_1 = (arg2 + rax_3);\n    if (rbx != 0)\n    {\n        do\n        {\n            bool cond:0_1 = *(arg4 + 0x1f) == 0;\n            rax_3[*(rbx + 0x98)] = 0;\n            if ((!cond:0_1))\n            {\n                var_58 = *(rbx + 0x48);\n                int64_t var_50_1 = *(rbx + 0x50);\n                int64_t var_48_1 = *(rbx + 0x58);\n                int64_t var_40_1 = *(rbx + 0x60);\n                if (sub_40f8a0(rax_3, &var_58) != 0)\n                {\n                    error(0, *__errno_location(), dcgettext(nullptr, \"failed to preserve times for %s\", 5), sub_40ddd0(4, rax_3));\n                    return 0;\n                }\n            }\n            int32_t rax_13;\n            char const* const rsi_7;\n            int64_t r12_3;\n            uint32_t r14_1;\n            if (*(arg4 + 0x1d) != 0)\n            {\n                rax_13 = lchown(rax_3, *(rbx + 0x1c), *(rbx + 0x20));\n                if (rax_13 != 0)\n                {\n                    uint32_t rax_14 = sub_4051b0(arg4);\n                    r14_1 = rax_14;\n                    if (rax_14 == 0)\n                    {\n                        rsi_7 = \"failed to preserve ownership for\u2026\";\n                        r12_3 = sub_40ddd0(4, rax_3);\n                    label_403c17:\n                        error(0, *__errno_location(), dcgettext(nullptr, rsi_7, 5), r12_3);\n                        return r14_1;\n                    }\n                    lchown(rax_3, 0xffffffff, *(rbx + 0x20));\n                    r14_1 = *(arg4 + 0x1e);\n                    if (r14_1 != 0)\n                    {\n                        goto label_403bc5;\n                    }\n                }\n            }\n            if ((*(arg4 + 0x1d) == 0 || (*(arg4 + 0x1d) != 0 && rax_13 == 0)))\n            {\n                r14_1 = *(arg4 + 0x1e);\n                if (r14_1 != 0)\n                {\n                label_403bc5:\n                    *(rbx + 0x18);\n                    if (sub_409b40(r15_1, 0xffffffff, rax_3) != 0)\n                    {\n                        return 0;\n                    }\n                    goto label_403ad5;\n                }\n            }\n            if (*(rbx + 0x90) != 0)\n            {\n                if (chmod(rax_3, *(rbx + 0x18)) == 0)\n                {\n                    goto label_403ad5;\n                }\n                rsi_7 = \"failed to preserve permissions f\u2026\";\n                r12_3 = sub_40ddd0(4, rax_3);\n                goto label_403c17;\n            }\n        label_403ad5:\n            rax_3[*(rbx + 0x98)] = 0x2f;\n            rbx = *(rbx + 0xa0);\n        } while (rbx != 0);\n    }\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_403c80",
            "funcStartAddr": "0x403c80",
            "funcEndAddr": "0x4041a5",
            "decompiledFuncCode": "int64_t sub_403c80(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_61b920;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [OPTION]... [-T] SOURC\u2026\", 5), rbp, rbp, rbp);\n        fputs_unlocked(dcgettext(nullptr, \"Copy SOURCE to DEST, or multiple\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nMandatory arguments to long op\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -a, --archive                s\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -f, --force                  i\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -l, --link                   h\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -n, --no-clobber             d\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -p                           s\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --no-preserve=ATTR_LIST  d\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -R, -r, --recursive          c\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --sparse=WHEN            c\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -s, --symbolic-link          m\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -u, --update                 c\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -Z                           s\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nBy default, sparse SOURCE file\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nThe backup suffix is '~', unle\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  none, off       never make bac\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nAs a special case, cp makes a \u2026\", 5), stdout);\n        void* const var_88 = &data_4129a8;\n        void* const* rax_23 = &var_88;\n        char const* const var_78_1 = \"coreutils\";\n        char const* const var_70_1 = \"Multi-call invocation\";\n        char const* const var_68_1 = \"sha224sum\";\n        char const* const var_60_1 = \"sha2 utilities\";\n        char const* const var_58_1 = \"sha256sum\";\n        char const* const var_50_1 = \"sha2 utilities\";\n        char const* const var_48_1 = \"sha384sum\";\n        char const* const var_40_1 = \"sha2 utilities\";\n        char const* const var_38_1 = \"sha512sum\";\n        char const* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_23 = &rax_23[2];\n            void* const rdi_21 = *rax_23;\n            c_1 = false;\n            z_1 = (rdi_21 & rdi_21) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_21 = &data_4129a5;\n            int64_t rcx_2 = 3;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_21;\n                char temp1_1 = *rdi_21;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_21 = (rsi_21 + 1);\n                rdi_21 = (rdi_21 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbp_1 = rax_23[1];\n        char* rax_34;\n        int32_t rax_35;\n        char const* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_5;\n            uint64_t r8_3;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_34 = setlocale(5, nullptr, rdx_5, rcx_5, r8_3, r9_2, var_88, \"test invocation\");\n            if (rax_34 != 0)\n            {\n                rax_35 = strncmp(rax_34, &data_412a2c, 3);\n                if (rax_35 != 0)\n                {\n                    rbp_1 = &data_4129a5;\n                }\n            }\n            if ((rax_34 == 0 || (rax_34 != 0 && rax_35 == 0)))\n            {\n                rbp_1 = &data_4129a5;\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", &data_4129a5);\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_3;\n            uint64_t r8_2;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_26 = setlocale(5, nullptr, rdx_3, rcx_3, r8_2, r9_1, var_88, \"test invocation\");\n            if (rax_26 == 0)\n            {\n                goto label_404098;\n            }\n            if (strncmp(rax_26, &data_412a2c, 3) == 0)\n            {\n                goto label_404098;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_34 != 0) && rax_35 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), &data_4129a5);\n        label_404098:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", &data_4129a5);\n            if (rbp_1 != &data_4129a5)\n            {\n                r12_1 = &data_416f5c[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4041b0",
            "funcStartAddr": "0x4041b0",
            "funcEndAddr": "0x40463c",
            "decompiledFuncCode": "uint64_t sub_4041b0(int32_t arg1, int64_t* arg2, char* arg3, char arg4, \n    int32_t* arg5)\n{\n    int64_t r12 = arg1;\n    int64_t* rbx = arg2;\n    void* var_f8;\n    int64_t* rsp = &var_f8;\n    char* var_f0 = arg3;\n    int32_t rax;\n    rax = arg3 == 0;\n    char var_da = 0;\n    int64_t rbx_2;\n    char const* const rsi_18;\n    char const* const rsi_20;\n    if (rax < r12)\n    {\n        int32_t* r14_1 = arg5;\n        void* var_d0;\n        void var_c8;\n        int32_t r15;\n        if (arg4 == 0)\n        {\n            if (var_f0 == 0)\n            {\n                if (r12 == 1)\n                {\n                    goto label_4043f8;\n                }\n                uint64_t* r13_5 = &arg2[(r12 - 1)];\n                if (sub_4033e0(*r13_5, &var_c8, &var_da) == 0)\n                {\n                    if (r12 == 2)\n                    {\n                        goto label_4043f8;\n                    }\n                    rbx = sub_40ddd0(4, *r13_5);\n                    error(1, 0, dcgettext(nullptr, \"target %s is not a directory\", 5), rbx);\n                }\n                r12 = (r12 - 1);\n                char* rax_30 = rbx[r12];\n                var_f0 = rax_30;\n                if (rax_30 == 0)\n                {\n                    goto label_4043f8;\n                }\n            }\n            if (r12 == 1)\n            {\n                goto label_40421d;\n            }\n            sub_405110(r14_1);\n            sub_405140(r14_1);\n        label_40421d:\n            r15 = 1;\n            var_f8 = &rbx[((r12 - 1) + 1)];\n            do\n            {\n                char* r12_1 = *rbx;\n                var_d0 = nullptr;\n                if (data_61b4c8 != 0)\n                {\n                    sub_40abd0(r12_1);\n                }\n                uint64_t rax_7 = strlen(r12_1);\n                uint64_t rdx_2 = (rax_7 + 1);\n                int64_t rax_9 = ((rax_7 + 0x18) & 0xfffffffffffffff0);\n                void* var_d8;\n                char rax_5;\n                char rax_6;\n                char* r13_2;\n                if (data_61b4c9 != 0)\n                {\n                    rsp = (rsp - rax_9);\n                    char* rax_3 = memcpy(((rsp + 0xf) & 0xfffffffffffffff0), r12_1, rdx_2);\n                    sub_40abd0(rax_3);\n                    char* rdx_1 = \"%s -> %s\\n\";\n                    r13_2 = sub_40af00(var_f0, rax_3, &var_d0);\n                    void* rsi_2 = var_d0;\n                    char* r8 = &var_da;\n                    if (*(r14_1 + 0x2e) == 0)\n                    {\n                        rdx_1 = nullptr;\n                    }\n                    rax_5 = sub_4034a0(r13_2, (rsi_2 - r13_2), rdx_1, &var_d8, r8, r14_1);\n                    if (rax_5 == 0)\n                    {\n                        rax_6 = data_61b4c9;\n                        r15 = 0;\n                    }\n                }\n                else\n                {\n                    rsp = (rsp - rax_9);\n                    bool c_1 = false;\n                    bool z_1 = ((rsp + 0xf) & 0xfffffffffffffff0) == 0;\n                    char* rax_11 = sub_40ab40(memcpy(((rsp + 0xf) & 0xfffffffffffffff0), r12_1, rdx_2));\n                    sub_40abd0(rax_11);\n                    void* const rdi_13 = &data_412a7d;\n                    int64_t rcx_1 = 3;\n                    char* rsi_5 = rax_11;\n                    while (rcx_1 != 0)\n                    {\n                        char temp2_1 = *rsi_5;\n                        char temp3_1 = *rdi_13;\n                        c_1 = temp2_1 < temp3_1;\n                        z_1 = temp2_1 == temp3_1;\n                        rsi_5 = &rsi_5[1];\n                        rdi_13 = (rdi_13 + 1);\n                        rcx_1 = (rcx_1 - 1);\n                        if ((!z_1))\n                        {\n                            break;\n                        }\n                    }\n                    if ((((!z_1) && (!c_1)) - 0) != 0)\n                    {\n                        r13_2 = sub_40af00(var_f0, rax_11, nullptr);\n                    }\n                    else\n                    {\n                        r13_2 = sub_410310(var_f0);\n                    }\n                }\n                if (((data_61b4c9 != 0 && rax_5 != 0) || data_61b4c9 == 0))\n                {\n                    void var_d9;\n                    r15 = (r15 & sub_409280(r12_1, r13_2, var_da, r14_1, &var_d9, nullptr));\n                    if (data_61b4c9 != 0)\n                    {\n                        r15 = (r15 & sub_403a50(r13_2, (var_d0 - r13_2), var_d8, r14_1));\n                        rax_6 = data_61b4c9;\n                    }\n                }\n                if ((((data_61b4c9 != 0 && rax_5 == 0) || (((data_61b4c9 != 0 && rax_5 != 0) || data_61b4c9 == 0) && data_61b4c9 != 0)) && rax_6 != 0))\n                {\n                    void* rdi_23 = var_d8;\n                    if (rdi_23 != 0)\n                    {\n                        do\n                        {\n                            var_d8 = *(rdi_23 + 0xa0);\n                            free(rdi_23);\n                            rdi_23 = var_d8;\n                        } while (rdi_23 != 0);\n                    }\n                }\n                rbx = &rbx[1];\n                free(r13_2);\n            } while (var_f8 != rbx);\n            goto label_404499;\n        }\n        if (var_f0 != 0)\n        {\n            arg2 = error(1, 0, dcgettext(nullptr, \"cannot combine --target-director\u2026\", 5));\n        }\n        else if (r12 <= 2)\n        {\n            sub_4033e0(arg2[(r12 - 1)], &var_c8, &var_da);\n        label_4043f8:\n            char* r12_2 = *rbx;\n            char* rbx_1 = rbx[1];\n            if (data_61b4c9 != 0)\n            {\n                rsi_20 = \"with --parents, the destination \u2026\";\n                goto label_404629;\n            }\n            if (*(r14_1 + 0x16) != 0)\n            {\n                int32_t r13_4 = *r14_1;\n                int32_t var_b0;\n                if ((r13_4 != 0 && (strcmp(r12_2, rbx_1) == 0 && (var_da == 0 && (var_b0 & 0xf000) == 0x8000))))\n                {\n                    char* rax_19 = sub_40a6f0(rbx_1, r13_4);\n                    int32_t* rsi_12 = r14_1;\n                    int32_t* rdi_20 = &data_61b480;\n                    for (int64_t rcx_4 = 0x12; rcx_4 != 0; rcx_4 = (rcx_4 - 1))\n                    {\n                        *rdi_20 = *rsi_12;\n                        rdi_20 = &rdi_20[1];\n                        rsi_12 = &rsi_12[1];\n                    }\n                    rbx_1 = rax_19;\n                    r14_1 = &data_61b480;\n                    data_61b480 = 0;\n                }\n            }\n            r15 = sub_409280(r12_2, rbx_1, 0, r14_1, &var_d0, nullptr);\n        label_404499:\n            return r15;\n        }\n        rsi_18 = \"extra operand %s\";\n        rbx_2 = sub_40ddd0(4, arg2[2]);\n    }\n    else\n    {\n        if (r12 != 1)\n        {\n            rsi_20 = \"missing file operand\";\n        label_404629:\n            error(0, 0, dcgettext(nullptr, rsi_20, 5));\n        label_4045e8:\n            sub_403c80(1);\n            /* no return */\n        }\n        rsi_18 = \"missing destination file operand\u2026\";\n        rbx_2 = sub_40ddd0(4, *arg2);\n    }\n    error(0, 0, dcgettext(nullptr, rsi_18, 5), rbx_2);\n    goto label_4045e8;\n}\n\n"
        },
        {
            "funcName": "sub_404640",
            "funcStartAddr": "0x404640",
            "funcEndAddr": "0x404684",
            "decompiledFuncCode": "int64_t sub_404640(char* arg1, int32_t arg2)\n{\n    if ((arg2 & 0xf000) == 0xa000)\n    {\n        return 1;\n    }\n    if (sub_4100a0() == 0)\n    {\n        int64_t rax_3;\n        rax_3 = euidaccess(arg1, 2) == 0;\n        return rax_3;\n    }\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_404690",
            "funcStartAddr": "0x404690",
            "funcEndAddr": "0x404732",
            "decompiledFuncCode": "int64_t sub_404690(int32_t arg1, uint64_t arg2)\n{\n    uint64_t rbx = arg2;\n    if (data_61b8e0 == 0)\n    {\n        int64_t rax_4 = calloc(data_61b3b8, 1);\n        if (rax_4 == 0)\n        {\n            data_61b8e0 = 0x61b4e0;\n            data_61b3b8 = 0x400;\n        }\n        else\n        {\n            data_61b8e0 = rax_4;\n        }\n    }\n    if (rbx != 0)\n    {\n        int64_t rax_1;\n        uint64_t temp0_1;\n        do\n        {\n            uint64_t rbp_1 = rbx;\n            int64_t rsi = data_61b8e0;\n            if (data_61b3b8 <= rbx)\n            {\n                rbp_1 = data_61b3b8;\n            }\n            rax_1 = sub_40b000(arg1, rsi, rbp_1);\n            if (rax_1 != rbp_1)\n            {\n                return 0;\n            }\n            temp0_1 = rbx;\n            rbx = (rbx - rax_1);\n        } while (temp0_1 != rax_1);\n    }\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_404740",
            "funcStartAddr": "0x404740",
            "funcEndAddr": "0x404777",
            "decompiledFuncCode": "uint64_t sub_404740(int32_t arg1, __off64_t arg2, __off64_t arg3)\n{\n    int32_t rax = fallocate(arg1, 3, arg2, arg3);\n    if (rax < 0)\n    {\n        int32_t rax_3 = *__errno_location();\n        if ((rax_3 == 0x26 || rax_3 == 0x5f))\n        {\n            return 0;\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404780",
            "funcStartAddr": "0x404780",
            "funcEndAddr": "0x40479d",
            "decompiledFuncCode": "int64_t sub_404780(int64_t arg1, int64_t arg2, int32_t arg3)\n{\n    uint64_t rsi = arg3;\n    if (arg1 >= 0)\n    {\n        /* tailcall */\n        return fchmod(arg1, rsi);\n    }\n    /* tailcall */\n    return chmod(arg2, rsi);\n}\n\n"
        },
        {
            "funcName": "sub_4047a0",
            "funcStartAddr": "0x4047a0",
            "funcEndAddr": "0x4047e0",
            "decompiledFuncCode": "int64_t sub_4047a0()\n{\n    int32_t* rax = __errno_location();\n    *rax = 0x5f;\n    int64_t rdx_1;\n    int64_t rsi_1;\n    int64_t rdi;\n    rdx_1 = error(1, *rax, dcgettext(nullptr, \"failed to restore the default fi\u2026\", 5));\n    /* tailcall */\n    return sub_4047e0(rdi, rsi_1, rdx_1);\n}\n\n"
        },
        {
            "funcName": "sub_4047e0",
            "funcStartAddr": "0x4047e0",
            "funcEndAddr": "0x40488e",
            "decompiledFuncCode": "char* sub_4047e0(uint64_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    __printf_chk(1, \"%s -> %s\", sub_40dcf0(0, 4, arg1), sub_40dcf0(1, 4, arg2));\n    if (arg3 != 0)\n    {\n        __printf_chk(1, dcgettext(nullptr, \" (backup: %s)\", 5), sub_40ddd0(4, arg3));\n    }\n    uint64_t* const rdi = stdout;\n    char* rax_6 = stdout[5];\n    if (rax_6 >= stdout[6])\n    {\n        /* tailcall */\n        return __overflow(rdi, 0xa);\n    }\n    stdout[5] = &rax_6[1];\n    *rax_6 = 0xa;\n    return rax_6;\n}\n\n"
        },
        {
            "funcName": "sub_404890",
            "funcStartAddr": "0x404890",
            "funcEndAddr": "0x4049bc",
            "decompiledFuncCode": "uint64_t sub_404890(void* arg1, char* arg2, int32_t* arg3)\n{\n    if (sub_404640(arg2, *arg3) != 0)\n    {\n        int64_t rbx_2 = data_61b920;\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: overwrite %s? \", 5), rbx_2, sub_40ddd0(4, arg2));\n        return sub_410370();\n    }\n    void var_34;\n    sub_40ad70(*arg3, &var_34);\n    int32_t rbp_1 = *arg3;\n    char var_2a = 0;\n    int64_t rax_1 = sub_40ddd0(4, arg2);\n    uint64_t rbp_2 = (rbp_1 & 0xfff);\n    int64_t rbx_1 = data_61b920;\n    char* rdx;\n    if ((*(arg1 + 0x18) != 0 || (*(arg1 + 0x18) == 0 && (*(arg1 + 0x14) & 0xffff00) != 0)))\n    {\n        rdx = dcgettext(nullptr, \"%s: replace %s, overriding mode \u2026\", 5);\n    }\n    if ((*(arg1 + 0x18) == 0 && (*(arg1 + 0x14) & 0xffff00) == 0))\n    {\n        rdx = dcgettext(nullptr, \"%s: unwritable %s (mode %04lo, %\u2026\", 5);\n    }\n    void var_33;\n    __fprintf_chk(stderr, 1, rdx, rbx_1, rax_1, rbp_2, &var_33);\n    return sub_410370();\n}\n\n"
        },
        {
            "funcName": "sub_4049c0",
            "funcStartAddr": "0x4049c0",
            "funcEndAddr": "0x404ac3",
            "decompiledFuncCode": "uint64_t sub_4049c0(uint64_t arg1, char* arg2, char arg3, char arg4, bool arg5)\n{\n    arg5 = arg5 != 0;\n    int32_t rax = sub_409900(0xffffff9c, arg1, 0xffffff9c, arg2, (arg5 << 0xa), arg3);\n    bool cond:0 = rax > 0;\n    if (rax < 0)\n    {\n        error(0, *__errno_location(), dcgettext(nullptr, \"cannot create hard link %s to %s\", 5), sub_40dcf0(0, 4, arg2), sub_40dcf0(1, 4, arg1));\n        return 0;\n    }\n    uint64_t rbx;\n    rbx = cond:0;\n    rbx = (rbx & arg4);\n    if (rbx != 0)\n    {\n        __printf_chk(1, dcgettext(nullptr, \"removed %s\\n\", 5), sub_40ddd0(4, arg2));\n        return rbx;\n    }\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_404ad0",
            "funcStartAddr": "0x404ad0",
            "funcEndAddr": "0x404b87",
            "decompiledFuncCode": "int64_t sub_404ad0(int32_t arg1, int64_t arg2, char arg3, int64_t arg4)\n{\n    off64_t rax = lseek(arg1, arg4, 1);\n    int64_t rbp_1;\n    char const* const rsi_3;\n    if (rax < 0)\n    {\n        rsi_3 = \"cannot lseek %s\";\n        rbp_1 = sub_40ddd0(4, arg2);\n    }\n    else\n    {\n        int32_t rax_3;\n        if (arg3 != 0)\n        {\n            rax_3 = sub_404740(arg1, (rax - arg4), arg4);\n            if (rax_3 < 0)\n            {\n                rsi_3 = \"error deallocating %s\";\n                rbp_1 = sub_40ddd0(4, arg2);\n            }\n        }\n        if ((arg3 == 0 || (arg3 != 0 && rax_3 >= 0)))\n        {\n            return 1;\n        }\n    }\n    error(0, *__errno_location(), dcgettext(nullptr, rsi_3, 5), rbp_1);\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_404b90",
            "funcStartAddr": "0x404b90",
            "funcEndAddr": "0x404fb3",
            "decompiledFuncCode": "uint64_t sub_404b90(int32_t arg1, int32_t arg2, char* arg3, ssize_t arg4, \n    ssize_t arg5, char arg6, int64_t arg7, int64_t arg8, uint64_t arg9, \n    int64_t* arg10, char* arg11)\n{\n    uint64_t rbp;\n    uint64_t var_28 = rbp;\n    *arg11 = 0;\n    uint64_t var_80 = arg9;\n    *arg10 = 0;\n    if (arg9 != 0)\n    {\n        ssize_t var_50_1 = arg5;\n        if (arg5 == 0)\n        {\n            arg5 = arg4;\n        }\n        int32_t r14_1 = 0;\n        ssize_t r15_1 = 0;\n        ssize_t r13_2;\n        while (true)\n        {\n            uint64_t rdx = var_80;\n            if (arg4 <= rdx)\n            {\n                rdx = arg4;\n            }\n            ssize_t rax_4;\n            ssize_t rdx_2;\n            uint32_t r9;\n            rax_4 = read(arg1, arg3, rdx);\n            bool cond:1_1 = rax_4 == 0;\n            if (rax_4 < 0)\n            {\n                int32_t* rax_5 = __errno_location();\n                if (*rax_5 != 4)\n                {\n                    error(0, *rax_5, dcgettext(nullptr, \"error reading %s\", 5), sub_40ddd0(4, arg7));\n                    return 0;\n                }\n            }\n            else\n            {\n                if (cond:1_1)\n                {\n                    r13_2 = r15_1;\n                    rbp = r14_1;\n                    break;\n                }\n                char* r13_1 = arg3;\n                ssize_t r12_1 = rax_4;\n                ssize_t rbx_2 = arg5;\n                *arg10 = (*arg10 + r12_1);\n                bool cond:2_1 = var_50_1 != 0;\n                char* r11_1 = r13_1;\n                while (true)\n                {\n                    if (rbx_2 > r12_1)\n                    {\n                        rbx_2 = r12_1;\n                    }\n                    rbp = rbx_2 != 0;\n                    rbp = (rbp & cond:2_1);\n                    int32_t rax_11;\n                    char* rsi_3;\n                    if (rbp != 0)\n                    {\n                        rsi_3 = r13_1;\n                        rdx_2 = rbx_2;\n                        int32_t var_a0;\n                        while (true)\n                        {\n                            if (*rsi_3 != 0)\n                            {\n                                rax_11 = rbp;\n                                rdx_2 = r14_1;\n                                rbp = 0;\n                                break;\n                            }\n                            rsi_3 = &rsi_3[1];\n                            ssize_t temp1_1 = rdx_2;\n                            rdx_2 = (rdx_2 - 1);\n                            if (temp1_1 == 1)\n                            {\n                                int64_t* rax_10;\n                                rax_10 = r15_1 != 0;\n                                r9 = ((r14_1 ^ 1) & rax_10);\n                                break;\n                            }\n                            if ((rdx_2 & 0xf) == 0)\n                            {\n                                var_a0 = r11_1;\n                                rax_11 = memcmp(r13_1, rsi_3, rdx_2);\n                                r11_1 = var_a0;\n                                rbp = rax_11 == 0;\n                                rdx_2 = (rbp ^ r14_1);\n                                rax_11 = rax_11 != 0;\n                                break;\n                            }\n                        }\n                        char var_8a_1;\n                        if (*rsi_3 != 0)\n                        {\n                            r9 = r15_1 != 0;\n                            r9 = (r9 & rdx_2);\n                            if ((rbx_2 == r12_1 && rax_11 != 0))\n                            {\n                                if (r9 != 0)\n                                {\n                                    var_a0 = 1;\n                                    rbp = 0;\n                                    goto label_404d6b;\n                                }\n                                rbp = 0;\n                            label_404de3:\n                                r15_1 = (r15_1 + rbx_2);\n                                var_a0 = 1;\n                                var_8a_1 = 0;\n                                if (r14_1 == 0)\n                                {\n                                label_404d83:\n                                    int64_t rax_12;\n                                    rax_12 = sub_40b000(arg2, r11_1, r15_1);\n                                    r9 = var_8a_1;\n                                    if (r15_1 != rax_12)\n                                    {\n                                        error(0, *__errno_location(), dcgettext(nullptr, \"error writing %s\", 5), sub_40ddd0(4, arg8));\n                                        return r14_1;\n                                    }\n                                }\n                                else\n                                {\n                                label_404e0d:\n                                    int32_t rax_15;\n                                    rax_15 = sub_404ad0(arg2, arg8, arg6, r15_1);\n                                    r9 = var_8a_1;\n                                    if (rax_15 == 0)\n                                    {\n                                        return rax_15;\n                                    }\n                                }\n                                if (var_a0 == 0)\n                                {\n                                    r11_1 = r13_1;\n                                    r12_1 = (r12_1 - rbx_2);\n                                    r14_1 = rbp;\n                                    r13_1 = &r13_1[rbx_2];\n                                    r15_1 = rbx_2;\n                                }\n                                else\n                                {\n                                    if (rbx_2 == 0)\n                                    {\n                                        r15_1 = 0;\n                                        break;\n                                    }\n                                    if (r9 == 0)\n                                    {\n                                        r11_1 = r13_1;\n                                        r12_1 = (r12_1 - rbx_2);\n                                        r14_1 = rbp;\n                                        r13_1 = &r13_1[rbx_2];\n                                        r15_1 = 0;\n                                    }\n                                    else\n                                    {\n                                        r15_1 = rbx_2;\n                                        r11_1 = r13_1;\n                                        r14_1 = rbp;\n                                        rbx_2 = 0;\n                                        continue;\n                                    }\n                                }\n                            }\n                        }\n                        if (((((*rsi_3 != 0 && rbx_2 != r12_1) || ((*rsi_3 != 0 && rbx_2 == r12_1) && rax_11 == 0)) || *rsi_3 == 0) && r9 != 0))\n                        {\n                            var_a0 = 0;\n                        label_404d6b:\n                            var_8a_1 = r9;\n                            if (r14_1 == 0)\n                            {\n                                goto label_404d83;\n                            }\n                            goto label_404e0d;\n                        }\n                    }\n                    else\n                    {\n                        rbp = r14_1;\n                        rdx_2 = rbx_2 == r12_1;\n                        if ((rdx_2 & (r14_1 ^ 1)) != 0)\n                        {\n                            goto label_404de3;\n                        }\n                        if (rbx_2 == 0)\n                        {\n                            goto label_404de3;\n                        }\n                    }\n                    if (((((rbp != 0 && (((*rsi_3 != 0 && rbx_2 != r12_1) || ((*rsi_3 != 0 && rbx_2 == r12_1) && rax_11 == 0)) || *rsi_3 == 0)) && r9 == 0) || rbp == 0) && (0x7fffffffffffffff - rbx_2) >= r15_1))\n                    {\n                        r15_1 = (r15_1 + rbx_2);\n                        r12_1 = (r12_1 - rbx_2);\n                        r13_1 = &r13_1[rbx_2];\n                        r14_1 = rbp;\n                    }\n                    if ((((((rbp != 0 && (((*rsi_3 != 0 && rbx_2 != r12_1) || ((*rsi_3 != 0 && rbx_2 == r12_1) && rax_11 == 0)) || *rsi_3 == 0)) && r9 == 0) || rbp == 0) && (0x7fffffffffffffff - rbx_2) >= r15_1) || (((rbp != 0 && *rsi_3 != 0) && rbx_2 == r12_1) && rax_11 != 0)))\n                    {\n                        if (r12_1 == 0)\n                        {\n                            break;\n                        }\n                        continue;\n                    }\n                    if (((((rbp != 0 && (((*rsi_3 != 0 && rbx_2 != r12_1) || ((*rsi_3 != 0 && rbx_2 == r12_1) && rax_11 == 0)) || *rsi_3 == 0)) && r9 == 0) || rbp == 0) && (0x7fffffffffffffff - rbx_2) < r15_1))\n                    {\n                        error(0, 0, dcgettext(nullptr, \"overflow reading %s\", 5), sub_40ddd0(4, arg7));\n                        return 0;\n                    }\n                }\n                uint64_t temp2_1 = var_80;\n                var_80 = (var_80 - rax_4);\n                *arg11 = rbp;\n                if (temp2_1 == rax_4)\n                {\n                    r13_2 = r15_1;\n                    break;\n                }\n                r14_1 = rbp;\n            }\n        }\n        if (rbp != 0)\n        {\n            /* tailcall */\n            return sub_404ad0(arg2, arg8, arg6, r13_2);\n        }\n    }\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_404fc0",
            "funcStartAddr": "0x404fc0",
            "funcEndAddr": "0x405088",
            "decompiledFuncCode": "uint64_t sub_404fc0(int64_t arg1, int64_t arg2, int64_t arg3, int32_t arg4, \n    void* arg5)\n{\n    if (*(arg5 + 0x25) == 0)\n    {\n        int32_t rbx_4;\n        rbx_4 = (arg4 & *(arg5 + 0x21));\n        if (rbx_4 != 0)\n        {\n            *__errno_location() = 0x5f;\n            return rbx_4;\n        }\n        return 1;\n    }\n    int32_t* rax = __errno_location();\n    uint32_t rbx_2;\n    if (*(arg5 + 0x23) != 0)\n    {\n        rbx_2 = *(arg5 + 0x26);\n        if (rbx_2 == 0)\n        {\n            *rax = 0x5f;\n        }\n    }\n    if ((*(arg5 + 0x23) == 0 || (*(arg5 + 0x23) != 0 && rbx_2 != 0)))\n    {\n        *rax = 0x5f;\n        error(0, *rax, dcgettext(nullptr, \"failed to get security context o\u2026\", 5), sub_40ddd0(4, arg1));\n        rbx_2 = *(arg5 + 0x26);\n    }\n    return (rbx_2 ^ 1);\n}\n\n"
        },
        {
            "funcName": "sub_405090",
            "funcStartAddr": "0x405090",
            "funcEndAddr": "0x405103",
            "decompiledFuncCode": "int64_t sub_405090(uint64_t arg1, int64_t arg2, int64_t arg3, void* arg4)\n{\n    int32_t* rax = __errno_location();\n    if ((*(arg4 + 0x23) != 0 && *(arg4 + 0x26) == 0))\n    {\n        *rax = 0x5f;\n        return 0;\n    }\n    *rax = 0x5f;\n    error(0, *rax, dcgettext(nullptr, \"failed to set the security conte\u2026\", 5), sub_40dcf0(0, 4, arg1));\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_405110",
            "funcStartAddr": "0x405110",
            "funcEndAddr": "0x405136",
            "decompiledFuncCode": "int64_t* sub_405110(void* arg1)\n{\n    int64_t* rax = sub_40b910(0x3d, nullptr, 0x40c2d0, 0x40c310, 0x40c380);\n    *(arg1 + 0x38) = rax;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405140",
            "funcStartAddr": "0x405140",
            "funcEndAddr": "0x405166",
            "decompiledFuncCode": "int64_t* sub_405140(void* arg1)\n{\n    int64_t* rax = sub_40b910(0x3d, nullptr, 0x40c300, 0x40c310, 0x40c380);\n    *(arg1 + 0x40) = rax;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405170",
            "funcStartAddr": "0x405170",
            "funcEndAddr": "0x4051a1",
            "decompiledFuncCode": "int64_t sub_405170(int128_t* arg1)\n{\n    int128_t zmm0 = 0;\n    arg1[4] = 0;\n    *arg1 = zmm0;\n    arg1[1] = zmm0;\n    arg1[2] = zmm0;\n    arg1[3] = zmm0;\n    int64_t rax;\n    rax = geteuid() == 0;\n    *(arg1 + 0x1b) = rax;\n    *(arg1 + 0x1a) = rax;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4051b0",
            "funcStartAddr": "0x4051b0",
            "funcEndAddr": "0x4051d4",
            "decompiledFuncCode": "int32_t* sub_4051b0(void* arg1)\n{\n    int32_t rdx = *__errno_location();\n    int32_t* rax;\n    rax = rdx == 1;\n    rdx = rdx == 0x16;\n    rax = (rax | rdx);\n    if (rax != 0)\n    {\n        rax = (*(arg1 + 0x1a) ^ 1);\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4051e0",
            "funcStartAddr": "0x4051e0",
            "funcEndAddr": "0x4053cb",
            "decompiledFuncCode": "uint64_t sub_4051e0(void* arg1, int64_t arg2, int32_t arg3, void* arg4, \n    char arg5, void* arg6)\n{\n    int32_t r14 = *(arg4 + 0x1c);\n    int32_t r13 = *(arg4 + 0x20);\n    if (arg5 != 0)\n    {\n    label_405250:\n        uint64_t rdx_3 = r13;\n        uint64_t rsi_2 = r14;\n        if (arg3 == 0xffffffff)\n        {\n            int32_t rdx_4;\n            if (lchown(arg2, rsi_2, rdx_3) == 0)\n            {\n            label_4052c0:\n                rdx_4 = 1;\n            }\n            else\n            {\n                int32_t* rax_10 = __errno_location();\n                int32_t rbx_1 = *rax_10;\n                if ((rbx_1 == 1 || rbx_1 == 0x16))\n                {\n                    lchown(arg2, 0xffffffff, r13);\n                    *rax_10 = rbx_1;\n                }\n            label_405288:\n                rdx_4 = 0;\n                if (sub_4051b0(arg1) == 0)\n                {\n                    error(0, *__errno_location(), dcgettext(nullptr, \"failed to preserve ownership for\u2026\", 5), sub_40ddd0(4, arg2));\n                label_405346:\n                    rdx_4 = (-*(arg1 + 0x24));\n                }\n            }\n            return rdx_4;\n        }\n        if (fchown(arg3, rsi_2, rdx_3) == 0)\n        {\n            goto label_4052c0;\n        }\n        int32_t* rax_6 = __errno_location();\n        int32_t r14_1 = *rax_6;\n        if ((r14_1 == 1 || r14_1 == 0x16))\n        {\n            fchown(arg3, 0xffffffff, r13);\n            *rax_6 = r14_1;\n        }\n        goto label_405288;\n    }\n    int32_t rdx;\n    int32_t rsi;\n    if ((*(arg1 + 0x18) & 0xff0000000000ff) != 0)\n    {\n        rsi = *(arg6 + 0x18);\n        rdx = *(arg4 + 0x18);\n    }\n    else\n    {\n        if (*(arg1 + 0x2b) == 0)\n        {\n            goto label_405250;\n        }\n        rsi = *(arg6 + 0x18);\n        rdx = *(arg1 + 0x10);\n    }\n    int32_t rax_2;\n    *rax_2[1] = (*(!rdx)[1] | 0xe);\n    if (((rax_2 & rsi) & 0xfff) == 0)\n    {\n        goto label_405250;\n    }\n    if (sub_40c480(arg2, arg3, ((rdx & rsi) & 0x1c0)) == 0)\n    {\n        goto label_405250;\n    }\n    int32_t* rax_15 = __errno_location();\n    int32_t rax_16 = *rax_15;\n    if (((rax_16 != 1 && rax_16 != 0x16) || ((rax_16 == 1 || rax_16 == 0x16) && *(arg1 + 0x1b) != 0)))\n    {\n        error(0, *rax_15, dcgettext(nullptr, \"clearing permissions for %s\", 5), sub_40ddd0(4, arg2));\n    }\n    goto label_405346;\n}\n\n"
        },
        {
            "funcName": "sub_4053d0",
            "funcStartAddr": "0x4053d0",
            "funcEndAddr": "0x4053fa",
            "decompiledFuncCode": "uint64_t sub_4053d0()\n{\n    int32_t rbx = data_61b3b0;\n    if (rbx == 0xffffffff)\n    {\n        int32_t rax_1 = umask(0);\n        data_61b3b0 = rax_1;\n        umask(rax_1);\n        return rax_1;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_405400",
            "funcStartAddr": "0x405400",
            "funcEndAddr": "0x40927c",
            "decompiledFuncCode": "uint64_t sub_405400(char* arg1, char* arg2, int32_t arg3, char* arg4, \n    char* arg5, int32_t* arg6, int32_t arg7, char* arg8, char* arg9, \n    char* arg10)\n{\n    int64_t rbp;\n    int64_t __saved_rbp = rbp;\n    uint64_t r15;\n    uint64_t __saved_r15 = r15;\n    int64_t r14;\n    int64_t __saved_r14 = r14;\n    char* r14_1 = arg1;\n    int64_t r13;\n    int64_t __saved_r13 = r13;\n    int32_t* r13_1 = arg6;\n    int64_t r12;\n    int64_t __saved_r12 = r12;\n    int64_t rbx;\n    int64_t __saved_rbx = rbx;\n    void var_378;\n    void* rsp_1 = &var_378;\n    bool cond:0 = arg10 != 0;\n    uint64_t rbx_1 = arg7;\n    if ((arg6[6] != 0 && cond:0 != 0))\n    {\n        *arg10 = 0;\n    }\n    bool cond:2 = r13_1[1] == 2;\n    *arg9 = 0;\n    int64_t var_278;\n    int64_t* var_2e0 = &var_278;\n    int64_t* rdx = &var_278;\n    char* rsi_1;\n    if (cond:2)\n    {\n        rsi_1 = r14_1;\n        r15 = __lxstat(1, r14_1, rdx) != 0;\n        if (r15 != 0)\n        {\n            goto label_405cac;\n        }\n    label_4054a8:\n        int32_t var_260;\n        int32_t rax_5 = (var_260 & 0xf000);\n        char* rax_135;\n        int32_t rdx_46;\n        char* rsi_57;\n        if (rax_5 == 0x4000)\n        {\n            if (*(r13_1 + 0x2a) == 0)\n            {\n                rdx_46 = 5;\n                rbx_1 = sub_40ddd0(4, rsi_1);\n                if (*(r13_1 + 0x19) == 0)\n                {\n                    goto label_40688f;\n                }\n                rsi_57 = \"omitting directory %s\";\n            label_406744:\n                rax_135 = dcgettext(nullptr, rsi_57, 5);\n                goto label_406755;\n            }\n            if (rbx_1 == 0)\n            {\n                goto label_4054e2;\n            }\n            goto label_40611d;\n        }\n        if (rbx_1 == 0)\n        {\n            goto label_4054e2;\n        }\n        int64_t* rdi = *(r13_1 + 0x40);\n        if (*r13_1 == 0)\n        {\n            char rax_84 = sub_40ad30(rdi, r14_1, var_2e0);\n            if (rax_84 == 0)\n            {\n            label_40611d:\n                sub_40aca0(*(r13_1 + 0x40), r14_1, var_2e0);\n                goto label_4054e2;\n            }\n            char* var_2c0;\n            var_2c0 = rax_84;\n            error(0, 0, dcgettext(nullptr, \"warning: source file %s specifie\u2026\", 5), sub_40ddd0(4, r14_1));\n            r15 = var_2c0;\n            goto label_405cf2;\n        }\n        sub_40aca0(rdi, r14_1, var_2e0);\n    label_4054e2:\n        int32_t var_2e8_1 = 1;\n        int32_t rax_6 = r13_1[1];\n        if (rax_6 != 4)\n        {\n            rax_6 = rax_6 == 3;\n            var_2e8_1 = (rax_6 & rbx_1);\n        }\n        dev_t* var_328;\n        dev_t* var_318;\n        uint64_t var_308_1;\n        char* var_2f8_2;\n        bool var_2d8_1;\n        bool var_2c8;\n        int64_t var_270;\n        int64_t var_1e8;\n        int64_t var_1e0;\n        int32_t var_1d0;\n        dev_t var_158;\n        int64_t var_150;\n        int32_t var_140;\n        int128_t var_128;\n        int64_t var_118;\n        dev_t var_c8;\n        int64_t var_c0;\n        int128_t var_b8;\n        int32_t var_b0;\n        int32_t var_a8;\n        int128_t var_98;\n        int128_t var_88;\n        char rcx_1;\n        char* rcx_2;\n        char* rdx_13;\n        char* rbx_2;\n        char* rsi_7;\n        int64_t rdi_15;\n        char* r8_1;\n        char* r12_4;\n        if (arg3 != 0)\n        {\n        label_405840:\n            var_2d8_1 = true;\n            rcx_1 = 0;\n            var_308_1 = 0;\n        label_405854:\n            int64_t var_268;\n            if (rbx_1 != 0)\n            {\n                if (*(r13_1 + 0x38) == 0)\n                {\n                    goto label_40585c;\n                }\n            label_405790:\n                if (r13_1[6] != 0)\n                {\n                    if (*(r13_1 + 0x2e) == 0)\n                    {\n                        goto label_405d20;\n                    }\n                    goto label_405ee0;\n                }\n                if (*r13_1 == 0)\n                {\n                    int64_t* rdx_10 = &var_1e8;\n                    if (rcx_1 != 0)\n                    {\n                        goto label_4057be;\n                    }\n                    if (__lxstat(1, arg2, &var_c8) != 0)\n                    {\n                        goto label_40585c;\n                    }\n                    rdx_10 = &var_c8;\n                label_4057be:\n                    if ((rdx_10[3] & 0xf000) != 0xa000)\n                    {\n                        goto label_40585c;\n                    }\n                    if (sub_40ad30(*(r13_1 + 0x38), arg2, rdx_10) == 0)\n                    {\n                        goto label_40585c;\n                    }\n                    r12_4 = sub_40dcf0(1, 4, arg2);\n                    rsi_7 = \"will not copy %s through just-cr\u2026\";\n                    rbx_2 = sub_40dcf0(0, 4, r14_1);\n                label_40581f:\n                    r8_1 = r12_4;\n                    rcx_2 = rbx_2;\n                    rdx_13 = dcgettext(nullptr, rsi_7, 5);\n                label_40582e:\n                    error(0, 0, rdx_13, rcx_2, r8_1);\n                    goto label_405833;\n                }\n                if (*(r13_1 + 0x2e) != 0)\n                {\n                    goto label_405872;\n                }\n                if (rax_5 == 0x4000)\n                {\n                    goto label_406260;\n                }\n            label_4058a3:\n                if (*(r13_1 + 0x22) == 0)\n                {\n                    var_2f8_2 = nullptr;\n                    var_2c8 = var_2d8_1;\n                label_4058cd:\n                    char* r12_6 = (var_260 & 0xfff);\n                    if (*(r13_1 + 0x2b) != 0)\n                    {\n                        r12_6 = (r13_1[4] & 0xfff);\n                    }\n                    int32_t var_34c;\n                    bool var_329_1;\n                    int32_t var_310_1;\n                    char* var_2f0;\n                    char var_2a8;\n                    int32_t rdx_16;\n                    char const* const rsi_38;\n                    char const* const rsi_41;\n                    bool r8_4;\n                    if (*(r13_1 + 0x1d) != 0)\n                    {\n                        char rax_89;\n                        rax_89 = sub_404fc0(r14_1, arg2, var_260, var_2c8, r13_1);\n                        if (rax_89 == 0)\n                        {\n                            goto label_405cf2;\n                        }\n                        var_310_1 = (r12_6 & 0x3f);\n                        if (rax_5 == 0x4000)\n                        {\n                            goto label_4061d1;\n                        }\n                    label_405931:\n                        char rax_28 = r13_1[0xb];\n                        var_2f0 = rax_28;\n                        int32_t var_25c;\n                        int32_t var_258;\n                        dev_t var_230;\n                        int64_t var_228;\n                        int64_t var_220;\n                        int64_t var_218;\n                        if (rax_28 == 0)\n                        {\n                            bool rax_96 = *(r13_1 + 0x17);\n                            var_329_1 = rax_96;\n                            if (rax_96 != 0)\n                            {\n                                char rax_152 = sub_4049c0(r14_1, arg2, *(r13_1 + 0x16), 0, var_2e8_1);\n                                r8_4 = false;\n                                var_329_1 = false;\n                                var_2e8_1 = rax_152;\n                                if (rax_152 != 0)\n                                {\n                                    goto label_4059bf;\n                                }\n                                goto label_406380;\n                            }\n                            if (rax_5 != 0x8000)\n                            {\n                                bool r8_3 = (rax_5 != 0xa000 & r13_1[5]);\n                                if (r8_3 != 0)\n                                {\n                                    goto label_406cc8;\n                                }\n                                if (rax_5 == 0x1000)\n                                {\n                                    var_c8 = 0;\n                                    mode_t rax_296 = ((!var_310_1) & var_260);\n                                    r12_6 = rax_296;\n                                    r8_4 = r8_3;\n                                    if (__xmknod(0, arg2, rax_296, &var_c8) != 0)\n                                    {\n                                        r8_4 = r8_3;\n                                        if (mkfifo(arg2, (r12_6 & 0xffffefff)) == 0)\n                                        {\n                                            goto label_407ab8;\n                                        }\n                                        rsi_41 = \"cannot create fifo %s\";\n                                        rbx_1 = sub_40ddd0(4, arg2);\n                                        goto label_406362;\n                                    }\n                                label_407ab8:\n                                    var_2f0 = r8_4;\n                                    var_329_1 = r8_4;\n                                    var_2e8_1 = 1;\n                                    goto label_4059bf;\n                                }\n                                r12_6 = (var_260 & 0xb000) == 0x2000;\n                                int32_t rax_99;\n                                rax_99 = rax_5 == 0xc000;\n                                r12_6 = (r12_6 | rax_99);\n                                var_2e8_1 = r12_6;\n                                if (r12_6 != 0)\n                                {\n                                    dev_t var_250;\n                                    var_c8 = var_250;\n                                    r8_4 = r8_3;\n                                    var_2f0 = r8_4;\n                                    var_329_1 = r8_4;\n                                    if (__xmknod(0, arg2, ((!var_310_1) & var_260), &var_c8) == 0)\n                                    {\n                                        goto label_4059bf;\n                                    }\n                                    rsi_41 = \"cannot create special file %s\";\n                                    rbx_1 = sub_40ddd0(4, arg2);\n                                    goto label_406362;\n                                }\n                                if (rax_5 != 0xa000)\n                                {\n                                    rsi_38 = \"%s has unknown file type\";\n                                    rbx_1 = sub_40ddd0(4, r14_1);\n                                    goto label_406235;\n                                }\n                                int64_t var_248;\n                                char* rax_272 = sub_409c30(r14_1, var_248);\n                                r12_6 = rax_272;\n                                if (rax_272 == 0)\n                                {\n                                    rsi_41 = \"cannot read symbolic link %s\";\n                                    rbx_1 = sub_40ddd0(4, r14_1);\n                                    goto label_406362;\n                                }\n                                if (sub_409a40(rax_272, 0xffffff9c, arg2, *(r13_1 + 0x16)) >= 0)\n                                {\n                                    goto label_40781a;\n                                }\n                                int32_t rax_336 = *__errno_location();\n                                bool var_2c8_3;\n                                var_2c8_3 = rax_336;\n                                if (rax_336 == 0)\n                                {\n                                    goto label_40781a;\n                                }\n                                if (*(r13_1 + 0x2d) != 1)\n                                {\n                                    goto label_407f50;\n                                }\n                                if (var_2d8_1 != 0)\n                                {\n                                    goto label_407f50;\n                                }\n                                if ((var_1d0 & 0xf000) != 0xa000)\n                                {\n                                    goto label_407f50;\n                                }\n                                int64_t rcx_79 = -1;\n                                char* rdi_122 = r12_6;\n                                while (rcx_79 != 0)\n                                {\n                                    bool cond:36_1 = var_2d8_1 != *rdi_122;\n                                    rdi_122 = &rdi_122[1];\n                                    rcx_79 = (rcx_79 - 1);\n                                    if ((!cond:36_1))\n                                    {\n                                        break;\n                                    }\n                                }\n                                int64_t var_1b8;\n                                if (var_1b8 != ((!rcx_79) - 1))\n                                {\n                                    goto label_407f50;\n                                }\n                                char* rax_458 = sub_409c30(arg2, var_1b8);\n                                if (rax_458 == 0)\n                                {\n                                    goto label_407f50;\n                                }\n                                var_2e8_1 = rax_458;\n                                int64_t rdx_157 = var_2e8_1;\n                                if (strcmp(rax_458, r12_6) != 0)\n                                {\n                                    free(rdx_157);\n                                label_407f50:\n                                    free(r12_6);\n                                    error(0, var_2c8_3, dcgettext(nullptr, \"cannot create symbolic link %s\", 5), sub_40ddd0(4, arg2));\n                                    goto label_406380;\n                                }\n                                free(rdx_157);\n                            label_40781a:\n                                free(r12_6);\n                                bool rax_274 = *(r13_1 + 0x25);\n                                var_329_1 = rax_274;\n                                if (rax_274 != 0)\n                                {\n                                    goto label_40687d;\n                                }\n                                r8_4 = *(r13_1 + 0x1d);\n                                if (r8_4 != 0)\n                                {\n                                    if (lchown(arg2, var_25c, var_258) == 0)\n                                    {\n                                        var_2f0 = r8_4;\n                                        var_2e8_1 = r8_4;\n                                        r8_4 = false;\n                                        goto label_4059bf;\n                                    }\n                                    char rax_375 = sub_4051b0(r13_1);\n                                    var_2f0 = rax_375;\n                                    if (rax_375 == 0)\n                                    {\n                                        error(0, *__errno_location(), dcgettext(nullptr, \"failed to preserve ownership for\u2026\", 5), arg2);\n                                        bool rax_453 = r13_1[9];\n                                        var_329_1 = rax_453;\n                                        if (rax_453 != 0)\n                                        {\n                                            goto label_406380;\n                                        }\n                                        var_2f0 = r8_4;\n                                        var_2e8_1 = r8_4;\n                                        r8_4 = false;\n                                        goto label_4059bf;\n                                    }\n                                    r8_4 = false;\n                                    var_2e8_1 = var_2f0;\n                                    goto label_4059bf;\n                                }\n                                var_329_1 = r8_4;\n                                var_2f0 = 1;\n                                var_2e8_1 = 1;\n                                goto label_4059bf;\n                            }\n                        label_406cc8:\n                            int32_t rsi_74;\n                            rsi_74 = r13_1[1] == 2;\n                            uint64_t var_320;\n                            var_320 = var_260;\n                            var_318 = *(r13_1 + 0x23);\n                            int32_t rax_181 = sub_40ac50(r14_1, (rsi_74 << 0x11), rdx_16);\n                            var_2c8 = rax_181;\n                            if (rax_181 < 0)\n                            {\n                                rsi_41 = \"cannot open %s for reading\";\n                                rbx_1 = sub_40ddd0(4, r14_1);\n                            label_406362:\n                                error(0, *__errno_location(), dcgettext(nullptr, rsi_41, 5), rbx_1);\n                                goto label_406380;\n                            }\n                            int32_t rax_182;\n                            int32_t rdx_66;\n                            int32_t rsi_77;\n                            rax_182 = __fxstat(1, var_2c8, &var_158);\n                            char r8_15;\n                            char* rcx_31;\n                            char* rdx_70;\n                            uint64_t rsi_82;\n                            if (rax_182 != 0)\n                            {\n                                var_2e8_1 = sub_40ddd0(4, r14_1);\n                                rcx_31 = var_2e8_1;\n                                rdx_70 = dcgettext(nullptr, \"cannot fstat %s\", 5);\n                                rsi_82 = *__errno_location();\n                            label_406ea4:\n                                error(0, rsi_82, rdx_70, rcx_31);\n                                r8_15 = 0;\n                                var_2e8_1 = 0;\n                            }\n                            else\n                            {\n                                if ((var_270 != var_150 || (var_270 == var_150 && var_278 != var_158)))\n                                {\n                                    rcx_31 = sub_40ddd0(4, r14_1);\n                                    rsi_82 = 0;\n                                    rdx_70 = dcgettext(nullptr, \"skipping file %s, as it was repl\u2026\", 5);\n                                    goto label_406ea4;\n                                }\n                                if ((var_270 == var_150 && var_278 == var_158))\n                                {\n                                    int32_t r12_18 = (r12_6 & 0x1ff);\n                                    int32_t var_350_1;\n                                    char* var_300;\n                                    if (var_2d8_1 == 0)\n                                    {\n                                        int32_t rax_186 = sub_40ac50(arg2, (((rsi_77 - rsi_77) & 0xfffffe00) + 0x201), rdx_66);\n                                        var_2f0 = rax_186;\n                                        bool rax_400;\n                                        bool r8_30;\n                                        if (((*(r13_1 + 0x20) & 0xff000000ff00) != 0 && rax_186 >= 0))\n                                        {\n                                            sub_405090(arg2, *(r13_1 + 0x25), 0, r13_1);\n                                            r8_30 = false;\n                                            rax_400 = *(r13_1 + 0x26);\n                                            var_2d8_1 = rax_400;\n                                        }\n                                        if ((((*(r13_1 + 0x20) & 0xff000000ff00) == 0 && var_2f0 >= 0) || (((*(r13_1 + 0x20) & 0xff000000ff00) != 0 && rax_186 >= 0) && rax_400 == 0)))\n                                        {\n                                            var_350_1 = 0;\n                                        label_408092:\n                                            int64_t* var_328_2 = &var_c8;\n                                            int32_t rax_346 = __fxstat(1, var_2f0, &var_c8);\n                                            var_300 = rax_346;\n                                            if (rax_346 != 0)\n                                            {\n                                                var_2e8_1 = sub_40ddd0(4, arg2);\n                                                error(0, *__errno_location(), dcgettext(nullptr, \"cannot fstat %s\", 5), var_2e8_1);\n                                                r8_30 = false;\n                                                var_2e8_1 = 0;\n                                            }\n                                            else if (var_318 == 0)\n                                            {\n                                            label_408560:\n                                                var_2e8_1 = 0;\n                                            label_4082ef:\n                                                if (*(r13_1 + 0x1f) != 0)\n                                                {\n                                                    var_2a8 = var_230;\n                                                    int64_t var_2a0_1 = var_228;\n                                                    int64_t var_298_1 = var_220;\n                                                    int64_t var_290_1 = var_218;\n                                                    if (sub_40f460(var_2f0, arg2, &var_2a8) != 0)\n                                                    {\n                                                        char* rax_396 = sub_40ddd0(4, arg2);\n                                                        error(0, *__errno_location(), dcgettext(nullptr, \"preserving times for %s\", 5), rax_396);\n                                                        if (r13_1[9] != 0)\n                                                        {\n                                                            goto label_40869e;\n                                                        }\n                                                    }\n                                                    goto label_4082fa;\n                                                }\n                                            label_4082fa:\n                                                if (*(r13_1 + 0x1d) != 0)\n                                                {\n                                                    int32_t var_ac;\n                                                    if (var_25c != var_ac)\n                                                    {\n                                                    label_408343:\n                                                        int32_t rax_368 = sub_4051e0(r13_1, arg2, var_2f0, var_2e0, var_2d8_1, var_328_2);\n                                                        if (rax_368 == 0xffffffff)\n                                                        {\n                                                            goto label_40869e;\n                                                        }\n                                                        if (rax_368 == 0)\n                                                        {\n                                                            var_320 = (var_320 & 0xfffff1ff);\n                                                        }\n                                                    }\n                                                    else if (var_258 != var_a8)\n                                                    {\n                                                        goto label_408343;\n                                                    }\n                                                    goto label_40835f;\n                                                }\n                                            label_40835f:\n                                                if (*(r13_1 + 0x27) != 0)\n                                                {\n                                                    if ((((var_b0 & 0x80) == 0 && geteuid() != 0) && sub_404780(var_2f0, arg2, 0x180) == 0))\n                                                    {\n                                                        sub_404780(var_2f0, arg2, ((!var_350_1) & r12_18));\n                                                    }\n                                                    goto label_40837d;\n                                                }\n                                            label_40837d:\n                                                if ((*(r13_1 + 0x18) & 0xff0000000000ff) != 0)\n                                                {\n                                                    r8_30 = true;\n                                                    if (sub_409b40(r14_1, var_2c8, arg2) != 0)\n                                                    {\n                                                        goto label_4087f3;\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    int32_t rdx_144;\n                                                    if (*(r13_1 + 0x2b) != 0)\n                                                    {\n                                                        rdx_144 = r13_1[4];\n                                                    label_408bcb:\n                                                        r8_30 = sub_409bd0(arg2, var_2f0, rdx_144) == 0;\n                                                    }\n                                                    else\n                                                    {\n                                                        if (r13_1[8] != 0)\n                                                        {\n                                                            rdx_144 = ((!sub_4053d0()) & 0x1b6);\n                                                            goto label_408bcb;\n                                                        }\n                                                        r8_30 = true;\n                                                        if (var_350_1 != 0)\n                                                        {\n                                                            var_300 = 1;\n                                                            r8_30 = true;\n                                                            if ((var_350_1 & (!sub_4053d0())) != 0)\n                                                            {\n                                                                r8_30 = true;\n                                                                if (sub_404780(var_2f0, arg2, r12_18) != 0)\n                                                                {\n                                                                    char* rax_479 = sub_40ddd0(4, arg2);\n                                                                    error(0, *__errno_location(), dcgettext(nullptr, \"preserving permissions for %s\", 5), rax_479);\n                                                                label_4087f3:\n                                                                    r8_30 = (r13_1[9] ^ 1);\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                            else if (r13_1[0xd] != 0)\n                                            {\n                                                if (ioctl(var_2f0, 0x40049409, var_2c8) == 0)\n                                                {\n                                                    goto label_408560;\n                                                }\n                                                if (r13_1[0xd] != 2)\n                                                {\n                                                    goto label_4080c9;\n                                                }\n                                                char* rax_445 = sub_40dcf0(1, 4, r14_1);\n                                                char* rax_446 = sub_40dcf0(0, 4, arg2);\n                                                var_2e8_1 = dcgettext(nullptr, \"failed to clone %s from %s\", 5);\n                                                error(0, *__errno_location(), var_2e8_1, rax_446, rax_445);\n                                                r8_30 = false;\n                                                var_2e8_1 = 0;\n                                            }\n                                            else\n                                            {\n                                            label_4080c9:\n                                                r12_6 = getpagesize();\n                                                void* rax_348 = *var_98[8];\n                                                void* var_348_2 = rax_348;\n                                                void* var_338_2 = rax_348;\n                                                if ((rax_348 - 0x20000) > 0x1ffffffffffe0000)\n                                                {\n                                                    var_338_2 = 0x20000;\n                                                    void* rax_349 = 0x200;\n                                                    if ((var_348_2 - 1) <= 0x1fffffffffffffff)\n                                                    {\n                                                        rax_349 = var_348_2;\n                                                    }\n                                                    var_348_2 = rax_349;\n                                                }\n                                                sub_40ac10(var_2c8, 0, 0, 2);\n                                                int32_t r9_7 = (var_140 & 0xf000);\n                                                if (r9_7 == 0x8000)\n                                                {\n                                                    int64_t rax_351;\n                                                    int64_t rdx_117;\n                                                    rdx_117 = HIGHD(var_128);\n                                                    rax_351 = LOWD(var_128);\n                                                    int64_t rax_352;\n                                                    rax_352 = var_118 < (COMBINE(rdx_117, rax_351) / 0x200);\n                                                    var_300 = rax_352;\n                                                }\n                                                var_2e8_1 = &r12_6[-1];\n                                                void* var_358_1;\n                                                char var_340;\n                                                int32_t var_330_2;\n                                                char var_32b_1;\n                                                uint64_t rdx_124;\n                                                int64_t r9_9;\n                                                if ((var_b0 & 0xf000) != 0x8000)\n                                                {\n                                                label_40819b:\n                                                    uint64_t rdi_95 = *var_128[8];\n                                                    uint64_t r8_26 = (0x7fffffffffffffff - r12_6);\n                                                    var_340 = r9_7;\n                                                    var_2e8_1 = r8_26;\n                                                    if ((rdi_95 - 0x20000) > 0x1ffffffffffe0000)\n                                                    {\n                                                        rdi_95 = 0x20000;\n                                                    }\n                                                    uint64_t rax_357 = sub_40a780(rdi_95, var_338_2, r8_26);\n                                                    int64_t r8_27 = var_2e8_1;\n                                                    if (var_340 == 0x8000)\n                                                    {\n                                                        void* rax_434 = var_128;\n                                                        if (var_338_2 > rax_434)\n                                                        {\n                                                            var_338_2 = (rax_434 + 1);\n                                                        }\n                                                    }\n                                                    uint64_t temp1_2 = (COMBINE(0, ((rax_357 + var_338_2) - 1)) % rax_357);\n                                                    void* rsi_134 = (((rax_357 + var_338_2) - 1) - temp1_2);\n                                                    bool cond:42_1 = ((rax_357 + var_338_2) - 1) == temp1_2;\n                                                    var_338_2 = rsi_134;\n                                                    if ((cond:42_1 || ((!cond:42_1) && r8_27 < rsi_134)))\n                                                    {\n                                                        var_338_2 = rax_357;\n                                                    }\n                                                    int64_t rax_362 = sub_4100e0((r12_6 + var_338_2));\n                                                    void* rcx_55 = &r12_6[(-1 + rax_362)];\n                                                    var_2e8_1 = rax_362;\n                                                    rdx_124 = (COMBINE(0, rcx_55) % r12_6);\n                                                    var_358_1 = (rcx_55 - rdx_124);\n                                                    if (var_300 != 0)\n                                                    {\n                                                        var_32b_1 = 0;\n                                                        var_330_2 = 1;\n                                                        goto label_408840;\n                                                    }\n                                                    var_348_2 = nullptr;\n                                                    var_300 = &var_2a8;\n                                                    r9_9 = r13_1[3] == 3;\n                                                    goto label_40829e;\n                                                }\n                                                int32_t rax_436 = r13_1[3];\n                                                if (rax_436 != 3)\n                                                {\n                                                    if (rax_436 != 2)\n                                                    {\n                                                        goto label_40819b;\n                                                    }\n                                                    if ((var_300 & 1) == 0)\n                                                    {\n                                                        goto label_40819b;\n                                                    }\n                                                    int64_t rax_438 = sub_4100e0((var_338_2 + r12_6));\n                                                    void* rcx_75 = &r12_6[(-1 + rax_438)];\n                                                    var_2e8_1 = rax_438;\n                                                    var_358_1 = (rcx_75 - (COMBINE(0, rcx_75) % r12_6));\n                                                    goto label_408d28;\n                                                }\n                                                int64_t rax_462 = sub_4100e0((var_338_2 + r12_6));\n                                                void* rcx_82 = &r12_6[(-1 + rax_462)];\n                                                var_2e8_1 = rax_462;\n                                                rdx_124 = (COMBINE(0, rcx_82) % r12_6);\n                                                var_358_1 = (rcx_82 - rdx_124);\n                                                char var_2b0;\n                                                char* rsi_163;\n                                                if (var_300 != 0)\n                                                {\n                                                label_408d28:\n                                                    var_330_2 = r13_1[3];\n                                                    var_32b_1 = var_318;\n                                                label_408840:\n                                                    char* rax_408 = var_128;\n                                                    r12_6 = nullptr;\n                                                    var_300 = &var_2a8;\n                                                    sub_409550(var_2c8, &var_2a8);\n                                                    int32_t var_360_1 = rbx_1;\n                                                    void* rcx_65 = nullptr;\n                                                    char var_32a_1 = r15;\n                                                    char r15_2 = var_318;\n                                                    var_340 = r14_1;\n                                                    void* r14_4 = nullptr;\n                                                    int64_t var_290;\n                                                    char var_287;\n                                                    int64_t var_280;\n                                                    char rax_409;\n                                                    do\n                                                    {\n                                                        rax_409 = sub_409580(var_300);\n                                                        if (rax_409 == 0)\n                                                        {\n                                                            break;\n                                                        }\n                                                        if (var_290 != 0)\n                                                        {\n                                                            break;\n                                                        }\n                                                    label_408a78:\n                                                        free(var_280);\n                                                        var_280 = 0;\n                                                        var_290 = 0;\n                                                    } while (var_287 == 0);\n                                                    if ((rax_409 != 0 && var_290 != 0))\n                                                    {\n                                                        void* rdx_138 = r14_4;\n                                                        char* rsi_155 = r12_6;\n                                                        int32_t r13_4 = 0;\n                                                        uint64_t rax_410 = 0;\n                                                        while (true)\n                                                        {\n                                                            char** rax_414 = (var_280 + (rax_410 * 0x18));\n                                                            r12_6 = *rax_414;\n                                                            r14_4 = rax_414[1];\n                                                            if (rax_408 < (r12_6 + r14_4))\n                                                            {\n                                                                if (r12_6 > rax_408)\n                                                                {\n                                                                    r12_6 = rax_408;\n                                                                }\n                                                                r14_4 = (rax_408 - r12_6);\n                                                            }\n                                                            r15_2 = 0;\n                                                            void* rcx_69 = (r12_6 - rsi_155);\n                                                            void* rcx_70 = (rcx_69 - rdx_138);\n                                                            void* r8_35;\n                                                            if (rcx_69 != rdx_138)\n                                                            {\n                                                                off64_t rax_416 = lseek(var_2c8, r12_6, 0);\n                                                                char rax_418;\n                                                                char* rsi_178;\n                                                                if (rax_416 < 0)\n                                                                {\n                                                                    r14_1 = var_340;\n                                                                    r15 = var_32a_1;\n                                                                    rbx_1 = var_360_1;\n                                                                    rsi_178 = \"cannot lseek %s\";\n                                                                    var_300 = sub_40ddd0(4, r14_1);\n                                                                }\n                                                                else if (var_330_2 != 1)\n                                                                {\n                                                                    rax_418 = sub_404ad0(var_2f0, arg2, var_330_2 == 3, rcx_70);\n                                                                    r15_2 = rax_418;\n                                                                    if (rax_418 == 0)\n                                                                    {\n                                                                    label_408a18:\n                                                                        r15 = var_32a_1;\n                                                                        r14_1 = var_340;\n                                                                        rbx_1 = var_360_1;\n                                                                    }\n                                                                }\n                                                                else\n                                                                {\n                                                                    if (sub_404690(var_2f0, rcx_70) != 0)\n                                                                    {\n                                                                        r8_35 = nullptr;\n                                                                    label_40890e:\n                                                                        char var_2b1;\n                                                                        *(rsp_1 - 0x10) = &var_2b1;\n                                                                        *(rsp_1 - 0x18) = &var_2b0;\n                                                                        *(rsp_1 - 0x20) = r14_4;\n                                                                        *(rsp_1 - 0x28) = arg2;\n                                                                        *(rsp_1 - 0x30) = var_340;\n                                                                        if (sub_404b90(var_2c8, var_2f0, var_358_1, var_338_2, r8_35, 1) != 0)\n                                                                        {\n                                                                            int64_t rax_412 = var_2b0;\n                                                                            rcx_65 = &r12_6[rax_412];\n                                                                            if (rax_412 != 0)\n                                                                            {\n                                                                                r15_2 = var_2b1;\n                                                                            }\n                                                                            if (rax_408 == rcx_65)\n                                                                            {\n                                                                                var_287 = 1;\n                                                                                goto label_408a78;\n                                                                            }\n                                                                            rax_410 = (r13_4 + 1);\n                                                                            rsi_155 = r12_6;\n                                                                            rdx_138 = r14_4;\n                                                                            r13_4 = rax_410;\n                                                                            if (rax_410 >= var_290)\n                                                                            {\n                                                                                goto label_408a78;\n                                                                            }\n                                                                            continue;\n                                                                        }\n                                                                        goto label_408a18;\n                                                                    }\n                                                                    r15 = var_32a_1;\n                                                                    r14_1 = var_340;\n                                                                    rbx_1 = var_360_1;\n                                                                    rsi_178 = \"%s: write failed\";\n                                                                    var_300 = sub_40dea0(0, 3, arg2);\n                                                                }\n                                                                if ((rax_416 < 0 || (rax_416 >= 0 && var_330_2 == 1)))\n                                                                {\n                                                                    error(0, *__errno_location(), dcgettext(nullptr, rsi_178, 5), var_300);\n                                                                }\n                                                                if (((rax_416 < 0 || (rax_416 >= 0 && var_330_2 == 1)) || ((rax_416 >= 0 && var_330_2 != 1) && rax_418 == 0)))\n                                                                {\n                                                                    free(var_280);\n                                                                    break;\n                                                                }\n                                                            }\n                                                            r8_35 = nullptr;\n                                                            if (var_330_2 == 3)\n                                                            {\n                                                                r8_35 = var_348_2;\n                                                            }\n                                                            goto label_40890e;\n                                                        }\n                                                        goto label_40869e;\n                                                    }\n                                                    void* var_318_2;\n                                                    if (rax_409 == 0)\n                                                    {\n                                                        var_318_2 = r15_2;\n                                                        r14_1 = var_340;\n                                                        r15 = var_32a_1;\n                                                        rbx_1 = var_360_1;\n                                                        if (var_287 != 0)\n                                                        {\n                                                            goto label_408ad1;\n                                                        }\n                                                        char var_288;\n                                                        if (var_288 == 0)\n                                                        {\n                                                            rsi_163 = \"%s: failed to get extents info\";\n                                                            var_300 = sub_40dea0(0, 3, r14_1);\n                                                            goto label_408b73;\n                                                        }\n                                                        void* rax_485 = nullptr;\n                                                        r9_9 = r13_1[3] == 3;\n                                                        if (var_32b_1 != 0)\n                                                        {\n                                                            rax_485 = var_348_2;\n                                                        }\n                                                        var_348_2 = rax_485;\n                                                        goto label_40829e;\n                                                    }\n                                                    var_318_2 = r15_2;\n                                                    r14_1 = var_340;\n                                                    r15 = var_32a_1;\n                                                    rbx_1 = var_360_1;\n                                                label_408ad1:\n                                                    r12_6 = rax_408 > rcx_65;\n                                                    if ((rax_408 > rcx_65 || (rax_408 <= rcx_65 && var_318_2 != 0)))\n                                                    {\n                                                        if (var_330_2 == 1)\n                                                        {\n                                                            if (sub_404690(var_2f0, (rax_408 - rcx_65)) == 0)\n                                                            {\n                                                                goto label_408f8a;\n                                                            }\n                                                        }\n                                                        else\n                                                        {\n                                                            __off64_t rcx_72 = rcx_65;\n                                                            if (ftruncate(var_2f0) != 0)\n                                                            {\n                                                                goto label_408f8a;\n                                                            }\n                                                            if (((var_330_2 == 3 && r12_6 != 0) && sub_404740(var_2f0, rcx_72, (rax_408 - rcx_72)) < 0))\n                                                            {\n                                                                rsi_163 = \"error deallocating %s\";\n                                                                var_300 = sub_40ddd0(4, arg2);\n                                                                goto label_408b73;\n                                                            }\n                                                        }\n                                                    }\n                                                    goto label_4082ef;\n                                                }\n                                                r9_9 = r13_1[3] == 3;\n                                                var_300 = &var_2a8;\n                                            label_40829e:\n                                                *(rsp_1 - 8) = rdx_124;\n                                                *(rsp_1 - 0x10) = &var_2b0;\n                                                *(rsp_1 - 0x18) = var_300;\n                                                *(rsp_1 - 0x20) = -1;\n                                                *(rsp_1 - 0x28) = arg2;\n                                                *(rsp_1 - 0x30) = r14_1;\n                                                if (sub_404b90(var_2c8, var_2f0, var_358_1, var_338_2, var_348_2, r9_9) == 0)\n                                                {\n                                                    goto label_40869e;\n                                                }\n                                                if (var_2b0 == 0)\n                                                {\n                                                    goto label_4082ef;\n                                                }\n                                                if (ftruncate(var_2f0) >= 0)\n                                                {\n                                                    goto label_4082ef;\n                                                }\n                                            label_408f8a:\n                                                rsi_163 = \"failed to extend %s\";\n                                                var_300 = sub_40ddd0(4, arg2);\n                                            label_408b73:\n                                                error(0, *__errno_location(), dcgettext(nullptr, rsi_163, 5), var_300);\n                                            label_40869e:\n                                                r8_30 = false;\n                                            }\n                                            goto label_4083b6;\n                                        }\n                                        if ((((*(r13_1 + 0x20) & 0xff000000ff00) != 0 && rax_186 >= 0) && rax_400 != 0))\n                                        {\n                                            var_2d8_1 = false;\n                                            var_2e8_1 = 0;\n                                        label_4083b6:\n                                            var_300 = r8_30;\n                                            r8_15 = var_300;\n                                            if (close(var_2f0) < 0)\n                                            {\n                                                char* rax_370 = sub_40ddd0(4, arg2);\n                                                error(0, *__errno_location(), dcgettext(nullptr, \"failed to close %s\", 5), rax_370);\n                                                r8_15 = 0;\n                                            }\n                                        }\n                                        if ((((*(r13_1 + 0x20) & 0xff000000ff00) == 0 && var_2f0 < 0) || ((*(r13_1 + 0x20) & 0xff000000ff00) != 0 && rax_186 < 0)))\n                                        {\n                                            r12_6 = __errno_location();\n                                            if (*(r13_1 + 0x16) == 0)\n                                            {\n                                                r12_6 = *r12_6;\n                                                if ((r12_6 == 2 && r13_1[6] == 0))\n                                                {\n                                                    var_350_1 = 0;\n                                                    goto label_406e08;\n                                                }\n                                                var_2d8_1 = false;\n                                            label_406e87:\n                                                var_2e8_1 = sub_40ddd0(4, arg2);\n                                                rcx_31 = var_2e8_1;\n                                                rsi_82 = r12_6;\n                                                rdx_70 = dcgettext(nullptr, \"cannot create regular file %s\", 5);\n                                                goto label_406ea4;\n                                            }\n                                            if (unlink(arg2) != 0)\n                                            {\n                                                var_2e8_1 = sub_40ddd0(4, arg2);\n                                                rcx_31 = var_2e8_1;\n                                                rsi_82 = *r12_6;\n                                                rdx_70 = dcgettext(nullptr, \"cannot remove %s\", 5);\n                                                goto label_406ea4;\n                                            }\n                                            if (*(r13_1 + 0x2e) != 0)\n                                            {\n                                                __printf_chk(1, dcgettext(nullptr, \"removed %s\\n\", 5), sub_40ddd0(4, arg2));\n                                            }\n                                            bool rax_189 = *(r13_1 + 0x21);\n                                            var_2d8_1 = rax_189;\n                                            var_350_1 = var_310_1;\n                                            if (rax_189 == 0)\n                                            {\n                                                goto label_406e08;\n                                            }\n                                            char rax_460 = sub_404fc0(r14_1, arg2, r12_18, 1, r13_1);\n                                            r8_15 = rax_460;\n                                            if (rax_460 != 0)\n                                            {\n                                                goto label_407e49;\n                                            }\n                                            var_2e8_1 = 0;\n                                        }\n                                    }\n                                    else\n                                    {\n                                    label_407e49:\n                                        var_350_1 = var_310_1;\n                                    label_406e08:\n                                        int32_t r12_21 = ((!var_350_1) & r12_18);\n                                        var_2f0 = sub_40ac50(arg2, 0xc1, r12_21);\n                                        int32_t* rax_192 = __errno_location();\n                                        r12_6 = *rax_192;\n                                        var_300 = rax_192;\n                                        rax_192 = r12_6 == 0x11;\n                                        rax_192 = (rax_192 & (var_2f0 >> 0x1f));\n                                        var_328 = rax_192;\n                                        if (rax_192 == 0)\n                                        {\n                                            goto label_408508;\n                                        }\n                                        bool rax_193 = r13_1[6];\n                                        r12_6 = 0x11;\n                                        var_2d8_1 = rax_193;\n                                        if (rax_193 != 0)\n                                        {\n                                            goto label_406e87;\n                                        }\n                                        if (__lxstat(1, arg2, &var_c8) != 0)\n                                        {\n                                            goto label_408508;\n                                        }\n                                        if ((var_b0 & 0xf000) != 0xa000)\n                                        {\n                                            goto label_408508;\n                                        }\n                                        char r8_32 = r13_1[0xc];\n                                        if (r8_32 != 0)\n                                        {\n                                            var_2f0 = sub_40ac50(arg2, 0x41, r12_21);\n                                            r12_6 = *var_300;\n                                        label_408508:\n                                            bool rdx_69 = (r12_6 == 0x15 & (var_2f0 >> 0x1f));\n                                            var_2d8_1 = rdx_69;\n                                            if (rdx_69 == 0)\n                                            {\n                                                var_2d8_1 = true;\n                                                if (var_2f0 >= 0)\n                                                {\n                                                    goto label_408092;\n                                                }\n                                                goto label_406e87;\n                                            }\n                                            r12_6 = 0x15;\n                                            char* rdi_103 = arg2;\n                                            if (*arg2 != 0)\n                                            {\n                                                int64_t rcx_60 = -1;\n                                                while (rcx_60 != 0)\n                                                {\n                                                    bool cond:35_1 = 0 != *rdi_103;\n                                                    rdi_103 = &rdi_103[1];\n                                                    rcx_60 = (rcx_60 - 1);\n                                                    if ((!cond:35_1))\n                                                    {\n                                                        break;\n                                                    }\n                                                }\n                                                int32_t r12_33;\n                                                r12_33 = arg2[((!rcx_60) - 2)] != 0x2f;\n                                                r12_6 = (r12_33 + 0x14);\n                                            }\n                                            goto label_406e87;\n                                        }\n                                        var_2f0 = r8_32;\n                                        error(0, 0, dcgettext(nullptr, \"not writing through dangling sym\u2026\", 5), sub_40ddd0(4, arg2));\n                                        var_2e8_1 = 0;\n                                        r8_15 = var_2f0;\n                                        var_2d8_1 = var_328;\n                                    }\n                                }\n                            }\n                            var_2f0 = r8_15;\n                            bool r8_16 = var_2f0;\n                            if (close(var_2c8) < 0)\n                            {\n                                rbx_1 = sub_40ddd0(4, r14_1);\n                                error(0, *__errno_location(), dcgettext(nullptr, \"failed to close %s\", 5), rbx_1);\n                                free(var_2e8_1);\n                                goto label_406380;\n                            }\n                            free(var_2e8_1);\n                            r8_4 = r8_16;\n                            var_2f0 = 0;\n                            var_2e8_1 = r8_4;\n                            if (r8_4 != 0)\n                            {\n                                goto label_4059bf;\n                            }\n                            goto label_406380;\n                        }\n                        char temp3_1 = *r14_1;\n                        bool c_1 = temp3_1 < 0x2f;\n                        bool z_1 = temp3_1 == 0x2f;\n                        if (z_1)\n                        {\n                            goto label_405991;\n                        }\n                        char* rax_29 = sub_40aa60(arg2);\n                        void* const rsi_10 = &data_412a7e;\n                        int64_t rcx_4 = 2;\n                        char* rdi_7 = rax_29;\n                        r12_6 = rax_29;\n                        while (rcx_4 != 0)\n                        {\n                            char temp4_1 = *rsi_10;\n                            char temp5_1 = *rdi_7;\n                            c_1 = temp4_1 < temp5_1;\n                            z_1 = temp4_1 == temp5_1;\n                            rsi_10 = (rsi_10 + 1);\n                            rdi_7 = &rdi_7[1];\n                            rcx_4 = (rcx_4 - 1);\n                            if ((!z_1))\n                            {\n                                break;\n                            }\n                        }\n                        rax_29 = ((!z_1) && (!c_1));\n                        rax_29 = (rax_29 - 0);\n                        if (rax_29 != 0)\n                        {\n                            if (__xstat(1, &data_412a7e, &var_158) != 0)\n                            {\n                                goto label_405978;\n                            }\n                            if (__xstat(1, r12_6, &var_c8) != 0)\n                            {\n                                goto label_405978;\n                            }\n                            if (var_150 != var_c0)\n                            {\n                            label_407251:\n                                free(r12_6);\n                                rsi_38 = \"%s: can make relative symbolic l\u2026\";\n                                rbx_1 = sub_40dea0(0, 3, arg2);\n                                goto label_406235;\n                            }\n                            if (var_158 == var_c8)\n                            {\n                                goto label_405978;\n                            }\n                            goto label_407251;\n                        }\n                    label_405978:\n                        free(r12_6);\n                    label_405991:\n                        if (sub_409a40(r14_1, 0xffffff9c, arg2, *(r13_1 + 0x16)) < 0)\n                        {\n                            rbx_1 = sub_40dcf0(1, 4, r14_1);\n                            char* rax_268 = sub_40dcf0(0, 4, arg2);\n                            error(0, *__errno_location(), dcgettext(nullptr, \"cannot create symbolic link %s t\u2026\", 5), rax_268, rbx_1);\n                        label_406380:\n                            if (*(r13_1 + 0x25) != 0)\n                            {\n                                goto label_40687d;\n                            }\n                            if (var_2f8_2 == 0)\n                            {\n                                sub_4093f0();\n                            }\n                            goto label_405e2a;\n                        }\n                        var_329_1 = false;\n                        r8_4 = false;\n                        var_2e8_1 = var_2f0;\n                    label_4059bf:\n                        r12_6 = rax_5 != 0x4000;\n                        if (var_2d8_1 == 0)\n                        {\n                            if (r13_1[5] == 1)\n                            {\n                                goto label_405a20;\n                            }\n                            if (r12_6 == 0)\n                            {\n                                goto label_405a20;\n                            }\n                            if ((*(r13_1 + 0x20) & 0xff000000ff00) == 0)\n                            {\n                                goto label_405a20;\n                            }\n                            sub_405090(arg2, *(r13_1 + 0x25), 0, r13_1);\n                            if (*(r13_1 + 0x26) != 0)\n                            {\n                                goto label_406380;\n                            }\n                            goto label_405a20;\n                        }\n                    label_405a20:\n                        if (rbx_1 != 0)\n                        {\n                            if (*(r13_1 + 0x38) != 0)\n                            {\n                                bool var_2c8_2 = r8_4;\n                                r8_4 = var_2c8_2;\n                                if (__lxstat(1, arg2, &var_c8) == 0)\n                                {\n                                    sub_40aca0(*(r13_1 + 0x38), arg2, &var_c8);\n                                    r8_4 = var_2c8_2;\n                                }\n                            }\n                            goto label_405a78;\n                        }\n                    label_405a78:\n                        if (*(r13_1 + 0x17) != 0)\n                        {\n                            if (r12_6 == 0)\n                            {\n                                goto label_405a88;\n                            }\n                        label_406170:\n                            r15 = var_2e8_1;\n                            goto label_405cf2;\n                        }\n                    label_405a88:\n                        if (r8_4 != 0)\n                        {\n                            goto label_406170;\n                        }\n                        if (*(r13_1 + 0x1f) != 0)\n                        {\n                            int128_t* rsi_14 = &var_c8;\n                            var_c8 = var_230;\n                            int64_t var_c0_1 = var_228;\n                            var_b8 = var_220;\n                            var_b0 = var_218;\n                            if (var_2f0 == 0)\n                            {\n                                if (sub_40f8a0(arg2, rsi_14) == 0)\n                                {\n                                    goto label_405b5d;\n                                }\n                            label_405b0e:\n                                error(0, *__errno_location(), dcgettext(nullptr, \"preserving times for %s\", 5), sub_40ddd0(4, arg2));\n                                if (r13_1[9] == 0)\n                                {\n                                    goto label_405b50;\n                                }\n                            label_405833:\n                                r15 = 0;\n                                goto label_405cf2;\n                            }\n                            if (sub_40f8b0(arg2, rsi_14) == 0)\n                            {\n                                goto label_405b50;\n                            }\n                            if (*__errno_location() != 0x26)\n                            {\n                                goto label_405b0e;\n                            }\n                            goto label_405b50;\n                        }\n                    label_405b50:\n                        if (var_2f0 != 0)\n                        {\n                            goto label_406170;\n                        }\n                    label_405b5d:\n                        if (*(r13_1 + 0x1d) != 0)\n                        {\n                            if (var_2d8_1 != 0)\n                            {\n                            label_405ba4:\n                                int32_t rax_44 = sub_4051e0(r13_1, arg2, 0xffffffff, var_2e0, var_2d8_1, &var_1e8);\n                                if (rax_44 == 0xffffffff)\n                                {\n                                    goto label_405833;\n                                }\n                                int32_t rdx_21;\n                                *rdx_21[1] = (*var_260[1] & 0xf1);\n                                if (rax_44 != 0)\n                                {\n                                    rdx_21 = var_260;\n                                }\n                                int32_t var_2d0_1 = rdx_21;\n                                goto label_405bd2;\n                            }\n                            int32_t var_1cc;\n                            if (var_25c != var_1cc)\n                            {\n                                goto label_405ba4;\n                            }\n                            int32_t var_1c8;\n                            if (var_258 != var_1c8)\n                            {\n                                goto label_405ba4;\n                            }\n                            goto label_405bd2;\n                        }\n                    label_405bd2:\n                        if ((*(r13_1 + 0x18) & 0xff0000000000ff) != 0)\n                        {\n                            if (sub_409b40(r14_1, 0xffffffff, arg2) == 0)\n                            {\n                                goto label_406170;\n                            }\n                            goto label_405c6b;\n                        }\n                        int32_t rdx_95;\n                        if (*(r13_1 + 0x2b) != 0)\n                        {\n                            rdx_95 = r13_1[4];\n                        label_4078c2:\n                            uint32_t rax_278 = var_2e8_1;\n                            if (sub_409bd0(arg2, 0xffffffff, rdx_95) != 0)\n                            {\n                                rax_278 = r15;\n                            }\n                            r15 = rax_278;\n                            goto label_405cf2;\n                        }\n                        if (r13_1[8] != 0)\n                        {\n                            rdx_95 = ((!sub_4053d0()) & 0x1ff);\n                            goto label_4078c2;\n                        }\n                        if (var_310_1 != 0)\n                        {\n                            int32_t temp7_1 = (var_310_1 & (!sub_4053d0()));\n                            var_310_1 = temp7_1;\n                            if (temp7_1 == 0)\n                            {\n                                goto label_405c00;\n                            }\n                            if (var_329_1 == 1)\n                            {\n                            label_405c20:\n                                if (chmod(arg2, (var_34c | var_310_1)) == 0)\n                                {\n                                    goto label_406170;\n                                }\n                                int64_t rax_47 = sub_40ddd0(4, arg2);\n                                error(0, *__errno_location(), dcgettext(nullptr, \"preserving permissions for %s\", 5), rax_47);\n                            label_405c6b:\n                                uint32_t rax_51 = var_2e8_1;\n                                if (r13_1[9] != 0)\n                                {\n                                    rax_51 = r15;\n                                }\n                                r15 = rax_51;\n                                goto label_405cf2;\n                            }\n                            if (var_2d8_1 != 0)\n                            {\n                                if (__lxstat(1, arg2, &var_1e8) == 0)\n                                {\n                                    goto label_40615a;\n                                }\n                                rsi_1 = arg2;\n                            label_405cac:\n                                r15 = 0;\n                                int64_t rax_53 = sub_40ddd0(4, rsi_1);\n                                error(0, *__errno_location(), dcgettext(nullptr, \"cannot stat %s\", 5), rax_53);\n                            label_405cf2:\n                                return r15;\n                            }\n                        label_40615a:\n                            var_34c = var_1d0;\n                            if ((var_310_1 & (!var_1d0)) == 0)\n                            {\n                                goto label_406170;\n                            }\n                            goto label_405c20;\n                        }\n                    label_405c00:\n                        if (var_329_1 == 0)\n                        {\n                            goto label_406170;\n                        }\n                        goto label_405c20;\n                    }\n                    if (rax_5 == 0x4000)\n                    {\n                        if (sub_404fc0(r14_1, arg2, var_260, var_2c8, r13_1) == 0)\n                        {\n                            goto label_405cf2;\n                        }\n                        var_310_1 = (r12_6 & 0x12);\n                    label_4061d1:\n                        int64_t rcx_16 = var_278;\n                        char* rax_92 = arg5;\n                        if (arg5 == 0)\n                        {\n                        label_4063b8:\n                            void* rsp_2 = (rsp_1 - 0x20);\n                            char** rax_107 = ((rsp_2 + 0xf) & 0xfffffffffffffff0);\n                            *rax_107 = arg5;\n                            rax_107[1] = var_270;\n                            rax_107[2] = rcx_16;\n                            if (var_2d8_1 != 0)\n                            {\n                            label_40640f:\n                                if (mkdir(arg2, ((!var_310_1) & r12_6)) != 0)\n                                {\n                                    rsi_41 = \"cannot create directory %s\";\n                                    rbx_1 = sub_40ddd0(4, arg2);\n                                    goto label_406362;\n                                }\n                                if (__lxstat(1, arg2, &var_1e8) != 0)\n                                {\n                                    rsi_41 = \"cannot stat %s\";\n                                    rbx_1 = sub_40ddd0(4, arg2);\n                                    goto label_406362;\n                                }\n                                r12_6 = var_1d0;\n                                var_329_1 = false;\n                                if ((r12_6 & 0x1c0) != 0x1c0)\n                                {\n                                    var_34c = r12_6;\n                                    var_329_1 = true;\n                                    if (chmod(arg2, (r12_6 | 0x1c0)) == 0)\n                                    {\n                                        goto label_406488;\n                                    }\n                                    rsi_41 = \"setting permissions for %s\";\n                                    rbx_1 = sub_40ddd0(4, arg2);\n                                    goto label_406362;\n                                }\n                            label_406488:\n                                if (*arg8 != 0)\n                                {\n                                    goto label_406491;\n                                }\n                                sub_409480(arg2, var_1e0, var_1e8);\n                                *arg8 = 1;\n                            label_406491:\n                                if (*(r13_1 + 0x2e) == 0)\n                                {\n                                    goto label_4064ea;\n                                }\n                                if (r13_1[6] == 0)\n                                {\n                                    sub_4047e0(r14_1, arg2, 0);\n                                }\n                                else\n                                {\n                                    __printf_chk(1, dcgettext(nullptr, \"created directory %s\\n\", 5), sub_40ddd0(4, arg2));\n                                }\n                                goto label_4064ea;\n                            }\n                            if ((var_1d0 & 0xf000) != 0x4000)\n                            {\n                                goto label_40640f;\n                            }\n                            if ((*(r13_1 + 0x20) & 0xff000000ff00) != 0)\n                            {\n                                sub_405090(arg2, *(r13_1 + 0x25), 0, r13_1);\n                                if (*(r13_1 + 0x26) == 0)\n                                {\n                                    goto label_4075f4;\n                                }\n                                goto label_406380;\n                            }\n                        label_4075f4:\n                            var_329_1 = false;\n                            var_310_1 = 0;\n                        label_4064ea:\n                            r12_6 = arg4 != 0;\n                            r12_6 = (r12_6 & r13_1[7]);\n                            var_2e8_1 = r12_6;\n                            if (r12_6 != 0)\n                            {\n                                var_2f0 = 0;\n                                r8_4 = false;\n                            }\n                            if ((r12_6 == 0 || (r12_6 != 0 && *arg4 == var_278)))\n                            {\n                                var_c8 = *r13_1;\n                                var_b8 = *(r13_1 + 0x10);\n                                int128_t var_a8_1 = *(r13_1 + 0x20);\n                                int128_t var_98_1 = *(r13_1 + 0x30);\n                                var_88 = *(r13_1 + 0x40);\n                                char* rax_121 = sub_40e7f0(r14_1, 2);\n                                if (rax_121 == 0)\n                                {\n                                    var_2c8 = sub_40ddd0(4, r14_1);\n                                    error(0, *__errno_location(), dcgettext(nullptr, \"cannot access %s\", 5), var_2c8);\n                                    var_2e8_1 = 0;\n                                }\n                                else\n                                {\n                                    if (r13_1[1] == 3)\n                                    {\n                                        *var_c8[4] = 2;\n                                    }\n                                    if (*rax_121 == 0)\n                                    {\n                                        r12_6 = nullptr;\n                                        var_2e8_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        char var_340_1 = r15;\n                                        char* r12_15 = rax_121;\n                                        dev_t* var_318_1 = &var_158;\n                                        int32_t r15_1 = 0;\n                                        dev_t* var_328_1 = &var_c8;\n                                        var_2e8_1 = 1;\n                                        char* var_300_1 = &var_2a8;\n                                        var_2f0 = r14_1;\n                                        int32_t var_330_1 = rbx_1;\n                                        do\n                                        {\n                                            int64_t rax_124 = sub_40af00(var_2f0, r12_15, nullptr);\n                                            int64_t rax_125 = sub_40af00(arg2, r12_15, nullptr);\n                                            char rax_127 = *arg8;\n                                            *(rsp_2 - 8) = 0;\n                                            *(rsp_2 - 0x10) = var_300_1;\n                                            *(rsp_2 - 0x18) = var_318_1;\n                                            *(rsp_2 - 0x20) = 0;\n                                            var_158 = rax_127;\n                                            var_2e8_1 = (var_2e8_1 & sub_405400(rax_124, rax_125, var_2c8, var_2e0, rax_107, var_328_1));\n                                            *arg9 = (*arg9 | var_2a8);\n                                            free(rax_125);\n                                            free(rax_124);\n                                            if (var_2a8 != 0)\n                                            {\n                                                break;\n                                            }\n                                            r15_1 = (r15_1 | var_158);\n                                            r12_15 = &r12_15[(strlen(r12_15) + 1)];\n                                        } while (*r12_15 != 0);\n                                        r12_6 = r15_1;\n                                        r14_1 = var_2f0;\n                                        r15 = var_340_1;\n                                        rbx_1 = var_330_1;\n                                    }\n                                    free(rax_121);\n                                    *arg8 = r12_6;\n                                }\n                                var_2f0 = 0;\n                                r8_4 = false;\n                            }\n                            goto label_4059bf;\n                        }\n                        while ((!(*(rax_92 + 8) == var_270 && *(rax_92 + 0x10) == rcx_16)))\n                        {\n                            rax_92 = *rax_92;\n                            if (rax_92 == 0)\n                            {\n                                break;\n                            }\n                        }\n                        if ((!(*(rax_92 + 8) == var_270 && *(rax_92 + 0x10) == rcx_16)))\n                        {\n                            goto label_4063b8;\n                        }\n                        rsi_38 = \"cannot copy cyclic symbolic link\u2026\";\n                        rbx_1 = sub_40ddd0(4, r14_1);\n                    label_406235:\n                        error(0, 0, dcgettext(nullptr, rsi_38, 5), rbx_1);\n                        goto label_406380;\n                    }\n                    char rax_27;\n                    rax_27 = sub_404fc0(r14_1, arg2, var_260, var_2c8, r13_1);\n                    var_310_1 = 0;\n                    if (rax_27 == 0)\n                    {\n                        goto label_405cf2;\n                    }\n                    goto label_405931;\n                }\n            label_405eb0:\n                if (*(r13_1 + 0x17) != 0)\n                {\n                    var_2f8_2 = nullptr;\n                label_405ec6:\n                    if (r13_1[6] != 0)\n                    {\n                        goto label_405f21;\n                    }\n                    var_2c8 = var_2d8_1;\n                    goto label_4058cd;\n                }\n                if (var_268 <= 1)\n                {\n                    int32_t rax_81 = r13_1[1];\n                    if (rbx_1 == 0)\n                    {\n                    label_406067:\n                        var_2f8_2 = nullptr;\n                        if (rax_81 == 4)\n                        {\n                            goto label_406095;\n                        }\n                        goto label_405ec6;\n                    }\n                    if (rax_81 != 3)\n                    {\n                        goto label_406067;\n                    }\n                    goto label_406095;\n                }\n            label_406095:\n                var_2f8_2 = sub_409480(arg2, var_270, var_278);\n                goto label_40609c;\n            }\n        label_40585c:\n            if (*(r13_1 + 0x2e) != 0)\n            {\n                if (r13_1[6] != 0)\n                {\n                label_405ee0:\n                    if (rax_5 == 0x4000)\n                    {\n                        if (*(r13_1 + 0x2a) != 0)\n                        {\n                            goto label_405d3b;\n                        }\n                        goto label_405ef7;\n                    }\n                label_405ef7:\n                    if (var_268 == 1)\n                    {\n                        var_2f8_2 = sub_409440(var_270);\n                    label_40609c:\n                        if (var_2f8_2 == 0)\n                        {\n                            goto label_405ec6;\n                        }\n                        if (rax_5 == 0x4000)\n                        {\n                            goto label_405d7f;\n                        }\n                        if (sub_4049c0(var_2f8_2, arg2, 1, *(r13_1 + 0x2e), var_2e8_1) != 0)\n                        {\n                            goto label_4060e6;\n                        }\n                        goto label_405e18;\n                    }\n                    if (*(r13_1 + 0x22) != 0)\n                    {\n                        goto label_405eb0;\n                    }\n                    var_2f8_2 = nullptr;\n                label_405f21:\n                    if (rename(r14_1, arg2) != 0)\n                    {\n                        int32_t* rax_73 = __errno_location();\n                        int32_t rax_74 = *rax_73;\n                        if (rax_74 == 0x16)\n                        {\n                            r15 = 1;\n                            char* rax_262 = sub_40dcf0(1, 4, data_61b8e8);\n                            error(0, 0, dcgettext(nullptr, \"cannot move %s to a subdirectory\u2026\", 5), sub_40dcf0(0, 4, data_61b8f0), rax_262);\n                            *arg9 = 1;\n                            goto label_405cf2;\n                        }\n                        char* rbx_10;\n                        char* rsi_64;\n                        char* r13_3;\n                        if (rax_74 != 0x12)\n                        {\n                            r13_3 = sub_40dcf0(1, 4, arg2);\n                            rsi_64 = \"cannot move %s to %s\";\n                            rbx_10 = sub_40dcf0(0, 4, r14_1);\n                        label_406a05:\n                            error(0, *rax_73, dcgettext(nullptr, rsi_64, 5), rbx_10, r13_3);\n                            sub_4093f0();\n                            goto label_405cf2;\n                        }\n                        if (rax_5 == 0x4000)\n                        {\n                            if (rmdir(arg2) == 0)\n                            {\n                            label_405f92:\n                                var_2c8 = 1;\n                                var_2d8_1 = true;\n                                goto label_4058cd;\n                            }\n                            if (*rax_73 == 2)\n                            {\n                                goto label_405f92;\n                            }\n                        label_4069d8:\n                            r13_3 = sub_40dcf0(1, 4, arg2);\n                            rsi_64 = \"inter-device move failed: %s to \u2026\";\n                            rbx_10 = sub_40dcf0(0, 4, r14_1);\n                            goto label_406a05;\n                        }\n                        if (unlink(arg2) == 0)\n                        {\n                        label_405f7f:\n                            int32_t rax_75;\n                            rax_75 = rax_5 != 0x4000;\n                            rax_75 = (rax_75 & *(r13_1 + 0x2e));\n                            var_2d8_1 = rax_75;\n                            if (rax_75 == 0)\n                            {\n                                goto label_405f92;\n                            }\n                            __printf_chk(1, dcgettext(nullptr, \"copied \", 5));\n                            sub_4047e0(r14_1, arg2, var_308_1);\n                            var_2c8 = 1;\n                            goto label_4058cd;\n                        }\n                        if (*rax_73 == 2)\n                        {\n                            goto label_405f7f;\n                        }\n                        goto label_4069d8;\n                    }\n                    if (*(r13_1 + 0x2e) != 0)\n                    {\n                        __printf_chk(1, dcgettext(nullptr, \"renamed \", 5));\n                        sub_4047e0(r14_1, arg2, var_308_1);\n                    }\n                    if (*(r13_1 + 0x21) != 0)\n                    {\n                        sub_405090(arg2, 0, 1, r13_1);\n                    }\n                    if (arg10 != 0)\n                    {\n                        *arg10 = 1;\n                    }\n                    if (rbx_1 == 0)\n                    {\n                        goto label_4060e6;\n                    }\n                    r15 = rbx_1;\n                    sub_40aca0(*(r13_1 + 0x38), arg2, var_2e0);\n                    goto label_405cf2;\n                }\n            label_405872:\n                if (rax_5 != 0x4000)\n                {\n                    sub_4047e0(r14_1, arg2, var_308_1);\n                label_405898:\n                    if (r13_1[6] != 0)\n                    {\n                        goto label_405ef7;\n                    }\n                    goto label_4058a3;\n                }\n            label_406260:\n                if (*(r13_1 + 0x2a) != 0)\n                {\n                    goto label_405d3b;\n                }\n                goto label_4058a3;\n            }\n        label_405d20:\n            if (*(r13_1 + 0x2a) == 0)\n            {\n                goto label_405898;\n            }\n            if (rax_5 != 0x4000)\n            {\n                goto label_405898;\n            }\n        label_405d3b:\n            int64_t rdx_48 = var_278;\n            rdi_15 = var_270;\n            if (rbx_1 == 0)\n            {\n                goto label_406788;\n            }\n            var_2f8_2 = sub_409480(arg2, rdi_15, rdx_48);\n        label_405d67:\n            if (var_2f8_2 == 0)\n            {\n                goto label_405ec6;\n            }\n        label_405d7f:\n            if (sub_40e2f0(r14_1, var_2f8_2) != 0)\n            {\n                rbx_1 = sub_40dcf0(1, 4, data_61b8e8);\n                error(0, 0, dcgettext(nullptr, \"cannot copy a directory, %s, int\u2026\", 5), sub_40dcf0(0, 4, data_61b8f0), rbx_1);\n                *arg9 = 1;\n            label_405e18:\n                if (*(r13_1 + 0x25) != 0)\n                {\n                label_40687d:\n                    rdx_46 = sub_4047a0();\n                label_40688f:\n                    rax_135 = dcgettext(nullptr, \"-r not specified; omitting direc\u2026\", rdx_46);\n                label_406755:\n                    r15 = 0;\n                    error(0, 0, rax_135, rbx_1);\n                    goto label_405cf2;\n                }\n            label_405e2a:\n                if (var_308_1 == 0)\n                {\n                    goto label_405cf2;\n                }\n                if (rename(var_308_1, arg2) != 0)\n                {\n                    int64_t rax_172 = sub_40ddd0(4, arg2);\n                    error(0, *__errno_location(), dcgettext(nullptr, \"cannot un-backup %s\", 5), rax_172);\n                }\n                else if (*(r13_1 + 0x2e) != 0)\n                {\n                    char* rax_67 = sub_40dcf0(1, 4, arg2);\n                    __printf_chk(1, dcgettext(nullptr, \"%s -> %s (unbackup)\\n\", 5), sub_40dcf0(0, 4, var_308_1), rax_67);\n                }\n                goto label_405cf2;\n            }\n            if (sub_40e2f0(arg2, var_2f8_2) != 0)\n            {\n                error(0, 0, dcgettext(nullptr, \"warning: source directory %s spe\u2026\", 5), sub_40ddd0(4, data_61b8f0));\n                if (r13_1[6] == 0)\n                {\n                    goto label_4060e6;\n                }\n                if (cond:0 == 0)\n                {\n                    goto label_4060e6;\n                }\n                goto label_406c1f;\n            }\n            int32_t rax_61 = r13_1[1];\n            if (rax_61 == 4)\n            {\n                goto label_405ec6;\n            }\n            if (rax_61 != 3)\n            {\n            label_405dd2:\n                char* rax_62 = sub_40dcf0(1, 4, var_2f8_2);\n                rbx_1 = sub_40dcf0(0, 4, arg2);\n                error(0, 0, dcgettext(nullptr, \"will not create hard link %s to \u2026\", 5), rbx_1, rax_62);\n                goto label_405e18;\n            }\n            if (rbx_1 == 0)\n            {\n                goto label_405dd2;\n            }\n            goto label_405ec6;\n        }\n        int64_t* var_2f8_1;\n        char r8;\n        if (rax_5 != 0x8000)\n        {\n            if (r13_1[5] == 0)\n            {\n            label_405fc6:\n                var_2f8_1 = &var_1e8;\n                r8 = arg3;\n                var_2d8_1 = __lxstat(1, arg2, &var_1e8) != 0;\n                if (var_2d8_1 != 0)\n                {\n                label_405feb:\n                    int32_t* rax_77 = __errno_location();\n                    if (*rax_77 == 2)\n                    {\n                        goto label_405840;\n                    }\n                    var_2c8 = rax_77;\n                    r15 = arg3;\n                    int32_t* r8_7 = var_2c8;\n                    error(0, *r8_7, dcgettext(nullptr, \"cannot stat %s\", 5), sub_40ddd0(4, arg2), r8_7);\n                    goto label_405cf2;\n                }\n            label_4055bb:\n                int32_t var_310;\n                dev_t* var_308;\n                int32_t rcx_26;\n                dev_t* rdx_51;\n                dev_t* r9_3;\n                bool r12_16;\n                if (var_270 == var_1e0)\n                {\n                    if (var_278 != var_1e8)\n                    {\n                        goto label_4055c8;\n                    }\n                    r12_16 = *(r13_1 + 0x17);\n                    if (r12_16 != 0)\n                    {\n                    label_4070d0:\n                        var_2d8_1 = true;\n                    label_4055d3:\n                        int32_t rax_12;\n                        if (rax_5 == 0x4000)\n                        {\n                            if (r13_1[6] != 0)\n                            {\n                                rax_12 = r13_1[2];\n                            label_406b8f:\n                                if (rax_12 != 2)\n                                {\n                                    if (rax_12 == 3)\n                                    {\n                                    label_406be7:\n                                        var_308 = r8;\n                                        r8 = var_308;\n                                        if (sub_404890(r13_1, arg2, &var_2f8_1[3]) != 0)\n                                        {\n                                            goto label_40560f;\n                                        }\n                                        goto label_406c10;\n                                    }\n                                    if ((rax_12 == 4 && *(r13_1 + 0x2f) != 0))\n                                    {\n                                        var_308 = r8;\n                                        r8 = var_308;\n                                        if (sub_404640(arg2, var_1d0) == 0)\n                                        {\n                                            goto label_406be7;\n                                        }\n                                    }\n                                    goto label_40560f;\n                                }\n                            label_406c10:\n                                if (arg10 == 0)\n                                {\n                                    goto label_4060e6;\n                                }\n                            label_406c1f:\n                                r15 = 1;\n                                *arg10 = 1;\n                                goto label_405cf2;\n                            }\n                        label_40560f:\n                            if (var_2d8_1 == 0)\n                            {\n                                int32_t rax_13 = var_1d0;\n                                rcx_1 = (r8 ^ 1);\n                                char rax_15;\n                                char* r8_19;\n                                int32_t r12_2;\n                                if ((rax_13 & 0xf000) == 0x4000)\n                                {\n                                    if (rax_5 == 0x4000)\n                                    {\n                                    label_4056b0:\n                                        r12_2 = *r13_1;\n                                    label_4056b4:\n                                        rax_15 = r13_1[6];\n                                        if (rax_15 != 0)\n                                        {\n                                            if ((var_260 & 0xf000) == 0x4000)\n                                            {\n                                                rax_13 = var_1d0;\n                                            label_407add:\n                                                if ((rax_13 & 0xf000) != 0x4000)\n                                                {\n                                                    if (r12_2 != 0)\n                                                    {\n                                                        goto label_4073b3;\n                                                    }\n                                                    r12_4 = sub_40dea0(0, 3, arg2);\n                                                    rsi_7 = \"cannot move directory onto non-d\u2026\";\n                                                    rbx_2 = sub_40dea0(0, 3, r14_1);\n                                                    goto label_40581f;\n                                                }\n                                                goto label_407975;\n                                            }\n                                        label_407975:\n                                            if (r12_2 != 0)\n                                            {\n                                                goto label_4073b3;\n                                            }\n                                        label_40794f:\n                                            var_308_1 = 0;\n                                            goto label_405854;\n                                        }\n                                        int64_t rbx_15;\n                                        char* rsi_115;\n                                        int32_t* r12_3;\n                                        if (r12_2 == 0)\n                                        {\n                                        label_4056d0:\n                                            var_308_1 = 0;\n                                            int32_t rdx_9;\n                                            rdx_9 = (var_1d0 & 0xf000) == 0x4000;\n                                            rdx_9 = (rdx_9 | rax_15);\n                                            if (rdx_9 != 0)\n                                            {\n                                                goto label_405854;\n                                            }\n                                            bool rax_16 = *(r13_1 + 0x15);\n                                            var_2d8_1 = rax_16;\n                                            if (rax_16 != 0)\n                                            {\n                                            label_405721:\n                                                char var_2d8_2 = rcx_1;\n                                                rcx_1 = var_2d8_2;\n                                                if (unlink(arg2) == 0)\n                                                {\n                                                label_40574f:\n                                                    bool rax_342 = *(r13_1 + 0x2e);\n                                                    var_2d8_1 = rax_342;\n                                                    if (rax_342 != 0)\n                                                    {\n                                                        var_2f8_1 = rcx_1;\n                                                        __printf_chk(1, dcgettext(nullptr, \"removed %s\\n\", 5), sub_40ddd0(4, arg2));\n                                                        rcx_1 = var_2f8_1;\n                                                        var_308_1 = 0;\n                                                        goto label_405854;\n                                                    }\n                                                    if (rbx_1 == 0)\n                                                    {\n                                                        rax_342 = (rax_5 == 0x4000 & *(r13_1 + 0x2a));\n                                                        var_2d8_1 = rax_342;\n                                                        if (rax_342 == 0)\n                                                        {\n                                                            var_2d8_1 = true;\n                                                            var_308_1 = 0;\n                                                            goto label_405898;\n                                                        }\n                                                        rdi_15 = var_270;\n                                                        var_308_1 = 0;\n                                                    label_406788:\n                                                        var_2f8_2 = sub_409440(rdi_15);\n                                                        goto label_405d67;\n                                                    }\n                                                    var_2d8_1 = rbx_1;\n                                                    var_308_1 = 0;\n                                                    if (*(r13_1 + 0x38) != 0)\n                                                    {\n                                                        goto label_405790;\n                                                    }\n                                                    goto label_405d20;\n                                                }\n                                                int32_t* rax_18 = __errno_location();\n                                                rcx_1 = var_2d8_2;\n                                                r12_3 = rax_18;\n                                                if (*rax_18 == 2)\n                                                {\n                                                    goto label_40574f;\n                                                }\n                                                rsi_115 = \"cannot remove %s\";\n                                                rbx_15 = sub_40ddd0(4, arg2);\n                                            label_407c75:\n                                                r15 = 0;\n                                                error(0, *r12_3, dcgettext(nullptr, rsi_115, 5), rbx_15);\n                                                goto label_405cf2;\n                                            }\n                                            if (*(r13_1 + 0x22) != 0)\n                                            {\n                                                int64_t var_1d8;\n                                                if (var_1d8 > 1)\n                                                {\n                                                    goto label_405721;\n                                                }\n                                                goto label_407d0d;\n                                            }\n                                        label_407d0d:\n                                            var_308_1 = 0;\n                                            if ((r13_1[1] == 2 && (var_260 & 0xf000) != 0x8000))\n                                            {\n                                                goto label_405721;\n                                            }\n                                            goto label_405854;\n                                        }\n                                    label_40791b:\n                                        var_2f8_1 = rcx_1;\n                                        char* rax_280 = sub_40ab40(r14_1);\n                                        rcx_1 = var_2f8_1;\n                                        r8_19 = rax_280;\n                                        char rdx_108;\n                                        if (*rax_280 == 0x2e)\n                                        {\n                                            rax_15 = 0;\n                                        label_407d4a:\n                                            int64_t rdx_107;\n                                            rdx_107 = r8_19[1] == 0x2e;\n                                            rdx_108 = r8_19[(rdx_107 + 1)];\n                                            if (rdx_108 == 0x2f)\n                                            {\n                                                goto label_4056d0;\n                                            }\n                                            if (rdx_108 == 0)\n                                            {\n                                                goto label_4056d0;\n                                            }\n                                        }\n                                        if (((*rax_280 != 0x2e || (((*rax_280 == 0x2e && rdx_108 != 0) && rdx_108 != 0x2f) && rax_15 == 0)) && (var_1d0 & 0xf000) == 0x4000))\n                                        {\n                                            goto label_40794f;\n                                        }\n                                    label_4073d1:\n                                        if (r12_2 != 3)\n                                        {\n                                            var_2f8_1 = rcx_1;\n                                            var_310 = r8_19;\n                                            var_2d8_1 = strlen(r8_19);\n                                            char* rax_237 = sub_40ab40(arg2);\n                                            uint64_t rax_238 = strlen(rax_237);\n                                            dev_t* rcx_37 = data_61b900;\n                                            uint64_t rax_239 = strlen(rcx_37);\n                                            rcx_1 = var_2f8_1;\n                                            if (var_2d8_1 != (rax_238 + rax_239))\n                                            {\n                                                goto label_407569;\n                                            }\n                                            int64_t* r8_20 = var_310;\n                                            char var_2d8_3 = rcx_1;\n                                            rcx_1 = var_2d8_3;\n                                            if (memcmp(r8_20, rax_237, rax_238) != 0)\n                                            {\n                                                goto label_407569;\n                                            }\n                                            rcx_1 = var_2d8_3;\n                                            if (strcmp((r8_20 + rax_238), rcx_37) != 0)\n                                            {\n                                                goto label_407569;\n                                            }\n                                            char* var_308_2;\n                                            var_308_2 = rcx_1;\n                                            uint64_t rax_243 = strlen(arg2);\n                                            char* rax_244 = sub_4100e0(((rax_239 + rax_243) + 1));\n                                            var_2d8_3 = data_61b900;\n                                            strcpy(mempcpy(rax_244, arg2, rax_243), var_2d8_3);\n                                            var_2d8_3 = __xstat(1, rax_244, &var_c8);\n                                            free(rax_244);\n                                            rcx_1 = var_308_2;\n                                            if (var_2d8_3 != 0)\n                                            {\n                                                goto label_407569;\n                                            }\n                                            if (var_270 != var_c0)\n                                            {\n                                                goto label_407569;\n                                            }\n                                            if (var_278 != var_c8)\n                                            {\n                                                goto label_407569;\n                                            }\n                                            char* rbx_17;\n                                            if (r13_1[6] == 0)\n                                            {\n                                                rbx_17 = dcgettext(nullptr, \"backing up %s might destroy sour\u2026\", 5);\n                                            }\n                                            else\n                                            {\n                                                rbx_17 = dcgettext(nullptr, \"backing up %s might destroy sour\u2026\", 5);\n                                            }\n                                            r8_1 = sub_40dcf0(1, 4, r14_1);\n                                            rdx_13 = rbx_17;\n                                            rcx_2 = sub_40dcf0(0, 4, arg2);\n                                            goto label_40582e;\n                                        }\n                                    label_407569:\n                                        uint64_t rax_250 = sub_40a6b0(arg2, *r13_1);\n                                        var_308_1 = rax_250;\n                                        var_2f8_1 = rcx_1;\n                                        if (rax_250 != 0)\n                                        {\n                                            uint64_t rax_251 = strlen(rax_250);\n                                            rsp_1 = (&var_378 - ((rax_251 + 0x18) & 0xfffffffffffffff0));\n                                            uint64_t rax_254 = memcpy(((rsp_1 + 0xf) & 0xfffffffffffffff0), rax_250, (rax_251 + 1));\n                                            free(var_308_1);\n                                            var_308_1 = rax_254;\n                                            rcx_1 = var_2f8_1;\n                                            var_2d8_1 = true;\n                                        }\n                                        else\n                                        {\n                                            int32_t* rax_311 = __errno_location();\n                                            var_2d8_1 = true;\n                                            rcx_1 = var_2f8_1;\n                                            r12_3 = rax_311;\n                                            if (*rax_311 != 2)\n                                            {\n                                                rsi_115 = \"cannot backup %s\";\n                                                rbx_15 = sub_40ddd0(4, arg2);\n                                                goto label_407c75;\n                                            }\n                                        }\n                                        goto label_405854;\n                                    }\n                                label_407380:\n                                    if (r13_1[6] == 0)\n                                    {\n                                    label_407cab:\n                                        rsi_57 = \"cannot overwrite directory %s wi\u2026\";\n                                        rbx_1 = sub_40ddd0(4, arg2);\n                                        goto label_406744;\n                                    }\n                                    r12_2 = *r13_1;\n                                    if (r12_2 == 0)\n                                    {\n                                        goto label_407cab;\n                                    }\n                                    goto label_4073a4;\n                                }\n                                if (rax_5 == 0x4000)\n                                {\n                                    if (r13_1[6] == 0)\n                                    {\n                                    label_407bd1:\n                                        r12_4 = sub_40dcf0(1, 4, r14_1);\n                                        rsi_7 = \"cannot overwrite non-directory %\u2026\";\n                                        rbx_2 = sub_40dcf0(0, 4, arg2);\n                                        goto label_40581f;\n                                    }\n                                    r12_2 = *r13_1;\n                                    if (r12_2 == 0)\n                                    {\n                                        goto label_407bd1;\n                                    }\n                                    if (rbx_1 != 0)\n                                    {\n                                    label_405654:\n                                        if (r12_2 != 3)\n                                        {\n                                            var_308 = rcx_1;\n                                            rcx_1 = var_308;\n                                            if (sub_40ad30(*(r13_1 + 0x38), arg2, var_2f8_1) != 0)\n                                            {\n                                                r12_4 = sub_40dcf0(1, 4, r14_1);\n                                                rsi_7 = \"will not overwrite just-created \u2026\";\n                                                rbx_2 = sub_40dcf0(0, 4, arg2);\n                                                goto label_40581f;\n                                            }\n                                            if (rax_5 == 0x4000)\n                                            {\n                                                goto label_4056b0;\n                                            }\n                                            rax_13 = var_1d0;\n                                            if ((rax_13 & 0xf000) != 0x4000)\n                                            {\n                                                goto label_4056b0;\n                                            }\n                                            goto label_407380;\n                                        }\n                                        if (r13_1[6] == 0)\n                                        {\n                                            goto label_40791b;\n                                        }\n                                        goto label_4073a4;\n                                    }\n                                label_4073a4:\n                                    if ((var_260 & 0xf000) == 0x4000)\n                                    {\n                                        goto label_407add;\n                                    }\n                                label_4073b3:\n                                    var_2f8_1 = rcx_1;\n                                    char* rax_235 = sub_40ab40(r14_1);\n                                    rcx_1 = var_2f8_1;\n                                    r8_19 = rax_235;\n                                    if (*rax_235 == 0x2e)\n                                    {\n                                        rax_15 = 1;\n                                        goto label_407d4a;\n                                    }\n                                    goto label_4073d1;\n                                }\n                                r12_2 = *r13_1;\n                                if (rbx_1 == 0)\n                                {\n                                    goto label_4056b4;\n                                }\n                                goto label_405654;\n                            }\n                        label_4060e6:\n                            r15 = 1;\n                            goto label_405cf2;\n                        }\n                        if (*(r13_1 + 0x2d) != 0)\n                        {\n                            int32_t rcx_24 = 0;\n                            if (*(r13_1 + 0x1f) != 0)\n                            {\n                                rcx_24 = 1;\n                                if (r13_1[6] != 0)\n                                {\n                                    rcx_24 = var_1e8 != var_278;\n                                }\n                            }\n                            var_308 = r8;\n                            r8 = var_308;\n                            if (sub_40eb60(arg2, var_2f8_1, var_2e0, rcx_24) < 0)\n                            {\n                                goto label_4055f3;\n                            }\n                            if (arg10 != 0)\n                            {\n                                *arg10 = 1;\n                            }\n                            uint64_t rax_142 = sub_409480(arg2, var_270, var_278);\n                            if (rax_142 == 0)\n                            {\n                                goto label_4060e6;\n                            }\n                            if (sub_4049c0(rax_142, arg2, 1, *(r13_1 + 0x2e), var_2e8_1) != 0)\n                            {\n                                goto label_4060e6;\n                            }\n                            if (*(r13_1 + 0x25) == 0)\n                            {\n                                goto label_405cf2;\n                            }\n                            goto label_40687d;\n                        }\n                    label_4055f3:\n                        rax_12 = r13_1[2];\n                        if (r13_1[6] != 0)\n                        {\n                            goto label_406b8f;\n                        }\n                        if (rax_12 == 2)\n                        {\n                            goto label_4060e6;\n                        }\n                        if (rax_12 != 3)\n                        {\n                            goto label_40560f;\n                        }\n                        var_308 = r8;\n                        r8 = var_308;\n                        if (sub_404890(r13_1, arg2, &var_2f8_1[3]) == 0)\n                        {\n                            goto label_4060e6;\n                        }\n                        goto label_40560f;\n                    }\n                    if (r13_1[1] == 2)\n                    {\n                        r12_16 = true;\n                        rcx_26 = 1;\n                        goto label_4068ab;\n                    }\n                    var_308 = r8;\n                    var_318 = &var_158;\n                    r8 = var_308;\n                    if (__lxstat(1, arg2, &var_158) != 0)\n                    {\n                        goto label_4055d3;\n                    }\n                    var_328 = &var_c8;\n                    r8 = var_308;\n                    if (__lxstat(1, r14_1, &var_c8) != 0)\n                    {\n                        goto label_4055d3;\n                    }\n                    if (var_c0 == var_150)\n                    {\n                        r12_16 = var_c8 == var_158;\n                    }\n                    r9_3 = var_318;\n                    rdx_51 = var_328;\n                    if ((var_b0 & 0xf000) != 0xa000)\n                    {\n                        goto label_4068cd;\n                    }\n                    if ((var_140 & 0xf000) != 0xa000)\n                    {\n                        goto label_4068cd;\n                    }\n                    if (*(r13_1 + 0x15) != 0)\n                    {\n                        goto label_4055d3;\n                    }\n                    goto label_4068cd;\n                }\n            label_4055c8:\n                if (r13_1[1] != 2)\n                {\n                    goto label_4055d3;\n                }\n                r12_16 = false;\n                rcx_26 = 0;\n            label_4068ab:\n                r9_3 = var_2f8_1;\n                rdx_51 = var_2e0;\n                bool rax_259;\n                if ((var_260 & 0xf000) == 0xa000)\n                {\n                    if ((var_1d0 & 0xf000) != 0xa000)\n                    {\n                        goto label_4068cd;\n                    }\n                    var_308 = r8;\n                    if (sub_40e2f0(r14_1, arg2) != 0)\n                    {\n                    label_406940:\n                        r12_4 = sub_40dcf0(1, 4, arg2);\n                        rsi_7 = \"%s and %s are the same file\";\n                        rbx_2 = sub_40dcf0(0, 4, r14_1);\n                        goto label_40581f;\n                    }\n                    r8 = var_308;\n                    if (*r13_1 != 0)\n                    {\n                        goto label_4055d3;\n                    }\n                    if (rcx_26 == 0)\n                    {\n                        goto label_4055d3;\n                    }\n                    rax_259 = true;\n                    r12_16 = (r13_1[6] ^ 1);\n                    goto label_4076ab;\n                }\n            label_4068cd:\n                if (*r13_1 == 0)\n                {\n                    char rcx_32 = r13_1[6];\n                    if (rcx_32 == 0)\n                    {\n                        if (*(r13_1 + 0x15) != 0)\n                        {\n                            goto label_407289;\n                        }\n                        if ((rdx_51[3] & 0xf000) == 0xa000)\n                        {\n                        label_406f6a:\n                            if (r13_1[0xb] != 0)\n                            {\n                            label_407ba6:\n                                r12_16 = *r9_3 == *rdx_51;\n                                rax_259 = false;\n                                goto label_4076ab;\n                            }\n                            if (((r13_1[5] & 0xff00ff00) != 0 && (r9_3[3] & 0xf000) == 0xa000))\n                            {\n                                goto label_407ba6;\n                            }\n                            if (r13_1[1] != 2)\n                            {\n                                goto label_406940;\n                            }\n                            int32_t rax_402;\n                            if ((rdx_51[3] & 0xf000) == 0xa000)\n                            {\n                                var_310 = r8;\n                                rax_402 = __xstat(1, r14_1, &var_c8);\n                                r8 = var_310;\n                            }\n                            else\n                            {\n                                var_c8 = *rdx_51;\n                                var_b8 = *(rdx_51 + 0x10);\n                                var_a8 = *(rdx_51 + 0x20);\n                                var_98 = *(rdx_51 + 0x30);\n                                var_88 = *(rdx_51 + 0x40);\n                                int128_t var_78_1 = *(rdx_51 + 0x50);\n                                int128_t var_68_1 = *(rdx_51 + 0x60);\n                                int128_t var_58_1 = *(rdx_51 + 0x70);\n                                int128_t var_48_1 = *(rdx_51 + 0x80);\n                            }\n                            if (((rdx_51[3] & 0xf000) != 0xa000 || ((rdx_51[3] & 0xf000) == 0xa000 && rax_402 == 0)))\n                            {\n                                int32_t rax_401;\n                                if ((r9_3[3] & 0xf000) == 0xa000)\n                                {\n                                    var_308 = r8;\n                                    rax_401 = __xstat(1, arg2, &var_158);\n                                    r8 = var_308;\n                                }\n                                else\n                                {\n                                    var_158 = *r9_3;\n                                    int128_t var_148_1 = *(r9_3 + 0x10);\n                                    int128_t var_138_1 = *(r9_3 + 0x20);\n                                    var_128 = *(r9_3 + 0x30);\n                                    var_118 = *(r9_3 + 0x40);\n                                    int128_t var_108_1 = *(r9_3 + 0x50);\n                                    int128_t var_f8_1 = *(r9_3 + 0x60);\n                                    int128_t var_e8_1 = *(r9_3 + 0x70);\n                                    int128_t var_d8_1 = *(r9_3 + 0x80);\n                                }\n                                if (((((r9_3[3] & 0xf000) != 0xa000 || ((r9_3[3] & 0xf000) == 0xa000 && rax_401 == 0)) && var_c0 == var_150) && var_c8 == var_158))\n                                {\n                                    if (*(r13_1 + 0x17) != 0)\n                                    {\n                                        goto label_4070d0;\n                                    }\n                                    goto label_406940;\n                                }\n                            }\n                            goto label_4055d3;\n                        }\n                    label_406f40:\n                        if ((r9_3[3] & 0xf000) == 0xa000)\n                        {\n                        label_406f4b:\n                            rcx_32 = r13_1[6];\n                        label_406f50:\n                            if (rcx_32 == 0)\n                            {\n                                goto label_406f6a;\n                            }\n                            if ((var_260 & 0xf000) != 0xa000)\n                            {\n                                goto label_406f6a;\n                            }\n                            if (r9_3[2] <= 1)\n                            {\n                                goto label_406f6a;\n                            }\n                            var_318 = r8;\n                            var_310 = r9_3;\n                            char* rax_330 = canonicalize_file_name(r14_1);\n                            r9_3 = var_310;\n                            r8 = var_318;\n                            if (rax_330 == 0)\n                            {\n                                goto label_406f6a;\n                            }\n                            var_308 = r8;\n                            var_2d8_1 = rax_330;\n                            r12_16 = (sub_40e2f0(rax_330, arg2) ^ 1);\n                            free(var_2d8_1);\n                            rax_259 = false;\n                            r8 = var_308;\n                            goto label_4076ab;\n                        }\n                    label_4072bb:\n                        if (rdx_51[1] != r9_3[1])\n                        {\n                            goto label_4055d3;\n                        }\n                        if (*rdx_51 == *r9_3)\n                        {\n                            if (*(r13_1 + 0x17) != 0)\n                            {\n                                goto label_4070d0;\n                            }\n                            goto label_406f4b;\n                        }\n                        goto label_4055d3;\n                    }\n                label_407289:\n                    if ((r9_3[3] & 0xf000) == 0xa000)\n                    {\n                        goto label_4055d3;\n                    }\n                    if (r12_16 != 0)\n                    {\n                        if (r9_3[2] <= 1)\n                        {\n                            goto label_4072ac;\n                        }\n                        var_318 = r8;\n                        var_310 = r9_3;\n                        rax_259 = sub_40e2f0(r14_1, arg2);\n                        r9_3 = var_310;\n                        r8 = var_318;\n                        if (rax_259 == 0)\n                        {\n                            r12_16 = (r13_1[6] ^ 1);\n                            goto label_4076ab;\n                        }\n                        if ((rdx_51[3] & 0xf000) == 0xa000)\n                        {\n                            goto label_406f4b;\n                        }\n                        goto label_406f40;\n                    }\n                label_4072ac:\n                    if ((rdx_51[3] & 0xf000) != 0xa000)\n                    {\n                        goto label_4072bb;\n                    }\n                    goto label_406f50;\n                }\n                if (r12_16 != 0)\n                {\n                    r12_16 = (sub_40e2f0(r14_1, arg2) ^ 1);\n                    rax_259 = false;\n                label_4076ab:\n                    if (r12_16 == 0)\n                    {\n                        goto label_406940;\n                    }\n                    var_2d8_1 = rax_259;\n                    goto label_4055d3;\n                }\n                if ((r13_1[6] == 0 && (r13_1[1] != 2 && ((rdx_51[3] & 0xf000) == 0xa000 && (r9_3[3] & 0xf000) != 0xa000))))\n                {\n                    goto label_406940;\n                }\n                goto label_4055d3;\n            }\n            if (rax_5 == 0x4000)\n            {\n                goto label_405fc6;\n            }\n            if (rax_5 == 0xa000)\n            {\n                goto label_405fc6;\n            }\n            goto label_40553d;\n        }\n    label_40553d:\n        if (r13_1[6] != 0)\n        {\n            goto label_405fc6;\n        }\n        if (r13_1[0xb] != 0)\n        {\n            goto label_405fc6;\n        }\n        if (*(r13_1 + 0x17) != 0)\n        {\n            goto label_405fc6;\n        }\n        if (*r13_1 != 0)\n        {\n            goto label_405fc6;\n        }\n        if (*(r13_1 + 0x15) != 0)\n        {\n            goto label_405fc6;\n        }\n        var_2f8_1 = &var_1e8;\n        r8 = 1;\n        var_2d8_1 = __xstat(1, arg2, &var_1e8) != 0;\n        if (var_2d8_1 != 0)\n        {\n            goto label_405feb;\n        }\n        goto label_4055bb;\n    }\n    rsi_1 = r14_1;\n    r15 = __xstat(1, r14_1, rdx) != 0;\n    if (r15 == 0)\n    {\n        goto label_4054a8;\n    }\n    goto label_405cac;\n}\n\n"
        },
        {
            "funcName": "sub_409280",
            "funcStartAddr": "0x409280",
            "funcEndAddr": "0x40939c",
            "decompiledFuncCode": "uint64_t sub_409280(char* arg1, char* arg2, char arg3, int32_t* arg4, \n    char* arg5, char* arg6)\n{\n    if (arg4 == 0)\n    {\n        __assert_fail(\"co != NULL\", \"src/copy.c\", 0xb60, \"valid_options\");\n        /* no return */\n    }\n    if (*arg4 > 3)\n    {\n        __assert_fail(\"VALID_BACKUP_TYPE (co->backup_ty\u2026\", \"src/copy.c\", 0xb61, \"valid_options\");\n        /* no return */\n    }\n    int32_t rax = arg4[3];\n    if ((rax - 1) > 2)\n    {\n        __assert_fail(\"VALID_SPARSE_MODE (co->sparse_mo\u2026\", \"src/copy.c\", 0xb62, \"valid_options\");\n        /* no return */\n    }\n    int32_t r10_1 = arg4[0xd];\n    if (r10_1 > 2)\n    {\n        __assert_fail(\"VALID_REFLINK_MODE (co->reflink_\u2026\", \"src/copy.c\", 0xb63, \"valid_options\");\n        /* no return */\n    }\n    if ((*(arg4 + 0x17) != 0 && arg4[0xb] != 0))\n    {\n        __assert_fail(\"!(co->hard_link && co->symbolic_\u2026\", \"src/copy.c\", 0xb64, \"valid_options\");\n        /* no return */\n    }\n    if ((rax != 2 && r10_1 == 2))\n    {\n        __assert_fail(\"! (co->reflink_mode == REFLINK_A\u2026\", \"src/copy.c\", 0xb67, \"valid_options\");\n        /* no return */\n    }\n    char var_9 = 0;\n    data_61b8f0 = arg1;\n    data_61b8e8 = arg2;\n    return sub_405400(arg1, arg2, arg3, nullptr, nullptr, arg4, 1, &var_9, arg5, arg6);\n}\n\n"
        },
        {
            "funcName": "sub_4093b0",
            "funcStartAddr": "0x4093b0",
            "funcEndAddr": "0x4093cc",
            "decompiledFuncCode": "int64_t sub_4093b0(int64_t* arg1, int64_t* arg2)\n{\n    if (*arg1 == *arg2)\n    {\n        int64_t rax;\n        rax = arg1[1] == arg2[1];\n        return rax;\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_4093d0",
            "funcStartAddr": "0x4093d0",
            "funcEndAddr": "0x4093e6",
            "decompiledFuncCode": "int64_t sub_4093d0(void* arg1)\n{\n    free(*(arg1 + 0x10));\n    /* tailcall */\n    return free(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_4093f0",
            "funcStartAddr": "0x4093f0",
            "funcEndAddr": "0x409435",
            "decompiledFuncCode": "void* sub_4093f0()\n{\n    int64_t rdi;\n    int64_t var_28 = rdi;\n    int64_t rsi;\n    int64_t var_20 = rsi;\n    int64_t var_18 = 0;\n    void* rax = sub_40c0f0(data_61b8f8);\n    if (rax != 0)\n    {\n        free(*(rax + 0x10));\n        rax = free(rax);\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_409440",
            "funcStartAddr": "0x409440",
            "funcEndAddr": "0x409477",
            "decompiledFuncCode": "int64_t sub_409440(int64_t arg1)\n{\n    int64_t var_28 = arg1;\n    int64_t rsi;\n    int64_t var_20 = rsi;\n    void* rax = sub_40b6a0(data_61b8f8, &var_28);\n    if (rax == 0)\n    {\n        return 0;\n    }\n    return *(rax + 0x10);\n}\n\n"
        },
        {
            "funcName": "sub_409480",
            "funcStartAddr": "0x409480",
            "funcEndAddr": "0x4094f6",
            "decompiledFuncCode": "int64_t sub_409480(char* arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rax = sub_4100e0(0x18);\n    int64_t rax_1 = sub_410310(arg1);\n    int64_t rdi_1 = data_61b8f8;\n    *rax = arg2;\n    rax[2] = rax_1;\n    rax[1] = arg3;\n    int64_t rax_2 = sub_40c0b0(rdi_1, rax);\n    if (rax_2 == 0)\n    {\n        sub_410330();\n        /* no return */\n    }\n    int64_t rax_3 = 0;\n    if (rax != rax_2)\n    {\n        free(rax[2]);\n        free(rax);\n        rax_3 = *(rax_2 + 0x10);\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_409500",
            "funcStartAddr": "0x409500",
            "funcEndAddr": "0x409536",
            "decompiledFuncCode": "int64_t* sub_409500()\n{\n    int64_t* rax = sub_40b910(0x67, nullptr, 0x4093a0, 0x4093b0, 0x4093d0);\n    data_61b8f8 = rax;\n    if (rax == 0)\n    {\n        sub_410330();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_409550",
            "funcStartAddr": "0x409550",
            "funcEndAddr": "0x409578",
            "decompiledFuncCode": "void sub_409550(int32_t arg1, int32_t* arg2)\n{\n    *arg2 = arg1;\n    *(arg2 + 0x28) = 0;\n    *(arg2 + 8) = 0;\n    *(arg2 + 0x18) = 0;\n    arg2[8] = 0;\n    arg2[4] = 1;\n}\n\n"
        },
        {
            "funcName": "sub_409580",
            "funcStartAddr": "0x409580",
            "funcEndAddr": "0x409845",
            "decompiledFuncCode": "uint64_t sub_409580(int32_t* arg1)\n{\n    int32_t r13 = 0;\n    int64_t* rbx = *(arg1 + 0x28);\n    int64_t rdx = *(arg1 + 8);\n    uint64_t r8;\n    while (true)\n    {\n        int64_t rcx_1 = 0x200;\n        int64_t var_1038;\n        int64_t* rdi = &var_1038;\n        for (; rcx_1 != 0; rcx_1 = (rcx_1 - 1))\n        {\n            *rdi = 0;\n            rdi = &rdi[1];\n        }\n        var_1038 = rdx;\n        int32_t var_1020_1 = 0x48;\n        int32_t var_1028_1 = arg1[4];\n        int64_t var_1030_1 = (!rdx);\n        uint64_t rax_4;\n        if (ioctl(*arg1, 0xc020660b, &var_1038, rcx_1, r8) >= 0)\n        {\n            int32_t var_1024;\n            rax_4 = var_1024;\n            if (rax_4 == 0)\n            {\n                bool cond:0_1 = *(arg1 + 8) != 0;\n                *(arg1 + 0x21) = 1;\n                rax_4 = cond:0_1;\n            }\n            else\n            {\n                int64_t rcx_2 = *(arg1 + 0x18);\n                if (rcx_2 > (!rax_4))\n                {\n                    __assert_fail(\"scan->ei_count <= SIZE_MAX - fie\u2026\", \"src/extent-scan.c\", 0x7e, \"extent_scan_read\");\n                    /* no return */\n                }\n                int64_t rdi_2 = *(arg1 + 0x28);\n                int64_t rcx_3 = (rcx_2 + rax_4);\n                *(arg1 + 0x18) = rcx_3;\n                void* rbx_1 = (rbx - rdi_2);\n                int64_t rax_5;\n                bool rdx_5;\n                rdx_5 = HIGHD((0x18 * rcx_3));\n                rax_5 = LOWD((0x18 * rcx_3));\n                uint64_t rdx_6 = ((0x18 * rcx_3) >> 0x40) != 0;\n                if ((rax_5 < 0 || (rax_5 >= 0 && rdx_6 != 0)))\n                {\n                    sub_410330();\n                    /* no return */\n                }\n                if ((rax_5 >= 0 && rdx_6 == 0))\n                {\n                    int64_t rax_6 = sub_410140(rdi_2, (rcx_3 * 0x18));\n                    r8 = var_1024;\n                    *(arg1 + 0x28) = rax_6;\n                    rbx = (rbx_1 + rax_6);\n                    if (r8 != 0)\n                    {\n                        break;\n                    }\n                label_409745:\n                    char rax_10;\n                    if ((rbx[2] & 1) != 0)\n                    {\n                        *(arg1 + 0x21) = 1;\n                    }\n                    else\n                    {\n                        rax_10 = *(arg1 + 0x21);\n                    }\n                    if (((rbx[2] & 1) != 0 || (((rbx[2] & 1) == 0 && r13 > 0x48) && rax_10 != 0)))\n                    {\n                        *(arg1 + 0x18) = r13;\n                    }\n                    if ((rbx[2] & 1) == 0)\n                    {\n                        if ((r13 > 0x48 && rax_10 == 0))\n                        {\n                            uint64_t rax_11 = (r13 - 1);\n                            int64_t rdx_11 = *(arg1 + 0x28);\n                            uint64_t rcx_8 = (rax_11 * 3);\n                            *(arg1 + 0x18) = rax_11;\n                            *(arg1 + 8) = (*((rdx_11 + (rcx_8 << 3)) - 0x10) + *((rdx_11 + (rcx_8 << 3)) - 0x18));\n                        }\n                        if (r13 <= 0x48)\n                        {\n                            *(arg1 + 0x18) = r13;\n                            if (rax_10 == 0)\n                            {\n                                rdx = (rbx[1] + *rbx);\n                                *(arg1 + 8) = rdx;\n                                if (r13 != 0x48)\n                                {\n                                    continue;\n                                }\n                            }\n                        }\n                    }\n                    rax_4 = 1;\n                }\n            }\n        }\n        else\n        {\n        label_4097a0:\n            rax_4 = 0;\n            if (*(arg1 + 8) == 0)\n            {\n                arg1[8] = 1;\n                rax_4 = 0;\n            }\n        }\n        return rax_4;\n    }\n    int64_t var_1008;\n    int64_t rax_7 = var_1008;\n    int64_t var_1018;\n    int64_t rdx_7 = var_1018;\n    if (rdx_7 <= (0x7fffffffffffffff - rax_7))\n    {\n        int32_t rdi_3 = 0;\n        int64_t* rcx_5 = &var_1018;\n        while (true)\n        {\n            int64_t rsi_4;\n            int32_t r9_1;\n            if (r13 == 0)\n            {\n                rsi_4 = *(arg1 + 8);\n                if (rsi_4 <= rdx_7)\n                {\n                    r9_1 = rcx_5[5];\n                }\n            }\n            else\n            {\n                r9_1 = rcx_5[5];\n                int64_t r10_1 = rbx[1];\n                rsi_4 = (*rbx + r10_1);\n                if ((rbx[2] == (r9_1 & 0xfffffffe) && rdx_7 == rsi_4))\n                {\n                    rbx[2] = r9_1;\n                    rdi_3 = (rdi_3 + 1);\n                    rbx[1] = (rax_7 + r10_1);\n                }\n            }\n            if (((r13 == 0 && rsi_4 <= rdx_7) || ((r13 != 0 && (rbx[2] != (r9_1 & 0xfffffffe) || (rbx[2] == (r9_1 & 0xfffffffe) && rdx_7 != rsi_4))) && rsi_4 <= rdx_7)))\n            {\n                uint64_t rcx_6 = r13;\n                rdi_3 = (rdi_3 + 1);\n                r13 = (r13 + 1);\n                rbx = (*(arg1 + 0x28) + (rcx_6 * 0x18));\n                *rbx = rdx_7;\n                rbx[1] = rax_7;\n                rbx[2] = r9_1;\n                if (rdi_3 >= r8)\n                {\n                    goto label_409745;\n                }\n                goto label_4096d3;\n            }\n            if ((((r13 == 0 && rsi_4 > rdx_7) || ((r13 != 0 && (rbx[2] != (r9_1 & 0xfffffffe) || (rbx[2] == (r9_1 & 0xfffffffe) && rdx_7 != rsi_4))) && rsi_4 > rdx_7)) && (rsi_4 - rdx_7) >= rax_7))\n            {\n                *rcx_5 = rsi_4;\n                rcx_5[2] = ((rdx_7 + rax_7) - rsi_4);\n            }\n            if ((((r13 != 0 && rbx[2] == (r9_1 & 0xfffffffe)) && rdx_7 == rsi_4) || (((r13 == 0 && rsi_4 > rdx_7) || ((r13 != 0 && (rbx[2] != (r9_1 & 0xfffffffe) || (rbx[2] == (r9_1 & 0xfffffffe) && rdx_7 != rsi_4))) && rsi_4 > rdx_7)) && (rsi_4 - rdx_7) >= rax_7)))\n            {\n                if (rdi_3 >= r8)\n                {\n                    goto label_409745;\n                }\n            label_4096d3:\n                uint64_t rdx_10 = rdi_3;\n                rcx_5 = &&var_1018[((rdx_10 << 3) - rdx_10)];\n                rax_7 = rcx_5[2];\n                rdx_7 = *rcx_5;\n                if (rdx_7 > (0x7fffffffffffffff - rax_7))\n                {\n                    break;\n                }\n                continue;\n            }\n            if ((((r13 == 0 && rsi_4 > rdx_7) || ((r13 != 0 && (rbx[2] != (r9_1 & 0xfffffffe) || (rbx[2] == (r9_1 & 0xfffffffe) && rdx_7 != rsi_4))) && rsi_4 > rdx_7)) && (rsi_4 - rdx_7) < rax_7))\n            {\n                goto label_4097a0;\n            }\n        }\n    }\n    __assert_fail(\"fm_extents[i].fe_logical <= OFF_\u2026\", \"src/extent-scan.c\", 0x8d, \"extent_scan_read\");\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_409870",
            "funcStartAddr": "0x409870",
            "funcEndAddr": "0x4098d4",
            "decompiledFuncCode": "int64_t sub_409870(char* arg1, int64_t arg2)\n{\n    int64_t rbx = arg2;\n    void* rax_1 = (sub_40ab40(arg1) - arg1);\n    void* rdi = (rax_1 + 9);\n    int64_t rax_2;\n    int64_t rax_4;\n    if (rdi > 0x100)\n    {\n        rax_2 = malloc(rdi);\n        rbx = rax_2;\n        if (rax_2 == 0)\n        {\n            rax_4 = 0;\n        }\n    }\n    if ((rdi <= 0x100 || (rdi > 0x100 && rax_2 != 0)))\n    {\n        int64_t* rax_3 = mempcpy(rbx, arg1, rax_1);\n        *rax_3 = 0x5858585858587543;\n        rax_3[1] = 0;\n        rax_4 = rbx;\n    }\n    return rax_4;\n}\n\n"
        },
        {
            "funcName": "sub_4098e0",
            "funcStartAddr": "0x4098e0",
            "funcEndAddr": "0x4098f1",
            "decompiledFuncCode": "int64_t sub_4098e0(int64_t arg1, int64_t* arg2)\n{\n    /* tailcall */\n    return symlinkat(*arg2, arg2[1], arg1);\n}\n\n"
        },
        {
            "funcName": "sub_409900",
            "funcStartAddr": "0x409900",
            "funcEndAddr": "0x409a35",
            "decompiledFuncCode": "uint64_t sub_409900(int32_t arg1, int64_t arg2, int32_t arg3, char* arg4, \n    int32_t arg5, int32_t arg6)\n{\n    int32_t rax = linkat();\n    int32_t rbx = rax;\n    if ((arg6 == 1 && rax != 0))\n    {\n        int32_t* rax_1 = __errno_location();\n        if (*rax_1 == 0x11)\n        {\n            int32_t var_160;\n            var_160 = rax_1;\n            void var_138;\n            char* rax_3 = sub_409870(arg4, &var_138);\n            if (rax_3 == 0)\n            {\n                rbx = -1;\n            }\n            else\n            {\n                int32_t var_158 = arg1;\n                int64_t var_150_1 = arg2;\n                int32_t var_148_1 = arg3;\n                int32_t var_144_1 = arg5;\n                int32_t* r9_1 = var_160;\n                int32_t r12_1;\n                if (sub_40e910(rax_3, 0, &var_158, 0x409850, 6) != 0)\n                {\n                    r12_1 = *r9_1;\n                }\n                else\n                {\n                    var_160 = r9_1;\n                    int32_t rax_5 = renameat(arg3, rax_3, arg3, arg4);\n                    int32_t* r9_2 = var_160;\n                    r12_1 = rax_5;\n                    if (rax_5 != 0)\n                    {\n                        r12_1 = *r9_2;\n                    }\n                    var_160 = r9_2;\n                    unlinkat(arg3, rax_3, 0);\n                    r9_1 = var_160;\n                }\n                if (rax_3 != &var_138)\n                {\n                    var_160 = r9_1;\n                    free(rax_3);\n                    r9_1 = var_160;\n                }\n                rbx = 1;\n                if (r12_1 != 0)\n                {\n                    *r9_1 = r12_1;\n                    rbx = -1;\n                }\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_409a40",
            "funcStartAddr": "0x409a40",
            "funcEndAddr": "0x409b40",
            "decompiledFuncCode": "uint64_t sub_409a40(int64_t arg1, int32_t arg2, char* arg3, char arg4)\n{\n    int32_t rax = symlinkat();\n    int32_t rbx = rax;\n    if ((arg4 == 1 && rax != 0))\n    {\n        int32_t* rax_1 = __errno_location();\n        if (*rax_1 == 0x11)\n        {\n            void var_138;\n            char* rax_3 = sub_409870(arg3, &var_138);\n            if (rax_3 == 0)\n            {\n                rbx = -1;\n            }\n            else\n            {\n                int64_t var_148 = arg1;\n                int32_t var_140_1 = arg2;\n                int32_t rax_4 = sub_40e910(rax_3, 0, &var_148, 0x4098e0, 6);\n                int32_t rax_5;\n                int32_t r12_1;\n                if (rax_4 == 0)\n                {\n                    rax_5 = renameat(arg2, rax_3, arg2, arg3);\n                    if (rax_5 != 0)\n                    {\n                        r12_1 = *rax_1;\n                        unlinkat(arg2, rax_3, 0);\n                    }\n                    else if (rax_3 != &var_138)\n                    {\n                        free(rax_3);\n                    }\n                }\n                else\n                {\n                    r12_1 = *rax_1;\n                }\n                if (((rax_4 != 0 || (rax_4 == 0 && rax_5 != 0)) && rax_3 != &var_138))\n                {\n                    free(rax_3);\n                }\n                if ((((rax_4 != 0 || (rax_4 == 0 && rax_5 != 0)) && r12_1 == 0) || (rax_4 == 0 && rax_5 == 0)))\n                {\n                    rbx = 1;\n                }\n                if (((rax_4 != 0 || (rax_4 == 0 && rax_5 != 0)) && r12_1 != 0))\n                {\n                    *rax_1 = r12_1;\n                    rbx = -1;\n                }\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_409b40",
            "funcStartAddr": "0x409b40",
            "funcEndAddr": "0x409bca",
            "decompiledFuncCode": "uint64_t sub_409b40(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int32_t rcx;\n    int32_t r8;\n    int32_t rax = sub_40c440(arg1, arg2, arg3, rcx, r8);\n    if (rax == 0xfffffffe)\n    {\n        error(0, *__errno_location(), \"%s\", sub_40e020(arg1));\n        return rax;\n    }\n    if (rax == 0xffffffff)\n    {\n        error(0, *__errno_location(), dcgettext(nullptr, \"preserving permissions for %s\", 5), sub_40e020(arg3));\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_409bd0",
            "funcStartAddr": "0x409bd0",
            "funcEndAddr": "0x409c2c",
            "decompiledFuncCode": "uint64_t sub_409bd0(int64_t arg1, int32_t arg2, int32_t arg3)\n{\n    int32_t rax = sub_40c480(arg1, arg2, arg3);\n    if (rax != 0)\n    {\n        error(0, *__errno_location(), dcgettext(nullptr, \"setting permissions for %s\", 5), sub_40e020(arg1));\n        return rax;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_409c30",
            "funcStartAddr": "0x409c30",
            "funcEndAddr": "0x409d1f",
            "decompiledFuncCode": "char* sub_409c30(int64_t arg1, int64_t arg2)\n{\n    size_t rbx = (arg2 + 1);\n    if (arg2 >= 0x401)\n    {\n        rbx = 0x401;\n    }\n    char* rbp_1;\n    while (true)\n    {\n        char* rax_1 = malloc(rbx);\n        rbp_1 = rax_1;\n        if (rax_1 == 0)\n        {\n            break;\n        }\n        while (true)\n        {\n            int64_t rax_2 = readlink(arg1, rax_1, rbx);\n            if ((rax_2 < 0 && *__errno_location() != 0x22))\n            {\n                free(rbp_1);\n                return nullptr;\n            }\n            if (rbx > rax_2)\n            {\n                rbp_1[rax_2] = 0;\n                return rbp_1;\n            }\n            free(rbp_1);\n            if (rbx > 0x3fffffffffffffff)\n            {\n                break;\n            }\n            rbx = (rbx + rbx);\n            rax_1 = malloc(rbx);\n            rbp_1 = rax_1;\n            if (rax_1 == 0)\n            {\n                return rbp_1;\n            }\n        }\n        if (rbx > 0x7ffffffffffffffe)\n        {\n            rbp_1 = nullptr;\n            *__errno_location() = 0xc;\n            break;\n        }\n        rbx = 0x7fffffffffffffff;\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_409d20",
            "funcStartAddr": "0x409d20",
            "funcEndAddr": "0x409d2a",
            "decompiledFuncCode": "int64_t sub_409d20() __noreturn\n{\n    /* tailcall */\n    return sub_403c80(1);\n}\n\n"
        },
        {
            "funcName": "sub_409d30",
            "funcStartAddr": "0x409d30",
            "funcEndAddr": "0x409e46",
            "decompiledFuncCode": "int64_t sub_409d30(char* arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t rbp = arg3;\n    uint64_t rax = strlen(arg1);\n    char* r14 = *arg2;\n    int64_t var_58 = -1;\n    if (r14 != 0)\n    {\n        char var_41_1 = 0;\n        int64_t rbx_1 = 0;\n        while (true)\n        {\n            if (strncmp(r14, arg1, rax) == 0)\n            {\n                if (strlen(r14) == rax)\n                {\n                    var_58 = rbx_1;\n                    break;\n                }\n                if (var_58 == -1)\n                {\n                    var_58 = rbx_1;\n                    rbx_1 = (rbx_1 + 1);\n                    rbp = (rbp + arg4);\n                    r14 = arg2[rbx_1];\n                    if (r14 != 0)\n                    {\n                        continue;\n                    }\n                    goto label_409e0d;\n                }\n                if (arg3 == 0)\n                {\n                    var_41_1 = 1;\n                }\n                else\n                {\n                    char rax_3 = var_41_1;\n                    if (memcmp(((var_58 * arg4) + arg3), rbp, arg4) != 0)\n                    {\n                        rax_3 = 1;\n                    }\n                    var_41_1 = rax_3;\n                }\n            }\n            rbx_1 = (rbx_1 + 1);\n            rbp = (rbp + arg4);\n            r14 = arg2[rbx_1];\n            if (r14 == 0)\n            {\n            label_409e0d:\n                int64_t rax_6 = -2;\n                if (var_41_1 == 0)\n                {\n                    rax_6 = var_58;\n                }\n                var_58 = rax_6;\n                break;\n            }\n        }\n    }\n    return var_58;\n}\n\n"
        },
        {
            "funcName": "sub_409e50",
            "funcStartAddr": "0x409e50",
            "funcEndAddr": "0x409ec1",
            "decompiledFuncCode": "int64_t sub_409e50(uint64_t arg1, uint64_t arg2, int64_t arg3)\n{\n    char* rbx;\n    if (arg3 == -1)\n    {\n        rbx = dcgettext(nullptr, \"invalid argument %s for %s\", 5);\n    }\n    else\n    {\n        rbx = dcgettext(nullptr, \"ambiguous argument %s for %s\", 5);\n    }\n    /* tailcall */\n    return error(0, 0, rbx, sub_40dcf0(0, 8, arg2), sub_40e000(1, arg1));\n}\n\n"
        },
        {
            "funcName": "sub_409ed0",
            "funcStartAddr": "0x409ed0",
            "funcEndAddr": "0x409fe8",
            "decompiledFuncCode": "char* sub_409ed0(int64_t* arg1, int64_t arg2, uint64_t arg3)\n{\n    int64_t r14 = 0;\n    int64_t rbp = arg2;\n    int64_t rbx = 0;\n    fputs_unlocked(dcgettext(nullptr, \"Valid arguments are:\", 5), stderr);\n    int64_t r12 = *arg1;\n    if (r12 != 0)\n    {\n        do\n        {\n            if ((rbx != 0 && memcmp(r14, rbp, arg3) == 0))\n            {\n                rbx = (rbx + 1);\n                rbp = (rbp + arg3);\n                __fprintf_chk(stderr, 1, \", %s\", sub_40e020(r12));\n                r12 = arg1[rbx];\n                if (r12 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = (rbx + 1);\n            r14 = rbp;\n            rbp = (rbp + arg3);\n            __fprintf_chk(stderr, 1, \"\\n  - %s\", sub_40e020(r12));\n            r12 = arg1[rbx];\n        } while (r12 != 0);\n    }\n    uint64_t* const rdi_6 = stderr;\n    char* rax_6 = stderr[5];\n    if (rax_6 >= stderr[6])\n    {\n        /* tailcall */\n        return __overflow(rdi_6, 0xa);\n    }\n    stderr[5] = &rax_6[1];\n    *rax_6 = 0xa;\n    return rax_6;\n}\n\n"
        },
        {
            "funcName": "sub_409ff0",
            "funcStartAddr": "0x409ff0",
            "funcEndAddr": "0x40a060",
            "decompiledFuncCode": "int64_t sub_409ff0(int64_t arg1, char* arg2, int64_t* arg3, int64_t arg4, \n    uint64_t arg5, int64_t arg6)\n{\n    int64_t rax = sub_409d30(arg2, arg3, arg4, arg5);\n    if (rax < 0)\n    {\n        sub_409e50(arg1, arg2, rax);\n        sub_409ed0(arg3, arg4, arg5);\n        arg6();\n        rax = -1;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40a060",
            "funcStartAddr": "0x40a060",
            "funcEndAddr": "0x40a0ad",
            "decompiledFuncCode": "int64_t sub_40a060(int64_t arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t r14 = *arg2;\n    if (r14 != 0)\n    {\n        void* rbx_1 = &arg2[1];\n        int64_t rbp_1 = arg3;\n        do\n        {\n            if (memcmp(arg1, rbp_1, arg4) == 0)\n            {\n                break;\n            }\n            r14 = *rbx_1;\n            rbp_1 = (rbp_1 + arg4);\n            rbx_1 = (rbx_1 + 8);\n        } while (r14 != 0);\n    }\n    return r14;\n}\n\n"
        },
        {
            "funcName": "sub_40a0b0",
            "funcStartAddr": "0x40a0b0",
            "funcEndAddr": "0x40a17e",
            "decompiledFuncCode": "uint64_t sub_40a0b0(char* arg1, int64_t arg2)\n{\n    char* rbx = arg1;\n    char* rax = sub_40ab40(arg1);\n    uint64_t rax_1 = sub_40aba0(rax);\n    if (rax_1 > 0xe)\n    {\n        int16_t r14_1 = *rax;\n        uint64_t r12_1 = rax_1;\n        *rax = 0x2e;\n        int32_t* rax_2 = __errno_location();\n        *rax_2 = 0;\n        rax_1 = pathconf(rbx, 3);\n        uint64_t rdx_1;\n        if (rax_1 < 0)\n        {\n            rdx_1 = 0xff;\n        }\n        if ((rax_1 >= 0 || (rax_1 < 0 && *rax_2 == 0)))\n        {\n            rdx_1 = rax_1;\n        }\n        *rax = r14_1;\n        if (r12_1 > rdx_1)\n        {\n            void* rsi = &rbx[arg2];\n            int64_t rax_4 = (rsi - rax);\n            if (rax_4 >= rdx_1)\n            {\n                rsi = &rax[(rdx_1 - 1)];\n            }\n            else\n            {\n                rdx_1 = (rax_4 + 1);\n            }\n            *rsi = 0x7e;\n            rax[rdx_1] = 0;\n            return rax_4;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40a180",
            "funcStartAddr": "0x40a180",
            "funcEndAddr": "0x40a1d4",
            "decompiledFuncCode": "void sub_40a180(char* arg1)\n{\n    char* rbx = arg1;\n    char* rax;\n    if (arg1 == 0)\n    {\n        rax = getenv(\"SIMPLE_BACKUP_SUFFIX\");\n        rbx = rax;\n    }\n    if ((((arg1 != 0 || (arg1 == 0 && rax != 0)) && *rbx != 0) && sub_40ab40(rbx) == rbx))\n    {\n        data_61b900 = rbx;\n        return;\n    }\n    data_61b900 = &data_415aa0;\n}\n\n"
        },
        {
            "funcName": "sub_40a1e0",
            "funcStartAddr": "0x40a1e0",
            "funcEndAddr": "0x40a6a1",
            "decompiledFuncCode": "char* sub_40a1e0(char* arg1, int32_t arg2, char arg3)\n{\n    char* var_88 = arg1;\n    int32_t var_58 = arg2;\n    char* rax = sub_40ab40(arg1);\n    void* r14_1 = (rax - arg1);\n    int64_t rdi_1 = data_61b900;\n    void* rax_2 = (strlen(rax) + r14_1);\n    if (rdi_1 == 0)\n    {\n        sub_40a180(rdi_1);\n        rdi_1 = data_61b900;\n    }\n    uint64_t rax_4 = (strlen(rdi_1) + 1);\n    void* rbx_1 = (rax_2 + 1);\n    uint64_t rax_5 = 9;\n    if (rax_4 >= 9)\n    {\n        rax_5 = rax_4;\n    }\n    void* rax_6 = (rax_5 + rbx_1);\n    char* rax_7 = malloc(rax_6);\n    char* r15 = rax_7;\n    if (rax_7 != 0)\n    {\n        DIR* r12_1 = nullptr;\n        while (true)\n        {\n            memcpy(r15, var_88, rbx_1);\n            if (var_58 == 1)\n            {\n                memcpy((r15 + rax_2), data_61b900, rax_4);\n            }\n            else\n            {\n                char* rbx_2 = (r15 + r14_1);\n                uint64_t rax_8 = sub_40aba0(rbx_2);\n                DIR* rax_32;\n                uint32_t rbp_1;\n                if (r12_1 == 0)\n                {\n                    int16_t rax_31 = *rbx_2;\n                    *rbx_2 = 0x2e;\n                    rax_32 = sub_40a9c0();\n                    int32_t* rcx_7 = &rbx_2[rax_8];\n                    r12_1 = rax_32;\n                    if (rax_32 == 0)\n                    {\n                        int32_t rbp_3;\n                        rbp_3 = *__errno_location() == 0xc;\n                        *rbx_2 = rax_31;\n                        rbp_1 = (rbp_3 + 2);\n                        *rcx_7 = 0x7e317e2e;\n                        rcx_7[1] = 0;\n                    }\n                    else\n                    {\n                        *rbx_2 = rax_31;\n                        *rcx_7 = 0x7e317e2e;\n                        rcx_7[1] = 0;\n                    }\n                }\n                else\n                {\n                    rewinddir(r12_1);\n                }\n                if ((r12_1 != 0 || (r12_1 == 0 && rax_32 != 0)))\n                {\n                    rbp_1 = 2;\n                    uint64_t var_78_1 = 1;\n                    void* var_70_1 = rax_6;\n                    int64_t rax_10 = (rax_8 + 4);\n                    uint64_t rax_12;\n                    do\n                    {\n                        struct dirent64* rax_11 = readdir(r12_1);\n                        if (rax_11 == 0)\n                        {\n                            break;\n                        }\n                        do\n                        {\n                            char (* rbx_3)[0x100] = &rax_11->d_name;\n                            rax_12 = strlen(rbx_3);\n                            if (rax_12 < rax_10)\n                            {\n                                break;\n                            }\n                            int16_t var_80;\n                            var_80 = (rax_8 + 2);\n                            int32_t rax_13;\n                            uint32_t r8_1;\n                            rax_13 = memcmp((r15 + r14_1), rbx_3, (rax_8 + 2));\n                            if (rax_13 != 0)\n                            {\n                                break;\n                            }\n                            void* rbx_4 = &*rbx_3[var_80];\n                            char rax_14 = *rbx_4;\n                            if ((rax_14 - 0x31) > 8)\n                            {\n                                break;\n                            }\n                            int32_t rdx_3 = *(rbx_4 + 1);\n                            int64_t rcx_3 = 1;\n                            r8_1 = rax_14 == 0x39;\n                            int32_t rax_15 = rdx_3;\n                            if ((rdx_3 - 0x30) <= 9)\n                            {\n                                int32_t rdx_5;\n                                do\n                                {\n                                    rax_15 = rax_15 == 0x39;\n                                    rcx_3 = (rcx_3 + 1);\n                                    rdx_5 = *(rbx_4 + rcx_3);\n                                    r8_1 = (r8_1 & rax_15);\n                                    rax_15 = rdx_5;\n                                } while ((rdx_5 - 0x30) <= 9);\n                            }\n                            if (rax_15 != 0x7e)\n                            {\n                                break;\n                            }\n                            if (*((rbx_4 + rcx_3) + 1) != 0)\n                            {\n                                break;\n                            }\n                            bool cond:4_1 = var_78_1 != rcx_3;\n                            if (var_78_1 >= rcx_3)\n                            {\n                                var_80 = r8_1;\n                                if (cond:4_1)\n                                {\n                                    break;\n                                }\n                                r8_1 = var_80;\n                                if (memcmp(((r15 + rax_2) + 2), rbx_4, var_78_1) > 0)\n                                {\n                                    break;\n                                }\n                            }\n                            uint64_t rdx_8 = r8_1;\n                            rbp_1 = r8_1;\n                            uint64_t rax_18 = (rdx_8 + rcx_3);\n                            var_78_1 = rax_18;\n                            void* rax_19 = ((rax_2 + rax_18) + 4);\n                            char* r8_2;\n                            if (rax_19 <= var_70_1)\n                            {\n                                r8_2 = r15;\n                            }\n                            else\n                            {\n                                int64_t rsi_6;\n                                rsi_6 = rax_19 < 0;\n                                void* rdi_11 = (rax_19 + rax_19);\n                                if (((rax_19 + rax_19) < 0 || ((rax_19 + rax_19) >= 0 && rsi_6 != 0)))\n                                {\n                                    var_70_1 = rax_19;\n                                }\n                                if (((rax_19 + rax_19) >= 0 && rsi_6 == 0))\n                                {\n                                    var_70_1 = rdi_11;\n                                }\n                                var_80 = rcx_3;\n                                char* rax_20 = realloc(r15, var_70_1);\n                                rcx_3 = var_80;\n                                r8_2 = rax_20;\n                                if (rax_20 == 0)\n                                {\n                                    goto label_40a608;\n                                }\n                            }\n                            var_80 = rcx_3;\n                            void* rax_22 = (rax_2 + r8_2);\n                            *rax_22 = 0x7e2e;\n                            *(rax_22 + 2) = 0x30;\n                            void* rcx_5 = (var_80 + memcpy(((rax_22 + rdx_8) + 2), rbx_4, (rcx_3 + 2)));\n                            char rdx_10 = *(rcx_5 - 1);\n                            void* rax_24 = (rcx_5 - 1);\n                            if (rdx_10 == 0x39)\n                            {\n                                do\n                                {\n                                    *rax_24 = 0x30;\n                                    rax_24 = (rax_24 - 1);\n                                    rdx_10 = *rax_24;\n                                } while (rdx_10 == 0x39);\n                            }\n                            r15 = r8_2;\n                            *rax_24 = (rdx_10 + 1);\n                            rax_11 = readdir(r12_1);\n                        } while (rax_11 != 0);\n                    } while (rax_12 < rax_10);\n                }\n                if (rbp_1 == 3)\n                {\n                label_40a608:\n                    char* rdi_22 = r15;\n                    r15 = nullptr;\n                    free(rdi_22);\n                    *__errno_location() = 0xc;\n                    break;\n                }\n                if ((rbp_1 == 2 && var_58 == 2))\n                {\n                    memcpy((r15 + rax_2), data_61b900, rax_4);\n                    var_58 = 1;\n                }\n                if ((rbp_1 == 1 || rbp_1 == 2))\n                {\n                    sub_40a0b0(r15, rax_2);\n                }\n            }\n            if (arg3 != 0)\n            {\n                int32_t rax_25;\n                char* rcx_6;\n                int32_t rdx_12;\n                if (r12_1 != 0)\n                {\n                    rax_25 = dirfd(r12_1);\n                    rcx_6 = (r15 + r14_1);\n                    rdx_12 = rax_25;\n                }\n                if ((r12_1 == 0 || (r12_1 != 0 && rax_25 < 0)))\n                {\n                    rcx_6 = r15;\n                    rdx_12 = -0x64;\n                    r14_1 = nullptr;\n                }\n                int32_t r8_4;\n                r8_4 = var_58 != 1;\n                if (sub_40e040(0xffffff9c, var_88, rdx_12, rcx_6, r8_4) != 0)\n                {\n                    int32_t* rax_27 = __errno_location();\n                    int32_t rbp_2 = *rax_27;\n                    if (rbp_2 != 0x11)\n                    {\n                        if (r12_1 != 0)\n                        {\n                            closedir(r12_1);\n                        }\n                        char* rdi_17 = r15;\n                        r15 = nullptr;\n                        free(rdi_17);\n                        *rax_27 = rbp_2;\n                        break;\n                    }\n                    continue;\n                }\n            }\n            if (r12_1 == 0)\n            {\n                break;\n            }\n            closedir(r12_1);\n            break;\n        }\n    }\n    return r15;\n}\n\n"
        },
        {
            "funcName": "sub_40a6b0",
            "funcStartAddr": "0x40a6b0",
            "funcEndAddr": "0x40a6ba",
            "decompiledFuncCode": "int64_t sub_40a6b0(char* arg1, int32_t arg2)\n{\n    /* tailcall */\n    return sub_40a1e0(arg1, arg2, 1);\n}\n\n"
        },
        {
            "funcName": "sub_40a6c0",
            "funcStartAddr": "0x40a6c0",
            "funcEndAddr": "0x40a6ec",
            "decompiledFuncCode": "uint64_t sub_40a6c0(int64_t arg1, char* arg2)\n{\n    return *((sub_409ff0(arg1, arg2, &data_415b20, 0x415b00, 4, data_61b3c8) << 2) + 0x415b00);\n}\n\n"
        },
        {
            "funcName": "sub_40a6f0",
            "funcStartAddr": "0x40a6f0",
            "funcEndAddr": "0x40a70a",
            "decompiledFuncCode": "char* sub_40a6f0(char* arg1, int32_t arg2)\n{\n    char* rax = sub_40a1e0(arg1, arg2, 0);\n    if (rax == 0)\n    {\n        sub_410330();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40a710",
            "funcStartAddr": "0x40a710",
            "funcEndAddr": "0x40a722",
            "decompiledFuncCode": "int64_t sub_40a710(int64_t arg1, char* arg2)\n{\n    if ((arg2 != 0 && *arg2 != 0))\n    {\n        /* tailcall */\n        return sub_40a6c0(arg1, arg2);\n    }\n    return 2;\n}\n\n"
        },
        {
            "funcName": "sub_40a730",
            "funcStartAddr": "0x40a730",
            "funcEndAddr": "0x40a771",
            "decompiledFuncCode": "int64_t sub_40a730(char const* const arg1, char* arg2)\n{\n    if ((arg2 == 0 || (arg2 != 0 && *arg2 == 0)))\n    {\n        char* rax_1 = getenv(\"VERSION_CONTROL\");\n        if ((rax_1 == 0 || (rax_1 != 0 && *rax_1 == 0)))\n        {\n            return 2;\n        }\n        if ((rax_1 != 0 && *rax_1 != 0))\n        {\n            arg2 = rax_1;\n            arg1 = \"$VERSION_CONTROL\";\n        }\n    }\n    /* tailcall */\n    return sub_40a6c0(arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40a780",
            "funcStartAddr": "0x40a780",
            "funcEndAddr": "0x40a7f0",
            "decompiledFuncCode": "uint64_t sub_40a780(uint64_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    uint64_t rcx = arg3;\n    uint64_t r8_1;\n    if (arg1 == 0)\n    {\n        arg1 = 0x2000;\n        if (arg2 != 0)\n        {\n            arg1 = arg2;\n        }\n    }\n    else if (arg2 != 0)\n    {\n        uint64_t r8_2 = arg2;\n        uint64_t rax_2 = arg1;\n        while (true)\n        {\n            uint64_t temp1_1 = (COMBINE(0, rax_2) % r8_2);\n            if (temp1_1 == 0)\n            {\n                break;\n            }\n            rax_2 = r8_2;\n            r8_2 = temp1_1;\n        }\n        uint64_t temp0_2 = (COMBINE(0, arg1) / r8_2);\n        r8_1 = (arg2 * temp0_2);\n        if ((r8_1 <= rcx && (COMBINE(0, r8_1) / arg2) == temp0_2))\n        {\n        label_40a7a1:\n            return r8_1;\n        }\n    }\n    if (arg1 > rcx)\n    {\n        goto label_40a79b;\n    }\n    rcx = arg1;\nlabel_40a79b:\n    r8_1 = rcx;\n    goto label_40a7a1;\n}\n\n"
        },
        {
            "funcName": "sub_40a7f0",
            "funcStartAddr": "0x40a7f0",
            "funcEndAddr": "0x40a7f8",
            "decompiledFuncCode": "int64_t sub_40a7f0(int64_t arg1)\n{\n    data_61b908 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_40a800",
            "funcStartAddr": "0x40a800",
            "funcEndAddr": "0x40a8fd",
            "decompiledFuncCode": "void sub_40a800(void* arg1)\n{\n    if (sub_410560(stdin) != 0)\n    {\n        int32_t rax_8 = sub_410590(stdin, 0, 1);\n        uint64_t* const rdi_3 = stdin;\n        int32_t rax_3;\n        if (rax_8 == 0)\n        {\n            rax_3 = sub_410520(rdi_3);\n            rdi_3 = stdin;\n            if (rax_3 != 0)\n            {\n                sub_4114a0(rdi_3);\n            }\n        }\n        if (((rax_8 != 0 || (rax_8 == 0 && rax_3 == 0)) && sub_4114a0(rdi_3) == 0))\n        {\n            /* tailcall */\n            return sub_40a920();\n        }\n    }\n    else if (sub_4114a0(stdin) == 0)\n    {\n        /* tailcall */\n        return sub_40a920();\n    }\n    char* rax_4 = dcgettext(nullptr, \"error closing file\", 5);\n    int64_t rbx = data_61b908;\n    int32_t* rax_5 = __errno_location();\n    if (rbx == 0)\n    {\n        error(0, *rax_5, \"%s\", rax_4);\n    }\n    else\n    {\n        error(0, *rax_5, \"%s: %s\", sub_40de70(rbx), rax_4);\n    }\n    sub_40a920();\n    _exit(data_61b3d0);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40a900",
            "funcStartAddr": "0x40a900",
            "funcEndAddr": "0x40a908",
            "decompiledFuncCode": "int64_t sub_40a900(int64_t arg1)\n{\n    data_61b918 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_40a910",
            "funcStartAddr": "0x40a910",
            "funcEndAddr": "0x40a918",
            "decompiledFuncCode": "int64_t sub_40a910(char arg1)\n{\n    data_61b910 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_40a920",
            "funcStartAddr": "0x40a920",
            "funcEndAddr": "0x40a9be",
            "decompiledFuncCode": "uint64_t sub_40a920()\n{\n    int32_t rax = sub_4114a0(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_61b910 == 0 || (data_61b910 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_61b918;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_40de70(rdi_2), rax_3);\n            }\n        }\n    }\n    if ((rax == 0 || ((rax != 0 && data_61b910 != 0) && *rax_1 == 0x20)))\n    {\n        uint64_t rax_2 = sub_4114a0(stderr);\n        if (rax_2 == 0)\n        {\n            return rax_2;\n        }\n    }\n    _exit(data_61b3d0);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40a9c0",
            "funcStartAddr": "0x40a9c0",
            "funcEndAddr": "0x40aa56",
            "decompiledFuncCode": "DIR* sub_40a9c0()\n{\n    char* rdi;\n    DIR* rax = opendir(rdi);\n    if (rax != 0)\n    {\n        int32_t rax_1 = dirfd(rax);\n        if (rax_1 <= 2)\n        {\n            int32_t rax_4 = sub_4103e0(rax_1, 0x406, 3);\n            int32_t* rax_5 = __errno_location();\n            DIR* r13;\n            int32_t r14;\n            if (rax_4 < 0)\n            {\n                r14 = *rax_5;\n                r13 = nullptr;\n            }\n            else\n            {\n                DIR* rax_7 = fdopendir(rax_4);\n                r14 = *rax_5;\n                r13 = rax_7;\n                if (rax_7 == 0)\n                {\n                    close(rax_4);\n                }\n            }\n            closedir(rax);\n            *rax_5 = r14;\n            return r13;\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40aa60",
            "funcStartAddr": "0x40aa60",
            "funcEndAddr": "0x40aa78",
            "decompiledFuncCode": "char* sub_40aa60(char* arg1)\n{\n    char* rax = sub_40aae0(arg1);\n    if (rax == 0)\n    {\n        sub_410330();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40aa80",
            "funcStartAddr": "0x40aa80",
            "funcEndAddr": "0x40aadd",
            "decompiledFuncCode": "void* sub_40aa80(char* arg1)\n{\n    int64_t rbp;\n    rbp = *arg1 == 0x2f;\n    char* rax = sub_40ab40(arg1);\n    void* rcx_1 = (rax - arg1);\n    if (rcx_1 > rbp)\n    {\n        void* rdx_1 = (rcx_1 - 1);\n        if (rax[-1] == 0x2f)\n        {\n            void* rax_1;\n            for (; rbp != rdx_1; rdx_1 = rax_1)\n            {\n                rax_1 = (rdx_1 - 1);\n                if (*((arg1 + rdx_1) - 1) != 0x2f)\n                {\n                    break;\n                }\n            }\n            return rdx_1;\n        }\n    }\n    return rcx_1;\n}\n\n"
        },
        {
            "funcName": "sub_40aae0",
            "funcStartAddr": "0x40aae0",
            "funcEndAddr": "0x40ab3a",
            "decompiledFuncCode": "char* sub_40aae0(char* arg1)\n{\n    void* rax = sub_40aa80(arg1);\n    void* rbx = rax;\n    rax = rax == 0;\n    char* rax_2 = malloc(((rbx + rax) + 1));\n    char* rcx = rax_2;\n    if (rax_2 != 0)\n    {\n        char* rax_3 = memcpy(rax_2, arg1, rbx);\n        rcx = rax_3;\n        if (rbx == 0)\n        {\n            *rax_3 = 0x2e;\n            rbx = 1;\n        }\n        *(rcx + rbx) = 0;\n    }\n    return rcx;\n}\n\n"
        },
        {
            "funcName": "sub_40ab40",
            "funcStartAddr": "0x40ab40",
            "funcEndAddr": "0x40ab9b",
            "decompiledFuncCode": "char* sub_40ab40(char* arg1)\n{\n    char rdx = *arg1;\n    char* rax = arg1;\n    if (rdx == 0x2f)\n    {\n        do\n        {\n            rax = &rax[1];\n            rdx = *rax;\n        } while (rdx == 0x2f);\n    }\n    if (rdx != 0)\n    {\n        char* rcx_1 = rax;\n        char rsi_1 = 0;\n        while (true)\n        {\n            if (rdx == 0x2f)\n            {\n                rcx_1 = &rcx_1[1];\n                rdx = *rcx_1;\n                rsi_1 = 1;\n                if (rdx == 0)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                if (rsi_1 != 0)\n                {\n                    rax = rcx_1;\n                    rsi_1 = 0;\n                }\n                rcx_1 = &rcx_1[1];\n                rdx = *rcx_1;\n                if (rdx == 0)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40aba0",
            "funcStartAddr": "0x40aba0",
            "funcEndAddr": "0x40abcb",
            "decompiledFuncCode": "uint64_t sub_40aba0(char* arg1)\n{\n    uint64_t rax = strlen(arg1);\n    if (rax > 1)\n    {\n        while (true)\n        {\n            uint64_t rdx_1 = (rax - 1);\n            if (arg1[(rax - 1)] != 0x2f)\n            {\n                break;\n            }\n            rax = rdx_1;\n            if (rdx_1 == 1)\n            {\n                return rax;\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40abd0",
            "funcStartAddr": "0x40abd0",
            "funcEndAddr": "0x40ac03",
            "decompiledFuncCode": "uint64_t sub_40abd0(char* arg1)\n{\n    char* rax = sub_40ab40(arg1);\n    char* rbx = rax;\n    if (*rax == 0)\n    {\n        rbx = arg1;\n    }\n    void* rbx_1 = &rbx[sub_40aba0(rbx)];\n    bool cond:1 = *rbx_1 != 0;\n    *rbx_1 = 0;\n    uint64_t rax_1;\n    rax_1 = cond:1;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40ac10",
            "funcStartAddr": "0x40ac10",
            "funcEndAddr": "0x40ac15",
            "decompiledFuncCode": "int64_t sub_40ac10(int32_t arg1, int64_t arg2, off64_t arg3, int32_t arg4)\n{\n    /* tailcall */\n    return posix_fadvise(arg1, arg2, arg3, arg4);\n}\n\n"
        },
        {
            "funcName": "sub_40ac20",
            "funcStartAddr": "0x40ac20",
            "funcEndAddr": "0x40ac41",
            "decompiledFuncCode": "void sub_40ac20(FILE* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        return;\n    }\n    /* tailcall */\n    return posix_fadvise(fileno(arg1), 0, 0, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40ac50",
            "funcStartAddr": "0x40ac50",
            "funcEndAddr": "0x40ac9a",
            "decompiledFuncCode": "uint64_t sub_40ac50(char* arg1, int64_t arg2, int32_t arg3)\n{\n    uint64_t rdx = 0;\n    if ((arg2 & 0x40) != 0)\n    {\n        int32_t var_50_1 = 0x10;\n        rdx = arg3;\n        void* var_48_1 = &arg_8;\n        void var_38;\n        void* var_40_1 = &var_38;\n    }\n    return sub_40eaf0(open(arg1, arg2, rdx));\n}\n\n"
        },
        {
            "funcName": "sub_40aca0",
            "funcStartAddr": "0x40aca0",
            "funcEndAddr": "0x40ad26",
            "decompiledFuncCode": "void sub_40aca0(int64_t* arg1, char* arg2, int64_t* arg3)\n{\n    if (arg1 == 0)\n    {\n        return;\n    }\n    int64_t* rax = sub_4100e0(0x18);\n    *rax = sub_410310(arg2);\n    rax[1] = arg3[1];\n    rax[2] = *arg3;\n    int64_t rax_4 = sub_40c0b0(arg1, rax);\n    if (rax_4 == 0)\n    {\n        sub_410330();\n        /* no return */\n    }\n    if (rax == rax_4)\n    {\n        return;\n    }\n    /* tailcall */\n    return sub_40c380(rax);\n}\n\n"
        },
        {
            "funcName": "sub_40ad30",
            "funcStartAddr": "0x40ad30",
            "funcEndAddr": "0x40ad6b",
            "decompiledFuncCode": "int64_t sub_40ad30(void* arg1, int64_t arg2, int64_t* arg3)\n{\n    if (arg1 == 0)\n    {\n        return 0;\n    }\n    int64_t var_28 = arg2;\n    int64_t var_20 = arg3[1];\n    int64_t var_18 = *arg3;\n    int64_t rax_2;\n    rax_2 = sub_40b6a0(arg1, &var_28) != 0;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_40ad70",
            "funcStartAddr": "0x40ad70",
            "funcEndAddr": "0x40aee3",
            "decompiledFuncCode": "uint64_t sub_40ad70(int32_t arg1, char* arg2)\n{\n    char rax = 0x2d;\n    int32_t rdx = (arg1 & 0xf000);\n    if (rdx != 0x8000)\n    {\n        rax = 0x64;\n        if (rdx != 0x4000)\n        {\n            rax = 0x62;\n            if (rdx != 0x6000)\n            {\n                rax = 0x63;\n                if (rdx != 0x2000)\n                {\n                    rax = 0x6c;\n                    if (rdx != 0xa000)\n                    {\n                        rax = 0x70;\n                        if (rdx != 0x1000)\n                        {\n                            rax = 0x73;\n                            if (rdx != 0xc000)\n                            {\n                                rax = 0x3f;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    *arg2 = rax;\n    int32_t rax_2 = (arg1 & 0x100);\n    arg2[1] = (((rax_2 - rax_2) & 0xbb) + 0x72);\n    int32_t rax_7 = (arg1 & 0x80);\n    arg2[2] = (((rax_7 - rax_7) & 0xb6) + 0x77);\n    int32_t rax_12 = (arg1 & 0x40);\n    char rax_13 = (rax_12 - rax_12);\n    char rax_15;\n    if ((arg1 & 0x800) == 0)\n    {\n        rax_15 = ((rax_13 & 0xb5) + 0x78);\n    }\n    else\n    {\n        rax_15 = ((rax_13 & 0xe0) + 0x73);\n    }\n    arg2[3] = rax_15;\n    int32_t rax_17 = (arg1 & 0x20);\n    arg2[4] = (((rax_17 - rax_17) & 0xbb) + 0x72);\n    int32_t rax_22 = (arg1 & 0x10);\n    arg2[5] = (((rax_22 - rax_22) & 0xb6) + 0x77);\n    int32_t rax_27 = (arg1 & 8);\n    char rax_28 = (rax_27 - rax_27);\n    char rax_30;\n    if ((arg1 & 0x400) == 0)\n    {\n        rax_30 = ((rax_28 & 0xb5) + 0x78);\n    }\n    else\n    {\n        rax_30 = ((rax_28 & 0xe0) + 0x73);\n    }\n    arg2[6] = rax_30;\n    int32_t rax_32 = (arg1 & 4);\n    arg2[7] = (((rax_32 - rax_32) & 0xbb) + 0x72);\n    int32_t rax_37 = (arg1 & 2);\n    arg2[8] = (((rax_37 - rax_37) & 0xb6) + 0x77);\n    int32_t rax_42 = (arg1 & 1);\n    int32_t rax_43 = (rax_42 - rax_42);\n    if ((arg1 & 0x200) == 0)\n    {\n        uint64_t rax_49 = ((rax_43 & 0xffffffb5) + 0x78);\n        arg2[9] = rax_49;\n        *(arg2 + 0xa) = 0x20;\n        return rax_49;\n    }\n    uint64_t rax_45 = ((rax_43 & 0xffffffe0) + 0x74);\n    arg2[9] = rax_45;\n    *(arg2 + 0xa) = 0x20;\n    return rax_45;\n}\n\n"
        },
        {
            "funcName": "sub_40aef0",
            "funcStartAddr": "0x40aef0",
            "funcEndAddr": "0x40aef8",
            "decompiledFuncCode": "int64_t sub_40aef0(void* arg1, char* arg2)\n{\n    /* tailcall */\n    return sub_40ad70(*(arg1 + 0x18), arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40af00",
            "funcStartAddr": "0x40af00",
            "funcEndAddr": "0x40af18",
            "decompiledFuncCode": "int64_t sub_40af00(char* arg1, char* arg2, void** arg3)\n{\n    int64_t rax = sub_40af20(arg1, arg2, arg3);\n    if (rax == 0)\n    {\n        sub_410330();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40af20",
            "funcStartAddr": "0x40af20",
            "funcEndAddr": "0x40aff9",
            "decompiledFuncCode": "int64_t sub_40af20(char* arg1, char* arg2, void** arg3)\n{\n    char* r12 = arg2;\n    char* rax = sub_40ab40(arg1);\n    uint64_t rax_1 = sub_40aba0(rax);\n    uint64_t rbx = rax_1;\n    void* rbp_2 = ((rax - arg1) + rax_1);\n    if (rax_1 != 0)\n    {\n        rbx = rax[(rax_1 - 1)] != 0x2f;\n        rbx = rbx;\n    }\n    char rax_2 = *r12;\n    if (rax_2 == 0x2f)\n    {\n        do\n        {\n            r12 = &r12[1];\n        } while (*r12 == 0x2f);\n    }\n    uint64_t rax_3 = strlen(r12);\n    int64_t rax_4 = malloc((((rbx + rbp_2) + 1) + rax_3));\n    if (rax_4 != 0)\n    {\n        char* rax_5 = mempcpy(rax_4, arg1, rbp_2);\n        *rax_5 = 0x2f;\n        void* rdi_5 = &rax_5[rbx];\n        if (arg3 != 0)\n        {\n            int64_t rax_6;\n            rax_6 = rax_2 == 0x2f;\n            *arg3 = (rdi_5 - rax_6);\n        }\n        *mempcpy(rdi_5, r12, rax_3) = 0;\n    }\n    return rax_4;\n}\n\n"
        },
        {
            "funcName": "sub_40b000",
            "funcStartAddr": "0x40b000",
            "funcEndAddr": "0x40b076",
            "decompiledFuncCode": "int64_t sub_40b000(int32_t arg1, int64_t arg2, uint64_t arg3)\n{\n    int64_t r12;\n    if (arg3 == 0)\n    {\n        r12 = 0;\n    }\n    else\n    {\n        int64_t rbp_1 = arg2;\n        uint64_t rbx_1 = arg3;\n        r12 = 0;\n        ssize_t rax_1;\n        uint64_t temp0_1;\n        do\n        {\n            rax_1 = sub_40e290(arg1, rbp_1, rbx_1);\n            if (rax_1 == -1)\n            {\n                break;\n            }\n            if (rax_1 == 0)\n            {\n                *__errno_location() = 0x1c;\n                return r12;\n            }\n            r12 = (r12 + rax_1);\n            rbp_1 = (rbp_1 + rax_1);\n            temp0_1 = rbx_1;\n            rbx_1 = (rbx_1 - rax_1);\n        } while (temp0_1 != rax_1);\n    }\n    return r12;\n}\n\n"
        },
        {
            "funcName": "sub_40b080",
            "funcStartAddr": "0x40b080",
            "funcEndAddr": "0x40b113",
            "decompiledFuncCode": "int64_t sub_40b080(int64_t arg1)\n{\n    int64_t rsi = 0xa;\n    if (arg1 >= 0xa)\n    {\n        rsi = arg1;\n    }\n    int64_t rsi_1 = (rsi | 1);\n    if (rsi_1 != -1)\n    {\n        do\n        {\n            int64_t rax_2;\n            int64_t rdx_1;\n            rdx_1 = HIGHD((rsi_1 * -0x5555555555555555));\n            rax_2 = LOWD((rsi_1 * -0x5555555555555555));\n            uint64_t rcx_2 = (rsi_1 - ((rdx_1 >> 1) * 3));\n            uint64_t rax_6 = rcx_2;\n            int64_t rdi;\n            if ((rsi_1 > 9 && rcx_2 != 0))\n            {\n                int64_t r8_1 = 0x10;\n                rdi = 9;\n                int64_t rcx_3 = 3;\n                uint64_t temp1_1;\n                do\n                {\n                    rcx_3 = (rcx_3 + 2);\n                    rdi = (rdi + r8_1);\n                    temp1_1 = (COMBINE(0, rsi_1) % rcx_3);\n                    rax_6 = temp1_1;\n                    if (rdi >= rsi_1)\n                    {\n                        break;\n                    }\n                    r8_1 = (r8_1 + 8);\n                } while (temp1_1 != 0);\n            }\n            if (((rsi_1 <= 9 || ((rsi_1 > 9 && rcx_2 != 0) && rdi >= rsi_1)) && rax_6 != 0))\n            {\n                break;\n            }\n            rsi_1 = (rsi_1 + 2);\n        } while (rsi_1 != -1);\n    }\n    return rsi_1;\n}\n\n"
        },
        {
            "funcName": "sub_40b120",
            "funcStartAddr": "0x40b120",
            "funcEndAddr": "0x40b130",
            "decompiledFuncCode": "uint64_t sub_40b120(int64_t arg1, int64_t arg2)\n{\n    return (COMBINE(0, (RORQ(arg1, 3))) % arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40b130",
            "funcStartAddr": "0x40b130",
            "funcEndAddr": "0x40b137",
            "decompiledFuncCode": "int64_t sub_40b130(int64_t arg1, int64_t arg2)\n{\n    int64_t rax;\n    rax = arg1 == arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40b140",
            "funcStartAddr": "0x402a55",
            "funcEndAddr": "0x40b161",
            "decompiledFuncCode": "int64_t sub_40b140(void* arg1, int64_t arg2)\n{\n    int64_t rax = *(arg1 + 0x30)(arg2, *(arg1 + 0x10));\n    if (*(arg1 + 0x10) <= rax)\n    {\n        abort();\n        /* no return */\n    }\n    return ((rax << 4) + *arg1);\n}\n\n"
        },
        {
            "funcName": "sub_40b170",
            "funcStartAddr": "0x40b170",
            "funcEndAddr": "0x40b289",
            "decompiledFuncCode": "int64_t sub_40b170(void* arg1, int64_t arg2, int64_t* arg3, char arg4)\n{\n    int64_t* rax = sub_40b140(arg1, arg2);\n    *arg3 = rax;\n    int64_t rsi = *rax;\n    if (rsi != 0)\n    {\n        int64_t* rbx_1 = rax;\n        char rax_1;\n        if (rsi != arg2)\n        {\n            rax_1 = *(arg1 + 0x38)(arg2, rsi);\n            if (rax_1 != 0)\n            {\n                rsi = *rbx_1;\n            }\n            else\n            {\n                int64_t* rax_2 = rbx_1[1];\n                if (rax_2 != 0)\n                {\n                    rsi = *rax_2;\n                    if (arg2 != rsi)\n                    {\n                        do\n                        {\n                            if (*(arg1 + 0x38)(arg2, rsi) != 0)\n                            {\n                                rax_2 = rbx_1[1];\n                                rsi = *rax_2;\n                                break;\n                            }\n                            rbx_1 = rbx_1[1];\n                            rax_2 = rbx_1[1];\n                            if (rax_2 == 0)\n                            {\n                                return 0;\n                            }\n                            rsi = *rax_2;\n                        } while (rsi != arg2);\n                    }\n                    if (arg4 != 0)\n                    {\n                        rbx_1[1] = rax_2[1];\n                        *rax_2 = 0;\n                        rax_2[1] = *(arg1 + 0x48);\n                        *(arg1 + 0x48) = rax_2;\n                    }\n                    goto label_40b229;\n                }\n            }\n        }\n        if (((rsi != arg2 && rax_1 != 0) || rsi == arg2))\n        {\n            if (arg4 == 0)\n            {\n            label_40b229:\n                return rsi;\n            }\n            int128_t* rax_5 = rbx_1[1];\n            if (rax_5 != 0)\n            {\n                *rbx_1 = *rax_5;\n                *rax_5 = 0;\n                *(rax_5 + 8) = *(arg1 + 0x48);\n                *(arg1 + 0x48) = rax_5;\n                return rsi;\n            }\n            *rbx_1 = 0;\n            goto label_40b229;\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40b290",
            "funcStartAddr": "0x40b290",
            "funcEndAddr": "0x40b30e",
            "decompiledFuncCode": "int64_t sub_40b290(int64_t* arg1)\n{\n    int32_t* rax_3 = *arg1;\n    if (rax_3 != 0x415c00)\n    {\n        int32_t zmm0 = rax_3[2];\n        if (((zmm0 == 0.100000001f | (FCMP_UO(zmm0, 0.100000001f))) || (zmm0 < 0.100000001f | (FCMP_UO(zmm0, 0.100000001f)))))\n        {\n        label_40b2fa:\n            *arg1 = 0x415c00;\n            return 0;\n        }\n        if (((0.899999976f == zmm0 | (FCMP_UO(0.899999976f, zmm0))) || (0.899999976f < zmm0 | (FCMP_UO(0.899999976f, zmm0)))))\n        {\n            goto label_40b2fa;\n        }\n        float zmm1 = rax_3[3];\n        if (((zmm1 == 1.10000002f | (FCMP_UO(zmm1, 1.10000002f))) || (zmm1 < 1.10000002f | (FCMP_UO(zmm1, 1.10000002f)))))\n        {\n            goto label_40b2fa;\n        }\n        zmm1 = *rax_3;\n        if ((zmm1 < 0f | (FCMP_UO(zmm1, 0f))))\n        {\n            goto label_40b2fa;\n        }\n        zmm1 = (zmm1 + 0.100000001f);\n        int32_t zmm2 = rax_3[1];\n        if (((zmm2 == zmm1 | (FCMP_UO(zmm2, zmm1))) || (zmm2 < zmm1 | (FCMP_UO(zmm2, zmm1)))))\n        {\n            goto label_40b2fa;\n        }\n        int512_t zmm3;\n        zmm3 = 0x3f800000;\n        if ((1f < zmm2 | (FCMP_UO(1f, zmm2))))\n        {\n            goto label_40b2fa;\n        }\n        if ((!((!(zmm0 == zmm1 | (FCMP_UO(zmm0, zmm1)))) && (!(zmm0 < zmm1 | (FCMP_UO(zmm0, zmm1)))))))\n        {\n            goto label_40b2fa;\n        }\n    }\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_40b310",
            "funcStartAddr": "0x40b310",
            "funcEndAddr": "0x40b45a",
            "decompiledFuncCode": "int64_t sub_40b310(void* arg1, int64_t* arg2, char arg3)\n{\n    int64_t* r12 = *arg2;\n    if (r12 < arg2[1])\n    {\n        do\n        {\n            int64_t r15_2 = *r12;\n            if (r15_2 != 0)\n            {\n                int64_t* rbx_1 = r12[1];\n                if (rbx_1 != 0)\n                {\n                    while (true)\n                    {\n                        int64_t r15_1 = *rbx_1;\n                        int64_t* rax_1 = sub_40b140(arg1, r15_1);\n                        int64_t* rdx = rbx_1[1];\n                        if (*rax_1 != 0)\n                        {\n                            rbx_1[1] = rax_1[1];\n                            rax_1[1] = rbx_1;\n                            rbx_1 = rdx;\n                            if (rdx == 0)\n                            {\n                                break;\n                            }\n                        }\n                        else\n                        {\n                            *rax_1 = r15_1;\n                            *(arg1 + 0x18) = (*(arg1 + 0x18) + 1);\n                            *rbx_1 = 0;\n                            rbx_1[1] = *(arg1 + 0x48);\n                            *(arg1 + 0x48) = rbx_1;\n                            rbx_1 = rdx;\n                            if (rdx == 0)\n                            {\n                                break;\n                            }\n                        }\n                    }\n                    r15_2 = *r12;\n                }\n                r12[1] = 0;\n                if (arg3 == 0)\n                {\n                    int64_t* rax_3 = sub_40b140(arg1, r15_2);\n                    if (*rax_3 == 0)\n                    {\n                        *rax_3 = r15_2;\n                        *(arg1 + 0x18) = (*(arg1 + 0x18) + 1);\n                    }\n                    else\n                    {\n                        int64_t* rax_4 = *(arg1 + 0x48);\n                        if (rax_4 != 0)\n                        {\n                            *(arg1 + 0x48) = rax_4[1];\n                        }\n                        else\n                        {\n                            rax_4 = malloc(0x10);\n                            if (rax_4 == 0)\n                            {\n                                return 0;\n                            }\n                        }\n                        int64_t rdx_2 = rax_3[1];\n                        *rax_4 = r15_2;\n                        rax_4[1] = rdx_2;\n                        rax_3[1] = rax_4;\n                    }\n                    *r12 = 0;\n                    r12 = &r12[2];\n                    arg2[3] = (arg2[3] - 1);\n                    if (arg2[1] <= r12)\n                    {\n                        break;\n                    }\n                    continue;\n                }\n            }\n            r12 = &r12[2];\n        } while (arg2[1] > r12);\n    }\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_40b460",
            "funcStartAddr": "0x40b460",
            "funcEndAddr": "0x40b465",
            "decompiledFuncCode": "int64_t sub_40b460(void* arg1)\n{\n    return *(arg1 + 0x10);\n}\n\n"
        },
        {
            "funcName": "sub_40b470",
            "funcStartAddr": "0x40b470",
            "funcEndAddr": "0x40b475",
            "decompiledFuncCode": "int64_t sub_40b470(void* arg1)\n{\n    return *(arg1 + 0x18);\n}\n\n"
        },
        {
            "funcName": "sub_40b480",
            "funcStartAddr": "0x40b480",
            "funcEndAddr": "0x40b485",
            "decompiledFuncCode": "int64_t sub_40b480(void* arg1)\n{\n    return *(arg1 + 0x20);\n}\n\n"
        },
        {
            "funcName": "sub_40b490",
            "funcStartAddr": "0x40b490",
            "funcEndAddr": "0x40b4df",
            "decompiledFuncCode": "int64_t sub_40b490(int64_t* arg1)\n{\n    int64_t* rsi = *arg1;\n    int64_t rdi = arg1[1];\n    int64_t rax = 0;\n    if (rsi >= rdi)\n    {\n        return 0;\n    }\n    while (true)\n    {\n        if (*rsi == 0)\n        {\n            rsi = &rsi[2];\n            if (rsi >= rdi)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rdx_1 = rsi[1];\n            int64_t rcx_1 = 1;\n            if (rdx_1 != 0)\n            {\n                do\n                {\n                    rdx_1 = *(rdx_1 + 8);\n                    rcx_1 = (rcx_1 + 1);\n                } while (rdx_1 != 0);\n            }\n            if (rax < rcx_1)\n            {\n                rax = rcx_1;\n            }\n            rsi = &rsi[2];\n            if (rsi >= rdi)\n            {\n                break;\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40b4e0",
            "funcStartAddr": "0x40b4e0",
            "funcEndAddr": "0x40b547",
            "decompiledFuncCode": "int64_t sub_40b4e0(int64_t* arg1)\n{\n    int64_t* rcx = *arg1;\n    int64_t rsi = arg1[1];\n    int64_t rdx = 0;\n    int64_t r8 = 0;\n    if (rcx < rsi)\n    {\n        do\n        {\n            if (*rcx != 0)\n            {\n                void* rax_1 = rcx[1];\n                r8 = (r8 + 1);\n                rdx = (rdx + 1);\n                if (rax_1 != 0)\n                {\n                    do\n                    {\n                        rax_1 = *(rax_1 + 8);\n                        rdx = (rdx + 1);\n                    } while (rax_1 != 0);\n                    rcx = &rcx[2];\n                    if (rcx >= rsi)\n                    {\n                        break;\n                    }\n                    continue;\n                }\n            }\n            rcx = &rcx[2];\n        } while (rcx < rsi);\n    }\n    if (arg1[3] == r8)\n    {\n        int64_t rax_2;\n        rax_2 = arg1[4] == rdx;\n        return rax_2;\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40b550",
            "funcStartAddr": "0x40b550",
            "funcEndAddr": "0x40b698",
            "decompiledFuncCode": "int64_t sub_40b550(int64_t* arg1, FILE* arg2)\n{\n    int64_t rbx = 0;\n    int64_t r12 = arg1[2];\n    int64_t r13 = arg1[3];\n    int64_t* rsi = *arg1;\n    int64_t rdi = arg1[1];\n    if (rsi < rdi)\n    {\n        while (true)\n        {\n            if (*rsi == 0)\n            {\n                rsi = &rsi[2];\n                if (rsi >= rdi)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                void* rax_1 = rsi[1];\n                int64_t rdx_1 = 1;\n                if (rax_1 != 0)\n                {\n                    do\n                    {\n                        rax_1 = *(rax_1 + 8);\n                        rdx_1 = (rdx_1 + 1);\n                    } while (rax_1 != 0);\n                }\n                if (rbx < rdx_1)\n                {\n                    rbx = rdx_1;\n                }\n                rsi = &rsi[2];\n                if (rsi >= rdi)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    __fprintf_chk(arg2, 1, \"# entries:         %lu\\n\");\n    __fprintf_chk(arg2, 1, \"# buckets:         %lu\\n\", r12);\n    __fprintf_chk(arg2, 1, \"# buckets used:    %lu (%.2f%%)\\n\", r13);\n    /* tailcall */\n    return __fprintf_chk(arg2, 1, \"max bucket length: %lu\\n\", rbx);\n}\n\n"
        },
        {
            "funcName": "sub_40b6a0",
            "funcStartAddr": "0x40b6a0",
            "funcEndAddr": "0x40b6f3",
            "decompiledFuncCode": "int64_t sub_40b6a0(void* arg1, int64_t arg2)\n{\n    int64_t rbp = arg2;\n    int64_t* rax = sub_40b140(arg1, arg2);\n    int64_t rsi = *rax;\n    if (rsi != 0)\n    {\n        int64_t* rbx_1 = rax;\n        while (true)\n        {\n            if (rsi != rbp)\n            {\n                if (*(arg1 + 0x38)(rbp, rsi) != 0)\n                {\n                    rbp = *rbx_1;\n                }\n                else\n                {\n                    rbx_1 = rbx_1[1];\n                    if (rbx_1 == 0)\n                    {\n                        break;\n                    }\n                    rsi = *rbx_1;\n                    continue;\n                }\n            }\n            return rbp;\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40b700",
            "funcStartAddr": "0x402a5a",
            "funcEndAddr": "0x40b748",
            "decompiledFuncCode": "int64_t sub_40b700(int64_t* arg1)\n{\n    if (arg1[4] == 0)\n    {\n        return 0;\n    }\n    int64_t* rdx = *arg1;\n    int64_t rcx = arg1[1];\n    if (rdx < rcx)\n    {\n        do\n        {\n            int64_t rax_1 = *rdx;\n            if (rax_1 != 0)\n            {\n                return rax_1;\n            }\n            rdx = &rdx[2];\n        } while (rdx < rcx);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40b750",
            "funcStartAddr": "0x40b750",
            "funcEndAddr": "0x40b7ba",
            "decompiledFuncCode": "int64_t sub_40b750(void* arg1, int64_t arg2)\n{\n    int64_t* rax = sub_40b140(arg1, arg2);\n    int64_t* rcx = rax;\n    int64_t* rdx = rax;\n    do\n    {\n        int64_t rax_1 = *rdx;\n        rdx = rdx[1];\n        if (rax_1 == arg2)\n        {\n            if (rdx != 0)\n            {\n                return *rdx;\n            }\n            break;\n        }\n    } while (rdx != 0);\n    int64_t rdx_1 = *(arg1 + 8);\n    int64_t rax_2;\n    do\n    {\n        rcx = &rcx[2];\n        if (rdx_1 <= rcx)\n        {\n            rax_2 = 0;\n            break;\n        }\n        rax_2 = *rcx;\n    } while (rax_2 == 0);\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_40b7c0",
            "funcStartAddr": "0x40b7c0",
            "funcEndAddr": "0x40b824",
            "decompiledFuncCode": "int64_t sub_40b7c0(int64_t* arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rdx = *arg1;\n    if (arg1[1] <= rdx)\n    {\n        return 0;\n    }\n    int64_t r9 = 0;\n    do\n    {\n        int64_t r8_1 = *rdx;\n        if (r8_1 != 0)\n        {\n            if (arg3 <= r9)\n            {\n                break;\n            }\n            *(arg2 + (r9 << 3)) = r8_1;\n            int64_t* r8_2 = rdx[1];\n            int64_t rcx_1 = (r9 + 1);\n            if (r8_2 != 0)\n            {\n                do\n                {\n                    if (arg3 == rcx_1)\n                    {\n                        return arg3;\n                    }\n                    rcx_1 = (rcx_1 + 1);\n                    *((arg2 + (rcx_1 << 3)) - 8) = *r8_2;\n                    r8_2 = r8_2[1];\n                } while (r8_2 != 0);\n            }\n            r9 = rcx_1;\n        }\n        rdx = &rdx[2];\n    } while (arg1[1] > rdx);\n    return r9;\n}\n\n"
        },
        {
            "funcName": "sub_40b830",
            "funcStartAddr": "0x40b830",
            "funcEndAddr": "0x40b8a8",
            "decompiledFuncCode": "int64_t sub_40b830(int64_t* arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* r14 = *arg1;\n    int64_t rbp;\n    if (arg1[1] <= r14)\n    {\n        rbp = 0;\n    }\n    else\n    {\n        rbp = 0;\n        do\n        {\n            int64_t rdi = *r14;\n            if (rdi != 0)\n            {\n                int64_t* rbx_1 = r14;\n                while (true)\n                {\n                    if (arg2(rdi, arg3) == 0)\n                    {\n                        return rbp;\n                    }\n                    rbx_1 = rbx_1[1];\n                    rbp = (rbp + 1);\n                    if (rbx_1 == 0)\n                    {\n                        break;\n                    }\n                    rdi = *rbx_1;\n                }\n            }\n            r14 = &r14[2];\n        } while (arg1[1] > r14);\n    }\n    return rbp;\n}\n\n"
        },
        {
            "funcName": "sub_40b8b0",
            "funcStartAddr": "0x40b8b0",
            "funcEndAddr": "0x40b8e1",
            "decompiledFuncCode": "uint64_t sub_40b8b0(char* arg1, int64_t arg2)\n{\n    uint64_t rcx = *arg1;\n    uint64_t rdx = 0;\n    if (rcx != 0)\n    {\n        do\n        {\n            arg1 = &arg1[1];\n            int64_t rax_4 = (((rdx << 5) - rdx) + rcx);\n            rcx = *arg1;\n            rdx = (COMBINE(0, rax_4) % arg2);\n        } while (rcx != 0);\n    }\n    return rdx;\n}\n\n"
        },
        {
            "funcName": "sub_40b8f0",
            "funcStartAddr": "0x40b8f0",
            "funcEndAddr": "0x40b910",
            "decompiledFuncCode": "void sub_40b8f0(int64_t* arg1)\n{\n    arg1[2] = 0;\n    *arg1 = 0x3f80000000000000;\n    arg1[1] = 0x3fb4fdf43f4ccccd;\n}\n\n"
        },
        {
            "funcName": "sub_40b910",
            "funcStartAddr": "0x40b910",
            "funcEndAddr": "0x40ba9a",
            "decompiledFuncCode": "int64_t* sub_40b910(int64_t arg1, void* arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5)\n{\n    int64_t r13 = arg4;\n    int64_t r12 = arg3;\n    int64_t rbp = arg1;\n    if (arg3 == 0)\n    {\n        r12 = 0x40b120;\n    }\n    if (arg4 == 0)\n    {\n        r13 = 0x40b130;\n    }\n    int64_t* rax = malloc(0x50);\n    int64_t* rbx = rax;\n    if (rax != 0)\n    {\n        int64_t* rdi = &rax[5];\n        float zmm1_1;\n        if (arg2 == 0)\n        {\n            rax[5] = 0x415c00;\n            zmm1_1 = 0.800000012f;\n            if (sub_40b290(rdi) != 0)\n            {\n                float zmm0_1;\n                if (rbp < 0)\n                {\n                label_40ba83:\n                    zmm0_1 = ((rbp >> 1) | (rbp & 1));\n                    zmm0_1 = (zmm0_1 + zmm0_1);\n                label_40ba37:\n                    zmm0_1 = (zmm0_1 / zmm1_1);\n                    if ((!(zmm0_1 < 1.84467441e+19f | (FCMP_UO(zmm0_1, 1.84467441e+19f)))))\n                    {\n                        goto label_40b9f0;\n                    }\n                    if ((zmm0_1 < 9.22337204e+18f | (FCMP_UO(zmm0_1, 9.22337204e+18f))))\n                    {\n                        rbp = (truncf(zmm0_1, arg4));\n                    }\n                    else\n                    {\n                        zmm0_1 = (zmm0_1 - 9.22337204e+18f);\n                        rbp = ((truncf(zmm0_1, arg4)) ^ 0x8000000000000000);\n                    }\n                    goto label_40b983;\n                }\n            label_40ba32:\n                zmm0_1 = rbp;\n                goto label_40ba37;\n            }\n        label_40b9f0:\n            int64_t* rdi_3 = rbx;\n            rbx = nullptr;\n            free(rdi_3);\n        }\n        else\n        {\n            rax[5] = arg2;\n            if (sub_40b290(rdi) == 0)\n            {\n                goto label_40b9f0;\n            }\n            if (*(arg2 + 0x10) == 0)\n            {\n                zmm1_1 = *(arg2 + 8);\n                if (rbp < 0)\n                {\n                    goto label_40ba83;\n                }\n                goto label_40ba32;\n            }\n        label_40b983:\n            size_t rax_2 = sub_40b080(rbp);\n            uint64_t rax_3;\n            rax_3 = (rax_2 >> 0x3d) != 0;\n            uint64_t rax_4 = rax_3;\n            if ((TEST_BITQ(rax_2, 0x3c)))\n            {\n                goto label_40b9f0;\n            }\n            if (rax_4 != 0)\n            {\n                goto label_40b9f0;\n            }\n            rbx[2] = rax_2;\n            if (rax_2 == 0)\n            {\n                goto label_40b9f0;\n            }\n            int64_t rax_5 = calloc(rax_2, 0x10);\n            *rbx = rax_5;\n            if (rax_5 == 0)\n            {\n                goto label_40b9f0;\n            }\n            rbx[3] = 0;\n            rbx[4] = 0;\n            rbx[1] = ((rax_2 << 4) + rax_5);\n            rbx[6] = r12;\n            rbx[7] = r13;\n            rbx[8] = arg5;\n            rbx[9] = 0;\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40baa0",
            "funcStartAddr": "0x40baa0",
            "funcEndAddr": "0x40bb48",
            "decompiledFuncCode": "void sub_40baa0(int64_t* arg1)\n{\n    int64_t* r12 = *arg1;\n    if (r12 < arg1[1])\n    {\n        while (true)\n        {\n            if (*r12 == 0)\n            {\n                r12 = &r12[2];\n                if (arg1[1] <= r12)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                int64_t* rbx_1 = r12[1];\n                int64_t rax = arg1[8];\n                if (rbx_1 != 0)\n                {\n                    int64_t* rdx_1;\n                    do\n                    {\n                        if (rax != 0)\n                        {\n                            rax(*rbx_1);\n                            rax = arg1[8];\n                        }\n                        rdx_1 = rbx_1[1];\n                        int64_t rcx_1 = arg1[9];\n                        *rbx_1 = 0;\n                        rbx_1[1] = rcx_1;\n                        arg1[9] = rbx_1;\n                        rbx_1 = rdx_1;\n                    } while (rdx_1 != 0);\n                }\n                if (rax != 0)\n                {\n                    rax(*r12);\n                }\n                *r12 = 0;\n                r12 = &r12[2];\n                r12[-1] = 0;\n                if (arg1[1] <= r12)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    arg1[3] = 0;\n    arg1[4] = 0;\n}\n\n"
        },
        {
            "funcName": "sub_40bb50",
            "funcStartAddr": "0x40bb50",
            "funcEndAddr": "0x40bc26",
            "decompiledFuncCode": "int64_t sub_40bb50(int64_t* arg1)\n{\n    int64_t* rbp = *arg1;\n    int64_t rax = arg1[1];\n    if (((arg1[8] != 0 && arg1[4] != 0) && rbp < rax))\n    {\n        while (true)\n        {\n            int64_t rdi = *rbp;\n            if (rdi == 0)\n            {\n                rbp = &rbp[2];\n                if (rax <= rbp)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                int64_t* rbx_1 = rbp;\n                while (true)\n                {\n                    arg1[8](rdi);\n                    rbx_1 = rbx_1[1];\n                    if (rbx_1 == 0)\n                    {\n                        break;\n                    }\n                    rdi = *rbx_1;\n                }\n                rax = arg1[1];\n                rbp = &rbp[2];\n                if (rax <= rbp)\n                {\n                    break;\n                }\n            }\n        }\n        rbp = *arg1;\n    }\n    if ((((arg1[8] == 0 || (arg1[8] != 0 && arg1[4] == 0)) || ((arg1[8] != 0 && arg1[4] != 0) && rbp < rax)) && rbp < rax))\n    {\n        do\n        {\n            void* rdi_1 = rbp[1];\n            if (rdi_1 != 0)\n            {\n                void* rbx_2;\n                do\n                {\n                    rbx_2 = *(rdi_1 + 8);\n                    free(rdi_1);\n                    rdi_1 = rbx_2;\n                } while (rbx_2 != 0);\n            }\n            rbp = &rbp[2];\n        } while (arg1[1] > rbp);\n    }\n    void* rdi_2 = arg1[9];\n    if (rdi_2 != 0)\n    {\n        void* rbx_3;\n        do\n        {\n            rbx_3 = *(rdi_2 + 8);\n            free(rdi_2);\n            rdi_2 = rbx_3;\n        } while (rbx_3 != 0);\n    }\n    free(*arg1);\n    /* tailcall */\n    return free(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_40bc30",
            "funcStartAddr": "0x402a5f",
            "funcEndAddr": "0x40be2a",
            "decompiledFuncCode": "uint64_t sub_40bc30(int64_t* arg1, int64_t arg2)\n{\n    void* r12 = arg1[5];\n    int32_t rbx_4;\n    if (*(r12 + 0x10) == 0)\n    {\n        float zmm0;\n        if (arg2 < 0)\n        {\n            zmm0 = ((arg2 >> 1) | (arg2 & 1));\n            zmm0 = (zmm0 + zmm0);\n        }\n        else\n        {\n            zmm0 = arg2;\n        }\n        zmm0 = (zmm0 / *(r12 + 8));\n        if ((!(zmm0 < 1.84467441e+19f | (FCMP_UO(zmm0, 1.84467441e+19f)))))\n        {\n        label_40bda0:\n            rbx_4 = 0;\n        label_40bdac:\n            return rbx_4;\n        }\n        if ((zmm0 < 9.22337204e+18f | (FCMP_UO(zmm0, 9.22337204e+18f))))\n        {\n            arg2 = (truncf(zmm0, 0x28));\n        }\n        else\n        {\n            zmm0 = (zmm0 - 9.22337204e+18f);\n            arg2 = ((truncf(zmm0, 0x28)) ^ 0x8000000000000000);\n        }\n    }\n    size_t rax_1 = sub_40b080(arg2);\n    uint64_t rax_2;\n    rax_2 = (rax_1 >> 0x3d) != 0;\n    uint64_t rax_3 = rax_2;\n    if ((rax_1 << 3) < 0)\n    {\n        rax_3 = 1;\n    }\n    if (rax_1 == 0)\n    {\n        goto label_40bda0;\n    }\n    if (rax_3 != 0)\n    {\n        goto label_40bda0;\n    }\n    if (arg1[2] == rax_1)\n    {\n        return 1;\n    }\n    int64_t rax_4 = calloc(rax_1, 0x10);\n    int64_t var_68 = rax_4;\n    if (rax_4 == 0)\n    {\n        goto label_40bda0;\n    }\n    int64_t rbx_3 = ((rax_1 << 4) + rax_4);\n    int64_t var_38_1 = arg1[6];\n    int64_t var_48_1 = 0;\n    int64_t var_30_1 = arg1[7];\n    void* var_40_1 = r12;\n    int64_t var_28_1 = arg1[8];\n    int64_t rax_8 = arg1[9];\n    int32_t rax_9 = sub_40b310(&var_68, arg1, 0);\n    rbx_4 = rax_9;\n    if (rax_9 == 0)\n    {\n        arg1[9] = rax_8;\n        if ((sub_40b310(arg1, &var_68, 1) != 0 && sub_40b310(arg1, &var_68, 0) != 0))\n        {\n            free(var_68);\n            return rbx_4;\n        }\n        abort();\n        /* no return */\n    }\n    free(*arg1);\n    *arg1 = var_68;\n    arg1[1] = rbx_3;\n    arg1[2] = rax_1;\n    arg1[3] = 0;\n    arg1[9] = rax_8;\n    goto label_40bdac;\n}\n\n"
        },
        {
            "funcName": "sub_40be30",
            "funcStartAddr": "0x402a64",
            "funcEndAddr": "0x40c0a4",
            "decompiledFuncCode": "int64_t sub_40be30(int64_t* arg1, int64_t arg2, int64_t* arg3)\n{\n    if (arg2 != 0)\n    {\n        int64_t* var_20;\n        int64_t rax_1 = sub_40b170(arg1, arg2, &var_20, 0);\n        if (rax_1 != 0)\n        {\n            if (arg3 != 0)\n            {\n                *arg3 = rax_1;\n            }\n            return 0;\n        }\n        int64_t rax_3 = arg1[3];\n        int64_t rax_4;\n        void* rdx_2;\n        float zmm1;\n        if (rax_3 < 0)\n        {\n            rax_4 = arg1[2];\n            zmm1 = ((rax_3 >> 1) | (rax_3 & 1));\n            rdx_2 = arg1[5];\n            zmm1 = (zmm1 + zmm1);\n        }\n        else\n        {\n            rdx_2 = arg1[5];\n            zmm1 = rax_3;\n            rax_4 = arg1[2];\n        }\n        float zmm0_1;\n        if (((rax_3 < 0 && rax_4 >= 0) || (rax_3 >= 0 && rax_4 >= 0)))\n        {\n            zmm0_1 = (rax_4 * *(rdx_2 + 8));\n            if ((!((!(zmm1 == zmm0_1 | (FCMP_UO(zmm1, zmm0_1)))) && (!(zmm1 < zmm0_1 | (FCMP_UO(zmm1, zmm0_1)))))))\n            {\n            label_40beb2:\n                int64_t* r12_2 = var_20;\n                if (*r12_2 == 0)\n                {\n                    *r12_2 = arg2;\n                    arg1[4] = (arg1[4] + 1);\n                    arg1[3] = (arg1[3] + 1);\n                    return 1;\n                }\n                int64_t* rax_5 = arg1[9];\n                if (rax_5 == 0)\n                {\n                    rax_5 = malloc(0x10);\n                }\n                else\n                {\n                    arg1[9] = rax_5[1];\n                }\n                int64_t rdx_4 = r12_2[1];\n                *rax_5 = arg2;\n                rax_5[1] = rdx_4;\n                r12_2[1] = rax_5;\n                arg1[4] = (arg1[4] + 1);\n                return 1;\n                goto label_40bfc4;\n            }\n        label_40bf55:\n            sub_40b290(&arg1[5]);\n            void* rdx_8 = arg1[5];\n            int64_t rax_9 = arg1[2];\n            float zmm2_1 = *(rdx_8 + 8);\n            float zmm0_2;\n            if (rax_9 < 0)\n            {\n                zmm0_2 = ((rax_9 >> 1) | (rax_9 & 1));\n                zmm0_2 = (zmm0_2 + zmm0_2);\n            }\n            else\n            {\n                zmm0_2 = rax_9;\n            }\n            int64_t rax_10 = arg1[3];\n            float zmm1_1;\n            if (rax_10 < 0)\n            {\n                zmm1_1 = ((rax_10 >> 1) | (rax_10 & 1));\n                zmm1_1 = (zmm1_1 + zmm1_1);\n            }\n            else\n            {\n                zmm1_1 = rax_10;\n            }\n            float zmm3_1 = (zmm2_1 * zmm0_2);\n            if (((zmm1_1 == zmm3_1 | (FCMP_UO(zmm1_1, zmm3_1))) || (zmm1_1 < zmm3_1 | (FCMP_UO(zmm1_1, zmm3_1)))))\n            {\n                goto label_40beb2;\n            }\n            zmm0_2 = (zmm0_2 * *(rdx_8 + 0xc));\n            if (*(rdx_8 + 0x10) == 0)\n            {\n                zmm0_2 = (zmm0_2 * zmm2_1);\n            }\n            if ((!(zmm0_2 < 1.84467441e+19f | (FCMP_UO(zmm0_2, 1.84467441e+19f)))))\n            {\n            label_40bfc4:\n                return 0xffffffff;\n            }\n            int64_t rsi;\n            if ((!(zmm0_2 < 9.22337204e+18f | (FCMP_UO(zmm0_2, 9.22337204e+18f)))))\n            {\n                zmm0_2 = (zmm0_2 - 9.22337204e+18f);\n                rsi = ((truncf(zmm0_2, arg1)) ^ 0x8000000000000000);\n            }\n            else\n            {\n                rsi = (truncf(zmm0_2, arg1));\n            }\n            if (sub_40bc30(arg1, rsi) == 0)\n            {\n                goto label_40bfc4;\n            }\n            if (sub_40b170(arg1, arg2, &var_20, 0) == 0)\n            {\n                goto label_40beb2;\n            }\n        }\n        if (((rax_3 < 0 && rax_4 < 0) || (rax_3 >= 0 && rax_4 < 0)))\n        {\n            zmm0_1 = ((rax_4 >> 1) | (rax_4 & 1));\n            zmm0_1 = (zmm0_1 + zmm0_1);\n            zmm0_1 = (zmm0_1 * *(rdx_2 + 8));\n            if ((!((zmm1 == zmm0_1 | (FCMP_UO(zmm1, zmm0_1))) || (zmm1 < zmm0_1 | (FCMP_UO(zmm1, zmm0_1))))))\n            {\n                goto label_40bf55;\n            }\n            goto label_40beb2;\n        }\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40c0b0",
            "funcStartAddr": "0x40c0b0",
            "funcEndAddr": "0x40c0eb",
            "decompiledFuncCode": "int64_t sub_40c0b0(int64_t* arg1, int64_t arg2)\n{\n    int64_t rbx = arg2;\n    int64_t var_10;\n    int32_t rax = sub_40be30(arg1, arg2, &var_10);\n    if (rax == 0xffffffff)\n    {\n        return 0;\n    }\n    if (rax == 0)\n    {\n        rbx = var_10;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40c0f0",
            "funcStartAddr": "0x40c0f0",
            "funcEndAddr": "0x40c2c7",
            "decompiledFuncCode": "int64_t sub_40c0f0(int64_t* arg1)\n{\n    int64_t* var_20;\n    int64_t rsi;\n    int64_t rax = sub_40b170(arg1, rsi, &var_20, 1);\n    if (rax != 0)\n    {\n        int64_t* rax_1 = var_20;\n        arg1[4] = (arg1[4] - 1);\n        if (*rax_1 == 0)\n        {\n            int64_t rax_3 = arg1[3];\n            int64_t rax_4 = (rax_3 - 1);\n            arg1[3] = rax_4;\n            int64_t rax_5;\n            float* rdx_1;\n            float zmm0_1;\n            if ((rax_3 - 1) < 0)\n            {\n                rax_5 = arg1[2];\n                zmm0_1 = ((rax_4 >> 1) | (rax_4 & 1));\n                rdx_1 = arg1[5];\n                zmm0_1 = (zmm0_1 + zmm0_1);\n            }\n            else\n            {\n                rdx_1 = arg1[5];\n                zmm0_1 = rax_4;\n                rax_5 = arg1[2];\n            }\n            float zmm1;\n            if ((((rax_3 - 1) < 0 && rax_5 >= 0) || ((rax_3 - 1) >= 0 && rax_5 >= 0)))\n            {\n                zmm1 = rax_5;\n            }\n            if ((((rax_3 - 1) < 0 && rax_5 < 0) || ((rax_3 - 1) >= 0 && rax_5 < 0)))\n            {\n                zmm1 = ((rax_5 >> 1) | (rax_5 & 1));\n                zmm1 = (zmm1 + zmm1);\n            }\n            zmm1 = (zmm1 * *rdx_1);\n            if ((!((zmm1 == zmm0_1 | (FCMP_UO(zmm1, zmm0_1))) || (zmm1 < zmm0_1 | (FCMP_UO(zmm1, zmm0_1))))))\n            {\n                sub_40b290(&arg1[5]);\n                int64_t rax_6 = arg1[2];\n                int32_t* rdx_2 = arg1[5];\n                float zmm0_2;\n                if (rax_6 < 0)\n                {\n                    zmm0_2 = ((rax_6 >> 1) | (rax_6 & 1));\n                    zmm0_2 = (zmm0_2 + zmm0_2);\n                }\n                else\n                {\n                    zmm0_2 = rax_6;\n                }\n                int64_t rax_7 = arg1[3];\n                float zmm1_1;\n                if (rax_7 < 0)\n                {\n                    zmm1_1 = ((rax_7 >> 1) | (rax_7 & 1));\n                    zmm1_1 = (zmm1_1 + zmm1_1);\n                }\n                else\n                {\n                    zmm1_1 = rax_7;\n                }\n                float zmm2_1 = (*rdx_2 * zmm0_2);\n                if ((!((zmm2_1 == zmm1_1 | (FCMP_UO(zmm2_1, zmm1_1))) || (zmm2_1 < zmm1_1 | (FCMP_UO(zmm2_1, zmm1_1))))))\n                {\n                    zmm0_2 = (zmm0_2 * rdx_2[1]);\n                    if (rdx_2[4] == 0)\n                    {\n                        zmm0_2 = (zmm0_2 * rdx_2[2]);\n                    }\n                    int64_t rsi_1;\n                    if ((!(zmm0_2 < 9.22337204e+18f | (FCMP_UO(zmm0_2, 9.22337204e+18f)))))\n                    {\n                        zmm0_2 = (zmm0_2 - 9.22337204e+18f);\n                        rsi_1 = ((truncf(zmm0_2, arg1)) ^ 0x8000000000000000);\n                    }\n                    else\n                    {\n                        rsi_1 = (truncf(zmm0_2, arg1));\n                    }\n                    if (sub_40bc30(arg1, rsi_1) == 0)\n                    {\n                        void* rdi_2 = arg1[9];\n                        if (rdi_2 != 0)\n                        {\n                            void* r12_1;\n                            do\n                            {\n                                r12_1 = *(rdi_2 + 8);\n                                free(rdi_2);\n                                rdi_2 = r12_1;\n                            } while (r12_1 != 0);\n                        }\n                        arg1[9] = 0;\n                    }\n                }\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40c2d0",
            "funcStartAddr": "0x40c2d0",
            "funcEndAddr": "0x40c2f7",
            "decompiledFuncCode": "uint64_t sub_40c2d0(int64_t* arg1, int64_t arg2)\n{\n    return (COMBINE(0, (sub_4115a0(*arg1, arg2) ^ arg1[1])) % arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40c300",
            "funcStartAddr": "0x40c300",
            "funcEndAddr": "0x40c30d",
            "decompiledFuncCode": "uint64_t sub_40c300(void* arg1, int64_t arg2)\n{\n    return (COMBINE(0, *(arg1 + 8)) % arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40c310",
            "funcStartAddr": "0x40c310",
            "funcEndAddr": "0x40c335",
            "decompiledFuncCode": "int64_t sub_40c310(int64_t* arg1, int64_t* arg2)\n{\n    if ((arg1[1] == arg2[1] && arg1[2] == arg2[2]))\n    {\n        /* tailcall */\n        return sub_40e2f0(*arg1, *arg2);\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40c340",
            "funcStartAddr": "0x40c340",
            "funcEndAddr": "0x40c373",
            "decompiledFuncCode": "int64_t sub_40c340(int64_t* arg1, int64_t* arg2)\n{\n    if ((arg1[1] == arg2[1] && arg1[2] == arg2[2]))\n    {\n        int64_t rax;\n        rax = strcmp(*arg1, *arg2) == 0;\n        return rax;\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40c380",
            "funcStartAddr": "0x40c380",
            "funcEndAddr": "0x40c395",
            "decompiledFuncCode": "int64_t sub_40c380(int64_t* arg1)\n{\n    free(*arg1);\n    /* tailcall */\n    return free(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_40c3a0",
            "funcStartAddr": "0x40c3a0",
            "funcEndAddr": "0x40c439",
            "decompiledFuncCode": "char* sub_40c3a0(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            char const* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char const temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = &rdi[1];\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_415c80;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_61b920 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40c440",
            "funcStartAddr": "0x40c440",
            "funcEndAddr": "0x40c47f",
            "decompiledFuncCode": "uint64_t sub_40c440(int64_t arg1, int64_t arg2, int64_t arg3, int32_t arg4, \n    int32_t arg5)\n{\n    void var_1c;\n    sub_411440(arg1, arg2, arg5, &var_1c);\n    return sub_411470(&var_1c, arg3, arg4);\n}\n\n"
        },
        {
            "funcName": "sub_40c480",
            "funcStartAddr": "0x40c480",
            "funcEndAddr": "0x40c49c",
            "decompiledFuncCode": "uint64_t sub_40c480(int64_t arg1, int32_t arg2, int32_t arg3)\n{\n    int32_t var_c = arg3;\n    return sub_411470(&var_c, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40c4a0",
            "funcStartAddr": "0x40c4a0",
            "funcEndAddr": "0x40c592",
            "decompiledFuncCode": "char* sub_40c4a0(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_4115e0();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_40c581:\n                void* const rbx_1 = &data_415c84;\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_40c581;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_40c581;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_40c581;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_40c581;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_40c581;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_40c581;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_40c581;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_415c8d;\n            if (cond:2_1)\n            {\n                rbx = &data_415c8a;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_40c581;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_40c581;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_40c581;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_40c581;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_40c581;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_415c91;\n            if (cond:1_1)\n            {\n                rbx = &data_415c86;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40c5a0",
            "funcStartAddr": "0x402a69",
            "funcEndAddr": "0x40d7c1",
            "decompiledFuncCode": "int64_t sub_40c5a0(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    char const* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n    label_40c638:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_40c9ac:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_40c9f4;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_40c5a0(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char const rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_40ca0b;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_40cb45;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_40c795;\n                            }\n                            goto label_40ca80;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_40cb45;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_40c970;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_40c970:\n                            if (var_c0 == 0)\n                            {\n                                goto label_40c97b;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_40c7d7:\n                            if (var_5c == 0)\n                            {\n                                goto label_40c7e8;\n                            }\n                        label_40c9a0:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_40c9a8;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_40cbdb;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_40cbdb:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_40cbea:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_40c9ac;\n                            }\n                            goto label_40c970;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_40c970;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_40c970;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_40cbdb;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_40c776;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_40c776:\n                            if (var_5c == 0)\n                            {\n                                goto label_40c795;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_40c795;\n                            }\n                            goto label_40cbea;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_40c76d:\n                            if (r12_1 != 0)\n                            {\n                                goto label_40c97b;\n                            }\n                            goto label_40c776;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_40cba0:\n                            rdx = r11_1 == 2;\n                        label_40c795:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_40c89c;\n                            }\n                            goto label_40c79f;\n                        }\n                        case 0x27:\n                        {\n                            goto label_40c91d;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_40c8ed;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_40c94a;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_40d6dd;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_40c8b4;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_40c749;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_40cd40;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_40cd40;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_40d690:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_40c9f4:\n                            rbx_1 = sub_40c5a0(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_40ca0b:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_40cb45;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_40ca97;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_40cb45;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_40ca60:\n                                r13 = 0;\n                                goto label_40c81b;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_40c7e8:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_40c81b:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_40c825;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_40c825:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_40c82d;\n                            }\n                            case 9:\n                            {\n                                goto label_40ca10;\n                            }\n                            case 0xa:\n                            {\n                                goto label_40c988;\n                            }\n                            case 0xb:\n                            {\n                                goto label_40ca70;\n                            }\n                            case 0xc:\n                            {\n                                goto label_40ca50;\n                            }\n                            case 0xd:\n                            {\n                                goto label_40ca39;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_40cd9a;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_40ca25;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_40cd7a;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_40cd62;\n                            }\n                            case 0x27:\n                            {\n                                goto label_40c91d;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_40c8ed;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_40c94a;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_40c749;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_40cd40:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_40cb40:\n                            var_b8 = 0;\n                        label_40cb45:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_40cb94:\n                                if (rdx == 0)\n                                {\n                                    goto label_40cba0;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_40d091:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_40c8b4;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_40c9ac;\n                                }\n                                r13 = var_98;\n                                goto label_40c82d;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_4113c0(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_40c9ac;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_40d091;\n                            }\n                            goto label_40cb94;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_40ca80:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_40c9ac;\n                                }\n                                var_b8 = 0;\n                            label_40ca97:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_40cae2;\n                                    }\n                                    rax_8 = r10;\n                                label_40cada:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_40cae2:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_40c89c;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_40cb23;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_40cada;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_40c89c;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_40cb40;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_40ca55;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_40c98d;\n                            }\n                            case 9:\n                            {\n                            label_40ca10:\n                                rbp_3 = 0x74;\n                                goto label_40c98d;\n                            }\n                            case 0xa:\n                            {\n                            label_40c988:\n                                rbp_3 = 0x6e;\n                            label_40c98d:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_40c9a0;\n                                }\n                                goto label_40c7e8;\n                            }\n                            case 0xb:\n                            {\n                            label_40ca70:\n                                rbp_3 = 0x76;\n                                goto label_40ca55;\n                            }\n                            case 0xc:\n                            {\n                            label_40ca50:\n                                rbp_3 = 0x66;\n                            label_40ca55:\n                                if (var_5c == 0)\n                                {\n                                    goto label_40ca60;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_40c9a8:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_40c9ac;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_40ca39:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_40c970;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_40cd9a:\n                                rbp_3 = 0x20;\n                                goto label_40cd62;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_40ca25:\n                                rdx = 0;\n                            label_40c97b:\n                                r13 = 0;\n                                goto label_40c795;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_40cd7a:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_40c795;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_40c79f:\n                                rax_8 = 0;\n                                goto label_40c7a1;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_40cd62:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_40c7a1;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_40c91d:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_40c795;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_40d6dd;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_40c89c;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_40c8ed:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_40d6dd:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_40c9ac;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_40c89c:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_40c7d7;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_40c8b4;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_40c795;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_40ce80:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_40c795;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_40ce80;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_40ce80;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_40ce80;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_40ce80;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_40d690;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_40cb23:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_40c89c;\n                                }\n                            label_40c7a1:\n                                if (arg7 == 0)\n                                {\n                                    goto label_40c89c;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_40c89c;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_40c7d7;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_40c94a:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_40c970;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_40c8b4:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_40c82d;\n                                }\n                            label_40c82d:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_40c836;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_40c836:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_40c749:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_40c97b;\n                                }\n                                goto label_40c76d;\n                            }\n                        }\n                    }\n                }\n            }\n        label_40ce26:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"'\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_40c638;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"'\";\n                goto label_40c638;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"'\";\n            goto label_40c638;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_415c84;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_415c84;\n            }\n            goto label_40c638;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_415c84;\n            goto label_40c638;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_40c638;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_40c4a0(&data_415c95, r13);\n                arg9 = sub_40c4a0(\"'\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_40c638;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_40ce26;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n        goto label_40c638;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40d7d0",
            "funcStartAddr": "0x402a6e",
            "funcEndAddr": "0x40d96e",
            "decompiledFuncCode": "char* sub_40d7d0(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_61b418;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_61b430 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_410330();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x61b420)\n        {\n            int64_t rax_9 = sub_410140(0, rsi_1);\n            int128_t zmm0 = data_61b420;\n            rbx = rax_9;\n            data_61b418 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_410140(rbx, rsi_1);\n            data_61b418 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_61b430;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_61b430 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_40c5a0(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        size_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x61b940)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_4100e0(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_40c5a0(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_40d970",
            "funcStartAddr": "0x40d970",
            "funcEndAddr": "0x40d9a4",
            "decompiledFuncCode": "int64_t sub_40d970(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x61ba40;\n    }\n    int64_t rax_1 = sub_4102e0(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40d9b0",
            "funcStartAddr": "0x40d9b0",
            "funcEndAddr": "0x40d9bf",
            "decompiledFuncCode": "uint64_t sub_40d9b0(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_61ba40;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_40d9c0",
            "funcStartAddr": "0x40d9c0",
            "funcEndAddr": "0x40d9cf",
            "decompiledFuncCode": "void sub_40d9c0(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_61ba40;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_40d9d0",
            "funcStartAddr": "0x40d9d0",
            "funcEndAddr": "0x40da03",
            "decompiledFuncCode": "uint64_t sub_40d9d0(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x61ba40;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_40da10",
            "funcStartAddr": "0x40da10",
            "funcEndAddr": "0x40da23",
            "decompiledFuncCode": "uint64_t sub_40da10(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_61ba40;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40da30",
            "funcStartAddr": "0x40da30",
            "funcEndAddr": "0x40da5b",
            "decompiledFuncCode": "void sub_40da30(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_61ba40;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x61ba40;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40da60",
            "funcStartAddr": "0x40da60",
            "funcEndAddr": "0x40dad2",
            "decompiledFuncCode": "int64_t sub_40da60(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_61ba40;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_40c5a0(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_40dae0",
            "funcStartAddr": "0x40dae0",
            "funcEndAddr": "0x40dbc1",
            "decompiledFuncCode": "char* sub_40dae0(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_61ba40;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_40c5a0(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_4100e0((rax_2 + 1));\n    sub_40c5a0(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_40dbd0",
            "funcStartAddr": "0x40dbd0",
            "funcEndAddr": "0x40dbda",
            "decompiledFuncCode": "int64_t sub_40dbd0(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_40dae0(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_40dbe0",
            "funcStartAddr": "0x40dbe0",
            "funcEndAddr": "0x40dc75",
            "decompiledFuncCode": "uint64_t sub_40dbe0()\n{\n    uint64_t rax_2 = data_61b430;\n    int64_t r12 = data_61b418;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x61b940)\n    {\n        rax_2 = free(rdi_2);\n        *data_61b420 = 0x100;\n        *(data_61b420 + 8) = 0x61b940;\n    }\n    if (r12 != 0x61b420)\n    {\n        rax_2 = free(r12);\n        data_61b418 = 0x61b420;\n    }\n    data_61b430 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_40dc80",
            "funcStartAddr": "0x40dc80",
            "funcEndAddr": "0x40dc91",
            "decompiledFuncCode": "int64_t sub_40dc80(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_40d7d0(arg1, arg2, -1, &data_61ba40);\n}\n\n"
        },
        {
            "funcName": "sub_40dca0",
            "funcStartAddr": "0x40dca0",
            "funcEndAddr": "0x40dcaa",
            "decompiledFuncCode": "int64_t sub_40dca0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_40d7d0(arg1, arg2, arg3, &data_61ba40);\n}\n\n"
        },
        {
            "funcName": "sub_40dcb0",
            "funcStartAddr": "0x40dcb0",
            "funcEndAddr": "0x40dcc6",
            "decompiledFuncCode": "int64_t sub_40dcb0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_40d7d0(0, arg1, -1, &data_61ba40);\n}\n\n"
        },
        {
            "funcName": "sub_40dcd0",
            "funcStartAddr": "0x40dcd0",
            "funcEndAddr": "0x40dce2",
            "decompiledFuncCode": "int64_t sub_40dcd0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_40d7d0(0, arg1, arg2, &data_61ba40);\n}\n\n"
        },
        {
            "funcName": "sub_40dcf0",
            "funcStartAddr": "0x402a73",
            "funcEndAddr": "0x40dd58",
            "decompiledFuncCode": "char* sub_40dcf0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_40d7d0(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_40dd60",
            "funcStartAddr": "0x402a78",
            "funcEndAddr": "0x40ddc4",
            "decompiledFuncCode": "char* sub_40dd60(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_40d7d0(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_40ddd0",
            "funcStartAddr": "0x40ddd0",
            "funcEndAddr": "0x40dddc",
            "decompiledFuncCode": "int64_t sub_40ddd0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_40dcf0(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40dde0",
            "funcStartAddr": "0x40dde0",
            "funcEndAddr": "0x40ddef",
            "decompiledFuncCode": "int64_t sub_40dde0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_40dd60(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_40ddf0",
            "funcStartAddr": "0x40ddf0",
            "funcEndAddr": "0x40de60",
            "decompiledFuncCode": "char* sub_40ddf0(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_61ba70;\n    int128_t var_48 = data_61ba40;\n    int128_t var_38 = data_61ba50;\n    int128_t var_28 = data_61ba60;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_40d7d0(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_40de60",
            "funcStartAddr": "0x40de60",
            "funcEndAddr": "0x40de6d",
            "decompiledFuncCode": "int64_t sub_40de60(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_40ddf0(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40de70",
            "funcStartAddr": "0x40de70",
            "funcEndAddr": "0x40de81",
            "decompiledFuncCode": "int64_t sub_40de70(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_40ddf0(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_40de90",
            "funcStartAddr": "0x40de90",
            "funcEndAddr": "0x40de9a",
            "decompiledFuncCode": "int64_t sub_40de90(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_40ddf0(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_40dea0",
            "funcStartAddr": "0x402a7d",
            "funcEndAddr": "0x40df0e",
            "decompiledFuncCode": "char* sub_40dea0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_40d7d0(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_40df10",
            "funcStartAddr": "0x40df10",
            "funcEndAddr": "0x40df7c",
            "decompiledFuncCode": "char* sub_40df10(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_61ba40;\n    int128_t var_38 = data_61ba50;\n    int128_t var_28 = data_61ba60;\n    int64_t var_18 = data_61ba70;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_40d7d0(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40dfd0",
            "funcStartAddr": "0x40dfd0",
            "funcEndAddr": "0x40dfda",
            "decompiledFuncCode": "int64_t sub_40dfd0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_40d7d0(arg1, arg2, arg3, &data_61b3e0);\n}\n\n"
        },
        {
            "funcName": "sub_40dfe0",
            "funcStartAddr": "0x40dfe0",
            "funcEndAddr": "0x40dff2",
            "decompiledFuncCode": "int64_t sub_40dfe0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_40d7d0(0, arg1, arg2, &data_61b3e0);\n}\n\n"
        },
        {
            "funcName": "sub_40e000",
            "funcStartAddr": "0x40e000",
            "funcEndAddr": "0x40e011",
            "decompiledFuncCode": "int64_t sub_40e000(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_40d7d0(arg1, arg2, -1, &data_61b3e0);\n}\n\n"
        },
        {
            "funcName": "sub_40e020",
            "funcStartAddr": "0x40e020",
            "funcEndAddr": "0x40e036",
            "decompiledFuncCode": "int64_t sub_40e020(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_40d7d0(0, arg1, -1, &data_61b3e0);\n}\n\n"
        },
        {
            "funcName": "sub_40e040",
            "funcStartAddr": "0x40e040",
            "funcEndAddr": "0x40e282",
            "decompiledFuncCode": "uint64_t sub_40e040(int32_t arg1, char* arg2, int32_t arg3, char* arg4, \n    int32_t arg5)\n{\n    int32_t rax_1 = syscall(0x13c, arg1, arg2, arg3, arg4, arg5);\n    int32_t rdx_1 = rax_1;\n    if (rax_1 < 0)\n    {\n        int32_t* rax_2 = __errno_location();\n        rdx_1 = rax_1;\n        int32_t* r9_1 = rax_2;\n        int32_t rax_3 = *rax_2;\n        int64_t r15;\n        r15 = ((rax_3 - 0x16) & 0xffffffef) != 0;\n        rax_3 = rax_3 != 0x5f;\n        r15 = (r15 & rax_3);\n        if (r15 == 0)\n        {\n            int32_t var_160_1;\n            void var_c8;\n            int32_t rax_5;\n            int32_t rax_6;\n            if (((arg5 & 0xfffffffe) == 0 && arg5 != 0))\n            {\n                var_160_1 = r9_1;\n                rax_5 = __fxstatat(1, arg3, arg4, &var_c8, 0x100);\n                r9_1 = var_160_1;\n                if (rax_5 != 0)\n                {\n                    rax_6 = *r9_1;\n                    if (rax_6 != 0x4b)\n                    {\n                        if (rax_6 != 2)\n                        {\n                            goto label_40e1e0;\n                        }\n                        r15 = 1;\n                    }\n                }\n            }\n            if ((arg5 == 0 || (((arg5 != 0 && (arg5 & 0xfffffffe) == 0) && rax_5 != 0) && rax_6 != 0x4b)))\n            {\n                var_160_1 = r9_1;\n                uint64_t rax_7 = strlen(arg2);\n                uint64_t rax_8 = strlen(arg4);\n                if (rax_7 == 0)\n                {\n                label_40e249:\n                    rdx_1 = renameat(arg1, arg2, arg3, arg4);\n                }\n                else\n                {\n                    int64_t r9_2 = var_160_1;\n                    if (rax_8 == 0)\n                    {\n                        goto label_40e249;\n                    }\n                    if ((arg2[(rax_7 - 1)] != 0x2f && arg4[(rax_8 - 1)] != 0x2f))\n                    {\n                        goto label_40e249;\n                    }\n                    var_160_1 = r9_2;\n                    void var_158;\n                    if (__fxstatat(1, arg1, arg2, &var_158, 0x100) != 0)\n                    {\n                        goto label_40e1e0;\n                    }\n                    int32_t* r9_3 = var_160_1;\n                    int32_t var_140;\n                    if (r15 == 0)\n                    {\n                        var_160_1 = r9_3;\n                        int32_t* r9_4 = var_160_1;\n                        if (__fxstatat(1, arg3, arg4, &var_c8, 0x100) != 0)\n                        {\n                            if (*r9_4 != 2)\n                            {\n                                goto label_40e1e0;\n                            }\n                            if ((var_140 & 0xf000) == 0x4000)\n                            {\n                                goto label_40e249;\n                            }\n                            goto label_40e1e0;\n                        }\n                        int32_t var_b0;\n                        if ((var_b0 & 0xf000) != 0x4000)\n                        {\n                            *r9_4 = 0x14;\n                        label_40e1e0:\n                            rdx_1 = -1;\n                        }\n                        else\n                        {\n                            if ((var_140 & 0xf000) == 0x4000)\n                            {\n                                goto label_40e249;\n                            }\n                            *r9_4 = 0x15;\n                            rdx_1 = -1;\n                        }\n                    }\n                    else\n                    {\n                        if ((var_140 & 0xf000) == 0x4000)\n                        {\n                            goto label_40e249;\n                        }\n                        *r9_3 = 2;\n                        rdx_1 = -1;\n                    }\n                }\n            }\n            if (arg5 != 0)\n            {\n                if (((arg5 & 0xfffffffe) == 0 && (rax_5 == 0 || (rax_5 != 0 && rax_6 == 0x4b))))\n                {\n                    *r9_1 = 0x11;\n                    rdx_1 = -1;\n                }\n                if ((arg5 & 0xfffffffe) != 0)\n                {\n                    *r9_1 = 0x5f;\n                    rdx_1 = -1;\n                }\n            }\n        }\n    }\n    return rdx_1;\n}\n\n"
        },
        {
            "funcName": "sub_40e290",
            "funcStartAddr": "0x40e290",
            "funcEndAddr": "0x40e2ee",
            "decompiledFuncCode": "ssize_t sub_40e290(int32_t arg1, int64_t arg2, uint64_t arg3)\n{\n    uint64_t rbx = arg3;\n    ssize_t rax_1;\n    while (true)\n    {\n        rax_1 = write(arg1, arg2, rbx);\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        int32_t rax_3 = *__errno_location();\n        if (rax_3 != 4)\n        {\n            if (rax_3 != 0x16)\n            {\n                break;\n            }\n            if (rbx <= 0x7fffe000)\n            {\n                break;\n            }\n            rbx = 0x7fffe000;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40e2f0",
            "funcStartAddr": "0x40e2f0",
            "funcEndAddr": "0x40e420",
            "decompiledFuncCode": "uint64_t sub_40e2f0(char* arg1, char* arg2)\n{\n    char* r15 = arg1;\n    int32_t rbx = 0;\n    char* rax = sub_40ab40(arg1);\n    char* rax_1 = sub_40ab40(arg2);\n    uint64_t rax_2 = sub_40aba0(rax);\n    if ((rax_2 == sub_40aba0(rax_1) && memcmp(rax, rax_1, rax_2) == 0))\n    {\n        char* rax_6 = sub_40aa60(r15);\n        char* rax_7 = sub_40aa60(arg2);\n        int64_t var_158;\n        if (__xstat(1, rax_6, &var_158) != 0)\n        {\n            error(1, *__errno_location(), \"%s\", rax_6);\n        }\n        int64_t var_c8;\n        if (__xstat(1, rax_7, &var_c8) != 0)\n        {\n            error(1, *__errno_location(), \"%s\", rax_7);\n        }\n        rbx = 0;\n        int64_t var_150;\n        int64_t var_c0;\n        if (var_150 == var_c0)\n        {\n            rbx = var_158 == var_c8;\n        }\n        free(rax_6);\n        free(rax_7);\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40e440",
            "funcStartAddr": "0x40e440",
            "funcEndAddr": "0x40e44b",
            "decompiledFuncCode": "int64_t sub_40e440(int64_t* arg1, int64_t* arg2)\n{\n    /* tailcall */\n    return strcmp(*arg1, *arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40e450",
            "funcStartAddr": "0x40e450",
            "funcEndAddr": "0x40e7e4",
            "decompiledFuncCode": "char* sub_40e450(DIR* arg1, int32_t arg2)\n{\n    __compar_fn_t rax = *((arg2 << 3) + 0x4169e0);\n    char* r13;\n    if (arg1 == 0)\n    {\n        r13 = nullptr;\n    }\n    else\n    {\n        size_t r15_1 = 0;\n        uint64_t r12_1 = 0;\n        int64_t* r14_1 = nullptr;\n        int32_t* rax_1 = __errno_location();\n        r13 = nullptr;\n        uint64_t var_58_1 = 0;\n        size_t var_68_1 = 0;\n        while (true)\n        {\n            *rax_1 = 0;\n            struct dirent64* rax_3 = readdir(arg1);\n            if (rax_3 == 0)\n            {\n                break;\n            }\n            char (* r8_1)[0x100] = &rax_3->d_name;\n            char rax_2 = rax_3->d_name[0];\n            if (rax_2 == 0x2e)\n            {\n                if (rax_3->d_name[1] == 0x2e)\n                {\n                    rax_2 = rax_3->d_name[2];\n                }\n                if (rax_3->d_name[1] == 0)\n                {\n                    continue;\n                }\n            }\n            if ((((rax_2 == 0x2e && rax_3->d_name[1] == 0x2e) || rax_2 != 0x2e) && rax_2 == 0))\n            {\n                continue;\n            }\n            uint64_t rdx_1 = (strlen(r8_1) + 1);\n            if (rax == 0)\n            {\n                size_t rsi_4 = (r15_1 + rdx_1);\n                uint64_t rcx_6 = (r15_1 + rdx_1) < r15_1;\n                if ((var_68_1 - r15_1) > rdx_1)\n                {\n                    goto label_40e6b4;\n                }\n                if (rcx_6 == 0)\n                {\n                    size_t rax_18;\n                    bool cond:3_1;\n                    if (r13 == 0)\n                    {\n                        rax_18 = rsi_4;\n                        cond:3_1 = rsi_4 >= 0;\n                        if (rsi_4 == 0)\n                        {\n                            var_68_1 = 0x80;\n                        }\n                    }\n                    if ((r13 != 0 && rsi_4 <= 0x5555555555555553))\n                    {\n                        rax_18 = ((rsi_4 + (rsi_4 >> 1)) + 1);\n                    }\n                    if (((r13 != 0 && rsi_4 <= 0x5555555555555553) || ((r13 == 0 && rsi_4 != 0) && cond:3_1)))\n                    {\n                        var_68_1 = rax_18;\n                    }\n                    if ((((r13 == 0 && rsi_4 == 0) || (r13 != 0 && rsi_4 <= 0x5555555555555553)) || ((r13 == 0 && rsi_4 != 0) && cond:3_1)))\n                    {\n                        r13 = sub_410140(r13, var_68_1);\n                    label_40e6b4:\n                        memcpy(&r13[r15_1], r8_1, rdx_1);\n                        r15_1 = rsi_4;\n                        continue;\n                    }\n                }\n            }\n            else\n            {\n                struct dirent64* rcx_3 = rax_3;\n                uint64_t var_60_2 = (r12_1 + 1);\n                if (r12_1 != var_58_1)\n                {\n                    goto label_40e537;\n                }\n                int64_t rsi_9;\n                if (r14_1 == 0)\n                {\n                    if (r12_1 == 0)\n                    {\n                        var_58_1 = 8;\n                        rsi_9 = 0x80;\n                        var_60_2 = 1;\n                    label_40e72d:\n                        r14_1 = sub_410140(r14_1, rsi_9);\n                    label_40e537:\n                        int64_t* r12_3 = &r14_1[(r12_1 * 2)];\n                        *r12_3 = sub_410310(r8_1);\n                        r15_1 = (r15_1 + rdx_1);\n                        r12_3[1] = rcx_3->d_ino;\n                        r12_1 = var_60_2;\n                        continue;\n                    }\n                    else\n                    {\n                        uint64_t rax_26;\n                        rax_26 = (r12_1 >> 0x3c) != 0;\n                        rsi_9 = (r12_1 << 4);\n                        if ((rsi_9 >= 0 && rax_26 == 0))\n                        {\n                            goto label_40e72d;\n                        }\n                    }\n                }\n                else if (r12_1 <= 0x555555555555554)\n                {\n                    uint64_t rax_22 = ((r12_1 >> 1) + var_60_2);\n                    var_58_1 = rax_22;\n                    rsi_9 = (rax_22 << 4);\n                    goto label_40e72d;\n                }\n            }\n            sub_410330();\n            /* no return */\n        }\n        int32_t rbx_2 = *rax_1;\n        if (rbx_2 != 0)\n        {\n            free(r14_1);\n            char* rdi_14 = r13;\n            r13 = nullptr;\n            free(rdi_14);\n            *rax_1 = rbx_2;\n        }\n        else\n        {\n            char* rbp_2;\n            if (rax != 0)\n            {\n                size_t rbx_3 = (r15_1 + 1);\n                if (r12_1 == 0)\n                {\n                    char* rax_9 = sub_4100e0(rbx_3);\n                    r13 = rax_9;\n                    rbp_2 = rax_9;\n                }\n                else\n                {\n                    void* rbp_3 = nullptr;\n                    qsort(r14_1, r12_1, 0x10, rax);\n                    void* r12_5 = &r14_1[(r12_1 * 2)];\n                    int64_t* rbx_4 = r14_1;\n                    r13 = sub_4100e0(rbx_3);\n                    do\n                    {\n                        void* r15_2 = (r13 + rbp_3);\n                        char* rsi_2 = *rbx_4;\n                        rbx_4 = &rbx_4[2];\n                        rbp_3 = ((rbp_3 + (stpcpy(r15_2, rsi_2) - r15_2)) + 1);\n                        free(rbx_4[-2]);\n                    } while (rbx_4 != r12_5);\n                    rbp_2 = (rbp_3 + r13);\n                }\n                free(r14_1);\n            }\n            else if (var_68_1 == r15_1)\n            {\n                char* rax_24 = sub_410140(r13, (var_68_1 + 1));\n                r13 = rax_24;\n                rbp_2 = &rax_24[var_68_1];\n            }\n            else\n            {\n                rbp_2 = &r13[r15_1];\n            }\n            *rbp_2 = 0;\n        }\n    }\n    return r13;\n}\n\n"
        },
        {
            "funcName": "sub_40e7f0",
            "funcStartAddr": "0x40e7f0",
            "funcEndAddr": "0x40e858",
            "decompiledFuncCode": "char* sub_40e7f0(int64_t arg1, int32_t arg2)\n{\n    DIR* rax = sub_40a9c0();\n    if (rax == 0)\n    {\n        return 0;\n    }\n    char* rax_1 = sub_40e450(rax, arg2);\n    if (closedir(rax) != 0)\n    {\n        int32_t* rax_5 = __errno_location();\n        int32_t r12 = *rax_5;\n        free(rax_1);\n        *rax_5 = r12;\n        return 0;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40e860",
            "funcStartAddr": "0x40e860",
            "funcEndAddr": "0x40e8b4",
            "decompiledFuncCode": "uint64_t sub_40e860(char* arg1)\n{\n    void var_98;\n    int32_t rax = __lxstat(1, arg1, &var_98);\n    int32_t* rax_1 = __errno_location();\n    if (rax != 0)\n    {\n        int32_t rdx_1 = *rax_1;\n        if (rdx_1 != 0x4b)\n        {\n            int32_t rax_2;\n            rax_2 = rdx_1 != 2;\n            return (-rax_2);\n        }\n    }\n    *rax_1 = 0x11;\n    return 0xffffffff;\n}\n\n"
        },
        {
            "funcName": "sub_40e8c0",
            "funcStartAddr": "0x40e8c0",
            "funcEndAddr": "0x40e8ca",
            "decompiledFuncCode": "int64_t sub_40e8c0(int64_t arg1)\n{\n    /* tailcall */\n    return mkdir(arg1, 0x1c0);\n}\n\n"
        },
        {
            "funcName": "sub_40e8d0",
            "funcStartAddr": "0x40e8d0",
            "funcEndAddr": "0x40e8e6",
            "decompiledFuncCode": "int64_t sub_40e8d0(char* arg1, int32_t* arg2)\n{\n    uint64_t rsi;\n    rsi = (*arg2 & 0x3c);\n    rsi = (rsi | 0xc2);\n    /* tailcall */\n    return open(arg1, rsi, 0x180);\n}\n\n"
        },
        {
            "funcName": "sub_40e8f0",
            "funcStartAddr": "0x40e8f0",
            "funcEndAddr": "0x40e90d",
            "decompiledFuncCode": "int64_t sub_40e8f0() __noreturn\n{\n    __assert_fail(\"! \"invalid KIND in __gen_tempnam\u2026\", \"lib/tempname.c\", 0x147, \"gen_tempname_len\");\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40e910",
            "funcStartAddr": "0x40e910",
            "funcEndAddr": "0x40ea6d",
            "decompiledFuncCode": "uint64_t sub_40e910(char* arg1, int32_t arg2, int64_t arg3, int64_t arg4, \n    uint64_t arg5)\n{\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    uint64_t rax_2 = strlen(arg1);\n    int64_t rdx_1 = (arg2 + arg5);\n    uint64_t rax_5;\n    int32_t rdx_3;\n    if (rdx_1 <= rax_2)\n    {\n        int64_t rax_3 = (rax_2 - rdx_1);\n        void* rax_4 = &arg1[rax_3];\n        rax_5 = strspn(rax_4, \"X\");\n        if (arg5 <= rax_5)\n        {\n            FILE*** rax_6 = sub_411b80(nullptr, arg5);\n            if (rax_6 == 0)\n            {\n                rdx_3 = -1;\n            }\n            else\n            {\n                int32_t r12_1 = 0x3a2f8;\n                void* rbx_2 = &arg1[(arg5 + rax_3)];\n                while (true)\n                {\n                    void* r14_1 = rax_4;\n                    if (arg5 != 0)\n                    {\n                        do\n                        {\n                            r14_1 = (r14_1 + 1);\n                            *(r14_1 - 1) = *\"abcdefghijklmnopqrstuvwxyzABCDEF\u2026\"[sub_411bc0(rax_6, 0x3d)];\n                        } while (r14_1 != rbx_2);\n                    }\n                    int32_t rax_12 = arg4(arg1, arg3);\n                    int32_t rdx_2 = rax_12;\n                    int32_t rcx;\n                    if (rax_12 >= 0)\n                    {\n                        *rax = rax_1;\n                        rcx = rax_1;\n                    }\n                    else\n                    {\n                        rcx = *rax;\n                        if (rcx != 0x11)\n                        {\n                            rdx_2 = -1;\n                        }\n                        else\n                        {\n                            int32_t temp0_1 = r12_1;\n                            r12_1 = (r12_1 - 1);\n                            if (temp0_1 == 1)\n                            {\n                                sub_411ce0(rax_6);\n                                *rax = 0x11;\n                                rdx_3 = -1;\n                                break;\n                            }\n                            continue;\n                        }\n                    }\n                    void* var_58_1;\n                    var_58_1 = rdx_2;\n                    char* var_60;\n                    var_60 = rcx;\n                    sub_411ce0(rax_6);\n                    rdx_3 = var_58_1;\n                    *rax = var_60;\n                    break;\n                }\n            }\n        }\n    }\n    if ((rdx_1 > rax_2 || (rdx_1 <= rax_2 && arg5 > rax_5)))\n    {\n        *rax = 0x16;\n        rdx_3 = -1;\n    }\n    return rdx_3;\n}\n\n"
        },
        {
            "funcName": "sub_40ea70",
            "funcStartAddr": "0x40ea70",
            "funcEndAddr": "0x40ea9b",
            "decompiledFuncCode": "uint64_t sub_40ea70(char* arg1, int32_t arg2, int32_t arg3, int32_t arg4, \n    uint64_t arg5)\n{\n    int32_t var_c = arg3;\n    if (arg4 > 2)\n    {\n        sub_40e8f0();\n        /* no return */\n    }\n    return sub_40e910(arg1, arg2, &var_c, *((arg4 << 3) + 0x416a40), arg5);\n}\n\n"
        },
        {
            "funcName": "sub_40eaa0",
            "funcStartAddr": "0x40eaa0",
            "funcEndAddr": "0x40ead1",
            "decompiledFuncCode": "uint64_t sub_40eaa0(char* arg1, int32_t arg2, int32_t arg3, int32_t arg4)\n{\n    int32_t var_c = arg3;\n    if (arg4 > 2)\n    {\n        sub_40e8f0();\n        /* no return */\n    }\n    return sub_40e910(arg1, arg2, &var_c, *((arg4 << 3) + 0x416a40), 6);\n}\n\n"
        },
        {
            "funcName": "sub_40eaf0",
            "funcStartAddr": "0x40eaf0",
            "funcEndAddr": "0x40eb3e",
            "decompiledFuncCode": "uint64_t sub_40eaf0(int32_t arg1)\n{\n    if (arg1 <= 2)\n    {\n        int32_t rax_1 = sub_412750(arg1);\n        int32_t* rax_2 = __errno_location();\n        int32_t r13 = *rax_2;\n        close(arg1);\n        *rax_2 = r13;\n        return rax_1;\n    }\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_40eb40",
            "funcStartAddr": "0x40eb40",
            "funcEndAddr": "0x40eb4c",
            "decompiledFuncCode": "uint64_t sub_40eb40(int64_t* arg1, int64_t arg2)\n{\n    return (COMBINE(0, *arg1) % arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40eb50",
            "funcStartAddr": "0x40eb50",
            "funcEndAddr": "0x40eb5a",
            "decompiledFuncCode": "int64_t sub_40eb50(int64_t* arg1, int64_t* arg2)\n{\n    int64_t rax;\n    rax = *arg1 == *arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40eb60",
            "funcStartAddr": "0x40eb60",
            "funcEndAddr": "0x40f2c9",
            "decompiledFuncCode": "uint64_t sub_40eb60(char* arg1, int64_t* arg2, void* arg3, int32_t arg4)\n{\n    int32_t r13 = *(arg3 + 0x60);\n    int64_t r12 = arg2[0xb];\n    int64_t rbp = *(arg3 + 0x58);\n    int32_t r14 = arg2[0xc];\n    int32_t r15 = r13;\n    uint64_t rbx_1 = (arg4 & 1);\n    if (rbx_1 == 0)\n    {\n        goto label_40ec50;\n    }\n    bool var_148_1 = r12 == rbp;\n    bool rax = (r14 == r13 & var_148_1);\n    bool var_140_1 = rax;\n    if (rax != 0)\n    {\n        rbx_1 = 0;\n    }\n    else\n    {\n        if ((rbp - 1) > r12)\n        {\n            goto label_40eca0;\n        }\n        if ((r12 - 1) <= rbp)\n        {\n            int64_t rdx = data_61ba80;\n            int64_t var_130;\n            int64_t var_f8;\n            int64_t rax_17;\n            int64_t rdx_5;\n            int64_t r9_1;\n            if (rdx == 0)\n            {\n                rax_17 = sub_40b910(0x10, nullptr, 0x40eb40, 0x40eb50, 0x402380);\n                rdx = rax_17;\n                data_61ba80 = rax_17;\n                if (rax_17 == 0)\n                {\n                label_40ecdf:\n                    rdx_5 = &var_f8;\n                label_40ece4:\n                    int32_t var_f0_1 = 0x77359400;\n                    r9_1 = rdx_5;\n                    char var_ec_1 = 0;\n                    var_130 = 0x77359400;\n                label_40ed07:\n                    int32_t rdi_2 = arg2[0xa];\n                    int32_t rcx_1 = arg2[0xe];\n                    int32_t temp2_1;\n                    int32_t temp3_1;\n                    temp2_1 = HIGHW((rdi_2 * 0x66666667));\n                    temp3_1 = LOWW((rdi_2 * 0x66666667));\n                    uint64_t rdx_8 = ((temp2_1 >> 2) - (rdi_2 >> 0x1f));\n                    uint32_t rax_20 = (rdx_8 * 5);\n                    int32_t r11_1 = rdx_8;\n                    int32_t temp4_1;\n                    int32_t temp5_1;\n                    temp4_1 = HIGHW((rcx_1 * 0x66666667));\n                    temp5_1 = LOWW((rcx_1 * 0x66666667));\n                    uint64_t rdx_11 = ((temp4_1 >> 2) - (rcx_1 >> 0x1f));\n                    uint32_t rax_23 = (rdx_11 * 5);\n                    int32_t r10_1 = rdx_11;\n                    int32_t temp6_1;\n                    int32_t temp7_1;\n                    temp6_1 = HIGHW((r14 * 0x66666667));\n                    temp7_1 = LOWW((r14 * 0x66666667));\n                    uint64_t rdx_14 = ((temp6_1 >> 2) - (r14 >> 0x1f));\n                    uint32_t rax_26 = (rdx_14 * 5);\n                    int32_t rdi_7 = rdx_14;\n                    int32_t var_120_1 = rdx_14;\n                    if ((((rcx_1 - (rax_23 + rax_23)) | (rdi_2 - (rax_20 + rax_20))) | (r14 - (rax_26 + rax_26))) == 0)\n                    {\n                        int32_t rcx_5 = r11_1;\n                        int32_t rsi_7 = r10_1;\n                        int64_t rax_29 = arg2[9];\n                        int64_t rax_67;\n                        uint64_t r8_2;\n                        if (var_130 <= 0xa)\n                        {\n                            *(r9_1 + 8) = 0xa;\n                            rax_67 = rbp;\n                            r8_2 = 0xa;\n                        }\n                        else\n                        {\n                            int32_t temp14_1;\n                            int32_t temp15_1;\n                            temp14_1 = HIGHW((r11_1 * 0x66666667));\n                            temp15_1 = LOWW((r11_1 * 0x66666667));\n                            uint32_t rax_33 = (((temp14_1 >> 2) - (r11_1 >> 0x1f)) * 5);\n                            int32_t temp16_1;\n                            int32_t temp17_1;\n                            temp16_1 = HIGHW((r10_1 * 0x66666667));\n                            temp17_1 = LOWW((r10_1 * 0x66666667));\n                            uint32_t rax_38 = (((temp16_1 >> 2) - (r10_1 >> 0x1f)) * 5);\n                            int32_t temp18_1;\n                            int32_t temp19_1;\n                            temp18_1 = HIGHW((var_120_1 * 0x66666667));\n                            temp19_1 = LOWW((var_120_1 * 0x66666667));\n                            uint32_t rax_43 = (((temp18_1 >> 2) - (var_120_1 >> 0x1f)) * 5);\n                            r8_2 = 0xa;\n                            if ((((r11_1 - (rax_33 + rax_33)) | (r10_1 - (rax_38 + rax_38))) | (var_120_1 - (rax_43 + rax_43))) != 0)\n                            {\n                                *(r9_1 + 8) = 0xa;\n                                rax_67 = rbp;\n                            }\n                            else\n                            {\n                                var_120_1 = rbp;\n                                int32_t r9_2 = var_130;\n                                int32_t r15_2 = 8;\n                                while (true)\n                                {\n                                    int32_t r11_5 = (r8_2 * 5);\n                                    int32_t temp20_1;\n                                    int32_t temp21_1;\n                                    temp20_1 = HIGHW((rcx_5 * 0x66666667));\n                                    temp21_1 = LOWW((rcx_5 * 0x66666667));\n                                    int32_t r11_6 = (r11_5 + r11_5);\n                                    r8_2 = r11_6;\n                                    rcx_5 = ((temp20_1 >> 2) - (rcx_5 >> 0x1f));\n                                    int32_t temp22_1;\n                                    int32_t temp23_1;\n                                    temp22_1 = HIGHW((rsi_7 * 0x66666667));\n                                    temp23_1 = LOWW((rsi_7 * 0x66666667));\n                                    rsi_7 = ((temp22_1 >> 2) - (rsi_7 >> 0x1f));\n                                    int32_t temp24_1;\n                                    int32_t temp25_1;\n                                    temp24_1 = HIGHW((rdi_7 * 0x66666667));\n                                    temp25_1 = LOWW((rdi_7 * 0x66666667));\n                                    rdi_7 = ((temp24_1 >> 2) - (rdi_7 >> 0x1f));\n                                    if (r11_6 < r9_2)\n                                    {\n                                        int32_t temp26_1;\n                                        int32_t temp27_1;\n                                        temp26_1 = HIGHW((rcx_5 * 0x66666667));\n                                        temp27_1 = LOWW((rcx_5 * 0x66666667));\n                                        uint32_t rax_52 = (((temp26_1 >> 2) - (rcx_5 >> 0x1f)) * 5);\n                                        int32_t temp28_1;\n                                        int32_t temp29_1;\n                                        temp28_1 = HIGHW((rsi_7 * 0x66666667));\n                                        temp29_1 = LOWW((rsi_7 * 0x66666667));\n                                        uint32_t rax_57 = (((temp28_1 >> 2) - (rsi_7 >> 0x1f)) * 5);\n                                        int32_t temp30_1;\n                                        int32_t temp31_1;\n                                        temp30_1 = HIGHW((rdi_7 * 0x66666667));\n                                        temp31_1 = LOWW((rdi_7 * 0x66666667));\n                                        uint32_t rax_62 = (((temp30_1 >> 2) - (rdi_7 >> 0x1f)) * 5);\n                                        if ((((rcx_5 - (rax_52 + rax_52)) | (rsi_7 - (rax_57 + rax_57))) | (rdi_7 - (rax_62 + rax_62))) == 0)\n                                        {\n                                            int32_t temp32_1 = r15_2;\n                                            r15_2 = (r15_2 - 1);\n                                            if (temp32_1 == 1)\n                                            {\n                                                rbp = var_120_1;\n                                                if ((((rax_29 | r12) | arg2[0xd]) & 1) == 0)\n                                                {\n                                                    *(r9_1 + 8) = 0x77359400;\n                                                    r8_2 = 0x77359400;\n                                                    rax_67 = (rbp & 0xfffffffffffffffe);\n                                                    var_140_1 = true;\n                                                }\n                                                else\n                                                {\n                                                    *(r9_1 + 8) = 0x3b9aca00;\n                                                    rax_67 = rbp;\n                                                    r8_2 = 0x3b9aca00;\n                                                }\n                                                break;\n                                            }\n                                            continue;\n                                        }\n                                    }\n                                    rbp = var_120_1;\n                                    var_140_1 = r11_6 == 0x77359400;\n                                    *(r9_1 + 8) = r11_6;\n                                    rax_67 = ((!var_140_1) & rbp);\n                                    break;\n                                }\n                            }\n                        }\n                        if (r12 <= rbp)\n                        {\n                            if (r14 < r13)\n                            {\n                            label_40ef0d:\n                                bool cond:8_1 = r12 == rax_67;\n                                if (r12 < rax_67)\n                                {\n                                    goto label_40eca0;\n                                }\n                                if (cond:8_1)\n                                {\n                                    int32_t temp33_1;\n                                    int32_t temp34_1;\n                                    temp33_1 = HIGHW(r15);\n                                    temp34_1 = LOWW(r15);\n                                    if ((r13 - (COMBINE(temp33_1, temp34_1) % r8_2)) > r14)\n                                    {\n                                        goto label_40eca0;\n                                    }\n                                    goto label_40ef26;\n                                }\n                            label_40ef26:\n                                var_130 = r8_2;\n                                int64_t var_e8 = rax_29;\n                                int64_t var_e0_1 = rdi_2;\n                                int64_t var_d8_1 = (var_140_1 | r12);\n                                int32_t temp39_1;\n                                int32_t temp40_1;\n                                temp39_1 = HIGHW((r8_2 * 0x38e38e39));\n                                temp40_1 = LOWW((r8_2 * 0x38e38e39));\n                                int64_t var_d0_1 = ((temp39_1 >> 1) + r14);\n                                int32_t rax_76 = arg2[3];\n                                var_148_1 = rax_76;\n                                var_148_1 = r9_1;\n                                var_140_1 = &var_e8;\n                                int64_t* rsi_9 = &var_e8;\n                                int32_t rax_78;\n                                int32_t r8_3;\n                                int64_t r9_3;\n                                if ((rax_76 & 0xf000) == 0xa000)\n                                {\n                                    r9_3 = var_148_1;\n                                    r8_3 = var_130;\n                                    rax_78 = sub_40f8b0(arg1, rsi_9) != 0;\n                                }\n                                else\n                                {\n                                    r8_3 = var_130;\n                                    r9_3 = var_148_1;\n                                    rax_78 = sub_40f8a0(arg1, rsi_9) != 0;\n                                }\n                                if (rax_78 == 0)\n                                {\n                                    var_130 = r8_3;\n                                    void var_c8;\n                                    struct stat* rdx_50 = &var_c8;\n                                    int32_t rax_80 = arg2[3];\n                                    var_148_1 = rax_80;\n                                    var_148_1 = r9_3;\n                                    int32_t r8_4;\n                                    int32_t r10_3;\n                                    if ((rax_80 & 0xf000) == 0xa000)\n                                    {\n                                        r9_1 = var_148_1;\n                                        r8_4 = var_130;\n                                        r10_3 = __lxstat(1, arg1, rdx_50);\n                                    }\n                                    else\n                                    {\n                                        r8_4 = var_130;\n                                        r9_1 = var_148_1;\n                                        r10_3 = __xstat(1, arg1, rdx_50);\n                                    }\n                                    int64_t var_70;\n                                    int64_t rax_86 = var_70;\n                                    int64_t var_68;\n                                    int64_t rcx_7 = var_68;\n                                    int64_t rdi_11 = r14;\n                                    if ((((rdi_11 ^ rcx_7) | (rax_86 ^ r12)) | r10_3) == 0)\n                                    {\n                                        goto label_40f090;\n                                    }\n                                    int64_t var_d0_2 = rdi_11;\n                                    int64_t var_d8_2 = r12;\n                                    int128_t* rsi_14 = var_140_1;\n                                    var_130 = r8_4;\n                                    int64_t* var_138_1;\n                                    var_138_1 = r10_3;\n                                    var_148_1 = r9_1;\n                                    int32_t r10_4;\n                                    if ((arg2[3] & 0xf000) == 0xa000)\n                                    {\n                                        sub_40f8b0(arg1, rsi_14);\n                                        r9_1 = var_148_1;\n                                        r10_4 = var_138_1;\n                                        r8_4 = var_130;\n                                    }\n                                    else\n                                    {\n                                        sub_40f8a0(arg1, rsi_14);\n                                        r8_4 = var_130;\n                                        r10_4 = var_138_1;\n                                        r9_1 = var_148_1;\n                                    }\n                                    if (r10_4 != 0)\n                                    {\n                                        goto label_40f068;\n                                    }\n                                    rax_86 = var_70;\n                                    rcx_7 = var_68;\n                                label_40f090:\n                                    int32_t rcx_8 = (rcx_7 + ((rax_86 & 1) * 0x3b9aca00));\n                                    int32_t temp41_1;\n                                    int32_t temp42_1;\n                                    temp41_1 = HIGHW((rcx_8 * 0x66666667));\n                                    temp42_1 = LOWW((rcx_8 * 0x66666667));\n                                    uint32_t rax_93 = (((temp41_1 >> 2) - (rcx_8 >> 0x1f)) * 5);\n                                    if ((rcx_8 == (rax_93 + rax_93) && r8_4 == 0xa))\n                                    {\n                                        rbx_1 = 0xa;\n                                    }\n                                    int64_t rax_101;\n                                    if (((rcx_8 == (rax_93 + rax_93) && r8_4 == 0xa) || rcx_8 != (rax_93 + rax_93)))\n                                    {\n                                        rax_101 = -1;\n                                    }\n                                    if ((rcx_8 == (rax_93 + rax_93) && r8_4 != 0xa))\n                                    {\n                                        int32_t rsi_15 = 9;\n                                        rbx_1 = 0xa;\n                                        while (true)\n                                        {\n                                            int32_t temp49_1;\n                                            int32_t temp50_1;\n                                            temp49_1 = HIGHW((rcx_8 * 0x66666667));\n                                            temp50_1 = LOWW((rcx_8 * 0x66666667));\n                                            int32_t rdx_60 = ((temp49_1 >> 2) - (rcx_8 >> 0x1f));\n                                            rcx_8 = rdx_60;\n                                            int32_t temp51_1;\n                                            int32_t temp52_1;\n                                            temp51_1 = HIGHW((rdx_60 * 0x66666667));\n                                            temp52_1 = LOWW((rdx_60 * 0x66666667));\n                                            uint32_t rax_99 = (((temp51_1 >> 2) - (rcx_8 >> 0x1f)) * 5);\n                                            if (rcx_8 == (rax_99 + rax_99))\n                                            {\n                                                int32_t temp53_1 = rsi_15;\n                                                rsi_15 = (rsi_15 - 1);\n                                                if (temp53_1 == 1)\n                                                {\n                                                    rax_101 = -2;\n                                                    rbx_1 = 0x77359400;\n                                                    break;\n                                                }\n                                                uint32_t rbx_2 = (rbx_1 * 5);\n                                                rbx_1 = (rbx_2 + rbx_2);\n                                                if (rbx_1 != r8_4)\n                                                {\n                                                    continue;\n                                                }\n                                            }\n                                            int32_t rax_114;\n                                            rax_114 = rbx_1 == 0x77359400;\n                                            rax_101 = (!rax_114);\n                                            break;\n                                        }\n                                    }\n                                    rbp = (rbp & rax_101);\n                                    int32_t temp43_1;\n                                    int32_t temp44_1;\n                                    temp43_1 = HIGHW(r15);\n                                    temp44_1 = LOWW(r15);\n                                    r15 = (r13 - (COMBINE(temp43_1, temp44_1) % rbx_1));\n                                    goto label_40f130;\n                                }\n                            label_40f068:\n                                rbx_1 = 0xfffffffe;\n                            }\n                            else if (var_148_1 == 0)\n                            {\n                                goto label_40ef0d;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_40f130:\n                        *(r9_1 + 8) = rbx_1;\n                        *(r9_1 + 0xc) = 1;\n                    label_40ec50:\n                        bool cond:2_1 = rbp != r12;\n                        if (rbp > r12)\n                        {\n                        label_40eca0:\n                            rbx_1 = 0xffffffff;\n                        }\n                        else\n                        {\n                            rbx_1 = 1;\n                            if ((!cond:2_1))\n                            {\n                                bool cond:3_1 = r15 < r14;\n                                if (r15 > r14)\n                                {\n                                    goto label_40eca0;\n                                }\n                                rbx_1 = cond:3_1;\n                                rbx_1 = rbx_1;\n                            }\n                        }\n                    }\n                }\n            }\n            if ((rdx != 0 || (rdx == 0 && rax_17 != 0)))\n            {\n                int64_t rsi = data_61ba78;\n                int64_t rdi_13;\n                if (rsi == 0)\n                {\n                    int64_t rax_105 = malloc(0x10);\n                    rsi = rax_105;\n                    data_61ba78 = rax_105;\n                    if (rax_105 == 0)\n                    {\n                        rdi_13 = data_61ba80;\n                    label_40f1a5:\n                        var_f8 = *arg2;\n                        int64_t rax_108 = sub_40b6a0(rdi_13, &var_f8);\n                        rdx_5 = &var_f8;\n                        r9_1 = rax_108;\n                        if (rax_108 == 0)\n                        {\n                            goto label_40ece4;\n                        }\n                    label_40ec1d:\n                        int32_t rdi_1 = *(r9_1 + 8);\n                        var_130 = rdi_1;\n                        if (*(r9_1 + 0xc) == 0)\n                        {\n                            goto label_40ed07;\n                        }\n                        int32_t rax_6;\n                        rax_6 = rdi_1 == 0x77359400;\n                        rbp = (rbp & (!rax_6));\n                        int32_t temp8_1;\n                        int32_t temp9_1;\n                        temp8_1 = HIGHW(r15);\n                        temp9_1 = LOWW(r15);\n                        r15 = (r13 - (COMBINE(temp8_1, temp9_1) % rdi_1));\n                        goto label_40ec50;\n                    }\n                    *(rax_105 + 8) = 0x77359400;\n                    *(rax_105 + 0xc) = 0;\n                }\n                *rsi = *arg2;\n                int64_t rax_5 = sub_40c0b0(rdx, rsi);\n                r9_1 = rax_5;\n                if (rax_5 == 0)\n                {\n                    rdi_13 = data_61ba80;\n                    if (rdi_13 == 0)\n                    {\n                        goto label_40ecdf;\n                    }\n                    goto label_40f1a5;\n                }\n                if (data_61ba78 == rax_5)\n                {\n                    data_61ba78 = 0;\n                }\n                goto label_40ec1d;\n            }\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_40f2d0",
            "funcStartAddr": "0x40f2d0",
            "funcEndAddr": "0x40f39e",
            "decompiledFuncCode": "__syscall_slong_t sub_40f2d0(void* arg1, int64_t* arg2)\n{\n    struct timespec* rbx = *arg2;\n    __syscall_slong_t rax = rbx->tv_nsec;\n    int64_t rdx = *(rbx + 0x18);\n    if (rax == 0x3ffffffe)\n    {\n        rax = 1;\n        if (rdx == 0x3ffffffe)\n        {\n            goto label_40f315;\n        }\n        rax = *(arg1 + 0x50);\n        rbx->tv_sec = *(arg1 + 0x48);\n        rbx->tv_nsec = rax;\n    }\n    else\n    {\n        if (rax == 0x3fffffff)\n        {\n            if (rdx == 0x3fffffff)\n            {\n                *arg2 = 0;\n                rax = 0;\n            label_40f315:\n                return rax;\n            }\n            rax = sub_411500(rbx);\n            rdx = *(rbx + 0x18);\n        }\n        if (((rax != 0x3fffffff && rdx == 0x3ffffffe) || (rax == 0x3fffffff && rdx == 0x3ffffffe)))\n        {\n            int64_t rax_1 = *(arg1 + 0x60);\n            *(rbx + 0x10) = *(arg1 + 0x58);\n            *(rbx + 0x18) = rax_1;\n            rax = 0;\n            goto label_40f315;\n        }\n    }\n    if (rdx == 0x3fffffff)\n    {\n        char var_19 = 0;\n        sub_411500(&rbx[1]);\n        return 0;\n    }\n    goto label_40f315;\n}\n\n"
        },
        {
            "funcName": "sub_40f3a0",
            "funcStartAddr": "0x40f3a0",
            "funcEndAddr": "0x40f449",
            "decompiledFuncCode": "uint64_t sub_40f3a0(int64_t* arg1)\n{\n    int64_t r9 = arg1[1];\n    int64_t rsi = (r9 - 0x3ffffffe);\n    if ((rsi <= 1 || (rsi > 1 && r9 <= 0x3b9ac9ff)))\n    {\n        int64_t rdx_1 = arg1[3];\n        int64_t r8_1 = (rdx_1 - 0x3ffffffe);\n        if ((r8_1 <= 1 || (r8_1 > 1 && rdx_1 <= 0x3b9ac9ff)))\n        {\n            int32_t rcx = 0;\n            int32_t r10 = 0;\n            if (rsi <= 1)\n            {\n                *arg1 = 0;\n                r10 = 1;\n                rcx = r9 == 0x3ffffffe;\n            }\n            if (r8_1 <= 1)\n            {\n                arg1[2] = 0;\n                r10 = 1;\n                int32_t rax_1;\n                rax_1 = rdx_1 == 0x3ffffffe;\n                rcx = (rcx + rax_1);\n            }\n            int32_t rax_2;\n            rax_2 = rcx == 1;\n            return (rax_2 + r10);\n        }\n    }\n    *__errno_location() = 0x16;\n    return 0xffffffff;\n}\n\n"
        },
        {
            "funcName": "sub_40f450",
            "funcStartAddr": "0x40f450",
            "funcEndAddr": "0x40f45a",
            "decompiledFuncCode": "int64_t sub_40f450(int32_t arg1, char* arg2, struct timespec* arg3)\n{\n    /* tailcall */\n    return utimensat(arg1, arg2, arg3, 0x100);\n}\n\n"
        },
        {
            "funcName": "sub_40f460",
            "funcStartAddr": "0x40f460",
            "funcEndAddr": "0x40f89e",
            "decompiledFuncCode": "uint64_t sub_40f460(int32_t arg1, char* arg2, int128_t* arg3)\n{\n    int128_t* var_120;\n    int32_t r13;\n    if (arg3 == 0)\n    {\n        var_120 = nullptr;\n        r13 = 0;\n    }\n    else\n    {\n        int128_t var_118;\n        var_120 = &var_118;\n        var_118 = *arg3;\n        int128_t var_108_1 = arg3[1];\n        int32_t rax_1 = sub_40f3a0(&var_118);\n        r13 = rax_1;\n        if (rax_1 < 0)\n        {\n            goto label_40f853;\n        }\n    }\n    int32_t r12_1;\n    if ((arg1 < 0 && arg2 == 0))\n    {\n        *__errno_location() = 9;\n    label_40f853:\n        r12_1 = -1;\n    }\n    if ((arg1 >= 0 || (arg1 < 0 && arg2 != 0)))\n    {\n        if (data_61ba8c < 0)\n        {\n            goto label_40f4f5;\n        }\n        void var_b8;\n        int64_t var_70;\n        int64_t var_68;\n        int64_t var_60;\n        int64_t var_58;\n        int128_t* rsi;\n        if (r13 != 2)\n        {\n            rsi = var_120;\n        }\n        else\n        {\n            struct stat* rdx_7 = &var_b8;\n            int32_t rax_19;\n            if (arg1 < 0)\n            {\n                rax_19 = __xstat(1, arg2, rdx_7) != 0;\n            }\n            else\n            {\n                rax_19 = __fxstat(1, arg1, rdx_7) != 0;\n            }\n            if (rax_19 != 0)\n            {\n                goto label_40f853;\n            }\n            rsi = var_120;\n            if (*(rsi + 8) == 0x3ffffffe)\n            {\n                r13 = 3;\n                *rsi = var_70;\n                *(rsi + 8) = var_68;\n            }\n            else\n            {\n                r13 = 3;\n                if (*(rsi + 0x18) == 0x3ffffffe)\n                {\n                    *(rsi + 0x18) = var_58;\n                    rsi[1] = var_60;\n                }\n            }\n        }\n        int32_t rax_3;\n        int32_t rax_21;\n        bool cond:0_1;\n        if (arg1 < 0)\n        {\n            rax_21 = utimensat(0xffffff9c, arg2, rsi, 0);\n            r12_1 = rax_21;\n            cond:0_1 = rax_21 != 0;\n        }\n        else\n        {\n            rax_3 = futimens(arg1, rsi);\n            r12_1 = rax_3;\n            cond:0_1 = rax_3 != 0;\n        }\n        if (((arg1 < 0 && rax_21 > 0) || (arg1 >= 0 && rax_3 > 0)))\n        {\n            *__errno_location() = 0x26;\n        label_40f4f5:\n            data_61ba8c = 0xffffffff;\n            data_61ba88 = 0xffffffff;\n            if (r13 == 0)\n            {\n            label_40f560:\n                int128_t* rsi_3 = var_120;\n                struct timeval* rdx_5;\n                int64_t* r13_1;\n                if (rsi_3 == 0)\n                {\n                label_40f630:\n                    r13_1 = nullptr;\n                    rdx_5 = nullptr;\n                    if (arg1 < 0)\n                    {\n                        goto label_40f647;\n                    }\n                    goto label_40f5d0;\n                }\n                int64_t rdi_3 = *(rsi_3 + 8);\n                int64_t var_f8;\n                r13_1 = &var_f8;\n                var_f8 = *rsi_3;\n                int64_t rax_9;\n                int64_t rdx_1;\n                rdx_1 = HIGHD((rdi_3 * 0x20c49ba5e353f7cf));\n                rax_9 = LOWD((rdi_3 * 0x20c49ba5e353f7cf));\n                int64_t rsi_4 = *(rsi_3 + 0x18);\n                int64_t var_e8_1 = rsi_3[1];\n                int64_t var_f0_1 = ((rdx_1 >> 7) - (rdi_3 >> 0x3f));\n                int64_t rax_12;\n                int64_t rdx_4;\n                rdx_4 = HIGHD((rsi_4 * 0x20c49ba5e353f7cf));\n                rax_12 = LOWD((rsi_4 * 0x20c49ba5e353f7cf));\n                rdx_5 = &var_f8;\n                int64_t var_e0_1 = ((rdx_4 >> 7) - (rsi_4 >> 0x3f));\n                if (arg1 < 0)\n                {\n                label_40f647:\n                    r12_1 = futimesat(0xffffff9c, arg2, rdx_5);\n                }\n                else\n                {\n                label_40f5d0:\n                    int32_t rax_13 = futimesat(arg1, nullptr, rdx_5);\n                    r12_1 = rax_13;\n                    int64_t var_d8;\n                    if (rax_13 != 0)\n                    {\n                        r12_1 = -1;\n                        if (arg2 != 0)\n                        {\n                            int128_t* rax_14 = var_120;\n                            int64_t* rsi_6 = nullptr;\n                            if (rax_14 != 0)\n                            {\n                                rsi_6 = &var_d8;\n                                var_d8 = *rax_14;\n                                int64_t var_d0_1 = rax_14[1];\n                            }\n                            r12_1 = utime(arg2, rsi_6);\n                        }\n                    }\n                    else if (r13_1 != 0)\n                    {\n                        char* rbp;\n                        rbp = r13_1[1] > 0x7a11f;\n                        int64_t r14;\n                        r14 = r13_1[3] > 0x7a11f;\n                        if (((rbp != 0 || (rbp == 0 && r14 != 0)) && __fxstat(1, arg1, &var_b8) == 0))\n                        {\n                            int64_t rdx_12;\n                            rdx_12 = (var_60 - r13_1[2]) == 1;\n                            var_d8 = *r13_1;\n                            int128_t var_c8_1 = *(r13_1 + 0x10);\n                            char r14_1 = (r14 & rdx_12);\n                            if (((var_70 - *r13_1) == 1 && (rbp != 0 && var_68 == 0)))\n                            {\n                                int64_t var_d0_2 = 0;\n                                if (r14_1 == 0)\n                                {\n                                    goto label_40f7f0;\n                                }\n                                if (var_58 == 0)\n                                {\n                                    goto label_40f890;\n                                }\n                                goto label_40f7f0;\n                            }\n                            if ((r14_1 != 0 && var_58 == 0))\n                            {\n                            label_40f890:\n                                *var_c8_1[8] = 0;\n                            label_40f7f0:\n                                futimesat(arg1, nullptr, &var_d8);\n                            }\n                            r12_1 = 0;\n                        }\n                    }\n                }\n            }\n            else\n            {\n                if (r13 != 3)\n                {\n                    struct stat* rdx = &var_b8;\n                    int32_t rax_5;\n                    if (arg1 < 0)\n                    {\n                        rax_5 = __xstat(1, arg2, rdx) != 0;\n                    }\n                    else\n                    {\n                        rax_5 = __fxstat(1, arg1, rdx) != 0;\n                    }\n                    if (rax_5 != 0)\n                    {\n                        goto label_40f853;\n                    }\n                }\n                if (var_120 == 0)\n                {\n                    goto label_40f630;\n                }\n                r12_1 = 0;\n                if (sub_40f2d0(&var_b8, &var_120) == 0)\n                {\n                    goto label_40f560;\n                }\n            }\n        }\n        if (((arg1 < 0 && rax_21 <= 0) || (arg1 >= 0 && rax_3 <= 0)))\n        {\n            if (cond:0_1)\n            {\n                if (*__errno_location() == 0x26)\n                {\n                    goto label_40f4f5;\n                }\n                goto label_40f713;\n            }\n        label_40f713:\n            data_61ba8c = 1;\n        }\n    }\n    if (((arg1 < 0 && arg2 == 0) || ((arg1 >= 0 || (arg1 < 0 && arg2 != 0)) && data_61ba8c >= 0)))\n    {\n        return r12_1;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40f8a0",
            "funcStartAddr": "0x40f8a0",
            "funcEndAddr": "0x40f8b0",
            "decompiledFuncCode": "int64_t sub_40f8a0(char* arg1, int128_t* arg2)\n{\n    /* tailcall */\n    return sub_40f460(0xffffffff, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40f8b0",
            "funcStartAddr": "0x40f8b0",
            "funcEndAddr": "0x40faf8",
            "decompiledFuncCode": "uint64_t sub_40f8b0(char* arg1, int128_t* arg2)\n{\n    int128_t* var_d0;\n    int32_t rbp_2;\n    void var_a8;\n    int128_t* rdx_1;\n    int32_t rbx;\n    if (arg2 == 0)\n    {\n        rdx_1 = nullptr;\n        rbx = 0;\n        var_d0 = nullptr;\n        if (data_61ba88 >= 0)\n        {\n            goto label_40f918;\n        }\n        data_61ba88 = 0xffffffff;\n    label_40f9d2:\n        if (__lxstat(1, arg1, &var_a8) != 0)\n        {\n            goto label_40f9e0;\n        }\n    }\n    else\n    {\n        int128_t var_c8;\n        var_d0 = &var_c8;\n        var_c8 = *arg2;\n        int128_t var_b8_1 = arg2[1];\n        int32_t rax_1 = sub_40f3a0(&var_c8);\n        rbx = rax_1;\n        if (rax_1 < 0)\n        {\n            goto label_40f9e0;\n        }\n        if (data_61ba88 >= 0)\n        {\n            if (rbx == 2)\n            {\n                if (__lxstat(1, arg1, &var_a8) != 0)\n                {\n                    goto label_40f9e0;\n                }\n                rdx_1 = var_d0;\n                if (*(rdx_1 + 8) == 0x3ffffffe)\n                {\n                    rbx = 3;\n                    int64_t var_60;\n                    *rdx_1 = var_60;\n                    int64_t var_58;\n                    *(rdx_1 + 8) = var_58;\n                }\n                else\n                {\n                    rbx = 3;\n                    if (*(rdx_1 + 0x18) == 0x3ffffffe)\n                    {\n                        int64_t var_48;\n                        *(rdx_1 + 0x18) = var_48;\n                        int64_t var_50;\n                        rdx_1[1] = var_50;\n                    }\n                }\n                goto label_40f918;\n            }\n            rdx_1 = var_d0;\n        label_40f918:\n            int32_t rax_3 = utimensat(0xffffff9c, arg1, rdx_1, 0x100);\n            bool cond:0_1 = rax_3 != 0;\n            if (rax_3 > 0)\n            {\n                *__errno_location() = 0x26;\n            }\n            else\n            {\n                int32_t* rax_16;\n                if (cond:0_1)\n                {\n                    rax_16 = __errno_location();\n                }\n                if (((!cond:0_1) || (cond:0_1 && *rax_16 != 0x26)))\n                {\n                    data_61ba8c = 1;\n                    data_61ba88 = 1;\n                    return rax_3;\n                }\n            }\n            goto label_40f932;\n        }\n    label_40f932:\n        data_61ba88 = 0xffffffff;\n        if (rbx == 0)\n        {\n            goto label_40f9d2;\n        }\n        if (rbx != 3)\n        {\n            if (__lxstat(1, arg1, &var_a8) != 0)\n            {\n                goto label_40f9e0;\n            }\n            if (var_d0 != 0)\n            {\n                goto label_40f95f;\n            }\n        }\n        else if (var_d0 != 0)\n        {\n        label_40f95f:\n            rbp_2 = 0;\n            if (sub_40f2d0(&var_a8, &var_d0) != 0)\n            {\n                goto label_40f99f;\n            }\n        }\n    }\n    int32_t var_90;\n    if ((var_90 & 0xf000) != 0xa000)\n    {\n        rbp_2 = sub_40f460(0xffffffff, arg1, var_d0);\n    label_40f99f:\n        return rbp_2;\n    }\n    *__errno_location() = 0x26;\nlabel_40f9e0:\n    rbp_2 = -1;\n    goto label_40f99f;\n}\n\n"
        },
        {
            "funcName": "sub_40fb00",
            "funcStartAddr": "0x402a82",
            "funcEndAddr": "0x40fedd",
            "decompiledFuncCode": "int64_t sub_40fb00(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_416ad2, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40fee0",
            "funcStartAddr": "0x40fee0",
            "funcEndAddr": "0x40ff00",
            "decompiledFuncCode": "int64_t sub_40fee0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_40fb00(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_40ff00",
            "funcStartAddr": "0x40ff00",
            "funcEndAddr": "0x40ff60",
            "decompiledFuncCode": "int64_t sub_40ff00(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_40fb00(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_40ff60",
            "funcStartAddr": "0x40ff60",
            "funcEndAddr": "0x41001c",
            "decompiledFuncCode": "int64_t sub_40ff60(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_40fb00(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_410020",
            "funcStartAddr": "0x410020",
            "funcEndAddr": "0x410094",
            "decompiledFuncCode": "int64_t sub_410020()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_4100a0",
            "funcStartAddr": "0x4100a0",
            "funcEndAddr": "0x4100d8",
            "decompiledFuncCode": "uint64_t sub_4100a0()\n{\n    if (data_61ba91 == 0)\n    {\n        int64_t rax_1 = geteuid();\n        data_61ba91 = 1;\n        rax_1 = rax_1 == 0;\n        data_61ba90 = rax_1;\n        return rax_1;\n    }\n    return data_61ba90;\n}\n\n"
        },
        {
            "funcName": "sub_4100e0",
            "funcStartAddr": "0x4100e0",
            "funcEndAddr": "0x4100fa",
            "decompiledFuncCode": "int64_t sub_4100e0(size_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_410330();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_410140",
            "funcStartAddr": "0x410140",
            "funcEndAddr": "0x410176",
            "decompiledFuncCode": "int64_t sub_410140(int64_t arg1, size_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_410330();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_41028a",
            "funcStartAddr": "0x41028a",
            "funcEndAddr": "0x410290",
            "decompiledFuncCode": "int64_t sub_41028a() __noreturn\n{\n    sub_410330();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_410290",
            "funcStartAddr": "0x410290",
            "funcEndAddr": "0x4102a7",
            "decompiledFuncCode": "int64_t sub_410290(size_t arg1)\n{\n    /* tailcall */\n    return memset(sub_4100e0(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_4102b0",
            "funcStartAddr": "0x4102b0",
            "funcEndAddr": "0x4102de",
            "decompiledFuncCode": "int64_t sub_4102b0(size_t arg1, size_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_410330();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4102e0",
            "funcStartAddr": "0x4102e0",
            "funcEndAddr": "0x410308",
            "decompiledFuncCode": "int64_t sub_4102e0(int64_t arg1, size_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_4100e0(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_410310",
            "funcStartAddr": "0x410310",
            "funcEndAddr": "0x410323",
            "decompiledFuncCode": "int64_t sub_410310(char* arg1)\n{\n    /* tailcall */\n    return sub_4102e0(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_410330",
            "funcStartAddr": "0x410330",
            "funcEndAddr": "0x410361",
            "decompiledFuncCode": "int64_t sub_410330() __noreturn\n{\n    error(data_61b3d0, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_410370",
            "funcStartAddr": "0x410370",
            "funcEndAddr": "0x4103d9",
            "decompiledFuncCode": "uint64_t sub_410370()\n{\n    int32_t rbx = 0;\n    char* var_18 = nullptr;\n    uint64_t var_10 = 0;\n    ssize_t rax = __getdelim(&var_18, &var_10, 0xa, stdin);\n    if (rax > 0)\n    {\n        char* rdi_1 = var_18;\n        void* rax_1 = &rdi_1[(rax - 1)];\n        if (*rax_1 == 0xa)\n        {\n            *rax_1 = 0;\n            rdi_1 = var_18;\n        }\n        rbx = rpmatch(rdi_1) > 0;\n    }\n    free(var_18);\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_4103e0",
            "funcStartAddr": "0x4103e0",
            "funcEndAddr": "0x410515",
            "decompiledFuncCode": "uint64_t sub_4103e0(int32_t arg1, int32_t arg2, int32_t arg3)\n{\n    void* var_58 = &arg_8;\n    int64_t rcx;\n    int64_t var_30 = rcx;\n    int32_t var_60 = 0x10;\n    void var_48;\n    void* var_50 = &var_48;\n    if (arg2 != 0x406)\n    {\n        return fcntl();\n    }\n    int32_t var_60_1 = 0x18;\n    int32_t rax_2;\n    int32_t rax_5;\n    int32_t* rax_15;\n    int32_t rax_17;\n    int32_t rbx;\n    if (data_61ba94 < 0)\n    {\n        rax_5 = sub_4103e0();\n        rbx = rax_5;\n    }\n    else\n    {\n        rax_2 = fcntl();\n        rbx = rax_2;\n        if (rax_2 < 0)\n        {\n            rax_15 = __errno_location();\n            if (*rax_15 == 0x16)\n            {\n                rax_17 = sub_4103e0(arg1, 0, arg3);\n                rbx = rax_17;\n                if (rax_17 >= 0)\n                {\n                    data_61ba94 = 0xffffffff;\n                }\n            }\n        }\n    }\n    if (((((data_61ba94 >= 0 && rax_2 < 0) && *rax_15 == 0x16) && rax_17 >= 0) || (rax_5 >= 0 && data_61ba94 == 0xffffffff)))\n    {\n        int32_t rax_7 = fcntl(rbx, 1);\n        int32_t rax_10;\n        if (rax_7 >= 0)\n        {\n            rax_10 = fcntl(rbx, 2, (rax_7 | 1));\n        }\n        if ((rax_7 < 0 || (rax_7 >= 0 && rax_10 == 0xffffffff)))\n        {\n            int32_t* rax_11 = __errno_location();\n            int32_t rdi_2 = rbx;\n            rbx = -1;\n            int32_t r12_1 = *rax_11;\n            close(rdi_2);\n            *rax_11 = r12_1;\n        }\n    }\n    if ((data_61ba94 >= 0 && (rax_2 >= 0 || (rax_2 < 0 && *rax_15 != 0x16))))\n    {\n        data_61ba94 = 1;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_410520",
            "funcStartAddr": "0x410520",
            "funcEndAddr": "0x410560",
            "decompiledFuncCode": "int64_t sub_410520(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_410590(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_410560",
            "funcStartAddr": "0x410560",
            "funcEndAddr": "0x410588",
            "decompiledFuncCode": "int64_t sub_410560(int32_t* arg1)\n{\n    int64_t rax_1 = 0;\n    if (*(arg1 + 0x28) <= *(arg1 + 0x20))\n    {\n        rax_1 = (*(arg1 + 0x10) - *(arg1 + 8));\n        if ((*arg1 & 0x100) != 0)\n        {\n            rax_1 = (rax_1 + (*(arg1 + 0x58) - *(arg1 + 0x48)));\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_410590",
            "funcStartAddr": "0x410590",
            "funcEndAddr": "0x4105e7",
            "decompiledFuncCode": "off64_t sub_410590(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_4105f0",
            "funcStartAddr": "0x4105f0",
            "funcEndAddr": "0x4106cf",
            "decompiledFuncCode": "uint64_t sub_4105f0(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_4106d0",
            "funcStartAddr": "0x4106d0",
            "funcEndAddr": "0x410cec",
            "decompiledFuncCode": "uint64_t sub_4106d0(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_410900;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_410826;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_410826;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_410826:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_410900:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_41092e;\n                }\n                *arg5 = r12;\n            label_41092e:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_41094c;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_41094c:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_41094c;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_4108be;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_4108be:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_410cf0",
            "funcStartAddr": "0x410cf0",
            "funcEndAddr": "0x4112b6",
            "decompiledFuncCode": "uint64_t sub_410cf0(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_410f2c;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_410db8;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_410db8:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_4105f0(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_416f59;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_4105f0(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_410f2c;\n                }\n                *arg7 = rdx_2;\n            label_410f2c:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_411030;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_416f59;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_4110a0;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_411030;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_411030;\n                            }\n                            goto label_410ff1;\n                        }\n                    label_410ff1:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_4106d0(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_416f5a);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_411030:\n                            rdx = &r14_1[1];\n                        label_410e71:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_41106e;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_41106e:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_416f78;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_4110a0:\n                                        r14_2 = sub_4106d0(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_41115d;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_41115d:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_410f2c;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_410db8;\n        }\n        goto label_410e71;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_411320",
            "funcStartAddr": "0x411320",
            "funcEndAddr": "0x411338",
            "decompiledFuncCode": "uint64_t sub_411320(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_4113c0",
            "funcStartAddr": "0x4113c0",
            "funcEndAddr": "0x41143a",
            "decompiledFuncCode": "uint64_t sub_4113c0(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_416f5c[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_4113ea;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_4113ea:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_411540() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_411440",
            "funcStartAddr": "0x411440",
            "funcEndAddr": "0x411445",
            "decompiledFuncCode": "int64_t sub_411440(int64_t, int64_t, int32_t arg3, int32_t* arg4)\n{\n    *arg4 = arg3;\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_411450",
            "funcStartAddr": "0x411450",
            "funcEndAddr": "0x411465",
            "decompiledFuncCode": "int64_t sub_411450(int64_t arg1, int32_t arg2, int32_t arg3)\n{\n    uint64_t rsi = arg3;\n    if (arg2 == 0xffffffff)\n    {\n        /* tailcall */\n        return chmod(arg1, rsi);\n    }\n    /* tailcall */\n    return fchmod(arg2, rsi);\n}\n\n"
        },
        {
            "funcName": "sub_411470",
            "funcStartAddr": "0x411470",
            "funcEndAddr": "0x411492",
            "decompiledFuncCode": "uint64_t sub_411470(int32_t* arg1, int64_t arg2, int32_t arg3)\n{\n    int32_t rax_1;\n    rax_1 = sub_411450(arg2, arg3, *arg1) != 0;\n    return (-rax_1);\n}\n\n"
        },
        {
            "funcName": "sub_4114a0",
            "funcStartAddr": "0x4114a0",
            "funcEndAddr": "0x4114fd",
            "decompiledFuncCode": "uint64_t sub_4114a0(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_412760(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_411500",
            "funcStartAddr": "0x411500",
            "funcEndAddr": "0x41153a",
            "decompiledFuncCode": "__syscall_slong_t sub_411500(struct timespec* arg1)\n{\n    __syscall_slong_t rax = clock_gettime(0, arg1);\n    if (rax != 0)\n    {\n        int64_t var_18;\n        gettimeofday(&var_18, nullptr);\n        arg1->tv_sec = var_18;\n        int64_t var_10;\n        rax = (var_10 * 0x3e8);\n        arg1->tv_nsec = rax;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_411540",
            "funcStartAddr": "0x411540",
            "funcEndAddr": "0x41159e",
            "decompiledFuncCode": "int64_t sub_411540()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_416f7c;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            char const* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char const temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = &rdi_2[1];\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4115a0",
            "funcStartAddr": "0x4115a0",
            "funcEndAddr": "0x4115d6",
            "decompiledFuncCode": "uint64_t sub_4115a0(char* arg1, int64_t arg2)\n{\n    int64_t rcx = *arg1;\n    if (rcx == 0)\n    {\n        return 0;\n    }\n    int64_t rax = 0;\n    do\n    {\n        arg1 = &arg1[1];\n        rax = ((ROLQ(rax, 9)) + rcx);\n        rcx = *arg1;\n    } while (rcx != 0);\n    return (COMBINE(0, rax) % arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4115e0",
            "funcStartAddr": "0x4115e0",
            "funcEndAddr": "0x411b42",
            "decompiledFuncCode": "char* sub_4115e0()\n{\n    char* rax = nl_langinfo(0xe);\n    int64_t r15 = data_61bad8;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_416f5c[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        size_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            size_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_4116dc;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_411726;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_4116dc:\n            r15 = 0x416f77;\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_411726:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = 0;\n                rax_12 = fdopen(rax_11, &data_412b70);\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_4117dc:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_41196b;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_411818:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_411818;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_411852:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_411852;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                int64_t rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    int64_t rdi_26 = r15;\n                                    r15 = 0x416f77;\n                                    free(rdi_26);\n                                    sub_412760(rax_12);\n                                    goto label_411767;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                char* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = (&rsi_13[8] & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_411a2b:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_411a2b;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_411a79:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_411a79;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_4117dc;\n                        }\n                        break;\n                    }\n                label_41196b:\n                    sub_412760(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = 0x416f77;\n            }\n        label_411767:\n            free(rbp_3);\n        }\n        data_61bad8 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && *(r15 + 1) != 0))))\n            {\n                char* rbp_1 = ((r15 + strlen(r15)) + 1);\n                r15 = &rbp_1[(strlen(rbp_1) + 1)];\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = ((r15 + strlen(r15)) + 1);\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_411b50",
            "funcStartAddr": "0x411b50",
            "funcEndAddr": "0x411b73",
            "decompiledFuncCode": "int64_t* sub_411b50(int64_t arg1)\n{\n    int64_t* rax = sub_4100e0(0x18);\n    *rax = arg1;\n    rax[2] = 0;\n    rax[1] = 0;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_411b80",
            "funcStartAddr": "0x411b80",
            "funcEndAddr": "0x411baf",
            "decompiledFuncCode": "FILE*** sub_411b80(char* arg1, uint64_t arg2)\n{\n    FILE** rax = sub_411da0(arg1, arg2);\n    FILE*** rax_1 = nullptr;\n    if (rax != 0)\n    {\n        rax_1 = sub_4100e0(0x18);\n        *rax_1 = rax;\n        rax_1[2] = 0;\n        rax_1[1] = 0;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_411bb0",
            "funcStartAddr": "0x411bb0",
            "funcEndAddr": "0x411bb4",
            "decompiledFuncCode": "int64_t sub_411bb0(int64_t* arg1)\n{\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_411bc0",
            "funcStartAddr": "0x411bc0",
            "funcEndAddr": "0x411cb5",
            "decompiledFuncCode": "int64_t sub_411bc0(int64_t* arg1, int64_t arg2)\n{\n    int64_t r14 = (arg2 + 1);\n    int64_t* r12 = *arg1;\n    int64_t rbp = arg1[1];\n    int64_t rbx = arg1[2];\n    while (true)\n    {\n        if (rbx < arg2)\n        {\n            int64_t rax_6 = rbx;\n            uint64_t rdx_5 = 0;\n            do\n            {\n                rdx_5 = (rdx_5 + 1);\n                rax_6 = ((rax_6 << 8) + 0xff);\n            } while (arg2 > rax_6);\n            void var_40;\n            sub_4120b0(r12, &var_40, rdx_5);\n            void* rax_8 = &var_40;\n            do\n            {\n                uint64_t rdx_6 = *rax_8;\n                rax_8 = (rax_8 + 1);\n                rbx = ((rbx << 8) + 0xff);\n                rbp = ((rbp << 8) + rdx_6);\n            } while (arg2 > rbx);\n        }\n        if (((rbx >= arg2 && rbx == arg2) || (rbx < arg2 && rbx == arg2)))\n        {\n            arg1[2] = 0;\n            arg1[1] = 0;\n            break;\n        }\n        if (((rbx >= arg2 && rbx != arg2) || (rbx < arg2 && rbx != arg2)))\n        {\n            int64_t rdx_1 = 0;\n            int64_t rax_2 = (rbx - arg2);\n            uint64_t temp0_1 = (COMBINE(rdx_1, rax_2) / r14);\n            uint64_t temp1_1 = (COMBINE(rdx_1, rax_2) % r14);\n            int64_t rdx_3 = 0;\n            uint64_t temp0_2 = (COMBINE(rdx_3, rbp) / r14);\n            uint64_t temp1_2 = (COMBINE(rdx_3, rbp) % r14);\n            if (rbp <= (rbx - temp1_1))\n            {\n                arg1[1] = temp0_2;\n                rbp = temp1_2;\n                arg1[2] = temp0_1;\n                break;\n            }\n            rbx = (temp1_1 - 1);\n            rbp = temp1_2;\n        }\n    }\n    return rbp;\n}\n\n"
        },
        {
            "funcName": "sub_411cc0",
            "funcStartAddr": "0x411cc0",
            "funcEndAddr": "0x411cde",
            "decompiledFuncCode": "int64_t sub_411cc0(int64_t arg1)\n{\n    __explicit_bzero_chk(arg1, 0x18, -1);\n    /* tailcall */\n    return free(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_411ce0",
            "funcStartAddr": "0x411ce0",
            "funcEndAddr": "0x411d31",
            "decompiledFuncCode": "uint64_t sub_411ce0(int64_t* arg1)\n{\n    int32_t rax = sub_412210(*arg1);\n    int32_t* rax_1 = __errno_location();\n    int32_t r13 = *rax_1;\n    __explicit_bzero_chk(arg1, 0x18, -1);\n    free(arg1);\n    *rax_1 = r13;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_411d40",
            "funcStartAddr": "0x402a87",
            "funcEndAddr": "0x411d9d",
            "decompiledFuncCode": "int64_t sub_411d40(uint64_t arg1) __noreturn\n{\n    if (arg1 != 0)\n    {\n        int64_t rax_1 = sub_40e020(arg1);\n        int32_t* rax_2 = __errno_location();\n        char* rax_3;\n        if (*rax_2 == 0)\n        {\n            rax_3 = dcgettext(nullptr, \"%s: end of file\", 5);\n        }\n        else\n        {\n            rax_3 = dcgettext(nullptr, \"%s: read error\", 5);\n        }\n        error(data_61b3d0, *rax_2, rax_3, rax_1);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_411da0",
            "funcStartAddr": "0x411da0",
            "funcEndAddr": "0x41208f",
            "decompiledFuncCode": "FILE** sub_411da0(char* arg1, uint64_t arg2)\n{\n    FILE** rbx;\n    if (arg2 == 0)\n    {\n        FILE** rax_7 = sub_4100e0(0x1038);\n        rbx = rax_7;\n        *rax_7 = nullptr;\n        rax_7[1] = 0x411d40;\n        rax_7[2] = 0;\n    }\n    else\n    {\n        ssize_t r12_1 = arg1;\n        if (arg1 == 0)\n        {\n            FILE** rax_3 = sub_4100e0(0x1038);\n            *rax_3 = nullptr;\n            rbx = rax_3;\n            void* r13_2 = &rax_3[4];\n            rax_3[1] = 0x411d40;\n            rax_3[2] = 0;\n            rax_3[3] = 0;\n            int32_t rax_5 = open(\"/dev/urandom\", 0);\n            int128_t var_48;\n            ssize_t rbp_2;\n            int64_t rbp_6;\n            int64_t r14_1;\n            if (rax_5 < 0)\n            {\n                r14_1 = 0x14;\n                gettimeofday(&var_48, nullptr);\n                *(rbx + 0x20) = var_48;\n                int32_t rax_8 = getpid();\n                var_48 = rax_8;\n                rbx[6] = rax_8;\n            }\n            else\n            {\n                uint64_t rdx_1 = arg2;\n                if (arg2 > 0x800)\n                {\n                    rdx_1 = 0x800;\n                }\n                rbp_2 = __read_chk(rax_5, r13_2, rdx_1, 0x1018);\n                close(rax_5);\n                if (rbp_2 <= 0x7ff)\n                {\n                    if (rbp_2 < 0)\n                    {\n                        rbp_2 = r12_1;\n                    }\n                    int128_t* rdi_8 = &var_48;\n                    int64_t rcx_5 = (0x800 - rbp_2);\n                    void* r15_2 = (r13_2 + rbp_2);\n                    if (rcx_5 > 0x10)\n                    {\n                        rcx_5 = 0x10;\n                    }\n                    rbp_6 = (rbp_2 + rcx_5);\n                    gettimeofday(rdi_8, nullptr);\n                    void* rdi_9 = r15_2;\n                    void* rsi_5 = &var_48;\n                    for (uint64_t rcx_7 = rcx_5; rcx_7 != 0; rcx_7 = (rcx_7 - 1))\n                    {\n                        *rdi_9 = *rsi_5;\n                        rdi_9 = (rdi_9 + 1);\n                        rsi_5 = (rsi_5 + 1);\n                    }\n                    if (rbp_6 <= 0x7ff)\n                    {\n                        int64_t r14_3 = (0x800 - rbp_6);\n                        if (r14_3 > 4)\n                        {\n                            r14_3 = 4;\n                        }\n                        void* rsi_6 = &var_48;\n                        var_48 = getpid(rdi_9, rsi_5);\n                        uint64_t rcx_8 = r14_3;\n                        r14_1 = (r14_3 + rbp_6);\n                        void* rdi_10 = (r13_2 + rbp_6);\n                        for (; rcx_8 != 0; rcx_8 = (rcx_8 - 1))\n                        {\n                            *rdi_10 = *rsi_6;\n                            rdi_10 = (rdi_10 + 1);\n                            rsi_6 = (rsi_6 + 1);\n                        }\n                    }\n                }\n            }\n            if ((rax_5 < 0 || (((rax_5 >= 0 && rbp_2 <= 0x7ff) && rbp_6 <= 0x7ff) && r14_1 <= 0x7ff)))\n            {\n                int64_t rbp_3 = (0x800 - r14_1);\n                if (rbp_3 > 4)\n                {\n                    rbp_3 = 4;\n                }\n                void* rsi_2 = (r13_2 + r14_1);\n                var_48 = getppid();\n                int32_t rdi_5 = rbp_3;\n                if (rbp_3 != 0)\n                {\n                    int32_t rax_10 = 0;\n                    do\n                    {\n                        uint64_t rdx_2 = rax_10;\n                        rax_10 = (rax_10 + 1);\n                        *(rsi_2 + rdx_2) = *(&var_48 + rdx_2);\n                    } while (rax_10 < rdi_5);\n                }\n                int64_t rbp_4 = (rbp_3 + r14_1);\n                if (rbp_4 <= 0x7ff)\n                {\n                    int64_t r14_2 = (0x800 - rbp_4);\n                    if (r14_2 > 4)\n                    {\n                        r14_2 = 4;\n                    }\n                    void* rsi_3 = (r13_2 + rbp_4);\n                    var_48 = getuid();\n                    int32_t rdi_6 = r14_2;\n                    if (r14_2 != 0)\n                    {\n                        int32_t rax_12 = 0;\n                        do\n                        {\n                            uint64_t rdx_3 = rax_12;\n                            rax_12 = (rax_12 + 1);\n                            *(rsi_3 + rdx_3) = *(&var_48 + rdx_3);\n                        } while (rax_12 < rdi_6);\n                    }\n                    int64_t rbp_5 = (rbp_4 + r14_2);\n                    if (rbp_5 <= 0x7ff)\n                    {\n                        void* rsi_4 = (r13_2 + rbp_5);\n                        var_48 = getgid();\n                        int64_t rax_14 = (0x800 - rbp_5);\n                        if (rax_14 > 4)\n                        {\n                            rax_14 = 4;\n                        }\n                        int32_t rdi_7 = rax_14;\n                        if (rax_14 != 0)\n                        {\n                            int32_t rax_15 = 0;\n                            do\n                            {\n                                uint64_t rdx_4 = rax_15;\n                                rax_15 = (rax_15 + 1);\n                                *(rsi_4 + rdx_4) = *(&var_48 + rdx_4);\n                            } while (rax_15 < rdi_7);\n                        }\n                    }\n                }\n            }\n            sub_412510(r13_2);\n        }\n        else\n        {\n            FILE* rax = sub_4127e0(arg1, &data_41703c);\n            if (rax == 0)\n            {\n                rbx = nullptr;\n            }\n            else\n            {\n                FILE** rax_1 = sub_4100e0(0x1038);\n                uint64_t rcx_1 = 0x1000;\n                *rax_1 = rax;\n                if (arg2 <= 0x1000)\n                {\n                    rcx_1 = arg2;\n                }\n                rax_1[1] = 0x411d40;\n                rbx = rax_1;\n                rax_1[2] = r12_1;\n                setvbuf(rax, &rax_1[3], 0, rcx_1);\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_412090",
            "funcStartAddr": "0x412090",
            "funcEndAddr": "0x412095",
            "decompiledFuncCode": "int64_t sub_412090(void* arg1, int64_t arg2)\n{\n    *(arg1 + 8) = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_4120a0",
            "funcStartAddr": "0x4120a0",
            "funcEndAddr": "0x4120a5",
            "decompiledFuncCode": "int64_t sub_4120a0(void* arg1, int64_t arg2)\n{\n    *(arg1 + 0x10) = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_4120b0",
            "funcStartAddr": "0x4120b0",
            "funcEndAddr": "0x41220c",
            "decompiledFuncCode": "uint64_t sub_4120b0(int64_t* arg1, int64_t* arg2, uint64_t arg3)\n{\n    int64_t* rbp = arg2;\n    uint64_t rbx = arg3;\n    FILE* r13 = *arg1;\n    uint64_t rax_3;\n    if (r13 == 0)\n    {\n        uint64_t r15_1 = arg1[3];\n        int64_t* r13_1 = &arg1[0x107];\n        void* r14_1 = &arg1[4];\n        if (arg3 <= r15_1)\n        {\n            r13_1 = ((r13_1 - r15_1) + 0x800);\n        }\n        else\n        {\n            do\n            {\n                int64_t* rdi_2 = rbp;\n                rbp = (rbp + r15_1);\n                rbx = (rbx - r15_1);\n                memcpy(rdi_2, ((0x800 - r15_1) + r13_1), r15_1);\n                if ((rbp & 7) == 0)\n                {\n                    while (rbx > 0x7ff)\n                    {\n                        int64_t* rsi_3 = rbp;\n                        rbp = &rbp[0x100];\n                        int64_t* rax_4 = sub_412260(r14_1, rsi_3);\n                        uint64_t temp1_1 = rbx;\n                        rbx = (rbx - 0x800);\n                        if (temp1_1 == 0x800)\n                        {\n                            arg1[3] = 0;\n                            return rax_4;\n                        }\n                    }\n                    sub_412260(r14_1, r13_1);\n                    break;\n                }\n                r15_1 = 0x800;\n                sub_412260(r14_1, r13_1);\n            } while (rbx > 0x800);\n            r15_1 = 0x800;\n        }\n        rax_3 = memcpy(rbp, r13_1, rbx);\n        arg1[3] = (r15_1 - rbx);\n    }\n    else\n    {\n        int32_t* rax_1 = __errno_location();\n        while (true)\n        {\n            rax_3 = fread_unlocked(rbp, 1, rbx, r13);\n            int32_t rdx = *rax_1;\n            rbp = (rbp + rax_3);\n            uint64_t temp0_1 = rbx;\n            rbx = (rbx - rax_3);\n            if (temp0_1 == rax_3)\n            {\n                break;\n            }\n            int64_t rdi = arg1[2];\n            if ((**arg1 & 0x20) == 0)\n            {\n                rdx = 0;\n            }\n            *rax_1 = rdx;\n            arg1[1](rdi);\n            r13 = *arg1;\n        }\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_412210",
            "funcStartAddr": "0x412210",
            "funcEndAddr": "0x412259",
            "decompiledFuncCode": "int64_t sub_412210(int64_t* arg1)\n{\n    FILE* rbp = *arg1;\n    __explicit_bzero_chk(arg1, 0x1038, -1);\n    free(arg1);\n    if (rbp == 0)\n    {\n        return 0;\n    }\n    /* tailcall */\n    return sub_412760(rbp);\n}\n\n"
        },
        {
            "funcName": "sub_412260",
            "funcStartAddr": "0x412260",
            "funcEndAddr": "0x412505",
            "decompiledFuncCode": "int64_t* sub_412260(int64_t* arg1, int64_t* arg2)\n{\n    int64_t r11 = arg1[0x101];\n    void* r10 = &arg1[0x80];\n    int64_t rdx = arg1[0x100];\n    int64_t* r9 = arg2;\n    int64_t r8 = (arg1[0x102] + 1);\n    int64_t* rax = arg1;\n    arg1[0x102] = r8;\n    int64_t r11_1 = (r11 + r8);\n    do\n    {\n        int64_t rcx_3 = *rax;\n        int64_t rdx_3 = ((!(rdx ^ (rdx << 0x15))) + rax[0x80]);\n        int64_t r8_4 = ((*(arg1 + (rcx_3 & 0x7f8)) + rdx_3) + r11_1);\n        *rax = r8_4;\n        int64_t rbx_4 = (*(arg1 + ((r8_4 >> 8) & 0x7f8)) + rcx_3);\n        *r9 = rbx_4;\n        int64_t r8_7 = rax[1];\n        int64_t rdx_5 = ((rdx_3 ^ (rdx_3 >> 5)) + rax[0x81]);\n        int64_t rcx_6 = ((*(arg1 + (r8_7 & 0x7f8)) + rdx_5) + rbx_4);\n        rax[1] = rcx_6;\n        int64_t rbx_6 = (*(arg1 + ((rcx_6 >> 8) & 0x7f8)) + r8_7);\n        r9[1] = rbx_6;\n        int64_t rcx_9 = rax[2];\n        int64_t rdx_11 = (((rdx_5 << 0xc) ^ rdx_5) + rax[0x82]);\n        int64_t r8_11 = ((*(arg1 + (rcx_9 & 0x7f8)) + rdx_11) + rbx_6);\n        rax[2] = r8_11;\n        int64_t rcx_10 = (rcx_9 + *(arg1 + ((r8_11 >> 8) & 0x7f8)));\n        r9[2] = rcx_10;\n        int64_t r8_14 = rax[3];\n        rdx = ((rdx_11 ^ (rdx_11 >> 0x21)) + rax[0x83]);\n        int64_t rcx_16 = ((*(arg1 + (r8_14 & 0x7f8)) + rdx) + rcx_10);\n        rax = &rax[4];\n        r9 = &r9[4];\n        rax[-1] = rcx_16;\n        r11_1 = (*(arg1 + ((rcx_16 >> 8) & 0x7f8)) + r8_14);\n        r9[-1] = r11_1;\n    } while (rax != r10);\n    void* rsi = &arg2[0x80];\n    void* r9_1 = &arg1[0x100];\n    do\n    {\n        int64_t rcx_21 = *rax;\n        int64_t rdx_15 = ((!(rdx ^ (rdx << 0x15))) + rax[-0x80]);\n        int64_t r8_18 = ((*(arg1 + (rcx_21 & 0x7f8)) + rdx_15) + r11_1);\n        *rax = r8_18;\n        int64_t rcx_22 = (rcx_21 + *(arg1 + ((r8_18 >> 8) & 0x7f8)));\n        *rsi = rcx_22;\n        int64_t r8_21 = rax[1];\n        int64_t rdx_17 = ((rdx_15 ^ (rdx_15 >> 5)) + rax[-0x7f]);\n        int64_t rcx_25 = ((*(arg1 + (r8_21 & 0x7f8)) + rdx_17) + rcx_22);\n        rax[1] = rcx_25;\n        int64_t r11_11 = (*(arg1 + ((rcx_25 >> 8) & 0x7f8)) + r8_21);\n        *(rsi + 8) = r11_11;\n        int64_t rcx_28 = rax[2];\n        int64_t rdx_23 = (((rdx_17 << 0xc) ^ rdx_17) + rax[-0x7e]);\n        int64_t r8_25 = ((*(arg1 + (rcx_28 & 0x7f8)) + rdx_23) + r11_11);\n        rax[2] = r8_25;\n        int64_t rcx_29 = (rcx_28 + *(arg1 + ((r8_25 >> 8) & 0x7f8)));\n        *(rsi + 0x10) = rcx_29;\n        int64_t r8_28 = rax[3];\n        rdx = ((rdx_23 ^ (rdx_23 >> 0x21)) + rax[-0x7d]);\n        int64_t rcx_35 = ((*(arg1 + (r8_28 & 0x7f8)) + rdx) + rcx_29);\n        rax = &rax[4];\n        rsi = (rsi + 0x20);\n        rax[-1] = rcx_35;\n        r11_1 = (*(arg1 + ((rcx_35 >> 8) & 0x7f8)) + r8_28);\n        *(rsi - 8) = r11_1;\n    } while (rax != r9_1);\n    arg1[0x100] = rdx;\n    arg1[0x101] = r11_1;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_412510",
            "funcStartAddr": "0x412510",
            "funcEndAddr": "0x412744",
            "decompiledFuncCode": "int64_t sub_412510(int64_t* arg1)\n{\n    int64_t* rdx = arg1;\n    int64_t* rax = arg1;\n    int64_t rcx = -0x670a8fb093bb3f55;\n    int64_t rsi = -0x7d0fac247caa1f32;\n    int64_t r11 = -0x4d64d17db5a6aadc;\n    int64_t r12 = -0x5167a40d34037613;\n    int64_t r10 = -0x73f15afac2b8ed60;\n    int64_t r9 = -0x46074cdd38c5379e;\n    void* rbp = &arg1[0x100];\n    int64_t r8 = 0x647c4677a2884b7c;\n    int64_t rbx = 0x48fe4a0fa5a09315;\n    do\n    {\n        int64_t rsi_1 = (rsi + rax[4]);\n        int64_t rcx_1 = (rcx + rax[7]);\n        int64_t r8_1 = (r8 + (*rax - rsi_1));\n        int64_t rbx_2 = ((rbx + rax[5]) ^ (rcx_1 >> 9));\n        int64_t r9_1 = (r9 + (rax[1] - rbx_2));\n        int64_t r12_2 = ((r12 + rax[6]) ^ (r8_1 << 9));\n        int64_t r10_1 = (r10 + (rax[2] - r12_2));\n        int64_t rcx_3 = ((rcx_1 + r8_1) ^ (r9_1 >> 0x17));\n        int64_t r11_1 = (r11 + (rax[3] - rcx_3));\n        r8 = ((r8_1 + r9_1) ^ (r10_1 << 0xf));\n        int64_t rsi_2 = (rsi_1 - r8);\n        *rax = r8;\n        r9 = ((r9_1 + r10_1) ^ (r11_1 >> 0xe));\n        int64_t rbx_3 = (rbx_2 - r9);\n        rax[1] = r9;\n        r10 = ((r10_1 + r11_1) ^ (rsi_2 << 0x14));\n        int64_t r12_3 = (r12_2 - r10);\n        rax[2] = r10;\n        rax = &rax[8];\n        r11 = ((r11_1 + rsi_2) ^ (rbx_3 >> 0x11));\n        rbx = (rbx_3 + r12_3);\n        rcx = (rcx_3 - r11);\n        rax[-5] = r11;\n        rsi = ((r12_3 << 0xe) ^ (rsi_2 + rbx_3));\n        r12 = (r12_3 + rcx);\n        rax[-3] = rbx;\n        rax[-4] = rsi;\n        rax[-2] = r12;\n        rax[-1] = rcx;\n    } while (rbp != rax);\n    int64_t rax_13;\n    do\n    {\n        int64_t rcx_4 = (rcx + rdx[7]);\n        int64_t rsi_7 = (rsi + rdx[4]);\n        int64_t r8_4 = ((r8 + *rdx) - rsi_7);\n        int64_t rbx_5 = ((rbx + rdx[5]) ^ (rcx_4 >> 9));\n        int64_t r9_4 = ((r9 + rdx[1]) - rbx_5);\n        int64_t r12_5 = ((r12 + rdx[6]) ^ (r8_4 << 9));\n        int64_t r10_4 = ((r10 + rdx[2]) - r12_5);\n        int64_t rcx_6 = ((rcx_4 + r8_4) ^ (r9_4 >> 0x17));\n        int64_t r11_4 = ((r11 + rdx[3]) - rcx_6);\n        r8 = ((r8_4 + r9_4) ^ (r10_4 << 0xf));\n        int64_t rsi_8 = (rsi_7 - r8);\n        *rdx = r8;\n        r9 = ((r9_4 + r10_4) ^ (r11_4 >> 0xe));\n        int64_t rbx_6 = (rbx_5 - r9);\n        rdx[1] = r9;\n        r10 = ((r10_4 + r11_4) ^ (rsi_8 << 0x14));\n        rax_13 = (rsi_8 + rbx_6);\n        int64_t r12_6 = (r12_5 - r10);\n        rdx[2] = r10;\n        rdx = &rdx[8];\n        r11 = ((r11_4 + rsi_8) ^ (rbx_6 >> 0x11));\n        rbx = (rbx_6 + r12_6);\n        rcx = (rcx_6 - r11);\n        rdx[-5] = r11;\n        rsi = ((r12_6 << 0xe) ^ rax_13);\n        r12 = (r12_6 + rcx);\n        rdx[-3] = rbx;\n        rdx[-4] = rsi;\n        rdx[-2] = r12;\n        rdx[-1] = rcx;\n    } while (rbp != rdx);\n    arg1[0x102] = 0;\n    arg1[0x101] = 0;\n    arg1[0x100] = 0;\n    return rax_13;\n}\n\n"
        },
        {
            "funcName": "sub_412750",
            "funcStartAddr": "0x412750",
            "funcEndAddr": "0x41275e",
            "decompiledFuncCode": "int64_t sub_412750(int32_t arg1)\n{\n    /* tailcall */\n    return sub_4103e0(arg1, 0, 3);\n}\n\n"
        },
        {
            "funcName": "sub_412760",
            "funcStartAddr": "0x412760",
            "funcEndAddr": "0x4127db",
            "decompiledFuncCode": "int64_t sub_412760(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_410520(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_4127e0",
            "funcStartAddr": "0x4127e0",
            "funcEndAddr": "0x412873",
            "decompiledFuncCode": "FILE* sub_4127e0(char* arg1, char* arg2)\n{\n    FILE* rax = fopen(arg1, arg2);\n    FILE* rbx = rax;\n    if (rax != 0)\n    {\n        int32_t rax_1 = fileno(rax);\n        if (rax_1 <= 2)\n        {\n            int32_t rax_3 = sub_412750(rax_1);\n            if (rax_3 < 0)\n            {\n                int32_t* rax_7 = __errno_location();\n                FILE* rdi_5 = rbx;\n                rbx = nullptr;\n                int32_t r12_2 = *rax_7;\n                sub_412760(rdi_5);\n                *rax_7 = r12_2;\n            }\n            else\n            {\n                int32_t rax_4 = sub_412760(rbx);\n                FILE* rax_5;\n                if (rax_4 == 0)\n                {\n                    rax_5 = fdopen(rax_3, arg2);\n                    rbx = rax_5;\n                }\n                if ((rax_4 != 0 || (rax_4 == 0 && rax_5 == 0)))\n                {\n                    int32_t* rax_6 = __errno_location();\n                    int32_t rbp_1 = *rax_6;\n                    close(rax_3);\n                    *rax_6 = rbp_1;\n                    rbx = nullptr;\n                }\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x412880",
            "funcEndAddr": "0x4128dd",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x4128e0",
            "funcEndAddr": "0x4128e1",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_4128f0",
            "funcStartAddr": "0x4128f0",
            "funcEndAddr": "0x412908",
            "decompiledFuncCode": "int64_t sub_4128f0(void (* arg1)(void*))\n{\n    int64_t rdx = data_61b3a8;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_412908",
            "funcStartAddr": "0x412908",
            "funcEndAddr": "0x412928",
            "decompiledFuncCode": "int64_t sub_412908(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_61ae30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}