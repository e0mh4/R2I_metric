{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 189,
    "funcInfo": [
        {
            "funcName": "sub_401890",
            "funcStartAddr": "0x401890",
            "funcEndAddr": "0x40189c",
            "decompiledFuncCode": "int64_t sub_401890()\n{\n    int64_t var_8 = data_614008;\n    /* jump -> data_614010 */\n}\n\n"
        },
        {
            "funcName": "sub_4018a6",
            "funcStartAddr": "0x4018a6",
            "funcEndAddr": "0x4018b0",
            "decompiledFuncCode": "int64_t sub_4018a6()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_4018b6",
            "funcStartAddr": "0x4018b6",
            "funcEndAddr": "0x4018c0",
            "decompiledFuncCode": "int64_t sub_4018b6()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_4018c6",
            "funcStartAddr": "0x4018c6",
            "funcEndAddr": "0x4018d0",
            "decompiledFuncCode": "int64_t sub_4018c6()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_4018d6",
            "funcStartAddr": "0x4018d6",
            "funcEndAddr": "0x4018e0",
            "decompiledFuncCode": "int64_t sub_4018d6()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_4018e6",
            "funcStartAddr": "0x4018e6",
            "funcEndAddr": "0x4018f0",
            "decompiledFuncCode": "int64_t sub_4018e6()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401916",
            "funcStartAddr": "0x401916",
            "funcEndAddr": "0x401920",
            "decompiledFuncCode": "int64_t sub_401916()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401926",
            "funcStartAddr": "0x401926",
            "funcEndAddr": "0x401930",
            "decompiledFuncCode": "int64_t sub_401926()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401936",
            "funcStartAddr": "0x401936",
            "funcEndAddr": "0x401940",
            "decompiledFuncCode": "int64_t sub_401936()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401946",
            "funcStartAddr": "0x401946",
            "funcEndAddr": "0x401950",
            "decompiledFuncCode": "int64_t sub_401946()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401956",
            "funcStartAddr": "0x401956",
            "funcEndAddr": "0x401960",
            "decompiledFuncCode": "int64_t sub_401956()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401966",
            "funcStartAddr": "0x401966",
            "funcEndAddr": "0x401970",
            "decompiledFuncCode": "int64_t sub_401966()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401976",
            "funcStartAddr": "0x401976",
            "funcEndAddr": "0x401980",
            "decompiledFuncCode": "int64_t sub_401976()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401986",
            "funcStartAddr": "0x401986",
            "funcEndAddr": "0x401990",
            "decompiledFuncCode": "int64_t sub_401986()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401996",
            "funcStartAddr": "0x401996",
            "funcEndAddr": "0x4019a0",
            "decompiledFuncCode": "int64_t sub_401996()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_4019a6",
            "funcStartAddr": "0x4019a6",
            "funcEndAddr": "0x4019b0",
            "decompiledFuncCode": "int64_t sub_4019a6()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_4019b6",
            "funcStartAddr": "0x4019b6",
            "funcEndAddr": "0x4019c0",
            "decompiledFuncCode": "int64_t sub_4019b6()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_4019c6",
            "funcStartAddr": "0x4019c6",
            "funcEndAddr": "0x4019d0",
            "decompiledFuncCode": "int64_t sub_4019c6()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_4019d6",
            "funcStartAddr": "0x4019d6",
            "funcEndAddr": "0x4019e0",
            "decompiledFuncCode": "int64_t sub_4019d6()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_4019e6",
            "funcStartAddr": "0x4019e6",
            "funcEndAddr": "0x4019f0",
            "decompiledFuncCode": "int64_t sub_4019e6()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_4019f6",
            "funcStartAddr": "0x4019f6",
            "funcEndAddr": "0x401a00",
            "decompiledFuncCode": "int64_t sub_4019f6()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401a06",
            "funcStartAddr": "0x401a06",
            "funcEndAddr": "0x401a10",
            "decompiledFuncCode": "int64_t sub_401a06()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401a16",
            "funcStartAddr": "0x401a16",
            "funcEndAddr": "0x401a20",
            "decompiledFuncCode": "int64_t sub_401a16()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401a26",
            "funcStartAddr": "0x401a26",
            "funcEndAddr": "0x401a30",
            "decompiledFuncCode": "int64_t sub_401a26()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401a36",
            "funcStartAddr": "0x401a36",
            "funcEndAddr": "0x401a40",
            "decompiledFuncCode": "int64_t sub_401a36()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401a46",
            "funcStartAddr": "0x401a46",
            "funcEndAddr": "0x401a50",
            "decompiledFuncCode": "int64_t sub_401a46()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401a56",
            "funcStartAddr": "0x401a56",
            "funcEndAddr": "0x401a60",
            "decompiledFuncCode": "int64_t sub_401a56()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401a66",
            "funcStartAddr": "0x401a66",
            "funcEndAddr": "0x401a70",
            "decompiledFuncCode": "int64_t sub_401a66()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401a76",
            "funcStartAddr": "0x401a76",
            "funcEndAddr": "0x401a80",
            "decompiledFuncCode": "int64_t sub_401a76()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401a86",
            "funcStartAddr": "0x401a86",
            "funcEndAddr": "0x401a90",
            "decompiledFuncCode": "int64_t sub_401a86()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401a96",
            "funcStartAddr": "0x401a96",
            "funcEndAddr": "0x401aa0",
            "decompiledFuncCode": "int64_t sub_401a96()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401aa6",
            "funcStartAddr": "0x401aa6",
            "funcEndAddr": "0x401ab0",
            "decompiledFuncCode": "int64_t sub_401aa6()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401ab6",
            "funcStartAddr": "0x401ab6",
            "funcEndAddr": "0x401ac0",
            "decompiledFuncCode": "int64_t sub_401ab6()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401ac6",
            "funcStartAddr": "0x401ac6",
            "funcEndAddr": "0x401ad0",
            "decompiledFuncCode": "int64_t sub_401ac6()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401ad6",
            "funcStartAddr": "0x401ad6",
            "funcEndAddr": "0x401ae0",
            "decompiledFuncCode": "int64_t sub_401ad6()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401ae6",
            "funcStartAddr": "0x401ae6",
            "funcEndAddr": "0x401af0",
            "decompiledFuncCode": "int64_t sub_401ae6()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401af6",
            "funcStartAddr": "0x401af6",
            "funcEndAddr": "0x401b00",
            "decompiledFuncCode": "int64_t sub_401af6()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401b06",
            "funcStartAddr": "0x401b06",
            "funcEndAddr": "0x401b10",
            "decompiledFuncCode": "int64_t sub_401b06()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401b16",
            "funcStartAddr": "0x401b16",
            "funcEndAddr": "0x401b20",
            "decompiledFuncCode": "int64_t sub_401b16()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401b26",
            "funcStartAddr": "0x401b26",
            "funcEndAddr": "0x401b30",
            "decompiledFuncCode": "int64_t sub_401b26()\n{\n    int64_t var_8 = 0x28;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401b36",
            "funcStartAddr": "0x401b36",
            "funcEndAddr": "0x401b40",
            "decompiledFuncCode": "int64_t sub_401b36()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401b46",
            "funcStartAddr": "0x401b46",
            "funcEndAddr": "0x401b50",
            "decompiledFuncCode": "int64_t sub_401b46()\n{\n    int64_t var_8 = 0x2a;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401b56",
            "funcStartAddr": "0x401b56",
            "funcEndAddr": "0x401b60",
            "decompiledFuncCode": "int64_t sub_401b56()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401b66",
            "funcStartAddr": "0x401b66",
            "funcEndAddr": "0x401b70",
            "decompiledFuncCode": "int64_t sub_401b66()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401b76",
            "funcStartAddr": "0x401b76",
            "funcEndAddr": "0x401b80",
            "decompiledFuncCode": "int64_t sub_401b76()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401b86",
            "funcStartAddr": "0x401b86",
            "funcEndAddr": "0x401b90",
            "decompiledFuncCode": "int64_t sub_401b86()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401b96",
            "funcStartAddr": "0x401b96",
            "funcEndAddr": "0x401ba0",
            "decompiledFuncCode": "int64_t sub_401b96()\n{\n    int64_t var_8 = 0x2f;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401ba6",
            "funcStartAddr": "0x401ba6",
            "funcEndAddr": "0x401bb0",
            "decompiledFuncCode": "int64_t sub_401ba6()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401bb6",
            "funcStartAddr": "0x401bb6",
            "funcEndAddr": "0x401bc0",
            "decompiledFuncCode": "int64_t sub_401bb6()\n{\n    int64_t var_8 = 0x31;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401bc6",
            "funcStartAddr": "0x401bc6",
            "funcEndAddr": "0x401bd0",
            "decompiledFuncCode": "int64_t sub_401bc6()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401bd6",
            "funcStartAddr": "0x401bd6",
            "funcEndAddr": "0x401be0",
            "decompiledFuncCode": "int64_t sub_401bd6()\n{\n    int64_t var_8 = 0x33;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401be6",
            "funcStartAddr": "0x401be6",
            "funcEndAddr": "0x401bf0",
            "decompiledFuncCode": "int64_t sub_401be6()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401c16",
            "funcStartAddr": "0x401c16",
            "funcEndAddr": "0x401c20",
            "decompiledFuncCode": "int64_t sub_401c16()\n{\n    int64_t var_8 = 0x37;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401c26",
            "funcStartAddr": "0x401c26",
            "funcEndAddr": "0x401c30",
            "decompiledFuncCode": "int64_t sub_401c26()\n{\n    int64_t var_8 = 0x38;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401c36",
            "funcStartAddr": "0x401c36",
            "funcEndAddr": "0x401c40",
            "decompiledFuncCode": "int64_t sub_401c36()\n{\n    int64_t var_8 = 0x39;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401c46",
            "funcStartAddr": "0x401c46",
            "funcEndAddr": "0x401c50",
            "decompiledFuncCode": "int64_t sub_401c46()\n{\n    int64_t var_8 = 0x3a;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401c56",
            "funcStartAddr": "0x401c56",
            "funcEndAddr": "0x401c60",
            "decompiledFuncCode": "int64_t sub_401c56()\n{\n    int64_t var_8 = 0x3b;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401c66",
            "funcStartAddr": "0x401c66",
            "funcEndAddr": "0x401c70",
            "decompiledFuncCode": "int64_t sub_401c66()\n{\n    int64_t var_8 = 0x3c;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401c76",
            "funcStartAddr": "0x401c76",
            "funcEndAddr": "0x401c80",
            "decompiledFuncCode": "int64_t sub_401c76()\n{\n    int64_t var_8 = 0x3d;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401c86",
            "funcStartAddr": "0x401c86",
            "funcEndAddr": "0x401c90",
            "decompiledFuncCode": "int64_t sub_401c86()\n{\n    int64_t var_8 = 0x3e;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401c96",
            "funcStartAddr": "0x401c96",
            "funcEndAddr": "0x401ca0",
            "decompiledFuncCode": "int64_t sub_401c96()\n{\n    int64_t var_8 = 0x3f;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401ca6",
            "funcStartAddr": "0x401ca6",
            "funcEndAddr": "0x401cb0",
            "decompiledFuncCode": "int64_t sub_401ca6()\n{\n    int64_t var_8 = 0x40;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401cb6",
            "funcStartAddr": "0x401cb6",
            "funcEndAddr": "0x401cc0",
            "decompiledFuncCode": "int64_t sub_401cb6()\n{\n    int64_t var_8 = 0x41;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401cc6",
            "funcStartAddr": "0x401cc6",
            "funcEndAddr": "0x401cd0",
            "decompiledFuncCode": "int64_t sub_401cc6()\n{\n    int64_t var_8 = 0x42;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401cd6",
            "funcStartAddr": "0x401cd6",
            "funcEndAddr": "0x401ce0",
            "decompiledFuncCode": "int64_t sub_401cd6()\n{\n    int64_t var_8 = 0x43;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "sub_401ce6",
            "funcStartAddr": "0x401ce6",
            "funcEndAddr": "0x401cf0",
            "decompiledFuncCode": "int64_t sub_401ce6()\n{\n    int64_t var_8 = 0x44;\n    /* tailcall */\n    return sub_401890();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x401d40",
            "funcEndAddr": "0x4025d0",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    char** r15 = nullptr;\n    int64_t var_40 = 0;\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_407110(*argv);\n    int32_t var_58;\n    int32_t var_50;\n    setlocale(6, &data_40ce63, rdx, rcx, r8, r9, var_58, var_50);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    sub_40cd90(sub_4053d0);\n    if (argc > 1)\n    {\n        r15 = sub_409300(((argc - 1) << 3));\n    }\n    char var_49 = 0;\n    int64_t rbx = 0;\n    char* r13 = nullptr;\n    int32_t r14 = 0;\n    char var_4a = 0;\n    char var_4b = 0;\n    while (true)\n    {\n        int32_t var_44 = 0xffffffff;\n        int32_t rax_2 = getopt_long(argc, argv, \"-0123456789D:FJN:S::TW:abcde::fh\u2026\", &data_40ebe0, &var_44);\n        if (rax_2 != 0xffffffff)\n        {\n            uint64_t rax_3 = (rax_2 - 0x30);\n            if (rax_3 <= 9)\n            {\n                int64_t rcx_2 = (rbx + 1);\n                if (rcx_2 >= var_40)\n                {\n                    r13 = sub_409460(r13, &var_40);\n                }\n                r13[rbx] = rax_2;\n                rbx = rcx_2;\n                r13[rcx_2] = 0;\n                continue;\n            }\n            else\n            {\n                uint64_t rdx_2 = (rax_2 + 0x83);\n                if (rdx_2 > 0x104)\n                {\n                label_40252f:\n                    sub_404de0(1);\n                    /* no return */\n                }\n                switch (rdx_2)\n                {\n                    case 0:\n                    {\n                        uint64_t var_60 = rax_3;\n                        int64_t var_68 = 0;\n                        sub_4091c0(stdout, &data_40ce7a, \"GNU coreutils\", data_6142b8);\n                        exit(0);\n                        /* no return */\n                    }\n                    case 1:\n                    {\n                        sub_404de0(0);\n                        /* no return */\n                    }\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 0xa:\n                    case 0xb:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x25:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x32:\n                    case 0x33:\n                    case 0x34:\n                    case 0x35:\n                    case 0x36:\n                    case 0x37:\n                    case 0x38:\n                    case 0x39:\n                    case 0x3a:\n                    case 0x3b:\n                    case 0x3c:\n                    case 0x3d:\n                    case 0x3e:\n                    case 0x3f:\n                    case 0x40:\n                    case 0x41:\n                    case 0x42:\n                    case 0x43:\n                    case 0x44:\n                    case 0x45:\n                    case 0x46:\n                    case 0x47:\n                    case 0x48:\n                    case 0x49:\n                    case 0x4a:\n                    case 0x4b:\n                    case 0x4c:\n                    case 0x4d:\n                    case 0x4e:\n                    case 0x4f:\n                    case 0x50:\n                    case 0x51:\n                    case 0x52:\n                    case 0x53:\n                    case 0x54:\n                    case 0x55:\n                    case 0x56:\n                    case 0x57:\n                    case 0x58:\n                    case 0x59:\n                    case 0x5a:\n                    case 0x5b:\n                    case 0x5c:\n                    case 0x5d:\n                    case 0x5e:\n                    case 0x5f:\n                    case 0x60:\n                    case 0x61:\n                    case 0x62:\n                    case 0x63:\n                    case 0x64:\n                    case 0x65:\n                    case 0x66:\n                    case 0x67:\n                    case 0x68:\n                    case 0x69:\n                    case 0x6a:\n                    case 0x6b:\n                    case 0x6c:\n                    case 0x6d:\n                    case 0x6e:\n                    case 0x6f:\n                    case 0x70:\n                    case 0x71:\n                    case 0x72:\n                    case 0x73:\n                    case 0x74:\n                    case 0x75:\n                    case 0x76:\n                    case 0x77:\n                    case 0x78:\n                    case 0x79:\n                    case 0x7a:\n                    case 0x7b:\n                    case 0x7c:\n                    case 0x7d:\n                    case 0x7e:\n                    case 0x7f:\n                    case 0x80:\n                    case 0x81:\n                    case 0x83:\n                    case 0x85:\n                    case 0x86:\n                    case 0x87:\n                    case 0x88:\n                    case 0x89:\n                    case 0x8a:\n                    case 0x8b:\n                    case 0x8c:\n                    case 0x8d:\n                    case 0x8e:\n                    case 0x8f:\n                    case 0x90:\n                    case 0x91:\n                    case 0x92:\n                    case 0x93:\n                    case 0x94:\n                    case 0x95:\n                    case 0x96:\n                    case 0x97:\n                    case 0x98:\n                    case 0x99:\n                    case 0x9a:\n                    case 0x9b:\n                    case 0x9c:\n                    case 0x9d:\n                    case 0x9e:\n                    case 0x9f:\n                    case 0xa0:\n                    case 0xa1:\n                    case 0xa2:\n                    case 0xa3:\n                    case 0xa4:\n                    case 0xa5:\n                    case 0xa6:\n                    case 0xa7:\n                    case 0xa8:\n                    case 0xa9:\n                    case 0xaa:\n                    case 0xab:\n                    case 0xac:\n                    case 0xad:\n                    case 0xae:\n                    case 0xaf:\n                    case 0xb0:\n                    case 0xb1:\n                    case 0xb2:\n                    case 0xb3:\n                    case 0xb4:\n                    case 0xb5:\n                    case 0xb6:\n                    case 0xb7:\n                    case 0xb8:\n                    case 0xb9:\n                    case 0xba:\n                    case 0xbb:\n                    case 0xbc:\n                    case 0xbd:\n                    case 0xbe:\n                    case 0xbf:\n                    case 0xc0:\n                    case 0xc1:\n                    case 0xc2:\n                    case 0xc3:\n                    case 0xc4:\n                    case 0xc5:\n                    case 0xc6:\n                    case 0xc8:\n                    case 0xca:\n                    case 0xcb:\n                    case 0xcc:\n                    case 0xce:\n                    case 0xcf:\n                    case 0xd0:\n                    case 0xd2:\n                    case 0xd3:\n                    case 0xd4:\n                    case 0xd5:\n                    case 0xd8:\n                    case 0xd9:\n                    case 0xdb:\n                    case 0xdc:\n                    case 0xdd:\n                    case 0xde:\n                    case 0xdf:\n                    case 0xe0:\n                    case 0xe1:\n                    case 0xe2:\n                    case 0xe3:\n                    case 0xea:\n                    case 0xed:\n                    case 0xee:\n                    case 0xf3:\n                    case 0xf4:\n                    case 0xf8:\n                    case 0xfb:\n                    case 0xfc:\n                    case 0xfd:\n                    case 0xfe:\n                    case 0xff:\n                    case 0x100:\n                    case 0x101:\n                    case 0x102:\n                    {\n                        goto label_40252f;\n                    }\n                    case 0x84:\n                    {\n                        int64_t rax_16 = data_614630;\n                        char rax_21;\n                        if ((data_614418 == 0 && *rax_16 == 0x2b))\n                        {\n                            rax_21 = sub_402820(0xfffffffe, 0x2b, (rax_16 + 1));\n                            if (rax_21 == 0)\n                            {\n                                rax_16 = data_614630;\n                            }\n                        }\n                        if (((((data_614418 == 0 && *rax_16 == 0x2b) && rax_21 == 0) || data_614418 != 0) || (data_614418 == 0 && *rax_16 != 0x2b)))\n                        {\n                            uint64_t rdx_4 = r14;\n                            rbx = 0;\n                            r14 = (r14 + 1);\n                            r15[rdx_4] = rax_16;\n                            continue;\n                        }\n                        goto label_401e44;\n                    }\n                    case 0xc7:\n                    {\n                        rbx = 0;\n                        data_6143c0 = data_614630;\n                        continue;\n                    }\n                    case 0xc9:\n                    case 0xe9:\n                    {\n                        data_614447 = 1;\n                        rbx = 0;\n                        continue;\n                    }\n                    case 0xcd:\n                    {\n                        data_61443c = 1;\n                        rbx = 0;\n                        continue;\n                    }\n                    case 0xd1:\n                    {\n                        rbx = 0;\n                        data_614280 = 0;\n                        data_61427c = sub_409680(data_614630, -0x80000000, 0x7fffffff, &data_40ce63, dcgettext(nullptr, \"'-N NUMBER' invalid starting lin\u2026\", 5), 0);\n                        continue;\n                    }\n                    case 0xd6:\n                    {\n                        int64_t rdi_14 = data_614630;\n                        data_6143e0 = 1;\n                        data_614270 = 0x40ce63;\n                        data_6143dc = 0;\n                        var_49 = 0;\n                        if (rdi_14 != 0)\n                        {\n                            sub_402920(rdi_14);\n                            rbx = 0;\n                            continue;\n                        }\n                        goto label_401e44;\n                    }\n                    case 0xd7:\n                    {\n                        data_6142b5 = 0;\n                        rbx = 0;\n                        data_61444a = 0;\n                        continue;\n                    }\n                    case 0xda:\n                    {\n                        rbx = 0;\n                        data_61443d = 1;\n                        var_4a = 0;\n                        data_6142ac = sub_409680(data_614630, 1, 0x7fffffff, &data_40ce63, dcgettext(nullptr, \"'-W PAGE_WIDTH' invalid number o\u2026\", 5), 0);\n                        continue;\n                    }\n                    case 0xe4:\n                    {\n                        data_614445 = 1;\n                        rbx = 0;\n                        data_6142b4 = 0;\n                        continue;\n                    }\n                    case 0xe5:\n                    {\n                        data_614444 = 1;\n                        rbx = 0;\n                        continue;\n                    }\n                    case 0xe6:\n                    {\n                        data_6143e9 = 1;\n                        rbx = 0;\n                        continue;\n                    }\n                    case 0xe7:\n                    {\n                        data_6143e8 = 1;\n                        rbx = 0;\n                        continue;\n                    }\n                    case 0xe8:\n                    {\n                        int64_t rdi_18 = data_614630;\n                        if (rdi_18 != 0)\n                        {\n                            sub_4052e0(rdi_18, 0x65, &data_6142a8, &data_6142a4);\n                        }\n                        data_614435 = 1;\n                        rbx = 0;\n                        continue;\n                    }\n                    case 0xeb:\n                    {\n                        rbx = 0;\n                        data_6143c8 = data_614630;\n                        continue;\n                    }\n                    case 0xec:\n                    {\n                        int64_t rdi_13 = data_614630;\n                        if (rdi_13 != 0)\n                        {\n                            sub_4052e0(rdi_13, 0x69, &data_6142a0, &data_61429c);\n                        }\n                        data_614434 = 1;\n                        rbx = 0;\n                        continue;\n                    }\n                    case 0xef:\n                    {\n                        rbx = 0;\n                        data_6142b0 = sub_409680(data_614630, 1, 0x7fffffff, &data_40ce63, dcgettext(nullptr, \"'-l PAGE_LENGTH' invalid number \u2026\", 5), 0);\n                        continue;\n                    }\n                    case 0xf0:\n                    {\n                        data_61444f = 1;\n                        rbx = 0;\n                        data_6142b4 = 0;\n                        continue;\n                    }\n                    case 0xf1:\n                    {\n                        int64_t rdi_11 = data_614630;\n                        data_6143fc = 1;\n                        if (rdi_11 != 0)\n                        {\n                            rbx = 0;\n                            sub_4052e0(rdi_11, 0x6e, &data_614288, &data_614278);\n                            continue;\n                        }\n                        goto label_401e44;\n                    }\n                    case 0xf2:\n                    {\n                        rbx = 0;\n                        data_61442c = sub_409680(data_614630, 0, 0x7fffffff, &data_40ce63, dcgettext(nullptr, \"'-o MARGIN' invalid line offset\", 5), 0);\n                        continue;\n                    }\n                    case 0xf5:\n                    {\n                        data_6143e1 = 1;\n                        rbx = 0;\n                        continue;\n                    }\n                    case 0xf6:\n                    {\n                        char rax_7 = data_6143e0;\n                        var_4b = rax_7;\n                        var_49 = rax_7;\n                        if (rax_7 == 0)\n                        {\n                            int64_t rdi_9 = data_614630;\n                            if (rdi_9 == 0)\n                            {\n                                var_49 = 1;\n                                rbx = 0;\n                                var_4b = 1;\n                                continue;\n                            }\n                            else\n                            {\n                                sub_402920(rdi_9);\n                                rbx = 0;\n                                var_49 = 1;\n                                var_4b = 1;\n                                continue;\n                            }\n                        }\n                        goto label_401e44;\n                    }\n                    case 0xf7:\n                    {\n                        data_6142b5 = 0;\n                        rbx = 0;\n                        data_61444a = 1;\n                        continue;\n                    }\n                    case 0xf9:\n                    {\n                        data_6143ea = 1;\n                        rbx = 0;\n                        continue;\n                    }\n                    case 0xfa:\n                    {\n                        int32_t rax_6 = sub_409680(data_614630, 1, 0x7fffffff, &data_40ce63, dcgettext(nullptr, \"'-w PAGE_WIDTH' invalid number o\u2026\", 5), 0);\n                        char rbx_1 = data_61443d;\n                        var_4b = rbx_1;\n                        var_4a = rbx_1;\n                        if (rbx_1 == 0)\n                        {\n                            data_6142ac = rax_6;\n                            rbx = 0;\n                            var_4a = 1;\n                            var_4b = 1;\n                            continue;\n                        }\n                        goto label_401e44;\n                    }\n                    case 0x103:\n                    {\n                        rbx = 0;\n                        sub_402950(data_614630);\n                        char* rdi_7 = r13;\n                        r13 = nullptr;\n                        free(rdi_7);\n                        var_40 = 0;\n                        continue;\n                    }\n                    case 0x104:\n                    {\n                        char* rdx_3 = data_614630;\n                        if (rdx_3 != 0)\n                        {\n                            if (sub_402820(var_44, 0, rdx_3) == 0)\n                            {\n                                error(1, 0, dcgettext(nullptr, \"invalid page range %s\", 5), sub_408d30(data_614630));\n                            }\n                            else\n                            {\n                            label_401e44:\n                                rbx = 0;\n                                continue;\n                            }\n                        }\n                        error(1, 0, dcgettext(nullptr, \"'--pages=FIRST_PAGE[:LAST_PAGE]'\u2026\", 5));\n                        break;\n                    }\n                }\n            }\n        }\n        else\n        {\n            if (r13 != 0)\n            {\n                sub_402950(r13);\n                free(r13);\n            }\n            if (data_6143c0 == 0)\n            {\n                goto label_4024e7;\n            }\n            while (true)\n            {\n                data_6143b8 = sub_40bba0(getenv(&data_40cf65));\n                if (data_614418 == 0)\n                {\n                    data_614418 = 1;\n                }\n                char rdi_23 = data_61444f;\n                if (rdi_23 != 0)\n                {\n                    if (data_61444b != 0)\n                    {\n                        break;\n                    }\n                    if ((data_61444b == 0 && data_614445 != 0))\n                    {\n                        break;\n                    }\n                }\n                if (var_4b != 0)\n                {\n                    if (var_4a != 0)\n                    {\n                        if ((rdi_23 != 0 || (rdi_23 == 0 && data_61444b != 0)))\n                        {\n                            data_61443d = 1;\n                            if (var_49 != 0)\n                            {\n                            label_402479:\n                                data_6143e0 = 1;\n                            }\n                        }\n                        if ((rdi_23 == 0 && data_61444b == 0))\n                        {\n                            data_61443c = 1;\n                        }\n                    }\n                    else if ((data_6143e0 != 1 && (var_49 != 0 && (rdi_23 != 0 || (rdi_23 == 0 && data_61444b != 0)))))\n                    {\n                        if (data_61443d != 0)\n                        {\n                            goto label_402479;\n                        }\n                        bool cond:3_1 = data_6143dc <= 0;\n                        data_61443c = 1;\n                        if ((!cond:3_1))\n                        {\n                            goto label_402479;\n                        }\n                    }\n                }\n                int32_t rdx_6 = data_61433c;\n                if (argc > rdx_6)\n                {\n                    void* rax_25 = &argv[rdx_6];\n                    int32_t rsi_4 = ((argc - rdx_6) + r14);\n                    do\n                    {\n                        int64_t rcx_3 = *rax_25;\n                        uint64_t rdx_7 = r14;\n                        r14 = (r14 + 1);\n                        rax_25 = (rax_25 + 8);\n                        r15[rdx_7] = rcx_3;\n                    } while (r14 != rsi_4);\n                    data_61433c = argc;\n                }\n                if (r14 == 0)\n                {\n                    sub_403e40(0, nullptr);\n                }\n                else if (rdi_23 != 0)\n                {\n                    sub_403e40(r14, r15);\n                }\n                else\n                {\n                    void* rbx_2 = &r15[((r14 - 1) + 1)];\n                    do\n                    {\n                        char** rsi_5 = r15;\n                        r15 = &r15[1];\n                        sub_403e40(1, rsi_5);\n                    } while (rbx_2 != r15);\n                }\n                free(data_6143f0);\n                free(data_614398);\n                free(data_614478);\n                free(data_614458);\n                free(data_614450);\n                free(data_614470);\n                int32_t rax_28;\n                if (data_614446 != 0)\n                {\n                    rax_28 = sub_40aa20(stdin);\n                    if (rax_28 == 0xffffffff)\n                    {\n                        error(1, *__errno_location(), dcgettext(nullptr, \"standard input\", 5));\n                    }\n                }\n                if ((data_614446 == 0 || (data_614446 != 0 && rax_28 != 0xffffffff)))\n                {\n                    return data_614420;\n                }\n            label_4024e7:\n                char* rax_33 = getenv(\"POSIXLY_CORRECT\");\n                char rax_34;\n                char const* const rax_35;\n                if (rax_33 != 0)\n                {\n                    rax_34 = sub_405590();\n                    if (rax_34 == 0)\n                    {\n                        rax_35 = \"%b %e %H:%M %Y\";\n                    }\n                }\n                if ((rax_33 == 0 || (rax_33 != 0 && rax_34 != 0)))\n                {\n                    rax_35 = \"%Y-%m-%d %H:%M\";\n                }\n                data_6143c0 = rax_35;\n            }\n            if (data_61444b == 0)\n            {\n                break;\n            }\n        }\n        error(1, 0, dcgettext(nullptr, \"cannot specify number of columns\u2026\", 5));\n        break;\n    }\n    void (* rdx_13)();\n    int64_t rsi_8;\n    int64_t rdi_34;\n    rdx_13 = error(1, 0, dcgettext(nullptr, \"cannot specify both printing acr\u2026\", 5));\n    /* tailcall */\n    return _start(rdi_34, rsi_8, rdx_13);\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x4025d0",
            "funcEndAddr": "0x4025fa",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4025fb",
            "funcStartAddr": "0x4025fb",
            "funcEndAddr": "0x40261a",
            "decompiledFuncCode": "void sub_4025fb()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_40261a",
            "funcStartAddr": "0x40261a",
            "funcEndAddr": "0x402651",
            "decompiledFuncCode": "int64_t sub_40261a()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_402651",
            "funcStartAddr": "0x402651",
            "funcEndAddr": "0x4026a8",
            "decompiledFuncCode": "void sub_402651()\n{\n    if (data_614368 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_614370;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_614370 = (rax_1 + 1);\n        *(0x613e40 + ((rax_1 + 1) << 3))();\n    }\n    sub_4025fb();\n    data_614368 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_4026a8",
            "funcStartAddr": "0x4026a8",
            "funcEndAddr": "0x4026ad",
            "decompiledFuncCode": "int64_t j_sub_40261a()\n{\n    /* tailcall */\n    return sub_40261a();\n}\n\n"
        },
        {
            "funcName": "sub_4026b0",
            "funcStartAddr": "0x4026b0",
            "funcEndAddr": "0x402708",
            "decompiledFuncCode": "uint64_t sub_4026b0()\n{\n    uint64_t rax = data_614298;\n    void* rdx = data_614478;\n    if (rax != 0)\n    {\n        uint64_t rcx_1 = (rax - 1);\n        char rsi_1 = data_6142b4;\n        rax = 0;\n        void* rcx_4 = (((rcx_1 + 1) << 6) + rdx);\n        do\n        {\n            if ((*(rdx + 0x10) <= 1 || (((*(rdx + 0x10) > 1 && rsi_1 != 0) && *(rdx + 0x2c) > 0) && *(rdx + 0x30) > 0)))\n            {\n                rax = (rax + 1);\n            }\n            rdx = (rdx + 0x40);\n        } while (rdx != rcx_4);\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_402710",
            "funcStartAddr": "0x402710",
            "funcEndAddr": "0x402782",
            "decompiledFuncCode": "uint64_t sub_402710()\n{\n    uint64_t rax = data_614298;\n    uint64_t rdi = data_614478;\n    if (rax != 0)\n    {\n        uint64_t rdx_1 = (rax - 1);\n        int32_t rcx_1 = data_614410;\n        rax = rdi;\n        char rsi_1 = 0;\n        int64_t rdx_4 = (((rdx_1 + 1) << 6) + rdi);\n        do\n        {\n            if (*(rax + 0x10) == 2)\n            {\n                *(rax + 0x10) = 0;\n                rcx_1 = (rcx_1 + 1);\n                rsi_1 = 1;\n            }\n            rax = (rax + 0x40);\n        } while (rax != rdx_4);\n        if (rsi_1 != 0)\n        {\n            data_614410 = rcx_1;\n        }\n    }\n    if (data_6142b4 != 0)\n    {\n        rax = *(rdi + 0x10) != 3;\n        data_614410 = rax;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_402790",
            "funcStartAddr": "0x402790",
            "funcEndAddr": "0x4027eb",
            "decompiledFuncCode": "int64_t sub_402790(char arg1)\n{\n    uint64_t rcx_1 = data_614468;\n    int64_t rax = data_614470;\n    int32_t rdx = rcx_1;\n    if (rcx_1 >= data_614460)\n    {\n        int64_t rax_1 = sub_409460(rax, &data_614460);\n        uint64_t rcx = data_614468;\n        data_614470 = rax_1;\n        *(rax_1 + rcx) = arg1;\n        data_614468 = (rcx + 1);\n        return rax_1;\n    }\n    *(rax + rcx_1) = arg1;\n    data_614468 = (rdx + 1);\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4027f0",
            "funcStartAddr": "0x4027f0",
            "funcEndAddr": "0x402820",
            "decompiledFuncCode": "int64_t sub_4027f0()\n{\n    char* rdx_1;\n    char rsi;\n    int32_t rdi;\n    rdx_1 = error(1, 0, dcgettext(nullptr, \"integer overflow\", 5));\n    /* tailcall */\n    return sub_402820(rdi, rsi, rdx_1);\n}\n\n"
        },
        {
            "funcName": "sub_402820",
            "funcStartAddr": "0x402820",
            "funcEndAddr": "0x402919",
            "decompiledFuncCode": "int64_t sub_402820(int32_t arg1, char arg2, char* arg3)\n{\n    uint64_t var_30 = -1;\n    char* var_40;\n    int64_t var_38;\n    int32_t rax = sub_40a5e0(arg3, &var_40, 0xa, &var_38, &data_40ce63);\n    if ((rax & 0xfffffffd) == 0)\n    {\n        char* rdi_1 = var_40;\n        if (rdi_1 == arg3)\n        {\n        label_4028bc:\n            return 0;\n        }\n        if (var_38 == 0)\n        {\n            goto label_4028bc;\n        }\n        char rax_1 = *rdi_1;\n        if (rax_1 == 0x3a)\n        {\n            void* rbp_1 = &rdi_1[1];\n            rax = sub_40a5e0(rbp_1, &var_40, 0xa, &var_30, &data_40ce63);\n            if (rax == 0)\n            {\n                char* rax_6 = var_40;\n                if (rax_6 == rbp_1)\n                {\n                    goto label_4028bc;\n                }\n                if (var_30 < var_38)\n                {\n                    goto label_4028bc;\n                }\n                rax_1 = *rax_6;\n            }\n        }\n        if ((rax_1 != 0x3a || (rax_1 == 0x3a && rax == 0)))\n        {\n            if (rax_1 == 0)\n            {\n                data_614418 = var_38;\n                data_614290 = var_30;\n                return 1;\n            }\n            goto label_4028bc;\n        }\n    }\n    sub_40a550(rax, arg1, arg2, &data_40ebe0, arg3);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_402920",
            "funcStartAddr": "0x402920",
            "funcEndAddr": "0x402950",
            "decompiledFuncCode": "uint64_t sub_402920(char* arg1)\n{\n    int64_t rbx = arg1;\n    uint64_t rax = strlen(arg1);\n    if (rax > 0x7fffffff)\n    {\n        /* tailcall */\n        return sub_402950(sub_4027f0());\n    }\n    data_614270 = rbx;\n    data_6143dc = rax;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_402950",
            "funcStartAddr": "0x402950",
            "funcEndAddr": "0x402991",
            "decompiledFuncCode": "int64_t sub_402950(char* arg1)\n{\n    int64_t rax_1 = sub_409680(arg1, 1, 0x7fffffff, &data_40ce63, dcgettext(nullptr, \"invalid number of columns\", 5), 0);\n    data_61444b = 1;\n    data_614298 = rax_1;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4029a0",
            "funcStartAddr": "0x4029a0",
            "funcEndAddr": "0x402ab0",
            "decompiledFuncCode": "void sub_4029a0(int64_t* arg1)\n{\n    if (arg1[2] != 3)\n    {\n        char* rdi = *arg1;\n        if ((*rdi & 0x20) != 0)\n        {\n            int32_t rsi_3;\n            int64_t rdi_2;\n            rsi_3 = error(1, *__errno_location(), \"%s\", sub_408bb0(0, 3, arg1[1]));\n            /* tailcall */\n            return sub_402ab0(rdi_2, rsi_3);\n        }\n        int64_t rax_1 = fileno(rdi);\n        if (rax_1 != 0)\n        {\n            rax_1 = sub_40aa20(*arg1);\n            if (rax_1 != 0)\n            {\n                error(1, *__errno_location(), \"%s\", sub_408bb0(0, 3, arg1[1]));\n            }\n        }\n        if ((rax_1 == 0 || rax_1 == 0))\n        {\n            if (data_61444f != 0)\n            {\n                arg1[2] = 3;\n                arg1[6] = 0;\n            }\n            else\n            {\n                int32_t rdx_1 = data_614298;\n                rax_1 = data_614478;\n                if (rdx_1 != 0)\n                {\n                    int64_t rdx_5 = ((((rdx_1 - 1) + 1) << 6) + rax_1);\n                    do\n                    {\n                        int32_t rcx_1 = *(rax_1 + 0x2c);\n                        *(rax_1 + 0x10) = 3;\n                        if (rcx_1 == 0)\n                        {\n                            *(rax_1 + 0x30) = 0;\n                        }\n                        rax_1 = (rax_1 + 0x40);\n                    } while (rax_1 != rdx_5);\n                    data_614410 = (data_614410 - 1);\n                    return;\n                }\n            }\n            data_614410 = (data_614410 - 1);\n            return;\n        }\n    }\n}\n\n"
        },
        {
            "funcName": "sub_402ab0",
            "funcStartAddr": "0x402ab0",
            "funcEndAddr": "0x402c97",
            "decompiledFuncCode": "int64_t sub_402ab0(int64_t arg1, int32_t arg2)\n{\n    int64_t rcx = 2;\n    int32_t r12 = arg2;\n    void* const rdi = &data_410b71;\n    int64_t rsi = arg1;\n    int64_t __saved_rbx;\n    bool c = &__saved_rbx < 0x100;\n    bool z = &__saved_rbx == 0x100;\n    while (rcx != 0)\n    {\n        char temp1_1 = *rsi;\n        char temp2_1 = *rdi;\n        c = temp1_1 < temp2_1;\n        z = temp1_1 == temp2_1;\n        rsi = (rsi + 1);\n        rdi = (rdi + 1);\n        rcx = (rcx - 1);\n        if ((!z))\n        {\n            break;\n        }\n    }\n    int128_t var_128;\n    int64_t r14;\n    if ((((!z) && (!c)) - 0) == 0)\n    {\n        r12 = -1;\n        if (data_614380 != 0)\n        {\n            goto label_402b00;\n        }\n    }\n    else\n    {\n        void var_b8;\n        if ((r12 >= 0 && __fxstat(1, r12, &var_b8) == 0))\n        {\n            int64_t var_58;\n            r14 = var_58;\n            *var_128[8] = r14;\n            int64_t var_60;\n            var_128 = var_60;\n            goto label_402b18;\n        }\n        if (data_614380 != 0)\n        {\n            goto label_402b00;\n        }\n    }\n    sub_405550(&data_614380);\nlabel_402b00:\n    var_128 = *data_614380;\n    r14 = *var_128[8];\nlabel_402b18:\n    void var_f8;\n    char* rbp;\n    if (sub_40be80(data_6143b8, &var_128, &var_f8) == 0)\n    {\n        rbp = sub_409300(0x21);\n        void var_118;\n        __sprintf_chk(rbp, 1, 0x21, \"%s.%09d\", sub_4055f0(var_128, &var_118), r14);\n    }\n    else\n    {\n        size_t r13_1 = (sub_4070f0(nullptr, -1, data_6143c0, &var_f8, data_6143b8, r14) + 1);\n        char* rax_3 = sub_409300(r13_1);\n        rbp = rax_3;\n        sub_4070f0(rax_3, r13_1, data_6143c0, &var_f8, data_6143b8, r14);\n    }\n    free(data_6143b0);\n    int64_t rax_4 = data_6143c8;\n    data_6143b0 = rbp;\n    if (rax_4 == 0)\n    {\n        rax_4 = 0x40ce63;\n        if (r12 >= 0)\n        {\n            rax_4 = arg1;\n        }\n    }\n    int32_t rbx_1 = data_6142ac;\n    data_6143a8 = rax_4;\n    int32_t rbx_2 = (rbx_1 - sub_405850(rbp, 0));\n    int64_t rax_6 = sub_405850(data_6143a8, 0);\n    data_6143a0 = (rbx_2 - rax_6);\n    return rax_6;\n}\n\n"
        },
        {
            "funcName": "sub_402ca0",
            "funcStartAddr": "0x402ca0",
            "funcEndAddr": "0x402d0c",
            "decompiledFuncCode": "void sub_402ca0(int32_t arg1)\n{\n    int32_t rbx = data_614428;\n    if (data_614434 != 0)\n    {\n        data_614430 = (arg1 - rbx);\n        return;\n    }\n    while (true)\n    {\n        rbx = (rbx + 1);\n        if (arg1 < rbx)\n        {\n            break;\n        }\n        uint64_t* const rdi = stdout;\n        char* rax = stdout[5];\n        if (rax >= stdout[6])\n        {\n            __overflow(rdi, 0x20);\n        }\n        else\n        {\n            stdout[5] = &rax[1];\n            *rax = 0x20;\n        }\n    }\n    data_614428 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_402d10",
            "funcStartAddr": "0x402d10",
            "funcEndAddr": "0x402dcc",
            "decompiledFuncCode": "uint64_t sub_402d10()\n{\n    int32_t rbp = data_614428;\n    int32_t r12_1 = (data_614430 + rbp);\n    uint64_t rax_2;\n    while (true)\n    {\n        rax_2 = (r12_1 - rbp);\n        if (rax_2 <= 1)\n        {\n            break;\n        }\n        int32_t rcx_1 = data_61429c;\n        int32_t temp2_1;\n        int32_t temp3_1;\n        temp2_1 = HIGHW(rbp);\n        temp3_1 = LOWW(rbp);\n        rax_2 = (COMBINE(temp2_1, temp3_1) / rcx_1);\n        int32_t rbx_1 = ((rcx_1 - (COMBINE(temp2_1, temp3_1) % rcx_1)) + rbp);\n        if (r12_1 < rbx_1)\n        {\n            break;\n        }\n        uint64_t* const rdi_1 = stdout;\n        int32_t rsi_1 = data_6142a0;\n        char* rax_5 = stdout[5];\n        if (rax_5 >= stdout[6])\n        {\n            __overflow(rdi_1, rsi_1);\n            rbp = rbx_1;\n        }\n        else\n        {\n            rbp = rbx_1;\n            stdout[5] = &rax_5[1];\n            *rax_5 = rsi_1;\n        }\n    }\n    while (true)\n    {\n        rbp = (rbp + 1);\n        if (r12_1 < rbp)\n        {\n            break;\n        }\n        FILE* rdi_2 = stdout;\n        rax_2 = stdout[5];\n        if (rax_2 >= stdout[6])\n        {\n            rax_2 = __overflow(rdi_2, 0x20);\n        }\n        else\n        {\n            stdout[5] = (rax_2 + 1);\n            *rax_2 = 0x20;\n        }\n    }\n    data_614428 = r12_1;\n    data_614430 = 0;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_402dd0",
            "funcStartAddr": "0x402dd0",
            "funcEndAddr": "0x402ed3",
            "decompiledFuncCode": "uint64_t sub_402dd0()\n{\n    uint64_t rax = data_614430;\n    if (data_6143d8 > 0)\n    {\n        char* r12 = data_614270;\n        int32_t rbp = data_6143dc;\n        uint64_t rax_3;\n        while (true)\n        {\n            char* rbx_1 = r12;\n            int32_t r14_1 = (rbp + r12);\n            while ((r14_1 - rbx_1) > 0)\n            {\n                uint32_t rsi_1;\n                do\n                {\n                    rsi_1 = *rbx_1;\n                    rbx_1 = &rbx_1[1];\n                    if (rsi_1 == 0x20)\n                    {\n                        break;\n                    }\n                    if (rax > 0)\n                    {\n                        sub_402d10();\n                        rsi_1 = rbx_1[-1];\n                    }\n                    uint64_t* const rdi_1 = stdout;\n                    char* rax_1 = stdout[5];\n                    if (rax_1 >= stdout[6])\n                    {\n                        __overflow(rdi_1, rsi_1);\n                    }\n                    else\n                    {\n                        stdout[5] = &rax_1[1];\n                        *rax_1 = rsi_1;\n                    }\n                    data_614428 = (data_614428 + 1);\n                    rax = data_614430;\n                } while ((r14_1 - rbx_1) > 0);\n                if (rsi_1 != 0x20)\n                {\n                    break;\n                }\n                rax = (rax + 1);\n                data_614430 = rax;\n            }\n            int32_t rdx_5 = 0;\n            if (rbp >= 0)\n            {\n                rdx_5 = rbp;\n            }\n            rbp = ((rbp - 1) - rdx_5);\n            r12 = &r12[rdx_5];\n            if (rax > 0)\n            {\n                sub_402d10();\n            }\n            rax_3 = (data_6143d8 - 1);\n            data_6143d8 = rax_3;\n            if (rax_3 <= 0)\n            {\n                break;\n            }\n            rax = data_614430;\n        }\n        return rax_3;\n    }\n    if (rax > 0)\n    {\n        /* tailcall */\n        return sub_402d10();\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_402ee0",
            "funcStartAddr": "0x402ee0",
            "funcEndAddr": "0x402fe0",
            "decompiledFuncCode": "int64_t sub_402ee0()\n{\n    int32_t rdi = data_61442c;\n    data_614428 = 0;\n    sub_402ca0(rdi);\n    sub_402d10();\n    int64_t rbx = data_614408;\n    if (rbx == 0)\n    {\n        /* tailcall */\n        return sub_402fe0(error(1, 0, dcgettext(nullptr, \"page number overflow\", 5)));\n    }\n    void var_138;\n    __sprintf_chk(&var_138, 1, 0x114, dcgettext(nullptr, \"Page %lu\", 5), rbx);\n    int32_t rbx_1 = data_6143a0;\n    int32_t rax_2 = sub_405850(&var_138, 0);\n    uint64_t rdx = data_61442c;\n    int64_t r8_1 = data_6143b0;\n    int32_t rbx_2 = (rbx_1 - rax_2);\n    if ((rbx_1 - rax_2) < 0)\n    {\n        rbx_2 = 0;\n    }\n    void* var_148 = &var_138;\n    void* const var_150 = &data_411057;\n    uint64_t var_158 = (rbx_2 - (rbx_2 >> 1));\n    int64_t var_160 = data_6143a8;\n    void* const var_168 = &data_411057;\n    int64_t rax_3 = __printf_chk(1, \"\\n\\n%*s%s%*s%s%*s%s\\n\\n\\n\", rdx, 0x40ce63, r8_1);\n    data_614448 = 0;\n    data_614428 = 0;\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_402fe0",
            "funcStartAddr": "0x402fe0",
            "funcEndAddr": "0x4031d7",
            "decompiledFuncCode": "uint64_t sub_402fe0(char arg1)\n{\n    char* rbx = data_614398;\n    uint64_t rax_3;\n    int32_t rdx_3;\n    int32_t rsi;\n    if (data_6142a8 == arg1)\n    {\n        rsi = data_614424;\n        int32_t rcx_3 = data_6142a4;\n        int32_t temp2_1;\n        int32_t temp3_1;\n        temp2_1 = HIGHW(rsi);\n        temp3_1 = LOWW(rsi);\n        int32_t rcx_4 = (rcx_3 - (COMBINE(temp2_1, temp3_1) % rcx_3));\n        rdx_3 = rcx_4;\n        if (data_614435 != 0)\n        {\n            if (rcx_4 == 0)\n            {\n                rax_3 = 0;\n            label_403092:\n                data_614424 = rsi;\n                return rax_3;\n            }\n            rax_3 = rcx_4;\n        }\n    }\n    if ((data_6142a8 != arg1 && arg1 == 9))\n    {\n        rsi = data_614424;\n        uint32_t rax_6 = ((rsi >> 0x1f) >> 0x1d);\n        rax_3 = ((rax_6 - ((rsi + rax_6) & 7)) + 8);\n        rdx_3 = rax_3;\n    }\n    if (((data_6142a8 == arg1 && data_614435 == 0) || ((data_6142a8 != arg1 && arg1 == 9) && data_614435 == 0)))\n    {\n        *rbx = arg1;\n        rax_3 = 1;\n    }\n    if ((((data_6142a8 != arg1 && arg1 == 9) && data_614435 != 0) || (data_6142a8 == arg1 && data_614435 != 0)))\n    {\n        void* rdx_7 = &rbx[((rax_3 - 1) + 1)];\n        do\n        {\n            rbx = &rbx[1];\n            rbx[-1] = 0x20;\n        } while (rbx != rdx_7);\n        rdx_3 = rax_3;\n    }\n    int32_t rcx_2;\n    if (((((data_6142a8 == arg1 && data_614435 == 0) || ((data_6142a8 != arg1 && arg1 == 9) && data_614435 == 0)) || ((data_6142a8 != arg1 && arg1 == 9) && data_614435 != 0)) || (data_6142a8 == arg1 && data_614435 != 0)))\n    {\n        if (rdx_3 >= 0)\n        {\n        label_403090:\n            rsi = (rsi + rdx_3);\n            goto label_403092;\n        }\n        if (rsi == 0)\n        {\n        label_403130:\n            data_614424 = 0;\n            return 0;\n        }\n        rcx_2 = (-rdx_3);\n    }\n    if ((data_6142a8 != arg1 && arg1 != 9))\n    {\n        if ((*(&*__ctype_b_loc()[arg1] + 1) & 0x40) != 0)\n        {\n            int32_t rax_11 = data_614424;\n            *rbx = arg1;\n            rsi = (rax_11 + 1);\n            rax_3 = 1;\n            goto label_403092;\n        }\n        if (data_6143ea == 0)\n        {\n            if (data_6143e9 == 0)\n            {\n                rsi = data_614424;\n                if (arg1 != 8)\n                {\n                    *rbx = arg1;\n                    rax_3 = 1;\n                    goto label_403092;\n                }\n                *rbx = 8;\n                if (rsi == 0)\n                {\n                    goto label_403130;\n                }\n                rcx_2 = 1;\n                rdx_3 = -1;\n                rax_3 = 1;\n            }\n            else if (arg1 >= 0)\n            {\n                int32_t rax_2 = data_614424;\n                *rbx = 0x5e;\n                rsi = (rax_2 + 2);\n                rbx[1] = (arg1 ^ 0x40);\n                rax_3 = 2;\n                goto label_403092;\n            }\n        }\n        if ((data_6143ea != 0 || (data_6143ea == 0 && data_6143e9 != 0)))\n        {\n            *rbx = 0x5c;\n            char var_1c;\n            __sprintf_chk(&var_1c, 1, 4, \"%03o\", arg1);\n            rbx[1] = var_1c;\n            char var_1b;\n            rbx[2] = var_1b;\n            char var_1a;\n            rbx[3] = var_1a;\n            rsi = (data_614424 + 4);\n            rax_3 = 4;\n            goto label_403092;\n        }\n    }\n    if (((((((data_6142a8 == arg1 && data_614435 == 0) || ((data_6142a8 != arg1 && arg1 == 9) && data_614435 == 0)) || ((data_6142a8 != arg1 && arg1 == 9) && data_614435 != 0)) || (data_6142a8 == arg1 && data_614435 != 0)) && rdx_3 < 0) || (data_6142a8 != arg1 && arg1 != 9)))\n    {\n        if (rcx_2 >= rsi)\n        {\n            data_614424 = 0;\n            return rax_3;\n        }\n        goto label_403090;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4031e0",
            "funcStartAddr": "0x4031e0",
            "funcEndAddr": "0x40327e",
            "decompiledFuncCode": "char* sub_4031e0(char arg1)\n{\n    if (data_614434 != 0)\n    {\n        int32_t rax_1 = data_614430;\n        if (arg1 == 0x20)\n        {\n            uint64_t rax_5 = (rax_1 + 1);\n            data_614430 = rax_5;\n            return rax_5;\n        }\n        uint64_t rbp_1 = arg1;\n        if (rax_1 > 0)\n        {\n            sub_402d10();\n        }\n        if ((*(&*__ctype_b_loc()[rbp_1] + 1) & 0x40) != 0)\n        {\n            data_614428 = (data_614428 + 1);\n        }\n        else if (arg1 == 8)\n        {\n            data_614428 = (data_614428 - 1);\n        }\n    }\n    uint64_t* const rdi = stdout;\n    char* rax_4 = stdout[5];\n    if (rax_4 >= stdout[6])\n    {\n        /* tailcall */\n        return __overflow(rdi, arg1);\n    }\n    stdout[5] = &rax_4[1];\n    *rax_4 = arg1;\n    return rax_4;\n}\n\n"
        },
        {
            "funcName": "sub_403280",
            "funcStartAddr": "0x403280",
            "funcEndAddr": "0x403408",
            "decompiledFuncCode": "int64_t sub_403280(void* arg1)\n{\n    int64_t r12 = *(arg1 + 0x28);\n    int64_t rbp = data_614470;\n    data_6143d0 = 1;\n    *(arg1 + 0x28) = (r12 + 1);\n    int64_t rax_1 = data_614458;\n    int64_t rbx_1 = (*(rax_1 + (r12 << 2)) + rbp);\n    int64_t rbp_1 = (rbp + *((rax_1 + (r12 << 2)) + 4));\n    if (data_614448 != 0)\n    {\n        sub_402ee0();\n    }\n    int64_t rcx_2;\n    if (*(arg1 + 0x10) == 1)\n    {\n        int32_t rax_8 = data_614298;\n        rcx_2 = data_614478;\n        if (rax_8 > 0)\n        {\n            int64_t rax_9 = rcx_2;\n            int64_t rdx_6 = ((((rax_8 - 1) + 1) << 6) + rcx_2);\n            do\n            {\n                *(rax_9 + 0x10) = 2;\n                rax_9 = (rax_9 + 0x40);\n            } while (rax_9 != rdx_6);\n        }\n        if ((*(rcx_2 + 0x30) <= 0 && data_6142b5 == 0))\n        {\n            data_6143d0 = 0;\n        }\n    }\n    if ((*(arg1 + 0x10) != 1 || (*(arg1 + 0x10) == 1 && *(rcx_2 + 0x30) > 0)))\n    {\n        int32_t rax_3 = data_6143dc;\n        int32_t rdi = data_6143d4;\n        if (rax_3 < rdi)\n        {\n            sub_402ca0((rdi - rax_3));\n            data_6143d4 = 0;\n        }\n        if (data_6143e0 != 0)\n        {\n            sub_402dd0();\n        }\n        if (rbx_1 != rbp_1)\n        {\n            do\n            {\n                rbx_1 = (rbx_1 + 1);\n                sub_4031e0(*(rbx_1 - 1));\n            } while (rbp_1 != rbx_1);\n        }\n        if (data_614430 == 0)\n        {\n            int32_t rax_5 = *(arg1 + 0x34);\n            int32_t rcx_1 = data_6143dc;\n            int32_t rsi_2 = (*(data_614450 + (r12 << 2)) + rax_5);\n            bool cond:0_1 = (rax_5 - rcx_1) == data_61442c;\n            data_614428 = rsi_2;\n            if (cond:0_1)\n            {\n                data_614428 = (rsi_2 - rcx_1);\n                return 1;\n            }\n        }\n    }\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_403410",
            "funcStartAddr": "0x403410",
            "funcEndAddr": "0x403484",
            "decompiledFuncCode": "void sub_403410(int32_t* arg1, int32_t* arg2, int64_t arg3, int32_t arg4)\n{\n    if (data_61444f != 0)\n    {\n        *arg1 = 2;\n        data_614410 = (data_614410 - 1);\n        *arg2 = 0;\n        return;\n    }\n    int32_t rdx = data_614298;\n    void* rax = data_614478;\n    if (rdx != 0)\n    {\n        int32_t rcx_2 = ((!(arg4 - arg4)) + 2);\n        void* rdx_4 = ((((rdx - 1) + 1) << 6) + rax);\n        do\n        {\n            *(rax + 0x10) = rcx_2;\n            rax = (rax + 0x40);\n        } while (rax != rdx_4);\n    }\n    *arg2 = 0;\n    data_614410 = (data_614410 - 1);\n}\n\n"
        },
        {
            "funcName": "sub_403490",
            "funcStartAddr": "0x403490",
            "funcEndAddr": "0x4036b4",
            "decompiledFuncCode": "uint64_t sub_403490(int64_t* arg1, int32_t arg2)\n{\n    FILE* rbx = *arg1;\n    char* rax = rbx->_IO_read_ptr;\n    uint64_t rax_1;\n    int32_t rcx;\n    if (rax >= rbx->_IO_read_end)\n    {\n        rax_1 = __uflow(rbx);\n    }\n    else\n    {\n        rbx->_IO_read_ptr = &rax[1];\n        rax_1 = *rax;\n    }\n    char rax_4;\n    uint64_t rbp;\n    if (rax_1 != 0xc)\n    {\n        *(arg1 + 0x39) = 0;\n        rbp = 0;\n    }\n    else if (*(arg1 + 0x39) == 0)\n    {\n        rbp = data_614390;\n        rax_4 = rbp;\n        if (rbp != 0)\n        {\n            *(arg1 + 0x39) = 1;\n        }\n        else\n        {\n            rbp = 1;\n        label_4035dd:\n            char* rax_6 = rbx->_IO_read_ptr;\n            void* rdx_9;\n            int32_t rdi_2;\n            if (rax_6 >= rbx->_IO_read_end)\n            {\n                int32_t rax_8;\n                rax_8 = __uflow(rbx);\n                rdi_2 = rax_8;\n            }\n            else\n            {\n                rdx_9 = &rax_6[1];\n                rbx->_IO_read_ptr = rdx_9;\n                rdi_2 = *rax_6;\n            }\n            if (rdi_2 != 0xa)\n            {\n                int32_t rcx_1;\n                int64_t rdx_10;\n                rcx_1 = ungetc(rdi_2, rbx);\n                rax_1 = sub_403410(&arg1[2], &arg1[6], rdx_10, rcx_1);\n            }\n            else\n            {\n                rax_1 = sub_403410(&arg1[2], &arg1[6], rdx_9, rcx);\n            }\n        }\n    }\n    else\n    {\n        char* rax_3 = rbx->_IO_read_ptr;\n        if (rax_3 >= rbx->_IO_read_end)\n        {\n            rax_1 = __uflow(rbx);\n        }\n        else\n        {\n            rbx->_IO_read_ptr = &rax_3[1];\n            rax_1 = *rax_3;\n        }\n        if (rax_1 == 0xa)\n        {\n            char* rax_7 = rbx->_IO_read_ptr;\n            if (rax_7 >= rbx->_IO_read_end)\n            {\n                rax_1 = __uflow(rbx);\n            }\n            else\n            {\n                rbx->_IO_read_ptr = &rax_7[1];\n                rax_1 = *rax_7;\n            }\n        }\n        *(arg1 + 0x39) = 0;\n        rbp = rax_1 == 0xc;\n    }\n    if ((data_614390 == 0 && (rax_1 != 0xc || (rax_1 == 0xc && *(arg1 + 0x39) != 0))))\n    {\n        while (rax_1 != 0xa)\n        {\n        label_403520:\n            if (rax_1 == 0xc)\n            {\n                break;\n            }\n            if (rax_1 == 0xffffffff)\n            {\n                break;\n            }\n            char* rax_2 = rbx->_IO_read_ptr;\n            if (rax_2 < rbx->_IO_read_end)\n            {\n                rbx->_IO_read_ptr = &rax_2[1];\n                rax_1 = *rax_2;\n            }\n            else\n            {\n                rax_1 = __uflow(rbx);\n            }\n        }\n        if (rax_1 == 0xffffffff)\n        {\n            rax_1 = sub_4029a0(arg1);\n        }\n        if (rax_1 == 0xc)\n        {\n            rax_4 = data_614390;\n        }\n    }\n    if ((((rax_1 == 0xc && *(arg1 + 0x39) == 0) && rbp != 0) || (((rax_1 != 0xc || (rax_1 == 0xc && *(arg1 + 0x39) != 0)) && data_614390 == 0) && rax_1 == 0xc)))\n    {\n        if (rax_4 == 0)\n        {\n            goto label_4035dd;\n        }\n        if (data_61444f != 0)\n        {\n            *(arg1 + 0x39) = 0;\n        }\n        else\n        {\n            int32_t rdx_4 = data_614298;\n            int64_t rax_5 = data_614478;\n            if (rdx_4 != 0)\n            {\n                int64_t rdx_8 = ((((rdx_4 - 1) + 1) << 6) + rax_5);\n                do\n                {\n                    *(rax_5 + 0x39) = 0;\n                    rax_5 = (rax_5 + 0x40);\n                } while (rax_5 != rdx_8);\n            }\n        }\n        goto label_4035dd;\n    }\n    if (((rax_1 != 0xc || (rax_1 == 0xc && *(arg1 + 0x39) != 0)) && data_614390 != 0))\n    {\n        *(arg1 + 0x39) = 1;\n        if (rax_1 != 0xa)\n        {\n            goto label_403520;\n        }\n    }\n    if (((((((rax_1 != 0xc || (rax_1 == 0xc && *(arg1 + 0x39) != 0)) && data_614390 == 0) && rax_1 == 0xffffffff) || ((((rax_1 != 0xc || (rax_1 == 0xc && *(arg1 + 0x39) != 0)) && data_614390 == 0) && rax_1 != 0xffffffff) && rax_1 != 0xc)) || ((rax_1 != 0xc || (rax_1 == 0xc && *(arg1 + 0x39) != 0)) && data_614390 != 0)) || ((rax_1 == 0xc && *(arg1 + 0x39) == 0) && rbp == 0)))\n    {\n        if (data_614280 == 0)\n        {\n        label_40350e:\n            return rax_1;\n        }\n        if (((data_61444f != 1 || (data_61444f == 1 && arg2 == 1)) && rbp == 0))\n        {\n            data_614284 = (data_614284 + 1);\n        }\n        goto label_40350e;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4036c0",
            "funcStartAddr": "0x4036c0",
            "funcEndAddr": "0x4037dd",
            "decompiledFuncCode": "uint64_t sub_4036c0(int64_t arg1)\n{\n    int32_t rax_1 = __sprintf_chk(data_6143f0, 1, -1, &data_40ce4f, data_614278, data_614400);\n    int32_t rdx = data_614278;\n    data_614400 = (data_614400 + 1);\n    void* rbx_1 = ((rax_1 - rdx) + data_6143f0);\n    void* r12 = ((rbx_1 + (rdx - 1)) + 1);\n    if (rdx > 0)\n    {\n        do\n        {\n            rbx_1 = (rbx_1 + 1);\n            *arg1(*(rbx_1 - 1));\n        } while (rbx_1 != r12);\n    }\n    uint64_t rdi_2 = data_614288;\n    uint64_t rax_4;\n    if (data_614298 <= 1)\n    {\n        rax_4 = *arg1(rdi_2);\n        if (data_614288 == 9)\n        {\n            int32_t rsi_1 = data_614428;\n            int32_t rcx_1 = data_61429c;\n            int32_t temp2_1;\n            int32_t temp3_1;\n            temp2_1 = HIGHW(rsi_1);\n            temp3_1 = LOWW(rsi_1);\n            rax_4 = ((rcx_1 - (COMBINE(temp2_1, temp3_1) % rcx_1)) + rsi_1);\n            data_614428 = rax_4;\n        }\n    }\n    else if (rdi_2 != 9)\n    {\n        rax_4 = *arg1();\n    }\n    else\n    {\n        rax_4 = (data_6143f8 - data_614278);\n        int32_t rbx_2 = (rax_4 - 1);\n        if (rax_4 > 0)\n        {\n            do\n            {\n                int32_t rbx_3 = (rbx_2 - 1);\n                rax_4 = *arg1(0x20);\n                if (rbx_3 == 0xffffffff)\n                {\n                    break;\n                }\n                rbx_2 = (rbx_3 - 1);\n                rax_4 = *arg1(0x20);\n            } while (rbx_2 != 0xffffffff);\n        }\n    }\n    if ((data_61443d != 0 && data_61444f == 0))\n    {\n        rax_4 = data_6143f8;\n        data_614424 = (data_614424 + rax_4);\n    }\n    return rax_4;\n}\n\n"
        },
        {
            "funcName": "sub_4037e0",
            "funcStartAddr": "0x4037e0",
            "funcEndAddr": "0x40383f",
            "decompiledFuncCode": "uint64_t sub_4037e0(void* arg1)\n{\n    uint64_t rax = data_6143dc;\n    int32_t rdi = *(arg1 + 0x34);\n    data_6143d4 = rdi;\n    bool cond:0_1;\n    if (rdi > rax)\n    {\n        rax = sub_402ca0((rdi - rax));\n        cond:0_1 = data_6143e0 == 0;\n        data_6143d4 = 0;\n    }\n    if (((rdi > rax && (!cond:0_1)) || (rdi <= rax && data_6143e0 != 0)))\n    {\n        rax = sub_402dd0();\n        if (*(arg1 + 0x38) != 0)\n        {\n            goto label_40383a;\n        }\n        goto label_403807;\n    }\n    if (((rdi > rax && cond:0_1) || (rdi <= rax && data_6143e0 == 0)))\n    {\n        if (*(arg1 + 0x38) != 0)\n        {\n        label_40383a:\n            /* tailcall */\n            return sub_4036c0((arg1 + 0x20));\n        }\n    label_403807:\n        return rax;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_403840",
            "funcStartAddr": "0x403840",
            "funcEndAddr": "0x403c7f",
            "decompiledFuncCode": "int64_t sub_403840(int64_t* arg1, uint64_t arg2 @ r12)\n{\n    uint64_t var_18 = arg2;\n    FILE** rbp = arg1;\n    FILE* rdi = *arg1;\n    char* rax = rdi->_IO_read_ptr;\n    int32_t rcx;\n    uint32_t rbx;\n    if (rax >= rdi->_IO_read_end)\n    {\n        int32_t rax_16;\n        rax_16 = __uflow(rdi);\n        rbx = rax_16;\n    }\n    else\n    {\n        rdi->_IO_read_ptr = &rax[1];\n        rbx = *rax;\n    }\n    int32_t r13 = data_614424;\n    char* rax_11;\n    char* rdx_4;\n    FILE* rdi_9;\n    if (rbx == 0xc)\n    {\n        rdi_9 = *rbp;\n        rax_11 = rdi_9->_IO_read_ptr;\n        rdx_4 = rdi_9->_IO_read_end;\n        if (*(rbp + 0x39) == 0)\n        {\n            goto label_403adc;\n        }\n        if (rax_11 >= rdx_4)\n        {\n            int32_t rax_18;\n            rax_18 = __uflow(rdi_9);\n            rbx = rax_18;\n        }\n        else\n        {\n            rdi_9->_IO_read_ptr = &rax_11[1];\n            rbx = *rax_11;\n        }\n        if (rbx == 0xa)\n        {\n            FILE* rdi_10 = *rbp;\n            char* rax_12 = rdi_10->_IO_read_ptr;\n            if (rax_12 >= rdi_10->_IO_read_end)\n            {\n                int32_t rax_20;\n                rax_20 = __uflow(rdi_10);\n                rbx = rax_20;\n            }\n            else\n            {\n                rdi_10->_IO_read_ptr = &rax_12[1];\n                rbx = *rax_12;\n            }\n        }\n        goto label_403877;\n    }\nlabel_403877:\n    *(rbp + 0x39) = 0;\n    int64_t rax_5;\n    void* rdx_7;\n    if (rbx != 0xa)\n    {\n        if (rbx == 0xc)\n        {\n            rdi_9 = *rbp;\n            rax_11 = rdi_9->_IO_read_ptr;\n            rdx_4 = rdi_9->_IO_read_end;\n        label_403adc:\n            uint32_t rdi_11;\n            if (rdx_4 <= rax_11)\n            {\n                uint32_t rax_17;\n                rax_17 = __uflow(rdi_9);\n                rdi_11 = rax_17;\n            label_403af0:\n                if (rdi_11 != 0xa)\n                {\n                    rcx = ungetc(rdi_11, *rbp);\n                    bool cond:1_1 = data_614448 == 0;\n                    data_61444c = 1;\n                    if (cond:1_1)\n                    {\n                    label_403b12:\n                        if (data_61444a == 0)\n                        {\n                            goto label_403b2a;\n                        }\n                        data_614449 = 1;\n                    label_403b2a:\n                        sub_403410(&rbp[2], &rbp[6], rdx_7, rcx);\n                        return 1;\n                    }\n                label_403b05:\n                    if (data_6142b4 == 0)\n                    {\n                        data_6143d0 = 1;\n                        rcx = sub_402ee0();\n                        goto label_403b2a;\n                    }\n                    goto label_403b12;\n                }\n                bool cond:2_1 = data_614448 == 0;\n                data_61444c = 1;\n                if (cond:2_1)\n                {\n                    goto label_403b12;\n                }\n                goto label_403b05;\n            }\n            rdx_7 = &rax_11[1];\n            rdi_9->_IO_read_ptr = rdx_7;\n            rdi_11 = *rax_11;\n            goto label_403af0;\n        }\n        if (rbx == 0xffffffff)\n        {\n        label_40397b:\n            sub_4029a0(rbp);\n            rax_5 = 1;\n            goto label_40398d;\n        }\n        int32_t rax_1;\n        rax_1 = sub_402fe0(rbx);\n        arg2 = rax_1;\n        goto label_40389d;\n    }\nlabel_40389d:\n    if (data_61443d != 0)\n    {\n        if (data_614424 > data_614438)\n        {\n            data_614424 = r13;\n            rax_5 = 0;\n        label_40398d:\n            return rax_5;\n        }\n        goto label_4038b8;\n    }\nlabel_4038b8:\n    if (rbp[4] != 0x402790)\n    {\n        bool cond:3_1 = data_614448 == 0;\n        data_6143d0 = 1;\n        if (((!cond:3_1) && data_6142b4 == 0))\n        {\n            rcx = sub_402ee0();\n        }\n        int32_t rdi_4;\n        if ((data_61444f == 0 || (data_61444f != 0 && data_61444e == 0)))\n        {\n            rdi_4 = data_6143d4;\n        }\n        if ((data_61444f != 0 && data_61444e != 0))\n        {\n            int32_t rax_3 = data_6143d8;\n            int64_t r13_1 = data_614478;\n            data_6143d8 = 0;\n            if (rax_3 > 0)\n            {\n                int64_t r14_4 = ((((rax_3 - 1) + 1) << 6) + r13_1);\n                do\n                {\n                    int64_t rdi_2 = r13_1;\n                    r13_1 = (r13_1 + 0x40);\n                    rcx = sub_4037e0(rdi_2);\n                    data_6143d8 = (data_6143d8 + 1);\n                } while (r14_4 != r13_1);\n            }\n            rdi_4 = *(rbp + 0x34);\n            bool cond:4_1 = data_61443d != 0;\n            int32_t rax_4 = 0;\n            data_61444e = 0;\n            if (cond:4_1)\n            {\n                rax_4 = data_614438;\n            }\n            data_6143d4 = rdi_4;\n            data_614430 = rax_4;\n        }\n        int32_t rax_6 = data_6143dc;\n        if (rax_6 < rdi_4)\n        {\n            rcx = sub_402ca0((rdi_4 - rax_6));\n            data_6143d4 = 0;\n        }\n        if (data_6143e0 != 0)\n        {\n            rcx = sub_402dd0();\n        }\n        goto label_4039b1;\n    }\nlabel_4039b1:\n    if (rbp[7] == 0)\n    {\n        goto label_4039bb;\n    }\n    rcx = sub_4036c0(&rbp[4]);\nlabel_4039bb:\n    data_61444d = 0;\n    rax_5 = 1;\n    if (rbx == 0xa)\n    {\n        goto label_40398d;\n    }\n    int64_t rbx_1 = data_614398;\n    int64_t r13_2 = ((rbx_1 + (arg2 - 1)) + 1);\n    if (arg2 != 0)\n    {\n        do\n        {\n            rbx_1 = (rbx_1 + 1);\n            rcx = rbp[4](*(rbx_1 - 1));\n        } while (r13_2 != rbx_1);\n    }\n    uint32_t rax_9;\n    int32_t rbx_2;\n    while (true)\n    {\n        FILE* rdi_6 = *rbp;\n        char* rax_8 = rdi_6->_IO_read_ptr;\n        if (rax_8 >= rdi_6->_IO_read_end)\n        {\n            rax_9 = __uflow(rdi_6);\n        }\n        else\n        {\n            rdi_6->_IO_read_ptr = &rax_8[1];\n            rax_9 = *rax_8;\n        }\n        if (rax_9 == 0xa)\n        {\n            return 1;\n        }\n        if (rax_9 == 0xc)\n        {\n            break;\n        }\n        if (rax_9 == 0xffffffff)\n        {\n            break;\n        }\n        rbx_2 = data_614424;\n        int32_t rax_10;\n        rax_10 = sub_402fe0(rax_9);\n        if (data_61443d != 0)\n        {\n            rcx = data_614438;\n            if (data_614424 > rcx)\n            {\n                break;\n            }\n        }\n        int64_t rbx_3 = data_614398;\n        int64_t r12_1 = ((rbx_3 + (rax_10 - 1)) + 1);\n        if (rax_10 != 0)\n        {\n            do\n            {\n                rbx_3 = (rbx_3 + 1);\n                rcx = rbp[4](*(rbx_3 - 1));\n            } while (rbx_3 != r12_1);\n        }\n    }\n    if (rax_9 != 0xc)\n    {\n        if (rax_9 == 0xffffffff)\n        {\n            goto label_40397b;\n        }\n        data_614424 = rbx_2;\n        rax_5 = 0;\n        goto label_40398d;\n    }\n    FILE* rdi_15 = *rbp;\n    char* rax_15 = rdi_15->_IO_read_ptr;\n    int32_t rdi_16;\n    if (rax_15 >= rdi_15->_IO_read_end)\n    {\n        int32_t rax_19;\n        rax_19 = __uflow(rdi_15);\n        rdi_16 = rax_19;\n    }\n    else\n    {\n        rdx_7 = &rax_15[1];\n        rdi_15->_IO_read_ptr = rdx_7;\n        rdi_16 = *rax_15;\n    }\n    if (rdi_16 != 0xa)\n    {\n        rcx = ungetc(rdi_16, *rbp);\n    }\n    goto label_403b12;\n}\n\n"
        },
        {
            "funcName": "sub_403c80",
            "funcStartAddr": "0x403c80",
            "funcEndAddr": "0x403d71",
            "decompiledFuncCode": "uint64_t sub_403c80(char* arg1, uint64_t** arg2)\n{\n    int64_t rcx = 2;\n    void* const rdi = &data_410b71;\n    char* rsi = arg1;\n    int64_t __saved_rbx;\n    bool c = &__saved_rbx < 8;\n    bool z = &__saved_rbx == 8;\n    while (rcx != 0)\n    {\n        char temp1_1 = *rsi;\n        char temp2_1 = *rdi;\n        c = temp1_1 < temp2_1;\n        z = temp1_1 == temp2_1;\n        rsi = &rsi[1];\n        rdi = (rdi + 1);\n        rcx = (rcx - 1);\n        if ((!z))\n        {\n            break;\n        }\n    }\n    uint64_t* const rdi_1;\n    if ((((!z) && (!c)) - 0) != 0)\n    {\n        arg2[1] = arg1;\n        uint64_t* rax_3 = sub_4054b0(arg1, &data_40cff8);\n        rdi_1 = rax_3;\n        *arg2 = rax_3;\n    }\n    else\n    {\n        char* rax_1 = dcgettext(nullptr, \"standard input\", 5);\n        rdi_1 = stdin;\n        data_614446 = 1;\n        arg2[1] = rax_1;\n        *arg2 = stdin;\n    }\n    if ((((((!z) && (!c)) - 0) != 0 && rdi_1 != 0) || ((((!z) && (!c)) - 0) == 0 && stdin != 0)))\n    {\n        sub_405480(rdi_1, 2);\n        arg2[2] = 0;\n        *(arg2 + 0x39) = 0;\n        data_6143e4 = (data_6143e4 + 1);\n        return 1;\n    }\n    if ((((((!z) && (!c)) - 0) != 0 && rdi_1 == 0) || ((((!z) && (!c)) - 0) == 0 && stdin == 0)))\n    {\n        uint32_t rbx_1 = data_6143e1;\n        data_614420 = 1;\n        if (rbx_1 == 0)\n        {\n            error(0, *__errno_location(), \"%s\", sub_408bb0(rdi_1, 3, arg1));\n            return rbx_1;\n        }\n        return 0;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_403d80",
            "funcStartAddr": "0x403d80",
            "funcEndAddr": "0x403e3f",
            "decompiledFuncCode": "uint64_t sub_403d80(int64_t* arg1)\n{\n    FILE* rbx = *arg1;\n    int32_t rcx;\n    while (true)\n    {\n        char* rax_2 = rbx->_IO_read_ptr;\n        uint64_t rax_1;\n        if (rax_2 < rbx->_IO_read_end)\n        {\n            rbx->_IO_read_ptr = &rax_2[1];\n            rax_1 = *rax_2;\n        }\n        else\n        {\n            rax_1 = __uflow(rbx);\n        }\n        if (((rax_2 < rbx->_IO_read_end && rax_1 == 0xa) || (rax_2 >= rbx->_IO_read_end && rax_1 == 0xa)))\n        {\n            return rax_1;\n        }\n        if (((rax_2 < rbx->_IO_read_end && rax_1 != 0xa) || (rax_2 >= rbx->_IO_read_end && rax_1 != 0xa)))\n        {\n            if (rax_1 == 0xc)\n            {\n                break;\n            }\n            if (rax_1 == 0xffffffff)\n            {\n                /* tailcall */\n                return sub_4029a0(arg1);\n            }\n        }\n    }\n    char* rax_3 = rbx->_IO_read_ptr;\n    char* rdx_2;\n    int32_t rdi_1;\n    if (rax_3 >= rbx->_IO_read_end)\n    {\n        int32_t rax_6;\n        rax_6 = __uflow(rbx);\n        rdi_1 = rax_6;\n    }\n    else\n    {\n        rdx_2 = &rax_3[1];\n        rbx->_IO_read_ptr = rdx_2;\n        rdi_1 = *rax_3;\n    }\n    if (rdi_1 != 0xa)\n    {\n        rcx = ungetc(rdi_1, rbx);\n    }\n    if (((rdi_1 != 0xa && data_61444a != 0) || (rdi_1 == 0xa && data_61444a != 0)))\n    {\n        data_614449 = 1;\n    }\n    /* tailcall */\n    return sub_403410(&arg1[2], &arg1[6], rdx_2, rcx);\n}\n\n"
        },
        {
            "funcName": "sub_403e40",
            "funcStartAddr": "0x403e40",
            "funcEndAddr": "0x404ddb",
            "decompiledFuncCode": "uint64_t sub_403e40(int32_t arg1, char** arg2)\n{\n    char** rbx = arg2;\n    int32_t rdx = data_6142b0;\n    data_614440 = (rdx - 0xa);\n    if ((rdx - 0xa) <= 0)\n    {\n        data_6142b5 = 0;\n        data_61444a = 1;\n    }\n    if (((rdx - 0xa) <= 0 || ((rdx - 0xa) > 0 && data_6142b5 == 0)))\n    {\n        data_614440 = rdx;\n    }\n    if (data_6143e8 != 0)\n    {\n        int32_t rdx_1 = data_614440;\n        data_614440 = (((rdx_1 >> 0x1f) + rdx_1) >> 1);\n    }\n    int32_t rcx;\n    if (arg1 == 0)\n    {\n        data_61444f = 0;\n        rcx = data_614298;\n    }\n    else if (data_61444f == 0)\n    {\n        rcx = data_614298;\n    }\n    else\n    {\n        data_614298 = arg1;\n        rcx = arg1;\n    }\n    if (data_6142b4 != 0)\n    {\n        data_614444 = 1;\n    }\n    char rdx_2 = data_61443c;\n    int32_t rax_6;\n    if (rcx <= 1)\n    {\n        data_6142b4 = 0;\n        rax_6 = data_6143dc;\n    }\n    else\n    {\n        if (data_6143e0 != 0)\n        {\n            rax_6 = data_6143dc;\n            if ((rdx_2 == 0 && (rax_6 == 1 && **&data_614270 == 9)))\n            {\n                data_614270 = &data_411057;\n            }\n        }\n        else\n        {\n            void* const rax_5 = &data_411057;\n            data_6143dc = 1;\n            if (rdx_2 != 0)\n            {\n                rax_5 = &data_40ce62;\n            }\n            data_6143e0 = 1;\n            data_614270 = rax_5;\n            rax_6 = 1;\n        }\n        data_61443d = 1;\n        data_614434 = 1;\n    }\n    if (rdx_2 != 0)\n    {\n        data_61443d = 0;\n    }\n    char rsi = data_6143fc;\n    int32_t rdi;\n    bool cond:2_1;\n    if (rsi != 0)\n    {\n        bool cond:1_1 = data_614288 != 9;\n        data_614284 = data_61427c;\n        int32_t rdx_4 = data_614278;\n        rdi = (rdx_4 + 1);\n        if ((!cond:1_1))\n        {\n            uint32_t rdi_3 = ((rdx_4 >> 0x1f) >> 0x1d);\n            rdi = ((rdx_4 + (rdi_3 - ((rdx_4 + rdi_3) & 7))) + 8);\n        }\n        cond:2_1 = data_61444f == 0;\n        data_6143f8 = rdi;\n    }\n    if ((rsi == 0 || (rsi != 0 && cond:2_1)))\n    {\n        rdi = 0;\n    }\n    int32_t rdx_6 = ((rcx - 1) * rax_6);\n    bool o = /* bool o = unimplemented  {imul edx, eax} */;\n    if (o)\n    {\n        rdx_6 = 0x7fffffff;\n    }\n    int32_t rax_8 = (data_6142ac - rdi);\n    int32_t rax_9 = (rax_8 - rdx_6);\n    if ((rax_8 + (-rdx_6)))\n    {\n        goto label_404d95;\n    }\n    int32_t temp4_1;\n    int32_t temp5_1;\n    temp4_1 = HIGHW(rax_9);\n    temp5_1 = LOWW(rax_9);\n    int32_t temp0_1 = (COMBINE(temp4_1, temp5_1) / rcx);\n    data_614438 = temp0_1;\n    if (temp0_1 <= 0)\n    {\n        goto label_404dbc;\n    }\n    if (rsi != 0)\n    {\n        free(data_6143f0);\n        int64_t rdi_28 = data_614278;\n        size_t rdi_29 = (rdi_28 + 1);\n        if (rdi_28 <= 0xb)\n        {\n            rdi_29 = 0xc;\n        }\n        data_6143f0 = sub_409300(rdi_29);\n    }\n    free(data_614398);\n    int32_t rdi_6 = 8;\n    if (data_6142a4 >= 8)\n    {\n        rdi_6 = data_6142a4;\n    }\n    int64_t rax_12 = sub_409300(rdi_6);\n    int64_t rdi_8 = data_614478;\n    data_6143e4 = 0;\n    data_614398 = rax_12;\n    free(rdi_8);\n    int64_t rdi_9 = data_614298;\n    uint64_t rax_14;\n    rax_14 = (rdi_9 >> 0x3a) != 0;\n    int64_t rdi_10 = (rdi_9 << 6);\n    uint64_t rax_15 = rax_14;\n    if (rdi_10 < 0)\n    {\n        goto label_404dc1;\n    }\n    if (rax_15 != 0)\n    {\n        goto label_404dc1;\n    }\n    int64_t rax_16 = sub_409300(rdi_10);\n    bool cond:6_1 = data_61444f == 0;\n    uint64_t** rbp_1 = rax_16;\n    data_614478 = rax_16;\n    uint64_t rax_22;\n    uint64_t* rcx_1;\n    if (cond:6_1)\n    {\n        if (arg1 <= 0)\n        {\n            char* rax_81 = dcgettext(nullptr, \"standard input\", 5);\n            *(rbp_1 + 0x39) = 0;\n            rbp_1[1] = rax_81;\n            rbp_1[2] = 0;\n            *rbp_1 = stdin;\n            data_614446 = 1;\n            data_6143e4 = (data_6143e4 + 1);\n            sub_402ab0(0x40ce63, 0xffffffff);\n            *(rbp_1 + 0x2c) = 0;\n        }\n        else\n        {\n            rax_22 = sub_403c80(*rbx, rax_16);\n            if (rax_22 == 0)\n            {\n            label_40426a:\n                return rax_22;\n            }\n            sub_402ab0(*rbx, fileno(*rbp_1));\n            *(rbp_1 + 0x2c) = 0;\n        }\n        int32_t rsi_13 = data_614298;\n        int64_t rax_82 = rbp_1[1];\n        void* rdx_40 = &rbp_1[8];\n        rcx_1 = *rbp_1;\n        if (rsi_13 != 1)\n        {\n            void* rbp_11 = &rbp_1[(((rsi_13 - 2) + 2) * 8)];\n            do\n            {\n                *(rdx_40 + 8) = rax_82;\n                rdx_40 = (rdx_40 + 0x40);\n                *(rdx_40 - 0x40) = rcx_1;\n                *(rdx_40 - 0x30) = 0;\n                *(rdx_40 - 7) = 0;\n                *(rdx_40 - 0x14) = 0;\n            } while (rdx_40 != rbp_11);\n        }\n    }\n    else\n    {\n        if (arg1 != 0)\n        {\n            void* r12_1 = &rbx[((arg1 - 1) + 1)];\n            while (true)\n            {\n                if (sub_403c80(*rbx, rbp_1) != 0)\n                {\n                    rbx = &rbx[1];\n                    rbp_1 = &rbp_1[8];\n                    if (rbx == r12_1)\n                    {\n                        break;\n                    }\n                }\n                else\n                {\n                    rbx = &rbx[1];\n                    data_614298 = (data_614298 - 1);\n                    if (rbx == r12_1)\n                    {\n                        break;\n                    }\n                }\n            }\n        }\n        rax_22 = data_614298;\n        if (rax_22 == 0)\n        {\n            goto label_40426a;\n        }\n        sub_402ab0(0x40ce63, 0xffffffff);\n    }\n    bool cond:7_1 = data_6142b4 != 0;\n    data_614410 = data_6143e4;\n    if ((!cond:7_1))\n    {\n        goto label_4040aa;\n    }\n    data_614298;\n    int32_t rbx_9 = (data_614440 * data_614298);\n    bool o_2 = /* bool o_2 = unimplemented  {imul ebx, dword [rel &data_614298]} */;\n    if ((!o_2))\n    {\n        int32_t r12_5 = (rbx_9 + 1);\n        if ((rbx_9 + 1))\n        {\n            goto label_404d90;\n        }\n        int32_t rbp_8 = data_614438;\n        int32_t rbp_9 = (rbp_8 + 1);\n        if ((rbp_8 + 1))\n        {\n            goto label_404d90;\n        }\n        int32_t rbp_10 = (rbp_9 * rbx_9);\n        bool o_5 = /* bool o_5 = unimplemented  {imul ebp, ebx} */;\n        if (o_5)\n        {\n            goto label_404d90;\n        }\n        free(data_614458);\n        int64_t rdi_34 = r12_5;\n        uint64_t rax_68;\n        rax_68 = (rdi_34 >> 0x3e) != 0;\n        int64_t rdi_35 = (rdi_34 << 2);\n        uint64_t rax_69 = rax_68;\n        if (rdi_35 < 0)\n        {\n            goto label_404dc1;\n        }\n        if (rax_69 != 0)\n        {\n            goto label_404dc1;\n        }\n        data_614458 = sub_409300(rdi_35);\n        free(data_614450);\n        int64_t rdi_37 = rbx_9;\n        uint64_t rax_72;\n        rax_72 = (rdi_37 >> 0x3e) != 0;\n        int64_t rdi_38 = (rdi_37 << 2);\n        uint64_t rax_73 = rax_72;\n        if (rdi_38 < 0)\n        {\n            goto label_404dc1;\n        }\n        if (rax_73 != 0)\n        {\n            goto label_404dc1;\n        }\n        int64_t rbx_10 = rbp_10;\n        data_614450 = sub_409300(rdi_38);\n        free(data_614470);\n        size_t rax_77;\n        bool rdx_38;\n        rdx_38 = HIGHD((rbx_10 * (data_6143e0 + 1)));\n        rax_77 = LOWD((rbx_10 * (data_6143e0 + 1)));\n        uint64_t rdx_39 = ((rbx_10 * (data_6143e0 + 1)) >> 0x40) != 0;\n        if (rax_77 < 0)\n        {\n            goto label_404dc1;\n        }\n        if (rdx_39 != 0)\n        {\n            goto label_404dc1;\n        }\n        int64_t rax_78;\n        rax_78 = sub_409300(rax_77);\n        data_614470 = rax_78;\n        data_614460 = (rbx_10 * (data_6143e0 + 1));\n    label_4040aa:\n        int64_t r13_1 = data_614418;\n        int32_t rax_65;\n        if (r13_1 > 1)\n        {\n            int64_t r12_3 = 1;\n            do\n            {\n                int64_t rbx_7 = data_614478;\n                int32_t r14_5 = 1;\n                int32_t r9_4 = data_614298;\n                if (data_614440 > 1)\n                {\n                    do\n                    {\n                        if (r9_4 > 0)\n                        {\n                            int32_t rbp_6 = 1;\n                            while (true)\n                            {\n                                if (*(rbx_7 + 0x10) != 0)\n                                {\n                                    rbp_6 = (rbp_6 + 1);\n                                    rbx_7 = (rbx_7 + 0x40);\n                                    if (rbp_6 > r9_4)\n                                    {\n                                        break;\n                                    }\n                                }\n                                else\n                                {\n                                    int32_t rsi_11 = rbp_6;\n                                    int64_t rdi_31 = rbx_7;\n                                    rbp_6 = (rbp_6 + 1);\n                                    rbx_7 = (rbx_7 + 0x40);\n                                    sub_403490(rdi_31, rsi_11);\n                                    r9_4 = data_614298;\n                                    if (rbp_6 > r9_4)\n                                    {\n                                        break;\n                                    }\n                                }\n                            }\n                            rbx_7 = data_614478;\n                        }\n                        r14_5 = (r14_5 + 1);\n                    } while (r14_5 < data_614440);\n                }\n                data_614390 = 1;\n                if (r9_4 > 0)\n                {\n                    int32_t rbp_7 = 1;\n                    while (true)\n                    {\n                        if (*(rbx_7 + 0x10) != 0)\n                        {\n                            rbp_7 = (rbp_7 + 1);\n                            rbx_7 = (rbx_7 + 0x40);\n                            if (rbp_7 > r9_4)\n                            {\n                                break;\n                            }\n                        }\n                        else\n                        {\n                            int32_t rsi_12 = rbp_7;\n                            int64_t rdi_32 = rbx_7;\n                            rbp_7 = (rbp_7 + 1);\n                            rbx_7 = (rbx_7 + 0x40);\n                            sub_403490(rdi_32, rsi_12);\n                            r9_4 = data_614298;\n                            if (rbp_7 > r9_4)\n                            {\n                                break;\n                            }\n                        }\n                    }\n                    if (data_6142b4 != 0)\n                    {\n                        int64_t rax_64 = data_614478;\n                        if (r9_4 > 0)\n                        {\n                            int64_t rdx_37 = ((((r9_4 - 1) + 1) << 6) + rax_64);\n                            do\n                            {\n                                if (*(rax_64 + 0x10) != 3)\n                                {\n                                    *(rax_64 + 0x10) = 2;\n                                }\n                                rax_64 = (rax_64 + 0x40);\n                            } while (rax_64 != rdx_37);\n                        }\n                    }\n                }\n                sub_402710();\n                rax_65 = data_614410;\n                data_614390 = 0;\n                if (rax_65 <= 0)\n                {\n                    break;\n                }\n                r12_3 = (r12_3 + 1);\n            } while (r13_1 != r12_3);\n            if (rax_65 <= 0)\n            {\n                error(0, 0, dcgettext(nullptr, \"starting page number %lu exceeds\u2026\", 5), r13_1, r12_3);\n                rax_22 = data_614410;\n            }\n            if (((rax_65 <= 0 && rax_22 > 0) || rax_65 > 0))\n            {\n                data_614408 = data_614418;\n            }\n        }\n        else\n        {\n            data_614408 = 1;\n        }\n        if ((r13_1 <= 1 || (r13_1 > 1 && ((rax_65 <= 0 && rax_22 > 0) || rax_65 > 0))))\n        {\n            char rbp_2 = data_61443d;\n            int32_t rsi_2 = data_61442c;\n            int32_t r8_3 = 0;\n            if (rbp_2 != 0)\n            {\n                r8_3 = (data_614438 + rsi_2);\n                if ((data_61444f != 0 && data_6143fc != 0))\n                {\n                    r8_3 = (r8_3 + data_6143f8);\n                }\n            }\n            int32_t r12_2 = data_6143dc;\n            void* r10_1 = data_614478;\n            int32_t r9_1 = data_614298;\n            char r11_1 = data_6142b4;\n            int32_t rsi_3 = (rsi_2 + r12_2);\n            void* rdx_9 = r10_1;\n            int32_t rbx_1 = r9_1;\n            char rax_20 = r11_1;\n            char rdi_12;\n            if (r9_1 <= 1)\n            {\n                rbx_1 = 1;\n                rdi_12 = data_6143fc;\n            }\n            else\n            {\n                rdi_12 = data_6143fc;\n                void* rax_21 = r10_1;\n                int32_t rdx_10 = 1;\n                int32_t r14_1 = data_614438;\n                int32_t r13_3 = (data_61444f ^ 1);\n                while (true)\n                {\n                    if (r11_1 != 0)\n                    {\n                        *(rax_21 + 0x20) = 0x402790;\n                        *(rax_21 + 0x18) = 0x403280;\n                    }\n                    else\n                    {\n                        *(rax_21 + 0x20) = 0x4031e0;\n                        *(rax_21 + 0x18) = 0x403840;\n                    }\n                    rcx_1 = nullptr;\n                    if (rdi_12 != 0)\n                    {\n                        rcx_1 = rdx_10 == 1;\n                        rcx_1 = (rcx_1 | r13_3);\n                    }\n                    *(rax_21 + 0x38) = rcx_1;\n                    *(rax_21 + 0x34) = rsi_3;\n                    if (rbp_2 == 0)\n                    {\n                        rdx_10 = (rdx_10 + 1);\n                        r8_3 = 0;\n                        rsi_3 = 0;\n                        rax_21 = (rax_21 + 0x40);\n                        if (rdx_10 == r9_1)\n                        {\n                            break;\n                        }\n                    }\n                    else\n                    {\n                        rsi_3 = (r12_2 + r8_3);\n                        rdx_10 = (rdx_10 + 1);\n                        rax_21 = (rax_21 + 0x40);\n                        r8_3 = (rsi_3 + r14_1);\n                        if (rdx_10 == r9_1)\n                        {\n                            break;\n                        }\n                    }\n                }\n                rax_20 = r11_1;\n                rdx_9 = ((((r9_1 - 2) + 1) << 6) + r10_1);\n            }\n            if ((r11_1 == 0 || (r11_1 != 0 && data_614444 == 0)))\n            {\n                *(rdx_9 + 0x20) = 0x4031e0;\n                *(rdx_9 + 0x18) = 0x403840;\n            }\n            if ((r11_1 != 0 && data_614444 != 0))\n            {\n                *(rdx_9 + 0x20) = 0x402790;\n                *(rdx_9 + 0x18) = 0x403280;\n            }\n            if (rdi_12 != 0)\n            {\n                rcx_1 = rbx_1 == 1;\n                rdi_12 = ((data_61444f ^ 1) | rcx_1);\n            }\n            *(rdx_9 + 0x38) = rdi_12;\n            void* rbx_2 = r10_1;\n            *(rdx_9 + 0x34) = rsi_3;\n            data_614400 = data_614284;\n            if (rax_20 == 0)\n            {\n                while (true)\n                {\n                    if (r9_1 != 0)\n                    {\n                        int32_t rcx_2 = data_614440;\n                        void* rax_26 = ((((r9_1 - 1) + 1) << 6) + r10_1);\n                        do\n                        {\n                            int32_t rdx_15 = 0;\n                            if (*(rbx_2 + 0x10) == 0)\n                            {\n                                rdx_15 = rcx_2;\n                            }\n                            rbx_2 = (rbx_2 + 0x40);\n                            *(rbx_2 - 0x10) = rdx_15;\n                        } while (rax_26 != rbx_2);\n                    }\n                label_404327:\n                    rax_22 = sub_4026b0();\n                    if (rax_22 == 0)\n                    {\n                        return rax_22;\n                    }\n                    if (data_6142b5 != 0)\n                    {\n                        data_614448 = 1;\n                    }\n                    int32_t rbp_3 = data_614440;\n                    bool cond:11_1 = data_6143e8 != 0;\n                    data_6143d0 = 0;\n                    int32_t rax_27 = (rbp_3 + rbp_3);\n                    if (cond:11_1)\n                    {\n                        rbp_3 = rax_27;\n                    }\n                    int32_t r13_4 = 0;\n                    bool cond:12_1 = rbp_3 != 0;\n                    int32_t rax_28;\n                    if (rbp_3 > 0)\n                    {\n                    label_404370:\n                        rax_28 = sub_4026b0();\n                        if (rax_28 != 0)\n                        {\n                            int32_t rsi_6 = data_614298;\n                            data_614428 = 0;\n                            data_614430 = 0;\n                            int64_t rbx_3 = data_614478;\n                            data_6143d8 = 0;\n                            data_6143d0 = 0;\n                            data_61444e = 0;\n                            data_61444d = 1;\n                            int32_t rax_35;\n                            if (rsi_6 <= 0)\n                            {\n                            label_4044c4:\n                                rax_35 = sub_4026b0();\n                            }\n                            else\n                            {\n                                int32_t r14_2 = 1;\n                            label_404459:\n                                int32_t rcx_3 = *(rbx_3 + 0x30);\n                                data_614424 = 0;\n                                int32_t rax_32;\n                                int32_t rax_51;\n                                if ((rcx_3 > 0 || (rcx_3 <= 0 && *(rbx_3 + 0x10) == 1)))\n                                {\n                                    int32_t rax_29 = *(rbx_3 + 0x34);\n                                    data_61444c = 0;\n                                    data_6143d4 = rax_29;\n                                    if (*(rbx_3 + 0x18)(rbx_3) == 0)\n                                    {\n                                        sub_403d80(rbx_3);\n                                    }\n                                    uint32_t r9_2 = data_6143d0;\n                                    rax_32 = (*(rbx_3 + 0x30) - 1);\n                                    r13_4 = (r13_4 | r9_2);\n                                    *(rbx_3 + 0x30) = rax_32;\n                                    if (rax_32 <= 0)\n                                    {\n                                        rax_51 = sub_4026b0();\n                                        if ((rax_51 == 0 && r9_2 != 0))\n                                        {\n                                        label_4044a1:\n                                            uint64_t* const rdi_18 = stdout;\n                                            char* rax_34 = stdout[5];\n                                            if (rax_34 >= stdout[6])\n                                            {\n                                                __overflow(rdi_18, 0xa);\n                                            }\n                                            else\n                                            {\n                                                stdout[5] = &rax_34[1];\n                                                *rax_34 = 0xa;\n                                            }\n                                            rbp_3 = (rbp_3 - 1);\n                                            goto label_4044c4;\n                                        }\n                                    }\n                                    if (((rax_32 > 0 || (rax_32 <= 0 && rax_51 != 0)) && data_61444f != 0))\n                                    {\n                                        int32_t rax_33 = *(rbx_3 + 0x10);\n                                        if (rax_33 != 0)\n                                        {\n                                            if (data_61444d != 0)\n                                            {\n                                                goto label_40448b;\n                                            }\n                                            if (rax_33 == 3)\n                                            {\n                                                goto label_404783;\n                                            }\n                                            if ((rax_33 == 2 && data_61444c != 0))\n                                            {\n                                                goto label_404783;\n                                            }\n                                        }\n                                    }\n                                }\n                                if (((rcx_3 <= 0 && *(rbx_3 + 0x10) != 1) && data_61444f != 0))\n                                {\n                                    if (data_61444d == 0)\n                                    {\n                                    label_404783:\n                                        sub_4037e0(rbx_3);\n                                    }\n                                    else\n                                    {\n                                    label_40448b:\n                                        data_61444e = 1;\n                                    }\n                                }\n                                if ((((((rcx_3 > 0 || (rcx_3 <= 0 && *(rbx_3 + 0x10) == 1)) && (rax_32 > 0 || (rax_32 <= 0 && rax_51 != 0))) && data_61444f == 0) || (((rcx_3 > 0 || (rcx_3 <= 0 && *(rbx_3 + 0x10) == 1)) && (rax_32 > 0 || (rax_32 <= 0 && rax_51 != 0))) && data_61444f != 0)) || (rcx_3 <= 0 && *(rbx_3 + 0x10) != 1)))\n                                {\n                                    if (data_6143e0 == 0)\n                                    {\n                                        goto label_404448;\n                                    }\n                                    data_6143d8 = (data_6143d8 + 1);\n                                label_404448:\n                                    r14_2 = (r14_2 + 1);\n                                    if (r14_2 <= data_614298)\n                                    {\n                                        break;\n                                    }\n                                    if (data_6143d0 == 0)\n                                    {\n                                        goto label_4044c4;\n                                    }\n                                    goto label_4044a1;\n                                }\n                            }\n                            if (((rsi_6 <= 0 && rax_35 != 0) || (((rsi_6 <= 0 && rax_35 == 0) || rsi_6 > 0) && data_6142b5 != 0)))\n                            {\n                                if ((data_6143e8 != 0 && r13_4 != 0))\n                                {\n                                    uint64_t* const rdi_19 = stdout;\n                                    char* rax_36 = stdout[5];\n                                    if (rax_36 >= stdout[6])\n                                    {\n                                        __overflow(rdi_19, 0xa);\n                                    }\n                                    else\n                                    {\n                                        stdout[5] = &rax_36[1];\n                                        *rax_36 = 0xa;\n                                    }\n                                    rbp_3 = (rbp_3 - 1);\n                                }\n                                if (rbp_3 > 0)\n                                {\n                                    break;\n                                }\n                            }\n                            if (rbp_3 != 0)\n                            {\n                                goto label_404548;\n                            }\n                            r9_1 = data_614298;\n                            r10_1 = data_614478;\n                            if (r9_1 <= 0)\n                            {\n                                goto label_404548;\n                            }\n                        }\n                        else\n                        {\n                        label_404548:\n                            data_6143d0 = r13_4;\n                            if ((r13_4 != 0 && data_6142b5 != 0))\n                            {\n                                if (data_614447 != 0)\n                                {\n                                    uint64_t* const rdi_30 = stdout;\n                                    char* rax_61 = stdout[5];\n                                    if (rax_61 >= stdout[6])\n                                    {\n                                        __overflow(rdi_30, 0xc);\n                                    }\n                                    else\n                                    {\n                                        stdout[5] = &rax_61[1];\n                                        *rax_61 = 0xc;\n                                    }\n                                }\n                                else\n                                {\n                                    int32_t rbp_5 = (rbp_3 + 5);\n                                    if (rbp_3 != 0xfffffffb)\n                                    {\n                                    label_4048e4:\n                                        uint64_t* const rdi_26 = stdout;\n                                        char* rax_58 = stdout[5];\n                                        if (rax_58 < stdout[6])\n                                        {\n                                            stdout[5] = &rax_58[1];\n                                            *rax_58 = 0xa;\n                                        }\n                                        else\n                                        {\n                                            __overflow(rdi_26, 0xa);\n                                        }\n                                        int32_t temp26_1 = rbp_5;\n                                        if (temp26_1 != 1)\n                                        {\n                                            break;\n                                        }\n                                    }\n                                }\n                                goto label_4045a1;\n                            }\n                        }\n                    }\n                    if ((((rbp_3 <= 0 && (!cond:12_1)) && r9_1 > 0) || (rbp_3 > 0 && rax_28 != 0)))\n                    {\n                        void* rax_40 = ((((r9_1 - 1) + 1) << 6) + r10_1);\n                    label_404534:\n                        if (*(r10_1 + 0x10) == 0)\n                        {\n                            *(r10_1 + 0x39) = 1;\n                        }\n                        r10_1 = (r10_1 + 0x40);\n                        if (r10_1 != rax_40)\n                        {\n                            break;\n                        }\n                        rbp_3 = 0;\n                        goto label_404548;\n                    }\n                    if ((((rbp_3 <= 0 && cond:12_1) || ((rbp_3 <= 0 && (!cond:12_1)) && r9_1 <= 0)) || (rbp_3 > 0 && rax_28 == 0)))\n                    {\n                        if (data_61444a != 0)\n                        {\n                            if (data_614449 != 0)\n                            {\n                                uint64_t* const rdi_20 = stdout;\n                                char* rax_41 = stdout[5];\n                                if (rax_41 >= stdout[6])\n                                {\n                                    __overflow(rdi_20, 0xc);\n                                }\n                                else\n                                {\n                                    stdout[5] = &rax_41[1];\n                                    *rax_41 = 0xc;\n                                }\n                                data_614449 = 0;\n                            }\n                            goto label_4045a1;\n                        }\n                    label_4045a1:\n                        rax_22 = (data_614408 + 1);\n                        bool cond:14_1 = rax_22 > data_614290;\n                        data_614408 = rax_22;\n                        if (cond:14_1)\n                        {\n                            return rax_22;\n                        }\n                        sub_402710();\n                        r10_1 = data_614478;\n                        r9_1 = data_614298;\n                        rbx_2 = r10_1;\n                        if (data_6142b4 != 0)\n                        {\n                            break;\n                        }\n                    }\n                }\n            }\n            char r8_5 = data_614444;\n            data_614468 = 0;\n            int32_t rax_45 = (r9_1 - 0);\n            int32_t rax_47;\n            if (rax_45 <= 0)\n            {\n                rax_47 = 0;\n            }\n            else\n            {\n                void* rax_46 = r10_1;\n                void* rdx_23 = ((((rax_45 - 1) + 1) << 6) + r10_1);\n                do\n                {\n                    *(rax_46 + 0x2c) = 0;\n                    rax_46 = (rax_46 + 0x40);\n                } while (rax_46 != rdx_23);\n                rax_47 = data_614410;\n            }\n            int32_t rbp_4;\n            int64_t rsi_9;\n            if ((rax_45 <= 0 || (rax_45 > 0 && rax_47 == 0)))\n            {\n                rsi_9 = 0;\n                rbp_4 = 0;\n            }\n            if ((rax_45 > 0 && rax_47 != 0))\n            {\n                int32_t var_40_1 = 1;\n                int32_t r13_5 = 0;\n                rbp_4 = 0;\n                uint64_t r15_1 = 0;\n                while (true)\n                {\n                    int32_t r14_3 = data_614440;\n                    *(rbx_2 + 0x28) = rbp_4;\n                    if (r14_3 != 0)\n                    {\n                        while (data_614410 != 0)\n                        {\n                            if (*(rbx_2 + 0x10) == 0)\n                            {\n                                data_614424 = 0;\n                                if (sub_403840(rbx_2, 0) == 0)\n                                {\n                                    sub_403d80(rbx_2);\n                                }\n                                int32_t rax_50 = data_614468;\n                                if ((*(rbx_2 + 0x10) == 0 || (*(rbx_2 + 0x10) != 0 && rax_50 != r13_5)))\n                                {\n                                    int64_t rsi_7 = data_614458;\n                                    *(rbx_2 + 0x2c) = (*(rbx_2 + 0x2c) + 1);\n                                    rbp_4 = (rbp_4 + 1);\n                                    int64_t rdx_24 = data_614450;\n                                    *(rsi_7 + (r15_1 << 2)) = r13_5;\n                                    r13_5 = rax_50;\n                                    *(rdx_24 + (r15_1 << 2)) = data_614424;\n                                    r15_1 = rbp_4;\n                                    int32_t temp24_1 = r14_3;\n                                    r14_3 = (r14_3 - 1);\n                                    if (temp24_1 == 1)\n                                    {\n                                        break;\n                                    }\n                                    continue;\n                                }\n                            }\n                            int32_t temp23_1 = r14_3;\n                            r14_3 = (r14_3 - 1);\n                            if (temp23_1 == 1)\n                            {\n                                break;\n                            }\n                        }\n                        if (data_614410 == 0)\n                        {\n                            r10_1 = data_614478;\n                            r9_1 = data_614298;\n                            rax_47 = r13_5;\n                            rsi_9 = (r15_1 << 2);\n                            r8_5 = data_614444;\n                            rbx_2 = r10_1;\n                            break;\n                        }\n                    }\n                    var_40_1 = (var_40_1 + 1);\n                    rbx_2 = (rbx_2 + 0x40);\n                    rax_47 = r13_5;\n                    rsi_9 = (r15_1 << 2);\n                    if ((rax_45 >= var_40_1 && data_614410 != 0))\n                    {\n                        continue;\n                    }\n                    rbx_2 = data_614478;\n                    r9_1 = data_614298;\n                    r8_5 = data_614444;\n                    r10_1 = rbx_2;\n                    break;\n                }\n            }\n            int32_t r14_4 = (r9_1 - 1);\n            *(data_614458 + rsi_9) = rax_47;\n            if (r8_5 != 0)\n            {\n                if (r9_1 > 0)\n                {\n                    int32_t r13_6 = (r9_1 + 1);\n                    int32_t rdi_25 = 0;\n                    void* rsi_10 = r10_1;\n                    int32_t temp17_1;\n                    int32_t temp18_1;\n                    temp17_1 = HIGHW(rbp_4);\n                    temp18_1 = LOWW(rbp_4);\n                    int32_t rcx_5 = 1;\n                    int32_t temp0_2 = (COMBINE(temp17_1, temp18_1) / r9_1);\n                    int32_t temp1_2 = (COMBINE(temp17_1, temp18_1) % r9_1);\n                    int32_t r15_2 = (temp0_2 + 1);\n                    do\n                    {\n                        int32_t r11_3 = temp0_2;\n                        *(rsi_10 + 0x28) = rdi_25;\n                        if (temp1_2 >= rcx_5)\n                        {\n                            r11_3 = r15_2;\n                        }\n                        rcx_5 = (rcx_5 + 1);\n                        rsi_10 = (rsi_10 + 0x40);\n                        *(rsi_10 - 0x14) = r11_3;\n                        rdi_25 = (rdi_25 + r11_3);\n                    } while (rcx_5 != r13_6);\n                }\n                if (r14_4 == 0)\n                {\n                label_404872:\n                    *(rbx_2 + 0x30) = *(rbx_2 + 0x2c);\n                    goto label_404327;\n                }\n            }\n            if (((r8_5 == 0 && r14_4 != 0) || r8_5 != 0))\n            {\n                uint64_t rdx_28 = (r9_1 - 2);\n                void* rax_55 = r10_1;\n                void* rdx_31 = (((rdx_28 + 1) << 6) + r10_1);\n                do\n                {\n                    int32_t rcx_6 = *(rax_55 + 0x2c);\n                    rax_55 = (rax_55 + 0x40);\n                    *(rax_55 - 0x10) = rcx_6;\n                } while (rax_55 != rdx_31);\n                rbx_2 = (((rdx_28 + 1) << 6) + r10_1);\n                if (r8_5 != 0)\n                {\n                    goto label_404872;\n                }\n            }\n            if (*(rbx_2 + 0x10) != 0)\n            {\n                *(rbx_2 + 0x30) = 0;\n                goto label_404327;\n            }\n            *(rbx_2 + 0x30) = data_614440;\n            goto label_404327;\n        }\n        goto label_40426a;\n    }\nlabel_404d90:\n    sub_4027f0();\nlabel_404d95:\n    data_614438 = 0;\nlabel_404dbc:\n    error(1, 0, dcgettext(nullptr, \"page width too narrow\", 5));\nlabel_404dc1:\n    sub_409550();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404de0",
            "funcStartAddr": "0x404de0",
            "funcEndAddr": "0x4052dd",
            "decompiledFuncCode": "int64_t sub_404de0(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_614490;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [OPTION]... [FILE]...\\n\", 5), rbp);\n        fputs_unlocked(dcgettext(nullptr, \"Paginate or columnate FILE(s) fo\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nWith no FILE, or when FILE is \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nMandatory arguments to long op\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  +FIRST_PAGE[:LAST_PAGE], --pag\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -a, --across      print column\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -D, --date-format=FORMAT\\n    \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -h, --header=HEADER\\n         \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -l, --length=PAGE_LENGTH\\n    \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -m, --merge       print all fi\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -n[SEP[DIGITS]], --number-line\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -o, --indent=MARGIN\\n         \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -s[CHAR], --separator[=CHAR]\\n\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -S[STRING], --sep-string[=STRI\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -t, --omit-header  omit page h\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -T, --omit-pagination\\n       \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -W, --page-width=PAGE_WIDTH\\n \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        void* const var_88 = &data_40ce7d;\n        void* const* rax_22 = &var_88;\n        void* const var_78_1 = \"coreutils\";\n        void* const var_70_1 = \"Multi-call invocation\";\n        void* const var_68_1 = \"sha224sum\";\n        void* const var_60_1 = \"sha2 utilities\";\n        void* const var_58_1 = \"sha256sum\";\n        void* const var_50_1 = \"sha2 utilities\";\n        void* const var_48_1 = \"sha384sum\";\n        void* const var_40_1 = \"sha2 utilities\";\n        void* const var_38_1 = \"sha512sum\";\n        void* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_22 = &rax_22[2];\n            void* const rdi_20 = *rax_22;\n            c_1 = false;\n            z_1 = (rdi_20 & rdi_20) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_20 = &data_40ce7a;\n            int64_t rcx_2 = 3;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_20;\n                char temp1_1 = *rdi_20;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_20 = (rsi_20 + 1);\n                rdi_20 = (rdi_20 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbp_1 = rax_22[1];\n        char* rax_33;\n        int32_t rax_34;\n        void* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_5;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_33 = setlocale(5, nullptr, rdx_5, rcx_5, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_33 != 0)\n            {\n                rax_34 = strncmp(rax_33, &data_40cf01, 3);\n                if (rax_34 != 0)\n                {\n                    rbp_1 = &data_40ce7a;\n                }\n            }\n            if ((rax_33 == 0 || (rax_33 != 0 && rax_34 == 0)))\n            {\n                rbp_1 = &data_40ce7a;\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", &data_40ce7a);\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_3;\n            uint64_t r8_1;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_25 = setlocale(5, nullptr, rdx_3, rcx_3, r8_1, r9_1, var_88, \"test invocation\");\n            if (rax_25 == 0)\n            {\n                goto label_4051d0;\n            }\n            if (strncmp(rax_25, &data_40cf01, 3) == 0)\n            {\n                goto label_4051d0;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_33 != 0) && rax_34 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), &data_40ce7a);\n        label_4051d0:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", &data_40ce7a);\n            if (rbp_1 != &data_40ce7a)\n            {\n                r12_1 = &data_40ce63;\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4052e0",
            "funcStartAddr": "0x4052e0",
            "funcEndAddr": "0x4053aa",
            "decompiledFuncCode": "uint64_t sub_4052e0(char* arg1, char arg2, char* arg3, int32_t* arg4)\n{\n    char* rbx = arg1;\n    int32_t rsi = *arg1;\n    uint64_t rax = rsi;\n    if ((rsi - 0x30) > 9)\n    {\n        *arg3 = rax;\n        rax = arg1[1];\n        rbx = &rbx[1];\n    }\n    if (rax == 0)\n    {\n        return rax;\n    }\n    int64_t var_20;\n    if (sub_409e00(rbx, nullptr, 0xa, &var_20, &data_40ce63) == 0)\n    {\n        int64_t rax_2 = var_20;\n        if ((rax_2 - 1) <= 0x7ffffffe)\n        {\n            *arg4 = rax_2;\n            return rax_2;\n        }\n    }\n    int32_t r12_1 = arg2;\n    int64_t rax_3 = sub_408d30(rbx);\n    char* rax_4 = dcgettext(nullptr, \"'-%c' extra characters or invali\u2026\", 5);\n    uint64_t rsi_2 = 0x4b;\n    if (var_20 <= 0x7fffffff)\n    {\n        rsi_2 = *__errno_location();\n    }\n    error(0, rsi_2, rax_4, r12_1, rax_3);\n    sub_404de0(1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4053d0",
            "funcStartAddr": "0x4053d0",
            "funcEndAddr": "0x40546e",
            "decompiledFuncCode": "void sub_4053d0(void* arg1)\n{\n    int32_t rax = sub_40c070(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_614480 == 0 || (data_614480 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_614488;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_408b80(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_614480 != 0) && *rax_1 == 0x20)) && sub_40c070(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_6142c0);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_405470",
            "funcStartAddr": "0x405470",
            "funcEndAddr": "0x405475",
            "decompiledFuncCode": "int64_t sub_405470(int32_t arg1, int64_t arg2, off64_t arg3, int32_t arg4)\n{\n    /* tailcall */\n    return posix_fadvise(arg1, arg2, arg3, arg4);\n}\n\n"
        },
        {
            "funcName": "sub_405480",
            "funcStartAddr": "0x405480",
            "funcEndAddr": "0x4054a1",
            "decompiledFuncCode": "void sub_405480(FILE* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        return;\n    }\n    /* tailcall */\n    return posix_fadvise(fileno(arg1), 0, 0, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4054b0",
            "funcStartAddr": "0x4054b0",
            "funcEndAddr": "0x405543",
            "decompiledFuncCode": "FILE* sub_4054b0(char* arg1, char* arg2)\n{\n    FILE* rax = fopen(arg1, arg2);\n    FILE* rbx = rax;\n    if (rax != 0)\n    {\n        int32_t rax_1 = fileno(rax);\n        if (rax_1 <= 2)\n        {\n            int32_t rax_3 = sub_408d50(rax_1);\n            if (rax_3 < 0)\n            {\n                int32_t* rax_7 = __errno_location();\n                FILE* rdi_5 = rbx;\n                rbx = nullptr;\n                int32_t r12_2 = *rax_7;\n                sub_40aa20(rdi_5);\n                *rax_7 = r12_2;\n            }\n            else\n            {\n                int32_t rax_4 = sub_40aa20(rbx);\n                FILE* rax_5;\n                if (rax_4 == 0)\n                {\n                    rax_5 = fdopen(rax_3, arg2);\n                    rbx = rax_5;\n                }\n                if ((rax_4 != 0 || (rax_4 == 0 && rax_5 == 0)))\n                {\n                    int32_t* rax_6 = __errno_location();\n                    int32_t rbp_1 = *rax_6;\n                    close(rax_3);\n                    *rax_6 = rbp_1;\n                    rbx = nullptr;\n                }\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_405550",
            "funcStartAddr": "0x405550",
            "funcEndAddr": "0x40558a",
            "decompiledFuncCode": "__syscall_slong_t sub_405550(struct timespec* arg1)\n{\n    __syscall_slong_t rax = clock_gettime(0, arg1);\n    if (rax != 0)\n    {\n        int64_t var_18;\n        gettimeofday(&var_18, nullptr);\n        arg1->tv_sec = var_18;\n        int64_t var_10;\n        rax = (var_10 * 0x3e8);\n        arg1->tv_nsec = rax;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405590",
            "funcStartAddr": "0x405590",
            "funcEndAddr": "0x4055ee",
            "decompiledFuncCode": "int64_t sub_405590()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_40ef8d;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            void* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4055f0",
            "funcStartAddr": "0x4055f0",
            "funcEndAddr": "0x40568c",
            "decompiledFuncCode": "void* sub_4055f0(uint64_t arg1, void* arg2)\n{\n    void* rcx = (arg2 + 0x14);\n    *(arg2 + 0x14) = 0;\n    if (arg1 < 0)\n    {\n        void* rsi;\n        while (true)\n        {\n            rsi = (rcx - 1);\n            int64_t rax_7;\n            int64_t rdx_3;\n            rdx_3 = HIGHD((arg1 * 0x6666666666666667));\n            rax_7 = LOWD((arg1 * 0x6666666666666667));\n            int64_t rdx_5 = ((rdx_3 >> 2) - (arg1 >> 0x3f));\n            char rax_12 = ((0x30 + (rdx_5 * 0xa)) - arg1);\n            arg1 = rdx_5;\n            *(rcx - 1) = rax_12;\n            if (rdx_5 == 0)\n            {\n                break;\n            }\n            rcx = rsi;\n        }\n        *(rsi - 1) = 0x2d;\n        return (rcx - 2);\n    }\n    uint64_t rdx_2;\n    do\n    {\n        rcx = (rcx - 1);\n        int64_t rax_2;\n        int64_t rdx_1;\n        rdx_1 = HIGHD((arg1 * -0x3333333333333333));\n        rax_2 = LOWD((arg1 * -0x3333333333333333));\n        rdx_2 = (rdx_1 >> 3);\n        char rax_3 = (rdx_2 + (rdx_2 << 2));\n        *rcx = ((arg1 - (rax_3 + rax_3)) + 0x30);\n        arg1 = rdx_2;\n    } while (rdx_2 != 0);\n    return rcx;\n}\n\n"
        },
        {
            "funcName": "sub_405690",
            "funcStartAddr": "0x405690",
            "funcEndAddr": "0x405843",
            "decompiledFuncCode": "uint64_t sub_405690(char* arg1, int64_t arg2, int32_t arg3)\n{\n    char* r13 = &arg1[arg2];\n    char* rbx = arg1;\n    uint64_t rax = __ctype_get_mb_cur_max();\n    int32_t r12;\n    if (rax <= 1)\n    {\n        r12 = 0;\n        if (rbx < r13)\n        {\n            r12 = 0;\n            int32_t r15_1 = (arg3 & 2);\n            uint16_t* rdx_3 = *__ctype_b_loc();\n            while (true)\n            {\n                rbx = &rbx[1];\n                int16_t rax_11 = rdx_3[rbx[-1]];\n                if (((*rax_11[1] & 0x40) == 0 && r15_1 != 0))\n                {\n                    break;\n                }\n                if ((((*rax_11[1] & 0x40) != 0 || (((*rax_11[1] & 0x40) == 0 && r15_1 == 0) && (rax_11 & 2) == 0)) && r12 != 0x7fffffff))\n                {\n                    r12 = (r12 + 1);\n                }\n                if (((((*rax_11[1] & 0x40) != 0 || (((*rax_11[1] & 0x40) == 0 && r15_1 == 0) && (rax_11 & 2) == 0)) && r12 != 0x7fffffff) || (((*rax_11[1] & 0x40) == 0 && r15_1 == 0) && (rax_11 & 2) != 0)))\n                {\n                    if (r13 == rbx)\n                    {\n                        return r12;\n                    }\n                    continue;\n                }\n                if ((((*rax_11[1] & 0x40) != 0 || (((*rax_11[1] & 0x40) == 0 && r15_1 == 0) && (rax_11 & 2) == 0)) && r12 == 0x7fffffff))\n                {\n                    return r12;\n                }\n            }\n        }\n    }\n    else\n    {\n        r12 = 0;\n        if (rbx < r13)\n        {\n            while (true)\n            {\n                char rax_2 = *rbx;\n                if (rax_2 <= 0x3f)\n                {\n                    if (rax_2 < 0x25)\n                    {\n                        if ((rax_2 - 0x20) <= 3)\n                        {\n                            goto label_4056db;\n                        }\n                        goto label_405702;\n                    }\n                label_4056db:\n                    rbx = &rbx[1];\n                    r12 = (r12 + 1);\n                }\n                else\n                {\n                    if (rax_2 >= 0x41)\n                    {\n                        if (rax_2 <= 0x5f)\n                        {\n                            goto label_4056db;\n                        }\n                        if ((rax_2 - 0x61) <= 0x1d)\n                        {\n                            goto label_4056db;\n                        }\n                        goto label_405702;\n                    }\n                label_405702:\n                    mbstate_t var_40;\n                    var_40.__count = 0;\n                    var_40.__value = 0;\n                    uint64_t rax_5;\n                    while (true)\n                    {\n                        uint32_t var_44;\n                        rax_5 = sub_40ba50(&var_44, rbx, (r13 - rbx), &var_40);\n                        uint64_t rbp_1 = rax_5;\n                        if ((rax_5 == -1 && (arg3 & 1) != 0))\n                        {\n                            break;\n                        }\n                        if (rax_5 != -1)\n                        {\n                            if (rax_5 != -2)\n                            {\n                                uint32_t rdi_2 = var_44;\n                                if (rax_5 == 0)\n                                {\n                                    rbp_1 = 1;\n                                }\n                                int32_t rax_6 = wcwidth(rdi_2);\n                                if (rax_6 < 0)\n                                {\n                                    if ((arg3 & 2) != 0)\n                                    {\n                                        break;\n                                    }\n                                    if (iswcntrl(var_44) != 0)\n                                    {\n                                        goto label_405728;\n                                    }\n                                    if (r12 != 0x7fffffff)\n                                    {\n                                        r12 = (r12 + 1);\n                                        goto label_405728;\n                                    }\n                                }\n                                else if ((0x7fffffff - r12) >= rax_6)\n                                {\n                                    r12 = (r12 + rax_6);\n                                label_405728:\n                                    rbx = &rbx[rbp_1];\n                                    if (mbsinit(&var_40) != 0)\n                                    {\n                                        break;\n                                    }\n                                    continue;\n                                }\n                                return 0x7fffffff;\n                            }\n                            if ((arg3 & 1) != 0)\n                            {\n                                break;\n                            }\n                            r12 = (r12 + 1);\n                            rbx = r13;\n                            break;\n                        }\n                    }\n                    if (rax_5 == -1)\n                    {\n                        if (((!(rax_5 == -1 && (arg3 & 1) == 0)) && (arg3 & 1) != 0))\n                        {\n                            break;\n                        }\n                        if ((arg3 & 1) == 0)\n                        {\n                            goto label_4056db;\n                        }\n                    }\n                }\n                if (rbx >= r13)\n                {\n                    return r12;\n                }\n            }\n        }\n    }\n    if (((rax <= 1 && rbx < r13) || (rax > 1 && rbx < r13)))\n    {\n        r12 = -1;\n    }\n    return r12;\n}\n\n"
        },
        {
            "funcName": "sub_405850",
            "funcStartAddr": "0x405850",
            "funcEndAddr": "0x405873",
            "decompiledFuncCode": "int64_t sub_405850(char* arg1, int32_t arg2)\n{\n    /* tailcall */\n    return sub_405690(arg1, strlen(arg1), arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405880",
            "funcStartAddr": "0x405880",
            "funcEndAddr": "0x4058c1",
            "decompiledFuncCode": "char* sub_405880(char* arg1, void* arg2, int64_t arg3)\n{\n    if (arg3 != 0)\n    {\n        int64_t rbx_1 = (arg3 - 1);\n        int32_t** rax_1 = __ctype_tolower_loc();\n        do\n        {\n            arg1[rbx_1] = *rax_1[*(arg2 + rbx_1)];\n            rbx_1 = (rbx_1 - 1);\n        } while (rbx_1 != -1);\n    }\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4058d0",
            "funcStartAddr": "0x4058d0",
            "funcEndAddr": "0x405911",
            "decompiledFuncCode": "char* sub_4058d0(char* arg1, void* arg2, int64_t arg3)\n{\n    if (arg3 != 0)\n    {\n        int64_t rbx_1 = (arg3 - 1);\n        int32_t** rax_1 = __ctype_toupper_loc();\n        do\n        {\n            arg1[rbx_1] = *rax_1[*(arg2 + rbx_1)];\n            rbx_1 = (rbx_1 - 1);\n        } while (rbx_1 != -1);\n    }\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_405920",
            "funcStartAddr": "0x405920",
            "funcEndAddr": "0x4070e5",
            "decompiledFuncCode": "int64_t sub_405920(char* arg1, int64_t arg2, char* arg3, struct tm* arg4, \n    char arg5, int64_t arg6, int64_t** arg7, int32_t arg8)\n{\n    char* r15 = arg1;\n    char* rbx = arg3;\n    char* r12 = arg4->tm_zone;\n    int32_t r11 = arg4->tm_hour;\n    if (r12 == 0)\n    {\n        r12 = &data_40ce63;\n    }\n    if (r11 > 0xc)\n    {\n        r11 = (r11 - 0xc);\n    }\n    else if (r11 == 0)\n    {\n        r11 = 0xc;\n    }\n    char rax = *rbx;\n    int64_t r14 = 0;\n    if (rax != 0)\n    {\n        char var_456;\n        char* var_4b8_1 = &var_456;\n        do\n        {\n            char* r8;\n            if (rax == 0x25)\n            {\n                char r11_1 = arg5;\n                uint32_t r8_1 = 0;\n                int32_t r12_1 = 0;\n                char rcx;\n                uint64_t rbp_1;\n                int32_t r9;\n                while (true)\n                {\n                    rbx = &rbx[1];\n                    int32_t rax_2 = *rbx;\n                    rcx = rax_2;\n                    r9 = rax_2;\n                    bool cond:2_1 = rax_2 > 0x30;\n                    if (rax_2 != 0x30)\n                    {\n                        while ((!cond:2_1))\n                        {\n                            if (rax_2 != 0x23)\n                            {\n                                break;\n                            }\n                            rbx = &rbx[1];\n                            rax_2 = *rbx;\n                            r8_1 = 1;\n                            rcx = rax_2;\n                            r9 = rax_2;\n                            cond:2_1 = rax_2 > 0x30;\n                            if (rax_2 == 0x30)\n                            {\n                                break;\n                            }\n                        }\n                        if (((!cond:2_1) && rax_2 != 0x23))\n                        {\n                            if (rax_2 != 0x2d)\n                            {\n                                rbp_1 = 0xffffffff;\n                                if ((rax_2 - 0x30) > 9)\n                                {\n                                    break;\n                                }\n                            label_405ab1:\n                                rbp_1 = 0;\n                                while (true)\n                                {\n                                    int32_t rax_6 = rbx[1];\n                                    void* rsi = &rbx[1];\n                                    rcx = rax_6;\n                                    int32_t rdx_2 = (rax_6 - 0x30);\n                                    bool cond:3_1 = rbp_1 == 0xccccccc;\n                                    int32_t rdi;\n                                    if (rbp_1 <= 0xccccccc)\n                                    {\n                                        rdi = *rbx;\n                                        if (((!cond:3_1) || (cond:3_1 && rdi <= 0x37)))\n                                        {\n                                            rbx = rsi;\n                                            rbp_1 = ((rdi + ((rbp_1 * 5) << 1)) - 0x30);\n                                        }\n                                    }\n                                    if ((rbp_1 > 0xccccccc || ((rbp_1 <= 0xccccccc && cond:3_1) && rdi > 0x37)))\n                                    {\n                                        if (rdx_2 > 9)\n                                        {\n                                            r9 = rax_6;\n                                            rbx = rsi;\n                                            rbp_1 = 0x7fffffff;\n                                            break;\n                                        }\n                                        rax_6 = rbx[2];\n                                        rbp_1 = 0x7fffffff;\n                                        rbx = &rbx[2];\n                                        rcx = rax_6;\n                                        rdx_2 = (rax_6 - 0x30);\n                                    }\n                                    if ((((rbp_1 > 0xccccccc || ((rbp_1 <= 0xccccccc && cond:3_1) && rdi > 0x37)) && rdx_2 <= 9) || (rbp_1 <= 0xccccccc && ((!cond:3_1) || (cond:3_1 && rdi <= 0x37)))))\n                                    {\n                                        if (rdx_2 > 9)\n                                        {\n                                            r9 = rax_6;\n                                            break;\n                                        }\n                                    }\n                                }\n                                break;\n                            }\n                        }\n                        else if (cond:2_1)\n                        {\n                            if (rax_2 == 0x5e)\n                            {\n                                r11_1 = 1;\n                                continue;\n                            }\n                            else if (rax_2 != 0x5f)\n                            {\n                                rbp_1 = 0xffffffff;\n                                if ((rax_2 - 0x30) > 9)\n                                {\n                                    break;\n                                }\n                                goto label_405ab1;\n                            }\n                        }\n                    }\n                    r12_1 = rax_2;\n                }\n                if ((rcx == 0x45 || rcx == 0x4f))\n                {\n                    rcx = rbx[1];\n                    rbx = &rbx[1];\n                }\n                if ((rcx != 0x45 && rcx != 0x4f))\n                {\n                    r9 = 0;\n                }\n                if (rcx > 0x7a)\n                {\n                    goto label_406768;\n                }\n                uint64_t var_498;\n                char var_480;\n                int64_t rax_110;\n                int64_t rdx_83;\n                char r13_1;\n                int64_t r13_10;\n                int64_t r13_12;\n                switch (rcx)\n                {\n                    case 0x25:\n                    {\n                        int32_t rax_126 = 0;\n                        r13_10 = 1;\n                        rdx_83 = (arg2 - r14);\n                        if (rbp_1 >= 0)\n                        {\n                            rax_126 = rbp_1;\n                        }\n                        rax_110 = rax_126;\n                        if (rax_110 != 0)\n                        {\n                            r13_10 = rax_110;\n                        }\n                        break;\n                    }\n                    case 0x50:\n                    {\n                        r13_1 = 1;\n                        break;\n                    }\n                    case 0x52:\n                    {\n                        var_498 = \"%H:%M\";\n                        break;\n                    }\n                    case 0x54:\n                    {\n                        var_498 = \"%H:%M:%S\";\n                        break;\n                    }\n                    case 0x5a:\n                    {\n                        char* rdi_17 = r12;\n                        var_480 = r8_1;\n                        if (r8_1 != 0)\n                        {\n                            r11_1 = 0;\n                        }\n                        uint64_t rax_56 = strlen(rdi_17);\n                        int32_t rax_57 = 0;\n                        if (rbp_1 >= 0)\n                        {\n                            rax_57 = rbp_1;\n                        }\n                        uint64_t rax_58 = rax_57;\n                        uint64_t rsi_20 = rax_58;\n                        if (rax_56 >= rax_58)\n                        {\n                            rsi_20 = rax_56;\n                        }\n                        if ((arg2 - r14) <= rsi_20)\n                        {\n                            break;\n                        }\n                        if (r15 != 0)\n                        {\n                            char r11_4 = r11_1;\n                            char r8_7 = var_480;\n                            if (rax_56 < rax_58)\n                            {\n                                uint64_t rdx_49 = (rbp_1 - rax_56);\n                                void* rbp_5 = &r15[rdx_49];\n                                if (r12_1 == 0x30)\n                                {\n                                    char* rdi_52 = r15;\n                                    r15 = rbp_5;\n                                    memset(rdi_52, 0x30, rdx_49);\n                                    r11_4 = r11_1;\n                                    r8_7 = var_480;\n                                }\n                                else\n                                {\n                                    char* rdi_18 = r15;\n                                    r15 = rbp_5;\n                                    memset(rdi_18, 0x20, rdx_49);\n                                }\n                            }\n                            char* rdi_19 = r15;\n                            if (r8_7 != 0)\n                            {\n                                sub_405880(rdi_19, r12, rax_56);\n                            }\n                            else if (r11_4 == 0)\n                            {\n                                memcpy(rdi_19, r12, rax_56);\n                            }\n                            else\n                            {\n                                sub_4058d0(rdi_19, r12, rax_56);\n                            }\n                            r15 = &r15[rax_56];\n                        }\n                        r14 = (r14 + rsi_20);\n                        r8 = rbx;\n                        break;\n                    }\n                    case 0x6e:\n                    {\n                        int32_t r13_9 = 0;\n                        if (rbp_1 >= 0)\n                        {\n                            r13_9 = rbp_1;\n                        }\n                        r13_10 = r13_9;\n                        if (r13_10 == 0)\n                        {\n                            r13_10 = 1;\n                        }\n                        if ((arg2 - r14) <= r13_10)\n                        {\n                            break;\n                        }\n                        if (r15 != 0)\n                        {\n                            if (rbp_1 > 1)\n                            {\n                                uint64_t rdx_52 = (rbp_1 - 1);\n                                void* rbp_6 = &r15[rdx_52];\n                                if (r12_1 == 0x30)\n                                {\n                                    char* rdi_48 = r15;\n                                    r15 = rbp_6;\n                                    memset(rdi_48, 0x30, rdx_52);\n                                }\n                                else\n                                {\n                                    char* rdi_20 = r15;\n                                    r15 = rbp_6;\n                                    memset(rdi_20, 0x20, rdx_52);\n                                }\n                            }\n                            *r15 = 0xa;\n                            r15 = &r15[1];\n                        }\n                        break;\n                    }\n                    case 0x70:\n                    {\n                        r13_1 = 0;\n                        break;\n                    }\n                    case 0x74:\n                    {\n                        int32_t r13_11 = 0;\n                        if (rbp_1 >= 0)\n                        {\n                            r13_11 = rbp_1;\n                        }\n                        r13_10 = r13_11;\n                        if (r13_10 == 0)\n                        {\n                            r13_10 = 1;\n                        }\n                        if ((arg2 - r14) <= r13_10)\n                        {\n                            break;\n                        }\n                        if (r15 != 0)\n                        {\n                            if (rbp_1 > 1)\n                            {\n                                uint64_t rdx_63 = (rbp_1 - 1);\n                                void* rbp_8 = &r15[rdx_63];\n                                if (r12_1 == 0x30)\n                                {\n                                    char* rdi_49 = r15;\n                                    r15 = rbp_8;\n                                    memset(rdi_49, 0x30, rdx_63);\n                                }\n                                else\n                                {\n                                    char* rdi_23 = r15;\n                                    r15 = rbp_8;\n                                    memset(rdi_23, 0x20, rdx_63);\n                                }\n                            }\n                            *r15 = 9;\n                            r15 = &r15[1];\n                        }\n                        break;\n                    }\n                    case 0x7a:\n                    {\n                        r13_12 = 0;\n                        break;\n                    }\n                }\n                if ((rcx == 0x50 || rcx == 0x70))\n                {\n                    char temp6_1 = r8_1;\n                    bool cond:15_1 = temp6_1 != 0;\n                    rcx = 0x70;\n                    if (temp6_1 != 0)\n                    {\n                        r13_1 = r8_1;\n                    }\n                    if (cond:15_1)\n                    {\n                        r11_1 = 0;\n                    }\n                }\n                uint64_t rcx_12;\n                char* r9_12;\n                if (rcx == 0x25)\n                {\n                    if (r9 != 0)\n                    {\n                        r8 = rbx;\n                        r9_12 = rbx;\n                        rcx_12 = 1;\n                    }\n                    else\n                    {\n                        if (r13_10 >= rdx_83)\n                        {\n                            break;\n                        }\n                        if (r15 != 0)\n                        {\n                            if (rbp_1 > 1)\n                            {\n                                uint64_t rdx_96 = (rbp_1 - 1);\n                                void* rbp_9 = &r15[rdx_96];\n                                if (r12_1 == 0x30)\n                                {\n                                    char* rdi_51 = r15;\n                                    r15 = rbp_9;\n                                    memset(rdi_51, 0x30, rdx_96);\n                                    rcx = *rbx;\n                                }\n                                else\n                                {\n                                    char* rdi_36 = r15;\n                                    r15 = rbp_9;\n                                    memset(rdi_36, 0x20, rdx_96);\n                                    rcx = *rbx;\n                                }\n                            }\n                            *r15 = rcx;\n                            r15 = &r15[1];\n                        }\n                    }\n                }\n                int32_t rsi_19;\n                int32_t rdi_16;\n                int32_t r10_1;\n                if ((rcx == 0x59 && r9 != 0x45))\n                {\n                    if (r9 == 0x4f)\n                    {\n                        goto label_406768;\n                    }\n                    var_498 = 0;\n                    r10_1 = 4;\n                    int32_t rsi_28 = arg4->tm_year;\n                    r8_1 = rsi_28 < 0xfffff894;\n                    rsi_19 = (rsi_28 + 0x76c);\n                    rdi_16 = 0;\n                }\n                if ((rcx == 0x43 && r9 != 0x45))\n                {\n                    var_498 = 0;\n                    r10_1 = 2;\n                    int32_t rdi_28 = arg4->tm_year;\n                    int32_t temp9_1;\n                    int32_t temp10_1;\n                    temp9_1 = HIGHW((rdi_28 * 0x51eb851f));\n                    temp10_1 = LOWW((rdi_28 * 0x51eb851f));\n                    int32_t rax_93 = ((temp9_1 >> 5) - (rdi_28 >> 0x1f));\n                    int32_t rdx_74;\n                    rdx_74 = (rax_93 + 0x13) > 0;\n                    r8_1 = rdi_28 < 0xfffff894;\n                    rsi_19 = ((rax_93 + 0x13) - (((rdi_28 - (rax_93 * 0x64)) >> 0x1f) & rdx_74));\n                    rdi_16 = 0;\n                }\n                if (((rcx == 0x6e || rcx == 0x74) || (rcx == 0x25 && r9 == 0)))\n                {\n                    r14 = (r14 + r13_10);\n                    r8 = rbx;\n                }\n                char var_488;\n                uint64_t var_478;\n                void var_441;\n                int128_t var_438;\n                int64_t rax_20;\n                uint64_t rcx_6;\n                char rcx_14;\n                char rcx_15;\n                int32_t rdx_69;\n                int32_t rdi_26;\n                int32_t r9_4;\n                uint64_t r9_6;\n                uint64_t r9_11;\n                void* r13_2;\n                switch (rcx)\n                {\n                    case 0:\n                    {\n                        r9_12 = &rbx[-1];\n                        rcx_14 = rbx[-1];\n                    label_4068fb:\n                        int32_t rax_122 = 0;\n                        rdx_83 = (arg2 - r14);\n                        if (rbp_1 >= 0)\n                        {\n                            rax_122 = rbp_1;\n                        }\n                        rax_110 = rax_122;\n                        if (rcx_14 == 0x25)\n                        {\n                            r13_10 = 1;\n                            r8 = r9_12;\n                            rcx_12 = 1;\n                            if (rax_110 != 0)\n                            {\n                                r13_10 = rax_110;\n                            }\n                        }\n                        else\n                        {\n                            rbx = r9_12;\n                        label_406768:\n                            void* rax_108 = &rbx[-1];\n                            int32_t rdx_81 = (rax_108 + 2);\n                            int32_t rcx_11;\n                            do\n                            {\n                                r9_12 = rax_108;\n                                rcx_11 = (rdx_81 - rax_108);\n                                rax_108 = (rax_108 - 1);\n                            } while (*(rax_108 + 1) != 0x25);\n                            int32_t rax_109 = 0;\n                            rcx_12 = rcx_11;\n                            r8 = rbx;\n                            rdx_83 = (arg2 - r14);\n                            if (rbp_1 >= 0)\n                            {\n                                rax_109 = rbp_1;\n                            }\n                            rax_110 = rax_109;\n                            r13_10 = rax_110;\n                            if (rcx_12 >= rax_110)\n                            {\n                                r13_10 = rcx_12;\n                            }\n                        }\n                        break;\n                    }\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 0xa:\n                    case 0xb:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x32:\n                    case 0x33:\n                    case 0x34:\n                    case 0x35:\n                    case 0x36:\n                    case 0x37:\n                    case 0x38:\n                    case 0x39:\n                    case 0x3b:\n                    case 0x3c:\n                    case 0x3d:\n                    case 0x3e:\n                    case 0x3f:\n                    case 0x40:\n                    case 0x45:\n                    case 0x4a:\n                    case 0x4b:\n                    case 0x4c:\n                    case 0x4f:\n                    case 0x51:\n                    case 0x5b:\n                    case 0x5c:\n                    case 0x5d:\n                    case 0x5e:\n                    case 0x5f:\n                    case 0x60:\n                    case 0x66:\n                    case 0x69:\n                    case 0x6f:\n                    case 0x76:\n                    {\n                        goto label_406768;\n                    }\n                    case 0x3a:\n                    {\n                        char rax_134 = rbx[1];\n                        void* rdx_98 = &rbx[1];\n                        r13_12 = 1;\n                        if (rax_134 == 0x3a)\n                        {\n                            do\n                            {\n                                r13_12 = (r13_12 + 1);\n                                rax_134 = rbx[r13_12];\n                                rdx_98 = &rbx[r13_12];\n                            } while (rax_134 == 0x3a);\n                        }\n                        if (rax_134 != 0x7a)\n                        {\n                            goto label_406768;\n                        }\n                        rbx = rdx_98;\n                        break;\n                    }\n                    case 0x41:\n                    case 0x42:\n                    case 0x61:\n                    {\n                        if (r9 != 0)\n                        {\n                            goto label_406768;\n                        }\n                        if (r8_1 != 0)\n                        {\n                            r11_1 = r8_1;\n                        }\n                        break;\n                    }\n                    case 0x44:\n                    {\n                        if (r9 != 0)\n                        {\n                            goto label_406768;\n                        }\n                        var_498 = \"%m/%d/%y\";\n                        break;\n                    }\n                    case 0x46:\n                    {\n                        if (r9 != 0)\n                        {\n                            goto label_406768;\n                        }\n                        var_498 = \"%Y-%m-%d\";\n                        break;\n                    }\n                    case 0x47:\n                    case 0x56:\n                    case 0x67:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406768;\n                        }\n                        int32_t rsi_6 = arg4->tm_year;\n                        int32_t r10_4 = arg4->tm_yday;\n                        int32_t r13_4 = arg4->tm_wday;\n                        var_498 = rsi_6;\n                        int32_t rdi_8 = ((rsi_6 + ((rsi_6 >> 0x1f) & 0x190)) - 0x64);\n                        int32_t temp4_1;\n                        int32_t temp5_1;\n                        temp4_1 = HIGHW((((r10_4 - r13_4) + 0x17e) * 0x92492493));\n                        temp5_1 = LOWW((((r10_4 - r13_4) + 0x17e) * 0x92492493));\n                        uint64_t rax_32 = (((temp4_1 + ((r10_4 - r13_4) + 0x17e)) >> 2) - (((r10_4 - r13_4) + 0x17e) >> 0x1f));\n                        r8_1 = (((r10_4 - ((r10_4 - r13_4) + 0x17e)) + ((rax_32 << 3) - rax_32)) + 3);\n                        int32_t r13_7;\n                        if (r8_1 < 0)\n                        {\n                            int32_t rsi_41 = (rdi_8 - 1);\n                            int32_t rdx_104 = 0x16d;\n                            if ((rsi_41 & 3) == 0)\n                            {\n                                int32_t temp21_1;\n                                int32_t temp22_1;\n                                temp21_1 = HIGHW((rsi_41 * 0x51eb851f));\n                                temp22_1 = LOWW((rsi_41 * 0x51eb851f));\n                                rdx_104 = 0x16e;\n                                if (rsi_41 == (((temp21_1 >> 5) - (rsi_41 >> 0x1f)) * 0x64))\n                                {\n                                    int32_t temp33_1;\n                                    int32_t temp34_1;\n                                    temp33_1 = HIGHW(rsi_41);\n                                    temp34_1 = LOWW(rsi_41);\n                                    int32_t temp1_1 = (COMBINE(temp33_1, temp34_1) % 0x190);\n                                    rdx_104 = ((!(temp1_1 - temp1_1)) + 0x16e);\n                                }\n                            }\n                            int32_t r10_10 = (r10_4 + rdx_104);\n                            r13_7 = -1;\n                            int32_t temp19_1;\n                            int32_t temp20_1;\n                            temp19_1 = HIGHW((((r10_10 - r13_4) + 0x17e) * 0x92492493));\n                            temp20_1 = LOWW((((r10_10 - r13_4) + 0x17e) * 0x92492493));\n                            uint64_t rax_157 = (((temp19_1 + ((r10_10 - r13_4) + 0x17e)) >> 2) - (((r10_10 - r13_4) + 0x17e) >> 0x1f));\n                            r8_1 = (((r10_10 - ((r10_10 - r13_4) + 0x17e)) + ((rax_157 << 3) - rax_157)) + 3);\n                        }\n                        else\n                        {\n                            int32_t rax_34 = 0x16d;\n                            if ((rdi_8 & 3) == 0)\n                            {\n                                int32_t temp25_1;\n                                int32_t temp26_1;\n                                temp25_1 = HIGHW((rdi_8 * 0x51eb851f));\n                                temp26_1 = LOWW((rdi_8 * 0x51eb851f));\n                                int32_t rax_37 = (rdi_8 >> 0x1f);\n                                var_488 = rax_37;\n                                rax_34 = 0x16e;\n                                if (rdi_8 == (((temp25_1 >> 5) - rax_37) * 0x64))\n                                {\n                                    int32_t rax_40;\n                                    rax_40 = rdi_8 == (((temp25_1 >> 7) - var_488) * 0x190);\n                                    rax_34 = (rax_40 + 0x16d);\n                                }\n                            }\n                            int32_t rsi_13 = (r10_4 - rax_34);\n                            int32_t temp23_1;\n                            int32_t temp24_1;\n                            temp23_1 = HIGHW((((rsi_13 - r13_4) + 0x17e) * 0x92492493));\n                            temp24_1 = LOWW((((rsi_13 - r13_4) + 0x17e) * 0x92492493));\n                            uint64_t rax_45 = (((temp23_1 + ((rsi_13 - r13_4) + 0x17e)) >> 2) - (((rsi_13 - r13_4) + 0x17e) >> 0x1f));\n                            uint32_t r13_5 = (((rsi_13 - ((rsi_13 - r13_4) + 0x17e)) + ((rax_45 << 3) - rax_45)) + 3);\n                            if (r13_5 >= 0)\n                            {\n                                r8_1 = r13_5;\n                            }\n                            r13_7 = ((r13_5 >> 0x1f) + 1);\n                        }\n                        if (rcx != 0x47)\n                        {\n                            if (rcx != 0x67)\n                            {\n                                r10_1 = 2;\n                                int32_t temp43_1;\n                                int32_t temp44_1;\n                                temp43_1 = HIGHW((r8_1 * 0x92492493));\n                                temp44_1 = LOWW((r8_1 * 0x92492493));\n                                rsi_19 = ((((temp43_1 + r8_1) >> 2) - (r8_1 >> 0x1f)) + 1);\n                            }\n                            else\n                            {\n                                int32_t r8_6 = var_498;\n                                r10_1 = 2;\n                                int32_t temp45_1;\n                                int32_t temp46_1;\n                                temp45_1 = HIGHW((var_498 * 0x51eb851f));\n                                temp46_1 = LOWW((var_498 * 0x51eb851f));\n                                int32_t rdi_14 = ((r8_6 - (((temp45_1 >> 5) - (r8_6 >> 0x1f)) * 0x64)) + r13_7);\n                                int32_t temp47_1;\n                                int32_t temp48_1;\n                                temp47_1 = HIGHW((rdi_14 * 0x51eb851f));\n                                temp48_1 = LOWW((rdi_14 * 0x51eb851f));\n                                int32_t rsi_18 = (((temp47_1 >> 5) - (rdi_14 >> 0x1f)) * 0x64);\n                                int32_t rdi_15 = (rdi_14 - rsi_18);\n                                rsi_19 = rdi_15;\n                                if ((rdi_14 - rsi_18) < 0)\n                                {\n                                    rsi_19 = (rsi_19 + 0x64);\n                                    int32_t rdx_45 = (-rdi_15);\n                                    if (r8_6 < (0xfffff894 - r13_7))\n                                    {\n                                        rsi_19 = rdx_45;\n                                    }\n                                }\n                            }\n                            goto label_4060b2;\n                        }\n                        int32_t rsi_49 = var_498;\n                        var_498 = 0;\n                        r10_1 = 4;\n                        rsi_19 = ((rsi_49 + r13_7) + 0x76c);\n                        r8_1 = rsi_49 < (0xfffff894 - r13_7);\n                        rdi_16 = 0;\n                        break;\n                    }\n                    case 0x48:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406768;\n                        }\n                        r10_1 = 2;\n                        rsi_19 = arg4->tm_hour;\n                        goto label_4060b2;\n                    }\n                    case 0x49:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406768;\n                        }\n                        rsi_19 = r11;\n                        r10_1 = 2;\n                        goto label_4060b2;\n                    }\n                    case 0x4d:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406768;\n                        }\n                        r10_1 = 2;\n                        rsi_19 = arg4->tm_min;\n                        goto label_4060b2;\n                    }\n                    case 0x4e:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406768;\n                        }\n                        if (rbp_1 == 0xffffffff)\n                        {\n                            rsi_19 = arg8;\n                            rbp_1 = 9;\n                            r10_1 = 9;\n                        }\n                        else\n                        {\n                            if (rbp_1 > 8)\n                            {\n                                rsi_19 = arg8;\n                            }\n                            else\n                            {\n                                rsi_19 = arg8;\n                                int32_t rdi_46 = rbp_1;\n                                do\n                                {\n                                    rdi_46 = (rdi_46 + 1);\n                                    int32_t temp39_1;\n                                    int32_t temp40_1;\n                                    temp39_1 = HIGHW((rsi_19 * 0x66666667));\n                                    temp40_1 = LOWW((rsi_19 * 0x66666667));\n                                    rsi_19 = ((temp39_1 >> 2) - (rsi_19 >> 0x1f));\n                                } while (rdi_46 != 9);\n                            }\n                            r10_1 = rbp_1;\n                        }\n                        goto label_4060b2;\n                    }\n                    case 0x53:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406768;\n                        }\n                        r10_1 = 2;\n                        rsi_19 = *arg4;\n                        goto label_4060b2;\n                    }\n                    case 0x55:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406768;\n                        }\n                        rdi_26 = ((arg4->tm_yday - arg4->tm_wday) + 7);\n                        int32_t temp7_1;\n                        int32_t temp8_1;\n                        temp7_1 = HIGHW((rdi_26 * 0x92492493));\n                        temp8_1 = LOWW((rdi_26 * 0x92492493));\n                        rdx_69 = temp7_1;\n                        break;\n                    }\n                    case 0x57:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406768;\n                        }\n                        int32_t rax_98 = arg4->tm_wday;\n                        var_498 = rax_98;\n                        int32_t temp11_1;\n                        int32_t temp12_1;\n                        temp11_1 = HIGHW(((rax_98 + 6) * 0x92492493));\n                        temp12_1 = LOWW(((rax_98 + 6) * 0x92492493));\n                        uint64_t rax_102 = (((temp11_1 + (rax_98 + 6)) >> 2) - ((rax_98 + 6) >> 0x1f));\n                        rdi_26 = (((((rax_102 << 3) - rax_102) - (rax_98 + 6)) + arg4->tm_yday) + 7);\n                        int32_t temp13_1;\n                        int32_t temp14_1;\n                        temp13_1 = HIGHW((rdi_26 * 0x92492493));\n                        temp14_1 = LOWW((rdi_26 * 0x92492493));\n                        rdx_69 = temp13_1;\n                        break;\n                    }\n                    case 0x58:\n                    case 0x63:\n                    case 0x78:\n                    {\n                        if (r9 == 0x4f)\n                        {\n                            goto label_406768;\n                        }\n                        break;\n                    }\n                    case 0x64:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406768;\n                        }\n                        r10_1 = 2;\n                        rsi_19 = arg4->tm_mday;\n                        goto label_4060b2;\n                    }\n                    case 0x65:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406768;\n                        }\n                        rsi_19 = arg4->tm_mday;\n                        break;\n                    }\n                    case 0x6a:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406768;\n                        }\n                        var_498 = 0;\n                        r10_1 = 3;\n                        int32_t rsi_36 = arg4->tm_yday;\n                        r8_1 = rsi_36 < 0xffffffff;\n                        rsi_19 = (rsi_36 + 1);\n                        rdi_16 = 0;\n                        break;\n                    }\n                    case 0x6b:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406768;\n                        }\n                        rsi_19 = arg4->tm_hour;\n                        break;\n                    }\n                    case 0x6c:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406768;\n                        }\n                        rsi_19 = r11;\n                        break;\n                    }\n                    case 0x6d:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406768;\n                        }\n                        var_498 = 0;\n                        r10_1 = 2;\n                        int32_t rsi_22 = arg4->tm_mon;\n                        r8_1 = rsi_22 < 0xffffffff;\n                        rsi_19 = (rsi_22 + 1);\n                        rdi_16 = 0;\n                        break;\n                    }\n                    case 0x71:\n                    {\n                        r10_1 = 1;\n                        uint64_t rax_66 = arg4->tm_mon;\n                        if (r9 == 0x4f)\n                        {\n                            goto label_4060d7;\n                        }\n                        var_498 = 0;\n                        r8_1 = 0;\n                        rdi_16 = 0;\n                        rsi_19 = (((rax_66 + ((rax_66 * 5) << 1)) >> 5) + 1);\n                    label_406380:\n                        var_488 = r8_1;\n                        void* rcx_9 = &var_441;\n                        while (true)\n                        {\n                            r13_2 = (rcx_9 - 1);\n                            if ((rdi_16 & 1) != 0)\n                            {\n                                void* rax_67 = (rcx_9 - 2);\n                                *(rcx_9 - 1) = 0x3a;\n                                rcx_9 = r13_2;\n                                r13_2 = rax_67;\n                            }\n                            rdi_16 = (rdi_16 >> 1);\n                            int32_t temp41_1;\n                            int32_t temp42_1;\n                            temp41_1 = HIGHW((rsi_19 * 0xcccccccd));\n                            temp42_1 = LOWW((rsi_19 * 0xcccccccd));\n                            uint64_t rdx_55 = (temp41_1 >> 3);\n                            uint8_t rax_69 = (rdx_55 * 5);\n                            *(rcx_9 - 1) = ((rsi_19 - (rax_69 + rax_69)) + 0x30);\n                            rcx_9 = r13_2;\n                            if ((rsi_19 <= 9 && rdi_16 == 0))\n                            {\n                                break;\n                            }\n                            rsi_19 = rdx_55;\n                        }\n                        if (r10_1 < rbp_1)\n                        {\n                            r10_1 = rbp_1;\n                        }\n                        if (var_488 != 0)\n                        {\n                            goto label_406ac8;\n                        }\n                        if (var_498 == 0)\n                        {\n                            goto label_405d79;\n                        }\n                        if (r12_1 == 0x2d)\n                        {\n                            rcx_15 = 0x2b;\n                        label_406ade:\n                            int32_t r9_13 = 0;\n                            uint64_t r12_2 = 1;\n                            if (rbp_1 >= 0)\n                            {\n                                r9_13 = rbp_1;\n                            }\n                            r9_6 = r9_13;\n                            if (r9_6 != 0)\n                            {\n                                r12_2 = r9_6;\n                            }\n                            if ((arg2 - r14) <= r12_2)\n                            {\n                                break;\n                            }\n                            if (r15 != 0)\n                            {\n                                if ((r10_1 == 0 && r9_6 > 1))\n                                {\n                                    uint64_t var_470;\n                                    var_470 = rcx_15;\n                                    var_480 = r10_1;\n                                    memset(r15, 0x20, (rbp_1 - 1));\n                                    rcx_15 = var_470;\n                                    r10_1 = var_480;\n                                    r15 = &r15[(rbp_1 - 1)];\n                                }\n                                *r15 = rcx_15;\n                                r15 = &r15[1];\n                            }\n                            r14 = (r14 + r12_2);\n                            r8 = rbx;\n                            r12_1 = 0x2d;\n                            rcx_6 = (&var_441 - r13_2);\n                            rax_20 = (arg2 - r14);\n                            goto label_405da9;\n                        }\n                        var_498 = 0x2b;\n                    label_406420:\n                        rcx_6 = (&var_441 - r13_2);\n                        r9_4 = ((r10_1 - 1) - rcx_6);\n                        rax_20 = (arg2 - r14);\n                        if (r9_4 <= 0)\n                        {\n                            int32_t r9_14 = 0;\n                            uint64_t r8_14 = 1;\n                            if (rbp_1 >= 0)\n                            {\n                                r9_14 = rbp_1;\n                            }\n                            r9_6 = r9_14;\n                            if (r9_6 != 0)\n                            {\n                                r8_14 = r9_6;\n                            }\n                            if (r8_14 >= rax_20)\n                            {\n                                break;\n                            }\n                            if (r15 != 0)\n                            {\n                                if ((r10_1 == 0 && r9_6 > 1))\n                                {\n                                    uint64_t rdx_101 = (rbp_1 - 1);\n                                    var_488 = &r15[rdx_101];\n                                    var_478 = r10_1;\n                                    if (r12_1 == 0x30)\n                                    {\n                                        memset(r15, 0x30, rdx_101);\n                                        r15 = var_488;\n                                        r10_1 = var_478;\n                                    }\n                                    else\n                                    {\n                                        memset(r15, 0x20, rdx_101);\n                                        r15 = var_488;\n                                        r10_1 = var_478;\n                                    }\n                                }\n                                r15 = &r15[1];\n                                r15[-1] = var_498;\n                            }\n                            r14 = (r14 + r8_14);\n                            r8 = rbx;\n                            rax_20 = (arg2 - r14);\n                            goto label_405da9;\n                        }\n                        if (r12_1 == 0x5f)\n                        {\n                            goto label_406c93;\n                        }\n                        if (r10_1 >= rax_20)\n                        {\n                            break;\n                        }\n                        int32_t rdx_57 = 0;\n                        int64_t rsi_25 = 1;\n                        if (rbp_1 >= 0)\n                        {\n                            rdx_57 = rbp_1;\n                        }\n                        int64_t rdx_58 = rdx_57;\n                        if (rdx_58 != 0)\n                        {\n                            rsi_25 = rdx_58;\n                        }\n                        if (rsi_25 >= rax_20)\n                        {\n                            break;\n                        }\n                        r14 = (r14 + rsi_25);\n                        r9_11 = r9_4;\n                        r8 = rbx;\n                        if (r15 == 0)\n                        {\n                            goto label_406534;\n                        }\n                        if ((r10_1 == 0 && rdx_58 > 1))\n                        {\n                            uint64_t rdx_60 = (rbp_1 - 1);\n                            void* rbp_7 = &r15[rdx_60];\n                            var_480 = r10_1;\n                            if (r12_1 == 0x30)\n                            {\n                                char* rdi_53 = r15;\n                                r15 = rbp_7;\n                                memset(rdi_53, 0x30, rdx_60);\n                                r10_1 = var_480;\n                            }\n                            else\n                            {\n                                char* rdi_21 = r15;\n                                r15 = rbp_7;\n                                memset(rdi_21, 0x20, rdx_60);\n                                r10_1 = var_480;\n                            }\n                        }\n                        r15 = &r15[1];\n                        r8 = rbx;\n                        r15[-1] = var_498;\n                        break;\n                    }\n                    case 0x73:\n                    {\n                        r13_2 = &var_441;\n                        int128_t zmm4;\n                        zmm4 = arg4->tm_isdst;\n                        *zmm4[8] = arg4->tm_gmtoff;\n                        int128_t zmm0;\n                        zmm0 = arg4->tm_sec;\n                        *zmm0[4] = arg4->tm_min;\n                        *zmm0[8] = arg4->tm_hour;\n                        *zmm0[0xc] = arg4->tm_mday;\n                        int128_t zmm2;\n                        zmm2 = arg4->tm_mon;\n                        *zmm2[4] = arg4->tm_year;\n                        *zmm2[8] = arg4->tm_wday;\n                        *zmm2[0xc] = arg4->tm_yday;\n                        var_438 = zmm0;\n                        int128_t var_428_1 = zmm2;\n                        var_498 = zmm4;\n                        int128_t var_418_1 = zmm4;\n                        char const* var_408_1 = arg4->tm_zone;\n                        time_t rax_13 = sub_40bf30(arg7, &var_438);\n                        time_t rcx_4 = rax_13;\n                        do\n                        {\n                            int64_t rax_14;\n                            int64_t rdx_9;\n                            rdx_9 = HIGHD((0x6666666666666667 * rcx_4));\n                            rax_14 = LOWD((0x6666666666666667 * rcx_4));\n                            time_t rdx_11 = ((rdx_9 >> 2) - (rcx_4 >> 0x3f));\n                            char rdx_12 = (rdx_11 + (rdx_11 << 2));\n                            char rcx_5 = (rcx_4 - (rdx_12 + rdx_12));\n                            rcx_4 = rdx_11;\n                            char rax_18 = (0x30 - rcx_5);\n                            char rdx_15 = (rcx_5 + 0x30);\n                            if (rax_13 < 0)\n                            {\n                                rdx_15 = rax_18;\n                            }\n                            r13_2 = (r13_2 - 1);\n                            *r13_2 = rdx_15;\n                        } while (rcx_4 != 0);\n                        r10_1 = 1;\n                        if (rbp_1 > 0)\n                        {\n                            r10_1 = rbp_1;\n                        }\n                        if (rax_13 < 0)\n                        {\n                        label_406ac8:\n                            var_498 = 0x2d;\n                            rcx_15 = 0x2d;\n                            if (r12_1 != 0x2d)\n                            {\n                                goto label_406420;\n                            }\n                            goto label_406ade;\n                        }\n                    label_405d79:\n                        rcx_6 = (&var_441 - r13_2);\n                        rax_20 = (arg2 - r14);\n                        if (r12_1 == 0x2d)\n                        {\n                        label_405d96:\n                            int32_t r9_5 = 0;\n                            r8 = rbx;\n                            if (rbp_1 >= 0)\n                            {\n                                r9_5 = rbp_1;\n                            }\n                            r9_6 = r9_5;\n                            goto label_405da9;\n                        }\n                        r9_4 = (r10_1 - rcx_6);\n                        if (r9_4 <= 0)\n                        {\n                            goto label_405d96;\n                        }\n                        if (r12_1 == 0x5f)\n                        {\n                            var_498 = 0;\n                        label_406c93:\n                            uint64_t r12_3 = r9_4;\n                            if (r12_3 >= rax_20)\n                            {\n                                break;\n                            }\n                            if (r15 != 0)\n                            {\n                                char* rdi_41 = r15;\n                                var_478 = r9_4;\n                                var_480 = r10_1;\n                                r15 = &r15[r12_3];\n                                memset(rdi_41, 0x20, r12_3);\n                                r9_4 = var_478;\n                                r10_1 = var_480;\n                            }\n                            r14 = (r14 + r12_3);\n                            int32_t rax_142 = (rbp_1 - r9_4);\n                            bool cond:28_1 = r9_4 < rbp_1;\n                            rbp_1 = 0;\n                            if (cond:28_1)\n                            {\n                                rbp_1 = rax_142;\n                            }\n                            rax_20 = (arg2 - r14);\n                            if (var_498 == 0)\n                            {\n                                r9_6 = rbp_1;\n                                r8 = rbx;\n                                r12_1 = 0x5f;\n                                rcx_6 = (&var_441 - r13_2);\n                            }\n                            else\n                            {\n                                r9_6 = rbp_1;\n                                uint64_t rcx_16 = 1;\n                                if (r9_6 != 0)\n                                {\n                                    rcx_16 = r9_6;\n                                }\n                                if (rcx_16 >= rax_20)\n                                {\n                                    break;\n                                }\n                                if (r15 != 0)\n                                {\n                                    if ((r10_1 == 0 && r9_6 > 1))\n                                    {\n                                        char* rdi_44 = r15;\n                                        var_478 = r10_1;\n                                        r15 = &r15[(r9_6 - 1)];\n                                        var_488 = r9_6;\n                                        memset(rdi_44, 0x20, (r9_6 - 1));\n                                        r10_1 = var_478;\n                                        r9_6 = var_488;\n                                    }\n                                    r15 = &r15[1];\n                                    r15[-1] = var_498;\n                                }\n                                r14 = (r14 + rcx_16);\n                                r8 = rbx;\n                                r12_1 = 0x5f;\n                                rcx_6 = (&var_441 - r13_2);\n                                rax_20 = (arg2 - r14);\n                            }\n                            goto label_405da9;\n                        }\n                        if (r10_1 >= rax_20)\n                        {\n                            break;\n                        }\n                        r9_11 = r9_4;\n                        r8 = rbx;\n                        break;\n                    }\n                    case 0x75:\n                    {\n                        r10_1 = 1;\n                        int32_t rax_79 = arg4->tm_wday;\n                        var_498 = rax_79;\n                        int32_t temp2_1;\n                        int32_t temp3_1;\n                        temp2_1 = HIGHW(((rax_79 + 6) * 0x92492493));\n                        temp3_1 = LOWW(((rax_79 + 6) * 0x92492493));\n                        uint64_t rax_83 = (((temp2_1 + (rax_79 + 6)) >> 2) - ((rax_79 + 6) >> 0x1f));\n                        rsi_19 = (((rax_79 + 6) - ((rax_83 << 3) - rax_83)) + 1);\n                    label_4060b2:\n                        var_498 = 0;\n                        rdi_16 = 0;\n                        r8_1 = (rsi_19 >> 0x1f);\n                        break;\n                    }\n                    case 0x77:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_406768;\n                        }\n                        r10_1 = 1;\n                        rsi_19 = arg4->tm_wday;\n                        goto label_4060b2;\n                    }\n                    case 0x79:\n                    {\n                        if (r9 != 0x45)\n                        {\n                            r10_1 = 2;\n                            int32_t rdi_37 = arg4->tm_year;\n                            int32_t temp15_1;\n                            int32_t temp16_1;\n                            temp15_1 = HIGHW((rdi_37 * 0x51eb851f));\n                            temp16_1 = LOWW((rdi_37 * 0x51eb851f));\n                            int32_t rsi_40 = (((temp15_1 >> 5) - (rdi_37 >> 0x1f)) * 0x64);\n                            int32_t rax_132 = (rdi_37 - rsi_40);\n                            rsi_19 = rax_132;\n                            if ((rdi_37 - rsi_40) < 0)\n                            {\n                                int32_t rax_133 = (-rax_132);\n                                rsi_19 = (rsi_19 + 0x64);\n                                if (rdi_37 <= 0xfffff893)\n                                {\n                                    rsi_19 = rax_133;\n                                }\n                            }\n                            goto label_4060b2;\n                        }\n                        break;\n                    }\n                }\n                switch (rcx)\n                {\n                    case 0x44:\n                    case 0x46:\n                    case 0x52:\n                    case 0x54:\n                    {\n                        uint32_t r13_3 = r11_1;\n                        int64_t r10_2 = sub_405920(0, -1, var_498, arg4, r13_3, arg6, arg7, arg8, arg2, arg4, var_4b8_1, arg6, r12);\n                        int32_t rax_23 = 0;\n                        if (rbp_1 >= 0)\n                        {\n                            rax_23 = rbp_1;\n                        }\n                        int64_t rax_24 = rax_23;\n                        int64_t rsi_4 = rax_24;\n                        if (r10_2 >= rax_24)\n                        {\n                            rsi_4 = r10_2;\n                        }\n                        int64_t r11_3 = (arg2 - r14);\n                        var_488 = rsi_4;\n                        if (r11_3 <= rsi_4)\n                        {\n                            break;\n                        }\n                        if (r15 != 0)\n                        {\n                            if (r10_2 < rax_24)\n                            {\n                                uint64_t rdx_20 = (rbp_1 - r10_2);\n                                var_480 = r11_3;\n                                void* rbp_4 = &r15[rdx_20];\n                                if (r12_1 == 0x30)\n                                {\n                                    char* rdi_45 = r15;\n                                    r15 = rbp_4;\n                                    memset(rdi_45, 0x30, rdx_20);\n                                    r11_3 = var_480;\n                                }\n                                else\n                                {\n                                    char* rdi_6 = r15;\n                                    r15 = rbp_4;\n                                    memset(rdi_6, 0x20, rdx_20);\n                                    r11_3 = var_480;\n                                }\n                            }\n                            var_480 = r10_2;\n                            sub_405920(r15, r11_3, var_498, arg4, r13_3, arg6, arg7, arg8);\n                            r15 = &r15[var_480];\n                        }\n                        r14 = (r14 + var_488);\n                        r8 = rbx;\n                        break;\n                    }\n                    case 0x55:\n                    case 0x57:\n                    {\n                        r10_1 = 2;\n                        rsi_19 = (((rdx_69 + rdi_26) >> 2) - (rdi_26 >> 0x1f));\n                        goto label_4060b2;\n                    }\n                    case 0x58:\n                    case 0x63:\n                    case 0x72:\n                    case 0x78:\n                    {\n                        r13_1 = 0;\n                        break;\n                    }\n                    case 0x65:\n                    case 0x6b:\n                    case 0x6c:\n                    {\n                        r10_1 = 2;\n                        if ((r12_1 != 0x30 && r12_1 != 0x2d))\n                        {\n                            r12_1 = 0x5f;\n                        }\n                        goto label_4060b2;\n                    }\n                }\n                int16_t var_458;\n                if ((((((rcx == 0x50 || rcx == 0x58) || rcx == 0x63) || rcx == 0x70) || rcx == 0x72) || rcx == 0x78))\n                {\n                    var_458 = 0x2520;\n                }\n                uint64_t rdx_8;\n                uint64_t rbx_1;\n                void* rsi_1;\n                char* rdi_3;\n                if ((rcx == 0x73 || rcx == 0x71))\n                {\n                    if (r15 == 0)\n                    {\n                        goto label_406534;\n                    }\n                    var_478 = r10_1;\n                    var_480 = r8;\n                    memset(r15, 0x30, r9_11);\n                    r10_1 = var_478;\n                    r8 = var_480;\n                    r15 = &r15[r9_11];\n                label_406534:\n                    r14 = (r14 + r9_11);\n                    rbp_1 = 0;\n                    r9_6 = 0;\n                    rax_20 = (arg2 - r14);\n                label_405da9:\n                    rbx_1 = r9_6;\n                    if (rcx_6 >= r9_6)\n                    {\n                        rbx_1 = rcx_6;\n                    }\n                    if (rbx_1 >= rax_20)\n                    {\n                        break;\n                    }\n                    if (r15 == 0)\n                    {\n                        goto label_405c66;\n                    }\n                    if ((r10_1 == 0 && rcx_6 < r9_6))\n                    {\n                        var_480 = rcx_6;\n                        uint64_t rdx_17 = (rbp_1 - rcx_6);\n                        var_488 = r8;\n                        void* rbp_3 = &r15[rdx_17];\n                        var_498 = r11_1;\n                        if (r12_1 == 0x30)\n                        {\n                            char* rdi_42 = r15;\n                            r15 = rbp_3;\n                            memset(rdi_42, 0x30, rdx_17);\n                            r11_1 = var_498;\n                            r8 = var_488;\n                            rcx_6 = var_480;\n                        }\n                        else\n                        {\n                            char* rdi_5 = r15;\n                            r15 = rbp_3;\n                            memset(rdi_5, 0x20, rdx_17);\n                            rcx_6 = var_480;\n                            r8 = var_488;\n                            r11_1 = var_498;\n                        }\n                    }\n                    var_488 = r8;\n                    rdx_8 = rcx_6;\n                    rsi_1 = r13_2;\n                    rdi_3 = r15;\n                    var_498 = rcx_6;\n                }\n                if (((rcx == 0x25 && r9 != 0) || rcx == 0))\n                {\n                    if (rdx_83 <= r13_10)\n                    {\n                        break;\n                    }\n                    if (r15 != 0)\n                    {\n                        if (rcx_12 < rax_110)\n                        {\n                            uint64_t rdx_85 = (rbp_1 - rcx_12);\n                            var_480 = r8;\n                            void* rbx_2 = &r15[rdx_85];\n                            var_488 = r9_12;\n                            var_498 = r11_1;\n                            if (r12_1 == 0x30)\n                            {\n                                char* rdi_43 = r15;\n                                r15 = rbx_2;\n                                memset(rdi_43, 0x30, rdx_85);\n                                r11_1 = var_498;\n                                r9_12 = var_488;\n                                r8 = var_480;\n                            }\n                            else\n                            {\n                                char* rdi_30 = r15;\n                                r15 = rbx_2;\n                                memset(rdi_30, 0x20, rdx_85);\n                                r8 = var_480;\n                                r9_12 = var_488;\n                                r11_1 = var_498;\n                            }\n                        }\n                        var_488 = r8;\n                        char* rdi_31 = r15;\n                        uint64_t rcx_13;\n                        if (r11_1 == 0)\n                        {\n                            memcpy(rdi_31, r9_12, rcx_12);\n                            r8 = var_488;\n                            rcx_13 = rcx_12;\n                        }\n                        else\n                        {\n                            sub_4058d0(rdi_31, r9_12, rcx_12);\n                            rcx_13 = rcx_12;\n                            r8 = var_488;\n                        }\n                        r15 = &r15[rcx_13];\n                    }\n                    r14 = (r14 + r13_10);\n                }\n                if ((rcx == 0x7a || rcx == 0x3a))\n                {\n                    if (arg4->tm_isdst < 0)\n                    {\n                        r8 = rbx;\n                    }\n                    else\n                    {\n                        int32_t rsi_34 = arg4->tm_gmtoff;\n                        r8_1 = 1;\n                        bool cond:19_1 = rsi_34 != 0;\n                        if (rsi_34 >= 0)\n                        {\n                            r8_1 = 0;\n                            if ((!cond:19_1))\n                            {\n                                r8_1 = *r12 == 0x2d;\n                            }\n                        }\n                        int32_t temp27_1;\n                        int32_t temp28_1;\n                        temp27_1 = HIGHW((rsi_34 * 0x91a2b3c5));\n                        temp28_1 = LOWW((rsi_34 * 0x91a2b3c5));\n                        int32_t rax_115 = (rsi_34 >> 0x1f);\n                        var_488 = rax_115;\n                        var_498 = (((temp27_1 + rsi_34) >> 0xb) - rax_115);\n                        int32_t temp29_1;\n                        int32_t temp30_1;\n                        temp29_1 = HIGHW((rsi_34 * 0x88888889));\n                        temp30_1 = LOWW((rsi_34 * 0x88888889));\n                        int32_t r10_8 = (((temp29_1 + rsi_34) >> 5) - var_488);\n                        int32_t temp31_1;\n                        int32_t temp32_1;\n                        temp31_1 = HIGHW((r10_8 * 0x88888889));\n                        temp32_1 = LOWW((r10_8 * 0x88888889));\n                        int32_t rax_121 = (r10_8 - ((((temp31_1 + r10_8) >> 5) - (r10_8 >> 0x1f)) * 0x3c));\n                        rdi_16 = rax_121;\n                        int32_t rsi_35 = (rsi_34 - (r10_8 * 0x3c));\n                        if (r13_12 == 0)\n                        {\n                            int32_t rsi_51 = (var_498 * 0x64);\n                            rdi_16 = 0;\n                            var_498 = 1;\n                            r10_1 = 5;\n                            rsi_19 = (rsi_51 + rax_121);\n                        }\n                        if ((r13_12 == 2 || (r13_12 == 3 && rsi_35 != 0)))\n                        {\n                            int32_t rax_163 = (var_498 * 0x2710);\n                            r10_1 = 9;\n                            var_498 = 1;\n                            int32_t rax_164 = (rax_163 + (rdi_16 * 0x64));\n                            rdi_16 = 0x14;\n                            rsi_19 = (rsi_35 + rax_164);\n                        }\n                        if ((r13_12 == 1 || ((r13_12 == 3 && rsi_35 == 0) && rax_121 != 0)))\n                        {\n                            int32_t rsi_50 = (var_498 * 0x64);\n                            r10_1 = 6;\n                            var_498 = 1;\n                            rsi_19 = (rsi_50 + rdi_16);\n                            rdi_16 = 4;\n                        }\n                        if (((r13_12 == 3 && rsi_35 == 0) && rax_121 == 0))\n                        {\n                            rsi_19 = var_498;\n                            r10_1 = 3;\n                            var_498 = 1;\n                        }\n                        if ((((r13_12 != 1 && r13_12 != 0) && r13_12 != 2) && r13_12 != 3))\n                        {\n                            rcx_14 = *rbx;\n                            r9_12 = rbx;\n                            goto label_4068fb;\n                        }\n                    }\n                }\n                char* rax_7;\n                uint64_t rax_8;\n                char* r8_2;\n                if (((((((rcx == 0x72 || rcx == 0x58) || rcx == 0x63) || rcx == 0x78) || rcx == 0x50) || rcx == 0x70) && r9 == 0))\n                {\n                    r8_2 = rbx;\n                    rax_7 = var_4b8_1;\n                label_405b60:\n                    *rax_7 = rcx;\n                    rax_7[1] = 0;\n                    var_480 = r9;\n                    rax_8 = strftime(&var_438, 0x400, &var_458, arg4);\n                    r8 = r8_2;\n                    if (rax_8 != 0)\n                    {\n                        uint64_t rcx_2 = (rax_8 - 1);\n                        int32_t rax_9 = 0;\n                        if (rbp_1 >= 0)\n                        {\n                            rax_9 = rbp_1;\n                        }\n                        uint64_t rax_10 = rax_9;\n                        rbx_1 = rax_10;\n                        if (rcx_2 >= rax_10)\n                        {\n                            rbx_1 = rcx_2;\n                        }\n                        if ((arg2 - r14) <= rbx_1)\n                        {\n                            break;\n                        }\n                        if (((arg2 - r14) > rbx_1 && r15 != 0))\n                        {\n                            if ((var_480 == 0 && rcx_2 < rax_10))\n                            {\n                                var_480 = rcx_2;\n                                uint64_t rdx_7 = (rbp_1 - rcx_2);\n                                var_488 = r8;\n                                void* rbp_2 = &r15[rdx_7];\n                                var_498 = r11_1;\n                                if (r12_1 == 0x30)\n                                {\n                                    char* rdi_39 = r15;\n                                    r15 = rbp_2;\n                                    memset(rdi_39, 0x30, rdx_7);\n                                    r11_1 = var_498;\n                                    r8 = var_488;\n                                    rcx_2 = var_480;\n                                }\n                                else\n                                {\n                                    char* rdi_2 = r15;\n                                    r15 = rbp_2;\n                                    memset(rdi_2, 0x20, rdx_7);\n                                    rcx_2 = var_480;\n                                    r8 = var_488;\n                                    r11_1 = var_498;\n                                }\n                            }\n                            var_488 = r8;\n                            rsi_1 = &*var_438[1];\n                            rdx_8 = rcx_2;\n                            rdi_3 = r15;\n                            var_498 = rcx_2;\n                        }\n                    }\n                }\n                uint64_t rcx_3;\n                if ((((((((((((rcx == 0x72 || rcx == 0x58) || rcx == 0x63) || rcx == 0x78) || rcx == 0x50) || rcx == 0x70) && r9 == 0) && rax_8 != 0) && (arg2 - r14) > rbx_1) && r15 != 0) && r13_1 == 0) || ((rcx == 0x73 || rcx == 0x71) && r15 != 0)))\n                {\n                    if (r11_1 == 0)\n                    {\n                        memcpy(rdi_3, rsi_1, rdx_8);\n                        r8 = var_488;\n                        rcx_3 = var_498;\n                        goto label_405c63;\n                    }\n                    sub_4058d0(rdi_3, rsi_1, rdx_8);\n                    rcx_3 = var_498;\n                    r8 = var_488;\n                    goto label_405c63;\n                }\n                if ((((((rcx == 0x72 || rcx == 0x58) || rcx == 0x63) || rcx == 0x78) || rcx == 0x50) || rcx == 0x70))\n                {\n                    if (r9 != 0)\n                    {\n                        r10_1 = 0;\n                    label_4060df:\n                        var_456 = r9;\n                        r8_2 = rbx;\n                        r9 = r10_1;\n                        void var_455;\n                        rax_7 = &var_455;\n                        goto label_405b60;\n                    }\n                    if ((rax_8 != 0 && (arg2 - r14) > rbx_1))\n                    {\n                        if ((r15 != 0 && r13_1 != 0))\n                        {\n                            sub_405880(rdi_3, rsi_1, rdx_8);\n                            rcx_3 = var_498;\n                            r8 = var_488;\n                        label_405c63:\n                            r15 = &r15[rcx_3];\n                        label_405c66:\n                            r14 = (r14 + rbx_1);\n                        }\n                        if (r15 == 0)\n                        {\n                            goto label_405c66;\n                        }\n                    }\n                }\n                if (((((((((((rcx == 0x43 && r9 != 0x45) || rcx == 0x75) || ((rcx == 0x7a || rcx == 0x3a) && arg4->tm_isdst >= 0)) || rcx == 0x47) || rcx == 0x56) || rcx == 0x67) || rcx == 0x6d) || rcx == 0x6a) && r9 != 0x4f) || (rcx == 0x59 && r9 != 0x45)))\n                {\n                    if (r8_1 == 0)\n                    {\n                        goto label_406380;\n                    }\n                    goto label_406639;\n                }\n                if ((((((((((rcx == 0x43 && r9 != 0x45) || rcx == 0x75) || ((rcx == 0x7a || rcx == 0x3a) && arg4->tm_isdst >= 0)) || rcx == 0x47) || rcx == 0x56) || rcx == 0x67) || rcx == 0x6d) || rcx == 0x6a) && r9 == 0x4f))\n                {\n                    if (r8_1 == 0)\n                    {\n                        goto label_4060d7;\n                    }\n                label_406639:\n                    rsi_19 = (-rsi_19);\n                    goto label_406380;\n                }\n                if ((((rcx == 0x59 && r9 == 0x45) || (rcx == 0x43 && r9 == 0x45)) || rcx == 0x79))\n                {\n                    r10_1 = 0;\n                label_4060d7:\n                    r13_1 = 0;\n                    var_458 = 0x2520;\n                    goto label_4060df;\n                }\n                if ((rcx == 0x62 || rcx == 0x68))\n                {\n                    if (r8_1 != 0)\n                    {\n                        r11_1 = r8_1;\n                    }\n                    if (r9 != 0)\n                    {\n                        goto label_406768;\n                    }\n                }\n                if (((((rcx == 0x41 || rcx == 0x42) || rcx == 0x61) || rcx == 0x62) || rcx == 0x68))\n                {\n                    rax_7 = var_4b8_1;\n                    r8_2 = rbx;\n                    r13_1 = 0;\n                    var_458 = 0x2520;\n                    r9 = 0;\n                    goto label_405b60;\n                }\n            }\n            else\n            {\n                if ((arg2 - r14) <= 1)\n                {\n                    break;\n                }\n                if (r15 != 0)\n                {\n                    *r15 = rax;\n                    r15 = &r15[1];\n                }\n                r14 = (r14 + 1);\n                r8 = rbx;\n            }\n            rax = r8[1];\n            rbx = &r8[1];\n        } while (rax != 0);\n        if ((rax != 0x25 && (arg2 - r14) <= 1))\n        {\n            r14 = 0;\n        }\n    }\n    if ((((rax == 0 || (rax != 0 && (!(rax != 0x25 && (arg2 - r14) <= 1)))) && r15 != 0) && arg2 != 0))\n    {\n        *r15 = 0;\n    }\n    return r14;\n}\n\n"
        },
        {
            "funcName": "sub_4070f0",
            "funcStartAddr": "0x4070f0",
            "funcEndAddr": "0x40710f",
            "decompiledFuncCode": "int64_t sub_4070f0(char* arg1, int64_t arg2, char* arg3, struct tm* arg4, \n    int64_t** arg5, int32_t arg6)\n{\n    char var_9 = 0;\n    return sub_405920(arg1, arg2, arg3, arg4, 0, &var_9, arg5, arg6);\n}\n\n"
        },
        {
            "funcName": "sub_407110",
            "funcStartAddr": "0x407110",
            "funcEndAddr": "0x4071a9",
            "decompiledFuncCode": "char* sub_407110(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_40f3c8;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_614490 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4071b0",
            "funcStartAddr": "0x4071b0",
            "funcEndAddr": "0x4072a2",
            "decompiledFuncCode": "char* sub_4071b0(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_40c0d0();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_407291:\n                void* const rbx_1 = &data_40f3cc;\n                if (arg2 != 9)\n                {\n                    rbx_1 = &data_410ba9;\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_407291;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_407291;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_407291;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_407291;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_407291;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_407291;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_407291;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_40f3d5;\n            if (cond:2_1)\n            {\n                rbx = &data_40f3d2;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_407291;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_407291;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_407291;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_407291;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_407291;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_40f3d9;\n            if (cond:1_1)\n            {\n                rbx = &data_40f3ce;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_4072b0",
            "funcStartAddr": "0x401d10",
            "funcEndAddr": "0x4084d1",
            "decompiledFuncCode": "int64_t sub_4072b0(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    void* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = &data_410ba9;\n    label_407348:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_4076bc:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_407704;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_4072b0(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_40771b;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_407855;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_4074a5;\n                            }\n                            goto label_407790;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_407855;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_407680;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_407680:\n                            if (var_c0 == 0)\n                            {\n                                goto label_40768b;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_4074e7:\n                            if (var_5c == 0)\n                            {\n                                goto label_4074f8;\n                            }\n                        label_4076b0:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_4076b8;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_4078eb;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_4078eb:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_4078fa:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_4076bc;\n                            }\n                            goto label_407680;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_407680;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_407680;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_4078eb;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_407486;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_407486:\n                            if (var_5c == 0)\n                            {\n                                goto label_4074a5;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_4074a5;\n                            }\n                            goto label_4078fa;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_40747d:\n                            if (r12_1 != 0)\n                            {\n                                goto label_40768b;\n                            }\n                            goto label_407486;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_4078b0:\n                            rdx = r11_1 == 2;\n                        label_4074a5:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_4075ac;\n                            }\n                            goto label_4074af;\n                        }\n                        case 0x27:\n                        {\n                            goto label_40762d;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_4075fd;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_40765a;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_4083ed;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_4075c4;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_407459;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_407a50;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_407a50;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_4083a0:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_407704:\n                            rbx_1 = sub_4072b0(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_40771b:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_407855;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_4077a7;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_407855;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_407770:\n                                r13 = 0;\n                                goto label_40752b;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_4074f8:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_40752b:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_407535;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_407535:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_40753d;\n                            }\n                            case 9:\n                            {\n                                goto label_407720;\n                            }\n                            case 0xa:\n                            {\n                                goto label_407698;\n                            }\n                            case 0xb:\n                            {\n                                goto label_407780;\n                            }\n                            case 0xc:\n                            {\n                                goto label_407760;\n                            }\n                            case 0xd:\n                            {\n                                goto label_407749;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_407aaa;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_407735;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_407a8a;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_407a72;\n                            }\n                            case 0x27:\n                            {\n                                goto label_40762d;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_4075fd;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_40765a;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_407459;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_407a50:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_407850:\n                            var_b8 = 0;\n                        label_407855:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_4078a4:\n                                if (rdx == 0)\n                                {\n                                    goto label_4078b0;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_407da1:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_4075c4;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_4076bc;\n                                }\n                                r13 = var_98;\n                                goto label_40753d;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_40ba50(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_4076bc;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_407da1;\n                            }\n                            goto label_4078a4;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_407790:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_4076bc;\n                                }\n                                var_b8 = 0;\n                            label_4077a7:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_4077f2;\n                                    }\n                                    rax_8 = r10;\n                                label_4077ea:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_4077f2:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_4075ac;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_407833;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_4077ea;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_4075ac;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_407850;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_407765;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_40769d;\n                            }\n                            case 9:\n                            {\n                            label_407720:\n                                rbp_3 = 0x74;\n                                goto label_40769d;\n                            }\n                            case 0xa:\n                            {\n                            label_407698:\n                                rbp_3 = 0x6e;\n                            label_40769d:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_4076b0;\n                                }\n                                goto label_4074f8;\n                            }\n                            case 0xb:\n                            {\n                            label_407780:\n                                rbp_3 = 0x76;\n                                goto label_407765;\n                            }\n                            case 0xc:\n                            {\n                            label_407760:\n                                rbp_3 = 0x66;\n                            label_407765:\n                                if (var_5c == 0)\n                                {\n                                    goto label_407770;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_4076b8:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_4076bc;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_407749:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_407680;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_407aaa:\n                                rbp_3 = 0x20;\n                                goto label_407a72;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_407735:\n                                rdx = 0;\n                            label_40768b:\n                                r13 = 0;\n                                goto label_4074a5;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_407a8a:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_4074a5;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_4074af:\n                                rax_8 = 0;\n                                goto label_4074b1;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_407a72:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_4074b1;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_40762d:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_4074a5;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_4083ed;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_4075ac;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_4075fd:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_4083ed:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_4076bc;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_4075ac:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_4074e7;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_4075c4;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_4074a5;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_407b90:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_4074a5;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_407b90;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_407b90;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_407b90;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_407b90;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_4083a0;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_407833:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_4075ac;\n                                }\n                            label_4074b1:\n                                if (arg7 == 0)\n                                {\n                                    goto label_4075ac;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_4075ac;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_4074e7;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_40765a:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_407680;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_4075c4:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_40753d;\n                                }\n                            label_40753d:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_407546;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_407546:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_407459:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_40768b;\n                                }\n                                goto label_40747d;\n                            }\n                        }\n                    }\n                }\n            }\n        label_407b36:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = &data_410ba9;\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_407348;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = &data_410ba9;\n                goto label_407348;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_410ba9;\n            goto label_407348;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40f3cc;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40f3cc;\n            }\n            goto label_407348;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_40f3cc;\n            goto label_407348;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_407348;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_4071b0(&data_40f3dd, r13);\n                arg9 = sub_4071b0(&data_410ba9, r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_407348;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_407b36;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = &data_410ba9;\n        goto label_407348;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4084e0",
            "funcStartAddr": "0x401d15",
            "funcEndAddr": "0x40867e",
            "decompiledFuncCode": "char* sub_4084e0(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_614318;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_614330 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_409550();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x614320)\n        {\n            int64_t rax_9 = sub_409360(0, rsi_1);\n            int128_t zmm0 = data_614320;\n            rbx = rax_9;\n            data_614318 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_409360(rbx, rsi_1);\n            data_614318 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_614330;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_614330 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_4072b0(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        size_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x6144a0)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_409300(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_4072b0(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_408680",
            "funcStartAddr": "0x408680",
            "funcEndAddr": "0x4086b4",
            "decompiledFuncCode": "int64_t sub_408680(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x6145a0;\n    }\n    int64_t rax_1 = sub_409500(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4086c0",
            "funcStartAddr": "0x4086c0",
            "funcEndAddr": "0x4086cf",
            "decompiledFuncCode": "uint64_t sub_4086c0(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6145a0;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4086d0",
            "funcStartAddr": "0x4086d0",
            "funcEndAddr": "0x4086df",
            "decompiledFuncCode": "void sub_4086d0(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6145a0;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_4086e0",
            "funcStartAddr": "0x4086e0",
            "funcEndAddr": "0x408713",
            "decompiledFuncCode": "uint64_t sub_4086e0(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x6145a0;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_408720",
            "funcStartAddr": "0x408720",
            "funcEndAddr": "0x408733",
            "decompiledFuncCode": "uint64_t sub_408720(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6145a0;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_408740",
            "funcStartAddr": "0x408740",
            "funcEndAddr": "0x40876b",
            "decompiledFuncCode": "void sub_408740(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6145a0;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x6145a0;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_408770",
            "funcStartAddr": "0x408770",
            "funcEndAddr": "0x4087e2",
            "decompiledFuncCode": "int64_t sub_408770(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_6145a0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_4072b0(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_4087f0",
            "funcStartAddr": "0x4087f0",
            "funcEndAddr": "0x4088d1",
            "decompiledFuncCode": "char* sub_4087f0(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_6145a0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_4072b0(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_409300((rax_2 + 1));\n    sub_4072b0(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_4088e0",
            "funcStartAddr": "0x4088e0",
            "funcEndAddr": "0x4088ea",
            "decompiledFuncCode": "int64_t sub_4088e0(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_4087f0(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_4088f0",
            "funcStartAddr": "0x4088f0",
            "funcEndAddr": "0x408985",
            "decompiledFuncCode": "uint64_t sub_4088f0()\n{\n    uint64_t rax_2 = data_614330;\n    int64_t r12 = data_614318;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x6144a0)\n    {\n        rax_2 = free(rdi_2);\n        *data_614320 = 0x100;\n        *(data_614320 + 8) = 0x6144a0;\n    }\n    if (r12 != 0x614320)\n    {\n        rax_2 = free(r12);\n        data_614318 = 0x614320;\n    }\n    data_614330 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_408990",
            "funcStartAddr": "0x408990",
            "funcEndAddr": "0x4089a1",
            "decompiledFuncCode": "int64_t sub_408990(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4084e0(arg1, arg2, -1, &data_6145a0);\n}\n\n"
        },
        {
            "funcName": "sub_4089b0",
            "funcStartAddr": "0x4089b0",
            "funcEndAddr": "0x4089ba",
            "decompiledFuncCode": "int64_t sub_4089b0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_4084e0(arg1, arg2, arg3, &data_6145a0);\n}\n\n"
        },
        {
            "funcName": "sub_4089c0",
            "funcStartAddr": "0x4089c0",
            "funcEndAddr": "0x4089d6",
            "decompiledFuncCode": "int64_t sub_4089c0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_4084e0(0, arg1, -1, &data_6145a0);\n}\n\n"
        },
        {
            "funcName": "sub_4089e0",
            "funcStartAddr": "0x4089e0",
            "funcEndAddr": "0x4089f2",
            "decompiledFuncCode": "int64_t sub_4089e0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4084e0(0, arg1, arg2, &data_6145a0);\n}\n\n"
        },
        {
            "funcName": "sub_408a00",
            "funcStartAddr": "0x401d1a",
            "funcEndAddr": "0x408a68",
            "decompiledFuncCode": "char* sub_408a00(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_4084e0(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_408a70",
            "funcStartAddr": "0x401d1f",
            "funcEndAddr": "0x408ad4",
            "decompiledFuncCode": "char* sub_408a70(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_4084e0(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_408ae0",
            "funcStartAddr": "0x408ae0",
            "funcEndAddr": "0x408aec",
            "decompiledFuncCode": "int64_t sub_408ae0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_408a00(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_408af0",
            "funcStartAddr": "0x408af0",
            "funcEndAddr": "0x408aff",
            "decompiledFuncCode": "int64_t sub_408af0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_408a70(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_408b00",
            "funcStartAddr": "0x408b00",
            "funcEndAddr": "0x408b70",
            "decompiledFuncCode": "char* sub_408b00(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_6145d0;\n    int128_t var_48 = data_6145a0;\n    int128_t var_38 = data_6145b0;\n    int128_t var_28 = data_6145c0;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_4084e0(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_408b70",
            "funcStartAddr": "0x408b70",
            "funcEndAddr": "0x408b7d",
            "decompiledFuncCode": "int64_t sub_408b70(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_408b00(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_408b80",
            "funcStartAddr": "0x408b80",
            "funcEndAddr": "0x408b91",
            "decompiledFuncCode": "int64_t sub_408b80(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_408b00(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_408ba0",
            "funcStartAddr": "0x408ba0",
            "funcEndAddr": "0x408baa",
            "decompiledFuncCode": "int64_t sub_408ba0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_408b00(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_408bb0",
            "funcStartAddr": "0x401d24",
            "funcEndAddr": "0x408c1e",
            "decompiledFuncCode": "char* sub_408bb0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_4084e0(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_408c20",
            "funcStartAddr": "0x408c20",
            "funcEndAddr": "0x408c8c",
            "decompiledFuncCode": "char* sub_408c20(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_6145a0;\n    int128_t var_38 = data_6145b0;\n    int128_t var_28 = data_6145c0;\n    int64_t var_18 = data_6145d0;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_4084e0(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_408d30",
            "funcStartAddr": "0x408d30",
            "funcEndAddr": "0x408d46",
            "decompiledFuncCode": "int64_t sub_408d30(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_4084e0(0, arg1, -1, &data_6142e0);\n}\n\n"
        },
        {
            "funcName": "sub_408d50",
            "funcStartAddr": "0x408d50",
            "funcEndAddr": "0x408d5e",
            "decompiledFuncCode": "int64_t sub_408d50(int32_t arg1)\n{\n    /* tailcall */\n    return sub_40aaa0(arg1, 0, 3);\n}\n\n"
        },
        {
            "funcName": "sub_408d60",
            "funcStartAddr": "0x401d29",
            "funcEndAddr": "0x40913d",
            "decompiledFuncCode": "int64_t sub_408d60(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_41012b, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_409140",
            "funcStartAddr": "0x409140",
            "funcEndAddr": "0x409160",
            "decompiledFuncCode": "int64_t sub_409140(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_408d60(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_409160",
            "funcStartAddr": "0x409160",
            "funcEndAddr": "0x4091c0",
            "decompiledFuncCode": "int64_t sub_409160(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_408d60(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_4091c0",
            "funcStartAddr": "0x4091c0",
            "funcEndAddr": "0x40927c",
            "decompiledFuncCode": "int64_t sub_4091c0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_408d60(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_409280",
            "funcStartAddr": "0x409280",
            "funcEndAddr": "0x4092f4",
            "decompiledFuncCode": "int64_t sub_409280()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_409300",
            "funcStartAddr": "0x409300",
            "funcEndAddr": "0x40931a",
            "decompiledFuncCode": "int64_t sub_409300(size_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_409550();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_409360",
            "funcStartAddr": "0x409360",
            "funcEndAddr": "0x409396",
            "decompiledFuncCode": "int64_t sub_409360(int64_t arg1, size_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_409550();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_409460",
            "funcStartAddr": "0x409460",
            "funcEndAddr": "0x4094b0",
            "decompiledFuncCode": "int64_t sub_409460(int64_t arg1, int64_t* arg2)\n{\n    size_t rax = *arg2;\n    bool cond:0_1;\n    if (arg1 == 0)\n    {\n        cond:0_1 = rax >= 0;\n        if (rax == 0)\n        {\n            *arg2 = 0x80;\n            /* tailcall */\n            return sub_409360(arg1, 0x80);\n        }\n    }\n    if ((arg1 != 0 && rax <= 0x5555555555555553))\n    {\n        rax = (((rax >> 1) + rax) + 1);\n    }\n    if (((arg1 != 0 && rax <= 0x5555555555555553) || ((arg1 == 0 && rax != 0) && cond:0_1)))\n    {\n        *arg2 = rax;\n        /* tailcall */\n        return sub_409360(arg1, rax);\n    }\n    if (((arg1 != 0 && rax > 0x5555555555555553) || ((arg1 == 0 && rax != 0) && (!cond:0_1))))\n    {\n        size_t var_8 = rax;\n        sub_409550();\n        /* no return */\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4094b0",
            "funcStartAddr": "0x4094b0",
            "funcEndAddr": "0x4094c7",
            "decompiledFuncCode": "int64_t sub_4094b0(size_t arg1)\n{\n    /* tailcall */\n    return memset(sub_409300(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_4094d0",
            "funcStartAddr": "0x4094d0",
            "funcEndAddr": "0x4094fe",
            "decompiledFuncCode": "int64_t sub_4094d0(size_t arg1, size_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_409550();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_409500",
            "funcStartAddr": "0x409500",
            "funcEndAddr": "0x409528",
            "decompiledFuncCode": "int64_t sub_409500(int64_t arg1, size_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_409300(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_409530",
            "funcStartAddr": "0x409530",
            "funcEndAddr": "0x409543",
            "decompiledFuncCode": "int64_t sub_409530(char* arg1)\n{\n    /* tailcall */\n    return sub_409500(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_409550",
            "funcStartAddr": "0x409550",
            "funcEndAddr": "0x409581",
            "decompiledFuncCode": "int64_t sub_409550() __noreturn\n{\n    error(data_6142c0, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_409590",
            "funcStartAddr": "0x409590",
            "funcEndAddr": "0x409674",
            "decompiledFuncCode": "int64_t sub_409590(char* arg1, int32_t arg2, int64_t arg3, int64_t arg4, \n    char* arg5, int64_t arg6, int32_t arg7)\n{\n    int32_t rbx = arg7;\n    int64_t var_40;\n    int32_t rax = sub_4096b0(arg1, nullptr, arg2, &var_40, arg5);\n    int64_t rbp;\n    int32_t* r14_1;\n    if (rax == 0)\n    {\n        rbp = var_40;\n        if ((rbp < arg3 || (rbp >= arg3 && rbp > arg4)))\n        {\n            r14_1 = __errno_location();\n            if (rbp <= 0x3fffffff)\n            {\n                int32_t rax_6 = 0x22;\n                if (rbp <= -0x40000001)\n                {\n                    rax_6 = 0x4b;\n                }\n                *r14_1 = rax_6;\n                goto label_4095ea;\n            }\n        }\n    }\n    else\n    {\n        int32_t* rax_5 = __errno_location();\n        r14_1 = rax_5;\n        if (rax != 1)\n        {\n            if (rax == 3)\n            {\n                *rax_5 = 0;\n            }\n            goto label_4095ea;\n        }\n    }\n    if ((rax != 0 || (rax == 0 && (rbp < arg3 || (rbp >= arg3 && rbp > arg4)))))\n    {\n        *r14_1 = 0x4b;\n    label_4095ea:\n        int64_t rax_2 = sub_408d30(arg1);\n        uint64_t rsi = *r14_1;\n        if (rsi == 0x16)\n        {\n            rsi = 0;\n        }\n        if (rbx == 0)\n        {\n            rbx = 1;\n        }\n        error(rbx, rsi, \"%s: %s\", arg6, rax_2);\n        rbp = var_40;\n    }\n    return rbp;\n}\n\n"
        },
        {
            "funcName": "sub_409680",
            "funcStartAddr": "0x409680",
            "funcEndAddr": "0x4096a1",
            "decompiledFuncCode": "int64_t sub_409680(char* arg1, int64_t arg2, int64_t arg3, char* arg4, \n    int64_t arg5, int32_t arg6)\n{\n    return sub_409590(arg1, 0xa, arg2, arg3, arg4, arg5, arg6);\n}\n\n"
        },
        {
            "funcName": "sub_4096b0",
            "funcStartAddr": "0x4096b0",
            "funcEndAddr": "0x409df2",
            "decompiledFuncCode": "uint64_t sub_4096b0(char* arg1, int64_t* arg2, int32_t arg3, int64_t* arg4, \n    char* arg5)\n{\n    if (arg3 > 0x24)\n    {\n        __assert_fail(\"0 <= strtol_base && strtol_base \u2026\", \"lib/xstrtol.c\", 0x60, \"xstrtoimax\");\n        /* no return */\n    }\n    int64_t* rbx = arg2;\n    void var_40;\n    if (arg2 == 0)\n    {\n        rbx = &var_40;\n    }\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char* r15 = *rbx;\n    int64_t rbp_1 = __strtol_internal(arg1, rbx, arg3, 0);\n    int32_t r12_1;\n    uint32_t r13_1;\n    if (r15 != arg1)\n    {\n        int32_t rax_2 = *rax;\n        if (rax_2 != 0)\n        {\n            r12_1 = 4;\n        }\n        if (rax_2 == 0x22)\n        {\n            r12_1 = 1;\n        }\n        if (rax_2 == 0)\n        {\n            r12_1 = 0;\n        }\n        if ((rax_2 == 0 || rax_2 == 0x22))\n        {\n            if (arg5 == 0)\n            {\n            label_40972b:\n                *arg4 = rbp_1;\n            }\n            else\n            {\n                r13_1 = *r15;\n                if (r13_1 == 0)\n                {\n                    goto label_40972b;\n                }\n                if (strchr(arg5, r13_1) != 0)\n                {\n                    goto label_40978d;\n                }\n            label_409839:\n                r12_1 = (r12_1 | 2);\n                *arg4 = rbp_1;\n            }\n        }\n    }\n    else\n    {\n        if (arg5 != 0)\n        {\n            r13_1 = *r15;\n            r12_1 = 4;\n            if (r13_1 != 0)\n            {\n                rbp_1 = 1;\n                r12_1 = 0;\n                if (strchr(arg5, r13_1) != 0)\n                {\n                label_40978d:\n                    uint64_t rdx_1 = (r13_1 - 0x45);\n                    int32_t rax_6;\n                    char* rax_7;\n                    char rax_8;\n                    int64_t rax_14;\n                    int64_t rcx;\n                    int64_t rcx_1;\n                    int64_t rcx_2;\n                    int64_t rcx_3;\n                    int64_t rcx_4;\n                    int64_t rcx_5;\n                    int64_t rcx_6;\n                    uint64_t rdx_2;\n                    int32_t rsi_2;\n                    int64_t rsi_4;\n                    int64_t rdi_4;\n                    int64_t r9_1;\n                    int64_t r9_2;\n                    int64_t r9_3;\n                    int64_t r9_4;\n                    int64_t r9_5;\n                    int64_t r9_6;\n                    char r13_2;\n                    if (rdx_1 <= 0x2f)\n                    {\n                        char var_49_1 = rdx_1;\n                        if ((!(TEST_BITQ(0x814400308945, rdx_1))))\n                        {\n                            goto label_409796;\n                        }\n                        rax_7 = strchr(arg5, 0x30);\n                        if (rax_7 == 0)\n                        {\n                            goto label_409796;\n                        }\n                        rax_8 = r15[1];\n                        if ((rax_8 != 0x44 && rax_8 != 0x69))\n                        {\n                            rdx_2 = var_49_1;\n                            if (rax_8 != 0x42)\n                            {\n                                switch (rdx_2)\n                                {\n                                    case 1:\n                                    case 3:\n                                    case 4:\n                                    case 5:\n                                    case 7:\n                                    case 9:\n                                    case 0xa:\n                                    case 0xc:\n                                    case 0xd:\n                                    case 0xe:\n                                    case 0x10:\n                                    case 0x11:\n                                    case 0x12:\n                                    case 0x13:\n                                    case 0x16:\n                                    case 0x17:\n                                    case 0x18:\n                                    case 0x19:\n                                    case 0x1a:\n                                    case 0x1b:\n                                    case 0x1c:\n                                    case 0x1f:\n                                    case 0x20:\n                                    case 0x21:\n                                    case 0x23:\n                                    case 0x24:\n                                    case 0x25:\n                                    case 0x27:\n                                    case 0x29:\n                                    case 0x2a:\n                                    case 0x2b:\n                                    case 0x2c:\n                                    case 0x2d:\n                                    case 0x2e:\n                                    {\n                                        goto label_409839;\n                                    }\n                                    case 6:\n                                    case 0x26:\n                                    {\n                                        rcx = 0x400;\n                                        rax_14 = -0x20000000000000;\n                                        break;\n                                    }\n                                    case 8:\n                                    case 0x28:\n                                    {\n                                        rcx = 0x400;\n                                        rdi_4 = -0x20000000000000;\n                                        break;\n                                    }\n                                    case 0x1d:\n                                    {\n                                        /* nop */\n                                        break;\n                                    }\n                                }\n                                switch (rdx_2)\n                                {\n                                    case 0xb:\n                                    {\n                                        rsi_4 = 1;\n                                        rcx_1 = 0x400;\n                                        r9_1 = -0x20000000000000;\n                                        goto label_4099b8;\n                                    }\n                                    case 0xf:\n                                    case 0x2f:\n                                    {\n                                        rsi_4 = 1;\n                                        rcx_2 = 0x400;\n                                        r9_2 = -0x20000000000000;\n                                        goto label_409a20;\n                                    }\n                                    case 0x14:\n                                    {\n                                        rsi_4 = 1;\n                                        rcx_5 = 0x400;\n                                        r9_5 = -0x20000000000000;\n                                        goto label_409b58;\n                                    }\n                                    case 0x15:\n                                    {\n                                        rsi_4 = 1;\n                                        rcx_6 = 0x400;\n                                        r9_6 = -0x20000000000000;\n                                        goto label_409bc0;\n                                    }\n                                }\n                                if ((rdx_2 == 2 || rdx_2 == 0x22))\n                                {\n                                    rsi_4 = 1;\n                                    rcx_4 = 0x400;\n                                    r9_4 = -0x20000000000000;\n                                    goto label_409af0;\n                                }\n                                if (rdx_2 == 0)\n                                {\n                                    rsi_4 = 1;\n                                    rcx_3 = 0x400;\n                                    r9_3 = -0x20000000000000;\n                                    goto label_409a88;\n                                }\n                                if (rdx_2 == 0x1e)\n                                {\n                                    rsi_4 = 1;\n                                    goto label_409878;\n                                }\n                            }\n                        }\n                        if (rax_8 == 0x42)\n                        {\n                            goto label_409da8;\n                        }\n                        if (rax_8 == 0x69)\n                        {\n                            rax_6 = 0x400;\n                            int32_t rsi_6;\n                            rsi_6 = r15[2] == 0x42;\n                            rsi_2 = ((rsi_6 + rsi_6) + 1);\n                            goto label_4097a0;\n                        }\n                        if (rax_8 == 0x44)\n                        {\n                        label_409da8:\n                            rsi_2 = 2;\n                            rax_6 = 0x3e8;\n                            goto label_4097a0;\n                        }\n                    }\n                    else\n                    {\n                    label_409796:\n                        rsi_2 = 1;\n                        rax_6 = 0x400;\n                    label_4097a0:\n                        r13_2 = (r13_1 - 0x42);\n                        if ((r13_2 == 9 || r13_2 == 0x29))\n                        {\n                            rcx = rax_6;\n                            rsi_4 = rsi_2;\n                            int64_t rax_13;\n                            int64_t rdx_3;\n                            rdx_3 = HIGHD(-0x8000000000000000);\n                            rax_13 = LOWD(-0x8000000000000000);\n                            rax_14 = (COMBINE(rdx_3, rax_13) / rcx);\n                        }\n                    }\n                    int64_t rax_16;\n                    if (((rdx_1 > 0x2f && (r13_2 == 9 || r13_2 == 0x29)) || ((((((rdx_1 <= 0x2f && (TEST_BITQ(0x814400308945, rdx_1))) && rax_7 != 0) && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && (rdx_2 == 6 || rdx_2 == 0x26))))\n                    {\n                        if (rbp_1 < rax_14)\n                        {\n                            goto label_409948;\n                        }\n                        int64_t rax_15;\n                        int64_t rdx_5;\n                        rdx_5 = HIGHD(0x7fffffffffffffff);\n                        rax_15 = LOWD(0x7fffffffffffffff);\n                        rax_16 = (COMBINE(rdx_5, rax_15) / rcx);\n                    }\n                    if ((rdx_1 > 0x2f && (r13_2 == 0xb || r13_2 == 0x2b)))\n                    {\n                        rcx = rax_6;\n                        rsi_4 = rsi_2;\n                        int64_t rax_17;\n                        int64_t rdx_7;\n                        rdx_7 = HIGHD(-0x8000000000000000);\n                        rax_17 = LOWD(-0x8000000000000000);\n                        rdi_4 = (COMBINE(rdx_7, rax_17) / rcx);\n                    }\n                    if (((rdx_1 > 0x2f && (r13_2 == 0xb || r13_2 == 0x2b)) || ((((((rdx_1 <= 0x2f && (TEST_BITQ(0x814400308945, rdx_1))) && rax_7 != 0) && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && (rdx_2 == 8 || rdx_2 == 0x28))))\n                    {\n                        if (rbp_1 < rdi_4)\n                        {\n                            goto label_409948;\n                        }\n                        int64_t rax_19;\n                        int64_t rdx_9;\n                        rdx_9 = HIGHD(0x7fffffffffffffff);\n                        rax_19 = LOWD(0x7fffffffffffffff);\n                        rax_16 = (COMBINE(rdx_9, rax_19) / rcx);\n                        if (rbp_1 > rax_16)\n                        {\n                            goto label_409d00;\n                        }\n                        rbp_1 = (rbp_1 * rcx);\n                        if (rbp_1 < rdi_4)\n                        {\n                            goto label_409948;\n                        }\n                    }\n                    if (((((rdx_1 > 0x2f && (r13_2 == 9 || r13_2 == 0x29)) || ((((((rdx_1 <= 0x2f && (TEST_BITQ(0x814400308945, rdx_1))) && rax_7 != 0) && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && (rdx_2 == 6 || rdx_2 == 0x26))) && rbp_1 >= rax_14) || (((rdx_1 > 0x2f && (r13_2 == 0xb || r13_2 == 0x2b)) || ((((((rdx_1 <= 0x2f && (TEST_BITQ(0x814400308945, rdx_1))) && rax_7 != 0) && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && (rdx_2 == 8 || rdx_2 == 0x28))) && rbp_1 >= rdi_4)))\n                    {\n                        if (rax_16 < rbp_1)\n                        {\n                            goto label_409d00;\n                        }\n                        rbp_1 = (rbp_1 * rcx);\n                        goto label_409878;\n                    }\n                    if ((rdx_1 > 0x2f && r13_2 == 0x20))\n                    {\n                        rsi_4 = rsi_2;\n                    }\n                    if (((rdx_1 > 0x2f && r13_2 == 0x20) || ((((((rdx_1 <= 0x2f && (TEST_BITQ(0x814400308945, rdx_1))) && rax_7 != 0) && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && rdx_2 == 0x1d)))\n                    {\n                        if (rbp_1 < -0x40000000000000)\n                        {\n                            goto label_409948;\n                        }\n                        if (rbp_1 > 0x3fffffffffffff)\n                        {\n                            goto label_409d00;\n                        }\n                        rbp_1 = (rbp_1 << 9);\n                        goto label_409878;\n                    }\n                    if (rdx_1 > 0x2f)\n                    {\n                        switch (r13_2)\n                        {\n                            case 0:\n                            {\n                                rsi_4 = rsi_2;\n                                if (rbp_1 < -0x20000000000000)\n                                {\n                                label_409948:\n                                    rbp_1 = -0x8000000000000000;\n                                    r12_1 = 1;\n                                    goto label_409878;\n                                }\n                                if (rbp_1 <= 0x1fffffffffffff)\n                                {\n                                    rbp_1 = (rbp_1 << 0xa);\n                                    goto label_409878;\n                                }\n                            label_409d00:\n                                rbp_1 = 0x7fffffffffffffff;\n                                r12_1 = 1;\n                                goto label_409878;\n                            }\n                            case 1:\n                            case 2:\n                            case 4:\n                            case 6:\n                            case 7:\n                            case 8:\n                            case 0xa:\n                            case 0xc:\n                            case 0xd:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x22:\n                            case 0x23:\n                            case 0x24:\n                            case 0x26:\n                            case 0x27:\n                            case 0x28:\n                            case 0x2a:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x33:\n                            case 0x34:\n                            {\n                                goto label_409839;\n                            }\n                            case 0x21:\n                            {\n                                rsi_4 = rsi_2;\n                            label_409878:\n                                void* rsi_5 = &r15[rsi_4];\n                                int32_t rax_12 = (r12_1 | 2);\n                                *rbx = rsi_5;\n                                if (*rsi_5 != 0)\n                                {\n                                    r12_1 = rax_12;\n                                }\n                                goto label_40972b;\n                            }\n                            case 0x35:\n                            {\n                                rsi_4 = rsi_2;\n                                if (rbp_1 < -0x4000000000000000)\n                                {\n                                    goto label_409948;\n                                }\n                                if (rbp_1 > 0x3fffffffffffffff)\n                                {\n                                    goto label_409d00;\n                                }\n                                rbp_1 = (rbp_1 + rbp_1);\n                                goto label_409878;\n                            }\n                        }\n                        int32_t r10_1;\n                        switch (r13_2)\n                        {\n                            case 3:\n                            {\n                                rcx_3 = rax_6;\n                                rsi_4 = rsi_2;\n                                int64_t rax_28;\n                                int64_t rdx_19;\n                                rdx_19 = HIGHD(-0x8000000000000000);\n                                rax_28 = LOWD(-0x8000000000000000);\n                                r9_3 = (COMBINE(rdx_19, rax_28) / rcx_3);\n                            label_409a88:\n                                int32_t rdi_7 = 6;\n                                r10_1 = 0;\n                                do\n                                {\n                                    if (rbp_1 < r9_3)\n                                    {\n                                        rbp_1 = -0x8000000000000000;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        int64_t rax_30;\n                                        int64_t rdx_21;\n                                        rdx_21 = HIGHD(0x7fffffffffffffff);\n                                        rax_30 = LOWD(0x7fffffffffffffff);\n                                        if ((COMBINE(rdx_21, rax_30) / rcx_3) < rbp_1)\n                                        {\n                                            rbp_1 = 0x7fffffffffffffff;\n                                            r10_1 = 1;\n                                        }\n                                        else\n                                        {\n                                            rbp_1 = (rbp_1 * rcx_3);\n                                        }\n                                    }\n                                    rdi_7 = (rdi_7 - 1);\n                                } while (rdi_7 != 1);\n                                goto label_409cf0;\n                            }\n                            case 5:\n                            case 0x25:\n                            {\n                                rcx_4 = rax_6;\n                                rsi_4 = rsi_2;\n                                int64_t rax_32;\n                                int64_t rdx_23;\n                                rdx_23 = HIGHD(-0x8000000000000000);\n                                rax_32 = LOWD(-0x8000000000000000);\n                                r9_4 = (COMBINE(rdx_23, rax_32) / rcx_4);\n                            label_409af0:\n                                int32_t rdi_8 = 3;\n                                r10_1 = 0;\n                                do\n                                {\n                                    if (rbp_1 < r9_4)\n                                    {\n                                        rbp_1 = -0x8000000000000000;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        int64_t rax_34;\n                                        int64_t rdx_25;\n                                        rdx_25 = HIGHD(0x7fffffffffffffff);\n                                        rax_34 = LOWD(0x7fffffffffffffff);\n                                        if ((COMBINE(rdx_25, rax_34) / rcx_4) < rbp_1)\n                                        {\n                                            rbp_1 = 0x7fffffffffffffff;\n                                            r10_1 = 1;\n                                        }\n                                        else\n                                        {\n                                            rbp_1 = (rbp_1 * rcx_4);\n                                        }\n                                    }\n                                    rdi_8 = (rdi_8 - 1);\n                                } while (rdi_8 != 1);\n                                goto label_409cf0;\n                            }\n                            case 0xe:\n                            {\n                                rcx_1 = rax_6;\n                                rsi_4 = rsi_2;\n                                int64_t rax_20;\n                                int64_t rdx_11;\n                                rdx_11 = HIGHD(-0x8000000000000000);\n                                rax_20 = LOWD(-0x8000000000000000);\n                                r9_1 = (COMBINE(rdx_11, rax_20) / rcx_1);\n                            label_4099b8:\n                                int32_t rdi_5 = 5;\n                                r10_1 = 0;\n                                do\n                                {\n                                    if (r9_1 > rbp_1)\n                                    {\n                                        rbp_1 = -0x8000000000000000;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        int64_t rax_22;\n                                        int64_t rdx_13;\n                                        rdx_13 = HIGHD(0x7fffffffffffffff);\n                                        rax_22 = LOWD(0x7fffffffffffffff);\n                                        if ((COMBINE(rdx_13, rax_22) / rcx_1) < rbp_1)\n                                        {\n                                            rbp_1 = 0x7fffffffffffffff;\n                                            r10_1 = 1;\n                                        }\n                                        else\n                                        {\n                                            rbp_1 = (rbp_1 * rcx_1);\n                                        }\n                                    }\n                                    rdi_5 = (rdi_5 - 1);\n                                } while (rdi_5 != 1);\n                            label_409cf0:\n                                r12_1 = (r12_1 | r10_1);\n                                goto label_409878;\n                            }\n                            case 0x12:\n                            case 0x32:\n                            {\n                                rcx_2 = rax_6;\n                                rsi_4 = rsi_2;\n                                int64_t rax_24;\n                                int64_t rdx_15;\n                                rdx_15 = HIGHD(-0x8000000000000000);\n                                rax_24 = LOWD(-0x8000000000000000);\n                                r9_2 = (COMBINE(rdx_15, rax_24) / rcx_2);\n                            label_409a20:\n                                int32_t rdi_6 = 4;\n                                r10_1 = 0;\n                                do\n                                {\n                                    if (r9_2 > rbp_1)\n                                    {\n                                        rbp_1 = -0x8000000000000000;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        int64_t rax_26;\n                                        int64_t rdx_17;\n                                        rdx_17 = HIGHD(0x7fffffffffffffff);\n                                        rax_26 = LOWD(0x7fffffffffffffff);\n                                        if ((COMBINE(rdx_17, rax_26) / rcx_2) < rbp_1)\n                                        {\n                                            rbp_1 = 0x7fffffffffffffff;\n                                            r10_1 = 1;\n                                        }\n                                        else\n                                        {\n                                            rbp_1 = (rbp_1 * rcx_2);\n                                        }\n                                    }\n                                    rdi_6 = (rdi_6 - 1);\n                                } while (rdi_6 != 1);\n                                goto label_409cf0;\n                            }\n                        }\n                        if (r13_2 == 0x17)\n                        {\n                            rcx_5 = rax_6;\n                            rsi_4 = rsi_2;\n                            int64_t rax_36;\n                            int64_t rdx_27;\n                            rdx_27 = HIGHD(-0x8000000000000000);\n                            rax_36 = LOWD(-0x8000000000000000);\n                            r9_5 = (COMBINE(rdx_27, rax_36) / rcx_5);\n                        label_409b58:\n                            int32_t rdi_9 = 8;\n                            r10_1 = 0;\n                            do\n                            {\n                                if (r9_5 > rbp_1)\n                                {\n                                    rbp_1 = -0x8000000000000000;\n                                    r10_1 = 1;\n                                }\n                                else\n                                {\n                                    int64_t rax_38;\n                                    int64_t rdx_29;\n                                    rdx_29 = HIGHD(0x7fffffffffffffff);\n                                    rax_38 = LOWD(0x7fffffffffffffff);\n                                    if ((COMBINE(rdx_29, rax_38) / rcx_5) < rbp_1)\n                                    {\n                                        rbp_1 = 0x7fffffffffffffff;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        rbp_1 = (rbp_1 * rcx_5);\n                                    }\n                                }\n                                rdi_9 = (rdi_9 - 1);\n                            } while (rdi_9 != 1);\n                            goto label_409cf0;\n                        }\n                        if (r13_2 == 0x18)\n                        {\n                            rcx_6 = rax_6;\n                            rsi_4 = rsi_2;\n                            int64_t rax_40;\n                            int64_t rdx_31;\n                            rdx_31 = HIGHD(-0x8000000000000000);\n                            rax_40 = LOWD(-0x8000000000000000);\n                            r9_6 = (COMBINE(rdx_31, rax_40) / rcx_6);\n                        label_409bc0:\n                            int32_t rdi_10 = 7;\n                            r10_1 = 0;\n                            do\n                            {\n                                if (r9_6 > rbp_1)\n                                {\n                                    rbp_1 = -0x8000000000000000;\n                                    r10_1 = 1;\n                                }\n                                else\n                                {\n                                    int64_t rax_42;\n                                    int64_t rdx_33;\n                                    rdx_33 = HIGHD(0x7fffffffffffffff);\n                                    rax_42 = LOWD(0x7fffffffffffffff);\n                                    if ((COMBINE(rdx_33, rax_42) / rcx_6) < rbp_1)\n                                    {\n                                        rbp_1 = 0x7fffffffffffffff;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        rbp_1 = (rbp_1 * rcx_6);\n                                    }\n                                }\n                                rdi_10 = (rdi_10 - 1);\n                            } while (rdi_10 != 1);\n                            goto label_409cf0;\n                        }\n                        if (r13_2 > 0x35)\n                        {\n                            goto label_409839;\n                        }\n                    }\n                }\n            }\n        }\n        if ((arg5 == 0 || (arg5 != 0 && r13_1 != 0)))\n        {\n            r12_1 = 4;\n        }\n    }\n    return r12_1;\n}\n\n"
        },
        {
            "funcName": "sub_409e00",
            "funcStartAddr": "0x409e00",
            "funcEndAddr": "0x40a542",
            "decompiledFuncCode": "uint64_t sub_409e00(char* arg1, int64_t* arg2, int32_t arg3, int64_t* arg4, \n    char* arg5)\n{\n    if (arg3 > 0x24)\n    {\n        __assert_fail(\"0 <= strtol_base && strtol_base \u2026\", \"lib/xstrtol.c\", 0x60, \"xstrtol\");\n        /* no return */\n    }\n    int64_t* rbx = arg2;\n    void var_40;\n    if (arg2 == 0)\n    {\n        rbx = &var_40;\n    }\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char* r15 = *rbx;\n    int64_t rbp_1 = strtol(arg1, rbx, arg3);\n    int32_t r12_1;\n    uint32_t r13_1;\n    if (r15 != arg1)\n    {\n        int32_t rax_2 = *rax;\n        if (rax_2 != 0)\n        {\n            r12_1 = 4;\n        }\n        if (rax_2 == 0x22)\n        {\n            r12_1 = 1;\n        }\n        if (rax_2 == 0)\n        {\n            r12_1 = 0;\n        }\n        if ((rax_2 == 0 || rax_2 == 0x22))\n        {\n            if (arg5 == 0)\n            {\n            label_409e79:\n                *arg4 = rbp_1;\n            }\n            else\n            {\n                r13_1 = *r15;\n                if (r13_1 == 0)\n                {\n                    goto label_409e79;\n                }\n                if (strchr(arg5, r13_1) != 0)\n                {\n                    goto label_409edd;\n                }\n            label_409f89:\n                r12_1 = (r12_1 | 2);\n                *arg4 = rbp_1;\n            }\n        }\n    }\n    else\n    {\n        if (arg5 != 0)\n        {\n            r13_1 = *r15;\n            r12_1 = 4;\n            if (r13_1 != 0)\n            {\n                rbp_1 = 1;\n                r12_1 = 0;\n                if (strchr(arg5, r13_1) != 0)\n                {\n                label_409edd:\n                    uint64_t rdx_1 = (r13_1 - 0x45);\n                    int32_t rax_6;\n                    char* rax_7;\n                    char rax_8;\n                    int64_t rax_14;\n                    int64_t rcx;\n                    int64_t rcx_1;\n                    int64_t rcx_2;\n                    int64_t rcx_3;\n                    int64_t rcx_4;\n                    int64_t rcx_5;\n                    int64_t rcx_6;\n                    uint64_t rdx_2;\n                    int32_t rsi_2;\n                    int64_t rsi_4;\n                    int64_t rdi_4;\n                    int64_t r9_1;\n                    int64_t r9_2;\n                    int64_t r9_3;\n                    int64_t r9_4;\n                    int64_t r9_5;\n                    int64_t r9_6;\n                    char r13_2;\n                    if (rdx_1 <= 0x2f)\n                    {\n                        char var_49_1 = rdx_1;\n                        if ((!(TEST_BITQ(0x814400308945, rdx_1))))\n                        {\n                            goto label_409ee6;\n                        }\n                        rax_7 = strchr(arg5, 0x30);\n                        if (rax_7 == 0)\n                        {\n                            goto label_409ee6;\n                        }\n                        rax_8 = r15[1];\n                        if ((rax_8 != 0x44 && rax_8 != 0x69))\n                        {\n                            rdx_2 = var_49_1;\n                            if (rax_8 != 0x42)\n                            {\n                                switch (rdx_2)\n                                {\n                                    case 1:\n                                    case 3:\n                                    case 4:\n                                    case 5:\n                                    case 7:\n                                    case 9:\n                                    case 0xa:\n                                    case 0xc:\n                                    case 0xd:\n                                    case 0xe:\n                                    case 0x10:\n                                    case 0x11:\n                                    case 0x12:\n                                    case 0x13:\n                                    case 0x16:\n                                    case 0x17:\n                                    case 0x18:\n                                    case 0x19:\n                                    case 0x1a:\n                                    case 0x1b:\n                                    case 0x1c:\n                                    case 0x1f:\n                                    case 0x20:\n                                    case 0x21:\n                                    case 0x23:\n                                    case 0x24:\n                                    case 0x25:\n                                    case 0x27:\n                                    case 0x29:\n                                    case 0x2a:\n                                    case 0x2b:\n                                    case 0x2c:\n                                    case 0x2d:\n                                    case 0x2e:\n                                    {\n                                        goto label_409f89;\n                                    }\n                                    case 6:\n                                    case 0x26:\n                                    {\n                                        rcx = 0x400;\n                                        rax_14 = -0x20000000000000;\n                                        break;\n                                    }\n                                    case 8:\n                                    case 0x28:\n                                    {\n                                        rcx = 0x400;\n                                        rdi_4 = -0x20000000000000;\n                                        break;\n                                    }\n                                    case 0x1d:\n                                    {\n                                        /* nop */\n                                        break;\n                                    }\n                                }\n                                switch (rdx_2)\n                                {\n                                    case 0xb:\n                                    {\n                                        rsi_4 = 1;\n                                        rcx_1 = 0x400;\n                                        r9_1 = -0x20000000000000;\n                                        goto label_40a108;\n                                    }\n                                    case 0xf:\n                                    case 0x2f:\n                                    {\n                                        rsi_4 = 1;\n                                        rcx_2 = 0x400;\n                                        r9_2 = -0x20000000000000;\n                                        goto label_40a170;\n                                    }\n                                    case 0x14:\n                                    {\n                                        rsi_4 = 1;\n                                        rcx_5 = 0x400;\n                                        r9_5 = -0x20000000000000;\n                                        goto label_40a2a8;\n                                    }\n                                    case 0x15:\n                                    {\n                                        rsi_4 = 1;\n                                        rcx_6 = 0x400;\n                                        r9_6 = -0x20000000000000;\n                                        goto label_40a310;\n                                    }\n                                }\n                                if ((rdx_2 == 2 || rdx_2 == 0x22))\n                                {\n                                    rsi_4 = 1;\n                                    rcx_4 = 0x400;\n                                    r9_4 = -0x20000000000000;\n                                    goto label_40a240;\n                                }\n                                if (rdx_2 == 0)\n                                {\n                                    rsi_4 = 1;\n                                    rcx_3 = 0x400;\n                                    r9_3 = -0x20000000000000;\n                                    goto label_40a1d8;\n                                }\n                                if (rdx_2 == 0x1e)\n                                {\n                                    rsi_4 = 1;\n                                    goto label_409fc8;\n                                }\n                            }\n                        }\n                        if (rax_8 == 0x42)\n                        {\n                            goto label_40a4f8;\n                        }\n                        if (rax_8 == 0x69)\n                        {\n                            rax_6 = 0x400;\n                            int32_t rsi_6;\n                            rsi_6 = r15[2] == 0x42;\n                            rsi_2 = ((rsi_6 + rsi_6) + 1);\n                            goto label_409ef0;\n                        }\n                        if (rax_8 == 0x44)\n                        {\n                        label_40a4f8:\n                            rsi_2 = 2;\n                            rax_6 = 0x3e8;\n                            goto label_409ef0;\n                        }\n                    }\n                    else\n                    {\n                    label_409ee6:\n                        rsi_2 = 1;\n                        rax_6 = 0x400;\n                    label_409ef0:\n                        r13_2 = (r13_1 - 0x42);\n                        if ((r13_2 == 9 || r13_2 == 0x29))\n                        {\n                            rcx = rax_6;\n                            rsi_4 = rsi_2;\n                            int64_t rax_13;\n                            int64_t rdx_3;\n                            rdx_3 = HIGHD(-0x8000000000000000);\n                            rax_13 = LOWD(-0x8000000000000000);\n                            rax_14 = (COMBINE(rdx_3, rax_13) / rcx);\n                        }\n                    }\n                    int64_t rax_16;\n                    if (((rdx_1 > 0x2f && (r13_2 == 9 || r13_2 == 0x29)) || ((((((rdx_1 <= 0x2f && (TEST_BITQ(0x814400308945, rdx_1))) && rax_7 != 0) && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && (rdx_2 == 6 || rdx_2 == 0x26))))\n                    {\n                        if (rbp_1 < rax_14)\n                        {\n                            goto label_40a098;\n                        }\n                        int64_t rax_15;\n                        int64_t rdx_5;\n                        rdx_5 = HIGHD(0x7fffffffffffffff);\n                        rax_15 = LOWD(0x7fffffffffffffff);\n                        rax_16 = (COMBINE(rdx_5, rax_15) / rcx);\n                    }\n                    if ((rdx_1 > 0x2f && (r13_2 == 0xb || r13_2 == 0x2b)))\n                    {\n                        rcx = rax_6;\n                        rsi_4 = rsi_2;\n                        int64_t rax_17;\n                        int64_t rdx_7;\n                        rdx_7 = HIGHD(-0x8000000000000000);\n                        rax_17 = LOWD(-0x8000000000000000);\n                        rdi_4 = (COMBINE(rdx_7, rax_17) / rcx);\n                    }\n                    if (((rdx_1 > 0x2f && (r13_2 == 0xb || r13_2 == 0x2b)) || ((((((rdx_1 <= 0x2f && (TEST_BITQ(0x814400308945, rdx_1))) && rax_7 != 0) && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && (rdx_2 == 8 || rdx_2 == 0x28))))\n                    {\n                        if (rbp_1 < rdi_4)\n                        {\n                            goto label_40a098;\n                        }\n                        int64_t rax_19;\n                        int64_t rdx_9;\n                        rdx_9 = HIGHD(0x7fffffffffffffff);\n                        rax_19 = LOWD(0x7fffffffffffffff);\n                        rax_16 = (COMBINE(rdx_9, rax_19) / rcx);\n                        if (rbp_1 > rax_16)\n                        {\n                            goto label_40a450;\n                        }\n                        rbp_1 = (rbp_1 * rcx);\n                        if (rbp_1 < rdi_4)\n                        {\n                            goto label_40a098;\n                        }\n                    }\n                    if (((((rdx_1 > 0x2f && (r13_2 == 9 || r13_2 == 0x29)) || ((((((rdx_1 <= 0x2f && (TEST_BITQ(0x814400308945, rdx_1))) && rax_7 != 0) && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && (rdx_2 == 6 || rdx_2 == 0x26))) && rbp_1 >= rax_14) || (((rdx_1 > 0x2f && (r13_2 == 0xb || r13_2 == 0x2b)) || ((((((rdx_1 <= 0x2f && (TEST_BITQ(0x814400308945, rdx_1))) && rax_7 != 0) && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && (rdx_2 == 8 || rdx_2 == 0x28))) && rbp_1 >= rdi_4)))\n                    {\n                        if (rax_16 < rbp_1)\n                        {\n                            goto label_40a450;\n                        }\n                        rbp_1 = (rbp_1 * rcx);\n                        goto label_409fc8;\n                    }\n                    if ((rdx_1 > 0x2f && r13_2 == 0x20))\n                    {\n                        rsi_4 = rsi_2;\n                    }\n                    if (((rdx_1 > 0x2f && r13_2 == 0x20) || ((((((rdx_1 <= 0x2f && (TEST_BITQ(0x814400308945, rdx_1))) && rax_7 != 0) && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && rdx_2 == 0x1d)))\n                    {\n                        if (rbp_1 < -0x40000000000000)\n                        {\n                            goto label_40a098;\n                        }\n                        if (rbp_1 > 0x3fffffffffffff)\n                        {\n                            goto label_40a450;\n                        }\n                        rbp_1 = (rbp_1 << 9);\n                        goto label_409fc8;\n                    }\n                    if (rdx_1 > 0x2f)\n                    {\n                        switch (r13_2)\n                        {\n                            case 0:\n                            {\n                                rsi_4 = rsi_2;\n                                if (rbp_1 < -0x20000000000000)\n                                {\n                                label_40a098:\n                                    rbp_1 = -0x8000000000000000;\n                                    r12_1 = 1;\n                                    goto label_409fc8;\n                                }\n                                if (rbp_1 <= 0x1fffffffffffff)\n                                {\n                                    rbp_1 = (rbp_1 << 0xa);\n                                    goto label_409fc8;\n                                }\n                            label_40a450:\n                                rbp_1 = 0x7fffffffffffffff;\n                                r12_1 = 1;\n                                goto label_409fc8;\n                            }\n                            case 1:\n                            case 2:\n                            case 4:\n                            case 6:\n                            case 7:\n                            case 8:\n                            case 0xa:\n                            case 0xc:\n                            case 0xd:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x22:\n                            case 0x23:\n                            case 0x24:\n                            case 0x26:\n                            case 0x27:\n                            case 0x28:\n                            case 0x2a:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x33:\n                            case 0x34:\n                            {\n                                goto label_409f89;\n                            }\n                            case 0x21:\n                            {\n                                rsi_4 = rsi_2;\n                            label_409fc8:\n                                void* rsi_5 = &r15[rsi_4];\n                                int32_t rax_12 = (r12_1 | 2);\n                                *rbx = rsi_5;\n                                if (*rsi_5 != 0)\n                                {\n                                    r12_1 = rax_12;\n                                }\n                                goto label_409e79;\n                            }\n                            case 0x35:\n                            {\n                                rsi_4 = rsi_2;\n                                if (rbp_1 < -0x4000000000000000)\n                                {\n                                    goto label_40a098;\n                                }\n                                if (rbp_1 > 0x3fffffffffffffff)\n                                {\n                                    goto label_40a450;\n                                }\n                                rbp_1 = (rbp_1 + rbp_1);\n                                goto label_409fc8;\n                            }\n                        }\n                        int32_t r10_1;\n                        switch (r13_2)\n                        {\n                            case 3:\n                            {\n                                rcx_3 = rax_6;\n                                rsi_4 = rsi_2;\n                                int64_t rax_28;\n                                int64_t rdx_19;\n                                rdx_19 = HIGHD(-0x8000000000000000);\n                                rax_28 = LOWD(-0x8000000000000000);\n                                r9_3 = (COMBINE(rdx_19, rax_28) / rcx_3);\n                            label_40a1d8:\n                                int32_t rdi_7 = 6;\n                                r10_1 = 0;\n                                do\n                                {\n                                    if (rbp_1 < r9_3)\n                                    {\n                                        rbp_1 = -0x8000000000000000;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        int64_t rax_30;\n                                        int64_t rdx_21;\n                                        rdx_21 = HIGHD(0x7fffffffffffffff);\n                                        rax_30 = LOWD(0x7fffffffffffffff);\n                                        if ((COMBINE(rdx_21, rax_30) / rcx_3) < rbp_1)\n                                        {\n                                            rbp_1 = 0x7fffffffffffffff;\n                                            r10_1 = 1;\n                                        }\n                                        else\n                                        {\n                                            rbp_1 = (rbp_1 * rcx_3);\n                                        }\n                                    }\n                                    rdi_7 = (rdi_7 - 1);\n                                } while (rdi_7 != 1);\n                                goto label_40a440;\n                            }\n                            case 5:\n                            case 0x25:\n                            {\n                                rcx_4 = rax_6;\n                                rsi_4 = rsi_2;\n                                int64_t rax_32;\n                                int64_t rdx_23;\n                                rdx_23 = HIGHD(-0x8000000000000000);\n                                rax_32 = LOWD(-0x8000000000000000);\n                                r9_4 = (COMBINE(rdx_23, rax_32) / rcx_4);\n                            label_40a240:\n                                int32_t rdi_8 = 3;\n                                r10_1 = 0;\n                                do\n                                {\n                                    if (rbp_1 < r9_4)\n                                    {\n                                        rbp_1 = -0x8000000000000000;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        int64_t rax_34;\n                                        int64_t rdx_25;\n                                        rdx_25 = HIGHD(0x7fffffffffffffff);\n                                        rax_34 = LOWD(0x7fffffffffffffff);\n                                        if ((COMBINE(rdx_25, rax_34) / rcx_4) < rbp_1)\n                                        {\n                                            rbp_1 = 0x7fffffffffffffff;\n                                            r10_1 = 1;\n                                        }\n                                        else\n                                        {\n                                            rbp_1 = (rbp_1 * rcx_4);\n                                        }\n                                    }\n                                    rdi_8 = (rdi_8 - 1);\n                                } while (rdi_8 != 1);\n                                goto label_40a440;\n                            }\n                            case 0xe:\n                            {\n                                rcx_1 = rax_6;\n                                rsi_4 = rsi_2;\n                                int64_t rax_20;\n                                int64_t rdx_11;\n                                rdx_11 = HIGHD(-0x8000000000000000);\n                                rax_20 = LOWD(-0x8000000000000000);\n                                r9_1 = (COMBINE(rdx_11, rax_20) / rcx_1);\n                            label_40a108:\n                                int32_t rdi_5 = 5;\n                                r10_1 = 0;\n                                do\n                                {\n                                    if (r9_1 > rbp_1)\n                                    {\n                                        rbp_1 = -0x8000000000000000;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        int64_t rax_22;\n                                        int64_t rdx_13;\n                                        rdx_13 = HIGHD(0x7fffffffffffffff);\n                                        rax_22 = LOWD(0x7fffffffffffffff);\n                                        if ((COMBINE(rdx_13, rax_22) / rcx_1) < rbp_1)\n                                        {\n                                            rbp_1 = 0x7fffffffffffffff;\n                                            r10_1 = 1;\n                                        }\n                                        else\n                                        {\n                                            rbp_1 = (rbp_1 * rcx_1);\n                                        }\n                                    }\n                                    rdi_5 = (rdi_5 - 1);\n                                } while (rdi_5 != 1);\n                            label_40a440:\n                                r12_1 = (r12_1 | r10_1);\n                                goto label_409fc8;\n                            }\n                            case 0x12:\n                            case 0x32:\n                            {\n                                rcx_2 = rax_6;\n                                rsi_4 = rsi_2;\n                                int64_t rax_24;\n                                int64_t rdx_15;\n                                rdx_15 = HIGHD(-0x8000000000000000);\n                                rax_24 = LOWD(-0x8000000000000000);\n                                r9_2 = (COMBINE(rdx_15, rax_24) / rcx_2);\n                            label_40a170:\n                                int32_t rdi_6 = 4;\n                                r10_1 = 0;\n                                do\n                                {\n                                    if (r9_2 > rbp_1)\n                                    {\n                                        rbp_1 = -0x8000000000000000;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        int64_t rax_26;\n                                        int64_t rdx_17;\n                                        rdx_17 = HIGHD(0x7fffffffffffffff);\n                                        rax_26 = LOWD(0x7fffffffffffffff);\n                                        if ((COMBINE(rdx_17, rax_26) / rcx_2) < rbp_1)\n                                        {\n                                            rbp_1 = 0x7fffffffffffffff;\n                                            r10_1 = 1;\n                                        }\n                                        else\n                                        {\n                                            rbp_1 = (rbp_1 * rcx_2);\n                                        }\n                                    }\n                                    rdi_6 = (rdi_6 - 1);\n                                } while (rdi_6 != 1);\n                                goto label_40a440;\n                            }\n                        }\n                        if (r13_2 == 0x17)\n                        {\n                            rcx_5 = rax_6;\n                            rsi_4 = rsi_2;\n                            int64_t rax_36;\n                            int64_t rdx_27;\n                            rdx_27 = HIGHD(-0x8000000000000000);\n                            rax_36 = LOWD(-0x8000000000000000);\n                            r9_5 = (COMBINE(rdx_27, rax_36) / rcx_5);\n                        label_40a2a8:\n                            int32_t rdi_9 = 8;\n                            r10_1 = 0;\n                            do\n                            {\n                                if (r9_5 > rbp_1)\n                                {\n                                    rbp_1 = -0x8000000000000000;\n                                    r10_1 = 1;\n                                }\n                                else\n                                {\n                                    int64_t rax_38;\n                                    int64_t rdx_29;\n                                    rdx_29 = HIGHD(0x7fffffffffffffff);\n                                    rax_38 = LOWD(0x7fffffffffffffff);\n                                    if ((COMBINE(rdx_29, rax_38) / rcx_5) < rbp_1)\n                                    {\n                                        rbp_1 = 0x7fffffffffffffff;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        rbp_1 = (rbp_1 * rcx_5);\n                                    }\n                                }\n                                rdi_9 = (rdi_9 - 1);\n                            } while (rdi_9 != 1);\n                            goto label_40a440;\n                        }\n                        if (r13_2 == 0x18)\n                        {\n                            rcx_6 = rax_6;\n                            rsi_4 = rsi_2;\n                            int64_t rax_40;\n                            int64_t rdx_31;\n                            rdx_31 = HIGHD(-0x8000000000000000);\n                            rax_40 = LOWD(-0x8000000000000000);\n                            r9_6 = (COMBINE(rdx_31, rax_40) / rcx_6);\n                        label_40a310:\n                            int32_t rdi_10 = 7;\n                            r10_1 = 0;\n                            do\n                            {\n                                if (r9_6 > rbp_1)\n                                {\n                                    rbp_1 = -0x8000000000000000;\n                                    r10_1 = 1;\n                                }\n                                else\n                                {\n                                    int64_t rax_42;\n                                    int64_t rdx_33;\n                                    rdx_33 = HIGHD(0x7fffffffffffffff);\n                                    rax_42 = LOWD(0x7fffffffffffffff);\n                                    if ((COMBINE(rdx_33, rax_42) / rcx_6) < rbp_1)\n                                    {\n                                        rbp_1 = 0x7fffffffffffffff;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        rbp_1 = (rbp_1 * rcx_6);\n                                    }\n                                }\n                                rdi_10 = (rdi_10 - 1);\n                            } while (rdi_10 != 1);\n                            goto label_40a440;\n                        }\n                        if (r13_2 > 0x35)\n                        {\n                            goto label_409f89;\n                        }\n                    }\n                }\n            }\n        }\n        if ((arg5 == 0 || (arg5 != 0 && r13_1 != 0)))\n        {\n            r12_1 = 4;\n        }\n    }\n    return r12_1;\n}\n\n"
        },
        {
            "funcName": "sub_40a550",
            "funcStartAddr": "0x401d2e",
            "funcEndAddr": "0x40a5d1",
            "decompiledFuncCode": "int64_t sub_40a550(int32_t arg1, int32_t arg2, char arg3, int64_t* arg4, \n    int64_t arg5) __noreturn\n{\n    uint64_t rdi = (arg1 - 1);\n    int32_t rbx = data_6142c0;\n    if (rdi > 3)\n    {\n        abort();\n        /* no return */\n    }\n    char* rsi = *((rdi << 3) + 0x410be0);\n    int64_t rax = arg2;\n    void* const r12;\n    char* r13;\n    if (arg2 < 0)\n    {\n        char var_2a = arg3;\n        r13 = &var_2a;\n        r12 = (&data_410b70 - rax);\n        char var_29_1 = 0;\n    }\n    else\n    {\n        r12 = &data_410b70;\n        r13 = arg4[(rax * 4)];\n    }\n    error(rbx, 0, dcgettext(nullptr, rsi, 5), r12, r13, arg5);\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40a5e0",
            "funcStartAddr": "0x40a5e0",
            "funcEndAddr": "0x40aa14",
            "decompiledFuncCode": "uint64_t sub_40a5e0(char* arg1, int64_t* arg2, int32_t arg3, uint64_t* arg4, \n    char* arg5)\n{\n    if (arg3 > 0x24)\n    {\n        __assert_fail(\"0 <= strtol_base && strtol_base \u2026\", \"lib/xstrtol.c\", 0x60, \"xstrtoumax\");\n        /* no return */\n    }\n    int64_t* r15 = arg2;\n    void var_40;\n    if (arg2 == 0)\n    {\n        r15 = &var_40;\n    }\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char rbx = *arg1;\n    uint16_t* rsi = *__ctype_b_loc();\n    char* rax_2 = arg1;\n    while ((*(&rsi[rbx] + 1) & 0x20) != 0)\n    {\n        rax_2 = &rax_2[1];\n        rbx = *rax_2;\n    }\n    int32_t rbp_1;\n    if (rbx == 0x2d)\n    {\n    label_40a6aa:\n        rbp_1 = 4;\n    }\n    else\n    {\n        char* r8 = *r15;\n        uint64_t rbx_1 = __strtoul_internal(arg1, r15, arg3, 0);\n        int32_t var_58;\n        void* r8_1;\n        uint32_t r12_1;\n        if (r8 == arg1)\n        {\n            var_58 = r8;\n            if (arg5 == 0)\n            {\n                goto label_40a6aa;\n            }\n            r12_1 = *arg1;\n            if (r12_1 == 0)\n            {\n                goto label_40a6aa;\n            }\n            rbp_1 = 0;\n            rbx_1 = 1;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) == 0)\n            {\n                goto label_40a6aa;\n            }\n        label_40a6e7:\n            uint64_t rdx_1 = (r12_1 - 0x45);\n            int64_t rdx_3;\n            int32_t rsi_3;\n            if (rdx_1 <= 0x2f)\n            {\n                var_58 = rdx_1;\n                if ((!(TEST_BITQ(0x814400308945, rdx_1))))\n                {\n                    goto label_40a750;\n                }\n                if (strchr(arg5, 0x30) == 0)\n                {\n                    goto label_40a750;\n                }\n                char rax_8 = *(r8_1 + 1);\n                if (rax_8 == 0x44)\n                {\n                label_40a978:\n                    rsi_3 = 2;\n                    rdx_3 = 0x3e8;\n                    goto label_40a75a;\n                }\n                if (rax_8 == 0x69)\n                {\n                    rdx_3 = 0x400;\n                    int32_t rsi_6;\n                    rsi_6 = *(r8_1 + 2) == 0x42;\n                    rsi_3 = ((rsi_6 + rsi_6) + 1);\n                    goto label_40a75a;\n                }\n                uint64_t rdx_2 = var_58;\n                if (rax_8 == 0x42)\n                {\n                    goto label_40a978;\n                }\n                int32_t r9_1;\n                switch (rdx_2)\n                {\n                    case 0:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40a8fb:\n                        int64_t rcx_6 = rdx_3;\n                        int32_t rdi_8 = 6;\n                        r9_1 = 0;\n                        int32_t temp15_1;\n                        do\n                        {\n                            uint64_t rax_28;\n                            int64_t rdx_11;\n                            rdx_11 = HIGHD((rbx_1 * rcx_6));\n                            rax_28 = LOWD((rbx_1 * rcx_6));\n                            bool o_8 = ((rbx_1 * rcx_6) >> 0x40) != 0;\n                            rbx_1 = rax_28;\n                            if (o_8)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp15_1 = rdi_8;\n                            rdi_8 = (rdi_8 - 1);\n                        } while (temp15_1 != 1);\n                        goto label_40a854;\n                    }\n                    case 1:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 7:\n                    case 9:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                    case 0x23:\n                    case 0x24:\n                    case 0x25:\n                    case 0x27:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    {\n                        goto label_40a7f5;\n                    }\n                    case 2:\n                    case 0x22:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40a933:\n                        int64_t rcx_7 = rdx_3;\n                        int64_t rax_30;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rbx_1 * rcx_7));\n                        rax_30 = LOWD((rbx_1 * rcx_7));\n                        int64_t rax_31;\n                        if (((rbx_1 * rcx_7) >> 0x40) == 0)\n                        {\n                            int64_t rdx_13;\n                            rdx_13 = HIGHD((rax_30 * rcx_7));\n                            rax_31 = LOWD((rax_30 * rcx_7));\n                            if (((rax_30 * rcx_7) >> 0x40) == 0)\n                            {\n                                uint64_t rax_32;\n                                int64_t rdx_14;\n                                rdx_14 = HIGHD((rax_31 * rcx_7));\n                                rax_32 = LOWD((rax_31 * rcx_7));\n                                if (((rax_31 * rcx_7) >> 0x40) == 0)\n                                {\n                                    rbx_1 = rax_32;\n                                    rbp_1 = (rbp_1 | 0);\n                                }\n                            }\n                        }\n                        if (((((rbx_1 * rcx_7) >> 0x40) != 0 || (((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) != 0)) || ((((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) == 0) && ((rax_31 * rcx_7) >> 0x40) != 0)))\n                        {\n                            rbx_1 = -1;\n                            rbp_1 = (rbp_1 | 1);\n                        }\n                        goto label_40a79d;\n                    }\n                    case 6:\n                    case 0x26:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40a7bf:\n                        uint64_t rax_15;\n                        int64_t rdx_6;\n                        rdx_6 = HIGHD((rbx_1 * rdx_3));\n                        rax_15 = LOWD((rbx_1 * rdx_3));\n                        bool o_3 = ((rbx_1 * rdx_3) >> 0x40) != 0;\n                        rbx_1 = rax_15;\n                        if ((!o_3))\n                        {\n                            goto label_40a79d;\n                        }\n                        goto label_40a7c7;\n                    }\n                    case 8:\n                    case 0x28:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40a77e:\n                        int64_t rcx_1 = rdx_3;\n                        int64_t rax_10;\n                        int64_t rdx_4;\n                        rdx_4 = HIGHD((rbx_1 * rcx_1));\n                        rax_10 = LOWD((rbx_1 * rcx_1));\n                        if (((rbx_1 * rcx_1) >> 0x40) == 0)\n                        {\n                            uint64_t rax_11;\n                            int64_t rdx_5;\n                            rdx_5 = HIGHD((rax_10 * rcx_1));\n                            rax_11 = LOWD((rax_10 * rcx_1));\n                            if (((rax_10 * rcx_1) >> 0x40) != 0)\n                            {\n                                goto label_40a7c7;\n                            }\n                            rbx_1 = rax_11;\n                            goto label_40a79d;\n                        }\n                    label_40a7c7:\n                        rbp_1 = 1;\n                        rbx_1 = -1;\n                        goto label_40a79d;\n                    }\n                    case 0xb:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40a8c8:\n                        int64_t rcx_5 = rdx_3;\n                        int32_t rdi_7 = 5;\n                        r9_1 = 0;\n                        int32_t temp14_1;\n                        do\n                        {\n                            uint64_t rax_26;\n                            int64_t rdx_10;\n                            rdx_10 = HIGHD((rbx_1 * rcx_5));\n                            rax_26 = LOWD((rbx_1 * rcx_5));\n                            bool o_7 = ((rbx_1 * rcx_5) >> 0x40) != 0;\n                            rbx_1 = rax_26;\n                            if (o_7)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp14_1 = rdi_7;\n                            rdi_7 = (rdi_7 - 1);\n                        } while (temp14_1 != 1);\n                        goto label_40a854;\n                    }\n                    case 0xf:\n                    case 0x2f:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40a898:\n                        int64_t rcx_4 = rdx_3;\n                        int32_t rdi_6 = 4;\n                        r9_1 = 0;\n                        int32_t temp13_1;\n                        do\n                        {\n                            uint64_t rax_24;\n                            int64_t rdx_9;\n                            rdx_9 = HIGHD((rbx_1 * rcx_4));\n                            rax_24 = LOWD((rbx_1 * rcx_4));\n                            bool o_6 = ((rbx_1 * rcx_4) >> 0x40) != 0;\n                            rbx_1 = rax_24;\n                            if (o_6)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp13_1 = rdi_6;\n                            rdi_6 = (rdi_6 - 1);\n                        } while (temp13_1 != 1);\n                        goto label_40a854;\n                    }\n                    case 0x14:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40a866:\n                        int64_t rcx_3 = rdx_3;\n                        int32_t rdi_5 = 8;\n                        r9_1 = 0;\n                        int32_t temp12_1;\n                        do\n                        {\n                            uint64_t rax_22;\n                            int64_t rdx_8;\n                            rdx_8 = HIGHD((rbx_1 * rcx_3));\n                            rax_22 = LOWD((rbx_1 * rcx_3));\n                            bool o_5 = ((rbx_1 * rcx_3) >> 0x40) != 0;\n                            rbx_1 = rax_22;\n                            if (o_5)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp12_1 = rdi_5;\n                            rdi_5 = (rdi_5 - 1);\n                        } while (temp12_1 != 1);\n                        goto label_40a854;\n                    }\n                    case 0x15:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40a82b:\n                        int64_t rcx_2 = rdx_3;\n                        int32_t rdi_4 = 7;\n                        r9_1 = 0;\n                        int32_t temp11_1;\n                        do\n                        {\n                            uint64_t rax_20;\n                            int64_t rdx_7;\n                            rdx_7 = HIGHD((rbx_1 * rcx_2));\n                            rax_20 = LOWD((rbx_1 * rcx_2));\n                            bool o_4 = ((rbx_1 * rcx_2) >> 0x40) != 0;\n                            rbx_1 = rax_20;\n                            if (o_4)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp11_1 = rdi_4;\n                            rdi_4 = (rdi_4 - 1);\n                        } while (temp11_1 != 1);\n                    label_40a854:\n                        rbp_1 = (rbp_1 | r9_1);\n                        goto label_40a79d;\n                    }\n                    case 0x1d:\n                    {\n                        rsi_3 = 1;\n                        break;\n                    }\n                    case 0x1e:\n                    {\n                        rsi_3 = 1;\n                        goto label_40a79d;\n                    }\n                }\n            }\n            else\n            {\n            label_40a750:\n                rsi_3 = 1;\n                rdx_3 = 0x400;\n            label_40a75a:\n                char r12_2 = (r12_1 - 0x42);\n                if (r12_2 > 0x35)\n                {\n                    goto label_40a7f5;\n                }\n                switch (r12_2)\n                {\n                    case 0:\n                    {\n                        if ((rbx_1 >> 0x36) != 0)\n                        {\n                            goto label_40a7c7;\n                        }\n                        rbx_1 = (rbx_1 << 0xa);\n                        goto label_40a79d;\n                    }\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x2a:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x33:\n                    case 0x34:\n                    {\n                        goto label_40a7f5;\n                    }\n                    case 3:\n                    {\n                        goto label_40a8fb;\n                    }\n                    case 5:\n                    case 0x25:\n                    {\n                        goto label_40a933;\n                    }\n                    case 9:\n                    case 0x29:\n                    {\n                        goto label_40a7bf;\n                    }\n                    case 0xb:\n                    case 0x2b:\n                    {\n                        goto label_40a77e;\n                    }\n                    case 0xe:\n                    {\n                        goto label_40a8c8;\n                    }\n                    case 0x12:\n                    case 0x32:\n                    {\n                        goto label_40a898;\n                    }\n                    case 0x17:\n                    {\n                        goto label_40a866;\n                    }\n                    case 0x18:\n                    {\n                        goto label_40a82b;\n                    }\n                    case 0x21:\n                    {\n                        goto label_40a79d;\n                    }\n                    case 0x35:\n                    {\n                        if (rbx_1 < 0)\n                        {\n                            goto label_40a7c7;\n                        }\n                        rbx_1 = (rbx_1 + rbx_1);\n                    label_40a79d:\n                        void* r8_2 = (r8_1 + rsi_3);\n                        int32_t rax_13 = (rbp_1 | 2);\n                        *r15 = r8_2;\n                        if (*r8_2 != 0)\n                        {\n                            rbp_1 = rax_13;\n                        }\n                        goto label_40a682;\n                    }\n                }\n            }\n            if ((rbx_1 >> 0x37) != 0)\n            {\n                goto label_40a7c7;\n            }\n            rbx_1 = (rbx_1 << 9);\n            goto label_40a79d;\n        }\n        int32_t rax_4 = *rax;\n        if (rax_4 == 0)\n        {\n            rbp_1 = 0;\n        }\n        else\n        {\n            rbp_1 = 1;\n            if (rax_4 != 0x22)\n            {\n                goto label_40a6aa;\n            }\n        }\n        if (arg5 == 0)\n        {\n        label_40a682:\n            *arg4 = rbx_1;\n        }\n        else\n        {\n            r12_1 = *r8;\n            if (r12_1 == 0)\n            {\n                goto label_40a682;\n            }\n            var_58 = r8;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) != 0)\n            {\n                goto label_40a6e7;\n            }\n        label_40a7f5:\n            *arg4 = rbx_1;\n            rbp_1 = (rbp_1 | 2);\n        }\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_40aa20",
            "funcStartAddr": "0x40aa20",
            "funcEndAddr": "0x40aa9b",
            "decompiledFuncCode": "int64_t sub_40aa20(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_40abe0(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_40aaa0",
            "funcStartAddr": "0x40aaa0",
            "funcEndAddr": "0x40abd5",
            "decompiledFuncCode": "uint64_t sub_40aaa0(int32_t arg1, int32_t arg2, int32_t arg3)\n{\n    void* var_58 = &arg_8;\n    int64_t rcx;\n    int64_t var_30 = rcx;\n    int32_t var_60 = 0x10;\n    void var_48;\n    void* var_50 = &var_48;\n    if (arg2 != 0x406)\n    {\n        return fcntl();\n    }\n    int32_t var_60_1 = 0x18;\n    int32_t rax_2;\n    int32_t rax_5;\n    int32_t* rax_15;\n    int32_t rax_17;\n    int32_t rbx;\n    if (data_6145d8 < 0)\n    {\n        rax_5 = sub_40aaa0();\n        rbx = rax_5;\n    }\n    else\n    {\n        rax_2 = fcntl();\n        rbx = rax_2;\n        if (rax_2 < 0)\n        {\n            rax_15 = __errno_location();\n            if (*rax_15 == 0x16)\n            {\n                rax_17 = sub_40aaa0(arg1, 0, arg3);\n                rbx = rax_17;\n                if (rax_17 >= 0)\n                {\n                    data_6145d8 = 0xffffffff;\n                }\n            }\n        }\n    }\n    if (((((data_6145d8 >= 0 && rax_2 < 0) && *rax_15 == 0x16) && rax_17 >= 0) || (rax_5 >= 0 && data_6145d8 == 0xffffffff)))\n    {\n        int32_t rax_7 = fcntl(rbx, 1);\n        int32_t rax_10;\n        if (rax_7 >= 0)\n        {\n            rax_10 = fcntl(rbx, 2, (rax_7 | 1));\n        }\n        if ((rax_7 < 0 || (rax_7 >= 0 && rax_10 == 0xffffffff)))\n        {\n            int32_t* rax_11 = __errno_location();\n            int32_t rdi_2 = rbx;\n            rbx = -1;\n            int32_t r12_1 = *rax_11;\n            close(rdi_2);\n            *rax_11 = r12_1;\n        }\n    }\n    if ((data_6145d8 >= 0 && (rax_2 >= 0 || (rax_2 < 0 && *rax_15 != 0x16))))\n    {\n        data_6145d8 = 1;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40abe0",
            "funcStartAddr": "0x40abe0",
            "funcEndAddr": "0x40ac20",
            "decompiledFuncCode": "int64_t sub_40abe0(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_40ac20(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_40ac20",
            "funcStartAddr": "0x40ac20",
            "funcEndAddr": "0x40ac77",
            "decompiledFuncCode": "off64_t sub_40ac20(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_40ac80",
            "funcStartAddr": "0x40ac80",
            "funcEndAddr": "0x40ad5f",
            "decompiledFuncCode": "uint64_t sub_40ac80(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_40ad60",
            "funcStartAddr": "0x40ad60",
            "funcEndAddr": "0x40b37c",
            "decompiledFuncCode": "uint64_t sub_40ad60(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_40af90;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_40aeb6;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_40aeb6;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_40aeb6:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_40af90:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_40afbe;\n                }\n                *arg5 = r12;\n            label_40afbe:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_40afdc;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_40afdc:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_40afdc;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_40af4e;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_40af4e:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_40b380",
            "funcStartAddr": "0x40b380",
            "funcEndAddr": "0x40b946",
            "decompiledFuncCode": "uint64_t sub_40b380(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_40b5bc;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_40b448;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_40b448:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_40ac80(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_410b70;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_40ac80(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_40b5bc;\n                }\n                *arg7 = rdx_2;\n            label_40b5bc:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_40b6c0;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_410b70;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_40b730;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_40b6c0;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_40b6c0;\n                            }\n                            goto label_40b681;\n                        }\n                    label_40b681:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_40ad60(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_410b71);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_40b6c0:\n                            rdx = &r14_1[1];\n                        label_40b501:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_40b6fe;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_40b6fe:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_411055;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_40b730:\n                                        r14_2 = sub_40ad60(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_40b7ed;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_40b7ed:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_40b5bc;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_40b448;\n        }\n        goto label_40b501;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40b9b0",
            "funcStartAddr": "0x40b9b0",
            "funcEndAddr": "0x40b9c8",
            "decompiledFuncCode": "uint64_t sub_40b9b0(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_40ba50",
            "funcStartAddr": "0x40ba50",
            "funcEndAddr": "0x40baca",
            "decompiledFuncCode": "uint64_t sub_40ba50(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_40ce63;\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_40ba7a;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_40ba7a:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_405590() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_40bad0",
            "funcStartAddr": "0x40bad0",
            "funcEndAddr": "0x40bb15",
            "decompiledFuncCode": "uint64_t sub_40bad0(void* arg1)\n{\n    int32_t rax;\n    if (*(arg1 + 8) != 0)\n    {\n        rax = setenv(&data_40cf65, (arg1 + 9), 1);\n    }\n    else\n    {\n        rax = unsetenv(&data_40cf65);\n    }\n    int32_t rdx = 0;\n    if (rax == 0)\n    {\n        tzset();\n        rdx = 1;\n    }\n    return rdx;\n}\n\n"
        },
        {
            "funcName": "sub_40bb20",
            "funcStartAddr": "0x40bb20",
            "funcEndAddr": "0x40bb49",
            "decompiledFuncCode": "void sub_40bb20(int64_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        return;\n    }\n    int64_t* rbx_1;\n    do\n    {\n        rbx_1 = *arg1;\n        free(arg1);\n        arg1 = rbx_1;\n    } while (rbx_1 != 0);\n}\n\n"
        },
        {
            "funcName": "sub_40bb50",
            "funcStartAddr": "0x40bb50",
            "funcEndAddr": "0x40bb91",
            "decompiledFuncCode": "uint64_t sub_40bb50(int64_t* arg1)\n{\n    int32_t* rax = __errno_location();\n    int32_t r13 = *rax;\n    int32_t rax_1 = sub_40bad0(arg1);\n    if (rax_1 == 0)\n    {\n        r13 = *rax;\n    }\n    sub_40bb20(arg1);\n    *rax = r13;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40bba0",
            "funcStartAddr": "0x40bba0",
            "funcEndAddr": "0x40bc2f",
            "decompiledFuncCode": "int64_t* sub_40bba0(char* arg1)\n{\n    int64_t* rbx;\n    if (arg1 == 0)\n    {\n        int64_t* rax_3 = malloc(0x80);\n        rbx = rax_3;\n        if (rax_3 != 0)\n        {\n            *rbx = 0;\n            rbx[1] = 0;\n            return rbx;\n        }\n    }\n    else\n    {\n        uint64_t rdi = 0x76;\n        uint64_t rbp_1 = (strlen(arg1) + 1);\n        if (rbp_1 >= 0x76)\n        {\n            rdi = rbp_1;\n        }\n        int64_t* rax_1 = malloc(((rdi + 0x11) & 0xfffffffffffffff8));\n        rbx = rax_1;\n        if (rax_1 != 0)\n        {\n            *rax_1 = 0;\n            rbx[1] = 1;\n            memcpy((rbx + 9), arg1, rbp_1);\n            *((rbx + rbp_1) + 9) = 0;\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40bc30",
            "funcStartAddr": "0x40bc30",
            "funcEndAddr": "0x40bda5",
            "decompiledFuncCode": "int64_t sub_40bc30(int64_t** arg1, void* arg2)\n{\n    char* r12 = *(arg2 + 0x30);\n    if (r12 == 0)\n    {\n        return 1;\n    }\n    int64_t** rbp = arg1;\n    int64_t rax_1;\n    if (arg2 <= r12)\n    {\n        rax_1 = 1;\n    }\n    if ((arg2 > r12 || (arg2 <= r12 && r12 >= (arg2 + 0x38))))\n    {\n        void* rbx_1 = (rbp + 9);\n        if (*r12 == 0)\n        {\n            rbx_1 = &data_40ce63;\n        }\n        else\n        {\n        label_40bc7e:\n            if (strcmp(rbx_1, r12) != 0)\n            {\n                int32_t rax_5;\n                do\n                {\n                    if (*rbx_1 == 0)\n                    {\n                        void* r14_1 = (rbp + 9);\n                        void* rax_9;\n                        uint64_t r15_1;\n                        if ((r14_1 == rbx_1 && rbp[1] == 0))\n                        {\n                            r15_1 = (strlen(r12) + 1);\n                            rax_9 = nullptr;\n                        }\n                        if (r14_1 != rbx_1)\n                        {\n                            r15_1 = (strlen(r12) + 1);\n                            rax_9 = (rbx_1 - r14_1);\n                            if ((!rax_9) < r15_1)\n                            {\n                                *__errno_location() = 0xc;\n                                return 0;\n                            }\n                        }\n                        if (((r14_1 == rbx_1 && rbp[1] == 0) || r14_1 != rbx_1))\n                        {\n                            if ((rax_9 + r15_1) <= 0x76)\n                            {\n                                memcpy(rbx_1, r12, r15_1);\n                                *(rbx_1 + r15_1) = 0;\n                                break;\n                            }\n                            int64_t* rax_13 = sub_40bba0(r12);\n                            *rbp = rax_13;\n                            if (rax_13 != 0)\n                            {\n                                rax_13[1] = 0;\n                                rbx_1 = (rax_13 + 9);\n                                break;\n                            }\n                            return 0;\n                        }\n                    }\n                    rbx_1 = ((rbx_1 + strlen(rbx_1)) + 1);\n                    if (*rbx_1 != 0)\n                    {\n                        goto label_40bc7e;\n                    }\n                    int64_t* rax_4 = *rbp;\n                    if (rax_4 == 0)\n                    {\n                        goto label_40bc7e;\n                    }\n                    rbx_1 = (rax_4 + 9);\n                    rbp = rax_4;\n                    rax_5 = strcmp(rbx_1, r12);\n                } while (rax_5 != 0);\n            }\n        }\n        *(arg2 + 0x30) = rbx_1;\n        rax_1 = 1;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40bdb0",
            "funcStartAddr": "0x40bdb0",
            "funcEndAddr": "0x40be5f",
            "decompiledFuncCode": "int64_t* sub_40bdb0(void* arg1)\n{\n    char* rax = getenv(&data_40cf65);\n    if (rax == 0)\n    {\n        if (*(arg1 + 8) == 0)\n        {\n            return 1;\n        }\n    }\n    else if ((*(arg1 + 8) != 0 && strcmp((arg1 + 9), rax) == 0))\n    {\n        return 1;\n    }\n    int64_t* rax_1 = sub_40bba0(rax);\n    if ((rax_1 != 0 && sub_40bad0(arg1) == 0))\n    {\n        int32_t* rax_7 = __errno_location();\n        int32_t r12_1 = *rax_7;\n        if (rax_1 != 1)\n        {\n            sub_40bb20(rax_1);\n        }\n        *rax_7 = r12_1;\n        return 0;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40be60",
            "funcStartAddr": "0x40be60",
            "funcEndAddr": "0x40be71",
            "decompiledFuncCode": "void sub_40be60(int64_t* arg1)\n{\n    if (arg1 == 1)\n    {\n        return;\n    }\n    /* tailcall */\n    return sub_40bb20(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_40be80",
            "funcStartAddr": "0x40be80",
            "funcEndAddr": "0x40bf25",
            "decompiledFuncCode": "struct tm* sub_40be80(int64_t** arg1, time_t* arg2, struct tm* arg3)\n{\n    if (arg1 == 0)\n    {\n        /* tailcall */\n        return gmtime_r(arg2, arg3);\n    }\n    int64_t* rax = sub_40bdb0(arg1);\n    if (rax != 0)\n    {\n        struct tm* rax_1 = localtime_r(arg2, arg3);\n        char rax_2;\n        if (rax_1 != 0)\n        {\n            rax_2 = sub_40bc30(arg1, arg3);\n            if (rax_2 != 0)\n            {\n                char rax_5;\n                if (rax != 1)\n                {\n                    rax_5 = sub_40bb50(rax);\n                }\n                if ((rax == 1 || (rax != 1 && rax_5 != 0)))\n                {\n                    return arg3;\n                }\n            }\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_2 == 0)) && rax != 1))\n        {\n            sub_40bb50(rax);\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40bf30",
            "funcStartAddr": "0x40bf30",
            "funcEndAddr": "0x40c04c",
            "decompiledFuncCode": "time_t sub_40bf30(int64_t** arg1, int32_t* arg2)\n{\n    if (arg1 == 0)\n    {\n        return timegm(arg2);\n    }\n    int64_t* rax = sub_40bdb0(arg1);\n    time_t var_60;\n    char rax_3;\n    if (rax != 0)\n    {\n        time_t rax_1 = sub_40cd00(arg2);\n        var_60 = rax_1;\n        int32_t var_58;\n        if (rax_1 == -1)\n        {\n            if (localtime_r(&var_60, &var_58) != 0)\n            {\n                int32_t rax_6 = arg2[8];\n                int32_t var_38;\n                if (((rax_6 == 0 == var_38 == 0 || (rax_6 == 0 != var_38 == 0 && rax_6 < 0)) || ((rax_6 == 0 != var_38 == 0 && rax_6 >= 0) && var_38 < 0)))\n                {\n                    int32_t var_54;\n                    int32_t var_50;\n                    int32_t var_4c;\n                    int32_t var_48;\n                    int32_t var_44;\n                    int32_t rax_12 = (((((arg2[4] ^ var_48) | (arg2[5] ^ var_44)) | (arg2[3] ^ var_4c)) | (arg2[2] ^ var_50)) | (arg2[1] ^ var_54));\n                    if ((rax_12 | (*arg2 ^ var_58)) == 0)\n                    {\n                        goto label_40bf71;\n                    }\n                }\n            }\n        }\n        else\n        {\n        label_40bf71:\n            if (sub_40bc30(arg1, arg2) == 0)\n            {\n                var_60 = -1;\n            }\n        }\n        if (rax != 1)\n        {\n            rax_3 = sub_40bb50(rax);\n        }\n    }\n    time_t rax_4;\n    if ((rax == 1 || ((rax != 0 && rax != 1) && rax_3 != 0)))\n    {\n        rax_4 = var_60;\n    }\n    if ((rax == 0 || ((rax != 0 && rax != 1) && rax_3 == 0)))\n    {\n        rax_4 = -1;\n    }\n    return rax_4;\n}\n\n"
        },
        {
            "funcName": "sub_40c070",
            "funcStartAddr": "0x40c070",
            "funcEndAddr": "0x40c0cd",
            "decompiledFuncCode": "uint64_t sub_40c070(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_40aa20(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40c0d0",
            "funcStartAddr": "0x40c0d0",
            "funcEndAddr": "0x40c632",
            "decompiledFuncCode": "char* sub_40c0d0()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_614620;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_40ce63;\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        size_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            size_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_40c1cc;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_40c216;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_40c1cc:\n            r15 = &data_40ce63;\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_40c216:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, &data_40cff8);\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_40c2cc:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_40c45b;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_40c308:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_40c308;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_40c342:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_40c342;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_40ce63;\n                                    free(rdi_26);\n                                    sub_40aa20(rax_12);\n                                    goto label_40c257;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_40c51b:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_40c51b;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_40c569:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_40c569;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_40c2cc;\n                        }\n                        break;\n                    }\n                label_40c45b:\n                    sub_40aa20(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_40ce63;\n            }\n        label_40c257:\n            free(rbp_3);\n        }\n        data_614620 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40c640",
            "funcStartAddr": "0x40c640",
            "funcEndAddr": "0x40c757",
            "decompiledFuncCode": "int64_t sub_40c640(int64_t arg1, int64_t arg2, int32_t arg3, int32_t arg4, \n    int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8, int32_t arg9, \n    int32_t arg10)\n{\n    int64_t rbx = arg6;\n    int32_t rax;\n    rax = (arg1 & 3) == 0;\n    int32_t r10_2 = (((arg1 >> 2) + 0x1db) - rax);\n    int32_t rax_1;\n    rax_1 = (arg6 & 3) == 0;\n    int64_t rdi = (arg1 - rbx);\n    int32_t r12_3 = (((rbx >> 2) + 0x1db) - rax_1);\n    int32_t temp0;\n    int32_t temp1;\n    temp0 = HIGHW((r10_2 * 0x51eb851f));\n    temp1 = LOWW((r10_2 * 0x51eb851f));\n    uint64_t rbp_1 = ((temp0 >> 3) - (r10_2 >> 0x1f));\n    int32_t rbp_2 = (rbp_1 - ((r10_2 - ((rbp_1 * 5) * 5)) >> 0x1f));\n    int32_t temp2;\n    int32_t temp3;\n    temp2 = HIGHW((r12_3 * 0x51eb851f));\n    temp3 = LOWW((r12_3 * 0x51eb851f));\n    uint64_t rdx_6 = ((temp2 >> 3) - (r12_3 >> 0x1f));\n    int32_t rdx_7 = (rdx_6 - ((r12_3 - ((rdx_6 * 5) * 5)) >> 0x1f));\n    int64_t rsi_2 = (((arg2 + (rdi * 0x16d)) - arg7) + (((rbp_2 >> 2) - (rdx_7 >> 2)) + ((r10_2 - r12_3) - (rbp_2 - rdx_7))));\n    int64_t rax_25 = ((arg3 + (rsi_2 * 0x18)) - arg8);\n    int64_t rax_27 = ((arg4 + (((rax_25 << 4) - rax_25) << 2)) - arg9);\n    return ((arg5 + (((rax_27 << 4) - rax_27) << 2)) - arg10);\n}\n\n"
        },
        {
            "funcName": "sub_40c760",
            "funcStartAddr": "0x40c760",
            "funcEndAddr": "0x40c7f1",
            "decompiledFuncCode": "int64_t sub_40c760(int64_t arg1, int64_t arg2, int32_t arg3, int32_t arg4, \n    int32_t arg5, int64_t arg6, int32_t* arg7)\n{\n    if (arg7 != 0)\n    {\n        int64_t rax_1 = sub_40c640(arg1, arg2, arg3, arg4, arg5, arg7[5], arg7[7], arg7[2], arg7[1], *arg7);\n        int64_t rax_2 = (rax_1 + arg6);\n        if ((!(rax_1 + arg6)))\n        {\n            return rax_2;\n        }\n    }\n    if (arg6 >= 0)\n    {\n        int64_t rdx = (arg6 - 1);\n        int64_t rax_3 = 0x7fffffffffffffff;\n        if (arg6 > 0x7ffffffffffffffd)\n        {\n            rax_3 = rdx;\n        }\n        return rax_3;\n    }\n    if (arg6 >= -0x7ffffffffffffffe)\n    {\n        return -0x8000000000000000;\n    }\n    return (arg6 + 1);\n}\n\n"
        },
        {
            "funcName": "sub_40c800",
            "funcStartAddr": "0x40c800",
            "funcEndAddr": "0x40c8bf",
            "decompiledFuncCode": "int64_t sub_40c800(int64_t arg1, int64_t* arg2, int64_t arg3)\n{\n    int64_t var_30 = *arg2;\n    int64_t rax_1 = arg1(&var_30, arg3);\n    if (rax_1 == 0)\n    {\n        int64_t r14_1 = *arg2;\n        int64_t rbp_1 = 0;\n        if (r14_1 != 0)\n        {\n            while (true)\n            {\n                int64_t rbx_1 = (((rbp_1 | r14_1) & 1) + ((r14_1 >> 1) + (rbp_1 >> 1)));\n                if ((rbp_1 != rbx_1 && r14_1 != rbx_1))\n                {\n                    break;\n                }\n                var_30 = rbx_1;\n                rax_1 = arg1(&var_30, arg3);\n                if (rax_1 == 0)\n                {\n                    r14_1 = rbx_1;\n                    rbx_1 = rbp_1;\n                }\n                rbp_1 = rbx_1;\n            }\n            if ((rax_1 == 0 && rbp_1 != 0))\n            {\n                var_30 = rbp_1;\n                return arg1(&var_30, arg3);\n            }\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40c8c0",
            "funcStartAddr": "0x40c8c0",
            "funcEndAddr": "0x40ccfa",
            "decompiledFuncCode": "int64_t sub_40c8c0(int32_t* arg1, int64_t arg2, int64_t* arg3)\n{\n    int32_t rax = *arg1;\n    int64_t rsi = arg1[3];\n    int32_t rax_1 = arg1[1];\n    int32_t rax_2 = arg1[2];\n    int32_t rdi = arg1[4];\n    int32_t rax_3 = arg1[8];\n    int32_t temp0;\n    int32_t temp1;\n    temp0 = HIGHW((rdi * 0x2aaaaaab));\n    temp1 = LOWW((rdi * 0x2aaaaaab));\n    int32_t rdx_2 = 0;\n    uint64_t rcx_1 = ((temp0 >> 1) - (rdi >> 0x1f));\n    int32_t rdi_1 = (rdi - ((rcx_1 * 3) << 2));\n    int64_t rbx_3 = ((rcx_1 - (rdi_1 >> 0x1f)) + arg1[5]);\n    if ((rbx_3 & 3) == 0)\n    {\n        int64_t rax_13;\n        int64_t rdx_3;\n        rdx_3 = HIGHD((rbx_3 * -0x5c28f5c28f5c28f5));\n        rax_13 = LOWD((rbx_3 * -0x5c28f5c28f5c28f5));\n        int64_t rax_16 = (((rdx_3 + rbx_3) >> 6) - (rbx_3 >> 0x3f));\n        rdx_2 = 1;\n        if (rbx_3 == (rax_16 * 0x64))\n        {\n            rdx_2 = (rax_16 & 3) == 1;\n        }\n    }\n    int32_t r12 = 0x3b;\n    int32_t rbp = 6;\n    int64_t rax_20 = rdx_2;\n    int64_t rcx_5 = ((rdi_1 + ((rdi_1 >> 0x1f) & 0xc)) + (rax_20 + (((rax_20 + rax_20) + rax_20) << 2)));\n    int64_t rsi_1 = (rsi + (*((rcx_5 + rcx_5) + 0x411100) - 1));\n    if (rax <= 0x3b)\n    {\n        r12 = rax;\n    }\n    int32_t rax_26 = 0;\n    if (r12 >= 0)\n    {\n        rax_26 = r12;\n    }\n    uint64_t rax_30 = (-*arg3);\n    int32_t var_d4 = rax_30;\n    int64_t rax_31 = sub_40c640(rbx_3, rsi_1, rax_2, rax_1, rax_26, 0x46, 0, 0, 0, rax_30);\n    int64_t r13 = rax_31;\n    int64_t var_c8 = rax_31;\n    int32_t r12_1 = 0;\n    int64_t r14_1 = r13;\n    int64_t rax_33;\n    while (true)\n    {\n        int64_t r15_1 = var_c8;\n        int32_t var_b8;\n        rax_33 = sub_40c760(rbx_3, rsi_1, rax_2, rax_1, rax_26, r15_1, sub_40c800(arg2, &var_c8, &var_b8));\n        int32_t var_98;\n        void* var_78;\n        int32_t* r14_2;\n        if (r15_1 != rax_33)\n        {\n            if (r15_1 != r13)\n            {\n            label_40ca28:\n                int32_t temp2_1 = rbp;\n                rbp = (rbp - 1);\n                if (temp2_1 != 1)\n                {\n                    var_c8 = rax_33;\n                    r13 = r14_1;\n                    r14_1 = r15_1;\n                    r12_1 = var_98 != 0;\n                    continue;\n                }\n            }\n            else\n            {\n                if (r15_1 == r14_1)\n                {\n                    goto label_40ca28;\n                }\n                bool cond:2_1 = var_98 != 0;\n                if (var_98 >= 0)\n                {\n                    bool cond:3_1 = rax_3 != 0;\n                    if (rax_3 < 0)\n                    {\n                        if (cond:2_1 < r12_1)\n                        {\n                            goto label_40ca28;\n                        }\n                        goto label_40cac7;\n                    }\n                    if (cond:3_1 == cond:2_1)\n                    {\n                        goto label_40ca28;\n                    }\n                    goto label_40cac7;\n                }\n            label_40cac7:\n                r14_2 = arg1;\n                rax_33 = r15_1;\n            label_40cae0:\n                int32_t rsi_5 = var_b8;\n                *arg3 = (rax_33 - (var_d4 + rax_31));\n                int64_t rax_36;\n                void* rdx_19;\n                if (rsi_5 != rax)\n                {\n                    int64_t* rcx_11;\n                    rcx_11 = rax <= 0;\n                    int64_t rdx_16;\n                    rdx_16 = rsi_5 == 0x3c;\n                    rdx_19 = (rax + ((rdx_16 & rcx_11) - rax_26));\n                    void* rax_34 = (rax_33 + rdx_19);\n                    var_c8 = rax_34;\n                    if ((!(rax_33 + rdx_19)))\n                    {\n                        var_78 = rax_34;\n                        rax_36 = arg2(&var_78, &var_b8);\n                        if (rax_36 != 0)\n                        {\n                            rax_33 = var_c8;\n                        }\n                    }\n                }\n                if ((((rsi_5 != rax && (!(rax_33 + rdx_19))) && rax_36 != 0) || rsi_5 == rax))\n                {\n                    *r14_2 = var_b8;\n                    int128_t var_a8;\n                    *(r14_2 + 0x10) = var_a8;\n                    *(r14_2 + 0x20) = var_98;\n                    int64_t var_88;\n                    *(r14_2 + 0x30) = var_88;\n                    break;\n                }\n            }\n            rax_33 = -1;\n            break;\n        }\n        r14_2 = arg1;\n        int32_t var_f0;\n        var_f0 = rax_3 == 0;\n        char rbp_1 = var_f0;\n        if ((rbp_1 != var_98 == 0 && (rax_3 >= 0 && var_98 >= 0)))\n        {\n            int32_t r13_1 = 0x92c70;\n            var_f0 = rbx_3;\n            do\n            {\n                int32_t rbx_4 = (r13_1 + r13_1);\n                int32_t r12_3 = 2;\n                int32_t r15_3 = (-r13_1);\n                int64_t rdx_23 = r15_3;\n                int64_t var_c0 = (rdx_23 + rax_33);\n                if ((!(rdx_23 + rax_33)))\n                {\n                    goto label_40cc80;\n                }\n                while (true)\n                {\n                    r15_3 = (r15_3 + rbx_4);\n                    if (r12_3 == 1)\n                    {\n                        break;\n                    }\n                    int64_t rdx_25 = r15_3;\n                    r12_3 = 1;\n                    var_c0 = (rdx_25 + rax_33);\n                    if ((!(rdx_25 + rax_33)))\n                    {\n                    label_40cc80:\n                        sub_40c800(arg2, &var_c0, &var_78);\n                        int32_t var_58;\n                        if (rbp_1 == var_58 == 0)\n                        {\n                            break;\n                        }\n                        if (var_58 < 0)\n                        {\n                            break;\n                        }\n                        rax_33 = var_c8;\n                    }\n                }\n                if (r12_3 != 1)\n                {\n                    var_c8 = sub_40c760(var_f0, rsi_1, rax_2, rax_1, rax_26, var_c0, &var_78);\n                    sub_40c800(arg2, &var_c8, &var_b8);\n                    rax_33 = var_c8;\n                    break;\n                }\n                r13_1 = (r13_1 + 0x92c70);\n            } while (r13_1 != 0x100dc400);\n        }\n        goto label_40cae0;\n    }\n    return rax_33;\n}\n\n"
        },
        {
            "funcName": "sub_40cd00",
            "funcStartAddr": "0x40cd00",
            "funcEndAddr": "0x40cd1c",
            "decompiledFuncCode": "int64_t sub_40cd00(int32_t* arg1)\n{\n    tzset();\n    /* tailcall */\n    return sub_40c8c0(arg1, 0x401920, &data_614628);\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x40cd20",
            "funcEndAddr": "0x40cd7d",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x40cd80",
            "funcEndAddr": "0x40cd81",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_40cd90",
            "funcStartAddr": "0x40cd90",
            "funcEndAddr": "0x40cda8",
            "decompiledFuncCode": "int64_t sub_40cd90(void (* arg1)(void*))\n{\n    int64_t rdx = data_614268;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_40cda8",
            "funcStartAddr": "0x40cda8",
            "funcEndAddr": "0x40cdc8",
            "decompiledFuncCode": "int64_t sub_40cda8(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_613e30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}