{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_split.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 163,
    "funcInfo": [
        {
            "funcName": "sub_4019a0",
            "funcStartAddr": "0x4019a0",
            "funcEndAddr": "0x4019ac",
            "decompiledFuncCode": "int64_t sub_4019a0()\n{\n    int64_t var_8 = data_60e008;\n    /* jump -> data_60e010 */\n}\n\n"
        },
        {
            "funcName": "sub_4019b6",
            "funcStartAddr": "0x4019b6",
            "funcEndAddr": "0x4019c0",
            "decompiledFuncCode": "int64_t sub_4019b6()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_4019c6",
            "funcStartAddr": "0x4019c6",
            "funcEndAddr": "0x4019d0",
            "decompiledFuncCode": "int64_t sub_4019c6()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_4019d6",
            "funcStartAddr": "0x4019d6",
            "funcEndAddr": "0x4019e0",
            "decompiledFuncCode": "int64_t sub_4019d6()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_4019e6",
            "funcStartAddr": "0x4019e6",
            "funcEndAddr": "0x4019f0",
            "decompiledFuncCode": "int64_t sub_4019e6()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401a06",
            "funcStartAddr": "0x401a06",
            "funcEndAddr": "0x401a10",
            "decompiledFuncCode": "int64_t sub_401a06()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401a16",
            "funcStartAddr": "0x401a16",
            "funcEndAddr": "0x401a20",
            "decompiledFuncCode": "int64_t sub_401a16()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401a26",
            "funcStartAddr": "0x401a26",
            "funcEndAddr": "0x401a30",
            "decompiledFuncCode": "int64_t sub_401a26()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401a36",
            "funcStartAddr": "0x401a36",
            "funcEndAddr": "0x401a40",
            "decompiledFuncCode": "int64_t sub_401a36()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401a46",
            "funcStartAddr": "0x401a46",
            "funcEndAddr": "0x401a50",
            "decompiledFuncCode": "int64_t sub_401a46()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401a56",
            "funcStartAddr": "0x401a56",
            "funcEndAddr": "0x401a60",
            "decompiledFuncCode": "int64_t sub_401a56()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401a66",
            "funcStartAddr": "0x401a66",
            "funcEndAddr": "0x401a70",
            "decompiledFuncCode": "int64_t sub_401a66()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401a86",
            "funcStartAddr": "0x401a86",
            "funcEndAddr": "0x401a90",
            "decompiledFuncCode": "int64_t sub_401a86()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401a96",
            "funcStartAddr": "0x401a96",
            "funcEndAddr": "0x401aa0",
            "decompiledFuncCode": "int64_t sub_401a96()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401aa6",
            "funcStartAddr": "0x401aa6",
            "funcEndAddr": "0x401ab0",
            "decompiledFuncCode": "int64_t sub_401aa6()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401ab6",
            "funcStartAddr": "0x401ab6",
            "funcEndAddr": "0x401ac0",
            "decompiledFuncCode": "int64_t sub_401ab6()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401ac6",
            "funcStartAddr": "0x401ac6",
            "funcEndAddr": "0x401ad0",
            "decompiledFuncCode": "int64_t sub_401ac6()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401ad6",
            "funcStartAddr": "0x401ad6",
            "funcEndAddr": "0x401ae0",
            "decompiledFuncCode": "int64_t sub_401ad6()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401ae6",
            "funcStartAddr": "0x401ae6",
            "funcEndAddr": "0x401af0",
            "decompiledFuncCode": "int64_t sub_401ae6()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401af6",
            "funcStartAddr": "0x401af6",
            "funcEndAddr": "0x401b00",
            "decompiledFuncCode": "int64_t sub_401af6()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401b06",
            "funcStartAddr": "0x401b06",
            "funcEndAddr": "0x401b10",
            "decompiledFuncCode": "int64_t sub_401b06()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401b16",
            "funcStartAddr": "0x401b16",
            "funcEndAddr": "0x401b20",
            "decompiledFuncCode": "int64_t sub_401b16()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401b26",
            "funcStartAddr": "0x401b26",
            "funcEndAddr": "0x401b30",
            "decompiledFuncCode": "int64_t sub_401b26()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401b36",
            "funcStartAddr": "0x401b36",
            "funcEndAddr": "0x401b40",
            "decompiledFuncCode": "int64_t sub_401b36()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401b46",
            "funcStartAddr": "0x401b46",
            "funcEndAddr": "0x401b50",
            "decompiledFuncCode": "int64_t sub_401b46()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401b56",
            "funcStartAddr": "0x401b56",
            "funcEndAddr": "0x401b60",
            "decompiledFuncCode": "int64_t sub_401b56()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401b66",
            "funcStartAddr": "0x401b66",
            "funcEndAddr": "0x401b70",
            "decompiledFuncCode": "int64_t sub_401b66()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401b76",
            "funcStartAddr": "0x401b76",
            "funcEndAddr": "0x401b80",
            "decompiledFuncCode": "int64_t sub_401b76()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401b86",
            "funcStartAddr": "0x401b86",
            "funcEndAddr": "0x401b90",
            "decompiledFuncCode": "int64_t sub_401b86()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401b96",
            "funcStartAddr": "0x401b96",
            "funcEndAddr": "0x401ba0",
            "decompiledFuncCode": "int64_t sub_401b96()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401ba6",
            "funcStartAddr": "0x401ba6",
            "funcEndAddr": "0x401bb0",
            "decompiledFuncCode": "int64_t sub_401ba6()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401bb6",
            "funcStartAddr": "0x401bb6",
            "funcEndAddr": "0x401bc0",
            "decompiledFuncCode": "int64_t sub_401bb6()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401bc6",
            "funcStartAddr": "0x401bc6",
            "funcEndAddr": "0x401bd0",
            "decompiledFuncCode": "int64_t sub_401bc6()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401bd6",
            "funcStartAddr": "0x401bd6",
            "funcEndAddr": "0x401be0",
            "decompiledFuncCode": "int64_t sub_401bd6()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401be6",
            "funcStartAddr": "0x401be6",
            "funcEndAddr": "0x401bf0",
            "decompiledFuncCode": "int64_t sub_401be6()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401c06",
            "funcStartAddr": "0x401c06",
            "funcEndAddr": "0x401c10",
            "decompiledFuncCode": "int64_t sub_401c06()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401c16",
            "funcStartAddr": "0x401c16",
            "funcEndAddr": "0x401c20",
            "decompiledFuncCode": "int64_t sub_401c16()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401c26",
            "funcStartAddr": "0x401c26",
            "funcEndAddr": "0x401c30",
            "decompiledFuncCode": "int64_t sub_401c26()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401c36",
            "funcStartAddr": "0x401c36",
            "funcEndAddr": "0x401c40",
            "decompiledFuncCode": "int64_t sub_401c36()\n{\n    int64_t var_8 = 0x28;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401c46",
            "funcStartAddr": "0x401c46",
            "funcEndAddr": "0x401c50",
            "decompiledFuncCode": "int64_t sub_401c46()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401c56",
            "funcStartAddr": "0x401c56",
            "funcEndAddr": "0x401c60",
            "decompiledFuncCode": "int64_t sub_401c56()\n{\n    int64_t var_8 = 0x2a;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401c66",
            "funcStartAddr": "0x401c66",
            "funcEndAddr": "0x401c70",
            "decompiledFuncCode": "int64_t sub_401c66()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401c86",
            "funcStartAddr": "0x401c86",
            "funcEndAddr": "0x401c90",
            "decompiledFuncCode": "int64_t sub_401c86()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401c96",
            "funcStartAddr": "0x401c96",
            "funcEndAddr": "0x401ca0",
            "decompiledFuncCode": "int64_t sub_401c96()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401ca6",
            "funcStartAddr": "0x401ca6",
            "funcEndAddr": "0x401cb0",
            "decompiledFuncCode": "int64_t sub_401ca6()\n{\n    int64_t var_8 = 0x2f;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401cb6",
            "funcStartAddr": "0x401cb6",
            "funcEndAddr": "0x401cc0",
            "decompiledFuncCode": "int64_t sub_401cb6()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401cc6",
            "funcStartAddr": "0x401cc6",
            "funcEndAddr": "0x401cd0",
            "decompiledFuncCode": "int64_t sub_401cc6()\n{\n    int64_t var_8 = 0x31;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401cd6",
            "funcStartAddr": "0x401cd6",
            "funcEndAddr": "0x401ce0",
            "decompiledFuncCode": "int64_t sub_401cd6()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401ce6",
            "funcStartAddr": "0x401ce6",
            "funcEndAddr": "0x401cf0",
            "decompiledFuncCode": "int64_t sub_401ce6()\n{\n    int64_t var_8 = 0x33;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401cf6",
            "funcStartAddr": "0x401cf6",
            "funcEndAddr": "0x401d00",
            "decompiledFuncCode": "int64_t sub_401cf6()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401d06",
            "funcStartAddr": "0x401d06",
            "funcEndAddr": "0x401d10",
            "decompiledFuncCode": "int64_t sub_401d06()\n{\n    int64_t var_8 = 0x35;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401d16",
            "funcStartAddr": "0x401d16",
            "funcEndAddr": "0x401d20",
            "decompiledFuncCode": "int64_t sub_401d16()\n{\n    int64_t var_8 = 0x36;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401d26",
            "funcStartAddr": "0x401d26",
            "funcEndAddr": "0x401d30",
            "decompiledFuncCode": "int64_t sub_401d26()\n{\n    int64_t var_8 = 0x37;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401d36",
            "funcStartAddr": "0x401d36",
            "funcEndAddr": "0x401d40",
            "decompiledFuncCode": "int64_t sub_401d36()\n{\n    int64_t var_8 = 0x38;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401d46",
            "funcStartAddr": "0x401d46",
            "funcEndAddr": "0x401d50",
            "decompiledFuncCode": "int64_t sub_401d46()\n{\n    int64_t var_8 = 0x39;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401d56",
            "funcStartAddr": "0x401d56",
            "funcEndAddr": "0x401d60",
            "decompiledFuncCode": "int64_t sub_401d56()\n{\n    int64_t var_8 = 0x3a;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401d66",
            "funcStartAddr": "0x401d66",
            "funcEndAddr": "0x401d70",
            "decompiledFuncCode": "int64_t sub_401d66()\n{\n    int64_t var_8 = 0x3b;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401d76",
            "funcStartAddr": "0x401d76",
            "funcEndAddr": "0x401d80",
            "decompiledFuncCode": "int64_t sub_401d76()\n{\n    int64_t var_8 = 0x3c;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401d86",
            "funcStartAddr": "0x401d86",
            "funcEndAddr": "0x401d90",
            "decompiledFuncCode": "int64_t sub_401d86()\n{\n    int64_t var_8 = 0x3d;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401d96",
            "funcStartAddr": "0x401d96",
            "funcEndAddr": "0x401da0",
            "decompiledFuncCode": "int64_t sub_401d96()\n{\n    int64_t var_8 = 0x3e;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401da6",
            "funcStartAddr": "0x401da6",
            "funcEndAddr": "0x401db0",
            "decompiledFuncCode": "int64_t sub_401da6()\n{\n    int64_t var_8 = 0x3f;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401db6",
            "funcStartAddr": "0x401db6",
            "funcEndAddr": "0x401dc0",
            "decompiledFuncCode": "int64_t sub_401db6()\n{\n    int64_t var_8 = 0x40;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401dc6",
            "funcStartAddr": "0x401dc6",
            "funcEndAddr": "0x401dd0",
            "decompiledFuncCode": "int64_t sub_401dc6()\n{\n    int64_t var_8 = 0x41;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401dd6",
            "funcStartAddr": "0x401dd6",
            "funcEndAddr": "0x401de0",
            "decompiledFuncCode": "int64_t sub_401dd6()\n{\n    int64_t var_8 = 0x42;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401de6",
            "funcStartAddr": "0x401de6",
            "funcEndAddr": "0x401df0",
            "decompiledFuncCode": "int64_t sub_401de6()\n{\n    int64_t var_8 = 0x43;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401e06",
            "funcStartAddr": "0x401e06",
            "funcEndAddr": "0x401e10",
            "decompiledFuncCode": "int64_t sub_401e06()\n{\n    int64_t var_8 = 0x45;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401e16",
            "funcStartAddr": "0x401e16",
            "funcEndAddr": "0x401e20",
            "decompiledFuncCode": "int64_t sub_401e16()\n{\n    int64_t var_8 = 0x46;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401e26",
            "funcStartAddr": "0x401e26",
            "funcEndAddr": "0x401e30",
            "decompiledFuncCode": "int64_t sub_401e26()\n{\n    int64_t var_8 = 0x47;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401e36",
            "funcStartAddr": "0x401e36",
            "funcEndAddr": "0x401e40",
            "decompiledFuncCode": "int64_t sub_401e36()\n{\n    int64_t var_8 = 0x48;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401e46",
            "funcStartAddr": "0x401e46",
            "funcEndAddr": "0x401e50",
            "decompiledFuncCode": "int64_t sub_401e46()\n{\n    int64_t var_8 = 0x49;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401e56",
            "funcStartAddr": "0x401e56",
            "funcEndAddr": "0x401e60",
            "decompiledFuncCode": "int64_t sub_401e56()\n{\n    int64_t var_8 = 0x4a;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "sub_401e66",
            "funcStartAddr": "0x401e66",
            "funcEndAddr": "0x401e70",
            "decompiledFuncCode": "int64_t sub_401e66()\n{\n    int64_t var_8 = 0x4b;\n    /* tailcall */\n    return sub_4019a0();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x401ea0",
            "funcEndAddr": "0x403bd4",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    uint64_t r15 = 0;\n    uint64_t r13 = 0;\n    uint64_t rbp = argc;\n    char** rbx = argv;\n    int64_t var_138 = getpagesize();\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_4053a0(*rbx);\n    void var_148;\n    int32_t var_140;\n    setlocale(6, &data_40c284[0x1b], rdx, rcx, r8, r9, var_148, var_140);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    sub_409900(sub_4050e0);\n    data_60e5f0 = &data_40c282;\n    data_60e620 = &data_409ce8;\n    uint64_t var_140_1 = 0;\n    int64_t var_100 = 0;\n    uint64_t var_120 = 0;\n    while (true)\n    {\n        int32_t rdi_1 = rbp;\n        int32_t r14_1 = data_60e31c;\n        if (r14_1 == 0)\n        {\n            r14_1 = 1;\n        }\n        int32_t rax_2 = getopt_long(rdi_1, rbx, \"0123456789C:a:b:del:n:t:ux\", &data_40aaa0, nullptr);\n        int32_t r8_1 = rax_2;\n        char const* const rsi_4;\n        int32_t var_130;\n        uint64_t var_128;\n        uint64_t var_d8;\n        int32_t rdx_78;\n        int64_t rbx_7;\n        int64_t rbx_26;\n        char const* const rsi_65;\n        uint64_t r12_1;\n        int64_t r14_2;\n        if (rax_2 == 0xffffffff)\n        {\n            if ((var_100 != 0 && data_60e760 != 0))\n            {\n                rsi_4 = \"--filter does not process a chun\u2026\";\n            }\n            if ((var_100 == 0 || (var_100 != 0 && data_60e760 == 0)))\n            {\n                if (r13 == 0)\n                {\n                    var_140_1 = 0x3e8;\n                    r13 = 3;\n                }\n                else if (var_140_1 == 0)\n                {\n                    error(0, 0, \"%s: %s\", dcgettext(nullptr, \"invalid number of lines\", 5), sub_406fc0(&data_409bea));\n                    sub_404cf0(1);\n                    /* no return */\n                }\n                if (data_60e290 < 0)\n                {\n                    data_60e290 = 0xa;\n                }\n                int64_t rdi_17 = data_60e600;\n                r12_1 = (r13 - 5);\n                uint64_t rsi_8;\n                uint64_t r9_2;\n                uint64_t r9_3;\n                if (rdi_17 == 0)\n                {\n                    r9_2 = var_140_1;\n                    if (r12_1 <= 2)\n                    {\n                        goto label_40277e;\n                    }\n                }\n                else\n                {\n                    data_60e2a0 = 0;\n                    if (r12_1 <= 2)\n                    {\n                        int32_t rax_52;\n                        rax_52 = sub_407a20(rdi_17, nullptr, 0xa, &var_d8, &data_40c284[0x1b]);\n                        rsi_8 = var_140_1;\n                        r9_2 = rsi_8;\n                        if (rax_52 != 0)\n                        {\n                            goto label_40277e;\n                        }\n                        r9_3 = var_d8;\n                        if (((!rsi_8) >= r9_3 && r9_3 < rsi_8))\n                        {\n                            goto label_40376e;\n                        }\n                        r9_2 = var_140_1;\n                        goto label_40277e;\n                    }\n                }\n                r14_2 = 0;\n                if (data_60e608 != 0)\n                {\n                label_4027f4:\n                    data_60e2a0 = 0;\n                    goto label_402552;\n                }\n                uint64_t var_118;\n                char var_110;\n                uint64_t var_108;\n                ssize_t var_e8_1;\n                bool var_d9;\n                ssize_t rax_78;\n                char rbx_12;\n                uint64_t r8_16;\n                uint64_t r10_2;\n                uint64_t r11_1;\n                while (true)\n                {\n                    int64_t rdi_18 = 2;\n                    if (r14_2 >= 2)\n                    {\n                        rdi_18 = r14_2;\n                    }\n                    data_60e608 = rdi_18;\n                label_402552:\n                    int32_t rax_30 = data_60e31c;\n                    int64_t rsi_3;\n                    if (rax_30 < rbp)\n                    {\n                        int64_t rcx_6 = rax_30;\n                        rsi_3 = (rcx_6 << 3);\n                        int64_t rcx_7 = rbx[rcx_6];\n                        data_60e31c = (rax_30 + 1);\n                        data_60e5f0 = rcx_7;\n                        if ((rax_30 + 1) < rbp)\n                        {\n                            int64_t rdx_7 = *((rbx + rsi_3) + 8);\n                            data_60e31c = (rax_30 + 2);\n                            data_60e620 = rdx_7;\n                        }\n                    }\n                    if (((rax_30 >= rbp || (rax_30 < rbp && (rax_30 + 1) >= rbp)) || ((rax_30 < rbp && (rax_30 + 1) < rbp) && (rax_30 + 2) >= rbp)))\n                    {\n                        int64_t rdi_19 = data_60e600;\n                        if (rdi_19 != 0)\n                        {\n                            int64_t rcx_8 = -1;\n                            rsi_4 = \"numerical suffix start value is \u2026\";\n                        label_4025b8:\n                            if (rcx_8 != 0)\n                            {\n                                bool cond:14_1 = 0 != *rdi_19;\n                                rdi_19 = (rdi_19 + 1);\n                                rcx_8 = (rcx_8 - 1);\n                                if (cond:14_1)\n                                {\n                                    goto label_4025b8;\n                                }\n                            }\n                            if (((!rcx_8) - 1) > data_60e608)\n                            {\n                                goto label_403790;\n                            }\n                        }\n                        int64_t rbx_1 = data_60e5f0;\n                        int32_t rax_35 = strcmp(rbx_1, &data_40c282);\n                        int32_t rax_36;\n                        if (rax_35 != 0)\n                        {\n                            rax_36 = sub_405260(0, rbx_1, 0, 0);\n                        }\n                        int32_t rax_37;\n                        if ((rax_35 == 0 || (rax_35 != 0 && rax_36 >= 0)))\n                        {\n                            rax_37 = __fxstat(1, 0, &data_60e560);\n                            if (rax_37 != 0)\n                            {\n                                error(1, *__errno_location(), \"%s\", sub_406e40(0, 3, data_60e5f0));\n                            }\n                        }\n                        if ((((rax_35 == 0 || (rax_35 != 0 && rax_36 >= 0)) && rax_37 != 0) || (rax_35 != 0 && rax_36 < 0)))\n                        {\n                            error(1, *__errno_location(), dcgettext(nullptr, \"cannot open %s for reading\", 5), sub_406d70(4, data_60e5f0));\n                        label_4039e2:\n                            int32_t* rax_189 = __errno_location();\n                            if (*rax_189 == 0x1d)\n                            {\n                                *rax_189 = 0;\n                            }\n                            goto label_40361d;\n                        }\n                        if (((rax_35 == 0 || (rax_35 != 0 && rax_36 >= 0)) && rax_37 == 0))\n                        {\n                            if (var_120 == 0)\n                            {\n                                uint64_t rbx_2 = data_60e598;\n                                uint64_t rax_38 = 0x20000;\n                                if ((rbx_2 - 0x20000) <= 0x1ffffffffffe0000)\n                                {\n                                    rax_38 = rbx_2;\n                                }\n                                var_120 = rax_38;\n                            }\n                            rbp = -1;\n                            int64_t rcx_9 = ((sub_407690((var_120 + var_138)) + var_138) - 1);\n                            uint64_t temp1_1 = (COMBINE(0, rcx_9) % var_138);\n                            var_138 = 0x7fffffffffffffff;\n                            int64_t var_f8 = (rcx_9 - temp1_1);\n                            off64_t rax_154;\n                            int64_t rsi_48;\n                            int64_t rax_56;\n                            char* rbx_4;\n                            uint64_t r10_1;\n                            if (r12_1 > 1)\n                            {\n                            label_40268d:\n                                if (data_60e760 != 0)\n                                {\n                                    sigemptyset(&data_60e640);\n                                    sigaction(0xd, nullptr, &var_d8);\n                                    if (var_d8 != 1)\n                                    {\n                                        sigaddset(&data_60e640, 0xd);\n                                    }\n                                    sigprocmask(0, &data_60e640, &data_60e6c0);\n                                }\n                                r13 = (r13 - 2);\n                                if ((r13 == 3 && r13 <= 5))\n                                {\n                                    if (var_100 == 0)\n                                    {\n                                        sub_404ab0((COMBINE(0, var_138) / var_140_1), var_f8, var_120, rbp, var_140_1);\n                                        goto label_402fc7;\n                                    }\n                                label_403439:\n                                    if (var_100 > var_140_1)\n                                    {\n                                        goto label_403a40;\n                                    }\n                                    if (var_138 < var_140_1)\n                                    {\n                                        goto label_403a40;\n                                    }\n                                    uint64_t temp0_5 = (COMBINE(0, var_138) / var_140_1);\n                                    rsi_48 = ((var_100 - 1) * temp0_5);\n                                    int64_t rbx_20 = rsi_48;\n                                    if (var_100 != var_140_1)\n                                    {\n                                        var_138 = (temp0_5 * var_100);\n                                    }\n                                    if (rbp <= rsi_48)\n                                    {\n                                        rbp = -1;\n                                        rax_154 = lseek(0, rsi_48, 1);\n                                        if (rax_154 < 0)\n                                        {\n                                            r11_1 = error(1, *__errno_location(), \"%s\", sub_406e40(0, 3, data_60e5f0));\n                                        label_403724:\n                                            var_118 = r11_1;\n                                            rax_78 = sub_406fe0(0, var_f8, var_120);\n                                            r11_1 = var_118;\n                                            if (rax_78 == -1)\n                                            {\n                                                rbx = sub_406e40(0, 3, data_60e5f0);\n                                                rsi_8 = error(1, *__errno_location(), \"%s\", rbx);\n                                            label_40376e:\n                                                r9_2 = (r9_3 + rsi_8);\n                                            label_40277e:\n                                                int64_t rdi_24 = data_60e298;\n                                                int64_t rcx_11 = -1;\n                                                int64_t rdx_14 = 0;\n                                            label_40278d:\n                                                if (rcx_11 != 0)\n                                                {\n                                                    bool cond:7_1 = 0 != *rdi_24;\n                                                    rdi_24 = (rdi_24 + 1);\n                                                    rcx_11 = (rcx_11 - 1);\n                                                    if (cond:7_1)\n                                                    {\n                                                        goto label_40278d;\n                                                    }\n                                                }\n                                                int64_t rsi_7 = ((!rcx_11) - 1);\n                                                uint64_t rcx_12 = (COMBINE(rdx_14, r9_2) / rsi_7);\n                                                r8_1 = (COMBINE(rdx_14, r9_2) % rsi_7) != 0;\n                                                int64_t rdi_25 = 0;\n                                                if (rsi_7 <= r9_2)\n                                                {\n                                                label_4027c0:\n                                                    rdi_25 = (rdi_25 + 1);\n                                                    uint64_t temp0_2 = (COMBINE(0, rcx_12) / rsi_7);\n                                                    if (rsi_7 <= rcx_12)\n                                                    {\n                                                        rcx_12 = temp0_2;\n                                                        goto label_4027c0;\n                                                    }\n                                                }\n                                                int64_t rax_51 = data_60e608;\n                                                data_60e2a0 = 0;\n                                                r14_2 = (r8_1 + rdi_25);\n                                                if (rax_51 == 0)\n                                                {\n                                                    continue;\n                                                }\n                                                else\n                                                {\n                                                    if (r14_2 <= rax_51)\n                                                    {\n                                                        goto label_4027f4;\n                                                    }\n                                                    rsi_3 = error(1, 0, dcgettext(nullptr, \"the suffix length needs to be at\u2026\", 5), r14_2);\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else\n                                    {\n                                        rbp = (rbp - rsi_48);\n                                        memmove(var_f8, (rsi_48 + var_f8), rbp);\n                                    }\n                                    if ((rbp > rsi_48 || (rbp <= rsi_48 && rax_154 >= 0)))\n                                    {\n                                        r13 = var_120;\n                                        ssize_t rax_133 = rbp;\n                                        r15 = var_f8;\n                                    label_4034ae:\n                                        if (var_138 <= rbx_20)\n                                        {\n                                            goto label_402fc7;\n                                        }\n                                        if (rax_133 == -1)\n                                        {\n                                            rax_133 = sub_406fe0(0, r15, r13);\n                                            rbx_4 = sub_406e40(0, 3, data_60e5f0);\n                                            rax_56 = error(1, *__errno_location(), \"%s\", rbx_4);\n                                        }\n                                        if (rax_133 == 0)\n                                        {\n                                            goto label_402fc7;\n                                        }\n                                        ssize_t rbp_8 = (var_138 - rbx_20);\n                                        if (rbp_8 > rax_133)\n                                        {\n                                            rbp_8 = rax_133;\n                                        }\n                                        if (rbp_8 != sub_4052d0(1, r15, rbp_8))\n                                        {\n                                            uint64_t rax_135 = __errno_location();\n                                            if ((data_60e760 == 0 || (data_60e760 != 0 && *rax_135 != 0x20)))\n                                            {\n                                                r13 = rax_135;\n                                                error(1, *r13, \"%s\", sub_406e40(0, 3, &data_40c282));\n                                            }\n                                        }\n                                        rbx_20 = (rbx_20 + rbp_8);\n                                        goto label_4034ae;\n                                        goto label_40357b;\n                                    }\n                                }\n                                if (r13 > 5)\n                                {\n                                    sub_404ab0(var_140_1, var_f8, var_120, -1, 0);\n                                    goto label_402fc7;\n                                }\n                                switch (r13)\n                                {\n                                    case 0:\n                                    {\n                                        var_138 = 0;\n                                        r12_1 = 0;\n                                        r13 = 0;\n                                        var_128 = 0;\n                                        var_130 = 0;\n                                    label_4029bc:\n                                        ssize_t rax_63 = sub_406fe0(0, var_f8, var_120);\n                                        rbp = rax_63;\n                                        if (rax_63 == -1)\n                                        {\n                                            goto label_403ba9;\n                                        }\n                                        if (rax_63 != 0)\n                                        {\n                                            rbx_7 = var_f8;\n                                            goto label_402a54;\n                                        }\n                                        if (r12_1 == 0)\n                                        {\n                                            goto label_4032fd;\n                                        }\n                                        break;\n                                    }\n                                    case 1:\n                                    case 2:\n                                    {\n                                        uint64_t r15_1 = var_140_1;\n                                        r14_2 = 0;\n                                        char r12_2 = 1;\n                                    label_4028fc:\n                                        ssize_t rax_60 = sub_406fe0(0, var_f8, var_120);\n                                        var_138 = rax_60;\n                                        if (rax_60 == -1)\n                                        {\n                                            goto label_403b42;\n                                        }\n                                        rbp = data_60e290;\n                                        int64_t rbx_6 = (var_138 + var_f8);\n                                        r13 = var_f8;\n                                        uint64_t rcx_14 = var_f8;\n                                        *rbx_6 = rbp;\n                                    label_40293f:\n                                        char* rax_62 = sub_408dd0(rcx_14, rbp, ((rbx_6 - rcx_14) + 1));\n                                        if (rbx_6 != rax_62)\n                                        {\n                                            r14_2 = (r14_2 + 1);\n                                            rcx_14 = &rax_62[1];\n                                            if (r14_2 < r15_1)\n                                            {\n                                                goto label_40293f;\n                                            }\n                                            char rdi_27 = r12_2;\n                                            var_140_1 = rcx_14;\n                                            r14_2 = 0;\n                                            r12_2 = 1;\n                                            sub_4049a0(rdi_27, r13, (rcx_14 - r13));\n                                            rcx_14 = var_140_1;\n                                            rbp = data_60e290;\n                                            r13 = rcx_14;\n                                            goto label_40293f;\n                                        }\n                                        if (rbx_6 != r13)\n                                        {\n                                            char rdi_50 = r12_2;\n                                            r12_2 = 0;\n                                            sub_4049a0(rdi_50, r13, (rbx_6 - r13));\n                                        }\n                                        if (var_138 != 0)\n                                        {\n                                            goto label_4028fc;\n                                        }\n                                        goto label_402fc7;\n                                    }\n                                    case 4:\n                                    {\n                                        if ((var_100 > var_140_1 || (var_100 <= var_140_1 && var_138 < var_140_1)))\n                                        {\n                                            __assert_fail(\"n && k <= n && n <= file_size\", \"src/split.c\", 0x361, \"lines_chunk_split\");\n                                            /* no return */\n                                        }\n                                        if ((var_100 <= var_140_1 && var_138 >= var_140_1))\n                                        {\n                                            r10_1 = (COMBINE(0, var_138) / var_140_1);\n                                            if (var_100 <= 1)\n                                            {\n                                                goto label_403641;\n                                            }\n                                            r12_1 = (var_100 - 1);\n                                            uint64_t rbx_10 = ((r10_1 * r12_1) - 1);\n                                            r13 = rbx_10;\n                                            if (rbp > rbx_10)\n                                            {\n                                                rbp = (rbp - rbx_10);\n                                                memmove(var_f8, (var_f8 + rbx_10), rbp);\n                                                var_130 = rbx_10;\n                                                goto label_402bcc;\n                                            }\n                                            uint64_t rsi_57 = (rbx_10 - rbp);\n                                            rbp = -1;\n                                            var_130 = rbx_10;\n                                            if (lseek(0, rsi_57, 1) >= 0)\n                                            {\n                                                goto label_402bcc;\n                                            }\n                                            error(1, *__errno_location(), \"%s\", sub_406e40(0, 3, data_60e5f0));\n                                        }\n                                        break;\n                                    }\n                                    case 5:\n                                    {\n                                        if (var_100 != 0)\n                                        {\n                                            goto label_402df9;\n                                        }\n                                        int64_t rax_86;\n                                        bool rdx_40;\n                                        rdx_40 = HIGHD((0x20 * var_140_1));\n                                        rax_86 = LOWD((0x20 * var_140_1));\n                                        uint64_t rdx_41 = ((0x20 * var_140_1) >> 0x40) != 0;\n                                        if (rax_86 < 0)\n                                        {\n                                            goto label_4037ab;\n                                        }\n                                        if (rdx_41 != 0)\n                                        {\n                                            goto label_4037ab;\n                                        }\n                                        rbp = 0;\n                                        uint64_t rax_87 = sub_407690((var_140_1 << 5));\n                                        var_108 = rax_87;\n                                        uint64_t rbx_14 = rax_87;\n                                    label_402dc1:\n                                        sub_403cc0();\n                                        rbp = (rbp + 1);\n                                        rbx_14 = (rbx_14 + 0x20);\n                                        int64_t rax_88 = sub_4078c0(data_60e618);\n                                        *(rbx_14 - 0x18) = 0xffffffff;\n                                        *(rbx_14 - 0x20) = rax_88;\n                                        *(rbx_14 - 0x10) = 0;\n                                        *(rbx_14 - 8) = 0;\n                                        if (rbp != var_140_1)\n                                        {\n                                            goto label_402dc1;\n                                        }\n                                    label_402df9:\n                                        var_130 = 0;\n                                        r12_1 = 1;\n                                        var_110 = 0;\n                                        var_128 = 0;\n                                        char var_f0_1 = 0;\n                                    label_402e23:\n                                        ssize_t rax_89 = sub_406fe0(0, var_f8, var_120);\n                                        if (rax_89 == -1)\n                                        {\n                                            goto label_403b73;\n                                        }\n                                        int64_t rbx_17;\n                                        if (rax_89 != 0)\n                                        {\n                                            int64_t rax_90 = (rax_89 + var_f8);\n                                            var_138 = rax_90;\n                                            if (var_f8 == rax_90)\n                                            {\n                                                goto label_402e23;\n                                            }\n                                            int64_t r15_2 = var_f8;\n                                        label_402e92:\n                                            rbp = (var_138 - r15_2);\n                                            char* rax_92 = sub_408dd0(r15_2, data_60e290, rbp);\n                                            if (rax_92 == 0)\n                                            {\n                                                rbx_7 = var_138;\n                                                r13 = 0;\n                                            }\n                                            else\n                                            {\n                                                rbx_7 = &rax_92[1];\n                                                r13 = 1;\n                                                rbp = (rbx_7 - r15_2);\n                                            }\n                                            uint64_t rax_96;\n                                            char rax_97;\n                                            uint64_t rax_116;\n                                            int64_t rax_121;\n                                            bool cond:31_1;\n                                            if (var_100 == 0)\n                                            {\n                                                int64_t r14_8 = var_130;\n                                                char rax_94;\n                                                rax_94 = sub_404500(var_108, r14_8, var_140_1);\n                                                r14_2 = ((r14_8 << 5) + var_108);\n                                                var_110 = (var_110 | rax_94);\n                                                var_118 = __errno_location();\n                                                if (data_60e540 != 0)\n                                                {\n                                                    cond:31_1 = rbp == sub_4052d0(*(r14_2 + 8), r15_2, rbp);\n                                                    rax_116 = var_118;\n                                                    if (((!cond:31_1) && (*rax_116 != 0x20 || (*rax_116 == 0x20 && data_60e760 == 0))))\n                                                    {\n                                                        error(1, *var_118, \"%s\", sub_406e40(0, 3, *r14_2));\n                                                    label_4031dc:\n                                                        if (sub_407e60(*(r14_2 + 0x10)) != 0)\n                                                        {\n                                                            r8_1 = error(1, *var_118, \"%s\", sub_406e40(0, 3, *r14_2));\n                                                            goto label_403818;\n                                                        }\n                                                        *(r14_2 + 0x10) = 0;\n                                                        *(r14_2 + 8) = 0xfffffffe;\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    rax_96 = fwrite_unlocked(r15_2, rbp, 1, *(r14_2 + 0x10));\n                                                    if (rax_96 == 1)\n                                                    {\n                                                        rax_96 = data_60e760 != 0;\n                                                        rax_97 = (rax_96 & *var_118 == 0x20);\n                                                    label_402f33:\n                                                        char rax_98 = var_128;\n                                                        if (rax_97 == 0)\n                                                        {\n                                                            rax_98 = 1;\n                                                        }\n                                                        var_128 = rax_98;\n                                                    }\n                                                }\n                                            }\n                                            else if ((var_100 == r12_1 && data_60e540 != 0))\n                                            {\n                                                rax_121 = sub_4052d0(1, r15_2, rbp);\n                                                if (rbp != rax_121)\n                                                {\n                                                    rbx_7 = dcgettext(nullptr, \"write error\", 5);\n                                                    rax_116 = error(1, *__errno_location(), \"%s\", rbx_7);\n                                                }\n                                            }\n                                            if (((((var_100 != 0 && var_100 == r12_1) && data_60e540 != 0) && rbp != rax_121) || ((var_100 == 0 && data_60e540 != 0) && cond:31_1)))\n                                            {\n                                                rax_116 = *rax_116 == 0x20;\n                                                rax_97 = (rax_116 & data_60e760 != 0);\n                                                goto label_402f33;\n                                            }\n                                            uint64_t rax_105;\n                                            if (((var_100 != 0 && var_100 == r12_1) && data_60e540 == 0))\n                                            {\n                                                rax_105 = fwrite_unlocked(r15_2, rbp, 1, stdout);\n                                                if (rax_105 != 1)\n                                                {\n                                                    clearerr_unlocked(stdout);\n                                                    rbx_7 = dcgettext(nullptr, \"write error\", 5);\n                                                    error(1, *__errno_location(), \"%s\", rbx_7);\n                                                }\n                                            }\n                                            if (((((var_100 != 0 && var_100 == r12_1) && data_60e540 == 0) && rax_105 != 1) || ((var_100 == 0 && data_60e540 == 0) && rax_96 != 1)))\n                                            {\n                                                if (*var_118 != 0x20)\n                                                {\n                                                label_4030c5:\n                                                    bool rdi_29;\n                                                    int64_t r8_14;\n                                                    rdi_29 = error(1, *var_118, \"%s\", sub_406e40(0, 3, *r14_2));\n                                                label_4030dc:\n                                                    var_110 = r8_14;\n                                                    sub_4049a0(rdi_29, var_130, r12_1);\n                                                    r13 = var_118;\n                                                    r8_14 = var_110;\n                                                    var_128 = var_120;\n                                                    if (r12_1 > var_120)\n                                                    {\n                                                        var_128 = var_120;\n                                                        var_130 = sub_4076f0(var_130, var_120);\n                                                        if (r8_14 != 0)\n                                                        {\n                                                            goto label_402a9a;\n                                                        }\n                                                    }\n                                                    else\n                                                    {\n                                                        uint64_t r12_3;\n                                                        int64_t temp10_1;\n                                                        while (r8_14 != 0)\n                                                        {\n                                                        label_402a9a:\n                                                            bool cond:20_1 = r13 == 0;\n                                                            int64_t rsi_16 = rbx_7;\n                                                            r12_3 = ((r8_14 - rbx_7) + 1);\n                                                            r13 = (r13 + r12_3);\n                                                            rbp = (rbp - r12_3);\n                                                            rbx_7 = (rbx_7 + r12_3);\n                                                            sub_4049a0(cond:20_1, rsi_16, r12_3);\n                                                            if (r14_2 == 0)\n                                                            {\n                                                                var_138 = rbp != 0;\n                                                                if (rbp == 0)\n                                                                {\n                                                                    break;\n                                                                }\n                                                                r15_2 = rbp;\n                                                            }\n                                                            else\n                                                            {\n                                                                temp10_1 = r15_2;\n                                                                r15_2 = (r15_2 - r12_3);\n                                                                var_138 = temp10_1 != r12_3;\n                                                                if (temp10_1 == r12_3)\n                                                                {\n                                                                    break;\n                                                                }\n                                                            }\n                                                            r12_1 = 0;\n                                                            while (true)\n                                                            {\n                                                                if ((var_128 - r12_1) < r15_2)\n                                                                {\n                                                                    if ((!var_120) < var_128)\n                                                                    {\n                                                                        break;\n                                                                    }\n                                                                    uint64_t rcx_16 = (var_128 + var_120);\n                                                                    var_128 = rcx_16;\n                                                                    var_130 = sub_4076f0(var_130, rcx_16);\n                                                                }\n                                                                int64_t rsi_19 = rbx_7;\n                                                                rbp = (rbp - r15_2);\n                                                                rbx_7 = (rbx_7 + r15_2);\n                                                                int64_t rdi_34 = (var_130 + r12_1);\n                                                                r12_1 = (r12_1 + r15_2);\n                                                                memcpy(rdi_34, rsi_19, r15_2);\n                                                            label_402b2e:\n                                                                char rdx_32 = var_138;\n                                                                bool cond:16_1 = r14_2 != 0;\n                                                                if (r14_2 != 0)\n                                                                {\n                                                                    rdx_32 = 0;\n                                                                }\n                                                                if (cond:16_1)\n                                                                {\n                                                                    r13 = 0;\n                                                                }\n                                                                var_138 = rdx_32;\n                                                            label_402a46:\n                                                                if (rbp == 0)\n                                                                {\n                                                                    goto label_4029bc;\n                                                                }\n                                                            label_402a54:\n                                                                uint64_t rax_65 = (r12_1 + r13);\n                                                                int32_t rsi_15 = data_60e290;\n                                                                var_118 = rax_65;\n                                                                r15_2 = (var_140_1 - rax_65);\n                                                                if (rbp >= r15_2)\n                                                                {\n                                                                    r14_2 = ((rbx_7 + r15_2) - 1);\n                                                                    r8_14 = memrchr(rbx_7, rsi_15, r15_2);\n                                                                    if (r12_1 == 0)\n                                                                    {\n                                                                        break;\n                                                                    }\n                                                                }\n                                                                else\n                                                                {\n                                                                    r14_2 = 0;\n                                                                    r15_2 = 0;\n                                                                    r8_14 = memrchr(rbx_7, rsi_15, rbp);\n                                                                    if (r12_1 == 0)\n                                                                    {\n                                                                        break;\n                                                                    }\n                                                                }\n                                                                rdi_29 = r13 == 0;\n                                                                if (r8_14 != 0)\n                                                                {\n                                                                    goto label_4030dc;\n                                                                }\n                                                                if (rdi_29 != 0)\n                                                                {\n                                                                    goto label_4030dc;\n                                                                }\n                                                            label_402a15:\n                                                                if (var_138 == 0)\n                                                                {\n                                                                    bool rdi_30 = r13 == 0;\n                                                                    if (r14_2 == 0)\n                                                                    {\n                                                                        r13 = (r13 + rbp);\n                                                                        sub_4049a0(rdi_30, rbx_7, rbp);\n                                                                        goto label_4029bc;\n                                                                    }\n                                                                    int64_t rsi_14 = rbx_7;\n                                                                    rbp = (rbp - r15_2);\n                                                                    rbx_7 = (rbx_7 + r15_2);\n                                                                    sub_4049a0(rdi_30, rsi_14, r15_2);\n                                                                    r13 = 0;\n                                                                    goto label_402a46;\n                                                                }\n                                                                if ((r14_2 != 0 && r15_2 != 0))\n                                                                {\n                                                                    continue;\n                                                                }\n                                                                if (r14_2 != 0)\n                                                                {\n                                                                    goto label_402b2e;\n                                                                }\n                                                                if (rbp == 0)\n                                                                {\n                                                                    goto label_402b2e;\n                                                                }\n                                                                r15_2 = rbp;\n                                                            }\n                                                            if (((var_128 - r12_1) < r15_2 && (!var_120) < var_128))\n                                                            {\n                                                                break;\n                                                            }\n                                                        }\n                                                        if (((r8_14 != 0 && r14_2 == 0) && rbp == 0))\n                                                        {\n                                                            r12_1 = 0;\n                                                            var_138 = 1;\n                                                            goto label_402a46;\n                                                        }\n                                                        if (r8_14 != 0)\n                                                        {\n                                                            if ((!((r8_14 != 0 && r14_2 != 0) && temp10_1 == r12_3)))\n                                                            {\n                                                            label_4037ab:\n                                                                sub_4078e0();\n                                                                /* no return */\n                                                            }\n                                                            goto label_403bc7;\n                                                        }\n                                                    }\n                                                    r12_1 = 0;\n                                                    goto label_402a15;\n                                                }\n                                                if (data_60e760 == 0)\n                                                {\n                                                    goto label_4030c5;\n                                                }\n                                            }\n                                            if (((((((((var_100 == 0 && data_60e540 != 0) && (!cond:31_1)) && *rax_116 == 0x20) && data_60e760 != 0) || ((var_100 == 0 && data_60e540 == 0) && rax_96 == 1)) || (((((var_100 != 0 && var_100 == r12_1) && data_60e540 == 0) && rax_105 != 1) || ((var_100 == 0 && data_60e540 == 0) && rax_96 != 1)) && *var_118 == 0x20)) && var_110 == 0) || (((var_100 == 0 && data_60e540 != 0) && (!cond:31_1)) && (*rax_116 != 0x20 || (*rax_116 == 0x20 && data_60e760 == 0)))))\n                                            {\n                                                if (r13 == 0)\n                                                {\n                                                    goto label_402e7a;\n                                                }\n                                                var_130 = (var_130 + 1);\n                                                if (var_130 != var_140_1)\n                                                {\n                                                    goto label_402e7a;\n                                                }\n                                                if (var_128 != 0)\n                                                {\n                                                    var_130 = 0;\n                                                    char rax_100 = var_128;\n                                                    var_128 = 0;\n                                                    var_f0_1 = rax_100;\n                                                label_402e7a:\n                                                    r15_2 = rbx_7;\n                                                    if (var_138 == rbx_7)\n                                                    {\n                                                        goto label_402e23;\n                                                    }\n                                                    goto label_402e92;\n                                                }\n                                            }\n                                            if ((((((((var_100 == 0 && data_60e540 != 0) && (!cond:31_1)) && *rax_116 == 0x20) && data_60e760 != 0) || ((var_100 == 0 && data_60e540 == 0) && rax_96 == 1)) || (((((var_100 != 0 && var_100 == r12_1) && data_60e540 == 0) && rax_105 != 1) || ((var_100 == 0 && data_60e540 == 0) && rax_96 != 1)) && *var_118 == 0x20)) && var_110 != 0))\n                                            {\n                                                goto label_4031dc;\n                                            }\n                                            if ((var_100 != 0 && ((var_100 != r12_1 || ((var_100 == r12_1 && data_60e540 != 0) && rbp == rax_121)) || ((var_100 == r12_1 && data_60e540 == 0) && rax_105 == 1))))\n                                            {\n                                                if (r13 == 0)\n                                                {\n                                                    goto label_402e7a;\n                                                }\n                                                uint64_t rax_91 = (r12_1 + 1);\n                                                bool cond:32_1 = var_140_1 != r12_1;\n                                                r12_1 = 1;\n                                                if (cond:32_1)\n                                                {\n                                                    r12_1 = rax_91;\n                                                }\n                                                goto label_402e7a;\n                                            }\n                                        }\n                                        else\n                                        {\n                                            if (var_100 != 0)\n                                            {\n                                                goto label_402fc7;\n                                            }\n                                            if (var_f0_1 == 0)\n                                            {\n                                                rbx_17 = var_130;\n                                            label_40335c:\n                                                uint64_t rbp_6 = var_108;\n                                                int64_t r12_6 = 0;\n                                            label_40339a:\n                                                if ((rbx_17 <= r12_6 && data_60e541 == 0))\n                                                {\n                                                    r12_6 = sub_404500(var_108, r12_6, var_140_1);\n                                                }\n                                                int32_t rsi_43 = *(rbp_6 + 8);\n                                                if (rsi_43 >= 0)\n                                                {\n                                                    sub_4046f0(*(rbp_6 + 0x10), rsi_43, *(rbp_6 + 0x18), *rbp_6);\n                                                }\n                                                r12_6 = (r12_6 + 1);\n                                                *(rbp_6 + 8) = 0xfffffffe;\n                                                rbp_6 = (rbp_6 + 0x20);\n                                                if (r12_6 != var_140_1)\n                                                {\n                                                    goto label_40339a;\n                                                }\n                                                goto label_402fc7;\n                                            }\n                                        }\n                                        rbx_17 = var_140_1;\n                                        goto label_40335c;\n                                    }\n                                }\n                                if ((r13 == 0 || r13 == 4))\n                                {\n                                    sub_4049a0(r13 == 0, var_130, r12_1);\n                                label_4032fd:\n                                    free(var_130);\n                                    goto label_402fc7;\n                                }\n                            }\n                            else\n                            {\n                                r12_1 = 0;\n                                char* rax_55 = lseek(0, 0, 1);\n                                rbx_4 = rax_55;\n                                if (rax_55 < 0)\n                                {\n                                    goto label_4039e2;\n                                }\n                                r14_2 = var_f8;\n                            label_402898:\n                                ssize_t rax_57 = sub_406fe0(0, (r14_2 + r12_1), (var_120 - r12_1));\n                                void* r14_11;\n                                if ((rax_57 != 0 && rax_57 != -1))\n                                {\n                                    rax_56 = (rax_57 + r12_1);\n                                    r12_1 = rax_56;\n                                    if (var_120 > rax_56)\n                                    {\n                                        goto label_402898;\n                                    }\n                                label_40357b:\n                                    r14_11 = data_60e590;\n                                    if (r14_11 != 0)\n                                    {\n                                        void* rbx_21 = &rbx_4[rax_56];\n                                        if ((data_60e578 & 0xd000) != 0x8000)\n                                        {\n                                        label_4035ad:\n                                            void* rax_143 = lseek(0, 0, 2);\n                                            r14_11 = rax_143;\n                                            if (rax_143 < 0)\n                                            {\n                                                goto label_40361d;\n                                            }\n                                            if (rbx_21 == rax_143)\n                                            {\n                                                goto label_4035e1;\n                                            }\n                                            if (lseek(0, rbx_21, 0) < 0)\n                                            {\n                                                goto label_40361d;\n                                            }\n                                            if (r14_11 < rbx_21)\n                                            {\n                                                r14_11 = rbx_21;\n                                            }\n                                            goto label_4035e1;\n                                        }\n                                        if (r14_11 < rbx_21)\n                                        {\n                                            goto label_4035ad;\n                                        }\n                                    label_4035e1:\n                                        r14_2 = (r14_11 - rbx_21);\n                                        r12_1 = (r14_2 + rax_56);\n                                        if (r12_1 == 0x7fffffffffffffff)\n                                        {\n                                            goto label_4035f8;\n                                        }\n                                    }\n                                    else\n                                    {\n                                    label_4035f8:\n                                        *__errno_location() = 0x4b;\n                                    label_40361d:\n                                        rbp = sub_406e40(0, 3, data_60e5f0);\n                                        r10_1 = error(1, *__errno_location(), dcgettext(nullptr, \"%s: cannot determine file size\", 5), rbp);\n                                    label_403641:\n                                        r13 = (r10_1 - 1);\n                                        r12_1 = 1;\n                                        var_130 = 0;\n                                    label_402bcc:\n                                        var_d9 = false;\n                                        r14_2 = var_100;\n                                        var_128 = 1;\n                                        r15 = r10_1;\n                                        rax_78 = rbp;\n                                        r11_1 = (var_138 - 1);\n                                    label_402bf3:\n                                        if (var_138 <= var_130)\n                                        {\n                                        label_4037b5:\n                                            int64_t r12_8 = (r12_1 - -1);\n                                            if (var_100 == 0)\n                                            {\n                                                while (r12_8 <= var_140_1)\n                                                {\n                                                    r12_8 = (r12_8 + 1);\n                                                    sub_4049a0(1, 0, 0);\n                                                }\n                                            }\n                                            goto label_402fc7;\n                                        }\n                                        if (rax_78 == -1)\n                                        {\n                                            goto label_403724;\n                                        }\n                                    }\n                                }\n                                if (rax_57 == -1)\n                                {\n                                    goto label_40361d;\n                                }\n                                if ((rax_57 == 0 || ((rax_57 != 0 && rax_57 != -1) && r14_11 != 0)))\n                                {\n                                    if (r12_1 >= 0)\n                                    {\n                                        rbp = var_120;\n                                        if (r12_1 <= var_120)\n                                        {\n                                            rbp = r12_1;\n                                        }\n                                        if (var_140_1 < 0)\n                                        {\n                                            rbx_26 = sub_406fc0(sub_405350(var_140_1, &var_d8));\n                                            rdx_78 = error(1, 0x4b, \"%s: %s\", dcgettext(nullptr, \"invalid number of chunks\", 5), rbx_26);\n                                            goto label_4038f3;\n                                        }\n                                        if (r12_1 < var_140_1)\n                                        {\n                                            r12_1 = var_140_1;\n                                        }\n                                        var_138 = r12_1;\n                                        goto label_40268d;\n                                    }\n                                    goto label_40361d;\n                                }\n                            }\n                            if ((((((((((r12_1 > 1 && r13 <= 5) && r13 == 3) && var_100 != 0) && var_100 <= var_140_1) && var_138 >= var_140_1) && rbp <= rsi_48) && rax_154 < 0) && rax_78 != -1) || r12_1 <= 1))\n                            {\n                                if (rax_78 != 0)\n                                {\n                                    ssize_t rdx_37 = (var_138 - var_130);\n                                    var_d9 = false;\n                                    r10_2 = r15;\n                                    rbp = var_f8;\n                                    rbx_12 = var_128;\n                                    if (rdx_37 <= rax_78)\n                                    {\n                                        rax_78 = rdx_37;\n                                    }\n                                    r8_16 = var_140_1;\n                                    var_e8_1 = rax_78;\n                                    r15 = (rbp + rax_78);\n                                    break;\n                                }\n                                goto label_4037b5;\n                            }\n                        }\n                    }\n                    rsi_65 = \"extra operand %s\";\n                    rbx_26 = sub_406fc0(*((rbx + rsi_3) + 0x10));\n                    goto label_403885;\n                }\n            label_402c47:\n                rax_78 = -1;\n                if (r15 == rbp)\n                {\n                    var_128 = rbx_12;\n                    r15 = r10_2;\n                    goto label_402bf3;\n                }\n                ssize_t rax_80 = (r13 - var_130);\n                if ((r13 - var_130) < 0)\n                {\n                    rax_80 = 0;\n                }\n                int32_t rsi_22 = data_60e290;\n                var_110 = r11_1;\n                if (rax_80 > var_e8_1)\n                {\n                    rax_80 = var_e8_1;\n                }\n                char* rax_81 = sub_408dd0((rbp + rax_80), rsi_22, (var_e8_1 - rax_80));\n                r11_1 = var_110;\n                char var_da_1;\n                uint64_t rcx_19;\n                if (rax_81 == 0)\n                {\n                    rcx_19 = r15;\n                    var_da_1 = 0;\n                }\n                else\n                {\n                    var_da_1 = 1;\n                    rcx_19 = &rax_81[1];\n                }\n                uint64_t rax_83 = (rcx_19 - rbp);\n                var_128 = rax_83;\n                char var_f0;\n                bool cond:29_1;\n                if (r12_1 == r14_2)\n                {\n                    var_f0 = r11_1;\n                    var_110 = r8_16;\n                    var_118 = rcx_19;\n                    rcx_19 = var_118;\n                    r8_16 = var_110;\n                    cond:29_1 = rax_83 == sub_4052d0(1, rbp, rax_83);\n                    r10_2 = r10_2;\n                    r11_1 = var_f0;\n                    if ((!cond:29_1))\n                    {\n                        error(1, *__errno_location(), \"%s\", dcgettext(nullptr, \"write error\", 5));\n                        goto label_403439;\n                    }\n                }\n                if ((r12_1 != r14_2 && r14_2 == 0))\n                {\n                    var_f0 = r11_1;\n                    var_110 = r8_16;\n                    sub_4049a0(rbx_12, rbp, var_128);\n                    r11_1 = var_f0;\n                    r10_2 = r10_2;\n                    r8_16 = var_110;\n                }\n                if ((((r12_1 != r14_2 && r14_2 == 0) || (r12_1 == r14_2 && cond:29_1)) || (r12_1 != r14_2 && r14_2 != 0)))\n                {\n                    int64_t rbp_3 = (var_130 + var_128);\n                    var_130 = rbp_3;\n                    char rbx_13 = var_da_1;\n                label_402cf0:\n                    bool rax_85;\n                    if ((rbp_3 > r13 || (rbp_3 <= r13 && rbx_13 != 0)))\n                    {\n                        rax_85 = ((rbx_13 ^ 1) & r15 == rcx_19);\n                        if (rax_85 == 0)\n                        {\n                            r12_1 = (r12_1 + 1);\n                            if ((r14_2 != 0 & r12_1 > r14_2) != 0)\n                            {\n                            label_402fc7:\n                                if (close(0) == 0)\n                                {\n                                    sub_4046f0(nullptr, data_60e294, data_60e758, data_60e618);\n                                    return 0;\n                                }\n                                error(1, *__errno_location(), \"%s\", sub_406e40(0, 3, data_60e5f0));\n                            label_403a40:\n                                __assert_fail(\"k && n && k <= n && n <= file_si\u2026\", \"src/split.c\", 0x3df, \"bytes_chunk_extract\");\n                                /* no return */\n                            }\n                            r13 = (r13 + r10_2);\n                            if (r12_1 == r8_16)\n                            {\n                                r13 = r11_1;\n                            }\n                            if (rbp_3 <= r13)\n                            {\n                                rbx_13 = 0;\n                            }\n                            if ((rbp_3 > r13 && r14_2 == 0))\n                            {\n                                var_f0 = r11_1;\n                                var_108 = r10_2;\n                                var_110 = r8_16;\n                                sub_4049a0(1, 0, 0);\n                            }\n                        }\n                    }\n                    if ((rbp_3 <= r13 && rbx_13 == 0))\n                    {\n                        rax_85 = var_d9;\n                    }\n                    if (((rbp_3 <= r13 && rbx_13 == 0) || ((rbp_3 > r13 || (rbp_3 <= r13 && rbx_13 != 0)) && rax_85 != 0)))\n                    {\n                        var_e8_1 = (var_e8_1 - var_128);\n                        var_d9 = rax_85;\n                    }\n                }\n            }\n        }\n        else\n        {\n            bool cond:0_1 = rax_2 <= 0x65;\n            if (rax_2 == 0x65)\n            {\n                data_60e541 = 1;\n                continue;\n            }\n            else\n            {\n                char const* const rsi_1;\n                if ((!cond:0_1))\n                {\n                    bool cond:1_1 = rax_2 > 0x78;\n                    char* rax_170;\n                    if (rax_2 == 0x78)\n                    {\n                        rsi_1 = \"0123456789abcdef\";\n                    label_40219e:\n                        int64_t r14_3 = data_60e908;\n                        var_130 = r8_1;\n                        data_60e298 = rsi_1;\n                        if (r14_3 == 0)\n                        {\n                            continue;\n                        }\n                        else\n                        {\n                            int64_t rcx_1 = -1;\n                            int64_t rdi_7 = r14_3;\n                            while (rcx_1 != 0)\n                            {\n                                bool cond:3_1 = 0 != *rdi_7;\n                                rdi_7 = (rdi_7 + 1);\n                                rcx_1 = (rcx_1 - 1);\n                                if ((!cond:3_1))\n                                {\n                                    break;\n                                }\n                            }\n                            var_128 = ((!rcx_1) - 1);\n                            if (var_128 != strspn(r14_3, rsi_1))\n                            {\n                                var_140_1 = var_130;\n                                rdx_78 = 5;\n                                rsi_65 = \"%s: invalid start value for hexa\u2026\";\n                                rbx_26 = sub_406fc0(r14_3);\n                                if (var_140_1 != 0x64)\n                                {\n                                    goto label_403885;\n                                }\n                            label_4038f3:\n                                rax_170 = dcgettext(nullptr, \"%s: invalid start value for nume\u2026\", rdx_78);\n                            label_403896:\n                                error(0, 0, rax_170, rbx_26);\n                                sub_404cf0(1);\n                                /* no return */\n                            }\n                            if (*r14_3 == 0x30)\n                            {\n                                int64_t rax_14 = (r14_3 + 1);\n                                if (*(r14_3 + 1) != 0)\n                                {\n                                    do\n                                    {\n                                        data_60e908 = rax_14;\n                                        r14_3 = rax_14;\n                                        if (*rax_14 != 0x30)\n                                        {\n                                            break;\n                                        }\n                                        rax_14 = (rax_14 + 1);\n                                    } while (*rax_14 != 0);\n                                }\n                            }\n                            data_60e600 = r14_3;\n                            continue;\n                        }\n                    }\n                    else\n                    {\n                        if ((!cond:1_1))\n                        {\n                            bool cond:6_1 = rax_2 <= 0x6e;\n                            if (rax_2 != 0x6e)\n                            {\n                                if (cond:6_1)\n                                {\n                                    if (rax_2 != 0x6c)\n                                    {\n                                        break;\n                                    }\n                                    if (r13 == 0)\n                                    {\n                                        r13 = 3;\n                                        var_140_1 = sub_4079f0(data_60e908, 1, -1, &data_40c284[0x1b], dcgettext(nullptr, \"invalid number of lines\", 5), 0);\n                                        continue;\n                                    }\n                                    goto label_403854;\n                                }\n                                if (rax_2 == 0x74)\n                                {\n                                    r14_2 = data_60e908;\n                                    int32_t rax_3 = *r14_2;\n                                    if (rax_3 == 0)\n                                    {\n                                        error(1, 0, dcgettext(nullptr, \"empty record separator\", 5));\n                                    label_403b42:\n                                        error(1, *__errno_location(), \"%s\", sub_406e40(0, 3, data_60e5f0));\n                                    label_403b73:\n                                        error(1, *__errno_location(), \"%s\", sub_406e40(0, 3, data_60e5f0));\n                                    label_403ba9:\n                                        rbx_7 = sub_406e40(0, 3, data_60e5f0);\n                                        error(1, *__errno_location(), \"%s\", rbx_7);\n                                    label_403bc7:\n                                        var_138 = 1;\n                                        r12_1 = 0;\n                                        goto label_402b2e;\n                                    }\n                                    int32_t rax_4;\n                                    if (*(r14_2 + 1) != 0)\n                                    {\n                                        rax_4 = strcmp(r14_2, &data_409be9);\n                                        if (rax_4 == 0)\n                                        {\n                                            rax_3 = 0;\n                                        }\n                                    }\n                                    if (((*(r14_2 + 1) != 0 && rax_4 == 0) || *(r14_2 + 1) == 0))\n                                    {\n                                        int32_t rdx_1 = data_60e290;\n                                        if ((rdx_1 < 0 || (rdx_1 >= 0 && rdx_1 == rax_3)))\n                                        {\n                                            data_60e290 = rax_3;\n                                            continue;\n                                        }\n                                        if ((rdx_1 >= 0 && rdx_1 != rax_3))\n                                        {\n                                            error(1, 0, dcgettext(nullptr, \"multiple separator characters sp\u2026\", 5));\n                                        }\n                                    }\n                                    error(1, 0, dcgettext(nullptr, \"multi-character separator %s\", 5), sub_406fc0(r14_2));\n                                }\n                                else\n                                {\n                                    if (rax_2 != 0x75)\n                                    {\n                                        break;\n                                    }\n                                    data_60e540 = 1;\n                                    continue;\n                                }\n                            }\n                            else\n                            {\n                                if (r13 == 0)\n                                {\n                                    uint16_t* rcx_4 = *__ctype_b_loc();\n                                    int64_t rax_23 = data_60e908;\n                                    int64_t r14_4;\n                                    bool c_1;\n                                    bool z_1;\n                                    while (true)\n                                    {\n                                        r14_4 = rax_23;\n                                        rax_23 = (rax_23 + 1);\n                                        c_1 = false;\n                                        z_1 = (*(&rcx_4[*r14_4] + 1) & 0x20) == 0;\n                                        if (z_1)\n                                        {\n                                            break;\n                                        }\n                                        data_60e908 = rax_23;\n                                    }\n                                    void* const rdi_12 = &data_409b9e;\n                                    int64_t rcx_5 = 2;\n                                    int64_t rsi_2 = r14_4;\n                                    while (rcx_5 != 0)\n                                    {\n                                        char temp4_1 = *rsi_2;\n                                        char temp5_1 = *rdi_12;\n                                        c_1 = temp4_1 < temp5_1;\n                                        z_1 = temp4_1 == temp5_1;\n                                        rsi_2 = (rsi_2 + 1);\n                                        rdi_12 = (rdi_12 + 1);\n                                        rcx_5 = (rcx_5 - 1);\n                                        if ((!z_1))\n                                        {\n                                            break;\n                                        }\n                                    }\n                                    rax_23 = ((!z_1) && (!c_1));\n                                    rax_23 = (rax_23 - 0);\n                                    if (rax_23 == 0)\n                                    {\n                                        r13 = 7;\n                                        data_60e908 = (r14_4 + 2);\n                                    }\n                                    else\n                                    {\n                                        r13 = 5;\n                                        if (strncmp(r14_4, &data_409ba1, 2) == 0)\n                                        {\n                                            r13 = 6;\n                                            data_60e908 = (r14_4 + 2);\n                                        }\n                                    }\n                                    char* rax_24 = strchr(data_60e908, 0x2f);\n                                    if (rax_24 == 0)\n                                    {\n                                        var_140_1 = sub_4079f0(data_60e908, 1, -1, &data_40c284[0x1b], dcgettext(nullptr, \"invalid number of chunks\", 5), 0);\n                                        continue;\n                                    }\n                                    else\n                                    {\n                                        var_140_1 = sub_4079f0(&rax_24[1], 1, -1, &data_40c284[0x1b], dcgettext(nullptr, \"invalid number of chunks\", 5), 0);\n                                        if (rax_24 == data_60e908)\n                                        {\n                                            continue;\n                                        }\n                                        else\n                                        {\n                                            *rax_24 = 0;\n                                            var_100 = sub_4079f0(data_60e908, 1, var_140_1, &data_40c284[0x1b], dcgettext(nullptr, \"invalid chunk number\", 5), 0);\n                                            continue;\n                                        }\n                                    }\n                                }\n                            label_403854:\n                                rsi_4 = \"cannot split in more than one wa\u2026\";\n                            }\n                        }\n                        else\n                        {\n                            bool cond:5_1 = rax_2 <= 0x81;\n                            if (rax_2 == 0x81)\n                            {\n                                data_60e760 = data_60e908;\n                                continue;\n                            }\n                            else if (cond:5_1)\n                            {\n                                if (rax_2 != 0x80)\n                                {\n                                    break;\n                                }\n                                data_60e542 = 1;\n                                continue;\n                            }\n                            else if (rax_2 == 0x82)\n                            {\n                                var_120 = sub_4079f0(data_60e908, 1, (!var_138), \"bEGKkMmPTYZ0\", dcgettext(nullptr, \"invalid IO block size\", 5), 0);\n                                continue;\n                            }\n                            else\n                            {\n                                if (rax_2 != 0x83)\n                                {\n                                    break;\n                                }\n                                r14_2 = data_60e908;\n                                if (r14_2 == sub_405180(r14_2))\n                                {\n                                    data_60e5f8 = r14_2;\n                                    continue;\n                                }\n                            }\n                        }\n                        if ((cond:1_1 || ((!cond:1_1) && rax_2 != 0x6e)))\n                        {\n                            rsi_65 = \"invalid suffix %s, contains dire\u2026\";\n                            rbx_26 = sub_406fc0(r14_2);\n                        label_403885:\n                            rax_170 = dcgettext(nullptr, rsi_65, 5);\n                            goto label_403896;\n                        }\n                    }\n                }\n                else\n                {\n                    if (rax_2 <= 0x39)\n                    {\n                        if (rax_2 < 0x30)\n                        {\n                            if (rax_2 == 0xffffff7d)\n                            {\n                                int64_t var_158 = 0;\n                                sub_407550(stdout, \"split\", \"GNU coreutils\", data_60e2a8);\n                                exit(0);\n                                /* no return */\n                            }\n                            if (rax_2 == 0xffffff7e)\n                            {\n                                sub_404cf0(0);\n                                /* no return */\n                            }\n                            break;\n                        }\n                        if ((r13 == 0 || ((r13 == 4 && r15 != 0) && r15 != r14_1)))\n                        {\n                            r15 = r14_1;\n                            r13 = 4;\n                            var_140_1 = (r8_1 - 0x30);\n                            continue;\n                        }\n                        if (((r15 == 0 || (r15 != 0 && r15 == r14_1)) && r13 == 4))\n                        {\n                            if (var_140_1 <= 0x1999999999999999)\n                            {\n                                uint64_t rax_44 = ((var_140_1 * 0xa) + (r8_1 - 0x30));\n                                if (rax_44 >= var_140_1)\n                                {\n                                    var_140_1 = rax_44;\n                                    r15 = r14_1;\n                                    continue;\n                                }\n                            }\n                        label_403818:\n                            var_138 = r8_1;\n                            error(1, 0, dcgettext(nullptr, \"line count option -%s%c... is to\u2026\", 5), sub_405350(var_140_1, &var_d8), var_138);\n                        }\n                        goto label_403854;\n                    }\n                    bool cond:2_1 = rax_2 <= 0x61;\n                    if (rax_2 != 0x61)\n                    {\n                        if ((!cond:2_1))\n                        {\n                            if (rax_2 != 0x62)\n                            {\n                                if (rax_2 != 0x64)\n                                {\n                                    break;\n                                }\n                                rsi_1 = \"0123456789\";\n                                goto label_40219e;\n                            }\n                            if (r13 == 0)\n                            {\n                                r13 = 1;\n                                var_140_1 = sub_4079f0(data_60e908, 1, 0x7fffffffffffffff, \"bEGKkMmPTYZ0\", dcgettext(nullptr, \"invalid number of bytes\", 5), 0);\n                                continue;\n                            }\n                            goto label_403854;\n                        }\n                        if (rax_2 != 0x43)\n                        {\n                            break;\n                        }\n                        if (r13 == 0)\n                        {\n                            r13 = 2;\n                            var_140_1 = sub_4079f0(data_60e908, 1, 0x7fffffffffffffff, \"bEGKkMmPTYZ0\", dcgettext(nullptr, \"invalid number of bytes\", 5), 0);\n                            continue;\n                        }\n                        goto label_403854;\n                    }\n                    data_60e608 = sub_4079f0(data_60e908, 0, 0x1fffffffffffffff, &data_40c284[0x1b], dcgettext(nullptr, \"invalid suffix length\", 5), 0);\n                    continue;\n                }\n            }\n        }\n    label_403790:\n        error(0, 0, dcgettext(nullptr, rsi_4, 5));\n        break;\n    }\n    sub_404cf0(1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x403be0",
            "funcEndAddr": "0x403c0a",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_403c0b",
            "funcStartAddr": "0x403c0b",
            "funcEndAddr": "0x403c2a",
            "decompiledFuncCode": "void sub_403c0b()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_403c2a",
            "funcStartAddr": "0x403c2a",
            "funcEndAddr": "0x403c61",
            "decompiledFuncCode": "int64_t sub_403c2a()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_403c61",
            "funcStartAddr": "0x403c61",
            "funcEndAddr": "0x403cb8",
            "decompiledFuncCode": "void sub_403c61()\n{\n    if (data_60e508 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_60e510;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_60e510 = (rax_1 + 1);\n        *(0x60de40 + ((rax_1 + 1) << 3))();\n    }\n    sub_403c0b();\n    data_60e508 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_403cb8",
            "funcStartAddr": "0x403cb8",
            "funcEndAddr": "0x403cbd",
            "decompiledFuncCode": "int64_t j_sub_403c2a()\n{\n    /* tailcall */\n    return sub_403c2a();\n}\n\n"
        },
        {
            "funcName": "sub_403cc0",
            "funcStartAddr": "0x403cc0",
            "funcEndAddr": "0x403fb9",
            "decompiledFuncCode": "uint64_t sub_403cc0()\n{\n    int64_t rbp = data_60e618;\n    int64_t rbx = data_60e608;\n    uint64_t rax_1;\n    if (rbp != 0)\n    {\n        rax_1 = (rbx - 1);\n        if (rbx == 0)\n        {\n            goto label_403f9b;\n        }\n        int64_t* r9_1 = data_60e520;\n        char r8_1 = data_60e2a0;\n        char* rsi_1 = data_60e298;\n        char* rdi_1 = data_60e610;\n        int64_t* rcx_1 = &r9_1[(rbx - 1)];\n        int64_t rdx_4;\n        do\n        {\n            rdx_4 = (*rcx_1 + 1);\n            *rcx_1 = rdx_4;\n            if ((rax_1 == 0 && r8_1 != 0))\n            {\n                break;\n            }\n            char rdx_1 = rsi_1[rdx_4];\n            rdi_1[rax_1] = rdx_1;\n            if (rdx_1 != 0)\n            {\n                return rax_1;\n            }\n            *rcx_1 = 0;\n            rcx_1 = (rcx_1 - 8);\n            rdi_1[rax_1] = *rsi_1;\n            rax_1 = (rax_1 - 1);\n        } while (rax_1 != -1);\n        if ((!(rax_1 == 0 && r8_1 != 0)))\n        {\n            goto label_403f9b;\n        }\n        if (rsi_1[(*r9_1 + 1)] != 0)\n        {\n            rax_1 = rsi_1[rdx_4];\n            *rdi_1 = rax_1;\n            if (rax_1 != 0)\n            {\n            label_403d78:\n                return rax_1;\n            }\n            *rcx_1 = 0;\n            *rdi_1 = *rsi_1;\n        label_403f9b:\n            error(1, 0, dcgettext(nullptr, \"output file suffixes exhausted\", 5));\n        label_403fb4:\n            __assert_fail(\"! widen\", \"src/split.c\", 0x198, \"next_file_name\");\n            /* no return */\n        }\n    }\n    int64_t r12_1 = data_60e538;\n    uint64_t rax_3;\n    char* rax_7;\n    uint64_t rbx_2;\n    char* rbp_1;\n    size_t rsi_2;\n    int64_t* r13_2;\n    bool cond:0_1;\n    if (r12_1 != 0)\n    {\n        size_t rsi_4 = (r12_1 + 3);\n        cond:0_1 = rsi_4 < data_60e530;\n        data_60e538 = (r12_1 + 2);\n        data_60e608 = (rbx + 1);\n        if ((!cond:0_1))\n        {\n            char* rax_9 = sub_4076f0(rbp, rsi_4);\n            r13_2 = data_60e520;\n            int64_t rcx_2 = data_60e530;\n            rbp_1 = rax_9;\n            data_60e618 = rax_9;\n            rax_7 = data_60e298;\n            int64_t rdx_6 = *r13_2;\n            rbx_2 = (rcx_2 + 1);\n            data_60e530 = rbx_2;\n            rbp_1[rcx_2] = rax_7[rdx_6];\n        }\n    }\n    else\n    {\n        rax_3 = strlen(data_60e620);\n        char* rdi_3 = data_60e5f8;\n        data_60e530 = rax_3;\n        uint64_t rax_4 = 0;\n        if (rdi_3 != 0)\n        {\n            rax_4 = strlen(rdi_3);\n        }\n        data_60e528 = rax_4;\n        int64_t rax_5 = (rax_4 + (rbx + rax_3));\n        rsi_2 = (rax_5 + 1);\n        data_60e538 = rax_5;\n    }\n    if (((r12_1 != 0 && cond:0_1) || (r12_1 == 0 && rax_3 > rsi_2)))\n    {\n        sub_4078e0();\n        /* no return */\n    }\n    if ((r12_1 == 0 && rax_3 <= rsi_2))\n    {\n        char* rax_6 = sub_4076f0(rbp, rsi_2);\n        rbx_2 = data_60e530;\n        int64_t rsi_3 = data_60e620;\n        rbp_1 = rax_6;\n        data_60e618 = rax_6;\n        memcpy(rax_6, rsi_3, rbx_2);\n        rax_7 = data_60e298;\n        r13_2 = data_60e520;\n    }\n    if (((r12_1 != 0 && (!cond:0_1)) || (r12_1 == 0 && rax_3 <= rsi_2)))\n    {\n        void* rcx_3 = &rbp_1[rbx_2];\n        size_t rbx_4 = data_60e608;\n        int32_t rsi_5 = *rax_7;\n        data_60e610 = rcx_3;\n        int64_t rax_10 = memset(rcx_3, rsi_5, rbx_4);\n        int64_t rsi_6 = data_60e5f8;\n        if (rsi_6 != 0)\n        {\n            memcpy((rax_10 + rbx_4), rsi_6, data_60e528);\n        }\n        rbp_1[data_60e538] = 0;\n        free(r13_2);\n        rax_1 = sub_407860(rbx_4, 8);\n        char* r13_3 = data_60e600;\n        uint64_t rbx_5 = rax_1;\n        data_60e520 = rax_1;\n        if (r13_3 == 0)\n        {\n            goto label_403d78;\n        }\n        if (r12_1 != 0)\n        {\n            goto label_403fb4;\n        }\n        uint64_t rax_12 = strlen(r13_3);\n        int64_t r12_2 = data_60e608;\n        int64_t r12_3 = (r12_2 << 3);\n        rax_1 = memcpy(((r12_2 - rax_12) + data_60e610), r13_3, rax_12);\n        int64_t rcx_4 = (rax_12 - 1);\n        if (rax_12 != 0)\n        {\n            int64_t rax_14 = ((r12_3 + ((-rax_12) << 3)) + rbx_5);\n            do\n            {\n                *(rax_14 + (rcx_4 << 3)) = (r13_3[rcx_4] - 0x30);\n                rcx_4 = (rcx_4 - 1);\n            } while (rcx_4 != -1);\n            return rax_14;\n        }\n        goto label_403d78;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_403fc0",
            "funcStartAddr": "0x403fc0",
            "funcEndAddr": "0x404500",
            "decompiledFuncCode": "uint64_t sub_403fc0(char* arg1)\n{\n    char* r12 = arg1;\n    char* rbp_1;\n    if (data_60e760 == 0)\n    {\n    label_404180:\n        if (data_60e542 != 0)\n        {\n            goto label_4042b0;\n        }\n        while (true)\n        {\n            int32_t rax_19 = sub_405210(r12, 0x41, 0x1b6);\n            if (rax_19 < 0)\n            {\n                return rax_19;\n            }\n            int64_t var_a8;\n            char* rbx_4;\n            if (__fxstat(1, rax_19, &var_a8) == 0)\n            {\n                int64_t var_a0;\n                if ((data_60e568 == var_a0 && data_60e560 == var_a8))\n                {\n                    goto label_4043c8;\n                }\n                if (ftruncate(rax_19) == 0)\n                {\n                    return rax_19;\n                }\n                rbp_1 = sub_406e40(0, 3, r12);\n                error(1, *__errno_location(), dcgettext(nullptr, \"%s: error truncating\", 5), rbp_1);\n            label_404242:\n                __fprintf_chk(stdout, 1, dcgettext(nullptr, \"executing with FILE=%s\\n\", 5), sub_406e40(0, 3, r12));\n            label_40401f:\n                if (pipe(&var_a8) != 0)\n                {\n                    goto label_40444d;\n                }\n                pid_t rax_4 = fork();\n                if (rax_4 == 0)\n                {\n                    int64_t rbx_3 = 0;\n                    int32_t rax_9;\n                    if (data_60e740 != 0)\n                    {\n                    label_4040ba:\n                        rax_9 = close(*(data_60e750 + (rbx_3 << 2)));\n                        if (rax_9 != 0)\n                        {\n                            error(1, *__errno_location(), dcgettext(nullptr, \"closing prior pipe\", 5));\n                        }\n                        else\n                        {\n                            rbx_3 = (rbx_3 + 1);\n                            if (data_60e740 > rbx_3)\n                            {\n                                goto label_4040ba;\n                            }\n                        }\n                    }\n                    if ((data_60e740 == 0 || (data_60e740 != 0 && rax_9 == 0)))\n                    {\n                        r12 = close(*var_a8[4]);\n                        rbx_4 = __errno_location();\n                        if (r12 == 0)\n                        {\n                            uint64_t rdi_4 = var_a8;\n                            if (rdi_4 != 0)\n                            {\n                                if (dup2(rdi_4, 0) != 0)\n                                {\n                                    goto label_4044c5;\n                                }\n                                if (close(var_a8) != 0)\n                                {\n                                    arg1 = error(1, *rbx_4, dcgettext(nullptr, \"closing input pipe\", 5));\n                                label_4042b0:\n                                    __fprintf_chk(stdout, 1, dcgettext(nullptr, \"creating file %s\\n\", 5), sub_406d70(4, arg1));\n                                    continue;\n                                }\n                            }\n                            sigprocmask(2, &data_60e6c0, nullptr);\n                            r12 = data_60e760;\n                            execl(rbp_1, sub_405180(rbp_1), &data_409a3e, r12, 0);\n                            arg1 = error(1, *rbx_4, dcgettext(nullptr, \"failed to run command: \"%s -c %s\u2026\", 5), rbp_1, r12);\n                            goto label_404180;\n                        }\n                        goto label_40443c;\n                    }\n                }\n                else\n                {\n                    if (rax_4 == 0xffffffff)\n                    {\n                        goto label_404406;\n                    }\n                    if (close(var_a8) == 0)\n                    {\n                        int64_t rdx_1 = data_60e740;\n                        int64_t rcx_1 = data_60e748;\n                        data_60e758 = rax_4;\n                        int64_t rax_6 = data_60e750;\n                        if (rdx_1 == rcx_1)\n                        {\n                            size_t rsi_9;\n                            if (rax_6 != 0)\n                            {\n                                if (rcx_1 > 0x1555555555555554)\n                                {\n                                label_404358:\n                                    sub_4078e0();\n                                    /* no return */\n                                }\n                                rcx_1 = ((rcx_1 + (rcx_1 >> 1)) + 1);\n                                rsi_9 = (rcx_1 << 2);\n                                goto label_40431a;\n                            }\n                            if (rcx_1 != 0)\n                            {\n                                int64_t rdx_12;\n                                rdx_12 = (rcx_1 >> 0x3e) != 0;\n                                rsi_9 = (rcx_1 << 2);\n                                if (rsi_9 < 0)\n                                {\n                                    goto label_404358;\n                                }\n                                if (rdx_12 == 0)\n                                {\n                                    goto label_40431a;\n                                }\n                                goto label_404358;\n                            }\n                            rsi_9 = 0x80;\n                            rcx_1 = 0x20;\n                        label_40431a:\n                            data_60e748 = rcx_1;\n                            rax_6 = sub_4076f0(rax_6, rsi_9);\n                            rdx_1 = data_60e740;\n                            data_60e750 = rax_6;\n                        }\n                        data_60e740 = (rdx_1 + 1);\n                        *(rax_6 + (rdx_1 << 2)) = *var_a8[4];\n                        return *var_a8[4];\n                    }\n                }\n                error(1, *__errno_location(), dcgettext(nullptr, \"failed to close input pipe\", 5));\n            label_4043c8:\n                error(1, 0, dcgettext(nullptr, \"%s would overwrite input; aborti\u2026\", 5), sub_406d70(4, r12));\n            label_404406:\n                rbx_4 = dcgettext(nullptr, \"fork system call failed\", 5);\n                error(1, *__errno_location(), rbx_4);\n            label_40443c:\n                error(1, *rbx_4, dcgettext(nullptr, \"closing output pipe\", 5));\n            label_40444d:\n                error(1, *__errno_location(), dcgettext(nullptr, \"failed to create pipe\", 5));\n            }\n            int64_t rax_53 = sub_406d70(4, r12);\n            rbx_4 = dcgettext(nullptr, \"failed to stat %s\", 5);\n            error(1, *__errno_location(), rbx_4, rax_53);\n        label_4044c5:\n            error(1, *rbx_4, dcgettext(nullptr, \"moving input pipe\", 5));\n            break;\n        }\n    }\n    else\n    {\n        char* rax_1 = getenv(\"SHELL\");\n        rbp_1 = rax_1;\n        if (rax_1 == 0)\n        {\n            rbp_1 = \"/bin/sh\";\n        }\n        if (setenv(\"FILE\", r12, 1) == 0)\n        {\n            if (data_60e542 != 0)\n            {\n                goto label_404242;\n            }\n            goto label_40401f;\n        }\n    }\n    int64_t rdx_22;\n    int64_t rsi_23;\n    int64_t rdi_13;\n    rdx_22 = error(1, *__errno_location(), dcgettext(nullptr, \"failed to set FILE environment v\u2026\", 5));\n    /* tailcall */\n    return sub_404500(rdi_13, rsi_23, rdx_22);\n}\n\n"
        },
        {
            "funcName": "sub_404500",
            "funcStartAddr": "0x404500",
            "funcEndAddr": "0x4046f0",
            "decompiledFuncCode": "uint64_t sub_404500(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* r13_2 = ((arg2 << 5) + arg1);\n    int64_t* rbp = nullptr;\n    int32_t rax = r13_2[1];\n    if (rax < 0)\n    {\n        int64_t rbx_1 = (arg2 - 1);\n        int64_t r14_1 = (arg3 - 1);\n        if (arg2 == 0)\n        {\n            rbx_1 = r14_1;\n        }\n        char* rdi = *r13_2;\n        int32_t rax_3;\n        if (rax != 0xffffffff)\n        {\n            while (true)\n            {\n                rax_3 = sub_405210(rdi, 0xc01, arg3);\n                if (rax_3 >= 0)\n                {\n                    break;\n                }\n            label_40456c:\n                int32_t* rax_4 = __errno_location();\n                int32_t* r8_1 = rax_4;\n                int32_t* var_40_1;\n                if ((*rax_4 - 0x17) <= 1)\n                {\n                label_4045a6:\n                    rbp = ((rbx_1 << 5) + arg1);\n                    if (rbp[1] < 0)\n                    {\n                        int64_t rax_7 = (rbx_1 - 1);\n                        if (rbx_1 == 0)\n                        {\n                            rax_7 = r14_1;\n                        }\n                        rbx_1 = rax_7;\n                        if (rax_7 != arg2)\n                        {\n                            goto label_4045a6;\n                        }\n                        r8_1 = error(1, *r8_1, \"%s\", sub_406e40(0, 3, *r13_2), r8_1);\n                    }\n                    else\n                    {\n                        var_40_1 = r8_1;\n                        int32_t rax_9;\n                        rax_9 = sub_407e60(rbp[2]);\n                        if (rax_9 != 0)\n                        {\n                            goto label_4046b7;\n                        }\n                        rbp[1] = 0xfffffffe;\n                        int32_t rax_10 = r13_2[1];\n                        rbp[2] = 0;\n                        rdi = *r13_2;\n                        rbp = 1;\n                        if (rax_10 == 0xffffffff)\n                        {\n                            break;\n                        }\n                        continue;\n                    }\n                }\n                var_40_1 = r8_1;\n                error(1, *var_40_1, \"%s\", sub_406e40(0, 3, *r13_2), var_40_1);\n            label_4046b7:\n                error(1, *var_40_1, \"%s\", sub_406e40(0, 3, *rbp), var_40_1);\n                goto label_4046c7;\n            }\n        }\n        if ((rax == 0xffffffff || (rax != 0xffffffff && rax_3 < 0)))\n        {\n            rax_3 = sub_403fc0(rdi);\n            if (rax_3 < 0)\n            {\n                goto label_40456c;\n            }\n        }\n        r13_2[1] = rax_3;\n        FILE* rax_11 = fdopen(rax_3, &data_409a74);\n        r13_2[2] = rax_11;\n        if (rax_11 == 0)\n        {\n        label_4046c7:\n            int64_t rcx_5;\n            pid_t rdx_4;\n            int32_t rsi_4;\n            FILE* rdi_3;\n            rcx_5 = error(1, *__errno_location(), \"%s\", sub_406e40(0, 3, *r13_2));\n            /* tailcall */\n            return sub_4046f0(rdi_3, rsi_4, rdx_4, rcx_5);\n        }\n        int32_t rax_12 = data_60e758;\n        data_60e758 = 0;\n        r13_2[3] = rax_12;\n    }\n    return rbp;\n}\n\n"
        },
        {
            "funcName": "sub_4046f0",
            "funcStartAddr": "0x4046f0",
            "funcEndAddr": "0x4049a0",
            "decompiledFuncCode": "void sub_4046f0(FILE* arg1, int32_t arg2, pid_t arg3, uint64_t arg4)\n{\n    uint64_t rbx = arg4;\n    int32_t* rax;\n    if (arg1 != 0)\n    {\n        rax = sub_407e60(arg1);\n        if (rax != 0)\n        {\n            rax = __errno_location();\n            if ((data_60e760 == 0 || (data_60e760 != 0 && *rax != 0x20)))\n            {\n                error(1, *rax, \"%s\", sub_406e40(0, 3, rbx));\n            }\n        }\n    }\n    if ((arg1 == 0 && arg2 >= 0))\n    {\n        rax = close(arg2);\n        if (rax < 0)\n        {\n            rbx = sub_406e40(0, 3, rbx);\n            error(1, *__errno_location(), \"%s\", rbx);\n        label_4047fa:\n            int32_t var_4c = 0;\n            void var_48;\n            uint64_t rbp_2;\n            if (waitpid(arg3, &var_4c, 0) == 0xffffffff)\n            {\n                uint64_t rax_15 = __errno_location();\n                rbp_2 = rax_15;\n                if (*rax_15 != 0xa)\n                {\n                    error(1, *rbp_2, dcgettext(nullptr, \"waiting for child process\", 5));\n                label_404969:\n                    __sprintf_chk(&var_48, 1, 0x13, &data_409a90, rbp_2);\n                label_40484b:\n                    error((rbp_2 + 0x80), 0, dcgettext(nullptr, \"with FILE=%s, signal %s from com\u2026\", 5), sub_406e40(0, 3, rbx), &var_48, data_60e760);\n                    return;\n                }\n            }\n            int32_t rcx_3 = var_4c;\n            rbp_2 = (rcx_3 & 0x7f);\n            if ((rbp_2 + 1) <= 1)\n            {\n                if (rbp_2 != 0)\n                {\n                    uint64_t rdx_9;\n                    int64_t rsi_6;\n                    char rdi_8;\n                    rdx_9 = error(1, 0, dcgettext(nullptr, \"unknown status from command (0x%\u2026\", 5), rcx_3);\n                    /* tailcall */\n                    return sub_4049a0(rdi_8, rsi_6, rdx_9);\n                }\n                uint32_t rbp_3 = *rcx_3[1];\n                if (rbp_3 != 0)\n                {\n                    error(rbp_3, 0, dcgettext(nullptr, \"with FILE=%s, exit %d from comma\u2026\", 5), sub_406e40(0, 3, rbx), rbp_3, data_60e760);\n                }\n            }\n            else if (rbp_2 != 0xd)\n            {\n                if (sub_409040(rbp_2, &var_48) != 0)\n                {\n                    goto label_404969;\n                }\n                goto label_40484b;\n            }\n            goto label_4047af;\n        }\n    }\n    if (((arg1 != 0 && arg2 >= 0) || (arg1 == 0 && arg2 >= 0)))\n    {\n        int64_t rdi = data_60e740;\n        if (rdi != 0)\n        {\n            int64_t rsi_1 = data_60e750;\n            int32_t* rcx_1;\n            int64_t rdi_1;\n            if (arg2 == *rsi_1)\n            {\n                rcx_1 = rsi_1;\n                rdi_1 = (rdi - 1);\n            }\n            else\n            {\n                int32_t* rdx_1 = (rsi_1 + 4);\n                rdi_1 = (rdi - 1);\n                rax = nullptr;\n                while (rdi_1 != rax)\n                {\n                    rcx_1 = rdx_1;\n                    rax = (rax + 1);\n                    rdx_1 = &rdx_1[1];\n                    if (*rcx_1 == arg2)\n                    {\n                        break;\n                    }\n                }\n            }\n            if ((arg2 == *rsi_1 || (arg2 != *rsi_1 && rdi_1 != rax)))\n            {\n                rax = *(rsi_1 + (rdi_1 << 2));\n                data_60e740 = rdi_1;\n                *rcx_1 = rax;\n            }\n        }\n    }\n    if (arg3 <= 0)\n    {\n    label_4047af:\n        return;\n    }\n    goto label_4047fa;\n}\n\n"
        },
        {
            "funcName": "sub_4049a0",
            "funcStartAddr": "0x4049a0",
            "funcEndAddr": "0x404ab0",
            "decompiledFuncCode": "int64_t sub_4049a0(char arg1, int64_t arg2, uint64_t arg3)\n{\n    int32_t rdi_1;\n    if (arg1 == 0)\n    {\n        rdi_1 = data_60e294;\n    }\n    else\n    {\n        if (((arg2 | arg3) == 0 && data_60e541 != 0))\n        {\n            goto label_404a58;\n        }\n        sub_4046f0(nullptr, data_60e294, data_60e758, data_60e618);\n        sub_403cc0();\n        int32_t rax_3 = sub_403fc0(data_60e618);\n        rdi_1 = rax_3;\n        data_60e294 = rax_3;\n        if (rax_3 < 0)\n        {\n            ssize_t rcx_4;\n            uint64_t rdx_4;\n            int64_t rsi_4;\n            uint64_t rdi_2;\n            int64_t r8;\n            rcx_4 = error(1, *__errno_location(), \"%s\", sub_406e40(0, 3, data_60e618));\n            /* tailcall */\n            return sub_404ab0(rdi_2, rsi_4, rdx_4, rcx_4, r8);\n        }\n    }\n    if (sub_4052d0(rdi_1, arg2, arg3) == arg3)\n    {\n        goto label_404a58;\n    }\n    int32_t* rax_5 = __errno_location();\n    int64_t rax_6;\n    if (data_60e760 != 0)\n    {\n        rax_6 = 0;\n    }\n    if ((data_60e760 == 0 || (data_60e760 != 0 && *rax_5 != 0x20)))\n    {\n        error(1, *rax_5, \"%s\", sub_406e40(0, 3, data_60e618));\n    label_404a58:\n        rax_6 = 1;\n    }\n    return rax_6;\n}\n\n"
        },
        {
            "funcName": "sub_404ab0",
            "funcStartAddr": "0x404ab0",
            "funcEndAddr": "0x404cf0",
            "decompiledFuncCode": "void sub_404ab0(uint64_t arg1, int64_t arg2, uint64_t arg3, ssize_t arg4, \n    int64_t arg5)\n{\n    int64_t r14 = 0;\n    uint64_t r12 = arg1;\n    char rbp = 1;\n    uint64_t rbx = 1;\n    bool var_49_1;\n    ssize_t r13_1;\n    if (arg4 == -1)\n    {\n        do\n        {\n            if (rbp == 0)\n            {\n                off64_t rax_4 = lseek(0, r12, 1);\n                bool cond:1_1 = rax_4 != -1;\n                if (rax_4 != -1)\n                {\n                    r12 = arg1;\n                }\n                if (cond:1_1)\n                {\n                    rbx = 1;\n                }\n            }\n            ssize_t rax = sub_406fe0(0, arg2, arg3);\n            r13_1 = rax;\n            if (rax == -1)\n            {\n                int32_t rdi_2 = error(1, *__errno_location(), \"%s\", sub_406e40(0, 3, data_60e5f0));\n                /* tailcall */\n                return sub_404cf0(rdi_2);\n            }\n            var_49_1 = rax == 0;\n            int64_t r9_1;\n            if (r13_1 >= r12)\n            {\n            label_404afc:\n                bool r11 = arg5 == 0;\n            label_404b38:\n                rbp = (rbp | rbx);\n                if (rbp != 0)\n                {\n                    rbp = sub_4049a0(rbx, arg2, r12);\n                }\n                rbx = rbx;\n                r14 = (r14 + rbx);\n                rbx = r14 < arg5;\n                rbx = (rbx | r11);\n                if ((rbx == 0 && rbp == 0))\n                {\n                    return;\n                }\n                r13_1 = (r13_1 - r12);\n                r9_1 = (arg2 + r12);\n                r12 = arg1;\n                if (arg1 <= r13_1)\n                {\n                    break;\n                }\n            }\n            else\n            {\n            label_404bc6:\n                if (r13_1 != 0)\n                {\n                    char rax_1 = (rbp | rbx);\n                    if (rax_1 == 0)\n                    {\n                        rbp = 0;\n                        r14 = (r14 + rax_1);\n                        rbx = arg5 == r14;\n                        rbx = (rbx & 1);\n                        if (rbx != 0)\n                        {\n                            return;\n                        }\n                        goto label_404c31;\n                    }\n                    r9_1 = arg2;\n                }\n            }\n            if ((((r13_1 >= r12 && arg1 > r13_1) && r13_1 != 0) || (r13_1 < r12 && r13_1 != 0)))\n            {\n                char rax_2 = sub_4049a0(rbx, r9_1, r13_1);\n                rbp = rax_2;\n                r14 = (r14 + rbx);\n                rbx = arg5 == r14;\n                rbx = (rbx & (rax_2 ^ 1));\n                if (rbx != 0)\n                {\n                    return;\n                }\n            label_404c31:\n                r12 = (r12 - r13_1);\n            }\n        } while (var_49_1 == 0);\n        int64_t rbx_1 = (r14 + 1);\n        if (r14 < arg5)\n        {\n            while (true)\n            {\n                sub_4049a0(1, 0, 0);\n                int64_t rax_5 = (rbx_1 + 1);\n                if (arg5 == rbx_1)\n                {\n                    break;\n                }\n                rbx_1 = rax_5;\n            }\n            return;\n        }\n        return;\n    }\n    r13_1 = arg4;\n    var_49_1 = arg4 < arg3;\n    if (r13_1 >= r12)\n    {\n        goto label_404afc;\n    }\n    goto label_404bc6;\n}\n\n"
        },
        {
            "funcName": "sub_404cf0",
            "funcStartAddr": "0x404cf0",
            "funcEndAddr": "0x4050bd",
            "decompiledFuncCode": "int64_t sub_404cf0(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_60e778;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [OPTION]... [FILE [PRE\u2026\", 5), rbp);\n        fputs_unlocked(dcgettext(nullptr, \"Output pieces of FILE to PREFIXa\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nWith no FILE, or when FILE is \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nMandatory arguments to long op\u2026\", 5), stdout);\n        __fprintf_chk(stdout, 1, dcgettext(nullptr, \"  -a, --suffix-length=N   genera\u2026\", 5), 2);\n        fputs_unlocked(dcgettext(nullptr, \"      --verbose           print \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nThe SIZE argument is an intege\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nCHUNKS may be:\\n  N       spli\u2026\", 5), stdout);\n        void* const var_88 = &data_409a99;\n        void* const* rax_14 = &var_88;\n        void* const var_78_1 = \"coreutils\";\n        void* const var_70_1 = \"Multi-call invocation\";\n        void* const var_68_1 = \"sha224sum\";\n        void* const var_60_1 = \"sha2 utilities\";\n        void* const var_58_1 = \"sha256sum\";\n        void* const var_50_1 = \"sha2 utilities\";\n        void* const var_48_1 = \"sha384sum\";\n        void* const var_40_1 = \"sha2 utilities\";\n        void* const var_38_1 = \"sha512sum\";\n        void* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_14 = &rax_14[2];\n            void* const rdi_11 = *rax_14;\n            c_1 = false;\n            z_1 = (rdi_11 & rdi_11) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_10 = \"split\";\n            int64_t rcx_2 = 6;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_10;\n                char temp1_1 = *rdi_11;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_10 = (rsi_10 + 1);\n                rdi_11 = (rdi_11 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbp_1 = rax_14[1];\n        char* rax_25;\n        int32_t rax_26;\n        void* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_6;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_25 = setlocale(5, nullptr, rdx_6, rcx_5, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_25 != 0)\n            {\n                rax_26 = strncmp(rax_25, &data_409b1d, 3);\n                if (rax_26 != 0)\n                {\n                    rbp_1 = \"split\";\n                }\n            }\n            if ((rax_25 == 0 || (rax_25 != 0 && rax_26 == 0)))\n            {\n                rbp_1 = \"split\";\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"split\");\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_4;\n            uint64_t r8_1;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_17 = setlocale(5, nullptr, rdx_4, rcx_3, r8_1, r9_1, var_88, \"test invocation\");\n            if (rax_17 == 0)\n            {\n                goto label_404fb0;\n            }\n            if (strncmp(rax_17, &data_409b1d, 3) == 0)\n            {\n                goto label_404fb0;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_25 != 0) && rax_26 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), \"split\");\n        label_404fb0:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"split\");\n            if (rbp_1 != \"split\")\n            {\n                r12_1 = &data_40c284[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4050c0",
            "funcStartAddr": "0x4050c0",
            "funcEndAddr": "0x4050c8",
            "decompiledFuncCode": "int64_t sub_4050c0(int64_t arg1)\n{\n    data_60e770 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4050d0",
            "funcStartAddr": "0x4050d0",
            "funcEndAddr": "0x4050d8",
            "decompiledFuncCode": "int64_t sub_4050d0(char arg1)\n{\n    data_60e768 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4050e0",
            "funcStartAddr": "0x4050e0",
            "funcEndAddr": "0x40517e",
            "decompiledFuncCode": "void sub_4050e0(void* arg1)\n{\n    int32_t rax = sub_409110(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_60e768 == 0 || (data_60e768 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_60e770;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_406e10(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_60e768 != 0) && *rax_1 == 0x20)) && sub_409110(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_60e2b0);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_405180",
            "funcStartAddr": "0x405180",
            "funcEndAddr": "0x4051db",
            "decompiledFuncCode": "char* sub_405180(char* arg1)\n{\n    char rdx = *arg1;\n    char* rax = arg1;\n    if (rdx == 0x2f)\n    {\n        do\n        {\n            rax = &rax[1];\n            rdx = *rax;\n        } while (rdx == 0x2f);\n    }\n    if (rdx != 0)\n    {\n        char* rcx_1 = rax;\n        char rsi_1 = 0;\n        while (true)\n        {\n            if (rdx == 0x2f)\n            {\n                rcx_1 = &rcx_1[1];\n                rdx = *rcx_1;\n                rsi_1 = 1;\n                if (rdx == 0)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                if (rsi_1 != 0)\n                {\n                    rax = rcx_1;\n                    rsi_1 = 0;\n                }\n                rcx_1 = &rcx_1[1];\n                rdx = *rcx_1;\n                if (rdx == 0)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4051e0",
            "funcStartAddr": "0x4051e0",
            "funcEndAddr": "0x40520b",
            "decompiledFuncCode": "uint64_t sub_4051e0(char* arg1)\n{\n    uint64_t rax = strlen(arg1);\n    if (rax > 1)\n    {\n        while (true)\n        {\n            uint64_t rdx_1 = (rax - 1);\n            if (arg1[(rax - 1)] != 0x2f)\n            {\n                break;\n            }\n            rax = rdx_1;\n            if (rdx_1 == 1)\n            {\n                return rax;\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405210",
            "funcStartAddr": "0x405210",
            "funcEndAddr": "0x40525a",
            "decompiledFuncCode": "uint64_t sub_405210(char* arg1, int64_t arg2, int32_t arg3)\n{\n    uint64_t rdx = 0;\n    if ((arg2 & 0x40) != 0)\n    {\n        int32_t var_50_1 = 0x10;\n        rdx = arg3;\n        void* var_48_1 = &arg_8;\n        void var_38;\n        void* var_40_1 = &var_38;\n    }\n    return sub_4070a0(open(arg1, arg2, rdx));\n}\n\n"
        },
        {
            "funcName": "sub_405260",
            "funcStartAddr": "0x405260",
            "funcEndAddr": "0x4052ca",
            "decompiledFuncCode": "uint64_t sub_405260(int32_t arg1, char* arg2, int32_t arg3, int32_t arg4)\n{\n    int32_t rax_1 = open(arg2, arg3, arg4);\n    if ((arg1 != rax_1 && rax_1 >= 0))\n    {\n        int32_t rax_3 = dup2(rax_1, arg1);\n        int32_t* rax_4 = __errno_location();\n        int32_t r13 = *rax_4;\n        close(rax_1);\n        *rax_4 = r13;\n        return rax_3;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4052d0",
            "funcStartAddr": "0x4052d0",
            "funcEndAddr": "0x405346",
            "decompiledFuncCode": "int64_t sub_4052d0(int32_t arg1, int64_t arg2, uint64_t arg3)\n{\n    int64_t r12;\n    if (arg3 == 0)\n    {\n        r12 = 0;\n    }\n    else\n    {\n        int64_t rbp_1 = arg2;\n        uint64_t rbx_1 = arg3;\n        r12 = 0;\n        ssize_t rax_1;\n        uint64_t temp0_1;\n        do\n        {\n            rax_1 = sub_407040(arg1, rbp_1, rbx_1);\n            if (rax_1 == -1)\n            {\n                break;\n            }\n            if (rax_1 == 0)\n            {\n                *__errno_location() = 0x1c;\n                return r12;\n            }\n            r12 = (r12 + rax_1);\n            rbp_1 = (rbp_1 + rax_1);\n            temp0_1 = rbx_1;\n            rbx_1 = (rbx_1 - rax_1);\n        } while (temp0_1 != rax_1);\n    }\n    return r12;\n}\n\n"
        },
        {
            "funcName": "sub_405350",
            "funcStartAddr": "0x405350",
            "funcEndAddr": "0x405398",
            "decompiledFuncCode": "void* sub_405350(uint64_t arg1, void* arg2)\n{\n    void* rcx = (arg2 + 0x14);\n    *(arg2 + 0x14) = 0;\n    while (true)\n    {\n        rcx = (rcx - 1);\n        int64_t rax_2;\n        int64_t rdx_1;\n        rdx_1 = HIGHD((arg1 * -0x3333333333333333));\n        rax_2 = LOWD((arg1 * -0x3333333333333333));\n        uint64_t rdx_2 = (rdx_1 >> 3);\n        char rax_3 = (rdx_2 + (rdx_2 << 2));\n        *rcx = ((arg1 - (rax_3 + rax_3)) + 0x30);\n        if (arg1 <= 9)\n        {\n            break;\n        }\n        arg1 = rdx_2;\n    }\n    return rcx;\n}\n\n"
        },
        {
            "funcName": "sub_4053a0",
            "funcStartAddr": "0x4053a0",
            "funcEndAddr": "0x405439",
            "decompiledFuncCode": "char* sub_4053a0(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_40ad08;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_60e778 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405440",
            "funcStartAddr": "0x405440",
            "funcEndAddr": "0x405532",
            "decompiledFuncCode": "char* sub_405440(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_4091d0();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_405521:\n                void* const rbx_1 = &data_40ad0c;\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_405521;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_405521;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_405521;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_405521;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_405521;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_405521;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_405521;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_40ad15;\n            if (cond:2_1)\n            {\n                rbx = &data_40ad12;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_405521;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_405521;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_405521;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_405521;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_405521;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_40ad19;\n            if (cond:1_1)\n            {\n                rbx = &data_40ad0e;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_405540",
            "funcStartAddr": "0x401e80",
            "funcEndAddr": "0x406761",
            "decompiledFuncCode": "int64_t sub_405540(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    char const* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n    label_4055d8:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_40594c:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_405994;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_405540(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char const rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_4059ab;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_405ae5;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_405735;\n                            }\n                            goto label_405a20;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_405ae5;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_405910;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_405910:\n                            if (var_c0 == 0)\n                            {\n                                goto label_40591b;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_405777:\n                            if (var_5c == 0)\n                            {\n                                goto label_405788;\n                            }\n                        label_405940:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_405948;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_405b7b;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_405b7b:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_405b8a:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_40594c;\n                            }\n                            goto label_405910;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_405910;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_405910;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_405b7b;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_405716;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_405716:\n                            if (var_5c == 0)\n                            {\n                                goto label_405735;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_405735;\n                            }\n                            goto label_405b8a;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_40570d:\n                            if (r12_1 != 0)\n                            {\n                                goto label_40591b;\n                            }\n                            goto label_405716;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_405b40:\n                            rdx = r11_1 == 2;\n                        label_405735:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_40583c;\n                            }\n                            goto label_40573f;\n                        }\n                        case 0x27:\n                        {\n                            goto label_4058bd;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_40588d;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_4058ea;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_40667d;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_405854;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_4056e9;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_405ce0;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_405ce0;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_406630:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_405994:\n                            rbx_1 = sub_405540(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_4059ab:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_405ae5;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_405a37;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_405ae5;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_405a00:\n                                r13 = 0;\n                                goto label_4057bb;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_405788:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_4057bb:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_4057c5;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_4057c5:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_4057cd;\n                            }\n                            case 9:\n                            {\n                                goto label_4059b0;\n                            }\n                            case 0xa:\n                            {\n                                goto label_405928;\n                            }\n                            case 0xb:\n                            {\n                                goto label_405a10;\n                            }\n                            case 0xc:\n                            {\n                                goto label_4059f0;\n                            }\n                            case 0xd:\n                            {\n                                goto label_4059d9;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_405d3a;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_4059c5;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_405d1a;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_405d02;\n                            }\n                            case 0x27:\n                            {\n                                goto label_4058bd;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_40588d;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_4058ea;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_4056e9;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_405ce0:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_405ae0:\n                            var_b8 = 0;\n                        label_405ae5:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_405b34:\n                                if (rdx == 0)\n                                {\n                                    goto label_405b40;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_406031:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_405854;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_40594c;\n                                }\n                                r13 = var_98;\n                                goto label_4057cd;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_408d50(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_40594c;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_406031;\n                            }\n                            goto label_405b34;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_405a20:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_40594c;\n                                }\n                                var_b8 = 0;\n                            label_405a37:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_405a82;\n                                    }\n                                    rax_8 = r10;\n                                label_405a7a:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_405a82:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_40583c;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_405ac3;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_405a7a;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_40583c;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_405ae0;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_4059f5;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_40592d;\n                            }\n                            case 9:\n                            {\n                            label_4059b0:\n                                rbp_3 = 0x74;\n                                goto label_40592d;\n                            }\n                            case 0xa:\n                            {\n                            label_405928:\n                                rbp_3 = 0x6e;\n                            label_40592d:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_405940;\n                                }\n                                goto label_405788;\n                            }\n                            case 0xb:\n                            {\n                            label_405a10:\n                                rbp_3 = 0x76;\n                                goto label_4059f5;\n                            }\n                            case 0xc:\n                            {\n                            label_4059f0:\n                                rbp_3 = 0x66;\n                            label_4059f5:\n                                if (var_5c == 0)\n                                {\n                                    goto label_405a00;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_405948:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_40594c;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_4059d9:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_405910;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_405d3a:\n                                rbp_3 = 0x20;\n                                goto label_405d02;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_4059c5:\n                                rdx = 0;\n                            label_40591b:\n                                r13 = 0;\n                                goto label_405735;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_405d1a:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_405735;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_40573f:\n                                rax_8 = 0;\n                                goto label_405741;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_405d02:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_405741;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_4058bd:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_405735;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_40667d;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_40583c;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_40588d:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_40667d:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_40594c;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_40583c:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_405777;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_405854;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_405735;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_405e20:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_405735;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_405e20;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_405e20;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_405e20;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_405e20;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_406630;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_405ac3:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_40583c;\n                                }\n                            label_405741:\n                                if (arg7 == 0)\n                                {\n                                    goto label_40583c;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_40583c;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_405777;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_4058ea:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_405910;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_405854:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_4057cd;\n                                }\n                            label_4057cd:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_4057d6;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_4057d6:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_4056e9:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_40591b;\n                                }\n                                goto label_40570d;\n                            }\n                        }\n                    }\n                }\n            }\n        label_405dc6:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"'\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_4055d8;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"'\";\n                goto label_4055d8;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"'\";\n            goto label_4055d8;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40ad0c;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40ad0c;\n            }\n            goto label_4055d8;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_40ad0c;\n            goto label_4055d8;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_4055d8;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_405440(&data_40ad1d, r13);\n                arg9 = sub_405440(\"'\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_4055d8;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_405dc6;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n        goto label_4055d8;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_406770",
            "funcStartAddr": "0x401e85",
            "funcEndAddr": "0x40690e",
            "decompiledFuncCode": "char* sub_406770(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_60e2f8;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_60e310 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_4078e0();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x60e300)\n        {\n            int64_t rax_9 = sub_4076f0(0, rsi_1);\n            int128_t zmm0 = data_60e300;\n            rbx = rax_9;\n            data_60e2f8 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_4076f0(rbx, rsi_1);\n            data_60e2f8 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_60e310;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_60e310 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_405540(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        size_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x60e780)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_407690(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_405540(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_406910",
            "funcStartAddr": "0x406910",
            "funcEndAddr": "0x406944",
            "decompiledFuncCode": "int64_t sub_406910(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x60e880;\n    }\n    int64_t rax_1 = sub_407890(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_406950",
            "funcStartAddr": "0x406950",
            "funcEndAddr": "0x40695f",
            "decompiledFuncCode": "uint64_t sub_406950(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60e880;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_406960",
            "funcStartAddr": "0x406960",
            "funcEndAddr": "0x40696f",
            "decompiledFuncCode": "void sub_406960(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60e880;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_406970",
            "funcStartAddr": "0x406970",
            "funcEndAddr": "0x4069a3",
            "decompiledFuncCode": "uint64_t sub_406970(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x60e880;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_4069b0",
            "funcStartAddr": "0x4069b0",
            "funcEndAddr": "0x4069c3",
            "decompiledFuncCode": "uint64_t sub_4069b0(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60e880;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4069d0",
            "funcStartAddr": "0x4069d0",
            "funcEndAddr": "0x4069fb",
            "decompiledFuncCode": "void sub_4069d0(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60e880;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x60e880;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_406a00",
            "funcStartAddr": "0x406a00",
            "funcEndAddr": "0x406a72",
            "decompiledFuncCode": "int64_t sub_406a00(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_60e880;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_405540(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_406a80",
            "funcStartAddr": "0x406a80",
            "funcEndAddr": "0x406b61",
            "decompiledFuncCode": "char* sub_406a80(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_60e880;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_405540(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_407690((rax_2 + 1));\n    sub_405540(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_406b70",
            "funcStartAddr": "0x406b70",
            "funcEndAddr": "0x406b7a",
            "decompiledFuncCode": "int64_t sub_406b70(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_406a80(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_406b80",
            "funcStartAddr": "0x406b80",
            "funcEndAddr": "0x406c15",
            "decompiledFuncCode": "uint64_t sub_406b80()\n{\n    uint64_t rax_2 = data_60e310;\n    int64_t r12 = data_60e2f8;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x60e780)\n    {\n        rax_2 = free(rdi_2);\n        *data_60e300 = 0x100;\n        *(data_60e300 + 8) = 0x60e780;\n    }\n    if (r12 != 0x60e300)\n    {\n        rax_2 = free(r12);\n        data_60e2f8 = 0x60e300;\n    }\n    data_60e310 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_406c20",
            "funcStartAddr": "0x406c20",
            "funcEndAddr": "0x406c31",
            "decompiledFuncCode": "int64_t sub_406c20(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_406770(arg1, arg2, -1, &data_60e880);\n}\n\n"
        },
        {
            "funcName": "sub_406c40",
            "funcStartAddr": "0x406c40",
            "funcEndAddr": "0x406c4a",
            "decompiledFuncCode": "int64_t sub_406c40(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_406770(arg1, arg2, arg3, &data_60e880);\n}\n\n"
        },
        {
            "funcName": "sub_406c50",
            "funcStartAddr": "0x406c50",
            "funcEndAddr": "0x406c66",
            "decompiledFuncCode": "int64_t sub_406c50(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_406770(0, arg1, -1, &data_60e880);\n}\n\n"
        },
        {
            "funcName": "sub_406c70",
            "funcStartAddr": "0x406c70",
            "funcEndAddr": "0x406c82",
            "decompiledFuncCode": "int64_t sub_406c70(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_406770(0, arg1, arg2, &data_60e880);\n}\n\n"
        },
        {
            "funcName": "sub_406c90",
            "funcStartAddr": "0x401e8a",
            "funcEndAddr": "0x406cf8",
            "decompiledFuncCode": "char* sub_406c90(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_406770(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_406d00",
            "funcStartAddr": "0x401e8f",
            "funcEndAddr": "0x406d64",
            "decompiledFuncCode": "char* sub_406d00(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_406770(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_406d70",
            "funcStartAddr": "0x406d70",
            "funcEndAddr": "0x406d7c",
            "decompiledFuncCode": "int64_t sub_406d70(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_406c90(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_406d80",
            "funcStartAddr": "0x406d80",
            "funcEndAddr": "0x406d8f",
            "decompiledFuncCode": "int64_t sub_406d80(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_406d00(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_406d90",
            "funcStartAddr": "0x406d90",
            "funcEndAddr": "0x406e00",
            "decompiledFuncCode": "char* sub_406d90(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_60e8b0;\n    int128_t var_48 = data_60e880;\n    int128_t var_38 = data_60e890;\n    int128_t var_28 = data_60e8a0;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_406770(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_406e00",
            "funcStartAddr": "0x406e00",
            "funcEndAddr": "0x406e0d",
            "decompiledFuncCode": "int64_t sub_406e00(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_406d90(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_406e10",
            "funcStartAddr": "0x406e10",
            "funcEndAddr": "0x406e21",
            "decompiledFuncCode": "int64_t sub_406e10(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_406d90(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_406e30",
            "funcStartAddr": "0x406e30",
            "funcEndAddr": "0x406e3a",
            "decompiledFuncCode": "int64_t sub_406e30(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_406d90(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_406e40",
            "funcStartAddr": "0x401e94",
            "funcEndAddr": "0x406eae",
            "decompiledFuncCode": "char* sub_406e40(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_406770(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_406eb0",
            "funcStartAddr": "0x406eb0",
            "funcEndAddr": "0x406f1c",
            "decompiledFuncCode": "char* sub_406eb0(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_60e880;\n    int128_t var_38 = data_60e890;\n    int128_t var_28 = data_60e8a0;\n    int64_t var_18 = data_60e8b0;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_406770(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_406fc0",
            "funcStartAddr": "0x406fc0",
            "funcEndAddr": "0x406fd6",
            "decompiledFuncCode": "int64_t sub_406fc0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_406770(0, arg1, -1, &data_60e2c0);\n}\n\n"
        },
        {
            "funcName": "sub_406fe0",
            "funcStartAddr": "0x406fe0",
            "funcEndAddr": "0x40703e",
            "decompiledFuncCode": "ssize_t sub_406fe0(int32_t arg1, int64_t arg2, uint64_t arg3)\n{\n    uint64_t rbx = arg3;\n    ssize_t rax_1;\n    while (true)\n    {\n        rax_1 = read(arg1, arg2, rbx);\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        int32_t rax_3 = *__errno_location();\n        if (rax_3 != 4)\n        {\n            if (rbx <= 0x7fffe000)\n            {\n                break;\n            }\n            if (rax_3 != 0x16)\n            {\n                break;\n            }\n            rbx = 0x7fffe000;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_407040",
            "funcStartAddr": "0x407040",
            "funcEndAddr": "0x40709e",
            "decompiledFuncCode": "ssize_t sub_407040(int32_t arg1, int64_t arg2, uint64_t arg3)\n{\n    uint64_t rbx = arg3;\n    ssize_t rax_1;\n    while (true)\n    {\n        rax_1 = write(arg1, arg2, rbx);\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        int32_t rax_3 = *__errno_location();\n        if (rax_3 != 4)\n        {\n            if (rax_3 != 0x16)\n            {\n                break;\n            }\n            if (rbx <= 0x7fffe000)\n            {\n                break;\n            }\n            rbx = 0x7fffe000;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4070a0",
            "funcStartAddr": "0x4070a0",
            "funcEndAddr": "0x4070ee",
            "decompiledFuncCode": "uint64_t sub_4070a0(int32_t arg1)\n{\n    if (arg1 <= 2)\n    {\n        int32_t rax_1 = sub_409740(arg1);\n        int32_t* rax_2 = __errno_location();\n        int32_t r13 = *rax_2;\n        close(arg1);\n        *rax_2 = r13;\n        return rax_1;\n    }\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4070f0",
            "funcStartAddr": "0x401e99",
            "funcEndAddr": "0x4074cd",
            "decompiledFuncCode": "int64_t sub_4070f0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_40ba6b, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4074d0",
            "funcStartAddr": "0x4074d0",
            "funcEndAddr": "0x4074f0",
            "decompiledFuncCode": "int64_t sub_4074d0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_4070f0(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_4074f0",
            "funcStartAddr": "0x4074f0",
            "funcEndAddr": "0x407550",
            "decompiledFuncCode": "int64_t sub_4074f0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_4070f0(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_407550",
            "funcStartAddr": "0x407550",
            "funcEndAddr": "0x40760c",
            "decompiledFuncCode": "int64_t sub_407550(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_4070f0(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_407610",
            "funcStartAddr": "0x407610",
            "funcEndAddr": "0x407684",
            "decompiledFuncCode": "int64_t sub_407610()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_407690",
            "funcStartAddr": "0x407690",
            "funcEndAddr": "0x4076aa",
            "decompiledFuncCode": "int64_t sub_407690(size_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_4078e0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4076b0",
            "funcStartAddr": "0x4076b0",
            "funcEndAddr": "0x4076d1",
            "decompiledFuncCode": "int64_t sub_4076b0(int64_t arg1, int64_t arg2)\n{\n    uint64_t rax;\n    int64_t rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    size_t rdi = rax;\n    rax = ((arg1 * arg2) >> 0x40) != 0;\n    if (rdi >= 0)\n    {\n        rax = rax;\n        if (rax == 0)\n        {\n            /* tailcall */\n            return sub_407690(rdi);\n        }\n    }\n    uint64_t var_8 = rax;\n    sub_4078e0();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4076f0",
            "funcStartAddr": "0x4076f0",
            "funcEndAddr": "0x407726",
            "decompiledFuncCode": "int64_t sub_4076f0(int64_t arg1, size_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_4078e0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40783a",
            "funcStartAddr": "0x40783a",
            "funcEndAddr": "0x407840",
            "decompiledFuncCode": "int64_t sub_40783a() __noreturn\n{\n    sub_4078e0();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_407840",
            "funcStartAddr": "0x407840",
            "funcEndAddr": "0x407857",
            "decompiledFuncCode": "int64_t sub_407840(size_t arg1)\n{\n    /* tailcall */\n    return memset(sub_407690(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_407860",
            "funcStartAddr": "0x407860",
            "funcEndAddr": "0x40788e",
            "decompiledFuncCode": "int64_t sub_407860(size_t arg1, size_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_4078e0();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_407890",
            "funcStartAddr": "0x407890",
            "funcEndAddr": "0x4078b8",
            "decompiledFuncCode": "int64_t sub_407890(int64_t arg1, size_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_407690(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4078c0",
            "funcStartAddr": "0x4078c0",
            "funcEndAddr": "0x4078d3",
            "decompiledFuncCode": "int64_t sub_4078c0(char* arg1)\n{\n    /* tailcall */\n    return sub_407890(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_4078e0",
            "funcStartAddr": "0x4078e0",
            "funcEndAddr": "0x407911",
            "decompiledFuncCode": "int64_t sub_4078e0() __noreturn\n{\n    error(data_60e2b0, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_407920",
            "funcStartAddr": "0x407920",
            "funcEndAddr": "0x4079f0",
            "decompiledFuncCode": "int64_t sub_407920(char* arg1, int32_t arg2, int64_t arg3, int64_t arg4, \n    char* arg5, int64_t arg6, int32_t arg7)\n{\n    int32_t rbx = arg7;\n    int64_t var_40;\n    int32_t rax = sub_407a20(arg1, nullptr, arg2, &var_40, arg5);\n    int64_t rbp;\n    int32_t* r14_1;\n    if (rax == 0)\n    {\n        rbp = var_40;\n        if ((rbp < arg3 || (rbp >= arg3 && rbp > arg4)))\n        {\n            int32_t* rax_1 = __errno_location();\n            r14_1 = rax_1;\n            *r14_1 = (((rax_1 - rax_1) & 0xffffffd7) + 0x4b);\n        }\n    }\n    else\n    {\n        int32_t* rax_8 = __errno_location();\n        r14_1 = rax_8;\n        if (rax == 1)\n        {\n            *rax_8 = 0x4b;\n        }\n        else if (rax == 3)\n        {\n            *rax_8 = 0;\n        }\n    }\n    if (((rax == 0 && (rbp < arg3 || (rbp >= arg3 && rbp > arg4))) || rax != 0))\n    {\n        int64_t rax_5 = sub_406fc0(arg1);\n        uint64_t rsi = *r14_1;\n        if (rsi == 0x16)\n        {\n            rsi = 0;\n        }\n        if (rbx == 0)\n        {\n            rbx = 1;\n        }\n        error(rbx, rsi, \"%s: %s\", arg6, rax_5);\n        rbp = var_40;\n    }\n    return rbp;\n}\n\n"
        },
        {
            "funcName": "sub_4079f0",
            "funcStartAddr": "0x4079f0",
            "funcEndAddr": "0x407a11",
            "decompiledFuncCode": "int64_t sub_4079f0(char* arg1, int64_t arg2, int64_t arg3, char* arg4, \n    int64_t arg5, int32_t arg6)\n{\n    return sub_407920(arg1, 0xa, arg2, arg3, arg4, arg5, arg6);\n}\n\n"
        },
        {
            "funcName": "sub_407a20",
            "funcStartAddr": "0x407a20",
            "funcEndAddr": "0x407e54",
            "decompiledFuncCode": "uint64_t sub_407a20(char* arg1, int64_t* arg2, int32_t arg3, uint64_t* arg4, \n    char* arg5)\n{\n    if (arg3 > 0x24)\n    {\n        __assert_fail(\"0 <= strtol_base && strtol_base \u2026\", \"lib/xstrtol.c\", 0x60, \"xstrtoumax\");\n        /* no return */\n    }\n    int64_t* r15 = arg2;\n    void var_40;\n    if (arg2 == 0)\n    {\n        r15 = &var_40;\n    }\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char rbx = *arg1;\n    uint16_t* rsi = *__ctype_b_loc();\n    char* rax_2 = arg1;\n    while ((*(&rsi[rbx] + 1) & 0x20) != 0)\n    {\n        rax_2 = &rax_2[1];\n        rbx = *rax_2;\n    }\n    int32_t rbp_1;\n    if (rbx == 0x2d)\n    {\n    label_407aea:\n        rbp_1 = 4;\n    }\n    else\n    {\n        char* r8 = *r15;\n        uint64_t rbx_1 = __strtoul_internal(arg1, r15, arg3, 0);\n        int32_t var_58;\n        void* r8_1;\n        uint32_t r12_1;\n        if (r8 == arg1)\n        {\n            var_58 = r8;\n            if (arg5 == 0)\n            {\n                goto label_407aea;\n            }\n            r12_1 = *arg1;\n            if (r12_1 == 0)\n            {\n                goto label_407aea;\n            }\n            rbp_1 = 0;\n            rbx_1 = 1;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) == 0)\n            {\n                goto label_407aea;\n            }\n        label_407b27:\n            uint64_t rdx_1 = (r12_1 - 0x45);\n            int64_t rdx_3;\n            int32_t rsi_3;\n            if (rdx_1 <= 0x2f)\n            {\n                var_58 = rdx_1;\n                if ((!(TEST_BITQ(0x814400308945, rdx_1))))\n                {\n                    goto label_407b90;\n                }\n                if (strchr(arg5, 0x30) == 0)\n                {\n                    goto label_407b90;\n                }\n                char rax_8 = *(r8_1 + 1);\n                if (rax_8 == 0x44)\n                {\n                label_407db8:\n                    rsi_3 = 2;\n                    rdx_3 = 0x3e8;\n                    goto label_407b9a;\n                }\n                if (rax_8 == 0x69)\n                {\n                    rdx_3 = 0x400;\n                    int32_t rsi_6;\n                    rsi_6 = *(r8_1 + 2) == 0x42;\n                    rsi_3 = ((rsi_6 + rsi_6) + 1);\n                    goto label_407b9a;\n                }\n                uint64_t rdx_2 = var_58;\n                if (rax_8 == 0x42)\n                {\n                    goto label_407db8;\n                }\n                int32_t r9_1;\n                switch (rdx_2)\n                {\n                    case 0:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_407d3b:\n                        int64_t rcx_6 = rdx_3;\n                        int32_t rdi_8 = 6;\n                        r9_1 = 0;\n                        int32_t temp15_1;\n                        do\n                        {\n                            uint64_t rax_28;\n                            int64_t rdx_11;\n                            rdx_11 = HIGHD((rbx_1 * rcx_6));\n                            rax_28 = LOWD((rbx_1 * rcx_6));\n                            bool o_8 = ((rbx_1 * rcx_6) >> 0x40) != 0;\n                            rbx_1 = rax_28;\n                            if (o_8)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp15_1 = rdi_8;\n                            rdi_8 = (rdi_8 - 1);\n                        } while (temp15_1 != 1);\n                        goto label_407c94;\n                    }\n                    case 1:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 7:\n                    case 9:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                    case 0x23:\n                    case 0x24:\n                    case 0x25:\n                    case 0x27:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    {\n                        goto label_407c35;\n                    }\n                    case 2:\n                    case 0x22:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_407d73:\n                        int64_t rcx_7 = rdx_3;\n                        int64_t rax_30;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rbx_1 * rcx_7));\n                        rax_30 = LOWD((rbx_1 * rcx_7));\n                        int64_t rax_31;\n                        if (((rbx_1 * rcx_7) >> 0x40) == 0)\n                        {\n                            int64_t rdx_13;\n                            rdx_13 = HIGHD((rax_30 * rcx_7));\n                            rax_31 = LOWD((rax_30 * rcx_7));\n                            if (((rax_30 * rcx_7) >> 0x40) == 0)\n                            {\n                                uint64_t rax_32;\n                                int64_t rdx_14;\n                                rdx_14 = HIGHD((rax_31 * rcx_7));\n                                rax_32 = LOWD((rax_31 * rcx_7));\n                                if (((rax_31 * rcx_7) >> 0x40) == 0)\n                                {\n                                    rbx_1 = rax_32;\n                                    rbp_1 = (rbp_1 | 0);\n                                }\n                            }\n                        }\n                        if (((((rbx_1 * rcx_7) >> 0x40) != 0 || (((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) != 0)) || ((((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) == 0) && ((rax_31 * rcx_7) >> 0x40) != 0)))\n                        {\n                            rbx_1 = -1;\n                            rbp_1 = (rbp_1 | 1);\n                        }\n                        goto label_407bdd;\n                    }\n                    case 6:\n                    case 0x26:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_407bff:\n                        uint64_t rax_15;\n                        int64_t rdx_6;\n                        rdx_6 = HIGHD((rbx_1 * rdx_3));\n                        rax_15 = LOWD((rbx_1 * rdx_3));\n                        bool o_3 = ((rbx_1 * rdx_3) >> 0x40) != 0;\n                        rbx_1 = rax_15;\n                        if ((!o_3))\n                        {\n                            goto label_407bdd;\n                        }\n                        goto label_407c07;\n                    }\n                    case 8:\n                    case 0x28:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_407bbe:\n                        int64_t rcx_1 = rdx_3;\n                        int64_t rax_10;\n                        int64_t rdx_4;\n                        rdx_4 = HIGHD((rbx_1 * rcx_1));\n                        rax_10 = LOWD((rbx_1 * rcx_1));\n                        if (((rbx_1 * rcx_1) >> 0x40) == 0)\n                        {\n                            uint64_t rax_11;\n                            int64_t rdx_5;\n                            rdx_5 = HIGHD((rax_10 * rcx_1));\n                            rax_11 = LOWD((rax_10 * rcx_1));\n                            if (((rax_10 * rcx_1) >> 0x40) != 0)\n                            {\n                                goto label_407c07;\n                            }\n                            rbx_1 = rax_11;\n                            goto label_407bdd;\n                        }\n                    label_407c07:\n                        rbp_1 = 1;\n                        rbx_1 = -1;\n                        goto label_407bdd;\n                    }\n                    case 0xb:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_407d08:\n                        int64_t rcx_5 = rdx_3;\n                        int32_t rdi_7 = 5;\n                        r9_1 = 0;\n                        int32_t temp14_1;\n                        do\n                        {\n                            uint64_t rax_26;\n                            int64_t rdx_10;\n                            rdx_10 = HIGHD((rbx_1 * rcx_5));\n                            rax_26 = LOWD((rbx_1 * rcx_5));\n                            bool o_7 = ((rbx_1 * rcx_5) >> 0x40) != 0;\n                            rbx_1 = rax_26;\n                            if (o_7)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp14_1 = rdi_7;\n                            rdi_7 = (rdi_7 - 1);\n                        } while (temp14_1 != 1);\n                        goto label_407c94;\n                    }\n                    case 0xf:\n                    case 0x2f:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_407cd8:\n                        int64_t rcx_4 = rdx_3;\n                        int32_t rdi_6 = 4;\n                        r9_1 = 0;\n                        int32_t temp13_1;\n                        do\n                        {\n                            uint64_t rax_24;\n                            int64_t rdx_9;\n                            rdx_9 = HIGHD((rbx_1 * rcx_4));\n                            rax_24 = LOWD((rbx_1 * rcx_4));\n                            bool o_6 = ((rbx_1 * rcx_4) >> 0x40) != 0;\n                            rbx_1 = rax_24;\n                            if (o_6)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp13_1 = rdi_6;\n                            rdi_6 = (rdi_6 - 1);\n                        } while (temp13_1 != 1);\n                        goto label_407c94;\n                    }\n                    case 0x14:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_407ca6:\n                        int64_t rcx_3 = rdx_3;\n                        int32_t rdi_5 = 8;\n                        r9_1 = 0;\n                        int32_t temp12_1;\n                        do\n                        {\n                            uint64_t rax_22;\n                            int64_t rdx_8;\n                            rdx_8 = HIGHD((rbx_1 * rcx_3));\n                            rax_22 = LOWD((rbx_1 * rcx_3));\n                            bool o_5 = ((rbx_1 * rcx_3) >> 0x40) != 0;\n                            rbx_1 = rax_22;\n                            if (o_5)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp12_1 = rdi_5;\n                            rdi_5 = (rdi_5 - 1);\n                        } while (temp12_1 != 1);\n                        goto label_407c94;\n                    }\n                    case 0x15:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_407c6b:\n                        int64_t rcx_2 = rdx_3;\n                        int32_t rdi_4 = 7;\n                        r9_1 = 0;\n                        int32_t temp11_1;\n                        do\n                        {\n                            uint64_t rax_20;\n                            int64_t rdx_7;\n                            rdx_7 = HIGHD((rbx_1 * rcx_2));\n                            rax_20 = LOWD((rbx_1 * rcx_2));\n                            bool o_4 = ((rbx_1 * rcx_2) >> 0x40) != 0;\n                            rbx_1 = rax_20;\n                            if (o_4)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp11_1 = rdi_4;\n                            rdi_4 = (rdi_4 - 1);\n                        } while (temp11_1 != 1);\n                    label_407c94:\n                        rbp_1 = (rbp_1 | r9_1);\n                        goto label_407bdd;\n                    }\n                    case 0x1d:\n                    {\n                        rsi_3 = 1;\n                        break;\n                    }\n                    case 0x1e:\n                    {\n                        rsi_3 = 1;\n                        goto label_407bdd;\n                    }\n                }\n            }\n            else\n            {\n            label_407b90:\n                rsi_3 = 1;\n                rdx_3 = 0x400;\n            label_407b9a:\n                char r12_2 = (r12_1 - 0x42);\n                if (r12_2 > 0x35)\n                {\n                    goto label_407c35;\n                }\n                switch (r12_2)\n                {\n                    case 0:\n                    {\n                        if ((rbx_1 >> 0x36) != 0)\n                        {\n                            goto label_407c07;\n                        }\n                        rbx_1 = (rbx_1 << 0xa);\n                        goto label_407bdd;\n                    }\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x2a:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x33:\n                    case 0x34:\n                    {\n                        goto label_407c35;\n                    }\n                    case 3:\n                    {\n                        goto label_407d3b;\n                    }\n                    case 5:\n                    case 0x25:\n                    {\n                        goto label_407d73;\n                    }\n                    case 9:\n                    case 0x29:\n                    {\n                        goto label_407bff;\n                    }\n                    case 0xb:\n                    case 0x2b:\n                    {\n                        goto label_407bbe;\n                    }\n                    case 0xe:\n                    {\n                        goto label_407d08;\n                    }\n                    case 0x12:\n                    case 0x32:\n                    {\n                        goto label_407cd8;\n                    }\n                    case 0x17:\n                    {\n                        goto label_407ca6;\n                    }\n                    case 0x18:\n                    {\n                        goto label_407c6b;\n                    }\n                    case 0x21:\n                    {\n                        goto label_407bdd;\n                    }\n                    case 0x35:\n                    {\n                        if (rbx_1 < 0)\n                        {\n                            goto label_407c07;\n                        }\n                        rbx_1 = (rbx_1 + rbx_1);\n                    label_407bdd:\n                        void* r8_2 = (r8_1 + rsi_3);\n                        int32_t rax_13 = (rbp_1 | 2);\n                        *r15 = r8_2;\n                        if (*r8_2 != 0)\n                        {\n                            rbp_1 = rax_13;\n                        }\n                        goto label_407ac2;\n                    }\n                }\n            }\n            if ((rbx_1 >> 0x37) != 0)\n            {\n                goto label_407c07;\n            }\n            rbx_1 = (rbx_1 << 9);\n            goto label_407bdd;\n        }\n        int32_t rax_4 = *rax;\n        if (rax_4 == 0)\n        {\n            rbp_1 = 0;\n        }\n        else\n        {\n            rbp_1 = 1;\n            if (rax_4 != 0x22)\n            {\n                goto label_407aea;\n            }\n        }\n        if (arg5 == 0)\n        {\n        label_407ac2:\n            *arg4 = rbx_1;\n        }\n        else\n        {\n            r12_1 = *r8;\n            if (r12_1 == 0)\n            {\n                goto label_407ac2;\n            }\n            var_58 = r8;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) != 0)\n            {\n                goto label_407b27;\n            }\n        label_407c35:\n            *arg4 = rbx_1;\n            rbp_1 = (rbp_1 | 2);\n        }\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_407e60",
            "funcStartAddr": "0x407e60",
            "funcEndAddr": "0x407edb",
            "decompiledFuncCode": "int64_t sub_407e60(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_407ee0(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_407ee0",
            "funcStartAddr": "0x407ee0",
            "funcEndAddr": "0x407f20",
            "decompiledFuncCode": "int64_t sub_407ee0(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_407f20(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_407f20",
            "funcStartAddr": "0x407f20",
            "funcEndAddr": "0x407f77",
            "decompiledFuncCode": "off64_t sub_407f20(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_407f80",
            "funcStartAddr": "0x407f80",
            "funcEndAddr": "0x40805f",
            "decompiledFuncCode": "uint64_t sub_407f80(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_408060",
            "funcStartAddr": "0x408060",
            "funcEndAddr": "0x40867c",
            "decompiledFuncCode": "uint64_t sub_408060(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_408290;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_4081b6;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_4081b6;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_4081b6:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_408290:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_4082be;\n                }\n                *arg5 = r12;\n            label_4082be:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_4082dc;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_4082dc:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_4082dc;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_40824e;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_40824e:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_408680",
            "funcStartAddr": "0x408680",
            "funcEndAddr": "0x408c46",
            "decompiledFuncCode": "uint64_t sub_408680(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_4088bc;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_408748;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_408748:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_407f80(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_40c281;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_407f80(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_4088bc;\n                }\n                *arg7 = rdx_2;\n            label_4088bc:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_4089c0;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_40c281;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_408a30;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_4089c0;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_4089c0;\n                            }\n                            goto label_408981;\n                        }\n                    label_408981:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_408060(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_40c282);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_4089c0:\n                            rdx = &r14_1[1];\n                        label_408801:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_4089fe;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_4089fe:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_40c2a0;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_408a30:\n                                        r14_2 = sub_408060(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_408aed;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_408aed:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_4088bc;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_408748;\n        }\n        goto label_408801;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_408cb0",
            "funcStartAddr": "0x408cb0",
            "funcEndAddr": "0x408cc8",
            "decompiledFuncCode": "uint64_t sub_408cb0(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_408d50",
            "funcStartAddr": "0x408d50",
            "funcEndAddr": "0x408dca",
            "decompiledFuncCode": "uint64_t sub_408d50(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_40c284[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_408d7a;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_408d7a:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_409170() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_408dd0",
            "funcStartAddr": "0x408dd0",
            "funcEndAddr": "0x408ed4",
            "decompiledFuncCode": "char* sub_408dd0(char* arg1, int32_t arg2, int64_t arg3)\n{\n    char r8 = arg2;\n    if (arg3 != 0)\n    {\n        if ((arg1 & 7) != 0)\n        {\n            if (arg2 == *arg1)\n            {\n            label_408ed0:\n                return arg1;\n            }\n            do\n            {\n                arg1 = &arg1[1];\n                int64_t temp0_1 = arg3;\n                arg3 = (arg3 - 1);\n                if (temp0_1 == 1)\n                {\n                    return 0;\n                }\n                if ((arg1 & 7) == 0)\n                {\n                    break;\n                }\n            } while (*arg1 != r8);\n            if ((arg1 & 7) != 0)\n            {\n                goto label_408ed0;\n            }\n        }\n        int64_t r9_5 = ((arg2 << 8) | arg2);\n        int64_t r9_6 = (r9_5 | (r9_5 << 0x10));\n        int64_t r9_7 = (r9_6 | (r9_6 << 0x20));\n        int64_t rax_8;\n        if (arg3 > 7)\n        {\n            rax_8 = (*arg1 ^ r9_7);\n            if ((((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0)\n            {\n                int64_t rax_12;\n                do\n                {\n                    arg3 = (arg3 - 8);\n                    arg1 = &arg1[8];\n                    if (arg3 <= 7)\n                    {\n                        break;\n                    }\n                    rax_12 = (*arg1 ^ r9_7);\n                } while ((((!rax_12) & (rax_12 - 0x101010101010101)) & 0x8080808080808080) == 0);\n            }\n        }\n        if ((((arg3 <= 7 || (arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) != 0)) || (((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 <= 7) && arg3 != 0)) || ((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 > 7)))\n        {\n            if (arg2 == *arg1)\n            {\n                goto label_408ed0;\n            }\n            char* rcx_3 = &arg1[1];\n            void* rdi = &arg1[arg3];\n            while (true)\n            {\n                char* rax_15 = rcx_3;\n                if (rcx_3 == rdi)\n                {\n                    return 0;\n                }\n                rcx_3 = &rcx_3[1];\n                if (rcx_3[-1] == r8)\n                {\n                    return rax_15;\n                }\n            }\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_408ee0",
            "funcStartAddr": "0x408ee0",
            "funcEndAddr": "0x40903a",
            "decompiledFuncCode": "uint64_t sub_408ee0(char* arg1, int32_t* arg2)\n{\n    void* r13 = &data_60e324;\n    void* r12 = arg1;\n    uint64_t rbx = 0;\n    uint64_t rax_5;\n    char* var_30;\n    int64_t rax_4;\n    if ((*arg1 - 0x30) <= 9)\n    {\n        rax_4 = strtol(arg1, &var_30, 0xa);\n        if (*var_30 == 0)\n        {\n            if (rax_4 <= 0x40)\n            {\n                goto label_408f2e;\n            }\n            goto label_408f60;\n        }\n    label_408f60:\n        *arg2 = 0xffffffff;\n        rax_5 = 0xffffffff;\n    }\n    else\n    {\n        int32_t rax_2;\n        do\n        {\n            rax_2 = strcmp(r13, r12);\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            rbx = (rbx + 1);\n            r13 = (r13 + 0xc);\n        } while (rbx != 0x23);\n        if (rax_2 != 0)\n        {\n            int32_t rax_6 = __libc_current_sigrtmin();\n            int32_t rbx_1 = __libc_current_sigrtmax();\n            bool c_1 = false;\n            bool z_1 = (rax_6 & rax_6) == 0;\n            int32_t rax_7;\n            if ((!(z_1 || (rax_6 & rax_6) < 0 != false)))\n            {\n                void* const rdi_1 = \"RTMIN\";\n                int64_t rcx_1 = 5;\n                void* rsi_2 = r12;\n                while (rcx_1 != 0)\n                {\n                    char temp0_1 = *rsi_2;\n                    char temp1_1 = *rdi_1;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_1 = (rcx_1 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rax_7 = ((!z_1) && (!c_1));\n                rax_7 = (rax_7 - 0);\n                if (rax_7 == 0)\n                {\n                    int64_t rax_9 = strtol((r12 + 5), &var_30, 0xa);\n                    if (*var_30 != 0)\n                    {\n                        goto label_408f60;\n                    }\n                    if (rax_9 < 0)\n                    {\n                        goto label_408f60;\n                    }\n                    if (rax_9 > (rbx_1 - rax_6))\n                    {\n                        goto label_408f60;\n                    }\n                    rax_4 = (rax_9 + rax_6);\n                    goto label_408f2e;\n                }\n            }\n            bool c_2 = false;\n            bool z_2 = (rbx_1 & rbx_1) == 0;\n            if ((z_2 || (rbx_1 & rbx_1) < 0 != false))\n            {\n                goto label_408f60;\n            }\n            void* const rdi_2 = \"RTMAX\";\n            int64_t rcx_2 = 5;\n            void* rsi_3 = r12;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_3;\n                char temp3_1 = *rdi_2;\n                c_2 = temp2_1 < temp3_1;\n                z_2 = temp2_1 == temp3_1;\n                rsi_3 = (rsi_3 + 1);\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_2))\n                {\n                    break;\n                }\n            }\n            rax_7 = ((!z_2) && (!c_2));\n            rax_7 = (rax_7 - 0);\n            if (rax_7 != 0)\n            {\n                goto label_408f60;\n            }\n            int64_t rax_8 = strtol((r12 + 5), &var_30, 0xa);\n            if (*var_30 != 0)\n            {\n                goto label_408f60;\n            }\n            if (rax_8 < (rax_6 - rbx_1))\n            {\n                goto label_408f60;\n            }\n            if (rax_8 > 0)\n            {\n                goto label_408f60;\n            }\n            rax_4 = (rax_8 + rbx_1);\n            goto label_408f2e;\n        }\n        rax_4 = *((rbx * 0xc) + 0x60e320);\n    label_408f2e:\n        *arg2 = rax_4;\n        rax_5 = (rax_4 >> 0x1f);\n    }\n    return rax_5;\n}\n\n"
        },
        {
            "funcName": "sub_409040",
            "funcStartAddr": "0x409040",
            "funcEndAddr": "0x40910c",
            "decompiledFuncCode": "uint64_t sub_409040(int32_t arg1, char* arg2)\n{\n    int32_t* rcx = &data_60e320;\n    uint64_t rdx = 0;\n    uint64_t rax_1;\n    while (true)\n    {\n        if (*rcx == arg1)\n        {\n            strcpy(arg2, ((rdx * 0xc) + &data_60e324));\n            rax_1 = 0;\n            break;\n        }\n        rdx = (rdx + 1);\n        rcx = &rcx[3];\n        if (rdx == 0x23)\n        {\n            int32_t r12_1 = __libc_current_sigrtmin();\n            int32_t rax_3 = __libc_current_sigrtmax();\n            if ((arg1 < r12_1 || (arg1 >= r12_1 && arg1 > rax_3)))\n            {\n                rax_1 = 0xffffffff;\n            }\n            if ((arg1 >= r12_1 && arg1 <= rax_3))\n            {\n                if ((((rax_3 - r12_1) >> 1) + r12_1) >= arg1)\n                {\n                    *arg2 = 0x494d5452;\n                    *(arg2 + 4) = 0x4e;\n                }\n                else\n                {\n                    *arg2 = 0x414d5452;\n                    r12_1 = rax_3;\n                    *(arg2 + 4) = 0x58;\n                }\n                rax_1 = (arg1 - r12_1);\n                if (arg1 != r12_1)\n                {\n                    __sprintf_chk(&arg2[5], 1, -1, &data_40c2b0, rax_1);\n                    return 0;\n                }\n            }\n            break;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_409110",
            "funcStartAddr": "0x409110",
            "funcEndAddr": "0x40916d",
            "decompiledFuncCode": "uint64_t sub_409110(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_407e60(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_409170",
            "funcStartAddr": "0x409170",
            "funcEndAddr": "0x4091ce",
            "decompiledFuncCode": "int64_t sub_409170()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_40c2b4;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            void* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4091d0",
            "funcStartAddr": "0x4091d0",
            "funcEndAddr": "0x409732",
            "decompiledFuncCode": "char* sub_4091d0()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_60e8f8;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_40c284[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        size_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            size_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_4092cc;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_409316;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_4092cc:\n            r15 = &data_40c284[0x1b];\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_409316:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, \"r\");\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_4093cc:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_40955b;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_409408:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_409408;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_409442:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_409442;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_40c284[0x1b];\n                                    free(rdi_26);\n                                    sub_407e60(rax_12);\n                                    goto label_409357;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_40961b:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_40961b;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_409669:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_409669;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_4093cc;\n                        }\n                        break;\n                    }\n                label_40955b:\n                    sub_407e60(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_40c284[0x1b];\n            }\n        label_409357:\n            free(rbp_3);\n        }\n        data_60e8f8 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_409740",
            "funcStartAddr": "0x409740",
            "funcEndAddr": "0x40974e",
            "decompiledFuncCode": "int64_t sub_409740(int32_t arg1)\n{\n    /* tailcall */\n    return sub_409750(arg1, 0, 3);\n}\n\n"
        },
        {
            "funcName": "sub_409750",
            "funcStartAddr": "0x409750",
            "funcEndAddr": "0x409885",
            "decompiledFuncCode": "uint64_t sub_409750(int32_t arg1, int32_t arg2, int32_t arg3)\n{\n    void* var_58 = &arg_8;\n    int64_t rcx;\n    int64_t var_30 = rcx;\n    int32_t var_60 = 0x10;\n    void var_48;\n    void* var_50 = &var_48;\n    if (arg2 != 0x406)\n    {\n        return fcntl();\n    }\n    int32_t var_60_1 = 0x18;\n    int32_t rax_2;\n    int32_t rax_5;\n    int32_t* rax_15;\n    int32_t rax_17;\n    int32_t rbx;\n    if (data_60e900 < 0)\n    {\n        rax_5 = sub_409750();\n        rbx = rax_5;\n    }\n    else\n    {\n        rax_2 = fcntl();\n        rbx = rax_2;\n        if (rax_2 < 0)\n        {\n            rax_15 = __errno_location();\n            if (*rax_15 == 0x16)\n            {\n                rax_17 = sub_409750(arg1, 0, arg3);\n                rbx = rax_17;\n                if (rax_17 >= 0)\n                {\n                    data_60e900 = 0xffffffff;\n                }\n            }\n        }\n    }\n    if (((((data_60e900 >= 0 && rax_2 < 0) && *rax_15 == 0x16) && rax_17 >= 0) || (rax_5 >= 0 && data_60e900 == 0xffffffff)))\n    {\n        int32_t rax_7 = fcntl(rbx, 1);\n        int32_t rax_10;\n        if (rax_7 >= 0)\n        {\n            rax_10 = fcntl(rbx, 2, (rax_7 | 1));\n        }\n        if ((rax_7 < 0 || (rax_7 >= 0 && rax_10 == 0xffffffff)))\n        {\n            int32_t* rax_11 = __errno_location();\n            int32_t rdi_2 = rbx;\n            rbx = -1;\n            int32_t r12_1 = *rax_11;\n            close(rdi_2);\n            *rax_11 = r12_1;\n        }\n    }\n    if ((data_60e900 >= 0 && (rax_2 >= 0 || (rax_2 < 0 && *rax_15 != 0x16))))\n    {\n        data_60e900 = 1;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x409890",
            "funcEndAddr": "0x4098ed",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x4098f0",
            "funcEndAddr": "0x4098f1",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_409900",
            "funcStartAddr": "0x409900",
            "funcEndAddr": "0x409918",
            "decompiledFuncCode": "int64_t sub_409900(void (* arg1)(void*))\n{\n    int64_t rdx = data_60e288;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_409918",
            "funcStartAddr": "0x409918",
            "funcEndAddr": "0x409938",
            "decompiledFuncCode": "int64_t sub_409918(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_60de30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}