{
    "decompilerName": "binaryNinja",
    "binaryName": "findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_xargs.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 207,
    "funcInfo": [
        {
            "funcName": "sub_401ae0",
            "funcStartAddr": "0x401ae0",
            "funcEndAddr": "0x401aec",
            "decompiledFuncCode": "int64_t sub_401ae0()\n{\n    int64_t var_8 = data_612008;\n    /* jump -> data_612010 */\n}\n\n"
        },
        {
            "funcName": "sub_401af6",
            "funcStartAddr": "0x401af6",
            "funcEndAddr": "0x401b00",
            "decompiledFuncCode": "int64_t sub_401af6()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401b06",
            "funcStartAddr": "0x401b06",
            "funcEndAddr": "0x401b10",
            "decompiledFuncCode": "int64_t sub_401b06()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401b16",
            "funcStartAddr": "0x401b16",
            "funcEndAddr": "0x401b20",
            "decompiledFuncCode": "int64_t sub_401b16()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401b26",
            "funcStartAddr": "0x401b26",
            "funcEndAddr": "0x401b30",
            "decompiledFuncCode": "int64_t sub_401b26()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401b36",
            "funcStartAddr": "0x401b36",
            "funcEndAddr": "0x401b40",
            "decompiledFuncCode": "int64_t sub_401b36()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401b46",
            "funcStartAddr": "0x401b46",
            "funcEndAddr": "0x401b50",
            "decompiledFuncCode": "int64_t sub_401b46()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401b56",
            "funcStartAddr": "0x401b56",
            "funcEndAddr": "0x401b60",
            "decompiledFuncCode": "int64_t sub_401b56()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401b66",
            "funcStartAddr": "0x401b66",
            "funcEndAddr": "0x401b70",
            "decompiledFuncCode": "int64_t sub_401b66()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401b76",
            "funcStartAddr": "0x401b76",
            "funcEndAddr": "0x401b80",
            "decompiledFuncCode": "int64_t sub_401b76()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401b86",
            "funcStartAddr": "0x401b86",
            "funcEndAddr": "0x401b90",
            "decompiledFuncCode": "int64_t sub_401b86()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401b96",
            "funcStartAddr": "0x401b96",
            "funcEndAddr": "0x401ba0",
            "decompiledFuncCode": "int64_t sub_401b96()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401ba6",
            "funcStartAddr": "0x401ba6",
            "funcEndAddr": "0x401bb0",
            "decompiledFuncCode": "int64_t sub_401ba6()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401bb6",
            "funcStartAddr": "0x401bb6",
            "funcEndAddr": "0x401bc0",
            "decompiledFuncCode": "int64_t sub_401bb6()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401bc6",
            "funcStartAddr": "0x401bc6",
            "funcEndAddr": "0x401bd0",
            "decompiledFuncCode": "int64_t sub_401bc6()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401bd6",
            "funcStartAddr": "0x401bd6",
            "funcEndAddr": "0x401be0",
            "decompiledFuncCode": "int64_t sub_401bd6()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401be6",
            "funcStartAddr": "0x401be6",
            "funcEndAddr": "0x401bf0",
            "decompiledFuncCode": "int64_t sub_401be6()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401bf6",
            "funcStartAddr": "0x401bf6",
            "funcEndAddr": "0x401c00",
            "decompiledFuncCode": "int64_t sub_401bf6()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401c06",
            "funcStartAddr": "0x401c06",
            "funcEndAddr": "0x401c10",
            "decompiledFuncCode": "int64_t sub_401c06()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401c16",
            "funcStartAddr": "0x401c16",
            "funcEndAddr": "0x401c20",
            "decompiledFuncCode": "int64_t sub_401c16()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401c26",
            "funcStartAddr": "0x401c26",
            "funcEndAddr": "0x401c30",
            "decompiledFuncCode": "int64_t sub_401c26()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401c36",
            "funcStartAddr": "0x401c36",
            "funcEndAddr": "0x401c40",
            "decompiledFuncCode": "int64_t sub_401c36()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401c46",
            "funcStartAddr": "0x401c46",
            "funcEndAddr": "0x401c50",
            "decompiledFuncCode": "int64_t sub_401c46()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401c56",
            "funcStartAddr": "0x401c56",
            "funcEndAddr": "0x401c60",
            "decompiledFuncCode": "int64_t sub_401c56()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401c66",
            "funcStartAddr": "0x401c66",
            "funcEndAddr": "0x401c70",
            "decompiledFuncCode": "int64_t sub_401c66()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401c76",
            "funcStartAddr": "0x401c76",
            "funcEndAddr": "0x401c80",
            "decompiledFuncCode": "int64_t sub_401c76()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401c86",
            "funcStartAddr": "0x401c86",
            "funcEndAddr": "0x401c90",
            "decompiledFuncCode": "int64_t sub_401c86()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401c96",
            "funcStartAddr": "0x401c96",
            "funcEndAddr": "0x401ca0",
            "decompiledFuncCode": "int64_t sub_401c96()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401ca6",
            "funcStartAddr": "0x401ca6",
            "funcEndAddr": "0x401cb0",
            "decompiledFuncCode": "int64_t sub_401ca6()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401cb6",
            "funcStartAddr": "0x401cb6",
            "funcEndAddr": "0x401cc0",
            "decompiledFuncCode": "int64_t sub_401cb6()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401cc6",
            "funcStartAddr": "0x401cc6",
            "funcEndAddr": "0x401cd0",
            "decompiledFuncCode": "int64_t sub_401cc6()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401cd6",
            "funcStartAddr": "0x401cd6",
            "funcEndAddr": "0x401ce0",
            "decompiledFuncCode": "int64_t sub_401cd6()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401ce6",
            "funcStartAddr": "0x401ce6",
            "funcEndAddr": "0x401cf0",
            "decompiledFuncCode": "int64_t sub_401ce6()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401cf6",
            "funcStartAddr": "0x401cf6",
            "funcEndAddr": "0x401d00",
            "decompiledFuncCode": "int64_t sub_401cf6()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401d06",
            "funcStartAddr": "0x401d06",
            "funcEndAddr": "0x401d10",
            "decompiledFuncCode": "int64_t sub_401d06()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401d16",
            "funcStartAddr": "0x401d16",
            "funcEndAddr": "0x401d20",
            "decompiledFuncCode": "int64_t sub_401d16()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401d26",
            "funcStartAddr": "0x401d26",
            "funcEndAddr": "0x401d30",
            "decompiledFuncCode": "int64_t sub_401d26()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401d36",
            "funcStartAddr": "0x401d36",
            "funcEndAddr": "0x401d40",
            "decompiledFuncCode": "int64_t sub_401d36()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401d46",
            "funcStartAddr": "0x401d46",
            "funcEndAddr": "0x401d50",
            "decompiledFuncCode": "int64_t sub_401d46()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401d56",
            "funcStartAddr": "0x401d56",
            "funcEndAddr": "0x401d60",
            "decompiledFuncCode": "int64_t sub_401d56()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401d66",
            "funcStartAddr": "0x401d66",
            "funcEndAddr": "0x401d70",
            "decompiledFuncCode": "int64_t sub_401d66()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401d76",
            "funcStartAddr": "0x401d76",
            "funcEndAddr": "0x401d80",
            "decompiledFuncCode": "int64_t sub_401d76()\n{\n    int64_t var_8 = 0x28;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401d86",
            "funcStartAddr": "0x401d86",
            "funcEndAddr": "0x401d90",
            "decompiledFuncCode": "int64_t sub_401d86()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401d96",
            "funcStartAddr": "0x401d96",
            "funcEndAddr": "0x401da0",
            "decompiledFuncCode": "int64_t sub_401d96()\n{\n    int64_t var_8 = 0x2a;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401da6",
            "funcStartAddr": "0x401da6",
            "funcEndAddr": "0x401db0",
            "decompiledFuncCode": "int64_t sub_401da6()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401db6",
            "funcStartAddr": "0x401db6",
            "funcEndAddr": "0x401dc0",
            "decompiledFuncCode": "int64_t sub_401db6()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401dc6",
            "funcStartAddr": "0x401dc6",
            "funcEndAddr": "0x401dd0",
            "decompiledFuncCode": "int64_t sub_401dc6()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401dd6",
            "funcStartAddr": "0x401dd6",
            "funcEndAddr": "0x401de0",
            "decompiledFuncCode": "int64_t sub_401dd6()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401de6",
            "funcStartAddr": "0x401de6",
            "funcEndAddr": "0x401df0",
            "decompiledFuncCode": "int64_t sub_401de6()\n{\n    int64_t var_8 = 0x2f;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401df6",
            "funcStartAddr": "0x401df6",
            "funcEndAddr": "0x401e00",
            "decompiledFuncCode": "int64_t sub_401df6()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401e06",
            "funcStartAddr": "0x401e06",
            "funcEndAddr": "0x401e10",
            "decompiledFuncCode": "int64_t sub_401e06()\n{\n    int64_t var_8 = 0x31;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401e16",
            "funcStartAddr": "0x401e16",
            "funcEndAddr": "0x401e20",
            "decompiledFuncCode": "int64_t sub_401e16()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401e26",
            "funcStartAddr": "0x401e26",
            "funcEndAddr": "0x401e30",
            "decompiledFuncCode": "int64_t sub_401e26()\n{\n    int64_t var_8 = 0x33;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401e36",
            "funcStartAddr": "0x401e36",
            "funcEndAddr": "0x401e40",
            "decompiledFuncCode": "int64_t sub_401e36()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401e46",
            "funcStartAddr": "0x401e46",
            "funcEndAddr": "0x401e50",
            "decompiledFuncCode": "int64_t sub_401e46()\n{\n    int64_t var_8 = 0x35;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401e56",
            "funcStartAddr": "0x401e56",
            "funcEndAddr": "0x401e60",
            "decompiledFuncCode": "int64_t sub_401e56()\n{\n    int64_t var_8 = 0x36;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401e66",
            "funcStartAddr": "0x401e66",
            "funcEndAddr": "0x401e70",
            "decompiledFuncCode": "int64_t sub_401e66()\n{\n    int64_t var_8 = 0x37;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401e76",
            "funcStartAddr": "0x401e76",
            "funcEndAddr": "0x401e80",
            "decompiledFuncCode": "int64_t sub_401e76()\n{\n    int64_t var_8 = 0x38;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401e86",
            "funcStartAddr": "0x401e86",
            "funcEndAddr": "0x401e90",
            "decompiledFuncCode": "int64_t sub_401e86()\n{\n    int64_t var_8 = 0x39;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401e96",
            "funcStartAddr": "0x401e96",
            "funcEndAddr": "0x401ea0",
            "decompiledFuncCode": "int64_t sub_401e96()\n{\n    int64_t var_8 = 0x3a;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401ea6",
            "funcStartAddr": "0x401ea6",
            "funcEndAddr": "0x401eb0",
            "decompiledFuncCode": "int64_t sub_401ea6()\n{\n    int64_t var_8 = 0x3b;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401eb6",
            "funcStartAddr": "0x401eb6",
            "funcEndAddr": "0x401ec0",
            "decompiledFuncCode": "int64_t sub_401eb6()\n{\n    int64_t var_8 = 0x3c;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401ec6",
            "funcStartAddr": "0x401ec6",
            "funcEndAddr": "0x401ed0",
            "decompiledFuncCode": "int64_t sub_401ec6()\n{\n    int64_t var_8 = 0x3d;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401ed6",
            "funcStartAddr": "0x401ed6",
            "funcEndAddr": "0x401ee0",
            "decompiledFuncCode": "int64_t sub_401ed6()\n{\n    int64_t var_8 = 0x3e;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401ee6",
            "funcStartAddr": "0x401ee6",
            "funcEndAddr": "0x401ef0",
            "decompiledFuncCode": "int64_t sub_401ee6()\n{\n    int64_t var_8 = 0x3f;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401ef6",
            "funcStartAddr": "0x401ef6",
            "funcEndAddr": "0x401f00",
            "decompiledFuncCode": "int64_t sub_401ef6()\n{\n    int64_t var_8 = 0x40;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401f06",
            "funcStartAddr": "0x401f06",
            "funcEndAddr": "0x401f10",
            "decompiledFuncCode": "int64_t sub_401f06()\n{\n    int64_t var_8 = 0x41;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401f16",
            "funcStartAddr": "0x401f16",
            "funcEndAddr": "0x401f20",
            "decompiledFuncCode": "int64_t sub_401f16()\n{\n    int64_t var_8 = 0x42;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401f26",
            "funcStartAddr": "0x401f26",
            "funcEndAddr": "0x401f30",
            "decompiledFuncCode": "int64_t sub_401f26()\n{\n    int64_t var_8 = 0x43;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401f36",
            "funcStartAddr": "0x401f36",
            "funcEndAddr": "0x401f40",
            "decompiledFuncCode": "int64_t sub_401f36()\n{\n    int64_t var_8 = 0x44;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401f46",
            "funcStartAddr": "0x401f46",
            "funcEndAddr": "0x401f50",
            "decompiledFuncCode": "int64_t sub_401f46()\n{\n    int64_t var_8 = 0x45;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401f56",
            "funcStartAddr": "0x401f56",
            "funcEndAddr": "0x401f60",
            "decompiledFuncCode": "int64_t sub_401f56()\n{\n    int64_t var_8 = 0x46;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401f66",
            "funcStartAddr": "0x401f66",
            "funcEndAddr": "0x401f70",
            "decompiledFuncCode": "int64_t sub_401f66()\n{\n    int64_t var_8 = 0x47;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401f76",
            "funcStartAddr": "0x401f76",
            "funcEndAddr": "0x401f80",
            "decompiledFuncCode": "int64_t sub_401f76()\n{\n    int64_t var_8 = 0x48;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401f86",
            "funcStartAddr": "0x401f86",
            "funcEndAddr": "0x401f90",
            "decompiledFuncCode": "int64_t sub_401f86()\n{\n    int64_t var_8 = 0x49;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401f96",
            "funcStartAddr": "0x401f96",
            "funcEndAddr": "0x401fa0",
            "decompiledFuncCode": "int64_t sub_401f96()\n{\n    int64_t var_8 = 0x4a;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401fa6",
            "funcStartAddr": "0x401fa6",
            "funcEndAddr": "0x401fb0",
            "decompiledFuncCode": "int64_t sub_401fa6()\n{\n    int64_t var_8 = 0x4b;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401fb6",
            "funcStartAddr": "0x401fb6",
            "funcEndAddr": "0x401fc0",
            "decompiledFuncCode": "int64_t sub_401fb6()\n{\n    int64_t var_8 = 0x4c;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401fc6",
            "funcStartAddr": "0x401fc6",
            "funcEndAddr": "0x401fd0",
            "decompiledFuncCode": "int64_t sub_401fc6()\n{\n    int64_t var_8 = 0x4d;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401fd6",
            "funcStartAddr": "0x401fd6",
            "funcEndAddr": "0x401fe0",
            "decompiledFuncCode": "int64_t sub_401fd6()\n{\n    int64_t var_8 = 0x4e;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "sub_401fe6",
            "funcStartAddr": "0x401fe6",
            "funcEndAddr": "0x401ff0",
            "decompiledFuncCode": "int64_t sub_401fe6()\n{\n    int64_t var_8 = 0x4f;\n    /* tailcall */\n    return sub_401ae0();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x402030",
            "funcEndAddr": "0x402dd4",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    int32_t rbp = argc;\n    char** rbx = argv;\n    char* rdi = *argv;\n    int32_t var_e5 = 0x6f686365;\n    char var_e1 = 0;\n    if (rdi == 0)\n    {\n        rdi = \"xargs\";\n    }\n    sub_4075c0(rdi);\n    sub_4053a0();\n    int32_t rax;\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rax = getpid();\n    data_6123c4 = 0;\n    data_6123d0 = rax;\n    void var_118;\n    int32_t var_110;\n    setlocale(6, &data_40f2ba[0x1b], rdx, rcx, r8, r9, var_118, var_110);\n    bindtextdomain(\"findutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"findutils\");\n    int32_t rax_1 = sub_40bc80(sub_4058e0);\n    int32_t rax_9;\n    if (rax_1 == 0)\n    {\n        rax_9 = sub_40bc80(sub_403ec0);\n    }\n    if ((rax_1 != 0 || (rax_1 == 0 && rax_9 != 0)))\n    {\n        error(1, *__errno_location(), dcgettext(nullptr, \"The atexit library function fail\u2026\", 5));\n    }\n    int64_t r14 = 0x402f00;\n    int32_t rax_5 = sub_404ea0(&data_612420, 0x800);\n    if ((rax_5 - 1) > 1)\n    {\n        int64_t rax_30 = sysconf(0);\n        if (rax_30 > 0)\n        {\n            if (rax_30 <= 0x800)\n            {\n                __assert_fail(\"val > XARGS_POSIX_HEADROOM\", \"xargs.c\", 0x1d8, \"main\");\n                /* no return */\n            }\n            int64_t rdx_4 = data_612438;\n            int64_t rax_31 = (rax_30 - 0x800);\n            if (rax_31 > rdx_4)\n            {\n                rax_31 = rdx_4;\n            }\n            data_612438 = rax_31;\n        }\n        if (data_612438 <= 0x7ff)\n        {\n            __assert_fail(\"bc_ctl.arg_max >= LINE_MAX\", \"xargs.c\", 0x1f4, \"main\");\n            /* no return */\n        }\n        r14 = 0x402ec0;\n        data_612460 = 0x404120;\n        sub_404f80(&data_612420);\n    }\n    int32_t var_10c = 1;\n    int64_t r12_2 = 0x4038b0;\n    void* const r15 = &data_40f292;\n    int32_t var_110_1 = 0;\n    int32_t rax_23;\n    while (true)\n    {\n        int32_t var_ec;\n        int32_t rax_7 = getopt_long(rbp, rbx, \"+0a:E:e::i::I:l::L:n:prs:txP:d:\", &data_40d6e0, &var_ec);\n        char* var_d8;\n        if (rax_7 == 0xffffffff)\n        {\n            if ((data_6123f8 != 0 && r12_2 == 0x403790))\n            {\n                error(0, 0, dcgettext(nullptr, \"warning: the -E option has no ef\u2026\", 5));\n            }\n            r14();\n            if (rax_5 != 0)\n            {\n                __assert_fail(\"BC_INIT_OK == bcstatus\", \"xargs.c\", 0x2a2, \"main\");\n                /* no return */\n            }\n            var_d8 = sub_402ed0;\n            void var_d0;\n            sigemptyset(&var_d0);\n            int32_t var_50_1 = 0;\n            if (sigaction(0xa, &var_d8, nullptr) != 0)\n            {\n                error(0, *__errno_location(), dcgettext(nullptr, \"Cannot set SIGUSR1 signal handle\u2026\", 5));\n            }\n            var_d8 = sub_403720;\n            sigemptyset(&var_d0);\n            int32_t var_50_2 = 0;\n            if (sigaction(0xc, &var_d8, nullptr) != 0)\n            {\n                error(0, *__errno_location(), dcgettext(nullptr, \"Cannot set SIGUSR2 signal handle\u2026\", 5));\n            }\n            if (strcmp(r15, &data_40f292) == 0)\n            {\n                data_6124e8 = stdin;\n            }\n            else\n            {\n                data_6124d8 = 1;\n                FILE* rax_90 = sub_4036c0();\n                data_6124e8 = rax_90;\n                if (rax_90 == 0)\n                {\n                    error(1, *__errno_location(), dcgettext(nullptr, \"Cannot open input file %s\", 5), sub_408c90(0, 8, r15));\n                }\n            }\n            if ((data_612450 != 0 || (data_612450 == 0 && data_612468 != 0)))\n            {\n                data_612420 = 1;\n            }\n            if (data_61233c == rbp)\n            {\n                char* var_e0;\n                rbx = &var_e0;\n                rbp = 1;\n                data_61233c = 0;\n                var_e0 = &var_e5;\n            }\n            if (var_110_1 != 0)\n            {\n                fprintf(stderr, dcgettext(nullptr, \"Your environment variables take \u2026\", 5), sub_404e60());\n                int64_t r13_3 = data_612428;\n                fprintf(stderr, dcgettext(nullptr, \"POSIX upper limit on argument le\u2026\", 5), r13_3);\n                fprintf(stderr, dcgettext(nullptr, \"POSIX smallest allowable upper l\u2026\", 5), data_612430);\n                fprintf(stderr, dcgettext(nullptr, \"Maximum length of command we cou\u2026\", 5), (data_612428 - sub_404e60()));\n                int64_t r13_6 = data_612438;\n                fprintf(stderr, dcgettext(nullptr, \"Size of command buffer we are ac\u2026\", 5), r13_6);\n                fprintf(stderr, dcgettext(nullptr, \"Maximum parallelism (--max-procs\u2026\", 5), 0x7fffffff);\n                if (isatty(0) != 0)\n                {\n                    fprintf(stderr, dcgettext(nullptr, \"\\nExecution of xargs will contin\u2026\", 5));\n                    if (var_10c != 0)\n                    {\n                        fprintf(stderr, dcgettext(nullptr, \"Warning: %s will be run at least\u2026\", 5), rbx[data_61233c]);\n                    }\n                }\n            }\n            data_6124e0 = sub_409680((data_612438 + 1));\n            data_612498 = sub_409680((data_612438 + 1));\n            int64_t rsi_7 = signal(0x11, nullptr);\n            if (data_612450 != 0)\n            {\n                int64_t rax_51 = sub_409680((rbp << 3));\n                int64_t rdx_9 = data_61233c;\n                if (rbp > rdx_9)\n                {\n                    do\n                    {\n                        int64_t rdi_20 = rbx[rdx_9];\n                        int64_t rcx_13 = -1;\n                        while (rcx_13 != 0)\n                        {\n                            bool cond:6_1 = 0 != *rdi_20;\n                            rdi_20 = (rdi_20 + 1);\n                            rcx_13 = (rcx_13 - 1);\n                            if ((!cond:6_1))\n                            {\n                                break;\n                            }\n                        }\n                        *(rax_51 + (rdx_9 << 3)) = ((!rcx_13) - 1);\n                        rdx_9 = (rdx_9 + 1);\n                    } while (rbp > rdx_9);\n                }\n                int64_t rdi_21 = data_612450;\n                int64_t rcx_16 = -1;\n                while (rcx_16 != 0)\n                {\n                    bool cond:5_1 = 0 != *rdi_21;\n                    rdi_21 = (rdi_21 + 1);\n                    rcx_16 = (rcx_16 - 1);\n                    if ((!cond:5_1))\n                    {\n                        break;\n                    }\n                }\n                data_612448 = ((!rcx_16) - 1);\n                while (true)\n                {\n                    int32_t rax_55 = r12_2();\n                    if (rax_55 == 0xffffffff)\n                    {\n                        break;\n                    }\n                    sub_405050(&data_612420, &data_612480);\n                    int64_t rax_56 = data_61233c;\n                    int64_t r14_2 = (rax_55 - 1);\n                    data_6124a0 = 0;\n                    int64_t var_120_1 = rax_56;\n                    sub_4047a0(&data_612420, &data_612480, rbx[rax_56], (*(rax_51 + (rax_56 << 3)) + 1), nullptr, 0, data_6122b4);\n                    int32_t rax_58 = data_61233c;\n                    data_6122b4 = 0;\n                    int64_t r13_1 = (rax_58 + 1);\n                    if (rbp > (rax_58 + 1))\n                    {\n                        do\n                        {\n                            uint64_t rcx_19 = *(rax_51 + (r13_1 << 3));\n                            void* rdx_12 = rbx[r13_1];\n                            r13_1 = (r13_1 + 1);\n                            sub_404a40(&data_612420, &data_612480, rdx_12, rcx_19, nullptr, 0, data_6124e0, r14_2, data_6122b4);\n                        } while (rbp > r13_1);\n                    }\n                    sub_404c00(&data_612420, &data_612480);\n                }\n            }\n            else\n            {\n                while (true)\n                {\n                    int64_t rax_62 = data_61233c;\n                    if (rax_62 >= rbp)\n                    {\n                        break;\n                    }\n                    char* rdx_13 = rbx[rax_62];\n                    int64_t rcx_20 = -1;\n                    char* rdi_22 = rdx_13;\n                    while (rcx_20 != 0)\n                    {\n                        bool cond:4_1 = 0 != *rdi_22;\n                        rdi_22 = &rdi_22[1];\n                        rcx_20 = (rcx_20 - 1);\n                        if ((!cond:4_1))\n                        {\n                            break;\n                        }\n                    }\n                    int64_t var_120_2 = rsi_7;\n                    rsi_7 = sub_4047a0(&data_612420, &data_612480, rdx_13, (!rcx_20), nullptr, 0, data_6122b4);\n                    data_61233c = (data_61233c + 1);\n                }\n                int64_t rax_63 = data_612480;\n                data_6122b4 = 0;\n                data_612458 = rax_63;\n                data_6124a8 = data_6124a0;\n                while (true)\n                {\n                    if (r12_2() == 0xffffffff)\n                    {\n                        break;\n                    }\n                    int64_t rax_67 = data_612468;\n                    if ((rax_67 != 0 && rax_67 <= data_6124d0))\n                    {\n                        sub_404c00(&data_612420, &data_612480);\n                        data_6124d0 = 0;\n                    }\n                }\n                if ((data_612480 != data_612458 || ((data_612480 == data_612458 && var_10c != 0) && data_6123f0 == 0)))\n                {\n                    sub_404c00(&data_612420, &data_612480);\n                }\n            }\n            data_6123c4 = data_6123c8;\n            rax_23 = data_6123c8;\n            break;\n        }\n        uint64_t rax_8 = (rax_7 - 0x30);\n        if (rax_8 <= 0x50)\n        {\n            switch (rax_8)\n            {\n                case 0:\n                {\n                    data_6123c0 = 0;\n                    r12_2 = 0x403790;\n                    continue;\n                }\n                case 0x15:\n                case 0x35:\n                {\n                    int64_t rax_13 = data_612ec8;\n                    if ((rax_13 != 0 && *rax_13 != 0))\n                    {\n                        data_6123f8 = rax_13;\n                        continue;\n                    }\n                    data_6123f8 = 0;\n                    continue;\n                }\n                case 0x19:\n                case 0x39:\n                {\n                    int64_t rax_12 = data_612ec8;\n                    if (rax_12 == 0)\n                    {\n                        rax_12 = &data_40d232;\n                    }\n                    data_612450 = rax_12;\n                    data_612470 = 0;\n                    data_612468 = 0;\n                    continue;\n                }\n                case 0x1c:\n                {\n                    int64_t rax_11 = sub_403570(data_612ec8, 0x4c, 1, -1, 1);\n                    data_612470 = 0;\n                    data_612468 = rax_11;\n                    data_612450 = 0;\n                    continue;\n                }\n                case 0x20:\n                {\n                    data_6122b0 = sub_403570(data_612ec8, 0x50, 0, 0x7fffffff, 1);\n                    continue;\n                }\n                case 0x23:\n                {\n                    var_110_1 = 1;\n                    continue;\n                }\n                case 0x31:\n                {\n                    r15 = data_612ec8;\n                    continue;\n                }\n                case 0x34:\n                {\n                    int64_t r9_1 = data_612ec8;\n                    int64_t rcx_8 = -1;\n                    int64_t rdi_9 = r9_1;\n                    uint64_t r12_3 = *r9_1;\n                    while (rcx_8 != 0)\n                    {\n                        bool cond:0_1 = 0 != *rdi_9;\n                        rdi_9 = (rdi_9 + 1);\n                        rcx_8 = (rcx_8 - 1);\n                        if ((!cond:0_1))\n                        {\n                            break;\n                        }\n                    }\n                    if (rcx_8 != -3)\n                    {\n                        if (r12_3 != 0x5c)\n                        {\n                            r12_3 = 0;\n                            error(1, 0, dcgettext(nullptr, \"Invalid input delimiter specific\u2026\", 5), r9_1);\n                        }\n                        else\n                        {\n                            r12_3 = *(r9_1 + 1);\n                            switch ((r12_3 - 0x5c))\n                            {\n                                case 0:\n                                {\n                                    /* nop */\n                                    break;\n                                }\n                                case 5:\n                                {\n                                    r12_3 = 7;\n                                    break;\n                                }\n                                case 6:\n                                {\n                                    r12_3 = 8;\n                                    break;\n                                }\n                                case 0xa:\n                                {\n                                    r12_3 = 0xc;\n                                    break;\n                                }\n                                case 0x12:\n                                {\n                                    r12_3 = 0xa;\n                                    break;\n                                }\n                                case 0x16:\n                                {\n                                    r12_3 = 0xd;\n                                    break;\n                                }\n                                case 0x18:\n                                {\n                                    r12_3 = 9;\n                                    break;\n                                }\n                                case 0x1a:\n                                {\n                                    r12_3 = 0xb;\n                                    break;\n                                }\n                                default:\n                                    int32_t* rax_32 = __errno_location();\n                                    int64_t var_108_7;\n                                    uint64_t rax_35;\n                                    uint64_t rax_103;\n                                    char* rsi_4;\n                                    int64_t r9_4;\n                                    if (r12_3 == 0x78)\n                                    {\n                                        *rax_32 = 0;\n                                        var_d8 = nullptr;\n                                        rax_103 = strtoul((r9_1 + 2), &var_d8, 0x10);\n                                        r9_4 = r9_1;\n                                        r12_3 = rax_103;\n                                        if (rax_103 > 0xff)\n                                        {\n                                            var_108_7 = r9_4;\n                                            rsi_4 = \"Invalid escape sequence %s in in\u2026\";\n                                        }\n                                    }\n                                    else\n                                    {\n                                        int64_t r9_3 = r9_1;\n                                        char* rdi_12;\n                                        if ((*(&*__ctype_b_loc()[r12_3] + 1) & 8) == 0)\n                                        {\n                                            error(1, 0, dcgettext(nullptr, \"Invalid escape sequence %s in in\u2026\", 5), r9_3);\n                                            rdi_12 = nullptr;\n                                        }\n                                        else\n                                        {\n                                            rdi_12 = (r9_3 + 1);\n                                        }\n                                        *rax_32 = 0;\n                                        var_d8 = nullptr;\n                                        rax_35 = strtoul(rdi_12, &var_d8, 8);\n                                        r9_4 = r9_3;\n                                        r12_3 = rax_35;\n                                        if (rax_35 > 0xff)\n                                        {\n                                            var_108_7 = r9_4;\n                                            rsi_4 = \"Invalid escape sequence %s in in\u2026\";\n                                        }\n                                    }\n                                    if (((r12_3 == 0x78 && rax_103 > 0xff) || (r12_3 != 0x78 && rax_35 > 0xff)))\n                                    {\n                                        error(1, 0, dcgettext(nullptr, rsi_4, 5), var_108_7, 0xff, var_108_7);\n                                        r9_4 = var_108_7;\n                                    }\n                                    char* r8_4 = var_d8;\n                                    if (*r8_4 != 0)\n                                    {\n                                        error(1, 0, dcgettext(nullptr, \"Invalid escape sequence %s in in\u2026\", 5), r9_4, r8_4, r9_4);\n                                    }\n                            }\n                        }\n                    }\n                    data_6123c0 = r12_3;\n                    r12_2 = 0x403790;\n                    continue;\n                }\n                case 0x38:\n                {\n                    sub_4032b0(stdout);\n                    rax_23 = 0;\n                    break;\n                    break;\n                }\n                case 0x3c:\n                {\n                    int64_t rdi_8 = data_612ec8;\n                    if (rdi_8 == 0)\n                    {\n                        data_612468 = 1;\n                    }\n                    else\n                    {\n                        data_612468 = sub_403570(rdi_8, 0x6c, 1, -1, 1);\n                    }\n                    data_612470 = 0;\n                    data_612450 = 0;\n                    continue;\n                }\n                case 0x3e:\n                {\n                    int64_t rax_25 = sub_403570(data_612ec8, 0x6e, 1, -1, 1);\n                    data_612468 = 0;\n                    data_612470 = rax_25;\n                    if ((rax_25 == 1 && data_612450 != 0))\n                    {\n                        data_612470 = 0;\n                        continue;\n                    }\n                    data_612450 = 0;\n                    continue;\n                }\n                case 0x40:\n                {\n                    data_6123c1 = 1;\n                    break;\n                }\n                case 0x42:\n                {\n                    var_10c = 0;\n                    continue;\n                }\n                case 0x43:\n                {\n                    r14();\n                    int64_t rax_24 = sub_403570(data_612ec8, 0x73, 1, data_612428, 0);\n                    int64_t r8_2 = data_612428;\n                    int64_t rcx_7 = rax_24;\n                    if (r8_2 < rax_24)\n                    {\n                        error(0, 0, dcgettext(nullptr, \"warning: value %ld for -s option\u2026\", 5), rax_24, r8_2);\n                        rcx_7 = data_612428;\n                    }\n                    data_612438 = rcx_7;\n                    continue;\n                }\n                case 0x46:\n                {\n                    sub_404580(\"xargs\");\n                    rax_23 = 0;\n                    break;\n                    break;\n                }\n                case 0x48:\n                {\n                    data_612420 = 1;\n                    continue;\n                }\n                case 0x50:\n                {\n                    if (strchr(data_612ec8, 0x3d) != 0)\n                    {\n                        error(1, 0, dcgettext(nullptr, \"option --%s may not be set to a \u2026\", 5), *((var_ec << 5) + 0x40d6e0));\n                    }\n                    int64_t rcx_3 = data_612ec8;\n                    data_6123b8 = rcx_3;\n                    if (unsetenv(rcx_3) == 0)\n                    {\n                        continue;\n                    }\n                    else\n                    {\n                        error(1, *__errno_location(), dcgettext(nullptr, \"failed to unset environment vari\u2026\", 5), rcx_3);\n                        continue;\n                    }\n                    break;\n                }\n            }\n            if ((rax_8 == 0x40 || rax_8 == 0x44))\n            {\n                data_6123c2 = 1;\n                continue;\n            }\n        }\n        sub_4032b0(stderr);\n        rax_23 = 1;\n        break;\n    }\n    return rax_23;\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x402de0",
            "funcEndAddr": "0x402e0a",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_402e0b",
            "funcStartAddr": "0x402e0b",
            "funcEndAddr": "0x402e2a",
            "decompiledFuncCode": "void sub_402e0b()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_402e2a",
            "funcStartAddr": "0x402e2a",
            "funcEndAddr": "0x402e61",
            "decompiledFuncCode": "int64_t sub_402e2a()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_402e61",
            "funcStartAddr": "0x402e61",
            "funcEndAddr": "0x402eb8",
            "decompiledFuncCode": "void sub_402e61()\n{\n    if (data_612388 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_612390;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_612390 = (rax_1 + 1);\n        *(0x611e40 + ((rax_1 + 1) << 3))();\n    }\n    sub_402e0b();\n    data_612388 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_402eb8",
            "funcStartAddr": "0x402eb8",
            "funcEndAddr": "0x402ebd",
            "decompiledFuncCode": "int64_t j_sub_402e2a()\n{\n    /* tailcall */\n    return sub_402e2a();\n}\n\n"
        },
        {
            "funcName": "sub_402ec0",
            "funcStartAddr": "0x402ec0",
            "funcEndAddr": "0x402ec1",
            "decompiledFuncCode": "int64_t sub_402ec0()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_402ed0",
            "funcStartAddr": "0x402ed0",
            "funcEndAddr": "0x402ef7",
            "decompiledFuncCode": "uint64_t sub_402ed0()\n{\n    uint64_t rax_1 = data_6122b0;\n    if (rax_1 != 0x7fffffff)\n    {\n        rax_1 = (data_6122b0 + 1);\n        data_6122b0 = rax_1;\n    }\n    data_6123cc = 1;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_402f00",
            "funcStartAddr": "0x402f00",
            "funcEndAddr": "0x402f2a",
            "decompiledFuncCode": "int64_t sub_402f00()\n{\n    /* tailcall */\n    return error(1, 0, dcgettext(nullptr, \"environment is too large for exe\u2026\", 5));\n}\n\n"
        },
        {
            "funcName": "sub_402f30",
            "funcStartAddr": "0x402f30",
            "funcEndAddr": "0x40319f",
            "decompiledFuncCode": "void sub_402f30(char arg1, int32_t arg2)\n{\n    if (data_6123e8 == 0)\n    {\n        return;\n    }\n    char rax_1 = (arg1 ^ 1);\n    int32_t r13 = 0;\n    while (true)\n    {\n        data_6123cc = 0;\n        int32_t rbx_1;\n        rbx_1 = arg2 <= r13;\n        int32_t rbx_2 = (rbx_1 & rax_1);\n        while (true)\n        {\n            int32_t var_3c;\n            int64_t rax_2 = waitpid(0xffffffff, &var_3c, rbx_2);\n            if (rax_2 == 0xffffffff)\n            {\n                int32_t* rax_3 = __errno_location();\n                if (*rax_3 != 4)\n                {\n                    error(1, *rax_3, dcgettext(nullptr, \"error waiting for child process\", 5));\n                }\n                if ((data_6123cc != 0 && arg1 == 0))\n                {\n                    rbx_2 = 1;\n                }\n            }\n            else\n            {\n                if (rax_2 == 0)\n                {\n                    if (rbx_2 == 0)\n                    {\n                        error(0, 0, dcgettext(nullptr, \"WARNING: Lost track of %lu child\u2026\", 5), data_6123e8);\n                        return;\n                    }\n                    return;\n                }\n                int64_t rsi_2 = data_6123d8;\n                if (rsi_2 != 0)\n                {\n                    int32_t* rdi = data_6123e0;\n                    uint64_t rcx_1;\n                    if (rax_2 == *rdi)\n                    {\n                        rcx_1 = 0;\n                    }\n                    else\n                    {\n                        int32_t rdx_3 = 0;\n                        bool cond:1_1;\n                        do\n                        {\n                            rcx_1 = (rdx_3 + 1);\n                            rdx_3 = rcx_1;\n                            cond:1_1 = rcx_1 == rsi_2;\n                            if (rcx_1 >= rsi_2)\n                            {\n                                break;\n                            }\n                        } while (rdi[rcx_1] != rax_2);\n                        if ((rcx_1 >= rsi_2 && cond:1_1))\n                        {\n                            continue;\n                        }\n                    }\n                    rdi[rcx_1] = 0;\n                    int32_t rbx_3 = var_3c;\n                    r13 = (r13 + 1);\n                    data_6123e8 = (data_6123e8 - 1);\n                    if (*rbx_3[1] == 0xff)\n                    {\n                        error(0x7c, 0, dcgettext(nullptr, \"%s: exited with status 255; abor\u2026\", 5), **&data_612488);\n                        rbx_3 = var_3c;\n                    }\n                    if (rbx_3 == 0x7f)\n                    {\n                        error(0x7d, 0, dcgettext(nullptr, \"%s: stopped by signal %d\", 5), **&data_612488, *rbx_3[1]);\n                        rbx_3 = var_3c;\n                    }\n                    if (((rbx_3 & 0x7f) + 1) > 1)\n                    {\n                        error(0x7d, 0, dcgettext(nullptr, \"%s: terminated by signal %d\", 5), **&data_612488, (rbx_3 & 0x7f));\n                        rbx_3 = var_3c;\n                    }\n                    *rbx_3[1] = (*rbx_3[1] & 0xff);\n                    if (*rbx_3[1] != 0)\n                    {\n                        data_6123c8 = 0x7b;\n                    }\n                    if (data_6123e8 != 0)\n                    {\n                        break;\n                    }\n                    return;\n                }\n            }\n        }\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4031a0",
            "funcStartAddr": "0x4031a0",
            "funcEndAddr": "0x4032a8",
            "decompiledFuncCode": "uint64_t sub_4031a0(int32_t arg1)\n{\n    int64_t r12 = data_6123d8;\n    int64_t rax = data_6123e0;\n    int64_t rdx_5;\n    size_t rsi_2;\n    uint64_t rbx_1;\n    int32_t rbp;\n    if (r12 == 0)\n    {\n        rbx_1 = 0;\n        rbp = 0;\n        if (rax == 0)\n        {\n            rsi_2 = 0x80;\n            rdx_5 = 0x20;\n        label_40323b:\n            data_6123d8 = rdx_5;\n            rax = sub_4096d0(rax, rsi_2);\n            int64_t rcx_2 = data_6123d8;\n            data_6123e0 = rax;\n            if (r12 < rcx_2)\n            {\n                int32_t rdx_6 = rbp;\n                do\n                {\n                    *(rax + (r12 << 2)) = 0;\n                    r12 = (rdx_6 + 1);\n                    rdx_6 = r12;\n                } while (r12 < rcx_2);\n            }\n            goto label_4031ef;\n        }\n    }\n    else\n    {\n        int64_t rdx_1;\n        uint64_t rdx_2;\n        bool cond:0_1;\n        if (*rax == 0)\n        {\n            rdx_1 = rax;\n            rbp = 0;\n        }\n        else\n        {\n            rbp = 0;\n            do\n            {\n                rdx_2 = (rbp + 1);\n                rbp = rdx_2;\n                rbx_1 = (rdx_2 << 2);\n                cond:0_1 = rdx_2 == r12;\n                if (rdx_2 >= r12)\n                {\n                    break;\n                }\n                rdx_1 = (rax + rbx_1);\n            } while (*rdx_1 != 0);\n            if ((rdx_2 >= r12 && (!cond:0_1)))\n            {\n            label_4031ef:\n                rdx_1 = (rax + rbx_1);\n                if (*rdx_1 != 0)\n                {\n                    __assert_fail(\"0 == pids[i]\", \"xargs.c\", 0x58c, \"add_proc\");\n                    /* no return */\n                }\n            }\n        }\n        if (((*rax == 0 || (*rax != 0 && rdx_2 < r12)) || ((*rax != 0 && rdx_2 >= r12) && (!cond:0_1))))\n        {\n            *rdx_1 = arg1;\n            data_6123e8 = (data_6123e8 + 1);\n            data_6123f0 = 1;\n            return rbp;\n        }\n    }\n    rdx_5 = ((r12 + (r12 >> 1)) + 1);\n    rsi_2 = (rdx_5 << 2);\n    goto label_40323b;\n}\n\n"
        },
        {
            "funcName": "sub_4032b0",
            "funcStartAddr": "0x4032b0",
            "funcEndAddr": "0x40356b",
            "decompiledFuncCode": "int64_t sub_4032b0(FILE* arg1)\n{\n    int64_t rbp = data_612528;\n    fprintf(arg1, dcgettext(nullptr, \"Usage: %s [OPTION]... COMMAND [I\u2026\", 5), rbp);\n    fputs(dcgettext(nullptr, \"Run COMMAND with arguments INITI\u2026\", 5), arg1);\n    fputs(dcgettext(nullptr, \"Mandatory and optional arguments\u2026\", 5), arg1);\n    fputs(dcgettext(nullptr, \"  -0, --null                   i\u2026\", 5), arg1);\n    fputs(dcgettext(nullptr, \"  -a, --arg-file=FILE          r\u2026\", 5), arg1);\n    fputs(dcgettext(nullptr, \"  -d, --delimiter=CHARACTER    i\u2026\", 5), arg1);\n    fputs(dcgettext(nullptr, \"  -E END                       s\u2026\", 5), arg1);\n    fputs(dcgettext(nullptr, \"  -e, --eof[=END]              e\u2026\", 5), arg1);\n    fputs(dcgettext(nullptr, \"  -I R                         s\u2026\", 5), arg1);\n    fputs(dcgettext(nullptr, \"  -i, --replace[=R]            r\u2026\", 5), arg1);\n    fputs(dcgettext(nullptr, \"  -L, --max-lines=MAX-LINES    u\u2026\", 5), arg1);\n    fputs(dcgettext(nullptr, \"  -l[MAX-LINES]                s\u2026\", 5), arg1);\n    fputs(dcgettext(nullptr, \"  -n, --max-args=MAX-ARGS      u\u2026\", 5), arg1);\n    fputs(dcgettext(nullptr, \"  -P, --max-procs=MAX-PROCS    r\u2026\", 5), arg1);\n    fputs(dcgettext(nullptr, \"  -p, --interactive            p\u2026\", 5), arg1);\n    fputs(dcgettext(nullptr, \"      --process-slot-var=VAR   s\u2026\", 5), arg1);\n    fputs(dcgettext(nullptr, \"  -r, --no-run-if-empty        i\u2026\", 5), arg1);\n    fputs(dcgettext(nullptr, \"  -s, --max-chars=MAX-CHARS    l\u2026\", 5), arg1);\n    fputs(dcgettext(nullptr, \"      --show-limits            s\u2026\", 5), arg1);\n    fputs(dcgettext(nullptr, \"  -t, --verbose                p\u2026\", 5), arg1);\n    fputs(dcgettext(nullptr, \"  -x, --exit                   e\u2026\", 5), arg1);\n    fputs(dcgettext(nullptr, \"      --help                   d\u2026\", 5), arg1);\n    fputs(dcgettext(nullptr, \"      --version                o\u2026\", 5), arg1);\n    /* tailcall */\n    return fputs(dcgettext(nullptr, \"\\nReport bugs to <bug-findutils@\u2026\", 5), arg1);\n}\n\n"
        },
        {
            "funcName": "sub_403570",
            "funcStartAddr": "0x403570",
            "funcEndAddr": "0x4036b2",
            "decompiledFuncCode": "int64_t sub_403570(char* arg1, int32_t arg2, int64_t arg3, int64_t arg4, \n    int32_t arg5)\n{\n    char* var_30;\n    int64_t rax = strtol(arg1, &var_30, 0xa);\n    char* rdx = var_30;\n    if ((rdx != arg1 && *rdx == 0))\n    {\n        if (rax < arg3)\n        {\n            fprintf(stderr, dcgettext(nullptr, \"%s: value for -%c option should \u2026\", 5), data_612528, arg2, arg3);\n            if (arg5 == 0)\n            {\n                return arg3;\n            }\n        }\n        else\n        {\n            if ((arg4 >= 0 && rax > arg4))\n            {\n                fprintf(stderr, dcgettext(nullptr, \"%s: value for -%c option should \u2026\", 5), data_612528, arg2, arg4);\n                if (arg5 == 0)\n                {\n                    rax = arg4;\n                }\n            }\n            if (((((arg4 >= 0 && rax > arg4) && arg5 == 0) || arg4 < 0) || (arg4 >= 0 && rax <= arg4)))\n            {\n                return rax;\n            }\n        }\n        sub_4032b0(stderr);\n        exit(1);\n        /* no return */\n    }\n    fprintf(stderr, dcgettext(nullptr, \"%s: invalid number for -%c optio\u2026\", 5), data_612528, arg2);\n    sub_4032b0(stderr);\n    exit(1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4036c0",
            "funcStartAddr": "0x4036c0",
            "funcEndAddr": "0x403718",
            "decompiledFuncCode": "FILE* sub_4036c0()\n{\n    FILE* rbx = nullptr;\n    int32_t rdx;\n    char* rdi;\n    int32_t rax_1 = sub_405410(rdi, 0, rdx);\n    if (rax_1 >= 0)\n    {\n        FILE* rax_2 = fdopen(rax_1, &data_40d331);\n        rbx = rax_2;\n        if (rax_2 == 0)\n        {\n            int32_t* rax_4 = __errno_location();\n            int32_t r13_1 = *rax_4;\n            close(rax_1);\n            *rax_4 = r13_1;\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_403720",
            "funcStartAddr": "0x403720",
            "funcEndAddr": "0x40373b",
            "decompiledFuncCode": "uint64_t sub_403720()\n{\n    uint64_t rax_1 = data_6122b0;\n    if (rax_1 > 1)\n    {\n        rax_1 = (data_6122b0 - 1);\n        data_6122b0 = rax_1;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_403740",
            "funcStartAddr": "0x403740",
            "funcEndAddr": "0x403782",
            "decompiledFuncCode": "void sub_403740()\n{\n    if ((data_612450 == 0 && (data_6122b4 == 0 && (data_612480 != data_612458 && data_612420 == 0))))\n    {\n        /* tailcall */\n        return sub_404c00(&data_612420, &data_612480);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_403790",
            "funcStartAddr": "0x403790",
            "funcEndAddr": "0x4038ae",
            "decompiledFuncCode": "uint64_t sub_403790()\n{\n    int64_t rbx = data_6124e0;\n    int64_t r12_2 = (((data_612438 - 1) - data_6124a8) + rbx);\n    int32_t rax_1;\n    int64_t rdx_2;\n    if (data_6123b0 == 0)\n    {\n        while (true)\n        {\n            rax_1 = _IO_getc(data_6124e8);\n            if (rax_1 == 0xffffffff)\n            {\n                break;\n            }\n            if (data_6123c0 == rax_1)\n            {\n                break;\n            }\n            if (rbx >= r12_2)\n            {\n                sub_403740();\n                error(1, 0, dcgettext(nullptr, \"argument line too long\", 5));\n            }\n            rbx = (rbx + 1);\n            *(rbx - 1) = rax_1;\n        }\n        if (rax_1 == 0xffffffff)\n        {\n            rdx_2 = data_6124e0;\n            data_6123b0 = 1;\n        }\n    }\n    uint64_t rax_5;\n    if ((data_6123b0 != 0 || ((data_6123b0 == 0 && rax_1 == 0xffffffff) && rdx_2 == rbx)))\n    {\n        rax_5 = 0xffffffff;\n    }\n    if (data_6123b0 == 0)\n    {\n        if ((rax_1 == 0xffffffff && rdx_2 != rbx))\n        {\n            *rbx = 0;\n        }\n        if (rax_1 != 0xffffffff)\n        {\n            data_6124d0 = (data_6124d0 + 1);\n            rdx_2 = data_6124e0;\n            *rbx = 0;\n        }\n        if (((rax_1 == 0xffffffff && rdx_2 != rbx) || rax_1 != 0xffffffff))\n        {\n            int32_t rbx_2 = ((rbx + 1) - rdx_2);\n            rax_5 = rbx_2;\n            if (data_612450 == 0)\n            {\n                sub_4047a0(&data_612420, &data_612480, rdx_2, rbx_2, nullptr, 0, data_6122b4);\n                return rbx_2;\n            }\n        }\n    }\n    return rax_5;\n}\n\n"
        },
        {
            "funcName": "sub_4038b0",
            "funcStartAddr": "0x4038b0",
            "funcEndAddr": "0x403ebb",
            "decompiledFuncCode": "uint64_t sub_4038b0()\n{\n    int64_t rbx = data_6124e0;\n    int64_t r13_2 = (((data_612438 - 1) - data_6124a8) + rbx);\n    if (data_6123a0 == 0)\n    {\n        char r14_1 = 0;\n        char var_39_1 = 1;\n        int64_t rbp_1 = -1;\n        int32_t r12_1 = 1;\n        int32_t var_40_1 = 0;\n        while (true)\n        {\n            uint64_t rax_1 = _IO_getc(data_6124e8);\n            int32_t r15_1 = rax_1;\n            int32_t r14_2;\n            if (rax_1 == 0xffffffff)\n            {\n                int64_t rax_31 = data_6124e0;\n                data_6123a0 = 1;\n                if (rax_31 == rbx)\n                {\n                    break;\n                }\n                *rbx = 0;\n                r14_2 = ((rbx + 1) - rax_31);\n                if (r12_1 == 2)\n                {\n                label_403e60:\n                    sub_403740();\n                    char* rbx_6;\n                    if (var_40_1 == 0x22)\n                    {\n                        rbx_6 = dcgettext(nullptr, \"double\", 5);\n                    }\n                    else\n                    {\n                        rbx_6 = dcgettext(nullptr, \"single\", 5);\n                    }\n                    error(1, 0, dcgettext(nullptr, \"unmatched %s quote; by default q\u2026\", 5), rbx_6);\n                }\n            }\n            else\n            {\n                if (r12_1 != 1)\n                {\n                    if (r12_1 != 2)\n                    {\n                        goto label_403910;\n                    }\n                    if (r15_1 == 0xa)\n                    {\n                        goto label_403bdd;\n                    }\n                    goto label_4039a5;\n                }\n            label_403a4d:\n                if ((r15_1 & 0xffffff80) == 0)\n                {\n                    goto label_403a5e;\n                }\n                while ((r15_1 - 0xb) <= 1)\n                {\n                label_403a7a:\n                    int32_t rax_13 = _IO_getc(data_6124e8);\n                    if (rax_13 == 0xffffffff)\n                    {\n                        break;\n                    }\n                    rbp_1 = r15_1;\n                    r15_1 = rax_13;\n                    if ((r15_1 & 0xffffff80) == 0)\n                    {\n                    label_403a5e:\n                        if ((*__ctype_b_loc()[r15_1] & 1) != 0)\n                        {\n                            break;\n                        }\n                        if (r15_1 == 0xa)\n                        {\n                            break;\n                        }\n                        if (r15_1 == 0xd)\n                        {\n                            break;\n                        }\n                        if ((!(r15_1 != 0xa && r15_1 != 0xd)))\n                        {\n                            /* nop */\n                        }\n                    }\n                }\n                if ((r15_1 - 0xb) > 1)\n                {\n                    if (r15_1 != 0xa)\n                    {\n                        while (true)\n                        {\n                            if (((data_612450 == 0 && (r15_1 & 0xffffff80) == 0) && (*__ctype_b_loc()[r15_1] & 1) != 0))\n                            {\n                                int64_t rbp_4 = data_6124e0;\n                                *rbx = 0;\n                                char* rdi_8 = data_6123f8;\n                                int32_t rbx_4 = ((rbx + 1) - rbp_4);\n                                r14_2 = rbx_4;\n                                if (((rdi_8 != 0 && *rdi_8 == *rbp_4) && strcmp(rdi_8, rbp_4) == 0))\n                                {\n                                    goto label_403b06;\n                                }\n                                sub_4047a0(&data_612420, &data_612480, rbp_4, rbx_4, nullptr, 0, data_6122b4);\n                                rbx = data_6124e0;\n                                int32_t rax_29 = _IO_getc(data_6124e8);\n                                var_39_1 = 0;\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    goto label_403b80;\n                                }\n                                rbp_1 = r15_1;\n                                r14_1 = 1;\n                                r15_1 = rax_29;\n                                goto label_403a4d;\n                            }\n                            int64_t r15_2;\n                            if (r15_1 != 0x27)\n                            {\n                                if ((r15_1 != 0x5c && r15_1 != 0x22))\n                                {\n                                    rbp_1 = r15_1;\n                                }\n                                if (r15_1 == 0x5c)\n                                {\n                                    rbp_1 = _IO_getc(data_6124e8);\n                                    if (rbp_1 == 0xffffffff)\n                                    {\n                                        goto label_403b80;\n                                    }\n                                }\n                                if (((r15_1 != 0x5c && r15_1 != 0x22) || r15_1 == 0x5c))\n                                {\n                                    r12_1 = 0;\n                                    r15_2 = rbx;\n                                    r14_1 = 1;\n                                    if ((rbp_1 | data_612400) == 0)\n                                    {\n                                        goto label_4039d2;\n                                    }\n                                    goto label_40395f;\n                                }\n                            }\n                            int32_t rax_20 = _IO_getc(data_6124e8);\n                            if (rax_20 == 0xffffffff)\n                            {\n                                int64_t rax_38 = data_6124e0;\n                                data_6123a0 = 1;\n                                if (rbx == rax_38)\n                                {\n                                    goto label_403b0f;\n                                }\n                                *rbx = 0;\n                                var_40_1 = r15_1;\n                                r14_2 = ((rbx + 1) - rax_38);\n                                goto label_403e60;\n                            }\n                            var_40_1 = r15_1;\n                            r15_1 = rax_20;\n                            r14_1 = 1;\n                            if (r15_1 == 0xa)\n                            {\n                            label_403bdd:\n                                sub_403740();\n                                if (var_40_1 == 0x22)\n                                {\n                                    r15_2 = rbx;\n                                    r12_1 = 2;\n                                    rbp_1 = 0xa;\n                                    error(1, 0, dcgettext(nullptr, \"unmatched %s quote; by default q\u2026\", 5), dcgettext(nullptr, \"double\", 5));\n                                    goto label_40395f;\n                                }\n                                error(1, 0, dcgettext(nullptr, \"unmatched %s quote; by default q\u2026\", 5), dcgettext(nullptr, \"single\", 5));\n                                if (var_40_1 != 0xa)\n                                {\n                                    rbp_1 = 0xa;\n                                    r15_2 = rbx;\n                                    r12_1 = 2;\n                                label_40395f:\n                                    if (r13_2 > rbx)\n                                    {\n                                        goto label_403968;\n                                    }\n                                label_403a00:\n                                    sub_403740();\n                                    error(1, 0, dcgettext(nullptr, \"argument line too long\", 5));\n                                label_403968:\n                                    *r15_2 = rbp_1;\n                                    rbx = (rbx + 1);\n                                    break;\n                                }\n                            }\n                            else\n                            {\n                            label_4039a5:\n                                if (var_40_1 != r15_1)\n                                {\n                                    rbp_1 = r15_1;\n                                    r12_1 = 2;\n                                    r15_2 = rbx;\n                                    if ((rbp_1 | data_612400) != 0)\n                                    {\n                                        goto label_40395f;\n                                    }\n                                label_4039d2:\n                                    rbp_1 = 0;\n                                    error(0, 0, dcgettext(nullptr, \"WARNING: a NUL character occurre\u2026\", 5));\n                                    data_612400 = 1;\n                                    if (r13_2 <= rbx)\n                                    {\n                                        goto label_403a00;\n                                    }\n                                    goto label_403968;\n                                }\n                            }\n                            r14_1 = 1;\n                            rax_1 = _IO_getc(data_6124e8);\n                            if (rax_1 == 0xffffffff)\n                            {\n                                goto label_403b80;\n                            }\n                            rbp_1 = r15_1;\n                            r15_1 = rax_1;\n                        label_403910:\n                            if (r15_1 == 0xa)\n                            {\n                                goto label_403aaa;\n                            }\n                        }\n                        continue;\n                    }\n                    else\n                    {\n                    label_403aaa:\n                        if ((rbp_1 & 0xffffff80) == 0)\n                        {\n                            rax_1 = *__ctype_b_loc();\n                        }\n                        if (((rbp_1 & 0xffffff80) != 0 || ((rbp_1 & 0xffffff80) == 0 && (*(rax_1 + (rbp_1 << 1)) & 1) == 0)))\n                        {\n                            data_6124d0 = (data_6124d0 + 1);\n                        }\n                        int64_t rbp_2 = data_6124e0;\n                        rax_1 = rbp_2 != rbx;\n                        r14_1 = (r14_1 | rax_1);\n                        if (r14_1 != 0)\n                        {\n                            *rbx = 0;\n                            char* rdi_4 = data_6123f8;\n                            int32_t rbx_2 = ((rbx + 1) - rbp_2);\n                            r14_2 = rbx_2;\n                            if (((rdi_4 != 0 && *rdi_4 == *rbp_2) && strcmp(rdi_4, rbp_2) == 0))\n                            {\n                            label_403b06:\n                                data_6123a0 = 1;\n                                if (var_39_1 != 0)\n                                {\n                                    break;\n                                }\n                                return r14_2;\n                            }\n                            if (data_612450 != 0)\n                            {\n                                return r14_2;\n                            }\n                            sub_4047a0(&data_612420, &data_612480, rbp_2, rbx_2, nullptr, 0, data_6122b4);\n                            return r14_2;\n                        }\n                        if (_IO_getc(data_6124e8) != 0xffffffff)\n                        {\n                            break;\n                        }\n                    }\n                }\n            label_403b80:\n                int64_t rax_19 = data_6124e0;\n                data_6123a0 = 1;\n                if (rbx == rax_19)\n                {\n                    break;\n                }\n                *rbx = 0;\n                r14_2 = ((rbx + 1) - rax_19);\n            }\n            if (var_39_1 != 0)\n            {\n                int64_t rdi_11 = data_6123f8;\n                if (rdi_11 != 0)\n                {\n                    char* rsi_4 = data_6124e0;\n                    if ((*rdi_11 == *rsi_4 && strcmp(rdi_11, rsi_4) == 0))\n                    {\n                        break;\n                    }\n                }\n            }\n            if (data_612450 != 0)\n            {\n                return r14_2;\n            }\n            sub_4047a0(&data_612420, &data_612480, data_6124e0, r14_2, nullptr, 0, data_6122b4);\n            return r14_2;\n        }\n    }\nlabel_403b0f:\n    return -1;\n}\n\n"
        },
        {
            "funcName": "sub_403ec0",
            "funcStartAddr": "0x403ec0",
            "funcEndAddr": "0x403f2e",
            "decompiledFuncCode": "void sub_403ec0(void* arg1)\n{\n    if (getpid() != data_6123d0)\n    {\n        __assert_fail(\"getpid () == parent\", \"xargs.c\", 0x60c, \"wait_for_proc_all\");\n        /* no return */\n    }\n    if (data_6123a1 == 0)\n    {\n        data_6123a1 = 1;\n        sub_402f30(1, 0);\n        int32_t rdx_1 = data_6123c4;\n        int32_t rax_1 = data_6123c8;\n        data_6123a1 = 0;\n        if (rdx_1 != rax_1)\n        {\n            _exit(data_6123c8);\n            /* no return */\n        }\n    }\n}\n\n"
        },
        {
            "funcName": "sub_403f30",
            "funcStartAddr": "0x403f30",
            "funcEndAddr": "0x404120",
            "decompiledFuncCode": "uint64_t sub_403f30(char arg1)\n{\n    if (data_612480 != 1)\n    {\n        int64_t rbx_1 = 0;\n        do\n        {\n            if (fprintf(stderr, &data_40d1c3, *(data_612488 + (rbx_1 << 3))) < 0)\n            {\n                error(1, *__errno_location(), dcgettext(nullptr, \"Failed to write to stderr\", 5));\n            }\n            rbx_1 = (rbx_1 + 1);\n        } while ((data_612480 - 1) > rbx_1);\n    }\n    if (arg1 == 0)\n    {\n        _IO_putc(0xa, stderr);\n        return 0;\n    }\n    if (data_6123a8 == 0)\n    {\n        FILE* rax_19 = sub_4036c0();\n        data_6123a8 = rax_19;\n        if (rax_19 == 0)\n        {\n            error(1, *__errno_location(), dcgettext(nullptr, \"failed to open /dev/tty for read\u2026\", 5));\n        }\n    }\n    fwrite(\"?...\", 1, 4, stderr);\n    if (sub_409e80(stderr) != 0)\n    {\n        error(1, *__errno_location(), dcgettext(nullptr, \"Failed to write to stderr\", 5));\n    }\n    int32_t rax_10 = _IO_getc(data_6123a8);\n    uint64_t rax_11;\n    if ((rax_10 == 0xa || rax_10 == 0xffffffff))\n    {\n        rax_11 = rax_10;\n    }\n    if ((rax_10 != 0xa && rax_10 != 0xffffffff))\n    {\n        while (true)\n        {\n            rax_11 = _IO_getc(data_6123a8);\n            if (rax_11 == 0xffffffff)\n            {\n                break;\n            }\n            if (rax_11 == 0xa)\n            {\n                break;\n            }\n            if ((!(rax_11 != 0xffffffff && rax_11 != 0xa)))\n            {\n                /* nop */\n            }\n        }\n    }\n    if (rax_11 == 0xffffffff)\n    {\n        error(1, *__errno_location(), dcgettext(nullptr, \"Failed to read from stdin\", 5));\n    }\n    rax_11 = (rax_10 & 0xffffffdf) == 0x59;\n    return rax_11;\n}\n\n"
        },
        {
            "funcName": "sub_404120",
            "funcStartAddr": "0x404120",
            "funcEndAddr": "0x404572",
            "decompiledFuncCode": "int64_t sub_404120(int64_t arg1, int64_t arg2, int64_t arg3, int64_t* arg4)\n{\n    if ((data_6122b0 != 0 && data_6123e8 >= data_6122b0))\n    {\n        do\n        {\n            sub_402f30(0, 1);\n        } while (data_6122b0 <= data_6123e8);\n    }\n    if (data_6123c1 != 0)\n    {\n        if (sub_403f30(1) == 0)\n        {\n            return 1;\n        }\n        if (data_6123c1 != 0)\n        {\n            goto label_40418a;\n        }\n    }\n    if (data_6123c2 == 0)\n    {\n        goto label_40418a;\n    }\n    sub_403f30(0);\nlabel_40418a:\n    sub_402f30(0, 0);\n    int32_t var_3c;\n    if (pipe(&var_3c) != 0)\n    {\n        error(1, *__errno_location(), dcgettext(nullptr, \"could not create pipe before for\u2026\", 5));\n    }\n    int32_t var_38;\n    sub_409d40(var_38, 2, 1);\n    pid_t rax_6;\n    while (true)\n    {\n        rax_6 = fork();\n        if (rax_6 >= 0)\n        {\n            break;\n        }\n        if (*__errno_location() != 0xb)\n        {\n            break;\n        }\n        if (data_6123e8 == 0)\n        {\n            break;\n        }\n        sub_402f30(0, 1);\n    }\n    int64_t var_34;\n    if (rax_6 == 0xffffffff)\n    {\n        error(1, *__errno_location(), dcgettext(nullptr, \"cannot fork\", 5));\n    }\n    else if (rax_6 != 0)\n    {\n        close(var_38);\n        int32_t var_40;\n        ssize_t rax_7 = sub_408fe0(var_3c, &var_40, 4);\n        int64_t rax_11;\n        if (rax_7 == 4)\n        {\n            close(var_3c);\n            waitpid(rax_6, &var_34, 0);\n            int32_t rax_19 = var_40;\n            if (rax_19 != 7)\n            {\n                if (rax_19 == 2)\n                {\n                    exit(0x7f);\n                    /* no return */\n                }\n                exit(0x7e);\n                /* no return */\n            }\n            rax_11 = 0;\n        }\n        else\n        {\n            if (rax_7 == -1)\n            {\n                close(var_3c);\n                error(0, *__errno_location(), dcgettext(nullptr, \"errno-buffer safe_read failed in\u2026\", 5));\n            }\n            else if (rax_7 == 0)\n            {\n                sub_4031a0(rax_6);\n            }\n            else\n            {\n                error(1, *__errno_location(), dcgettext(nullptr, \"read returned unexpected value %\u2026\", 5), rax_7);\n            }\n            close(var_3c);\n            rax_11 = 1;\n        }\n        return rax_11;\n    }\n    close(var_3c);\n    data_6123c8 = 0;\n    sub_405550();\n    int32_t rax_24 = sub_4031a0(0);\n    int64_t r14 = (snprintf(nullptr, 0, &data_40d215, rax_24) + 1);\n    char* rax_27 = malloc(r14);\n    int32_t* rax_28 = __errno_location();\n    if (rax_27 == 0)\n    {\n        error(0, *rax_28, dcgettext(nullptr, \"unable to allocate memory\", 5));\n    }\n    else\n    {\n        snprintf(rax_27, r14, &data_40d215, rax_24);\n        int64_t r13_1 = data_6123b8;\n        if ((r13_1 != 0 && setenv(r13_1, rax_27, 1) < 0))\n        {\n            error(0, *rax_28, dcgettext(nullptr, \"failed to set environment variab\u2026\", 5), r13_1);\n        }\n        free(rax_27);\n    }\n    if (data_6124d8 == 0)\n    {\n        int16_t var_2c_1 = 0x6c;\n        var_34 = 0x6c756e2f7665642f;\n        close(0);\n        if (open(&var_34, 0) < 0)\n        {\n            error(0, *rax_28, \"%s\", sub_408c90(0, 8, &var_34));\n        }\n    }\n    char rax_31 = sub_405070(arg4);\n    if (rax_31 == 0)\n    {\n        execvp(*arg4, arg4);\n    }\n    else\n    {\n        *rax_28 = 7;\n    }\n    if ((rax_31 != 0 || (rax_31 == 0 && *rax_28 != 0)))\n    {\n        write(var_38, rax_28, 4);\n    }\n    close(var_38);\n    uint64_t rsi_10 = *rax_28;\n    int32_t rdi_17;\n    if (rsi_10 != 7)\n    {\n        error(0, rsi_10, \"%s\", *arg4);\n        if (*rax_28 == 2)\n        {\n            rdi_17 = 0x7f;\n        }\n    }\n    if ((rsi_10 == 7 || (rsi_10 != 7 && *rax_28 != 2)))\n    {\n        rdi_17 = 0x7e;\n    }\n    _exit(rdi_17);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404580",
            "funcStartAddr": "0x404580",
            "funcEndAddr": "0x4045fa",
            "decompiledFuncCode": "char* sub_404580(int64_t arg1)\n{\n    sub_409e80(stderr);\n    char* rax = dcgettext(nullptr, \"Kevin Dalley\", 5);\n    dcgettext(nullptr, \"James Youngman\", 5);\n    dcgettext(nullptr, \"Eric B. Decker\", 5);\n    sub_409550(stdout, arg1, \"GNU findutils\", data_6122b8);\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404600",
            "funcStartAddr": "0x404600",
            "funcEndAddr": "0x404700",
            "decompiledFuncCode": "uint64_t sub_404600(void* arg1, void* arg2, char arg3, int64_t arg4)\n{\n    int64_t rax = *(arg2 + 0x40);\n    uint64_t rax_1;\n    int64_t rdx;\n    if (arg3 == 0)\n    {\n        int64_t rdx_3 = *(arg2 + 0x48);\n        if ((rdx_3 > arg4 || (rdx_3 <= arg4 && rdx_3 == 0)))\n        {\n            *(arg2 + 0x48) = arg4;\n        }\n        int64_t rdx_4;\n        if (rax != 0)\n        {\n            rdx_4 = *(arg2 + 0x48);\n            if (rdx_4 > rax)\n            {\n                int64_t rdx_7 = (rdx_4 - rax);\n                uint64_t rcx = (arg4 - 1);\n                rax_1 = (arg4 - (rdx_7 >> 1));\n                if (rdx_7 == 1)\n                {\n                    rax_1 = rcx;\n                }\n            }\n        }\n        if ((rax == 0 || (rax != 0 && rdx_4 <= rax)))\n        {\n            rax_1 = (arg4 >> 1);\n        }\n    }\n    else\n    {\n        if (arg4 > rax)\n        {\n            *(arg2 + 0x40) = arg4;\n            rax = arg4;\n        }\n        if (rax != 0)\n        {\n            rdx = *(arg2 + 0x48);\n            if (rax < rdx)\n            {\n                uint64_t r8_1 = (arg4 + 1);\n                int64_t rsi_1 = (rdx - rax);\n                rax_1 = ((rsi_1 >> 1) + arg4);\n                if (rsi_1 == 1)\n                {\n                    rax_1 = r8_1;\n                }\n            }\n        }\n    }\n    int64_t rdx_1;\n    if ((arg3 == 0 || ((arg3 != 0 && rax != 0) && rax < rdx)))\n    {\n        rdx_1 = *(arg1 + 0x38);\n        if (rdx_1 == 0)\n        {\n            if (rax_1 == 0)\n            {\n                rax_1 = 1;\n            }\n            return rax_1;\n        }\n    }\n    if ((arg3 != 0 && (rax == 0 || (rax != 0 && rax >= rdx))))\n    {\n        rdx_1 = *(arg1 + 0x38);\n        rax_1 = (arg4 + 1);\n        if (arg4 == -1)\n        {\n            rax_1 = -1;\n        }\n        if (rdx_1 == 0)\n        {\n            return rax_1;\n        }\n    }\n    int64_t rdx_2 = (rdx_1 + 1);\n    if (rdx_2 < rax_1)\n    {\n        return rax_1;\n    }\n    int64_t rax_2 = rdx_2;\n    if (rax_2 == 0)\n    {\n        rax_2 = 1;\n    }\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_404700",
            "funcStartAddr": "0x404700",
            "funcEndAddr": "0x404703",
            "decompiledFuncCode": "int64_t sub_404700()\n{\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_404710",
            "funcStartAddr": "0x404710",
            "funcEndAddr": "0x404798",
            "decompiledFuncCode": "uint64_t sub_404710(char* arg1, int64_t arg2)\n{\n    int32_t rbx = 0;\n    char* rax = getenv(arg1);\n    if (rax != 0)\n    {\n        void var_28;\n        uint64_t var_20;\n        if (sub_4098e0(rax, &var_28, 0xa, &var_20, nullptr) != 0)\n        {\n            error(1, *__errno_location(), dcgettext(nullptr, \"Environment variable %s is not s\u2026\", 5), arg1);\n            return 0;\n        }\n        rbx = var_20 < arg2;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_4047a0",
            "funcStartAddr": "0x4047a0",
            "funcEndAddr": "0x404a34",
            "decompiledFuncCode": "int64_t sub_4047a0(int32_t* arg1, int64_t* arg2, char* arg3, int64_t arg4, \n    char* arg5, int64_t arg6, int32_t arg7)\n{\n    if (arg3 == 0)\n    {\n        __assert_fail(\"arg != NULL\", \"buildcmd.c\", 0x165, \"bc_push_arg\");\n        /* no return */\n    }\n    if (arg7 == 0)\n    {\n        arg2[7] = 1;\n    }\n    int64_t rax_6;\n    int64_t rdx_1;\n    int64_t rsi_2;\n    if (((arg7 == 0 && arg3 == \"do_not_care\") || (arg7 != 0 && arg3 == \"do_not_care\")))\n    {\n        rdx_1 = *arg2;\n        rsi_2 = arg2[2];\n        rax_6 = arg2[1];\n        if (rdx_1 < rsi_2)\n        {\n        label_40497c:\n            *arg2 = (rdx_1 + 1);\n            *(rax_6 + (rdx_1 << 3)) = 0;\n        }\n    }\n    if (((arg7 == 0 && arg3 != \"do_not_care\") || (arg7 != 0 && arg3 != \"do_not_care\")))\n    {\n        if (((arg4 + arg6) + arg2[4]) > *(arg1 + 0x18))\n        {\n            if ((arg7 != 0 || (arg7 == 0 && *arg2 == *(arg1 + 0x38))))\n            {\n                error(1, 0, dcgettext(nullptr, \"cannot fit single argument withi\u2026\", 5));\n                if (*(arg1 + 0x30) != 0)\n                {\n                label_404833:\n                    error(1, 0, dcgettext(nullptr, \"argument list too long\", 5));\n                }\n            }\n            if (((arg7 == 0 && *arg2 != *(arg1 + 0x38)) && *(arg1 + 0x30) != 0))\n            {\n                goto label_404833;\n            }\n            if (((((arg7 != 0 || (arg7 == 0 && *arg2 == *(arg1 + 0x38))) && *(arg1 + 0x30) == 0) || (arg7 == 0 && *arg2 != *(arg1 + 0x38))) && *arg1 != 0))\n            {\n                if (*(arg1 + 0x48) != 0)\n                {\n                    goto label_404833;\n                }\n                if (*(arg1 + 0x50) != 0)\n                {\n                    goto label_404833;\n                }\n            }\n            sub_404c00(arg1, arg2);\n        }\n        rdx_1 = *arg2;\n        if (arg7 == 0)\n        {\n            int64_t rax_5 = *(arg1 + 0x50);\n            if ((rax_5 != 0 && rax_5 == (rdx_1 - *(arg1 + 0x38))))\n            {\n                goto label_40486c;\n            }\n        }\n        if (rdx_1 == *(arg1 + 0x20))\n        {\n        label_40486c:\n            sub_404c00(arg1, arg2);\n            rdx_1 = *arg2;\n        }\n        rsi_2 = arg2[2];\n        rax_6 = arg2[1];\n        if (rdx_1 < rsi_2)\n        {\n            goto label_4048b6;\n        }\n    }\n    int64_t rbp_1;\n    if (((((arg7 == 0 && arg3 == \"do_not_care\") || (arg7 != 0 && arg3 == \"do_not_care\")) && rdx_1 >= rsi_2) || (((arg7 == 0 && arg3 != \"do_not_care\") || (arg7 != 0 && arg3 != \"do_not_care\")) && (((arg4 + arg6) + arg2[4]) <= *(arg1 + 0x18) || ((arg4 + arg6) + arg2[4]) > *(arg1 + 0x18)))))\n    {\n        if (rax_6 != 0)\n        {\n            arg2[2] = (rsi_2 + rsi_2);\n            rax_6 = sub_4096d0(rax_6, (rsi_2 << 4));\n            arg2[1] = rax_6;\n            goto label_4048a2;\n        }\n        arg2[2] = 0x40;\n        rax_6 = sub_409680(0x200);\n        arg2[1] = rax_6;\n    label_4048a2:\n        rdx_1 = *arg2;\n        if (arg3 == \"do_not_care\")\n        {\n            goto label_40497c;\n        }\n    label_4048b6:\n        int64_t rcx_2 = arg2[4];\n        *arg2 = (rdx_1 + 1);\n        *(rax_6 + (rdx_1 << 3)) = (arg2[3] + rcx_2);\n        if (arg5 != 0)\n        {\n            strcpy((arg2[3] + rcx_2), arg5);\n            rcx_2 = (arg2[4] + arg6);\n            arg2[4] = rcx_2;\n        }\n        strcpy((rcx_2 + arg2[3]), arg3);\n        rbp_1 = (arg4 + arg2[4]);\n        rax_6 = *arg2;\n        arg2[4] = rbp_1;\n        if (arg7 == 0)\n        {\n            int64_t rdx_3 = *(arg1 + 0x50);\n            if ((rdx_3 != 0 && rdx_3 == (rax_6 - *(arg1 + 0x38))))\n            {\n                goto label_40492d;\n            }\n            if (rax_6 == *(arg1 + 0x20))\n            {\n                goto label_40492d;\n            }\n            goto label_40494d;\n        }\n        if (rax_6 != *(arg1 + 0x20))\n        {\n            goto label_40493b;\n        }\n    label_40492d:\n        rax_6 = sub_404c00(arg1, arg2);\n    }\n    if (((((arg7 == 0 && arg3 == \"do_not_care\") || (arg7 != 0 && arg3 == \"do_not_care\")) && rdx_1 < rsi_2) || (((((arg7 == 0 && arg3 == \"do_not_care\") || (arg7 != 0 && arg3 == \"do_not_care\")) && rdx_1 >= rsi_2) || (((arg7 == 0 && arg3 != \"do_not_care\") || (arg7 != 0 && arg3 != \"do_not_care\")) && (((arg4 + arg6) + arg2[4]) <= *(arg1 + 0x18) || ((arg4 + arg6) + arg2[4]) > *(arg1 + 0x18)))) && rax_6 == 0)))\n    {\n        if (arg7 == 0)\n        {\n        label_40494d:\n            return rax_6;\n        }\n        rbp_1 = arg2[4];\n    label_40493b:\n        arg2[5] = rbp_1;\n        goto label_40494d;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_404a40",
            "funcStartAddr": "0x404a40",
            "funcEndAddr": "0x404bf8",
            "decompiledFuncCode": "int64_t sub_404a40(int32_t* arg1, int64_t* arg2, void* arg3, uint64_t arg4, \n    char* arg5, int64_t arg6, char* arg7, int64_t arg8, int32_t arg9)\n{\n    void* r15 = arg3;\n    uint64_t r12 = arg4;\n    int64_t rdi = *(arg1 + 0x18);\n    int64_t rbx = data_6124f0;\n    int64_t rbp = (rdi - 1);\n    if (rbx == 0)\n    {\n        int64_t rax_12 = sub_409680((rdi + 1));\n        rbx = rax_12;\n        data_6124f0 = rax_12;\n    }\n    while (true)\n    {\n        char* rax_7 = sub_4066f0(r15, *(arg1 + 0x30));\n        if (rax_7 != 0)\n        {\n            uint64_t r13_2 = (rax_7 - r15);\n            if (rbp > r13_2)\n            {\n                int64_t rbp_1 = (rbp - r13_2);\n                strncpy(rbx, r15, r13_2);\n                int64_t rax_4 = (arg8 + arg6);\n                rbx = (rbx + r13_2);\n                if (rax_4 >= rbp_1)\n                {\n                    r15 = rax_7;\n                }\n                else\n                {\n                    rbp = (rbp_1 - rax_4);\n                    if (arg5 != 0)\n                    {\n                        strcpy(rbx, arg5);\n                        rbx = (rbx + arg6);\n                    }\n                    strcpy(rbx, arg7);\n                    int64_t rax_6 = *(arg1 + 0x28);\n                    rbx = (rbx + arg8);\n                    r15 = &rax_7[rax_6];\n                    r12 = ((r12 - rax_6) - r13_2);\n                    if (*r15 == 0)\n                    {\n                        break;\n                    }\n                    continue;\n                }\n            }\n        }\n        else if (r12 < rbp)\n        {\n            char* rsi_4 = r15;\n            r15 = (r15 + r12);\n            strncpy(rbx, rsi_4, r12);\n            rbp = (rbp - r12);\n            rbx = (rbx + r12);\n            r12 = 0;\n            if (*r15 == 0)\n            {\n                break;\n            }\n            continue;\n        }\n        if (*r15 == 0)\n        {\n            break;\n        }\n        error(1, 0, dcgettext(nullptr, \"command too long\", 5));\n        break;\n    }\n    *rbx = 0;\n    int64_t rdx_2 = data_6124f0;\n    arg7 = arg9;\n    /* tailcall */\n    return sub_4047a0(arg1, arg2, rdx_2, ((rbx + 1) - rdx_2), nullptr, 0, __return_addr);\n}\n\n"
        },
        {
            "funcName": "sub_404c00",
            "funcStartAddr": "0x404c00",
            "funcEndAddr": "0x404e2d",
            "decompiledFuncCode": "int64_t sub_404c00(int32_t* arg1, int64_t* arg2)\n{\n    int64_t* r12 = arg2;\n    sub_4047a0(arg1, arg2, \"do_not_care\", 0, nullptr, 0, 0);\n    int64_t rax = *r12;\n    if (rax == 0)\n    {\n        __assert_fail(\"state->cmd_argc > 0\", \"buildcmd.c\", 0x115, \"bc_do_exec\");\n        /* no return */\n    }\n    if (*((r12[1] + (rax << 3)) - 8) != 0)\n    {\n        __assert_fail(\"state->cmd_argv[state->cmd_argc-\u2026\", \"buildcmd.c\", 0x116, \"bc_do_exec\");\n        /* no return */\n    }\n    int64_t r13 = 0;\n    int64_t rax_1 = sub_409680(((rax << 3) + 8));\n    uint64_t r8 = *r12;\n    int64_t rbp = *(arg1 + 0x38);\n    uint64_t rdx_2 = r8;\n    do\n    {\n        int64_t rax_3;\n        int64_t rbx_1;\n        if (rbp == 0)\n        {\n            rax_3 = r13;\n            rbx_1 = 0;\n        }\n        else\n        {\n            int64_t rsi = r12[1];\n            int64_t rax_2 = 0;\n            do\n            {\n                rax_2 = (rax_2 + 1);\n                *((rax_1 + (rax_2 << 3)) - 8) = *((rsi + (rax_2 << 3)) - 8);\n            } while (rax_2 != rbp);\n            rax_3 = (r13 + rbp);\n            rbx_1 = rbp;\n        }\n        if ((r8 > rbx_1 && rax_3 < rdx_2))\n        {\n            int64_t rsi_1 = r12[1];\n            do\n            {\n                rax_3 = (rax_3 + 1);\n                rbx_1 = (rbx_1 + 1);\n                *((rax_1 + (rbx_1 << 3)) - 8) = *((rsi_1 + (rax_3 << 3)) - 8);\n                if (r8 <= rbx_1)\n                {\n                    break;\n                }\n            } while (rax_3 < rdx_2);\n            if (rbx_1 < rbp)\n            {\n                __assert_fail(\"dst_pos >= ctl->initial_argc\", \"buildcmd.c\", 0x102, \"copy_args\");\n                /* no return */\n            }\n        }\n        int64_t rsi_2 = r12[6];\n        *(rax_1 + (rbx_1 << 3)) = 0;\n        if (*(arg1 + 0x40)(arg1, rsi_2, rbx_1, rax_1) != 0)\n        {\n            rbp = *(arg1 + 0x38);\n            r8 = sub_404600(arg1, r12, 1, r8);\n            r13 = ((r13 - rbp) + rbx_1);\n        }\n        else if ((*(arg1 + 0x38) + 1) < r8)\n        {\n            rbp = *(arg1 + 0x38);\n            r8 = sub_404600(arg1, r12, 0, r8);\n        }\n        else\n        {\n            error(1, 0, dcgettext(nullptr, \"can't call exec() due to argumen\u2026\", 5));\n            rbp = *(arg1 + 0x38);\n        }\n        rdx_2 = *r12;\n    } while ((r13 + 1) < (rdx_2 - rbp));\n    free(rax_1);\n    int64_t rax_11 = r12[5];\n    *r12 = rbp;\n    r12[4] = rax_11;\n    r12[7] = -0x100000000;\n    return rax_11;\n}\n\n"
        },
        {
            "funcName": "sub_404e30",
            "funcStartAddr": "0x404e30",
            "funcEndAddr": "0x404e51",
            "decompiledFuncCode": "int64_t sub_404e30()\n{\n    int64_t rax = sysconf(0);\n    if (rax <= 0)\n    {\n        rax = 0x7fffffffffffffff;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404e60",
            "funcStartAddr": "0x404e60",
            "funcEndAddr": "0x404ea0",
            "decompiledFuncCode": "int64_t sub_404e60()\n{\n    int64_t rbp = 0;\n    uint64_t* const rbx = __environ;\n    if (*__environ != 0)\n    {\n        uint64_t rdi;\n        do\n        {\n            rbx = &rbx[1];\n            rdi = *rbx;\n            rbp = ((rbp + strlen(rdi)) + 1);\n        } while (rdi != 0);\n    }\n    return rbp;\n}\n\n"
        },
        {
            "funcName": "sub_404ea0",
            "funcStartAddr": "0x404ea0",
            "funcEndAddr": "0x404f73",
            "decompiledFuncCode": "int64_t sub_404ea0(int32_t* arg1, int64_t arg2)\n{\n    int64_t rax = sub_404e60();\n    *(arg1 + 0x10) = 0x1000;\n    int64_t rax_1 = sysconf(0);\n    *arg1 = 0;\n    if (rax_1 <= 0)\n    {\n        rax_1 = 0x7fffffffffffffff;\n    }\n    *(arg1 + 8) = rax_1;\n    if (rax > rax_1)\n    {\n        return 1;\n    }\n    int64_t rsi = (rax + arg2);\n    if (rsi >= rax_1)\n    {\n        return 2;\n    }\n    int64_t rax_2 = (rax_1 - rsi);\n    *(arg1 + 8) = rax_2;\n    uint64_t rdx_1 = (rax_2 >> 3);\n    *(arg1 + 0x20) = (rdx_1 - 2);\n    if (rdx_1 == 2)\n    {\n        __assert_fail(\"ctl->max_arg_count > 0\", \"buildcmd.c\", 0x216, \"bc_init_controlinfo\");\n        /* no return */\n    }\n    *(arg1 + 0x18) = rax_2;\n    *(arg1 + 0x28) = 0;\n    *(arg1 + 0x30) = 0;\n    *(arg1 + 0x38) = 0;\n    *(arg1 + 0x40) = 0x404700;\n    *(arg1 + 0x48) = 0;\n    *(arg1 + 0x50) = 0;\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_404f80",
            "funcStartAddr": "0x404f80",
            "funcEndAddr": "0x404fa4",
            "decompiledFuncCode": "int64_t sub_404f80(void* arg1)\n{\n    int64_t rax = *(arg1 + 8);\n    if (rax > 0x1ffff)\n    {\n        rax = *(arg1 + 0x10);\n        if (rax < 0x20001)\n        {\n            rax = 0x20000;\n        }\n    }\n    *(arg1 + 0x18) = rax;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404fb0",
            "funcStartAddr": "0x404fb0",
            "funcEndAddr": "0x40504d",
            "decompiledFuncCode": "int64_t sub_404fb0(void* arg1, int64_t* arg2, int64_t arg3)\n{\n    int64_t rdi = *(arg1 + 0x18);\n    *arg2 = 0;\n    arg2[4] = 0;\n    arg2[1] = 0;\n    arg2[2] = 0;\n    arg2[8] = 0;\n    arg2[9] = 0;\n    if (rdi > 0x7ffffffffffff7ff)\n    {\n        __assert_fail(\"ctl->arg_max <= (LONG_MAX - 2048\u2026\", \"buildcmd.c\", 0x24c, \"bc_init_state\");\n        /* no return */\n    }\n    int64_t rax = sub_409680((rdi + 1));\n    arg2[5] = 0;\n    arg2[3] = rax;\n    arg2[4] = 0;\n    arg2[7] = -0x100000000;\n    arg2[6] = arg3;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405050",
            "funcStartAddr": "0x405050",
            "funcEndAddr": "0x40506e",
            "decompiledFuncCode": "int64_t sub_405050(void* arg1, int64_t* arg2)\n{\n    *arg2 = *(arg1 + 0x38);\n    int64_t rax = arg2[5];\n    arg2[4] = rax;\n    arg2[7] = -0x100000000;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405070",
            "funcStartAddr": "0x405070",
            "funcEndAddr": "0x4050d9",
            "decompiledFuncCode": "uint64_t sub_405070(int64_t* arg1)\n{\n    int64_t rbp = 0;\n    char* rdi = *arg1;\n    int64_t rbx = 0;\n    if (rdi != 0)\n    {\n        do\n        {\n            rbx = (rbx + 1);\n            rdi = arg1[rbx];\n            rbp = (rbp + strlen(rdi));\n        } while (rdi != 0);\n    }\n    if (sub_404710(\"__GNU_FINDUTILS_EXEC_ARG_COUNT_L\u2026\", rbx) == 0)\n    {\n        int32_t rax_4;\n        int32_t rdx;\n        rax_4 = sub_404710(\"__GNU_FINDUTILS_EXEC_ARG_LENGTH_\u2026\", rbp);\n        rdx = rax_4 != 0;\n        return rdx;\n    }\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_4050e0",
            "funcStartAddr": "0x4050e0",
            "funcEndAddr": "0x40515c",
            "decompiledFuncCode": "uint64_t sub_4050e0()\n{\n    DIR* rax = sub_405aa0();\n    int32_t rbx_1;\n    int32_t r12_1;\n    if (rax != 0)\n    {\n        r12_1 = 0;\n        rbx_1 = -1;\n        struct dirent64* rax_1;\n        char rdx_1;\n        do\n        {\n            rax_1 = readdir(rax);\n            if (rax_1 == 0)\n            {\n                break;\n            }\n            do\n            {\n                if (rax_1->d_name[0] == 0x2e)\n                {\n                    rdx_1 = rax_1->d_name[1];\n                    if (rdx_1 == 0x2e)\n                    {\n                        break;\n                    }\n                    if (rdx_1 == 0)\n                    {\n                        break;\n                    }\n                }\n                r12_1 = 1;\n                int32_t rax_2 = sub_4055f0(&rax_1->d_name, 0);\n                if (rbx_1 < rax_2)\n                {\n                    rbx_1 = rax_2;\n                }\n                rax_1 = readdir(rax);\n            } while (rax_1 != 0);\n        } while ((rax_1->d_name[0] == 0x2e && rdx_1 == 0x2e));\n        closedir(rax);\n    }\n    if ((rax == 0 || (rax != 0 && r12_1 == 0)))\n    {\n        rbx_1 = -1;\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_405160",
            "funcStartAddr": "0x405160",
            "funcEndAddr": "0x4051ca",
            "decompiledFuncCode": "uint64_t sub_405160(int32_t arg1, int64_t* arg2)\n{\n    int32_t rdx;\n    int32_t rax_2 = (sub_409d40(arg1, 1, rdx) & 1);\n    int32_t rbx;\n    if (rax_2 != 0)\n    {\n        rbx = 0;\n    }\n    else\n    {\n        int64_t rax_5 = sub_405740(*arg2, ((arg2[1] << 2) + 4), &arg2[2]);\n        if (rax_5 != 0)\n        {\n            int64_t rdx_2 = arg2[1];\n            *arg2 = rax_5;\n            *(rax_5 + (rdx_2 << 2)) = arg1;\n            arg2[1] = (rdx_2 + 1);\n            return rax_2;\n        }\n        rbx = -1;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_4051d0",
            "funcStartAddr": "0x4051d0",
            "funcEndAddr": "0x405251",
            "decompiledFuncCode": "int64_t sub_4051d0(int32_t arg1, int64_t* arg2)\n{\n    int32_t rdx;\n    if ((sub_409d40(arg1, 1, rdx) & 1) == 0)\n    {\n        int64_t rax_2 = arg2[2];\n        int64_t rsi = arg2[1];\n        if (rax_2 >= rsi)\n        {\n            goto label_405228;\n        }\n        int64_t rdi = *arg2;\n        int32_t rcx_1 = *(rdi + (rax_2 << 2));\n        if (rcx_1 < arg1)\n        {\n            int64_t rax_3;\n            int64_t rdx_1;\n            for (rax_3 = (rax_2 + 1); rsi != rax_3; rax_3 = rdx_1)\n            {\n                rdx_1 = (rax_3 + 1);\n                rcx_1 = *((rdi + (rdx_1 << 2)) - 4);\n                if (arg1 <= rcx_1)\n                {\n                    break;\n                }\n            }\n            if (rsi == rax_3)\n            {\n                arg2[2] = rsi;\n            label_405228:\n                arg2[3] = arg1;\n                return 0xffffffff;\n            }\n            arg2[2] = rax_3;\n        }\n        if (arg1 != rcx_1)\n        {\n            goto label_405228;\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_405260",
            "funcStartAddr": "0x405260",
            "funcEndAddr": "0x4052a5",
            "decompiledFuncCode": "uint64_t sub_405260()\n{\n    int64_t rax = sysconf(4);\n    uint64_t var_18;\n    int64_t* rsi = &var_18;\n    int32_t rbx = rax;\n    if (rax == -1)\n    {\n        rbx = 0x14;\n    }\n    uint64_t rdx = rbx;\n    if (getrlimit(RLIMIT_NOFILE, rsi) == 0)\n    {\n        rdx = var_18;\n        if (rdx == -1)\n        {\n            rdx = rbx;\n        }\n    }\n    return rdx;\n}\n\n"
        },
        {
            "funcName": "sub_4052b0",
            "funcStartAddr": "0x4052b0",
            "funcEndAddr": "0x405399",
            "decompiledFuncCode": "int64_t sub_4052b0(int32_t arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 <= 0)\n    {\n        return 0;\n    }\n    int32_t rbp = 0;\n    int64_t rax_5;\n    while (true)\n    {\n        int32_t r15_1 = 0x40;\n        int32_t rax_2 = (arg1 - rbp);\n        if (rax_2 <= 0x40)\n        {\n            r15_1 = rax_2;\n        }\n        int64_t rsi = r15_1;\n        void var_238;\n        int32_t rax_4;\n        int32_t rax_6;\n        if (rax_2 <= 0)\n        {\n            rax_6 = poll(&var_238, rsi, 0);\n        }\n        else\n        {\n            void* rax_3 = &var_238;\n            int32_t rdx = 0;\n            do\n            {\n                rax_3 = (rax_3 + 8);\n                *(rax_3 - 2) = 0;\n                int32_t rdi = (rbp + rdx);\n                rdx = (rdx + 1);\n                *(rax_3 - 4) = 5;\n                *(rax_3 - 8) = rdi;\n            } while (rdx < r15_1);\n            rax_4 = poll(&var_238, rsi, 0);\n        }\n        if (((rax_2 <= 0 && rax_6 == 0xffffffff) || (rax_2 > 0 && rax_4 == 0xffffffff)))\n        {\n            rax_5 = 0xffffffff;\n            break;\n        }\n        if ((rax_2 > 0 && rax_4 != 0xffffffff))\n        {\n            int64_t rbx_1 = 0;\n            do\n            {\n                void var_232;\n                if (*(&var_232 + (rbx_1 << 3)) != 0x20)\n                {\n                    rax_5 = arg2(*(&var_238 + (rbx_1 << 3)), arg3);\n                    if (rax_5 != 0)\n                    {\n                        return rax_5;\n                    }\n                }\n                rbx_1 = (rbx_1 + 1);\n            } while (r15_1 > rbx_1);\n        }\n        if (((rax_2 <= 0 && rax_6 != 0xffffffff) || (rax_2 > 0 && rax_4 != 0xffffffff)))\n        {\n            rbp = (rbp + r15_1);\n            if (arg1 <= rbp)\n            {\n                rax_5 = 0;\n                break;\n            }\n        }\n    }\n    return rax_5;\n}\n\n"
        },
        {
            "funcName": "sub_4053a0",
            "funcStartAddr": "0x4053a0",
            "funcEndAddr": "0x405403",
            "decompiledFuncCode": "int64_t sub_4053a0()\n{\n    int32_t rax = sub_4050e0();\n    if (rax < 0)\n    {\n        rax = sub_405260();\n    }\n    int64_t var_28 = 0;\n    int64_t var_18 = 0;\n    int32_t rdx;\n    rdx = rax != 0x7fffffff;\n    sub_4052b0((rax + rdx), 0x405160, &var_28);\n    data_612508 = var_28;\n    data_612500 = 0;\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_405410",
            "funcStartAddr": "0x405410",
            "funcEndAddr": "0x40551e",
            "decompiledFuncCode": "uint64_t sub_405410(char* arg1, int32_t arg2, int32_t arg3)\n{\n    int32_t r12;\n    if ((arg2 & 0x40) != 0)\n    {\n        int32_t var_70_1 = 0x10;\n        r12 = arg3;\n        void* var_68_1 = &arg_8;\n        void var_58;\n        void* var_60_1 = &var_58;\n    }\n    else\n    {\n        r12 = 0;\n    }\n    char rbp = data_6124f9;\n    if (rbp == 0)\n    {\n        int32_t rax_5;\n        int32_t rdx_1;\n        rax_5 = sub_405b30(\"/\", 0x80000, arg3);\n        if (rax_5 >= 0)\n        {\n            char rax_8 = sub_409d40(rax_5, 1, rdx_1);\n            close(rax_5);\n            data_6124f9 = 1;\n            data_6124f8 = (rax_8 & 1);\n        }\n        else\n        {\n            data_6124f8 = rbp;\n            data_6124f9 = 1;\n        }\n    }\n    int32_t rax_2 = sub_405b30(arg1, (arg2 | 0x80000), r12);\n    if ((rax_2 >= 0 && data_6124f8 == 0))\n    {\n        sub_405860(rax_2, 1);\n        return rax_2;\n    }\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_405520",
            "funcStartAddr": "0x405520",
            "funcEndAddr": "0x40554b",
            "decompiledFuncCode": "int64_t sub_405520()\n{\n    int64_t rax = free(data_612508);\n    data_612508 = 0;\n    data_612500 = 0;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405550",
            "funcStartAddr": "0x405550",
            "funcEndAddr": "0x4055f0",
            "decompiledFuncCode": "int64_t sub_405550()\n{\n    int64_t rbx = data_612500;\n    int64_t rbp = data_612508;\n    int32_t rax = sub_4050e0();\n    if (rax < 0)\n    {\n        rax = sub_405260();\n    }\n    int64_t var_30 = rbx;\n    int32_t rdx;\n    rdx = rax != 0x7fffffff;\n    int64_t var_38 = rbp;\n    int64_t var_28 = 0;\n    int32_t var_20 = 0xffffffff;\n    return sub_4052b0((rax + rdx), 0x4051d0, &var_38);\n}\n\n"
        },
        {
            "funcName": "sub_4055f0",
            "funcStartAddr": "0x4055f0",
            "funcEndAddr": "0x40573e",
            "decompiledFuncCode": "uint64_t sub_4055f0(char* arg1, int32_t arg2)\n{\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char* var_30;\n    int64_t rax_1 = strtol(arg1, &var_30, 0xa);\n    if ((0x7fffffffffffffff + rax_1) > -3)\n    {\n        error(1, *rax, \"%s\", arg1);\n    }\n    if (((0x7fffffffffffffff + rax_1) > -3 || ((0x7fffffffffffffff + rax_1) <= -3 && (0x80000000 + rax_1) > 0xffffffff)))\n    {\n        *rax = 0x22;\n        error(1, 0x22, \"%s\", arg1);\n    }\n    if (((0x7fffffffffffffff + rax_1) <= -3 && (0x80000000 + rax_1) <= 0xffffffff))\n    {\n        char* rdx_1 = var_30;\n        if (*rdx_1 != 0)\n        {\n            error(1, *rax, dcgettext(nullptr, \"Unexpected suffix %s on %s\", 5), sub_408c90(0, arg2, var_30), sub_408c90(1, arg2, arg1));\n            return rax_1;\n        }\n        if (rdx_1 == arg1)\n        {\n            error(1, *rax, dcgettext(nullptr, \"Expected an integer: %s\", 5), sub_408c90(0, arg2, rdx_1));\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_405740",
            "funcStartAddr": "0x405740",
            "funcEndAddr": "0x40583e",
            "decompiledFuncCode": "int64_t sub_405740(int64_t arg1, size_t arg2, int64_t* arg3)\n{\n    int32_t* rax = __errno_location();\n    int32_t r14 = *rax;\n    if (arg2 == 0)\n    {\n        __assert_fail(\"wanted > 0u\", \"extendbuf.c\", 0x47, \"extendbuf\");\n        /* no return */\n    }\n    int64_t rsi = *arg3;\n    int64_t rax_1;\n    size_t rdi;\n    if (rsi == 0)\n    {\n        rdi = 0x20;\n        if (arg2 <= 0x10)\n        {\n            rdi = 0x10;\n        }\n    }\n    else\n    {\n        rax_1 = arg1;\n        if (rsi < arg2)\n        {\n            rdi = (rsi + rsi);\n            if (rsi > rdi)\n            {\n                rdi = arg2;\n            label_4057e8:\n                *arg3 = rdi;\n                rax_1 = realloc(arg1, rdi);\n                if (rax_1 == 0)\n                {\n                    goto label_405806;\n                }\n                goto label_4057b1;\n            }\n        }\n    }\n    if (((rsi == 0 && arg2 > 0x10) || (rsi != 0 && rsi < arg2)))\n    {\n        size_t rax_2;\n        for (; rdi < arg2; rdi = rax_2)\n        {\n            rax_2 = (rdi + rdi);\n            if (rdi > rax_2)\n            {\n                break;\n            }\n        }\n        if (rdi < arg2)\n        {\n            rdi = arg2;\n        }\n        if (((rdi >= arg2 && rsi != 0) || (rdi < arg2 && rsi != 0)))\n        {\n            rax_1 = arg1;\n            if (rsi != rdi)\n            {\n                goto label_4057e8;\n            }\n        }\n    }\n    if ((((rsi == 0 && arg2 <= 0x10) || ((((rsi == 0 && arg2 > 0x10) || (rsi != 0 && rsi < arg2)) && rdi >= arg2) && rsi == 0)) || ((((rsi == 0 && arg2 > 0x10) || (rsi != 0 && rsi < arg2)) && rdi < arg2) && rsi == 0)))\n    {\n        if (arg1 != 0)\n        {\n            __assert_fail(\"NULL == existing\", \"extendbuf.c\", 0x4f, \"extendbuf\");\n            /* no return */\n        }\n        *arg3 = rdi;\n        rax_1 = malloc(rdi);\n    }\n    if (((((((rsi == 0 && arg2 <= 0x10) || ((((rsi == 0 && arg2 > 0x10) || (rsi != 0 && rsi < arg2)) && rdi >= arg2) && rsi == 0)) || ((((rsi == 0 && arg2 > 0x10) || (rsi != 0 && rsi < arg2)) && rdi < arg2) && rsi == 0)) && arg1 == 0) || (rsi != 0 && rsi >= arg2)) || (((rsi == 0 && arg2 > 0x10) || (rsi != 0 && rsi < arg2)) && ((rdi >= arg2 && rsi != 0) || (rdi < arg2 && rsi != 0)))))\n    {\n        if (rax_1 == 0)\n        {\n        label_405806:\n            return 0;\n        }\n    label_4057b1:\n        *rax = r14;\n        return rax_1;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_405840",
            "funcStartAddr": "0x405840",
            "funcEndAddr": "0x40585d",
            "decompiledFuncCode": "int64_t sub_405840(int64_t arg1, size_t arg2, int64_t* arg3)\n{\n    int64_t rax = sub_405740(arg1, arg2, arg3);\n    if (rax == 0)\n    {\n        free(arg1);\n        sub_4098a0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405860",
            "funcStartAddr": "0x405860",
            "funcEndAddr": "0x4058b7",
            "decompiledFuncCode": "uint64_t sub_405860(int32_t arg1, char arg2)\n{\n    int32_t rax_1 = sub_409d40(arg1, 1, 0);\n    uint64_t rax_3;\n    if (rax_1 < 0)\n    {\n        rax_3 = 0xffffffff;\n    }\n    else\n    {\n        int32_t rax_2 = (rax_1 | 1);\n        int32_t rdx_2 = (rax_1 & 0xfffffffe);\n        if (arg2 != 0)\n        {\n            rdx_2 = rax_2;\n        }\n        rax_3 = 0;\n        if (rdx_2 != rax_1)\n        {\n            int32_t rax_4;\n            rax_4 = sub_409d40(arg1, 2, rdx_2) == 0xffffffff;\n            rax_3 = (-rax_4);\n        }\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_4058c0",
            "funcStartAddr": "0x4058c0",
            "funcEndAddr": "0x4058ce",
            "decompiledFuncCode": "int64_t sub_4058c0(int32_t arg1)\n{\n    /* tailcall */\n    return sub_409d40(arg1, 0x406, 0);\n}\n\n"
        },
        {
            "funcName": "sub_4058d0",
            "funcStartAddr": "0x4058d0",
            "funcEndAddr": "0x4058d8",
            "decompiledFuncCode": "int64_t sub_4058d0(int64_t arg1)\n{\n    data_612510 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4058e0",
            "funcStartAddr": "0x4058e0",
            "funcEndAddr": "0x4059dd",
            "decompiledFuncCode": "void sub_4058e0(void* arg1)\n{\n    if (sub_409ec0(stdin) != 0)\n    {\n        int32_t rax_8 = sub_409ef0(stdin, 0, 1);\n        uint64_t* const rdi_3 = stdin;\n        int32_t rax_3;\n        if (rax_8 == 0)\n        {\n            rax_3 = sub_409e80(rdi_3);\n            rdi_3 = stdin;\n            if (rax_3 != 0)\n            {\n                sub_40b2b0(rdi_3);\n            }\n        }\n        if (((rax_8 != 0 || (rax_8 == 0 && rax_3 == 0)) && sub_40b2b0(rdi_3) == 0))\n        {\n            /* tailcall */\n            return sub_405a00();\n        }\n    }\n    else if (sub_40b2b0(stdin) == 0)\n    {\n        /* tailcall */\n        return sub_405a00();\n    }\n    char* rax_4 = dcgettext(nullptr, \"error closing file\", 5);\n    int64_t rbx = data_612510;\n    int32_t* rax_5 = __errno_location();\n    if (rbx == 0)\n    {\n        error(0, *rax_5, \"%s\", rax_4);\n    }\n    else\n    {\n        error(0, *rax_5, \"%s: %s\", sub_408e10(rbx), rax_4);\n    }\n    sub_405a00();\n    _exit(data_6122c0);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4059e0",
            "funcStartAddr": "0x4059e0",
            "funcEndAddr": "0x4059e8",
            "decompiledFuncCode": "int64_t sub_4059e0(int64_t arg1)\n{\n    data_612520 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4059f0",
            "funcStartAddr": "0x4059f0",
            "funcEndAddr": "0x4059f8",
            "decompiledFuncCode": "int64_t sub_4059f0(char arg1)\n{\n    data_612518 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_405a00",
            "funcStartAddr": "0x405a00",
            "funcEndAddr": "0x405a9e",
            "decompiledFuncCode": "uint64_t sub_405a00()\n{\n    int32_t rax = sub_40b2b0(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_612518 == 0 || (data_612518 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_612520;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_408e10(rdi_2), rax_3);\n            }\n        }\n    }\n    if ((rax == 0 || ((rax != 0 && data_612518 != 0) && *rax_1 == 0x20)))\n    {\n        uint64_t rax_2 = sub_40b2b0(stderr);\n        if (rax_2 == 0)\n        {\n            return rax_2;\n        }\n    }\n    _exit(data_6122c0);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_405aa0",
            "funcStartAddr": "0x405aa0",
            "funcEndAddr": "0x405b2e",
            "decompiledFuncCode": "DIR* sub_405aa0()\n{\n    char* rdi;\n    DIR* rax = opendir(rdi);\n    if (rax != 0)\n    {\n        int32_t rax_1 = dirfd(rax);\n        if (rax_1 <= 2)\n        {\n            int32_t rax_3 = sub_409080(rax_1);\n            int32_t* rax_4 = __errno_location();\n            DIR* r13;\n            int32_t r14;\n            if (rax_3 < 0)\n            {\n                r14 = *rax_4;\n                r13 = nullptr;\n            }\n            else\n            {\n                DIR* rax_6 = fdopendir(rax_3);\n                r14 = *rax_4;\n                r13 = rax_6;\n                if (rax_6 == 0)\n                {\n                    close(rax_3);\n                }\n            }\n            closedir(rax);\n            *rax_4 = r14;\n            return r13;\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405b30",
            "funcStartAddr": "0x405b30",
            "funcEndAddr": "0x405b7a",
            "decompiledFuncCode": "uint64_t sub_405b30(char* arg1, int64_t arg2, int32_t arg3)\n{\n    uint64_t rdx = 0;\n    if ((arg2 & 0x40) != 0)\n    {\n        int32_t var_50_1 = 0x10;\n        rdx = arg3;\n        void* var_48_1 = &arg_8;\n        void var_38;\n        void* var_40_1 = &var_38;\n    }\n    return sub_409090(open(arg1, arg2, rdx));\n}\n\n"
        },
        {
            "funcName": "sub_405b80",
            "funcStartAddr": "0x405b80",
            "funcEndAddr": "0x405cf6",
            "decompiledFuncCode": "int64_t sub_405b80(char* arg1, char* arg2, int64_t arg3, int64_t* arg4)\n{\n    if (arg3 > 0x1fffffffffffffff)\n    {\n        return 0;\n    }\n    char* rbx = arg1;\n    int64_t rdi = (arg3 << 3);\n    void* rdi_5;\n    void var_38;\n    if (rdi > 0xfaf)\n    {\n        rdi_5 = sub_40b890(rdi);\n    }\n    else\n    {\n        rdi_5 = ((((&var_38 - ((rdi + 0x27) & 0xfffffffffffffff0)) + 0xf) & 0xfffffffffffffff0) + 0x10);\n    }\n    if (((rdi > 0xfaf && rdi_5 != 0) || (rdi <= 0xfaf && rdi_5 != 0)))\n    {\n        *(rdi_5 + 8) = 1;\n        int64_t r8 = 0;\n        int64_t r9 = 2;\n        if (arg3 > 2)\n        {\n            do\n            {\n                char rax_1 = arg2[(r9 - 1)];\n                if (rax_1 != arg2[r8])\n                {\n                    while (r8 != 0)\n                    {\n                        r8 = (r8 - *(rdi_5 + (r8 << 3)));\n                        if (arg2[r8] == rax_1)\n                        {\n                            break;\n                        }\n                    }\n                }\n                if ((rax_1 == arg2[r8] || (rax_1 != arg2[r8] && r8 != 0)))\n                {\n                    r8 = (r8 + 1);\n                    *(rdi_5 + (r9 << 3)) = (r9 - r8);\n                }\n                if ((rax_1 != arg2[r8] && r8 == 0))\n                {\n                    *(rdi_5 + (r9 << 3)) = r9;\n                    r8 = 0;\n                }\n                r9 = (r9 + 1);\n            } while (arg3 != r9);\n        }\n        *arg4 = 0;\n        char r8_1 = *rbx;\n        char* r9_1 = rbx;\n        int64_t rax_2 = 0;\n        while (r8_1 != 0)\n        {\n            do\n            {\n                if (arg2[rax_2] == r8_1)\n                {\n                    rax_2 = (rax_2 + 1);\n                    void* r10_2 = &r9_1[1];\n                    if (arg3 == rax_2)\n                    {\n                        *arg4 = rbx;\n                        break;\n                    }\n                    r8_1 = r9_1[1];\n                    r9_1 = r10_2;\n                    break;\n                }\n                if (rax_2 == 0)\n                {\n                    r8_1 = r9_1[1];\n                    rbx = &rbx[1];\n                    r9_1 = &r9_1[1];\n                    break;\n                }\n                int64_t r10_1 = *(rdi_5 + (rax_2 << 3));\n                rbx = &rbx[r10_1];\n                rax_2 = (rax_2 - r10_1);\n            } while (r8_1 != 0);\n            if ((arg2[rax_2] == r8_1 && arg3 == rax_2))\n            {\n                break;\n            }\n        }\n        sub_40b900(rdi_5);\n        return 1;\n    }\n    if (((rdi > 0xfaf && rdi_5 == 0) || (rdi <= 0xfaf && rdi_5 == 0)))\n    {\n        return 0;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_405d00",
            "funcStartAddr": "0x405d00",
            "funcEndAddr": "0x405d1d",
            "decompiledFuncCode": "int64_t sub_405d00() __noreturn\n{\n    __assert_fail(\"iter->cur.wc == 0\", \"mbuiter.h\", 0xb3, \"mbuiter_multi_next\");\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_405d20",
            "funcStartAddr": "0x402000",
            "funcEndAddr": "0x4066e6",
            "decompiledFuncCode": "int64_t sub_405d20(char* arg1, char* arg2, int64_t* arg3)\n{\n    int64_t* var_118 = arg3;\n    uint64_t rax = sub_40ba40(arg2);\n    if (rax <= 0x492492492492492)\n    {\n        uint64_t rdi_3 = (((rax << 3) - rax) << 3);\n        void* r12_3;\n        if (rdi_3 > 0xfaf)\n        {\n            r12_3 = sub_40b890(rdi_3);\n        }\n        else\n        {\n            r12_3 = ((((&var_118 - ((rdi_3 + 0x27) & 0xfffffffffffffff0)) + 0xf) & 0xfffffffffffffff0) + 0x10);\n        }\n        if (r12_3 != 0)\n        {\n            char* var_e8 = arg2;\n            void* rbx_1 = r12_3;\n            char var_f8 = 0;\n            char var_ec = 0;\n            mbstate_t var_f4;\n            var_f4.__count = 0;\n            var_f4.__value = 0;\n            void* r13_2 = ((rax * 0x30) + r12_3);\n            while (true)\n            {\n                uint64_t var_e0_1;\n                char var_d8_1;\n                wchar_t var_d4;\n                char rax_8;\n                if (var_f8 == 0)\n                {\n                    char* rdx = var_e8;\n                    uint32_t rcx_1 = *rdx;\n                    uint32_t rax_3;\n                    rax_3 = (rcx_1 >> 5);\n                    if (((*(((rax_3 & 7) << 2) + 0x40f520) >> rcx_1) & 1) != 0)\n                    {\n                        var_e0_1 = 1;\n                        var_d8_1 = 1;\n                        var_d4 = *rdx;\n                        char var_ec_1 = 1;\n                        if (var_d4 == 0)\n                        {\n                        label_405f57:\n                            int64_t r15_1 = 0;\n                            void* r14_2 = (r12_3 + 0x30);\n                            *(r13_2 + 8) = 1;\n                            int64_t var_100_1 = 2;\n                            if (rax > 2)\n                            {\n                                do\n                                {\n                                    char rbx_2 = *(r14_2 + 0x10);\n                                    while (true)\n                                    {\n                                        void* rax_18 = ((r15_1 * 0x30) + r12_3);\n                                        if ((rbx_2 == 0 || (rbx_2 != 0 && *(rax_18 + 0x10) == 0)))\n                                        {\n                                            uint64_t rdx_3 = *(r14_2 + 8);\n                                            if ((rdx_3 == *(rax_18 + 8) && memcmp(*r14_2, *rax_18, rdx_3) == 0))\n                                            {\n                                                goto label_405fdc;\n                                            }\n                                        }\n                                        if (((rbx_2 != 0 && *(rax_18 + 0x10) != 0) && *(r14_2 + 0x14) == *(rax_18 + 0x14)))\n                                        {\n                                        label_405fdc:\n                                            r15_1 = (r15_1 + 1);\n                                            *(r13_2 + (var_100_1 << 3)) = (var_100_1 - r15_1);\n                                            break;\n                                        }\n                                        if (r15_1 == 0)\n                                        {\n                                            *(r13_2 + (var_100_1 << 3)) = var_100_1;\n                                            break;\n                                        }\n                                        r15_1 = (r15_1 - *(r13_2 + (r15_1 << 3)));\n                                    }\n                                    var_100_1 = (var_100_1 + 1);\n                                    r14_2 = (r14_2 + 0x30);\n                                } while (rax != var_100_1);\n                            }\n                            char var_b8_1 = 0;\n                            int64_t r15_2 = 0;\n                            char var_ac_1 = 0;\n                            *var_118 = 0;\n                            mbstate_t var_74;\n                            int64_t* var_110_1 = &var_74;\n                            char var_78_1 = 0;\n                            mbstate_t var_b4;\n                            var_b4.__count = 0;\n                            var_b4.__value = 0;\n                            var_74.__count = 0;\n                            var_74.__value = 0;\n                            char var_6c_1 = 0;\n                            int64_t* var_100_2 = &var_b4;\n                            char* var_a8_1 = arg1;\n                            char* var_68_1 = arg1;\n                            char rax_25 = 0;\n                        label_406080:\n                            char var_58;\n                            if (rax_25 != 0)\n                            {\n                                if (var_58 != 0)\n                                {\n                                    goto label_406182;\n                                }\n                                goto label_40609a;\n                            }\n                            while (true)\n                            {\n                                uint64_t var_60;\n                                int32_t var_54;\n                                void* rax_28;\n                                uint32_t rax_36;\n                                uint32_t rcx_4;\n                                if (var_78_1 == 0)\n                                {\n                                    char* rdx_7 = var_68_1;\n                                    rcx_4 = *rdx_7;\n                                    rax_36 = (rcx_4 >> 5);\n                                    if (((*(((rax_36 & 7) << 2) + 0x40f520) >> rcx_4) & 1) == 0)\n                                    {\n                                        if (mbsinit(var_110_1) == 0)\n                                        {\n                                            break;\n                                        }\n                                        var_78_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        var_60 = 1;\n                                        var_58 = 1;\n                                        var_54 = *rdx_7;\n                                        var_6c_1 = 1;\n                                    label_406182:\n                                        int32_t rdx_8 = var_54;\n                                        if (rdx_8 == 0)\n                                        {\n                                        label_4061d4:\n                                            sub_40b900(r12_3);\n                                            return 1;\n                                        }\n                                        rax_28 = ((r15_2 * 0x30) + r12_3);\n                                        if (*(rax_28 + 0x10) == 0)\n                                        {\n                                            goto label_40609d;\n                                        }\n                                        if (*(rax_28 + 0x14) == rdx_8)\n                                        {\n                                        label_4061ab:\n                                            r15_2 = (r15_2 + 1);\n                                            var_68_1 = &var_68_1[var_60];\n                                            char var_6c_3 = 0;\n                                            if (rax != r15_2)\n                                            {\n                                                continue;\n                                            }\n                                            else\n                                            {\n                                                *var_118 = var_a8_1;\n                                            }\n                                            goto label_4061d4;\n                                        }\n                                    }\n                                }\n                                uint64_t rdx_4;\n                                if ((var_78_1 != 0 || (var_78_1 == 0 && ((*(((rax_36 & 7) << 2) + 0x40f520) >> rcx_4) & 1) == 0)))\n                                {\n                                    uint64_t rax_54 = sub_40b170(&var_54, var_68_1, sub_409040(var_68_1, __ctype_get_mb_cur_max()), &var_74);\n                                    var_60 = rax_54;\n                                    if (rax_54 == -1)\n                                    {\n                                        var_60 = 1;\n                                        var_58 = 0;\n                                        var_6c_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        if (rax_54 != -2)\n                                        {\n                                            if (rax_54 == 0)\n                                            {\n                                                var_60 = 1;\n                                                if (*var_68_1 != 0)\n                                                {\n                                                    goto label_4066aa;\n                                                }\n                                                if (var_54 != 0)\n                                                {\n                                                    goto label_4066c8;\n                                                }\n                                            }\n                                            var_58 = 1;\n                                            if (mbsinit(&var_74) != 0)\n                                            {\n                                                var_78_1 = 0;\n                                            }\n                                            var_6c_1 = 1;\n                                            goto label_406182;\n                                        }\n                                        var_58 = 0;\n                                        var_60 = strlen(var_68_1);\n                                        var_6c_1 = 1;\n                                    }\n                                label_40609a:\n                                    rax_28 = ((r15_2 * 0x30) + r12_3);\n                                label_40609d:\n                                    rdx_4 = *(rax_28 + 8);\n                                }\n                                if (((((var_78_1 != 0 || (var_78_1 == 0 && ((*(((rax_36 & 7) << 2) + 0x40f520) >> rcx_4) & 1) == 0)) && rdx_4 != var_60) || (var_78_1 == 0 && ((*(((rax_36 & 7) << 2) + 0x40f520) >> rcx_4) & 1) != 0)) && r15_2 != 0))\n                                {\n                                    goto label_406375;\n                                }\n                                uint64_t var_a0;\n                                char var_98;\n                                int32_t var_94;\n                                if (((var_78_1 != 0 || (var_78_1 == 0 && ((*(((rax_36 & 7) << 2) + 0x40f520) >> rcx_4) & 1) == 0)) && rdx_4 == var_60))\n                                {\n                                    if (memcmp(*rax_28, var_68_1, rdx_4) == 0)\n                                    {\n                                        goto label_4061ab;\n                                    }\n                                    if (r15_2 != 0)\n                                    {\n                                    label_406375:\n                                        int64_t rbx_6 = *(r13_2 + (r15_2 << 3));\n                                        rax_25 = var_6c_1;\n                                        int64_t r14_4 = (r15_2 - rbx_6);\n                                        if (rbx_6 == 0)\n                                        {\n                                            goto label_406080;\n                                        }\n                                    label_4063be:\n                                        uint32_t rax_60;\n                                        uint32_t rcx_7;\n                                        if (var_b8_1 == 0)\n                                        {\n                                            rcx_7 = *var_a8_1;\n                                            rax_60 = (rcx_7 >> 5);\n                                            if (((*(((rax_60 & 7) << 2) + 0x40f520) >> rcx_7) & 1) != 0)\n                                            {\n                                                var_a0 = 1;\n                                                var_98 = 1;\n                                                var_94 = *var_a8_1;\n                                                char var_ac_5 = 1;\n                                            }\n                                            else\n                                            {\n                                                if (mbsinit(var_100_2) == 0)\n                                                {\n                                                    goto label_4066c3;\n                                                }\n                                                var_b8_1 = 1;\n                                            }\n                                        }\n                                        if ((var_b8_1 != 0 || (var_b8_1 == 0 && ((*(((rax_60 & 7) << 2) + 0x40f520) >> rcx_7) & 1) == 0)))\n                                        {\n                                            uint64_t rax_68 = sub_40b170(&var_94, var_a8_1, sub_409040(var_a8_1, __ctype_get_mb_cur_max()), &var_b4);\n                                            var_a0 = rax_68;\n                                            if (rax_68 == -1)\n                                            {\n                                                var_a0 = 1;\n                                                var_98 = 0;\n                                            label_4063a6:\n                                                char var_ac_4 = 0;\n                                                var_a8_1 = &var_a8_1[var_a0];\n                                                int64_t temp0_1 = rbx_6;\n                                                rbx_6 = (rbx_6 - 1);\n                                                if (temp0_1 != 1)\n                                                {\n                                                    goto label_4063be;\n                                                }\n                                                rax_25 = var_6c_1;\n                                                r15_2 = r14_4;\n                                                goto label_406080;\n                                            }\n                                            if (rax_68 == -2)\n                                            {\n                                                var_98 = 0;\n                                                var_a0 = strlen(var_a8_1);\n                                                goto label_4063a6;\n                                            }\n                                            if (rax_68 == 0)\n                                            {\n                                                var_a0 = 1;\n                                                if (*var_a8_1 != 0)\n                                                {\n                                                    goto label_4066aa;\n                                                }\n                                                if (var_94 != 0)\n                                                {\n                                                    __assert_fail(\"iter->cur.wc == 0\", \"mbuiter.h\", 0xb3, \"mbuiter_multi_next\");\n                                                    /* no return */\n                                                }\n                                            }\n                                            var_98 = 1;\n                                            if (mbsinit(&var_b4) != 0)\n                                            {\n                                                var_b8_1 = 0;\n                                            }\n                                            char var_ac_6 = 1;\n                                        }\n                                        if (var_94 == 0)\n                                        {\n                                            goto label_402000;\n                                        }\n                                        goto label_4063a6;\n                                    }\n                                }\n                                if ((((((var_78_1 != 0 || (var_78_1 == 0 && ((*(((rax_36 & 7) << 2) + 0x40f520) >> rcx_4) & 1) == 0)) && rdx_4 != var_60) || (var_78_1 == 0 && ((*(((rax_36 & 7) << 2) + 0x40f520) >> rcx_4) & 1) != 0)) && r15_2 == 0) || ((var_78_1 != 0 || (var_78_1 == 0 && ((*(((rax_36 & 7) << 2) + 0x40f520) >> rcx_4) & 1) == 0)) && rdx_4 == var_60)))\n                                {\n                                    if (var_b8_1 == 0)\n                                    {\n                                        char* rdx_5 = var_a8_1;\n                                        uint32_t rcx_3 = *rdx_5;\n                                        uint32_t rax_29;\n                                        rax_29 = (rcx_3 >> 5);\n                                        if (((*(((rax_29 & 7) << 2) + 0x40f520) >> rcx_3) & 1) == 0)\n                                        {\n                                            if (mbsinit(var_100_2) == 0)\n                                            {\n                                                break;\n                                            }\n                                            var_b8_1 = 1;\n                                            goto label_406575;\n                                        }\n                                        var_a0 = 1;\n                                        var_98 = 1;\n                                        var_94 = *rdx_5;\n                                        char var_ac_2 = 1;\n                                    }\n                                    else\n                                    {\n                                    label_406575:\n                                        uint64_t rax_75 = sub_40b170(&var_94, var_a8_1, sub_409040(var_a8_1, __ctype_get_mb_cur_max()), &var_b4);\n                                        var_a0 = rax_75;\n                                        if (rax_75 == -1)\n                                        {\n                                            var_a0 = 1;\n                                            var_98 = 0;\n                                        label_406128:\n                                            var_a8_1 = &var_a8_1[var_a0];\n                                            var_68_1 = &var_68_1[var_60];\n                                            char var_ac_3 = 0;\n                                            char var_6c_2 = 0;\n                                            continue;\n                                        }\n                                        else\n                                        {\n                                            if (rax_75 == -2)\n                                            {\n                                                var_98 = 0;\n                                                var_a0 = strlen(var_a8_1);\n                                                goto label_406128;\n                                            }\n                                            if (rax_75 == 0)\n                                            {\n                                                var_a0 = 1;\n                                                if (*var_a8_1 != 0)\n                                                {\n                                                    goto label_4066aa;\n                                                }\n                                                if (var_94 != 0)\n                                                {\n                                                    goto label_4066c8;\n                                                }\n                                            }\n                                            var_98 = 1;\n                                            if (mbsinit(&var_b4) != 0)\n                                            {\n                                                var_b8_1 = 0;\n                                            }\n                                            char var_ac_7 = 1;\n                                        }\n                                    }\n                                    if (var_94 == 0)\n                                    {\n                                    label_402000:\n                                        abort();\n                                        /* no return */\n                                    }\n                                    goto label_406128;\n                                }\n                            }\n                            break;\n                        }\n                    label_405e45:\n                        rax_8 = 1;\n                        goto label_405e58;\n                    }\n                    if (mbsinit(&var_f4) == 0)\n                    {\n                        break;\n                    }\n                    var_f8 = 1;\n                }\n                uint64_t rax_12 = sub_40b170(&var_d4, var_e8, sub_409040(var_e8, __ctype_get_mb_cur_max()), &var_f4);\n                var_e0_1 = rax_12;\n                if (rax_12 != -1)\n                {\n                    if (rax_12 == -2)\n                    {\n                        var_d8_1 = 0;\n                        var_e0_1 = strlen(var_e8);\n                        rax_8 = 0;\n                        char var_ec_5 = 1;\n                        goto label_405e58;\n                    }\n                    if (rax_12 == 0)\n                    {\n                        var_e0_1 = 1;\n                        if (*var_e8 != 0)\n                        {\n                        label_4066aa:\n                            __assert_fail(\"*iter->cur.ptr == '\\0'\", \"mbuiter.h\", 0xb2, \"mbuiter_multi_next\");\n                            /* no return */\n                        }\n                        if (var_d4 != 0)\n                        {\n                        label_4066c8:\n                            sub_405d00();\n                            /* no return */\n                        }\n                    }\n                    var_d8_1 = 1;\n                    if (mbsinit(&var_f4) != 0)\n                    {\n                        var_f8 = 0;\n                    }\n                    char var_ec_3 = 1;\n                    if (var_d4 == 0)\n                    {\n                        goto label_405f57;\n                    }\n                    goto label_405e45;\n                }\n                var_e0_1 = 1;\n                rax_8 = 0;\n                var_d8_1 = 0;\n                char var_ec_4 = 1;\n            label_405e58:\n                uint64_t rdx_1 = var_e0_1;\n                void var_d0;\n                if (var_e8 == &var_d0)\n                {\n                    rdx_1 = var_e0_1;\n                    *rbx_1 = memcpy((rbx_1 + 0x18), var_e8, rdx_1);\n                    rax_8 = var_d8_1;\n                }\n                else\n                {\n                    *rbx_1 = var_e8;\n                }\n                *(rbx_1 + 8) = rdx_1;\n                *(rbx_1 + 0x10) = rax_8;\n                if (rax_8 != 0)\n                {\n                    *(rbx_1 + 0x14) = var_d4;\n                }\n                var_e8 = &var_e8[rdx_1];\n                rbx_1 = (rbx_1 + 0x30);\n                char var_ec_2 = 0;\n            }\n        label_4066c3:\n            __assert_fail(\"mbsinit (&iter->state)\", \"mbuiter.h\", 0x96, \"mbuiter_multi_next\");\n            /* no return */\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_4066f0",
            "funcStartAddr": "0x402005",
            "funcEndAddr": "0x4075be",
            "decompiledFuncCode": "char* sub_4066f0(char* arg1, char* arg2)\n{\n    char* rbp = arg1;\n    char* var_78;\n    char* rax_1;\n    if (__ctype_get_mb_cur_max() > 1)\n    {\n        int32_t rcx_3 = *arg2;\n        char var_178_1 = 0;\n        char var_16c_1 = 0;\n        mbstate_t var_174;\n        var_174.__count = 0;\n        var_174.__value = 0;\n        int32_t rax_6;\n        rax_6 = (rcx_3 >> 5);\n        int32_t var_154;\n        uint64_t var_160_1;\n        char var_158_1;\n        if (((*(((rax_6 & 7) << 2) + 0x40f520) >> rcx_3) & 1) != 0)\n        {\n            var_160_1 = 1;\n            var_154 = rcx_3;\n            var_158_1 = 1;\n            char var_16c_2 = 1;\n        }\n        else\n        {\n            if (mbsinit(&var_174) == 0)\n            {\n            label_4075a0:\n                __assert_fail(\"mbsinit (&iter->state)\", \"mbuiter.h\", 0x96, \"mbuiter_multi_next\");\n                /* no return */\n            }\n            char var_178_2 = 1;\n            char* r12_3 = arg2;\n            uint64_t rax_94 = sub_40b170(&var_154, r12_3, sub_409040(r12_3, __ctype_get_mb_cur_max()), &var_174);\n            var_160_1 = rax_94;\n            if (rax_94 == -1)\n            {\n                var_160_1 = 1;\n                var_158_1 = 0;\n                char var_16c_3 = 1;\n            label_4068c7:\n                char* var_128_1 = arg2;\n                int64_t r12_2 = 0;\n                int64_t rbx_2 = 0;\n                char r14_2 = 1;\n                char var_138_1 = 0;\n                mbstate_t var_134;\n                var_134.__count = 0;\n                var_134.__value = 0;\n                char var_12c_1 = 0;\n                char* var_e8_1 = rbp;\n                char var_f8_1 = 0;\n                mbstate_t var_f4;\n                var_f4.__count = 0;\n                var_f4.__value = 0;\n                char var_ec_1 = 0;\n                int64_t var_180_1 = 0;\n                uint32_t rax_11;\n                int32_t rax_51;\n                uint32_t rcx_6;\n                while (true)\n                {\n                    uint64_t var_e0_1;\n                    char var_d8_1;\n                    int32_t var_d4;\n                    if (var_f8_1 == 0)\n                    {\n                        rcx_6 = *var_e8_1;\n                        rax_11 = (rcx_6 >> 5);\n                        if (((*(((rax_11 & 7) << 2) + 0x40f520) >> rcx_6) & 1) != 0)\n                        {\n                            var_e0_1 = 1;\n                            var_d8_1 = 1;\n                            var_d4 = *var_e8_1;\n                            char var_ec_2 = 1;\n                        }\n                        else\n                        {\n                            rax_51 = mbsinit(&var_f4);\n                            if (rax_51 == 0)\n                            {\n                                break;\n                            }\n                            var_f8_1 = 1;\n                        }\n                    }\n                    uint64_t rax_49;\n                    uint64_t r15_4;\n                    if ((var_f8_1 != 0 || (var_f8_1 == 0 && ((*(((rax_11 & 7) << 2) + 0x40f520) >> rcx_6) & 1) == 0)))\n                    {\n                        char* r8_2 = var_e8_1;\n                        rax_49 = sub_40b170(&var_d4, r8_2, sub_409040(r8_2, __ctype_get_mb_cur_max()), &var_f4);\n                        var_e0_1 = rax_49;\n                        if (rax_49 == -1)\n                        {\n                            var_e0_1 = 1;\n                            var_d8_1 = 0;\n                            char var_ec_4 = 1;\n                        }\n                        if (rax_49 == -2)\n                        {\n                            var_d8_1 = 0;\n                            var_e0_1 = strlen(var_e8_1);\n                            char var_ec_6 = 1;\n                        }\n                        if ((rax_49 == -1 || rax_49 == -2))\n                        {\n                            rax_49 = r12_2 > 9;\n                            rax_49 = (rax_49 & r14_2);\n                            if (rax_49 == 0)\n                            {\n                                rbx_2 = (rbx_2 + 1);\n                            label_406eb8:\n                                r15_4 = var_e0_1;\n                                if (r15_4 != var_160_1)\n                                {\n                                    goto label_406d0a;\n                                }\n                                if (memcmp(var_e8_1, arg2, r15_4) != 0)\n                                {\n                                    goto label_406d0a;\n                                }\n                            label_4069d1:\n                                int32_t rcx_7 = *arg2;\n                                int128_t zmm1 = var_e8_1;\n                                char* var_68_1 = arg2;\n                                var_78 = 0;\n                                int128_t var_a8_1;\n                                var_a8_1 = (zmm1 + *zmm1[8]);\n                                int32_t rax_18;\n                                rax_18 = (rcx_7 >> 5);\n                                int128_t var_b8 = var_f8_1;\n                                int128_t var_98 = var_d8_1;\n                                int128_t var_c8;\n                                int128_t var_88_1 = var_c8;\n                                *var_b8[0xc] = 0;\n                                char var_6c_1 = 0;\n                                var_78 = 0;\n                                int32_t var_54;\n                                int32_t rax_79;\n                                uint64_t rax_82;\n                                uint64_t var_60_1;\n                                if (((*(((rax_18 & 7) << 2) + 0x40f520) >> rcx_7) & 1) == 0)\n                                {\n                                    rax_79 = mbsinit(&*var_78[4]);\n                                    if (rax_79 == 0)\n                                    {\n                                        break;\n                                    }\n                                    var_78 = 1;\n                                    rax_82 = sub_40b170(&var_54, var_68_1, sub_409040(var_68_1, __ctype_get_mb_cur_max()), &*var_78[4]);\n                                    var_60_1 = rax_82;\n                                    if (rax_82 == -1)\n                                    {\n                                        var_60_1 = 1;\n                                        char var_58_4 = 0;\n                                    label_406ab1:\n                                        char var_6c_3 = 0;\n                                        rbx_2 = (rbx_2 + 1);\n                                        char* var_68_2 = &var_68_1[var_60_1];\n                                        uint32_t rax_23;\n                                        int32_t rax_48;\n                                        uint32_t rcx_8;\n                                        while (true)\n                                        {\n                                            uint64_t var_60_2;\n                                            char var_58_2;\n                                            if (var_78 == 0)\n                                            {\n                                                rcx_8 = *var_68_2;\n                                                rax_23 = (rcx_8 >> 5);\n                                                if (((*(((rax_23 & 7) << 2) + 0x40f520) >> rcx_8) & 1) == 0)\n                                                {\n                                                    rax_48 = mbsinit(&*var_78[4]);\n                                                    if (rax_48 == 0)\n                                                    {\n                                                        break;\n                                                    }\n                                                    var_78 = 1;\n                                                }\n                                                else\n                                                {\n                                                    var_60_2 = 1;\n                                                    var_58_2 = 1;\n                                                    var_54 = *var_68_2;\n                                                    char var_6c_4 = 1;\n                                                    if (var_54 == 0)\n                                                    {\n                                                    label_406cbf:\n                                                        return var_e8_1;\n                                                    }\n                                                }\n                                            }\n                                            if ((var_78 != 0 || (var_78 == 0 && ((*(((rax_23 & 7) << 2) + 0x40f520) >> rcx_8) & 1) == 0)))\n                                            {\n                                                uint64_t rax_38 = sub_40b170(&var_54, var_68_2, sub_409040(var_68_2, __ctype_get_mb_cur_max()), &*var_78[4]);\n                                                var_60_2 = rax_38;\n                                                if (rax_38 == -1)\n                                                {\n                                                    var_60_2 = 1;\n                                                    var_58_2 = 0;\n                                                    char var_6c_7 = 1;\n                                                }\n                                                else if (rax_38 == -2)\n                                                {\n                                                    var_58_2 = 0;\n                                                    var_60_2 = strlen(var_68_2);\n                                                    char var_6c_8 = 1;\n                                                }\n                                                else\n                                                {\n                                                    if (rax_38 == 0)\n                                                    {\n                                                        var_60_2 = 1;\n                                                        if (*var_68_2 != 0)\n                                                        {\n                                                            goto label_4075b9;\n                                                        }\n                                                        if (var_54 != 0)\n                                                        {\n                                                            goto label_4074aa;\n                                                        }\n                                                    }\n                                                    var_58_2 = 1;\n                                                    if (mbsinit(&*var_78[4]) != 0)\n                                                    {\n                                                        var_78 = 0;\n                                                    }\n                                                    char var_6c_6 = 1;\n                                                    if (var_54 == 0)\n                                                    {\n                                                        goto label_406cbf;\n                                                    }\n                                                }\n                                            }\n                                            if (*var_b8[0xc] != 0)\n                                            {\n                                                if (var_98 == 0)\n                                                {\n                                                    goto label_406cec;\n                                                }\n                                                goto label_406b8f;\n                                            }\n                                            int32_t rax_33;\n                                            if (var_b8 == 0)\n                                            {\n                                                char* rdx_8 = var_a8_1;\n                                                uint32_t rcx_9 = *rdx_8;\n                                                uint32_t rax_28;\n                                                rax_28 = (rcx_9 >> 5);\n                                                if (((*(((rax_28 & 7) << 2) + 0x40f520) >> rcx_9) & 1) == 0)\n                                                {\n                                                    if (mbsinit(&*var_b8[4]) == 0)\n                                                    {\n                                                        break;\n                                                    }\n                                                    var_b8 = 1;\n                                                    goto label_406d4a;\n                                                }\n                                                *var_a8_1[8] = 1;\n                                                var_98 = 1;\n                                                *var_98[4] = *rdx_8;\n                                                *var_b8[0xc] = 1;\n                                            label_406b8f:\n                                                rax_33 = *var_98[4];\n                                                if (rax_33 == 0)\n                                                {\n                                                    goto label_406e08;\n                                                }\n                                            }\n                                            else\n                                            {\n                                            label_406d4a:\n                                                char* r15_5 = var_a8_1;\n                                                int64_t rax_44 = sub_40b170(&*var_98[4], r15_5, sub_409040(r15_5, __ctype_get_mb_cur_max()), &*var_b8[4]);\n                                                *var_a8_1[8] = rax_44;\n                                                if (rax_44 == -1)\n                                                {\n                                                    *var_a8_1[8] = 1;\n                                                    var_98 = 0;\n                                                    *var_b8[0xc] = 1;\n                                                label_406cec:\n                                                    uint64_t rdx_12 = *var_a8_1[8];\n                                                    if (rdx_12 != var_60_2)\n                                                    {\n                                                        break;\n                                                    }\n                                                    rax_33 = memcmp(var_a8_1, var_68_2, rdx_12) != 0;\n                                                    goto label_406bb6;\n                                                }\n                                                if (rax_44 == -2)\n                                                {\n                                                    var_98 = 0;\n                                                    *var_a8_1[8] = strlen(var_a8_1);\n                                                    *var_b8[0xc] = 1;\n                                                    goto label_406cec;\n                                                }\n                                                if (rax_44 == 0)\n                                                {\n                                                    char* rax_45 = var_a8_1;\n                                                    *var_a8_1[8] = 1;\n                                                    if (*rax_45 != 0)\n                                                    {\n                                                        goto label_4075b9;\n                                                    }\n                                                    if (*var_98[4] != 0)\n                                                    {\n                                                        goto label_4074aa;\n                                                    }\n                                                }\n                                                var_98 = 1;\n                                                if (mbsinit(&*var_b8[4]) != 0)\n                                                {\n                                                    var_b8 = 0;\n                                                }\n                                                rax_33 = *var_98[4];\n                                                *var_b8[0xc] = 1;\n                                                if (rax_33 == 0)\n                                                {\n                                                    goto label_406e08;\n                                                }\n                                            }\n                                            if (var_58_2 == 0)\n                                            {\n                                                goto label_406cec;\n                                            }\n                                            rax_33 = var_54 != rax_33;\n                                        label_406bb6:\n                                            int64_t rdx_9 = (rbx_2 + 1);\n                                            if (rax_33 != 0)\n                                            {\n                                                break;\n                                            }\n                                            var_a8_1 = (var_a8_1 + *var_a8_1[8]);\n                                            rbx_2 = rdx_9;\n                                            var_68_2 = &var_68_2[var_60_2];\n                                            *var_b8[0xc] = 0;\n                                            char var_6c_5 = 0;\n                                        }\n                                        if (((var_78 == 0 && ((*(((rax_23 & 7) << 2) + 0x40f520) >> rcx_8) & 1) == 0) && rax_48 == 0))\n                                        {\n                                            break;\n                                        }\n                                    }\n                                    else\n                                    {\n                                        if (rax_82 == -2)\n                                        {\n                                            char var_58_5 = 0;\n                                            var_60_1 = strlen(var_68_1);\n                                            goto label_406ab1;\n                                        }\n                                        if (rax_82 == 0)\n                                        {\n                                            var_60_1 = 1;\n                                            if (*var_68_1 != 0)\n                                            {\n                                                goto label_4075b9;\n                                            }\n                                            if (var_54 != 0)\n                                            {\n                                                goto label_4074aa;\n                                            }\n                                        }\n                                        char var_58_3 = 1;\n                                        if (mbsinit(&*var_78[4]) != 0)\n                                        {\n                                            var_78 = 0;\n                                        }\n                                        char var_6c_9 = 1;\n                                    }\n                                }\n                                else\n                                {\n                                    var_60_1 = 1;\n                                    var_54 = rcx_7;\n                                    char var_58_1 = 1;\n                                    char var_6c_2 = 1;\n                                }\n                                if ((((*(((rax_18 & 7) << 2) + 0x40f520) >> rcx_7) & 1) != 0 || ((((*(((rax_18 & 7) << 2) + 0x40f520) >> rcx_7) & 1) == 0 && rax_79 != 0) && rax_82 != -1)))\n                                {\n                                    if (var_54 == 0)\n                                    {\n                                        abort();\n                                        /* no return */\n                                    }\n                                    goto label_406ab1;\n                                }\n                                goto label_406d02;\n                            }\n                            if (rbx_2 < (r12_2 * 5))\n                            {\n                                rbx_2 = (rbx_2 + 1);\n                                r14_2 = rax_49;\n                                goto label_406eb8;\n                            }\n                        label_407070:\n                            int64_t r14_4 = (rbx_2 - var_180_1);\n                            char var_118;\n                            if (((rbx_2 == var_180_1 && var_12c_1 != 0) && var_118 == 0))\n                            {\n                                goto label_40728c;\n                            }\n                            uint64_t var_120;\n                            wchar_t var_114;\n                            if (rbx_2 != var_180_1)\n                            {\n                                if (var_12c_1 != 0)\n                                {\n                                    if (var_118 == 0)\n                                    {\n                                        goto label_40708b;\n                                    }\n                                    goto label_4070e6;\n                                }\n                                uint32_t rax_60;\n                                int32_t rax_66;\n                                uint32_t rcx_14;\n                                int64_t temp2_1;\n                                do\n                                {\n                                    if (var_138_1 == 0)\n                                    {\n                                        rcx_14 = *var_128_1;\n                                        rax_60 = (rcx_14 >> 5);\n                                        if (((*(((rax_60 & 7) << 2) + 0x40f520) >> rcx_14) & 1) == 0)\n                                        {\n                                            rax_66 = mbsinit(&var_134);\n                                            if (rax_66 == 0)\n                                            {\n                                                break;\n                                            }\n                                            var_138_1 = 1;\n                                        }\n                                        else\n                                        {\n                                            var_120 = 1;\n                                            var_118 = 1;\n                                            var_114 = *var_128_1;\n                                            var_12c_1 = 1;\n                                        label_4070e6:\n                                            if (var_114 == 0)\n                                            {\n                                                if (var_12c_1 == 0)\n                                                {\n                                                    break;\n                                                }\n                                                goto label_407104;\n                                            }\n                                        }\n                                    }\n                                    if ((var_138_1 != 0 || (var_138_1 == 0 && ((*(((rax_60 & 7) << 2) + 0x40f520) >> rcx_14) & 1) == 0)))\n                                    {\n                                        char* r15_6 = var_128_1;\n                                        uint64_t rax_69 = sub_40b170(&var_114, r15_6, sub_409040(r15_6, __ctype_get_mb_cur_max()), &var_134);\n                                        var_120 = rax_69;\n                                        if (rax_69 == -1)\n                                        {\n                                            var_120 = 1;\n                                            char var_118_1 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (rax_69 != -2)\n                                            {\n                                                if (rax_69 == 0)\n                                                {\n                                                    var_120 = 1;\n                                                    if (*var_128_1 != 0)\n                                                    {\n                                                        goto label_4075b9;\n                                                    }\n                                                    if (var_114 != 0)\n                                                    {\n                                                        goto label_4074aa;\n                                                    }\n                                                }\n                                                var_118 = 1;\n                                                if (mbsinit(&var_134) != 0)\n                                                {\n                                                    var_138_1 = 0;\n                                                }\n                                                var_12c_1 = 1;\n                                                goto label_4070e6;\n                                            }\n                                            char var_118_2 = 0;\n                                            var_120 = strlen(var_128_1);\n                                        }\n                                    }\n                                label_40708b:\n                                    char var_12c_2 = 0;\n                                    var_128_1 = &var_128_1[var_120];\n                                    temp2_1 = r14_4;\n                                    r14_4 = (r14_4 - 1);\n                                } while (temp2_1 != 1);\n                                if (((var_138_1 == 0 && ((*(((rax_60 & 7) << 2) + 0x40f520) >> rcx_14) & 1) == 0) && rax_66 == 0))\n                                {\n                                    break;\n                                }\n                            }\n                            char rdx_19;\n                            if (((rbx_2 == var_180_1 && var_12c_1 == 0) || rbx_2 != var_180_1))\n                            {\n                                if (var_138_1 == 0)\n                                {\n                                    uint32_t rcx_16 = *var_128_1;\n                                    uint32_t rax_73;\n                                    rax_73 = (rcx_16 >> 5);\n                                    if (((*(((rax_73 & 7) << 2) + 0x40f520) >> rcx_16) & 1) == 0)\n                                    {\n                                        if (mbsinit(&var_134) == 0)\n                                        {\n                                            break;\n                                        }\n                                        var_138_1 = 1;\n                                        goto label_40739d;\n                                    }\n                                    var_120 = 1;\n                                    var_118 = 1;\n                                    var_114 = *var_128_1;\n                                    var_12c_1 = 1;\n                                }\n                                else\n                                {\n                                label_40739d:\n                                    char* r14_5 = var_128_1;\n                                    uint64_t rax_88 = sub_40b170(&var_114, r14_5, sub_409040(r14_5, __ctype_get_mb_cur_max()), &var_134);\n                                    var_120 = rax_88;\n                                    if (rax_88 == -1)\n                                    {\n                                        var_120 = 1;\n                                        var_118 = 0;\n                                        var_12c_1 = 1;\n                                    label_40728c:\n                                        rdx_19 = var_d8_1;\n                                        r14_2 = 1;\n                                        goto label_40729e;\n                                    }\n                                    if (rax_88 == -2)\n                                    {\n                                        var_118 = 0;\n                                        var_120 = strlen(var_128_1);\n                                        var_12c_1 = 1;\n                                        goto label_40728c;\n                                    }\n                                    if (rax_88 == 0)\n                                    {\n                                        var_120 = 1;\n                                        if (*var_128_1 != 0)\n                                        {\n                                            goto label_4075b9;\n                                        }\n                                        if (var_114 != 0)\n                                        {\n                                            goto label_4074aa;\n                                        }\n                                    }\n                                    var_118 = 1;\n                                    if (mbsinit(&var_134) != 0)\n                                    {\n                                        var_138_1 = 0;\n                                    }\n                                    var_12c_1 = 1;\n                                }\n                            }\n                            if (var_114 != 0)\n                            {\n                                goto label_40728c;\n                            }\n                        label_407104:\n                            char rax_65 = sub_405d20(rbp, arg2, &var_78);\n                            r14_2 = rax_65;\n                            if (rax_65 != 0)\n                            {\n                                break;\n                            }\n                            rdx_19 = var_d8_1;\n                        label_40729e:\n                            var_180_1 = rbx_2;\n                            rbx_2 = (rbx_2 + 1);\n                            if (rdx_19 == 0)\n                            {\n                                goto label_406eb8;\n                            }\n                        }\n                        if ((rax_49 != -1 && rax_49 != -2))\n                        {\n                            if (rax_49 == 0)\n                            {\n                                var_e0_1 = 1;\n                                if (*var_e8_1 != 0)\n                                {\n                                    goto label_4075b9;\n                                }\n                                if (var_d4 != 0)\n                                {\n                                    goto label_4074aa;\n                                }\n                            }\n                            var_d8_1 = 1;\n                            if (mbsinit(&var_f4) != 0)\n                            {\n                                var_f8_1 = 0;\n                            }\n                            char var_ec_5 = 1;\n                        }\n                    }\n                    if (((var_f8_1 == 0 && ((*(((rax_11 & 7) << 2) + 0x40f520) >> rcx_6) & 1) != 0) || (((var_f8_1 != 0 || (var_f8_1 == 0 && ((*(((rax_11 & 7) << 2) + 0x40f520) >> rcx_6) & 1) == 0)) && rax_49 != -1) && rax_49 != -2)))\n                    {\n                        if (var_d4 == 0)\n                        {\n                            goto label_406e08;\n                        }\n                        int32_t rax_15;\n                        rax_15 = r12_2 > 9;\n                        rax_15 = (rax_15 & r14_2);\n                        if (rax_15 == 0)\n                        {\n                            rbx_2 = (rbx_2 + 1);\n                        }\n                        else\n                        {\n                            if (rbx_2 >= (r12_2 * 5))\n                            {\n                                goto label_407070;\n                            }\n                            rbx_2 = (rbx_2 + 1);\n                            r14_2 = rax_15;\n                        }\n                    }\n                    if (((((var_f8_1 == 0 && ((*(((rax_11 & 7) << 2) + 0x40f520) >> rcx_6) & 1) != 0) || (((var_f8_1 != 0 || (var_f8_1 == 0 && ((*(((rax_11 & 7) << 2) + 0x40f520) >> rcx_6) & 1) == 0)) && rax_49 != -1) && rax_49 != -2)) && var_d4 != 0) || ((var_f8_1 != 0 || (var_f8_1 == 0 && ((*(((rax_11 & 7) << 2) + 0x40f520) >> rcx_6) & 1) == 0)) && (rax_49 == -1 || rax_49 == -2))))\n                    {\n                        if (var_158_1 == 0)\n                        {\n                            goto label_406eb8;\n                        }\n                        if (var_d4 == var_154)\n                        {\n                            goto label_4069d1;\n                        }\n                    label_406d02:\n                        r15_4 = var_e0_1;\n                    label_406d0a:\n                        var_e8_1 = &var_e8_1[r15_4];\n                        r12_2 = (r12_2 + 1);\n                        char var_ec_3 = 0;\n                    }\n                }\n                if (((var_f8_1 == 0 && ((*(((rax_11 & 7) << 2) + 0x40f520) >> rcx_6) & 1) == 0) && rax_51 == 0))\n                {\n                    goto label_4075a0;\n                }\n            label_407531:\n                rax_1 = var_78;\n                goto label_40685e;\n            }\n            if (rax_94 == -2)\n            {\n                var_158_1 = 0;\n                var_160_1 = strlen(arg2);\n                char var_16c_5 = 1;\n                goto label_4068c7;\n            }\n            if (rax_94 == 0)\n            {\n                var_160_1 = 1;\n                if (*arg2 != 0)\n                {\n                label_4075b9:\n                    __assert_fail(\"*iter->cur.ptr == '\\0'\", \"mbuiter.h\", 0xb2, \"mbuiter_multi_next\");\n                    /* no return */\n                }\n                if (var_154 != 0)\n                {\n                label_4074aa:\n                    sub_405d00();\n                    /* no return */\n                }\n            }\n            var_158_1 = 1;\n            if (mbsinit(&var_174) != 0)\n            {\n                char var_178_3 = 0;\n            }\n            char var_16c_4 = 1;\n        }\n        if (var_154 != 0)\n        {\n            goto label_4068c7;\n        }\n    label_40684a:\n        rax_1 = rbp;\n        goto label_40685e;\n    }\n    char r15_1 = *arg2;\n    rax_1 = rbp;\n    if (r15_1 == 0)\n    {\n        goto label_40685e;\n    }\n    char rcx_1 = *rbp;\n    if (rcx_1 != 0)\n    {\n        char* r9_1 = arg2;\n        int64_t r12_1 = 0;\n        void* rdx_1 = nullptr;\n        char rax_2 = 1;\n        char rcx_4;\n        while (true)\n        {\n            r12_1 = (r12_1 + 1);\n            void* rbx_1 = (rdx_1 + 1);\n            void* r14_1 = &rbp[1];\n            if ((r15_1 != rcx_1 && rbp[1] == 0))\n            {\n                break;\n            }\n            if (r15_1 == rcx_1)\n            {\n                rcx_4 = arg2[1];\n                if (rcx_4 == 0)\n                {\n                    break;\n                }\n                char rsi_3 = *r14_1;\n                if (rsi_3 == 0)\n                {\n                    break;\n                }\n                rbx_1 = (rdx_1 + 2);\n                if (rcx_4 == rsi_3)\n                {\n                    int64_t rdx_3 = (-rdx_1);\n                    char* rdi_3 = &arg2[rdx_3];\n                    rdx_1 = &rbp[rdx_3];\n                    char rcx_5;\n                    char rsi_4;\n                    do\n                    {\n                        rcx_5 = *(rdi_3 + rbx_1);\n                        if (rcx_5 == 0)\n                        {\n                            break;\n                        }\n                        rsi_4 = *(rdx_1 + rbx_1);\n                        if (rsi_4 == 0)\n                        {\n                            break;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                    } while (rcx_5 == rsi_4);\n                    if (rcx_5 == 0)\n                    {\n                        break;\n                    }\n                    if (((rcx_5 != 0 && rcx_5 != 0) && rsi_4 == 0))\n                    {\n                        break;\n                    }\n                }\n            }\n            rdx_1 = r12_1 > 9;\n            rdx_1 = (rdx_1 & rax_2);\n            char rbp_1 = rdx_1;\n            if (rdx_1 != 0)\n            {\n                if ((rbx_1 >= (r12_1 * 5) && r9_1 != 0))\n                {\n                    r9_1 = &r9_1[strnlen(r9_1, (rbx_1 - rbx_1))];\n                }\n                if ((rbx_1 < (r12_1 * 5) || ((rbx_1 >= (r12_1 * 5) && r9_1 != 0) && *r9_1 != 0)))\n                {\n                    rax_2 = rbp_1;\n                }\n                if ((rbx_1 >= (r12_1 * 5) && (r9_1 == 0 || (r9_1 != 0 && *r9_1 == 0))))\n                {\n                    rax_2 = sub_405b80(r14_1, arg2, strlen(arg2), &var_78);\n                    if (rax_2 != 0)\n                    {\n                        break;\n                    }\n                    r9_1 = nullptr;\n                }\n            }\n            rcx_1 = *r14_1;\n            rbp = r14_1;\n            rdx_1 = rbx_1;\n        }\n        if ((r15_1 == rcx_1 && rcx_4 == 0))\n        {\n            goto label_40684a;\n        }\n        if ((r15_1 != rcx_1 && rbp[1] == 0))\n        {\n            goto label_406e08;\n        }\n        goto label_407531;\n    }\nlabel_406e08:\n    rax_1 = nullptr;\nlabel_40685e:\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4075c0",
            "funcStartAddr": "0x4075c0",
            "funcEndAddr": "0x407659",
            "decompiledFuncCode": "char* sub_4075c0(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_40ddc8;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_612528 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_407660",
            "funcStartAddr": "0x407660",
            "funcEndAddr": "0x407752",
            "decompiledFuncCode": "char* sub_407660(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_40b320();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_407741:\n                void* const rbx_1 = &data_40ddcc;\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_407741;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_407741;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_407741;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_407741;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_407741;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_407741;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_407741;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_40ddd5;\n            if (cond:2_1)\n            {\n                rbx = &data_40ddd2;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_407741;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_407741;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_407741;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_407741;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_407741;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_40ddd9;\n            if (cond:1_1)\n            {\n                rbx = &data_40ddce;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_407760",
            "funcStartAddr": "0x40200a",
            "funcEndAddr": "0x408763",
            "decompiledFuncCode": "int64_t sub_407760(char* arg1, int64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    int64_t r14 = arg2;\n    uint32_t rbp_1 = (arg6 & 2);\n    uint64_t rax;\n    uint32_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t r11 = arg5;\n    bool cond:0 = r11 == 0xa;\n    if (r11 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_ac;\n    uint64_t var_98;\n    char const* const var_70;\n    bool var_5b;\n    int64_t rbx;\n    switch (r11)\n    {\n        case 0:\n        {\n            var_5b = false;\n            rbx = 0;\n            var_ac = 0;\n            var_98 = 0;\n            var_70 = nullptr;\n            break;\n        }\n        case 3:\n        {\n            var_5b = true;\n            rbx = 0;\n            r11 = 2;\n            var_ac = 1;\n            var_98 = 1;\n            var_70 = \"'\";\n            break;\n        }\n        case 6:\n        {\n            var_5b = true;\n            rbx = 0;\n            r11 = 5;\n            var_ac = 1;\n            var_98 = 1;\n            var_70 = &data_40ddcc;\n            break;\n        }\n        case 7:\n        {\n            var_5b = false;\n            rbx = 0;\n            var_ac = 1;\n            var_98 = 0;\n            var_70 = nullptr;\n            break;\n        }\n    }\n    if (r11 == 2)\n    {\n        if (rbp_1 != 0)\n        {\n            var_5b = true;\n            rbx = 0;\n            var_ac = 0;\n            var_98 = 1;\n            var_70 = \"'\";\n        }\n        else\n        {\n            var_ac = 0;\n        }\n    }\n    if ((r11 == 1 || (r11 == 4 && rbp_1 != 0)))\n    {\n        var_5b = true;\n        rbx = 0;\n        r11 = 2;\n        var_ac = 0;\n        var_98 = 1;\n        var_70 = \"'\";\n    }\n    if ((r11 == 4 && rbp_1 == 0))\n    {\n        var_ac = 1;\n    }\n    if (((r11 == 2 && rbp_1 == 0) || (r11 == 4 && rbp_1 == 0)))\n    {\n        if (r14 != 0)\n        {\n            *r15 = 0x27;\n        }\n        var_5b = false;\n        rbx = 1;\n        r11 = 2;\n        var_98 = 1;\n        var_70 = \"'\";\n    }\n    if (r11 == 5)\n    {\n        if (rbp_1 != 0)\n        {\n            var_5b = true;\n            rbx = 0;\n            var_ac = 1;\n            var_98 = 1;\n            var_70 = &data_40ddcc;\n        }\n        else\n        {\n            if (r14 != 0)\n            {\n                *r15 = 0x22;\n            }\n            var_5b = false;\n            rbx = 1;\n            var_ac = 1;\n            var_98 = 1;\n            var_70 = &data_40ddcc;\n        }\n    }\n    if (((r11 == 8 || r11 == 9) || r11 == 0xa))\n    {\n        if ((!cond:0))\n        {\n            arg8 = sub_407660(&data_40dddd, r11);\n            arg9 = sub_407660(\"'\", r11);\n        }\n        rbx = 0;\n        if (rbp_1 == 0)\n        {\n            char rax_13 = *arg8;\n            if (rax_13 != 0)\n            {\n                do\n                {\n                    if (r14 > rbx)\n                    {\n                        r15[rbx] = rax_13;\n                    }\n                    rbx = (rbx + 1);\n                    rax_13 = arg8[rbx];\n                } while (rax_13 != 0);\n            }\n        }\n        var_5b = rbp_1 != 0;\n        uint64_t rax_14;\n        rax_14 = strlen(arg9);\n        var_ac = 1;\n        var_98 = rax_14;\n        var_70 = arg9;\n    }\n    uint64_t r11_1 = arg4;\n    int32_t r10_1 = r11;\n    uint64_t r13 = 0;\n    uint32_t r8 = 0;\n    while (true)\n    {\n        rbp_1 = r11_1 != r13;\n        if (r11_1 == -1)\n        {\n            rbp_1 = *(arg3 + r13) != 0;\n        }\n        uint64_t rax_2;\n        int32_t r11_3;\n        uint64_t r10_2;\n        if (rbp_1 == 0)\n        {\n            uint32_t rcx_7 = var_5b;\n            r10_2 = r11_1;\n            r11_3 = r10_1;\n            int32_t rax_23;\n            rax_23 = r10_1 == 2;\n            rdx = rbx == 0;\n            rax_2 = ((rax_23 & rcx_7) & rdx);\n            if (rax_2 == 0)\n            {\n                if ((var_70 != 0 && rcx_7 == 0))\n                {\n                    char const rdx_10 = *var_70;\n                    if (rdx_10 != 0)\n                    {\n                        void* rax_25 = (var_70 - rbx);\n                        do\n                        {\n                            if (r14 > rbx)\n                            {\n                                r15[rbx] = rdx_10;\n                            }\n                            rbx = (rbx + 1);\n                            rdx_10 = *(rax_25 + rbx);\n                        } while (rdx_10 != 0);\n                    }\n                }\n                if (rbx < r14)\n                {\n                    r15[rbx] = 0;\n                }\n                break;\n            }\n        }\n        else\n        {\n            rax_2 = r10_1 != 2;\n            rax_2 = (rax_2 & var_ac);\n            uint64_t r9 = (arg3 + r13);\n            uint64_t var_a8;\n            var_a8 = rax_2;\n            int32_t rcx_1;\n            uint64_t r12_2;\n            if (rax_2 == 0)\n            {\n                r12_2 = *r9;\n                if (r12_2 > 0x7e)\n                {\n                    goto label_407e8d;\n                }\n                switch (r12_2)\n                {\n                    case 0:\n                    {\n                        if (var_ac != 0)\n                        {\n                        label_407da8:\n                            if (var_5b == 0)\n                            {\n                                var_a8 = 0;\n                            label_407dbf:\n                                rdx = r10_1 == 2;\n                                rax_2 = ((r8 ^ 1) & rdx);\n                                int64_t rcx_4;\n                                if (rax_2 == 0)\n                                {\n                                    rcx_4 = rbx;\n                                    if (rbx < r14)\n                                    {\n                                        goto label_407e05;\n                                    }\n                                    goto label_407e0a;\n                                }\n                                if (rbx < r14)\n                                {\n                                    r15[rbx] = 0x27;\n                                }\n                                if (r14 > (rbx + 1))\n                                {\n                                    r15[(rbx + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx + 2))\n                                {\n                                    r15[(rbx + 2)] = 0x27;\n                                }\n                                rcx_4 = (rbx + 3);\n                                if (r14 <= rcx_4)\n                                {\n                                    rbx = (rbx + 4);\n                                    r13 = (r13 + 1);\n                                    r8 = rax_2;\n                                    r12_2 = 0x30;\n                                    goto label_407c87;\n                                }\n                                r8 = rax_2;\n                            label_407e05:\n                                r15[rcx_4] = 0x5c;\n                            label_407e0a:\n                                rbx = (rcx_4 + 1);\n                                rax_2 = (r13 + 1);\n                                if (r10_1 == 2)\n                                {\n                                    r13 = rax_2;\n                                    r12_2 = 0x30;\n                                label_407c87:\n                                    if (var_a8 != 0)\n                                    {\n                                        goto label_407bf3;\n                                    }\n                                    goto label_407997;\n                                }\n                                r12_2 = 0x30;\n                                if (rax_2 < r11_1)\n                                {\n                                    rax_2 = (*(arg3 + rax_2) - 0x30);\n                                    if (rax_2 <= 9)\n                                    {\n                                        if (r14 > rbx)\n                                        {\n                                            r15[rbx] = 0x30;\n                                        }\n                                        if (r14 > (rcx_4 + 2))\n                                        {\n                                            r15[(rcx_4 + 2)] = 0x30;\n                                        }\n                                        rbx = (rcx_4 + 3);\n                                        r12_2 = 0x30;\n                                    }\n                                }\n                            label_407e3b:\n                                if (var_ac == 0)\n                                {\n                                    goto label_407be0;\n                                }\n                                if (rdx != 0)\n                                {\n                                    goto label_407be0;\n                                }\n                                if (arg7 == 0)\n                                {\n                                    goto label_407e64;\n                                }\n                                goto label_407932;\n                            }\n                            rax_2 = r10_1;\n                            r10_2 = r11_1;\n                            r11_3 = rax_2;\n                            rax_2 = rax_2 == 2;\n                        }\n                        else if ((arg6 & 1) != 0)\n                        {\n                            r13 = (r13 + 1);\n                            continue;\n                        }\n                        else\n                        {\n                            if (var_5b != 0)\n                            {\n                                rbp_1 = 0;\n                                if (arg7 != 0)\n                                {\n                                    var_a8 = 0;\n                                    r12_2 = 0;\n                                label_407932:\n                                    if (((*(arg7 + ((r12_2 >> 5) << 2)) >> r12_2) & 1) == 0)\n                                    {\n                                        goto label_407e64;\n                                    }\n                                    rax_2 = r10_1 == 2;\n                                    goto label_407941;\n                                }\n                                r12_2 = 0;\n                            label_407e75:\n                                r13 = (r13 + 1);\n                                rbp_1 = ((rbp_1 ^ 1) & r8);\n                                goto label_408068;\n                            }\n                            r13 = (r13 + 1);\n                            rbp_1 = r8;\n                            r12_2 = 0;\n                        label_408068:\n                            if (rbp_1 != 0)\n                            {\n                                if (rbx < r14)\n                                {\n                                    r15[rbx] = 0x27;\n                                }\n                                if (r14 > (rbx + 1))\n                                {\n                                    r15[(rbx + 1)] = 0x27;\n                                }\n                                rbx = (rbx + 2);\n                                r8 = 0;\n                                goto label_407997;\n                            }\n                        label_407997:\n                            if (rbx >= r14)\n                            {\n                                goto label_4079a0;\n                            }\n                            r15[rbx] = r12_2;\n                        label_4079a0:\n                            rbx = (rbx + 1);\n                            continue;\n                        }\n                        break;\n                    }\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 0xe:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x40:\n                    {\n                        goto label_407e8d;\n                    }\n                    case 7:\n                    {\n                        r12_2 = 7;\n                        rcx_1 = 0x61;\n                        rdx = r10_1 == 2;\n                    label_407ce0:\n                        if (var_ac == 0)\n                        {\n                            goto label_407bd5;\n                        }\n                        rax_2 = rdx;\n                        r12_2 = rcx_1;\n                    label_407941:\n                        if (var_5b == 0)\n                        {\n                        label_40794c:\n                            r13 = (r13 + 1);\n                            goto label_407956;\n                        }\n                    label_407d0e:\n                        r10_2 = r11_1;\n                        r11_3 = r10_1;\n                        break;\n                    }\n                    case 8:\n                    {\n                        r12_2 = 8;\n                        rcx_1 = 0x62;\n                        rdx = r10_1 == 2;\n                        goto label_407ce0;\n                    }\n                    case 9:\n                    {\n                        r12_2 = 9;\n                        rcx_1 = 0x74;\n                        goto label_407f1c;\n                    }\n                    case 0xa:\n                    {\n                        r12_2 = 0xa;\n                        rcx_1 = 0x6e;\n                    label_407f1c:\n                        rdx = r10_1 == 2;\n                        rax_2 = (var_5b & rdx);\n                        var_a8 = rax_2;\n                        if (rax_2 == 0)\n                        {\n                            goto label_407ce0;\n                        }\n                        r10_2 = r11_1;\n                        r11_3 = r10_1;\n                        rax_2 = var_a8;\n                        break;\n                    }\n                    case 0xb:\n                    {\n                        r12_2 = 0xb;\n                        rcx_1 = 0x76;\n                        rdx = r10_1 == 2;\n                        goto label_407ce0;\n                    }\n                    case 0xc:\n                    {\n                        r12_2 = 0xc;\n                        rcx_1 = 0x66;\n                        rdx = r10_1 == 2;\n                        goto label_407ce0;\n                    }\n                    case 0xd:\n                    {\n                        r12_2 = 0xd;\n                        rcx_1 = 0x72;\n                        goto label_407f1c;\n                    }\n                    case 0x20:\n                    case 0x21:\n                    case 0x22:\n                    case 0x24:\n                    case 0x26:\n                    case 0x28:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x3b:\n                    case 0x3c:\n                    case 0x3d:\n                    case 0x3e:\n                    case 0x5b:\n                    case 0x5e:\n                    case 0x60:\n                    case 0x7c:\n                    {\n                        rdx = r10_1 == 2;\n                    label_407bbb:\n                        rax_2 = (var_5b & rdx);\n                        if (rax_2 == 0)\n                        {\n                            goto label_407bd5;\n                        }\n                    label_4083fb:\n                        r10_2 = r11_1;\n                        r11_3 = r10_1;\n                        break;\n                    }\n                    case 0x23:\n                    case 0x7e:\n                    {\n                        rdx = r10_1 == 2;\n                    label_407bb1:\n                        if (r13 != 0)\n                        {\n                            goto label_407bd5;\n                        }\n                        goto label_407bbb;\n                    }\n                    case 0x25:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x32:\n                    case 0x33:\n                    case 0x34:\n                    case 0x35:\n                    case 0x36:\n                    case 0x37:\n                    case 0x38:\n                    case 0x39:\n                    case 0x3a:\n                    case 0x41:\n                    case 0x42:\n                    case 0x43:\n                    case 0x44:\n                    case 0x45:\n                    case 0x46:\n                    case 0x47:\n                    case 0x48:\n                    case 0x49:\n                    case 0x4a:\n                    case 0x4b:\n                    case 0x4c:\n                    case 0x4d:\n                    case 0x4e:\n                    case 0x4f:\n                    case 0x50:\n                    case 0x51:\n                    case 0x52:\n                    case 0x53:\n                    case 0x54:\n                    case 0x55:\n                    case 0x56:\n                    case 0x57:\n                    case 0x58:\n                    case 0x59:\n                    case 0x5a:\n                    case 0x5d:\n                    case 0x5f:\n                    case 0x61:\n                    case 0x62:\n                    case 0x63:\n                    case 0x64:\n                    case 0x65:\n                    case 0x66:\n                    case 0x67:\n                    case 0x68:\n                    case 0x69:\n                    case 0x6a:\n                    case 0x6b:\n                    case 0x6c:\n                    case 0x6d:\n                    case 0x6e:\n                    case 0x6f:\n                    case 0x70:\n                    case 0x71:\n                    case 0x72:\n                    case 0x73:\n                    case 0x74:\n                    case 0x75:\n                    case 0x76:\n                    case 0x77:\n                    case 0x78:\n                    case 0x79:\n                    case 0x7a:\n                    {\n                    label_407ee4:\n                        rdx = r10_1 == 2;\n                    label_407bd5:\n                        rbp_1 = ((((var_ac ^ 1) | rdx) ^ 1) | var_5b);\n                        if (rbp_1 == 0)\n                        {\n                            goto label_407be0;\n                        }\n                        goto label_407908;\n                    }\n                    case 0x27:\n                    {\n                        goto label_407c35;\n                    }\n                    case 0x3f:\n                    {\n                        goto label_407c05;\n                    }\n                    case 0x5c:\n                    {\n                        if (r10_1 != 2)\n                        {\n                            goto label_407cba;\n                        }\n                        if (var_5b != 0)\n                        {\n                            goto label_40873f;\n                        }\n                        r13 = (r13 + 1);\n                        rbp_1 = r8;\n                        r12_2 = 0x5c;\n                        goto label_408068;\n                    }\n                    case 0x7b:\n                    case 0x7d:\n                    {\n                        goto label_407b91;\n                    }\n                }\n            }\n            else\n            {\n                int32_t var_90;\n                uint64_t var_88;\n                int32_t var_80;\n                if (var_98 != 0)\n                {\n                    uint64_t r12_1 = (r13 + var_98);\n                    if ((r11_1 == -1 && var_98 > 1))\n                    {\n                        var_88 = r8;\n                        var_90 = r9;\n                        uint64_t rax_4;\n                        rax_4 = strlen(arg3);\n                        r8 = var_88;\n                        r9 = var_90;\n                        r11_1 = rax_4;\n                    }\n                    if (r12_1 > r11_1)\n                    {\n                        goto label_408110;\n                    }\n                    int64_t var_78;\n                    var_78 = r10_1;\n                    var_80 = r11_1;\n                    var_88 = r8;\n                    var_90 = r9;\n                    int32_t rax_5;\n                    rax_5 = memcmp(r9, var_70, var_98);\n                    r9 = var_90;\n                    r8 = var_88;\n                    r11_1 = var_80;\n                    r10_1 = var_78;\n                    if (rax_5 != 0)\n                    {\n                        goto label_408110;\n                    }\n                    if (var_5b != 0)\n                    {\n                    label_408731:\n                        r10_2 = r11_1;\n                        r11_3 = r10_1;\n                    label_407f89:\n                        rbx = sub_407760(r15, r14, arg3, r10_2, r11_3, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        break;\n                    }\n                    r12_2 = *r9;\n                    if (r12_2 > 0x7e)\n                    {\n                        goto label_407e8d;\n                    }\n                    switch (r12_2)\n                    {\n                        case 0:\n                        {\n                            goto label_407dbf;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_407e8d;\n                        }\n                        case 7:\n                        {\n                            goto label_407d30;\n                        }\n                        case 8:\n                        {\n                            goto label_407d20;\n                        }\n                        case 9:\n                        {\n                            goto label_407d98;\n                        }\n                        case 0xa:\n                        {\n                            goto label_407cf8;\n                        }\n                        case 0xb:\n                        {\n                            goto label_407d88;\n                        }\n                        case 0xc:\n                        {\n                            goto label_407d78;\n                        }\n                        case 0xd:\n                        {\n                            goto label_407d49;\n                        }\n                        case 0x20:\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            goto label_407ca5;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            goto label_407d65;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                            goto label_407908;\n                        }\n                        case 0x27:\n                        {\n                            goto label_407c35;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_407c05;\n                        }\n                        case 0x5c:\n                        {\n                            goto label_407cba;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_407b91;\n                        }\n                    }\n                }\n                else\n                {\n                label_408110:\n                    r12_2 = *r9;\n                    if (r12_2 > 0x7e)\n                    {\n                    label_407e88:\n                        var_a8 = 0;\n                    label_407e8d:\n                        uint64_t rcx_5;\n                        if (rax == 1)\n                        {\n                            var_90 = r8;\n                            r8 = var_90;\n                            rcx_5 = 1;\n                            uint32_t rdx_5;\n                            rdx_5 = (*(*__ctype_b_loc() + (r12_2 << 1)) >> 0xe);\n                            rdx = ((rdx_5 ^ 1) & var_ac);\n                        label_407ed8:\n                            if (rdx == 0)\n                            {\n                                goto label_407ee4;\n                            }\n                            rdx = var_ac;\n                        label_40842e:\n                            uint64_t rcx_13 = (rcx_5 + r13);\n                            rax_2 = 0;\n                            char rsi_11 = var_a8;\n                            while (true)\n                            {\n                                if (rdx != 0)\n                                {\n                                    rbp_1 = r10_1 == 2;\n                                    rax_2 = rbp_1;\n                                    if (var_5b != 0)\n                                    {\n                                        break;\n                                    }\n                                    uint32_t rax_30;\n                                    rax_30 = ((r8 ^ 1) & rbp_1);\n                                    if (rax_30 != 0)\n                                    {\n                                        if (rbx < r14)\n                                        {\n                                            r15[rbx] = 0x27;\n                                        }\n                                        if (r14 > (rbx + 1))\n                                        {\n                                            r15[(rbx + 1)] = 0x24;\n                                        }\n                                        if (r14 > (rbx + 2))\n                                        {\n                                            r15[(rbx + 2)] = 0x27;\n                                        }\n                                        rbx = (rbx + 3);\n                                        r8 = rax_30;\n                                    }\n                                    if (rbx < r14)\n                                    {\n                                        r15[rbx] = 0x5c;\n                                    }\n                                    if (r14 > (rbx + 1))\n                                    {\n                                        r15[(rbx + 1)] = ((r12_2 >> 6) + 0x30);\n                                    }\n                                    if (r14 > (rbx + 2))\n                                    {\n                                        int32_t rax_34;\n                                        rax_34 = (r12_2 >> 3);\n                                        r15[(rbx + 2)] = ((rax_34 & 7) + 0x30);\n                                    }\n                                    r13 = (r13 + 1);\n                                    rbx = (rbx + 3);\n                                    r12_2 = ((r12_2 & 7) + 0x30);\n                                    if (rcx_13 <= r13)\n                                    {\n                                        break;\n                                    }\n                                    rax_2 = rdx;\n                                }\n                                else\n                                {\n                                    rbp_1 = ((rax_2 ^ 1) & r8);\n                                    if (rsi_11 != 0)\n                                    {\n                                        if (rbx < r14)\n                                        {\n                                            r15[rbx] = 0x5c;\n                                        }\n                                        rbx = (rbx + 1);\n                                    }\n                                    r13 = (r13 + 1);\n                                    if (r13 >= rcx_13)\n                                    {\n                                        break;\n                                    }\n                                    if (rbp_1 == 0)\n                                    {\n                                        rsi_11 = 0;\n                                    }\n                                    else\n                                    {\n                                        if (rbx < r14)\n                                        {\n                                            r15[rbx] = 0x27;\n                                        }\n                                        if (r14 > (rbx + 1))\n                                        {\n                                            r15[(rbx + 1)] = 0x27;\n                                        }\n                                        rbx = (rbx + 2);\n                                        rsi_11 = 0;\n                                        r8 = 0;\n                                    }\n                                }\n                                if (rbx < r14)\n                                {\n                                    r15[rbx] = r12_2;\n                                }\n                                r12_2 = *(arg3 + r13);\n                                rbx = (rbx + 1);\n                            }\n                            if ((rdx == 0 && r13 >= rcx_13))\n                            {\n                                goto label_408068;\n                            }\n                            if ((rdx != 0 && var_5b != 0))\n                            {\n                                goto label_4083fb;\n                            }\n                            goto label_407997;\n                        }\n                        mbstate_t var_40;\n                        var_40.__count = 0;\n                        var_40.__value = 0;\n                        if (r11_1 == -1)\n                        {\n                            var_88 = r8;\n                            var_90 = r9;\n                            r8 = var_88;\n                            r9 = var_90;\n                            r11_1 = strlen(arg3);\n                        }\n                        char var_5a_1 = r8;\n                        uint64_t rbx_1 = 0;\n                        char var_59_1 = r12_2;\n                        var_80 = r15;\n                        var_90 = r11_1;\n                        var_88 = r10_1;\n                        while (true)\n                        {\n                            uint64_t r14_1 = (r13 + rbx_1);\n                            uint64_t r12_3 = (arg3 + r14_1);\n                            wchar_t var_44;\n                            rax_2 = sub_40b170(&var_44, r12_3, (var_90 - r14_1), &var_40);\n                            uint64_t r15_1 = rax_2;\n                            if (rax_2 == 0)\n                            {\n                                rbp_1 = (rbp_1 ^ 1);\n                                rcx_5 = rbx_1;\n                                r15 = var_80;\n                                r8 = var_5a_1;\n                                r12_2 = var_59_1;\n                                rdx = (var_ac & rbp_1);\n                                r11_1 = var_90;\n                                r10_1 = var_88;\n                                break;\n                            }\n                            if (rax_2 == -1)\n                            {\n                                rcx_5 = rbx_1;\n                                r8 = var_5a_1;\n                                r12_2 = var_59_1;\n                                r15 = var_80;\n                                r11_1 = var_90;\n                                r10_1 = var_88;\n                                rdx = var_ac;\n                                break;\n                            }\n                            if (rax_2 == -2)\n                            {\n                                r11_1 = var_90;\n                                rax_2 = rbx_1;\n                                rcx_5 = rbx_1;\n                                r8 = var_5a_1;\n                                r12_2 = var_59_1;\n                                r15 = var_80;\n                                r10_1 = var_88;\n                                if ((r14_1 < r11_1 && *r12_3 != 0))\n                                {\n                                    do\n                                    {\n                                        rax_2 = (rax_2 + 1);\n                                        if (r11_1 <= (r13 + rax_2))\n                                        {\n                                            break;\n                                        }\n                                    } while (*(r9 + rax_2) != 0);\n                                    rcx_5 = rax_2;\n                                }\n                                rdx = var_ac;\n                                break;\n                            }\n                            rax_2 = var_88 == 2;\n                            rax_2 = (rax_2 & var_5b);\n                            if ((rax_2 != 0 && r15_1 != 1))\n                            {\n                                char* rdx_13 = ((arg3 + r14_1) + 1);\n                                uint64_t r8_2 = ((arg3 + r15_1) + r14_1);\n                                char rcx_11;\n                                do\n                                {\n                                    rcx_11 = (*rdx_13 - 0x5b);\n                                    if ((rcx_11 <= 0x21 && ((1 << rcx_11) & 0x20000002b) != 0))\n                                    {\n                                        break;\n                                    }\n                                    rdx_13 = &rdx_13[1];\n                                } while (r8_2 != rdx_13);\n                                if ((rcx_11 <= 0x21 && ((1 << rcx_11) & 0x20000002b) != 0))\n                                {\n                                    r15 = var_80;\n                                    r10_2 = var_90;\n                                    r11_3 = var_88;\n                                    break;\n                                }\n                            }\n                            mbstate_t* rdi_6 = &var_40;\n                            if (iswprint(var_44) == 0)\n                            {\n                                rbp_1 = 0;\n                            }\n                            rbx_1 = (rbx_1 + r15_1);\n                            rax_2 = mbsinit(rdi_6);\n                            if (rax_2 != 0)\n                            {\n                                rcx_5 = rbx_1;\n                                r8 = var_5a_1;\n                                r12_2 = var_59_1;\n                                r15 = var_80;\n                                r11_1 = var_90;\n                                r10_1 = var_88;\n                                rdx = ((rbp_1 ^ 1) & var_ac);\n                                break;\n                            }\n                        }\n                        if (rax_2 == 0)\n                        {\n                            if (rcx_5 > 1)\n                            {\n                                goto label_40842e;\n                            }\n                            goto label_407ed8;\n                        }\n                    }\n                    else\n                    {\n                        switch (r12_2)\n                        {\n                            case 0:\n                            {\n                                goto label_407da8;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_407e88;\n                            }\n                            case 7:\n                            {\n                            label_407d30:\n                                r12_2 = 0x61;\n                                rax_2 = 0;\n                                goto label_407d00;\n                            }\n                            case 8:\n                            {\n                            label_407d20:\n                                r12_2 = 0x62;\n                                rax_2 = 0;\n                                goto label_407d00;\n                            }\n                            case 9:\n                            {\n                            label_407d98:\n                                r12_2 = 0x74;\n                                rax_2 = 0;\n                                goto label_407d00;\n                            }\n                            case 0xa:\n                            {\n                            label_407cf8:\n                                r12_2 = 0x6e;\n                                rax_2 = 0;\n                            label_407d00:\n                                if (var_5b != 0)\n                                {\n                                    goto label_407d0e;\n                                }\n                                goto label_40794c;\n                            }\n                            case 0xb:\n                            {\n                            label_407d88:\n                                r12_2 = 0x76;\n                                rax_2 = 0;\n                                goto label_407d00;\n                            }\n                            case 0xc:\n                            {\n                            label_407d78:\n                                r12_2 = 0x66;\n                                rax_2 = 0;\n                                goto label_407d00;\n                            }\n                            case 0xd:\n                            {\n                                var_a8 = 0;\n                            label_407d49:\n                                r12_2 = 0xd;\n                                rcx_1 = 0x72;\n                                rdx = r10_1 == 2;\n                                goto label_407ce0;\n                            }\n                            case 0x20:\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_a8 = 0;\n                            label_407ca5:\n                                rdx = 0;\n                                goto label_407bd5;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                var_a8 = 0;\n                            label_407d65:\n                                if (r13 != 0)\n                                {\n                                    goto label_407908;\n                                }\n                                rdx = 0;\n                                goto label_407bd5;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                var_a8 = 0;\n                            label_407908:\n                                rbp_1 = 0;\n                                if (arg7 != 0)\n                                {\n                                    goto label_407932;\n                                }\n                            label_407e64:\n                                rax_2 = r10_1 == 2;\n                                if (var_a8 == 0)\n                                {\n                                    goto label_407e75;\n                                }\n                                goto label_407941;\n                            }\n                            case 0x27:\n                            {\n                                var_a8 = 0;\n                            label_407c35:\n                                rdx = 0;\n                                r12_2 = 0x27;\n                                if (r10_1 != 2)\n                                {\n                                    goto label_407bd5;\n                                }\n                                if (var_5b != 0)\n                                {\n                                    goto label_40873f;\n                                }\n                                if (rbx < r14)\n                                {\n                                    r15[rbx] = 0x27;\n                                }\n                                if (r14 > (rbx + 1))\n                                {\n                                    r15[(rbx + 1)] = 0x5c;\n                                }\n                                if (r14 > (rbx + 2))\n                                {\n                                    r15[(rbx + 2)] = 0x27;\n                                }\n                                rbx = (rbx + 3);\n                                r13 = (r13 + 1);\n                                r8 = 0;\n                                r12_2 = 0x27;\n                                goto label_407c87;\n                            }\n                            case 0x3f:\n                            {\n                                var_a8 = 0;\n                            label_407c05:\n                                if (r10_1 != 2)\n                                {\n                                    if (r10_1 != 5)\n                                    {\n                                        r12_2 = 0x3f;\n                                        rdx = r10_1 == 2;\n                                        goto label_407bd5;\n                                    }\n                                    if ((arg6 & 4) == 0)\n                                    {\n                                        rdx = 0;\n                                        r12_2 = 0x3f;\n                                        goto label_407bd5;\n                                    }\n                                    rax_2 = (r13 + 2);\n                                    rdx = 0;\n                                    r12_2 = 0x3f;\n                                    if (rax_2 >= r11_1)\n                                    {\n                                        goto label_407bd5;\n                                    }\n                                    if (*((arg3 + r13) + 1) != 0x3f)\n                                    {\n                                        goto label_407bd5;\n                                    }\n                                    r12_2 = *(arg3 + rax_2);\n                                    if (r12_2 > 0x3e)\n                                    {\n                                    label_408723:\n                                        r12_2 = 0x3f;\n                                        goto label_407bd5;\n                                    }\n                                    if ((!(TEST_BITQ(0x7000a38200000000, r12_2))))\n                                    {\n                                        goto label_408723;\n                                    }\n                                    if (var_5b != 0)\n                                    {\n                                        goto label_408731;\n                                    }\n                                    if (rbx < r14)\n                                    {\n                                        r15[rbx] = 0x3f;\n                                    }\n                                    if (r14 > (rbx + 1))\n                                    {\n                                        r15[(rbx + 1)] = 0x22;\n                                    }\n                                    if (r14 > (rbx + 2))\n                                    {\n                                        r15[(rbx + 2)] = 0x22;\n                                    }\n                                    if (r14 > (rbx + 3))\n                                    {\n                                        r15[(rbx + 3)] = 0x3f;\n                                    }\n                                    rbx = (rbx + 4);\n                                    rdx = 0;\n                                    rbp_1 = 0;\n                                    r13 = rax_2;\n                                    goto label_407e3b;\n                                }\n                                if (var_5b == 0)\n                                {\n                                    rbp_1 = 0;\n                                    r12_2 = 0x3f;\n                                label_407be0:\n                                    r13 = (r13 + 1);\n                                    if (var_a8 == 0)\n                                    {\n                                        rbp_1 = ((rbp_1 ^ 1) & r8);\n                                        goto label_408068;\n                                    }\n                                label_407bf3:\n                                    rax_2 = r10_1 == 2;\n                                label_407956:\n                                    rdx = ((r8 ^ 1) & rax_2);\n                                    if (rdx != 0)\n                                    {\n                                        if (r14 > rbx)\n                                        {\n                                            r15[rbx] = 0x27;\n                                        }\n                                        if (r14 > (rbx + 1))\n                                        {\n                                            r15[(rbx + 1)] = 0x24;\n                                        }\n                                        if (r14 > (rbx + 2))\n                                        {\n                                            r15[(rbx + 2)] = 0x27;\n                                        }\n                                        rbx = (rbx + 3);\n                                        r8 = rdx;\n                                    }\n                                    if (rbx < r14)\n                                    {\n                                        r15[rbx] = 0x5c;\n                                    }\n                                    rbx = (rbx + 1);\n                                    goto label_407997;\n                                }\n                            label_40873f:\n                                r10_2 = r11_1;\n                                r11_3 = r10_1;\n                                rax_2 = var_5b;\n                                break;\n                            }\n                            case 0x5c:\n                            {\n                                var_a8 = 0;\n                            label_407cba:\n                                rbp_1 = (var_ac & var_5b);\n                                r12_2 = 0x5c;\n                                rcx_1 = 0x5c;\n                                rax_2 = var_98 != 0;\n                                rdx = (rbp_1 & rax_2);\n                                if (rdx == 0)\n                                {\n                                    goto label_407ce0;\n                                }\n                                r13 = (r13 + 1);\n                                rbp_1 = r8;\n                                goto label_408068;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_a8 = 0;\n                            label_407b91:\n                                rax_2 = r11_1 != 1;\n                                if (r11_1 == -1)\n                                {\n                                    rax_2 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r10_1 == 2;\n                                if (rax_2 != 0)\n                                {\n                                    goto label_407bd5;\n                                }\n                                goto label_407bb1;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (var_ac == 0)\n        {\n            goto label_407f89;\n        }\n        if (rax_2 != 0)\n        {\n            r11_3 = 4;\n        }\n        goto label_407f89;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_408770",
            "funcStartAddr": "0x40200f",
            "funcEndAddr": "0x40890b",
            "decompiledFuncCode": "char* sub_408770(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_612318;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_612330 <= r15)\n    {\n        uint64_t rdx = (r15 + 1);\n        int32_t r12_1 = rdx;\n        uint64_t rsi_1 = (rdx << 4);\n        uint64_t rdx_1;\n        if (rbx == 0x612320)\n        {\n            int64_t rax_9 = sub_4096d0(0, rsi_1);\n            int128_t zmm0 = data_612320;\n            rdx_1 = rdx;\n            rbx = rax_9;\n            data_612318 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_4096d0(rbx, rsi_1);\n            rdx_1 = rdx;\n            data_612318 = rax_2;\n            rbx = rax_2;\n        }\n        uint64_t rdi_1 = data_612330;\n        memset(((rdi_1 << 4) + rbx), 0, ((rdx_1 - rdi_1) << 4));\n        data_612330 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    int64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_407760(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        size_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x612540)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_409680(rsi_3);\n        int32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_407760(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_408910",
            "funcStartAddr": "0x408910",
            "funcEndAddr": "0x408944",
            "decompiledFuncCode": "int64_t sub_408910(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x612640;\n    }\n    int64_t rax_1 = sub_409840(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_408950",
            "funcStartAddr": "0x408950",
            "funcEndAddr": "0x40895f",
            "decompiledFuncCode": "uint64_t sub_408950(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_612640;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_408960",
            "funcStartAddr": "0x408960",
            "funcEndAddr": "0x40896f",
            "decompiledFuncCode": "void sub_408960(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_612640;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_408970",
            "funcStartAddr": "0x408970",
            "funcEndAddr": "0x4089a3",
            "decompiledFuncCode": "uint64_t sub_408970(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x612640;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_4089b0",
            "funcStartAddr": "0x4089b0",
            "funcEndAddr": "0x4089c3",
            "decompiledFuncCode": "uint64_t sub_4089b0(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_612640;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4089d0",
            "funcStartAddr": "0x4089d0",
            "funcEndAddr": "0x4089fb",
            "decompiledFuncCode": "void sub_4089d0(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_612640;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x612640;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_408a00",
            "funcStartAddr": "0x408a00",
            "funcEndAddr": "0x408a72",
            "decompiledFuncCode": "int64_t sub_408a00(char* arg1, int64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_612640;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_407760(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_408a80",
            "funcStartAddr": "0x408a80",
            "funcEndAddr": "0x408b61",
            "decompiledFuncCode": "char* sub_408a80(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_612640;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_407760(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_409680((rax_2 + 1));\n    sub_407760(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_408b70",
            "funcStartAddr": "0x408b70",
            "funcEndAddr": "0x408b7a",
            "decompiledFuncCode": "int64_t sub_408b70(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_408a80(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_408b80",
            "funcStartAddr": "0x408b80",
            "funcEndAddr": "0x408c15",
            "decompiledFuncCode": "uint64_t sub_408b80()\n{\n    uint64_t rax_2 = data_612330;\n    int64_t r12 = data_612318;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x612540)\n    {\n        rax_2 = free(rdi_2);\n        *data_612320 = 0x100;\n        *(data_612320 + 8) = 0x612540;\n    }\n    if (r12 != 0x612320)\n    {\n        rax_2 = free(r12);\n        data_612318 = 0x612320;\n    }\n    data_612330 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_408c20",
            "funcStartAddr": "0x408c20",
            "funcEndAddr": "0x408c31",
            "decompiledFuncCode": "int64_t sub_408c20(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_408770(arg1, arg2, -1, &data_612640);\n}\n\n"
        },
        {
            "funcName": "sub_408c40",
            "funcStartAddr": "0x408c40",
            "funcEndAddr": "0x408c4a",
            "decompiledFuncCode": "int64_t sub_408c40(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_408770(arg1, arg2, arg3, &data_612640);\n}\n\n"
        },
        {
            "funcName": "sub_408c50",
            "funcStartAddr": "0x408c50",
            "funcEndAddr": "0x408c66",
            "decompiledFuncCode": "int64_t sub_408c50(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_408770(0, arg1, -1, &data_612640);\n}\n\n"
        },
        {
            "funcName": "sub_408c70",
            "funcStartAddr": "0x408c70",
            "funcEndAddr": "0x408c82",
            "decompiledFuncCode": "int64_t sub_408c70(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_408770(0, arg1, arg2, &data_612640);\n}\n\n"
        },
        {
            "funcName": "sub_408c90",
            "funcStartAddr": "0x402014",
            "funcEndAddr": "0x408cf8",
            "decompiledFuncCode": "char* sub_408c90(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_408770(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_408d00",
            "funcStartAddr": "0x402019",
            "funcEndAddr": "0x408d64",
            "decompiledFuncCode": "char* sub_408d00(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_408770(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_408d70",
            "funcStartAddr": "0x408d70",
            "funcEndAddr": "0x408d7c",
            "decompiledFuncCode": "int64_t sub_408d70(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_408c90(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_408d80",
            "funcStartAddr": "0x408d80",
            "funcEndAddr": "0x408d8f",
            "decompiledFuncCode": "int64_t sub_408d80(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_408d00(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_408d90",
            "funcStartAddr": "0x408d90",
            "funcEndAddr": "0x408e00",
            "decompiledFuncCode": "char* sub_408d90(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_612670;\n    int128_t var_48 = data_612640;\n    int128_t var_38 = data_612650;\n    int128_t var_28 = data_612660;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_408770(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_408e00",
            "funcStartAddr": "0x408e00",
            "funcEndAddr": "0x408e0d",
            "decompiledFuncCode": "int64_t sub_408e00(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_408d90(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_408e10",
            "funcStartAddr": "0x408e10",
            "funcEndAddr": "0x408e21",
            "decompiledFuncCode": "int64_t sub_408e10(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_408d90(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_408e30",
            "funcStartAddr": "0x408e30",
            "funcEndAddr": "0x408e3a",
            "decompiledFuncCode": "int64_t sub_408e30(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_408d90(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_408e40",
            "funcStartAddr": "0x40201e",
            "funcEndAddr": "0x408eae",
            "decompiledFuncCode": "char* sub_408e40(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_408770(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_408eb0",
            "funcStartAddr": "0x408eb0",
            "funcEndAddr": "0x408f1c",
            "decompiledFuncCode": "char* sub_408eb0(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_612640;\n    int128_t var_38 = data_612650;\n    int128_t var_28 = data_612660;\n    int64_t var_18 = data_612670;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_408770(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_408fe0",
            "funcStartAddr": "0x408fe0",
            "funcEndAddr": "0x40903e",
            "decompiledFuncCode": "ssize_t sub_408fe0(int32_t arg1, int64_t arg2, uint64_t arg3)\n{\n    uint64_t rbx = arg3;\n    ssize_t rax_1;\n    while (true)\n    {\n        rax_1 = read(arg1, arg2, rbx);\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        int32_t rax_3 = *__errno_location();\n        if (rax_3 != 4)\n        {\n            if (rax_3 != 0x16)\n            {\n                break;\n            }\n            if (rbx <= 0x7fffe000)\n            {\n                break;\n            }\n            rbx = 0x7fffe000;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_409040",
            "funcStartAddr": "0x409040",
            "funcEndAddr": "0x409071",
            "decompiledFuncCode": "void* sub_409040(char* arg1, void* arg2)\n{\n    char* rax = sub_40b1a0(arg1, 0, arg2);\n    void* rsi_2 = ((rax - arg1) + 1);\n    void* rax_1 = arg2;\n    if (rax != 0)\n    {\n        rax_1 = rsi_2;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_409080",
            "funcStartAddr": "0x409080",
            "funcEndAddr": "0x40908e",
            "decompiledFuncCode": "int64_t sub_409080(int32_t arg1)\n{\n    /* tailcall */\n    return sub_409d40(arg1, 0, 3);\n}\n\n"
        },
        {
            "funcName": "sub_409090",
            "funcStartAddr": "0x409090",
            "funcEndAddr": "0x4090de",
            "decompiledFuncCode": "uint64_t sub_409090(int32_t arg1)\n{\n    if (arg1 <= 2)\n    {\n        int32_t rax_1 = sub_409080(arg1);\n        int32_t* rax_2 = __errno_location();\n        int32_t r13 = *rax_2;\n        close(arg1);\n        *rax_2 = r13;\n        return rax_1;\n    }\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4090e0",
            "funcStartAddr": "0x402023",
            "funcEndAddr": "0x4094c5",
            "decompiledFuncCode": "int64_t sub_4090e0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        fprintf();\n    }\n    else\n    {\n        fprintf();\n    }\n    fprintf(arg1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_40eb2b, 5), 0x7df);\n    fputs(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58_2;\n    int64_t var_50_1;\n    int64_t var_48_1;\n    int64_t var_40;\n    int64_t rbx_2;\n    char* rsi_2;\n    int64_t r12_2;\n    int64_t r13_1;\n    int64_t r14_1;\n    int64_t r15_1;\n    if (arg6 > 9)\n    {\n        rsi_2 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n        r14_1 = arg5[7];\n        r13_1 = arg5[6];\n        var_40 = arg5[8];\n        r12_2 = arg5[5];\n        r15_1 = arg5[4];\n        var_48_1 = arg5[3];\n        var_50_1 = arg5[2];\n        rbx_2 = *arg5;\n        var_58_2 = arg5[1];\n    }\n    else\n    {\n        int64_t var_78;\n        int64_t var_70;\n        int64_t var_68;\n        int64_t var_68_2;\n        int64_t var_60;\n        int64_t var_58;\n        int64_t var_58_1;\n        int64_t var_50;\n        int64_t var_48;\n        char* rax_5;\n        char* rax_23;\n        int64_t rcx_11;\n        int64_t rbx_1;\n        int64_t rbx_7;\n        int64_t r8_10;\n        int64_t r9_1;\n        int64_t r9_9;\n        switch (arg6)\n        {\n            case 0:\n            {\n                abort();\n                /* no return */\n            }\n            case 1:\n            {\n                /* tailcall */\n                return fprintf(arg1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n                break;\n            }\n            case 2:\n            {\n                /* tailcall */\n                return fprintf(arg1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n                break;\n            }\n            case 3:\n            {\n                /* tailcall */\n                return fprintf(arg1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n                break;\n            }\n            case 4:\n            {\n                /* tailcall */\n                return fprintf(arg1, dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5), *arg5, arg5[1], arg5[2], arg5[3]);\n                break;\n            }\n            case 5:\n            {\n                int64_t r15_2 = arg5[4];\n                int64_t r14_3 = arg5[3];\n                int64_t r13_4 = arg5[2];\n                int64_t r12_6 = arg5[1];\n                rbx_7 = *arg5;\n                rax_23 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n                r9_9 = r14_3;\n                r8_10 = r13_4;\n                var_68_2 = r15_2;\n                rcx_11 = r12_6;\n                break;\n            }\n            case 6:\n            {\n                int64_t r12_7 = arg5[5];\n                int64_t r15_3 = arg5[4];\n                int64_t r14_4 = arg5[3];\n                int64_t r13_5 = arg5[2];\n                rbx_7 = *arg5;\n                var_58 = arg5[1];\n                rax_23 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n                var_60 = r12_7;\n                r9_9 = r14_4;\n                var_68_2 = r15_3;\n                r8_10 = r13_5;\n                rcx_11 = var_58;\n                break;\n            }\n            case 7:\n            {\n                int64_t r13_6 = arg5[6];\n                int64_t r12_8 = arg5[5];\n                int64_t r15_4 = arg5[4];\n                int64_t r14_5 = arg5[3];\n                var_50 = arg5[2];\n                var_58_1 = arg5[1];\n                rbx_1 = *arg5;\n                rax_5 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n                r9_1 = r14_5;\n                var_68 = r13_6;\n                var_70 = r12_8;\n                var_78 = r15_4;\n                break;\n            }\n            case 8:\n            {\n                int64_t r14 = arg5[7];\n                int64_t r13 = arg5[6];\n                int64_t r12_1 = arg5[5];\n                int64_t r15 = arg5[4];\n                var_48 = arg5[3];\n                rbx_1 = *arg5;\n                var_50 = arg5[2];\n                var_58_1 = arg5[1];\n                rax_5 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n                var_60 = r14;\n                var_68 = r13;\n                var_70 = r12_1;\n                var_78 = r15;\n                r9_1 = var_48;\n                break;\n            }\n            case 9:\n            {\n                rsi_2 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n                r14_1 = arg5[7];\n                r13_1 = arg5[6];\n                var_40 = arg5[8];\n                r12_2 = arg5[5];\n                r15_1 = arg5[4];\n                var_48_1 = arg5[3];\n                var_50_1 = arg5[2];\n                rbx_2 = *arg5;\n                var_58_2 = arg5[1];\n                break;\n            }\n        }\n        if ((arg6 == 5 || arg6 == 6))\n        {\n            fprintf(arg1, rax_23, rbx_7, rcx_11, r8_10, r9_9, var_68_2, var_60, var_58);\n            return var_68_2;\n        }\n        else if ((arg6 == 7 || arg6 == 8))\n        {\n            return fprintf(arg1, rax_5, rbx_1, var_58_1, var_50, r9_1, var_78, var_70, var_68, var_60, var_58_1, var_50, var_48);\n        }\n    }\n    return fprintf(arg1, dcgettext(nullptr, rsi_2, 5), rbx_2, var_58_2, var_50_1, var_48_1, r15_1, r12_2, r13_1, r14_1, var_40);\n}\n\n"
        },
        {
            "funcName": "sub_4094d0",
            "funcStartAddr": "0x4094d0",
            "funcEndAddr": "0x4094f0",
            "decompiledFuncCode": "int64_t sub_4094d0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_4090e0(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_4094f0",
            "funcStartAddr": "0x4094f0",
            "funcEndAddr": "0x409550",
            "decompiledFuncCode": "int64_t sub_4094f0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_4090e0(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_409550",
            "funcStartAddr": "0x409550",
            "funcEndAddr": "0x40960c",
            "decompiledFuncCode": "int64_t sub_409550(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_4090e0(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_409610",
            "funcStartAddr": "0x409610",
            "funcEndAddr": "0x40967a",
            "decompiledFuncCode": "int64_t sub_409610()\n{\n    printf(dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-findutils@gnu.org\");\n    printf(dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU findutils\", \"http://www.gnu.org/software/find\u2026\");\n    /* tailcall */\n    return fputs(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_409680",
            "funcStartAddr": "0x409680",
            "funcEndAddr": "0x40969a",
            "decompiledFuncCode": "int64_t sub_409680(size_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_4098a0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4096d0",
            "funcStartAddr": "0x4096d0",
            "funcEndAddr": "0x409706",
            "decompiledFuncCode": "int64_t sub_4096d0(int64_t arg1, size_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_4098a0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_409800",
            "funcStartAddr": "0x409800",
            "funcEndAddr": "0x409817",
            "decompiledFuncCode": "int64_t sub_409800(size_t arg1)\n{\n    /* tailcall */\n    return memset(sub_409680(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_409820",
            "funcStartAddr": "0x409820",
            "funcEndAddr": "0x409838",
            "decompiledFuncCode": "int64_t sub_409820(size_t arg1, size_t arg2)\n{\n    int64_t rax = calloc(arg1, arg2);\n    if (rax == 0)\n    {\n        sub_4098a0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_409840",
            "funcStartAddr": "0x409840",
            "funcEndAddr": "0x409868",
            "decompiledFuncCode": "int64_t sub_409840(int64_t arg1, size_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_409680(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_409870",
            "funcStartAddr": "0x409870",
            "funcEndAddr": "0x40989e",
            "decompiledFuncCode": "int64_t sub_409870(char* arg1)\n{\n    size_t rbx = (strlen(arg1) + 1);\n    /* tailcall */\n    return memcpy(sub_409680(rbx), arg1, rbx);\n}\n\n"
        },
        {
            "funcName": "sub_4098a0",
            "funcStartAddr": "0x4098a0",
            "funcEndAddr": "0x4098d1",
            "decompiledFuncCode": "int64_t sub_4098a0() __noreturn\n{\n    error(data_6122c0, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4098e0",
            "funcStartAddr": "0x4098e0",
            "funcEndAddr": "0x409d3d",
            "decompiledFuncCode": "uint64_t sub_4098e0(char* arg1, int64_t* arg2, int32_t arg3, uint64_t* arg4, \n    char* arg5)\n{\n    if (arg3 > 0x24)\n    {\n        __assert_fail(\"0 <= strtol_base && strtol_base \u2026\", \"xstrtol.c\", 0x60, \"xstrtoul\");\n        /* no return */\n    }\n    int64_t* r15 = arg2;\n    void var_40;\n    if (arg2 == 0)\n    {\n        r15 = &var_40;\n    }\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char rbx = *arg1;\n    uint16_t* rsi = *__ctype_b_loc();\n    char* rax_2 = arg1;\n    while ((*(&rsi[rbx] + 1) & 0x20) != 0)\n    {\n        rax_2 = &rax_2[1];\n        rbx = *rax_2;\n    }\n    int32_t rax_11;\n    if (rbx == 0x2d)\n    {\n    label_4099aa:\n    }\n    else\n    {\n        char* r8 = *r15;\n        uint64_t rbx_1 = strtoul(arg1, r15, arg3);\n        int32_t var_50;\n        int64_t r8_1;\n        char r12_1;\n        if (r8 == arg1)\n        {\n            var_50 = r8;\n            if (arg5 == 0)\n            {\n                goto label_4099aa;\n            }\n            r12_1 = *arg1;\n            if (r12_1 == 0)\n            {\n                goto label_4099aa;\n            }\n            rbx_1 = 1;\n            r8_1 = var_50;\n            if (strchr(arg5, r12_1) == 0)\n            {\n                goto label_4099aa;\n            }\n        label_4099f1:\n            var_50 = r8_1;\n            char* rax_7 = strchr(arg5, 0x30);\n            void* r8_2 = var_50;\n            char rax_8;\n            int64_t rcx_1;\n            int64_t rdx_7;\n            int32_t rsi_4;\n            int64_t rsi_5;\n            char r12_2;\n            char r12_4;\n            if (rax_7 == 0)\n            {\n                rsi_4 = 1;\n                rcx_1 = 0x400;\n            label_409a60:\n                r12_4 = (r12_1 - 0x42);\n                switch (r12_4)\n                {\n                    case 0:\n                    {\n                        rsi_5 = rsi_4;\n                        break;\n                    }\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x2a:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x33:\n                    case 0x34:\n                    {\n                        goto label_409a4b;\n                    }\n                    case 0x20:\n                    {\n                        rsi_5 = rsi_4;\n                        break;\n                    }\n                    case 0x35:\n                    {\n                        rsi_5 = rsi_4;\n                        break;\n                    }\n                }\n                switch (r12_4)\n                {\n                    case 0x12:\n                    case 0x32:\n                    {\n                        rsi_5 = rsi_4;\n                    label_409b19:\n                        int32_t rdi_6 = 4;\n                        do\n                        {\n                            uint64_t rax_19;\n                            int64_t rdx_3;\n                            rdx_3 = HIGHD((rbx_1 * rcx_1));\n                            rax_19 = LOWD((rbx_1 * rcx_1));\n                            rbx_1 = rax_19;\n                            if (((rbx_1 * rcx_1) >> 0x40) != 0)\n                            {\n                                rbx_1 = -1;\n                            }\n                            rdi_6 = (rdi_6 - 1);\n                        } while (rdi_6 != 1);\n                        goto label_409aec;\n                    }\n                    case 0x17:\n                    {\n                        rsi_5 = rsi_4;\n                    label_409af4:\n                        int32_t rdi_5 = 8;\n                        do\n                        {\n                            uint64_t rax_17;\n                            int64_t rdx_2;\n                            rdx_2 = HIGHD((rbx_1 * rcx_1));\n                            rax_17 = LOWD((rbx_1 * rcx_1));\n                            rbx_1 = rax_17;\n                            if (((rbx_1 * rcx_1) >> 0x40) != 0)\n                            {\n                                rbx_1 = -1;\n                            }\n                            rdi_5 = (rdi_5 - 1);\n                        } while (rdi_5 != 1);\n                        goto label_409aec;\n                    }\n                    case 0x18:\n                    {\n                        rsi_5 = rsi_4;\n                    label_409acd:\n                        int32_t rdi_4 = 7;\n                        do\n                        {\n                            uint64_t rax_15;\n                            int64_t rdx_1;\n                            rdx_1 = HIGHD((rbx_1 * rcx_1));\n                            rax_15 = LOWD((rbx_1 * rcx_1));\n                            rbx_1 = rax_15;\n                            if (((rbx_1 * rcx_1) >> 0x40) != 0)\n                            {\n                                rbx_1 = -1;\n                            }\n                            rdi_4 = (rdi_4 - 1);\n                        } while (rdi_4 != 1);\n                    label_409aec:\n                        goto label_409a98;\n                    }\n                    case 0x21:\n                    {\n                        rsi_5 = rsi_4;\n                    label_409a98:\n                        void* r8_3 = (r8_2 + rsi_5);\n                        rax_11 = (rax_11 | 2);\n                        *r15 = r8_3;\n                        if (*r8_3 != 0)\n                        {\n                            /* nop */\n                        }\n                        goto label_409988;\n                    }\n                }\n                switch (r12_4)\n                {\n                    case 5:\n                    case 0x25:\n                    {\n                        rsi_5 = rsi_4;\n                    label_409bae:\n                        int64_t rax_28;\n                        int64_t rdx_9;\n                        rdx_9 = HIGHD((rbx_1 * rcx_1));\n                        rax_28 = LOWD((rbx_1 * rcx_1));\n                        int64_t rax_29;\n                        if (((rbx_1 * rcx_1) >> 0x40) == 0)\n                        {\n                            int64_t rdx_10;\n                            rdx_10 = HIGHD((rax_28 * rcx_1));\n                            rax_29 = LOWD((rax_28 * rcx_1));\n                            if (((rax_28 * rcx_1) >> 0x40) == 0)\n                            {\n                                uint64_t rax_30;\n                                int64_t rdx_11;\n                                rdx_11 = HIGHD((rax_29 * rcx_1));\n                                rax_30 = LOWD((rax_29 * rcx_1));\n                                if (((rax_29 * rcx_1) >> 0x40) == 0)\n                                {\n                                    rbx_1 = rax_30;\n                                }\n                            }\n                        }\n                        if (((((rbx_1 * rcx_1) >> 0x40) != 0 || (((rbx_1 * rcx_1) >> 0x40) == 0 && ((rax_28 * rcx_1) >> 0x40) != 0)) || ((((rbx_1 * rcx_1) >> 0x40) == 0 && ((rax_28 * rcx_1) >> 0x40) == 0) && ((rax_29 * rcx_1) >> 0x40) != 0)))\n                        {\n                            rbx_1 = -1;\n                        }\n                        goto label_409a98;\n                    }\n                    case 9:\n                    case 0x29:\n                    {\n                        rdx_7 = rcx_1;\n                        rsi_5 = rsi_4;\n                    label_409b87:\n                        uint64_t rax_26;\n                        int64_t rdx_8;\n                        rdx_8 = HIGHD((rbx_1 * rdx_7));\n                        rax_26 = LOWD((rbx_1 * rdx_7));\n                        rbx_1 = rax_26;\n                        if (((rbx_1 * rdx_7) >> 0x40) == 0)\n                        {\n                            goto label_409a98;\n                        }\n                        goto label_409b93;\n                    }\n                    case 0xb:\n                    case 0x2b:\n                    {\n                        rsi_5 = rsi_4;\n                    label_409b6c:\n                        int64_t rax_23;\n                        int64_t rdx_5;\n                        rdx_5 = HIGHD((rbx_1 * rcx_1));\n                        rax_23 = LOWD((rbx_1 * rcx_1));\n                        if (((rbx_1 * rcx_1) >> 0x40) != 0)\n                        {\n                            goto label_409b93;\n                        }\n                        uint64_t rax_24;\n                        int64_t rdx_6;\n                        rdx_6 = HIGHD((rax_23 * rcx_1));\n                        rax_24 = LOWD((rax_23 * rcx_1));\n                        if (((rax_23 * rcx_1) >> 0x40) != 0)\n                        {\n                            goto label_409b93;\n                        }\n                        rbx_1 = rax_24;\n                        goto label_409a98;\n                    }\n                    case 0xe:\n                    {\n                        rsi_5 = rsi_4;\n                    label_409b41:\n                        int32_t rdi_7 = 5;\n                        do\n                        {\n                            uint64_t rax_21;\n                            int64_t rdx_4;\n                            rdx_4 = HIGHD((rbx_1 * rcx_1));\n                            rax_21 = LOWD((rbx_1 * rcx_1));\n                            rbx_1 = rax_21;\n                            if (((rbx_1 * rcx_1) >> 0x40) != 0)\n                            {\n                                rbx_1 = -1;\n                            }\n                            rdi_7 = (rdi_7 - 1);\n                        } while (rdi_7 != 1);\n                        goto label_409aec;\n                    }\n                }\n                if (r12_4 == 3)\n                {\n                    rsi_5 = rsi_4;\n                label_409bd8:\n                    int32_t rdi_8 = 6;\n                    do\n                    {\n                        uint64_t rax_32;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rbx_1 * rcx_1));\n                        rax_32 = LOWD((rbx_1 * rcx_1));\n                        rbx_1 = rax_32;\n                        if (((rbx_1 * rcx_1) >> 0x40) != 0)\n                        {\n                            rbx_1 = -1;\n                        }\n                        rdi_8 = (rdi_8 - 1);\n                    } while (rdi_8 != 1);\n                    goto label_409aec;\n                }\n                if (r12_4 > 0x35)\n                {\n                    goto label_409a4b;\n                }\n            }\n            else\n            {\n                rax_8 = *(r8_2 + 1);\n                if (((rax_8 != 0x44 && rax_8 != 0x69) && rax_8 != 0x42))\n                {\n                    r12_2 = (r12_1 - 0x42);\n                    if (r12_2 == 0x35)\n                    {\n                        rsi_5 = 1;\n                    }\n                }\n            }\n            if (((rax_7 == 0 && r12_4 == 0x35) || ((((rax_7 != 0 && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && r12_2 == 0x35)))\n            {\n                if (rbx_1 >= 0)\n                {\n                    rbx_1 = (rbx_1 + rbx_1);\n                    goto label_409a98;\n                }\n            label_409b93:\n                rbx_1 = -1;\n                goto label_409a98;\n            }\n            if (((((rax_7 != 0 && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && r12_2 == 0x20))\n            {\n                rsi_5 = 1;\n            }\n            if (((rax_7 == 0 && r12_4 == 0x20) || ((((rax_7 != 0 && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && r12_2 == 0x20)))\n            {\n                if ((rbx_1 >> 0x37) != 0)\n                {\n                    goto label_409b93;\n                }\n                rbx_1 = (rbx_1 << 9);\n                goto label_409a98;\n            }\n            if (((((rax_7 != 0 && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && r12_2 == 0))\n            {\n                rsi_5 = 1;\n            }\n            if (((rax_7 == 0 && r12_4 == 0) || ((((rax_7 != 0 && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && r12_2 == 0)))\n            {\n                if ((rbx_1 >> 0x36) != 0)\n                {\n                    goto label_409b93;\n                }\n                rbx_1 = (rbx_1 << 0xa);\n                goto label_409a98;\n            }\n            if (rax_7 != 0)\n            {\n                if (((rax_8 != 0x44 && rax_8 != 0x69) && rax_8 != 0x42))\n                {\n                    switch (r12_2)\n                    {\n                        case 1:\n                        case 2:\n                        case 4:\n                        case 6:\n                        case 7:\n                        case 8:\n                        case 0xa:\n                        case 0xc:\n                        case 0xd:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x22:\n                        case 0x23:\n                        case 0x24:\n                        case 0x26:\n                        case 0x27:\n                        case 0x28:\n                        case 0x2a:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x33:\n                        case 0x34:\n                        {\n                            goto label_409a4b;\n                        }\n                        case 0x17:\n                        {\n                            rsi_5 = 1;\n                            rcx_1 = 0x400;\n                            goto label_409af4;\n                        }\n                        case 0x18:\n                        {\n                            rsi_5 = 1;\n                            rcx_1 = 0x400;\n                            goto label_409acd;\n                        }\n                        case 0x21:\n                        {\n                            rsi_5 = 1;\n                            goto label_409a98;\n                        }\n                    }\n                    switch (r12_2)\n                    {\n                        case 9:\n                        case 0x29:\n                        {\n                            rsi_5 = 1;\n                            rdx_7 = 0x400;\n                            goto label_409b87;\n                        }\n                        case 0xb:\n                        case 0x2b:\n                        {\n                            rsi_5 = 1;\n                            rcx_1 = 0x400;\n                            goto label_409b6c;\n                        }\n                        case 0xe:\n                        {\n                            rsi_5 = 1;\n                            rcx_1 = 0x400;\n                            goto label_409b41;\n                        }\n                        case 0x12:\n                        case 0x32:\n                        {\n                            rsi_5 = 1;\n                            rcx_1 = 0x400;\n                            goto label_409b19;\n                        }\n                    }\n                    if ((r12_2 == 5 || r12_2 == 0x25))\n                    {\n                        rsi_5 = 1;\n                        rcx_1 = 0x400;\n                        goto label_409bae;\n                    }\n                    if (r12_2 == 3)\n                    {\n                        rsi_5 = 1;\n                        rcx_1 = 0x400;\n                        goto label_409bd8;\n                    }\n                    if (r12_2 > 0x35)\n                    {\n                        goto label_409a4b;\n                    }\n                }\n                if (rax_8 == 0x42)\n                {\n                    goto label_409a76;\n                }\n                if (rax_8 == 0x69)\n                {\n                    rcx_1 = 0x400;\n                    int32_t rsi_6;\n                    rsi_6 = *(r8_2 + 2) == 0x42;\n                    rsi_4 = ((rsi_6 + rsi_6) + 1);\n                    goto label_409a60;\n                }\n                if (rax_8 == 0x44)\n                {\n                label_409a76:\n                    rsi_4 = 2;\n                    rcx_1 = 0x3e8;\n                    goto label_409a60;\n                }\n            }\n        }\n        else\n        {\n            int32_t rax_4 = *rax;\n            if (rax_4 == 0)\n            {\n                /* nop */\n            }\n            else if (rax_4 != 0x22)\n            {\n                goto label_4099aa;\n            }\n            if (arg5 == 0)\n            {\n            label_409988:\n                *arg4 = rbx_1;\n            }\n            else\n            {\n                r12_1 = *r8;\n                if (r12_1 == 0)\n                {\n                    goto label_409988;\n                }\n                var_50 = r8;\n                r8_1 = var_50;\n                if (strchr(arg5, r12_1) != 0)\n                {\n                    goto label_4099f1;\n                }\n            label_409a4b:\n                *arg4 = rbx_1;\n            }\n        }\n    }\n    return rax_11;\n}\n\n"
        },
        {
            "funcName": "sub_409d40",
            "funcStartAddr": "0x409d40",
            "funcEndAddr": "0x409e75",
            "decompiledFuncCode": "uint64_t sub_409d40(int32_t arg1, int32_t arg2, int32_t arg3)\n{\n    void* var_58 = &arg_8;\n    int64_t rcx;\n    int64_t var_30 = rcx;\n    int32_t var_60 = 0x10;\n    void var_48;\n    void* var_50 = &var_48;\n    if (arg2 != 0x406)\n    {\n        return fcntl();\n    }\n    int32_t var_60_1 = 0x18;\n    int32_t rax_2;\n    int32_t rax_5;\n    int32_t* rax_15;\n    int32_t rax_17;\n    int32_t rbx;\n    if (data_612678 < 0)\n    {\n        rax_5 = sub_409d40();\n        rbx = rax_5;\n    }\n    else\n    {\n        rax_2 = fcntl();\n        rbx = rax_2;\n        if (rax_2 < 0)\n        {\n            rax_15 = __errno_location();\n            if (*rax_15 == 0x16)\n            {\n                rax_17 = sub_409d40(arg1, 0, arg3);\n                rbx = rax_17;\n                if (rax_17 >= 0)\n                {\n                    data_612678 = 0xffffffff;\n                }\n            }\n        }\n    }\n    if (((((data_612678 >= 0 && rax_2 < 0) && *rax_15 == 0x16) && rax_17 >= 0) || (rax_5 >= 0 && data_612678 == 0xffffffff)))\n    {\n        int32_t rax_7 = fcntl(rbx, 1);\n        int32_t rax_10;\n        if (rax_7 >= 0)\n        {\n            rax_10 = fcntl(rbx, 2, (rax_7 | 1));\n        }\n        if ((rax_7 < 0 || (rax_7 >= 0 && rax_10 == 0xffffffff)))\n        {\n            int32_t* rax_11 = __errno_location();\n            int32_t rdi_2 = rbx;\n            rbx = -1;\n            int32_t r12_1 = *rax_11;\n            close(rdi_2);\n            *rax_11 = r12_1;\n        }\n    }\n    if ((data_612678 >= 0 && (rax_2 >= 0 || (rax_2 < 0 && *rax_15 != 0x16))))\n    {\n        data_612678 = 1;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_409e80",
            "funcStartAddr": "0x409e80",
            "funcEndAddr": "0x409ec0",
            "decompiledFuncCode": "int64_t sub_409e80(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_409ef0(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_409ec0",
            "funcStartAddr": "0x409ec0",
            "funcEndAddr": "0x409ee8",
            "decompiledFuncCode": "int64_t sub_409ec0(int32_t* arg1)\n{\n    int64_t rax_1 = 0;\n    if (*(arg1 + 0x28) <= *(arg1 + 0x20))\n    {\n        rax_1 = (*(arg1 + 0x10) - *(arg1 + 8));\n        if ((*arg1 & 0x100) != 0)\n        {\n            rax_1 = (rax_1 + (*(arg1 + 0x58) - *(arg1 + 0x48)));\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_409ef0",
            "funcStartAddr": "0x409ef0",
            "funcEndAddr": "0x409f47",
            "decompiledFuncCode": "off64_t sub_409ef0(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_409f50",
            "funcStartAddr": "0x409f50",
            "funcEndAddr": "0x40a02f",
            "decompiledFuncCode": "uint64_t sub_409f50(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xc];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xd];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xd] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xc] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_40a030",
            "funcStartAddr": "0x40a030",
            "funcEndAddr": "0x40b063",
            "decompiledFuncCode": "uint64_t sub_40a030(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    char* var_98 = arg3;\n    int32_t rax = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_40a37a;\n    }\n    *(arg7 + 0x10) = 0;\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_5;\n    char* r8;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xd] = rax_1;\n        arg7[0xc] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char* rax_17;\n        char rax_19;\n        if (arg8 == 0)\n        {\n            rax_17 = getenv(\"POSIXLY_CORRECT\");\n            if (rax_17 == 0)\n            {\n                arg7[0xb] = 0;\n                rax_19 = *var_98;\n                if (rax_19 == 0x2b)\n                {\n                    r8 = *(arg7 + 0x20);\n                }\n                if ((rax_19 != 0x2d && rax_19 != 0x2b))\n                {\n                    arg7[0xa] = 1;\n                    r8 = *(arg7 + 0x20);\n                label_40a0e3:\n                    arg7[6] = 1;\n                    rax_5 = *var_98;\n                }\n                if (rax_19 == 0x2d)\n                {\n                    r8 = *(arg7 + 0x20);\n                label_40a350:\n                    arg7[0xa] = 2;\n                    var_98 = &var_98[1];\n                    goto label_40a0e3;\n                }\n            }\n            else\n            {\n                r8 = *(arg7 + 0x20);\n                arg7[0xb] = 1;\n                char rax_24 = *var_98;\n                if (rax_24 == 0x2d)\n                {\n                    goto label_40a350;\n                }\n                if (rax_24 != 0x2b)\n                {\n                    goto label_40a0da;\n                }\n            }\n        }\n        else\n        {\n            arg7[0xb] = 1;\n            r8 = nullptr;\n            char rax_3 = *var_98;\n            if (rax_3 == 0x2d)\n            {\n                goto label_40a350;\n            }\n            if (rax_3 != 0x2b)\n            {\n            label_40a0da:\n                arg7[0xa] = 0;\n                goto label_40a0e3;\n            }\n        }\n        if (((((arg8 == 0 && rax_17 == 0) && rax_19 == 0x2b) || (arg8 == 0 && rax_17 != 0)) || arg8 != 0))\n        {\n            arg7[0xa] = 0;\n            var_98 = &var_98[1];\n            goto label_40a0e3;\n        }\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        r8 = *(arg7 + 0x20);\n        rax_5 = *var_98;\n        if (((rax_5 - 0x2b) & 0xfd) == 0)\n        {\n            rax_5 = var_98[1];\n            var_98 = &var_98[1];\n        }\n    }\n    int32_t rax_6 = 0;\n    if (rax_5 != 0x3a)\n    {\n        rax_6 = rax;\n    }\n    int32_t r13_1;\n    if ((r8 == 0 || (r8 != 0 && *r8 == 0)))\n    {\n        int32_t rax_13 = *arg7;\n        if (arg7[0xd] > rax_13)\n        {\n            arg7[0xd] = rax_13;\n        }\n        if (rax_13 < arg7[0xc])\n        {\n            arg7[0xc] = rax_13;\n        }\n        if (arg7[0xa] == 1)\n        {\n            int32_t rdx_8 = arg7[0xd];\n            if (arg7[0xc] == rdx_8)\n            {\n                if (rax_13 != rdx_8)\n                {\n                    arg7[0xc] = rax_13;\n                    rdx_8 = rax_13;\n                }\n            }\n            else if (rax_13 != rdx_8)\n            {\n                sub_409f50(arg2, arg7);\n                rdx_8 = *arg7;\n            }\n            char* rcx_2;\n            if (rbp_1 > rdx_8)\n            {\n                int64_t rax_20 = rdx_8;\n                do\n                {\n                    rcx_2 = arg2[rax_20];\n                    int32_t rsi_5 = rax_20;\n                    rdx_8 = rax_20;\n                    if ((*rcx_2 == 0x2d && rcx_2[1] != 0))\n                    {\n                        break;\n                    }\n                    rdx_8 = (rsi_5 + 1);\n                    rax_20 = (rax_20 + 1);\n                    *arg7 = rdx_8;\n                } while (rbp_1 > rax_20);\n                if ((*rcx_2 == 0x2d && rcx_2[1] != 0))\n                {\n                    rax_13 = *arg7;\n                }\n            }\n            if ((rbp_1 <= rdx_8 || (rbp_1 > rdx_8 && (!(*rcx_2 == 0x2d && rcx_2[1] != 0)))))\n            {\n                rax_13 = rdx_8;\n            }\n            arg7[0xd] = rdx_8;\n        }\n        bool c_1 = rbp_1 < rax_13;\n        bool z_1 = rbp_1 == rax_13;\n        int64_t rcx;\n        char* rdx_6;\n        int32_t rdx_7;\n        char* rsi_2;\n        if (z_1)\n        {\n            rbp_1 = arg7[0xd];\n            rdx_7 = arg7[0xc];\n        }\n        else\n        {\n            rcx = 3;\n            void* const rdi_2 = &data_40f291;\n            rdx_6 = arg2[rax_13];\n            rsi_2 = rdx_6;\n            while (rcx != 0)\n            {\n                char temp0_1 = *rsi_2;\n                char temp1_1 = *rdi_2;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx = (rcx - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rcx = ((!z_1) && (!c_1));\n            rcx = (rcx - 0);\n            if (rcx == 0)\n            {\n                rdx_7 = arg7[0xc];\n                int32_t rcx_1 = arg7[0xd];\n                int32_t rax_14 = (rax_13 + 1);\n                *arg7 = rax_14;\n                if (rdx_7 == rcx_1)\n                {\n                    arg7[0xc] = rax_14;\n                    rdx_7 = rax_14;\n                }\n                else if (rax_14 != rcx_1)\n                {\n                    sub_409f50(arg2, arg7);\n                    rdx_7 = arg7[0xc];\n                }\n                arg7[0xd] = rbp_1;\n                *arg7 = rbp_1;\n            }\n        }\n        if ((z_1 || ((!z_1) && rcx == 0)))\n        {\n            if (rdx_7 == rbp_1)\n            {\n                goto label_40a37a;\n            }\n            *arg7 = rdx_7;\n        label_40a37a:\n            r13_1 = -1;\n            goto label_40a31a;\n        }\n        if (((!z_1) && rcx != 0))\n        {\n            char rcx_3;\n            if (*rdx_6 == 0x2d)\n            {\n                rcx_3 = rdx_6[1];\n                if (rcx_3 != 0)\n                {\n                    rsi_2 = arg4 != 0;\n                    int64_t rax_21;\n                    rax_21 = rcx_3 == 0x2d;\n                    r8 = ((rdx_6 + (rax_21 & rsi_2)) + 1);\n                    *(arg7 + 0x20) = r8;\n                }\n            }\n            if ((*rdx_6 != 0x2d || (*rdx_6 == 0x2d && rcx_3 == 0)))\n            {\n                if (arg7[0xa] == 0)\n                {\n                    goto label_40a37a;\n                }\n                *(arg7 + 0x10) = rdx_6;\n                r13_1 = 1;\n                *arg7 = (rax_13 + 1);\n            label_40a31a:\n                return r13_1;\n            }\n        }\n    }\n    int32_t var_60;\n    int32_t var_50;\n    int32_t* rax_45;\n    if (arg4 != 0)\n    {\n        int64_t rax_7 = *arg7;\n        int64_t rdx = rax_7;\n        void* rax_8 = arg2[rax_7];\n        int32_t rsi = *(rax_8 + 1);\n        if (rsi != 0x2d)\n        {\n            if (arg6 == 0)\n            {\n                goto label_40a178;\n            }\n            if (*(rax_8 + 2) != 0)\n            {\n                goto label_40a5c0;\n            }\n            rdx = rdx;\n            if (strchr(var_98, rsi) != 0)\n            {\n                goto label_40a178;\n            }\n            goto label_40a5c0;\n        }\n    label_40a5c0:\n        char rax_32 = *r8;\n        char* r13_4 = r8;\n        int32_t var_6c_3;\n        int32_t rax_35;\n        if ((rax_32 == 0 || rax_32 == 0x3d))\n        {\n            var_6c_3 = 0;\n            rax_35 = 0;\n        }\n        if ((rax_32 != 0 && rax_32 != 0x3d))\n        {\n            while (true)\n            {\n                r13_4 = &r13_4[1];\n                char rax_33 = *r13_4;\n                if (rax_33 == 0)\n                {\n                    break;\n                }\n                if (rax_33 == 0x3d)\n                {\n                    break;\n                }\n                if ((!(rax_33 != 0 && rax_33 != 0x3d)))\n                {\n                    /* nop */\n                }\n            }\n            rax_35 = (r13_4 - r8);\n            var_6c_3 = rax_35;\n        }\n        int64_t* rbx_7 = arg4;\n        char* r15_3 = *rbx_7;\n        int64_t* var_80_4;\n        int32_t rax_38;\n        int32_t rax_39;\n        char rax_41;\n        int32_t rsi_10;\n        if (r15_3 != 0)\n        {\n            uint64_t rax_36 = rax_35;\n            int64_t** r14_5 = nullptr;\n            char* rsi_8 = r8;\n            int32_t rbp_3 = 0;\n            var_60 = 0xffffffff;\n            var_50 = 0;\n            var_80_4 = nullptr;\n            while (true)\n            {\n                rax_38 = strncmp(r15_3, rsi_8, rax_36);\n                if (rax_38 == 0)\n                {\n                    rax_39 = strlen(r15_3);\n                    if (var_6c_3 == rax_39)\n                    {\n                        break;\n                    }\n                    if (var_80_4 == 0)\n                    {\n                        var_80_4 = rbx_7;\n                        rbx_7 = &rbx_7[4];\n                        r15_3 = *rbx_7;\n                        var_60 = rbp_3;\n                        rbp_3 = (rbp_3 + 1);\n                        if (r15_3 == 0)\n                        {\n                            break;\n                        }\n                    }\n                    else if (var_50 == 0)\n                    {\n                        if (arg6 != 0)\n                        {\n                        label_40a661:\n                            int64_t** rax_37;\n                            rax_37 = malloc(0x10);\n                            if (rax_37 != 0)\n                            {\n                                *rax_37 = rbx_7;\n                                rax_37[1] = r14_5;\n                                r14_5 = rax_37;\n                            }\n                            else\n                            {\n                                if (r14_5 != 0)\n                                {\n                                    int64_t** rdi_17 = r14_5;\n                                    do\n                                    {\n                                        r14_5 = r14_5[1];\n                                        free(rdi_17);\n                                        rdi_17 = r14_5;\n                                    } while (r14_5 != 0);\n                                }\n                                var_50 = 1;\n                            }\n                        }\n                        else\n                        {\n                            if (var_80_4[1] != rbx_7[1])\n                            {\n                                goto label_40a661;\n                            }\n                            if (var_80_4[2] != rbx_7[2])\n                            {\n                                goto label_40a661;\n                            }\n                            if (var_80_4[3] != rbx_7[3])\n                            {\n                                goto label_40a661;\n                            }\n                            var_50 = arg6;\n                        }\n                    }\n                }\n                if ((rax_38 != 0 || ((rax_38 == 0 && var_6c_3 != rax_39) && var_80_4 != 0)))\n                {\n                    rbx_7 = &rbx_7[4];\n                    r15_3 = *rbx_7;\n                    rbp_3 = (rbp_3 + 1);\n                    if (r15_3 == 0)\n                    {\n                        break;\n                    }\n                }\n                rsi_8 = *(arg7 + 0x20);\n            }\n            char* r13_6;\n            if ((!(rax_38 == 0 && var_6c_3 == rax_39)))\n            {\n                rax_41 = var_50;\n                r13_6 = r13_4;\n                rsi_10 = r14_5 != 0;\n                rdx = *arg7;\n                if (((rax_41 == 0 && rsi_10 == 0) && var_80_4 != 0))\n                {\n                label_40a716:\n                    int32_t rax_42 = (rdx + 1);\n                    *arg7 = rax_42;\n                    int32_t rcx_6 = var_80_4[1];\n                    if (*r13_6 == 0)\n                    {\n                        if (rcx_6 != 1)\n                        {\n                            goto label_40a741;\n                        }\n                        if (rax_42 < rbp_1)\n                        {\n                            *arg7 = (rdx + 2);\n                            *(arg7 + 0x10) = arg2[rax_42];\n                            goto label_40a741;\n                        }\n                        if (rax_6 != 0)\n                        {\n                            int64_t rbx_35 = *arg2;\n                            fprintf(stderr, dcgettext(nullptr, \"%s: option '--%s' requires an ar\u2026\", 5), rbx_35, *var_80_4);\n                        }\n                        char* rbx_30 = *(arg7 + 0x20);\n                        *(arg7 + 0x20) = &rbx_30[strlen(rbx_30)];\n                        arg7[2] = var_80_4[3];\n                        if (*var_98 != 0x3a)\n                        {\n                            goto label_40ab46;\n                        }\n                    label_40adc8:\n                        r13_1 = 0x3a;\n                    }\n                    else if (rcx_6 == 0)\n                    {\n                        if (rax_6 != 0)\n                        {\n                            char* rax_55 = arg2[(rax_42 - 1)];\n                            int64_t rbp_6 = *var_80_4;\n                            int64_t rbx_14 = *arg2;\n                            if (rax_55[1] == 0x2d)\n                            {\n                                fprintf(stderr, dcgettext(nullptr, \"%s: option '--%s' doesn't allow \u2026\", 5), rbx_14, rbp_6);\n                            }\n                            else\n                            {\n                                fprintf(stderr, dcgettext(nullptr, \"%s: option '%c%s' doesn't allow \u2026\", 5), rbx_14, *rax_55, rbp_6);\n                            }\n                        }\n                        char* rbx_15 = *(arg7 + 0x20);\n                        r13_1 = 0x3f;\n                        *(arg7 + 0x20) = &rbx_15[strlen(rbx_15)];\n                        arg7[2] = var_80_4[3];\n                    }\n                    else\n                    {\n                        *(arg7 + 0x10) = &r13_6[1];\n                    label_40a741:\n                        char* rbx_9 = *(arg7 + 0x20);\n                        *(arg7 + 0x20) = &rbx_9[strlen(rbx_9)];\n                        if (arg5 != 0)\n                        {\n                            *arg5 = var_60;\n                        }\n                        rax_45 = var_80_4[2];\n                        r13_1 = var_80_4[3];\n                        if (rax_45 != 0)\n                        {\n                        label_40a77c:\n                            *rax_45 = r13_1;\n                            r13_1 = 0;\n                        }\n                    }\n                }\n                if ((rax_41 != 0 || (rax_41 == 0 && rsi_10 != 0)))\n                {\n                    if (rax_6 == 0)\n                    {\n                    label_40ab51:\n                        char* rbx_22 = *(arg7 + 0x20);\n                        var_98 = rdx;\n                        uint64_t rax_71 = strlen(rbx_22);\n                        arg7[2] = 0;\n                        *(arg7 + 0x20) = &rbx_22[rax_71];\n                        *arg7 = (var_98 + 1);\n                        if (r14_5 != 0)\n                        {\n                            int64_t** rdi_23 = r14_5;\n                            int64_t** rbx_24;\n                            do\n                            {\n                                rbx_24 = rdi_23[1];\n                                free(rdi_23);\n                                rdi_23 = rbx_24;\n                            } while (rbx_24 != 0);\n                        }\n                        goto label_40ab46;\n                    }\n                    if (rsi_10 != 0)\n                    {\n                        int64_t** var_40_1 = r14_5;\n                        int64_t rbp_7 = arg2[rdx];\n                        int64_t rbx_18 = *arg2;\n                        fprintf(stderr, dcgettext(nullptr, \"%s: option '%s' is ambiguous; po\u2026\", 5), rbx_18, rbp_7);\n                        void var_48;\n                        int64_t** rbx_19 = &var_48;\n                        int64_t* rax_68 = var_80_4;\n                        while (true)\n                        {\n                            fprintf(stderr, \" '--%s'\", *rax_68);\n                            rbx_19 = rbx_19[1];\n                            if (rbx_19 == 0)\n                            {\n                                break;\n                            }\n                            rax_68 = *rbx_19;\n                        }\n                        fputc(0xa, stderr);\n                        goto label_40ab23;\n                    }\n                    if (rax_41 == 0)\n                    {\n                        goto label_40ab51;\n                    }\n                    int64_t rbp_10 = arg2[rdx];\n                    int64_t rbx_29 = *arg2;\n                    fprintf(stderr, dcgettext(nullptr, \"%s: option '%s' is ambiguous\\n\", 5), rbx_29, rbp_10);\n                label_40ab23:\n                    char* rbx_20 = *(arg7 + 0x20);\n                    uint64_t rax_70 = strlen(rbx_20);\n                    *arg7 = (*arg7 + 1);\n                    arg7[2] = 0;\n                    *(arg7 + 0x20) = &rbx_20[rax_70];\n                label_40ab46:\n                    r13_1 = 0x3f;\n                }\n            }\n            if ((rax_38 == 0 && var_6c_3 == rax_39))\n            {\n                r13_6 = r13_4;\n                if ((var_50 != 0 || (var_50 == 0 && r14_5 != 0)))\n                {\n                    int64_t** rdi_12 = r14_5;\n                    if (r14_5 != 0)\n                    {\n                        int64_t** r14_6;\n                        do\n                        {\n                            r14_6 = rdi_12[1];\n                            free(rdi_12);\n                            rdi_12 = r14_6;\n                        } while (r14_6 != 0);\n                    }\n                }\n                rdx = *arg7;\n                var_60 = rbp_3;\n                var_80_4 = rbx_7;\n                goto label_40a716;\n            }\n        }\n        if ((r15_3 == 0 || ((((r15_3 != 0 && (!(rax_38 == 0 && var_6c_3 == rax_39))) && rax_41 == 0) && rsi_10 == 0) && var_80_4 == 0)))\n        {\n            char* rbx_12;\n            char* rbp_9;\n            if (arg6 != 0)\n            {\n                rbx_12 = arg2[rdx];\n                if (rbx_12[1] != 0x2d)\n                {\n                    char* r8_2 = *(arg7 + 0x20);\n                    r8 = r8_2;\n                    rdx = rdx;\n                    if (strchr(var_98, *r8_2) != 0)\n                    {\n                        goto label_40a178;\n                    }\n                    if (rax_6 == 0)\n                    {\n                        goto label_40a932;\n                    }\n                    goto label_40a8f6;\n                }\n                if (rax_6 == 0)\n                {\n                    goto label_40a932;\n                }\n                rbp_9 = *(arg7 + 0x20);\n            label_40acb9:\n                int64_t rbx_28 = *arg2;\n                fprintf(stderr, dcgettext(nullptr, \"%s: unrecognized option '--%s'\\n\", 5), rbx_28, rbp_9);\n                rdx = *arg7;\n                goto label_40a932;\n            }\n            if (rax_6 == 0)\n            {\n                goto label_40a932;\n            }\n            rbp_9 = *(arg7 + 0x20);\n            rbx_12 = arg2[rdx];\n            r8 = rbp_9;\n            if (rbx_12[1] == 0x2d)\n            {\n                goto label_40acb9;\n            }\n        label_40a8f6:\n            int32_t rbp_5 = *rbx_12;\n            int64_t rbx_13 = *arg2;\n            fprintf(stderr, dcgettext(nullptr, \"%s: unrecognized option '%c%s'\\n\", 5), rbx_13, rbp_5, r8);\n            rdx = *arg7;\n        label_40a932:\n            r13_1 = 0x3f;\n            *(arg7 + 0x20) = 0x40f2d5;\n            *arg7 = (rdx + 1);\n            arg7[2] = 0;\n        }\n        goto label_40a31a;\n    }\nlabel_40a178:\n    void* rbx_6 = &r8[1];\n    *(arg7 + 0x20) = rbx_6;\n    r13_1 = *r8;\n    char r14_1 = r13_1;\n    char* rax_10 = strchr(var_98, r13_1);\n    if (r8[1] == 0)\n    {\n        *arg7 = (*arg7 + 1);\n    }\n    if (((r14_1 - 0x3a) > 1 && rax_10 != 0))\n    {\n        char rdx_1 = rax_10[1];\n        if ((*rax_10 == 0x57 && rdx_1 == 0x3b))\n        {\n            if (arg4 == 0)\n            {\n            label_40ae17:\n                *(arg7 + 0x20) = 0;\n                r13_1 = 0x57;\n            }\n            else\n            {\n                int64_t rax_25 = *arg7;\n                if (r8[1] != 0)\n                {\n                    *(arg7 + 0x10) = rbx_6;\n                    *arg7 = (rax_25 + 1);\n                label_40a4c8:\n                    *(arg7 + 0x20) = rbx_6;\n                    char r13_2 = *rbx_6;\n                    void* r14_3 = rbx_6;\n                    if (r13_2 != 0)\n                    {\n                        while (r13_2 != 0x3d)\n                        {\n                            r14_3 = (r14_3 + 1);\n                            r13_2 = *r14_3;\n                            if (r13_2 == 0)\n                            {\n                                break;\n                            }\n                        }\n                    }\n                    char* r15_1 = *arg4;\n                    if (r15_1 == 0)\n                    {\n                        goto label_40ae17;\n                    }\n                    var_50 = r13_2;\n                    uint64_t rax_28 = (r14_3 - rbx_6);\n                    var_60 = r14_3;\n                    int32_t r13_3 = 0;\n                    uint64_t rsi_6 = rax_28;\n                    char* var_58;\n                    var_58 = rbp_1;\n                    int64_t* rbp_2 = arg4;\n                    char* r12_1 = r15_1;\n                    int64_t* r15_2 = nullptr;\n                    int32_t var_6c_2 = 0;\n                    int64_t* var_78;\n                    var_78 = 0;\n                    int32_t rax_30;\n                    uint64_t rax_31;\n                    do\n                    {\n                        rax_30 = strncmp(r12_1, rbx_6, rax_28);\n                        if (rax_30 == 0)\n                        {\n                            rax_31 = strlen(r12_1);\n                            if (rsi_6 == rax_31)\n                            {\n                                break;\n                            }\n                            if (r15_2 == 0)\n                            {\n                                var_6c_2 = r13_3;\n                                r15_2 = rbp_2;\n                            }\n                            else\n                            {\n                                if (((arg6 != 0 || (arg6 == 0 && r15_2[1] != rbp_2[1])) || ((arg6 == 0 && r15_2[1] == rbp_2[1]) && r15_2[2] != rbp_2[2])))\n                                {\n                                    var_78 = 1;\n                                }\n                                if (((arg6 == 0 && r15_2[1] == rbp_2[1]) && r15_2[2] == rbp_2[2]))\n                                {\n                                    int32_t rax_74 = 1;\n                                    if (r15_2[3] == rbp_2[3])\n                                    {\n                                        rax_74 = var_78;\n                                    }\n                                    var_78 = rax_74;\n                                }\n                            }\n                        }\n                        rbp_2 = &rbp_2[4];\n                        r12_1 = *rbp_2;\n                        r13_3 = (r13_3 + 1);\n                    } while (r12_1 != 0);\n                    int32_t rbp_8;\n                    char r13_9;\n                    int64_t r14_8;\n                    if ((rax_30 == 0 && rsi_6 == rax_31))\n                    {\n                        r14_8 = var_60;\n                        r13_9 = var_50;\n                        rbp_8 = var_58;\n                        var_6c_2 = r13_3;\n                        r15_2 = rbp_2;\n                    label_40abfb:\n                        int32_t rax_75 = r15_2[1];\n                        if (r13_9 == 0)\n                        {\n                            if (rax_75 == 1)\n                            {\n                                int64_t rax_97 = *arg7;\n                                if (rax_97 < rbp_8)\n                                {\n                                    *arg7 = (rax_97 + 1);\n                                    *(arg7 + 0x10) = arg2[rax_97];\n                                    goto label_40ac29;\n                                }\n                                if (rax_6 != 0)\n                                {\n                                    int64_t rbx_39 = *arg2;\n                                    fprintf(stderr, dcgettext(nullptr, \"%s: option '-W %s' requires an a\u2026\", 5), rbx_39, *r15_2);\n                                }\n                                int64_t rdx_30 = *(arg7 + 0x20);\n                                int64_t rcx_21 = -1;\n                                int64_t rdi_35 = rdx_30;\n                                while (rcx_21 != 0)\n                                {\n                                    bool cond:9_1 = 0 != *rdi_35;\n                                    rdi_35 = (rdi_35 + 1);\n                                    rcx_21 = (rcx_21 - 1);\n                                    if ((!cond:9_1))\n                                    {\n                                        break;\n                                    }\n                                }\n                                *(arg7 + 0x20) = ((rdx_30 + (!rcx_21)) - 1);\n                                if (*var_98 != 0x3a)\n                                {\n                                    goto label_40ab46;\n                                }\n                                goto label_40adc8;\n                            }\n                            *(arg7 + 0x10) = 0;\n                        label_40ac29:\n                            *(arg7 + 0x20) = (rbx_6 + strlen(rbx_6));\n                            if (arg5 != 0)\n                            {\n                                *arg5 = var_6c_2;\n                            }\n                            rax_45 = r15_2[2];\n                            r13_1 = r15_2[3];\n                            if (rax_45 != 0)\n                            {\n                                goto label_40a77c;\n                            }\n                        }\n                        else\n                        {\n                            if (rax_75 != 0)\n                            {\n                                *(arg7 + 0x10) = (r14_8 + 1);\n                                goto label_40ac29;\n                            }\n                            if (rax_6 != 0)\n                            {\n                                int64_t rbx_38 = *arg2;\n                                fprintf(stderr, dcgettext(nullptr, \"%s: option '-W %s' doesn't allow\u2026\", 5), rbx_38, *r15_2);\n                                rbx_6 = *(arg7 + 0x20);\n                            }\n                            r13_1 = 0x3f;\n                            *(arg7 + 0x20) = (rbx_6 + strlen(rbx_6));\n                        }\n                    }\n                    else\n                    {\n                        r13_9 = var_50;\n                        r14_8 = var_60;\n                        rbp_8 = var_58;\n                        if (var_78 == 0)\n                        {\n                            if (r15_2 == 0)\n                            {\n                                goto label_40ae17;\n                            }\n                            goto label_40abfb;\n                        }\n                        if (rax_6 != 0)\n                        {\n                            int64_t rbp_12 = *arg2;\n                            fprintf(stderr, dcgettext(nullptr, \"%s: option '-W %s' is ambiguous\\n\", 5), rbp_12, rbx_6);\n                            rbx_6 = *(arg7 + 0x20);\n                        }\n                        r13_1 = 0x3f;\n                        uint64_t rax_92 = strlen(rbx_6);\n                        *arg7 = (*arg7 + 1);\n                        *(arg7 + 0x20) = (rbx_6 + rax_92);\n                    }\n                }\n                else\n                {\n                    if (rbp_1 != rax_25)\n                    {\n                        *arg7 = (rax_25 + 1);\n                        rbx_6 = arg2[rax_25];\n                        *(arg7 + 0x10) = rbx_6;\n                        goto label_40a4c8;\n                    }\n                    if (rax_6 != 0)\n                    {\n                        int64_t rbx_37 = *arg2;\n                        fprintf(stderr, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbx_37, r13_1);\n                    }\n                    arg7[2] = r13_1;\n                    int64_t r13_12;\n                    r13_12 = *var_98 != 0x3a;\n                    r13_1 = ((r13_12 * 5) + 0x3a);\n                }\n            }\n        }\n        if (((*rax_10 != 0x57 || (*rax_10 == 0x57 && rdx_1 != 0x3b)) && rdx_1 == 0x3a))\n        {\n            char rdx_2 = r8[1];\n            if (rax_10[2] != 0x3a)\n            {\n                int64_t rax_11 = *arg7;\n                if (rdx_2 != 0)\n                {\n                    *(arg7 + 0x10) = rbx_6;\n                    *arg7 = (rax_11 + 1);\n                }\n                else if (rbp_1 != rax_11)\n                {\n                    *arg7 = (rax_11 + 1);\n                    *(arg7 + 0x10) = arg2[rax_11];\n                }\n                else\n                {\n                    if (rax_6 != 0)\n                    {\n                        int64_t rbx_33 = *arg2;\n                        fprintf(stderr, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbx_33, r13_1);\n                    }\n                    arg7[2] = r13_1;\n                    int64_t r13_11;\n                    r13_11 = *var_98 != 0x3a;\n                    r13_1 = ((r13_11 * 5) + 0x3a);\n                }\n            }\n            else if (rdx_2 == 0)\n            {\n                *(arg7 + 0x10) = 0;\n            }\n            else\n            {\n                *(arg7 + 0x10) = rbx_6;\n                *arg7 = (*arg7 + 1);\n            }\n            *(arg7 + 0x20) = 0;\n        }\n    }\n    if (((r14_1 - 0x3a) <= 1 || ((r14_1 - 0x3a) > 1 && rax_10 == 0)))\n    {\n        if (rax_6 == 0)\n        {\n            goto label_40a7ac;\n        }\n        int64_t rbx_17 = *arg2;\n        fprintf(stderr, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbx_17, r13_1);\n    label_40a7ac:\n        arg7[2] = r13_1;\n        r13_1 = 0x3f;\n    }\n    goto label_40a31a;\n}\n\n"
        },
        {
            "funcName": "sub_40b0d0",
            "funcStartAddr": "0x40b0d0",
            "funcEndAddr": "0x40b0e8",
            "decompiledFuncCode": "uint64_t sub_40b0d0(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_40b170",
            "funcStartAddr": "0x40b170",
            "funcEndAddr": "0x40b199",
            "decompiledFuncCode": "int64_t sub_40b170(wchar_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        arg2 = &data_40f2ba[0x1b];\n        arg1 = nullptr;\n    }\n    else if (arg3 == 0)\n    {\n        return -2;\n    }\n    /* tailcall */\n    return mbrtowc(arg1, arg2, arg3, arg4);\n}\n\n"
        },
        {
            "funcName": "sub_40b1a0",
            "funcStartAddr": "0x40b1a0",
            "funcEndAddr": "0x40b2a4",
            "decompiledFuncCode": "char* sub_40b1a0(char* arg1, int32_t arg2, int64_t arg3)\n{\n    char r8 = arg2;\n    if (arg3 != 0)\n    {\n        if ((arg1 & 7) != 0)\n        {\n            if (arg2 == *arg1)\n            {\n            label_40b2a0:\n                return arg1;\n            }\n            do\n            {\n                arg1 = &arg1[1];\n                int64_t temp0_1 = arg3;\n                arg3 = (arg3 - 1);\n                if (temp0_1 == 1)\n                {\n                    return 0;\n                }\n                if ((arg1 & 7) == 0)\n                {\n                    break;\n                }\n            } while (*arg1 != r8);\n            if ((arg1 & 7) != 0)\n            {\n                goto label_40b2a0;\n            }\n        }\n        int64_t r9_5 = ((arg2 << 8) | arg2);\n        int64_t r9_6 = (r9_5 | (r9_5 << 0x10));\n        int64_t r9_7 = (r9_6 | (r9_6 << 0x20));\n        int64_t rax_8;\n        if (arg3 > 7)\n        {\n            rax_8 = (*arg1 ^ r9_7);\n            if ((((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0)\n            {\n                int64_t rax_12;\n                do\n                {\n                    arg3 = (arg3 - 8);\n                    arg1 = &arg1[8];\n                    if (arg3 <= 7)\n                    {\n                        break;\n                    }\n                    rax_12 = (*arg1 ^ r9_7);\n                } while ((((!rax_12) & (rax_12 - 0x101010101010101)) & 0x8080808080808080) == 0);\n            }\n        }\n        if ((((arg3 <= 7 || (arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) != 0)) || (((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 <= 7) && arg3 != 0)) || ((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 > 7)))\n        {\n            if (arg2 == *arg1)\n            {\n                goto label_40b2a0;\n            }\n            char* rcx_3 = &arg1[1];\n            void* rdi = &arg1[arg3];\n            while (true)\n            {\n                char* rax_15 = rcx_3;\n                if (rcx_3 == rdi)\n                {\n                    return 0;\n                }\n                rcx_3 = &rcx_3[1];\n                if (rcx_3[-1] == r8)\n                {\n                    return rax_15;\n                }\n            }\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40b2b0",
            "funcStartAddr": "0x40b2b0",
            "funcEndAddr": "0x40b315",
            "decompiledFuncCode": "uint64_t sub_40b2b0(FILE* arg1)\n{\n    uint64_t rax = __fpending(arg1);\n    int32_t rax_1 = ferror(arg1);\n    uint64_t rax_2 = fclose(arg1);\n    if ((rax_1 != 0 && rax_2 == 0))\n    {\n        *__errno_location() = 0;\n        rax_2 = 0xffffffff;\n    }\n    if (((rax_1 != 0 && rax_2 != 0) || ((rax_1 == 0 && rax_2 != 0) && rax != 0)))\n    {\n        rax_2 = 0xffffffff;\n    }\n    if (((rax_1 == 0 && rax_2 != 0) && rax == 0))\n    {\n        int32_t* rax_3;\n        rax_3 = *__errno_location() != 9;\n        rax_2 = (-rax_3);\n    }\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_40b320",
            "funcStartAddr": "0x40b320",
            "funcEndAddr": "0x40b882",
            "decompiledFuncCode": "char* sub_40b320()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_6126b8;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_40f2ba[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        size_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x74;\n            r12_1 = 0x66;\n            r14_1 = 0x65;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            size_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_40b41c;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_40b466;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_40b41c:\n            r15 = &data_40f2ba[0x1b];\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_40b466:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, &data_40d331);\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_40b51c:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_40b6ab;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_40b558:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_40b558;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_40b592:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_40b592;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_40f2ba[0x1b];\n                                    free(rdi_26);\n                                    fclose(rax_12);\n                                    goto label_40b4a7;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_40b76b:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_40b76b;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_40b7b9:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_40b7b9;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_40b51c;\n                        }\n                        break;\n                    }\n                label_40b6ab:\n                    fclose(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_40f2ba[0x1b];\n            }\n        label_40b4a7:\n            free(rbp_3);\n        }\n        data_6126b8 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40b890",
            "funcStartAddr": "0x40b890",
            "funcEndAddr": "0x40b8fc",
            "decompiledFuncCode": "void* sub_40b890(int64_t arg1)\n{\n    size_t rdi = (arg1 + 0x10);\n    if (arg1 >= -0x10)\n    {\n        return 0;\n    }\n    int64_t* rax = malloc(rdi);\n    void* rcx = nullptr;\n    if (rax != 0)\n    {\n        rcx = &rax[2];\n        *(rax + 0xc) = 0x1415fb4a;\n        int64_t rax_2;\n        int64_t rdx_1;\n        rdx_1 = HIGHD((rcx * -0xff00ff00ff00ff));\n        rax_2 = LOWD((rcx * -0xff00ff00ff00ff));\n        void* rax_6 = (rcx - ((rdx_1 >> 8) * 0x101));\n        int64_t rax_7 = *((rax_6 << 3) + 0x6126c0);\n        *((rax_6 << 3) + 0x6126c0) = rcx;\n        *rax = rax_7;\n    }\n    return rcx;\n}\n\n"
        },
        {
            "funcName": "sub_40b900",
            "funcStartAddr": "0x40b900",
            "funcEndAddr": "0x40b986",
            "decompiledFuncCode": "void sub_40b900(void* arg1)\n{\n    if ((arg1 != 0 && *(arg1 - 4) == 0x1415fb4a))\n    {\n        int64_t rax_2;\n        int64_t rdx_1;\n        rdx_1 = HIGHD((arg1 * -0xff00ff00ff00ff));\n        rax_2 = LOWD((arg1 * -0xff00ff00ff00ff));\n        void* rax = (arg1 - ((rdx_1 >> 8) * 0x101));\n        void* rcx_1 = *((rax << 3) + 0x6126c0);\n        if (rcx_1 != 0)\n        {\n            void* rcx_2;\n            if (rcx_1 == arg1)\n            {\n                rcx_2 = ((rax << 3) + 0x6126c0);\n            }\n            else\n            {\n                while (true)\n                {\n                    rax = *(rcx_1 - 0x10);\n                    if (rax == 0)\n                    {\n                        return;\n                    }\n                    if (arg1 == rax)\n                    {\n                        break;\n                    }\n                    rcx_1 = rax;\n                }\n                rcx_2 = (rcx_1 - 0x10);\n            }\n            *rcx_2 = *(arg1 - 0x10);\n            /* tailcall */\n            return free((arg1 - 0x10));\n        }\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40b990",
            "funcStartAddr": "0x40b990",
            "funcEndAddr": "0x40b9b1",
            "decompiledFuncCode": "uint64_t sub_40b990(wchar_t arg1)\n{\n    int64_t rax = wcwidth(arg1);\n    if (rax < 0)\n    {\n        int32_t rax_1;\n        rax_1 = iswcntrl(arg1) == 0;\n        return rax_1;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40b9c0",
            "funcStartAddr": "0x40b9c0",
            "funcEndAddr": "0x40ba16",
            "decompiledFuncCode": "uint64_t sub_40b9c0(int64_t* arg1, int64_t* arg2)\n{\n    int64_t rsi = *arg2;\n    uint64_t rdx = arg2[1];\n    if (rsi == &arg2[3])\n    {\n        rdx = arg2[1];\n        *arg1 = memcpy(&arg1[3], rsi, rdx);\n    }\n    else\n    {\n        *arg1 = rsi;\n    }\n    uint64_t rax_1 = arg2[2];\n    arg1[1] = rdx;\n    arg1[2] = rax_1;\n    if (rax_1 != 0)\n    {\n        rax_1 = *(arg2 + 0x14);\n        *(arg1 + 0x14) = rax_1;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40ba20",
            "funcStartAddr": "0x40ba20",
            "funcEndAddr": "0x40ba37",
            "decompiledFuncCode": "uint64_t sub_40ba20(int32_t arg1)\n{\n    int32_t rax;\n    rax = (arg1 >> 5);\n    return ((*(((rax & 7) << 2) + 0x40f520) >> arg1) & 1);\n}\n\n"
        },
        {
            "funcName": "sub_40ba40",
            "funcStartAddr": "0x40ba40",
            "funcEndAddr": "0x40bc0c",
            "decompiledFuncCode": "uint64_t sub_40ba40(char* arg1)\n{\n    uint64_t rbx_1;\n    if (__ctype_get_mb_cur_max() <= 1)\n    {\n        rbx_1 = strlen(arg1);\n    }\n    else\n    {\n        char* var_48_1 = arg1;\n        rbx_1 = 0;\n        char var_58_1 = 0;\n        mbstate_t var_54;\n        var_54.__count = 0;\n        var_54.__value = 0;\n        char var_4c_1 = 0;\n        while (true)\n        {\n            uint64_t var_40_1;\n            wchar_t var_34;\n            uint32_t rax_3;\n            uint32_t rcx_1;\n            if (var_58_1 == 0)\n            {\n                char* rdx_1 = var_48_1;\n                rcx_1 = *rdx_1;\n                rax_3 = (rcx_1 >> 5);\n                if (((*(((rax_3 & 7) << 2) + 0x40f520) >> rcx_1) & 1) != 0)\n                {\n                    var_40_1 = 1;\n                    char var_38_1 = 1;\n                    var_34 = *rdx_1;\n                }\n                else\n                {\n                    if (mbsinit(&var_54) == 0)\n                    {\n                        __assert_fail(\"mbsinit (&iter->state)\", \"mbuiter.h\", 0x96, \"mbuiter_multi_next\");\n                        /* no return */\n                    }\n                    var_58_1 = 1;\n                }\n            }\n            uint64_t rax_12;\n            if ((var_58_1 != 0 || (var_58_1 == 0 && ((*(((rax_3 & 7) << 2) + 0x40f520) >> rcx_1) & 1) == 0)))\n            {\n                char* rbp_1 = var_48_1;\n                rax_12 = sub_40b170(&var_34, rbp_1, sub_409040(rbp_1, __ctype_get_mb_cur_max()), &var_54);\n                var_40_1 = rax_12;\n                if (rax_12 == -1)\n                {\n                    var_40_1 = 1;\n                    char var_38_3 = 0;\n                }\n                if (rax_12 == -2)\n                {\n                    char var_38_4 = 0;\n                    var_40_1 = strlen(var_48_1);\n                }\n                if ((rax_12 != -1 && rax_12 != -2))\n                {\n                    if (rax_12 == 0)\n                    {\n                        var_40_1 = 1;\n                        if (*var_48_1 != 0)\n                        {\n                            __assert_fail(\"*iter->cur.ptr == '\\0'\", \"mbuiter.h\", 0xb2, \"mbuiter_multi_next\");\n                            /* no return */\n                        }\n                        if (var_34 != 0)\n                        {\n                            __assert_fail(\"iter->cur.wc == 0\", \"mbuiter.h\", 0xb3, \"mbuiter_multi_next\");\n                            /* no return */\n                        }\n                    }\n                    char var_38_2 = 1;\n                    if (mbsinit(&var_54) != 0)\n                    {\n                        var_58_1 = 0;\n                    }\n                }\n            }\n            if ((((var_58_1 == 0 && ((*(((rax_3 & 7) << 2) + 0x40f520) >> rcx_1) & 1) != 0) || (((var_58_1 != 0 || (var_58_1 == 0 && ((*(((rax_3 & 7) << 2) + 0x40f520) >> rcx_1) & 1) == 0)) && rax_12 != -1) && rax_12 != -2)) && var_34 == 0))\n            {\n                break;\n            }\n            var_48_1 = &var_48_1[var_40_1];\n            rbx_1 = (rbx_1 + 1);\n            char var_4c_2 = 0;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x40bc10",
            "funcEndAddr": "0x40bc6d",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x40bc70",
            "funcEndAddr": "0x40bc71",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_40bc80",
            "funcStartAddr": "0x40bc80",
            "funcEndAddr": "0x40bc98",
            "decompiledFuncCode": "int64_t sub_40bc80(void (* arg1)(void*))\n{\n    int64_t rdx = data_6122a8;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_40bc98",
            "funcStartAddr": "0x40bc98",
            "funcEndAddr": "0x40bcb8",
            "decompiledFuncCode": "int64_t sub_40bc98(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_611e30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}