{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_sum.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 128,
    "funcInfo": [
        {
            "funcName": "sub_4015a0",
            "funcStartAddr": "0x4015a0",
            "funcEndAddr": "0x4015ac",
            "decompiledFuncCode": "int64_t sub_4015a0()\n{\n    int64_t var_8 = data_60b008;\n    /* jump -> data_60b010 */\n}\n\n"
        },
        {
            "funcName": "sub_4015b6",
            "funcStartAddr": "0x4015b6",
            "funcEndAddr": "0x4015c0",
            "decompiledFuncCode": "int64_t sub_4015b6()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_4015c6",
            "funcStartAddr": "0x4015c6",
            "funcEndAddr": "0x4015d0",
            "decompiledFuncCode": "int64_t sub_4015c6()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_4015d6",
            "funcStartAddr": "0x4015d6",
            "funcEndAddr": "0x4015e0",
            "decompiledFuncCode": "int64_t sub_4015d6()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_4015e6",
            "funcStartAddr": "0x4015e6",
            "funcEndAddr": "0x4015f0",
            "decompiledFuncCode": "int64_t sub_4015e6()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_4015f6",
            "funcStartAddr": "0x4015f6",
            "funcEndAddr": "0x401600",
            "decompiledFuncCode": "int64_t sub_4015f6()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_401606",
            "funcStartAddr": "0x401606",
            "funcEndAddr": "0x401610",
            "decompiledFuncCode": "int64_t sub_401606()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_401616",
            "funcStartAddr": "0x401616",
            "funcEndAddr": "0x401620",
            "decompiledFuncCode": "int64_t sub_401616()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_401626",
            "funcStartAddr": "0x401626",
            "funcEndAddr": "0x401630",
            "decompiledFuncCode": "int64_t sub_401626()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_401636",
            "funcStartAddr": "0x401636",
            "funcEndAddr": "0x401640",
            "decompiledFuncCode": "int64_t sub_401636()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_401646",
            "funcStartAddr": "0x401646",
            "funcEndAddr": "0x401650",
            "decompiledFuncCode": "int64_t sub_401646()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_401656",
            "funcStartAddr": "0x401656",
            "funcEndAddr": "0x401660",
            "decompiledFuncCode": "int64_t sub_401656()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_401666",
            "funcStartAddr": "0x401666",
            "funcEndAddr": "0x401670",
            "decompiledFuncCode": "int64_t sub_401666()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_401676",
            "funcStartAddr": "0x401676",
            "funcEndAddr": "0x401680",
            "decompiledFuncCode": "int64_t sub_401676()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_401686",
            "funcStartAddr": "0x401686",
            "funcEndAddr": "0x401690",
            "decompiledFuncCode": "int64_t sub_401686()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_401696",
            "funcStartAddr": "0x401696",
            "funcEndAddr": "0x4016a0",
            "decompiledFuncCode": "int64_t sub_401696()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_4016a6",
            "funcStartAddr": "0x4016a6",
            "funcEndAddr": "0x4016b0",
            "decompiledFuncCode": "int64_t sub_4016a6()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_4016b6",
            "funcStartAddr": "0x4016b6",
            "funcEndAddr": "0x4016c0",
            "decompiledFuncCode": "int64_t sub_4016b6()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_4016c6",
            "funcStartAddr": "0x4016c6",
            "funcEndAddr": "0x4016d0",
            "decompiledFuncCode": "int64_t sub_4016c6()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_4016d6",
            "funcStartAddr": "0x4016d6",
            "funcEndAddr": "0x4016e0",
            "decompiledFuncCode": "int64_t sub_4016d6()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_4016e6",
            "funcStartAddr": "0x4016e6",
            "funcEndAddr": "0x4016f0",
            "decompiledFuncCode": "int64_t sub_4016e6()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_4016f6",
            "funcStartAddr": "0x4016f6",
            "funcEndAddr": "0x401700",
            "decompiledFuncCode": "int64_t sub_4016f6()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_401706",
            "funcStartAddr": "0x401706",
            "funcEndAddr": "0x401710",
            "decompiledFuncCode": "int64_t sub_401706()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_401716",
            "funcStartAddr": "0x401716",
            "funcEndAddr": "0x401720",
            "decompiledFuncCode": "int64_t sub_401716()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_401726",
            "funcStartAddr": "0x401726",
            "funcEndAddr": "0x401730",
            "decompiledFuncCode": "int64_t sub_401726()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_401736",
            "funcStartAddr": "0x401736",
            "funcEndAddr": "0x401740",
            "decompiledFuncCode": "int64_t sub_401736()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_401746",
            "funcStartAddr": "0x401746",
            "funcEndAddr": "0x401750",
            "decompiledFuncCode": "int64_t sub_401746()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_401756",
            "funcStartAddr": "0x401756",
            "funcEndAddr": "0x401760",
            "decompiledFuncCode": "int64_t sub_401756()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_401766",
            "funcStartAddr": "0x401766",
            "funcEndAddr": "0x401770",
            "decompiledFuncCode": "int64_t sub_401766()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_401776",
            "funcStartAddr": "0x401776",
            "funcEndAddr": "0x401780",
            "decompiledFuncCode": "int64_t sub_401776()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_401786",
            "funcStartAddr": "0x401786",
            "funcEndAddr": "0x401790",
            "decompiledFuncCode": "int64_t sub_401786()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_401796",
            "funcStartAddr": "0x401796",
            "funcEndAddr": "0x4017a0",
            "decompiledFuncCode": "int64_t sub_401796()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_4017a6",
            "funcStartAddr": "0x4017a6",
            "funcEndAddr": "0x4017b0",
            "decompiledFuncCode": "int64_t sub_4017a6()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_4017b6",
            "funcStartAddr": "0x4017b6",
            "funcEndAddr": "0x4017c0",
            "decompiledFuncCode": "int64_t sub_4017b6()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_4017c6",
            "funcStartAddr": "0x4017c6",
            "funcEndAddr": "0x4017d0",
            "decompiledFuncCode": "int64_t sub_4017c6()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_4017d6",
            "funcStartAddr": "0x4017d6",
            "funcEndAddr": "0x4017e0",
            "decompiledFuncCode": "int64_t sub_4017d6()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_4017e6",
            "funcStartAddr": "0x4017e6",
            "funcEndAddr": "0x4017f0",
            "decompiledFuncCode": "int64_t sub_4017e6()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_401876",
            "funcStartAddr": "0x401876",
            "funcEndAddr": "0x401880",
            "decompiledFuncCode": "int64_t sub_401876()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_401886",
            "funcStartAddr": "0x401886",
            "funcEndAddr": "0x401890",
            "decompiledFuncCode": "int64_t sub_401886()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_401896",
            "funcStartAddr": "0x401896",
            "funcEndAddr": "0x4018a0",
            "decompiledFuncCode": "int64_t sub_401896()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_4018a6",
            "funcStartAddr": "0x4018a6",
            "funcEndAddr": "0x4018b0",
            "decompiledFuncCode": "int64_t sub_4018a6()\n{\n    int64_t var_8 = 0x2f;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_4018b6",
            "funcStartAddr": "0x4018b6",
            "funcEndAddr": "0x4018c0",
            "decompiledFuncCode": "int64_t sub_4018b6()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_4018c6",
            "funcStartAddr": "0x4018c6",
            "funcEndAddr": "0x4018d0",
            "decompiledFuncCode": "int64_t sub_4018c6()\n{\n    int64_t var_8 = 0x31;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_4018d6",
            "funcStartAddr": "0x4018d6",
            "funcEndAddr": "0x4018e0",
            "decompiledFuncCode": "int64_t sub_4018d6()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "sub_4018e6",
            "funcStartAddr": "0x4018e6",
            "funcEndAddr": "0x4018f0",
            "decompiledFuncCode": "int64_t sub_4018e6()\n{\n    int64_t var_8 = 0x33;\n    /* tailcall */\n    return sub_4015a0();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x401990",
            "funcEndAddr": "0x401b4a",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    uint64_t (* rbx_1)(char* arg1, int32_t arg2) = sub_401e10;\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_4030b0(*argv);\n    int32_t rbx;\n    int32_t rbp;\n    setlocale(6, &data_408e74[0x1b], rdx, rcx, r8, r9, rbx, rbp);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    sub_407360(sub_402380);\n    setvbuf(stdout, nullptr, 1, 0);\n    data_60b2d8 = 0;\n    while (true)\n    {\n        int32_t rax_1 = getopt_long(argc, argv, &data_40747d, &data_407780, nullptr);\n        if (rax_1 == 0xffffffff)\n        {\n            int32_t r13_2 = (argc - data_60b27c);\n            int32_t r14_1 = 1;\n            if (r13_2 <= 0)\n            {\n                r14_1 = rbx_1(&data_408e72, r13_2);\n            }\n            else\n            {\n                while (true)\n                {\n                    int64_t rax_6 = data_60b27c;\n                    if (rax_6 >= argc)\n                    {\n                        break;\n                    }\n                    int32_t rax_5 = rbx_1(argv[rax_6], r13_2);\n                    data_60b27c = (data_60b27c + 1);\n                    r14_1 = (r14_1 & rax_5);\n                }\n            }\n            int32_t rax_7;\n            if (data_60b2d8 != 0)\n            {\n                rax_7 = sub_4059c0(stdin);\n                if (rax_7 == 0xffffffff)\n                {\n                    error(1, *__errno_location(), \"%s\", sub_404b50(0, 3, &data_408e72));\n                }\n            }\n            if ((data_60b2d8 == 0 || (data_60b2d8 != 0 && rax_7 != 0xffffffff)))\n            {\n                return (r14_1 ^ 1);\n            }\n            break;\n        }\n        bool cond:0_1 = rax_1 <= 0xffffff7e;\n        if (rax_1 == 0xffffff7e)\n        {\n            sub_402020(0);\n            /* no return */\n        }\n        if (cond:0_1)\n        {\n            if (rax_1 == 0xffffff7d)\n            {\n                int64_t var_38 = 0;\n                sub_4051b0(stdout, \"sum\", \"GNU coreutils\", data_60b210);\n                exit(0);\n                /* no return */\n            }\n            break;\n        }\n        if (rax_1 == 0x72)\n        {\n            rbx_1 = sub_401e10;\n        }\n        else\n        {\n            if (rax_1 != 0x73)\n            {\n                break;\n            }\n            rbx_1 = sub_401c30;\n        }\n    }\n    sub_402020(1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x401b50",
            "funcEndAddr": "0x401b7a",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_401b7b",
            "funcStartAddr": "0x401b7b",
            "funcEndAddr": "0x401b9a",
            "decompiledFuncCode": "void sub_401b7b()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_401b9a",
            "funcStartAddr": "0x401b9a",
            "funcEndAddr": "0x401bd1",
            "decompiledFuncCode": "int64_t sub_401b9a()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_401bd1",
            "funcStartAddr": "0x401bd1",
            "funcEndAddr": "0x401c28",
            "decompiledFuncCode": "void sub_401bd1()\n{\n    if (data_60b2c8 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_60b2d0;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_60b2d0 = (rax_1 + 1);\n        *(0x60ae40 + ((rax_1 + 1) << 3))();\n    }\n    sub_401b7b();\n    data_60b2c8 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_401c28",
            "funcStartAddr": "0x401c28",
            "funcEndAddr": "0x401c2d",
            "decompiledFuncCode": "int64_t j_sub_401b9a()\n{\n    /* tailcall */\n    return sub_401b9a();\n}\n\n"
        },
        {
            "funcName": "sub_401c30",
            "funcStartAddr": "0x401c30",
            "funcEndAddr": "0x401e0e",
            "decompiledFuncCode": "uint64_t sub_401c30(uint64_t arg1, int32_t arg2)\n{\n    int64_t rcx = 2;\n    void* const rdi = &data_408e72;\n    uint64_t rsi = arg1;\n    int64_t __saved_rbx;\n    bool c = &__saved_rbx < 0x2298;\n    bool z = &__saved_rbx == 0x2298;\n    while (rcx != 0)\n    {\n        char temp1_1 = *rsi;\n        char temp2_1 = *rdi;\n        c = temp1_1 < temp2_1;\n        z = temp1_1 == temp2_1;\n        rsi = (rsi + 1);\n        rdi = (rdi + 1);\n        rcx = (rcx - 1);\n        if ((!z))\n        {\n            break;\n        }\n    }\n    int64_t r12;\n    r12 = ((!z) && (!c));\n    r12 = (r12 - 0);\n    int32_t r12_1 = r12;\n    int32_t rax_13;\n    int32_t rbx_2;\n    int32_t rbp;\n    if (r12_1 != 0)\n    {\n        int64_t rdx;\n        rax_13 = open(arg1, 0, rdx, rcx);\n        rbp = rax_13;\n        if (rax_13 == 0xffffffff)\n        {\n        label_401dba:\n            rbx_2 = 0;\n            error(0, *__errno_location(), \"%s\", sub_404b50(0, 3, arg1));\n        }\n    }\n    else\n    {\n        data_60b2d8 = 1;\n        rbp = 0;\n    }\n    if ((r12_1 == 0 || (r12_1 != 0 && rax_13 != 0xffffffff)))\n    {\n        int32_t r15_1 = 0;\n        int64_t rbx_1 = 0;\n        ssize_t rax_1;\n        while (true)\n        {\n            void var_2038;\n            rax_1 = sub_404cf0(rbp, &var_2038, 0x2000);\n            if (rax_1 == 0)\n            {\n                break;\n            }\n            if (rax_1 == -1)\n            {\n                break;\n            }\n            void* rdx_1 = &var_2038;\n            void* rsi_2 = (&var_2038 + rax_1);\n            do\n            {\n                uint32_t rcx_1 = *rdx_1;\n                rdx_1 = (rdx_1 + 1);\n                r15_1 = (r15_1 + rcx_1);\n            } while (rdx_1 != rsi_2);\n            rbx_1 = (rbx_1 + rax_1);\n        }\n        if (rax_1 != 0)\n        {\n            rbx_2 = 0;\n            error(0, *__errno_location(), \"%s\", sub_404b50(0, 3, arg1));\n            if (r12_1 != 0)\n            {\n                close(rbp);\n            }\n        }\n        else\n        {\n            if ((r12_1 != 0 && close(rbp) != 0))\n            {\n                goto label_401dba;\n            }\n            uint32_t r15_3 = ((r15_1 >> 0x10) + r15_1);\n            void var_22c8;\n            int64_t rax_5;\n            int80_t st0_1;\n            st0_1 = sub_402520(rbx_1, &var_22c8, 0, 1, 0x200);\n            __printf_chk(1, \"%d %s\", ((r15_3 >> 0x10) + r15_3), rax_5);\n            if (arg2 != 0)\n            {\n                __printf_chk(1, \" %s\", arg1);\n            }\n            uint64_t* const rdi_4 = stdout;\n            char* rax_7 = stdout[5];\n            if (rax_7 >= stdout[6])\n            {\n                rbx_2 = 1;\n                __overflow(rdi_4, 0xa);\n            }\n            else\n            {\n                rbx_2 = 1;\n                stdout[5] = &rax_7[1];\n                *rax_7 = 0xa;\n            }\n        }\n    }\n    return rbx_2;\n}\n\n"
        },
        {
            "funcName": "sub_401e10",
            "funcStartAddr": "0x401e10",
            "funcEndAddr": "0x402012",
            "decompiledFuncCode": "uint64_t sub_401e10(char* arg1, int32_t arg2)\n{\n    int64_t rcx = 2;\n    void* const rdi = &data_408e72;\n    char* rsi = arg1;\n    int64_t __saved_rbx;\n    bool c = &__saved_rbx < 0x298;\n    bool z = &__saved_rbx == 0x298;\n    while (rcx != 0)\n    {\n        char temp1_1 = *rsi;\n        char temp2_1 = *rdi;\n        c = temp1_1 < temp2_1;\n        z = temp1_1 == temp2_1;\n        rsi = &rsi[1];\n        rdi = (rdi + 1);\n        rcx = (rcx - 1);\n        if ((!z))\n        {\n            break;\n        }\n    }\n    int64_t rbp;\n    rbp = ((!z) && (!c));\n    rbp = (rbp - 0);\n    int32_t rbp_1 = rbp;\n    uint64_t* rax_9;\n    int32_t rbx_6;\n    uint64_t* const r15;\n    if (rbp_1 != 0)\n    {\n        rax_9 = fopen(arg1, \"r\");\n        r15 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_401f83:\n            rbx_6 = 0;\n            error(0, *__errno_location(), \"%s\", sub_404b50(0, 3, arg1));\n        }\n    }\n    else\n    {\n        data_60b2d8 = 1;\n        r15 = stdin;\n    }\n    if ((rbp_1 == 0 || (rbp_1 != 0 && rax_9 != 0)))\n    {\n        int64_t r14_1 = 0;\n        uint32_t rbx_1 = 0;\n        sub_402430(r15, 2);\n        int64_t rsi_1 = r15[2];\n        char* rax_1 = r15[1];\n        while (true)\n        {\n            int32_t rax_2;\n            void* rcx_1;\n            if (rsi_1 > rax_1)\n            {\n                rcx_1 = &rax_1[1];\n                r15[1] = rcx_1;\n                rax_2 = *rax_1;\n            }\n            else\n            {\n                rax_2 = __uflow(r15);\n                if (rax_2 == 0xffffffff)\n                {\n                    break;\n                }\n                rsi_1 = r15[2];\n                rcx_1 = r15[1];\n            }\n            r14_1 = (r14_1 + 1);\n            rax_1 = rcx_1;\n            rbx_1 = (((rbx_1 << 0xf) + (rbx_1 >> 1)) + rax_2);\n        }\n        if ((*r15 & 0x20) != 0)\n        {\n            rbx_6 = 0;\n            error(0, *__errno_location(), \"%s\", sub_404b50(0, 3, arg1));\n            if (rbp_1 != 0)\n            {\n                sub_4059c0(r15);\n            }\n        }\n        else\n        {\n            if ((rbp_1 != 0 && sub_4059c0(r15) != 0))\n            {\n                goto label_401f83;\n            }\n            void var_2c8;\n            int64_t rax_4;\n            int80_t st0_1;\n            st0_1 = sub_402520(r14_1, &var_2c8, 0, 1, 0x400);\n            __printf_chk(1, \"%05d %5s\", rbx_1, rax_4);\n            if (arg2 > 1)\n            {\n                __printf_chk(1, \" %s\", arg1);\n            }\n            uint64_t* const rdi_5 = stdout;\n            char* rax_6 = stdout[5];\n            if (rax_6 >= stdout[6])\n            {\n                rbx_6 = 1;\n                __overflow(rdi_5, 0xa);\n            }\n            else\n            {\n                rbx_6 = 1;\n                stdout[5] = &rax_6[1];\n                *rax_6 = 0xa;\n            }\n        }\n    }\n    return rbx_6;\n}\n\n"
        },
        {
            "funcName": "sub_402020",
            "funcStartAddr": "0x402020",
            "funcEndAddr": "0x402355",
            "decompiledFuncCode": "int64_t sub_402020(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_60b2f0;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [OPTION]... [FILE]...\\n\", 5), rbp);\n        fputs_unlocked(dcgettext(nullptr, \"Print checksum and block counts \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nWith no FILE, or when FILE is \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\n  -r              use BSD sum \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        void* const var_88 = &data_4073d3;\n        void* const* rax_9 = &var_88;\n        void* const var_78_1 = \"coreutils\";\n        void* const var_70_1 = \"Multi-call invocation\";\n        void* const var_68_1 = \"sha224sum\";\n        void* const var_60_1 = \"sha2 utilities\";\n        void* const var_58_1 = \"sha256sum\";\n        void* const var_50_1 = \"sha2 utilities\";\n        void* const var_48_1 = \"sha384sum\";\n        void* const var_40_1 = \"sha2 utilities\";\n        void* const var_38_1 = \"sha512sum\";\n        void* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_9 = &rax_9[2];\n            void* const rdi_7 = *rax_9;\n            c_1 = false;\n            z_1 = (rdi_7 & rdi_7) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_7 = \"sum\";\n            int64_t rcx_2 = 4;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_7;\n                char temp1_1 = *rdi_7;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_7 = (rsi_7 + 1);\n                rdi_7 = (rdi_7 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbp_1 = rax_9[1];\n        char* rax_20;\n        int32_t rax_21;\n        void* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_5;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_20 = setlocale(5, nullptr, rdx_5, rcx_5, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_20 != 0)\n            {\n                rax_21 = strncmp(rax_20, &data_407457, 3);\n                if (rax_21 != 0)\n                {\n                    rbp_1 = \"sum\";\n                }\n            }\n            if ((rax_20 == 0 || (rax_20 != 0 && rax_21 == 0)))\n            {\n                rbp_1 = \"sum\";\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"sum\");\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_3;\n            uint64_t r8_1;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_12 = setlocale(5, nullptr, rdx_3, rcx_3, r8_1, r9_1, var_88, \"test invocation\");\n            if (rax_12 == 0)\n            {\n                goto label_402248;\n            }\n            if (strncmp(rax_12, &data_407457, 3) == 0)\n            {\n                goto label_402248;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_20 != 0) && rax_21 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), \"sum\");\n        label_402248:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"sum\");\n            if (rbp_1 != \"sum\")\n            {\n                r12_1 = &data_408e74[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_402360",
            "funcStartAddr": "0x402360",
            "funcEndAddr": "0x402368",
            "decompiledFuncCode": "int64_t sub_402360(int64_t arg1)\n{\n    data_60b2e8 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_402370",
            "funcStartAddr": "0x402370",
            "funcEndAddr": "0x402378",
            "decompiledFuncCode": "int64_t sub_402370(char arg1)\n{\n    data_60b2e0 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_402380",
            "funcStartAddr": "0x402380",
            "funcEndAddr": "0x40241e",
            "decompiledFuncCode": "void sub_402380(void* arg1)\n{\n    int32_t rax = sub_406cc0(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_60b2e0 == 0 || (data_60b2e0 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_60b2e8;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_404b20(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_60b2e0 != 0) && *rax_1 == 0x20)) && sub_406cc0(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_60b218);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_402420",
            "funcStartAddr": "0x402420",
            "funcEndAddr": "0x402425",
            "decompiledFuncCode": "int64_t sub_402420(int32_t arg1, int64_t arg2, off64_t arg3, int32_t arg4)\n{\n    /* tailcall */\n    return posix_fadvise(arg1, arg2, arg3, arg4);\n}\n\n"
        },
        {
            "funcName": "sub_402430",
            "funcStartAddr": "0x402430",
            "funcEndAddr": "0x402451",
            "decompiledFuncCode": "void sub_402430(FILE* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        return;\n    }\n    /* tailcall */\n    return posix_fadvise(fileno(arg1), 0, 0, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_402460",
            "funcStartAddr": "0x402460",
            "funcEndAddr": "0x402517",
            "decompiledFuncCode": "long double sub_402460(int32_t arg1, uint16_t arg2 @ x87control, \n    long double arg3)\n{\n    long double x87_r7 = 9.22337204e+18f;\n    int64_t rax_1;\n    if (arg3 >= x87_r7)\n    {\n        uint16_t x87status_3;\n        int16_t temp0_2;\n        temp0_2 = __fnstcw_memmem16(arg2);\n        long double x87_r7_1 = (arg3 - x87_r7);\n        x87_r7 = arg3;\n        int16_t rax_3;\n        *rax_3[1] = (*temp0_2[1] | 0xc);\n        uint16_t x87control_2;\n        uint16_t x87status_4;\n        x87control_2 = __fldcw_memmem16(rax_3);\n        uint16_t x87control_3;\n        uint16_t x87status_5;\n        x87control_3 = __fldcw_memmem16(temp0_2);\n        rax_1 = (x87_r7_1 ^ 0x8000000000000000);\n    }\n    else\n    {\n        uint16_t x87status;\n        int16_t temp0;\n        temp0 = __fnstcw_memmem16(arg2);\n        int16_t rax;\n        *rax[1] = (*temp0[1] | 0xc);\n        uint16_t x87control;\n        uint16_t x87status_1;\n        x87control = __fldcw_memmem16(rax);\n        uint16_t x87control_1;\n        uint16_t x87status_2;\n        x87control_1 = __fldcw_memmem16(temp0);\n        rax_1 = x87_r7;\n    }\n    long double x87_r6_2 = rax_1;\n    if (rax_1 < 0)\n    {\n        x87_r6_2 = (x87_r6_2 + 1.84467441e+19f);\n    }\n    if (arg1 == 0)\n    {\n        long double x87_r6_3 = x87_r7;\n        x87_r7 = x87_r6_2;\n        (x87_r6_3 - x87_r7);\n        if (((FCMP_UO(x87_r6_3, x87_r7)) || ((!(FCMP_UO(x87_r6_3, x87_r7))) && (!x87_r6_3 == x87_r7))))\n        {\n            x87_r7 = (rax_1 + 1);\n            if ((rax_1 + 1) < 0)\n            {\n                return (x87_r7 + 1.84467441e+19f);\n            }\n        }\n    }\n    return x87_r7;\n}\n\n"
        },
        {
            "funcName": "sub_402520",
            "funcStartAddr": "0x402520",
            "funcEndAddr": "0x402eee",
            "decompiledFuncCode": "void sub_402520(int64_t arg1, char* arg2, int32_t arg3, int64_t arg4, \n    int64_t arg5)\n{\n    int32_t rax_1 = (arg3 & 0x20);\n    int32_t rcx_1 = (arg3 & 3);\n    int32_t rax_4 = (((rax_1 - rax_1) & 0xffffffe8) + 0x400);\n    struct lconv* rax_5 = localeconv();\n    char* r15 = rax_5->decimal_point;\n    uint64_t rax_6 = strlen(r15);\n    uint64_t r8 = rax_6;\n    bool cond:1 = (rax_6 - 1) >= 0x10;\n    if ((rax_6 - 1) >= 0x10)\n    {\n        r15 = &data_407818;\n    }\n    char* rax_8 = rax_5->grouping;\n    char* r12_1 = rax_5->thousands_sep;\n    if (cond:1)\n    {\n        r8 = 1;\n    }\n    uint64_t r8_1 = r8;\n    if (strlen(r12_1) >= 0x11)\n    {\n        r12_1 = &data_408e74[0x1b];\n    }\n    void* var_a8 = &arg2[0x287];\n    int32_t rcx_8;\n    int64_t rdx;\n    int32_t rbx_1;\n    uint64_t rsi_1;\n    uint32_t rdi_15;\n    uint32_t r9_1;\n    uint64_t temp0_1;\n    void* r14_3;\n    void* r15_5;\n    if (arg5 <= arg4)\n    {\n        rdx = 0;\n        temp0_1 = (COMBINE(rdx, arg4) / arg5);\n        if ((COMBINE(rdx, arg4) % arg5) != 0)\n        {\n            goto label_40260a;\n        }\n        rsi_1 = (temp0_1 * arg1);\n        if ((COMBINE(0, rsi_1) / temp0_1) != arg1)\n        {\n            goto label_40260a;\n        }\n        rdi_15 = 0;\n        r9_1 = 0;\n        rcx_8 = (arg3 & 0x10);\n        if (rcx_8 == 0)\n        {\n        label_402b7a:\n            rbx_1 = -1;\n        label_4028d6:\n            r14_3 = var_a8;\n            if (rcx_1 == 1)\n            {\n                if ((r9_1 + (rsi_1 & 1) != (-rdi_15)) > 5)\n                {\n                    r14_3 = var_a8;\n                label_4028f1:\n                    rsi_1 = (rsi_1 + 1);\n                    if (rcx_8 == 0)\n                    {\n                        goto label_40291a;\n                    }\n                    if (rax_4 != rsi_1)\n                    {\n                        goto label_40291a;\n                    }\n                    if (rbx_1 == 8)\n                    {\n                        goto label_40291a;\n                    }\n                    rbx_1 = (rbx_1 + 1);\n                    if ((arg3 & 8) == 0)\n                    {\n                        *(r14_3 - 1) = 0x30;\n                        r14_3 = (r14_3 + (!r8_1));\n                        uint64_t rax_67 = r8_1;\n                        if (r8_1 >= 8)\n                        {\n                            void* rcx_21 = ((r14_3 + 8) & 0xfffffffffffffff8);\n                            *r14_3 = *r15;\n                            uint64_t rax_69 = r8_1;\n                            *((r14_3 + rax_69) - 8) = *((r15 + rax_69) - 8);\n                            void* rax_71 = (r14_3 - rcx_21);\n                            int64_t* r15_8 = (r15 - rax_71);\n                            int32_t rax_73 = ((rax_71 + r8_1) & 0xfffffff8);\n                            if (rax_73 >= 8)\n                            {\n                                int32_t rax_74 = (rax_73 & 0xfffffff8);\n                                int32_t rdx_37 = 0;\n                                do\n                                {\n                                    uint64_t rsi_11 = rdx_37;\n                                    rdx_37 = (rdx_37 + 8);\n                                    *(rcx_21 + rsi_11) = *(r15_8 + rsi_11);\n                                } while (rdx_37 < rax_74);\n                            }\n                        }\n                        else if ((r8_1 & 4) != 0)\n                        {\n                            *r14_3 = *r15;\n                            *((r14_3 + rax_67) - 4) = *((r15 + rax_67) - 4);\n                        }\n                        else if (rax_67 != 0)\n                        {\n                            *r14_3 = *r15;\n                            if ((rax_67 & 2) != 0)\n                            {\n                                *((r14_3 + rax_67) - 2) = *((r15 + rax_67) - 2);\n                            }\n                        }\n                    }\n                    r15_5 = (r14_3 - 1);\n                    *(r14_3 - 1) = 0x31;\n                }\n                else\n                {\n                label_40291a:\n                    r15_5 = r14_3;\n                    while (true)\n                    {\n                        r15_5 = (r15_5 - 1);\n                        int64_t rax_35;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rsi_1 * -0x3333333333333333));\n                        rax_35 = LOWD((rsi_1 * -0x3333333333333333));\n                        uint64_t rdx_13 = (rdx_12 >> 3);\n                        char rax_36 = (rdx_13 + (rdx_13 << 2));\n                        *r15_5 = ((rsi_1 - (rax_36 + rax_36)) + 0x30);\n                        if (rsi_1 <= 9)\n                        {\n                            break;\n                        }\n                        rsi_1 = rdx_13;\n                    }\n                    if ((arg3 & 4) != 0)\n                    {\n                    label_402965:\n                        uint64_t rax_40 = strlen(r12_1);\n                        uint64_t rbp_4 = (r14_3 - r15_5);\n                        void var_68;\n                        __memcpy_chk(&var_68, r15_5, rbp_4, 0x29);\n                        char* r15_6 = rax_8;\n                        uint64_t rbx_4 = rbp_4;\n                        uint64_t rbp_5 = -1;\n                        while (true)\n                        {\n                            char rdx_15 = *r15_6;\n                            if (rdx_15 != 0)\n                            {\n                                uint64_t rax_41 = rdx_15;\n                                if (rdx_15 >= 0x7f)\n                                {\n                                    rax_41 = rbx_4;\n                                }\n                                r15_6 = &r15_6[1];\n                                rbp_5 = rax_41;\n                            }\n                            if (rbp_5 > rbx_4)\n                            {\n                                memcpy((r14_3 - rbx_4), &var_68, rbx_4);\n                                break;\n                            }\n                            void* r14_4 = (r14_3 - rbp_5);\n                            rbx_4 = (rbx_4 - rbp_5);\n                            memcpy(r14_4, (&var_68 + rbx_4), rbp_5);\n                            if (rbx_4 == 0)\n                            {\n                                break;\n                            }\n                            r14_3 = (r14_4 - rax_40);\n                            memcpy(r14_3, r12_1, rax_40);\n                        }\n                    }\n                }\n            }\n        }\n        else\n        {\n        label_4028be:\n            uint64_t r10_1 = rax_4;\n            rbx_1 = 0;\n            int32_t rbp_2 = r10_1;\n            if (r10_1 > rsi_1)\n            {\n                goto label_4028d6;\n            }\n            uint32_t rax_49;\n            int32_t rdx_24;\n            uint64_t temp0_8;\n            do\n            {\n                int64_t rdx_21 = 0;\n                temp0_8 = (COMBINE(rdx_21, rsi_1) / r10_1);\n                uint32_t rax_48 = (r9_1 + (((COMBINE(rdx_21, rsi_1) % r10_1) * 5) << 1));\n                rax_49 = (COMBINE(0, rax_48) / rbp_2);\n                rdx_24 = ((rdi_15 >> 1) + ((COMBINE(0, rax_48) % rbp_2) << 1));\n                r9_1 = rax_49;\n                rsi_1 = temp0_8;\n                int32_t rdi_26 = (rdi_15 + rdx_24);\n                if (rbp_2 > rdx_24)\n                {\n                    rdi_26 = rdi_26 != 0;\n                    rdi_15 = rdi_26;\n                }\n                else\n                {\n                    rdi_26 = rbp_2 < rdi_26;\n                    rdi_15 = (rdi_26 + 2);\n                }\n                rbx_1 = (rbx_1 + 1);\n                if (r10_1 > temp0_8)\n                {\n                    break;\n                }\n            } while (rbx_1 != 8);\n            if (r10_1 <= temp0_8)\n            {\n                goto label_4028d6;\n            }\n            if (temp0_8 > 9)\n            {\n                goto label_4028d6;\n            }\n            int32_t rdx_27;\n            if (rcx_1 == 1)\n            {\n                rdx_27 = ((rax_49 & 1) + rdi_15) > 2;\n            }\n            else\n            {\n                rdx_24 = rcx_1 == 0;\n                r9_1 = rdi_15 > 0;\n                rdx_27 = (rdx_24 & r9_1);\n            }\n            if (rdx_27 == 0)\n            {\n                if (rax_49 != 0)\n                {\n                    goto label_402d88;\n                }\n                goto label_402cf7;\n            }\n            rax_49 = (rax_49 + 1);\n            char rax_56;\n            if (rax_49 != 0xa)\n            {\n            label_402d88:\n                rax_56 = (rax_49 + 0x30);\n            label_402d13:\n                arg2[0x286] = rax_56;\n                uint64_t rax_57 = r8_1;\n                r14_3 = (&arg2[0x286] - r8_1);\n                if (r8_1 >= 8)\n                {\n                    void* r9_5 = ((r14_3 + 8) & 0xfffffffffffffff8);\n                    *r14_3 = *r15;\n                    uint64_t rax_59 = r8_1;\n                    *((r14_3 + rax_59) - 8) = *((r15 + rax_59) - 8);\n                    void* rax_61 = (r14_3 - r9_5);\n                    void* r10_4 = (r15 - rax_61);\n                    int32_t rax_63 = ((rax_61 + r8_1) & 0xfffffff8);\n                    if (rax_63 >= 8)\n                    {\n                        int32_t rax_64 = (rax_63 & 0xfffffff8);\n                        int32_t rdx_33 = 0;\n                        do\n                        {\n                            uint64_t rdi_33 = rdx_33;\n                            rdx_33 = (rdx_33 + 8);\n                            *(r9_5 + rdi_33) = *(r10_4 + rdi_33);\n                        } while (rdx_33 < rax_64);\n                    }\n                }\n                else if ((r8_1 & 4) != 0)\n                {\n                    *r14_3 = *r15;\n                    *((r14_3 + rax_57) - 4) = *((r15 + rax_57) - 4);\n                }\n                else if (rax_57 != 0)\n                {\n                    *r14_3 = *r15;\n                    if ((rax_57 & 2) != 0)\n                    {\n                        *((r14_3 + rax_57) - 2) = *((r15 + rax_57) - 2);\n                    }\n                }\n                goto label_402d3e;\n            }\n            rsi_1 = (temp0_8 + 1);\n            if (rsi_1 == 0xa)\n            {\n                r14_3 = var_a8;\n            label_402d3e:\n                rdi_15 = 0;\n            }\n            else\n            {\n                rdi_15 = 0;\n            label_402cf7:\n                r14_3 = var_a8;\n                if ((arg3 & 8) == 0)\n                {\n                    rax_56 = 0x30;\n                    goto label_402d13;\n                }\n            }\n            if (rcx_1 == 1)\n            {\n                goto label_40291a;\n            }\n            r9_1 = 0;\n        }\n        if (((rcx_8 == 0 && rcx_1 != 1) || rcx_8 != 0))\n        {\n            if (rcx_1 != 0)\n            {\n                goto label_40291a;\n            }\n            if ((rdi_15 + r9_1) <= 0)\n            {\n                goto label_40291a;\n            }\n            goto label_4028f1;\n        }\n    }\n    else\n    {\n        if (arg4 != 0)\n        {\n            int64_t rdx_5 = 0;\n            uint64_t temp0_5 = (COMBINE(rdx_5, arg5) / arg4);\n            if ((COMBINE(rdx_5, arg5) % arg4) != 0)\n            {\n                goto label_40260a;\n            }\n            int64_t rdx_7 = 0;\n            uint64_t rax_30 = ((COMBINE(rdx_7, arg1) % temp0_5) * 5);\n            int64_t rdx_9 = 0;\n            uint64_t rax_31 = (rax_30 + rax_30);\n            rsi_1 = (COMBINE(rdx_7, arg1) / temp0_5);\n            uint64_t temp1_5 = (COMBINE(rdx_9, rax_31) % temp0_5);\n            uint64_t rdx_11 = (temp1_5 + temp1_5);\n            r9_1 = (COMBINE(rdx_9, rax_31) / temp0_5);\n            bool c_1 = temp0_5 < rdx_11;\n            if ((temp0_5 == rdx_11 || c_1))\n            {\n                rdi_15 = (c_1 + 2);\n            }\n            else\n            {\n                rdi_15 = rdx_11 != 0;\n            }\n            rcx_8 = (arg3 & 0x10);\n            if (rcx_8 != 0)\n            {\n                goto label_4028be;\n            }\n            goto label_402b7a;\n        }\n    label_40260a:\n        long double x87_r7_1 = arg4;\n        if (arg4 < 0)\n        {\n            x87_r7_1 = (x87_r7_1 + 1.84467441e+19f);\n        }\n        long double x87_r6_1 = arg5;\n        long double x87_r6_2;\n        long double x87_r7_2;\n        if (arg5 < 0)\n        {\n            x87_r7_2 = (x87_r7_1 / (x87_r6_1 + 1.84467441e+19f));\n            x87_r6_2 = arg1;\n        }\n        else\n        {\n            x87_r7_2 = (x87_r7_1 / x87_r6_1);\n            x87_r6_2 = arg1;\n        }\n        uint64_t rax_18;\n        uint64_t r14_2;\n        uint16_t x87control;\n        long double x87_r7_3;\n        if (((arg5 < 0 && arg1 >= 0) || (arg5 >= 0 && arg1 >= 0)))\n        {\n            x87_r7_3 = (x87_r7_2 * x87_r6_2);\n            if ((arg3 & 0x10) != 0)\n            {\n            label_40264f:\n                long double x87_r6_3 = rax_4;\n                rbx_1 = 0;\n                long double x87_r5_1 = x87_r6_3;\n                while (true)\n                {\n                    rbx_1 = (rbx_1 + 1);\n                    long double x87_r7_4 = (x87_r5_1 * x87_r6_3);\n                    if (x87_r7_3 < x87_r7_4)\n                    {\n                        break;\n                    }\n                    if (rbx_1 == 8)\n                    {\n                        break;\n                    }\n                    x87_r6_3 = x87_r7_3;\n                    int64_t temp0_3 = x87_r5_1;\n                    x87_r5_1 = x87_r7_4;\n                    x87_r7_3 = temp0_3;\n                }\n                int64_t r14_1 = (r8_1 + 1);\n                long double x87_r7_7 = (x87_r6_3 / x87_r6_3);\n                int64_t rax_16;\n                rax_16 = rax_1 == 0;\n                int64_t r15_1 = ((r14_1 + rax_16) + 1);\n                int64_t var_88_3;\n                long double x87_r6_6;\n                long double x87_r7_8;\n                long double x87_r7_9;\n                if (rcx_1 == 1)\n                {\n                    long double var_b8_7 = x87_r7_7;\n                    var_88_3 = x87_r7_7;\n                    __sprintf_chk(arg2, 1, -1, \"%.1Lf\");\n                    rax_18 = strlen(arg2);\n                    x87_r7_8 = var_88_3;\n                    if (rax_18 > r15_1)\n                    {\n                        x87_r6_6 = 10f;\n                        x87_r7_9 = (x87_r7_8 * x87_r6_6);\n                    label_402747:\n                        int64_t var_b8_3 = (x87_r7_9 / x87_r6_6);\n                        __sprintf_chk(arg2, 1, -1, \"%.0Lf\");\n                        rax_18 = strlen(arg2);\n                        r14_2 = rax_18;\n                    }\n                }\n                else\n                {\n                    long double x87_r6_5;\n                    if (data_4078b0 > x87_r7_7)\n                    {\n                        var_88_3 = x87_r7_7;\n                        long double st0_3;\n                        st0_3 = sub_402460(rcx_1, x87control, x87_r7_7);\n                        x87_r7_7 = st0_3;\n                        x87_r6_5 = var_88_3;\n                    }\n                    else\n                    {\n                        x87_r6_5 = x87_r7_7;\n                    }\n                    var_88_3 = x87_r6_5;\n                    long double var_b8_1 = x87_r7_7;\n                    __sprintf_chk(arg2, 1, -1, \"%.1Lf\");\n                    rax_18 = strlen(arg2);\n                    x87_r7_8 = var_88_3;\n                    if (rax_18 > r15_1)\n                    {\n                        x87_r6_6 = 10f;\n                        x87_r7_9 = (x87_r7_8 * x87_r6_6);\n                    }\n                }\n                if (((rcx_1 == 1 && rax_18 <= r15_1) || (rcx_1 != 1 && rax_18 <= r15_1)))\n                {\n                    if (((arg3 & 8) == 0 || ((arg3 & 8) != 0 && arg2[(rax_18 - 1)] != 0x30)))\n                    {\n                        r14_2 = (rax_18 - r14_1);\n                    }\n                    if (((arg3 & 8) != 0 && arg2[(rax_18 - 1)] == 0x30))\n                    {\n                        x87_r6_6 = 10f;\n                        x87_r7_9 = (x87_r7_8 * x87_r6_6);\n                        if (rcx_1 == 1)\n                        {\n                            goto label_402747;\n                        }\n                    }\n                }\n                if (((rcx_1 != 1 && rax_18 > r15_1) || ((((rcx_1 == 1 && rax_18 <= r15_1) || (rcx_1 != 1 && rax_18 <= r15_1)) && (arg3 & 8) != 0) && arg2[(rax_18 - 1)] == 0x30)))\n                {\n                    if (data_4078b0 <= x87_r7_9)\n                    {\n                        goto label_402747;\n                    }\n                    var_88_3 = x87_r6_6;\n                    x87_r7_9 = sub_402460(rcx_1, x87control, x87_r7_9);\n                    x87_r6_6 = var_88_3;\n                    goto label_402747;\n                }\n                goto label_4027bc;\n            }\n        }\n        if (((arg5 < 0 && arg1 < 0) || (arg5 >= 0 && arg1 < 0)))\n        {\n            x87_r7_3 = (x87_r7_2 * (x87_r6_2 + 1.84467441e+19f));\n            if ((arg3 & 0x10) != 0)\n            {\n                goto label_40264f;\n            }\n        }\n        if (rcx_1 != 1)\n        {\n            if (data_4078b0 > x87_r7_3)\n            {\n                long double var_b8_5 = x87_r7_3;\n                x87_r7_3 = sub_402460(rcx_1, x87control, var_b8_5);\n                r8_1 = var_b8_5;\n            }\n            goto label_402793;\n        }\n    label_402793:\n        long double var_b8_4 = x87_r7_3;\n        __sprintf_chk(arg2, 1, -1, \"%.0Lf\", r8_1);\n        rbx_1 = -1;\n        rax_18 = strlen(arg2);\n        r14_2 = rax_18;\n    label_4027bc:\n        r15_5 = (var_a8 - rax_18);\n        r14_3 = (r14_2 + r15_5);\n        memmove(r15_5, arg2, rax_18);\n    }\n    if (((((((((arg5 <= arg4 && (COMBINE(rdx, arg4) % arg5) == 0) && (COMBINE(0, rsi_1) / temp0_1) == arg1) && rcx_8 == 0) && rcx_1 == 1) && (r9_1 + (rsi_1 & 1) != (-rdi_15)) > 5) || arg5 > arg4) && (arg3 & 4) == 0) || (((((arg5 <= arg4 && (COMBINE(rdx, arg4) % arg5) == 0) && (COMBINE(0, rsi_1) / temp0_1) == arg1) && rcx_8 == 0) && rcx_1 == 1) && (r9_1 + (rsi_1 & 1) != (-rdi_15)) <= 5)))\n    {\n        if ((arg3 & 0x80) == 0)\n        {\n        label_4027fc:\n            *var_a8 = 0;\n            return;\n        }\n        if ((rbx_1 == 0xffffffff && arg5 <= 1))\n        {\n            rbx_1 = 0;\n        }\n        int32_t rax_23;\n        void* rdx_20;\n        if (((rbx_1 == 0xffffffff && arg5 <= 1) || rbx_1 != 0xffffffff))\n        {\n            rax_23 = (arg3 & 0x100);\n            if ((rax_23 | rbx_1) != 0)\n            {\n                if ((arg3 & 0x40) != 0)\n                {\n                label_402a6d:\n                    arg2[0x287] = 0x20;\n                    var_a8 = &arg2[0x288];\n                }\n                if (rbx_1 == 0)\n                {\n                    rdx_20 = var_a8;\n                    if (rax_23 != 0)\n                    {\n                    label_402ac1:\n                        *rdx_20 = 0x42;\n                        var_a8 = (rdx_20 + 1);\n                    }\n                }\n            }\n        }\n        if ((rbx_1 == 0xffffffff && arg5 > 1))\n        {\n            uint64_t rdx_19 = rax_4;\n            rbx_1 = 1;\n            int64_t rax_42 = 1;\n            do\n            {\n                rax_42 = (rax_42 * rdx_19);\n                if (arg5 <= rax_42)\n                {\n                    break;\n                }\n                rbx_1 = (rbx_1 + 1);\n            } while (rbx_1 != 8);\n            rax_23 = (arg3 & 0x100);\n            if ((arg3 & 0x40) != 0)\n            {\n                goto label_402a6d;\n            }\n        }\n        if ((((((rbx_1 == 0xffffffff && arg5 <= 1) || rbx_1 != 0xffffffff) && (rax_23 | rbx_1) != 0) && rbx_1 != 0) || (rbx_1 == 0xffffffff && arg5 > 1)))\n        {\n            if (rax_1 == 0)\n            {\n                if (rbx_1 != 1)\n                {\n                    goto label_402a96;\n                }\n                rdx_20 = (var_a8 + 1);\n                *var_a8 = 0x6b;\n                if (rax_23 != 0)\n                {\n                    goto label_402ac1;\n                }\n                goto label_402cb3;\n            }\n        label_402a96:\n            char* rdi_25 = var_a8;\n            rdx_20 = &rdi_25[1];\n            *rdi_25 = *(rbx_1 + 0x407898);\n            if (rax_23 != 0)\n            {\n                if (rax_1 != 0)\n                {\n                    rdx_20 = &rdi_25[2];\n                    rdi_25[1] = 0x69;\n                }\n                goto label_402ac1;\n            }\n        label_402cb3:\n            var_a8 = rdx_20;\n        }\n        goto label_4027fc;\n    }\n    if ((((((((arg5 <= arg4 && (COMBINE(rdx, arg4) % arg5) == 0) && (COMBINE(0, rsi_1) / temp0_1) == arg1) && rcx_8 == 0) && rcx_1 == 1) && (r9_1 + (rsi_1 & 1) != (-rdi_15)) > 5) || arg5 > arg4) && (arg3 & 4) != 0))\n    {\n        goto label_402965;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_402ef0",
            "funcStartAddr": "0x402ef0",
            "funcEndAddr": "0x4030a7",
            "decompiledFuncCode": "uint64_t sub_402ef0(char* arg1, int32_t* arg2, int64_t* arg3)\n{\n    char* rbx = arg1;\n    uint64_t rax_3;\n    char* rax_9;\n    char* rax_10;\n    if (arg1 == 0)\n    {\n        rax_9 = getenv(\"BLOCK_SIZE\");\n        rbx = rax_9;\n        if (rax_9 == 0)\n        {\n            rax_10 = getenv(\"BLOCKSIZE\");\n            rbx = rax_10;\n            if (rax_10 == 0)\n            {\n                rax_3 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_3 == 0)\n                {\n                    *arg3 = 0x400;\n                    *arg2 = 0;\n                }\n                else\n                {\n                    *arg3 = 0x200;\n                    rax_3 = 0;\n                    *arg2 = 0;\n                }\n            }\n        }\n    }\n    if (((arg1 != 0 || (arg1 == 0 && rax_9 != 0)) || ((arg1 == 0 && rax_9 == 0) && rax_10 != 0)))\n    {\n        int32_t rbp_1 = 0;\n        if (*rbx == 0x27)\n        {\n            rbx = &rbx[1];\n            rbp_1 = 4;\n        }\n        int32_t rax_1 = sub_406940(rbx, &data_407880, 0x407870, 4);\n        if (rax_1 >= 0)\n        {\n            *arg3 = 1;\n            rax_3 = 0;\n            *arg2 = (rbp_1 | *((rax_1 << 2) + 0x407870));\n        }\n        else\n        {\n            void* var_30;\n            rax_3 = sub_405580(rbx, &var_30, 0, arg3, \"eEgGkKmMpPtTyYzZ0\");\n            int64_t rdx_2;\n            if (rax_3 != 0)\n            {\n                *arg2 = 0;\n                rdx_2 = *arg3;\n            }\n            else\n            {\n                if ((*rbx - 0x30) > 9)\n                {\n                    void* rcx_2 = var_30;\n                    if (rbx != rcx_2)\n                    {\n                        do\n                        {\n                            rbx = &rbx[1];\n                            if ((*rbx - 0x30) <= 9)\n                            {\n                                break;\n                            }\n                        } while (rbx != rcx_2);\n                    }\n                    if ((rbx == rcx_2 || (rbx != rcx_2 && (*rbx - 0x30) > 9)))\n                    {\n                        if (*(rcx_2 - 1) == 0x42)\n                        {\n                            rbp_1 = (rbp_1 | 0x180);\n                        }\n                        else\n                        {\n                            rbp_1 = (rbp_1 | 0x80);\n                        }\n                        if ((*(rcx_2 - 1) != 0x42 || (*(rcx_2 - 1) == 0x42 && *(rcx_2 - 2) == 0x69)))\n                        {\n                            rbp_1 = (rbp_1 | 0x20);\n                        }\n                    }\n                }\n                rdx_2 = *arg3;\n                *arg2 = rbp_1;\n            }\n            if (rdx_2 == 0)\n            {\n                char* rax_4 = getenv(\"POSIXLY_CORRECT\");\n                *arg3 = (((rax_4 - rax_4) & 0x200) + 0x200);\n                return 4;\n            }\n        }\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_4030b0",
            "funcStartAddr": "0x4030b0",
            "funcEndAddr": "0x403149",
            "decompiledFuncCode": "char* sub_4030b0(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_407900;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_60b2f0 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_403150",
            "funcStartAddr": "0x403150",
            "funcEndAddr": "0x403242",
            "decompiledFuncCode": "char* sub_403150(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_406d80();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_403231:\n                void* const rbx_1 = &data_407904;\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_403231;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_403231;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_403231;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_403231;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_403231;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_403231;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_403231;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_40790d;\n            if (cond:2_1)\n            {\n                rbx = &data_40790a;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_403231;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_403231;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_403231;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_403231;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_403231;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_407911;\n            if (cond:1_1)\n            {\n                rbx = &data_407906;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_403250",
            "funcStartAddr": "0x401970",
            "funcEndAddr": "0x404471",
            "decompiledFuncCode": "int64_t sub_403250(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    char const* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n    label_4032e8:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_40365c:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_4036a4;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_403250(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char const rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_4036bb;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_4037f5;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_403445;\n                            }\n                            goto label_403730;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_4037f5;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_403620;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_403620:\n                            if (var_c0 == 0)\n                            {\n                                goto label_40362b;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_403487:\n                            if (var_5c == 0)\n                            {\n                                goto label_403498;\n                            }\n                        label_403650:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_403658;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_40388b;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_40388b:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_40389a:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_40365c;\n                            }\n                            goto label_403620;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_403620;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_403620;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_40388b;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_403426;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_403426:\n                            if (var_5c == 0)\n                            {\n                                goto label_403445;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_403445;\n                            }\n                            goto label_40389a;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_40341d:\n                            if (r12_1 != 0)\n                            {\n                                goto label_40362b;\n                            }\n                            goto label_403426;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_403850:\n                            rdx = r11_1 == 2;\n                        label_403445:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_40354c;\n                            }\n                            goto label_40344f;\n                        }\n                        case 0x27:\n                        {\n                            goto label_4035cd;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_40359d;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_4035fa;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_40438d;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_403564;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_4033f9;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_4039f0;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_4039f0;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_404340:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_4036a4:\n                            rbx_1 = sub_403250(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_4036bb:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_4037f5;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_403747;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_4037f5;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_403710:\n                                r13 = 0;\n                                goto label_4034cb;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_403498:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_4034cb:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_4034d5;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_4034d5:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_4034dd;\n                            }\n                            case 9:\n                            {\n                                goto label_4036c0;\n                            }\n                            case 0xa:\n                            {\n                                goto label_403638;\n                            }\n                            case 0xb:\n                            {\n                                goto label_403720;\n                            }\n                            case 0xc:\n                            {\n                                goto label_403700;\n                            }\n                            case 0xd:\n                            {\n                                goto label_4036e9;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_403a4a;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_4036d5;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_403a2a;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_403a12;\n                            }\n                            case 0x27:\n                            {\n                                goto label_4035cd;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_40359d;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_4035fa;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_4033f9;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_4039f0:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_4037f0:\n                            var_b8 = 0;\n                        label_4037f5:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_403844:\n                                if (rdx == 0)\n                                {\n                                    goto label_403850;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_403d41:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_403564;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_40365c;\n                                }\n                                r13 = var_98;\n                                goto label_4034dd;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_4068b0(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_40365c;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_403d41;\n                            }\n                            goto label_403844;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_403730:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_40365c;\n                                }\n                                var_b8 = 0;\n                            label_403747:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_403792;\n                                    }\n                                    rax_8 = r10;\n                                label_40378a:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_403792:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_40354c;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_4037d3;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_40378a;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_40354c;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_4037f0;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_403705;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_40363d;\n                            }\n                            case 9:\n                            {\n                            label_4036c0:\n                                rbp_3 = 0x74;\n                                goto label_40363d;\n                            }\n                            case 0xa:\n                            {\n                            label_403638:\n                                rbp_3 = 0x6e;\n                            label_40363d:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_403650;\n                                }\n                                goto label_403498;\n                            }\n                            case 0xb:\n                            {\n                            label_403720:\n                                rbp_3 = 0x76;\n                                goto label_403705;\n                            }\n                            case 0xc:\n                            {\n                            label_403700:\n                                rbp_3 = 0x66;\n                            label_403705:\n                                if (var_5c == 0)\n                                {\n                                    goto label_403710;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_403658:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_40365c;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_4036e9:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_403620;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_403a4a:\n                                rbp_3 = 0x20;\n                                goto label_403a12;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_4036d5:\n                                rdx = 0;\n                            label_40362b:\n                                r13 = 0;\n                                goto label_403445;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_403a2a:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_403445;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_40344f:\n                                rax_8 = 0;\n                                goto label_403451;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_403a12:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_403451;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_4035cd:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_403445;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_40438d;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_40354c;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_40359d:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_40438d:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_40365c;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_40354c:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_403487;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_403564;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_403445;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_403b30:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_403445;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_403b30;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_403b30;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_403b30;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_403b30;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_404340;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_4037d3:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_40354c;\n                                }\n                            label_403451:\n                                if (arg7 == 0)\n                                {\n                                    goto label_40354c;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_40354c;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_403487;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_4035fa:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_403620;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_403564:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_4034dd;\n                                }\n                            label_4034dd:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_4034e6;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_4034e6:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_4033f9:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_40362b;\n                                }\n                                goto label_40341d;\n                            }\n                        }\n                    }\n                }\n            }\n        label_403ad6:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"'\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_4032e8;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"'\";\n                goto label_4032e8;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"'\";\n            goto label_4032e8;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_407904;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_407904;\n            }\n            goto label_4032e8;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_407904;\n            goto label_4032e8;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_4032e8;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_403150(&data_407915, r13);\n                arg9 = sub_403150(\"'\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_4032e8;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_403ad6;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n        goto label_4032e8;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_404480",
            "funcStartAddr": "0x401975",
            "funcEndAddr": "0x40461e",
            "decompiledFuncCode": "char* sub_404480(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_60b258;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_60b270 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_405540();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x60b260)\n        {\n            int64_t rax_9 = sub_405350(0, rsi_1);\n            int128_t zmm0 = data_60b260;\n            rbx = rax_9;\n            data_60b258 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_405350(rbx, rsi_1);\n            data_60b258 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_60b270;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_60b270 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_403250(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        uint64_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x60b300)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_4052f0(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_403250(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_404620",
            "funcStartAddr": "0x404620",
            "funcEndAddr": "0x404654",
            "decompiledFuncCode": "int64_t sub_404620(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x60b400;\n    }\n    int64_t rax_1 = sub_4054f0(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_404660",
            "funcStartAddr": "0x404660",
            "funcEndAddr": "0x40466f",
            "decompiledFuncCode": "uint64_t sub_404660(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60b400;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_404670",
            "funcStartAddr": "0x404670",
            "funcEndAddr": "0x40467f",
            "decompiledFuncCode": "void sub_404670(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60b400;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_404680",
            "funcStartAddr": "0x404680",
            "funcEndAddr": "0x4046b3",
            "decompiledFuncCode": "uint64_t sub_404680(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x60b400;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_4046c0",
            "funcStartAddr": "0x4046c0",
            "funcEndAddr": "0x4046d3",
            "decompiledFuncCode": "uint64_t sub_4046c0(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60b400;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4046e0",
            "funcStartAddr": "0x4046e0",
            "funcEndAddr": "0x40470b",
            "decompiledFuncCode": "void sub_4046e0(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60b400;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x60b400;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404710",
            "funcStartAddr": "0x404710",
            "funcEndAddr": "0x404782",
            "decompiledFuncCode": "int64_t sub_404710(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_60b400;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_403250(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_404790",
            "funcStartAddr": "0x404790",
            "funcEndAddr": "0x404871",
            "decompiledFuncCode": "char* sub_404790(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_60b400;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_403250(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_4052f0((rax_2 + 1));\n    sub_403250(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_404880",
            "funcStartAddr": "0x404880",
            "funcEndAddr": "0x40488a",
            "decompiledFuncCode": "int64_t sub_404880(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_404790(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_404890",
            "funcStartAddr": "0x404890",
            "funcEndAddr": "0x404925",
            "decompiledFuncCode": "uint64_t sub_404890()\n{\n    uint64_t rax_2 = data_60b270;\n    int64_t r12 = data_60b258;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x60b300)\n    {\n        rax_2 = free(rdi_2);\n        *data_60b260 = 0x100;\n        *(data_60b260 + 8) = 0x60b300;\n    }\n    if (r12 != 0x60b260)\n    {\n        rax_2 = free(r12);\n        data_60b258 = 0x60b260;\n    }\n    data_60b270 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_404930",
            "funcStartAddr": "0x404930",
            "funcEndAddr": "0x404941",
            "decompiledFuncCode": "int64_t sub_404930(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_404480(arg1, arg2, -1, &data_60b400);\n}\n\n"
        },
        {
            "funcName": "sub_404950",
            "funcStartAddr": "0x404950",
            "funcEndAddr": "0x40495a",
            "decompiledFuncCode": "int64_t sub_404950(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_404480(arg1, arg2, arg3, &data_60b400);\n}\n\n"
        },
        {
            "funcName": "sub_404960",
            "funcStartAddr": "0x404960",
            "funcEndAddr": "0x404976",
            "decompiledFuncCode": "int64_t sub_404960(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_404480(0, arg1, -1, &data_60b400);\n}\n\n"
        },
        {
            "funcName": "sub_404980",
            "funcStartAddr": "0x404980",
            "funcEndAddr": "0x404992",
            "decompiledFuncCode": "int64_t sub_404980(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_404480(0, arg1, arg2, &data_60b400);\n}\n\n"
        },
        {
            "funcName": "sub_4049a0",
            "funcStartAddr": "0x40197a",
            "funcEndAddr": "0x404a08",
            "decompiledFuncCode": "char* sub_4049a0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_404480(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_404a10",
            "funcStartAddr": "0x40197f",
            "funcEndAddr": "0x404a74",
            "decompiledFuncCode": "char* sub_404a10(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_404480(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_404a80",
            "funcStartAddr": "0x404a80",
            "funcEndAddr": "0x404a8c",
            "decompiledFuncCode": "int64_t sub_404a80(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4049a0(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_404a90",
            "funcStartAddr": "0x404a90",
            "funcEndAddr": "0x404a9f",
            "decompiledFuncCode": "int64_t sub_404a90(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_404a10(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_404aa0",
            "funcStartAddr": "0x404aa0",
            "funcEndAddr": "0x404b10",
            "decompiledFuncCode": "char* sub_404aa0(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_60b430;\n    int128_t var_48 = data_60b400;\n    int128_t var_38 = data_60b410;\n    int128_t var_28 = data_60b420;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_404480(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_404b10",
            "funcStartAddr": "0x404b10",
            "funcEndAddr": "0x404b1d",
            "decompiledFuncCode": "int64_t sub_404b10(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_404aa0(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_404b20",
            "funcStartAddr": "0x404b20",
            "funcEndAddr": "0x404b31",
            "decompiledFuncCode": "int64_t sub_404b20(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_404aa0(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_404b40",
            "funcStartAddr": "0x404b40",
            "funcEndAddr": "0x404b4a",
            "decompiledFuncCode": "int64_t sub_404b40(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_404aa0(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_404b50",
            "funcStartAddr": "0x401984",
            "funcEndAddr": "0x404bbe",
            "decompiledFuncCode": "char* sub_404b50(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_404480(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_404bc0",
            "funcStartAddr": "0x404bc0",
            "funcEndAddr": "0x404c2c",
            "decompiledFuncCode": "char* sub_404bc0(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_60b400;\n    int128_t var_38 = data_60b410;\n    int128_t var_28 = data_60b420;\n    int64_t var_18 = data_60b430;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_404480(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404cb0",
            "funcStartAddr": "0x404cb0",
            "funcEndAddr": "0x404cc1",
            "decompiledFuncCode": "int64_t sub_404cb0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_404480(arg1, arg2, -1, &data_60b220);\n}\n\n"
        },
        {
            "funcName": "sub_404cd0",
            "funcStartAddr": "0x404cd0",
            "funcEndAddr": "0x404ce6",
            "decompiledFuncCode": "int64_t sub_404cd0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_404480(0, arg1, -1, &data_60b220);\n}\n\n"
        },
        {
            "funcName": "sub_404cf0",
            "funcStartAddr": "0x404cf0",
            "funcEndAddr": "0x404d4e",
            "decompiledFuncCode": "ssize_t sub_404cf0(int32_t arg1, int64_t arg2, uint64_t arg3)\n{\n    uint64_t rbx = arg3;\n    ssize_t rax_1;\n    while (true)\n    {\n        rax_1 = read(arg1, arg2, rbx);\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        int32_t rax_3 = *__errno_location();\n        if (rax_3 != 4)\n        {\n            if (rbx <= 0x7fffe000)\n            {\n                break;\n            }\n            if (rax_3 != 0x16)\n            {\n                break;\n            }\n            rbx = 0x7fffe000;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_404d50",
            "funcStartAddr": "0x401989",
            "funcEndAddr": "0x40512d",
            "decompiledFuncCode": "int64_t sub_404d50(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_40866b, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_405130",
            "funcStartAddr": "0x405130",
            "funcEndAddr": "0x405150",
            "decompiledFuncCode": "int64_t sub_405130(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_404d50(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_405150",
            "funcStartAddr": "0x405150",
            "funcEndAddr": "0x4051b0",
            "decompiledFuncCode": "int64_t sub_405150(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_404d50(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_4051b0",
            "funcStartAddr": "0x4051b0",
            "funcEndAddr": "0x40526c",
            "decompiledFuncCode": "int64_t sub_4051b0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_404d50(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_405270",
            "funcStartAddr": "0x405270",
            "funcEndAddr": "0x4052e4",
            "decompiledFuncCode": "int64_t sub_405270()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_4052f0",
            "funcStartAddr": "0x4052f0",
            "funcEndAddr": "0x40530a",
            "decompiledFuncCode": "int64_t sub_4052f0(uint64_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_405540();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405350",
            "funcStartAddr": "0x405350",
            "funcEndAddr": "0x405386",
            "decompiledFuncCode": "int64_t sub_405350(int64_t arg1, uint64_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_405540();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40549a",
            "funcStartAddr": "0x40549a",
            "funcEndAddr": "0x4054a0",
            "decompiledFuncCode": "int64_t sub_40549a() __noreturn\n{\n    sub_405540();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4054a0",
            "funcStartAddr": "0x4054a0",
            "funcEndAddr": "0x4054b7",
            "decompiledFuncCode": "int64_t sub_4054a0(uint64_t arg1)\n{\n    /* tailcall */\n    return memset(sub_4052f0(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_4054c0",
            "funcStartAddr": "0x4054c0",
            "funcEndAddr": "0x4054ee",
            "decompiledFuncCode": "int64_t sub_4054c0(uint64_t arg1, uint64_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_405540();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4054f0",
            "funcStartAddr": "0x4054f0",
            "funcEndAddr": "0x405518",
            "decompiledFuncCode": "int64_t sub_4054f0(int64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_4052f0(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405520",
            "funcStartAddr": "0x405520",
            "funcEndAddr": "0x405533",
            "decompiledFuncCode": "int64_t sub_405520(char* arg1)\n{\n    /* tailcall */\n    return sub_4054f0(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_405540",
            "funcStartAddr": "0x405540",
            "funcEndAddr": "0x405571",
            "decompiledFuncCode": "int64_t sub_405540() __noreturn\n{\n    error(data_60b218, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_405580",
            "funcStartAddr": "0x405580",
            "funcEndAddr": "0x4059b4",
            "decompiledFuncCode": "uint64_t sub_405580(char* arg1, int64_t* arg2, int32_t arg3, uint64_t* arg4, \n    char* arg5)\n{\n    if (arg3 > 0x24)\n    {\n        __assert_fail(\"0 <= strtol_base && strtol_base \u2026\", \"lib/xstrtol.c\", 0x60, \"xstrtoumax\");\n        /* no return */\n    }\n    int64_t* r15 = arg2;\n    void var_40;\n    if (arg2 == 0)\n    {\n        r15 = &var_40;\n    }\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char rbx = *arg1;\n    uint16_t* rsi = *__ctype_b_loc();\n    char* rax_2 = arg1;\n    while ((*(&rsi[rbx] + 1) & 0x20) != 0)\n    {\n        rax_2 = &rax_2[1];\n        rbx = *rax_2;\n    }\n    int32_t rbp_1;\n    if (rbx == 0x2d)\n    {\n    label_40564a:\n        rbp_1 = 4;\n    }\n    else\n    {\n        char* r8 = *r15;\n        uint64_t rbx_1 = __strtoul_internal(arg1, r15, arg3, 0);\n        int32_t var_58;\n        void* r8_1;\n        uint32_t r12_1;\n        if (r8 == arg1)\n        {\n            var_58 = r8;\n            if (arg5 == 0)\n            {\n                goto label_40564a;\n            }\n            r12_1 = *arg1;\n            if (r12_1 == 0)\n            {\n                goto label_40564a;\n            }\n            rbp_1 = 0;\n            rbx_1 = 1;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) == 0)\n            {\n                goto label_40564a;\n            }\n        label_405687:\n            uint64_t rdx_1 = (r12_1 - 0x45);\n            int64_t rdx_3;\n            int32_t rsi_3;\n            if (rdx_1 <= 0x2f)\n            {\n                var_58 = rdx_1;\n                if ((!(TEST_BITQ(0x814400308945, rdx_1))))\n                {\n                    goto label_4056f0;\n                }\n                if (strchr(arg5, 0x30) == 0)\n                {\n                    goto label_4056f0;\n                }\n                char rax_8 = *(r8_1 + 1);\n                if (rax_8 == 0x44)\n                {\n                label_405918:\n                    rsi_3 = 2;\n                    rdx_3 = 0x3e8;\n                    goto label_4056fa;\n                }\n                if (rax_8 == 0x69)\n                {\n                    rdx_3 = 0x400;\n                    int32_t rsi_6;\n                    rsi_6 = *(r8_1 + 2) == 0x42;\n                    rsi_3 = ((rsi_6 + rsi_6) + 1);\n                    goto label_4056fa;\n                }\n                uint64_t rdx_2 = var_58;\n                if (rax_8 == 0x42)\n                {\n                    goto label_405918;\n                }\n                int32_t r9_1;\n                switch (rdx_2)\n                {\n                    case 0:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40589b:\n                        int64_t rcx_6 = rdx_3;\n                        int32_t rdi_8 = 6;\n                        r9_1 = 0;\n                        int32_t temp15_1;\n                        do\n                        {\n                            uint64_t rax_28;\n                            int64_t rdx_11;\n                            rdx_11 = HIGHD((rbx_1 * rcx_6));\n                            rax_28 = LOWD((rbx_1 * rcx_6));\n                            bool o_8 = ((rbx_1 * rcx_6) >> 0x40) != 0;\n                            rbx_1 = rax_28;\n                            if (o_8)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp15_1 = rdi_8;\n                            rdi_8 = (rdi_8 - 1);\n                        } while (temp15_1 != 1);\n                        goto label_4057f4;\n                    }\n                    case 1:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 7:\n                    case 9:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                    case 0x23:\n                    case 0x24:\n                    case 0x25:\n                    case 0x27:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    {\n                        goto label_405795;\n                    }\n                    case 2:\n                    case 0x22:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4058d3:\n                        int64_t rcx_7 = rdx_3;\n                        int64_t rax_30;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rbx_1 * rcx_7));\n                        rax_30 = LOWD((rbx_1 * rcx_7));\n                        int64_t rax_31;\n                        if (((rbx_1 * rcx_7) >> 0x40) == 0)\n                        {\n                            int64_t rdx_13;\n                            rdx_13 = HIGHD((rax_30 * rcx_7));\n                            rax_31 = LOWD((rax_30 * rcx_7));\n                            if (((rax_30 * rcx_7) >> 0x40) == 0)\n                            {\n                                uint64_t rax_32;\n                                int64_t rdx_14;\n                                rdx_14 = HIGHD((rax_31 * rcx_7));\n                                rax_32 = LOWD((rax_31 * rcx_7));\n                                if (((rax_31 * rcx_7) >> 0x40) == 0)\n                                {\n                                    rbx_1 = rax_32;\n                                    rbp_1 = (rbp_1 | 0);\n                                }\n                            }\n                        }\n                        if (((((rbx_1 * rcx_7) >> 0x40) != 0 || (((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) != 0)) || ((((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) == 0) && ((rax_31 * rcx_7) >> 0x40) != 0)))\n                        {\n                            rbx_1 = -1;\n                            rbp_1 = (rbp_1 | 1);\n                        }\n                        goto label_40573d;\n                    }\n                    case 6:\n                    case 0x26:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40575f:\n                        uint64_t rax_15;\n                        int64_t rdx_6;\n                        rdx_6 = HIGHD((rbx_1 * rdx_3));\n                        rax_15 = LOWD((rbx_1 * rdx_3));\n                        bool o_3 = ((rbx_1 * rdx_3) >> 0x40) != 0;\n                        rbx_1 = rax_15;\n                        if ((!o_3))\n                        {\n                            goto label_40573d;\n                        }\n                        goto label_405767;\n                    }\n                    case 8:\n                    case 0x28:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40571e:\n                        int64_t rcx_1 = rdx_3;\n                        int64_t rax_10;\n                        int64_t rdx_4;\n                        rdx_4 = HIGHD((rbx_1 * rcx_1));\n                        rax_10 = LOWD((rbx_1 * rcx_1));\n                        if (((rbx_1 * rcx_1) >> 0x40) == 0)\n                        {\n                            uint64_t rax_11;\n                            int64_t rdx_5;\n                            rdx_5 = HIGHD((rax_10 * rcx_1));\n                            rax_11 = LOWD((rax_10 * rcx_1));\n                            if (((rax_10 * rcx_1) >> 0x40) != 0)\n                            {\n                                goto label_405767;\n                            }\n                            rbx_1 = rax_11;\n                            goto label_40573d;\n                        }\n                    label_405767:\n                        rbp_1 = 1;\n                        rbx_1 = -1;\n                        goto label_40573d;\n                    }\n                    case 0xb:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_405868:\n                        int64_t rcx_5 = rdx_3;\n                        int32_t rdi_7 = 5;\n                        r9_1 = 0;\n                        int32_t temp14_1;\n                        do\n                        {\n                            uint64_t rax_26;\n                            int64_t rdx_10;\n                            rdx_10 = HIGHD((rbx_1 * rcx_5));\n                            rax_26 = LOWD((rbx_1 * rcx_5));\n                            bool o_7 = ((rbx_1 * rcx_5) >> 0x40) != 0;\n                            rbx_1 = rax_26;\n                            if (o_7)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp14_1 = rdi_7;\n                            rdi_7 = (rdi_7 - 1);\n                        } while (temp14_1 != 1);\n                        goto label_4057f4;\n                    }\n                    case 0xf:\n                    case 0x2f:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_405838:\n                        int64_t rcx_4 = rdx_3;\n                        int32_t rdi_6 = 4;\n                        r9_1 = 0;\n                        int32_t temp13_1;\n                        do\n                        {\n                            uint64_t rax_24;\n                            int64_t rdx_9;\n                            rdx_9 = HIGHD((rbx_1 * rcx_4));\n                            rax_24 = LOWD((rbx_1 * rcx_4));\n                            bool o_6 = ((rbx_1 * rcx_4) >> 0x40) != 0;\n                            rbx_1 = rax_24;\n                            if (o_6)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp13_1 = rdi_6;\n                            rdi_6 = (rdi_6 - 1);\n                        } while (temp13_1 != 1);\n                        goto label_4057f4;\n                    }\n                    case 0x14:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_405806:\n                        int64_t rcx_3 = rdx_3;\n                        int32_t rdi_5 = 8;\n                        r9_1 = 0;\n                        int32_t temp12_1;\n                        do\n                        {\n                            uint64_t rax_22;\n                            int64_t rdx_8;\n                            rdx_8 = HIGHD((rbx_1 * rcx_3));\n                            rax_22 = LOWD((rbx_1 * rcx_3));\n                            bool o_5 = ((rbx_1 * rcx_3) >> 0x40) != 0;\n                            rbx_1 = rax_22;\n                            if (o_5)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp12_1 = rdi_5;\n                            rdi_5 = (rdi_5 - 1);\n                        } while (temp12_1 != 1);\n                        goto label_4057f4;\n                    }\n                    case 0x15:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4057cb:\n                        int64_t rcx_2 = rdx_3;\n                        int32_t rdi_4 = 7;\n                        r9_1 = 0;\n                        int32_t temp11_1;\n                        do\n                        {\n                            uint64_t rax_20;\n                            int64_t rdx_7;\n                            rdx_7 = HIGHD((rbx_1 * rcx_2));\n                            rax_20 = LOWD((rbx_1 * rcx_2));\n                            bool o_4 = ((rbx_1 * rcx_2) >> 0x40) != 0;\n                            rbx_1 = rax_20;\n                            if (o_4)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp11_1 = rdi_4;\n                            rdi_4 = (rdi_4 - 1);\n                        } while (temp11_1 != 1);\n                    label_4057f4:\n                        rbp_1 = (rbp_1 | r9_1);\n                        goto label_40573d;\n                    }\n                    case 0x1d:\n                    {\n                        rsi_3 = 1;\n                        break;\n                    }\n                    case 0x1e:\n                    {\n                        rsi_3 = 1;\n                        goto label_40573d;\n                    }\n                }\n            }\n            else\n            {\n            label_4056f0:\n                rsi_3 = 1;\n                rdx_3 = 0x400;\n            label_4056fa:\n                char r12_2 = (r12_1 - 0x42);\n                if (r12_2 > 0x35)\n                {\n                    goto label_405795;\n                }\n                switch (r12_2)\n                {\n                    case 0:\n                    {\n                        if ((rbx_1 >> 0x36) != 0)\n                        {\n                            goto label_405767;\n                        }\n                        rbx_1 = (rbx_1 << 0xa);\n                        goto label_40573d;\n                    }\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x2a:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x33:\n                    case 0x34:\n                    {\n                        goto label_405795;\n                    }\n                    case 3:\n                    {\n                        goto label_40589b;\n                    }\n                    case 5:\n                    case 0x25:\n                    {\n                        goto label_4058d3;\n                    }\n                    case 9:\n                    case 0x29:\n                    {\n                        goto label_40575f;\n                    }\n                    case 0xb:\n                    case 0x2b:\n                    {\n                        goto label_40571e;\n                    }\n                    case 0xe:\n                    {\n                        goto label_405868;\n                    }\n                    case 0x12:\n                    case 0x32:\n                    {\n                        goto label_405838;\n                    }\n                    case 0x17:\n                    {\n                        goto label_405806;\n                    }\n                    case 0x18:\n                    {\n                        goto label_4057cb;\n                    }\n                    case 0x21:\n                    {\n                        goto label_40573d;\n                    }\n                    case 0x35:\n                    {\n                        if (rbx_1 < 0)\n                        {\n                            goto label_405767;\n                        }\n                        rbx_1 = (rbx_1 + rbx_1);\n                    label_40573d:\n                        void* r8_2 = (r8_1 + rsi_3);\n                        int32_t rax_13 = (rbp_1 | 2);\n                        *r15 = r8_2;\n                        if (*r8_2 != 0)\n                        {\n                            rbp_1 = rax_13;\n                        }\n                        goto label_405622;\n                    }\n                }\n            }\n            if ((rbx_1 >> 0x37) != 0)\n            {\n                goto label_405767;\n            }\n            rbx_1 = (rbx_1 << 9);\n            goto label_40573d;\n        }\n        int32_t rax_4 = *rax;\n        if (rax_4 == 0)\n        {\n            rbp_1 = 0;\n        }\n        else\n        {\n            rbp_1 = 1;\n            if (rax_4 != 0x22)\n            {\n                goto label_40564a;\n            }\n        }\n        if (arg5 == 0)\n        {\n        label_405622:\n            *arg4 = rbx_1;\n        }\n        else\n        {\n            r12_1 = *r8;\n            if (r12_1 == 0)\n            {\n                goto label_405622;\n            }\n            var_58 = r8;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) != 0)\n            {\n                goto label_405687;\n            }\n        label_405795:\n            *arg4 = rbx_1;\n            rbp_1 = (rbp_1 | 2);\n        }\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_4059c0",
            "funcStartAddr": "0x4059c0",
            "funcEndAddr": "0x405a3b",
            "decompiledFuncCode": "int64_t sub_4059c0(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_405a40(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_405a40",
            "funcStartAddr": "0x405a40",
            "funcEndAddr": "0x405a80",
            "decompiledFuncCode": "int64_t sub_405a40(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_405a80(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_405a80",
            "funcStartAddr": "0x405a80",
            "funcEndAddr": "0x405ad7",
            "decompiledFuncCode": "off64_t sub_405a80(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_405ae0",
            "funcStartAddr": "0x405ae0",
            "funcEndAddr": "0x405bbf",
            "decompiledFuncCode": "uint64_t sub_405ae0(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_405bc0",
            "funcStartAddr": "0x405bc0",
            "funcEndAddr": "0x4061dc",
            "decompiledFuncCode": "uint64_t sub_405bc0(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_405df0;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_405d16;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_405d16;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_405d16:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_405df0:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_405e1e;\n                }\n                *arg5 = r12;\n            label_405e1e:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_405e3c;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_405e3c:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_405e3c;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_405dae;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_405dae:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_4061e0",
            "funcStartAddr": "0x4061e0",
            "funcEndAddr": "0x4067a6",
            "decompiledFuncCode": "uint64_t sub_4061e0(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_40641c;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_4062a8;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_4062a8:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_405ae0(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_408e71;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_405ae0(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_40641c;\n                }\n                *arg7 = rdx_2;\n            label_40641c:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_406520;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_408e71;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_406590;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_406520;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_406520;\n                            }\n                            goto label_4064e1;\n                        }\n                    label_4064e1:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_405bc0(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_408e72);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_406520:\n                            rdx = &r14_1[1];\n                        label_406361:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_40655e;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_40655e:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_408e90;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_406590:\n                                        r14_2 = sub_405bc0(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_40664d;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_40664d:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_40641c;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_4062a8;\n        }\n        goto label_406361;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_406810",
            "funcStartAddr": "0x406810",
            "funcEndAddr": "0x406828",
            "decompiledFuncCode": "uint64_t sub_406810(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_4068b0",
            "funcStartAddr": "0x4068b0",
            "funcEndAddr": "0x40692a",
            "decompiledFuncCode": "uint64_t sub_4068b0(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_408e74[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_4068da;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_4068da:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_406d20() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_406930",
            "funcStartAddr": "0x406930",
            "funcEndAddr": "0x40693a",
            "decompiledFuncCode": "int64_t sub_406930() __noreturn\n{\n    /* tailcall */\n    return sub_402020(1);\n}\n\n"
        },
        {
            "funcName": "sub_406940",
            "funcStartAddr": "0x406940",
            "funcEndAddr": "0x406a56",
            "decompiledFuncCode": "int64_t sub_406940(char* arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t rbp = arg3;\n    uint64_t rax = strlen(arg1);\n    char* r14 = *arg2;\n    int64_t var_58 = -1;\n    if (r14 != 0)\n    {\n        char var_41_1 = 0;\n        int64_t rbx_1 = 0;\n        while (true)\n        {\n            if (strncmp(r14, arg1, rax) == 0)\n            {\n                if (strlen(r14) == rax)\n                {\n                    var_58 = rbx_1;\n                    break;\n                }\n                if (var_58 == -1)\n                {\n                    var_58 = rbx_1;\n                    rbx_1 = (rbx_1 + 1);\n                    rbp = (rbp + arg4);\n                    r14 = arg2[rbx_1];\n                    if (r14 != 0)\n                    {\n                        continue;\n                    }\n                    goto label_406a1d;\n                }\n                if (arg3 == 0)\n                {\n                    var_41_1 = 1;\n                }\n                else\n                {\n                    char rax_3 = var_41_1;\n                    if (memcmp(((var_58 * arg4) + arg3), rbp, arg4) != 0)\n                    {\n                        rax_3 = 1;\n                    }\n                    var_41_1 = rax_3;\n                }\n            }\n            rbx_1 = (rbx_1 + 1);\n            rbp = (rbp + arg4);\n            r14 = arg2[rbx_1];\n            if (r14 == 0)\n            {\n            label_406a1d:\n                int64_t rax_6 = -2;\n                if (var_41_1 == 0)\n                {\n                    rax_6 = var_58;\n                }\n                var_58 = rax_6;\n                break;\n            }\n        }\n    }\n    return var_58;\n}\n\n"
        },
        {
            "funcName": "sub_406a60",
            "funcStartAddr": "0x406a60",
            "funcEndAddr": "0x406ad1",
            "decompiledFuncCode": "int64_t sub_406a60(uint64_t arg1, uint64_t arg2, int64_t arg3)\n{\n    char* rbx;\n    if (arg3 == -1)\n    {\n        rbx = dcgettext(nullptr, \"invalid argument %s for %s\", 5);\n    }\n    else\n    {\n        rbx = dcgettext(nullptr, \"ambiguous argument %s for %s\", 5);\n    }\n    /* tailcall */\n    return error(0, 0, rbx, sub_4049a0(0, 8, arg2), sub_404cb0(1, arg1));\n}\n\n"
        },
        {
            "funcName": "sub_406ae0",
            "funcStartAddr": "0x406ae0",
            "funcEndAddr": "0x406bf8",
            "decompiledFuncCode": "char* sub_406ae0(int64_t* arg1, int64_t arg2, uint64_t arg3)\n{\n    int64_t r14 = 0;\n    int64_t rbp = arg2;\n    int64_t rbx = 0;\n    fputs_unlocked(dcgettext(nullptr, \"Valid arguments are:\", 5), stderr);\n    uint64_t r12 = *arg1;\n    if (r12 != 0)\n    {\n        do\n        {\n            if ((rbx != 0 && memcmp(r14, rbp, arg3) == 0))\n            {\n                rbx = (rbx + 1);\n                rbp = (rbp + arg3);\n                __fprintf_chk(stderr, 1, \", %s\", sub_404cd0(r12));\n                r12 = arg1[rbx];\n                if (r12 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = (rbx + 1);\n            r14 = rbp;\n            rbp = (rbp + arg3);\n            __fprintf_chk(stderr, 1, \"\\n  - %s\", sub_404cd0(r12));\n            r12 = arg1[rbx];\n        } while (r12 != 0);\n    }\n    uint64_t* const rdi_6 = stderr;\n    char* rax_6 = stderr[5];\n    if (rax_6 >= stderr[6])\n    {\n        /* tailcall */\n        return __overflow(rdi_6, 0xa);\n    }\n    stderr[5] = &rax_6[1];\n    *rax_6 = 0xa;\n    return rax_6;\n}\n\n"
        },
        {
            "funcName": "sub_406c00",
            "funcStartAddr": "0x406c00",
            "funcEndAddr": "0x406c70",
            "decompiledFuncCode": "int64_t sub_406c00(uint64_t arg1, char* arg2, int64_t* arg3, int64_t arg4, \n    uint64_t arg5, int64_t arg6)\n{\n    int64_t rax = sub_406940(arg2, arg3, arg4, arg5);\n    if (rax < 0)\n    {\n        sub_406a60(arg1, arg2, rax);\n        sub_406ae0(arg3, arg4, arg5);\n        arg6();\n        rax = -1;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_406c70",
            "funcStartAddr": "0x406c70",
            "funcEndAddr": "0x406cbd",
            "decompiledFuncCode": "int64_t sub_406c70(int64_t arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t r14 = *arg2;\n    if (r14 != 0)\n    {\n        void* rbx_1 = &arg2[1];\n        int64_t rbp_1 = arg3;\n        do\n        {\n            if (memcmp(arg1, rbp_1, arg4) == 0)\n            {\n                break;\n            }\n            r14 = *rbx_1;\n            rbp_1 = (rbp_1 + arg4);\n            rbx_1 = (rbx_1 + 8);\n        } while (r14 != 0);\n    }\n    return r14;\n}\n\n"
        },
        {
            "funcName": "sub_406cc0",
            "funcStartAddr": "0x406cc0",
            "funcEndAddr": "0x406d1d",
            "decompiledFuncCode": "uint64_t sub_406cc0(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_4059c0(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_406d20",
            "funcStartAddr": "0x406d20",
            "funcEndAddr": "0x406d7e",
            "decompiledFuncCode": "int64_t sub_406d20()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_408eee;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            void* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_406d80",
            "funcStartAddr": "0x406d80",
            "funcEndAddr": "0x4072e2",
            "decompiledFuncCode": "char* sub_406d80()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_60b478;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_408e74[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        uint64_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            uint64_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_406e7c;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_406ec6;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_406e7c:\n            r15 = &data_408e74[0x1b];\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_406ec6:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, \"r\");\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_406f7c:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_40710b;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_406fb8:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_406fb8;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_406ff2:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_406ff2;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_408e74[0x1b];\n                                    free(rdi_26);\n                                    sub_4059c0(rax_12);\n                                    goto label_406f07;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_4071cb:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_4071cb;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_407219:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_407219;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_406f7c;\n                        }\n                        break;\n                    }\n                label_40710b:\n                    sub_4059c0(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_408e74[0x1b];\n            }\n        label_406f07:\n            free(rbp_3);\n        }\n        data_60b478 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x4072f0",
            "funcEndAddr": "0x40734d",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x407350",
            "funcEndAddr": "0x407351",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_407360",
            "funcStartAddr": "0x407360",
            "funcEndAddr": "0x407378",
            "decompiledFuncCode": "int64_t sub_407360(void (* arg1)(void*))\n{\n    int64_t rdx = data_60b208;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_407378",
            "funcStartAddr": "0x407378",
            "funcEndAddr": "0x407398",
            "decompiledFuncCode": "int64_t sub_407378(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_60ae30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}