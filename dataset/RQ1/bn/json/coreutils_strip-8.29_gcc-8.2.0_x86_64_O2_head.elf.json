{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_head.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 133,
    "funcInfo": [
        {
            "funcName": "sub_4013f0",
            "funcStartAddr": "0x4013f0",
            "funcEndAddr": "0x4013fc",
            "decompiledFuncCode": "int64_t sub_4013f0()\n{\n    int64_t var_8 = data_60b008;\n    /* jump -> data_60b010 */\n}\n\n"
        },
        {
            "funcName": "sub_401406",
            "funcStartAddr": "0x401406",
            "funcEndAddr": "0x401410",
            "decompiledFuncCode": "int64_t sub_401406()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401416",
            "funcStartAddr": "0x401416",
            "funcEndAddr": "0x401420",
            "decompiledFuncCode": "int64_t sub_401416()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401426",
            "funcStartAddr": "0x401426",
            "funcEndAddr": "0x401430",
            "decompiledFuncCode": "int64_t sub_401426()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401436",
            "funcStartAddr": "0x401436",
            "funcEndAddr": "0x401440",
            "decompiledFuncCode": "int64_t sub_401436()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401446",
            "funcStartAddr": "0x401446",
            "funcEndAddr": "0x401450",
            "decompiledFuncCode": "int64_t sub_401446()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401456",
            "funcStartAddr": "0x401456",
            "funcEndAddr": "0x401460",
            "decompiledFuncCode": "int64_t sub_401456()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401466",
            "funcStartAddr": "0x401466",
            "funcEndAddr": "0x401470",
            "decompiledFuncCode": "int64_t sub_401466()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401486",
            "funcStartAddr": "0x401486",
            "funcEndAddr": "0x401490",
            "decompiledFuncCode": "int64_t sub_401486()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401496",
            "funcStartAddr": "0x401496",
            "funcEndAddr": "0x4014a0",
            "decompiledFuncCode": "int64_t sub_401496()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_4014a6",
            "funcStartAddr": "0x4014a6",
            "funcEndAddr": "0x4014b0",
            "decompiledFuncCode": "int64_t sub_4014a6()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_4014b6",
            "funcStartAddr": "0x4014b6",
            "funcEndAddr": "0x4014c0",
            "decompiledFuncCode": "int64_t sub_4014b6()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_4014c6",
            "funcStartAddr": "0x4014c6",
            "funcEndAddr": "0x4014d0",
            "decompiledFuncCode": "int64_t sub_4014c6()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_4014d6",
            "funcStartAddr": "0x4014d6",
            "funcEndAddr": "0x4014e0",
            "decompiledFuncCode": "int64_t sub_4014d6()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_4014e6",
            "funcStartAddr": "0x4014e6",
            "funcEndAddr": "0x4014f0",
            "decompiledFuncCode": "int64_t sub_4014e6()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401506",
            "funcStartAddr": "0x401506",
            "funcEndAddr": "0x401510",
            "decompiledFuncCode": "int64_t sub_401506()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401516",
            "funcStartAddr": "0x401516",
            "funcEndAddr": "0x401520",
            "decompiledFuncCode": "int64_t sub_401516()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401526",
            "funcStartAddr": "0x401526",
            "funcEndAddr": "0x401530",
            "decompiledFuncCode": "int64_t sub_401526()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401536",
            "funcStartAddr": "0x401536",
            "funcEndAddr": "0x401540",
            "decompiledFuncCode": "int64_t sub_401536()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401546",
            "funcStartAddr": "0x401546",
            "funcEndAddr": "0x401550",
            "decompiledFuncCode": "int64_t sub_401546()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401556",
            "funcStartAddr": "0x401556",
            "funcEndAddr": "0x401560",
            "decompiledFuncCode": "int64_t sub_401556()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401566",
            "funcStartAddr": "0x401566",
            "funcEndAddr": "0x401570",
            "decompiledFuncCode": "int64_t sub_401566()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401586",
            "funcStartAddr": "0x401586",
            "funcEndAddr": "0x401590",
            "decompiledFuncCode": "int64_t sub_401586()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401596",
            "funcStartAddr": "0x401596",
            "funcEndAddr": "0x4015a0",
            "decompiledFuncCode": "int64_t sub_401596()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_4015a6",
            "funcStartAddr": "0x4015a6",
            "funcEndAddr": "0x4015b0",
            "decompiledFuncCode": "int64_t sub_4015a6()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_4015b6",
            "funcStartAddr": "0x4015b6",
            "funcEndAddr": "0x4015c0",
            "decompiledFuncCode": "int64_t sub_4015b6()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_4015c6",
            "funcStartAddr": "0x4015c6",
            "funcEndAddr": "0x4015d0",
            "decompiledFuncCode": "int64_t sub_4015c6()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_4015d6",
            "funcStartAddr": "0x4015d6",
            "funcEndAddr": "0x4015e0",
            "decompiledFuncCode": "int64_t sub_4015d6()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_4015e6",
            "funcStartAddr": "0x4015e6",
            "funcEndAddr": "0x4015f0",
            "decompiledFuncCode": "int64_t sub_4015e6()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401606",
            "funcStartAddr": "0x401606",
            "funcEndAddr": "0x401610",
            "decompiledFuncCode": "int64_t sub_401606()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401616",
            "funcStartAddr": "0x401616",
            "funcEndAddr": "0x401620",
            "decompiledFuncCode": "int64_t sub_401616()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401626",
            "funcStartAddr": "0x401626",
            "funcEndAddr": "0x401630",
            "decompiledFuncCode": "int64_t sub_401626()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401636",
            "funcStartAddr": "0x401636",
            "funcEndAddr": "0x401640",
            "decompiledFuncCode": "int64_t sub_401636()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401646",
            "funcStartAddr": "0x401646",
            "funcEndAddr": "0x401650",
            "decompiledFuncCode": "int64_t sub_401646()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401656",
            "funcStartAddr": "0x401656",
            "funcEndAddr": "0x401660",
            "decompiledFuncCode": "int64_t sub_401656()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401666",
            "funcStartAddr": "0x401666",
            "funcEndAddr": "0x401670",
            "decompiledFuncCode": "int64_t sub_401666()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401686",
            "funcStartAddr": "0x401686",
            "funcEndAddr": "0x401690",
            "decompiledFuncCode": "int64_t sub_401686()\n{\n    int64_t var_8 = 0x28;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401696",
            "funcStartAddr": "0x401696",
            "funcEndAddr": "0x4016a0",
            "decompiledFuncCode": "int64_t sub_401696()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_4016a6",
            "funcStartAddr": "0x4016a6",
            "funcEndAddr": "0x4016b0",
            "decompiledFuncCode": "int64_t sub_4016a6()\n{\n    int64_t var_8 = 0x2a;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_4016b6",
            "funcStartAddr": "0x4016b6",
            "funcEndAddr": "0x4016c0",
            "decompiledFuncCode": "int64_t sub_4016b6()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_4016c6",
            "funcStartAddr": "0x4016c6",
            "funcEndAddr": "0x4016d0",
            "decompiledFuncCode": "int64_t sub_4016c6()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_4016d6",
            "funcStartAddr": "0x4016d6",
            "funcEndAddr": "0x4016e0",
            "decompiledFuncCode": "int64_t sub_4016d6()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_4016e6",
            "funcStartAddr": "0x4016e6",
            "funcEndAddr": "0x4016f0",
            "decompiledFuncCode": "int64_t sub_4016e6()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401706",
            "funcStartAddr": "0x401706",
            "funcEndAddr": "0x401710",
            "decompiledFuncCode": "int64_t sub_401706()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401716",
            "funcStartAddr": "0x401716",
            "funcEndAddr": "0x401720",
            "decompiledFuncCode": "int64_t sub_401716()\n{\n    int64_t var_8 = 0x31;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401726",
            "funcStartAddr": "0x401726",
            "funcEndAddr": "0x401730",
            "decompiledFuncCode": "int64_t sub_401726()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401736",
            "funcStartAddr": "0x401736",
            "funcEndAddr": "0x401740",
            "decompiledFuncCode": "int64_t sub_401736()\n{\n    int64_t var_8 = 0x33;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401746",
            "funcStartAddr": "0x401746",
            "funcEndAddr": "0x401750",
            "decompiledFuncCode": "int64_t sub_401746()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401756",
            "funcStartAddr": "0x401756",
            "funcEndAddr": "0x401760",
            "decompiledFuncCode": "int64_t sub_401756()\n{\n    int64_t var_8 = 0x35;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "sub_401766",
            "funcStartAddr": "0x401766",
            "funcEndAddr": "0x401770",
            "decompiledFuncCode": "int64_t sub_401766()\n{\n    int64_t var_8 = 0x36;\n    /* tailcall */\n    return sub_4013f0();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x4017a0",
            "funcEndAddr": "0x4028a8",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    uint64_t r15;\n    uint64_t var_8 = r15;\n    uint64_t r14;\n    uint64_t var_10 = r14;\n    int32_t r12 = argc;\n    char** rbp = argv;\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_4036d0(*argv);\n    void var_168;\n    int32_t var_160;\n    setlocale(6, &data_4098a4[0x1b], rdx, rcx, r8, r9, var_168, var_160);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    sub_407800(sub_4034c0);\n    data_60b2b8 = 0;\n    data_60b2ba = 0;\n    data_60b2b9 = 0xa;\n    uint64_t var_160_1;\n    char var_14a_1;\n    char* rax_80;\n    uint64_t rcx_17;\n    int32_t rbx;\n    if (r12 > 1)\n    {\n        char* rsi = rbp[1];\n        if ((*rsi == 0x2d && (rsi[1] - 0x30) <= 9))\n        {\n            void* rsi_4 = &rsi[1];\n            void* rcx_2 = rsi_4;\n            char r13_1;\n            int32_t rax_12;\n            do\n            {\n                rcx_2 = (rcx_2 + 1);\n                rax_12 = *rcx_2;\n                r13_1 = rax_12;\n            } while ((rax_12 - 0x30) <= 9);\n            if (r13_1 == 0)\n            {\n                var_14a_1 = 1;\n                rbx = 0;\n            }\n            else\n            {\n                void* rdx_3 = rcx_2;\n                char r8_2 = 0;\n                char r9_2 = 0xa;\n                char rdi_3 = 0;\n                char r10_1 = 1;\n                rbx = 0;\n                char rax_14;\n                do\n                {\n                    rax_14 = (r13_1 - 0x62);\n                    if (rax_14 > 0x18)\n                    {\n                        break;\n                    }\n                    switch (rax_14)\n                    {\n                        case 0:\n                        case 9:\n                        case 0xb:\n                        {\n                            rdi_3 = r13_1;\n                            r10_1 = 0;\n                            break;\n                        }\n                        case 1:\n                        {\n                            rdi_3 = 0;\n                            r10_1 = 0;\n                            break;\n                        }\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 7:\n                        case 8:\n                        case 0xc:\n                        case 0xd:\n                        case 0xe:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        {\n                            break;\n                            break;\n                        }\n                        case 0xa:\n                        {\n                            r10_1 = 1;\n                            break;\n                        }\n                        case 0xf:\n                        {\n                            rbx = 2;\n                            break;\n                        }\n                        case 0x14:\n                        {\n                            rbx = 1;\n                            break;\n                        }\n                        case 0x18:\n                        {\n                            r8_2 = 1;\n                            r9_2 = 0;\n                            break;\n                        }\n                    }\n                    rdx_3 = (rdx_3 + 1);\n                    r13_1 = *rdx_3;\n                } while (r13_1 != 0);\n                if (rax_14 > 0x18)\n                {\n                    if (r8_2 != 0)\n                    {\n                        data_60b2b9 = r9_2;\n                    }\n                    rax_80 = dcgettext(nullptr, \"invalid trailing option -- %c\", 5);\n                    rcx_17 = r13_1;\n                label_402383:\n                    error(0, 0, rax_80, rcx_17);\n                label_4018f8:\n                    sub_4030d0(1);\n                    /* no return */\n                }\n                var_14a_1 = r10_1;\n                if (r8_2 != 0)\n                {\n                    data_60b2b9 = r9_2;\n                }\n                *rcx_2 = rdi_3;\n                if (rdi_3 != 0)\n                {\n                    *(rcx_2 + 1) = 0;\n                }\n            }\n            rbp = &rbp[1];\n            r12 = (r12 - 1);\n            var_160_1 = sub_402990(var_14a_1, rsi_4);\n            *rbp = rbp[-1];\n            goto label_401829;\n        }\n    }\n    var_14a_1 = 1;\n    rbx = 0;\n    var_160_1 = 0xa;\nlabel_401829:\n    bool var_14b_1 = false;\n    int32_t rax_1;\n    int32_t r14_1;\n    while (true)\n    {\n        rax_1 = getopt_long(r12, rbp, \"c:n:qvz0123456789\", &data_4081a0, nullptr);\n        if (rax_1 == 0xffffffff)\n        {\n            break;\n        }\n        bool cond:1_1 = rax_1 <= 0x6e;\n        if (rax_1 == 0x6e)\n        {\n            int64_t rax_6 = data_60b460;\n            char rdx_2 = *rax_6;\n            var_14b_1 = rdx_2 == 0x2d;\n            if (rdx_2 == 0x2d)\n            {\n                data_60b460 = (rax_6 + 1);\n            }\n            var_14a_1 = 1;\n            var_160_1 = sub_402990(1, data_60b460);\n        }\n        else if ((!cond:1_1))\n        {\n            bool cond:2_1 = rax_1 <= 0x76;\n            if (rax_1 != 0x76)\n            {\n                if (cond:2_1)\n                {\n                    if (rax_1 == 0x71)\n                    {\n                        rbx = 2;\n                        continue;\n                    }\n                }\n                else if (rax_1 == 0x7a)\n                {\n                    data_60b2b9 = 0;\n                    continue;\n                }\n                else if (rax_1 == 0x80)\n                {\n                    data_60b2bb = 1;\n                    continue;\n                }\n                r14_1 = rax_1;\n                break;\n            }\n            rbx = 1;\n        }\n        else\n        {\n            if (rax_1 == 0xffffff7e)\n            {\n                sub_4030d0(0);\n                /* no return */\n            }\n            if (rax_1 != 0x63)\n            {\n                r14_1 = rax_1;\n                if (rax_1 == 0xffffff7d)\n                {\n                    int64_t var_178 = 0;\n                    sub_4057d0(stdout, \"head\", \"GNU coreutils\", data_60b1f8);\n                    exit(0);\n                    /* no return */\n                }\n                break;\n            }\n            int64_t rax_2 = data_60b460;\n            char rdx_1 = *rax_2;\n            var_14b_1 = rdx_1 == 0x2d;\n            if (rdx_1 == 0x2d)\n            {\n                data_60b460 = (rax_2 + 1);\n            }\n            var_14a_1 = 0;\n            var_160_1 = sub_402990(0, data_60b460);\n        }\n    }\n    if (rax_1 == 0xffffffff)\n    {\n        if ((rbx == 1 || (rbx == 0 && (r12 - 1) > data_60b27c)))\n        {\n            data_60b2ba = 1;\n        }\n        void* var_158;\n        char var_149;\n        void* const var_138;\n        int64_t var_130;\n        uint64_t var_120;\n        uint64_t var_110;\n        uint64_t var_108;\n        uint64_t var_f0;\n        uint64_t var_e8;\n        uint64_t var_e0;\n        bool c_1;\n        bool z_1;\n        if ((var_14a_1 == 0 && (var_14b_1 != 0 && var_160_1 < 0)))\n        {\n            void var_c8;\n            int64_t rax_92 = error(1, 0x4b, \"%s: %s\", dcgettext(nullptr, \"invalid number of bytes\", 5), sub_4052f0(sub_403680(var_160_1, &var_c8)));\n        label_40288a:\n            uint64_t var_128;\n            r15 = var_128;\n            int64_t r13_6 = rax_92;\n            int32_t var_100;\n            r14 = var_100;\n            bool rbx_4 = var_14b_1;\n        label_40257b:\n            int64_t var_f8;\n            free(var_f8);\n            int64_t var_140_1 = r13_6;\n            int32_t var_150;\n            int64_t var_148_2;\n            char* var_140_2;\n            int64_t var_128_2;\n            int64_t var_118;\n            ssize_t rax_53;\n            char* rax_68;\n            void* rcx_13;\n            char* rbx_8;\n            int32_t rbx_10;\n            int32_t rbp_6;\n            int64_t rbp_11;\n            char* rdi_14;\n            char* rdi_23;\n            char* r12_3;\n            void* r13_3;\n            char* r13_4;\n            int64_t r14_5;\n            uint64_t r15_3;\n            while (true)\n            {\n                if ((var_118 != -1 && sub_4029f0(var_150, var_140_1, 0, r15) < 0))\n                {\n                    rbx_4 = false;\n                }\n            label_401c0d:\n                int64_t rbx_5;\n                char const* const rsi_10;\n                if ((r14 != 0 && close(var_150) != 0))\n                {\n                    rsi_10 = \"failed to close %s\";\n                    rbx_5 = sub_4050a0(4, r15);\n                label_401c87:\n                    rbx_4 = false;\n                    error(0, *__errno_location(), dcgettext(nullptr, rsi_10, 5), rbx_5);\n                    goto label_401c16;\n                }\n            label_401c16:\n                var_158 = (var_158 + 8);\n                var_149 = (var_149 & rbx_4);\n                r15 = *(var_158 - 8);\n                c_1 = false;\n                z_1 = (r15 & r15) == 0;\n                if (z_1)\n                {\n                label_401ecc:\n                    if (data_60b2b8 == 0)\n                    {\n                        return (var_149 ^ 1);\n                    }\n                    if (close(0) >= 0)\n                    {\n                        return (var_149 ^ 1);\n                    }\n                    error(1, *__errno_location(), &data_4098a2);\n                }\n                else\n                {\n                label_401c32:\n                    void* const rdi_6 = var_138;\n                    int64_t rcx_7 = 2;\n                    uint64_t rsi_8 = r15;\n                label_401c3f:\n                    if (rcx_7 != 0)\n                    {\n                        char temp4_1 = *rsi_8;\n                        char temp5_1 = *rdi_6;\n                        c_1 = temp4_1 < temp5_1;\n                        z_1 = temp4_1 == temp5_1;\n                        rsi_8 = (rsi_8 + 1);\n                        rdi_6 = (rdi_6 + 1);\n                        rcx_7 = (rcx_7 - 1);\n                        if (z_1)\n                        {\n                            goto label_401c3f;\n                        }\n                    }\n                    void* rax_21;\n                    rax_21 = ((!z_1) && (!c_1));\n                    rax_21 = (rax_21 - 0);\n                    r14 = rax_21;\n                    if (r14 == 0)\n                    {\n                        data_60b2b8 = 1;\n                        var_150 = 0;\n                        r15 = dcgettext(nullptr, \"standard input\", 5);\n                    }\n                    else\n                    {\n                        int32_t rax_26 = open(r15, 0);\n                        var_150 = rax_26;\n                        if (rax_26 < 0)\n                        {\n                            rsi_10 = \"cannot open %s for reading\";\n                            rbx_5 = sub_4050a0(4, r15);\n                            goto label_401c87;\n                        }\n                    }\n                    if (data_60b2ba != 0)\n                    {\n                        char const* const rdx_8 = &data_4098a4[0x1b];\n                        if (data_60b1f0 == 0)\n                        {\n                            rdx_8 = \"\\n\";\n                        }\n                        __printf_chk(1, \"%s==> %s <==\\n\", rdx_8, r15);\n                        data_60b1f0 = 0;\n                    }\n                    if (var_14b_1 == 0)\n                    {\n                        if (var_14a_1 == 0)\n                        {\n                            rbx_4 = sub_402d30(r15, var_150, var_160_1);\n                            goto label_401c0d;\n                        }\n                        rbx_4 = sub_402bc0(r15, var_150, var_160_1);\n                        goto label_401c0d;\n                    }\n                    if (__fxstat(1, var_150, &var_c8) != 0)\n                    {\n                        rbx_4 = false;\n                        error(0, *__errno_location(), dcgettext(nullptr, \"cannot fstat %s\", 5), sub_4050a0(4, r15));\n                        goto label_401c0d;\n                    }\n                    int32_t var_b0;\n                    if ((data_60b2bb != 0 || (data_60b2bb == 0 && (var_b0 & 0xd000) != 0x8000)))\n                    {\n                        var_118 = -1;\n                        if (var_14a_1 != 0)\n                        {\n                        label_401f18:\n                            var_128_2 = var_118;\n                            char* rax_51 = sub_405910(0x2018);\n                            *(rax_51 + 0x2008) = 0;\n                            r12_3 = rax_51;\n                            *(rax_51 + 0x2000) = 0;\n                            *(rax_51 + 0x2010) = 0;\n                            var_140_2 = rax_51;\n                            var_100 = r15;\n                            var_148_2 = 0;\n                            rbx_8 = sub_405910(0x2018);\n                            var_f8 = r14;\n                        label_401f7c:\n                            rax_53 = sub_405310(var_150, rbx_8, 0x2000);\n                            r15_3 = rax_53;\n                            if ((rax_53 - 1) > -3)\n                            {\n                                r14 = var_f8;\n                                r15 = var_100;\n                                free(rbx_8);\n                                if (r15_3 == -1)\n                                {\n                                    rbx_4 = false;\n                                    error(0, *__errno_location(), dcgettext(nullptr, \"error reading %s\", 5), sub_4050a0(4, r15));\n                                    if (r12_3 == 0)\n                                    {\n                                        break;\n                                    }\n                                    rdi_23 = r12_3;\n                                    break;\n                                }\n                                int64_t rax_64 = *(var_140_2 + 0x2000);\n                                if ((rax_64 != 0 && var_140_2[(rax_64 - 1)] != data_60b2b9))\n                                {\n                                    *(var_140_2 + 0x2008) = (*(var_140_2 + 0x2008) + 1);\n                                    var_148_2 = (var_148_2 + 1);\n                                }\n                                r13_4 = r12_3;\n                                if (var_160_1 < (var_148_2 - *(r12_3 + 0x2008)))\n                                {\n                                    int64_t rbp_9 = var_148_2;\n                                    int64_t r12_4 = var_128_2;\n                                label_402130:\n                                    uint64_t rsi_23 = *(r13_4 + 0x2000);\n                                    r12_4 = (r12_4 + rsi_23);\n                                    if (rsi_23 != 0)\n                                    {\n                                        sub_402a90(r13_4, rsi_23);\n                                    }\n                                    rbp_9 = (rbp_9 - *(r13_4 + 0x2008));\n                                    r13_4 = *(r13_4 + 0x2010);\n                                    if (var_160_1 < (rbp_9 - *(r13_4 + 0x2008)))\n                                    {\n                                        goto label_402130;\n                                    }\n                                    var_148_2 = rbp_9;\n                                    var_128_2 = r12_4;\n                                }\n                                if (var_160_1 < var_148_2)\n                                {\n                                    rbx_10 = data_60b2b9;\n                                    rbp_11 = (var_148_2 - var_160_1);\n                                    rax_68 = r13_4;\n                                    rcx_13 = (*(r13_4 + 0x2000) + r13_4);\n                                    break;\n                                }\n                                goto label_4021e9;\n                            }\n                            if (var_160_1 != 0)\n                            {\n                                *(rbx_8 + 0x2000) = r15_3;\n                                r13_3 = &rbx_8[r15_3];\n                                rdi_14 = rbx_8;\n                                r14_5 = 0;\n                                *(rbx_8 + 0x2008) = 0;\n                                rbp_6 = data_60b2b9;\n                                *(rbx_8 + 0x2010) = 0;\n                                break;\n                            }\n                            var_128_2 = (var_128_2 + r15_3);\n                            sub_402a90(rbx_8, r15_3);\n                            goto label_401f7c;\n                        }\n                    label_401d24:\n                        var_140_1 = var_118;\n                        if (var_160_1 <= 0x100000)\n                        {\n                            int32_t rbp_16 = 0;\n                            int64_t rax_87 = sub_405910(var_f0);\n                            var_128 = r15;\n                            rbx_4 = var_14b_1;\n                            r13_6 = var_140_1;\n                            var_f8 = rax_87;\n                            int64_t var_d8 = rax_87;\n                            int64_t var_d0_1 = (rax_87 + var_120);\n                            var_100 = r14;\n                        label_402532:\n                            int64_t r14_7 = &var_d8[rbp_16];\n                            uint64_t rax_90 = sub_403560(var_150, r14_7, var_120);\n                            uint64_t r15_4 = rax_90;\n                            int64_t rcx_21;\n                            if (var_120 > rax_90)\n                            {\n                                int32_t* rax_91 = __errno_location();\n                                if (*rax_91 != 0)\n                                {\n                                    r15 = var_128;\n                                    r14 = var_100;\n                                    rbx_4 = false;\n                                    error(0, *rax_91, dcgettext(nullptr, \"error reading %s\", 5), sub_4050a0(4, r15));\n                                    goto label_40257b;\n                                }\n                                uint64_t rsi_37;\n                                int64_t rdi_35;\n                                if (var_160_1 < r15_4)\n                                {\n                                    if (rbx_4 != 0)\n                                    {\n                                        uint64_t temp10_1 = r15_4;\n                                        r15_4 = (r15_4 - var_160_1);\n                                        rax_92 = (r15_4 + r13_6);\n                                        if (temp10_1 != var_160_1)\n                                        {\n                                            goto label_40264c;\n                                        }\n                                    label_402624:\n                                        r15 = var_128;\n                                        r13_6 = rax_92;\n                                        r14 = var_100;\n                                        goto label_40257b;\n                                    }\n                                    rax_92 = (var_160_1 + r13_6);\n                                    rcx_21 = &var_d8[(rbp_16 ^ 1)];\n                                    if (var_160_1 != 0)\n                                    {\n                                        rbx_4 = var_14b_1;\n                                    label_4025ff:\n                                        rdi_35 = (rcx_21 + 0x2000);\n                                        rsi_37 = var_160_1;\n                                    label_40260e:\n                                        sub_402a90(rdi_35, rsi_37);\n                                        if (var_160_1 < r15_4)\n                                        {\n                                            goto label_402636;\n                                        }\n                                        goto label_40261d;\n                                    }\n                                    rax_92 = (r15_4 + r13_6);\n                                    if (r15_4 == 0)\n                                    {\n                                        goto label_40288a;\n                                    }\n                                    rbx_4 = var_14b_1;\n                                    goto label_40264c;\n                                }\n                                if (rbx_4 == 0)\n                                {\n                                    r13_6 = (r13_6 + r15_4);\n                                    int64_t rcx_25 = &var_d8[(rbp_16 ^ 1)];\n                                    if (r15_4 != 0)\n                                    {\n                                        rdi_35 = (rcx_25 + 0x2000);\n                                        rbx_4 = var_14b_1;\n                                        rax_92 = r13_6;\n                                        rsi_37 = r15_4;\n                                    }\n                                }\n                                if ((rbx_4 != 0 || (rbx_4 == 0 && r15_4 == 0)))\n                                {\n                                    r15 = var_128;\n                                    r14 = var_100;\n                                    rbx_4 = var_14b_1;\n                                    goto label_40257b;\n                                }\n                                goto label_40260e;\n                            }\n                            if (rbx_4 == 0)\n                            {\n                                rax_92 = (var_160_1 + r13_6);\n                                int32_t rsi_36 = (rbp_16 ^ 1);\n                                rcx_21 = &var_d8[rsi_36];\n                                if (var_160_1 != 0)\n                                {\n                                    goto label_4025ff;\n                                }\n                                if (var_160_1 >= r15_4)\n                                {\n                                    rbp_16 = rsi_36;\n                                    goto label_4025b3;\n                                }\n                            label_402636:\n                                r15_4 = (r15_4 - var_160_1);\n                                rax_92 = (rax_92 + r15_4);\n                                if (r15_4 != 0)\n                                {\n                                    goto label_40264c;\n                                }\n                                goto label_40261d;\n                            }\n                            if (var_160_1 >= rax_90)\n                            {\n                                rbp_16 = (rbp_16 ^ 1);\n                                rax_92 = r13_6;\n                            label_4025b3:\n                                rbx_4 = false;\n                                r13_6 = rax_92;\n                                goto label_402532;\n                            }\n                            uint64_t temp9_1 = r15_4;\n                            r15_4 = (r15_4 - var_160_1);\n                            rax_92 = (r13_6 + r15_4);\n                            if (temp9_1 != var_160_1)\n                            {\n                                rbx_4 = false;\n                            label_40264c:\n                                sub_402a90(r14_7, r15_4);\n                            label_40261d:\n                                rbp_16 = (rbp_16 ^ 1);\n                                if (rbx_4 == 0)\n                                {\n                                    goto label_4025b3;\n                                }\n                                goto label_402624;\n                            }\n                            rbp_16 = (rbp_16 ^ 1);\n                            goto label_4025b3;\n                        }\n                        int64_t var_128_1 = 0;\n                        int64_t* r12_2 = nullptr;\n                        int64_t rbp_2 = 0;\n                        var_f8 = r14;\n                        uint64_t r13_2 = 0;\n                        var_100 = r15;\n                        uint64_t rbx_6 = 1;\n                        bool r15_1 = false;\n                    label_401d58:\n                        int64_t rbp_3;\n                        if (rbp_2 != 0)\n                        {\n                            int64_t rax_49 = (rbp_2 + rbp_2);\n                            if (var_108 < rbp_2)\n                            {\n                                rax_49 = var_130;\n                            }\n                            rbp_3 = rax_49;\n                        }\n                        else\n                        {\n                            rbp_3 = 0x10;\n                            if (var_130 <= 0x10)\n                            {\n                                rbp_3 = var_130;\n                            }\n                        }\n                        uint64_t r14_2 = r13_2;\n                        r13_2 = rbx_6;\n                        uint64_t rbx_7 = r14_2;\n                        r12_2 = sub_405970(r12_2, (rbp_3 << 3));\n                    label_401d94:\n                        int64_t* rbp_4 = &r12_2[rbx_7];\n                        uint64_t rax_38;\n                        int32_t* rax_39;\n                        uint64_t rbp_5;\n                        bool r14_3;\n                        if (r15_1 != 0)\n                        {\n                            rax_38 = sub_403560(var_150, *rbp_4, 0x2000);\n                            rbp_5 = rax_38;\n                            if (rax_38 > 0x1fff)\n                            {\n                                var_140_1 = (var_140_1 + rax_38);\n                                r14_3 = false;\n                            label_401eaa:\n                                sub_402a90(r12_2[r13_2], rbp_5);\n                                r15_1 = var_14b_1;\n                            label_401ded:\n                                uint64_t temp1_1 = (COMBINE(0, (r13_2 + 1)) % var_130);\n                                if (r14_3 == 0)\n                                {\n                                    rbx_7 = r13_2;\n                                    if (rbp_3 == r13_2)\n                                    {\n                                        rbp_2 = rbp_3;\n                                        rbx_6 = temp1_1;\n                                        goto label_401d58;\n                                    }\n                                    r13_2 = temp1_1;\n                                    goto label_401d94;\n                                }\n                                rbx_4 = r14_3;\n                                int64_t var_148_1;\n                                var_148_1 = r15_1;\n                                r14 = var_f8;\n                                uint64_t r8_5 = rbp_5;\n                                r15 = var_100;\n                                if (r15_1 != 0)\n                                {\n                                    uint64_t rsi_32 = (0x2000 - rbp_5);\n                                    var_140_1 = (var_140_1 + var_e8);\n                                    int64_t rdi_28 = (r12_2[r13_2] + rbp_5);\n                                    if (var_e8 < rsi_32)\n                                    {\n                                        sub_402a90(rdi_28, var_e8);\n                                        rbx_4 = var_148_1;\n                                    }\n                                    else\n                                    {\n                                        void* rbp_14 = &r12_2[temp1_1];\n                                        if (rsi_32 != 0)\n                                        {\n                                            var_100 = r8_5;\n                                            sub_402a90(rdi_28, rsi_32);\n                                            rbx_4 = var_148_1;\n                                            r8_5 = var_100;\n                                        }\n                                        if ((rsi_32 == 0 || (rsi_32 != 0 && var_e0 != r8_5)))\n                                        {\n                                            sub_402a90(*rbp_14, (r8_5 - var_e0));\n                                            rbx_4 = var_148_1;\n                                        }\n                                    }\n                                }\n                                else if (var_110 == r13_2)\n                                {\n                                    uint64_t rsi_40 = (rbp_5 - var_e0);\n                                    var_140_1 = (var_140_1 + rsi_40);\n                                    if (rsi_40 != 0)\n                                    {\n                                        sub_402a90(r12_2[temp1_1], rsi_40);\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                rax_39 = __errno_location();\n                                if (*rax_39 == 0)\n                                {\n                                    r14_3 = r15_1;\n                                label_401dd3:\n                                    var_140_1 = (var_140_1 + rbp_5);\n                                    r15_1 = var_14b_1;\n                                    if (rbp_5 != 0)\n                                    {\n                                        goto label_401eaa;\n                                    }\n                                    goto label_401ded;\n                                }\n                            }\n                        }\n                        else\n                        {\n                            r14_3 = false;\n                            int64_t rax_44 = sub_405910(0x2000);\n                            *rbp_4 = rax_44;\n                            var_128_1 = (rbx_7 + 1);\n                            uint64_t rax_45 = sub_403560(var_150, rax_44, 0x2000);\n                            rbp_5 = rax_45;\n                            if (rax_45 <= 0x1fff)\n                            {\n                                rax_39 = __errno_location();\n                                if (*rax_39 == 0)\n                                {\n                                    r14_3 = var_14b_1;\n                                }\n                            }\n                            if (((rax_45 <= 0x1fff && *rax_39 == 0) || rax_45 > 0x1fff))\n                            {\n                                if (var_110 != rbx_7)\n                                {\n                                    goto label_401ded;\n                                }\n                                goto label_401dd3;\n                            }\n                        }\n                        if ((r15_1 == 0 || (r15_1 != 0 && rax_38 <= 0x1fff)))\n                        {\n                            r15 = var_100;\n                            r14 = var_f8;\n                            rbx_4 = false;\n                            error(0, *rax_39, dcgettext(nullptr, \"error reading %s\", 5), sub_4050a0(4, r15));\n                        }\n                        int64_t* r13_5 = r12_2;\n                        void* rbp_15 = &r12_2[var_128_1];\n                    label_4024aa:\n                        if (r13_5 != rbp_15)\n                        {\n                            int64_t rdi_29 = *r13_5;\n                            r13_5 = &r13_5[1];\n                            free(rdi_29);\n                            goto label_4024aa;\n                        }\n                        free(r12_2);\n                        continue;\n                    }\n                }\n                int64_t rax_78 = sub_4029f0(var_150, 0, 1, r15);\n                var_118 = rax_78;\n                if (rax_78 < 0)\n                {\n                    goto label_402234;\n                }\n                rbx_4 = data_60b2bb;\n                int64_t var_98;\n                int64_t var_90;\n                if (var_14a_1 == 0)\n                {\n                    if (rbx_4 == 0)\n                    {\n                        int64_t rax_82 = var_90;\n                        if ((rax_82 - 1) > 0x1fffffffffffffff)\n                        {\n                            rax_82 = 0x200;\n                        }\n                        if (var_98 > rax_82)\n                        {\n                            int64_t r8_4 = (var_98 - var_118);\n                            if ((var_98 - var_118) < 0)\n                            {\n                                r8_4 = 0;\n                            }\n                            if (var_160_1 < r8_4)\n                            {\n                                int32_t rax_83 = sub_402b10(var_150, (r8_4 - var_160_1));\n                                if (rax_83 != 0)\n                                {\n                                    sub_402e00(rax_83, r15);\n                                    goto label_401c0d;\n                                }\n                            }\n                            rbx_4 = var_14b_1;\n                            goto label_401c0d;\n                        }\n                    }\n                    goto label_401d24;\n                }\n                if (rbx_4 == 0)\n                {\n                    int64_t rax_79 = var_90;\n                    if ((rax_79 - 1) > 0x1fffffffffffffff)\n                    {\n                        rax_79 = 0x200;\n                    }\n                    if (rax_79 < var_98)\n                    {\n                        char rbx_13 = 1;\n                        if (var_118 < var_98)\n                        {\n                            rbx_13 = sub_402e80(r15, var_150, var_160_1, var_118, var_98);\n                        }\n                        rbx_4 = (rbx_13 & 1);\n                        goto label_401c0d;\n                    }\n                }\n                goto label_401f18;\n            }\n            if ((!(((rax_53 - 1) > -3 && r15_3 == -1) && r12_3 == 0)))\n            {\n                if ((((rax_53 - 1) > -3 && r15_3 == -1) && r12_3 != 0))\n                {\n                    goto label_4021f8;\n                }\n                if (((rax_53 - 1) <= -3 && var_160_1 != 0))\n                {\n                label_401fe6:\n                    char* rax_55 = sub_406f30(rdi_14, rbp_6, (r13_3 - rdi_14));\n                    int64_t rdx_16 = (r14_5 + 1);\n                    if (rax_55 != 0)\n                    {\n                        *(rbx_8 + 0x2008) = rdx_16;\n                        rdi_14 = &rax_55[1];\n                        r14_5 = rdx_16;\n                        goto label_401fe6;\n                    }\n                    var_148_2 = (var_148_2 + r14_5);\n                    void* rdi_15 = *(var_140_2 + 0x2000);\n                    if ((r15_3 + rdi_15) <= 0x1fff)\n                    {\n                        memcpy((rdi_15 + var_140_2), rbx_8, r15_3);\n                        *(var_140_2 + 0x2000) = (*(var_140_2 + 0x2000) + *(rbx_8 + 0x2000));\n                        *(var_140_2 + 0x2008) = (*(var_140_2 + 0x2008) + *(rbx_8 + 0x2008));\n                        goto label_401f7c;\n                    }\n                    *(var_140_2 + 0x2010) = rbx_8;\n                    if (var_160_1 >= (var_148_2 - *(r12_3 + 0x2008)))\n                    {\n                        var_140_2 = rbx_8;\n                        rbx_8 = sub_405910(0x2018);\n                        goto label_401f7c;\n                    }\n                    uint64_t rsi_20 = *(r12_3 + 0x2000);\n                    var_128_2 = (var_128_2 + rsi_20);\n                    if (rsi_20 != 0)\n                    {\n                        sub_402a90(r12_3, rsi_20);\n                    }\n                    var_140_2 = rbx_8;\n                    rbx_8 = r12_3;\n                    var_148_2 = (var_148_2 - *(r12_3 + 0x2008));\n                    r12_3 = *(r12_3 + 0x2010);\n                    goto label_401f7c;\n                }\n            label_4021b0:\n                rax_68 = sub_406f30(rax_68, rbx_10, (rcx_13 - rax_68));\n                if (rax_68 != 0)\n                {\n                    rax_68 = &rax_68[1];\n                    *(r13_4 + 0x2008) = (*(r13_4 + 0x2008) + 1);\n                    int64_t temp11_1 = rbp_11;\n                    rbp_11 = (rbp_11 - 1);\n                    if (temp11_1 != 1)\n                    {\n                        goto label_4021b0;\n                    }\n                }\n                uint64_t rax_69 = (rax_68 - r13_4);\n                var_128_2 = (var_128_2 + rax_69);\n                if (rax_69 != 0)\n                {\n                    sub_402a90(r13_4, rax_69);\n                }\n            label_4021e9:\n                rbx_4 = var_14b_1;\n                rdi_23 = r12_3;\n            label_4021f8:\n                char* rbp_12 = *(rdi_23 + 0x2010);\n                free(rdi_23);\n                rdi_23 = rbp_12;\n                if (rbp_12 != 0)\n                {\n                    goto label_4021f8;\n                }\n            }\n            if (var_118 == -1)\n            {\n                goto label_401c0d;\n            }\n            if (sub_4029f0(var_150, var_128_2, 0, r15) >= 0)\n            {\n                goto label_401c0d;\n            }\n        label_402234:\n            rbx_4 = false;\n            goto label_401c0d;\n        }\n        int64_t rax_19 = data_60b27c;\n        void* rax_20;\n        uint64_t r12_1;\n        if (rax_19 >= r12)\n        {\n            rax_20 = &data_408190;\n            r12_1 = &data_4098a2;\n            var_138 = &data_4098a2;\n        }\n        else\n        {\n            rax_20 = &rbp[rax_19];\n            r12_1 = *rax_20;\n            if (r12_1 == 0)\n            {\n                var_149 = 1;\n                goto label_401ecc;\n            }\n            var_138 = &data_4098a2;\n        }\n        r15 = r12_1;\n        var_158 = (rax_20 + 8);\n        var_149 = 1;\n        uint64_t rbx_2 = (var_160_1 & 0x1fff);\n        var_e0 = rbx_2;\n        var_e8 = (0x2000 - rbx_2);\n        var_120 = (var_160_1 + 0x2000);\n        uint64_t rdx_7 = ((var_160_1 + (0x2000 - rbx_2)) >> 0xd);\n        var_f0 = ((var_160_1 + 0x2000) + (var_160_1 + 0x2000));\n        var_110 = rdx_7;\n        var_130 = (rdx_7 + 1);\n        c_1 = /* c_1 = unimplemented  {shr rsi, 0x1} */;\n        z_1 = ((rdx_7 + 1) >> 1) == 0;\n        var_108 = ((rdx_7 + 1) >> 1);\n        goto label_401c32;\n    }\n    if ((r14_1 - 0x30) > 9)\n    {\n        goto label_4018f8;\n    }\n    rax_80 = dcgettext(nullptr, \"invalid trailing option -- %c\", 5);\n    rcx_17 = r14_1;\n    goto label_402383;\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x4028b0",
            "funcEndAddr": "0x4028da",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4028db",
            "funcStartAddr": "0x4028db",
            "funcEndAddr": "0x4028fa",
            "decompiledFuncCode": "void sub_4028db()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_4028fa",
            "funcStartAddr": "0x4028fa",
            "funcEndAddr": "0x402931",
            "decompiledFuncCode": "int64_t sub_4028fa()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_402931",
            "funcStartAddr": "0x402931",
            "funcEndAddr": "0x402988",
            "decompiledFuncCode": "void sub_402931()\n{\n    if (data_60b2a8 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_60b2b0;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_60b2b0 = (rax_1 + 1);\n        *(0x60ae40 + ((rax_1 + 1) << 3))();\n    }\n    sub_4028db();\n    data_60b2a8 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_402988",
            "funcStartAddr": "0x402988",
            "funcEndAddr": "0x40298d",
            "decompiledFuncCode": "int64_t j_sub_4028fa()\n{\n    /* tailcall */\n    return sub_4028fa();\n}\n\n"
        },
        {
            "funcName": "sub_402990",
            "funcStartAddr": "0x402990",
            "funcEndAddr": "0x4029e1",
            "decompiledFuncCode": "int64_t sub_402990(char arg1, char* arg2)\n{\n    char* r8;\n    if (arg1 == 0)\n    {\n        r8 = dcgettext(nullptr, \"invalid number of bytes\", 5);\n    }\n    else\n    {\n        r8 = dcgettext(nullptr, \"invalid number of lines\", 5);\n    }\n    /* tailcall */\n    return sub_405c70(arg2, 0, -1, \"bkKmMGTPEZY0\", r8, 0);\n}\n\n"
        },
        {
            "funcName": "sub_4029f0",
            "funcStartAddr": "0x4029f0",
            "funcEndAddr": "0x402a86",
            "decompiledFuncCode": "off64_t sub_4029f0(int32_t arg1, int64_t arg2, int32_t arg3, uint64_t arg4)\n{\n    off64_t rax = lseek(arg1, arg2, arg3);\n    if (rax >= 0)\n    {\n        return rax;\n    }\n    void var_48;\n    void* rax_2 = sub_4035e0(arg2, &var_48);\n    char* rax_3 = sub_405170(0, 3, arg4);\n    char const* const rsi_1 = \"%s: cannot seek to offset %s\";\n    if (arg3 != 0)\n    {\n        rsi_1 = \"%s: cannot seek to relative offs\u2026\";\n    }\n    error(0, *__errno_location(), dcgettext(nullptr, rsi_1, 5), rax_3, rax_2);\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_402a90",
            "funcStartAddr": "0x402a90",
            "funcEndAddr": "0x402b10",
            "decompiledFuncCode": "uint64_t sub_402a90(int64_t arg1, uint64_t arg2)\n{\n    uint64_t rax = fwrite_unlocked(arg1, 1, arg2, stdout);\n    if (arg2 > rax)\n    {\n        clearerr_unlocked(stdout);\n        uint64_t rsi_1;\n        int32_t rdi_1;\n        rsi_1 = error(1, *__errno_location(), dcgettext(nullptr, \"error writing %s\", 5), sub_4050a0(4, \"standard output\"));\n        /* tailcall */\n        return sub_402b10(rdi_1, rsi_1);\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_402b10",
            "funcStartAddr": "0x402b10",
            "funcEndAddr": "0x402bb4",
            "decompiledFuncCode": "int64_t sub_402b10(int32_t arg1, uint64_t arg2)\n{\n    if (arg2 == 0)\n    {\n        return 0;\n    }\n    uint64_t rbx = arg2;\n    do\n    {\n        uint64_t rdx_1 = 0x2000;\n        void var_2018;\n        void* rsi_1 = &var_2018;\n        if (rbx <= 0x2000)\n        {\n            rdx_1 = rbx;\n        }\n        ssize_t rax_1 = sub_405310(arg1, rsi_1, rdx_1);\n        if (rax_1 == -1)\n        {\n            return 1;\n        }\n        rbx = (rbx - rax_1);\n        if ((rax_1 == 0 && rbx != 0))\n        {\n            return 2;\n        }\n        if (rax_1 != 0)\n        {\n            sub_402a90(&var_2018, rax_1);\n        }\n    } while (rbx != 0);\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_402bc0",
            "funcStartAddr": "0x402bc0",
            "funcEndAddr": "0x402d21",
            "decompiledFuncCode": "int64_t sub_402bc0(int64_t arg1, int32_t arg2, int64_t arg3)\n{\n    if (arg3 == 0)\n    {\n        return 1;\n    }\n    int64_t rbp = arg3;\n    while (true)\n    {\n        void var_2028;\n        ssize_t rax_1 = sub_405310(arg2, &var_2028, 0x2000);\n        if (rax_1 == -1)\n        {\n            error(0, *__errno_location(), dcgettext(nullptr, \"error reading %s\", 5), sub_4050a0(4, arg1));\n            return 0;\n        }\n        if (rax_1 == 0)\n        {\n            break;\n        }\n        char rdx = data_60b2b9;\n        uint64_t rbx_1 = 0;\n        do\n        {\n            rbx_1 = (rbx_1 + 1);\n            void var_2029;\n            if (*(&var_2029 + rbx_1) == rdx)\n            {\n                int64_t temp0_1 = rbp;\n                rbp = (rbp - 1);\n                if (temp0_1 == 1)\n                {\n                    int64_t rbp_2 = (rbx_1 - rax_1);\n                    if (lseek(arg2, rbp_2, 1) < 0)\n                    {\n                        void var_20b8;\n                        int32_t rax_4 = __fxstat(1, arg2, &var_20b8);\n                        int32_t var_20a0;\n                        if ((rax_4 != 0 || (rax_4 == 0 && (var_20a0 & 0xf000) == 0x8000)))\n                        {\n                            sub_4029f0(arg2, rbp_2, 1, arg1);\n                        }\n                    }\n                    sub_402a90(&var_2028, rbx_1);\n                    return 1;\n                }\n            }\n        } while (rax_1 != rbx_1);\n        sub_402a90(&var_2028, rax_1);\n    }\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_402d30",
            "funcStartAddr": "0x402d30",
            "funcEndAddr": "0x402dfb",
            "decompiledFuncCode": "int64_t sub_402d30(int64_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg3 == 0)\n    {\n        return 1;\n    }\n    uint64_t r12 = 0x2000;\n    uint64_t rbp = arg3;\n    ssize_t rax_1;\n    uint64_t temp0_1;\n    do\n    {\n        void var_2028;\n        void* rsi_1 = &var_2028;\n        if (r12 > rbp)\n        {\n            r12 = rbp;\n        }\n        rax_1 = sub_405310(arg2, rsi_1, r12);\n        if (rax_1 == -1)\n        {\n            error(0, *__errno_location(), dcgettext(nullptr, \"error reading %s\", 5), sub_4050a0(4, arg1));\n            return 0;\n        }\n        if (rax_1 == 0)\n        {\n            break;\n        }\n        sub_402a90(&var_2028, rax_1);\n        temp0_1 = rbp;\n        rbp = (rbp - rax_1);\n    } while (temp0_1 != rax_1);\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_402e00",
            "funcStartAddr": "0x402e00",
            "funcEndAddr": "0x402e78",
            "decompiledFuncCode": "int64_t sub_402e00(int32_t arg1, uint64_t arg2)\n{\n    char* rbp;\n    char const* const rsi;\n    if (arg1 == 1)\n    {\n        rsi = \"error reading %s\";\n        rbp = sub_4050a0(4, arg2);\n    }\n    else\n    {\n        if (arg1 != 2)\n        {\n            abort();\n            /* no return */\n        }\n        rsi = \"%s: file has shrunk too much\";\n        rbp = sub_405170(0, 3, arg2);\n    }\n    /* tailcall */\n    return error(0, *__errno_location(), dcgettext(nullptr, rsi, 5), rbp);\n}\n\n"
        },
        {
            "funcName": "sub_402e80",
            "funcStartAddr": "0x402e80",
            "funcEndAddr": "0x4030c1",
            "decompiledFuncCode": "uint64_t sub_402e80(int64_t arg1, int32_t arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5)\n{\n    uint64_t r13 = 0x2000;\n    int64_t rdx_1 = (arg5 - arg4);\n    uint64_t rax_2 = ((rdx_1 >> 0x3f) >> 0x33);\n    uint64_t rdx_3 = ((rdx_1 + rax_2) & 0x1fff);\n    uint64_t rdx_4 = (rdx_3 - rax_2);\n    if (rdx_3 != rax_2)\n    {\n        r13 = rdx_4;\n    }\n    int64_t r8 = (arg5 - r13);\n    int64_t r12 = r8;\n    uint64_t rax_14;\n    if (sub_4029f0(arg2, r8, 0, arg1) < 0)\n    {\n    label_403000:\n        rax_14 = 0;\n    }\n    else\n    {\n        void var_2038;\n        ssize_t rax_4 = sub_405310(arg2, &var_2038, r13);\n        ssize_t r8_1 = rax_4;\n        if (rax_4 != -1)\n        {\n            int64_t r15_2;\n            if ((arg3 == 0 || (arg3 != 0 && rax_4 == 0)))\n            {\n                r15_2 = arg3;\n            }\n            var_2040;\n            if ((arg3 != 0 && rax_4 != 0))\n            {\n                r15_2 = (arg3 - *(&*var_2040[7] + r8_1) != data_60b2b9);\n            }\n            while (true)\n            {\n                if (r8_1 != 0)\n                {\n                    int32_t r13_1 = data_60b2b9;\n                    do\n                    {\n                        int64_t rax_7;\n                        if (arg3 == 0)\n                        {\n                            r8_1 = (r8_1 - 1);\n                            rax_7 = (r15_2 - 1);\n                            if (r15_2 == 0)\n                            {\n                                break;\n                            }\n                        }\n                        else\n                        {\n                            int64_t rax_8 = memrchr(&var_2038, r13_1, r8_1);\n                            if (rax_8 == 0)\n                            {\n                                break;\n                            }\n                            r8_1 = (rax_8 - &var_2038);\n                            rax_7 = (r15_2 - 1);\n                            if (r15_2 == 0)\n                            {\n                                break;\n                            }\n                        }\n                        r15_2 = rax_7;\n                    } while (r8_1 != 0);\n                    if ((arg3 == 0 && r15_2 == 0))\n                    {\n                        if (r12 > arg4)\n                        {\n                            if (sub_4029f0(arg2, arg4, 0, arg1) < 0)\n                            {\n                                goto label_403000;\n                            }\n                            int32_t rax_11 = sub_402b10(arg2, (r12 - arg4));\n                            if (rax_11 != 0)\n                            {\n                                sub_402e00(rax_11, arg1);\n                                return 0;\n                            }\n                        }\n                        uint64_t rbx_3 = (r8_1 + 1);\n                        if (r8_1 != -1)\n                        {\n                            sub_402a90(&var_2038, rbx_3);\n                        }\n                        return ((!sub_4029f0(arg2, (r12 + rbx_3), 0, arg1)) >> 0x3f);\n                    }\n                }\n                if (r12 != arg4)\n                {\n                    r12 = (r12 - 0x2000);\n                    if (sub_4029f0(arg2, r12, 0, arg1) < 0)\n                    {\n                        goto label_403000;\n                    }\n                    ssize_t rax_16 = sub_405310(arg2, &var_2038, 0x2000);\n                    r8_1 = rax_16;\n                    if (rax_16 == -1)\n                    {\n                        break;\n                    }\n                    if ((rax_16 != -1 && rax_16 != 0))\n                    {\n                        continue;\n                    }\n                }\n                return 1;\n            }\n        }\n        error(0, *__errno_location(), dcgettext(nullptr, \"error reading %s\", 5), sub_4050a0(4, arg1));\n        rax_14 = 0;\n    }\n    return rax_14;\n}\n\n"
        },
        {
            "funcName": "sub_4030d0",
            "funcStartAddr": "0x4030d0",
            "funcEndAddr": "0x403495",
            "decompiledFuncCode": "int64_t sub_4030d0(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_60b2d0;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [OPTION]... [FILE]...\\n\", 5), rbp);\n        __printf_chk(1, dcgettext(nullptr, \"Print the first %d lines of each\u2026\", 5), 0xa);\n        fputs_unlocked(dcgettext(nullptr, \"\\nWith no FILE, or when FILE is \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nMandatory arguments to long op\u2026\", 5), stdout);\n        __printf_chk(1, dcgettext(nullptr, \"  -c, --bytes=[-]NUM       print\u2026\", 5), 0xa);\n        fputs_unlocked(dcgettext(nullptr, \"  -q, --quiet, --silent    never\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -z, --zero-terminated    line \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nNUM may have a multiplier suff\u2026\", 5), stdout);\n        void* const var_88 = &data_407912;\n        void* const* rax_15 = &var_88;\n        void* const var_78_1 = \"coreutils\";\n        void* const var_70_1 = \"Multi-call invocation\";\n        void* const var_68_1 = \"sha224sum\";\n        void* const var_60_1 = \"sha2 utilities\";\n        void* const var_58_1 = \"sha256sum\";\n        void* const var_50_1 = \"sha2 utilities\";\n        void* const var_48_1 = \"sha384sum\";\n        void* const var_40_1 = \"sha2 utilities\";\n        void* const var_38_1 = \"sha512sum\";\n        void* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_15 = &rax_15[2];\n            void* const rdi_9 = *rax_15;\n            c_1 = false;\n            z_1 = (rdi_9 & rdi_9) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_11 = \"head\";\n            int64_t rcx_2 = 5;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_11;\n                char temp1_1 = *rdi_9;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_11 = (rsi_11 + 1);\n                rdi_9 = (rdi_9 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbp_1 = rax_15[1];\n        char* rax_26;\n        int32_t rax_27;\n        void* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_5;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_26 = setlocale(5, nullptr, rdx_5, rcx_5, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_26 != 0)\n            {\n                rax_27 = strncmp(rax_26, &data_407996, 3);\n                if (rax_27 != 0)\n                {\n                    rbp_1 = \"head\";\n                }\n            }\n            if ((rax_26 == 0 || (rax_26 != 0 && rax_27 == 0)))\n            {\n                rbp_1 = \"head\";\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"head\");\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_3;\n            uint64_t r8_1;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_18 = setlocale(5, nullptr, rdx_3, rcx_3, r8_1, r9_1, var_88, \"test invocation\");\n            if (rax_18 == 0)\n            {\n                goto label_403388;\n            }\n            if (strncmp(rax_18, &data_407996, 3) == 0)\n            {\n                goto label_403388;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_26 != 0) && rax_27 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), \"head\");\n        label_403388:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"head\");\n            if (rbp_1 != \"head\")\n            {\n                r12_1 = &data_4098a4[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4034a0",
            "funcStartAddr": "0x4034a0",
            "funcEndAddr": "0x4034a8",
            "decompiledFuncCode": "int64_t sub_4034a0(int64_t arg1)\n{\n    data_60b2c8 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4034b0",
            "funcStartAddr": "0x4034b0",
            "funcEndAddr": "0x4034b8",
            "decompiledFuncCode": "int64_t sub_4034b0(char arg1)\n{\n    data_60b2c0 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4034c0",
            "funcStartAddr": "0x4034c0",
            "funcEndAddr": "0x40355e",
            "decompiledFuncCode": "void sub_4034c0(void* arg1)\n{\n    int32_t rax = sub_407040(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_60b2c0 == 0 || (data_60b2c0 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_60b2c8;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_405140(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_60b2c0 != 0) && *rax_1 == 0x20)) && sub_407040(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_60b200);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_403560",
            "funcStartAddr": "0x403560",
            "funcEndAddr": "0x4035d6",
            "decompiledFuncCode": "int64_t sub_403560(int32_t arg1, int64_t arg2, uint64_t arg3)\n{\n    int64_t r12;\n    if (arg3 == 0)\n    {\n        r12 = 0;\n    }\n    else\n    {\n        int64_t rbp_1 = arg2;\n        uint64_t rbx_1 = arg3;\n        r12 = 0;\n        ssize_t rax_1;\n        uint64_t temp0_1;\n        do\n        {\n            rax_1 = sub_405310(arg1, rbp_1, rbx_1);\n            if (rax_1 == -1)\n            {\n                break;\n            }\n            if (rax_1 == 0)\n            {\n                *__errno_location() = 0;\n                return r12;\n            }\n            r12 = (r12 + rax_1);\n            rbp_1 = (rbp_1 + rax_1);\n            temp0_1 = rbx_1;\n            rbx_1 = (rbx_1 - rax_1);\n        } while (temp0_1 != rax_1);\n    }\n    return r12;\n}\n\n"
        },
        {
            "funcName": "sub_4035e0",
            "funcStartAddr": "0x4035e0",
            "funcEndAddr": "0x40367c",
            "decompiledFuncCode": "void* sub_4035e0(uint64_t arg1, void* arg2)\n{\n    void* rcx = (arg2 + 0x14);\n    *(arg2 + 0x14) = 0;\n    if (arg1 < 0)\n    {\n        void* rsi;\n        while (true)\n        {\n            rsi = (rcx - 1);\n            int64_t rax_7;\n            int64_t rdx_3;\n            rdx_3 = HIGHD((arg1 * 0x6666666666666667));\n            rax_7 = LOWD((arg1 * 0x6666666666666667));\n            int64_t rdx_5 = ((rdx_3 >> 2) - (arg1 >> 0x3f));\n            char rax_12 = ((0x30 + (rdx_5 * 0xa)) - arg1);\n            arg1 = rdx_5;\n            *(rcx - 1) = rax_12;\n            if (rdx_5 == 0)\n            {\n                break;\n            }\n            rcx = rsi;\n        }\n        *(rsi - 1) = 0x2d;\n        return (rcx - 2);\n    }\n    uint64_t rdx_2;\n    do\n    {\n        rcx = (rcx - 1);\n        int64_t rax_2;\n        int64_t rdx_1;\n        rdx_1 = HIGHD((arg1 * -0x3333333333333333));\n        rax_2 = LOWD((arg1 * -0x3333333333333333));\n        rdx_2 = (rdx_1 >> 3);\n        char rax_3 = (rdx_2 + (rdx_2 << 2));\n        *rcx = ((arg1 - (rax_3 + rax_3)) + 0x30);\n        arg1 = rdx_2;\n    } while (rdx_2 != 0);\n    return rcx;\n}\n\n"
        },
        {
            "funcName": "sub_403680",
            "funcStartAddr": "0x403680",
            "funcEndAddr": "0x4036c8",
            "decompiledFuncCode": "void* sub_403680(uint64_t arg1, void* arg2)\n{\n    void* rcx = (arg2 + 0x14);\n    *(arg2 + 0x14) = 0;\n    while (true)\n    {\n        rcx = (rcx - 1);\n        int64_t rax_2;\n        int64_t rdx_1;\n        rdx_1 = HIGHD((arg1 * -0x3333333333333333));\n        rax_2 = LOWD((arg1 * -0x3333333333333333));\n        uint64_t rdx_2 = (rdx_1 >> 3);\n        char rax_3 = (rdx_2 + (rdx_2 << 2));\n        *rcx = ((arg1 - (rax_3 + rax_3)) + 0x30);\n        if (arg1 <= 9)\n        {\n            break;\n        }\n        arg1 = rdx_2;\n    }\n    return rcx;\n}\n\n"
        },
        {
            "funcName": "sub_4036d0",
            "funcStartAddr": "0x4036d0",
            "funcEndAddr": "0x403769",
            "decompiledFuncCode": "char* sub_4036d0(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_408338;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_60b2d0 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_403770",
            "funcStartAddr": "0x403770",
            "funcEndAddr": "0x403862",
            "decompiledFuncCode": "char* sub_403770(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_407100();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_403851:\n                void* const rbx_1 = &data_40833c;\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_403851;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_403851;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_403851;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_403851;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_403851;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_403851;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_403851;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_408345;\n            if (cond:2_1)\n            {\n                rbx = &data_408342;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_403851;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_403851;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_403851;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_403851;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_403851;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_408349;\n            if (cond:1_1)\n            {\n                rbx = &data_40833e;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_403870",
            "funcStartAddr": "0x401780",
            "funcEndAddr": "0x404a91",
            "decompiledFuncCode": "int64_t sub_403870(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    char const* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n    label_403908:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_403c7c:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_403cc4;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_403870(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char const rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_403cdb;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_403e15;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_403a65;\n                            }\n                            goto label_403d50;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_403e15;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_403c40;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_403c40:\n                            if (var_c0 == 0)\n                            {\n                                goto label_403c4b;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_403aa7:\n                            if (var_5c == 0)\n                            {\n                                goto label_403ab8;\n                            }\n                        label_403c70:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_403c78;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_403eab;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_403eab:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_403eba:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_403c7c;\n                            }\n                            goto label_403c40;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_403c40;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_403c40;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_403eab;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_403a46;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_403a46:\n                            if (var_5c == 0)\n                            {\n                                goto label_403a65;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_403a65;\n                            }\n                            goto label_403eba;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_403a3d:\n                            if (r12_1 != 0)\n                            {\n                                goto label_403c4b;\n                            }\n                            goto label_403a46;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_403e70:\n                            rdx = r11_1 == 2;\n                        label_403a65:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_403b6c;\n                            }\n                            goto label_403a6f;\n                        }\n                        case 0x27:\n                        {\n                            goto label_403bed;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_403bbd;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_403c1a;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_4049ad;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_403b84;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_403a19;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_404010;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_404010;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_404960:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_403cc4:\n                            rbx_1 = sub_403870(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_403cdb:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_403e15;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_403d67;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_403e15;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_403d30:\n                                r13 = 0;\n                                goto label_403aeb;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_403ab8:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_403aeb:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_403af5;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_403af5:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_403afd;\n                            }\n                            case 9:\n                            {\n                                goto label_403ce0;\n                            }\n                            case 0xa:\n                            {\n                                goto label_403c58;\n                            }\n                            case 0xb:\n                            {\n                                goto label_403d40;\n                            }\n                            case 0xc:\n                            {\n                                goto label_403d20;\n                            }\n                            case 0xd:\n                            {\n                                goto label_403d09;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_40406a;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_403cf5;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_40404a;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_404032;\n                            }\n                            case 0x27:\n                            {\n                                goto label_403bed;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_403bbd;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_403c1a;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_403a19;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_404010:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_403e10:\n                            var_b8 = 0;\n                        label_403e15:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_403e64:\n                                if (rdx == 0)\n                                {\n                                    goto label_403e70;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_404361:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_403b84;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_403c7c;\n                                }\n                                r13 = var_98;\n                                goto label_403afd;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_406eb0(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_403c7c;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_404361;\n                            }\n                            goto label_403e64;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_403d50:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_403c7c;\n                                }\n                                var_b8 = 0;\n                            label_403d67:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_403db2;\n                                    }\n                                    rax_8 = r10;\n                                label_403daa:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_403db2:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_403b6c;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_403df3;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_403daa;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_403b6c;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_403e10;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_403d25;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_403c5d;\n                            }\n                            case 9:\n                            {\n                            label_403ce0:\n                                rbp_3 = 0x74;\n                                goto label_403c5d;\n                            }\n                            case 0xa:\n                            {\n                            label_403c58:\n                                rbp_3 = 0x6e;\n                            label_403c5d:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_403c70;\n                                }\n                                goto label_403ab8;\n                            }\n                            case 0xb:\n                            {\n                            label_403d40:\n                                rbp_3 = 0x76;\n                                goto label_403d25;\n                            }\n                            case 0xc:\n                            {\n                            label_403d20:\n                                rbp_3 = 0x66;\n                            label_403d25:\n                                if (var_5c == 0)\n                                {\n                                    goto label_403d30;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_403c78:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_403c7c;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_403d09:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_403c40;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_40406a:\n                                rbp_3 = 0x20;\n                                goto label_404032;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_403cf5:\n                                rdx = 0;\n                            label_403c4b:\n                                r13 = 0;\n                                goto label_403a65;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_40404a:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_403a65;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_403a6f:\n                                rax_8 = 0;\n                                goto label_403a71;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_404032:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_403a71;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_403bed:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_403a65;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_4049ad;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_403b6c;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_403bbd:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_4049ad:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_403c7c;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_403b6c:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_403aa7;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_403b84;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_403a65;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_404150:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_403a65;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_404150;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_404150;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_404150;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_404150;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_404960;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_403df3:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_403b6c;\n                                }\n                            label_403a71:\n                                if (arg7 == 0)\n                                {\n                                    goto label_403b6c;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_403b6c;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_403aa7;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_403c1a:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_403c40;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_403b84:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_403afd;\n                                }\n                            label_403afd:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_403b06;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_403b06:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_403a19:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_403c4b;\n                                }\n                                goto label_403a3d;\n                            }\n                        }\n                    }\n                }\n            }\n        label_4040f6:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"'\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_403908;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"'\";\n                goto label_403908;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"'\";\n            goto label_403908;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40833c;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40833c;\n            }\n            goto label_403908;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_40833c;\n            goto label_403908;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_403908;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_403770(&data_40834d, r13);\n                arg9 = sub_403770(\"'\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_403908;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_4040f6;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n        goto label_403908;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_404aa0",
            "funcStartAddr": "0x401785",
            "funcEndAddr": "0x404c3e",
            "decompiledFuncCode": "char* sub_404aa0(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_60b258;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_60b270 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_405b60();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x60b260)\n        {\n            int64_t rax_9 = sub_405970(0, rsi_1);\n            int128_t zmm0 = data_60b260;\n            rbx = rax_9;\n            data_60b258 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_405970(rbx, rsi_1);\n            data_60b258 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_60b270;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_60b270 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_403870(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        size_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x60b2e0)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_405910(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_403870(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_404c40",
            "funcStartAddr": "0x404c40",
            "funcEndAddr": "0x404c74",
            "decompiledFuncCode": "int64_t sub_404c40(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x60b3e0;\n    }\n    int64_t rax_1 = sub_405b10(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_404c80",
            "funcStartAddr": "0x404c80",
            "funcEndAddr": "0x404c8f",
            "decompiledFuncCode": "uint64_t sub_404c80(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60b3e0;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_404c90",
            "funcStartAddr": "0x404c90",
            "funcEndAddr": "0x404c9f",
            "decompiledFuncCode": "void sub_404c90(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60b3e0;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_404ca0",
            "funcStartAddr": "0x404ca0",
            "funcEndAddr": "0x404cd3",
            "decompiledFuncCode": "uint64_t sub_404ca0(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x60b3e0;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_404ce0",
            "funcStartAddr": "0x404ce0",
            "funcEndAddr": "0x404cf3",
            "decompiledFuncCode": "uint64_t sub_404ce0(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60b3e0;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404d00",
            "funcStartAddr": "0x404d00",
            "funcEndAddr": "0x404d2b",
            "decompiledFuncCode": "void sub_404d00(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60b3e0;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x60b3e0;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404d30",
            "funcStartAddr": "0x404d30",
            "funcEndAddr": "0x404da2",
            "decompiledFuncCode": "int64_t sub_404d30(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_60b3e0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_403870(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_404db0",
            "funcStartAddr": "0x404db0",
            "funcEndAddr": "0x404e91",
            "decompiledFuncCode": "char* sub_404db0(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_60b3e0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_403870(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_405910((rax_2 + 1));\n    sub_403870(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_404ea0",
            "funcStartAddr": "0x404ea0",
            "funcEndAddr": "0x404eaa",
            "decompiledFuncCode": "int64_t sub_404ea0(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_404db0(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_404eb0",
            "funcStartAddr": "0x404eb0",
            "funcEndAddr": "0x404f45",
            "decompiledFuncCode": "uint64_t sub_404eb0()\n{\n    uint64_t rax_2 = data_60b270;\n    int64_t r12 = data_60b258;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x60b2e0)\n    {\n        rax_2 = free(rdi_2);\n        *data_60b260 = 0x100;\n        *(data_60b260 + 8) = 0x60b2e0;\n    }\n    if (r12 != 0x60b260)\n    {\n        rax_2 = free(r12);\n        data_60b258 = 0x60b260;\n    }\n    data_60b270 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_404f50",
            "funcStartAddr": "0x404f50",
            "funcEndAddr": "0x404f61",
            "decompiledFuncCode": "int64_t sub_404f50(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_404aa0(arg1, arg2, -1, &data_60b3e0);\n}\n\n"
        },
        {
            "funcName": "sub_404f70",
            "funcStartAddr": "0x404f70",
            "funcEndAddr": "0x404f7a",
            "decompiledFuncCode": "int64_t sub_404f70(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_404aa0(arg1, arg2, arg3, &data_60b3e0);\n}\n\n"
        },
        {
            "funcName": "sub_404f80",
            "funcStartAddr": "0x404f80",
            "funcEndAddr": "0x404f96",
            "decompiledFuncCode": "int64_t sub_404f80(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_404aa0(0, arg1, -1, &data_60b3e0);\n}\n\n"
        },
        {
            "funcName": "sub_404fa0",
            "funcStartAddr": "0x404fa0",
            "funcEndAddr": "0x404fb2",
            "decompiledFuncCode": "int64_t sub_404fa0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_404aa0(0, arg1, arg2, &data_60b3e0);\n}\n\n"
        },
        {
            "funcName": "sub_404fc0",
            "funcStartAddr": "0x40178a",
            "funcEndAddr": "0x405028",
            "decompiledFuncCode": "char* sub_404fc0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_404aa0(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_405030",
            "funcStartAddr": "0x40178f",
            "funcEndAddr": "0x405094",
            "decompiledFuncCode": "char* sub_405030(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_404aa0(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_4050a0",
            "funcStartAddr": "0x4050a0",
            "funcEndAddr": "0x4050ac",
            "decompiledFuncCode": "int64_t sub_4050a0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_404fc0(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4050b0",
            "funcStartAddr": "0x4050b0",
            "funcEndAddr": "0x4050bf",
            "decompiledFuncCode": "int64_t sub_4050b0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_405030(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_4050c0",
            "funcStartAddr": "0x4050c0",
            "funcEndAddr": "0x405130",
            "decompiledFuncCode": "char* sub_4050c0(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_60b410;\n    int128_t var_48 = data_60b3e0;\n    int128_t var_38 = data_60b3f0;\n    int128_t var_28 = data_60b400;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_404aa0(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_405130",
            "funcStartAddr": "0x405130",
            "funcEndAddr": "0x40513d",
            "decompiledFuncCode": "int64_t sub_405130(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_4050c0(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405140",
            "funcStartAddr": "0x405140",
            "funcEndAddr": "0x405151",
            "decompiledFuncCode": "int64_t sub_405140(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_4050c0(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_405160",
            "funcStartAddr": "0x405160",
            "funcEndAddr": "0x40516a",
            "decompiledFuncCode": "int64_t sub_405160(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4050c0(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_405170",
            "funcStartAddr": "0x401794",
            "funcEndAddr": "0x4051de",
            "decompiledFuncCode": "char* sub_405170(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_404aa0(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_4051e0",
            "funcStartAddr": "0x4051e0",
            "funcEndAddr": "0x40524c",
            "decompiledFuncCode": "char* sub_4051e0(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_60b3e0;\n    int128_t var_38 = data_60b3f0;\n    int128_t var_28 = data_60b400;\n    int64_t var_18 = data_60b410;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_404aa0(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4052f0",
            "funcStartAddr": "0x4052f0",
            "funcEndAddr": "0x405306",
            "decompiledFuncCode": "int64_t sub_4052f0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_404aa0(0, arg1, -1, &data_60b220);\n}\n\n"
        },
        {
            "funcName": "sub_405310",
            "funcStartAddr": "0x405310",
            "funcEndAddr": "0x40536e",
            "decompiledFuncCode": "ssize_t sub_405310(int32_t arg1, int64_t arg2, uint64_t arg3)\n{\n    uint64_t rbx = arg3;\n    ssize_t rax_1;\n    while (true)\n    {\n        rax_1 = read(arg1, arg2, rbx);\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        int32_t rax_3 = *__errno_location();\n        if (rax_3 != 4)\n        {\n            if (rbx <= 0x7fffe000)\n            {\n                break;\n            }\n            if (rax_3 != 0x16)\n            {\n                break;\n            }\n            rbx = 0x7fffe000;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_405370",
            "funcStartAddr": "0x401799",
            "funcEndAddr": "0x40574d",
            "decompiledFuncCode": "int64_t sub_405370(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_40908b, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_405750",
            "funcStartAddr": "0x405750",
            "funcEndAddr": "0x405770",
            "decompiledFuncCode": "int64_t sub_405750(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_405370(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_405770",
            "funcStartAddr": "0x405770",
            "funcEndAddr": "0x4057d0",
            "decompiledFuncCode": "int64_t sub_405770(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_405370(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_4057d0",
            "funcStartAddr": "0x4057d0",
            "funcEndAddr": "0x40588c",
            "decompiledFuncCode": "int64_t sub_4057d0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_405370(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_405890",
            "funcStartAddr": "0x405890",
            "funcEndAddr": "0x405904",
            "decompiledFuncCode": "int64_t sub_405890()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_405910",
            "funcStartAddr": "0x405910",
            "funcEndAddr": "0x40592a",
            "decompiledFuncCode": "int64_t sub_405910(size_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_405b60();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405970",
            "funcStartAddr": "0x405970",
            "funcEndAddr": "0x4059a6",
            "decompiledFuncCode": "int64_t sub_405970(int64_t arg1, size_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_405b60();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405aba",
            "funcStartAddr": "0x405aba",
            "funcEndAddr": "0x405ac0",
            "decompiledFuncCode": "int64_t sub_405aba() __noreturn\n{\n    sub_405b60();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_405ac0",
            "funcStartAddr": "0x405ac0",
            "funcEndAddr": "0x405ad7",
            "decompiledFuncCode": "int64_t sub_405ac0(size_t arg1)\n{\n    /* tailcall */\n    return memset(sub_405910(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_405ae0",
            "funcStartAddr": "0x405ae0",
            "funcEndAddr": "0x405b0e",
            "decompiledFuncCode": "int64_t sub_405ae0(size_t arg1, size_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_405b60();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_405b10",
            "funcStartAddr": "0x405b10",
            "funcEndAddr": "0x405b38",
            "decompiledFuncCode": "int64_t sub_405b10(int64_t arg1, size_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_405910(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405b40",
            "funcStartAddr": "0x405b40",
            "funcEndAddr": "0x405b53",
            "decompiledFuncCode": "int64_t sub_405b40(char* arg1)\n{\n    /* tailcall */\n    return sub_405b10(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_405b60",
            "funcStartAddr": "0x405b60",
            "funcEndAddr": "0x405b91",
            "decompiledFuncCode": "int64_t sub_405b60() __noreturn\n{\n    error(data_60b200, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_405ba0",
            "funcStartAddr": "0x405ba0",
            "funcEndAddr": "0x405c70",
            "decompiledFuncCode": "int64_t sub_405ba0(char* arg1, int32_t arg2, int64_t arg3, int64_t arg4, \n    char* arg5, int64_t arg6, int32_t arg7)\n{\n    int32_t rbx = arg7;\n    int64_t var_40;\n    int32_t rax = sub_405ca0(arg1, nullptr, arg2, &var_40, arg5);\n    int64_t rbp;\n    int32_t* r14_1;\n    if (rax == 0)\n    {\n        rbp = var_40;\n        if ((rbp < arg3 || (rbp >= arg3 && rbp > arg4)))\n        {\n            int32_t* rax_1 = __errno_location();\n            r14_1 = rax_1;\n            *r14_1 = (((rax_1 - rax_1) & 0xffffffd7) + 0x4b);\n        }\n    }\n    else\n    {\n        int32_t* rax_8 = __errno_location();\n        r14_1 = rax_8;\n        if (rax == 1)\n        {\n            *rax_8 = 0x4b;\n        }\n        else if (rax == 3)\n        {\n            *rax_8 = 0;\n        }\n    }\n    if (((rax == 0 && (rbp < arg3 || (rbp >= arg3 && rbp > arg4))) || rax != 0))\n    {\n        int64_t rax_5 = sub_4052f0(arg1);\n        uint64_t rsi = *r14_1;\n        if (rsi == 0x16)\n        {\n            rsi = 0;\n        }\n        if (rbx == 0)\n        {\n            rbx = 1;\n        }\n        error(rbx, rsi, \"%s: %s\", arg6, rax_5);\n        rbp = var_40;\n    }\n    return rbp;\n}\n\n"
        },
        {
            "funcName": "sub_405c70",
            "funcStartAddr": "0x405c70",
            "funcEndAddr": "0x405c91",
            "decompiledFuncCode": "int64_t sub_405c70(char* arg1, int64_t arg2, int64_t arg3, char* arg4, \n    int64_t arg5, int32_t arg6)\n{\n    return sub_405ba0(arg1, 0xa, arg2, arg3, arg4, arg5, arg6);\n}\n\n"
        },
        {
            "funcName": "sub_405ca0",
            "funcStartAddr": "0x405ca0",
            "funcEndAddr": "0x4060d4",
            "decompiledFuncCode": "uint64_t sub_405ca0(char* arg1, int64_t* arg2, int32_t arg3, uint64_t* arg4, \n    char* arg5)\n{\n    if (arg3 > 0x24)\n    {\n        __assert_fail(\"0 <= strtol_base && strtol_base \u2026\", \"lib/xstrtol.c\", 0x60, \"xstrtoumax\");\n        /* no return */\n    }\n    int64_t* r15 = arg2;\n    void var_40;\n    if (arg2 == 0)\n    {\n        r15 = &var_40;\n    }\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char rbx = *arg1;\n    uint16_t* rsi = *__ctype_b_loc();\n    char* rax_2 = arg1;\n    while ((*(&rsi[rbx] + 1) & 0x20) != 0)\n    {\n        rax_2 = &rax_2[1];\n        rbx = *rax_2;\n    }\n    int32_t rbp_1;\n    if (rbx == 0x2d)\n    {\n    label_405d6a:\n        rbp_1 = 4;\n    }\n    else\n    {\n        char* r8 = *r15;\n        uint64_t rbx_1 = __strtoul_internal(arg1, r15, arg3, 0);\n        int32_t var_58;\n        void* r8_1;\n        uint32_t r12_1;\n        if (r8 == arg1)\n        {\n            var_58 = r8;\n            if (arg5 == 0)\n            {\n                goto label_405d6a;\n            }\n            r12_1 = *arg1;\n            if (r12_1 == 0)\n            {\n                goto label_405d6a;\n            }\n            rbp_1 = 0;\n            rbx_1 = 1;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) == 0)\n            {\n                goto label_405d6a;\n            }\n        label_405da7:\n            uint64_t rdx_1 = (r12_1 - 0x45);\n            int64_t rdx_3;\n            int32_t rsi_3;\n            if (rdx_1 <= 0x2f)\n            {\n                var_58 = rdx_1;\n                if ((!(TEST_BITQ(0x814400308945, rdx_1))))\n                {\n                    goto label_405e10;\n                }\n                if (strchr(arg5, 0x30) == 0)\n                {\n                    goto label_405e10;\n                }\n                char rax_8 = *(r8_1 + 1);\n                if (rax_8 == 0x44)\n                {\n                label_406038:\n                    rsi_3 = 2;\n                    rdx_3 = 0x3e8;\n                    goto label_405e1a;\n                }\n                if (rax_8 == 0x69)\n                {\n                    rdx_3 = 0x400;\n                    int32_t rsi_6;\n                    rsi_6 = *(r8_1 + 2) == 0x42;\n                    rsi_3 = ((rsi_6 + rsi_6) + 1);\n                    goto label_405e1a;\n                }\n                uint64_t rdx_2 = var_58;\n                if (rax_8 == 0x42)\n                {\n                    goto label_406038;\n                }\n                int32_t r9_1;\n                switch (rdx_2)\n                {\n                    case 0:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_405fbb:\n                        int64_t rcx_6 = rdx_3;\n                        int32_t rdi_8 = 6;\n                        r9_1 = 0;\n                        int32_t temp15_1;\n                        do\n                        {\n                            uint64_t rax_28;\n                            int64_t rdx_11;\n                            rdx_11 = HIGHD((rbx_1 * rcx_6));\n                            rax_28 = LOWD((rbx_1 * rcx_6));\n                            bool o_8 = ((rbx_1 * rcx_6) >> 0x40) != 0;\n                            rbx_1 = rax_28;\n                            if (o_8)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp15_1 = rdi_8;\n                            rdi_8 = (rdi_8 - 1);\n                        } while (temp15_1 != 1);\n                        goto label_405f14;\n                    }\n                    case 1:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 7:\n                    case 9:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                    case 0x23:\n                    case 0x24:\n                    case 0x25:\n                    case 0x27:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    {\n                        goto label_405eb5;\n                    }\n                    case 2:\n                    case 0x22:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_405ff3:\n                        int64_t rcx_7 = rdx_3;\n                        int64_t rax_30;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rbx_1 * rcx_7));\n                        rax_30 = LOWD((rbx_1 * rcx_7));\n                        int64_t rax_31;\n                        if (((rbx_1 * rcx_7) >> 0x40) == 0)\n                        {\n                            int64_t rdx_13;\n                            rdx_13 = HIGHD((rax_30 * rcx_7));\n                            rax_31 = LOWD((rax_30 * rcx_7));\n                            if (((rax_30 * rcx_7) >> 0x40) == 0)\n                            {\n                                uint64_t rax_32;\n                                int64_t rdx_14;\n                                rdx_14 = HIGHD((rax_31 * rcx_7));\n                                rax_32 = LOWD((rax_31 * rcx_7));\n                                if (((rax_31 * rcx_7) >> 0x40) == 0)\n                                {\n                                    rbx_1 = rax_32;\n                                    rbp_1 = (rbp_1 | 0);\n                                }\n                            }\n                        }\n                        if (((((rbx_1 * rcx_7) >> 0x40) != 0 || (((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) != 0)) || ((((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) == 0) && ((rax_31 * rcx_7) >> 0x40) != 0)))\n                        {\n                            rbx_1 = -1;\n                            rbp_1 = (rbp_1 | 1);\n                        }\n                        goto label_405e5d;\n                    }\n                    case 6:\n                    case 0x26:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_405e7f:\n                        uint64_t rax_15;\n                        int64_t rdx_6;\n                        rdx_6 = HIGHD((rbx_1 * rdx_3));\n                        rax_15 = LOWD((rbx_1 * rdx_3));\n                        bool o_3 = ((rbx_1 * rdx_3) >> 0x40) != 0;\n                        rbx_1 = rax_15;\n                        if ((!o_3))\n                        {\n                            goto label_405e5d;\n                        }\n                        goto label_405e87;\n                    }\n                    case 8:\n                    case 0x28:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_405e3e:\n                        int64_t rcx_1 = rdx_3;\n                        int64_t rax_10;\n                        int64_t rdx_4;\n                        rdx_4 = HIGHD((rbx_1 * rcx_1));\n                        rax_10 = LOWD((rbx_1 * rcx_1));\n                        if (((rbx_1 * rcx_1) >> 0x40) == 0)\n                        {\n                            uint64_t rax_11;\n                            int64_t rdx_5;\n                            rdx_5 = HIGHD((rax_10 * rcx_1));\n                            rax_11 = LOWD((rax_10 * rcx_1));\n                            if (((rax_10 * rcx_1) >> 0x40) != 0)\n                            {\n                                goto label_405e87;\n                            }\n                            rbx_1 = rax_11;\n                            goto label_405e5d;\n                        }\n                    label_405e87:\n                        rbp_1 = 1;\n                        rbx_1 = -1;\n                        goto label_405e5d;\n                    }\n                    case 0xb:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_405f88:\n                        int64_t rcx_5 = rdx_3;\n                        int32_t rdi_7 = 5;\n                        r9_1 = 0;\n                        int32_t temp14_1;\n                        do\n                        {\n                            uint64_t rax_26;\n                            int64_t rdx_10;\n                            rdx_10 = HIGHD((rbx_1 * rcx_5));\n                            rax_26 = LOWD((rbx_1 * rcx_5));\n                            bool o_7 = ((rbx_1 * rcx_5) >> 0x40) != 0;\n                            rbx_1 = rax_26;\n                            if (o_7)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp14_1 = rdi_7;\n                            rdi_7 = (rdi_7 - 1);\n                        } while (temp14_1 != 1);\n                        goto label_405f14;\n                    }\n                    case 0xf:\n                    case 0x2f:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_405f58:\n                        int64_t rcx_4 = rdx_3;\n                        int32_t rdi_6 = 4;\n                        r9_1 = 0;\n                        int32_t temp13_1;\n                        do\n                        {\n                            uint64_t rax_24;\n                            int64_t rdx_9;\n                            rdx_9 = HIGHD((rbx_1 * rcx_4));\n                            rax_24 = LOWD((rbx_1 * rcx_4));\n                            bool o_6 = ((rbx_1 * rcx_4) >> 0x40) != 0;\n                            rbx_1 = rax_24;\n                            if (o_6)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp13_1 = rdi_6;\n                            rdi_6 = (rdi_6 - 1);\n                        } while (temp13_1 != 1);\n                        goto label_405f14;\n                    }\n                    case 0x14:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_405f26:\n                        int64_t rcx_3 = rdx_3;\n                        int32_t rdi_5 = 8;\n                        r9_1 = 0;\n                        int32_t temp12_1;\n                        do\n                        {\n                            uint64_t rax_22;\n                            int64_t rdx_8;\n                            rdx_8 = HIGHD((rbx_1 * rcx_3));\n                            rax_22 = LOWD((rbx_1 * rcx_3));\n                            bool o_5 = ((rbx_1 * rcx_3) >> 0x40) != 0;\n                            rbx_1 = rax_22;\n                            if (o_5)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp12_1 = rdi_5;\n                            rdi_5 = (rdi_5 - 1);\n                        } while (temp12_1 != 1);\n                        goto label_405f14;\n                    }\n                    case 0x15:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_405eeb:\n                        int64_t rcx_2 = rdx_3;\n                        int32_t rdi_4 = 7;\n                        r9_1 = 0;\n                        int32_t temp11_1;\n                        do\n                        {\n                            uint64_t rax_20;\n                            int64_t rdx_7;\n                            rdx_7 = HIGHD((rbx_1 * rcx_2));\n                            rax_20 = LOWD((rbx_1 * rcx_2));\n                            bool o_4 = ((rbx_1 * rcx_2) >> 0x40) != 0;\n                            rbx_1 = rax_20;\n                            if (o_4)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp11_1 = rdi_4;\n                            rdi_4 = (rdi_4 - 1);\n                        } while (temp11_1 != 1);\n                    label_405f14:\n                        rbp_1 = (rbp_1 | r9_1);\n                        goto label_405e5d;\n                    }\n                    case 0x1d:\n                    {\n                        rsi_3 = 1;\n                        break;\n                    }\n                    case 0x1e:\n                    {\n                        rsi_3 = 1;\n                        goto label_405e5d;\n                    }\n                }\n            }\n            else\n            {\n            label_405e10:\n                rsi_3 = 1;\n                rdx_3 = 0x400;\n            label_405e1a:\n                char r12_2 = (r12_1 - 0x42);\n                if (r12_2 > 0x35)\n                {\n                    goto label_405eb5;\n                }\n                switch (r12_2)\n                {\n                    case 0:\n                    {\n                        if ((rbx_1 >> 0x36) != 0)\n                        {\n                            goto label_405e87;\n                        }\n                        rbx_1 = (rbx_1 << 0xa);\n                        goto label_405e5d;\n                    }\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x2a:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x33:\n                    case 0x34:\n                    {\n                        goto label_405eb5;\n                    }\n                    case 3:\n                    {\n                        goto label_405fbb;\n                    }\n                    case 5:\n                    case 0x25:\n                    {\n                        goto label_405ff3;\n                    }\n                    case 9:\n                    case 0x29:\n                    {\n                        goto label_405e7f;\n                    }\n                    case 0xb:\n                    case 0x2b:\n                    {\n                        goto label_405e3e;\n                    }\n                    case 0xe:\n                    {\n                        goto label_405f88;\n                    }\n                    case 0x12:\n                    case 0x32:\n                    {\n                        goto label_405f58;\n                    }\n                    case 0x17:\n                    {\n                        goto label_405f26;\n                    }\n                    case 0x18:\n                    {\n                        goto label_405eeb;\n                    }\n                    case 0x21:\n                    {\n                        goto label_405e5d;\n                    }\n                    case 0x35:\n                    {\n                        if (rbx_1 < 0)\n                        {\n                            goto label_405e87;\n                        }\n                        rbx_1 = (rbx_1 + rbx_1);\n                    label_405e5d:\n                        void* r8_2 = (r8_1 + rsi_3);\n                        int32_t rax_13 = (rbp_1 | 2);\n                        *r15 = r8_2;\n                        if (*r8_2 != 0)\n                        {\n                            rbp_1 = rax_13;\n                        }\n                        goto label_405d42;\n                    }\n                }\n            }\n            if ((rbx_1 >> 0x37) != 0)\n            {\n                goto label_405e87;\n            }\n            rbx_1 = (rbx_1 << 9);\n            goto label_405e5d;\n        }\n        int32_t rax_4 = *rax;\n        if (rax_4 == 0)\n        {\n            rbp_1 = 0;\n        }\n        else\n        {\n            rbp_1 = 1;\n            if (rax_4 != 0x22)\n            {\n                goto label_405d6a;\n            }\n        }\n        if (arg5 == 0)\n        {\n        label_405d42:\n            *arg4 = rbx_1;\n        }\n        else\n        {\n            r12_1 = *r8;\n            if (r12_1 == 0)\n            {\n                goto label_405d42;\n            }\n            var_58 = r8;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) != 0)\n            {\n                goto label_405da7;\n            }\n        label_405eb5:\n            *arg4 = rbx_1;\n            rbp_1 = (rbp_1 | 2);\n        }\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_4060e0",
            "funcStartAddr": "0x4060e0",
            "funcEndAddr": "0x4061bf",
            "decompiledFuncCode": "uint64_t sub_4060e0(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_4061c0",
            "funcStartAddr": "0x4061c0",
            "funcEndAddr": "0x4067dc",
            "decompiledFuncCode": "uint64_t sub_4061c0(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_4063f0;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_406316;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_406316;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_406316:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_4063f0:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_40641e;\n                }\n                *arg5 = r12;\n            label_40641e:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_40643c;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_40643c:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_40643c;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_4063ae;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_4063ae:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_4067e0",
            "funcStartAddr": "0x4067e0",
            "funcEndAddr": "0x406da6",
            "decompiledFuncCode": "uint64_t sub_4067e0(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_406a1c;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_4068a8;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_4068a8:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_4060e0(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_4098a1;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_4060e0(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_406a1c;\n                }\n                *arg7 = rdx_2;\n            label_406a1c:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_406b20;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_4098a1;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_406b90;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_406b20;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_406b20;\n                            }\n                            goto label_406ae1;\n                        }\n                    label_406ae1:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_4061c0(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_4098a2);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_406b20:\n                            rdx = &r14_1[1];\n                        label_406961:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_406b5e;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_406b5e:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_4098c0;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_406b90:\n                                        r14_2 = sub_4061c0(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_406c4d;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_406c4d:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_406a1c;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_4068a8;\n        }\n        goto label_406961;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_406e10",
            "funcStartAddr": "0x406e10",
            "funcEndAddr": "0x406e28",
            "decompiledFuncCode": "uint64_t sub_406e10(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_406eb0",
            "funcStartAddr": "0x406eb0",
            "funcEndAddr": "0x406f2a",
            "decompiledFuncCode": "uint64_t sub_406eb0(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_4098a4[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_406eda;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_406eda:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_4070a0() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_406f30",
            "funcStartAddr": "0x406f30",
            "funcEndAddr": "0x407034",
            "decompiledFuncCode": "char* sub_406f30(char* arg1, int32_t arg2, int64_t arg3)\n{\n    char r8 = arg2;\n    if (arg3 != 0)\n    {\n        if ((arg1 & 7) != 0)\n        {\n            if (arg2 == *arg1)\n            {\n            label_407030:\n                return arg1;\n            }\n            do\n            {\n                arg1 = &arg1[1];\n                int64_t temp0_1 = arg3;\n                arg3 = (arg3 - 1);\n                if (temp0_1 == 1)\n                {\n                    return 0;\n                }\n                if ((arg1 & 7) == 0)\n                {\n                    break;\n                }\n            } while (*arg1 != r8);\n            if ((arg1 & 7) != 0)\n            {\n                goto label_407030;\n            }\n        }\n        int64_t r9_5 = ((arg2 << 8) | arg2);\n        int64_t r9_6 = (r9_5 | (r9_5 << 0x10));\n        int64_t r9_7 = (r9_6 | (r9_6 << 0x20));\n        int64_t rax_8;\n        if (arg3 > 7)\n        {\n            rax_8 = (*arg1 ^ r9_7);\n            if ((((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0)\n            {\n                int64_t rax_12;\n                do\n                {\n                    arg3 = (arg3 - 8);\n                    arg1 = &arg1[8];\n                    if (arg3 <= 7)\n                    {\n                        break;\n                    }\n                    rax_12 = (*arg1 ^ r9_7);\n                } while ((((!rax_12) & (rax_12 - 0x101010101010101)) & 0x8080808080808080) == 0);\n            }\n        }\n        if ((((arg3 <= 7 || (arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) != 0)) || (((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 <= 7) && arg3 != 0)) || ((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 > 7)))\n        {\n            if (arg2 == *arg1)\n            {\n                goto label_407030;\n            }\n            char* rcx_3 = &arg1[1];\n            void* rdi = &arg1[arg3];\n            while (true)\n            {\n                char* rax_15 = rcx_3;\n                if (rcx_3 == rdi)\n                {\n                    return 0;\n                }\n                rcx_3 = &rcx_3[1];\n                if (rcx_3[-1] == r8)\n                {\n                    return rax_15;\n                }\n            }\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_407040",
            "funcStartAddr": "0x407040",
            "funcEndAddr": "0x40709d",
            "decompiledFuncCode": "uint64_t sub_407040(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_407670(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4070a0",
            "funcStartAddr": "0x4070a0",
            "funcEndAddr": "0x4070fe",
            "decompiledFuncCode": "int64_t sub_4070a0()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_4098c4;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            void* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_407100",
            "funcStartAddr": "0x407100",
            "funcEndAddr": "0x407662",
            "decompiledFuncCode": "char* sub_407100()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_60b458;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_4098a4[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        size_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            size_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_4071fc;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_407246;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_4071fc:\n            r15 = &data_4098a4[0x1b];\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_407246:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, \"r\");\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_4072fc:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_40748b;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_407338:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_407338;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_407372:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_407372;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_4098a4[0x1b];\n                                    free(rdi_26);\n                                    sub_407670(rax_12);\n                                    goto label_407287;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_40754b:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_40754b;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_407599:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_407599;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_4072fc;\n                        }\n                        break;\n                    }\n                label_40748b:\n                    sub_407670(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_4098a4[0x1b];\n            }\n        label_407287:\n            free(rbp_3);\n        }\n        data_60b458 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_407670",
            "funcStartAddr": "0x407670",
            "funcEndAddr": "0x4076eb",
            "decompiledFuncCode": "int64_t sub_407670(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_4076f0(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_4076f0",
            "funcStartAddr": "0x4076f0",
            "funcEndAddr": "0x407730",
            "decompiledFuncCode": "int64_t sub_4076f0(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_407730(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_407730",
            "funcStartAddr": "0x407730",
            "funcEndAddr": "0x407787",
            "decompiledFuncCode": "off64_t sub_407730(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x407790",
            "funcEndAddr": "0x4077ed",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x4077f0",
            "funcEndAddr": "0x4077f1",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_407800",
            "funcStartAddr": "0x407800",
            "funcEndAddr": "0x407818",
            "decompiledFuncCode": "int64_t sub_407800(void (* arg1)(void*))\n{\n    int64_t rdx = data_60b1e8;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_407818",
            "funcStartAddr": "0x407818",
            "funcEndAddr": "0x407838",
            "decompiledFuncCode": "int64_t sub_407818(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_60ae30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}